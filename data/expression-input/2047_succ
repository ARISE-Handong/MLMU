[=, type, ;, this, ., value, =, value, ;, }, final, JSType, type, ;, final, Node, value, ;, }, private]
[., type, =, type, ;, this, ., value, =, value, ;, }, final, JSType, type, ;, final, Node, value, ;]
[;, this, ., value, =, value, ;, }, final, JSType, type, ;, final, Node, value, ;, }, private, static, final]
[=, value, ;, }, final, JSType, type, ;, final, Node, value, ;, }, private, static, final, PropertyInfo, INVALIDATED, =, new]
[., value, =, value, ;, }, final, JSType, type, ;, final, Node, value, ;, }, private, static, final, PropertyInfo, INVALIDATED]
[;, }, final, JSType, type, ;, final, Node, value, ;, }, private, static, final, PropertyInfo, INVALIDATED, =, new, PropertyInfo, (]
[;, private, final, Map, <, String, ,, PropertyInfo, >, props, =, Maps, ., newHashMap, (, ), ;, private, Set, <]
[,, null, ), ;, private, final, Map, <, String, ,, PropertyInfo, >, props, =, Maps, ., newHashMap, (, ), ;]
[), ;, private, final, Map, <, String, ,, PropertyInfo, >, props, =, Maps, ., newHashMap, (, ), ;, private, Set]
[;, private, Set, <, JSType, >, invalidatingTypes, ;, InlineProperties, (, AbstractCompiler, compiler, ), {, this, ., compiler, =, compiler, ;]
[., newHashMap, (, ), ;, private, Set, <, JSType, >, invalidatingTypes, ;, InlineProperties, (, AbstractCompiler, compiler, ), {, this, .]
[=, compiler, ;, buildInvalidatingTypeSet, (, ), ;, }, private, void, buildInvalidatingTypeSet, (, ), {, JSTypeRegistry, registry, =, compiler, ., getTypeRegistry]
[., compiler, =, compiler, ;, buildInvalidatingTypeSet, (, ), ;, }, private, void, buildInvalidatingTypeSet, (, ), {, JSTypeRegistry, registry, =, compiler]
[;, buildInvalidatingTypeSet, (, ), ;, }, private, void, buildInvalidatingTypeSet, (, ), {, JSTypeRegistry, registry, =, compiler, ., getTypeRegistry, (, )]
[;, }, private, void, buildInvalidatingTypeSet, (, ), {, JSTypeRegistry, registry, =, compiler, ., getTypeRegistry, (, ), ;, invalidatingTypes, =, Sets]
[;, invalidatingTypes, =, Sets, ., newHashSet, (, registry, ., getNativeType, (, JSTypeNative, ., ALL_TYPE, ), ,, registry, ., getNativeType, (]
[., getTypeRegistry, (, ), ;, invalidatingTypes, =, Sets, ., newHashSet, (, registry, ., getNativeType, (, JSTypeNative, ., ALL_TYPE, ), ,]
[=, Sets, ., newHashSet, (, registry, ., getNativeType, (, JSTypeNative, ., ALL_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, .]
[;, for, (, TypeMismatch, mis, :, compiler, ., getTypeValidator, (, ), ., getMismatches, (, ), ), {, addInvalidatingType, (, mis]
[., newHashSet, (, registry, ., getNativeType, (, JSTypeNative, ., ALL_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., NO_OBJECT_TYPE, )]
[,, registry, ., getNativeType, (, JSTypeNative, ., NO_OBJECT_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., NO_TYPE, ), ,, registry]
[., getNativeType, (, JSTypeNative, ., ALL_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., NO_OBJECT_TYPE, ), ,, registry, ., getNativeType]
[), ,, registry, ., getNativeType, (, JSTypeNative, ., NO_OBJECT_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., NO_TYPE, ), ,]
[., ALL_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., NO_OBJECT_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., NO_TYPE]
[,, registry, ., getNativeType, (, JSTypeNative, ., NO_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., NULL_TYPE, ), ,, registry]
[., getNativeType, (, JSTypeNative, ., NO_OBJECT_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., NO_TYPE, ), ,, registry, ., getNativeType]
[), ,, registry, ., getNativeType, (, JSTypeNative, ., NO_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., NULL_TYPE, ), ,]
[., NO_OBJECT_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., NO_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., NULL_TYPE]
[,, registry, ., getNativeType, (, JSTypeNative, ., NULL_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ,, registry]
[., getNativeType, (, JSTypeNative, ., NO_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., NULL_TYPE, ), ,, registry, ., getNativeType]
[), ,, registry, ., getNativeType, (, JSTypeNative, ., NULL_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ,]
[., NO_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., NULL_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., VOID_TYPE]
[,, registry, ., getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_FUNCTION_TYPE, ), ,, registry]
[., getNativeType, (, JSTypeNative, ., NULL_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ,, registry, ., getNativeType]
[), ,, registry, ., getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_FUNCTION_TYPE, ), ,]
[., NULL_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_FUNCTION_TYPE]
[,, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_FUNCTION_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ,, registry]
[., getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_FUNCTION_TYPE, ), ,, registry, ., getNativeType]
[), ,, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_FUNCTION_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ,]
[., VOID_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_FUNCTION_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE]
[,, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_PROTOTYPE, ), ,, registry]
[., getNativeType, (, JSTypeNative, ., FUNCTION_FUNCTION_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ,, registry, ., getNativeType]
[), ,, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_PROTOTYPE, ), ,]
[., FUNCTION_FUNCTION_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_PROTOTYPE]
[,, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_PROTOTYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., GLOBAL_THIS, ), ,, registry]
[., getNativeType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_PROTOTYPE, ), ,, registry, ., getNativeType]
[), ,, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_PROTOTYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., GLOBAL_THIS, ), ,]
[., FUNCTION_INSTANCE_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_PROTOTYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., GLOBAL_THIS]
[,, registry, ., getNativeType, (, JSTypeNative, ., GLOBAL_THIS, ), ,, registry, ., getNativeType, (, JSTypeNative, ., OBJECT_TYPE, ), ,, registry]
[., getNativeType, (, JSTypeNative, ., FUNCTION_PROTOTYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., GLOBAL_THIS, ), ,, registry, ., getNativeType]
[), ,, registry, ., getNativeType, (, JSTypeNative, ., GLOBAL_THIS, ), ,, registry, ., getNativeType, (, JSTypeNative, ., OBJECT_TYPE, ), ,]
[., FUNCTION_PROTOTYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., GLOBAL_THIS, ), ,, registry, ., getNativeType, (, JSTypeNative, ., OBJECT_TYPE]
[,, registry, ., getNativeType, (, JSTypeNative, ., OBJECT_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., OBJECT_PROTOTYPE, ), ,, registry]
[., getNativeType, (, JSTypeNative, ., GLOBAL_THIS, ), ,, registry, ., getNativeType, (, JSTypeNative, ., OBJECT_TYPE, ), ,, registry, ., getNativeType]
[), ,, registry, ., getNativeType, (, JSTypeNative, ., OBJECT_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., OBJECT_PROTOTYPE, ), ,]
[., GLOBAL_THIS, ), ,, registry, ., getNativeType, (, JSTypeNative, ., OBJECT_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., OBJECT_PROTOTYPE]
[,, registry, ., getNativeType, (, JSTypeNative, ., OBJECT_PROTOTYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., OBJECT_FUNCTION_TYPE, ), ,, registry]
[., getNativeType, (, JSTypeNative, ., OBJECT_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., OBJECT_PROTOTYPE, ), ,, registry, ., getNativeType]
[), ,, registry, ., getNativeType, (, JSTypeNative, ., OBJECT_PROTOTYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., OBJECT_FUNCTION_TYPE, ), ,]
[., OBJECT_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., OBJECT_PROTOTYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., OBJECT_FUNCTION_TYPE]
[,, registry, ., getNativeType, (, JSTypeNative, ., OBJECT_FUNCTION_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., TOP_LEVEL_PROTOTYPE, ), ,, registry]
[., getNativeType, (, JSTypeNative, ., OBJECT_PROTOTYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., OBJECT_FUNCTION_TYPE, ), ,, registry, ., getNativeType]
[), ,, registry, ., getNativeType, (, JSTypeNative, ., OBJECT_FUNCTION_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., TOP_LEVEL_PROTOTYPE, ), ,]
[., OBJECT_PROTOTYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., OBJECT_FUNCTION_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., TOP_LEVEL_PROTOTYPE]
[,, registry, ., getNativeType, (, JSTypeNative, ., TOP_LEVEL_PROTOTYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., UNKNOWN_TYPE, ), ), ;]
[., getNativeType, (, JSTypeNative, ., OBJECT_FUNCTION_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., TOP_LEVEL_PROTOTYPE, ), ,, registry, ., getNativeType]
[), ,, registry, ., getNativeType, (, JSTypeNative, ., TOP_LEVEL_PROTOTYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., UNKNOWN_TYPE, ), )]
[., OBJECT_FUNCTION_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., TOP_LEVEL_PROTOTYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., UNKNOWN_TYPE]
[,, registry, ., getNativeType, (, JSTypeNative, ., UNKNOWN_TYPE, ), ), ;, for, (, TypeMismatch, mis, :, compiler, ., getTypeValidator, (]
[., getNativeType, (, JSTypeNative, ., TOP_LEVEL_PROTOTYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., UNKNOWN_TYPE, ), ), ;, for, (]
[), ,, registry, ., getNativeType, (, JSTypeNative, ., UNKNOWN_TYPE, ), ), ;, for, (, TypeMismatch, mis, :, compiler, ., getTypeValidator]
[., TOP_LEVEL_PROTOTYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., UNKNOWN_TYPE, ), ), ;, for, (, TypeMismatch, mis, :, compiler]
[), ;, for, (, TypeMismatch, mis, :, compiler, ., getTypeValidator, (, ), ., getMismatches, (, ), ), {, addInvalidatingType, (]
[., getNativeType, (, JSTypeNative, ., UNKNOWN_TYPE, ), ), ;, for, (, TypeMismatch, mis, :, compiler, ., getTypeValidator, (, ), .]
[), ), ;, for, (, TypeMismatch, mis, :, compiler, ., getTypeValidator, (, ), ., getMismatches, (, ), ), {, addInvalidatingType]
[., UNKNOWN_TYPE, ), ), ;, for, (, TypeMismatch, mis, :, compiler, ., getTypeValidator, (, ), ., getMismatches, (, ), )]
[), {, addInvalidatingType, (, mis, ., typeA, ), ;, addInvalidatingType, (, mis, ., typeB, ), ;, }, }, private, void]
[., getMismatches, (, ), ), {, addInvalidatingType, (, mis, ., typeA, ), ;, addInvalidatingType, (, mis, ., typeB, ), ;]
[., getTypeValidator, (, ), ., getMismatches, (, ), ), {, addInvalidatingType, (, mis, ., typeA, ), ;, addInvalidatingType, (, mis]
[;, addInvalidatingType, (, mis, ., typeB, ), ;, }, }, private, void, addInvalidatingType, (, JSType, type, ), {, type, =]
[), ;, addInvalidatingType, (, mis, ., typeB, ), ;, }, }, private, void, addInvalidatingType, (, JSType, type, ), {, type]
[., typeA, ), ;, addInvalidatingType, (, mis, ., typeB, ), ;, }, }, private, void, addInvalidatingType, (, JSType, type, )]
[;, }, }, private, void, addInvalidatingType, (, JSType, type, ), {, type, =, type, ., restrictByNotNullOrUndefined, (, ), ;, if]
[), ;, }, }, private, void, addInvalidatingType, (, JSType, type, ), {, type, =, type, ., restrictByNotNullOrUndefined, (, ), ;]
[., typeB, ), ;, }, }, private, void, addInvalidatingType, (, JSType, type, ), {, type, =, type, ., restrictByNotNullOrUndefined, (]
[=, type, ., restrictByNotNullOrUndefined, (, ), ;, if, (, type, ., isUnionType, (, ), ), {, for, (, JSType, alt]
[;, if, (, type, ., isUnionType, (, ), ), {, for, (, JSType, alt, :, type, ., toMaybeUnionType, (, )]
[., restrictByNotNullOrUndefined, (, ), ;, if, (, type, ., isUnionType, (, ), ), {, for, (, JSType, alt, :, type]
[), {, for, (, JSType, alt, :, type, ., toMaybeUnionType, (, ), ., getAlternates, (, ), ), {, addInvalidatingType, (]
[., isUnionType, (, ), ), {, for, (, JSType, alt, :, type, ., toMaybeUnionType, (, ), ., getAlternates, (, )]
[), {, addInvalidatingType, (, alt, ), ;, }, }, invalidatingTypes, ., add, (, type, ), ;, ObjectType, objType, =, ObjectType]
[., getAlternates, (, ), ), {, addInvalidatingType, (, alt, ), ;, }, }, invalidatingTypes, ., add, (, type, ), ;]
[., toMaybeUnionType, (, ), ., getAlternates, (, ), ), {, addInvalidatingType, (, alt, ), ;, }, }, invalidatingTypes, ., add]
[;, }, }, invalidatingTypes, ., add, (, type, ), ;, ObjectType, objType, =, ObjectType, ., cast, (, type, ), ;]
[), ;, }, }, invalidatingTypes, ., add, (, type, ), ;, ObjectType, objType, =, ObjectType, ., cast, (, type, )]
[;, ObjectType, objType, =, ObjectType, ., cast, (, type, ), ;, if, (, objType, !=, null, &&, objType, ., isInstanceType]
[., add, (, type, ), ;, ObjectType, objType, =, ObjectType, ., cast, (, type, ), ;, if, (, objType, !=]
[), ;, ObjectType, objType, =, ObjectType, ., cast, (, type, ), ;, if, (, objType, !=, null, &&, objType, .]
[;, if, (, objType, !=, null, &&, objType, ., isInstanceType, (, ), ), {, invalidatingTypes, ., add, (, objType, .]
[., cast, (, type, ), ;, if, (, objType, !=, null, &&, objType, ., isInstanceType, (, ), ), {, invalidatingTypes]
[), ;, if, (, objType, !=, null, &&, objType, ., isInstanceType, (, ), ), {, invalidatingTypes, ., add, (, objType]
[), {, invalidatingTypes, ., add, (, objType, ., getImplicitPrototype, (, ), ), ;, }, }, private, boolean, isInvalidatingType, (, JSType]
[&&, objType, ., isInstanceType, (, ), ), {, invalidatingTypes, ., add, (, objType, ., getImplicitPrototype, (, ), ), ;, }]
[!=, null, &&, objType, ., isInstanceType, (, ), ), {, invalidatingTypes, ., add, (, objType, ., getImplicitPrototype, (, ), )]
[&&, objType, ., isInstanceType, (, ), ), {, invalidatingTypes, ., add, (, objType, ., getImplicitPrototype, (, ), ), ;, }]
[), {, invalidatingTypes, ., add, (, objType, ., getImplicitPrototype, (, ), ), ;, }, }, private, boolean, isInvalidatingType, (, JSType]
[., isInstanceType, (, ), ), {, invalidatingTypes, ., add, (, objType, ., getImplicitPrototype, (, ), ), ;, }, }, private]
[;, }, }, private, boolean, isInvalidatingType, (, JSType, type, ), {, if, (, type, ., isUnionType, (, ), ), {]
[., add, (, objType, ., getImplicitPrototype, (, ), ), ;, }, }, private, boolean, isInvalidatingType, (, JSType, type, ), {]
[), ;, }, }, private, boolean, isInvalidatingType, (, JSType, type, ), {, if, (, type, ., isUnionType, (, ), )]
[., getImplicitPrototype, (, ), ), ;, }, }, private, boolean, isInvalidatingType, (, JSType, type, ), {, if, (, type, .]
[), {, type, =, type, ., restrictByNotNullOrUndefined, (, ), ;, if, (, type, ., isUnionType, (, ), ), {, for]
[., isUnionType, (, ), ), {, type, =, type, ., restrictByNotNullOrUndefined, (, ), ;, if, (, type, ., isUnionType, (]
[=, type, ., restrictByNotNullOrUndefined, (, ), ;, if, (, type, ., isUnionType, (, ), ), {, for, (, JSType, alt]
[;, if, (, type, ., isUnionType, (, ), ), {, for, (, JSType, alt, :, type, ., toMaybeUnionType, (, )]
[., restrictByNotNullOrUndefined, (, ), ;, if, (, type, ., isUnionType, (, ), ), {, for, (, JSType, alt, :, type]
[), {, for, (, JSType, alt, :, type, ., toMaybeUnionType, (, ), ., getAlternates, (, ), ), {, if, (]
[., isUnionType, (, ), ), {, for, (, JSType, alt, :, type, ., toMaybeUnionType, (, ), ., getAlternates, (, )]
[), {, if, (, isInvalidatingType, (, alt, ), ), {, return, true, ;, }, }, return, false, ;, }, }]
[., getAlternates, (, ), ), {, if, (, isInvalidatingType, (, alt, ), ), {, return, true, ;, }, }, return]
[., toMaybeUnionType, (, ), ., getAlternates, (, ), ), {, if, (, isInvalidatingType, (, alt, ), ), {, return, true]
[), {, return, true, ;, }, }, return, false, ;, }, }, ObjectType, objType, =, ObjectType, ., cast, (, type]
[), ), {, return, true, ;, }, }, return, false, ;, }, }, ObjectType, objType, =, ObjectType, ., cast, (]
[;, }, }, return, false, ;, }, }, ObjectType, objType, =, ObjectType, ., cast, (, type, ), ;, return, objType]
[;, }, }, ObjectType, objType, =, ObjectType, ., cast, (, type, ), ;, return, objType, ==, null, ||, invalidatingTypes, .]
[;, return, objType, ==, null, ||, invalidatingTypes, ., contains, (, objType, ), ||, !, objType, ., hasReferenceName, (, ), ||]
[., cast, (, type, ), ;, return, objType, ==, null, ||, invalidatingTypes, ., contains, (, objType, ), ||, !, objType]
[), ;, return, objType, ==, null, ||, invalidatingTypes, ., contains, (, objType, ), ||, !, objType, ., hasReferenceName, (, )]
[;, }, private, JSType, getJSType, (, Node, n, ), {, JSType, jsType, =, n, ., getJSType, (, ), ;, if]
[||, objType, ., autoboxesTo, (, ), !=, null, ;, }, private, JSType, getJSType, (, Node, n, ), {, JSType, jsType]
[||, objType, ., isEnumType, (, ), ||, objType, ., autoboxesTo, (, ), !=, null, ;, }, private, JSType, getJSType, (]
[||, objType, ., isEmptyType, (, ), ||, objType, ., isEnumType, (, ), ||, objType, ., autoboxesTo, (, ), !=, null]
[||, objType, ., isUnknownType, (, ), ||, objType, ., isEmptyType, (, ), ||, objType, ., isEnumType, (, ), ||, objType]
[||, !, objType, ., hasReferenceName, (, ), ||, objType, ., isUnknownType, (, ), ||, objType, ., isEmptyType, (, ), ||]
[||, invalidatingTypes, ., contains, (, objType, ), ||, !, objType, ., hasReferenceName, (, ), ||, objType, ., isUnknownType, (, )]
[==, null, ||, invalidatingTypes, ., contains, (, objType, ), ||, !, objType, ., hasReferenceName, (, ), ||, objType, ., isUnknownType]
[||, invalidatingTypes, ., contains, (, objType, ), ||, !, objType, ., hasReferenceName, (, ), ||, objType, ., isUnknownType, (, )]
[||, !, objType, ., hasReferenceName, (, ), ||, objType, ., isUnknownType, (, ), ||, objType, ., isEmptyType, (, ), ||]
[., contains, (, objType, ), ||, !, objType, ., hasReferenceName, (, ), ||, objType, ., isUnknownType, (, ), ||, objType]
[), ||, !, objType, ., hasReferenceName, (, ), ||, objType, ., isUnknownType, (, ), ||, objType, ., isEmptyType, (, )]
[||, objType, ., isUnknownType, (, ), ||, objType, ., isEmptyType, (, ), ||, objType, ., isEnumType, (, ), ||, objType]
[||, objType, ., isUnknownType, (, ), ||, objType, ., isEmptyType, (, ), ||, objType, ., isEnumType, (, ), ||, objType]
[., hasReferenceName, (, ), ||, objType, ., isUnknownType, (, ), ||, objType, ., isEmptyType, (, ), ||, objType, ., isEnumType]
[||, objType, ., isEmptyType, (, ), ||, objType, ., isEnumType, (, ), ||, objType, ., autoboxesTo, (, ), !=, null]
[., isUnknownType, (, ), ||, objType, ., isEmptyType, (, ), ||, objType, ., isEnumType, (, ), ||, objType, ., autoboxesTo]
[||, objType, ., isEnumType, (, ), ||, objType, ., autoboxesTo, (, ), !=, null, ;, }, private, JSType, getJSType, (]
[., isEmptyType, (, ), ||, objType, ., isEnumType, (, ), ||, objType, ., autoboxesTo, (, ), !=, null, ;, }]
[||, objType, ., autoboxesTo, (, ), !=, null, ;, }, private, JSType, getJSType, (, Node, n, ), {, JSType, jsType]
[., isEnumType, (, ), ||, objType, ., autoboxesTo, (, ), !=, null, ;, }, private, JSType, getJSType, (, Node, n]
[;, }, private, JSType, getJSType, (, Node, n, ), {, JSType, jsType, =, n, ., getJSType, (, ), ;, if]
[!=, null, ;, }, private, JSType, getJSType, (, Node, n, ), {, JSType, jsType, =, n, ., getJSType, (, )]
[., autoboxesTo, (, ), !=, null, ;, }, private, JSType, getJSType, (, Node, n, ), {, JSType, jsType, =, n]
[;, }, private, JSType, getJSType, (, Node, n, ), {, JSType, jsType, =, n, ., getJSType, (, ), ;, if]
[;, if, (, jsType, ==, null, ), {, return, compiler, ., getTypeRegistry, (, ), ., getNativeType, (, JSTypeNative, ., UNKNOWN_TYPE]
[., getJSType, (, ), ;, if, (, jsType, ==, null, ), {, return, compiler, ., getTypeRegistry, (, ), ., getNativeType]
[), {, return, compiler, ., getTypeRegistry, (, ), ., getNativeType, (, JSTypeNative, ., UNKNOWN_TYPE, ), ;, }, else, {, return]
[==, null, ), {, return, compiler, ., getTypeRegistry, (, ), ., getNativeType, (, JSTypeNative, ., UNKNOWN_TYPE, ), ;, }, else]
[), {, return, compiler, ., getTypeRegistry, (, ), ., getNativeType, (, JSTypeNative, ., UNKNOWN_TYPE, ), ;, }, else, {, return]
[;, }, else, {, return, jsType, ;, }, }, @, Override, public, void, process, (, Node, externs, ,, Node, root]
[., getNativeType, (, JSTypeNative, ., UNKNOWN_TYPE, ), ;, }, else, {, return, jsType, ;, }, }, @, Override, public, void]
[., getTypeRegistry, (, ), ., getNativeType, (, JSTypeNative, ., UNKNOWN_TYPE, ), ;, }, else, {, return, jsType, ;, }, }]
[), ;, }, else, {, return, jsType, ;, }, }, @, Override, public, void, process, (, Node, externs, ,, Node]
[., UNKNOWN_TYPE, ), ;, }, else, {, return, jsType, ;, }, }, @, Override, public, void, process, (, Node, externs]
[;, }, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, NodeTraversal, ., traverseRoots, (]
[;, NodeTraversal, ., traverseRoots, (, compiler, ,, new, ReplaceCandidates, (, ), ,, externs, ,, root, ), ;, }, class, GatherCandidates]
[., traverseRoots, (, compiler, ,, new, GatherCandidates, (, ), ,, externs, ,, root, ), ;, NodeTraversal, ., traverseRoots, (, compiler]
[,, new, GatherCandidates, (, ), ,, externs, ,, root, ), ;, NodeTraversal, ., traverseRoots, (, compiler, ,, new, ReplaceCandidates, (]
[,, externs, ,, root, ), ;, NodeTraversal, ., traverseRoots, (, compiler, ,, new, ReplaceCandidates, (, ), ,, externs, ,, root]
[,, root, ), ;, NodeTraversal, ., traverseRoots, (, compiler, ,, new, ReplaceCandidates, (, ), ,, externs, ,, root, ), ;]
[), ;, NodeTraversal, ., traverseRoots, (, compiler, ,, new, ReplaceCandidates, (, ), ,, externs, ,, root, ), ;, }, class]
[;, }, class, GatherCandidates, extends, AbstractPostOrderCallback, {, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node]
[., traverseRoots, (, compiler, ,, new, ReplaceCandidates, (, ), ,, externs, ,, root, ), ;, }, class, GatherCandidates, extends, AbstractPostOrderCallback]
[,, new, ReplaceCandidates, (, ), ,, externs, ,, root, ), ;, }, class, GatherCandidates, extends, AbstractPostOrderCallback, {, @, Override, public]
[,, externs, ,, root, ), ;, }, class, GatherCandidates, extends, AbstractPostOrderCallback, {, @, Override, public, void, visit, (, NodeTraversal, t]
[,, root, ), ;, }, class, GatherCandidates, extends, AbstractPostOrderCallback, {, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node]
[), ;, }, class, GatherCandidates, extends, AbstractPostOrderCallback, {, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,]
[;, String, propName, =, null, ;, if, (, n, ., isGetProp, (, ), ), {, propName, =, n, ., getLastChild]
[;, if, (, n, ., isGetProp, (, ), ), {, propName, =, n, ., getLastChild, (, ), ., getString, (]
[), {, propName, =, n, ., getLastChild, (, ), ., getString, (, ), ;, if, (, t, ., getInput, (]
[., isGetProp, (, ), ), {, propName, =, n, ., getLastChild, (, ), ., getString, (, ), ;, if, (]
[=, n, ., getLastChild, (, ), ., getString, (, ), ;, if, (, t, ., getInput, (, ), ., isExtern]
[;, if, (, t, ., getInput, (, ), ., isExtern, (, ), ), {, invalidatingPropRef, =, true, ;, }, else]
[., getString, (, ), ;, if, (, t, ., getInput, (, ), ., isExtern, (, ), ), {, invalidatingPropRef, =]
[., getLastChild, (, ), ., getString, (, ), ;, if, (, t, ., getInput, (, ), ., isExtern, (, )]
[), {, invalidatingPropRef, =, true, ;, }, else, if, (, parent, ., isAssign, (, ), ), {, invalidatingPropRef, =, !]
[., isExtern, (, ), ), {, invalidatingPropRef, =, true, ;, }, else, if, (, parent, ., isAssign, (, ), )]
[., getInput, (, ), ., isExtern, (, ), ), {, invalidatingPropRef, =, true, ;, }, else, if, (, parent, .]
[=, true, ;, }, else, if, (, parent, ., isAssign, (, ), ), {, invalidatingPropRef, =, !, maybeCandidateDefinition, (, t]
[;, }, else, if, (, parent, ., isAssign, (, ), ), {, invalidatingPropRef, =, !, maybeCandidateDefinition, (, t, ,, n]
[), {, invalidatingPropRef, =, !, maybeCandidateDefinition, (, t, ,, n, ,, parent, ), ;, }, else, if, (, NodeUtil, .]
[., isAssign, (, ), ), {, invalidatingPropRef, =, !, maybeCandidateDefinition, (, t, ,, n, ,, parent, ), ;, }, else]
[=, !, maybeCandidateDefinition, (, t, ,, n, ,, parent, ), ;, }, else, if, (, NodeUtil, ., isLValue, (, n]
[;, }, else, if, (, NodeUtil, ., isLValue, (, n, ), ), {, invalidatingPropRef, =, true, ;, }, else, if]
[;, }, else, if, (, NodeUtil, ., isLValue, (, n, ), ), {, invalidatingPropRef, =, true, ;, }, else, if]
[,, n, ,, parent, ), ;, }, else, if, (, NodeUtil, ., isLValue, (, n, ), ), {, invalidatingPropRef, =]
[,, parent, ), ;, }, else, if, (, NodeUtil, ., isLValue, (, n, ), ), {, invalidatingPropRef, =, true, ;]
[), ;, }, else, if, (, NodeUtil, ., isLValue, (, n, ), ), {, invalidatingPropRef, =, true, ;, }, else]
[), {, invalidatingPropRef, =, true, ;, }, else, if, (, parent, ., isDelProp, (, ), ), {, invalidatingPropRef, =, true]
[., isLValue, (, n, ), ), {, invalidatingPropRef, =, true, ;, }, else, if, (, parent, ., isDelProp, (, )]
[), ), {, invalidatingPropRef, =, true, ;, }, else, if, (, parent, ., isDelProp, (, ), ), {, invalidatingPropRef, =]
[=, true, ;, }, else, if, (, parent, ., isDelProp, (, ), ), {, invalidatingPropRef, =, true, ;, }, else]
[;, }, else, if, (, parent, ., isDelProp, (, ), ), {, invalidatingPropRef, =, true, ;, }, else, {, invalidatingPropRef]
[), {, invalidatingPropRef, =, true, ;, }, else, {, invalidatingPropRef, =, false, ;, }, }, else, if, (, n, .]
[., isDelProp, (, ), ), {, invalidatingPropRef, =, true, ;, }, else, {, invalidatingPropRef, =, false, ;, }, }, else]
[=, true, ;, }, else, {, invalidatingPropRef, =, false, ;, }, }, else, if, (, n, ., isStringKey, (, )]
[;, }, else, {, invalidatingPropRef, =, false, ;, }, }, else, if, (, n, ., isStringKey, (, ), ), {]
[=, false, ;, }, }, else, if, (, n, ., isStringKey, (, ), ), {, propName, =, n, ., getString]
[;, }, }, else, if, (, n, ., isStringKey, (, ), ), {, propName, =, n, ., getString, (, )]
[), {, propName, =, n, ., getString, (, ), ;, if, (, t, ., getInput, (, ), ., isExtern, (]
[., isStringKey, (, ), ), {, propName, =, n, ., getString, (, ), ;, if, (, t, ., getInput, (]
[=, n, ., getString, (, ), ;, if, (, t, ., getInput, (, ), ., isExtern, (, ), ), {]
[;, if, (, t, ., getInput, (, ), ., isExtern, (, ), ), {, invalidatingPropRef, =, true, ;, }, else]
[., getString, (, ), ;, if, (, t, ., getInput, (, ), ., isExtern, (, ), ), {, invalidatingPropRef, =]
[), {, invalidatingPropRef, =, true, ;, }, else, {, invalidatingPropRef, =, true, ;, }, }, if, (, invalidatingPropRef, ), {]
[., isExtern, (, ), ), {, invalidatingPropRef, =, true, ;, }, else, {, invalidatingPropRef, =, true, ;, }, }, if]
[., getInput, (, ), ., isExtern, (, ), ), {, invalidatingPropRef, =, true, ;, }, else, {, invalidatingPropRef, =, true]
[=, true, ;, }, else, {, invalidatingPropRef, =, true, ;, }, }, if, (, invalidatingPropRef, ), {, Preconditions, ., checkNotNull]
[;, }, else, {, invalidatingPropRef, =, true, ;, }, }, if, (, invalidatingPropRef, ), {, Preconditions, ., checkNotNull, (, propName]
[=, true, ;, }, }, if, (, invalidatingPropRef, ), {, Preconditions, ., checkNotNull, (, propName, ), ;, invalidateProperty, (, propName]
[;, }, }, if, (, invalidatingPropRef, ), {, Preconditions, ., checkNotNull, (, propName, ), ;, invalidateProperty, (, propName, ), ;]
[), {, Preconditions, ., checkNotNull, (, propName, ), ;, invalidateProperty, (, propName, ), ;, }, }, private, boolean, maybeCandidateDefinition, (]
[;, invalidateProperty, (, propName, ), ;, }, }, private, boolean, maybeCandidateDefinition, (, NodeTraversal, t, ,, Node, n, ,, Node, parent]
[., checkNotNull, (, propName, ), ;, invalidateProperty, (, propName, ), ;, }, }, private, boolean, maybeCandidateDefinition, (, NodeTraversal, t, ,]
[), ;, invalidateProperty, (, propName, ), ;, }, }, private, boolean, maybeCandidateDefinition, (, NodeTraversal, t, ,, Node, n, ,, Node]
[;, }, }, private, boolean, maybeCandidateDefinition, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, Preconditions, ., checkState]
[), ;, }, }, private, boolean, maybeCandidateDefinition, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, Preconditions, .]
[;, boolean, isCandidate, =, false, ;, Node, src, =, n, ., getFirstChild, (, ), ;, String, propName, =, n, .]
[., checkState, (, n, ., isGetProp, (, ), &&, parent, ., isAssign, (, ), ), ;, boolean, isCandidate, =, false]
[), ;, boolean, isCandidate, =, false, ;, Node, src, =, n, ., getFirstChild, (, ), ;, String, propName, =, n]
[&&, parent, ., isAssign, (, ), ), ;, boolean, isCandidate, =, false, ;, Node, src, =, n, ., getFirstChild, (]
[., isGetProp, (, ), &&, parent, ., isAssign, (, ), ), ;, boolean, isCandidate, =, false, ;, Node, src, =]
[), ;, boolean, isCandidate, =, false, ;, Node, src, =, n, ., getFirstChild, (, ), ;, String, propName, =, n]
[., isAssign, (, ), ), ;, boolean, isCandidate, =, false, ;, Node, src, =, n, ., getFirstChild, (, ), ;]
[;, Node, src, =, n, ., getFirstChild, (, ), ;, String, propName, =, n, ., getLastChild, (, ), ., getString]
[;, String, propName, =, n, ., getLastChild, (, ), ., getString, (, ), ;, Node, value, =, parent, ., getLastChild]
[., getFirstChild, (, ), ;, String, propName, =, n, ., getLastChild, (, ), ., getString, (, ), ;, Node, value]
[;, Node, value, =, parent, ., getLastChild, (, ), ;, if, (, src, ., isThis, (, ), ), {, if]
[., getString, (, ), ;, Node, value, =, parent, ., getLastChild, (, ), ;, if, (, src, ., isThis, (]
[., getLastChild, (, ), ., getString, (, ), ;, Node, value, =, parent, ., getLastChild, (, ), ;, if, (]
[;, if, (, src, ., isThis, (, ), ), {, if, (, inContructor, (, t, ), ), {, isCandidate, =]
[., getLastChild, (, ), ;, if, (, src, ., isThis, (, ), ), {, if, (, inContructor, (, t, )]
[), {, if, (, inContructor, (, t, ), ), {, isCandidate, =, maybeStoreCandidateValue, (, getJSType, (, src, ), ,, propName]
[., isThis, (, ), ), {, if, (, inContructor, (, t, ), ), {, isCandidate, =, maybeStoreCandidateValue, (, getJSType, (]
[), {, isCandidate, =, maybeStoreCandidateValue, (, getJSType, (, src, ), ,, propName, ,, value, ), ;, }, }, else, if]
[), ), {, isCandidate, =, maybeStoreCandidateValue, (, getJSType, (, src, ), ,, propName, ,, value, ), ;, }, }, else]
[=, maybeStoreCandidateValue, (, getJSType, (, src, ), ,, propName, ,, value, ), ;, }, }, else, if, (, t, .]
[;, }, }, else, if, (, t, ., inGlobalScope, (, ), &&, src, ., isGetProp, (, ), &&, src, .]
[,, propName, ,, value, ), ;, }, }, else, if, (, t, ., inGlobalScope, (, ), &&, src, ., isGetProp]
[), ,, propName, ,, value, ), ;, }, }, else, if, (, t, ., inGlobalScope, (, ), &&, src, .]
[,, value, ), ;, }, }, else, if, (, t, ., inGlobalScope, (, ), &&, src, ., isGetProp, (, )]
[), ;, }, }, else, if, (, t, ., inGlobalScope, (, ), &&, src, ., isGetProp, (, ), &&, src]
[), {, JSType, instanceType, =, maybeGetInstanceTypeFromPrototypeRef, (, src, ), ;, if, (, instanceType, !=, null, ), {, isCandidate, =, maybeStoreCandidateValue]
[&&, src, ., getLastChild, (, ), ., getString, (, ), ., equals, (, "prototype", ), ), {, JSType, instanceType, =]
[&&, src, ., isGetProp, (, ), &&, src, ., getLastChild, (, ), ., getString, (, ), ., equals, (, "prototype"]
[., inGlobalScope, (, ), &&, src, ., isGetProp, (, ), &&, src, ., getLastChild, (, ), ., getString, (, )]
[&&, src, ., getLastChild, (, ), ., getString, (, ), ., equals, (, "prototype", ), ), {, JSType, instanceType, =]
[., isGetProp, (, ), &&, src, ., getLastChild, (, ), ., getString, (, ), ., equals, (, "prototype", ), )]
[), {, JSType, instanceType, =, maybeGetInstanceTypeFromPrototypeRef, (, src, ), ;, if, (, instanceType, !=, null, ), {, isCandidate, =, maybeStoreCandidateValue]
[., equals, (, "prototype", ), ), {, JSType, instanceType, =, maybeGetInstanceTypeFromPrototypeRef, (, src, ), ;, if, (, instanceType, !=, null]
[., getString, (, ), ., equals, (, "prototype", ), ), {, JSType, instanceType, =, maybeGetInstanceTypeFromPrototypeRef, (, src, ), ;, if]
[., getLastChild, (, ), ., getString, (, ), ., equals, (, "prototype", ), ), {, JSType, instanceType, =, maybeGetInstanceTypeFromPrototypeRef, (]
[), ), {, JSType, instanceType, =, maybeGetInstanceTypeFromPrototypeRef, (, src, ), ;, if, (, instanceType, !=, null, ), {, isCandidate, =]
[;, if, (, instanceType, !=, null, ), {, isCandidate, =, maybeStoreCandidateValue, (, instanceType, ,, propName, ,, value, ), ;, }]
[), ;, if, (, instanceType, !=, null, ), {, isCandidate, =, maybeStoreCandidateValue, (, instanceType, ,, propName, ,, value, ), ;]
[), {, isCandidate, =, maybeStoreCandidateValue, (, instanceType, ,, propName, ,, value, ), ;, }, }, return, isCandidate, ;, }, private]
[!=, null, ), {, isCandidate, =, maybeStoreCandidateValue, (, instanceType, ,, propName, ,, value, ), ;, }, }, return, isCandidate, ;]
[), {, isCandidate, =, maybeStoreCandidateValue, (, instanceType, ,, propName, ,, value, ), ;, }, }, return, isCandidate, ;, }, private]
[=, maybeStoreCandidateValue, (, instanceType, ,, propName, ,, value, ), ;, }, }, return, isCandidate, ;, }, private, JSType, maybeGetInstanceTypeFromPrototypeRef, (]
[;, }, }, return, isCandidate, ;, }, private, JSType, maybeGetInstanceTypeFromPrototypeRef, (, Node, src, ), {, JSType, ownerType, =, getJSType, (]
[,, propName, ,, value, ), ;, }, }, return, isCandidate, ;, }, private, JSType, maybeGetInstanceTypeFromPrototypeRef, (, Node, src, ), {]
[,, value, ), ;, }, }, return, isCandidate, ;, }, private, JSType, maybeGetInstanceTypeFromPrototypeRef, (, Node, src, ), {, JSType, ownerType]
[), ;, }, }, return, isCandidate, ;, }, private, JSType, maybeGetInstanceTypeFromPrototypeRef, (, Node, src, ), {, JSType, ownerType, =, getJSType]
[;, }, private, JSType, maybeGetInstanceTypeFromPrototypeRef, (, Node, src, ), {, JSType, ownerType, =, getJSType, (, src, ., getFirstChild, (, )]
[;, if, (, ownerType, ., isFunctionType, (, ), &&, ownerType, ., isConstructor, (, ), ), {, FunctionType, functionType, =, (]
[), ;, if, (, ownerType, ., isFunctionType, (, ), &&, ownerType, ., isConstructor, (, ), ), {, FunctionType, functionType, =]
[., getFirstChild, (, ), ), ;, if, (, ownerType, ., isFunctionType, (, ), &&, ownerType, ., isConstructor, (, ), )]
[), {, FunctionType, functionType, =, (, (, FunctionType, ), ownerType, ), ;, return, functionType, ., getInstanceType, (, ), ;, }]
[&&, ownerType, ., isConstructor, (, ), ), {, FunctionType, functionType, =, (, (, FunctionType, ), ownerType, ), ;, return, functionType]
[., isFunctionType, (, ), &&, ownerType, ., isConstructor, (, ), ), {, FunctionType, functionType, =, (, (, FunctionType, ), ownerType]
[), {, FunctionType, functionType, =, (, (, FunctionType, ), ownerType, ), ;, return, functionType, ., getInstanceType, (, ), ;, }]
[., isConstructor, (, ), ), {, FunctionType, functionType, =, (, (, FunctionType, ), ownerType, ), ;, return, functionType, ., getInstanceType]
[;, return, functionType, ., getInstanceType, (, ), ;, }, return, null, ;, }, private, void, invalidateProperty, (, String, propName, )]
[), ;, return, functionType, ., getInstanceType, (, ), ;, }, return, null, ;, }, private, void, invalidateProperty, (, String, propName]
[), ;, return, functionType, ., getInstanceType, (, ), ;, }, return, null, ;, }, private, void, invalidateProperty, (, String, propName]
[;, }, return, null, ;, }, private, void, invalidateProperty, (, String, propName, ), {, props, ., put, (, propName, ,]
[., getInstanceType, (, ), ;, }, return, null, ;, }, private, void, invalidateProperty, (, String, propName, ), {, props, .]
[;, }, private, void, invalidateProperty, (, String, propName, ), {, props, ., put, (, propName, ,, INVALIDATED, ), ;, }]
[;, }, private, boolean, maybeStoreCandidateValue, (, JSType, type, ,, String, propName, ,, Node, value, ), {, Preconditions, ., checkNotNull, (]
[., put, (, propName, ,, INVALIDATED, ), ;, }, private, boolean, maybeStoreCandidateValue, (, JSType, type, ,, String, propName, ,, Node]
[,, INVALIDATED, ), ;, }, private, boolean, maybeStoreCandidateValue, (, JSType, type, ,, String, propName, ,, Node, value, ), {, Preconditions]
[), ;, }, private, boolean, maybeStoreCandidateValue, (, JSType, type, ,, String, propName, ,, Node, value, ), {, Preconditions, ., checkNotNull]
[;, if, (, !, props, ., containsKey, (, propName, ), &&, !, isInvalidatingType, (, type, ), &&, NodeUtil, ., isImmutableValue]
[., checkNotNull, (, value, ), ;, if, (, !, props, ., containsKey, (, propName, ), &&, !, isInvalidatingType, (, type]
[), ;, if, (, !, props, ., containsKey, (, propName, ), &&, !, isInvalidatingType, (, type, ), &&, NodeUtil, .]
[), {, props, ., put, (, propName, ,, new, PropertyInfo, (, type, ,, value, ), ), ;, return, true, ;]
[&&, NodeUtil, ., isExecutedExactlyOnce, (, value, ), ), {, props, ., put, (, propName, ,, new, PropertyInfo, (, type, ,]
[&&, NodeUtil, ., isImmutableValue, (, value, ), &&, NodeUtil, ., isExecutedExactlyOnce, (, value, ), ), {, props, ., put, (]
[&&, !, isInvalidatingType, (, type, ), &&, NodeUtil, ., isImmutableValue, (, value, ), &&, NodeUtil, ., isExecutedExactlyOnce, (, value, )]
[&&, !, isInvalidatingType, (, type, ), &&, NodeUtil, ., isImmutableValue, (, value, ), &&, NodeUtil, ., isExecutedExactlyOnce, (, value, )]
[., containsKey, (, propName, ), &&, !, isInvalidatingType, (, type, ), &&, NodeUtil, ., isImmutableValue, (, value, ), &&, NodeUtil]
[), &&, !, isInvalidatingType, (, type, ), &&, NodeUtil, ., isImmutableValue, (, value, ), &&, NodeUtil, ., isExecutedExactlyOnce, (, value]
[&&, NodeUtil, ., isImmutableValue, (, value, ), &&, NodeUtil, ., isExecutedExactlyOnce, (, value, ), ), {, props, ., put, (]
[&&, NodeUtil, ., isImmutableValue, (, value, ), &&, NodeUtil, ., isExecutedExactlyOnce, (, value, ), ), {, props, ., put, (]
[), &&, NodeUtil, ., isImmutableValue, (, value, ), &&, NodeUtil, ., isExecutedExactlyOnce, (, value, ), ), {, props, ., put]
[&&, NodeUtil, ., isExecutedExactlyOnce, (, value, ), ), {, props, ., put, (, propName, ,, new, PropertyInfo, (, type, ,]
[., isImmutableValue, (, value, ), &&, NodeUtil, ., isExecutedExactlyOnce, (, value, ), ), {, props, ., put, (, propName, ,]
[), &&, NodeUtil, ., isExecutedExactlyOnce, (, value, ), ), {, props, ., put, (, propName, ,, new, PropertyInfo, (, type]
[), {, props, ., put, (, propName, ,, new, PropertyInfo, (, type, ,, value, ), ), ;, return, true, ;]
[., isExecutedExactlyOnce, (, value, ), ), {, props, ., put, (, propName, ,, new, PropertyInfo, (, type, ,, value, )]
[), ), {, props, ., put, (, propName, ,, new, PropertyInfo, (, type, ,, value, ), ), ;, return, true]
[;, return, true, ;, }, return, false, ;, }, private, boolean, inContructor, (, NodeTraversal, t, ), {, Node, root, =]
[., put, (, propName, ,, new, PropertyInfo, (, type, ,, value, ), ), ;, return, true, ;, }, return, false]
[,, new, PropertyInfo, (, type, ,, value, ), ), ;, return, true, ;, }, return, false, ;, }, private, boolean]
[), ;, return, true, ;, }, return, false, ;, }, private, boolean, inContructor, (, NodeTraversal, t, ), {, Node, root]
[,, value, ), ), ;, return, true, ;, }, return, false, ;, }, private, boolean, inContructor, (, NodeTraversal, t, )]
[), ), ;, return, true, ;, }, return, false, ;, }, private, boolean, inContructor, (, NodeTraversal, t, ), {, Node]
[;, }, return, false, ;, }, private, boolean, inContructor, (, NodeTraversal, t, ), {, Node, root, =, t, ., getScopeRoot]
[;, }, private, boolean, inContructor, (, NodeTraversal, t, ), {, Node, root, =, t, ., getScopeRoot, (, ), ;, JSDocInfo]
[;, JSDocInfo, info, =, NodeUtil, ., getBestJSDocInfo, (, root, ), ;, return, info, !=, null, &&, info, ., isConstructor, (]
[., getScopeRoot, (, ), ;, JSDocInfo, info, =, NodeUtil, ., getBestJSDocInfo, (, root, ), ;, return, info, !=, null, &&]
[;, return, info, !=, null, &&, info, ., isConstructor, (, ), ;, }, }, class, ReplaceCandidates, extends, AbstractPostOrderCallback, {, @]
[., getBestJSDocInfo, (, root, ), ;, return, info, !=, null, &&, info, ., isConstructor, (, ), ;, }, }, class]
[), ;, return, info, !=, null, &&, info, ., isConstructor, (, ), ;, }, }, class, ReplaceCandidates, extends, AbstractPostOrderCallback, {]
[;, }, }, class, ReplaceCandidates, extends, AbstractPostOrderCallback, {, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,]
[&&, info, ., isConstructor, (, ), ;, }, }, class, ReplaceCandidates, extends, AbstractPostOrderCallback, {, @, Override, public, void, visit, (]
[!=, null, &&, info, ., isConstructor, (, ), ;, }, }, class, ReplaceCandidates, extends, AbstractPostOrderCallback, {, @, Override, public, void]
[&&, info, ., isConstructor, (, ), ;, }, }, class, ReplaceCandidates, extends, AbstractPostOrderCallback, {, @, Override, public, void, visit, (]
[;, }, }, class, ReplaceCandidates, extends, AbstractPostOrderCallback, {, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,]
[., isConstructor, (, ), ;, }, }, class, ReplaceCandidates, extends, AbstractPostOrderCallback, {, @, Override, public, void, visit, (, NodeTraversal, t]
[), {, Node, target, =, n, ., getFirstChild, (, ), ;, String, propName, =, n, ., getLastChild, (, ), .]
[&&, !, NodeUtil, ., isLValue, (, n, ), ), {, Node, target, =, n, ., getFirstChild, (, ), ;, String]
[., isGetProp, (, ), &&, !, NodeUtil, ., isLValue, (, n, ), ), {, Node, target, =, n, ., getFirstChild]
[), {, Node, target, =, n, ., getFirstChild, (, ), ;, String, propName, =, n, ., getLastChild, (, ), .]
[), {, Node, target, =, n, ., getFirstChild, (, ), ;, String, propName, =, n, ., getLastChild, (, ), .]
[., isLValue, (, n, ), ), {, Node, target, =, n, ., getFirstChild, (, ), ;, String, propName, =, n]
[), ), {, Node, target, =, n, ., getFirstChild, (, ), ;, String, propName, =, n, ., getLastChild, (, )]
[;, String, propName, =, n, ., getLastChild, (, ), ., getString, (, ), ;, PropertyInfo, info, =, props, ., get]
[., getFirstChild, (, ), ;, String, propName, =, n, ., getLastChild, (, ), ., getString, (, ), ;, PropertyInfo, info]
[;, PropertyInfo, info, =, props, ., get, (, propName, ), ;, if, (, info, !=, null, &&, info, !=, INVALIDATED]
[., getString, (, ), ;, PropertyInfo, info, =, props, ., get, (, propName, ), ;, if, (, info, !=, null]
[., getLastChild, (, ), ., getString, (, ), ;, PropertyInfo, info, =, props, ., get, (, propName, ), ;, if]
[;, if, (, info, !=, null, &&, info, !=, INVALIDATED, &&, isMatchingType, (, target, ,, info, ., type, ), )]
[., get, (, propName, ), ;, if, (, info, !=, null, &&, info, !=, INVALIDATED, &&, isMatchingType, (, target, ,]
[), ;, if, (, info, !=, null, &&, info, !=, INVALIDATED, &&, isMatchingType, (, target, ,, info, ., type, )]
[), {, Node, replacement, =, info, ., value, ., cloneTree, (, ), ;, if, (, NodeUtil, ., mayHaveSideEffects, (, n]
[&&, isMatchingType, (, target, ,, info, ., type, ), ), {, Node, replacement, =, info, ., value, ., cloneTree, (]
[&&, info, !=, INVALIDATED, &&, isMatchingType, (, target, ,, info, ., type, ), ), {, Node, replacement, =, info, .]
[!=, null, &&, info, !=, INVALIDATED, &&, isMatchingType, (, target, ,, info, ., type, ), ), {, Node, replacement, =]
[&&, info, !=, INVALIDATED, &&, isMatchingType, (, target, ,, info, ., type, ), ), {, Node, replacement, =, info, .]
[&&, isMatchingType, (, target, ,, info, ., type, ), ), {, Node, replacement, =, info, ., value, ., cloneTree, (]
[!=, INVALIDATED, &&, isMatchingType, (, target, ,, info, ., type, ), ), {, Node, replacement, =, info, ., value, .]
[&&, isMatchingType, (, target, ,, info, ., type, ), ), {, Node, replacement, =, info, ., value, ., cloneTree, (]
[), {, Node, replacement, =, info, ., value, ., cloneTree, (, ), ;, if, (, NodeUtil, ., mayHaveSideEffects, (, n]
[,, info, ., type, ), ), {, Node, replacement, =, info, ., value, ., cloneTree, (, ), ;, if, (]
[), ), {, Node, replacement, =, info, ., value, ., cloneTree, (, ), ;, if, (, NodeUtil, ., mayHaveSideEffects, (]
[., type, ), ), {, Node, replacement, =, info, ., value, ., cloneTree, (, ), ;, if, (, NodeUtil, .]
[;, if, (, NodeUtil, ., mayHaveSideEffects, (, n, ., getFirstChild, (, ), ,, compiler, ), ), {, replacement, =, IR]
[., cloneTree, (, ), ;, if, (, NodeUtil, ., mayHaveSideEffects, (, n, ., getFirstChild, (, ), ,, compiler, ), )]
[., value, ., cloneTree, (, ), ;, if, (, NodeUtil, ., mayHaveSideEffects, (, n, ., getFirstChild, (, ), ,, compiler]
[), {, replacement, =, IR, ., comma, (, n, ., removeFirstChild, (, ), ,, replacement, ), ., srcref, (, n]
[., mayHaveSideEffects, (, n, ., getFirstChild, (, ), ,, compiler, ), ), {, replacement, =, IR, ., comma, (, n]
[,, compiler, ), ), {, replacement, =, IR, ., comma, (, n, ., removeFirstChild, (, ), ,, replacement, ), .]
[., getFirstChild, (, ), ,, compiler, ), ), {, replacement, =, IR, ., comma, (, n, ., removeFirstChild, (, )]
[), ), {, replacement, =, IR, ., comma, (, n, ., removeFirstChild, (, ), ,, replacement, ), ., srcref, (]
[=, IR, ., comma, (, n, ., removeFirstChild, (, ), ,, replacement, ), ., srcref, (, n, ), ;, }]
[;, }, parent, ., replaceChild, (, n, ,, replacement, ), ;, compiler, ., reportCodeChange, (, ), ;, }, }, }]
[., srcref, (, n, ), ;, }, parent, ., replaceChild, (, n, ,, replacement, ), ;, compiler, ., reportCodeChange, (]
[., comma, (, n, ., removeFirstChild, (, ), ,, replacement, ), ., srcref, (, n, ), ;, }, parent, .]
[,, replacement, ), ., srcref, (, n, ), ;, }, parent, ., replaceChild, (, n, ,, replacement, ), ;, compiler]
[., removeFirstChild, (, ), ,, replacement, ), ., srcref, (, n, ), ;, }, parent, ., replaceChild, (, n, ,]
[), ., srcref, (, n, ), ;, }, parent, ., replaceChild, (, n, ,, replacement, ), ;, compiler, ., reportCodeChange]
[), ;, }, parent, ., replaceChild, (, n, ,, replacement, ), ;, compiler, ., reportCodeChange, (, ), ;, }, }]
[;, compiler, ., reportCodeChange, (, ), ;, }, }, }, private, boolean, isMatchingType, (, Node, n, ,, JSType, src, )]
[., replaceChild, (, n, ,, replacement, ), ;, compiler, ., reportCodeChange, (, ), ;, }, }, }, private, boolean, isMatchingType]
[,, replacement, ), ;, compiler, ., reportCodeChange, (, ), ;, }, }, }, private, boolean, isMatchingType, (, Node, n, ,]
[), ;, compiler, ., reportCodeChange, (, ), ;, }, }, }, private, boolean, isMatchingType, (, Node, n, ,, JSType, src]
[;, }, }, }, private, boolean, isMatchingType, (, Node, n, ,, JSType, src, ), {, src, =, src, ., restrictByNotNullOrUndefined]
[., reportCodeChange, (, ), ;, }, }, }, private, boolean, isMatchingType, (, Node, n, ,, JSType, src, ), {, src]
[=, src, ., restrictByNotNullOrUndefined, (, ), ;, JSType, dest, =, getJSType, (, n, ), ., restrictByNotNullOrUndefined, (, ), ;, if]
[;, JSType, dest, =, getJSType, (, n, ), ., restrictByNotNullOrUndefined, (, ), ;, if, (, !, isInvalidatingType, (, dest, )]
[., restrictByNotNullOrUndefined, (, ), ;, JSType, dest, =, getJSType, (, n, ), ., restrictByNotNullOrUndefined, (, ), ;, if, (, !]
[;, if, (, !, isInvalidatingType, (, dest, ), &&, dest, ., isSubtype, (, src, ), ), {, return, true, ;]
[., restrictByNotNullOrUndefined, (, ), ;, if, (, !, isInvalidatingType, (, dest, ), &&, dest, ., isSubtype, (, src, ), )]
[), ., restrictByNotNullOrUndefined, (, ), ;, if, (, !, isInvalidatingType, (, dest, ), &&, dest, ., isSubtype, (, src, )]
[), {, return, true, ;, }, return, false, ;, }, }, }]
[&&, dest, ., isSubtype, (, src, ), ), {, return, true, ;, }, return, false, ;, }, }, }]
[&&, dest, ., isSubtype, (, src, ), ), {, return, true, ;, }, return, false, ;, }, }, }]
[), &&, dest, ., isSubtype, (, src, ), ), {, return, true, ;, }, return, false, ;, }, }, }]
[), {, return, true, ;, }, return, false, ;, }, }, }]
[., isSubtype, (, src, ), ), {, return, true, ;, }, return, false, ;, }, }, }]
[), ), {, return, true, ;, }, return, false, ;, }, }, }]
[;, }, return, false, ;, }, }, }]
[;, }, }, }]
