[commons, ., math3, ., util, ., FastMath, ;, public, class, NordsieckStepInterpolator, extends, AbstractStepInterpolator, {, private, static, final, long, serialVersionUID, =]
[., math3, ., util, ., FastMath, ;, public, class, NordsieckStepInterpolator, extends, AbstractStepInterpolator, {, private, static, final, long, serialVersionUID, =, -]
[private, Array2DRowRealMatrix, nordsieck, ;, public, NordsieckStepInterpolator, (, ), {, }, public, NordsieckStepInterpolator, (, final, NordsieckStepInterpolator, interpolator, ), {, super, (]
[;, public, NordsieckStepInterpolator, (, ), {, }, public, NordsieckStepInterpolator, (, final, NordsieckStepInterpolator, interpolator, ), {, super, (, interpolator, ), ;]
[NordsieckStepInterpolator, (, ), {, }, public, NordsieckStepInterpolator, (, final, NordsieckStepInterpolator, interpolator, ), {, super, (, interpolator, ), ;, scalingH, =]
[NordsieckStepInterpolator, (, ), {, }, public, NordsieckStepInterpolator, (, final, NordsieckStepInterpolator, interpolator, ), {, super, (, interpolator, ), ;, scalingH, =]
[}, public, NordsieckStepInterpolator, (, final, NordsieckStepInterpolator, interpolator, ), {, super, (, interpolator, ), ;, scalingH, =, interpolator, ., scalingH, ;]
[NordsieckStepInterpolator, (, final, NordsieckStepInterpolator, interpolator, ), {, super, (, interpolator, ), ;, scalingH, =, interpolator, ., scalingH, ;, referenceTime, =]
[NordsieckStepInterpolator, (, final, NordsieckStepInterpolator, interpolator, ), {, super, (, interpolator, ), ;, scalingH, =, interpolator, ., scalingH, ;, referenceTime, =]
[{, super, (, interpolator, ), ;, scalingH, =, interpolator, ., scalingH, ;, referenceTime, =, interpolator, ., referenceTime, ;, if, (]
[{, super, (, interpolator, ), ;, scalingH, =, interpolator, ., scalingH, ;, referenceTime, =, interpolator, ., referenceTime, ;, if, (]
[{, super, (, interpolator, ), ;, scalingH, =, interpolator, ., scalingH, ;, referenceTime, =, interpolator, ., referenceTime, ;, if, (]
[), ;, scalingH, =, interpolator, ., scalingH, ;, referenceTime, =, interpolator, ., referenceTime, ;, if, (, interpolator, ., scaled, !=]
[=, interpolator, ., scalingH, ;, referenceTime, =, interpolator, ., referenceTime, ;, if, (, interpolator, ., scaled, !=, null, ), {]
[., scalingH, ;, referenceTime, =, interpolator, ., referenceTime, ;, if, (, interpolator, ., scaled, !=, null, ), {, scaled, =]
[., scalingH, ;, referenceTime, =, interpolator, ., referenceTime, ;, if, (, interpolator, ., scaled, !=, null, ), {, scaled, =]
[., scalingH, ;, referenceTime, =, interpolator, ., referenceTime, ;, if, (, interpolator, ., scaled, !=, null, ), {, scaled, =]
[interpolator, ., scaled, !=, null, ), {, scaled, =, interpolator, ., scaled, ., clone, (, ), ;, }, if, (]
[interpolator, ., scaled, !=, null, ), {, scaled, =, interpolator, ., scaled, ., clone, (, ), ;, }, if, (]
[interpolator, ., scaled, !=, null, ), {, scaled, =, interpolator, ., scaled, ., clone, (, ), ;, }, if, (]
[null, ), {, scaled, =, interpolator, ., scaled, ., clone, (, ), ;, }, if, (, interpolator, ., nordsieck, !=]
[scaled, =, interpolator, ., scaled, ., clone, (, ), ;, }, if, (, interpolator, ., nordsieck, !=, null, ), {]
[interpolator, ., scaled, ., clone, (, ), ;, }, if, (, interpolator, ., nordsieck, !=, null, ), {, nordsieck, =]
[., clone, (, ), ;, }, if, (, interpolator, ., nordsieck, !=, null, ), {, nordsieck, =, new, Array2DRowRealMatrix, (]
[., clone, (, ), ;, }, if, (, interpolator, ., nordsieck, !=, null, ), {, nordsieck, =, new, Array2DRowRealMatrix, (]
[., clone, (, ), ;, }, if, (, interpolator, ., nordsieck, !=, null, ), {, nordsieck, =, new, Array2DRowRealMatrix, (]
[interpolator, ., nordsieck, !=, null, ), {, nordsieck, =, new, Array2DRowRealMatrix, (, interpolator, ., nordsieck, ., getDataRef, (, ), ,]
[{, nordsieck, =, new, Array2DRowRealMatrix, (, interpolator, ., nordsieck, ., getDataRef, (, ), ,, true, ), ;, }, if, (]
[{, nordsieck, =, new, Array2DRowRealMatrix, (, interpolator, ., nordsieck, ., getDataRef, (, ), ,, true, ), ;, }, if, (]
[{, nordsieck, =, new, Array2DRowRealMatrix, (, interpolator, ., nordsieck, ., getDataRef, (, ), ,, true, ), ;, }, if, (]
[Array2DRowRealMatrix, (, interpolator, ., nordsieck, ., getDataRef, (, ), ,, true, ), ;, }, if, (, interpolator, ., stateVariation, !=]
[., nordsieck, ., getDataRef, (, ), ,, true, ), ;, }, if, (, interpolator, ., stateVariation, !=, null, ), {]
[., getDataRef, (, ), ,, true, ), ;, }, if, (, interpolator, ., stateVariation, !=, null, ), {, stateVariation, =]
[., getDataRef, (, ), ,, true, ), ;, }, if, (, interpolator, ., stateVariation, !=, null, ), {, stateVariation, =]
[., getDataRef, (, ), ,, true, ), ;, }, if, (, interpolator, ., stateVariation, !=, null, ), {, stateVariation, =]
[=, interpolator, ., stateVariation, ., clone, (, ), ;, }, }, @, Override, protected, StepInterpolator, doCopy, (, ), {, return]
[stateVariation, ., clone, (, ), ;, }, }, @, Override, protected, StepInterpolator, doCopy, (, ), {, return, new, NordsieckStepInterpolator, (]
[double, [, ], y, ,, final, boolean, forward, ,, final, EquationsMapper, primaryMapper, ,, final, EquationsMapper, [, ], secondaryMappers, ), {]
[double, [, ], y, ,, final, boolean, forward, ,, final, EquationsMapper, primaryMapper, ,, final, EquationsMapper, [, ], secondaryMappers, ), {]
[,, final, boolean, forward, ,, final, EquationsMapper, primaryMapper, ,, final, EquationsMapper, [, ], secondaryMappers, ), {, super, ., reinitialize, (]
[boolean, forward, ,, final, EquationsMapper, primaryMapper, ,, final, EquationsMapper, [, ], secondaryMappers, ), {, super, ., reinitialize, (, y, ,]
[,, final, EquationsMapper, primaryMapper, ,, final, EquationsMapper, [, ], secondaryMappers, ), {, super, ., reinitialize, (, y, ,, forward, ,]
[EquationsMapper, primaryMapper, ,, final, EquationsMapper, [, ], secondaryMappers, ), {, super, ., reinitialize, (, y, ,, forward, ,, primaryMapper, ,]
[final, EquationsMapper, [, ], secondaryMappers, ), {, super, ., reinitialize, (, y, ,, forward, ,, primaryMapper, ,, secondaryMappers, ), ;]
[[, ], secondaryMappers, ), {, super, ., reinitialize, (, y, ,, forward, ,, primaryMapper, ,, secondaryMappers, ), ;, stateVariation, =]
[), {, super, ., reinitialize, (, y, ,, forward, ,, primaryMapper, ,, secondaryMappers, ), ;, stateVariation, =, new, double, []
[), {, super, ., reinitialize, (, y, ,, forward, ,, primaryMapper, ,, secondaryMappers, ), ;, stateVariation, =, new, double, []
[(, final, double, time, ,, final, double, stepSize, ,, final, double, [, ], scaledDerivative, ,, final, Array2DRowRealMatrix, nordsieckVector, ), {]
[(, final, double, time, ,, final, double, stepSize, ,, final, double, [, ], scaledDerivative, ,, final, Array2DRowRealMatrix, nordsieckVector, ), {]
[,, final, double, stepSize, ,, final, double, [, ], scaledDerivative, ,, final, Array2DRowRealMatrix, nordsieckVector, ), {, this, ., referenceTime, =]
[double, stepSize, ,, final, double, [, ], scaledDerivative, ,, final, Array2DRowRealMatrix, nordsieckVector, ), {, this, ., referenceTime, =, time, ;]
[double, stepSize, ,, final, double, [, ], scaledDerivative, ,, final, Array2DRowRealMatrix, nordsieckVector, ), {, this, ., referenceTime, =, time, ;]
[double, [, ], scaledDerivative, ,, final, Array2DRowRealMatrix, nordsieckVector, ), {, this, ., referenceTime, =, time, ;, this, ., scalingH, =]
[], scaledDerivative, ,, final, Array2DRowRealMatrix, nordsieckVector, ), {, this, ., referenceTime, =, time, ;, this, ., scalingH, =, stepSize, ;]
[], scaledDerivative, ,, final, Array2DRowRealMatrix, nordsieckVector, ), {, this, ., referenceTime, =, time, ;, this, ., scalingH, =, stepSize, ;]
[Array2DRowRealMatrix, nordsieckVector, ), {, this, ., referenceTime, =, time, ;, this, ., scalingH, =, stepSize, ;, this, ., scaled, =]
[), {, this, ., referenceTime, =, time, ;, this, ., scalingH, =, stepSize, ;, this, ., scaled, =, scaledDerivative, ;]
[), {, this, ., referenceTime, =, time, ;, this, ., scalingH, =, stepSize, ;, this, ., scaled, =, scaledDerivative, ;]
[referenceTime, =, time, ;, this, ., scalingH, =, stepSize, ;, this, ., scaled, =, scaledDerivative, ;, this, ., nordsieck, =]
[time, ;, this, ., scalingH, =, stepSize, ;, this, ., scaled, =, scaledDerivative, ;, this, ., nordsieck, =, nordsieckVector, ;]
[this, ., scalingH, =, stepSize, ;, this, ., scaled, =, scaledDerivative, ;, this, ., nordsieck, =, nordsieckVector, ;, setInterpolatedTime, (]
[(, getInterpolatedTime, (, ), ), ;, }, public, void, rescale, (, final, double, stepSize, ), {, final, double, ratio, =]
[(, getInterpolatedTime, (, ), ), ;, }, public, void, rescale, (, final, double, stepSize, ), {, final, double, ratio, =]
[(, ), ), ;, }, public, void, rescale, (, final, double, stepSize, ), {, final, double, ratio, =, stepSize, /]
[rescale, (, final, double, stepSize, ), {, final, double, ratio, =, stepSize, /, scalingH, ;, for, (, int, i, =]
[final, double, stepSize, ), {, final, double, ratio, =, stepSize, /, scalingH, ;, for, (, int, i, =, 0, ;]
[final, double, stepSize, ), {, final, double, ratio, =, stepSize, /, scalingH, ;, for, (, int, i, =, 0, ;]
[stepSize, ), {, final, double, ratio, =, stepSize, /, scalingH, ;, for, (, int, i, =, 0, ;, i, <]
[stepSize, ), {, final, double, ratio, =, stepSize, /, scalingH, ;, for, (, int, i, =, 0, ;, i, <]
[double, ratio, =, stepSize, /, scalingH, ;, for, (, int, i, =, 0, ;, i, <, scaled, ., length, ;]
[ratio, =, stepSize, /, scalingH, ;, for, (, int, i, =, 0, ;, i, <, scaled, ., length, ;, ++]
[/, scalingH, ;, for, (, int, i, =, 0, ;, i, <, scaled, ., length, ;, ++, i, ), {]
[/, scalingH, ;, for, (, int, i, =, 0, ;, i, <, scaled, ., length, ;, ++, i, ), {]
[;, for, (, int, i, =, 0, ;, i, <, scaled, ., length, ;, ++, i, ), {, scaled, []
[int, i, =, 0, ;, i, <, scaled, ., length, ;, ++, i, ), {, scaled, [, i, ], *=]
[++, i, ), {, scaled, [, i, ], *=, ratio, ;, }, final, double, [, ], [, ], nData, =]
[++, i, ), {, scaled, [, i, ], *=, ratio, ;, }, final, double, [, ], [, ], nData, =]
[ratio, ;, }, final, double, [, ], [, ], nData, =, nordsieck, ., getDataRef, (, ), ;, double, power, =]
[[, ], nData, =, nordsieck, ., getDataRef, (, ), ;, double, power, =, ratio, ;, for, (, int, i, =]
[nData, =, nordsieck, ., getDataRef, (, ), ;, double, power, =, ratio, ;, for, (, int, i, =, 0, ;]
[nData, =, nordsieck, ., getDataRef, (, ), ;, double, power, =, ratio, ;, for, (, int, i, =, 0, ;]
[nordsieck, ., getDataRef, (, ), ;, double, power, =, ratio, ;, for, (, int, i, =, 0, ;, i, <]
[nordsieck, ., getDataRef, (, ), ;, double, power, =, ratio, ;, for, (, int, i, =, 0, ;, i, <]
[), ;, double, power, =, ratio, ;, for, (, int, i, =, 0, ;, i, <, nData, ., length, ;]
[;, double, power, =, ratio, ;, for, (, int, i, =, 0, ;, i, <, nData, ., length, ;, ++]
[=, ratio, ;, for, (, int, i, =, 0, ;, i, <, nData, ., length, ;, ++, i, ), {]
[;, for, (, int, i, =, 0, ;, i, <, nData, ., length, ;, ++, i, ), {, power, *=]
[i, <, nData, ., length, ;, ++, i, ), {, power, *=, ratio, ;, final, double, [, ], nDataI, =]
[i, <, nData, ., length, ;, ++, i, ), {, power, *=, ratio, ;, final, double, [, ], nDataI, =]
[nData, ., length, ;, ++, i, ), {, power, *=, ratio, ;, final, double, [, ], nDataI, =, nData, []
[power, *=, ratio, ;, final, double, [, ], nDataI, =, nData, [, i, ], ;, for, (, int, j, =]
[ratio, ;, final, double, [, ], nDataI, =, nData, [, i, ], ;, for, (, int, j, =, 0, ;]
[ratio, ;, final, double, [, ], nDataI, =, nData, [, i, ], ;, for, (, int, j, =, 0, ;]
[final, double, [, ], nDataI, =, nData, [, i, ], ;, for, (, int, j, =, 0, ;, j, <]
[final, double, [, ], nDataI, =, nData, [, i, ], ;, for, (, int, j, =, 0, ;, j, <]
[nDataI, =, nData, [, i, ], ;, for, (, int, j, =, 0, ;, j, <, nDataI, ., length, ;]
[=, nData, [, i, ], ;, for, (, int, j, =, 0, ;, j, <, nDataI, ., length, ;, ++]
[i, ], ;, for, (, int, j, =, 0, ;, j, <, nDataI, ., length, ;, ++, j, ), {]
[i, ], ;, for, (, int, j, =, 0, ;, j, <, nDataI, ., length, ;, ++, j, ), {]
[;, for, (, int, j, =, 0, ;, j, <, nDataI, ., length, ;, ++, j, ), {, nDataI, []
[int, j, =, 0, ;, j, <, nDataI, ., length, ;, ++, j, ), {, nDataI, [, j, ], *=]
[;, j, <, nDataI, ., length, ;, ++, j, ), {, nDataI, [, j, ], *=, power, ;, }, }]
[<, nDataI, ., length, ;, ++, j, ), {, nDataI, [, j, ], *=, power, ;, }, }, scalingH, =]
[*=, power, ;, }, }, scalingH, =, stepSize, ;, }, public, double, [, ], getInterpolatedStateVariation, (, ), throws, MaxCountExceededException, {]
[scalingH, =, stepSize, ;, }, public, double, [, ], getInterpolatedStateVariation, (, ), throws, MaxCountExceededException, {, getInterpolatedState, (, ), ;, return]
[}, @, Override, protected, void, computeInterpolatedStateAndDerivatives, (, final, double, theta, ,, final, double, oneMinusThetaH, ), {, final, double, x, =]
[}, @, Override, protected, void, computeInterpolatedStateAndDerivatives, (, final, double, theta, ,, final, double, oneMinusThetaH, ), {, final, double, x, =]
[Override, protected, void, computeInterpolatedStateAndDerivatives, (, final, double, theta, ,, final, double, oneMinusThetaH, ), {, final, double, x, =, interpolatedTime, -]
[double, theta, ,, final, double, oneMinusThetaH, ), {, final, double, x, =, interpolatedTime, -, referenceTime, ;, final, double, normalizedAbscissa, =]
[double, theta, ,, final, double, oneMinusThetaH, ), {, final, double, x, =, interpolatedTime, -, referenceTime, ;, final, double, normalizedAbscissa, =]
[,, final, double, oneMinusThetaH, ), {, final, double, x, =, interpolatedTime, -, referenceTime, ;, final, double, normalizedAbscissa, =, x, /]
[double, oneMinusThetaH, ), {, final, double, x, =, interpolatedTime, -, referenceTime, ;, final, double, normalizedAbscissa, =, x, /, scalingH, ;]
[double, oneMinusThetaH, ), {, final, double, x, =, interpolatedTime, -, referenceTime, ;, final, double, normalizedAbscissa, =, x, /, scalingH, ;]
[final, double, x, =, interpolatedTime, -, referenceTime, ;, final, double, normalizedAbscissa, =, x, /, scalingH, ;, Arrays, ., fill, (]
[x, =, interpolatedTime, -, referenceTime, ;, final, double, normalizedAbscissa, =, x, /, scalingH, ;, Arrays, ., fill, (, stateVariation, ,]
[-, referenceTime, ;, final, double, normalizedAbscissa, =, x, /, scalingH, ;, Arrays, ., fill, (, stateVariation, ,, 0.0, ), ;]
[-, referenceTime, ;, final, double, normalizedAbscissa, =, x, /, scalingH, ;, Arrays, ., fill, (, stateVariation, ,, 0.0, ), ;]
[double, normalizedAbscissa, =, x, /, scalingH, ;, Arrays, ., fill, (, stateVariation, ,, 0.0, ), ;, Arrays, ., fill, (]
[=, x, /, scalingH, ;, Arrays, ., fill, (, stateVariation, ,, 0.0, ), ;, Arrays, ., fill, (, interpolatedDerivatives, ,]
[0.0, ), ;, Arrays, ., fill, (, interpolatedDerivatives, ,, 0.0, ), ;, final, double, [, ], [, ], nData, =]
[0.0, ), ;, Arrays, ., fill, (, interpolatedDerivatives, ,, 0.0, ), ;, final, double, [, ], [, ], nData, =]
[;, final, double, [, ], [, ], nData, =, nordsieck, ., getDataRef, (, ), ;, for, (, int, i, =]
[;, final, double, [, ], [, ], nData, =, nordsieck, ., getDataRef, (, ), ;, for, (, int, i, =]
[;, final, double, [, ], [, ], nData, =, nordsieck, ., getDataRef, (, ), ;, for, (, int, i, =]
[], [, ], nData, =, nordsieck, ., getDataRef, (, ), ;, for, (, int, i, =, nData, ., length, -]
[], nData, =, nordsieck, ., getDataRef, (, ), ;, for, (, int, i, =, nData, ., length, -, 1, ;]
[], nData, =, nordsieck, ., getDataRef, (, ), ;, for, (, int, i, =, nData, ., length, -, 1, ;]
[=, nordsieck, ., getDataRef, (, ), ;, for, (, int, i, =, nData, ., length, -, 1, ;, i, >=]
[., getDataRef, (, ), ;, for, (, int, i, =, nData, ., length, -, 1, ;, i, >=, 0, ;]
[getDataRef, (, ), ;, for, (, int, i, =, nData, ., length, -, 1, ;, i, >=, 0, ;, --]
[i, =, nData, ., length, -, 1, ;, i, >=, 0, ;, --, i, ), {, final, int, order, =]
[i, =, nData, ., length, -, 1, ;, i, >=, 0, ;, --, i, ), {, final, int, order, =]
[nData, ., length, -, 1, ;, i, >=, 0, ;, --, i, ), {, final, int, order, =, i, +]
[0, ;, --, i, ), {, final, int, order, =, i, +, 2, ;, final, double, [, ], nDataI, =]
[0, ;, --, i, ), {, final, int, order, =, i, +, 2, ;, final, double, [, ], nDataI, =]
[--, i, ), {, final, int, order, =, i, +, 2, ;, final, double, [, ], nDataI, =, nData, []
[=, i, +, 2, ;, final, double, [, ], nDataI, =, nData, [, i, ], ;, final, double, power, =]
[=, i, +, 2, ;, final, double, [, ], nDataI, =, nData, [, i, ], ;, final, double, power, =]
[;, final, double, [, ], nDataI, =, nData, [, i, ], ;, final, double, power, =, FastMath, ., pow, (]
[double, [, ], nDataI, =, nData, [, i, ], ;, final, double, power, =, FastMath, ., pow, (, normalizedAbscissa, ,]
[], ;, final, double, power, =, FastMath, ., pow, (, normalizedAbscissa, ,, order, ), ;, for, (, int, j, =]
[final, double, power, =, FastMath, ., pow, (, normalizedAbscissa, ,, order, ), ;, for, (, int, j, =, 0, ;]
[final, double, power, =, FastMath, ., pow, (, normalizedAbscissa, ,, order, ), ;, for, (, int, j, =, 0, ;]
[power, =, FastMath, ., pow, (, normalizedAbscissa, ,, order, ), ;, for, (, int, j, =, 0, ;, j, <]
[power, =, FastMath, ., pow, (, normalizedAbscissa, ,, order, ), ;, for, (, int, j, =, 0, ;, j, <]
[pow, (, normalizedAbscissa, ,, order, ), ;, for, (, int, j, =, 0, ;, j, <, nDataI, ., length, ;]
[(, normalizedAbscissa, ,, order, ), ;, for, (, int, j, =, 0, ;, j, <, nDataI, ., length, ;, ++]
[(, int, j, =, 0, ;, j, <, nDataI, ., length, ;, ++, j, ), {, final, double, d, =]
[(, int, j, =, 0, ;, j, <, nDataI, ., length, ;, ++, j, ), {, final, double, d, =]
[(, int, j, =, 0, ;, j, <, nDataI, ., length, ;, ++, j, ), {, final, double, d, =]
[j, =, 0, ;, j, <, nDataI, ., length, ;, ++, j, ), {, final, double, d, =, nDataI, []
[;, j, <, nDataI, ., length, ;, ++, j, ), {, final, double, d, =, nDataI, [, j, ], *]
[<, nDataI, ., length, ;, ++, j, ), {, final, double, d, =, nDataI, [, j, ], *, power, ;]
[<, nDataI, ., length, ;, ++, j, ), {, final, double, d, =, nDataI, [, j, ], *, power, ;]
[., length, ;, ++, j, ), {, final, double, d, =, nDataI, [, j, ], *, power, ;, stateVariation, []
[++, j, ), {, final, double, d, =, nDataI, [, j, ], *, power, ;, stateVariation, [, j, ], +=]
[), {, final, double, d, =, nDataI, [, j, ], *, power, ;, stateVariation, [, j, ], +=, d, ;]
[), {, final, double, d, =, nDataI, [, j, ], *, power, ;, stateVariation, [, j, ], +=, d, ;]
[final, double, d, =, nDataI, [, j, ], *, power, ;, stateVariation, [, j, ], +=, d, ;, interpolatedDerivatives, []
[=, nDataI, [, j, ], *, power, ;, stateVariation, [, j, ], +=, d, ;, interpolatedDerivatives, [, j, ], +=]
[=, nDataI, [, j, ], *, power, ;, stateVariation, [, j, ], +=, d, ;, interpolatedDerivatives, [, j, ], +=]
[[, j, ], *, power, ;, stateVariation, [, j, ], +=, d, ;, interpolatedDerivatives, [, j, ], +=, order, *]
[], +=, d, ;, interpolatedDerivatives, [, j, ], +=, order, *, d, ;, }, }, for, (, int, j, =]
[d, ;, interpolatedDerivatives, [, j, ], +=, order, *, d, ;, }, }, for, (, int, j, =, 0, ;]
[d, ;, interpolatedDerivatives, [, j, ], +=, order, *, d, ;, }, }, for, (, int, j, =, 0, ;]
[interpolatedDerivatives, [, j, ], +=, order, *, d, ;, }, }, for, (, int, j, =, 0, ;, j, <]
[interpolatedDerivatives, [, j, ], +=, order, *, d, ;, }, }, for, (, int, j, =, 0, ;, j, <]
[+=, order, *, d, ;, }, }, for, (, int, j, =, 0, ;, j, <, currentState, ., length, ;]
[order, *, d, ;, }, }, for, (, int, j, =, 0, ;, j, <, currentState, ., length, ;, ++]
[;, }, }, for, (, int, j, =, 0, ;, j, <, currentState, ., length, ;, ++, j, ), {]
[;, }, }, for, (, int, j, =, 0, ;, j, <, currentState, ., length, ;, ++, j, ), {]
[}, for, (, int, j, =, 0, ;, j, <, currentState, ., length, ;, ++, j, ), {, stateVariation, []
[int, j, =, 0, ;, j, <, currentState, ., length, ;, ++, j, ), {, stateVariation, [, j, ], +=]
[int, j, =, 0, ;, j, <, currentState, ., length, ;, ++, j, ), {, stateVariation, [, j, ], +=]
[int, j, =, 0, ;, j, <, currentState, ., length, ;, ++, j, ), {, stateVariation, [, j, ], +=]
[=, 0, ;, j, <, currentState, ., length, ;, ++, j, ), {, stateVariation, [, j, ], +=, scaled, []
[j, <, currentState, ., length, ;, ++, j, ), {, stateVariation, [, j, ], +=, scaled, [, j, ], *]
[currentState, ., length, ;, ++, j, ), {, stateVariation, [, j, ], +=, scaled, [, j, ], *, normalizedAbscissa, ;]
[currentState, ., length, ;, ++, j, ), {, stateVariation, [, j, ], +=, scaled, [, j, ], *, normalizedAbscissa, ;]
[length, ;, ++, j, ), {, stateVariation, [, j, ], +=, scaled, [, j, ], *, normalizedAbscissa, ;, interpolatedState, []
[j, ), {, stateVariation, [, j, ], +=, scaled, [, j, ], *, normalizedAbscissa, ;, interpolatedState, [, j, ], =]
[j, ), {, stateVariation, [, j, ], +=, scaled, [, j, ], *, normalizedAbscissa, ;, interpolatedState, [, j, ], =]
[j, ), {, stateVariation, [, j, ], +=, scaled, [, j, ], *, normalizedAbscissa, ;, interpolatedState, [, j, ], =]
[{, stateVariation, [, j, ], +=, scaled, [, j, ], *, normalizedAbscissa, ;, interpolatedState, [, j, ], =, currentState, []
[j, ], +=, scaled, [, j, ], *, normalizedAbscissa, ;, interpolatedState, [, j, ], =, currentState, [, j, ], +]
[j, ], +=, scaled, [, j, ], *, normalizedAbscissa, ;, interpolatedState, [, j, ], =, currentState, [, j, ], +]
[+=, scaled, [, j, ], *, normalizedAbscissa, ;, interpolatedState, [, j, ], =, currentState, [, j, ], +, stateVariation, []
[j, ], *, normalizedAbscissa, ;, interpolatedState, [, j, ], =, currentState, [, j, ], +, stateVariation, [, j, ], ;]
[j, ], *, normalizedAbscissa, ;, interpolatedState, [, j, ], =, currentState, [, j, ], +, stateVariation, [, j, ], ;]
[*, normalizedAbscissa, ;, interpolatedState, [, j, ], =, currentState, [, j, ], +, stateVariation, [, j, ], ;, interpolatedDerivatives, []
[interpolatedState, [, j, ], =, currentState, [, j, ], +, stateVariation, [, j, ], ;, interpolatedDerivatives, [, j, ], =]
[interpolatedState, [, j, ], =, currentState, [, j, ], +, stateVariation, [, j, ], ;, interpolatedDerivatives, [, j, ], =]
[[, j, ], =, currentState, [, j, ], +, stateVariation, [, j, ], ;, interpolatedDerivatives, [, j, ], =, (]
[[, j, ], =, currentState, [, j, ], +, stateVariation, [, j, ], ;, interpolatedDerivatives, [, j, ], =, (]
[[, j, ], =, currentState, [, j, ], +, stateVariation, [, j, ], ;, interpolatedDerivatives, [, j, ], =, (]
[], =, currentState, [, j, ], +, stateVariation, [, j, ], ;, interpolatedDerivatives, [, j, ], =, (, interpolatedDerivatives, []
[[, j, ], +, stateVariation, [, j, ], ;, interpolatedDerivatives, [, j, ], =, (, interpolatedDerivatives, [, j, ], +]
[[, j, ], +, stateVariation, [, j, ], ;, interpolatedDerivatives, [, j, ], =, (, interpolatedDerivatives, [, j, ], +]
[[, j, ], +, stateVariation, [, j, ], ;, interpolatedDerivatives, [, j, ], =, (, interpolatedDerivatives, [, j, ], +]
[], +, stateVariation, [, j, ], ;, interpolatedDerivatives, [, j, ], =, (, interpolatedDerivatives, [, j, ], +, scaled, []
[[, j, ], ;, interpolatedDerivatives, [, j, ], =, (, interpolatedDerivatives, [, j, ], +, scaled, [, j, ], *]
[;, interpolatedDerivatives, [, j, ], =, (, interpolatedDerivatives, [, j, ], +, scaled, [, j, ], *, normalizedAbscissa, ), /]
[normalizedAbscissa, ), /, x, ;, }, }, @, Override, public, void, writeExternal, (, final, ObjectOutput, out, ), throws, IOException, {]
[/, x, ;, }, }, @, Override, public, void, writeExternal, (, final, ObjectOutput, out, ), throws, IOException, {, writeBaseExternal, (]
[}, }, @, Override, public, void, writeExternal, (, final, ObjectOutput, out, ), throws, IOException, {, writeBaseExternal, (, out, ), ;]
[}, }, @, Override, public, void, writeExternal, (, final, ObjectOutput, out, ), throws, IOException, {, writeBaseExternal, (, out, ), ;]
[public, void, writeExternal, (, final, ObjectOutput, out, ), throws, IOException, {, writeBaseExternal, (, out, ), ;, out, ., writeDouble, (]
[(, final, ObjectOutput, out, ), throws, IOException, {, writeBaseExternal, (, out, ), ;, out, ., writeDouble, (, scalingH, ), ;]
[(, final, ObjectOutput, out, ), throws, IOException, {, writeBaseExternal, (, out, ), ;, out, ., writeDouble, (, scalingH, ), ;]
[), throws, IOException, {, writeBaseExternal, (, out, ), ;, out, ., writeDouble, (, scalingH, ), ;, out, ., writeDouble, (]
[), ;, out, ., writeDouble, (, scalingH, ), ;, out, ., writeDouble, (, referenceTime, ), ;, final, int, n, =]
[), ;, out, ., writeDouble, (, scalingH, ), ;, out, ., writeDouble, (, referenceTime, ), ;, final, int, n, =]
[;, out, ., writeDouble, (, scalingH, ), ;, out, ., writeDouble, (, referenceTime, ), ;, final, int, n, =, (]
[;, out, ., writeDouble, (, scalingH, ), ;, out, ., writeDouble, (, referenceTime, ), ;, final, int, n, =, (]
[., writeDouble, (, scalingH, ), ;, out, ., writeDouble, (, referenceTime, ), ;, final, int, n, =, (, currentState, ==]
[scalingH, ), ;, out, ., writeDouble, (, referenceTime, ), ;, final, int, n, =, (, currentState, ==, null, ), ?]
[), ;, out, ., writeDouble, (, referenceTime, ), ;, final, int, n, =, (, currentState, ==, null, ), ?, -]
[out, ., writeDouble, (, referenceTime, ), ;, final, int, n, =, (, currentState, ==, null, ), ?, -, 1, :]
[out, ., writeDouble, (, referenceTime, ), ;, final, int, n, =, (, currentState, ==, null, ), ?, -, 1, :]
[;, final, int, n, =, (, currentState, ==, null, ), ?, -, 1, :, currentState, ., length, ;, if, (]
[;, final, int, n, =, (, currentState, ==, null, ), ?, -, 1, :, currentState, ., length, ;, if, (]
[int, n, =, (, currentState, ==, null, ), ?, -, 1, :, currentState, ., length, ;, if, (, scaled, ==]
[(, currentState, ==, null, ), ?, -, 1, :, currentState, ., length, ;, if, (, scaled, ==, null, ), {]
[(, currentState, ==, null, ), ?, -, 1, :, currentState, ., length, ;, if, (, scaled, ==, null, ), {]
[), ?, -, 1, :, currentState, ., length, ;, if, (, scaled, ==, null, ), {, out, ., writeBoolean, (]
[., length, ;, if, (, scaled, ==, null, ), {, out, ., writeBoolean, (, false, ), ;, }, else, {]
[., length, ;, if, (, scaled, ==, null, ), {, out, ., writeBoolean, (, false, ), ;, }, else, {]
[(, scaled, ==, null, ), {, out, ., writeBoolean, (, false, ), ;, }, else, {, out, ., writeBoolean, (]
[writeBoolean, (, false, ), ;, }, else, {, out, ., writeBoolean, (, true, ), ;, for, (, int, j, =]
[false, ), ;, }, else, {, out, ., writeBoolean, (, true, ), ;, for, (, int, j, =, 0, ;]
[false, ), ;, }, else, {, out, ., writeBoolean, (, true, ), ;, for, (, int, j, =, 0, ;]
[;, }, else, {, out, ., writeBoolean, (, true, ), ;, for, (, int, j, =, 0, ;, j, <]
[else, {, out, ., writeBoolean, (, true, ), ;, for, (, int, j, =, 0, ;, j, <, n, ;]
[{, out, ., writeBoolean, (, true, ), ;, for, (, int, j, =, 0, ;, j, <, n, ;, ++]
[writeBoolean, (, true, ), ;, for, (, int, j, =, 0, ;, j, <, n, ;, ++, j, ), {]
[writeBoolean, (, true, ), ;, for, (, int, j, =, 0, ;, j, <, n, ;, ++, j, ), {]
[;, for, (, int, j, =, 0, ;, j, <, n, ;, ++, j, ), {, out, ., writeDouble, (]
[;, for, (, int, j, =, 0, ;, j, <, n, ;, ++, j, ), {, out, ., writeDouble, (]
[(, int, j, =, 0, ;, j, <, n, ;, ++, j, ), {, out, ., writeDouble, (, scaled, []
[n, ;, ++, j, ), {, out, ., writeDouble, (, scaled, [, j, ], ), ;, }, }, if, (]
[n, ;, ++, j, ), {, out, ., writeDouble, (, scaled, [, j, ], ), ;, }, }, if, (]
[++, j, ), {, out, ., writeDouble, (, scaled, [, j, ], ), ;, }, }, if, (, nordsieck, ==]
[{, out, ., writeDouble, (, scaled, [, j, ], ), ;, }, }, if, (, nordsieck, ==, null, ), {]
[{, out, ., writeDouble, (, scaled, [, j, ], ), ;, }, }, if, (, nordsieck, ==, null, ), {]
[(, scaled, [, j, ], ), ;, }, }, if, (, nordsieck, ==, null, ), {, out, ., writeBoolean, (]
[;, }, }, if, (, nordsieck, ==, null, ), {, out, ., writeBoolean, (, false, ), ;, }, else, {]
[;, }, }, if, (, nordsieck, ==, null, ), {, out, ., writeBoolean, (, false, ), ;, }, else, {]
[(, nordsieck, ==, null, ), {, out, ., writeBoolean, (, false, ), ;, }, else, {, out, ., writeBoolean, (]
[null, ), {, out, ., writeBoolean, (, false, ), ;, }, else, {, out, ., writeBoolean, (, true, ), ;]
[null, ), {, out, ., writeBoolean, (, false, ), ;, }, else, {, out, ., writeBoolean, (, true, ), ;]
[., writeBoolean, (, false, ), ;, }, else, {, out, ., writeBoolean, (, true, ), ;, out, ., writeObject, (]
[}, @, Override, public, void, readExternal, (, final, ObjectInput, in, ), throws, IOException, ,, ClassNotFoundException, {, final, double, t, =]
[Override, public, void, readExternal, (, final, ObjectInput, in, ), throws, IOException, ,, ClassNotFoundException, {, final, double, t, =, readBaseExternal, (]
[readExternal, (, final, ObjectInput, in, ), throws, IOException, ,, ClassNotFoundException, {, final, double, t, =, readBaseExternal, (, in, ), ;]
[final, ObjectInput, in, ), throws, IOException, ,, ClassNotFoundException, {, final, double, t, =, readBaseExternal, (, in, ), ;, scalingH, =]
[final, ObjectInput, in, ), throws, IOException, ,, ClassNotFoundException, {, final, double, t, =, readBaseExternal, (, in, ), ;, scalingH, =]
[,, ClassNotFoundException, {, final, double, t, =, readBaseExternal, (, in, ), ;, scalingH, =, in, ., readDouble, (, ), ;]
[{, final, double, t, =, readBaseExternal, (, in, ), ;, scalingH, =, in, ., readDouble, (, ), ;, referenceTime, =]
[{, final, double, t, =, readBaseExternal, (, in, ), ;, scalingH, =, in, ., readDouble, (, ), ;, referenceTime, =]
[scalingH, =, in, ., readDouble, (, ), ;, referenceTime, =, in, ., readDouble, (, ), ;, final, int, n, =]
[scalingH, =, in, ., readDouble, (, ), ;, referenceTime, =, in, ., readDouble, (, ), ;, final, int, n, =]
[=, in, ., readDouble, (, ), ;, referenceTime, =, in, ., readDouble, (, ), ;, final, int, n, =, (]
[=, in, ., readDouble, (, ), ;, referenceTime, =, in, ., readDouble, (, ), ;, final, int, n, =, (]
[., readDouble, (, ), ;, referenceTime, =, in, ., readDouble, (, ), ;, final, int, n, =, (, currentState, ==]
[), ;, referenceTime, =, in, ., readDouble, (, ), ;, final, int, n, =, (, currentState, ==, null, ), ?]
[;, referenceTime, =, in, ., readDouble, (, ), ;, final, int, n, =, (, currentState, ==, null, ), ?, -]
[=, in, ., readDouble, (, ), ;, final, int, n, =, (, currentState, ==, null, ), ?, -, 1, :]
[=, in, ., readDouble, (, ), ;, final, int, n, =, (, currentState, ==, null, ), ?, -, 1, :]
[int, n, =, (, currentState, ==, null, ), ?, -, 1, :, currentState, ., length, ;, final, boolean, hasScaled, =]
[int, n, =, (, currentState, ==, null, ), ?, -, 1, :, currentState, ., length, ;, final, boolean, hasScaled, =]
[?, -, 1, :, currentState, ., length, ;, final, boolean, hasScaled, =, in, ., readBoolean, (, ), ;, if, (]
[:, currentState, ., length, ;, final, boolean, hasScaled, =, in, ., readBoolean, (, ), ;, if, (, hasScaled, ), {]
[., length, ;, final, boolean, hasScaled, =, in, ., readBoolean, (, ), ;, if, (, hasScaled, ), {, scaled, =]
[final, boolean, hasScaled, =, in, ., readBoolean, (, ), ;, if, (, hasScaled, ), {, scaled, =, new, double, []
[), ;, if, (, hasScaled, ), {, scaled, =, new, double, [, n, ], ;, for, (, int, j, =]
[if, (, hasScaled, ), {, scaled, =, new, double, [, n, ], ;, for, (, int, j, =, 0, ;]
[if, (, hasScaled, ), {, scaled, =, new, double, [, n, ], ;, for, (, int, j, =, 0, ;]
[hasScaled, ), {, scaled, =, new, double, [, n, ], ;, for, (, int, j, =, 0, ;, j, <]
[{, scaled, =, new, double, [, n, ], ;, for, (, int, j, =, 0, ;, j, <, n, ;]
[scaled, =, new, double, [, n, ], ;, for, (, int, j, =, 0, ;, j, <, n, ;, ++]
[double, [, n, ], ;, for, (, int, j, =, 0, ;, j, <, n, ;, ++, j, ), {]
[double, [, n, ], ;, for, (, int, j, =, 0, ;, j, <, n, ;, ++, j, ), {]
[n, ], ;, for, (, int, j, =, 0, ;, j, <, n, ;, ++, j, ), {, scaled, []
[for, (, int, j, =, 0, ;, j, <, n, ;, ++, j, ), {, scaled, [, j, ], =]
[for, (, int, j, =, 0, ;, j, <, n, ;, ++, j, ), {, scaled, [, j, ], =]
[;, ++, j, ), {, scaled, [, j, ], =, in, ., readDouble, (, ), ;, }, }, else, {]
[j, ), {, scaled, [, j, ], =, in, ., readDouble, (, ), ;, }, }, else, {, scaled, =]
[=, in, ., readDouble, (, ), ;, }, }, else, {, scaled, =, null, ;, }, final, boolean, hasNordsieck, =]
[=, in, ., readDouble, (, ), ;, }, }, else, {, scaled, =, null, ;, }, final, boolean, hasNordsieck, =]
[}, else, {, scaled, =, null, ;, }, final, boolean, hasNordsieck, =, in, ., readBoolean, (, ), ;, if, (]
[scaled, =, null, ;, }, final, boolean, hasNordsieck, =, in, ., readBoolean, (, ), ;, if, (, hasNordsieck, ), {]
[null, ;, }, final, boolean, hasNordsieck, =, in, ., readBoolean, (, ), ;, if, (, hasNordsieck, ), {, nordsieck, =]
[final, boolean, hasNordsieck, =, in, ., readBoolean, (, ), ;, if, (, hasNordsieck, ), {, nordsieck, =, (, Array2DRowRealMatrix, )]
[final, boolean, hasNordsieck, =, in, ., readBoolean, (, ), ;, if, (, hasNordsieck, ), {, nordsieck, =, (, Array2DRowRealMatrix, )]
[;, if, (, hasNordsieck, ), {, nordsieck, =, (, Array2DRowRealMatrix, ), in, ., readObject, (, ), ;, }, else, {]
[(, hasNordsieck, ), {, nordsieck, =, (, Array2DRowRealMatrix, ), in, ., readObject, (, ), ;, }, else, {, nordsieck, =]
[=, (, Array2DRowRealMatrix, ), in, ., readObject, (, ), ;, }, else, {, nordsieck, =, null, ;, }, if, (]
[=, (, Array2DRowRealMatrix, ), in, ., readObject, (, ), ;, }, else, {, nordsieck, =, null, ;, }, if, (]
[Array2DRowRealMatrix, ), in, ., readObject, (, ), ;, }, else, {, nordsieck, =, null, ;, }, if, (, hasScaled, &&]
[., readObject, (, ), ;, }, else, {, nordsieck, =, null, ;, }, if, (, hasScaled, &&, hasNordsieck, ), {]
[(, ), ;, }, else, {, nordsieck, =, null, ;, }, if, (, hasScaled, &&, hasNordsieck, ), {, stateVariation, =]
[}, else, {, nordsieck, =, null, ;, }, if, (, hasScaled, &&, hasNordsieck, ), {, stateVariation, =, new, double, []
[nordsieck, =, null, ;, }, if, (, hasScaled, &&, hasNordsieck, ), {, stateVariation, =, new, double, [, n, ], ;]
[null, ;, }, if, (, hasScaled, &&, hasNordsieck, ), {, stateVariation, =, new, double, [, n, ], ;, setInterpolatedTime, (]
[&&, hasNordsieck, ), {, stateVariation, =, new, double, [, n, ], ;, setInterpolatedTime, (, t, ), ;, }, else, {]
[), {, stateVariation, =, new, double, [, n, ], ;, setInterpolatedTime, (, t, ), ;, }, else, {, stateVariation, =]
