[ImmutablePair, <, L, ,, R, >, extends, Pair, <, L, ,, R, >, {, private, static, final, long, serialVersionUID, =]
[R, >, ImmutablePair, <, L, ,, R, >, of, (, final, L, left, ,, final, R, right, ), {, return]
[of, (, final, L, left, ,, final, R, right, ), {, return, new, ImmutablePair, <, L, ,, R, >, (]
[final, L, left, ,, final, R, right, ), {, return, new, ImmutablePair, <, L, ,, R, >, (, left, ,]
[right, ), ;, }, public, ImmutablePair, (, final, L, left, ,, final, R, right, ), {, super, (, ), ;]
[right, ), ;, }, public, ImmutablePair, (, final, L, left, ,, final, R, right, ), {, super, (, ), ;]
[public, ImmutablePair, (, final, L, left, ,, final, R, right, ), {, super, (, ), ;, this, ., left, =]
[(, final, L, left, ,, final, R, right, ), {, super, (, ), ;, this, ., left, =, left, ;]
[(, final, L, left, ,, final, R, right, ), {, super, (, ), ;, this, ., left, =, left, ;]
[,, final, R, right, ), {, super, (, ), ;, this, ., left, =, left, ;, this, ., right, =]
[left, =, left, ;, this, ., right, =, right, ;, }, @, Override, public, L, getLeft, (, ), {, return]
[Override, public, L, getLeft, (, ), {, return, left, ;, }, @, Override, public, R, getRight, (, ), {, return]
[getRight, (, ), {, return, right, ;, }, @, Override, public, R, setValue, (, final, R, value, ), {, throw]
