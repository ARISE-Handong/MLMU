[;, static, final, DiagnosticType, EVAL_USE, =, DiagnosticType, ., error, (, "JSC_EVAL_USE", ,, "\"eval\" cannot be used in Caja", ), ;, static, final, DiagnosticType, EVAL_DECLARATION, =]
[., warning, (, "JSC_UNKNOWN_VARIABLE", ,, "unknown variable {0}", ), ;, static, final, DiagnosticType, EVAL_USE, =, DiagnosticType, ., error, (, "JSC_EVAL_USE", ,, "\"eval\" cannot be used in Caja"]
[,, "unknown variable {0}", ), ;, static, final, DiagnosticType, EVAL_USE, =, DiagnosticType, ., error, (, "JSC_EVAL_USE", ,, "\"eval\" cannot be used in Caja", ), ;, static, final]
[), ;, static, final, DiagnosticType, EVAL_USE, =, DiagnosticType, ., error, (, "JSC_EVAL_USE", ,, "\"eval\" cannot be used in Caja", ), ;, static, final, DiagnosticType, EVAL_DECLARATION]
[;, static, final, DiagnosticType, EVAL_DECLARATION, =, DiagnosticType, ., warning, (, "JSC_EVAL_DECLARATION", ,, "\"eval\" cannot be redeclared in ES5 strict mode", ), ;, static, final, DiagnosticType, EVAL_ASSIGNMENT, =]
[., error, (, "JSC_EVAL_USE", ,, "\"eval\" cannot be used in Caja", ), ;, static, final, DiagnosticType, EVAL_DECLARATION, =, DiagnosticType, ., warning, (, "JSC_EVAL_DECLARATION", ,, "\"eval\" cannot be redeclared in ES5 strict mode"]
[,, "\"eval\" cannot be used in Caja", ), ;, static, final, DiagnosticType, EVAL_DECLARATION, =, DiagnosticType, ., warning, (, "JSC_EVAL_DECLARATION", ,, "\"eval\" cannot be redeclared in ES5 strict mode", ), ;, static, final]
[), ;, static, final, DiagnosticType, EVAL_DECLARATION, =, DiagnosticType, ., warning, (, "JSC_EVAL_DECLARATION", ,, "\"eval\" cannot be redeclared in ES5 strict mode", ), ;, static, final, DiagnosticType, EVAL_ASSIGNMENT]
[;, static, final, DiagnosticType, EVAL_ASSIGNMENT, =, DiagnosticType, ., warning, (, "JSC_EVAL_ASSIGNMENT", ,, "the \"eval\" object cannot be reassigned in ES5 strict mode", ), ;, static, final, DiagnosticType, ARGUMENTS_DECLARATION, =]
[., warning, (, "JSC_EVAL_DECLARATION", ,, "\"eval\" cannot be redeclared in ES5 strict mode", ), ;, static, final, DiagnosticType, EVAL_ASSIGNMENT, =, DiagnosticType, ., warning, (, "JSC_EVAL_ASSIGNMENT", ,, "the \"eval\" object cannot be reassigned in ES5 strict mode"]
[,, "\"eval\" cannot be redeclared in ES5 strict mode", ), ;, static, final, DiagnosticType, EVAL_ASSIGNMENT, =, DiagnosticType, ., warning, (, "JSC_EVAL_ASSIGNMENT", ,, "the \"eval\" object cannot be reassigned in ES5 strict mode", ), ;, static, final]
[), ;, static, final, DiagnosticType, EVAL_ASSIGNMENT, =, DiagnosticType, ., warning, (, "JSC_EVAL_ASSIGNMENT", ,, "the \"eval\" object cannot be reassigned in ES5 strict mode", ), ;, static, final, DiagnosticType, ARGUMENTS_DECLARATION]
[;, static, final, DiagnosticType, ARGUMENTS_DECLARATION, =, DiagnosticType, ., warning, (, "JSC_ARGUMENTS_DECLARATION", ,, "\"arguments\" cannot be redeclared in ES5 strict mode", ), ;, static, final, DiagnosticType, ARGUMENTS_ASSIGNMENT, =]
[., warning, (, "JSC_EVAL_ASSIGNMENT", ,, "the \"eval\" object cannot be reassigned in ES5 strict mode", ), ;, static, final, DiagnosticType, ARGUMENTS_DECLARATION, =, DiagnosticType, ., warning, (, "JSC_ARGUMENTS_DECLARATION", ,, "\"arguments\" cannot be redeclared in ES5 strict mode"]
[,, "the \"eval\" object cannot be reassigned in ES5 strict mode", ), ;, static, final, DiagnosticType, ARGUMENTS_DECLARATION, =, DiagnosticType, ., warning, (, "JSC_ARGUMENTS_DECLARATION", ,, "\"arguments\" cannot be redeclared in ES5 strict mode", ), ;, static, final]
[), ;, static, final, DiagnosticType, ARGUMENTS_DECLARATION, =, DiagnosticType, ., warning, (, "JSC_ARGUMENTS_DECLARATION", ,, "\"arguments\" cannot be redeclared in ES5 strict mode", ), ;, static, final, DiagnosticType, ARGUMENTS_ASSIGNMENT]
[;, static, final, DiagnosticType, ARGUMENTS_ASSIGNMENT, =, DiagnosticType, ., warning, (, "JSC_ARGUMENTS_ASSIGNMENT", ,, "the \"arguments\" object cannot be reassigned in ES5 strict mode", ), ;, static, final, DiagnosticType, DELETE_VARIABLE, =]
[., warning, (, "JSC_ARGUMENTS_DECLARATION", ,, "\"arguments\" cannot be redeclared in ES5 strict mode", ), ;, static, final, DiagnosticType, ARGUMENTS_ASSIGNMENT, =, DiagnosticType, ., warning, (, "JSC_ARGUMENTS_ASSIGNMENT", ,, "the \"arguments\" object cannot be reassigned in ES5 strict mode"]
[,, "\"arguments\" cannot be redeclared in ES5 strict mode", ), ;, static, final, DiagnosticType, ARGUMENTS_ASSIGNMENT, =, DiagnosticType, ., warning, (, "JSC_ARGUMENTS_ASSIGNMENT", ,, "the \"arguments\" object cannot be reassigned in ES5 strict mode", ), ;, static, final]
[), ;, static, final, DiagnosticType, ARGUMENTS_ASSIGNMENT, =, DiagnosticType, ., warning, (, "JSC_ARGUMENTS_ASSIGNMENT", ,, "the \"arguments\" object cannot be reassigned in ES5 strict mode", ), ;, static, final, DiagnosticType, DELETE_VARIABLE]
[;, static, final, DiagnosticType, DELETE_VARIABLE, =, DiagnosticType, ., warning, (, "JSC_DELETE_VARIABLE", ,, "variables, functions, and arguments cannot be deleted in ", +, "ES5 strict mode", ), ;, static, final, DiagnosticType]
[., warning, (, "JSC_ARGUMENTS_ASSIGNMENT", ,, "the \"arguments\" object cannot be reassigned in ES5 strict mode", ), ;, static, final, DiagnosticType, DELETE_VARIABLE, =, DiagnosticType, ., warning, (, "JSC_DELETE_VARIABLE", ,, "variables, functions, and arguments cannot be deleted in "]
[,, "the \"arguments\" object cannot be reassigned in ES5 strict mode", ), ;, static, final, DiagnosticType, DELETE_VARIABLE, =, DiagnosticType, ., warning, (, "JSC_DELETE_VARIABLE", ,, "variables, functions, and arguments cannot be deleted in ", +, "ES5 strict mode", ), ;]
[), ;, static, final, DiagnosticType, DELETE_VARIABLE, =, DiagnosticType, ., warning, (, "JSC_DELETE_VARIABLE", ,, "variables, functions, and arguments cannot be deleted in ", +, "ES5 strict mode", ), ;, static, final]
[;, static, final, DiagnosticType, ILLEGAL_NAME, =, DiagnosticType, ., error, (, "JSC_ILLEGAL_NAME", ,, "identifiers ending in '__' cannot be used in Caja", ), ;, static, final, DiagnosticType, DUPLICATE_OBJECT_KEY, =]
[., warning, (, "JSC_DELETE_VARIABLE", ,, "variables, functions, and arguments cannot be deleted in ", +, "ES5 strict mode", ), ;, static, final, DiagnosticType, ILLEGAL_NAME, =, DiagnosticType, ., error, (, "JSC_ILLEGAL_NAME"]
[,, "variables, functions, and arguments cannot be deleted in ", +, "ES5 strict mode", ), ;, static, final, DiagnosticType, ILLEGAL_NAME, =, DiagnosticType, ., error, (, "JSC_ILLEGAL_NAME", ,, "identifiers ending in '__' cannot be used in Caja", ), ;]
[), ;, static, final, DiagnosticType, ILLEGAL_NAME, =, DiagnosticType, ., error, (, "JSC_ILLEGAL_NAME", ,, "identifiers ending in '__' cannot be used in Caja", ), ;, static, final, DiagnosticType, DUPLICATE_OBJECT_KEY]
[+, "ES5 strict mode", ), ;, static, final, DiagnosticType, ILLEGAL_NAME, =, DiagnosticType, ., error, (, "JSC_ILLEGAL_NAME", ,, "identifiers ending in '__' cannot be used in Caja", ), ;, static, final]
[), ;, static, final, DiagnosticType, ILLEGAL_NAME, =, DiagnosticType, ., error, (, "JSC_ILLEGAL_NAME", ,, "identifiers ending in '__' cannot be used in Caja", ), ;, static, final, DiagnosticType, DUPLICATE_OBJECT_KEY]
[;, static, final, DiagnosticType, DUPLICATE_OBJECT_KEY, =, DiagnosticType, ., warning, (, "JSC_DUPLICATE_OBJECT_KEY", ,, "object literals cannot contain duplicate keys in ES5 strict mode", ), ;, static, final, DiagnosticType, BAD_FUNCTION_DECLARATION, =]
[., error, (, "JSC_ILLEGAL_NAME", ,, "identifiers ending in '__' cannot be used in Caja", ), ;, static, final, DiagnosticType, DUPLICATE_OBJECT_KEY, =, DiagnosticType, ., warning, (, "JSC_DUPLICATE_OBJECT_KEY", ,, "object literals cannot contain duplicate keys in ES5 strict mode"]
[,, "identifiers ending in '__' cannot be used in Caja", ), ;, static, final, DiagnosticType, DUPLICATE_OBJECT_KEY, =, DiagnosticType, ., warning, (, "JSC_DUPLICATE_OBJECT_KEY", ,, "object literals cannot contain duplicate keys in ES5 strict mode", ), ;, static, final]
[), ;, static, final, DiagnosticType, DUPLICATE_OBJECT_KEY, =, DiagnosticType, ., warning, (, "JSC_DUPLICATE_OBJECT_KEY", ,, "object literals cannot contain duplicate keys in ES5 strict mode", ), ;, static, final, DiagnosticType, BAD_FUNCTION_DECLARATION]
[;, static, final, DiagnosticType, BAD_FUNCTION_DECLARATION, =, DiagnosticType, ., error, (, "JSC_BAD_FUNCTION_DECLARATION", ,, "functions can only be declared at top level or immediately within ", +, "another function in ES5 strict mode", ), ;, private, final, AbstractCompiler]
[., warning, (, "JSC_DUPLICATE_OBJECT_KEY", ,, "object literals cannot contain duplicate keys in ES5 strict mode", ), ;, static, final, DiagnosticType, BAD_FUNCTION_DECLARATION, =, DiagnosticType, ., error, (, "JSC_BAD_FUNCTION_DECLARATION", ,, "functions can only be declared at top level or immediately within "]
[,, "object literals cannot contain duplicate keys in ES5 strict mode", ), ;, static, final, DiagnosticType, BAD_FUNCTION_DECLARATION, =, DiagnosticType, ., error, (, "JSC_BAD_FUNCTION_DECLARATION", ,, "functions can only be declared at top level or immediately within ", +, "another function in ES5 strict mode", ), ;]
[), ;, static, final, DiagnosticType, BAD_FUNCTION_DECLARATION, =, DiagnosticType, ., error, (, "JSC_BAD_FUNCTION_DECLARATION", ,, "functions can only be declared at top level or immediately within ", +, "another function in ES5 strict mode", ), ;, private, final]
[;, private, final, AbstractCompiler, compiler, ;, private, final, boolean, noVarCheck, ;, private, final, boolean, noCajaChecks, ;, StrictModeCheck, (, AbstractCompiler, compiler]
[., error, (, "JSC_BAD_FUNCTION_DECLARATION", ,, "functions can only be declared at top level or immediately within ", +, "another function in ES5 strict mode", ), ;, private, final, AbstractCompiler, compiler, ;, private, final, boolean, noVarCheck, ;]
[,, "functions can only be declared at top level or immediately within ", +, "another function in ES5 strict mode", ), ;, private, final, AbstractCompiler, compiler, ;, private, final, boolean, noVarCheck, ;, private, final, boolean, noCajaChecks]
[), ;, private, final, AbstractCompiler, compiler, ;, private, final, boolean, noVarCheck, ;, private, final, boolean, noCajaChecks, ;, StrictModeCheck, (, AbstractCompiler]
[+, "another function in ES5 strict mode", ), ;, private, final, AbstractCompiler, compiler, ;, private, final, boolean, noVarCheck, ;, private, final, boolean, noCajaChecks, ;, StrictModeCheck]
[), ;, private, final, AbstractCompiler, compiler, ;, private, final, boolean, noVarCheck, ;, private, final, boolean, noCajaChecks, ;, StrictModeCheck, (, AbstractCompiler]
[,, false, ,, false, ), ;, }, StrictModeCheck, (, AbstractCompiler, compiler, ,, boolean, noVarCheck, ,, boolean, noCajaChecks, ), {, this]
[,, false, ), ;, }, StrictModeCheck, (, AbstractCompiler, compiler, ,, boolean, noVarCheck, ,, boolean, noCajaChecks, ), {, this, ., compiler]
[), ;, }, StrictModeCheck, (, AbstractCompiler, compiler, ,, boolean, noVarCheck, ,, boolean, noCajaChecks, ), {, this, ., compiler, =, compiler]
[=, compiler, ;, this, ., noVarCheck, =, noVarCheck, ;, this, ., noCajaChecks, =, noCajaChecks, ;, }, @, Override, public, void]
[., compiler, =, compiler, ;, this, ., noVarCheck, =, noVarCheck, ;, this, ., noCajaChecks, =, noCajaChecks, ;, }, @, Override]
[;, this, ., noVarCheck, =, noVarCheck, ;, this, ., noCajaChecks, =, noCajaChecks, ;, }, @, Override, public, void, process, (]
[=, noVarCheck, ;, this, ., noCajaChecks, =, noCajaChecks, ;, }, @, Override, public, void, process, (, Node, externs, ,, Node]
[., noVarCheck, =, noVarCheck, ;, this, ., noCajaChecks, =, noCajaChecks, ;, }, @, Override, public, void, process, (, Node, externs]
[;, this, ., noCajaChecks, =, noCajaChecks, ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, )]
[=, noCajaChecks, ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, NodeTraversal, ., traverseRoots]
[., noCajaChecks, =, noCajaChecks, ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, NodeTraversal]
[;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, NodeTraversal, ., traverseRoots, (, compiler]
[;, NodeTraversal, ., traverse, (, compiler, ,, root, ,, new, NonExternChecks, (, ), ), ;, }, @, Override, public, void]
[., traverseRoots, (, compiler, ,, Lists, ., newArrayList, (, externs, ,, root, ), ,, this, ), ;, NodeTraversal, ., traverse]
[,, Lists, ., newArrayList, (, externs, ,, root, ), ,, this, ), ;, NodeTraversal, ., traverse, (, compiler, ,, root]
[,, this, ), ;, NodeTraversal, ., traverse, (, compiler, ,, root, ,, new, NonExternChecks, (, ), ), ;, }, @]
[., newArrayList, (, externs, ,, root, ), ,, this, ), ;, NodeTraversal, ., traverse, (, compiler, ,, root, ,, new]
[,, root, ), ,, this, ), ;, NodeTraversal, ., traverse, (, compiler, ,, root, ,, new, NonExternChecks, (, ), )]
[), ,, this, ), ;, NodeTraversal, ., traverse, (, compiler, ,, root, ,, new, NonExternChecks, (, ), ), ;, }]
[), ;, NodeTraversal, ., traverse, (, compiler, ,, root, ,, new, NonExternChecks, (, ), ), ;, }, @, Override, public]
[;, }, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (]
[., traverse, (, compiler, ,, root, ,, new, NonExternChecks, (, ), ), ;, }, @, Override, public, void, visit, (]
[,, root, ,, new, NonExternChecks, (, ), ), ;, }, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node]
[,, new, NonExternChecks, (, ), ), ;, }, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,]
[), ;, }, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if]
[), {, checkFunctionUse, (, t, ,, n, ), ;, }, else, if, (, n, ., isName, (, ), ), {]
[., isFunction, (, ), ), {, checkFunctionUse, (, t, ,, n, ), ;, }, else, if, (, n, ., isName]
[;, }, else, if, (, n, ., isName, (, ), ), {, if, (, !, isDeclaration, (, n, ), )]
[,, n, ), ;, }, else, if, (, n, ., isName, (, ), ), {, if, (, !, isDeclaration, (]
[), ;, }, else, if, (, n, ., isName, (, ), ), {, if, (, !, isDeclaration, (, n, )]
[), {, if, (, !, isDeclaration, (, n, ), ), {, checkNameUse, (, t, ,, n, ), ;, }, }]
[., isName, (, ), ), {, if, (, !, isDeclaration, (, n, ), ), {, checkNameUse, (, t, ,, n]
[), {, checkNameUse, (, t, ,, n, ), ;, }, }, else, if, (, n, ., isAssign, (, ), )]
[), {, checkNameUse, (, t, ,, n, ), ;, }, }, else, if, (, n, ., isAssign, (, ), )]
[), ), {, checkNameUse, (, t, ,, n, ), ;, }, }, else, if, (, n, ., isAssign, (, )]
[;, }, }, else, if, (, n, ., isAssign, (, ), ), {, checkAssignment, (, t, ,, n, ), ;]
[,, n, ), ;, }, }, else, if, (, n, ., isAssign, (, ), ), {, checkAssignment, (, t, ,]
[), ;, }, }, else, if, (, n, ., isAssign, (, ), ), {, checkAssignment, (, t, ,, n, )]
[), {, checkAssignment, (, t, ,, n, ), ;, }, else, if, (, n, ., isDelProp, (, ), ), {]
[., isAssign, (, ), ), {, checkAssignment, (, t, ,, n, ), ;, }, else, if, (, n, ., isDelProp]
[;, }, else, if, (, n, ., isDelProp, (, ), ), {, checkDelete, (, t, ,, n, ), ;, }]
[,, n, ), ;, }, else, if, (, n, ., isDelProp, (, ), ), {, checkDelete, (, t, ,, n]
[), ;, }, else, if, (, n, ., isDelProp, (, ), ), {, checkDelete, (, t, ,, n, ), ;]
[), {, checkDelete, (, t, ,, n, ), ;, }, else, if, (, n, ., isObjectLit, (, ), ), {]
[., isDelProp, (, ), ), {, checkDelete, (, t, ,, n, ), ;, }, else, if, (, n, ., isObjectLit]
[;, }, else, if, (, n, ., isObjectLit, (, ), ), {, checkObjectLiteral, (, t, ,, n, ), ;, }]
[,, n, ), ;, }, else, if, (, n, ., isObjectLit, (, ), ), {, checkObjectLiteral, (, t, ,, n]
[), ;, }, else, if, (, n, ., isObjectLit, (, ), ), {, checkObjectLiteral, (, t, ,, n, ), ;]
[), {, checkObjectLiteral, (, t, ,, n, ), ;, }, else, if, (, n, ., isLabel, (, ), ), {]
[., isObjectLit, (, ), ), {, checkObjectLiteral, (, t, ,, n, ), ;, }, else, if, (, n, ., isLabel]
[;, }, else, if, (, n, ., isLabel, (, ), ), {, checkLabel, (, t, ,, n, ), ;, }]
[,, n, ), ;, }, else, if, (, n, ., isLabel, (, ), ), {, checkLabel, (, t, ,, n]
[), ;, }, else, if, (, n, ., isLabel, (, ), ), {, checkLabel, (, t, ,, n, ), ;]
[), {, checkLabel, (, t, ,, n, ), ;, }, }, private, void, checkFunctionUse, (, NodeTraversal, t, ,, Node, n]
[., isLabel, (, ), ), {, checkLabel, (, t, ,, n, ), ;, }, }, private, void, checkFunctionUse, (, NodeTraversal]
[;, }, }, private, void, checkFunctionUse, (, NodeTraversal, t, ,, Node, n, ), {, if, (, NodeUtil, ., isFunctionDeclaration, (]
[,, n, ), ;, }, }, private, void, checkFunctionUse, (, NodeTraversal, t, ,, Node, n, ), {, if, (, NodeUtil]
[), ;, }, }, private, void, checkFunctionUse, (, NodeTraversal, t, ,, Node, n, ), {, if, (, NodeUtil, ., isFunctionDeclaration]
[), {, t, ., report, (, n, ,, BAD_FUNCTION_DECLARATION, ), ;, }, }, private, static, boolean, isDeclaration, (, Node, n]
[&&, !, NodeUtil, ., isHoistedFunctionDeclaration, (, n, ), ), {, t, ., report, (, n, ,, BAD_FUNCTION_DECLARATION, ), ;, }]
[., isFunctionDeclaration, (, n, ), &&, !, NodeUtil, ., isHoistedFunctionDeclaration, (, n, ), ), {, t, ., report, (, n]
[), &&, !, NodeUtil, ., isHoistedFunctionDeclaration, (, n, ), ), {, t, ., report, (, n, ,, BAD_FUNCTION_DECLARATION, ), ;]
[), {, t, ., report, (, n, ,, BAD_FUNCTION_DECLARATION, ), ;, }, }, private, static, boolean, isDeclaration, (, Node, n]
[), {, t, ., report, (, n, ,, BAD_FUNCTION_DECLARATION, ), ;, }, }, private, static, boolean, isDeclaration, (, Node, n]
[., isHoistedFunctionDeclaration, (, n, ), ), {, t, ., report, (, n, ,, BAD_FUNCTION_DECLARATION, ), ;, }, }, private, static]
[), ), {, t, ., report, (, n, ,, BAD_FUNCTION_DECLARATION, ), ;, }, }, private, static, boolean, isDeclaration, (, Node]
[;, }, }, private, static, boolean, isDeclaration, (, Node, n, ), {, switch, (, n, ., getParent, (, ), .]
[., report, (, n, ,, BAD_FUNCTION_DECLARATION, ), ;, }, }, private, static, boolean, isDeclaration, (, Node, n, ), {, switch]
[,, BAD_FUNCTION_DECLARATION, ), ;, }, }, private, static, boolean, isDeclaration, (, Node, n, ), {, switch, (, n, ., getParent]
[), ;, }, }, private, static, boolean, isDeclaration, (, Node, n, ), {, switch, (, n, ., getParent, (, )]
[), {, case, Token, ., VAR, :, case, Token, ., FUNCTION, :, case, Token, ., CATCH, :, return, true, ;]
[., getType, (, ), ), {, case, Token, ., VAR, :, case, Token, ., FUNCTION, :, case, Token, ., CATCH]
[., getParent, (, ), ., getType, (, ), ), {, case, Token, ., VAR, :, case, Token, ., FUNCTION, :]
[:, case, Token, ., FUNCTION, :, case, Token, ., CATCH, :, return, true, ;, case, Token, ., PARAM_LIST, :, return]
[., VAR, :, case, Token, ., FUNCTION, :, case, Token, ., CATCH, :, return, true, ;, case, Token, ., PARAM_LIST]
[:, case, Token, ., CATCH, :, return, true, ;, case, Token, ., PARAM_LIST, :, return, n, ., getParent, (, )]
[., FUNCTION, :, case, Token, ., CATCH, :, return, true, ;, case, Token, ., PARAM_LIST, :, return, n, ., getParent]
[:, return, true, ;, case, Token, ., PARAM_LIST, :, return, n, ., getParent, (, ), ., getParent, (, ), .]
[., CATCH, :, return, true, ;, case, Token, ., PARAM_LIST, :, return, n, ., getParent, (, ), ., getParent, (]
[;, case, Token, ., PARAM_LIST, :, return, n, ., getParent, (, ), ., getParent, (, ), ., isFunction, (, )]
[:, return, n, ., getParent, (, ), ., getParent, (, ), ., isFunction, (, ), ;, default, :, return, false]
[., PARAM_LIST, :, return, n, ., getParent, (, ), ., getParent, (, ), ., isFunction, (, ), ;, default, :]
[;, default, :, return, false, ;, }, }, private, void, checkNameUse, (, NodeTraversal, t, ,, Node, n, ), {, Var]
[., isFunction, (, ), ;, default, :, return, false, ;, }, }, private, void, checkNameUse, (, NodeTraversal, t, ,, Node]
[., getParent, (, ), ., isFunction, (, ), ;, default, :, return, false, ;, }, }, private, void, checkNameUse, (]
[., getParent, (, ), ., getParent, (, ), ., isFunction, (, ), ;, default, :, return, false, ;, }, }]
[;, }, }, private, void, checkNameUse, (, NodeTraversal, t, ,, Node, n, ), {, Var, v, =, t, ., getScope]
[;, if, (, v, ==, null, ), {, if, (, !, noVarCheck, ), {, t, ., report, (, n, ,]
[., getVar, (, n, ., getString, (, ), ), ;, if, (, v, ==, null, ), {, if, (, !]
[., getScope, (, ), ., getVar, (, n, ., getString, (, ), ), ;, if, (, v, ==, null, )]
[), ;, if, (, v, ==, null, ), {, if, (, !, noVarCheck, ), {, t, ., report, (, n]
[., getString, (, ), ), ;, if, (, v, ==, null, ), {, if, (, !, noVarCheck, ), {, t]
[), {, if, (, !, noVarCheck, ), {, t, ., report, (, n, ,, UNKNOWN_VARIABLE, ,, n, ., getString, (]
[==, null, ), {, if, (, !, noVarCheck, ), {, t, ., report, (, n, ,, UNKNOWN_VARIABLE, ,, n, .]
[), {, if, (, !, noVarCheck, ), {, t, ., report, (, n, ,, UNKNOWN_VARIABLE, ,, n, ., getString, (]
[), {, t, ., report, (, n, ,, UNKNOWN_VARIABLE, ,, n, ., getString, (, ), ), ;, }, }, if]
[), {, t, ., report, (, n, ,, UNKNOWN_VARIABLE, ,, n, ., getString, (, ), ), ;, }, }, if]
[;, }, }, if, (, !, noCajaChecks, ), {, if, (, "eval", ., equals, (, n, ., getString, (, )]
[., report, (, n, ,, UNKNOWN_VARIABLE, ,, n, ., getString, (, ), ), ;, }, }, if, (, !, noCajaChecks]
[,, UNKNOWN_VARIABLE, ,, n, ., getString, (, ), ), ;, }, }, if, (, !, noCajaChecks, ), {, if, (]
[,, n, ., getString, (, ), ), ;, }, }, if, (, !, noCajaChecks, ), {, if, (, "eval", .]
[), ;, }, }, if, (, !, noCajaChecks, ), {, if, (, "eval", ., equals, (, n, ., getString, (]
[., getString, (, ), ), ;, }, }, if, (, !, noCajaChecks, ), {, if, (, "eval", ., equals, (]
[), {, if, (, "eval", ., equals, (, n, ., getString, (, ), ), ), {, t, ., report, (]
[), {, if, (, "eval", ., equals, (, n, ., getString, (, ), ), ), {, t, ., report, (]
[), {, t, ., report, (, n, ,, EVAL_USE, ), ;, }, else, if, (, n, ., getString, (, )]
[., equals, (, n, ., getString, (, ), ), ), {, t, ., report, (, n, ,, EVAL_USE, ), ;]
[), ), {, t, ., report, (, n, ,, EVAL_USE, ), ;, }, else, if, (, n, ., getString, (]
[., getString, (, ), ), ), {, t, ., report, (, n, ,, EVAL_USE, ), ;, }, else, if, (]
[;, }, else, if, (, n, ., getString, (, ), ., endsWith, (, "__", ), ), {, t, ., report]
[., report, (, n, ,, EVAL_USE, ), ;, }, else, if, (, n, ., getString, (, ), ., endsWith, (]
[,, EVAL_USE, ), ;, }, else, if, (, n, ., getString, (, ), ., endsWith, (, "__", ), ), {]
[), ;, }, else, if, (, n, ., getString, (, ), ., endsWith, (, "__", ), ), {, t, .]
[), {, t, ., report, (, n, ,, ILLEGAL_NAME, ), ;, }, }, }, private, void, checkAssignment, (, NodeTraversal, t]
[., endsWith, (, "__", ), ), {, t, ., report, (, n, ,, ILLEGAL_NAME, ), ;, }, }, }, private]
[., getString, (, ), ., endsWith, (, "__", ), ), {, t, ., report, (, n, ,, ILLEGAL_NAME, ), ;]
[), ), {, t, ., report, (, n, ,, ILLEGAL_NAME, ), ;, }, }, }, private, void, checkAssignment, (, NodeTraversal]
[;, }, }, }, private, void, checkAssignment, (, NodeTraversal, t, ,, Node, n, ), {, if, (, n, ., getFirstChild]
[., report, (, n, ,, ILLEGAL_NAME, ), ;, }, }, }, private, void, checkAssignment, (, NodeTraversal, t, ,, Node, n]
[,, ILLEGAL_NAME, ), ;, }, }, }, private, void, checkAssignment, (, NodeTraversal, t, ,, Node, n, ), {, if, (]
[), ;, }, }, }, private, void, checkAssignment, (, NodeTraversal, t, ,, Node, n, ), {, if, (, n, .]
[), {, if, (, "arguments", ., equals, (, n, ., getFirstChild, (, ), ., getString, (, ), ), ), {]
[., isName, (, ), ), {, if, (, "arguments", ., equals, (, n, ., getFirstChild, (, ), ., getString, (]
[., getFirstChild, (, ), ., isName, (, ), ), {, if, (, "arguments", ., equals, (, n, ., getFirstChild, (]
[), {, t, ., report, (, n, ,, ARGUMENTS_ASSIGNMENT, ), ;, }, else, if, (, "eval", ., equals, (, n]
[., equals, (, n, ., getFirstChild, (, ), ., getString, (, ), ), ), {, t, ., report, (, n]
[), ), {, t, ., report, (, n, ,, ARGUMENTS_ASSIGNMENT, ), ;, }, else, if, (, "eval", ., equals, (]
[., getString, (, ), ), ), {, t, ., report, (, n, ,, ARGUMENTS_ASSIGNMENT, ), ;, }, else, if, (]
[., getFirstChild, (, ), ., getString, (, ), ), ), {, t, ., report, (, n, ,, ARGUMENTS_ASSIGNMENT, ), ;]
[;, }, else, if, (, "eval", ., equals, (, n, ., getFirstChild, (, ), ., getString, (, ), ), )]
[., report, (, n, ,, ARGUMENTS_ASSIGNMENT, ), ;, }, else, if, (, "eval", ., equals, (, n, ., getFirstChild, (]
[,, ARGUMENTS_ASSIGNMENT, ), ;, }, else, if, (, "eval", ., equals, (, n, ., getFirstChild, (, ), ., getString, (]
[), ;, }, else, if, (, "eval", ., equals, (, n, ., getFirstChild, (, ), ., getString, (, ), )]
[), {, if, (, noCajaChecks, ), {, t, ., report, (, n, ,, EVAL_ASSIGNMENT, ), ;, }, }, }, }]
[., equals, (, n, ., getFirstChild, (, ), ., getString, (, ), ), ), {, if, (, noCajaChecks, ), {]
[), ), {, if, (, noCajaChecks, ), {, t, ., report, (, n, ,, EVAL_ASSIGNMENT, ), ;, }, }, }]
[., getString, (, ), ), ), {, if, (, noCajaChecks, ), {, t, ., report, (, n, ,, EVAL_ASSIGNMENT, )]
[., getFirstChild, (, ), ., getString, (, ), ), ), {, if, (, noCajaChecks, ), {, t, ., report, (]
[), {, t, ., report, (, n, ,, EVAL_ASSIGNMENT, ), ;, }, }, }, }, private, void, checkDelete, (, NodeTraversal]
[;, }, }, }, }, private, void, checkDelete, (, NodeTraversal, t, ,, Node, n, ), {, if, (, n, .]
[., report, (, n, ,, EVAL_ASSIGNMENT, ), ;, }, }, }, }, private, void, checkDelete, (, NodeTraversal, t, ,, Node]
[,, EVAL_ASSIGNMENT, ), ;, }, }, }, }, private, void, checkDelete, (, NodeTraversal, t, ,, Node, n, ), {, if]
[), ;, }, }, }, }, private, void, checkDelete, (, NodeTraversal, t, ,, Node, n, ), {, if, (, n]
[), {, Var, v, =, t, ., getScope, (, ), ., getVar, (, n, ., getFirstChild, (, ), ., getString]
[., isName, (, ), ), {, Var, v, =, t, ., getScope, (, ), ., getVar, (, n, ., getFirstChild]
[., getFirstChild, (, ), ., isName, (, ), ), {, Var, v, =, t, ., getScope, (, ), ., getVar]
[;, if, (, v, !=, null, ), {, t, ., report, (, n, ,, DELETE_VARIABLE, ), ;, }, }, }]
[., getVar, (, n, ., getFirstChild, (, ), ., getString, (, ), ), ;, if, (, v, !=, null, )]
[., getScope, (, ), ., getVar, (, n, ., getFirstChild, (, ), ., getString, (, ), ), ;, if, (]
[), ;, if, (, v, !=, null, ), {, t, ., report, (, n, ,, DELETE_VARIABLE, ), ;, }, }]
[., getString, (, ), ), ;, if, (, v, !=, null, ), {, t, ., report, (, n, ,, DELETE_VARIABLE]
[., getFirstChild, (, ), ., getString, (, ), ), ;, if, (, v, !=, null, ), {, t, ., report]
[), {, t, ., report, (, n, ,, DELETE_VARIABLE, ), ;, }, }, }, private, void, checkObjectLiteral, (, NodeTraversal, t]
[!=, null, ), {, t, ., report, (, n, ,, DELETE_VARIABLE, ), ;, }, }, }, private, void, checkObjectLiteral, (]
[), {, t, ., report, (, n, ,, DELETE_VARIABLE, ), ;, }, }, }, private, void, checkObjectLiteral, (, NodeTraversal, t]
[;, }, }, }, private, void, checkObjectLiteral, (, NodeTraversal, t, ,, Node, n, ), {, Set, <, String, >, getters]
[., report, (, n, ,, DELETE_VARIABLE, ), ;, }, }, }, private, void, checkObjectLiteral, (, NodeTraversal, t, ,, Node, n]
[,, DELETE_VARIABLE, ), ;, }, }, }, private, void, checkObjectLiteral, (, NodeTraversal, t, ,, Node, n, ), {, Set, <]
[), ;, }, }, }, private, void, checkObjectLiteral, (, NodeTraversal, t, ,, Node, n, ), {, Set, <, String, >]
[;, Set, <, String, >, setters, =, Sets, ., newHashSet, (, ), ;, for, (, Node, key, =, n, .]
[., newHashSet, (, ), ;, Set, <, String, >, setters, =, Sets, ., newHashSet, (, ), ;, for, (, Node]
[;, for, (, Node, key, =, n, ., getFirstChild, (, ), ;, key, !=, null, ;, key, =, key, .]
[., newHashSet, (, ), ;, for, (, Node, key, =, n, ., getFirstChild, (, ), ;, key, !=, null, ;]
[;, key, !=, null, ;, key, =, key, ., getNext, (, ), ), {, if, (, !, noCajaChecks, &&, key]
[., getFirstChild, (, ), ;, key, !=, null, ;, key, =, key, ., getNext, (, ), ), {, if, (]
[;, key, =, key, ., getNext, (, ), ), {, if, (, !, noCajaChecks, &&, key, ., getString, (, )]
[!=, null, ;, key, =, key, ., getNext, (, ), ), {, if, (, !, noCajaChecks, &&, key, ., getString]
[;, key, =, key, ., getNext, (, ), ), {, if, (, !, noCajaChecks, &&, key, ., getString, (, )]
[=, key, ., getNext, (, ), ), {, if, (, !, noCajaChecks, &&, key, ., getString, (, ), ., endsWith]
[), {, if, (, !, noCajaChecks, &&, key, ., getString, (, ), ., endsWith, (, "__", ), ), {, t]
[., getNext, (, ), ), {, if, (, !, noCajaChecks, &&, key, ., getString, (, ), ., endsWith, (, "__"]
[), {, t, ., report, (, key, ,, ILLEGAL_NAME, ), ;, }, if, (, !, key, ., isSetterDef, (, )]
[&&, key, ., getString, (, ), ., endsWith, (, "__", ), ), {, t, ., report, (, key, ,, ILLEGAL_NAME]
[&&, key, ., getString, (, ), ., endsWith, (, "__", ), ), {, t, ., report, (, key, ,, ILLEGAL_NAME]
[), {, t, ., report, (, key, ,, ILLEGAL_NAME, ), ;, }, if, (, !, key, ., isSetterDef, (, )]
[., endsWith, (, "__", ), ), {, t, ., report, (, key, ,, ILLEGAL_NAME, ), ;, }, if, (, !]
[., getString, (, ), ., endsWith, (, "__", ), ), {, t, ., report, (, key, ,, ILLEGAL_NAME, ), ;]
[), ), {, t, ., report, (, key, ,, ILLEGAL_NAME, ), ;, }, if, (, !, key, ., isSetterDef, (]
[;, }, if, (, !, key, ., isSetterDef, (, ), ), {, if, (, getters, ., contains, (, key, .]
[., report, (, key, ,, ILLEGAL_NAME, ), ;, }, if, (, !, key, ., isSetterDef, (, ), ), {, if]
[,, ILLEGAL_NAME, ), ;, }, if, (, !, key, ., isSetterDef, (, ), ), {, if, (, getters, ., contains]
[), ;, }, if, (, !, key, ., isSetterDef, (, ), ), {, if, (, getters, ., contains, (, key]
[), {, if, (, getters, ., contains, (, key, ., getString, (, ), ), ), {, t, ., report, (]
[), {, if, (, getters, ., contains, (, key, ., getString, (, ), ), ), {, t, ., report, (]
[., isSetterDef, (, ), ), {, if, (, getters, ., contains, (, key, ., getString, (, ), ), ), {]
[), {, t, ., report, (, key, ,, DUPLICATE_OBJECT_KEY, ), ;, }, else, {, getters, ., add, (, key, .]
[., contains, (, key, ., getString, (, ), ), ), {, t, ., report, (, key, ,, DUPLICATE_OBJECT_KEY, ), ;]
[), ), {, t, ., report, (, key, ,, DUPLICATE_OBJECT_KEY, ), ;, }, else, {, getters, ., add, (, key]
[., getString, (, ), ), ), {, t, ., report, (, key, ,, DUPLICATE_OBJECT_KEY, ), ;, }, else, {, getters]
[;, }, else, {, getters, ., add, (, key, ., getString, (, ), ), ;, }, }, if, (, !]
[., report, (, key, ,, DUPLICATE_OBJECT_KEY, ), ;, }, else, {, getters, ., add, (, key, ., getString, (, )]
[,, DUPLICATE_OBJECT_KEY, ), ;, }, else, {, getters, ., add, (, key, ., getString, (, ), ), ;, }, }]
[), ;, }, else, {, getters, ., add, (, key, ., getString, (, ), ), ;, }, }, if, (]
[;, }, }, if, (, !, key, ., isGetterDef, (, ), ), {, if, (, setters, ., contains, (, key]
[., add, (, key, ., getString, (, ), ), ;, }, }, if, (, !, key, ., isGetterDef, (, )]
[), ;, }, }, if, (, !, key, ., isGetterDef, (, ), ), {, if, (, setters, ., contains, (]
[., getString, (, ), ), ;, }, }, if, (, !, key, ., isGetterDef, (, ), ), {, if, (]
[), {, if, (, setters, ., contains, (, key, ., getString, (, ), ), ), {, t, ., report, (]
[), {, if, (, setters, ., contains, (, key, ., getString, (, ), ), ), {, t, ., report, (]
[., isGetterDef, (, ), ), {, if, (, setters, ., contains, (, key, ., getString, (, ), ), ), {]
[), {, t, ., report, (, key, ,, DUPLICATE_OBJECT_KEY, ), ;, }, else, {, setters, ., add, (, key, .]
[., contains, (, key, ., getString, (, ), ), ), {, t, ., report, (, key, ,, DUPLICATE_OBJECT_KEY, ), ;]
[), ), {, t, ., report, (, key, ,, DUPLICATE_OBJECT_KEY, ), ;, }, else, {, setters, ., add, (, key]
[., getString, (, ), ), ), {, t, ., report, (, key, ,, DUPLICATE_OBJECT_KEY, ), ;, }, else, {, setters]
[;, }, else, {, setters, ., add, (, key, ., getString, (, ), ), ;, }, }, }, }, private]
[., report, (, key, ,, DUPLICATE_OBJECT_KEY, ), ;, }, else, {, setters, ., add, (, key, ., getString, (, )]
[,, DUPLICATE_OBJECT_KEY, ), ;, }, else, {, setters, ., add, (, key, ., getString, (, ), ), ;, }, }]
[), ;, }, else, {, setters, ., add, (, key, ., getString, (, ), ), ;, }, }, }, }]
[;, }, }, }, }, private, void, checkLabel, (, NodeTraversal, t, ,, Node, n, ), {, if, (, n, .]
[., add, (, key, ., getString, (, ), ), ;, }, }, }, }, private, void, checkLabel, (, NodeTraversal, t]
[), ;, }, }, }, }, private, void, checkLabel, (, NodeTraversal, t, ,, Node, n, ), {, if, (, n]
[., getString, (, ), ), ;, }, }, }, }, private, void, checkLabel, (, NodeTraversal, t, ,, Node, n, )]
[), {, if, (, !, noCajaChecks, ), {, t, ., report, (, n, ., getFirstChild, (, ), ,, ILLEGAL_NAME, )]
[., endsWith, (, "__", ), ), {, if, (, !, noCajaChecks, ), {, t, ., report, (, n, ., getFirstChild]
[., getString, (, ), ., endsWith, (, "__", ), ), {, if, (, !, noCajaChecks, ), {, t, ., report]
[., getFirstChild, (, ), ., getString, (, ), ., endsWith, (, "__", ), ), {, if, (, !, noCajaChecks, )]
[), ), {, if, (, !, noCajaChecks, ), {, t, ., report, (, n, ., getFirstChild, (, ), ,, ILLEGAL_NAME]
[), {, t, ., report, (, n, ., getFirstChild, (, ), ,, ILLEGAL_NAME, ), ;, }, }, }, private, class]
[), {, t, ., report, (, n, ., getFirstChild, (, ), ,, ILLEGAL_NAME, ), ;, }, }, }, private, class]
[;, }, }, }, private, class, NonExternChecks, extends, AbstractPostOrderCallback, {, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node]
[., report, (, n, ., getFirstChild, (, ), ,, ILLEGAL_NAME, ), ;, }, }, }, private, class, NonExternChecks, extends, AbstractPostOrderCallback]
[,, ILLEGAL_NAME, ), ;, }, }, }, private, class, NonExternChecks, extends, AbstractPostOrderCallback, {, @, Override, public, void, visit, (, NodeTraversal]
[., getFirstChild, (, ), ,, ILLEGAL_NAME, ), ;, }, }, }, private, class, NonExternChecks, extends, AbstractPostOrderCallback, {, @, Override, public]
[), ;, }, }, }, private, class, NonExternChecks, extends, AbstractPostOrderCallback, {, @, Override, public, void, visit, (, NodeTraversal, t, ,]
[), {, checkDeclaration, (, t, ,, n, ), ;, }, else, if, (, n, ., isGetProp, (, ), ), {]
[&&, isDeclaration, (, n, ), ), {, checkDeclaration, (, t, ,, n, ), ;, }, else, if, (, n, .]
[), &&, isDeclaration, (, n, ), ), {, checkDeclaration, (, t, ,, n, ), ;, }, else, if, (, n]
[., isName, (, ), ), &&, isDeclaration, (, n, ), ), {, checkDeclaration, (, t, ,, n, ), ;, }]
[), {, checkDeclaration, (, t, ,, n, ), ;, }, else, if, (, n, ., isGetProp, (, ), ), {]
[), ), {, checkDeclaration, (, t, ,, n, ), ;, }, else, if, (, n, ., isGetProp, (, ), )]
[;, }, else, if, (, n, ., isGetProp, (, ), ), {, checkProperty, (, t, ,, n, ), ;, }]
[,, n, ), ;, }, else, if, (, n, ., isGetProp, (, ), ), {, checkProperty, (, t, ,, n]
[), ;, }, else, if, (, n, ., isGetProp, (, ), ), {, checkProperty, (, t, ,, n, ), ;]
[), {, checkProperty, (, t, ,, n, ), ;, }, }, private, void, checkDeclaration, (, NodeTraversal, t, ,, Node, n]
[., isGetProp, (, ), ), {, checkProperty, (, t, ,, n, ), ;, }, }, private, void, checkDeclaration, (, NodeTraversal]
[;, }, }, private, void, checkDeclaration, (, NodeTraversal, t, ,, Node, n, ), {, if, (, "eval", ., equals, (]
[,, n, ), ;, }, }, private, void, checkDeclaration, (, NodeTraversal, t, ,, Node, n, ), {, if, (, "eval"]
[), ;, }, }, private, void, checkDeclaration, (, NodeTraversal, t, ,, Node, n, ), {, if, (, "eval", ., equals]
[), {, t, ., report, (, n, ,, EVAL_DECLARATION, ), ;, }, else, if, (, "arguments", ., equals, (, n]
[., equals, (, n, ., getString, (, ), ), ), {, t, ., report, (, n, ,, EVAL_DECLARATION, ), ;]
[), ), {, t, ., report, (, n, ,, EVAL_DECLARATION, ), ;, }, else, if, (, "arguments", ., equals, (]
[., getString, (, ), ), ), {, t, ., report, (, n, ,, EVAL_DECLARATION, ), ;, }, else, if, (]
[;, }, else, if, (, "arguments", ., equals, (, n, ., getString, (, ), ), ), {, t, ., report]
[., report, (, n, ,, EVAL_DECLARATION, ), ;, }, else, if, (, "arguments", ., equals, (, n, ., getString, (]
[,, EVAL_DECLARATION, ), ;, }, else, if, (, "arguments", ., equals, (, n, ., getString, (, ), ), ), {]
[), ;, }, else, if, (, "arguments", ., equals, (, n, ., getString, (, ), ), ), {, t, .]
[), {, t, ., report, (, n, ,, ARGUMENTS_DECLARATION, ), ;, }, else, if, (, n, ., getString, (, )]
[., equals, (, n, ., getString, (, ), ), ), {, t, ., report, (, n, ,, ARGUMENTS_DECLARATION, ), ;]
[), ), {, t, ., report, (, n, ,, ARGUMENTS_DECLARATION, ), ;, }, else, if, (, n, ., getString, (]
[., getString, (, ), ), ), {, t, ., report, (, n, ,, ARGUMENTS_DECLARATION, ), ;, }, else, if, (]
[;, }, else, if, (, n, ., getString, (, ), ., endsWith, (, "__", ), ), {, if, (, !]
[., report, (, n, ,, ARGUMENTS_DECLARATION, ), ;, }, else, if, (, n, ., getString, (, ), ., endsWith, (]
[,, ARGUMENTS_DECLARATION, ), ;, }, else, if, (, n, ., getString, (, ), ., endsWith, (, "__", ), ), {]
[), ;, }, else, if, (, n, ., getString, (, ), ., endsWith, (, "__", ), ), {, if, (]
[), {, if, (, !, noCajaChecks, ), {, t, ., report, (, n, ,, ILLEGAL_NAME, ), ;, }, }, }]
[., endsWith, (, "__", ), ), {, if, (, !, noCajaChecks, ), {, t, ., report, (, n, ,, ILLEGAL_NAME]
[., getString, (, ), ., endsWith, (, "__", ), ), {, if, (, !, noCajaChecks, ), {, t, ., report]
[), ), {, if, (, !, noCajaChecks, ), {, t, ., report, (, n, ,, ILLEGAL_NAME, ), ;, }, }]
[), {, t, ., report, (, n, ,, ILLEGAL_NAME, ), ;, }, }, }, private, void, checkProperty, (, NodeTraversal, t]
[), {, t, ., report, (, n, ,, ILLEGAL_NAME, ), ;, }, }, }, private, void, checkProperty, (, NodeTraversal, t]
[;, }, }, }, private, void, checkProperty, (, NodeTraversal, t, ,, Node, n, ), {, if, (, n, ., getLastChild]
[., report, (, n, ,, ILLEGAL_NAME, ), ;, }, }, }, private, void, checkProperty, (, NodeTraversal, t, ,, Node, n]
[,, ILLEGAL_NAME, ), ;, }, }, }, private, void, checkProperty, (, NodeTraversal, t, ,, Node, n, ), {, if, (]
[), ;, }, }, }, private, void, checkProperty, (, NodeTraversal, t, ,, Node, n, ), {, if, (, n, .]
[), {, if, (, !, noCajaChecks, ), {, t, ., report, (, n, ., getLastChild, (, ), ,, ILLEGAL_NAME, )]
[., endsWith, (, "__", ), ), {, if, (, !, noCajaChecks, ), {, t, ., report, (, n, ., getLastChild]
[., getString, (, ), ., endsWith, (, "__", ), ), {, if, (, !, noCajaChecks, ), {, t, ., report]
[., getLastChild, (, ), ., getString, (, ), ., endsWith, (, "__", ), ), {, if, (, !, noCajaChecks, )]
[), ), {, if, (, !, noCajaChecks, ), {, t, ., report, (, n, ., getLastChild, (, ), ,, ILLEGAL_NAME]
[), {, t, ., report, (, n, ., getLastChild, (, ), ,, ILLEGAL_NAME, ), ;, }, }, }, }, }]
[), {, t, ., report, (, n, ., getLastChild, (, ), ,, ILLEGAL_NAME, ), ;, }, }, }, }, }]
[;, }, }, }, }, }]
[., report, (, n, ., getLastChild, (, ), ,, ILLEGAL_NAME, ), ;, }, }, }, }, }]
[,, ILLEGAL_NAME, ), ;, }, }, }, }, }]
[., getLastChild, (, ), ,, ILLEGAL_NAME, ), ;, }, }, }, }, }]
[), ;, }, }, }, }, }]
