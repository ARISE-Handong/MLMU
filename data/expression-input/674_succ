[;, CheckRequiresForConstructors, (, AbstractCompiler, compiler, ,, CheckLevel, level, ), {, this, ., compiler, =, compiler, ;, this, ., codingConvention, =]
[., disabled, (, "JSC_MISSING_REQUIRE_WARNING", ,, "''{0}'' used but not goog.require''d", ), ;, CheckRequiresForConstructors, (, AbstractCompiler, compiler, ,, CheckLevel, level, ), {, this, ., compiler]
[,, "''{0}'' used but not goog.require''d", ), ;, CheckRequiresForConstructors, (, AbstractCompiler, compiler, ,, CheckLevel, level, ), {, this, ., compiler, =, compiler, ;, this]
[), ;, CheckRequiresForConstructors, (, AbstractCompiler, compiler, ,, CheckLevel, level, ), {, this, ., compiler, =, compiler, ;, this, ., codingConvention]
[=, compiler, ;, this, ., codingConvention, =, compiler, ., getCodingConvention, (, ), ;, this, ., level, =, level, ;, }]
[., compiler, =, compiler, ;, this, ., codingConvention, =, compiler, ., getCodingConvention, (, ), ;, this, ., level, =, level]
[;, this, ., codingConvention, =, compiler, ., getCodingConvention, (, ), ;, this, ., level, =, level, ;, }, @, Override]
[=, compiler, ., getCodingConvention, (, ), ;, this, ., level, =, level, ;, }, @, Override, public, void, process, (]
[., codingConvention, =, compiler, ., getCodingConvention, (, ), ;, this, ., level, =, level, ;, }, @, Override, public, void]
[;, this, ., level, =, level, ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, )]
[., getCodingConvention, (, ), ;, this, ., level, =, level, ;, }, @, Override, public, void, process, (, Node, externs]
[=, level, ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, Callback, callback, =]
[., level, =, level, ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, Callback]
[;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, Callback, callback, =, new, CheckRequiresForConstructorsCallback]
[;, new, NodeTraversal, (, compiler, ,, callback, ), ., traverseRoots, (, externs, ,, root, ), ;, }, @, Override, public]
[;, }, @, Override, public, void, hotSwapScript, (, Node, scriptRoot, ,, Node, originalRoot, ), {, Callback, callback, =, new, CheckRequiresForConstructorsCallback]
[., traverseRoots, (, externs, ,, root, ), ;, }, @, Override, public, void, hotSwapScript, (, Node, scriptRoot, ,, Node, originalRoot]
[,, callback, ), ., traverseRoots, (, externs, ,, root, ), ;, }, @, Override, public, void, hotSwapScript, (, Node, scriptRoot]
[), ., traverseRoots, (, externs, ,, root, ), ;, }, @, Override, public, void, hotSwapScript, (, Node, scriptRoot, ,, Node]
[,, root, ), ;, }, @, Override, public, void, hotSwapScript, (, Node, scriptRoot, ,, Node, originalRoot, ), {, Callback, callback]
[), ;, }, @, Override, public, void, hotSwapScript, (, Node, scriptRoot, ,, Node, originalRoot, ), {, Callback, callback, =, new]
[;, new, NodeTraversal, (, compiler, ,, callback, ), ., traverseWithScope, (, scriptRoot, ,, SyntacticScopeCreator, ., generateUntypedTopScope, (, compiler, ), )]
[;, }, private, static, boolean, isClassName, (, String, name, ), {, return, (, name, !=, null, &&, name, ., length]
[., traverseWithScope, (, scriptRoot, ,, SyntacticScopeCreator, ., generateUntypedTopScope, (, compiler, ), ), ;, }, private, static, boolean, isClassName, (, String]
[,, callback, ), ., traverseWithScope, (, scriptRoot, ,, SyntacticScopeCreator, ., generateUntypedTopScope, (, compiler, ), ), ;, }, private, static, boolean]
[), ., traverseWithScope, (, scriptRoot, ,, SyntacticScopeCreator, ., generateUntypedTopScope, (, compiler, ), ), ;, }, private, static, boolean, isClassName, (]
[,, SyntacticScopeCreator, ., generateUntypedTopScope, (, compiler, ), ), ;, }, private, static, boolean, isClassName, (, String, name, ), {, return]
[), ;, }, private, static, boolean, isClassName, (, String, name, ), {, return, (, name, !=, null, &&, name, .]
[., generateUntypedTopScope, (, compiler, ), ), ;, }, private, static, boolean, isClassName, (, String, name, ), {, return, (, name]
[), ), ;, }, private, static, boolean, isClassName, (, String, name, ), {, return, (, name, !=, null, &&, name]
[;, }, private, static, String, getOutermostClassName, (, String, className, ), {, for, (, String, part, :, className, ., split, (]
[), ;, }, private, static, String, getOutermostClassName, (, String, className, ), {, for, (, String, part, :, className, ., split]
[&&, !, name, ., equals, (, name, ., toUpperCase, (, ), ), ), ;, }, private, static, String, getOutermostClassName, (]
[&&, Character, ., isUpperCase, (, name, ., charAt, (, 0, ), ), &&, !, name, ., equals, (, name, .]
[&&, name, ., length, (, ), >, 1, &&, Character, ., isUpperCase, (, name, ., charAt, (, 0, ), )]
[!=, null, &&, name, ., length, (, ), >, 1, &&, Character, ., isUpperCase, (, name, ., charAt, (, 0]
[&&, name, ., length, (, ), >, 1, &&, Character, ., isUpperCase, (, name, ., charAt, (, 0, ), )]
[&&, Character, ., isUpperCase, (, name, ., charAt, (, 0, ), ), &&, !, name, ., equals, (, name, .]
[>, 1, &&, Character, ., isUpperCase, (, name, ., charAt, (, 0, ), ), &&, !, name, ., equals, (]
[., length, (, ), >, 1, &&, Character, ., isUpperCase, (, name, ., charAt, (, 0, ), ), &&, !]
[&&, Character, ., isUpperCase, (, name, ., charAt, (, 0, ), ), &&, !, name, ., equals, (, name, .]
[&&, !, name, ., equals, (, name, ., toUpperCase, (, ), ), ), ;, }, private, static, String, getOutermostClassName, (]
[., isUpperCase, (, name, ., charAt, (, 0, ), ), &&, !, name, ., equals, (, name, ., toUpperCase, (]
[), &&, !, name, ., equals, (, name, ., toUpperCase, (, ), ), ), ;, }, private, static, String, getOutermostClassName]
[., charAt, (, 0, ), ), &&, !, name, ., equals, (, name, ., toUpperCase, (, ), ), ), ;]
[), ), &&, !, name, ., equals, (, name, ., toUpperCase, (, ), ), ), ;, }, private, static, String]
[), ;, }, private, static, String, getOutermostClassName, (, String, className, ), {, for, (, String, part, :, className, ., split]
[), ;, }, private, static, String, getOutermostClassName, (, String, className, ), {, for, (, String, part, :, className, ., split]
[., equals, (, name, ., toUpperCase, (, ), ), ), ;, }, private, static, String, getOutermostClassName, (, String, className, )]
[), ), ;, }, private, static, String, getOutermostClassName, (, String, className, ), {, for, (, String, part, :, className, .]
[., toUpperCase, (, ), ), ), ;, }, private, static, String, getOutermostClassName, (, String, className, ), {, for, (, String]
[), {, if, (, isClassName, (, part, ), ), {, return, className, ., substring, (, 0, ,, className, ., indexOf]
[., split, (, "\\.", ), ), {, if, (, isClassName, (, part, ), ), {, return, className, ., substring, (]
[), ), {, if, (, isClassName, (, part, ), ), {, return, className, ., substring, (, 0, ,, className, .]
[), {, return, className, ., substring, (, 0, ,, className, ., indexOf, (, part, ), +, part, ., length, (]
[), ), {, return, className, ., substring, (, 0, ,, className, ., indexOf, (, part, ), +, part, ., length]
[;, }, }, return, null, ;, }, private, class, CheckRequiresForConstructorsCallback, implements, Callback, {, private, final, List, <, String, >, constructors]
[., substring, (, 0, ,, className, ., indexOf, (, part, ), +, part, ., length, (, ), ), ;, }]
[,, className, ., indexOf, (, part, ), +, part, ., length, (, ), ), ;, }, }, return, null, ;]
[), ;, }, }, return, null, ;, }, private, class, CheckRequiresForConstructorsCallback, implements, Callback, {, private, final, List, <, String, >]
[+, part, ., length, (, ), ), ;, }, }, return, null, ;, }, private, class, CheckRequiresForConstructorsCallback, implements, Callback, {]
[., indexOf, (, part, ), +, part, ., length, (, ), ), ;, }, }, return, null, ;, }, private]
[), +, part, ., length, (, ), ), ;, }, }, return, null, ;, }, private, class, CheckRequiresForConstructorsCallback, implements, Callback]
[), ;, }, }, return, null, ;, }, private, class, CheckRequiresForConstructorsCallback, implements, Callback, {, private, final, List, <, String, >]
[., length, (, ), ), ;, }, }, return, null, ;, }, private, class, CheckRequiresForConstructorsCallback, implements, Callback, {, private, final]
[;, }, private, class, CheckRequiresForConstructorsCallback, implements, Callback, {, private, final, List, <, String, >, constructors, =, Lists, ., newArrayList, (]
[;, private, final, List, <, String, >, requires, =, Lists, ., newArrayList, (, ), ;, private, final, List, <, Node]
[., newArrayList, (, ), ;, private, final, List, <, String, >, requires, =, Lists, ., newArrayList, (, ), ;, private]
[;, private, final, List, <, Node, >, newNodes, =, Lists, ., newArrayList, (, ), ;, @, Override, public, boolean, shouldTraverse]
[., newArrayList, (, ), ;, private, final, List, <, Node, >, newNodes, =, Lists, ., newArrayList, (, ), ;, @]
[;, @, Override, public, boolean, shouldTraverse, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, return, parent, ==]
[., newArrayList, (, ), ;, @, Override, public, boolean, shouldTraverse, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, )]
[;, }, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, JSDocInfo, info]
[||, !, t, ., getInput, (, ), ., isExtern, (, ), ;, }, @, Override, public, void, visit, (, NodeTraversal]
[||, !, parent, ., isScript, (, ), ||, !, t, ., getInput, (, ), ., isExtern, (, ), ;, }]
[==, null, ||, !, parent, ., isScript, (, ), ||, !, t, ., getInput, (, ), ., isExtern, (, )]
[||, !, parent, ., isScript, (, ), ||, !, t, ., getInput, (, ), ., isExtern, (, ), ;, }]
[||, !, t, ., getInput, (, ), ., isExtern, (, ), ;, }, @, Override, public, void, visit, (, NodeTraversal]
[||, !, t, ., getInput, (, ), ., isExtern, (, ), ;, }, @, Override, public, void, visit, (, NodeTraversal]
[., isScript, (, ), ||, !, t, ., getInput, (, ), ., isExtern, (, ), ;, }, @, Override, public]
[;, }, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, JSDocInfo, info]
[;, }, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, JSDocInfo, info]
[., isExtern, (, ), ;, }, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent]
[., getInput, (, ), ., isExtern, (, ), ;, }, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node]
[), {, case, Token, ., ASSIGN, :, info, =, (, JSDocInfo, ), n, ., getProp, (, Node, ., JSDOC_INFO_PROP, )]
[., getType, (, ), ), {, case, Token, ., ASSIGN, :, info, =, (, JSDocInfo, ), n, ., getProp, (]
[:, info, =, (, JSDocInfo, ), n, ., getProp, (, Node, ., JSDOC_INFO_PROP, ), ;, if, (, info, !=, null]
[., ASSIGN, :, info, =, (, JSDocInfo, ), n, ., getProp, (, Node, ., JSDOC_INFO_PROP, ), ;, if, (, info]
[=, (, JSDocInfo, ), n, ., getProp, (, Node, ., JSDOC_INFO_PROP, ), ;, if, (, info, !=, null, &&, info]
[;, if, (, info, !=, null, &&, info, ., isConstructor, (, ), ), {, String, qualifiedName, =, n, ., getFirstChild]
[;, if, (, info, !=, null, &&, info, ., isConstructor, (, ), ), {, String, qualifiedName, =, n, ., getFirstChild]
[., getProp, (, Node, ., JSDOC_INFO_PROP, ), ;, if, (, info, !=, null, &&, info, ., isConstructor, (, ), )]
[), ;, if, (, info, !=, null, &&, info, ., isConstructor, (, ), ), {, String, qualifiedName, =, n, .]
[., JSDOC_INFO_PROP, ), ;, if, (, info, !=, null, &&, info, ., isConstructor, (, ), ), {, String, qualifiedName, =]
[), {, String, qualifiedName, =, n, ., getFirstChild, (, ), ., getQualifiedName, (, ), ;, constructors, ., add, (, qualifiedName]
[&&, info, ., isConstructor, (, ), ), {, String, qualifiedName, =, n, ., getFirstChild, (, ), ., getQualifiedName, (, )]
[!=, null, &&, info, ., isConstructor, (, ), ), {, String, qualifiedName, =, n, ., getFirstChild, (, ), ., getQualifiedName]
[&&, info, ., isConstructor, (, ), ), {, String, qualifiedName, =, n, ., getFirstChild, (, ), ., getQualifiedName, (, )]
[), {, String, qualifiedName, =, n, ., getFirstChild, (, ), ., getQualifiedName, (, ), ;, constructors, ., add, (, qualifiedName]
[., isConstructor, (, ), ), {, String, qualifiedName, =, n, ., getFirstChild, (, ), ., getQualifiedName, (, ), ;, constructors]
[;, constructors, ., add, (, qualifiedName, ), ;, }, break, ;, case, Token, ., FUNCTION, :, if, (, NodeUtil, .]
[., getQualifiedName, (, ), ;, constructors, ., add, (, qualifiedName, ), ;, }, break, ;, case, Token, ., FUNCTION, :]
[., getFirstChild, (, ), ., getQualifiedName, (, ), ;, constructors, ., add, (, qualifiedName, ), ;, }, break, ;, case]
[;, }, break, ;, case, Token, ., FUNCTION, :, if, (, NodeUtil, ., isFunctionExpression, (, n, ), ), {, if]
[., add, (, qualifiedName, ), ;, }, break, ;, case, Token, ., FUNCTION, :, if, (, NodeUtil, ., isFunctionExpression, (]
[), ;, }, break, ;, case, Token, ., FUNCTION, :, if, (, NodeUtil, ., isFunctionExpression, (, n, ), ), {]
[:, if, (, NodeUtil, ., isFunctionExpression, (, n, ), ), {, if, (, parent, ., isName, (, ), ), {]
[., FUNCTION, :, if, (, NodeUtil, ., isFunctionExpression, (, n, ), ), {, if, (, parent, ., isName, (, )]
[), {, if, (, parent, ., isName, (, ), ), {, String, functionName, =, parent, ., getString, (, ), ;]
[., isFunctionExpression, (, n, ), ), {, if, (, parent, ., isName, (, ), ), {, String, functionName, =, parent]
[), ), {, if, (, parent, ., isName, (, ), ), {, String, functionName, =, parent, ., getString, (, )]
[), {, String, functionName, =, parent, ., getString, (, ), ;, info, =, (, JSDocInfo, ), parent, ., getProp, (]
[., isName, (, ), ), {, String, functionName, =, parent, ., getString, (, ), ;, info, =, (, JSDocInfo, )]
[;, info, =, (, JSDocInfo, ), parent, ., getProp, (, Node, ., JSDOC_INFO_PROP, ), ;, if, (, info, !=, null]
[., getString, (, ), ;, info, =, (, JSDocInfo, ), parent, ., getProp, (, Node, ., JSDOC_INFO_PROP, ), ;, if]
[=, (, JSDocInfo, ), parent, ., getProp, (, Node, ., JSDOC_INFO_PROP, ), ;, if, (, info, !=, null, &&, info]
[;, if, (, info, !=, null, &&, info, ., isConstructor, (, ), ), {, constructors, ., add, (, functionName, )]
[;, if, (, info, !=, null, &&, info, ., isConstructor, (, ), ), {, constructors, ., add, (, functionName, )]
[., getProp, (, Node, ., JSDOC_INFO_PROP, ), ;, if, (, info, !=, null, &&, info, ., isConstructor, (, ), )]
[), ;, if, (, info, !=, null, &&, info, ., isConstructor, (, ), ), {, constructors, ., add, (, functionName]
[., JSDOC_INFO_PROP, ), ;, if, (, info, !=, null, &&, info, ., isConstructor, (, ), ), {, constructors, ., add]
[), {, constructors, ., add, (, functionName, ), ;, }, else, {, Node, gramps, =, parent, ., getParent, (, )]
[&&, info, ., isConstructor, (, ), ), {, constructors, ., add, (, functionName, ), ;, }, else, {, Node, gramps]
[!=, null, &&, info, ., isConstructor, (, ), ), {, constructors, ., add, (, functionName, ), ;, }, else, {]
[&&, info, ., isConstructor, (, ), ), {, constructors, ., add, (, functionName, ), ;, }, else, {, Node, gramps]
[), {, constructors, ., add, (, functionName, ), ;, }, else, {, Node, gramps, =, parent, ., getParent, (, )]
[., isConstructor, (, ), ), {, constructors, ., add, (, functionName, ), ;, }, else, {, Node, gramps, =, parent]
[;, }, else, {, Node, gramps, =, parent, ., getParent, (, ), ;, Preconditions, ., checkState, (, gramps, !=, null]
[., add, (, functionName, ), ;, }, else, {, Node, gramps, =, parent, ., getParent, (, ), ;, Preconditions, .]
[), ;, }, else, {, Node, gramps, =, parent, ., getParent, (, ), ;, Preconditions, ., checkState, (, gramps, !=]
[;, Preconditions, ., checkState, (, gramps, !=, null, &&, gramps, ., isVar, (, ), ), ;, info, =, (, JSDocInfo]
[., getParent, (, ), ;, Preconditions, ., checkState, (, gramps, !=, null, &&, gramps, ., isVar, (, ), ), ;]
[;, info, =, (, JSDocInfo, ), gramps, ., getProp, (, Node, ., JSDOC_INFO_PROP, ), ;, if, (, info, !=, null]
[., checkState, (, gramps, !=, null, &&, gramps, ., isVar, (, ), ), ;, info, =, (, JSDocInfo, ), gramps]
[), ;, info, =, (, JSDocInfo, ), gramps, ., getProp, (, Node, ., JSDOC_INFO_PROP, ), ;, if, (, info, !=]
[&&, gramps, ., isVar, (, ), ), ;, info, =, (, JSDocInfo, ), gramps, ., getProp, (, Node, ., JSDOC_INFO_PROP]
[!=, null, &&, gramps, ., isVar, (, ), ), ;, info, =, (, JSDocInfo, ), gramps, ., getProp, (, Node]
[&&, gramps, ., isVar, (, ), ), ;, info, =, (, JSDocInfo, ), gramps, ., getProp, (, Node, ., JSDOC_INFO_PROP]
[), ;, info, =, (, JSDocInfo, ), gramps, ., getProp, (, Node, ., JSDOC_INFO_PROP, ), ;, if, (, info, !=]
[., isVar, (, ), ), ;, info, =, (, JSDocInfo, ), gramps, ., getProp, (, Node, ., JSDOC_INFO_PROP, ), ;]
[=, (, JSDocInfo, ), gramps, ., getProp, (, Node, ., JSDOC_INFO_PROP, ), ;, if, (, info, !=, null, &&, info]
[;, if, (, info, !=, null, &&, info, ., isConstructor, (, ), ), {, constructors, ., add, (, functionName, )]
[;, if, (, info, !=, null, &&, info, ., isConstructor, (, ), ), {, constructors, ., add, (, functionName, )]
[., getProp, (, Node, ., JSDOC_INFO_PROP, ), ;, if, (, info, !=, null, &&, info, ., isConstructor, (, ), )]
[), ;, if, (, info, !=, null, &&, info, ., isConstructor, (, ), ), {, constructors, ., add, (, functionName]
[., JSDOC_INFO_PROP, ), ;, if, (, info, !=, null, &&, info, ., isConstructor, (, ), ), {, constructors, ., add]
[), {, constructors, ., add, (, functionName, ), ;, }, }, }, }, else, {, info, =, (, JSDocInfo, )]
[&&, info, ., isConstructor, (, ), ), {, constructors, ., add, (, functionName, ), ;, }, }, }, }, else]
[!=, null, &&, info, ., isConstructor, (, ), ), {, constructors, ., add, (, functionName, ), ;, }, }, }]
[&&, info, ., isConstructor, (, ), ), {, constructors, ., add, (, functionName, ), ;, }, }, }, }, else]
[), {, constructors, ., add, (, functionName, ), ;, }, }, }, }, else, {, info, =, (, JSDocInfo, )]
[., isConstructor, (, ), ), {, constructors, ., add, (, functionName, ), ;, }, }, }, }, else, {, info]
[;, }, }, }, }, else, {, info, =, (, JSDocInfo, ), n, ., getProp, (, Node, ., JSDOC_INFO_PROP, )]
[., add, (, functionName, ), ;, }, }, }, }, else, {, info, =, (, JSDocInfo, ), n, ., getProp]
[), ;, }, }, }, }, else, {, info, =, (, JSDocInfo, ), n, ., getProp, (, Node, ., JSDOC_INFO_PROP]
[=, (, JSDocInfo, ), n, ., getProp, (, Node, ., JSDOC_INFO_PROP, ), ;, if, (, info, !=, null, &&, info]
[;, if, (, info, !=, null, &&, info, ., isConstructor, (, ), ), {, String, functionName, =, n, ., getFirstChild]
[;, if, (, info, !=, null, &&, info, ., isConstructor, (, ), ), {, String, functionName, =, n, ., getFirstChild]
[., getProp, (, Node, ., JSDOC_INFO_PROP, ), ;, if, (, info, !=, null, &&, info, ., isConstructor, (, ), )]
[), ;, if, (, info, !=, null, &&, info, ., isConstructor, (, ), ), {, String, functionName, =, n, .]
[., JSDOC_INFO_PROP, ), ;, if, (, info, !=, null, &&, info, ., isConstructor, (, ), ), {, String, functionName, =]
[), {, String, functionName, =, n, ., getFirstChild, (, ), ., getString, (, ), ;, constructors, ., add, (, functionName]
[&&, info, ., isConstructor, (, ), ), {, String, functionName, =, n, ., getFirstChild, (, ), ., getString, (, )]
[!=, null, &&, info, ., isConstructor, (, ), ), {, String, functionName, =, n, ., getFirstChild, (, ), ., getString]
[&&, info, ., isConstructor, (, ), ), {, String, functionName, =, n, ., getFirstChild, (, ), ., getString, (, )]
[), {, String, functionName, =, n, ., getFirstChild, (, ), ., getString, (, ), ;, constructors, ., add, (, functionName]
[., isConstructor, (, ), ), {, String, functionName, =, n, ., getFirstChild, (, ), ., getString, (, ), ;, constructors]
[;, constructors, ., add, (, functionName, ), ;, }, }, break, ;, case, Token, ., CALL, :, visitCallNode, (, n]
[., getString, (, ), ;, constructors, ., add, (, functionName, ), ;, }, }, break, ;, case, Token, ., CALL]
[., getFirstChild, (, ), ., getString, (, ), ;, constructors, ., add, (, functionName, ), ;, }, }, break, ;]
[;, }, }, break, ;, case, Token, ., CALL, :, visitCallNode, (, n, ,, parent, ), ;, break, ;, case]
[., add, (, functionName, ), ;, }, }, break, ;, case, Token, ., CALL, :, visitCallNode, (, n, ,, parent]
[), ;, }, }, break, ;, case, Token, ., CALL, :, visitCallNode, (, n, ,, parent, ), ;, break, ;]
[:, visitCallNode, (, n, ,, parent, ), ;, break, ;, case, Token, ., SCRIPT, :, visitScriptNode, (, t, ), ;]
[., CALL, :, visitCallNode, (, n, ,, parent, ), ;, break, ;, case, Token, ., SCRIPT, :, visitScriptNode, (, t]
[;, break, ;, case, Token, ., SCRIPT, :, visitScriptNode, (, t, ), ;, break, ;, case, Token, ., NEW, :]
[,, parent, ), ;, break, ;, case, Token, ., SCRIPT, :, visitScriptNode, (, t, ), ;, break, ;, case, Token]
[), ;, break, ;, case, Token, ., SCRIPT, :, visitScriptNode, (, t, ), ;, break, ;, case, Token, ., NEW]
[:, visitScriptNode, (, t, ), ;, break, ;, case, Token, ., NEW, :, visitNewNode, (, t, ,, n, ), ;]
[., SCRIPT, :, visitScriptNode, (, t, ), ;, break, ;, case, Token, ., NEW, :, visitNewNode, (, t, ,, n]
[;, break, ;, case, Token, ., NEW, :, visitNewNode, (, t, ,, n, ), ;, }, }, private, void, visitScriptNode]
[), ;, break, ;, case, Token, ., NEW, :, visitNewNode, (, t, ,, n, ), ;, }, }, private, void]
[:, visitNewNode, (, t, ,, n, ), ;, }, }, private, void, visitScriptNode, (, NodeTraversal, t, ), {, Set, <]
[., NEW, :, visitNewNode, (, t, ,, n, ), ;, }, }, private, void, visitScriptNode, (, NodeTraversal, t, ), {]
[;, }, }, private, void, visitScriptNode, (, NodeTraversal, t, ), {, Set, <, String, >, classNames, =, Sets, ., newHashSet]
[,, n, ), ;, }, }, private, void, visitScriptNode, (, NodeTraversal, t, ), {, Set, <, String, >, classNames, =]
[), ;, }, }, private, void, visitScriptNode, (, NodeTraversal, t, ), {, Set, <, String, >, classNames, =, Sets, .]
[;, for, (, Node, node, :, newNodes, ), {, String, className, =, node, ., getFirstChild, (, ), ., getQualifiedName, (]
[., newHashSet, (, ), ;, for, (, Node, node, :, newNodes, ), {, String, className, =, node, ., getFirstChild, (]
[), {, String, className, =, node, ., getFirstChild, (, ), ., getQualifiedName, (, ), ;, String, outermostClassName, =, getOutermostClassName, (]
[;, String, outermostClassName, =, getOutermostClassName, (, className, ), ;, boolean, notProvidedByConstructors, =, (, constructors, ==, null, ||, !, constructors, .]
[., getQualifiedName, (, ), ;, String, outermostClassName, =, getOutermostClassName, (, className, ), ;, boolean, notProvidedByConstructors, =, (, constructors, ==, null]
[., getFirstChild, (, ), ., getQualifiedName, (, ), ;, String, outermostClassName, =, getOutermostClassName, (, className, ), ;, boolean, notProvidedByConstructors, =]
[;, boolean, notProvidedByConstructors, =, (, constructors, ==, null, ||, !, constructors, ., contains, (, className, ), ), ;, boolean, notProvidedByRequires]
[), ;, boolean, notProvidedByConstructors, =, (, constructors, ==, null, ||, !, constructors, ., contains, (, className, ), ), ;, boolean]
[;, boolean, notProvidedByRequires, =, (, requires, ==, null, ||, (, !, requires, ., contains, (, className, ), &&, !, requires]
[), ;, boolean, notProvidedByRequires, =, (, requires, ==, null, ||, (, !, requires, ., contains, (, className, ), &&, !]
[||, !, constructors, ., contains, (, className, ), ), ;, boolean, notProvidedByRequires, =, (, requires, ==, null, ||, (, !]
[==, null, ||, !, constructors, ., contains, (, className, ), ), ;, boolean, notProvidedByRequires, =, (, requires, ==, null, ||]
[||, !, constructors, ., contains, (, className, ), ), ;, boolean, notProvidedByRequires, =, (, requires, ==, null, ||, (, !]
[), ;, boolean, notProvidedByRequires, =, (, requires, ==, null, ||, (, !, requires, ., contains, (, className, ), &&, !]
[), ;, boolean, notProvidedByRequires, =, (, requires, ==, null, ||, (, !, requires, ., contains, (, className, ), &&, !]
[., contains, (, className, ), ), ;, boolean, notProvidedByRequires, =, (, requires, ==, null, ||, (, !, requires, ., contains]
[), ), ;, boolean, notProvidedByRequires, =, (, requires, ==, null, ||, (, !, requires, ., contains, (, className, ), &&]
[;, if, (, notProvidedByConstructors, &&, notProvidedByRequires, &&, !, classNames, ., contains, (, className, ), ), {, compiler, ., report, (]
[), ;, if, (, notProvidedByConstructors, &&, notProvidedByRequires, &&, !, classNames, ., contains, (, className, ), ), {, compiler, ., report]
[||, (, !, requires, ., contains, (, className, ), &&, !, requires, ., contains, (, outermostClassName, ), ), ), ;]
[==, null, ||, (, !, requires, ., contains, (, className, ), &&, !, requires, ., contains, (, outermostClassName, ), )]
[||, (, !, requires, ., contains, (, className, ), &&, !, requires, ., contains, (, outermostClassName, ), ), ), ;]
[), ;, if, (, notProvidedByConstructors, &&, notProvidedByRequires, &&, !, classNames, ., contains, (, className, ), ), {, compiler, ., report]
[), ), ;, if, (, notProvidedByConstructors, &&, notProvidedByRequires, &&, !, classNames, ., contains, (, className, ), ), {, compiler, .]
[&&, !, requires, ., contains, (, outermostClassName, ), ), ), ;, if, (, notProvidedByConstructors, &&, notProvidedByRequires, &&, !, classNames, .]
[&&, !, requires, ., contains, (, outermostClassName, ), ), ), ;, if, (, notProvidedByConstructors, &&, notProvidedByRequires, &&, !, classNames, .]
[., contains, (, className, ), &&, !, requires, ., contains, (, outermostClassName, ), ), ), ;, if, (, notProvidedByConstructors, &&]
[), &&, !, requires, ., contains, (, outermostClassName, ), ), ), ;, if, (, notProvidedByConstructors, &&, notProvidedByRequires, &&, !, classNames]
[), ), ;, if, (, notProvidedByConstructors, &&, notProvidedByRequires, &&, !, classNames, ., contains, (, className, ), ), {, compiler, .]
[), ), ;, if, (, notProvidedByConstructors, &&, notProvidedByRequires, &&, !, classNames, ., contains, (, className, ), ), {, compiler, .]
[., contains, (, outermostClassName, ), ), ), ;, if, (, notProvidedByConstructors, &&, notProvidedByRequires, &&, !, classNames, ., contains, (, className]
[), ), ), ;, if, (, notProvidedByConstructors, &&, notProvidedByRequires, &&, !, classNames, ., contains, (, className, ), ), {, compiler]
[), {, compiler, ., report, (, t, ., makeError, (, node, ,, level, ,, MISSING_REQUIRE_WARNING, ,, className, ), ), ;]
[&&, !, classNames, ., contains, (, className, ), ), {, compiler, ., report, (, t, ., makeError, (, node, ,]
[&&, notProvidedByRequires, &&, !, classNames, ., contains, (, className, ), ), {, compiler, ., report, (, t, ., makeError, (]
[&&, !, classNames, ., contains, (, className, ), ), {, compiler, ., report, (, t, ., makeError, (, node, ,]
[), {, compiler, ., report, (, t, ., makeError, (, node, ,, level, ,, MISSING_REQUIRE_WARNING, ,, className, ), ), ;]
[), {, compiler, ., report, (, t, ., makeError, (, node, ,, level, ,, MISSING_REQUIRE_WARNING, ,, className, ), ), ;]
[., contains, (, className, ), ), {, compiler, ., report, (, t, ., makeError, (, node, ,, level, ,, MISSING_REQUIRE_WARNING]
[), ), {, compiler, ., report, (, t, ., makeError, (, node, ,, level, ,, MISSING_REQUIRE_WARNING, ,, className, ), )]
[;, classNames, ., add, (, className, ), ;, }, }, this, ., newNodes, ., clear, (, ), ;, this, .]
[., report, (, t, ., makeError, (, node, ,, level, ,, MISSING_REQUIRE_WARNING, ,, className, ), ), ;, classNames, ., add]
[), ;, classNames, ., add, (, className, ), ;, }, }, this, ., newNodes, ., clear, (, ), ;, this]
[., makeError, (, node, ,, level, ,, MISSING_REQUIRE_WARNING, ,, className, ), ), ;, classNames, ., add, (, className, ), ;]
[,, level, ,, MISSING_REQUIRE_WARNING, ,, className, ), ), ;, classNames, ., add, (, className, ), ;, }, }, this, .]
[,, MISSING_REQUIRE_WARNING, ,, className, ), ), ;, classNames, ., add, (, className, ), ;, }, }, this, ., newNodes, .]
[,, className, ), ), ;, classNames, ., add, (, className, ), ;, }, }, this, ., newNodes, ., clear, (]
[), ), ;, classNames, ., add, (, className, ), ;, }, }, this, ., newNodes, ., clear, (, ), ;]
[;, }, }, this, ., newNodes, ., clear, (, ), ;, this, ., requires, ., clear, (, ), ;, this]
[., add, (, className, ), ;, }, }, this, ., newNodes, ., clear, (, ), ;, this, ., requires, .]
[), ;, }, }, this, ., newNodes, ., clear, (, ), ;, this, ., requires, ., clear, (, ), ;]
[;, this, ., requires, ., clear, (, ), ;, this, ., constructors, ., clear, (, ), ;, }, private, void]
[., clear, (, ), ;, this, ., requires, ., clear, (, ), ;, this, ., constructors, ., clear, (, )]
[., newNodes, ., clear, (, ), ;, this, ., requires, ., clear, (, ), ;, this, ., constructors, ., clear]
[;, this, ., constructors, ., clear, (, ), ;, }, private, void, visitCallNode, (, Node, n, ,, Node, parent, )]
[., clear, (, ), ;, this, ., constructors, ., clear, (, ), ;, }, private, void, visitCallNode, (, Node, n]
[., requires, ., clear, (, ), ;, this, ., constructors, ., clear, (, ), ;, }, private, void, visitCallNode, (]
[;, }, private, void, visitCallNode, (, Node, n, ,, Node, parent, ), {, String, required, =, codingConvention, ., extractClassNameIfRequire, (]
[., clear, (, ), ;, }, private, void, visitCallNode, (, Node, n, ,, Node, parent, ), {, String, required, =]
[., constructors, ., clear, (, ), ;, }, private, void, visitCallNode, (, Node, n, ,, Node, parent, ), {, String]
[;, if, (, required, !=, null, ), {, requires, ., add, (, required, ), ;, }, }, private, void, visitNewNode]
[., extractClassNameIfRequire, (, n, ,, parent, ), ;, if, (, required, !=, null, ), {, requires, ., add, (, required]
[,, parent, ), ;, if, (, required, !=, null, ), {, requires, ., add, (, required, ), ;, }, }]
[), ;, if, (, required, !=, null, ), {, requires, ., add, (, required, ), ;, }, }, private, void]
[), {, requires, ., add, (, required, ), ;, }, }, private, void, visitNewNode, (, NodeTraversal, t, ,, Node, n]
[!=, null, ), {, requires, ., add, (, required, ), ;, }, }, private, void, visitNewNode, (, NodeTraversal, t, ,]
[), {, requires, ., add, (, required, ), ;, }, }, private, void, visitNewNode, (, NodeTraversal, t, ,, Node, n]
[;, }, }, private, void, visitNewNode, (, NodeTraversal, t, ,, Node, n, ), {, Node, qNameNode, =, n, ., getFirstChild]
[., add, (, required, ), ;, }, }, private, void, visitNewNode, (, NodeTraversal, t, ,, Node, n, ), {, Node]
[), ;, }, }, private, void, visitNewNode, (, NodeTraversal, t, ,, Node, n, ), {, Node, qNameNode, =, n, .]
[;, if, (, !, qNameNode, ., isQualifiedName, (, ), ), {, return, ;, }, Node, nameNode, =, qNameNode, ;, for]
[., getFirstChild, (, ), ;, if, (, !, qNameNode, ., isQualifiedName, (, ), ), {, return, ;, }, Node, nameNode]
[), {, return, ;, }, Node, nameNode, =, qNameNode, ;, for, (, ;, nameNode, ., hasChildren, (, ), ;, nameNode]
[), {, return, ;, }, Node, nameNode, =, qNameNode, ;, for, (, ;, nameNode, ., hasChildren, (, ), ;, nameNode]
[., isQualifiedName, (, ), ), {, return, ;, }, Node, nameNode, =, qNameNode, ;, for, (, ;, nameNode, ., hasChildren]
[;, for, (, ;, nameNode, ., hasChildren, (, ), ;, nameNode, =, nameNode, ., getFirstChild, (, ), ), {, }]
[;, nameNode, =, nameNode, ., getFirstChild, (, ), ), {, }, if, (, !, nameNode, ., isName, (, ), )]
[., hasChildren, (, ), ;, nameNode, =, nameNode, ., getFirstChild, (, ), ), {, }, if, (, !, nameNode, .]
[=, nameNode, ., getFirstChild, (, ), ), {, }, if, (, !, nameNode, ., isName, (, ), ), {, return]
[), {, }, if, (, !, nameNode, ., isName, (, ), ), {, return, ;, }, String, name, =, nameNode]
[., getFirstChild, (, ), ), {, }, if, (, !, nameNode, ., isName, (, ), ), {, return, ;, }]
[), {, return, ;, }, String, name, =, nameNode, ., getString, (, ), ;, Scope, ., Var, var, =, t]
[), {, return, ;, }, String, name, =, nameNode, ., getString, (, ), ;, Scope, ., Var, var, =, t]
[., isName, (, ), ), {, return, ;, }, String, name, =, nameNode, ., getString, (, ), ;, Scope, .]
[;, Scope, ., Var, var, =, t, ., getScope, (, ), ., getVar, (, name, ), ;, if, (, var]
[., getString, (, ), ;, Scope, ., Var, var, =, t, ., getScope, (, ), ., getVar, (, name, )]
[;, if, (, var, ==, null, ||, var, ., isLocal, (, ), ||, var, ., isExtern, (, ), ), {]
[., getVar, (, name, ), ;, if, (, var, ==, null, ||, var, ., isLocal, (, ), ||, var, .]
[., getScope, (, ), ., getVar, (, name, ), ;, if, (, var, ==, null, ||, var, ., isLocal, (]
[), ;, if, (, var, ==, null, ||, var, ., isLocal, (, ), ||, var, ., isExtern, (, ), )]
[), {, return, ;, }, newNodes, ., add, (, n, ), ;, }, }, }]
[||, var, ., isExtern, (, ), ), {, return, ;, }, newNodes, ., add, (, n, ), ;, }, }]
[||, var, ., isLocal, (, ), ||, var, ., isExtern, (, ), ), {, return, ;, }, newNodes, ., add]
[==, null, ||, var, ., isLocal, (, ), ||, var, ., isExtern, (, ), ), {, return, ;, }, newNodes]
[||, var, ., isLocal, (, ), ||, var, ., isExtern, (, ), ), {, return, ;, }, newNodes, ., add]
[||, var, ., isExtern, (, ), ), {, return, ;, }, newNodes, ., add, (, n, ), ;, }, }]
[., isLocal, (, ), ||, var, ., isExtern, (, ), ), {, return, ;, }, newNodes, ., add, (, n]
[), {, return, ;, }, newNodes, ., add, (, n, ), ;, }, }, }]
[., isExtern, (, ), ), {, return, ;, }, newNodes, ., add, (, n, ), ;, }, }, }]
[;, }, }, }]
[., add, (, n, ), ;, }, }, }]
[), ;, }, }, }]
