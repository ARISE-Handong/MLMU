[;, private, StorelessUnivariateStatistic, sumOfLogs, ;, public, GeometricMean, (, ), {, sumOfLogs, =, new, SumOfLogs, (, ), ;, }, public, GeometricMean]
[;, private, StorelessUnivariateStatistic, sumOfLogs, ;, public, GeometricMean, (, ), {, sumOfLogs, =, new, SumOfLogs, (, ), ;, }, public, GeometricMean]
[=, new, SumOfLogs, (, ), ;, }, public, GeometricMean, (, GeometricMean, original, ), throws, NullArgumentException, {, super, (, ), ;]
[;, }, public, GeometricMean, (, GeometricMean, original, ), throws, NullArgumentException, {, super, (, ), ;, copy, (, original, ,, this]
[;, }, public, GeometricMean, (, SumOfLogs, sumOfLogs, ), {, this, ., sumOfLogs, =, sumOfLogs, ;, }, @, Override, public, GeometricMean]
[,, this, ), ;, }, public, GeometricMean, (, SumOfLogs, sumOfLogs, ), {, this, ., sumOfLogs, =, sumOfLogs, ;, }, @]
[), ;, }, public, GeometricMean, (, SumOfLogs, sumOfLogs, ), {, this, ., sumOfLogs, =, sumOfLogs, ;, }, @, Override, public]
[=, sumOfLogs, ;, }, @, Override, public, GeometricMean, copy, (, ), {, GeometricMean, result, =, new, GeometricMean, (, ), ;]
[., sumOfLogs, =, sumOfLogs, ;, }, @, Override, public, GeometricMean, copy, (, ), {, GeometricMean, result, =, new, GeometricMean, (]
[;, }, @, Override, public, GeometricMean, copy, (, ), {, GeometricMean, result, =, new, GeometricMean, (, ), ;, copy, (]
[;, copy, (, this, ,, result, ), ;, return, result, ;, }, @, Override, public, void, increment, (, final, double]
[;, return, result, ;, }, @, Override, public, void, increment, (, final, double, d, ), {, sumOfLogs, ., increment, (]
[,, result, ), ;, return, result, ;, }, @, Override, public, void, increment, (, final, double, d, ), {, sumOfLogs]
[), ;, return, result, ;, }, @, Override, public, void, increment, (, final, double, d, ), {, sumOfLogs, ., increment]
[;, }, @, Override, public, void, increment, (, final, double, d, ), {, sumOfLogs, ., increment, (, d, ), ;]
[;, }, @, Override, public, double, getResult, (, ), {, if, (, sumOfLogs, ., getN, (, ), >, 0, )]
[., increment, (, d, ), ;, }, @, Override, public, double, getResult, (, ), {, if, (, sumOfLogs, ., getN]
[), ;, }, @, Override, public, double, getResult, (, ), {, if, (, sumOfLogs, ., getN, (, ), >, 0]
[), {, return, FastMath, ., exp, (, sumOfLogs, ., getResult, (, ), /, sumOfLogs, ., getN, (, ), ), ;]
[>, 0, ), {, return, FastMath, ., exp, (, sumOfLogs, ., getResult, (, ), /, sumOfLogs, ., getN, (, )]
[., getN, (, ), >, 0, ), {, return, FastMath, ., exp, (, sumOfLogs, ., getResult, (, ), /, sumOfLogs]
[), {, return, FastMath, ., exp, (, sumOfLogs, ., getResult, (, ), /, sumOfLogs, ., getN, (, ), ), ;]
[;, }, else, {, return, Double, ., NaN, ;, }, }, @, Override, public, void, clear, (, ), {, sumOfLogs]
[., exp, (, sumOfLogs, ., getResult, (, ), /, sumOfLogs, ., getN, (, ), ), ;, }, else, {, return]
[), ;, }, else, {, return, Double, ., NaN, ;, }, }, @, Override, public, void, clear, (, ), {]
[/, sumOfLogs, ., getN, (, ), ), ;, }, else, {, return, Double, ., NaN, ;, }, }, @, Override]
[., getResult, (, ), /, sumOfLogs, ., getN, (, ), ), ;, }, else, {, return, Double, ., NaN, ;]
[), ;, }, else, {, return, Double, ., NaN, ;, }, }, @, Override, public, void, clear, (, ), {]
[., getN, (, ), ), ;, }, else, {, return, Double, ., NaN, ;, }, }, @, Override, public, void]
[;, }, }, @, Override, public, void, clear, (, ), {, sumOfLogs, ., clear, (, ), ;, }, @, Override]
[., NaN, ;, }, }, @, Override, public, void, clear, (, ), {, sumOfLogs, ., clear, (, ), ;, }]
[;, }, @, Override, public, double, evaluate, (, final, double, [, ], values, ,, final, int, begin, ,, final, int]
[., clear, (, ), ;, }, @, Override, public, double, evaluate, (, final, double, [, ], values, ,, final, int]
[;, }, public, long, getN, (, ), {, return, sumOfLogs, ., getN, (, ), ;, }, public, void, setSumLogImpl, (]
[., exp, (, sumOfLogs, ., evaluate, (, values, ,, begin, ,, length, ), /, length, ), ;, }, public, long]
[), ;, }, public, long, getN, (, ), {, return, sumOfLogs, ., getN, (, ), ;, }, public, void, setSumLogImpl]
[/, length, ), ;, }, public, long, getN, (, ), {, return, sumOfLogs, ., getN, (, ), ;, }, public]
[., evaluate, (, values, ,, begin, ,, length, ), /, length, ), ;, }, public, long, getN, (, ), {]
[,, begin, ,, length, ), /, length, ), ;, }, public, long, getN, (, ), {, return, sumOfLogs, ., getN]
[,, length, ), /, length, ), ;, }, public, long, getN, (, ), {, return, sumOfLogs, ., getN, (, )]
[), /, length, ), ;, }, public, long, getN, (, ), {, return, sumOfLogs, ., getN, (, ), ;, }]
[), ;, }, public, long, getN, (, ), {, return, sumOfLogs, ., getN, (, ), ;, }, public, void, setSumLogImpl]
[;, }, public, void, setSumLogImpl, (, StorelessUnivariateStatistic, sumLogImpl, ), throws, MathIllegalStateException, {, checkEmpty, (, ), ;, this, ., sumOfLogs, =]
[., getN, (, ), ;, }, public, void, setSumLogImpl, (, StorelessUnivariateStatistic, sumLogImpl, ), throws, MathIllegalStateException, {, checkEmpty, (, ), ;]
[;, this, ., sumOfLogs, =, sumLogImpl, ;, }, public, StorelessUnivariateStatistic, getSumLogImpl, (, ), {, return, sumOfLogs, ;, }, public, static]
[=, sumLogImpl, ;, }, public, StorelessUnivariateStatistic, getSumLogImpl, (, ), {, return, sumOfLogs, ;, }, public, static, void, copy, (, GeometricMean]
[., sumOfLogs, =, sumLogImpl, ;, }, public, StorelessUnivariateStatistic, getSumLogImpl, (, ), {, return, sumOfLogs, ;, }, public, static, void, copy]
[;, }, public, StorelessUnivariateStatistic, getSumLogImpl, (, ), {, return, sumOfLogs, ;, }, public, static, void, copy, (, GeometricMean, source, ,]
[;, }, public, static, void, copy, (, GeometricMean, source, ,, GeometricMean, dest, ), throws, NullArgumentException, {, MathUtils, ., checkNotNull, (]
[;, MathUtils, ., checkNotNull, (, dest, ), ;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;, dest]
[., checkNotNull, (, source, ), ;, MathUtils, ., checkNotNull, (, dest, ), ;, dest, ., setData, (, source, ., getDataRef]
[), ;, MathUtils, ., checkNotNull, (, dest, ), ;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;]
[;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;, dest, ., sumOfLogs, =, source, ., sumOfLogs, .]
[., checkNotNull, (, dest, ), ;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;, dest, ., sumOfLogs]
[), ;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;, dest, ., sumOfLogs, =, source, ., sumOfLogs]
[;, dest, ., sumOfLogs, =, source, ., sumOfLogs, ., copy, (, ), ;, }, private, void, checkEmpty, (, ), throws]
[., setData, (, source, ., getDataRef, (, ), ), ;, dest, ., sumOfLogs, =, source, ., sumOfLogs, ., copy, (]
[), ;, dest, ., sumOfLogs, =, source, ., sumOfLogs, ., copy, (, ), ;, }, private, void, checkEmpty, (, )]
[., getDataRef, (, ), ), ;, dest, ., sumOfLogs, =, source, ., sumOfLogs, ., copy, (, ), ;, }, private]
[=, source, ., sumOfLogs, ., copy, (, ), ;, }, private, void, checkEmpty, (, ), throws, MathIllegalStateException, {, if, (]
[., sumOfLogs, =, source, ., sumOfLogs, ., copy, (, ), ;, }, private, void, checkEmpty, (, ), throws, MathIllegalStateException, {]
[;, }, private, void, checkEmpty, (, ), throws, MathIllegalStateException, {, if, (, getN, (, ), >, 0, ), {, throw]
[., copy, (, ), ;, }, private, void, checkEmpty, (, ), throws, MathIllegalStateException, {, if, (, getN, (, ), >]
[., sumOfLogs, ., copy, (, ), ;, }, private, void, checkEmpty, (, ), throws, MathIllegalStateException, {, if, (, getN, (]
[), {, throw, new, MathIllegalStateException, (, LocalizedFormats, ., VALUES_ADDED_BEFORE_CONFIGURING_STATISTIC, ,, getN, (, ), ), ;, }, }, }]
[>, 0, ), {, throw, new, MathIllegalStateException, (, LocalizedFormats, ., VALUES_ADDED_BEFORE_CONFIGURING_STATISTIC, ,, getN, (, ), ), ;, }, }, }]
[), {, throw, new, MathIllegalStateException, (, LocalizedFormats, ., VALUES_ADDED_BEFORE_CONFIGURING_STATISTIC, ,, getN, (, ), ), ;, }, }, }]
[;, }, }, }]
[,, getN, (, ), ), ;, }, }, }]
[., VALUES_ADDED_BEFORE_CONFIGURING_STATISTIC, ,, getN, (, ), ), ;, }, }, }]
[), ;, }, }, }]
