[;, public, static, final, RectangleEdge, DEFAULT_POSITION, =, RectangleEdge, ., TOP, ;, public, static, final, HorizontalAlignment, DEFAULT_HORIZONTAL_ALIGNMENT, =, HorizontalAlignment, ., CENTER]
[;, public, static, final, RectangleEdge, DEFAULT_POSITION, =, RectangleEdge, ., TOP, ;, public, static, final, HorizontalAlignment, DEFAULT_HORIZONTAL_ALIGNMENT, =, HorizontalAlignment, ., CENTER]
[;, public, static, final, HorizontalAlignment, DEFAULT_HORIZONTAL_ALIGNMENT, =, HorizontalAlignment, ., CENTER, ;, public, static, final, VerticalAlignment, DEFAULT_VERTICAL_ALIGNMENT, =, VerticalAlignment, ., CENTER]
[., TOP, ;, public, static, final, HorizontalAlignment, DEFAULT_HORIZONTAL_ALIGNMENT, =, HorizontalAlignment, ., CENTER, ;, public, static, final, VerticalAlignment, DEFAULT_VERTICAL_ALIGNMENT, =, VerticalAlignment]
[;, public, static, final, VerticalAlignment, DEFAULT_VERTICAL_ALIGNMENT, =, VerticalAlignment, ., CENTER, ;, public, static, final, RectangleInsets, DEFAULT_PADDING, =, new, RectangleInsets, (]
[., CENTER, ;, public, static, final, VerticalAlignment, DEFAULT_VERTICAL_ALIGNMENT, =, VerticalAlignment, ., CENTER, ;, public, static, final, RectangleInsets, DEFAULT_PADDING, =, new]
[;, public, static, final, RectangleInsets, DEFAULT_PADDING, =, new, RectangleInsets, (, 1, ,, 1, ,, 1, ,, 1, ), ;, public]
[., CENTER, ;, public, static, final, RectangleInsets, DEFAULT_PADDING, =, new, RectangleInsets, (, 1, ,, 1, ,, 1, ,, 1, )]
[;, public, boolean, visible, ;, private, RectangleEdge, position, ;, private, HorizontalAlignment, horizontalAlignment, ;, private, VerticalAlignment, verticalAlignment, ;, private, transient, EventListenerList]
[,, 1, ,, 1, ,, 1, ), ;, public, boolean, visible, ;, private, RectangleEdge, position, ;, private, HorizontalAlignment, horizontalAlignment, ;]
[,, 1, ,, 1, ), ;, public, boolean, visible, ;, private, RectangleEdge, position, ;, private, HorizontalAlignment, horizontalAlignment, ;, private, VerticalAlignment]
[,, 1, ), ;, public, boolean, visible, ;, private, RectangleEdge, position, ;, private, HorizontalAlignment, horizontalAlignment, ;, private, VerticalAlignment, verticalAlignment, ;]
[), ;, public, boolean, visible, ;, private, RectangleEdge, position, ;, private, HorizontalAlignment, horizontalAlignment, ;, private, VerticalAlignment, verticalAlignment, ;, private, transient]
[,, Title, ., DEFAULT_HORIZONTAL_ALIGNMENT, ,, Title, ., DEFAULT_VERTICAL_ALIGNMENT, ,, Title, ., DEFAULT_PADDING, ), ;, }, protected, Title, (, RectangleEdge, position]
[., DEFAULT_POSITION, ,, Title, ., DEFAULT_HORIZONTAL_ALIGNMENT, ,, Title, ., DEFAULT_VERTICAL_ALIGNMENT, ,, Title, ., DEFAULT_PADDING, ), ;, }, protected, Title, (]
[,, Title, ., DEFAULT_VERTICAL_ALIGNMENT, ,, Title, ., DEFAULT_PADDING, ), ;, }, protected, Title, (, RectangleEdge, position, ,, HorizontalAlignment, horizontalAlignment, ,]
[., DEFAULT_HORIZONTAL_ALIGNMENT, ,, Title, ., DEFAULT_VERTICAL_ALIGNMENT, ,, Title, ., DEFAULT_PADDING, ), ;, }, protected, Title, (, RectangleEdge, position, ,, HorizontalAlignment]
[,, Title, ., DEFAULT_PADDING, ), ;, }, protected, Title, (, RectangleEdge, position, ,, HorizontalAlignment, horizontalAlignment, ,, VerticalAlignment, verticalAlignment, ), {]
[., DEFAULT_VERTICAL_ALIGNMENT, ,, Title, ., DEFAULT_PADDING, ), ;, }, protected, Title, (, RectangleEdge, position, ,, HorizontalAlignment, horizontalAlignment, ,, VerticalAlignment, verticalAlignment]
[), ;, }, protected, Title, (, RectangleEdge, position, ,, HorizontalAlignment, horizontalAlignment, ,, VerticalAlignment, verticalAlignment, ), {, this, (, position, ,]
[., DEFAULT_PADDING, ), ;, }, protected, Title, (, RectangleEdge, position, ,, HorizontalAlignment, horizontalAlignment, ,, VerticalAlignment, verticalAlignment, ), {, this, (]
[,, horizontalAlignment, ,, verticalAlignment, ,, Title, ., DEFAULT_PADDING, ), ;, }, protected, Title, (, RectangleEdge, position, ,, HorizontalAlignment, horizontalAlignment, ,]
[,, verticalAlignment, ,, Title, ., DEFAULT_PADDING, ), ;, }, protected, Title, (, RectangleEdge, position, ,, HorizontalAlignment, horizontalAlignment, ,, VerticalAlignment, verticalAlignment]
[,, Title, ., DEFAULT_PADDING, ), ;, }, protected, Title, (, RectangleEdge, position, ,, HorizontalAlignment, horizontalAlignment, ,, VerticalAlignment, verticalAlignment, ,, RectangleInsets]
[), ;, }, protected, Title, (, RectangleEdge, position, ,, HorizontalAlignment, horizontalAlignment, ,, VerticalAlignment, verticalAlignment, ,, RectangleInsets, padding, ), {, if]
[., DEFAULT_PADDING, ), ;, }, protected, Title, (, RectangleEdge, position, ,, HorizontalAlignment, horizontalAlignment, ,, VerticalAlignment, verticalAlignment, ,, RectangleInsets, padding, )]
[), {, throw, new, IllegalArgumentException, (, "Null 'position' argument.", ), ;, }, if, (, horizontalAlignment, ==, null, ), {, throw, new, IllegalArgumentException]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'position' argument.", ), ;, }, if, (, horizontalAlignment, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'position' argument.", ), ;, }, if, (, horizontalAlignment, ==, null, ), {, throw, new, IllegalArgumentException]
[;, }, if, (, horizontalAlignment, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'horizontalAlignment' argument.", ), ;, }, if, (, verticalAlignment]
[), ;, }, if, (, horizontalAlignment, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'horizontalAlignment' argument.", ), ;, }, if, (]
[), {, throw, new, IllegalArgumentException, (, "Null 'horizontalAlignment' argument.", ), ;, }, if, (, verticalAlignment, ==, null, ), {, throw, new, IllegalArgumentException]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'horizontalAlignment' argument.", ), ;, }, if, (, verticalAlignment, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'horizontalAlignment' argument.", ), ;, }, if, (, verticalAlignment, ==, null, ), {, throw, new, IllegalArgumentException]
[;, }, if, (, verticalAlignment, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'verticalAlignment' argument.", ), ;, }, if, (, padding]
[), ;, }, if, (, verticalAlignment, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'verticalAlignment' argument.", ), ;, }, if, (]
[), {, throw, new, IllegalArgumentException, (, "Null 'verticalAlignment' argument.", ), ;, }, if, (, padding, ==, null, ), {, throw, new, IllegalArgumentException]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'verticalAlignment' argument.", ), ;, }, if, (, padding, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'verticalAlignment' argument.", ), ;, }, if, (, padding, ==, null, ), {, throw, new, IllegalArgumentException]
[;, }, if, (, padding, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'spacer' argument.", ), ;, }, this, ., visible]
[), ;, }, if, (, padding, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'spacer' argument.", ), ;, }, this, .]
[), {, throw, new, IllegalArgumentException, (, "Null 'spacer' argument.", ), ;, }, this, ., visible, =, true, ;, this, ., position, =]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'spacer' argument.", ), ;, }, this, ., visible, =, true, ;, this, .]
[), {, throw, new, IllegalArgumentException, (, "Null 'spacer' argument.", ), ;, }, this, ., visible, =, true, ;, this, ., position, =]
[;, }, this, ., visible, =, true, ;, this, ., position, =, position, ;, this, ., horizontalAlignment, =, horizontalAlignment, ;]
[), ;, }, this, ., visible, =, true, ;, this, ., position, =, position, ;, this, ., horizontalAlignment, =, horizontalAlignment]
[=, true, ;, this, ., position, =, position, ;, this, ., horizontalAlignment, =, horizontalAlignment, ;, this, ., verticalAlignment, =, verticalAlignment]
[., visible, =, true, ;, this, ., position, =, position, ;, this, ., horizontalAlignment, =, horizontalAlignment, ;, this, ., verticalAlignment]
[;, this, ., position, =, position, ;, this, ., horizontalAlignment, =, horizontalAlignment, ;, this, ., verticalAlignment, =, verticalAlignment, ;, setPadding]
[=, position, ;, this, ., horizontalAlignment, =, horizontalAlignment, ;, this, ., verticalAlignment, =, verticalAlignment, ;, setPadding, (, padding, ), ;]
[., position, =, position, ;, this, ., horizontalAlignment, =, horizontalAlignment, ;, this, ., verticalAlignment, =, verticalAlignment, ;, setPadding, (, padding]
[;, this, ., horizontalAlignment, =, horizontalAlignment, ;, this, ., verticalAlignment, =, verticalAlignment, ;, setPadding, (, padding, ), ;, this, .]
[=, horizontalAlignment, ;, this, ., verticalAlignment, =, verticalAlignment, ;, setPadding, (, padding, ), ;, this, ., listenerList, =, new, EventListenerList]
[., horizontalAlignment, =, horizontalAlignment, ;, this, ., verticalAlignment, =, verticalAlignment, ;, setPadding, (, padding, ), ;, this, ., listenerList, =]
[;, this, ., verticalAlignment, =, verticalAlignment, ;, setPadding, (, padding, ), ;, this, ., listenerList, =, new, EventListenerList, (, )]
[=, verticalAlignment, ;, setPadding, (, padding, ), ;, this, ., listenerList, =, new, EventListenerList, (, ), ;, this, ., notify]
[., verticalAlignment, =, verticalAlignment, ;, setPadding, (, padding, ), ;, this, ., listenerList, =, new, EventListenerList, (, ), ;, this]
[;, setPadding, (, padding, ), ;, this, ., listenerList, =, new, EventListenerList, (, ), ;, this, ., notify, =, true]
[;, this, ., listenerList, =, new, EventListenerList, (, ), ;, this, ., notify, =, true, ;, }, public, boolean, isVisible]
[), ;, this, ., listenerList, =, new, EventListenerList, (, ), ;, this, ., notify, =, true, ;, }, public, boolean]
[=, new, EventListenerList, (, ), ;, this, ., notify, =, true, ;, }, public, boolean, isVisible, (, ), {, return]
[., listenerList, =, new, EventListenerList, (, ), ;, this, ., notify, =, true, ;, }, public, boolean, isVisible, (, )]
[;, this, ., notify, =, true, ;, }, public, boolean, isVisible, (, ), {, return, this, ., visible, ;, }]
[=, true, ;, }, public, boolean, isVisible, (, ), {, return, this, ., visible, ;, }, public, void, setVisible, (]
[., notify, =, true, ;, }, public, boolean, isVisible, (, ), {, return, this, ., visible, ;, }, public, void]
[;, }, public, boolean, isVisible, (, ), {, return, this, ., visible, ;, }, public, void, setVisible, (, boolean, visible]
[;, }, public, void, setVisible, (, boolean, visible, ), {, this, ., visible, =, visible, ;, notifyListeners, (, new, TitleChangeEvent]
[., visible, ;, }, public, void, setVisible, (, boolean, visible, ), {, this, ., visible, =, visible, ;, notifyListeners, (]
[=, visible, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, RectangleEdge, getPosition, (, ), {, return]
[., visible, =, visible, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, RectangleEdge, getPosition, (, )]
[;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, RectangleEdge, getPosition, (, ), {, return, this, .]
[;, }, public, RectangleEdge, getPosition, (, ), {, return, this, ., position, ;, }, public, void, setPosition, (, RectangleEdge, position]
[), ;, }, public, RectangleEdge, getPosition, (, ), {, return, this, ., position, ;, }, public, void, setPosition, (, RectangleEdge]
[), ), ;, }, public, RectangleEdge, getPosition, (, ), {, return, this, ., position, ;, }, public, void, setPosition, (]
[;, }, public, void, setPosition, (, RectangleEdge, position, ), {, if, (, position, ==, null, ), {, throw, new, IllegalArgumentException]
[., position, ;, }, public, void, setPosition, (, RectangleEdge, position, ), {, if, (, position, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'position' argument.", ), ;, }, if, (, this, ., position, !=, position, ), {, this]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'position' argument.", ), ;, }, if, (, this, ., position, !=, position, )]
[), {, throw, new, IllegalArgumentException, (, "Null 'position' argument.", ), ;, }, if, (, this, ., position, !=, position, ), {, this]
[;, }, if, (, this, ., position, !=, position, ), {, this, ., position, =, position, ;, notifyListeners, (, new]
[), ;, }, if, (, this, ., position, !=, position, ), {, this, ., position, =, position, ;, notifyListeners, (]
[), {, this, ., position, =, position, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, }, public]
[!=, position, ), {, this, ., position, =, position, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }]
[., position, !=, position, ), {, this, ., position, =, position, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), )]
[), {, this, ., position, =, position, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, }, public]
[=, position, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, }, public, HorizontalAlignment, getHorizontalAlignment, (, ), {]
[., position, =, position, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, }, public, HorizontalAlignment, getHorizontalAlignment, (]
[;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, }, public, HorizontalAlignment, getHorizontalAlignment, (, ), {, return, this]
[;, }, }, public, HorizontalAlignment, getHorizontalAlignment, (, ), {, return, this, ., horizontalAlignment, ;, }, public, void, setHorizontalAlignment, (, HorizontalAlignment]
[), ;, }, }, public, HorizontalAlignment, getHorizontalAlignment, (, ), {, return, this, ., horizontalAlignment, ;, }, public, void, setHorizontalAlignment, (]
[), ), ;, }, }, public, HorizontalAlignment, getHorizontalAlignment, (, ), {, return, this, ., horizontalAlignment, ;, }, public, void, setHorizontalAlignment]
[;, }, public, void, setHorizontalAlignment, (, HorizontalAlignment, alignment, ), {, if, (, alignment, ==, null, ), {, throw, new, IllegalArgumentException]
[., horizontalAlignment, ;, }, public, void, setHorizontalAlignment, (, HorizontalAlignment, alignment, ), {, if, (, alignment, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'alignment' argument.", ), ;, }, if, (, this, ., horizontalAlignment, !=, alignment, ), {, this]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'alignment' argument.", ), ;, }, if, (, this, ., horizontalAlignment, !=, alignment, )]
[), {, throw, new, IllegalArgumentException, (, "Null 'alignment' argument.", ), ;, }, if, (, this, ., horizontalAlignment, !=, alignment, ), {, this]
[;, }, if, (, this, ., horizontalAlignment, !=, alignment, ), {, this, ., horizontalAlignment, =, alignment, ;, notifyListeners, (, new]
[), ;, }, if, (, this, ., horizontalAlignment, !=, alignment, ), {, this, ., horizontalAlignment, =, alignment, ;, notifyListeners, (]
[), {, this, ., horizontalAlignment, =, alignment, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, }, public]
[!=, alignment, ), {, this, ., horizontalAlignment, =, alignment, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }]
[., horizontalAlignment, !=, alignment, ), {, this, ., horizontalAlignment, =, alignment, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), )]
[), {, this, ., horizontalAlignment, =, alignment, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, }, public]
[=, alignment, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, }, public, VerticalAlignment, getVerticalAlignment, (, ), {]
[., horizontalAlignment, =, alignment, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, }, public, VerticalAlignment, getVerticalAlignment, (]
[;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, }, public, VerticalAlignment, getVerticalAlignment, (, ), {, return, this]
[;, }, }, public, VerticalAlignment, getVerticalAlignment, (, ), {, return, this, ., verticalAlignment, ;, }, public, void, setVerticalAlignment, (, VerticalAlignment]
[), ;, }, }, public, VerticalAlignment, getVerticalAlignment, (, ), {, return, this, ., verticalAlignment, ;, }, public, void, setVerticalAlignment, (]
[), ), ;, }, }, public, VerticalAlignment, getVerticalAlignment, (, ), {, return, this, ., verticalAlignment, ;, }, public, void, setVerticalAlignment]
[;, }, public, void, setVerticalAlignment, (, VerticalAlignment, alignment, ), {, if, (, alignment, ==, null, ), {, throw, new, IllegalArgumentException]
[., verticalAlignment, ;, }, public, void, setVerticalAlignment, (, VerticalAlignment, alignment, ), {, if, (, alignment, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'alignment' argument.", ), ;, }, if, (, this, ., verticalAlignment, !=, alignment, ), {, this]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'alignment' argument.", ), ;, }, if, (, this, ., verticalAlignment, !=, alignment, )]
[), {, throw, new, IllegalArgumentException, (, "Null 'alignment' argument.", ), ;, }, if, (, this, ., verticalAlignment, !=, alignment, ), {, this]
[;, }, if, (, this, ., verticalAlignment, !=, alignment, ), {, this, ., verticalAlignment, =, alignment, ;, notifyListeners, (, new]
[), ;, }, if, (, this, ., verticalAlignment, !=, alignment, ), {, this, ., verticalAlignment, =, alignment, ;, notifyListeners, (]
[), {, this, ., verticalAlignment, =, alignment, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, }, public]
[!=, alignment, ), {, this, ., verticalAlignment, =, alignment, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }]
[., verticalAlignment, !=, alignment, ), {, this, ., verticalAlignment, =, alignment, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), )]
[), {, this, ., verticalAlignment, =, alignment, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, }, public]
[=, alignment, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, }, public, boolean, getNotify, (, ), {]
[., verticalAlignment, =, alignment, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, }, public, boolean, getNotify, (]
[;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, }, public, boolean, getNotify, (, ), {, return, this]
[;, }, }, public, boolean, getNotify, (, ), {, return, this, ., notify, ;, }, public, void, setNotify, (, boolean]
[), ;, }, }, public, boolean, getNotify, (, ), {, return, this, ., notify, ;, }, public, void, setNotify, (]
[), ), ;, }, }, public, boolean, getNotify, (, ), {, return, this, ., notify, ;, }, public, void, setNotify]
[;, }, public, void, setNotify, (, boolean, flag, ), {, this, ., notify, =, flag, ;, if, (, flag, )]
[., notify, ;, }, public, void, setNotify, (, boolean, flag, ), {, this, ., notify, =, flag, ;, if, (]
[=, flag, ;, if, (, flag, ), {, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, }, public]
[., notify, =, flag, ;, if, (, flag, ), {, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }]
[;, if, (, flag, ), {, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, }, public, abstract, void]
[), {, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, }, public, abstract, void, draw, (, Graphics2D, g2]
[;, }, }, public, abstract, void, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ), ;, public, Object, clone, (, )]
[), ;, }, }, public, abstract, void, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ), ;, public, Object, clone, (]
[), ), ;, }, }, public, abstract, void, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ), ;, public, Object, clone]
[;, duplicate, ., listenerList, =, new, EventListenerList, (, ), ;, return, duplicate, ;, }, public, void, addChangeListener, (, TitleChangeListener, listener]
[;, duplicate, ., listenerList, =, new, EventListenerList, (, ), ;, return, duplicate, ;, }, public, void, addChangeListener, (, TitleChangeListener, listener]
[., clone, (, ), ;, duplicate, ., listenerList, =, new, EventListenerList, (, ), ;, return, duplicate, ;, }, public, void]
[=, new, EventListenerList, (, ), ;, return, duplicate, ;, }, public, void, addChangeListener, (, TitleChangeListener, listener, ), {, this, .]
[., listenerList, =, new, EventListenerList, (, ), ;, return, duplicate, ;, }, public, void, addChangeListener, (, TitleChangeListener, listener, ), {]
[;, return, duplicate, ;, }, public, void, addChangeListener, (, TitleChangeListener, listener, ), {, this, ., listenerList, ., add, (, TitleChangeListener]
[;, }, public, void, addChangeListener, (, TitleChangeListener, listener, ), {, this, ., listenerList, ., add, (, TitleChangeListener, ., class, ,]
[;, }, public, void, removeChangeListener, (, TitleChangeListener, listener, ), {, this, ., listenerList, ., remove, (, TitleChangeListener, ., class, ,]
[., add, (, TitleChangeListener, ., class, ,, listener, ), ;, }, public, void, removeChangeListener, (, TitleChangeListener, listener, ), {, this]
[., listenerList, ., add, (, TitleChangeListener, ., class, ,, listener, ), ;, }, public, void, removeChangeListener, (, TitleChangeListener, listener, )]
[,, listener, ), ;, }, public, void, removeChangeListener, (, TitleChangeListener, listener, ), {, this, ., listenerList, ., remove, (, TitleChangeListener]
[), ;, }, public, void, removeChangeListener, (, TitleChangeListener, listener, ), {, this, ., listenerList, ., remove, (, TitleChangeListener, ., class]
[;, }, protected, void, notifyListeners, (, TitleChangeEvent, event, ), {, if, (, this, ., notify, ), {, Object, [, ]]
[., remove, (, TitleChangeListener, ., class, ,, listener, ), ;, }, protected, void, notifyListeners, (, TitleChangeEvent, event, ), {, if]
[., listenerList, ., remove, (, TitleChangeListener, ., class, ,, listener, ), ;, }, protected, void, notifyListeners, (, TitleChangeEvent, event, )]
[,, listener, ), ;, }, protected, void, notifyListeners, (, TitleChangeEvent, event, ), {, if, (, this, ., notify, ), {]
[), ;, }, protected, void, notifyListeners, (, TitleChangeEvent, event, ), {, if, (, this, ., notify, ), {, Object, []
[), {, Object, [, ], listeners, =, this, ., listenerList, ., getListenerList, (, ), ;, for, (, int, i, =]
[., notify, ), {, Object, [, ], listeners, =, this, ., listenerList, ., getListenerList, (, ), ;, for, (, int]
[;, for, (, int, i, =, listeners, ., length, -, 2, ;, i, >=, 0, ;, i, -=, 2, )]
[., getListenerList, (, ), ;, for, (, int, i, =, listeners, ., length, -, 2, ;, i, >=, 0, ;]
[., listenerList, ., getListenerList, (, ), ;, for, (, int, i, =, listeners, ., length, -, 2, ;, i, >=]
[;, i, >=, 0, ;, i, -=, 2, ), {, if, (, listeners, [, i, ], ==, TitleChangeListener, ., class]
[-, 2, ;, i, >=, 0, ;, i, -=, 2, ), {, if, (, listeners, [, i, ], ==, TitleChangeListener]
[., length, -, 2, ;, i, >=, 0, ;, i, -=, 2, ), {, if, (, listeners, [, i, ]]
[;, i, >=, 0, ;, i, -=, 2, ), {, if, (, listeners, [, i, ], ==, TitleChangeListener, ., class]
[;, i, -=, 2, ), {, if, (, listeners, [, i, ], ==, TitleChangeListener, ., class, ), {, (, (]
[>=, 0, ;, i, -=, 2, ), {, if, (, listeners, [, i, ], ==, TitleChangeListener, ., class, ), {]
[;, i, -=, 2, ), {, if, (, listeners, [, i, ], ==, TitleChangeListener, ., class, ), {, (, (]
[-=, 2, ), {, if, (, listeners, [, i, ], ==, TitleChangeListener, ., class, ), {, (, (, TitleChangeListener, )]
[), {, if, (, listeners, [, i, ], ==, TitleChangeListener, ., class, ), {, (, (, TitleChangeListener, ), listeners, []
[), {, (, (, TitleChangeListener, ), listeners, [, i, +, 1, ], ), ., titleChanged, (, event, ), ;, }]
[==, TitleChangeListener, ., class, ), {, (, (, TitleChangeListener, ), listeners, [, i, +, 1, ], ), ., titleChanged, (]
[[, i, ], ==, TitleChangeListener, ., class, ), {, (, (, TitleChangeListener, ), listeners, [, i, +, 1, ], )]
[], ==, TitleChangeListener, ., class, ), {, (, (, TitleChangeListener, ), listeners, [, i, +, 1, ], ), ., titleChanged]
[), {, (, (, TitleChangeListener, ), listeners, [, i, +, 1, ], ), ., titleChanged, (, event, ), ;, }]
[;, }, }, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {]
[., titleChanged, (, event, ), ;, }, }, }, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[), ., titleChanged, (, event, ), ;, }, }, }, }, public, boolean, equals, (, Object, obj, ), {, if]
[), ., titleChanged, (, event, ), ;, }, }, }, }, public, boolean, equals, (, Object, obj, ), {, if]
[[, i, +, 1, ], ), ., titleChanged, (, event, ), ;, }, }, }, }, public, boolean, equals, (]
[], ), ., titleChanged, (, event, ), ;, }, }, }, }, public, boolean, equals, (, Object, obj, ), {]
[+, 1, ], ), ., titleChanged, (, event, ), ;, }, }, }, }, public, boolean, equals, (, Object, obj]
[], ), ., titleChanged, (, event, ), ;, }, }, }, }, public, boolean, equals, (, Object, obj, ), {]
[), ;, }, }, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, )]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, Title, ), ), {, return, false, ;, }]
[==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, Title, ), ), {, return, false]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, Title, ), ), {, return, false, ;, }]
[;, }, if, (, !, (, obj, instanceof, Title, ), ), {, return, false, ;, }, Title, that, =, (]
[), {, return, false, ;, }, Title, that, =, (, Title, ), obj, ;, if, (, this, ., visible, !=]
[), {, return, false, ;, }, Title, that, =, (, Title, ), obj, ;, if, (, this, ., visible, !=]
[), ), {, return, false, ;, }, Title, that, =, (, Title, ), obj, ;, if, (, this, ., visible]
[instanceof, Title, ), ), {, return, false, ;, }, Title, that, =, (, Title, ), obj, ;, if, (, this]
[;, }, Title, that, =, (, Title, ), obj, ;, if, (, this, ., visible, !=, that, ., visible, )]
[;, if, (, this, ., visible, !=, that, ., visible, ), {, return, false, ;, }, if, (, this, .]
[;, if, (, this, ., visible, !=, that, ., visible, ), {, return, false, ;, }, if, (, this, .]
[), {, return, false, ;, }, if, (, this, ., position, !=, that, ., position, ), {, return, false, ;]
[!=, that, ., visible, ), {, return, false, ;, }, if, (, this, ., position, !=, that, ., position, )]
[., visible, !=, that, ., visible, ), {, return, false, ;, }, if, (, this, ., position, !=, that, .]
[), {, return, false, ;, }, if, (, this, ., position, !=, that, ., position, ), {, return, false, ;]
[., visible, ), {, return, false, ;, }, if, (, this, ., position, !=, that, ., position, ), {, return]
[;, }, if, (, this, ., position, !=, that, ., position, ), {, return, false, ;, }, if, (, this]
[), {, return, false, ;, }, if, (, this, ., horizontalAlignment, !=, that, ., horizontalAlignment, ), {, return, false, ;]
[!=, that, ., position, ), {, return, false, ;, }, if, (, this, ., horizontalAlignment, !=, that, ., horizontalAlignment, )]
[., position, !=, that, ., position, ), {, return, false, ;, }, if, (, this, ., horizontalAlignment, !=, that, .]
[), {, return, false, ;, }, if, (, this, ., horizontalAlignment, !=, that, ., horizontalAlignment, ), {, return, false, ;]
[., position, ), {, return, false, ;, }, if, (, this, ., horizontalAlignment, !=, that, ., horizontalAlignment, ), {, return]
[;, }, if, (, this, ., horizontalAlignment, !=, that, ., horizontalAlignment, ), {, return, false, ;, }, if, (, this]
[), {, return, false, ;, }, if, (, this, ., verticalAlignment, !=, that, ., verticalAlignment, ), {, return, false, ;]
[!=, that, ., horizontalAlignment, ), {, return, false, ;, }, if, (, this, ., verticalAlignment, !=, that, ., verticalAlignment, )]
[., horizontalAlignment, !=, that, ., horizontalAlignment, ), {, return, false, ;, }, if, (, this, ., verticalAlignment, !=, that, .]
[), {, return, false, ;, }, if, (, this, ., verticalAlignment, !=, that, ., verticalAlignment, ), {, return, false, ;]
[., horizontalAlignment, ), {, return, false, ;, }, if, (, this, ., verticalAlignment, !=, that, ., verticalAlignment, ), {, return]
[;, }, if, (, this, ., verticalAlignment, !=, that, ., verticalAlignment, ), {, return, false, ;, }, if, (, this]
[), {, return, false, ;, }, if, (, this, ., notify, !=, that, ., notify, ), {, return, false, ;]
[!=, that, ., verticalAlignment, ), {, return, false, ;, }, if, (, this, ., notify, !=, that, ., notify, )]
[., verticalAlignment, !=, that, ., verticalAlignment, ), {, return, false, ;, }, if, (, this, ., notify, !=, that, .]
[), {, return, false, ;, }, if, (, this, ., notify, !=, that, ., notify, ), {, return, false, ;]
[., verticalAlignment, ), {, return, false, ;, }, if, (, this, ., notify, !=, that, ., notify, ), {, return]
[;, }, if, (, this, ., notify, !=, that, ., notify, ), {, return, false, ;, }, return, super, .]
[), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, public, int, hashCode, (, )]
[!=, that, ., notify, ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, public]
[., notify, !=, that, ., notify, ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;]
[), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, public, int, hashCode, (, )]
[., notify, ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, public, int, hashCode]
[;, }, return, super, ., equals, (, obj, ), ;, }, public, int, hashCode, (, ), {, int, result, =]
[;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;, result, =, 37, *, result, +, ObjectUtilities]
[., equals, (, obj, ), ;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;, result, =]
[), ;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;, result, =, 37, *, result, +]
[;, result, =, 37, *, result, +, ObjectUtilities, ., hashCode, (, this, ., position, ), ;, result, =, 37, *]
[=, 37, *, result, +, ObjectUtilities, ., hashCode, (, this, ., position, ), ;, result, =, 37, *, result, +]
[;, result, =, 37, *, result, +, ObjectUtilities, ., hashCode, (, this, ., horizontalAlignment, ), ;, result, =, 37, *]
[+, ObjectUtilities, ., hashCode, (, this, ., position, ), ;, result, =, 37, *, result, +, ObjectUtilities, ., hashCode, (]
[*, result, +, ObjectUtilities, ., hashCode, (, this, ., position, ), ;, result, =, 37, *, result, +, ObjectUtilities, .]
[+, ObjectUtilities, ., hashCode, (, this, ., position, ), ;, result, =, 37, *, result, +, ObjectUtilities, ., hashCode, (]
[;, result, =, 37, *, result, +, ObjectUtilities, ., hashCode, (, this, ., horizontalAlignment, ), ;, result, =, 37, *]
[., hashCode, (, this, ., position, ), ;, result, =, 37, *, result, +, ObjectUtilities, ., hashCode, (, this, .]
[), ;, result, =, 37, *, result, +, ObjectUtilities, ., hashCode, (, this, ., horizontalAlignment, ), ;, result, =, 37]
[., position, ), ;, result, =, 37, *, result, +, ObjectUtilities, ., hashCode, (, this, ., horizontalAlignment, ), ;, result]
[=, 37, *, result, +, ObjectUtilities, ., hashCode, (, this, ., horizontalAlignment, ), ;, result, =, 37, *, result, +]
[;, result, =, 37, *, result, +, ObjectUtilities, ., hashCode, (, this, ., verticalAlignment, ), ;, return, result, ;, }]
[+, ObjectUtilities, ., hashCode, (, this, ., horizontalAlignment, ), ;, result, =, 37, *, result, +, ObjectUtilities, ., hashCode, (]
[*, result, +, ObjectUtilities, ., hashCode, (, this, ., horizontalAlignment, ), ;, result, =, 37, *, result, +, ObjectUtilities, .]
[+, ObjectUtilities, ., hashCode, (, this, ., horizontalAlignment, ), ;, result, =, 37, *, result, +, ObjectUtilities, ., hashCode, (]
[;, result, =, 37, *, result, +, ObjectUtilities, ., hashCode, (, this, ., verticalAlignment, ), ;, return, result, ;, }]
[., hashCode, (, this, ., horizontalAlignment, ), ;, result, =, 37, *, result, +, ObjectUtilities, ., hashCode, (, this, .]
[), ;, result, =, 37, *, result, +, ObjectUtilities, ., hashCode, (, this, ., verticalAlignment, ), ;, return, result, ;]
[., horizontalAlignment, ), ;, result, =, 37, *, result, +, ObjectUtilities, ., hashCode, (, this, ., verticalAlignment, ), ;, return]
[=, 37, *, result, +, ObjectUtilities, ., hashCode, (, this, ., verticalAlignment, ), ;, return, result, ;, }, private, void]
[;, return, result, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, )]
[+, ObjectUtilities, ., hashCode, (, this, ., verticalAlignment, ), ;, return, result, ;, }, private, void, writeObject, (, ObjectOutputStream, stream]
[*, result, +, ObjectUtilities, ., hashCode, (, this, ., verticalAlignment, ), ;, return, result, ;, }, private, void, writeObject, (]
[+, ObjectUtilities, ., hashCode, (, this, ., verticalAlignment, ), ;, return, result, ;, }, private, void, writeObject, (, ObjectOutputStream, stream]
[;, return, result, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, )]
[., hashCode, (, this, ., verticalAlignment, ), ;, return, result, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws]
[), ;, return, result, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (]
[., verticalAlignment, ), ;, return, result, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, .]
[;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, }, private]
[;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;]
[., defaultWriteObject, (, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, .]
[;, this, ., listenerList, =, new, EventListenerList, (, ), ;, }, }]
[., defaultReadObject, (, ), ;, this, ., listenerList, =, new, EventListenerList, (, ), ;, }, }]
[=, new, EventListenerList, (, ), ;, }, }]
[., listenerList, =, new, EventListenerList, (, ), ;, }, }]
[;, }, }]
