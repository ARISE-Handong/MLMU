[,, Serializable, {, private, List, xCrosshairs, ;, private, List, yCrosshairs, ;, public, CrosshairOverlay, (, ), {, super, (, ), ;]
[,, Serializable, {, private, List, xCrosshairs, ;, private, List, yCrosshairs, ;, public, CrosshairOverlay, (, ), {, super, (, ), ;]
[List, xCrosshairs, ;, private, List, yCrosshairs, ;, public, CrosshairOverlay, (, ), {, super, (, ), ;, this, ., xCrosshairs, =]
[(, ), {, super, (, ), ;, this, ., xCrosshairs, =, new, java, ., util, ., ArrayList, (, ), ;]
[(, ), {, super, (, ), ;, this, ., xCrosshairs, =, new, java, ., util, ., ArrayList, (, ), ;]
[(, ), ;, this, ., xCrosshairs, =, new, java, ., util, ., ArrayList, (, ), ;, this, ., yCrosshairs, =]
[new, java, ., util, ., ArrayList, (, ), ;, }, public, void, addDomainCrosshair, (, Crosshair, crosshair, ), {, if, (]
[new, java, ., util, ., ArrayList, (, ), ;, }, public, void, addDomainCrosshair, (, Crosshair, crosshair, ), {, if, (]
[., util, ., ArrayList, (, ), ;, }, public, void, addDomainCrosshair, (, Crosshair, crosshair, ), {, if, (, crosshair, ==]
[(, ), ;, }, public, void, addDomainCrosshair, (, Crosshair, crosshair, ), {, if, (, crosshair, ==, null, ), {, throw]
[}, public, void, addDomainCrosshair, (, Crosshair, crosshair, ), {, if, (, crosshair, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, Crosshair, crosshair, ), {, if, (, crosshair, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'crosshair' argument.", ), ;, }]
[(, Crosshair, crosshair, ), {, if, (, crosshair, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'crosshair' argument.", ), ;, }]
[(, Crosshair, crosshair, ), {, if, (, crosshair, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'crosshair' argument.", ), ;, }]
[(, crosshair, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'crosshair' argument.", ), ;, }, this, ., xCrosshairs, ., add, (]
[null, ), {, throw, new, IllegalArgumentException, (, "Null 'crosshair' argument.", ), ;, }, this, ., xCrosshairs, ., add, (, crosshair, ), ;]
[null, ), {, throw, new, IllegalArgumentException, (, "Null 'crosshair' argument.", ), ;, }, this, ., xCrosshairs, ., add, (, crosshair, ), ;]
[new, IllegalArgumentException, (, "Null 'crosshair' argument.", ), ;, }, this, ., xCrosshairs, ., add, (, crosshair, ), ;, crosshair, ., addPropertyChangeListener, (]
["Null 'crosshair' argument.", ), ;, }, this, ., xCrosshairs, ., add, (, crosshair, ), ;, crosshair, ., addPropertyChangeListener, (, this, ), ;]
[addPropertyChangeListener, (, this, ), ;, fireOverlayChanged, (, ), ;, }, public, void, removeDomainCrosshair, (, Crosshair, crosshair, ), {, if, (]
[addPropertyChangeListener, (, this, ), ;, fireOverlayChanged, (, ), ;, }, public, void, removeDomainCrosshair, (, Crosshair, crosshair, ), {, if, (]
[this, ), ;, fireOverlayChanged, (, ), ;, }, public, void, removeDomainCrosshair, (, Crosshair, crosshair, ), {, if, (, crosshair, ==]
[(, ), ;, }, public, void, removeDomainCrosshair, (, Crosshair, crosshair, ), {, if, (, crosshair, ==, null, ), {, throw]
[}, public, void, removeDomainCrosshair, (, Crosshair, crosshair, ), {, if, (, crosshair, ==, null, ), {, throw, new, IllegalArgumentException, (]
[crosshair, ), {, if, (, crosshair, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'crosshair' argument.", ), ;, }, if, (]
[crosshair, ), {, if, (, crosshair, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'crosshair' argument.", ), ;, }, if, (]
[crosshair, ), {, if, (, crosshair, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'crosshair' argument.", ), ;, }, if, (]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'crosshair' argument.", ), ;, }, if, (, this, ., xCrosshairs, ., remove, (]
[throw, new, IllegalArgumentException, (, "Null 'crosshair' argument.", ), ;, }, if, (, this, ., xCrosshairs, ., remove, (, crosshair, ), ), {]
[throw, new, IllegalArgumentException, (, "Null 'crosshair' argument.", ), ;, }, if, (, this, ., xCrosshairs, ., remove, (, crosshair, ), ), {]
["Null 'crosshair' argument.", ), ;, }, if, (, this, ., xCrosshairs, ., remove, (, crosshair, ), ), {, crosshair, ., removePropertyChangeListener, (]
[}, if, (, this, ., xCrosshairs, ., remove, (, crosshair, ), ), {, crosshair, ., removePropertyChangeListener, (, this, ), ;]
[., removePropertyChangeListener, (, this, ), ;, fireOverlayChanged, (, ), ;, }, }, public, void, clearDomainCrosshairs, (, ), {, if, (]
[., removePropertyChangeListener, (, this, ), ;, fireOverlayChanged, (, ), ;, }, }, public, void, clearDomainCrosshairs, (, ), {, if, (]
[., removePropertyChangeListener, (, this, ), ;, fireOverlayChanged, (, ), ;, }, }, public, void, clearDomainCrosshairs, (, ), {, if, (]
[(, ), {, if, (, this, ., xCrosshairs, ., isEmpty, (, ), ), {, return, ;, }, List, crosshairs, =]
[isEmpty, (, ), ), {, return, ;, }, List, crosshairs, =, getDomainCrosshairs, (, ), ;, for, (, int, i, =]
[), ), {, return, ;, }, List, crosshairs, =, getDomainCrosshairs, (, ), ;, for, (, int, i, =, 0, ;]
[), ), {, return, ;, }, List, crosshairs, =, getDomainCrosshairs, (, ), ;, for, (, int, i, =, 0, ;]
[{, return, ;, }, List, crosshairs, =, getDomainCrosshairs, (, ), ;, for, (, int, i, =, 0, ;, i, <]
[{, return, ;, }, List, crosshairs, =, getDomainCrosshairs, (, ), ;, for, (, int, i, =, 0, ;, i, <]
[=, getDomainCrosshairs, (, ), ;, for, (, int, i, =, 0, ;, i, <, crosshairs, ., size, (, ), ;]
[=, getDomainCrosshairs, (, ), ;, for, (, int, i, =, 0, ;, i, <, crosshairs, ., size, (, ), ;]
[int, i, =, 0, ;, i, <, crosshairs, ., size, (, ), ;, i, ++, ), {, Crosshair, c, =]
[0, ;, i, <, crosshairs, ., size, (, ), ;, i, ++, ), {, Crosshair, c, =, (, Crosshair, )]
[0, ;, i, <, crosshairs, ., size, (, ), ;, i, ++, ), {, Crosshair, c, =, (, Crosshair, )]
[crosshairs, ., size, (, ), ;, i, ++, ), {, Crosshair, c, =, (, Crosshair, ), crosshairs, ., get, (]
[(, ), ;, i, ++, ), {, Crosshair, c, =, (, Crosshair, ), crosshairs, ., get, (, i, ), ;]
[(, ), ;, i, ++, ), {, Crosshair, c, =, (, Crosshair, ), crosshairs, ., get, (, i, ), ;]
[(, ), ;, i, ++, ), {, Crosshair, c, =, (, Crosshair, ), crosshairs, ., get, (, i, ), ;]
[{, Crosshair, c, =, (, Crosshair, ), crosshairs, ., get, (, i, ), ;, this, ., xCrosshairs, ., remove, (]
[=, (, Crosshair, ), crosshairs, ., get, (, i, ), ;, this, ., xCrosshairs, ., remove, (, c, ), ;]
[=, (, Crosshair, ), crosshairs, ., get, (, i, ), ;, this, ., xCrosshairs, ., remove, (, c, ), ;]
[crosshairs, ., get, (, i, ), ;, this, ., xCrosshairs, ., remove, (, c, ), ;, c, ., removePropertyChangeListener, (]
[i, ), ;, this, ., xCrosshairs, ., remove, (, c, ), ;, c, ., removePropertyChangeListener, (, this, ), ;, }]
[c, ., removePropertyChangeListener, (, this, ), ;, }, fireOverlayChanged, (, ), ;, }, public, List, getDomainCrosshairs, (, ), {, return]
[(, this, ), ;, }, fireOverlayChanged, (, ), ;, }, public, List, getDomainCrosshairs, (, ), {, return, new, ArrayList, (]
[(, this, ), ;, }, fireOverlayChanged, (, ), ;, }, public, List, getDomainCrosshairs, (, ), {, return, new, ArrayList, (]
[return, new, ArrayList, (, this, ., xCrosshairs, ), ;, }, public, void, addRangeCrosshair, (, Crosshair, crosshair, ), {, if, (]
[return, new, ArrayList, (, this, ., xCrosshairs, ), ;, }, public, void, addRangeCrosshair, (, Crosshair, crosshair, ), {, if, (]
[ArrayList, (, this, ., xCrosshairs, ), ;, }, public, void, addRangeCrosshair, (, Crosshair, crosshair, ), {, if, (, crosshair, ==]
[xCrosshairs, ), ;, }, public, void, addRangeCrosshair, (, Crosshair, crosshair, ), {, if, (, crosshair, ==, null, ), {, throw]
[}, public, void, addRangeCrosshair, (, Crosshair, crosshair, ), {, if, (, crosshair, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, Crosshair, crosshair, ), {, if, (, crosshair, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'crosshair' argument.", ), ;, }]
[(, Crosshair, crosshair, ), {, if, (, crosshair, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'crosshair' argument.", ), ;, }]
[(, Crosshair, crosshair, ), {, if, (, crosshair, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'crosshair' argument.", ), ;, }]
[(, crosshair, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'crosshair' argument.", ), ;, }, this, ., yCrosshairs, ., add, (]
[null, ), {, throw, new, IllegalArgumentException, (, "Null 'crosshair' argument.", ), ;, }, this, ., yCrosshairs, ., add, (, crosshair, ), ;]
[null, ), {, throw, new, IllegalArgumentException, (, "Null 'crosshair' argument.", ), ;, }, this, ., yCrosshairs, ., add, (, crosshair, ), ;]
[new, IllegalArgumentException, (, "Null 'crosshair' argument.", ), ;, }, this, ., yCrosshairs, ., add, (, crosshair, ), ;, crosshair, ., addPropertyChangeListener, (]
["Null 'crosshair' argument.", ), ;, }, this, ., yCrosshairs, ., add, (, crosshair, ), ;, crosshair, ., addPropertyChangeListener, (, this, ), ;]
[addPropertyChangeListener, (, this, ), ;, fireOverlayChanged, (, ), ;, }, public, void, removeRangeCrosshair, (, Crosshair, crosshair, ), {, if, (]
[addPropertyChangeListener, (, this, ), ;, fireOverlayChanged, (, ), ;, }, public, void, removeRangeCrosshair, (, Crosshair, crosshair, ), {, if, (]
[this, ), ;, fireOverlayChanged, (, ), ;, }, public, void, removeRangeCrosshair, (, Crosshair, crosshair, ), {, if, (, crosshair, ==]
[(, ), ;, }, public, void, removeRangeCrosshair, (, Crosshair, crosshair, ), {, if, (, crosshair, ==, null, ), {, throw]
[}, public, void, removeRangeCrosshair, (, Crosshair, crosshair, ), {, if, (, crosshair, ==, null, ), {, throw, new, IllegalArgumentException, (]
[crosshair, ), {, if, (, crosshair, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'crosshair' argument.", ), ;, }, if, (]
[crosshair, ), {, if, (, crosshair, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'crosshair' argument.", ), ;, }, if, (]
[crosshair, ), {, if, (, crosshair, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'crosshair' argument.", ), ;, }, if, (]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'crosshair' argument.", ), ;, }, if, (, this, ., yCrosshairs, ., remove, (]
[throw, new, IllegalArgumentException, (, "Null 'crosshair' argument.", ), ;, }, if, (, this, ., yCrosshairs, ., remove, (, crosshair, ), ), {]
[throw, new, IllegalArgumentException, (, "Null 'crosshair' argument.", ), ;, }, if, (, this, ., yCrosshairs, ., remove, (, crosshair, ), ), {]
["Null 'crosshair' argument.", ), ;, }, if, (, this, ., yCrosshairs, ., remove, (, crosshair, ), ), {, crosshair, ., removePropertyChangeListener, (]
[}, if, (, this, ., yCrosshairs, ., remove, (, crosshair, ), ), {, crosshair, ., removePropertyChangeListener, (, this, ), ;]
[., removePropertyChangeListener, (, this, ), ;, fireOverlayChanged, (, ), ;, }, }, public, void, clearRangeCrosshairs, (, ), {, if, (]
[., removePropertyChangeListener, (, this, ), ;, fireOverlayChanged, (, ), ;, }, }, public, void, clearRangeCrosshairs, (, ), {, if, (]
[., removePropertyChangeListener, (, this, ), ;, fireOverlayChanged, (, ), ;, }, }, public, void, clearRangeCrosshairs, (, ), {, if, (]
[(, ), {, if, (, this, ., yCrosshairs, ., isEmpty, (, ), ), {, return, ;, }, List, crosshairs, =]
[isEmpty, (, ), ), {, return, ;, }, List, crosshairs, =, getRangeCrosshairs, (, ), ;, for, (, int, i, =]
[), ), {, return, ;, }, List, crosshairs, =, getRangeCrosshairs, (, ), ;, for, (, int, i, =, 0, ;]
[), ), {, return, ;, }, List, crosshairs, =, getRangeCrosshairs, (, ), ;, for, (, int, i, =, 0, ;]
[{, return, ;, }, List, crosshairs, =, getRangeCrosshairs, (, ), ;, for, (, int, i, =, 0, ;, i, <]
[{, return, ;, }, List, crosshairs, =, getRangeCrosshairs, (, ), ;, for, (, int, i, =, 0, ;, i, <]
[=, getRangeCrosshairs, (, ), ;, for, (, int, i, =, 0, ;, i, <, crosshairs, ., size, (, ), ;]
[=, getRangeCrosshairs, (, ), ;, for, (, int, i, =, 0, ;, i, <, crosshairs, ., size, (, ), ;]
[int, i, =, 0, ;, i, <, crosshairs, ., size, (, ), ;, i, ++, ), {, Crosshair, c, =]
[0, ;, i, <, crosshairs, ., size, (, ), ;, i, ++, ), {, Crosshair, c, =, (, Crosshair, )]
[0, ;, i, <, crosshairs, ., size, (, ), ;, i, ++, ), {, Crosshair, c, =, (, Crosshair, )]
[crosshairs, ., size, (, ), ;, i, ++, ), {, Crosshair, c, =, (, Crosshair, ), crosshairs, ., get, (]
[(, ), ;, i, ++, ), {, Crosshair, c, =, (, Crosshair, ), crosshairs, ., get, (, i, ), ;]
[(, ), ;, i, ++, ), {, Crosshair, c, =, (, Crosshair, ), crosshairs, ., get, (, i, ), ;]
[(, ), ;, i, ++, ), {, Crosshair, c, =, (, Crosshair, ), crosshairs, ., get, (, i, ), ;]
[{, Crosshair, c, =, (, Crosshair, ), crosshairs, ., get, (, i, ), ;, this, ., yCrosshairs, ., remove, (]
[=, (, Crosshair, ), crosshairs, ., get, (, i, ), ;, this, ., yCrosshairs, ., remove, (, c, ), ;]
[=, (, Crosshair, ), crosshairs, ., get, (, i, ), ;, this, ., yCrosshairs, ., remove, (, c, ), ;]
[crosshairs, ., get, (, i, ), ;, this, ., yCrosshairs, ., remove, (, c, ), ;, c, ., removePropertyChangeListener, (]
[i, ), ;, this, ., yCrosshairs, ., remove, (, c, ), ;, c, ., removePropertyChangeListener, (, this, ), ;, }]
[c, ., removePropertyChangeListener, (, this, ), ;, }, fireOverlayChanged, (, ), ;, }, public, List, getRangeCrosshairs, (, ), {, return]
[(, this, ), ;, }, fireOverlayChanged, (, ), ;, }, public, List, getRangeCrosshairs, (, ), {, return, new, ArrayList, (]
[(, this, ), ;, }, fireOverlayChanged, (, ), ;, }, public, List, getRangeCrosshairs, (, ), {, return, new, ArrayList, (]
[), {, return, new, ArrayList, (, this, ., yCrosshairs, ), ;, }, public, void, propertyChange, (, PropertyChangeEvent, e, ), {]
[{, fireOverlayChanged, (, ), ;, }, public, void, paintOverlay, (, Graphics2D, g2, ,, ChartPanel, chartPanel, ), {, Shape, savedClip, =]
[{, fireOverlayChanged, (, ), ;, }, public, void, paintOverlay, (, Graphics2D, g2, ,, ChartPanel, chartPanel, ), {, Shape, savedClip, =]
[(, Graphics2D, g2, ,, ChartPanel, chartPanel, ), {, Shape, savedClip, =, g2, ., getClip, (, ), ;, Rectangle2D, dataArea, =]
[(, Graphics2D, g2, ,, ChartPanel, chartPanel, ), {, Shape, savedClip, =, g2, ., getClip, (, ), ;, Rectangle2D, dataArea, =]
[), {, Shape, savedClip, =, g2, ., getClip, (, ), ;, Rectangle2D, dataArea, =, chartPanel, ., getScreenDataArea, (, ), ;]
[), {, Shape, savedClip, =, g2, ., getClip, (, ), ;, Rectangle2D, dataArea, =, chartPanel, ., getScreenDataArea, (, ), ;]
[=, g2, ., getClip, (, ), ;, Rectangle2D, dataArea, =, chartPanel, ., getScreenDataArea, (, ), ;, g2, ., clip, (]
[;, Rectangle2D, dataArea, =, chartPanel, ., getScreenDataArea, (, ), ;, g2, ., clip, (, dataArea, ), ;, JFreeChart, chart, =]
[;, Rectangle2D, dataArea, =, chartPanel, ., getScreenDataArea, (, ), ;, g2, ., clip, (, dataArea, ), ;, JFreeChart, chart, =]
[;, g2, ., clip, (, dataArea, ), ;, JFreeChart, chart, =, chartPanel, ., getChart, (, ), ;, XYPlot, plot, =]
[clip, (, dataArea, ), ;, JFreeChart, chart, =, chartPanel, ., getChart, (, ), ;, XYPlot, plot, =, (, XYPlot, )]
[clip, (, dataArea, ), ;, JFreeChart, chart, =, chartPanel, ., getChart, (, ), ;, XYPlot, plot, =, (, XYPlot, )]
[., getChart, (, ), ;, XYPlot, plot, =, (, XYPlot, ), chart, ., getPlot, (, ), ;, ValueAxis, xAxis, =]
[., getChart, (, ), ;, XYPlot, plot, =, (, XYPlot, ), chart, ., getPlot, (, ), ;, ValueAxis, xAxis, =]
[XYPlot, ), chart, ., getPlot, (, ), ;, ValueAxis, xAxis, =, plot, ., getDomainAxis, (, ), ;, RectangleEdge, xAxisEdge, =]
[XYPlot, ), chart, ., getPlot, (, ), ;, ValueAxis, xAxis, =, plot, ., getDomainAxis, (, ), ;, RectangleEdge, xAxisEdge, =]
[xAxis, =, plot, ., getDomainAxis, (, ), ;, RectangleEdge, xAxisEdge, =, plot, ., getDomainAxisEdge, (, ), ;, Iterator, iterator, =]
[xAxis, =, plot, ., getDomainAxis, (, ), ;, RectangleEdge, xAxisEdge, =, plot, ., getDomainAxisEdge, (, ), ;, Iterator, iterator, =]
[xAxis, =, plot, ., getDomainAxis, (, ), ;, RectangleEdge, xAxisEdge, =, plot, ., getDomainAxisEdge, (, ), ;, Iterator, iterator, =]
[=, plot, ., getDomainAxisEdge, (, ), ;, Iterator, iterator, =, this, ., xCrosshairs, ., iterator, (, ), ;, while, (]
[=, plot, ., getDomainAxisEdge, (, ), ;, Iterator, iterator, =, this, ., xCrosshairs, ., iterator, (, ), ;, while, (]
[this, ., xCrosshairs, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, Crosshair, ch, =]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, Crosshair, ch, =, (, Crosshair, )]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, Crosshair, ch, =, (, Crosshair, )]
[., hasNext, (, ), ), {, Crosshair, ch, =, (, Crosshair, ), iterator, ., next, (, ), ;, if, (]
[., hasNext, (, ), ), {, Crosshair, ch, =, (, Crosshair, ), iterator, ., next, (, ), ;, if, (]
[Crosshair, ), iterator, ., next, (, ), ;, if, (, ch, ., isVisible, (, ), ), {, double, x, =]
[Crosshair, ), iterator, ., next, (, ), ;, if, (, ch, ., isVisible, (, ), ), {, double, x, =]
[(, ch, ., isVisible, (, ), ), {, double, x, =, ch, ., getValue, (, ), ;, double, xx, =]
[(, ch, ., isVisible, (, ), ), {, double, x, =, ch, ., getValue, (, ), ;, double, xx, =]
[(, ), ), {, double, x, =, ch, ., getValue, (, ), ;, double, xx, =, xAxis, ., valueToJava2D, (]
[), {, double, x, =, ch, ., getValue, (, ), ;, double, xx, =, xAxis, ., valueToJava2D, (, x, ,]
[double, x, =, ch, ., getValue, (, ), ;, double, xx, =, xAxis, ., valueToJava2D, (, x, ,, dataArea, ,]
[getValue, (, ), ;, double, xx, =, xAxis, ., valueToJava2D, (, x, ,, dataArea, ,, xAxisEdge, ), ;, if, (]
[getValue, (, ), ;, double, xx, =, xAxis, ., valueToJava2D, (, x, ,, dataArea, ,, xAxisEdge, ), ;, if, (]
[getValue, (, ), ;, double, xx, =, xAxis, ., valueToJava2D, (, x, ,, dataArea, ,, xAxisEdge, ), ;, if, (]
[=, xAxis, ., valueToJava2D, (, x, ,, dataArea, ,, xAxisEdge, ), ;, if, (, plot, ., getOrientation, (, ), ==]
[=, xAxis, ., valueToJava2D, (, x, ,, dataArea, ,, xAxisEdge, ), ;, if, (, plot, ., getOrientation, (, ), ==]
[x, ,, dataArea, ,, xAxisEdge, ), ;, if, (, plot, ., getOrientation, (, ), ==, PlotOrientation, ., VERTICAL, ), {]
[dataArea, ,, xAxisEdge, ), ;, if, (, plot, ., getOrientation, (, ), ==, PlotOrientation, ., VERTICAL, ), {, drawVerticalCrosshair, (]
[xAxisEdge, ), ;, if, (, plot, ., getOrientation, (, ), ==, PlotOrientation, ., VERTICAL, ), {, drawVerticalCrosshair, (, g2, ,]
[;, if, (, plot, ., getOrientation, (, ), ==, PlotOrientation, ., VERTICAL, ), {, drawVerticalCrosshair, (, g2, ,, dataArea, ,]
[(, plot, ., getOrientation, (, ), ==, PlotOrientation, ., VERTICAL, ), {, drawVerticalCrosshair, (, g2, ,, dataArea, ,, xx, ,]
[==, PlotOrientation, ., VERTICAL, ), {, drawVerticalCrosshair, (, g2, ,, dataArea, ,, xx, ,, ch, ), ;, }, else, {]
[., VERTICAL, ), {, drawVerticalCrosshair, (, g2, ,, dataArea, ,, xx, ,, ch, ), ;, }, else, {, drawHorizontalCrosshair, (]
[), {, drawVerticalCrosshair, (, g2, ,, dataArea, ,, xx, ,, ch, ), ;, }, else, {, drawHorizontalCrosshair, (, g2, ,]
[drawVerticalCrosshair, (, g2, ,, dataArea, ,, xx, ,, ch, ), ;, }, else, {, drawHorizontalCrosshair, (, g2, ,, dataArea, ,]
[g2, ,, dataArea, ,, xx, ,, ch, ), ;, }, else, {, drawHorizontalCrosshair, (, g2, ,, dataArea, ,, xx, ,]
[}, else, {, drawHorizontalCrosshair, (, g2, ,, dataArea, ,, xx, ,, ch, ), ;, }, }, }, ValueAxis, yAxis, =]
[}, else, {, drawHorizontalCrosshair, (, g2, ,, dataArea, ,, xx, ,, ch, ), ;, }, }, }, ValueAxis, yAxis, =]
[xx, ,, ch, ), ;, }, }, }, ValueAxis, yAxis, =, plot, ., getRangeAxis, (, ), ;, RectangleEdge, yAxisEdge, =]
[xx, ,, ch, ), ;, }, }, }, ValueAxis, yAxis, =, plot, ., getRangeAxis, (, ), ;, RectangleEdge, yAxisEdge, =]
[}, }, ValueAxis, yAxis, =, plot, ., getRangeAxis, (, ), ;, RectangleEdge, yAxisEdge, =, plot, ., getRangeAxisEdge, (, ), ;]
[ValueAxis, yAxis, =, plot, ., getRangeAxis, (, ), ;, RectangleEdge, yAxisEdge, =, plot, ., getRangeAxisEdge, (, ), ;, iterator, =]
[ValueAxis, yAxis, =, plot, ., getRangeAxis, (, ), ;, RectangleEdge, yAxisEdge, =, plot, ., getRangeAxisEdge, (, ), ;, iterator, =]
[ValueAxis, yAxis, =, plot, ., getRangeAxis, (, ), ;, RectangleEdge, yAxisEdge, =, plot, ., getRangeAxisEdge, (, ), ;, iterator, =]
[yAxisEdge, =, plot, ., getRangeAxisEdge, (, ), ;, iterator, =, this, ., yCrosshairs, ., iterator, (, ), ;, while, (]
[yAxisEdge, =, plot, ., getRangeAxisEdge, (, ), ;, iterator, =, this, ., yCrosshairs, ., iterator, (, ), ;, while, (]
[this, ., yCrosshairs, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, Crosshair, ch, =]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, Crosshair, ch, =, (, Crosshair, )]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, Crosshair, ch, =, (, Crosshair, )]
[., hasNext, (, ), ), {, Crosshair, ch, =, (, Crosshair, ), iterator, ., next, (, ), ;, if, (]
[., hasNext, (, ), ), {, Crosshair, ch, =, (, Crosshair, ), iterator, ., next, (, ), ;, if, (]
[Crosshair, ), iterator, ., next, (, ), ;, if, (, ch, ., isVisible, (, ), ), {, double, y, =]
[Crosshair, ), iterator, ., next, (, ), ;, if, (, ch, ., isVisible, (, ), ), {, double, y, =]
[(, ch, ., isVisible, (, ), ), {, double, y, =, ch, ., getValue, (, ), ;, double, yy, =]
[(, ch, ., isVisible, (, ), ), {, double, y, =, ch, ., getValue, (, ), ;, double, yy, =]
[(, ), ), {, double, y, =, ch, ., getValue, (, ), ;, double, yy, =, yAxis, ., valueToJava2D, (]
[), {, double, y, =, ch, ., getValue, (, ), ;, double, yy, =, yAxis, ., valueToJava2D, (, y, ,]
[double, y, =, ch, ., getValue, (, ), ;, double, yy, =, yAxis, ., valueToJava2D, (, y, ,, dataArea, ,]
[getValue, (, ), ;, double, yy, =, yAxis, ., valueToJava2D, (, y, ,, dataArea, ,, yAxisEdge, ), ;, if, (]
[getValue, (, ), ;, double, yy, =, yAxis, ., valueToJava2D, (, y, ,, dataArea, ,, yAxisEdge, ), ;, if, (]
[getValue, (, ), ;, double, yy, =, yAxis, ., valueToJava2D, (, y, ,, dataArea, ,, yAxisEdge, ), ;, if, (]
[=, yAxis, ., valueToJava2D, (, y, ,, dataArea, ,, yAxisEdge, ), ;, if, (, plot, ., getOrientation, (, ), ==]
[=, yAxis, ., valueToJava2D, (, y, ,, dataArea, ,, yAxisEdge, ), ;, if, (, plot, ., getOrientation, (, ), ==]
[y, ,, dataArea, ,, yAxisEdge, ), ;, if, (, plot, ., getOrientation, (, ), ==, PlotOrientation, ., VERTICAL, ), {]
[dataArea, ,, yAxisEdge, ), ;, if, (, plot, ., getOrientation, (, ), ==, PlotOrientation, ., VERTICAL, ), {, drawHorizontalCrosshair, (]
[yAxisEdge, ), ;, if, (, plot, ., getOrientation, (, ), ==, PlotOrientation, ., VERTICAL, ), {, drawHorizontalCrosshair, (, g2, ,]
[;, if, (, plot, ., getOrientation, (, ), ==, PlotOrientation, ., VERTICAL, ), {, drawHorizontalCrosshair, (, g2, ,, dataArea, ,]
[(, plot, ., getOrientation, (, ), ==, PlotOrientation, ., VERTICAL, ), {, drawHorizontalCrosshair, (, g2, ,, dataArea, ,, yy, ,]
[==, PlotOrientation, ., VERTICAL, ), {, drawHorizontalCrosshair, (, g2, ,, dataArea, ,, yy, ,, ch, ), ;, }, else, {]
[., VERTICAL, ), {, drawHorizontalCrosshair, (, g2, ,, dataArea, ,, yy, ,, ch, ), ;, }, else, {, drawVerticalCrosshair, (]
[), {, drawHorizontalCrosshair, (, g2, ,, dataArea, ,, yy, ,, ch, ), ;, }, else, {, drawVerticalCrosshair, (, g2, ,]
[drawHorizontalCrosshair, (, g2, ,, dataArea, ,, yy, ,, ch, ), ;, }, else, {, drawVerticalCrosshair, (, g2, ,, dataArea, ,]
[g2, ,, dataArea, ,, yy, ,, ch, ), ;, }, else, {, drawVerticalCrosshair, (, g2, ,, dataArea, ,, yy, ,]
[ch, ), ;, }, else, {, drawVerticalCrosshair, (, g2, ,, dataArea, ,, yy, ,, ch, ), ;, }, }, }]
[ch, ), ;, }, else, {, drawVerticalCrosshair, (, g2, ,, dataArea, ,, yy, ,, ch, ), ;, }, }, }]
[else, {, drawVerticalCrosshair, (, g2, ,, dataArea, ,, yy, ,, ch, ), ;, }, }, }, g2, ., setClip, (]
[}, protected, void, drawHorizontalCrosshair, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, double, y, ,, Crosshair, crosshair, ), {, if, (]
[}, protected, void, drawHorizontalCrosshair, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, double, y, ,, Crosshair, crosshair, ), {, if, (]
[}, protected, void, drawHorizontalCrosshair, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, double, y, ,, Crosshair, crosshair, ), {, if, (]
[void, drawHorizontalCrosshair, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, double, y, ,, Crosshair, crosshair, ), {, if, (, y, >=]
[void, drawHorizontalCrosshair, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, double, y, ,, Crosshair, crosshair, ), {, if, (, y, >=]
[Rectangle2D, dataArea, ,, double, y, ,, Crosshair, crosshair, ), {, if, (, y, >=, dataArea, ., getMinY, (, ), &&]
[Rectangle2D, dataArea, ,, double, y, ,, Crosshair, crosshair, ), {, if, (, y, >=, dataArea, ., getMinY, (, ), &&]
[,, double, y, ,, Crosshair, crosshair, ), {, if, (, y, >=, dataArea, ., getMinY, (, ), &&, y, <=]
[,, double, y, ,, Crosshair, crosshair, ), {, if, (, y, >=, dataArea, ., getMinY, (, ), &&, y, <=]
[y, >=, dataArea, ., getMinY, (, ), &&, y, <=, dataArea, ., getMaxY, (, ), ), {, Line2D, line, =]
[(, ), &&, y, <=, dataArea, ., getMaxY, (, ), ), {, Line2D, line, =, new, Line2D, ., Double, (]
[(, ), &&, y, <=, dataArea, ., getMaxY, (, ), ), {, Line2D, line, =, new, Line2D, ., Double, (]
[., getMaxY, (, ), ), {, Line2D, line, =, new, Line2D, ., Double, (, dataArea, ., getMinX, (, ), ,]
[(, ), ), {, Line2D, line, =, new, Line2D, ., Double, (, dataArea, ., getMinX, (, ), ,, y, ,]
[(, ), ), {, Line2D, line, =, new, Line2D, ., Double, (, dataArea, ., getMinX, (, ), ,, y, ,]
[=, new, Line2D, ., Double, (, dataArea, ., getMinX, (, ), ,, y, ,, dataArea, ., getMaxX, (, ), ,]
[dataArea, ., getMinX, (, ), ,, y, ,, dataArea, ., getMaxX, (, ), ,, y, ), ;, Paint, savedPaint, =]
[dataArea, ., getMinX, (, ), ,, y, ,, dataArea, ., getMaxX, (, ), ,, y, ), ;, Paint, savedPaint, =]
[., getMaxX, (, ), ,, y, ), ;, Paint, savedPaint, =, g2, ., getPaint, (, ), ;, Stroke, savedStroke, =]
[., getMaxX, (, ), ,, y, ), ;, Paint, savedPaint, =, g2, ., getPaint, (, ), ;, Stroke, savedStroke, =]
[), ;, Paint, savedPaint, =, g2, ., getPaint, (, ), ;, Stroke, savedStroke, =, g2, ., getStroke, (, ), ;]
[), ;, Paint, savedPaint, =, g2, ., getPaint, (, ), ;, Stroke, savedStroke, =, g2, ., getStroke, (, ), ;]
[=, g2, ., getPaint, (, ), ;, Stroke, savedStroke, =, g2, ., getStroke, (, ), ;, g2, ., setPaint, (]
[=, g2, ., getPaint, (, ), ;, Stroke, savedStroke, =, g2, ., getStroke, (, ), ;, g2, ., setPaint, (]
[Stroke, savedStroke, =, g2, ., getStroke, (, ), ;, g2, ., setPaint, (, crosshair, ., getPaint, (, ), ), ;]
[Stroke, savedStroke, =, g2, ., getStroke, (, ), ;, g2, ., setPaint, (, crosshair, ., getPaint, (, ), ), ;]
[., getStroke, (, ), ;, g2, ., setPaint, (, crosshair, ., getPaint, (, ), ), ;, g2, ., setStroke, (]
[., getStroke, (, ), ;, g2, ., setPaint, (, crosshair, ., getPaint, (, ), ), ;, g2, ., setStroke, (]
[setPaint, (, crosshair, ., getPaint, (, ), ), ;, g2, ., setStroke, (, crosshair, ., getStroke, (, ), ), ;]
[setPaint, (, crosshair, ., getPaint, (, ), ), ;, g2, ., setStroke, (, crosshair, ., getStroke, (, ), ), ;]
[getPaint, (, ), ), ;, g2, ., setStroke, (, crosshair, ., getStroke, (, ), ), ;, g2, ., draw, (]
[g2, ., setStroke, (, crosshair, ., getStroke, (, ), ), ;, g2, ., draw, (, line, ), ;, if, (]
[g2, ., setStroke, (, crosshair, ., getStroke, (, ), ), ;, g2, ., draw, (, line, ), ;, if, (]
[;, g2, ., draw, (, line, ), ;, if, (, crosshair, ., isLabelVisible, (, ), ), {, String, label, =]
[;, g2, ., draw, (, line, ), ;, if, (, crosshair, ., isLabelVisible, (, ), ), {, String, label, =]
[;, g2, ., draw, (, line, ), ;, if, (, crosshair, ., isLabelVisible, (, ), ), {, String, label, =]
[if, (, crosshair, ., isLabelVisible, (, ), ), {, String, label, =, crosshair, ., getLabelGenerator, (, ), ., generateLabel, (]
[), ), {, String, label, =, crosshair, ., getLabelGenerator, (, ), ., generateLabel, (, crosshair, ), ;, RectangleAnchor, anchor, =]
[), ), {, String, label, =, crosshair, ., getLabelGenerator, (, ), ., generateLabel, (, crosshair, ), ;, RectangleAnchor, anchor, =]
[(, ), ., generateLabel, (, crosshair, ), ;, RectangleAnchor, anchor, =, crosshair, ., getLabelAnchor, (, ), ;, Point2D, pt, =]
[., generateLabel, (, crosshair, ), ;, RectangleAnchor, anchor, =, crosshair, ., getLabelAnchor, (, ), ;, Point2D, pt, =, calculateLabelPoint, (]
[(, crosshair, ), ;, RectangleAnchor, anchor, =, crosshair, ., getLabelAnchor, (, ), ;, Point2D, pt, =, calculateLabelPoint, (, line, ,]
[), ;, RectangleAnchor, anchor, =, crosshair, ., getLabelAnchor, (, ), ;, Point2D, pt, =, calculateLabelPoint, (, line, ,, anchor, ,]
[RectangleAnchor, anchor, =, crosshair, ., getLabelAnchor, (, ), ;, Point2D, pt, =, calculateLabelPoint, (, line, ,, anchor, ,, 5, ,]
[(, ), ;, Point2D, pt, =, calculateLabelPoint, (, line, ,, anchor, ,, 5, ,, 5, ), ;, float, xx, =]
[Point2D, pt, =, calculateLabelPoint, (, line, ,, anchor, ,, 5, ,, 5, ), ;, float, xx, =, (, float, )]
[Point2D, pt, =, calculateLabelPoint, (, line, ,, anchor, ,, 5, ,, 5, ), ;, float, xx, =, (, float, )]
[5, ,, 5, ), ;, float, xx, =, (, float, ), pt, ., getX, (, ), ;, float, yy, =]
[), ;, float, xx, =, (, float, ), pt, ., getX, (, ), ;, float, yy, =, (, float, )]
[), ;, float, xx, =, (, float, ), pt, ., getX, (, ), ;, float, yy, =, (, float, )]
[., getX, (, ), ;, float, yy, =, (, float, ), pt, ., getY, (, ), ;, TextAnchor, alignPt, =]
[(, ), ;, float, yy, =, (, float, ), pt, ., getY, (, ), ;, TextAnchor, alignPt, =, textAlignPtForLabelAnchorH, (]
[(, float, ), pt, ., getY, (, ), ;, TextAnchor, alignPt, =, textAlignPtForLabelAnchorH, (, anchor, ), ;, Shape, hotspot, =]
[(, float, ), pt, ., getY, (, ), ;, TextAnchor, alignPt, =, textAlignPtForLabelAnchorH, (, anchor, ), ;, Shape, hotspot, =]
[., getY, (, ), ;, TextAnchor, alignPt, =, textAlignPtForLabelAnchorH, (, anchor, ), ;, Shape, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (]
[(, ), ;, TextAnchor, alignPt, =, textAlignPtForLabelAnchorH, (, anchor, ), ;, Shape, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,]
[;, TextAnchor, alignPt, =, textAlignPtForLabelAnchorH, (, anchor, ), ;, Shape, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,]
[alignPt, =, textAlignPtForLabelAnchorH, (, anchor, ), ;, Shape, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,, xx, ,]
[textAlignPtForLabelAnchorH, (, anchor, ), ;, Shape, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,, xx, ,, yy, ,]
[anchor, ), ;, Shape, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ,]
[;, Shape, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ,, 0.0, ,]
[;, Shape, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ,, 0.0, ,]
[(, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ,, 0.0, ,, TextAnchor, ., CENTER, ), ;, if, (]
[label, ,, g2, ,, xx, ,, yy, ,, alignPt, ,, 0.0, ,, TextAnchor, ., CENTER, ), ;, if, (, !]
[label, ,, g2, ,, xx, ,, yy, ,, alignPt, ,, 0.0, ,, TextAnchor, ., CENTER, ), ;, if, (, !]
[xx, ,, yy, ,, alignPt, ,, 0.0, ,, TextAnchor, ., CENTER, ), ;, if, (, !, dataArea, ., contains, (]
[xx, ,, yy, ,, alignPt, ,, 0.0, ,, TextAnchor, ., CENTER, ), ;, if, (, !, dataArea, ., contains, (]
[TextAnchor, ., CENTER, ), ;, if, (, !, dataArea, ., contains, (, hotspot, ., getBounds2D, (, ), ), ), {]
[CENTER, ), ;, if, (, !, dataArea, ., contains, (, hotspot, ., getBounds2D, (, ), ), ), {, anchor, =]
[;, if, (, !, dataArea, ., contains, (, hotspot, ., getBounds2D, (, ), ), ), {, anchor, =, flipAnchorV, (]
[!, dataArea, ., contains, (, hotspot, ., getBounds2D, (, ), ), ), {, anchor, =, flipAnchorV, (, anchor, ), ;]
[., contains, (, hotspot, ., getBounds2D, (, ), ), ), {, anchor, =, flipAnchorV, (, anchor, ), ;, pt, =]
[(, hotspot, ., getBounds2D, (, ), ), ), {, anchor, =, flipAnchorV, (, anchor, ), ;, pt, =, calculateLabelPoint, (]
[., getBounds2D, (, ), ), ), {, anchor, =, flipAnchorV, (, anchor, ), ;, pt, =, calculateLabelPoint, (, line, ,]
[(, ), ), ), {, anchor, =, flipAnchorV, (, anchor, ), ;, pt, =, calculateLabelPoint, (, line, ,, anchor, ,]
[), ), {, anchor, =, flipAnchorV, (, anchor, ), ;, pt, =, calculateLabelPoint, (, line, ,, anchor, ,, 5, ,]
[anchor, =, flipAnchorV, (, anchor, ), ;, pt, =, calculateLabelPoint, (, line, ,, anchor, ,, 5, ,, 5, ), ;]
[flipAnchorV, (, anchor, ), ;, pt, =, calculateLabelPoint, (, line, ,, anchor, ,, 5, ,, 5, ), ;, xx, =]
[), ;, pt, =, calculateLabelPoint, (, line, ,, anchor, ,, 5, ,, 5, ), ;, xx, =, (, float, )]
[), ;, pt, =, calculateLabelPoint, (, line, ,, anchor, ,, 5, ,, 5, ), ;, xx, =, (, float, )]
[line, ,, anchor, ,, 5, ,, 5, ), ;, xx, =, (, float, ), pt, ., getX, (, ), ;]
[anchor, ,, 5, ,, 5, ), ;, xx, =, (, float, ), pt, ., getX, (, ), ;, yy, =]
[,, 5, ), ;, xx, =, (, float, ), pt, ., getX, (, ), ;, yy, =, (, float, )]
[,, 5, ), ;, xx, =, (, float, ), pt, ., getX, (, ), ;, yy, =, (, float, )]
[(, float, ), pt, ., getX, (, ), ;, yy, =, (, float, ), pt, ., getY, (, ), ;]
[), pt, ., getX, (, ), ;, yy, =, (, float, ), pt, ., getY, (, ), ;, alignPt, =]
[., getX, (, ), ;, yy, =, (, float, ), pt, ., getY, (, ), ;, alignPt, =, textAlignPtForLabelAnchorH, (]
[), ;, yy, =, (, float, ), pt, ., getY, (, ), ;, alignPt, =, textAlignPtForLabelAnchorH, (, anchor, ), ;]
[yy, =, (, float, ), pt, ., getY, (, ), ;, alignPt, =, textAlignPtForLabelAnchorH, (, anchor, ), ;, hotspot, =]
[yy, =, (, float, ), pt, ., getY, (, ), ;, alignPt, =, textAlignPtForLabelAnchorH, (, anchor, ), ;, hotspot, =]
[), pt, ., getY, (, ), ;, alignPt, =, textAlignPtForLabelAnchorH, (, anchor, ), ;, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (]
[., getY, (, ), ;, alignPt, =, textAlignPtForLabelAnchorH, (, anchor, ), ;, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,]
[(, ), ;, alignPt, =, textAlignPtForLabelAnchorH, (, anchor, ), ;, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,]
[;, alignPt, =, textAlignPtForLabelAnchorH, (, anchor, ), ;, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,, xx, ,]
[=, textAlignPtForLabelAnchorH, (, anchor, ), ;, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,, xx, ,, yy, ,]
[(, anchor, ), ;, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ,]
[), ;, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ,, 0.0, ,]
[), ;, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ,, 0.0, ,]
[calculateRotatedStringBounds, (, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ,, 0.0, ,, TextAnchor, ., CENTER, ), ;, }]
[calculateRotatedStringBounds, (, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ,, 0.0, ,, TextAnchor, ., CENTER, ), ;, }]
[g2, ,, xx, ,, yy, ,, alignPt, ,, 0.0, ,, TextAnchor, ., CENTER, ), ;, }, g2, ., setPaint, (]
[g2, ,, xx, ,, yy, ,, alignPt, ,, 0.0, ,, TextAnchor, ., CENTER, ), ;, }, g2, ., setPaint, (]
[,, 0.0, ,, TextAnchor, ., CENTER, ), ;, }, g2, ., setPaint, (, crosshair, ., getLabelBackgroundPaint, (, ), ), ;]
[,, 0.0, ,, TextAnchor, ., CENTER, ), ;, }, g2, ., setPaint, (, crosshair, ., getLabelBackgroundPaint, (, ), ), ;]
[., CENTER, ), ;, }, g2, ., setPaint, (, crosshair, ., getLabelBackgroundPaint, (, ), ), ;, g2, ., fill, (]
[;, }, g2, ., setPaint, (, crosshair, ., getLabelBackgroundPaint, (, ), ), ;, g2, ., fill, (, hotspot, ), ;]
[;, }, g2, ., setPaint, (, crosshair, ., getLabelBackgroundPaint, (, ), ), ;, g2, ., fill, (, hotspot, ), ;]
[setPaint, (, crosshair, ., getLabelBackgroundPaint, (, ), ), ;, g2, ., fill, (, hotspot, ), ;, g2, ., setPaint, (]
[setPaint, (, crosshair, ., getLabelBackgroundPaint, (, ), ), ;, g2, ., fill, (, hotspot, ), ;, g2, ., setPaint, (]
[), ;, g2, ., fill, (, hotspot, ), ;, g2, ., setPaint, (, crosshair, ., getLabelOutlinePaint, (, ), ), ;]
[), ;, g2, ., fill, (, hotspot, ), ;, g2, ., setPaint, (, crosshair, ., getLabelOutlinePaint, (, ), ), ;]
[fill, (, hotspot, ), ;, g2, ., setPaint, (, crosshair, ., getLabelOutlinePaint, (, ), ), ;, g2, ., draw, (]
[), ;, g2, ., setPaint, (, crosshair, ., getLabelOutlinePaint, (, ), ), ;, g2, ., draw, (, hotspot, ), ;]
[), ;, g2, ., setPaint, (, crosshair, ., getLabelOutlinePaint, (, ), ), ;, g2, ., draw, (, hotspot, ), ;]
[setPaint, (, crosshair, ., getLabelOutlinePaint, (, ), ), ;, g2, ., draw, (, hotspot, ), ;, TextUtilities, ., drawAlignedString, (]
[crosshair, ., getLabelOutlinePaint, (, ), ), ;, g2, ., draw, (, hotspot, ), ;, TextUtilities, ., drawAlignedString, (, label, ,]
[getLabelOutlinePaint, (, ), ), ;, g2, ., draw, (, hotspot, ), ;, TextUtilities, ., drawAlignedString, (, label, ,, g2, ,]
[), ), ;, g2, ., draw, (, hotspot, ), ;, TextUtilities, ., drawAlignedString, (, label, ,, g2, ,, xx, ,]
[;, g2, ., draw, (, hotspot, ), ;, TextUtilities, ., drawAlignedString, (, label, ,, g2, ,, xx, ,, yy, ,]
[(, hotspot, ), ;, TextUtilities, ., drawAlignedString, (, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ), ;, }]
[(, hotspot, ), ;, TextUtilities, ., drawAlignedString, (, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ), ;, }]
[TextUtilities, ., drawAlignedString, (, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ), ;, }, g2, ., setPaint, (]
[(, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ), ;, }, g2, ., setPaint, (, savedPaint, ), ;]
[(, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ), ;, }, g2, ., setPaint, (, savedPaint, ), ;]
[,, xx, ,, yy, ,, alignPt, ), ;, }, g2, ., setPaint, (, savedPaint, ), ;, g2, ., setStroke, (]
[}, protected, void, drawVerticalCrosshair, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, double, x, ,, Crosshair, crosshair, ), {, if, (]
[}, protected, void, drawVerticalCrosshair, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, double, x, ,, Crosshair, crosshair, ), {, if, (]
[}, protected, void, drawVerticalCrosshair, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, double, x, ,, Crosshair, crosshair, ), {, if, (]
[void, drawVerticalCrosshair, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, double, x, ,, Crosshair, crosshair, ), {, if, (, x, >=]
[void, drawVerticalCrosshair, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, double, x, ,, Crosshair, crosshair, ), {, if, (, x, >=]
[Rectangle2D, dataArea, ,, double, x, ,, Crosshair, crosshair, ), {, if, (, x, >=, dataArea, ., getMinX, (, ), &&]
[Rectangle2D, dataArea, ,, double, x, ,, Crosshair, crosshair, ), {, if, (, x, >=, dataArea, ., getMinX, (, ), &&]
[,, double, x, ,, Crosshair, crosshair, ), {, if, (, x, >=, dataArea, ., getMinX, (, ), &&, x, <=]
[,, double, x, ,, Crosshair, crosshair, ), {, if, (, x, >=, dataArea, ., getMinX, (, ), &&, x, <=]
[x, >=, dataArea, ., getMinX, (, ), &&, x, <=, dataArea, ., getMaxX, (, ), ), {, Line2D, line, =]
[(, ), &&, x, <=, dataArea, ., getMaxX, (, ), ), {, Line2D, line, =, new, Line2D, ., Double, (]
[&&, x, <=, dataArea, ., getMaxX, (, ), ), {, Line2D, line, =, new, Line2D, ., Double, (, x, ,]
[&&, x, <=, dataArea, ., getMaxX, (, ), ), {, Line2D, line, =, new, Line2D, ., Double, (, x, ,]
[(, ), ), {, Line2D, line, =, new, Line2D, ., Double, (, x, ,, dataArea, ., getMinY, (, ), ,]
[), {, Line2D, line, =, new, Line2D, ., Double, (, x, ,, dataArea, ., getMinY, (, ), ,, x, ,]
[), {, Line2D, line, =, new, Line2D, ., Double, (, x, ,, dataArea, ., getMinY, (, ), ,, x, ,]
[x, ,, dataArea, ., getMinY, (, ), ,, x, ,, dataArea, ., getMaxY, (, ), ), ;, Paint, savedPaint, =]
[x, ,, dataArea, ., getMinY, (, ), ,, x, ,, dataArea, ., getMaxY, (, ), ), ;, Paint, savedPaint, =]
[,, dataArea, ., getMaxY, (, ), ), ;, Paint, savedPaint, =, g2, ., getPaint, (, ), ;, Stroke, savedStroke, =]
[,, dataArea, ., getMaxY, (, ), ), ;, Paint, savedPaint, =, g2, ., getPaint, (, ), ;, Stroke, savedStroke, =]
[), ;, Paint, savedPaint, =, g2, ., getPaint, (, ), ;, Stroke, savedStroke, =, g2, ., getStroke, (, ), ;]
[), ;, Paint, savedPaint, =, g2, ., getPaint, (, ), ;, Stroke, savedStroke, =, g2, ., getStroke, (, ), ;]
[=, g2, ., getPaint, (, ), ;, Stroke, savedStroke, =, g2, ., getStroke, (, ), ;, g2, ., setPaint, (]
[=, g2, ., getPaint, (, ), ;, Stroke, savedStroke, =, g2, ., getStroke, (, ), ;, g2, ., setPaint, (]
[Stroke, savedStroke, =, g2, ., getStroke, (, ), ;, g2, ., setPaint, (, crosshair, ., getPaint, (, ), ), ;]
[Stroke, savedStroke, =, g2, ., getStroke, (, ), ;, g2, ., setPaint, (, crosshair, ., getPaint, (, ), ), ;]
[., getStroke, (, ), ;, g2, ., setPaint, (, crosshair, ., getPaint, (, ), ), ;, g2, ., setStroke, (]
[., getStroke, (, ), ;, g2, ., setPaint, (, crosshair, ., getPaint, (, ), ), ;, g2, ., setStroke, (]
[setPaint, (, crosshair, ., getPaint, (, ), ), ;, g2, ., setStroke, (, crosshair, ., getStroke, (, ), ), ;]
[setPaint, (, crosshair, ., getPaint, (, ), ), ;, g2, ., setStroke, (, crosshair, ., getStroke, (, ), ), ;]
[getPaint, (, ), ), ;, g2, ., setStroke, (, crosshair, ., getStroke, (, ), ), ;, g2, ., draw, (]
[g2, ., setStroke, (, crosshair, ., getStroke, (, ), ), ;, g2, ., draw, (, line, ), ;, if, (]
[g2, ., setStroke, (, crosshair, ., getStroke, (, ), ), ;, g2, ., draw, (, line, ), ;, if, (]
[;, g2, ., draw, (, line, ), ;, if, (, crosshair, ., isLabelVisible, (, ), ), {, String, label, =]
[;, g2, ., draw, (, line, ), ;, if, (, crosshair, ., isLabelVisible, (, ), ), {, String, label, =]
[;, g2, ., draw, (, line, ), ;, if, (, crosshair, ., isLabelVisible, (, ), ), {, String, label, =]
[if, (, crosshair, ., isLabelVisible, (, ), ), {, String, label, =, crosshair, ., getLabelGenerator, (, ), ., generateLabel, (]
[), ), {, String, label, =, crosshair, ., getLabelGenerator, (, ), ., generateLabel, (, crosshair, ), ;, RectangleAnchor, anchor, =]
[), ), {, String, label, =, crosshair, ., getLabelGenerator, (, ), ., generateLabel, (, crosshair, ), ;, RectangleAnchor, anchor, =]
[(, ), ., generateLabel, (, crosshair, ), ;, RectangleAnchor, anchor, =, crosshair, ., getLabelAnchor, (, ), ;, Point2D, pt, =]
[., generateLabel, (, crosshair, ), ;, RectangleAnchor, anchor, =, crosshair, ., getLabelAnchor, (, ), ;, Point2D, pt, =, calculateLabelPoint, (]
[(, crosshair, ), ;, RectangleAnchor, anchor, =, crosshair, ., getLabelAnchor, (, ), ;, Point2D, pt, =, calculateLabelPoint, (, line, ,]
[), ;, RectangleAnchor, anchor, =, crosshair, ., getLabelAnchor, (, ), ;, Point2D, pt, =, calculateLabelPoint, (, line, ,, anchor, ,]
[RectangleAnchor, anchor, =, crosshair, ., getLabelAnchor, (, ), ;, Point2D, pt, =, calculateLabelPoint, (, line, ,, anchor, ,, 5, ,]
[(, ), ;, Point2D, pt, =, calculateLabelPoint, (, line, ,, anchor, ,, 5, ,, 5, ), ;, float, xx, =]
[Point2D, pt, =, calculateLabelPoint, (, line, ,, anchor, ,, 5, ,, 5, ), ;, float, xx, =, (, float, )]
[Point2D, pt, =, calculateLabelPoint, (, line, ,, anchor, ,, 5, ,, 5, ), ;, float, xx, =, (, float, )]
[5, ,, 5, ), ;, float, xx, =, (, float, ), pt, ., getX, (, ), ;, float, yy, =]
[), ;, float, xx, =, (, float, ), pt, ., getX, (, ), ;, float, yy, =, (, float, )]
[), ;, float, xx, =, (, float, ), pt, ., getX, (, ), ;, float, yy, =, (, float, )]
[., getX, (, ), ;, float, yy, =, (, float, ), pt, ., getY, (, ), ;, TextAnchor, alignPt, =]
[(, ), ;, float, yy, =, (, float, ), pt, ., getY, (, ), ;, TextAnchor, alignPt, =, textAlignPtForLabelAnchorV, (]
[(, float, ), pt, ., getY, (, ), ;, TextAnchor, alignPt, =, textAlignPtForLabelAnchorV, (, anchor, ), ;, Shape, hotspot, =]
[(, float, ), pt, ., getY, (, ), ;, TextAnchor, alignPt, =, textAlignPtForLabelAnchorV, (, anchor, ), ;, Shape, hotspot, =]
[., getY, (, ), ;, TextAnchor, alignPt, =, textAlignPtForLabelAnchorV, (, anchor, ), ;, Shape, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (]
[(, ), ;, TextAnchor, alignPt, =, textAlignPtForLabelAnchorV, (, anchor, ), ;, Shape, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,]
[;, TextAnchor, alignPt, =, textAlignPtForLabelAnchorV, (, anchor, ), ;, Shape, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,]
[alignPt, =, textAlignPtForLabelAnchorV, (, anchor, ), ;, Shape, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,, xx, ,]
[textAlignPtForLabelAnchorV, (, anchor, ), ;, Shape, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,, xx, ,, yy, ,]
[anchor, ), ;, Shape, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ,]
[;, Shape, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ,, 0.0, ,]
[;, Shape, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ,, 0.0, ,]
[(, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ,, 0.0, ,, TextAnchor, ., CENTER, ), ;, if, (]
[label, ,, g2, ,, xx, ,, yy, ,, alignPt, ,, 0.0, ,, TextAnchor, ., CENTER, ), ;, if, (, !]
[label, ,, g2, ,, xx, ,, yy, ,, alignPt, ,, 0.0, ,, TextAnchor, ., CENTER, ), ;, if, (, !]
[xx, ,, yy, ,, alignPt, ,, 0.0, ,, TextAnchor, ., CENTER, ), ;, if, (, !, dataArea, ., contains, (]
[xx, ,, yy, ,, alignPt, ,, 0.0, ,, TextAnchor, ., CENTER, ), ;, if, (, !, dataArea, ., contains, (]
[TextAnchor, ., CENTER, ), ;, if, (, !, dataArea, ., contains, (, hotspot, ., getBounds2D, (, ), ), ), {]
[CENTER, ), ;, if, (, !, dataArea, ., contains, (, hotspot, ., getBounds2D, (, ), ), ), {, anchor, =]
[;, if, (, !, dataArea, ., contains, (, hotspot, ., getBounds2D, (, ), ), ), {, anchor, =, flipAnchorH, (]
[!, dataArea, ., contains, (, hotspot, ., getBounds2D, (, ), ), ), {, anchor, =, flipAnchorH, (, anchor, ), ;]
[., contains, (, hotspot, ., getBounds2D, (, ), ), ), {, anchor, =, flipAnchorH, (, anchor, ), ;, pt, =]
[(, hotspot, ., getBounds2D, (, ), ), ), {, anchor, =, flipAnchorH, (, anchor, ), ;, pt, =, calculateLabelPoint, (]
[., getBounds2D, (, ), ), ), {, anchor, =, flipAnchorH, (, anchor, ), ;, pt, =, calculateLabelPoint, (, line, ,]
[(, ), ), ), {, anchor, =, flipAnchorH, (, anchor, ), ;, pt, =, calculateLabelPoint, (, line, ,, anchor, ,]
[), ), {, anchor, =, flipAnchorH, (, anchor, ), ;, pt, =, calculateLabelPoint, (, line, ,, anchor, ,, 5, ,]
[anchor, =, flipAnchorH, (, anchor, ), ;, pt, =, calculateLabelPoint, (, line, ,, anchor, ,, 5, ,, 5, ), ;]
[flipAnchorH, (, anchor, ), ;, pt, =, calculateLabelPoint, (, line, ,, anchor, ,, 5, ,, 5, ), ;, xx, =]
[), ;, pt, =, calculateLabelPoint, (, line, ,, anchor, ,, 5, ,, 5, ), ;, xx, =, (, float, )]
[), ;, pt, =, calculateLabelPoint, (, line, ,, anchor, ,, 5, ,, 5, ), ;, xx, =, (, float, )]
[line, ,, anchor, ,, 5, ,, 5, ), ;, xx, =, (, float, ), pt, ., getX, (, ), ;]
[anchor, ,, 5, ,, 5, ), ;, xx, =, (, float, ), pt, ., getX, (, ), ;, yy, =]
[,, 5, ), ;, xx, =, (, float, ), pt, ., getX, (, ), ;, yy, =, (, float, )]
[,, 5, ), ;, xx, =, (, float, ), pt, ., getX, (, ), ;, yy, =, (, float, )]
[(, float, ), pt, ., getX, (, ), ;, yy, =, (, float, ), pt, ., getY, (, ), ;]
[), pt, ., getX, (, ), ;, yy, =, (, float, ), pt, ., getY, (, ), ;, alignPt, =]
[., getX, (, ), ;, yy, =, (, float, ), pt, ., getY, (, ), ;, alignPt, =, textAlignPtForLabelAnchorV, (]
[), ;, yy, =, (, float, ), pt, ., getY, (, ), ;, alignPt, =, textAlignPtForLabelAnchorV, (, anchor, ), ;]
[yy, =, (, float, ), pt, ., getY, (, ), ;, alignPt, =, textAlignPtForLabelAnchorV, (, anchor, ), ;, hotspot, =]
[yy, =, (, float, ), pt, ., getY, (, ), ;, alignPt, =, textAlignPtForLabelAnchorV, (, anchor, ), ;, hotspot, =]
[), pt, ., getY, (, ), ;, alignPt, =, textAlignPtForLabelAnchorV, (, anchor, ), ;, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (]
[., getY, (, ), ;, alignPt, =, textAlignPtForLabelAnchorV, (, anchor, ), ;, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,]
[(, ), ;, alignPt, =, textAlignPtForLabelAnchorV, (, anchor, ), ;, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,]
[;, alignPt, =, textAlignPtForLabelAnchorV, (, anchor, ), ;, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,, xx, ,]
[=, textAlignPtForLabelAnchorV, (, anchor, ), ;, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,, xx, ,, yy, ,]
[(, anchor, ), ;, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ,]
[), ;, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ,, 0.0, ,]
[), ;, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ,, 0.0, ,]
[calculateRotatedStringBounds, (, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ,, 0.0, ,, TextAnchor, ., CENTER, ), ;, }]
[calculateRotatedStringBounds, (, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ,, 0.0, ,, TextAnchor, ., CENTER, ), ;, }]
[g2, ,, xx, ,, yy, ,, alignPt, ,, 0.0, ,, TextAnchor, ., CENTER, ), ;, }, g2, ., setPaint, (]
[g2, ,, xx, ,, yy, ,, alignPt, ,, 0.0, ,, TextAnchor, ., CENTER, ), ;, }, g2, ., setPaint, (]
[,, 0.0, ,, TextAnchor, ., CENTER, ), ;, }, g2, ., setPaint, (, crosshair, ., getLabelBackgroundPaint, (, ), ), ;]
[,, 0.0, ,, TextAnchor, ., CENTER, ), ;, }, g2, ., setPaint, (, crosshair, ., getLabelBackgroundPaint, (, ), ), ;]
[., CENTER, ), ;, }, g2, ., setPaint, (, crosshair, ., getLabelBackgroundPaint, (, ), ), ;, g2, ., fill, (]
[;, }, g2, ., setPaint, (, crosshair, ., getLabelBackgroundPaint, (, ), ), ;, g2, ., fill, (, hotspot, ), ;]
[;, }, g2, ., setPaint, (, crosshair, ., getLabelBackgroundPaint, (, ), ), ;, g2, ., fill, (, hotspot, ), ;]
[setPaint, (, crosshair, ., getLabelBackgroundPaint, (, ), ), ;, g2, ., fill, (, hotspot, ), ;, g2, ., setPaint, (]
[setPaint, (, crosshair, ., getLabelBackgroundPaint, (, ), ), ;, g2, ., fill, (, hotspot, ), ;, g2, ., setPaint, (]
[), ;, g2, ., fill, (, hotspot, ), ;, g2, ., setPaint, (, crosshair, ., getLabelOutlinePaint, (, ), ), ;]
[), ;, g2, ., fill, (, hotspot, ), ;, g2, ., setPaint, (, crosshair, ., getLabelOutlinePaint, (, ), ), ;]
[fill, (, hotspot, ), ;, g2, ., setPaint, (, crosshair, ., getLabelOutlinePaint, (, ), ), ;, g2, ., draw, (]
[), ;, g2, ., setPaint, (, crosshair, ., getLabelOutlinePaint, (, ), ), ;, g2, ., draw, (, hotspot, ), ;]
[), ;, g2, ., setPaint, (, crosshair, ., getLabelOutlinePaint, (, ), ), ;, g2, ., draw, (, hotspot, ), ;]
[setPaint, (, crosshair, ., getLabelOutlinePaint, (, ), ), ;, g2, ., draw, (, hotspot, ), ;, TextUtilities, ., drawAlignedString, (]
[crosshair, ., getLabelOutlinePaint, (, ), ), ;, g2, ., draw, (, hotspot, ), ;, TextUtilities, ., drawAlignedString, (, label, ,]
[getLabelOutlinePaint, (, ), ), ;, g2, ., draw, (, hotspot, ), ;, TextUtilities, ., drawAlignedString, (, label, ,, g2, ,]
[), ), ;, g2, ., draw, (, hotspot, ), ;, TextUtilities, ., drawAlignedString, (, label, ,, g2, ,, xx, ,]
[;, g2, ., draw, (, hotspot, ), ;, TextUtilities, ., drawAlignedString, (, label, ,, g2, ,, xx, ,, yy, ,]
[(, hotspot, ), ;, TextUtilities, ., drawAlignedString, (, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ), ;, }]
[(, hotspot, ), ;, TextUtilities, ., drawAlignedString, (, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ), ;, }]
[TextUtilities, ., drawAlignedString, (, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ), ;, }, g2, ., setPaint, (]
[(, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ), ;, }, g2, ., setPaint, (, savedPaint, ), ;]
[(, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ), ;, }, g2, ., setPaint, (, savedPaint, ), ;]
[,, xx, ,, yy, ,, alignPt, ), ;, }, g2, ., setPaint, (, savedPaint, ), ;, g2, ., setStroke, (]
[private, Point2D, calculateLabelPoint, (, Line2D, line, ,, RectangleAnchor, anchor, ,, double, deltaX, ,, double, deltaY, ), {, double, x, =]
[line, ,, RectangleAnchor, anchor, ,, double, deltaX, ,, double, deltaY, ), {, double, x, =, 0.0, ;, double, y, =]
[double, deltaX, ,, double, deltaY, ), {, double, x, =, 0.0, ;, double, y, =, 0.0, ;, boolean, left, =]
[deltaX, ,, double, deltaY, ), {, double, x, =, 0.0, ;, double, y, =, 0.0, ;, boolean, left, =, (]
[deltaX, ,, double, deltaY, ), {, double, x, =, 0.0, ;, double, y, =, 0.0, ;, boolean, left, =, (]
[deltaX, ,, double, deltaY, ), {, double, x, =, 0.0, ;, double, y, =, 0.0, ;, boolean, left, =, (]
[deltaX, ,, double, deltaY, ), {, double, x, =, 0.0, ;, double, y, =, 0.0, ;, boolean, left, =, (]
[double, deltaY, ), {, double, x, =, 0.0, ;, double, y, =, 0.0, ;, boolean, left, =, (, anchor, ==]
[double, deltaY, ), {, double, x, =, 0.0, ;, double, y, =, 0.0, ;, boolean, left, =, (, anchor, ==]
[double, x, =, 0.0, ;, double, y, =, 0.0, ;, boolean, left, =, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ||]
[double, x, =, 0.0, ;, double, y, =, 0.0, ;, boolean, left, =, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ||]
[=, 0.0, ;, double, y, =, 0.0, ;, boolean, left, =, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ||, anchor, ==]
[=, 0.0, ;, double, y, =, 0.0, ;, boolean, left, =, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ||, anchor, ==]
[y, =, 0.0, ;, boolean, left, =, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ||, anchor, ==, RectangleAnchor, ., LEFT, ||]
[y, =, 0.0, ;, boolean, left, =, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ||, anchor, ==, RectangleAnchor, ., LEFT, ||]
[0.0, ;, boolean, left, =, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ||, anchor, ==, RectangleAnchor, ., LEFT, ||, anchor, ==]
[0.0, ;, boolean, left, =, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ||, anchor, ==, RectangleAnchor, ., LEFT, ||, anchor, ==]
[RectangleAnchor, ., BOTTOM_LEFT, ||, anchor, ==, RectangleAnchor, ., LEFT, ||, anchor, ==, RectangleAnchor, ., TOP_LEFT, ), ;, boolean, right, =]
[., BOTTOM_LEFT, ||, anchor, ==, RectangleAnchor, ., LEFT, ||, anchor, ==, RectangleAnchor, ., TOP_LEFT, ), ;, boolean, right, =, (]
[., BOTTOM_LEFT, ||, anchor, ==, RectangleAnchor, ., LEFT, ||, anchor, ==, RectangleAnchor, ., TOP_LEFT, ), ;, boolean, right, =, (]
[., BOTTOM_LEFT, ||, anchor, ==, RectangleAnchor, ., LEFT, ||, anchor, ==, RectangleAnchor, ., TOP_LEFT, ), ;, boolean, right, =, (]
[., BOTTOM_LEFT, ||, anchor, ==, RectangleAnchor, ., LEFT, ||, anchor, ==, RectangleAnchor, ., TOP_LEFT, ), ;, boolean, right, =, (]
[||, anchor, ==, RectangleAnchor, ., LEFT, ||, anchor, ==, RectangleAnchor, ., TOP_LEFT, ), ;, boolean, right, =, (, anchor, ==]
[||, anchor, ==, RectangleAnchor, ., LEFT, ||, anchor, ==, RectangleAnchor, ., TOP_LEFT, ), ;, boolean, right, =, (, anchor, ==]
[., LEFT, ||, anchor, ==, RectangleAnchor, ., TOP_LEFT, ), ;, boolean, right, =, (, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ||]
[., LEFT, ||, anchor, ==, RectangleAnchor, ., TOP_LEFT, ), ;, boolean, right, =, (, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ||]
[||, anchor, ==, RectangleAnchor, ., TOP_LEFT, ), ;, boolean, right, =, (, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ||, anchor, ==]
[||, anchor, ==, RectangleAnchor, ., TOP_LEFT, ), ;, boolean, right, =, (, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ||, anchor, ==]
[., TOP_LEFT, ), ;, boolean, right, =, (, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, RectangleAnchor, ., RIGHT, ||]
[., TOP_LEFT, ), ;, boolean, right, =, (, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, RectangleAnchor, ., RIGHT, ||]
[), ;, boolean, right, =, (, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, RectangleAnchor, ., RIGHT, ||, anchor, ==]
[), ;, boolean, right, =, (, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, RectangleAnchor, ., RIGHT, ||, anchor, ==]
[RectangleAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, RectangleAnchor, ., RIGHT, ||, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), ;, boolean, top, =]
[., BOTTOM_RIGHT, ||, anchor, ==, RectangleAnchor, ., RIGHT, ||, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), ;, boolean, top, =, (]
[., BOTTOM_RIGHT, ||, anchor, ==, RectangleAnchor, ., RIGHT, ||, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), ;, boolean, top, =, (]
[., BOTTOM_RIGHT, ||, anchor, ==, RectangleAnchor, ., RIGHT, ||, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), ;, boolean, top, =, (]
[., BOTTOM_RIGHT, ||, anchor, ==, RectangleAnchor, ., RIGHT, ||, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), ;, boolean, top, =, (]
[||, anchor, ==, RectangleAnchor, ., RIGHT, ||, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), ;, boolean, top, =, (, anchor, ==]
[||, anchor, ==, RectangleAnchor, ., RIGHT, ||, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), ;, boolean, top, =, (, anchor, ==]
[., RIGHT, ||, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), ;, boolean, top, =, (, anchor, ==, RectangleAnchor, ., TOP_LEFT, ||]
[., RIGHT, ||, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), ;, boolean, top, =, (, anchor, ==, RectangleAnchor, ., TOP_LEFT, ||]
[||, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), ;, boolean, top, =, (, anchor, ==, RectangleAnchor, ., TOP_LEFT, ||, anchor, ==]
[||, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), ;, boolean, top, =, (, anchor, ==, RectangleAnchor, ., TOP_LEFT, ||, anchor, ==]
[., TOP_RIGHT, ), ;, boolean, top, =, (, anchor, ==, RectangleAnchor, ., TOP_LEFT, ||, anchor, ==, RectangleAnchor, ., TOP, ||]
[., TOP_RIGHT, ), ;, boolean, top, =, (, anchor, ==, RectangleAnchor, ., TOP_LEFT, ||, anchor, ==, RectangleAnchor, ., TOP, ||]
[), ;, boolean, top, =, (, anchor, ==, RectangleAnchor, ., TOP_LEFT, ||, anchor, ==, RectangleAnchor, ., TOP, ||, anchor, ==]
[), ;, boolean, top, =, (, anchor, ==, RectangleAnchor, ., TOP_LEFT, ||, anchor, ==, RectangleAnchor, ., TOP, ||, anchor, ==]
[RectangleAnchor, ., TOP_LEFT, ||, anchor, ==, RectangleAnchor, ., TOP, ||, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), ;, boolean, bottom, =]
[., TOP_LEFT, ||, anchor, ==, RectangleAnchor, ., TOP, ||, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), ;, boolean, bottom, =, (]
[., TOP_LEFT, ||, anchor, ==, RectangleAnchor, ., TOP, ||, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), ;, boolean, bottom, =, (]
[., TOP_LEFT, ||, anchor, ==, RectangleAnchor, ., TOP, ||, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), ;, boolean, bottom, =, (]
[., TOP_LEFT, ||, anchor, ==, RectangleAnchor, ., TOP, ||, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), ;, boolean, bottom, =, (]
[||, anchor, ==, RectangleAnchor, ., TOP, ||, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), ;, boolean, bottom, =, (, anchor, ==]
[||, anchor, ==, RectangleAnchor, ., TOP, ||, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), ;, boolean, bottom, =, (, anchor, ==]
[., TOP, ||, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), ;, boolean, bottom, =, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ||]
[., TOP, ||, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), ;, boolean, bottom, =, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ||]
[||, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), ;, boolean, bottom, =, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ||, anchor, ==]
[||, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), ;, boolean, bottom, =, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ||, anchor, ==]
[., TOP_RIGHT, ), ;, boolean, bottom, =, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ||, anchor, ==, RectangleAnchor, ., BOTTOM, ||]
[., TOP_RIGHT, ), ;, boolean, bottom, =, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ||, anchor, ==, RectangleAnchor, ., BOTTOM, ||]
[), ;, boolean, bottom, =, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ||, anchor, ==, RectangleAnchor, ., BOTTOM, ||, anchor, ==]
[), ;, boolean, bottom, =, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ||, anchor, ==, RectangleAnchor, ., BOTTOM, ||, anchor, ==]
[RectangleAnchor, ., BOTTOM_LEFT, ||, anchor, ==, RectangleAnchor, ., BOTTOM, ||, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ), ;, Rectangle, rect, =]
[RectangleAnchor, ., BOTTOM_LEFT, ||, anchor, ==, RectangleAnchor, ., BOTTOM, ||, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ), ;, Rectangle, rect, =]
[BOTTOM, ||, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ), ;, Rectangle, rect, =, line, ., getBounds, (, ), ;, if, (]
[BOTTOM, ||, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ), ;, Rectangle, rect, =, line, ., getBounds, (, ), ;, if, (]
[BOTTOM, ||, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ), ;, Rectangle, rect, =, line, ., getBounds, (, ), ;, if, (]
[BOTTOM_RIGHT, ), ;, Rectangle, rect, =, line, ., getBounds, (, ), ;, if, (, line, ., getX1, (, ), ==]
[BOTTOM_RIGHT, ), ;, Rectangle, rect, =, line, ., getBounds, (, ), ;, if, (, line, ., getX1, (, ), ==]
[., getBounds, (, ), ;, if, (, line, ., getX1, (, ), ==, line, ., getX2, (, ), ), {]
[(, ), ;, if, (, line, ., getX1, (, ), ==, line, ., getX2, (, ), ), {, x, =]
[(, ), ;, if, (, line, ., getX1, (, ), ==, line, ., getX2, (, ), ), {, x, =]
[., getX1, (, ), ==, line, ., getX2, (, ), ), {, x, =, line, ., getX1, (, ), ;]
[(, ), ==, line, ., getX2, (, ), ), {, x, =, line, ., getX1, (, ), ;, y, =]
[(, ), ==, line, ., getX2, (, ), ), {, x, =, line, ., getX1, (, ), ;, y, =]
[), ==, line, ., getX2, (, ), ), {, x, =, line, ., getX1, (, ), ;, y, =, (]
[), ==, line, ., getX2, (, ), ), {, x, =, line, ., getX1, (, ), ;, y, =, (]
[), ==, line, ., getX2, (, ), ), {, x, =, line, ., getX1, (, ), ;, y, =, (]
[), ), {, x, =, line, ., getX1, (, ), ;, y, =, (, line, ., getY1, (, ), +]
[), ), {, x, =, line, ., getX1, (, ), ;, y, =, (, line, ., getY1, (, ), +]
[getX1, (, ), ;, y, =, (, line, ., getY1, (, ), +, line, ., getY2, (, ), ), /]
[y, =, (, line, ., getY1, (, ), +, line, ., getY2, (, ), ), /, 2.0, ;, if, (]
[line, ., getY1, (, ), +, line, ., getY2, (, ), ), /, 2.0, ;, if, (, left, ), {]
[getY1, (, ), +, line, ., getY2, (, ), ), /, 2.0, ;, if, (, left, ), {, x, =]
[getY1, (, ), +, line, ., getY2, (, ), ), /, 2.0, ;, if, (, left, ), {, x, =]
[), +, line, ., getY2, (, ), ), /, 2.0, ;, if, (, left, ), {, x, =, x, -]
[(, ), ), /, 2.0, ;, if, (, left, ), {, x, =, x, -, deltaX, ;, }, if, (]
[/, 2.0, ;, if, (, left, ), {, x, =, x, -, deltaX, ;, }, if, (, right, ), {]
[;, if, (, left, ), {, x, =, x, -, deltaX, ;, }, if, (, right, ), {, x, =]
[;, if, (, left, ), {, x, =, x, -, deltaX, ;, }, if, (, right, ), {, x, =]
[(, left, ), {, x, =, x, -, deltaX, ;, }, if, (, right, ), {, x, =, x, +]
[=, x, -, deltaX, ;, }, if, (, right, ), {, x, =, x, +, deltaX, ;, }, if, (]
[deltaX, ;, }, if, (, right, ), {, x, =, x, +, deltaX, ;, }, if, (, top, ), {]
[}, if, (, right, ), {, x, =, x, +, deltaX, ;, }, if, (, top, ), {, y, =]
[}, if, (, right, ), {, x, =, x, +, deltaX, ;, }, if, (, top, ), {, y, =]
[}, if, (, right, ), {, x, =, x, +, deltaX, ;, }, if, (, top, ), {, y, =]
[), {, x, =, x, +, deltaX, ;, }, if, (, top, ), {, y, =, Math, ., min, (]
[), {, x, =, x, +, deltaX, ;, }, if, (, top, ), {, y, =, Math, ., min, (]
[deltaX, ;, }, if, (, top, ), {, y, =, Math, ., min, (, line, ., getY1, (, ), ,]
[deltaX, ;, }, if, (, top, ), {, y, =, Math, ., min, (, line, ., getY1, (, ), ,]
[{, y, =, Math, ., min, (, line, ., getY1, (, ), ,, line, ., getY2, (, ), ), +]
[min, (, line, ., getY1, (, ), ,, line, ., getY2, (, ), ), +, deltaY, ;, }, if, (]
[., getY1, (, ), ,, line, ., getY2, (, ), ), +, deltaY, ;, }, if, (, bottom, ), {]
[(, ), ,, line, ., getY2, (, ), ), +, deltaY, ;, }, if, (, bottom, ), {, y, =]
[(, ), ,, line, ., getY2, (, ), ), +, deltaY, ;, }, if, (, bottom, ), {, y, =]
[(, ), ,, line, ., getY2, (, ), ), +, deltaY, ;, }, if, (, bottom, ), {, y, =]
[., getY2, (, ), ), +, deltaY, ;, }, if, (, bottom, ), {, y, =, Math, ., max, (]
[., getY2, (, ), ), +, deltaY, ;, }, if, (, bottom, ), {, y, =, Math, ., max, (]
[deltaY, ;, }, if, (, bottom, ), {, y, =, Math, ., max, (, line, ., getY1, (, ), ,]
[deltaY, ;, }, if, (, bottom, ), {, y, =, Math, ., max, (, line, ., getY1, (, ), ,]
[{, y, =, Math, ., max, (, line, ., getY1, (, ), ,, line, ., getY2, (, ), ), -]
[(, line, ., getY1, (, ), ,, line, ., getY2, (, ), ), -, deltaY, ;, }, }, else, {]
[., getY1, (, ), ,, line, ., getY2, (, ), ), -, deltaY, ;, }, }, else, {, x, =]
[., getY1, (, ), ,, line, ., getY2, (, ), ), -, deltaY, ;, }, }, else, {, x, =]
[getY1, (, ), ,, line, ., getY2, (, ), ), -, deltaY, ;, }, }, else, {, x, =, (]
[getY1, (, ), ,, line, ., getY2, (, ), ), -, deltaY, ;, }, }, else, {, x, =, (]
[getY1, (, ), ,, line, ., getY2, (, ), ), -, deltaY, ;, }, }, else, {, x, =, (]
[getY2, (, ), ), -, deltaY, ;, }, }, else, {, x, =, (, line, ., getX1, (, ), +]
[getY2, (, ), ), -, deltaY, ;, }, }, else, {, x, =, (, line, ., getX1, (, ), +]
[}, }, else, {, x, =, (, line, ., getX1, (, ), +, line, ., getX2, (, ), ), /]
[else, {, x, =, (, line, ., getX1, (, ), +, line, ., getX2, (, ), ), /, 2.0, ;]
[x, =, (, line, ., getX1, (, ), +, line, ., getX2, (, ), ), /, 2.0, ;, y, =]
[x, =, (, line, ., getX1, (, ), +, line, ., getX2, (, ), ), /, 2.0, ;, y, =]
[+, line, ., getX2, (, ), ), /, 2.0, ;, y, =, line, ., getY1, (, ), ;, if, (]
[getX2, (, ), ), /, 2.0, ;, y, =, line, ., getY1, (, ), ;, if, (, left, ), {]
[), ), /, 2.0, ;, y, =, line, ., getY1, (, ), ;, if, (, left, ), {, x, =]
[), ), /, 2.0, ;, y, =, line, ., getY1, (, ), ;, if, (, left, ), {, x, =]
[), ), /, 2.0, ;, y, =, line, ., getY1, (, ), ;, if, (, left, ), {, x, =]
[;, y, =, line, ., getY1, (, ), ;, if, (, left, ), {, x, =, Math, ., min, (]
[;, y, =, line, ., getY1, (, ), ;, if, (, left, ), {, x, =, Math, ., min, (]
[(, ), ;, if, (, left, ), {, x, =, Math, ., min, (, line, ., getX1, (, ), ,]
[(, ), ;, if, (, left, ), {, x, =, Math, ., min, (, line, ., getX1, (, ), ,]
[{, x, =, Math, ., min, (, line, ., getX1, (, ), ,, line, ., getX2, (, ), ), +]
[min, (, line, ., getX1, (, ), ,, line, ., getX2, (, ), ), +, deltaX, ;, }, if, (]
[., getX1, (, ), ,, line, ., getX2, (, ), ), +, deltaX, ;, }, if, (, right, ), {]
[(, ), ,, line, ., getX2, (, ), ), +, deltaX, ;, }, if, (, right, ), {, x, =]
[(, ), ,, line, ., getX2, (, ), ), +, deltaX, ;, }, if, (, right, ), {, x, =]
[(, ), ,, line, ., getX2, (, ), ), +, deltaX, ;, }, if, (, right, ), {, x, =]
[., getX2, (, ), ), +, deltaX, ;, }, if, (, right, ), {, x, =, Math, ., max, (]
[., getX2, (, ), ), +, deltaX, ;, }, if, (, right, ), {, x, =, Math, ., max, (]
[deltaX, ;, }, if, (, right, ), {, x, =, Math, ., max, (, line, ., getX1, (, ), ,]
[deltaX, ;, }, if, (, right, ), {, x, =, Math, ., max, (, line, ., getX1, (, ), ,]
[{, x, =, Math, ., max, (, line, ., getX1, (, ), ,, line, ., getX2, (, ), ), -]
[max, (, line, ., getX1, (, ), ,, line, ., getX2, (, ), ), -, deltaX, ;, }, if, (]
[., getX1, (, ), ,, line, ., getX2, (, ), ), -, deltaX, ;, }, if, (, top, ), {]
[(, ), ,, line, ., getX2, (, ), ), -, deltaX, ;, }, if, (, top, ), {, y, =]
[(, ), ,, line, ., getX2, (, ), ), -, deltaX, ;, }, if, (, top, ), {, y, =]
[,, line, ., getX2, (, ), ), -, deltaX, ;, }, if, (, top, ), {, y, =, y, -]
[), ), -, deltaX, ;, }, if, (, top, ), {, y, =, y, -, deltaY, ;, }, if, (]
[deltaX, ;, }, if, (, top, ), {, y, =, y, -, deltaY, ;, }, if, (, bottom, ), {]
[}, if, (, top, ), {, y, =, y, -, deltaY, ;, }, if, (, bottom, ), {, y, =]
[}, if, (, top, ), {, y, =, y, -, deltaY, ;, }, if, (, bottom, ), {, y, =]
[(, top, ), {, y, =, y, -, deltaY, ;, }, if, (, bottom, ), {, y, =, y, +]
[=, y, -, deltaY, ;, }, if, (, bottom, ), {, y, =, y, +, deltaY, ;, }, }, return]
[}, if, (, bottom, ), {, y, =, y, +, deltaY, ;, }, }, return, new, Point2D, ., Double, (]
[(, bottom, ), {, y, =, y, +, deltaY, ;, }, }, return, new, Point2D, ., Double, (, x, ,]
[., Double, (, x, ,, y, ), ;, }, private, TextAnchor, textAlignPtForLabelAnchorV, (, RectangleAnchor, anchor, ), {, TextAnchor, result, =]
[., Double, (, x, ,, y, ), ;, }, private, TextAnchor, textAlignPtForLabelAnchorV, (, RectangleAnchor, anchor, ), {, TextAnchor, result, =]
[), ;, }, private, TextAnchor, textAlignPtForLabelAnchorV, (, RectangleAnchor, anchor, ), {, TextAnchor, result, =, TextAnchor, ., CENTER, ;, if, (]
[), ;, }, private, TextAnchor, textAlignPtForLabelAnchorV, (, RectangleAnchor, anchor, ), {, TextAnchor, result, =, TextAnchor, ., CENTER, ;, if, (]
[TextAnchor, textAlignPtForLabelAnchorV, (, RectangleAnchor, anchor, ), {, TextAnchor, result, =, TextAnchor, ., CENTER, ;, if, (, anchor, ., equals, (]
[TextAnchor, textAlignPtForLabelAnchorV, (, RectangleAnchor, anchor, ), {, TextAnchor, result, =, TextAnchor, ., CENTER, ;, if, (, anchor, ., equals, (]
[{, TextAnchor, result, =, TextAnchor, ., CENTER, ;, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {]
[result, =, TextAnchor, ., CENTER, ;, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {, result, =]
[result, =, TextAnchor, ., CENTER, ;, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {, result, =]
[anchor, ., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {, result, =, TextAnchor, ., TOP_RIGHT, ;, }, else, if, (]
[anchor, ., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {, result, =, TextAnchor, ., TOP_RIGHT, ;, }, else, if, (]
[RectangleAnchor, ., TOP_LEFT, ), ), {, result, =, TextAnchor, ., TOP_RIGHT, ;, }, else, if, (, anchor, ., equals, (]
[RectangleAnchor, ., TOP_LEFT, ), ), {, result, =, TextAnchor, ., TOP_RIGHT, ;, }, else, if, (, anchor, ., equals, (]
[result, =, TextAnchor, ., TOP_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP, ), ), {]
[TextAnchor, ., TOP_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP, ), ), {, result, =]
[TextAnchor, ., TOP_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP, ), ), {, result, =]
[anchor, ., equals, (, RectangleAnchor, ., TOP, ), ), {, result, =, TextAnchor, ., TOP_CENTER, ;, }, else, if, (]
[anchor, ., equals, (, RectangleAnchor, ., TOP, ), ), {, result, =, TextAnchor, ., TOP_CENTER, ;, }, else, if, (]
[RectangleAnchor, ., TOP, ), ), {, result, =, TextAnchor, ., TOP_CENTER, ;, }, else, if, (, anchor, ., equals, (]
[RectangleAnchor, ., TOP, ), ), {, result, =, TextAnchor, ., TOP_CENTER, ;, }, else, if, (, anchor, ., equals, (]
[result, =, TextAnchor, ., TOP_CENTER, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {]
[TextAnchor, ., TOP_CENTER, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, result, =]
[TextAnchor, ., TOP_CENTER, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, result, =]
[anchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, result, =, TextAnchor, ., TOP_LEFT, ;, }, else, if, (]
[anchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, result, =, TextAnchor, ., TOP_LEFT, ;, }, else, if, (]
[RectangleAnchor, ., TOP_RIGHT, ), ), {, result, =, TextAnchor, ., TOP_LEFT, ;, }, else, if, (, anchor, ., equals, (]
[RectangleAnchor, ., TOP_RIGHT, ), ), {, result, =, TextAnchor, ., TOP_LEFT, ;, }, else, if, (, anchor, ., equals, (]
[result, =, TextAnchor, ., TOP_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., LEFT, ), ), {]
[TextAnchor, ., TOP_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., LEFT, ), ), {, result, =]
[TextAnchor, ., TOP_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., LEFT, ), ), {, result, =]
[anchor, ., equals, (, RectangleAnchor, ., LEFT, ), ), {, result, =, TextAnchor, ., HALF_ASCENT_RIGHT, ;, }, else, if, (]
[anchor, ., equals, (, RectangleAnchor, ., LEFT, ), ), {, result, =, TextAnchor, ., HALF_ASCENT_RIGHT, ;, }, else, if, (]
[RectangleAnchor, ., LEFT, ), ), {, result, =, TextAnchor, ., HALF_ASCENT_RIGHT, ;, }, else, if, (, anchor, ., equals, (]
[RectangleAnchor, ., LEFT, ), ), {, result, =, TextAnchor, ., HALF_ASCENT_RIGHT, ;, }, else, if, (, anchor, ., equals, (]
[result, =, TextAnchor, ., HALF_ASCENT_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., RIGHT, ), ), {]
[TextAnchor, ., HALF_ASCENT_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., RIGHT, ), ), {, result, =]
[TextAnchor, ., HALF_ASCENT_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., RIGHT, ), ), {, result, =]
[anchor, ., equals, (, RectangleAnchor, ., RIGHT, ), ), {, result, =, TextAnchor, ., HALF_ASCENT_LEFT, ;, }, else, if, (]
[anchor, ., equals, (, RectangleAnchor, ., RIGHT, ), ), {, result, =, TextAnchor, ., HALF_ASCENT_LEFT, ;, }, else, if, (]
[RectangleAnchor, ., RIGHT, ), ), {, result, =, TextAnchor, ., HALF_ASCENT_LEFT, ;, }, else, if, (, anchor, ., equals, (]
[RectangleAnchor, ., RIGHT, ), ), {, result, =, TextAnchor, ., HALF_ASCENT_LEFT, ;, }, else, if, (, anchor, ., equals, (]
[result, =, TextAnchor, ., HALF_ASCENT_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {]
[TextAnchor, ., HALF_ASCENT_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result, =]
[TextAnchor, ., HALF_ASCENT_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result, =]
[anchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result, =, TextAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (]
[anchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result, =, TextAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (]
[RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result, =, TextAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (, anchor, ., equals, (]
[RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result, =, TextAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (, anchor, ., equals, (]
[result, =, TextAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM, ), ), {]
[TextAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM, ), ), {, result, =]
[TextAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM, ), ), {, result, =]
[anchor, ., equals, (, RectangleAnchor, ., BOTTOM, ), ), {, result, =, TextAnchor, ., BOTTOM_CENTER, ;, }, else, if, (]
[anchor, ., equals, (, RectangleAnchor, ., BOTTOM, ), ), {, result, =, TextAnchor, ., BOTTOM_CENTER, ;, }, else, if, (]
[RectangleAnchor, ., BOTTOM, ), ), {, result, =, TextAnchor, ., BOTTOM_CENTER, ;, }, else, if, (, anchor, ., equals, (]
[RectangleAnchor, ., BOTTOM, ), ), {, result, =, TextAnchor, ., BOTTOM_CENTER, ;, }, else, if, (, anchor, ., equals, (]
[result, =, TextAnchor, ., BOTTOM_CENTER, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {]
[TextAnchor, ., BOTTOM_CENTER, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {, result, =]
[TextAnchor, ., BOTTOM_CENTER, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {, result, =]
[if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {, result, =, TextAnchor, ., BOTTOM_LEFT, ;, }, return]
[TextAnchor, ., BOTTOM_LEFT, ;, }, return, result, ;, }, private, TextAnchor, textAlignPtForLabelAnchorH, (, RectangleAnchor, anchor, ), {, TextAnchor, result, =]
[TextAnchor, ., BOTTOM_LEFT, ;, }, return, result, ;, }, private, TextAnchor, textAlignPtForLabelAnchorH, (, RectangleAnchor, anchor, ), {, TextAnchor, result, =]
[result, ;, }, private, TextAnchor, textAlignPtForLabelAnchorH, (, RectangleAnchor, anchor, ), {, TextAnchor, result, =, TextAnchor, ., CENTER, ;, if, (]
[result, ;, }, private, TextAnchor, textAlignPtForLabelAnchorH, (, RectangleAnchor, anchor, ), {, TextAnchor, result, =, TextAnchor, ., CENTER, ;, if, (]
[TextAnchor, textAlignPtForLabelAnchorH, (, RectangleAnchor, anchor, ), {, TextAnchor, result, =, TextAnchor, ., CENTER, ;, if, (, anchor, ., equals, (]
[TextAnchor, textAlignPtForLabelAnchorH, (, RectangleAnchor, anchor, ), {, TextAnchor, result, =, TextAnchor, ., CENTER, ;, if, (, anchor, ., equals, (]
[{, TextAnchor, result, =, TextAnchor, ., CENTER, ;, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {]
[result, =, TextAnchor, ., CENTER, ;, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {, result, =]
[result, =, TextAnchor, ., CENTER, ;, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {, result, =]
[anchor, ., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {, result, =, TextAnchor, ., BOTTOM_LEFT, ;, }, else, if, (]
[anchor, ., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {, result, =, TextAnchor, ., BOTTOM_LEFT, ;, }, else, if, (]
[RectangleAnchor, ., TOP_LEFT, ), ), {, result, =, TextAnchor, ., BOTTOM_LEFT, ;, }, else, if, (, anchor, ., equals, (]
[RectangleAnchor, ., TOP_LEFT, ), ), {, result, =, TextAnchor, ., BOTTOM_LEFT, ;, }, else, if, (, anchor, ., equals, (]
[result, =, TextAnchor, ., BOTTOM_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP, ), ), {]
[TextAnchor, ., BOTTOM_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP, ), ), {, result, =]
[TextAnchor, ., BOTTOM_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP, ), ), {, result, =]
[anchor, ., equals, (, RectangleAnchor, ., TOP, ), ), {, result, =, TextAnchor, ., BOTTOM_CENTER, ;, }, else, if, (]
[anchor, ., equals, (, RectangleAnchor, ., TOP, ), ), {, result, =, TextAnchor, ., BOTTOM_CENTER, ;, }, else, if, (]
[RectangleAnchor, ., TOP, ), ), {, result, =, TextAnchor, ., BOTTOM_CENTER, ;, }, else, if, (, anchor, ., equals, (]
[RectangleAnchor, ., TOP, ), ), {, result, =, TextAnchor, ., BOTTOM_CENTER, ;, }, else, if, (, anchor, ., equals, (]
[result, =, TextAnchor, ., BOTTOM_CENTER, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {]
[TextAnchor, ., BOTTOM_CENTER, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, result, =]
[TextAnchor, ., BOTTOM_CENTER, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, result, =]
[anchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, result, =, TextAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (]
[anchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, result, =, TextAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (]
[RectangleAnchor, ., TOP_RIGHT, ), ), {, result, =, TextAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (, anchor, ., equals, (]
[RectangleAnchor, ., TOP_RIGHT, ), ), {, result, =, TextAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (, anchor, ., equals, (]
[result, =, TextAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., LEFT, ), ), {]
[TextAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., LEFT, ), ), {, result, =]
[TextAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., LEFT, ), ), {, result, =]
[anchor, ., equals, (, RectangleAnchor, ., LEFT, ), ), {, result, =, TextAnchor, ., HALF_ASCENT_LEFT, ;, }, else, if, (]
[anchor, ., equals, (, RectangleAnchor, ., LEFT, ), ), {, result, =, TextAnchor, ., HALF_ASCENT_LEFT, ;, }, else, if, (]
[RectangleAnchor, ., LEFT, ), ), {, result, =, TextAnchor, ., HALF_ASCENT_LEFT, ;, }, else, if, (, anchor, ., equals, (]
[RectangleAnchor, ., LEFT, ), ), {, result, =, TextAnchor, ., HALF_ASCENT_LEFT, ;, }, else, if, (, anchor, ., equals, (]
[result, =, TextAnchor, ., HALF_ASCENT_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., RIGHT, ), ), {]
[TextAnchor, ., HALF_ASCENT_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., RIGHT, ), ), {, result, =]
[TextAnchor, ., HALF_ASCENT_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., RIGHT, ), ), {, result, =]
[anchor, ., equals, (, RectangleAnchor, ., RIGHT, ), ), {, result, =, TextAnchor, ., HALF_ASCENT_RIGHT, ;, }, else, if, (]
[anchor, ., equals, (, RectangleAnchor, ., RIGHT, ), ), {, result, =, TextAnchor, ., HALF_ASCENT_RIGHT, ;, }, else, if, (]
[RectangleAnchor, ., RIGHT, ), ), {, result, =, TextAnchor, ., HALF_ASCENT_RIGHT, ;, }, else, if, (, anchor, ., equals, (]
[RectangleAnchor, ., RIGHT, ), ), {, result, =, TextAnchor, ., HALF_ASCENT_RIGHT, ;, }, else, if, (, anchor, ., equals, (]
[result, =, TextAnchor, ., HALF_ASCENT_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {]
[TextAnchor, ., HALF_ASCENT_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result, =]
[TextAnchor, ., HALF_ASCENT_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result, =]
[anchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result, =, TextAnchor, ., TOP_LEFT, ;, }, else, if, (]
[anchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result, =, TextAnchor, ., TOP_LEFT, ;, }, else, if, (]
[RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result, =, TextAnchor, ., TOP_LEFT, ;, }, else, if, (, anchor, ., equals, (]
[RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result, =, TextAnchor, ., TOP_LEFT, ;, }, else, if, (, anchor, ., equals, (]
[result, =, TextAnchor, ., TOP_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM, ), ), {]
[TextAnchor, ., TOP_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM, ), ), {, result, =]
[TextAnchor, ., TOP_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM, ), ), {, result, =]
[anchor, ., equals, (, RectangleAnchor, ., BOTTOM, ), ), {, result, =, TextAnchor, ., TOP_CENTER, ;, }, else, if, (]
[anchor, ., equals, (, RectangleAnchor, ., BOTTOM, ), ), {, result, =, TextAnchor, ., TOP_CENTER, ;, }, else, if, (]
[RectangleAnchor, ., BOTTOM, ), ), {, result, =, TextAnchor, ., TOP_CENTER, ;, }, else, if, (, anchor, ., equals, (]
[RectangleAnchor, ., BOTTOM, ), ), {, result, =, TextAnchor, ., TOP_CENTER, ;, }, else, if, (, anchor, ., equals, (]
[result, =, TextAnchor, ., TOP_CENTER, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {]
[TextAnchor, ., TOP_CENTER, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {, result, =]
[TextAnchor, ., TOP_CENTER, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {, result, =]
[if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {, result, =, TextAnchor, ., TOP_RIGHT, ;, }, return]
[TextAnchor, ., TOP_RIGHT, ;, }, return, result, ;, }, private, RectangleAnchor, flipAnchorH, (, RectangleAnchor, anchor, ), {, RectangleAnchor, result, =]
[}, return, result, ;, }, private, RectangleAnchor, flipAnchorH, (, RectangleAnchor, anchor, ), {, RectangleAnchor, result, =, anchor, ;, if, (]
[}, return, result, ;, }, private, RectangleAnchor, flipAnchorH, (, RectangleAnchor, anchor, ), {, RectangleAnchor, result, =, anchor, ;, if, (]
[}, private, RectangleAnchor, flipAnchorH, (, RectangleAnchor, anchor, ), {, RectangleAnchor, result, =, anchor, ;, if, (, anchor, ., equals, (]
[}, private, RectangleAnchor, flipAnchorH, (, RectangleAnchor, anchor, ), {, RectangleAnchor, result, =, anchor, ;, if, (, anchor, ., equals, (]
[anchor, ), {, RectangleAnchor, result, =, anchor, ;, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {]
[{, RectangleAnchor, result, =, anchor, ;, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {, result, =]
[{, RectangleAnchor, result, =, anchor, ;, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {, result, =]
[anchor, ., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {, result, =, RectangleAnchor, ., TOP_RIGHT, ;, }, else, if, (]
[anchor, ., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {, result, =, RectangleAnchor, ., TOP_RIGHT, ;, }, else, if, (]
[RectangleAnchor, ., TOP_LEFT, ), ), {, result, =, RectangleAnchor, ., TOP_RIGHT, ;, }, else, if, (, anchor, ., equals, (]
[RectangleAnchor, ., TOP_LEFT, ), ), {, result, =, RectangleAnchor, ., TOP_RIGHT, ;, }, else, if, (, anchor, ., equals, (]
[result, =, RectangleAnchor, ., TOP_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {]
[RectangleAnchor, ., TOP_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, result, =]
[RectangleAnchor, ., TOP_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, result, =]
[anchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, result, =, RectangleAnchor, ., TOP_LEFT, ;, }, else, if, (]
[anchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, result, =, RectangleAnchor, ., TOP_LEFT, ;, }, else, if, (]
[RectangleAnchor, ., TOP_RIGHT, ), ), {, result, =, RectangleAnchor, ., TOP_LEFT, ;, }, else, if, (, anchor, ., equals, (]
[RectangleAnchor, ., TOP_RIGHT, ), ), {, result, =, RectangleAnchor, ., TOP_LEFT, ;, }, else, if, (, anchor, ., equals, (]
[result, =, RectangleAnchor, ., TOP_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., LEFT, ), ), {]
[RectangleAnchor, ., TOP_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., LEFT, ), ), {, result, =]
[RectangleAnchor, ., TOP_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., LEFT, ), ), {, result, =]
[anchor, ., equals, (, RectangleAnchor, ., LEFT, ), ), {, result, =, RectangleAnchor, ., RIGHT, ;, }, else, if, (]
[anchor, ., equals, (, RectangleAnchor, ., LEFT, ), ), {, result, =, RectangleAnchor, ., RIGHT, ;, }, else, if, (]
[RectangleAnchor, ., LEFT, ), ), {, result, =, RectangleAnchor, ., RIGHT, ;, }, else, if, (, anchor, ., equals, (]
[RectangleAnchor, ., LEFT, ), ), {, result, =, RectangleAnchor, ., RIGHT, ;, }, else, if, (, anchor, ., equals, (]
[result, =, RectangleAnchor, ., RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., RIGHT, ), ), {]
[RectangleAnchor, ., RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., RIGHT, ), ), {, result, =]
[RectangleAnchor, ., RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., RIGHT, ), ), {, result, =]
[anchor, ., equals, (, RectangleAnchor, ., RIGHT, ), ), {, result, =, RectangleAnchor, ., LEFT, ;, }, else, if, (]
[anchor, ., equals, (, RectangleAnchor, ., RIGHT, ), ), {, result, =, RectangleAnchor, ., LEFT, ;, }, else, if, (]
[RectangleAnchor, ., RIGHT, ), ), {, result, =, RectangleAnchor, ., LEFT, ;, }, else, if, (, anchor, ., equals, (]
[RectangleAnchor, ., RIGHT, ), ), {, result, =, RectangleAnchor, ., LEFT, ;, }, else, if, (, anchor, ., equals, (]
[result, =, RectangleAnchor, ., LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {]
[RectangleAnchor, ., LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result, =]
[RectangleAnchor, ., LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result, =]
[anchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result, =, RectangleAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (]
[anchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result, =, RectangleAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (]
[RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result, =, RectangleAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (, anchor, ., equals, (]
[RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result, =, RectangleAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (, anchor, ., equals, (]
[result, =, RectangleAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {]
[RectangleAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {, result, =]
[RectangleAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {, result, =]
[if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {, result, =, RectangleAnchor, ., BOTTOM_LEFT, ;, }, return]
[RectangleAnchor, ., BOTTOM_LEFT, ;, }, return, result, ;, }, private, RectangleAnchor, flipAnchorV, (, RectangleAnchor, anchor, ), {, RectangleAnchor, result, =]
[}, return, result, ;, }, private, RectangleAnchor, flipAnchorV, (, RectangleAnchor, anchor, ), {, RectangleAnchor, result, =, anchor, ;, if, (]
[}, return, result, ;, }, private, RectangleAnchor, flipAnchorV, (, RectangleAnchor, anchor, ), {, RectangleAnchor, result, =, anchor, ;, if, (]
[}, private, RectangleAnchor, flipAnchorV, (, RectangleAnchor, anchor, ), {, RectangleAnchor, result, =, anchor, ;, if, (, anchor, ., equals, (]
[}, private, RectangleAnchor, flipAnchorV, (, RectangleAnchor, anchor, ), {, RectangleAnchor, result, =, anchor, ;, if, (, anchor, ., equals, (]
[anchor, ), {, RectangleAnchor, result, =, anchor, ;, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {]
[{, RectangleAnchor, result, =, anchor, ;, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {, result, =]
[{, RectangleAnchor, result, =, anchor, ;, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {, result, =]
[anchor, ., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {, result, =, RectangleAnchor, ., BOTTOM_LEFT, ;, }, else, if, (]
[anchor, ., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {, result, =, RectangleAnchor, ., BOTTOM_LEFT, ;, }, else, if, (]
[RectangleAnchor, ., TOP_LEFT, ), ), {, result, =, RectangleAnchor, ., BOTTOM_LEFT, ;, }, else, if, (, anchor, ., equals, (]
[RectangleAnchor, ., TOP_LEFT, ), ), {, result, =, RectangleAnchor, ., BOTTOM_LEFT, ;, }, else, if, (, anchor, ., equals, (]
[result, =, RectangleAnchor, ., BOTTOM_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {]
[RectangleAnchor, ., BOTTOM_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, result, =]
[RectangleAnchor, ., BOTTOM_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, result, =]
[anchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, result, =, RectangleAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (]
[anchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, result, =, RectangleAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (]
[RectangleAnchor, ., TOP_RIGHT, ), ), {, result, =, RectangleAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (, anchor, ., equals, (]
[RectangleAnchor, ., TOP_RIGHT, ), ), {, result, =, RectangleAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (, anchor, ., equals, (]
[result, =, RectangleAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP, ), ), {]
[RectangleAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP, ), ), {, result, =]
[RectangleAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP, ), ), {, result, =]
[anchor, ., equals, (, RectangleAnchor, ., TOP, ), ), {, result, =, RectangleAnchor, ., BOTTOM, ;, }, else, if, (]
[anchor, ., equals, (, RectangleAnchor, ., TOP, ), ), {, result, =, RectangleAnchor, ., BOTTOM, ;, }, else, if, (]
[RectangleAnchor, ., TOP, ), ), {, result, =, RectangleAnchor, ., BOTTOM, ;, }, else, if, (, anchor, ., equals, (]
[RectangleAnchor, ., TOP, ), ), {, result, =, RectangleAnchor, ., BOTTOM, ;, }, else, if, (, anchor, ., equals, (]
[result, =, RectangleAnchor, ., BOTTOM, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM, ), ), {]
[RectangleAnchor, ., BOTTOM, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM, ), ), {, result, =]
[RectangleAnchor, ., BOTTOM, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM, ), ), {, result, =]
[anchor, ., equals, (, RectangleAnchor, ., BOTTOM, ), ), {, result, =, RectangleAnchor, ., TOP, ;, }, else, if, (]
[anchor, ., equals, (, RectangleAnchor, ., BOTTOM, ), ), {, result, =, RectangleAnchor, ., TOP, ;, }, else, if, (]
[RectangleAnchor, ., BOTTOM, ), ), {, result, =, RectangleAnchor, ., TOP, ;, }, else, if, (, anchor, ., equals, (]
[RectangleAnchor, ., BOTTOM, ), ), {, result, =, RectangleAnchor, ., TOP, ;, }, else, if, (, anchor, ., equals, (]
[result, =, RectangleAnchor, ., TOP, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {]
[RectangleAnchor, ., TOP, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result, =]
[RectangleAnchor, ., TOP, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result, =]
[anchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result, =, RectangleAnchor, ., TOP_LEFT, ;, }, else, if, (]
[anchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result, =, RectangleAnchor, ., TOP_LEFT, ;, }, else, if, (]
[RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result, =, RectangleAnchor, ., TOP_LEFT, ;, }, else, if, (, anchor, ., equals, (]
[RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result, =, RectangleAnchor, ., TOP_LEFT, ;, }, else, if, (, anchor, ., equals, (]
[result, =, RectangleAnchor, ., TOP_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {]
[RectangleAnchor, ., TOP_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {, result, =]
[RectangleAnchor, ., TOP_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {, result, =]
[if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {, result, =, RectangleAnchor, ., TOP_RIGHT, ;, }, return]
[=, RectangleAnchor, ., TOP_RIGHT, ;, }, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[=, RectangleAnchor, ., TOP_RIGHT, ;, }, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[., TOP_RIGHT, ;, }, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, CrosshairOverlay, ), ), {, return]
[true, ;, }, if, (, !, (, obj, instanceof, CrosshairOverlay, ), ), {, return, false, ;, }, CrosshairOverlay, that, =]
[if, (, !, (, obj, instanceof, CrosshairOverlay, ), ), {, return, false, ;, }, CrosshairOverlay, that, =, (, CrosshairOverlay, )]
[obj, instanceof, CrosshairOverlay, ), ), {, return, false, ;, }, CrosshairOverlay, that, =, (, CrosshairOverlay, ), obj, ;, if, (]
[instanceof, CrosshairOverlay, ), ), {, return, false, ;, }, CrosshairOverlay, that, =, (, CrosshairOverlay, ), obj, ;, if, (, !]
[instanceof, CrosshairOverlay, ), ), {, return, false, ;, }, CrosshairOverlay, that, =, (, CrosshairOverlay, ), obj, ;, if, (, !]
[instanceof, CrosshairOverlay, ), ), {, return, false, ;, }, CrosshairOverlay, that, =, (, CrosshairOverlay, ), obj, ;, if, (, !]
[false, ;, }, CrosshairOverlay, that, =, (, CrosshairOverlay, ), obj, ;, if, (, !, this, ., xCrosshairs, ., equals, (]
[false, ;, }, CrosshairOverlay, that, =, (, CrosshairOverlay, ), obj, ;, if, (, !, this, ., xCrosshairs, ., equals, (]
[CrosshairOverlay, ), obj, ;, if, (, !, this, ., xCrosshairs, ., equals, (, that, ., xCrosshairs, ), ), {, return]
[(, !, this, ., xCrosshairs, ., equals, (, that, ., xCrosshairs, ), ), {, return, false, ;, }, if, (]
[!, this, ., xCrosshairs, ., equals, (, that, ., xCrosshairs, ), ), {, return, false, ;, }, if, (, !]
[!, this, ., xCrosshairs, ., equals, (, that, ., xCrosshairs, ), ), {, return, false, ;, }, if, (, !]
[!, this, ., xCrosshairs, ., equals, (, that, ., xCrosshairs, ), ), {, return, false, ;, }, if, (, !]
[(, that, ., xCrosshairs, ), ), {, return, false, ;, }, if, (, !, this, ., yCrosshairs, ., equals, (]
[(, that, ., xCrosshairs, ), ), {, return, false, ;, }, if, (, !, this, ., yCrosshairs, ., equals, (]
[return, false, ;, }, if, (, !, this, ., yCrosshairs, ., equals, (, that, ., yCrosshairs, ), ), {, return]
[if, (, !, this, ., yCrosshairs, ., equals, (, that, ., yCrosshairs, ), ), {, return, false, ;, }, return]
[{, return, false, ;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, CrosshairOverlay, clone, =]
[;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, CrosshairOverlay, clone, =, (, CrosshairOverlay, )]
[;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, CrosshairOverlay, clone, =, (, CrosshairOverlay, )]
[public, Object, clone, (, ), throws, CloneNotSupportedException, {, CrosshairOverlay, clone, =, (, CrosshairOverlay, ), super, ., clone, (, ), ;]
[public, Object, clone, (, ), throws, CloneNotSupportedException, {, CrosshairOverlay, clone, =, (, CrosshairOverlay, ), super, ., clone, (, ), ;]
[), throws, CloneNotSupportedException, {, CrosshairOverlay, clone, =, (, CrosshairOverlay, ), super, ., clone, (, ), ;, clone, ., xCrosshairs, =]
[{, CrosshairOverlay, clone, =, (, CrosshairOverlay, ), super, ., clone, (, ), ;, clone, ., xCrosshairs, =, (, List, )]
[{, CrosshairOverlay, clone, =, (, CrosshairOverlay, ), super, ., clone, (, ), ;, clone, ., xCrosshairs, =, (, List, )]
[(, CrosshairOverlay, ), super, ., clone, (, ), ;, clone, ., xCrosshairs, =, (, List, ), ObjectUtilities, ., deepClone, (]
[(, CrosshairOverlay, ), super, ., clone, (, ), ;, clone, ., xCrosshairs, =, (, List, ), ObjectUtilities, ., deepClone, (]
[clone, (, ), ;, clone, ., xCrosshairs, =, (, List, ), ObjectUtilities, ., deepClone, (, this, ., xCrosshairs, ), ;]
[clone, (, ), ;, clone, ., xCrosshairs, =, (, List, ), ObjectUtilities, ., deepClone, (, this, ., xCrosshairs, ), ;]
[clone, ., xCrosshairs, =, (, List, ), ObjectUtilities, ., deepClone, (, this, ., xCrosshairs, ), ;, clone, ., yCrosshairs, =]
[=, (, List, ), ObjectUtilities, ., deepClone, (, this, ., xCrosshairs, ), ;, clone, ., yCrosshairs, =, (, List, )]
[=, (, List, ), ObjectUtilities, ., deepClone, (, this, ., xCrosshairs, ), ;, clone, ., yCrosshairs, =, (, List, )]
[ObjectUtilities, ., deepClone, (, this, ., xCrosshairs, ), ;, clone, ., yCrosshairs, =, (, List, ), ObjectUtilities, ., deepClone, (]
[ObjectUtilities, ., deepClone, (, this, ., xCrosshairs, ), ;, clone, ., yCrosshairs, =, (, List, ), ObjectUtilities, ., deepClone, (]
[xCrosshairs, ), ;, clone, ., yCrosshairs, =, (, List, ), ObjectUtilities, ., deepClone, (, this, ., yCrosshairs, ), ;, return]
