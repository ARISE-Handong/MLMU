[{, private, final, RealMatrix, correlationMatrix, ;, private, final, int, nObs, ;, public, PearsonsCorrelation, (, ), {, super, (, ), ;]
[final, RealMatrix, correlationMatrix, ;, private, final, int, nObs, ;, public, PearsonsCorrelation, (, ), {, super, (, ), ;, correlationMatrix, =]
[correlationMatrix, ;, private, final, int, nObs, ;, public, PearsonsCorrelation, (, ), {, super, (, ), ;, correlationMatrix, =, null, ;]
[private, final, int, nObs, ;, public, PearsonsCorrelation, (, ), {, super, (, ), ;, correlationMatrix, =, null, ;, nObs, =]
[null, ;, nObs, =, 0, ;, }, public, PearsonsCorrelation, (, double, [, ], [, ], data, ), {, this, (]
[=, 0, ;, }, public, PearsonsCorrelation, (, double, [, ], [, ], data, ), {, this, (, new, BlockRealMatrix, (]
[data, ), {, this, (, new, BlockRealMatrix, (, data, ), ), ;, }, public, PearsonsCorrelation, (, RealMatrix, matrix, ), {]
[{, this, (, new, BlockRealMatrix, (, data, ), ), ;, }, public, PearsonsCorrelation, (, RealMatrix, matrix, ), {, checkSufficientData, (]
[new, BlockRealMatrix, (, data, ), ), ;, }, public, PearsonsCorrelation, (, RealMatrix, matrix, ), {, checkSufficientData, (, matrix, ), ;]
[(, data, ), ), ;, }, public, PearsonsCorrelation, (, RealMatrix, matrix, ), {, checkSufficientData, (, matrix, ), ;, nObs, =]
[(, data, ), ), ;, }, public, PearsonsCorrelation, (, RealMatrix, matrix, ), {, checkSufficientData, (, matrix, ), ;, nObs, =]
[public, PearsonsCorrelation, (, RealMatrix, matrix, ), {, checkSufficientData, (, matrix, ), ;, nObs, =, matrix, ., getRowDimension, (, ), ;]
[(, RealMatrix, matrix, ), {, checkSufficientData, (, matrix, ), ;, nObs, =, matrix, ., getRowDimension, (, ), ;, correlationMatrix, =]
[matrix, ), {, checkSufficientData, (, matrix, ), ;, nObs, =, matrix, ., getRowDimension, (, ), ;, correlationMatrix, =, computeCorrelationMatrix, (]
[), ;, correlationMatrix, =, computeCorrelationMatrix, (, matrix, ), ;, }, public, PearsonsCorrelation, (, Covariance, covariance, ), {, RealMatrix, covarianceMatrix, =]
[), ;, correlationMatrix, =, computeCorrelationMatrix, (, matrix, ), ;, }, public, PearsonsCorrelation, (, Covariance, covariance, ), {, RealMatrix, covarianceMatrix, =]
[;, }, public, PearsonsCorrelation, (, Covariance, covariance, ), {, RealMatrix, covarianceMatrix, =, covariance, ., getCovarianceMatrix, (, ), ;, if, (]
[;, }, public, PearsonsCorrelation, (, Covariance, covariance, ), {, RealMatrix, covarianceMatrix, =, covariance, ., getCovarianceMatrix, (, ), ;, if, (]
[public, PearsonsCorrelation, (, Covariance, covariance, ), {, RealMatrix, covarianceMatrix, =, covariance, ., getCovarianceMatrix, (, ), ;, if, (, covarianceMatrix, ==]
[covariance, ), {, RealMatrix, covarianceMatrix, =, covariance, ., getCovarianceMatrix, (, ), ;, if, (, covarianceMatrix, ==, null, ), {, throw]
[RealMatrix, covarianceMatrix, =, covariance, ., getCovarianceMatrix, (, ), ;, if, (, covarianceMatrix, ==, null, ), {, throw, new, NullArgumentException, (]
[RealMatrix, covarianceMatrix, =, covariance, ., getCovarianceMatrix, (, ), ;, if, (, covarianceMatrix, ==, null, ), {, throw, new, NullArgumentException, (]
[(, ), ;, if, (, covarianceMatrix, ==, null, ), {, throw, new, NullArgumentException, (, LocalizedFormats, ., COVARIANCE_MATRIX, ), ;, }]
[;, if, (, covarianceMatrix, ==, null, ), {, throw, new, NullArgumentException, (, LocalizedFormats, ., COVARIANCE_MATRIX, ), ;, }, nObs, =]
[;, if, (, covarianceMatrix, ==, null, ), {, throw, new, NullArgumentException, (, LocalizedFormats, ., COVARIANCE_MATRIX, ), ;, }, nObs, =]
[), {, throw, new, NullArgumentException, (, LocalizedFormats, ., COVARIANCE_MATRIX, ), ;, }, nObs, =, covariance, ., getN, (, ), ;]
[throw, new, NullArgumentException, (, LocalizedFormats, ., COVARIANCE_MATRIX, ), ;, }, nObs, =, covariance, ., getN, (, ), ;, correlationMatrix, =]
[NullArgumentException, (, LocalizedFormats, ., COVARIANCE_MATRIX, ), ;, }, nObs, =, covariance, ., getN, (, ), ;, correlationMatrix, =, covarianceToCorrelation, (]
[), ;, correlationMatrix, =, covarianceToCorrelation, (, covarianceMatrix, ), ;, }, public, PearsonsCorrelation, (, RealMatrix, covarianceMatrix, ,, int, numberOfObservations, ), {]
[correlationMatrix, =, covarianceToCorrelation, (, covarianceMatrix, ), ;, }, public, PearsonsCorrelation, (, RealMatrix, covarianceMatrix, ,, int, numberOfObservations, ), {, nObs, =]
[covarianceToCorrelation, (, covarianceMatrix, ), ;, }, public, PearsonsCorrelation, (, RealMatrix, covarianceMatrix, ,, int, numberOfObservations, ), {, nObs, =, numberOfObservations, ;]
[covarianceMatrix, ), ;, }, public, PearsonsCorrelation, (, RealMatrix, covarianceMatrix, ,, int, numberOfObservations, ), {, nObs, =, numberOfObservations, ;, correlationMatrix, =]
[;, }, public, PearsonsCorrelation, (, RealMatrix, covarianceMatrix, ,, int, numberOfObservations, ), {, nObs, =, numberOfObservations, ;, correlationMatrix, =, covarianceToCorrelation, (]
[{, nObs, =, numberOfObservations, ;, correlationMatrix, =, covarianceToCorrelation, (, covarianceMatrix, ), ;, }, public, RealMatrix, getCorrelationMatrix, (, ), {, return]
[}, public, RealMatrix, getCorrelationMatrix, (, ), {, return, correlationMatrix, ;, }, public, RealMatrix, getCorrelationStandardErrors, (, ), {, int, nVars, =]
[}, public, RealMatrix, getCorrelationMatrix, (, ), {, return, correlationMatrix, ;, }, public, RealMatrix, getCorrelationStandardErrors, (, ), {, int, nVars, =]
[getCorrelationStandardErrors, (, ), {, int, nVars, =, correlationMatrix, ., getColumnDimension, (, ), ;, double, [, ], [, ], out, =]
[{, int, nVars, =, correlationMatrix, ., getColumnDimension, (, ), ;, double, [, ], [, ], out, =, new, double, []
[=, correlationMatrix, ., getColumnDimension, (, ), ;, double, [, ], [, ], out, =, new, double, [, nVars, ], []
[[, ], [, ], out, =, new, double, [, nVars, ], [, nVars, ], ;, for, (, int, i, =]
[[, ], out, =, new, double, [, nVars, ], [, nVars, ], ;, for, (, int, i, =, 0, ;]
[[, ], out, =, new, double, [, nVars, ], [, nVars, ], ;, for, (, int, i, =, 0, ;]
[out, =, new, double, [, nVars, ], [, nVars, ], ;, for, (, int, i, =, 0, ;, i, <]
[new, double, [, nVars, ], [, nVars, ], ;, for, (, int, i, =, 0, ;, i, <, nVars, ;]
[new, double, [, nVars, ], [, nVars, ], ;, for, (, int, i, =, 0, ;, i, <, nVars, ;]
[for, (, int, i, =, 0, ;, i, <, nVars, ;, i, ++, ), {, for, (, int, j, =]
[int, i, =, 0, ;, i, <, nVars, ;, i, ++, ), {, for, (, int, j, =, 0, ;]
[int, i, =, 0, ;, i, <, nVars, ;, i, ++, ), {, for, (, int, j, =, 0, ;]
[=, 0, ;, i, <, nVars, ;, i, ++, ), {, for, (, int, j, =, 0, ;, j, <]
[;, i, <, nVars, ;, i, ++, ), {, for, (, int, j, =, 0, ;, j, <, nVars, ;]
[;, i, <, nVars, ;, i, ++, ), {, for, (, int, j, =, 0, ;, j, <, nVars, ;]
[), {, for, (, int, j, =, 0, ;, j, <, nVars, ;, j, ++, ), {, double, r, =]
[), {, for, (, int, j, =, 0, ;, j, <, nVars, ;, j, ++, ), {, double, r, =]
[int, j, =, 0, ;, j, <, nVars, ;, j, ++, ), {, double, r, =, correlationMatrix, ., getEntry, (]
[=, 0, ;, j, <, nVars, ;, j, ++, ), {, double, r, =, correlationMatrix, ., getEntry, (, i, ,]
[j, <, nVars, ;, j, ++, ), {, double, r, =, correlationMatrix, ., getEntry, (, i, ,, j, ), ;]
[j, <, nVars, ;, j, ++, ), {, double, r, =, correlationMatrix, ., getEntry, (, i, ,, j, ), ;]
[j, <, nVars, ;, j, ++, ), {, double, r, =, correlationMatrix, ., getEntry, (, i, ,, j, ), ;]
[nVars, ;, j, ++, ), {, double, r, =, correlationMatrix, ., getEntry, (, i, ,, j, ), ;, out, []
[++, ), {, double, r, =, correlationMatrix, ., getEntry, (, i, ,, j, ), ;, out, [, i, ], []
[double, r, =, correlationMatrix, ., getEntry, (, i, ,, j, ), ;, out, [, i, ], [, j, ], =]
[double, r, =, correlationMatrix, ., getEntry, (, i, ,, j, ), ;, out, [, i, ], [, j, ], =]
[., getEntry, (, i, ,, j, ), ;, out, [, i, ], [, j, ], =, FastMath, ., sqrt, (]
[., getEntry, (, i, ,, j, ), ;, out, [, i, ], [, j, ], =, FastMath, ., sqrt, (]
[getEntry, (, i, ,, j, ), ;, out, [, i, ], [, j, ], =, FastMath, ., sqrt, (, (]
[getEntry, (, i, ,, j, ), ;, out, [, i, ], [, j, ], =, FastMath, ., sqrt, (, (]
[i, ,, j, ), ;, out, [, i, ], [, j, ], =, FastMath, ., sqrt, (, (, 1, -]
[i, ,, j, ), ;, out, [, i, ], [, j, ], =, FastMath, ., sqrt, (, (, 1, -]
[j, ), ;, out, [, i, ], [, j, ], =, FastMath, ., sqrt, (, (, 1, -, r, *]
[out, [, i, ], [, j, ], =, FastMath, ., sqrt, (, (, 1, -, r, *, r, ), /]
[[, i, ], [, j, ], =, FastMath, ., sqrt, (, (, 1, -, r, *, r, ), /, (]
[[, i, ], [, j, ], =, FastMath, ., sqrt, (, (, 1, -, r, *, r, ), /, (]
[], [, j, ], =, FastMath, ., sqrt, (, (, 1, -, r, *, r, ), /, (, nObs, -]
[sqrt, (, (, 1, -, r, *, r, ), /, (, nObs, -, 2, ), ), ;, }, }, return]
[1, -, r, *, r, ), /, (, nObs, -, 2, ), ), ;, }, }, return, new, BlockRealMatrix, (]
[;, }, }, return, new, BlockRealMatrix, (, out, ), ;, }, public, RealMatrix, getCorrelationPValues, (, ), {, TDistribution, tDistribution, =]
[return, new, BlockRealMatrix, (, out, ), ;, }, public, RealMatrix, getCorrelationPValues, (, ), {, TDistribution, tDistribution, =, new, TDistribution, (]
[return, new, BlockRealMatrix, (, out, ), ;, }, public, RealMatrix, getCorrelationPValues, (, ), {, TDistribution, tDistribution, =, new, TDistribution, (]
[BlockRealMatrix, (, out, ), ;, }, public, RealMatrix, getCorrelationPValues, (, ), {, TDistribution, tDistribution, =, new, TDistribution, (, nObs, -]
[public, RealMatrix, getCorrelationPValues, (, ), {, TDistribution, tDistribution, =, new, TDistribution, (, nObs, -, 2, ), ;, int, nVars, =]
[public, RealMatrix, getCorrelationPValues, (, ), {, TDistribution, tDistribution, =, new, TDistribution, (, nObs, -, 2, ), ;, int, nVars, =]
[-, 2, ), ;, int, nVars, =, correlationMatrix, ., getColumnDimension, (, ), ;, double, [, ], [, ], out, =]
[;, int, nVars, =, correlationMatrix, ., getColumnDimension, (, ), ;, double, [, ], [, ], out, =, new, double, []
[=, correlationMatrix, ., getColumnDimension, (, ), ;, double, [, ], [, ], out, =, new, double, [, nVars, ], []
[[, ], [, ], out, =, new, double, [, nVars, ], [, nVars, ], ;, for, (, int, i, =]
[[, ], out, =, new, double, [, nVars, ], [, nVars, ], ;, for, (, int, i, =, 0, ;]
[[, ], out, =, new, double, [, nVars, ], [, nVars, ], ;, for, (, int, i, =, 0, ;]
[out, =, new, double, [, nVars, ], [, nVars, ], ;, for, (, int, i, =, 0, ;, i, <]
[new, double, [, nVars, ], [, nVars, ], ;, for, (, int, i, =, 0, ;, i, <, nVars, ;]
[new, double, [, nVars, ], [, nVars, ], ;, for, (, int, i, =, 0, ;, i, <, nVars, ;]
[for, (, int, i, =, 0, ;, i, <, nVars, ;, i, ++, ), {, for, (, int, j, =]
[int, i, =, 0, ;, i, <, nVars, ;, i, ++, ), {, for, (, int, j, =, 0, ;]
[int, i, =, 0, ;, i, <, nVars, ;, i, ++, ), {, for, (, int, j, =, 0, ;]
[=, 0, ;, i, <, nVars, ;, i, ++, ), {, for, (, int, j, =, 0, ;, j, <]
[;, i, <, nVars, ;, i, ++, ), {, for, (, int, j, =, 0, ;, j, <, nVars, ;]
[;, i, <, nVars, ;, i, ++, ), {, for, (, int, j, =, 0, ;, j, <, nVars, ;]
[++, ), {, for, (, int, j, =, 0, ;, j, <, nVars, ;, j, ++, ), {, if, (]
[++, ), {, for, (, int, j, =, 0, ;, j, <, nVars, ;, j, ++, ), {, if, (]
[{, for, (, int, j, =, 0, ;, j, <, nVars, ;, j, ++, ), {, if, (, i, ==]
[int, j, =, 0, ;, j, <, nVars, ;, j, ++, ), {, if, (, i, ==, j, ), {]
[int, j, =, 0, ;, j, <, nVars, ;, j, ++, ), {, if, (, i, ==, j, ), {]
[int, j, =, 0, ;, j, <, nVars, ;, j, ++, ), {, if, (, i, ==, j, ), {]
[=, 0, ;, j, <, nVars, ;, j, ++, ), {, if, (, i, ==, j, ), {, out, []
[j, <, nVars, ;, j, ++, ), {, if, (, i, ==, j, ), {, out, [, i, ], []
[;, j, ++, ), {, if, (, i, ==, j, ), {, out, [, i, ], [, j, ], =]
[==, j, ), {, out, [, i, ], [, j, ], =, 0d, ;, }, else, {, double, r, =]
[==, j, ), {, out, [, i, ], [, j, ], =, 0d, ;, }, else, {, double, r, =]
[out, [, i, ], [, j, ], =, 0d, ;, }, else, {, double, r, =, correlationMatrix, ., getEntry, (]
[i, ], [, j, ], =, 0d, ;, }, else, {, double, r, =, correlationMatrix, ., getEntry, (, i, ,]
[0d, ;, }, else, {, double, r, =, correlationMatrix, ., getEntry, (, i, ,, j, ), ;, double, t, =]
[0d, ;, }, else, {, double, r, =, correlationMatrix, ., getEntry, (, i, ,, j, ), ;, double, t, =]
[{, double, r, =, correlationMatrix, ., getEntry, (, i, ,, j, ), ;, double, t, =, FastMath, ., abs, (]
[{, double, r, =, correlationMatrix, ., getEntry, (, i, ,, j, ), ;, double, t, =, FastMath, ., abs, (]
[r, =, correlationMatrix, ., getEntry, (, i, ,, j, ), ;, double, t, =, FastMath, ., abs, (, r, *]
[r, =, correlationMatrix, ., getEntry, (, i, ,, j, ), ;, double, t, =, FastMath, ., abs, (, r, *]
[getEntry, (, i, ,, j, ), ;, double, t, =, FastMath, ., abs, (, r, *, FastMath, ., sqrt, (]
[getEntry, (, i, ,, j, ), ;, double, t, =, FastMath, ., abs, (, r, *, FastMath, ., sqrt, (]
[(, i, ,, j, ), ;, double, t, =, FastMath, ., abs, (, r, *, FastMath, ., sqrt, (, (]
[(, i, ,, j, ), ;, double, t, =, FastMath, ., abs, (, r, *, FastMath, ., sqrt, (, (]
[,, j, ), ;, double, t, =, FastMath, ., abs, (, r, *, FastMath, ., sqrt, (, (, nObs, -]
[;, double, t, =, FastMath, ., abs, (, r, *, FastMath, ., sqrt, (, (, nObs, -, 2, ), /]
[double, t, =, FastMath, ., abs, (, r, *, FastMath, ., sqrt, (, (, nObs, -, 2, ), /, (]
[double, t, =, FastMath, ., abs, (, r, *, FastMath, ., sqrt, (, (, nObs, -, 2, ), /, (]
[=, FastMath, ., abs, (, r, *, FastMath, ., sqrt, (, (, nObs, -, 2, ), /, (, 1, -]
[=, FastMath, ., abs, (, r, *, FastMath, ., sqrt, (, (, nObs, -, 2, ), /, (, 1, -]
[., abs, (, r, *, FastMath, ., sqrt, (, (, nObs, -, 2, ), /, (, 1, -, r, *]
[FastMath, ., sqrt, (, (, nObs, -, 2, ), /, (, 1, -, r, *, r, ), ), ), ;]
[FastMath, ., sqrt, (, (, nObs, -, 2, ), /, (, 1, -, r, *, r, ), ), ), ;]
[FastMath, ., sqrt, (, (, nObs, -, 2, ), /, (, 1, -, r, *, r, ), ), ), ;]
[sqrt, (, (, nObs, -, 2, ), /, (, 1, -, r, *, r, ), ), ), ;, out, []
[nObs, -, 2, ), /, (, 1, -, r, *, r, ), ), ), ;, out, [, i, ], []
[), /, (, 1, -, r, *, r, ), ), ), ;, out, [, i, ], [, j, ], =]
[), /, (, 1, -, r, *, r, ), ), ), ;, out, [, i, ], [, j, ], =]
[(, 1, -, r, *, r, ), ), ), ;, out, [, i, ], [, j, ], =, 2, *]
[(, 1, -, r, *, r, ), ), ), ;, out, [, i, ], [, j, ], =, 2, *]
[*, r, ), ), ), ;, out, [, i, ], [, j, ], =, 2, *, tDistribution, ., cumulativeProbability, (]
[r, ), ), ), ;, out, [, i, ], [, j, ], =, 2, *, tDistribution, ., cumulativeProbability, (, -]
[i, ], [, j, ], =, 2, *, tDistribution, ., cumulativeProbability, (, -, t, ), ;, }, }, }, return]
[j, ], =, 2, *, tDistribution, ., cumulativeProbability, (, -, t, ), ;, }, }, }, return, new, BlockRealMatrix, (]
[}, return, new, BlockRealMatrix, (, out, ), ;, }, public, RealMatrix, computeCorrelationMatrix, (, RealMatrix, matrix, ), {, int, nVars, =]
[}, return, new, BlockRealMatrix, (, out, ), ;, }, public, RealMatrix, computeCorrelationMatrix, (, RealMatrix, matrix, ), {, int, nVars, =]
[public, RealMatrix, computeCorrelationMatrix, (, RealMatrix, matrix, ), {, int, nVars, =, matrix, ., getColumnDimension, (, ), ;, RealMatrix, outMatrix, =]
[(, RealMatrix, matrix, ), {, int, nVars, =, matrix, ., getColumnDimension, (, ), ;, RealMatrix, outMatrix, =, new, BlockRealMatrix, (]
[matrix, ), {, int, nVars, =, matrix, ., getColumnDimension, (, ), ;, RealMatrix, outMatrix, =, new, BlockRealMatrix, (, nVars, ,]
[getColumnDimension, (, ), ;, RealMatrix, outMatrix, =, new, BlockRealMatrix, (, nVars, ,, nVars, ), ;, for, (, int, i, =]
[), ;, RealMatrix, outMatrix, =, new, BlockRealMatrix, (, nVars, ,, nVars, ), ;, for, (, int, i, =, 0, ;]
[), ;, RealMatrix, outMatrix, =, new, BlockRealMatrix, (, nVars, ,, nVars, ), ;, for, (, int, i, =, 0, ;]
[RealMatrix, outMatrix, =, new, BlockRealMatrix, (, nVars, ,, nVars, ), ;, for, (, int, i, =, 0, ;, i, <]
[=, new, BlockRealMatrix, (, nVars, ,, nVars, ), ;, for, (, int, i, =, 0, ;, i, <, nVars, ;]
[=, new, BlockRealMatrix, (, nVars, ,, nVars, ), ;, for, (, int, i, =, 0, ;, i, <, nVars, ;]
[for, (, int, i, =, 0, ;, i, <, nVars, ;, i, ++, ), {, for, (, int, j, =]
[int, i, =, 0, ;, i, <, nVars, ;, i, ++, ), {, for, (, int, j, =, 0, ;]
[int, i, =, 0, ;, i, <, nVars, ;, i, ++, ), {, for, (, int, j, =, 0, ;]
[=, 0, ;, i, <, nVars, ;, i, ++, ), {, for, (, int, j, =, 0, ;, j, <]
[;, i, <, nVars, ;, i, ++, ), {, for, (, int, j, =, 0, ;, j, <, i, ;]
[;, i, <, nVars, ;, i, ++, ), {, for, (, int, j, =, 0, ;, j, <, i, ;]
[), {, for, (, int, j, =, 0, ;, j, <, i, ;, j, ++, ), {, double, corr, =]
[for, (, int, j, =, 0, ;, j, <, i, ;, j, ++, ), {, double, corr, =, correlation, (]
[for, (, int, j, =, 0, ;, j, <, i, ;, j, ++, ), {, double, corr, =, correlation, (]
[=, 0, ;, j, <, i, ;, j, ++, ), {, double, corr, =, correlation, (, matrix, ., getColumn, (]
[j, <, i, ;, j, ++, ), {, double, corr, =, correlation, (, matrix, ., getColumn, (, i, ), ,]
[j, <, i, ;, j, ++, ), {, double, corr, =, correlation, (, matrix, ., getColumn, (, i, ), ,]
[j, ++, ), {, double, corr, =, correlation, (, matrix, ., getColumn, (, i, ), ,, matrix, ., getColumn, (]
[double, corr, =, correlation, (, matrix, ., getColumn, (, i, ), ,, matrix, ., getColumn, (, j, ), ), ;]
[double, corr, =, correlation, (, matrix, ., getColumn, (, i, ), ,, matrix, ., getColumn, (, j, ), ), ;]
[(, matrix, ., getColumn, (, i, ), ,, matrix, ., getColumn, (, j, ), ), ;, outMatrix, ., setEntry, (]
[., getColumn, (, i, ), ,, matrix, ., getColumn, (, j, ), ), ;, outMatrix, ., setEntry, (, i, ,]
[(, i, ), ,, matrix, ., getColumn, (, j, ), ), ;, outMatrix, ., setEntry, (, i, ,, j, ,]
[,, matrix, ., getColumn, (, j, ), ), ;, outMatrix, ., setEntry, (, i, ,, j, ,, corr, ), ;]
[,, matrix, ., getColumn, (, j, ), ), ;, outMatrix, ., setEntry, (, i, ,, j, ,, corr, ), ;]
[(, j, ), ), ;, outMatrix, ., setEntry, (, i, ,, j, ,, corr, ), ;, outMatrix, ., setEntry, (]
[), ), ;, outMatrix, ., setEntry, (, i, ,, j, ,, corr, ), ;, outMatrix, ., setEntry, (, j, ,]
[;, outMatrix, ., setEntry, (, i, ,, j, ,, corr, ), ;, outMatrix, ., setEntry, (, j, ,, i, ,]
[(, i, ,, j, ,, corr, ), ;, outMatrix, ., setEntry, (, j, ,, i, ,, corr, ), ;, }]
[(, i, ,, j, ,, corr, ), ;, outMatrix, ., setEntry, (, j, ,, i, ,, corr, ), ;, }]
[,, corr, ), ;, outMatrix, ., setEntry, (, j, ,, i, ,, corr, ), ;, }, outMatrix, ., setEntry, (]
[), ;, outMatrix, ., setEntry, (, j, ,, i, ,, corr, ), ;, }, outMatrix, ., setEntry, (, i, ,]
[outMatrix, ., setEntry, (, j, ,, i, ,, corr, ), ;, }, outMatrix, ., setEntry, (, i, ,, i, ,]
[,, i, ,, corr, ), ;, }, outMatrix, ., setEntry, (, i, ,, i, ,, 1d, ), ;, }, return]
[), ;, }, return, outMatrix, ;, }, public, RealMatrix, computeCorrelationMatrix, (, double, [, ], [, ], data, ), {, return]
[}, return, outMatrix, ;, }, public, RealMatrix, computeCorrelationMatrix, (, double, [, ], [, ], data, ), {, return, computeCorrelationMatrix, (]
[;, }, public, RealMatrix, computeCorrelationMatrix, (, double, [, ], [, ], data, ), {, return, computeCorrelationMatrix, (, new, BlockRealMatrix, (]
[public, double, correlation, (, final, double, [, ], xArray, ,, final, double, [, ], yArray, ), {, SimpleRegression, regression, =]
[], xArray, ,, final, double, [, ], yArray, ), {, SimpleRegression, regression, =, new, SimpleRegression, (, ), ;, if, (]
[], xArray, ,, final, double, [, ], yArray, ), {, SimpleRegression, regression, =, new, SimpleRegression, (, ), ;, if, (]
[], xArray, ,, final, double, [, ], yArray, ), {, SimpleRegression, regression, =, new, SimpleRegression, (, ), ;, if, (]
[double, [, ], yArray, ), {, SimpleRegression, regression, =, new, SimpleRegression, (, ), ;, if, (, xArray, ., length, !=]
[double, [, ], yArray, ), {, SimpleRegression, regression, =, new, SimpleRegression, (, ), ;, if, (, xArray, ., length, !=]
[SimpleRegression, regression, =, new, SimpleRegression, (, ), ;, if, (, xArray, ., length, !=, yArray, ., length, ), {, throw]
[new, SimpleRegression, (, ), ;, if, (, xArray, ., length, !=, yArray, ., length, ), {, throw, new, DimensionMismatchException, (]
[new, SimpleRegression, (, ), ;, if, (, xArray, ., length, !=, yArray, ., length, ), {, throw, new, DimensionMismatchException, (]
[;, if, (, xArray, ., length, !=, yArray, ., length, ), {, throw, new, DimensionMismatchException, (, xArray, ., length, ,]
[;, if, (, xArray, ., length, !=, yArray, ., length, ), {, throw, new, DimensionMismatchException, (, xArray, ., length, ,]
[length, ), {, throw, new, DimensionMismatchException, (, xArray, ., length, ,, yArray, ., length, ), ;, }, else, if, (]
[length, ), {, throw, new, DimensionMismatchException, (, xArray, ., length, ,, yArray, ., length, ), ;, }, else, if, (]
[length, ), {, throw, new, DimensionMismatchException, (, xArray, ., length, ,, yArray, ., length, ), ;, }, else, if, (]
[new, DimensionMismatchException, (, xArray, ., length, ,, yArray, ., length, ), ;, }, else, if, (, xArray, ., length, <]
[., length, ,, yArray, ., length, ), ;, }, else, if, (, xArray, ., length, <, 2, ), {, throw]
[yArray, ., length, ), ;, }, else, if, (, xArray, ., length, <, 2, ), {, throw, new, MathIllegalArgumentException, (]
[yArray, ., length, ), ;, }, else, if, (, xArray, ., length, <, 2, ), {, throw, new, MathIllegalArgumentException, (]
[;, }, else, if, (, xArray, ., length, <, 2, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., INSUFFICIENT_DIMENSION, ,]
[;, }, else, if, (, xArray, ., length, <, 2, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., INSUFFICIENT_DIMENSION, ,]
[(, xArray, ., length, <, 2, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., INSUFFICIENT_DIMENSION, ,, xArray, ., length, ,]
[(, LocalizedFormats, ., INSUFFICIENT_DIMENSION, ,, xArray, ., length, ,, 2, ), ;, }, else, {, for, (, int, i, =]
[., INSUFFICIENT_DIMENSION, ,, xArray, ., length, ,, 2, ), ;, }, else, {, for, (, int, i, =, 0, ;]
[., INSUFFICIENT_DIMENSION, ,, xArray, ., length, ,, 2, ), ;, }, else, {, for, (, int, i, =, 0, ;]
[,, xArray, ., length, ,, 2, ), ;, }, else, {, for, (, int, i, =, 0, ;, i, <]
[,, xArray, ., length, ,, 2, ), ;, }, else, {, for, (, int, i, =, 0, ;, i, <]
[,, 2, ), ;, }, else, {, for, (, int, i, =, 0, ;, i, <, xArray, ., length, ;]
[,, 2, ), ;, }, else, {, for, (, int, i, =, 0, ;, i, <, xArray, ., length, ;]
[}, else, {, for, (, int, i, =, 0, ;, i, <, xArray, ., length, ;, i, ++, ), {]
[}, else, {, for, (, int, i, =, 0, ;, i, <, xArray, ., length, ;, i, ++, ), {]
[(, int, i, =, 0, ;, i, <, xArray, ., length, ;, i, ++, ), {, regression, ., addData, (]
[(, int, i, =, 0, ;, i, <, xArray, ., length, ;, i, ++, ), {, regression, ., addData, (]
[i, =, 0, ;, i, <, xArray, ., length, ;, i, ++, ), {, regression, ., addData, (, xArray, []
[;, i, <, xArray, ., length, ;, i, ++, ), {, regression, ., addData, (, xArray, [, i, ], ,]
[;, i, <, xArray, ., length, ;, i, ++, ), {, regression, ., addData, (, xArray, [, i, ], ,]
[<, xArray, ., length, ;, i, ++, ), {, regression, ., addData, (, xArray, [, i, ], ,, yArray, []
[++, ), {, regression, ., addData, (, xArray, [, i, ], ,, yArray, [, i, ], ), ;, }, return]
[++, ), {, regression, ., addData, (, xArray, [, i, ], ,, yArray, [, i, ], ), ;, }, return]
[return, regression, ., getR, (, ), ;, }, }, public, RealMatrix, covarianceToCorrelation, (, RealMatrix, covarianceMatrix, ), {, int, nVars, =]
[return, regression, ., getR, (, ), ;, }, }, public, RealMatrix, covarianceToCorrelation, (, RealMatrix, covarianceMatrix, ), {, int, nVars, =]
[public, RealMatrix, covarianceToCorrelation, (, RealMatrix, covarianceMatrix, ), {, int, nVars, =, covarianceMatrix, ., getColumnDimension, (, ), ;, RealMatrix, outMatrix, =]
[(, RealMatrix, covarianceMatrix, ), {, int, nVars, =, covarianceMatrix, ., getColumnDimension, (, ), ;, RealMatrix, outMatrix, =, new, BlockRealMatrix, (]
[covarianceMatrix, ), {, int, nVars, =, covarianceMatrix, ., getColumnDimension, (, ), ;, RealMatrix, outMatrix, =, new, BlockRealMatrix, (, nVars, ,]
[getColumnDimension, (, ), ;, RealMatrix, outMatrix, =, new, BlockRealMatrix, (, nVars, ,, nVars, ), ;, for, (, int, i, =]
[), ;, RealMatrix, outMatrix, =, new, BlockRealMatrix, (, nVars, ,, nVars, ), ;, for, (, int, i, =, 0, ;]
[), ;, RealMatrix, outMatrix, =, new, BlockRealMatrix, (, nVars, ,, nVars, ), ;, for, (, int, i, =, 0, ;]
[RealMatrix, outMatrix, =, new, BlockRealMatrix, (, nVars, ,, nVars, ), ;, for, (, int, i, =, 0, ;, i, <]
[=, new, BlockRealMatrix, (, nVars, ,, nVars, ), ;, for, (, int, i, =, 0, ;, i, <, nVars, ;]
[=, new, BlockRealMatrix, (, nVars, ,, nVars, ), ;, for, (, int, i, =, 0, ;, i, <, nVars, ;]
[), ;, for, (, int, i, =, 0, ;, i, <, nVars, ;, i, ++, ), {, double, sigma, =]
[), ;, for, (, int, i, =, 0, ;, i, <, nVars, ;, i, ++, ), {, double, sigma, =]
[int, i, =, 0, ;, i, <, nVars, ;, i, ++, ), {, double, sigma, =, FastMath, ., sqrt, (]
[int, i, =, 0, ;, i, <, nVars, ;, i, ++, ), {, double, sigma, =, FastMath, ., sqrt, (]
[;, i, <, nVars, ;, i, ++, ), {, double, sigma, =, FastMath, ., sqrt, (, covarianceMatrix, ., getEntry, (]
[<, nVars, ;, i, ++, ), {, double, sigma, =, FastMath, ., sqrt, (, covarianceMatrix, ., getEntry, (, i, ,]
[++, ), {, double, sigma, =, FastMath, ., sqrt, (, covarianceMatrix, ., getEntry, (, i, ,, i, ), ), ;]
[++, ), {, double, sigma, =, FastMath, ., sqrt, (, covarianceMatrix, ., getEntry, (, i, ,, i, ), ), ;]
[sigma, =, FastMath, ., sqrt, (, covarianceMatrix, ., getEntry, (, i, ,, i, ), ), ;, outMatrix, ., setEntry, (]
[FastMath, ., sqrt, (, covarianceMatrix, ., getEntry, (, i, ,, i, ), ), ;, outMatrix, ., setEntry, (, i, ,]
[sqrt, (, covarianceMatrix, ., getEntry, (, i, ,, i, ), ), ;, outMatrix, ., setEntry, (, i, ,, i, ,]
[i, ), ), ;, outMatrix, ., setEntry, (, i, ,, i, ,, 1d, ), ;, for, (, int, j, =]
[), ;, outMatrix, ., setEntry, (, i, ,, i, ,, 1d, ), ;, for, (, int, j, =, 0, ;]
[), ;, outMatrix, ., setEntry, (, i, ,, i, ,, 1d, ), ;, for, (, int, j, =, 0, ;]
[outMatrix, ., setEntry, (, i, ,, i, ,, 1d, ), ;, for, (, int, j, =, 0, ;, j, <]
[setEntry, (, i, ,, i, ,, 1d, ), ;, for, (, int, j, =, 0, ;, j, <, i, ;]
[setEntry, (, i, ,, i, ,, 1d, ), ;, for, (, int, j, =, 0, ;, j, <, i, ;]
[), ;, for, (, int, j, =, 0, ;, j, <, i, ;, j, ++, ), {, double, entry, =]
[), ;, for, (, int, j, =, 0, ;, j, <, i, ;, j, ++, ), {, double, entry, =]
[), ;, for, (, int, j, =, 0, ;, j, <, i, ;, j, ++, ), {, double, entry, =]
[int, j, =, 0, ;, j, <, i, ;, j, ++, ), {, double, entry, =, covarianceMatrix, ., getEntry, (]
[=, 0, ;, j, <, i, ;, j, ++, ), {, double, entry, =, covarianceMatrix, ., getEntry, (, i, ,]
[j, <, i, ;, j, ++, ), {, double, entry, =, covarianceMatrix, ., getEntry, (, i, ,, j, ), /]
[<, i, ;, j, ++, ), {, double, entry, =, covarianceMatrix, ., getEntry, (, i, ,, j, ), /, (]
[<, i, ;, j, ++, ), {, double, entry, =, covarianceMatrix, ., getEntry, (, i, ,, j, ), /, (]
[;, j, ++, ), {, double, entry, =, covarianceMatrix, ., getEntry, (, i, ,, j, ), /, (, sigma, *]
[;, j, ++, ), {, double, entry, =, covarianceMatrix, ., getEntry, (, i, ,, j, ), /, (, sigma, *]
[{, double, entry, =, covarianceMatrix, ., getEntry, (, i, ,, j, ), /, (, sigma, *, FastMath, ., sqrt, (]
[{, double, entry, =, covarianceMatrix, ., getEntry, (, i, ,, j, ), /, (, sigma, *, FastMath, ., sqrt, (]
[covarianceMatrix, ., getEntry, (, i, ,, j, ), /, (, sigma, *, FastMath, ., sqrt, (, covarianceMatrix, ., getEntry, (]
[getEntry, (, i, ,, j, ), /, (, sigma, *, FastMath, ., sqrt, (, covarianceMatrix, ., getEntry, (, j, ,]
[), /, (, sigma, *, FastMath, ., sqrt, (, covarianceMatrix, ., getEntry, (, j, ,, j, ), ), ), ;]
[), /, (, sigma, *, FastMath, ., sqrt, (, covarianceMatrix, ., getEntry, (, j, ,, j, ), ), ), ;]
[*, FastMath, ., sqrt, (, covarianceMatrix, ., getEntry, (, j, ,, j, ), ), ), ;, outMatrix, ., setEntry, (]
[., sqrt, (, covarianceMatrix, ., getEntry, (, j, ,, j, ), ), ), ;, outMatrix, ., setEntry, (, i, ,]
[(, covarianceMatrix, ., getEntry, (, j, ,, j, ), ), ), ;, outMatrix, ., setEntry, (, i, ,, j, ,]
[getEntry, (, j, ,, j, ), ), ), ;, outMatrix, ., setEntry, (, i, ,, j, ,, entry, ), ;]
[getEntry, (, j, ,, j, ), ), ), ;, outMatrix, ., setEntry, (, i, ,, j, ,, entry, ), ;]
[j, ), ), ), ;, outMatrix, ., setEntry, (, i, ,, j, ,, entry, ), ;, outMatrix, ., setEntry, (]
[), ), ;, outMatrix, ., setEntry, (, i, ,, j, ,, entry, ), ;, outMatrix, ., setEntry, (, j, ,]
[;, outMatrix, ., setEntry, (, i, ,, j, ,, entry, ), ;, outMatrix, ., setEntry, (, j, ,, i, ,]
[,, j, ,, entry, ), ;, outMatrix, ., setEntry, (, j, ,, i, ,, entry, ), ;, }, }, return]
[), ;, }, }, return, outMatrix, ;, }, private, void, checkSufficientData, (, final, RealMatrix, matrix, ), {, int, nRows, =]
[), ;, }, }, return, outMatrix, ;, }, private, void, checkSufficientData, (, final, RealMatrix, matrix, ), {, int, nRows, =]
[void, checkSufficientData, (, final, RealMatrix, matrix, ), {, int, nRows, =, matrix, ., getRowDimension, (, ), ;, int, nCols, =]
[void, checkSufficientData, (, final, RealMatrix, matrix, ), {, int, nRows, =, matrix, ., getRowDimension, (, ), ;, int, nCols, =]
[int, nRows, =, matrix, ., getRowDimension, (, ), ;, int, nCols, =, matrix, ., getColumnDimension, (, ), ;, if, (]
[int, nRows, =, matrix, ., getRowDimension, (, ), ;, int, nCols, =, matrix, ., getColumnDimension, (, ), ;, if, (]
[int, nRows, =, matrix, ., getRowDimension, (, ), ;, int, nCols, =, matrix, ., getColumnDimension, (, ), ;, if, (]
[=, matrix, ., getRowDimension, (, ), ;, int, nCols, =, matrix, ., getColumnDimension, (, ), ;, if, (, nRows, <]
[., getRowDimension, (, ), ;, int, nCols, =, matrix, ., getColumnDimension, (, ), ;, if, (, nRows, <, 2, ||]
[., getRowDimension, (, ), ;, int, nCols, =, matrix, ., getColumnDimension, (, ), ;, if, (, nRows, <, 2, ||]
[(, ), ;, int, nCols, =, matrix, ., getColumnDimension, (, ), ;, if, (, nRows, <, 2, ||, nCols, <]
[nCols, =, matrix, ., getColumnDimension, (, ), ;, if, (, nRows, <, 2, ||, nCols, <, 2, ), {, throw]
[., getColumnDimension, (, ), ;, if, (, nRows, <, 2, ||, nCols, <, 2, ), {, throw, new, MathIllegalArgumentException, (]
[., getColumnDimension, (, ), ;, if, (, nRows, <, 2, ||, nCols, <, 2, ), {, throw, new, MathIllegalArgumentException, (]
[;, if, (, nRows, <, 2, ||, nCols, <, 2, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., INSUFFICIENT_ROWS_AND_COLUMNS, ,]
[(, nRows, <, 2, ||, nCols, <, 2, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., INSUFFICIENT_ROWS_AND_COLUMNS, ,, nRows, ,]
