[;, protected, FirstMoment, moment, ;, protected, boolean, incMoment, ;, public, Mean, (, ), {, incMoment, =, true, ;, moment, =]
[;, protected, FirstMoment, moment, ;, protected, boolean, incMoment, ;, public, Mean, (, ), {, incMoment, =, true, ;, moment, =]
[=, true, ;, moment, =, new, FirstMoment, (, ), ;, }, public, Mean, (, final, FirstMoment, m1, ), {, this]
[;, moment, =, new, FirstMoment, (, ), ;, }, public, Mean, (, final, FirstMoment, m1, ), {, this, ., moment]
[=, new, FirstMoment, (, ), ;, }, public, Mean, (, final, FirstMoment, m1, ), {, this, ., moment, =, m1]
[;, }, public, Mean, (, final, FirstMoment, m1, ), {, this, ., moment, =, m1, ;, incMoment, =, false, ;]
[=, m1, ;, incMoment, =, false, ;, }, public, Mean, (, Mean, original, ), throws, NullArgumentException, {, copy, (, original]
[., moment, =, m1, ;, incMoment, =, false, ;, }, public, Mean, (, Mean, original, ), throws, NullArgumentException, {, copy]
[;, incMoment, =, false, ;, }, public, Mean, (, Mean, original, ), throws, NullArgumentException, {, copy, (, original, ,, this]
[=, false, ;, }, public, Mean, (, Mean, original, ), throws, NullArgumentException, {, copy, (, original, ,, this, ), ;]
[;, }, public, Mean, (, Mean, original, ), throws, NullArgumentException, {, copy, (, original, ,, this, ), ;, }, @]
[;, }, @, Override, public, void, increment, (, final, double, d, ), {, if, (, incMoment, ), {, moment, .]
[,, this, ), ;, }, @, Override, public, void, increment, (, final, double, d, ), {, if, (, incMoment, )]
[), ;, }, @, Override, public, void, increment, (, final, double, d, ), {, if, (, incMoment, ), {, moment]
[), {, moment, ., increment, (, d, ), ;, }, }, @, Override, public, void, clear, (, ), {, if]
[;, }, }, @, Override, public, void, clear, (, ), {, if, (, incMoment, ), {, moment, ., clear, (]
[., increment, (, d, ), ;, }, }, @, Override, public, void, clear, (, ), {, if, (, incMoment, )]
[), ;, }, }, @, Override, public, void, clear, (, ), {, if, (, incMoment, ), {, moment, ., clear]
[), {, moment, ., clear, (, ), ;, }, }, @, Override, public, double, getResult, (, ), {, return, moment]
[;, }, }, @, Override, public, double, getResult, (, ), {, return, moment, ., m1, ;, }, public, long, getN]
[., clear, (, ), ;, }, }, @, Override, public, double, getResult, (, ), {, return, moment, ., m1, ;]
[;, }, public, long, getN, (, ), {, return, moment, ., getN, (, ), ;, }, @, Override, public, double]
[., m1, ;, }, public, long, getN, (, ), {, return, moment, ., getN, (, ), ;, }, @, Override]
[;, }, @, Override, public, double, evaluate, (, final, double, [, ], values, ,, final, int, begin, ,, final, int]
[., getN, (, ), ;, }, @, Override, public, double, evaluate, (, final, double, [, ], values, ,, final, int]
[), {, Sum, sum, =, new, Sum, (, ), ;, double, sampleSize, =, length, ;, double, xbar, =, sum, .]
[,, begin, ,, length, ), ), {, Sum, sum, =, new, Sum, (, ), ;, double, sampleSize, =, length, ;]
[,, length, ), ), {, Sum, sum, =, new, Sum, (, ), ;, double, sampleSize, =, length, ;, double, xbar]
[), ), {, Sum, sum, =, new, Sum, (, ), ;, double, sampleSize, =, length, ;, double, xbar, =, sum]
[;, double, sampleSize, =, length, ;, double, xbar, =, sum, ., evaluate, (, values, ,, begin, ,, length, ), /]
[;, double, xbar, =, sum, ., evaluate, (, values, ,, begin, ,, length, ), /, sampleSize, ;, double, correction, =]
[;, double, correction, =, 0, ;, for, (, int, i, =, begin, ;, i, <, begin, +, length, ;, i]
[/, sampleSize, ;, double, correction, =, 0, ;, for, (, int, i, =, begin, ;, i, <, begin, +, length]
[., evaluate, (, values, ,, begin, ,, length, ), /, sampleSize, ;, double, correction, =, 0, ;, for, (, int]
[,, begin, ,, length, ), /, sampleSize, ;, double, correction, =, 0, ;, for, (, int, i, =, begin, ;]
[,, length, ), /, sampleSize, ;, double, correction, =, 0, ;, for, (, int, i, =, begin, ;, i, <]
[), /, sampleSize, ;, double, correction, =, 0, ;, for, (, int, i, =, begin, ;, i, <, begin, +]
[;, double, correction, =, 0, ;, for, (, int, i, =, begin, ;, i, <, begin, +, length, ;, i]
[;, for, (, int, i, =, begin, ;, i, <, begin, +, length, ;, i, ++, ), {, correction, +=]
[;, i, <, begin, +, length, ;, i, ++, ), {, correction, +=, values, [, i, ], -, xbar, ;]
[;, i, ++, ), {, correction, +=, values, [, i, ], -, xbar, ;, }, return, xbar, +, (, correction]
[<, begin, +, length, ;, i, ++, ), {, correction, +=, values, [, i, ], -, xbar, ;, }, return]
[;, i, ++, ), {, correction, +=, values, [, i, ], -, xbar, ;, }, return, xbar, +, (, correction]
[+, length, ;, i, ++, ), {, correction, +=, values, [, i, ], -, xbar, ;, }, return, xbar, +]
[;, i, ++, ), {, correction, +=, values, [, i, ], -, xbar, ;, }, return, xbar, +, (, correction]
[), {, correction, +=, values, [, i, ], -, xbar, ;, }, return, xbar, +, (, correction, /, sampleSize, )]
[++, ), {, correction, +=, values, [, i, ], -, xbar, ;, }, return, xbar, +, (, correction, /, sampleSize]
[+=, values, [, i, ], -, xbar, ;, }, return, xbar, +, (, correction, /, sampleSize, ), ;, }, return]
[;, }, return, xbar, +, (, correction, /, sampleSize, ), ;, }, return, Double, ., NaN, ;, }, public, double]
[-, xbar, ;, }, return, xbar, +, (, correction, /, sampleSize, ), ;, }, return, Double, ., NaN, ;, }]
[[, i, ], -, xbar, ;, }, return, xbar, +, (, correction, /, sampleSize, ), ;, }, return, Double, .]
[], -, xbar, ;, }, return, xbar, +, (, correction, /, sampleSize, ), ;, }, return, Double, ., NaN, ;]
[;, }, return, xbar, +, (, correction, /, sampleSize, ), ;, }, return, Double, ., NaN, ;, }, public, double]
[;, }, return, Double, ., NaN, ;, }, public, double, evaluate, (, final, double, [, ], values, ,, final, double]
[+, (, correction, /, sampleSize, ), ;, }, return, Double, ., NaN, ;, }, public, double, evaluate, (, final, double]
[;, }, return, Double, ., NaN, ;, }, public, double, evaluate, (, final, double, [, ], values, ,, final, double]
[), ;, }, return, Double, ., NaN, ;, }, public, double, evaluate, (, final, double, [, ], values, ,, final]
[/, sampleSize, ), ;, }, return, Double, ., NaN, ;, }, public, double, evaluate, (, final, double, [, ], values]
[), ;, }, return, Double, ., NaN, ;, }, public, double, evaluate, (, final, double, [, ], values, ,, final]
[;, }, public, double, evaluate, (, final, double, [, ], values, ,, final, double, [, ], weights, ,, final, int]
[., NaN, ;, }, public, double, evaluate, (, final, double, [, ], values, ,, final, double, [, ], weights, ,]
[), {, Sum, sum, =, new, Sum, (, ), ;, double, sumw, =, sum, ., evaluate, (, weights, ,, begin]
[,, weights, ,, begin, ,, length, ), ), {, Sum, sum, =, new, Sum, (, ), ;, double, sumw, =]
[,, begin, ,, length, ), ), {, Sum, sum, =, new, Sum, (, ), ;, double, sumw, =, sum, .]
[,, length, ), ), {, Sum, sum, =, new, Sum, (, ), ;, double, sumw, =, sum, ., evaluate, (]
[), ), {, Sum, sum, =, new, Sum, (, ), ;, double, sumw, =, sum, ., evaluate, (, weights, ,]
[;, double, sumw, =, sum, ., evaluate, (, weights, ,, begin, ,, length, ), ;, double, xbarw, =, sum, .]
[;, double, xbarw, =, sum, ., evaluate, (, values, ,, weights, ,, begin, ,, length, ), /, sumw, ;, double]
[., evaluate, (, weights, ,, begin, ,, length, ), ;, double, xbarw, =, sum, ., evaluate, (, values, ,, weights]
[,, begin, ,, length, ), ;, double, xbarw, =, sum, ., evaluate, (, values, ,, weights, ,, begin, ,, length]
[,, length, ), ;, double, xbarw, =, sum, ., evaluate, (, values, ,, weights, ,, begin, ,, length, ), /]
[), ;, double, xbarw, =, sum, ., evaluate, (, values, ,, weights, ,, begin, ,, length, ), /, sumw, ;]
[;, double, correction, =, 0, ;, for, (, int, i, =, begin, ;, i, <, begin, +, length, ;, i]
[/, sumw, ;, double, correction, =, 0, ;, for, (, int, i, =, begin, ;, i, <, begin, +, length]
[., evaluate, (, values, ,, weights, ,, begin, ,, length, ), /, sumw, ;, double, correction, =, 0, ;, for]
[,, weights, ,, begin, ,, length, ), /, sumw, ;, double, correction, =, 0, ;, for, (, int, i, =]
[,, begin, ,, length, ), /, sumw, ;, double, correction, =, 0, ;, for, (, int, i, =, begin, ;]
[,, length, ), /, sumw, ;, double, correction, =, 0, ;, for, (, int, i, =, begin, ;, i, <]
[), /, sumw, ;, double, correction, =, 0, ;, for, (, int, i, =, begin, ;, i, <, begin, +]
[;, double, correction, =, 0, ;, for, (, int, i, =, begin, ;, i, <, begin, +, length, ;, i]
[;, for, (, int, i, =, begin, ;, i, <, begin, +, length, ;, i, ++, ), {, correction, +=]
[;, i, <, begin, +, length, ;, i, ++, ), {, correction, +=, weights, [, i, ], *, (, values]
[;, i, ++, ), {, correction, +=, weights, [, i, ], *, (, values, [, i, ], -, xbarw, )]
[<, begin, +, length, ;, i, ++, ), {, correction, +=, weights, [, i, ], *, (, values, [, i]
[;, i, ++, ), {, correction, +=, weights, [, i, ], *, (, values, [, i, ], -, xbarw, )]
[+, length, ;, i, ++, ), {, correction, +=, weights, [, i, ], *, (, values, [, i, ], -]
[;, i, ++, ), {, correction, +=, weights, [, i, ], *, (, values, [, i, ], -, xbarw, )]
[), {, correction, +=, weights, [, i, ], *, (, values, [, i, ], -, xbarw, ), ;, }, return]
[++, ), {, correction, +=, weights, [, i, ], *, (, values, [, i, ], -, xbarw, ), ;, }]
[+=, weights, [, i, ], *, (, values, [, i, ], -, xbarw, ), ;, }, return, xbarw, +, (]
[;, }, return, xbarw, +, (, correction, /, sumw, ), ;, }, return, Double, ., NaN, ;, }, public, double]
[*, (, values, [, i, ], -, xbarw, ), ;, }, return, xbarw, +, (, correction, /, sumw, ), ;]
[[, i, ], *, (, values, [, i, ], -, xbarw, ), ;, }, return, xbarw, +, (, correction, /]
[], *, (, values, [, i, ], -, xbarw, ), ;, }, return, xbarw, +, (, correction, /, sumw, )]
[;, }, return, xbarw, +, (, correction, /, sumw, ), ;, }, return, Double, ., NaN, ;, }, public, double]
[), ;, }, return, xbarw, +, (, correction, /, sumw, ), ;, }, return, Double, ., NaN, ;, }, public]
[-, xbarw, ), ;, }, return, xbarw, +, (, correction, /, sumw, ), ;, }, return, Double, ., NaN, ;]
[[, i, ], -, xbarw, ), ;, }, return, xbarw, +, (, correction, /, sumw, ), ;, }, return, Double]
[], -, xbarw, ), ;, }, return, xbarw, +, (, correction, /, sumw, ), ;, }, return, Double, ., NaN]
[), ;, }, return, xbarw, +, (, correction, /, sumw, ), ;, }, return, Double, ., NaN, ;, }, public]
[;, }, return, Double, ., NaN, ;, }, public, double, evaluate, (, final, double, [, ], values, ,, final, double]
[+, (, correction, /, sumw, ), ;, }, return, Double, ., NaN, ;, }, public, double, evaluate, (, final, double]
[;, }, return, Double, ., NaN, ;, }, public, double, evaluate, (, final, double, [, ], values, ,, final, double]
[), ;, }, return, Double, ., NaN, ;, }, public, double, evaluate, (, final, double, [, ], values, ,, final]
[/, sumw, ), ;, }, return, Double, ., NaN, ;, }, public, double, evaluate, (, final, double, [, ], values]
[), ;, }, return, Double, ., NaN, ;, }, public, double, evaluate, (, final, double, [, ], values, ,, final]
[;, }, public, double, evaluate, (, final, double, [, ], values, ,, final, double, [, ], weights, ), throws, MathIllegalArgumentException]
[., NaN, ;, }, public, double, evaluate, (, final, double, [, ], values, ,, final, double, [, ], weights, )]
[;, }, @, Override, public, Mean, copy, (, ), {, Mean, result, =, new, Mean, (, ), ;, copy, (]
[,, weights, ,, 0, ,, values, ., length, ), ;, }, @, Override, public, Mean, copy, (, ), {, Mean]
[,, 0, ,, values, ., length, ), ;, }, @, Override, public, Mean, copy, (, ), {, Mean, result, =]
[,, values, ., length, ), ;, }, @, Override, public, Mean, copy, (, ), {, Mean, result, =, new, Mean]
[), ;, }, @, Override, public, Mean, copy, (, ), {, Mean, result, =, new, Mean, (, ), ;, copy]
[., length, ), ;, }, @, Override, public, Mean, copy, (, ), {, Mean, result, =, new, Mean, (, )]
[;, copy, (, this, ,, result, ), ;, return, result, ;, }, public, static, void, copy, (, Mean, source, ,]
[;, return, result, ;, }, public, static, void, copy, (, Mean, source, ,, Mean, dest, ), throws, NullArgumentException, {, MathUtils]
[,, result, ), ;, return, result, ;, }, public, static, void, copy, (, Mean, source, ,, Mean, dest, ), throws]
[), ;, return, result, ;, }, public, static, void, copy, (, Mean, source, ,, Mean, dest, ), throws, NullArgumentException, {]
[;, }, public, static, void, copy, (, Mean, source, ,, Mean, dest, ), throws, NullArgumentException, {, MathUtils, ., checkNotNull, (]
[;, MathUtils, ., checkNotNull, (, dest, ), ;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;, dest]
[., checkNotNull, (, source, ), ;, MathUtils, ., checkNotNull, (, dest, ), ;, dest, ., setData, (, source, ., getDataRef]
[), ;, MathUtils, ., checkNotNull, (, dest, ), ;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;]
[;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;, dest, ., incMoment, =, source, ., incMoment, ;]
[., checkNotNull, (, dest, ), ;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;, dest, ., incMoment]
[), ;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;, dest, ., incMoment, =, source, ., incMoment]
[;, dest, ., incMoment, =, source, ., incMoment, ;, dest, ., moment, =, source, ., moment, ., copy, (, )]
[., setData, (, source, ., getDataRef, (, ), ), ;, dest, ., incMoment, =, source, ., incMoment, ;, dest, .]
[), ;, dest, ., incMoment, =, source, ., incMoment, ;, dest, ., moment, =, source, ., moment, ., copy, (]
[., getDataRef, (, ), ), ;, dest, ., incMoment, =, source, ., incMoment, ;, dest, ., moment, =, source, .]
[=, source, ., incMoment, ;, dest, ., moment, =, source, ., moment, ., copy, (, ), ;, }, }]
[., incMoment, =, source, ., incMoment, ;, dest, ., moment, =, source, ., moment, ., copy, (, ), ;, }]
[;, dest, ., moment, =, source, ., moment, ., copy, (, ), ;, }, }]
[., incMoment, ;, dest, ., moment, =, source, ., moment, ., copy, (, ), ;, }, }]
[=, source, ., moment, ., copy, (, ), ;, }, }]
[., moment, =, source, ., moment, ., copy, (, ), ;, }, }]
[;, }, }]
[., copy, (, ), ;, }, }]
[., moment, ., copy, (, ), ;, }, }]
