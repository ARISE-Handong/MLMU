[public, class, MockUtil, {, private, static, final, MockMaker, mockMaker, =, Plugins, ., getMockMaker, (, ), ;, public, boolean, isTypeMockable, (]
[), public, class, MockUtil, {, private, static, final, MockMaker, mockMaker, =, Plugins, ., getMockMaker, (, ), ;, public, boolean, isTypeMockable]
[;, public, boolean, isTypeMockable, (, Class, <, ?, >, type, ), {, return, !, type, ., isPrimitive, (, ), &&]
[., getMockMaker, (, ), ;, public, boolean, isTypeMockable, (, Class, <, ?, >, type, ), {, return, !, type, .]
[;, }, public, <, T, >, T, createMock, (, MockCreationSettings, <, T, >, settings, ), {, MockHandler, mockHandler, =, new]
[&&, !, Modifier, ., isFinal, (, type, ., getModifiers, (, ), ), ;, }, public, <, T, >, T, createMock]
[&&, !, Modifier, ., isFinal, (, type, ., getModifiers, (, ), ), ;, }, public, <, T, >, T, createMock]
[., isPrimitive, (, ), &&, !, Modifier, ., isFinal, (, type, ., getModifiers, (, ), ), ;, }, public, <]
[;, }, public, <, T, >, T, createMock, (, MockCreationSettings, <, T, >, settings, ), {, MockHandler, mockHandler, =, new]
[;, }, public, <, T, >, T, createMock, (, MockCreationSettings, <, T, >, settings, ), {, MockHandler, mockHandler, =, new]
[., isFinal, (, type, ., getModifiers, (, ), ), ;, }, public, <, T, >, T, createMock, (, MockCreationSettings, <]
[), ;, }, public, <, T, >, T, createMock, (, MockCreationSettings, <, T, >, settings, ), {, MockHandler, mockHandler, =]
[., getModifiers, (, ), ), ;, }, public, <, T, >, T, createMock, (, MockCreationSettings, <, T, >, settings, )]
[;, T, mock, =, mockMaker, ., createMock, (, settings, ,, mockHandler, ), ;, Object, spiedInstance, =, settings, ., getSpiedInstance, (]
[., create, (, settings, ), ;, T, mock, =, mockMaker, ., createMock, (, settings, ,, mockHandler, ), ;, Object, spiedInstance]
[), ;, T, mock, =, mockMaker, ., createMock, (, settings, ,, mockHandler, ), ;, Object, spiedInstance, =, settings, ., getSpiedInstance]
[;, Object, spiedInstance, =, settings, ., getSpiedInstance, (, ), ;, if, (, spiedInstance, !=, null, ), {, new, LenientCopyTool, (]
[., createMock, (, settings, ,, mockHandler, ), ;, Object, spiedInstance, =, settings, ., getSpiedInstance, (, ), ;, if, (, spiedInstance]
[,, mockHandler, ), ;, Object, spiedInstance, =, settings, ., getSpiedInstance, (, ), ;, if, (, spiedInstance, !=, null, ), {]
[), ;, Object, spiedInstance, =, settings, ., getSpiedInstance, (, ), ;, if, (, spiedInstance, !=, null, ), {, new, LenientCopyTool]
[;, if, (, spiedInstance, !=, null, ), {, new, LenientCopyTool, (, ), ., copyToMock, (, spiedInstance, ,, mock, ), ;]
[., getSpiedInstance, (, ), ;, if, (, spiedInstance, !=, null, ), {, new, LenientCopyTool, (, ), ., copyToMock, (, spiedInstance]
[), {, new, LenientCopyTool, (, ), ., copyToMock, (, spiedInstance, ,, mock, ), ;, }, return, mock, ;, }, public]
[!=, null, ), {, new, LenientCopyTool, (, ), ., copyToMock, (, spiedInstance, ,, mock, ), ;, }, return, mock, ;]
[), {, new, LenientCopyTool, (, ), ., copyToMock, (, spiedInstance, ,, mock, ), ;, }, return, mock, ;, }, public]
[;, }, return, mock, ;, }, public, <, T, >, void, resetMock, (, T, mock, ), {, InternalMockHandler, oldHandler, =]
[., copyToMock, (, spiedInstance, ,, mock, ), ;, }, return, mock, ;, }, public, <, T, >, void, resetMock, (]
[,, mock, ), ;, }, return, mock, ;, }, public, <, T, >, void, resetMock, (, T, mock, ), {]
[), ;, }, return, mock, ;, }, public, <, T, >, void, resetMock, (, T, mock, ), {, InternalMockHandler, oldHandler]
[;, }, public, <, T, >, void, resetMock, (, T, mock, ), {, InternalMockHandler, oldHandler, =, (, InternalMockHandler, ), getMockHandler]
[;, MockCreationSettings, settings, =, oldHandler, ., getMockSettings, (, ), ;, MockHandler, newHandler, =, new, MockHandlerFactory, (, ), ., create, (]
[;, MockCreationSettings, settings, =, oldHandler, ., getMockSettings, (, ), ;, MockHandler, newHandler, =, new, MockHandlerFactory, (, ), ., create, (]
[), ;, MockCreationSettings, settings, =, oldHandler, ., getMockSettings, (, ), ;, MockHandler, newHandler, =, new, MockHandlerFactory, (, ), ., create]
[;, MockHandler, newHandler, =, new, MockHandlerFactory, (, ), ., create, (, settings, ), ;, mockMaker, ., resetMock, (, mock, ,]
[., getMockSettings, (, ), ;, MockHandler, newHandler, =, new, MockHandlerFactory, (, ), ., create, (, settings, ), ;, mockMaker, .]
[;, mockMaker, ., resetMock, (, mock, ,, newHandler, ,, settings, ), ;, }, public, <, T, >, InternalMockHandler, <, T]
[., create, (, settings, ), ;, mockMaker, ., resetMock, (, mock, ,, newHandler, ,, settings, ), ;, }, public, <]
[), ;, mockMaker, ., resetMock, (, mock, ,, newHandler, ,, settings, ), ;, }, public, <, T, >, InternalMockHandler, <]
[;, }, public, <, T, >, InternalMockHandler, <, T, >, getMockHandler, (, T, mock, ), {, if, (, mock, ==]
[., resetMock, (, mock, ,, newHandler, ,, settings, ), ;, }, public, <, T, >, InternalMockHandler, <, T, >, getMockHandler]
[,, newHandler, ,, settings, ), ;, }, public, <, T, >, InternalMockHandler, <, T, >, getMockHandler, (, T, mock, )]
[,, settings, ), ;, }, public, <, T, >, InternalMockHandler, <, T, >, getMockHandler, (, T, mock, ), {, if]
[), ;, }, public, <, T, >, InternalMockHandler, <, T, >, getMockHandler, (, T, mock, ), {, if, (, mock]
[), {, throw, new, NotAMockException, (, "Argument should be a mock, but is null!", ), ;, }, if, (, isMockitoMock, (, mock, ), ), {, MockHandler, handler]
[==, null, ), {, throw, new, NotAMockException, (, "Argument should be a mock, but is null!", ), ;, }, if, (, isMockitoMock, (, mock, ), ), {]
[), {, throw, new, NotAMockException, (, "Argument should be a mock, but is null!", ), ;, }, if, (, isMockitoMock, (, mock, ), ), {, MockHandler, handler]
[;, }, if, (, isMockitoMock, (, mock, ), ), {, MockHandler, handler, =, mockMaker, ., getHandler, (, mock, ), ;]
[), ;, }, if, (, isMockitoMock, (, mock, ), ), {, MockHandler, handler, =, mockMaker, ., getHandler, (, mock, )]
[), {, MockHandler, handler, =, mockMaker, ., getHandler, (, mock, ), ;, return, (, InternalMockHandler, ), handler, ;, }, else]
[), ), {, MockHandler, handler, =, mockMaker, ., getHandler, (, mock, ), ;, return, (, InternalMockHandler, ), handler, ;, }]
[;, return, (, InternalMockHandler, ), handler, ;, }, else, {, throw, new, NotAMockException, (, "Argument should be a mock, but is: ", +, mock, ., getClass, (]
[., getHandler, (, mock, ), ;, return, (, InternalMockHandler, ), handler, ;, }, else, {, throw, new, NotAMockException, (, "Argument should be a mock, but is: "]
[), ;, return, (, InternalMockHandler, ), handler, ;, }, else, {, throw, new, NotAMockException, (, "Argument should be a mock, but is: ", +, mock, ., getClass]
[;, }, else, {, throw, new, NotAMockException, (, "Argument should be a mock, but is: ", +, mock, ., getClass, (, ), ), ;, }, }, public]
[;, }, else, {, throw, new, NotAMockException, (, "Argument should be a mock, but is: ", +, mock, ., getClass, (, ), ), ;, }, }, public]
[;, }, }, public, boolean, isMock, (, Object, mock, ), {, return, isMockitoMock, (, mock, ), ;, }, public, boolean]
[), ;, }, }, public, boolean, isMock, (, Object, mock, ), {, return, isMockitoMock, (, mock, ), ;, }, public]
[+, mock, ., getClass, (, ), ), ;, }, }, public, boolean, isMock, (, Object, mock, ), {, return, isMockitoMock]
[), ;, }, }, public, boolean, isMock, (, Object, mock, ), {, return, isMockitoMock, (, mock, ), ;, }, public]
[., getClass, (, ), ), ;, }, }, public, boolean, isMock, (, Object, mock, ), {, return, isMockitoMock, (, mock]
[;, }, public, boolean, isSpy, (, Object, mock, ), {, return, isMockitoMock, (, mock, ), &&, getMockSettings, (, mock, )]
[), ;, }, public, boolean, isSpy, (, Object, mock, ), {, return, isMockitoMock, (, mock, ), &&, getMockSettings, (, mock]
[;, }, private, <, T, >, boolean, isMockitoMock, (, T, mock, ), {, return, mockMaker, ., getHandler, (, mock, )]
[&&, getMockSettings, (, mock, ), ., getDefaultAnswer, (, ), ==, Mockito, ., CALLS_REAL_METHODS, ;, }, private, <, T, >, boolean]
[), &&, getMockSettings, (, mock, ), ., getDefaultAnswer, (, ), ==, Mockito, ., CALLS_REAL_METHODS, ;, }, private, <, T, >]
[;, }, private, <, T, >, boolean, isMockitoMock, (, T, mock, ), {, return, mockMaker, ., getHandler, (, mock, )]
[==, Mockito, ., CALLS_REAL_METHODS, ;, }, private, <, T, >, boolean, isMockitoMock, (, T, mock, ), {, return, mockMaker, .]
[., getDefaultAnswer, (, ), ==, Mockito, ., CALLS_REAL_METHODS, ;, }, private, <, T, >, boolean, isMockitoMock, (, T, mock, )]
[), ., getDefaultAnswer, (, ), ==, Mockito, ., CALLS_REAL_METHODS, ;, }, private, <, T, >, boolean, isMockitoMock, (, T, mock]
[;, }, private, <, T, >, boolean, isMockitoMock, (, T, mock, ), {, return, mockMaker, ., getHandler, (, mock, )]
[., CALLS_REAL_METHODS, ;, }, private, <, T, >, boolean, isMockitoMock, (, T, mock, ), {, return, mockMaker, ., getHandler, (]
[;, }, public, MockName, getMockName, (, Object, mock, ), {, return, getMockHandler, (, mock, ), ., getMockSettings, (, ), .]
[!=, null, ;, }, public, MockName, getMockName, (, Object, mock, ), {, return, getMockHandler, (, mock, ), ., getMockSettings, (]
[., getHandler, (, mock, ), !=, null, ;, }, public, MockName, getMockName, (, Object, mock, ), {, return, getMockHandler, (]
[), !=, null, ;, }, public, MockName, getMockName, (, Object, mock, ), {, return, getMockHandler, (, mock, ), ., getMockSettings]
[;, }, public, MockName, getMockName, (, Object, mock, ), {, return, getMockHandler, (, mock, ), ., getMockSettings, (, ), .]
[;, }, public, void, maybeRedefineMockName, (, Object, mock, ,, String, newName, ), {, MockName, mockName, =, getMockName, (, mock, )]
[., getMockName, (, ), ;, }, public, void, maybeRedefineMockName, (, Object, mock, ,, String, newName, ), {, MockName, mockName, =]
[., getMockSettings, (, ), ., getMockName, (, ), ;, }, public, void, maybeRedefineMockName, (, Object, mock, ,, String, newName, )]
[), ., getMockSettings, (, ), ., getMockName, (, ), ;, }, public, void, maybeRedefineMockName, (, Object, mock, ,, String, newName]
[;, if, (, mockName, ., isDefault, (, ), &&, getMockHandler, (, mock, ), ., getMockSettings, (, ), instanceof, CreationSettings, )]
[), ;, if, (, mockName, ., isDefault, (, ), &&, getMockHandler, (, mock, ), ., getMockSettings, (, ), instanceof, CreationSettings]
[), {, (, (, CreationSettings, ), getMockHandler, (, mock, ), ., getMockSettings, (, ), ), ., setMockName, (, new, MockNameImpl]
[&&, getMockHandler, (, mock, ), ., getMockSettings, (, ), instanceof, CreationSettings, ), {, (, (, CreationSettings, ), getMockHandler, (, mock]
[., isDefault, (, ), &&, getMockHandler, (, mock, ), ., getMockSettings, (, ), instanceof, CreationSettings, ), {, (, (, CreationSettings]
[), {, (, (, CreationSettings, ), getMockHandler, (, mock, ), ., getMockSettings, (, ), ), ., setMockName, (, new, MockNameImpl]
[instanceof, CreationSettings, ), {, (, (, CreationSettings, ), getMockHandler, (, mock, ), ., getMockSettings, (, ), ), ., setMockName, (]
[., getMockSettings, (, ), instanceof, CreationSettings, ), {, (, (, CreationSettings, ), getMockHandler, (, mock, ), ., getMockSettings, (, )]
[), ., getMockSettings, (, ), instanceof, CreationSettings, ), {, (, (, CreationSettings, ), getMockHandler, (, mock, ), ., getMockSettings, (]
[;, }, }, public, MockCreationSettings, getMockSettings, (, Object, mock, ), {, return, getMockHandler, (, mock, ), ., getMockSettings, (, )]
[., setMockName, (, new, MockNameImpl, (, newName, ), ), ;, }, }, public, MockCreationSettings, getMockSettings, (, Object, mock, ), {]
[), ., setMockName, (, new, MockNameImpl, (, newName, ), ), ;, }, }, public, MockCreationSettings, getMockSettings, (, Object, mock, )]
[), ., setMockName, (, new, MockNameImpl, (, newName, ), ), ;, }, }, public, MockCreationSettings, getMockSettings, (, Object, mock, )]
[., getMockSettings, (, ), ), ., setMockName, (, new, MockNameImpl, (, newName, ), ), ;, }, }, public, MockCreationSettings, getMockSettings]
[), ., getMockSettings, (, ), ), ., setMockName, (, new, MockNameImpl, (, newName, ), ), ;, }, }, public, MockCreationSettings]
[), ;, }, }, public, MockCreationSettings, getMockSettings, (, Object, mock, ), {, return, getMockHandler, (, mock, ), ., getMockSettings, (]
[), ), ;, }, }, public, MockCreationSettings, getMockSettings, (, Object, mock, ), {, return, getMockHandler, (, mock, ), ., getMockSettings]
[;, }, }]
[., getMockSettings, (, ), ;, }, }]
[), ., getMockSettings, (, ), ;, }, }]
