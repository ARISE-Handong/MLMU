[math3, ., util, ., MathUtils, ;, public, class, Kurtosis, extends, AbstractStorelessUnivariateStatistic, implements, Serializable, {, private, static, final, long, serialVersionUID, =]
[static, final, long, serialVersionUID, =, 2784465764798260919L, ;, protected, FourthMoment, moment, ;, protected, boolean, incMoment, ;, public, Kurtosis, (, ), {]
[long, serialVersionUID, =, 2784465764798260919L, ;, protected, FourthMoment, moment, ;, protected, boolean, incMoment, ;, public, Kurtosis, (, ), {, incMoment, =]
[=, 2784465764798260919L, ;, protected, FourthMoment, moment, ;, protected, boolean, incMoment, ;, public, Kurtosis, (, ), {, incMoment, =, true, ;]
[;, protected, FourthMoment, moment, ;, protected, boolean, incMoment, ;, public, Kurtosis, (, ), {, incMoment, =, true, ;, moment, =]
[incMoment, =, true, ;, moment, =, new, FourthMoment, (, ), ;, }, public, Kurtosis, (, final, FourthMoment, m4, ), {]
[true, ;, moment, =, new, FourthMoment, (, ), ;, }, public, Kurtosis, (, final, FourthMoment, m4, ), {, incMoment, =]
[moment, =, new, FourthMoment, (, ), ;, }, public, Kurtosis, (, final, FourthMoment, m4, ), {, incMoment, =, false, ;]
[moment, =, new, FourthMoment, (, ), ;, }, public, Kurtosis, (, final, FourthMoment, m4, ), {, incMoment, =, false, ;]
[(, ), ;, }, public, Kurtosis, (, final, FourthMoment, m4, ), {, incMoment, =, false, ;, this, ., moment, =]
[incMoment, =, false, ;, this, ., moment, =, m4, ;, }, public, Kurtosis, (, Kurtosis, original, ), throws, NullArgumentException, {]
[false, ;, this, ., moment, =, m4, ;, }, public, Kurtosis, (, Kurtosis, original, ), throws, NullArgumentException, {, copy, (]
[this, ., moment, =, m4, ;, }, public, Kurtosis, (, Kurtosis, original, ), throws, NullArgumentException, {, copy, (, original, ,]
[(, original, ,, this, ), ;, }, @, Override, public, void, increment, (, final, double, d, ), {, if, (]
[this, ), ;, }, @, Override, public, void, increment, (, final, double, d, ), {, if, (, incMoment, ), {]
[this, ), ;, }, @, Override, public, void, increment, (, final, double, d, ), {, if, (, incMoment, ), {]
[@, Override, public, void, increment, (, final, double, d, ), {, if, (, incMoment, ), {, moment, ., increment, (]
[moment, ., increment, (, d, ), ;, }, }, @, Override, public, double, getResult, (, ), {, double, kurtosis, =]
[moment, ., increment, (, d, ), ;, }, }, @, Override, public, double, getResult, (, ), {, double, kurtosis, =]
[;, }, }, @, Override, public, double, getResult, (, ), {, double, kurtosis, =, Double, ., NaN, ;, if, (]
[;, }, }, @, Override, public, double, getResult, (, ), {, double, kurtosis, =, Double, ., NaN, ;, if, (]
[;, }, }, @, Override, public, double, getResult, (, ), {, double, kurtosis, =, Double, ., NaN, ;, if, (]
[double, getResult, (, ), {, double, kurtosis, =, Double, ., NaN, ;, if, (, moment, ., getN, (, ), >]
[kurtosis, =, Double, ., NaN, ;, if, (, moment, ., getN, (, ), >, 3, ), {, double, variance, =]
[kurtosis, =, Double, ., NaN, ;, if, (, moment, ., getN, (, ), >, 3, ), {, double, variance, =]
[kurtosis, =, Double, ., NaN, ;, if, (, moment, ., getN, (, ), >, 3, ), {, double, variance, =]
[NaN, ;, if, (, moment, ., getN, (, ), >, 3, ), {, double, variance, =, moment, ., m2, /]
[;, if, (, moment, ., getN, (, ), >, 3, ), {, double, variance, =, moment, ., m2, /, (]
[;, if, (, moment, ., getN, (, ), >, 3, ), {, double, variance, =, moment, ., m2, /, (]
[;, if, (, moment, ., getN, (, ), >, 3, ), {, double, variance, =, moment, ., m2, /, (]
[., getN, (, ), >, 3, ), {, double, variance, =, moment, ., m2, /, (, moment, ., n, -]
[3, ), {, double, variance, =, moment, ., m2, /, (, moment, ., n, -, 1, ), ;, if, (]
[3, ), {, double, variance, =, moment, ., m2, /, (, moment, ., n, -, 1, ), ;, if, (]
[3, ), {, double, variance, =, moment, ., m2, /, (, moment, ., n, -, 1, ), ;, if, (]
[3, ), {, double, variance, =, moment, ., m2, /, (, moment, ., n, -, 1, ), ;, if, (]
[variance, =, moment, ., m2, /, (, moment, ., n, -, 1, ), ;, if, (, moment, ., n, <=]
[moment, ., m2, /, (, moment, ., n, -, 1, ), ;, if, (, moment, ., n, <=, 3, ||]
[moment, ., m2, /, (, moment, ., n, -, 1, ), ;, if, (, moment, ., n, <=, 3, ||]
[m2, /, (, moment, ., n, -, 1, ), ;, if, (, moment, ., n, <=, 3, ||, variance, <]
[moment, ., n, -, 1, ), ;, if, (, moment, ., n, <=, 3, ||, variance, <, 10E-20, ), {]
[n, -, 1, ), ;, if, (, moment, ., n, <=, 3, ||, variance, <, 10E-20, ), {, kurtosis, =]
[., n, <=, 3, ||, variance, <, 10E-20, ), {, kurtosis, =, 0.0, ;, }, else, {, double, n, =]
[., n, <=, 3, ||, variance, <, 10E-20, ), {, kurtosis, =, 0.0, ;, }, else, {, double, n, =]
[||, variance, <, 10E-20, ), {, kurtosis, =, 0.0, ;, }, else, {, double, n, =, moment, ., n, ;]
[<, 10E-20, ), {, kurtosis, =, 0.0, ;, }, else, {, double, n, =, moment, ., n, ;, kurtosis, =]
[<, 10E-20, ), {, kurtosis, =, 0.0, ;, }, else, {, double, n, =, moment, ., n, ;, kurtosis, =]
[10E-20, ), {, kurtosis, =, 0.0, ;, }, else, {, double, n, =, moment, ., n, ;, kurtosis, =, (]
[10E-20, ), {, kurtosis, =, 0.0, ;, }, else, {, double, n, =, moment, ., n, ;, kurtosis, =, (]
[10E-20, ), {, kurtosis, =, 0.0, ;, }, else, {, double, n, =, moment, ., n, ;, kurtosis, =, (]
[10E-20, ), {, kurtosis, =, 0.0, ;, }, else, {, double, n, =, moment, ., n, ;, kurtosis, =, (]
[{, kurtosis, =, 0.0, ;, }, else, {, double, n, =, moment, ., n, ;, kurtosis, =, (, n, *]
[kurtosis, =, 0.0, ;, }, else, {, double, n, =, moment, ., n, ;, kurtosis, =, (, n, *, (]
[kurtosis, =, 0.0, ;, }, else, {, double, n, =, moment, ., n, ;, kurtosis, =, (, n, *, (]
[0.0, ;, }, else, {, double, n, =, moment, ., n, ;, kurtosis, =, (, n, *, (, n, +]
[else, {, double, n, =, moment, ., n, ;, kurtosis, =, (, n, *, (, n, +, 1, ), *]
[else, {, double, n, =, moment, ., n, ;, kurtosis, =, (, n, *, (, n, +, 1, ), *]
[., n, ;, kurtosis, =, (, n, *, (, n, +, 1, ), *, moment, ., getResult, (, ), -]
[., n, ;, kurtosis, =, (, n, *, (, n, +, 1, ), *, moment, ., getResult, (, ), -]
[., n, ;, kurtosis, =, (, n, *, (, n, +, 1, ), *, moment, ., getResult, (, ), -]
[., n, ;, kurtosis, =, (, n, *, (, n, +, 1, ), *, moment, ., getResult, (, ), -]
[;, kurtosis, =, (, n, *, (, n, +, 1, ), *, moment, ., getResult, (, ), -, 3, *]
[;, kurtosis, =, (, n, *, (, n, +, 1, ), *, moment, ., getResult, (, ), -, 3, *]
[n, *, (, n, +, 1, ), *, moment, ., getResult, (, ), -, 3, *, moment, ., m2, *]
[n, *, (, n, +, 1, ), *, moment, ., getResult, (, ), -, 3, *, moment, ., m2, *]
[+, 1, ), *, moment, ., getResult, (, ), -, 3, *, moment, ., m2, *, moment, ., m2, *]
[1, ), *, moment, ., getResult, (, ), -, 3, *, moment, ., m2, *, moment, ., m2, *, (]
[1, ), *, moment, ., getResult, (, ), -, 3, *, moment, ., m2, *, moment, ., m2, *, (]
[*, moment, ., getResult, (, ), -, 3, *, moment, ., m2, *, moment, ., m2, *, (, n, -]
[(, ), -, 3, *, moment, ., m2, *, moment, ., m2, *, (, n, -, 1, ), ), /]
[), -, 3, *, moment, ., m2, *, moment, ., m2, *, (, n, -, 1, ), ), /, (]
[), -, 3, *, moment, ., m2, *, moment, ., m2, *, (, n, -, 1, ), ), /, (]
[), -, 3, *, moment, ., m2, *, moment, ., m2, *, (, n, -, 1, ), ), /, (]
[), -, 3, *, moment, ., m2, *, moment, ., m2, *, (, n, -, 1, ), ), /, (]
[), -, 3, *, moment, ., m2, *, moment, ., m2, *, (, n, -, 1, ), ), /, (]
[-, 3, *, moment, ., m2, *, moment, ., m2, *, (, n, -, 1, ), ), /, (, (]
[-, 3, *, moment, ., m2, *, moment, ., m2, *, (, n, -, 1, ), ), /, (, (]
[*, moment, ., m2, *, moment, ., m2, *, (, n, -, 1, ), ), /, (, (, n, -]
[m2, *, moment, ., m2, *, (, n, -, 1, ), ), /, (, (, n, -, 1, ), *]
[*, moment, ., m2, *, (, n, -, 1, ), ), /, (, (, n, -, 1, ), *, (]
[*, moment, ., m2, *, (, n, -, 1, ), ), /, (, (, n, -, 1, ), *, (]
[., m2, *, (, n, -, 1, ), ), /, (, (, n, -, 1, ), *, (, n, -]
[(, n, -, 1, ), ), /, (, (, n, -, 1, ), *, (, n, -, 2, ), *]
[n, -, 1, ), ), /, (, (, n, -, 1, ), *, (, n, -, 2, ), *, (]
[n, -, 1, ), ), /, (, (, n, -, 1, ), *, (, n, -, 2, ), *, (]
[1, ), ), /, (, (, n, -, 1, ), *, (, n, -, 2, ), *, (, n, -]
[/, (, (, n, -, 1, ), *, (, n, -, 2, ), *, (, n, -, 3, ), *]
[(, n, -, 1, ), *, (, n, -, 2, ), *, (, n, -, 3, ), *, variance, *]
[(, n, -, 2, ), *, (, n, -, 3, ), *, variance, *, variance, ), ;, }, }, return]
[*, variance, ), ;, }, }, return, kurtosis, ;, }, @, Override, public, void, clear, (, ), {, if, (]
[;, }, }, return, kurtosis, ;, }, @, Override, public, void, clear, (, ), {, if, (, incMoment, ), {]
[;, }, }, return, kurtosis, ;, }, @, Override, public, void, clear, (, ), {, if, (, incMoment, ), {]
[if, (, incMoment, ), {, moment, ., clear, (, ), ;, }, }, public, long, getN, (, ), {, return]
[if, (, incMoment, ), {, moment, ., clear, (, ), ;, }, }, public, long, getN, (, ), {, return]
[final, double, [, ], values, ,, final, int, begin, ,, final, int, length, ), throws, MathIllegalArgumentException, {, double, kurt, =]
[final, double, [, ], values, ,, final, int, begin, ,, final, int, length, ), throws, MathIllegalArgumentException, {, double, kurt, =]
[final, int, begin, ,, final, int, length, ), throws, MathIllegalArgumentException, {, double, kurt, =, Double, ., NaN, ;, if, (]
[final, int, begin, ,, final, int, length, ), throws, MathIllegalArgumentException, {, double, kurt, =, Double, ., NaN, ;, if, (]
[begin, ,, final, int, length, ), throws, MathIllegalArgumentException, {, double, kurt, =, Double, ., NaN, ;, if, (, test, (]
[final, int, length, ), throws, MathIllegalArgumentException, {, double, kurt, =, Double, ., NaN, ;, if, (, test, (, values, ,]
[length, ), throws, MathIllegalArgumentException, {, double, kurt, =, Double, ., NaN, ;, if, (, test, (, values, ,, begin, ,]
[MathIllegalArgumentException, {, double, kurt, =, Double, ., NaN, ;, if, (, test, (, values, ,, begin, ,, length, ), &&]
[MathIllegalArgumentException, {, double, kurt, =, Double, ., NaN, ;, if, (, test, (, values, ,, begin, ,, length, ), &&]
[double, kurt, =, Double, ., NaN, ;, if, (, test, (, values, ,, begin, ,, length, ), &&, length, >]
[;, if, (, test, (, values, ,, begin, ,, length, ), &&, length, >, 3, ), {, Variance, variance, =]
[values, ,, begin, ,, length, ), &&, length, >, 3, ), {, Variance, variance, =, new, Variance, (, ), ;]
[values, ,, begin, ,, length, ), &&, length, >, 3, ), {, Variance, variance, =, new, Variance, (, ), ;]
[length, ), &&, length, >, 3, ), {, Variance, variance, =, new, Variance, (, ), ;, variance, ., incrementAll, (]
[&&, length, >, 3, ), {, Variance, variance, =, new, Variance, (, ), ;, variance, ., incrementAll, (, values, ,]
[>, 3, ), {, Variance, variance, =, new, Variance, (, ), ;, variance, ., incrementAll, (, values, ,, begin, ,]
[=, new, Variance, (, ), ;, variance, ., incrementAll, (, values, ,, begin, ,, length, ), ;, double, mean, =]
[=, new, Variance, (, ), ;, variance, ., incrementAll, (, values, ,, begin, ,, length, ), ;, double, mean, =]
[=, new, Variance, (, ), ;, variance, ., incrementAll, (, values, ,, begin, ,, length, ), ;, double, mean, =]
[(, values, ,, begin, ,, length, ), ;, double, mean, =, variance, ., moment, ., m1, ;, double, stdDev, =]
[(, values, ,, begin, ,, length, ), ;, double, mean, =, variance, ., moment, ., m1, ;, double, stdDev, =]
[,, length, ), ;, double, mean, =, variance, ., moment, ., m1, ;, double, stdDev, =, FastMath, ., sqrt, (]
[,, length, ), ;, double, mean, =, variance, ., moment, ., m1, ;, double, stdDev, =, FastMath, ., sqrt, (]
[., m1, ;, double, stdDev, =, FastMath, ., sqrt, (, variance, ., getResult, (, ), ), ;, double, accum3, =]
[., sqrt, (, variance, ., getResult, (, ), ), ;, double, accum3, =, 0.0, ;, for, (, int, i, =]
[(, variance, ., getResult, (, ), ), ;, double, accum3, =, 0.0, ;, for, (, int, i, =, begin, ;]
[(, variance, ., getResult, (, ), ), ;, double, accum3, =, 0.0, ;, for, (, int, i, =, begin, ;]
[., getResult, (, ), ), ;, double, accum3, =, 0.0, ;, for, (, int, i, =, begin, ;, i, <]
[., getResult, (, ), ), ;, double, accum3, =, 0.0, ;, for, (, int, i, =, begin, ;, i, <]
[(, ), ), ;, double, accum3, =, 0.0, ;, for, (, int, i, =, begin, ;, i, <, begin, +]
[), ;, double, accum3, =, 0.0, ;, for, (, int, i, =, begin, ;, i, <, begin, +, length, ;]
[), ;, double, accum3, =, 0.0, ;, for, (, int, i, =, begin, ;, i, <, begin, +, length, ;]
[=, 0.0, ;, for, (, int, i, =, begin, ;, i, <, begin, +, length, ;, i, ++, ), {]
[;, for, (, int, i, =, begin, ;, i, <, begin, +, length, ;, i, ++, ), {, accum3, +=]
[;, for, (, int, i, =, begin, ;, i, <, begin, +, length, ;, i, ++, ), {, accum3, +=]
[i, =, begin, ;, i, <, begin, +, length, ;, i, ++, ), {, accum3, +=, FastMath, ., pow, (]
[i, =, begin, ;, i, <, begin, +, length, ;, i, ++, ), {, accum3, +=, FastMath, ., pow, (]
[i, =, begin, ;, i, <, begin, +, length, ;, i, ++, ), {, accum3, +=, FastMath, ., pow, (]
[begin, ;, i, <, begin, +, length, ;, i, ++, ), {, accum3, +=, FastMath, ., pow, (, values, []
[<, begin, +, length, ;, i, ++, ), {, accum3, +=, FastMath, ., pow, (, values, [, i, ], -]
[+, length, ;, i, ++, ), {, accum3, +=, FastMath, ., pow, (, values, [, i, ], -, mean, ,]
[++, ), {, accum3, +=, FastMath, ., pow, (, values, [, i, ], -, mean, ,, 4.0, ), ;, }]
[{, accum3, +=, FastMath, ., pow, (, values, [, i, ], -, mean, ,, 4.0, ), ;, }, accum3, /=]
[{, accum3, +=, FastMath, ., pow, (, values, [, i, ], -, mean, ,, 4.0, ), ;, }, accum3, /=]
[., pow, (, values, [, i, ], -, mean, ,, 4.0, ), ;, }, accum3, /=, FastMath, ., pow, (]
[(, values, [, i, ], -, mean, ,, 4.0, ), ;, }, accum3, /=, FastMath, ., pow, (, stdDev, ,]
[mean, ,, 4.0, ), ;, }, accum3, /=, FastMath, ., pow, (, stdDev, ,, 4.0d, ), ;, double, n0, =]
[}, accum3, /=, FastMath, ., pow, (, stdDev, ,, 4.0d, ), ;, double, n0, =, length, ;, double, coefficientOne, =]
[}, accum3, /=, FastMath, ., pow, (, stdDev, ,, 4.0d, ), ;, double, n0, =, length, ;, double, coefficientOne, =]
[accum3, /=, FastMath, ., pow, (, stdDev, ,, 4.0d, ), ;, double, n0, =, length, ;, double, coefficientOne, =, (]
[accum3, /=, FastMath, ., pow, (, stdDev, ,, 4.0d, ), ;, double, n0, =, length, ;, double, coefficientOne, =, (]
[FastMath, ., pow, (, stdDev, ,, 4.0d, ), ;, double, n0, =, length, ;, double, coefficientOne, =, (, n0, *]
[., pow, (, stdDev, ,, 4.0d, ), ;, double, n0, =, length, ;, double, coefficientOne, =, (, n0, *, (]
[., pow, (, stdDev, ,, 4.0d, ), ;, double, n0, =, length, ;, double, coefficientOne, =, (, n0, *, (]
[(, stdDev, ,, 4.0d, ), ;, double, n0, =, length, ;, double, coefficientOne, =, (, n0, *, (, n0, +]
[), ;, double, n0, =, length, ;, double, coefficientOne, =, (, n0, *, (, n0, +, 1, ), ), /]
[;, double, n0, =, length, ;, double, coefficientOne, =, (, n0, *, (, n0, +, 1, ), ), /, (]
[;, double, n0, =, length, ;, double, coefficientOne, =, (, n0, *, (, n0, +, 1, ), ), /, (]
[;, double, n0, =, length, ;, double, coefficientOne, =, (, n0, *, (, n0, +, 1, ), ), /, (]
[double, n0, =, length, ;, double, coefficientOne, =, (, n0, *, (, n0, +, 1, ), ), /, (, (]
[double, n0, =, length, ;, double, coefficientOne, =, (, n0, *, (, n0, +, 1, ), ), /, (, (]
[=, length, ;, double, coefficientOne, =, (, n0, *, (, n0, +, 1, ), ), /, (, (, n0, -]
[double, coefficientOne, =, (, n0, *, (, n0, +, 1, ), ), /, (, (, n0, -, 1, ), *]
[coefficientOne, =, (, n0, *, (, n0, +, 1, ), ), /, (, (, n0, -, 1, ), *, (]
[coefficientOne, =, (, n0, *, (, n0, +, 1, ), ), /, (, (, n0, -, 1, ), *, (]
[(, n0, *, (, n0, +, 1, ), ), /, (, (, n0, -, 1, ), *, (, n0, -]
[(, n0, +, 1, ), ), /, (, (, n0, -, 1, ), *, (, n0, -, 2, ), *]
[n0, +, 1, ), ), /, (, (, n0, -, 1, ), *, (, n0, -, 2, ), *, (]
[n0, +, 1, ), ), /, (, (, n0, -, 1, ), *, (, n0, -, 2, ), *, (]
[1, ), ), /, (, (, n0, -, 1, ), *, (, n0, -, 2, ), *, (, n0, -]
[-, 1, ), *, (, n0, -, 2, ), *, (, n0, -, 3, ), ), ;, double, termTwo, =]
[-, 1, ), *, (, n0, -, 2, ), *, (, n0, -, 3, ), ), ;, double, termTwo, =]
[1, ), *, (, n0, -, 2, ), *, (, n0, -, 3, ), ), ;, double, termTwo, =, (]
[1, ), *, (, n0, -, 2, ), *, (, n0, -, 3, ), ), ;, double, termTwo, =, (]
[*, (, n0, -, 2, ), *, (, n0, -, 3, ), ), ;, double, termTwo, =, (, 3, *]
[*, (, n0, -, 2, ), *, (, n0, -, 3, ), ), ;, double, termTwo, =, (, 3, *]
[2, ), *, (, n0, -, 3, ), ), ;, double, termTwo, =, (, 3, *, FastMath, ., pow, (]
[2, ), *, (, n0, -, 3, ), ), ;, double, termTwo, =, (, 3, *, FastMath, ., pow, (]
[*, (, n0, -, 3, ), ), ;, double, termTwo, =, (, 3, *, FastMath, ., pow, (, n0, -]
[n0, -, 3, ), ), ;, double, termTwo, =, (, 3, *, FastMath, ., pow, (, n0, -, 1, ,]
[), ;, double, termTwo, =, (, 3, *, FastMath, ., pow, (, n0, -, 1, ,, 2.0, ), ), /]
[;, double, termTwo, =, (, 3, *, FastMath, ., pow, (, n0, -, 1, ,, 2.0, ), ), /, (]
[;, double, termTwo, =, (, 3, *, FastMath, ., pow, (, n0, -, 1, ,, 2.0, ), ), /, (]
[double, termTwo, =, (, 3, *, FastMath, ., pow, (, n0, -, 1, ,, 2.0, ), ), /, (, (]
[double, termTwo, =, (, 3, *, FastMath, ., pow, (, n0, -, 1, ,, 2.0, ), ), /, (, (]
[=, (, 3, *, FastMath, ., pow, (, n0, -, 1, ,, 2.0, ), ), /, (, (, n0, -]
[*, FastMath, ., pow, (, n0, -, 1, ,, 2.0, ), ), /, (, (, n0, -, 2, ), *]
[FastMath, ., pow, (, n0, -, 1, ,, 2.0, ), ), /, (, (, n0, -, 2, ), *, (]
[FastMath, ., pow, (, n0, -, 1, ,, 2.0, ), ), /, (, (, n0, -, 2, ), *, (]
[pow, (, n0, -, 1, ,, 2.0, ), ), /, (, (, n0, -, 2, ), *, (, n0, -]
[1, ,, 2.0, ), ), /, (, (, n0, -, 2, ), *, (, n0, -, 3, ), ), ;]
[2.0, ), ), /, (, (, n0, -, 2, ), *, (, n0, -, 3, ), ), ;, kurt, =]
[2.0, ), ), /, (, (, n0, -, 2, ), *, (, n0, -, 3, ), ), ;, kurt, =]
[), ), /, (, (, n0, -, 2, ), *, (, n0, -, 3, ), ), ;, kurt, =, (]
[), ), /, (, (, n0, -, 2, ), *, (, n0, -, 3, ), ), ;, kurt, =, (]
[/, (, (, n0, -, 2, ), *, (, n0, -, 3, ), ), ;, kurt, =, (, coefficientOne, *]
[n0, -, 2, ), *, (, n0, -, 3, ), ), ;, kurt, =, (, coefficientOne, *, accum3, ), -]
[*, (, n0, -, 3, ), ), ;, kurt, =, (, coefficientOne, *, accum3, ), -, termTwo, ;, }, return]
[), -, termTwo, ;, }, return, kurt, ;, }, @, Override, public, Kurtosis, copy, (, ), {, Kurtosis, result, =]
[return, kurt, ;, }, @, Override, public, Kurtosis, copy, (, ), {, Kurtosis, result, =, new, Kurtosis, (, ), ;]
[;, }, @, Override, public, Kurtosis, copy, (, ), {, Kurtosis, result, =, new, Kurtosis, (, ), ;, copy, (]
[@, Override, public, Kurtosis, copy, (, ), {, Kurtosis, result, =, new, Kurtosis, (, ), ;, copy, (, this, ,]
[copy, (, ), {, Kurtosis, result, =, new, Kurtosis, (, ), ;, copy, (, this, ,, result, ), ;, return]
[), ;, return, result, ;, }, public, static, void, copy, (, Kurtosis, source, ,, Kurtosis, dest, ), throws, NullArgumentException, {]
[), ;, return, result, ;, }, public, static, void, copy, (, Kurtosis, source, ,, Kurtosis, dest, ), throws, NullArgumentException, {]
[;, }, public, static, void, copy, (, Kurtosis, source, ,, Kurtosis, dest, ), throws, NullArgumentException, {, MathUtils, ., checkNotNull, (]
[static, void, copy, (, Kurtosis, source, ,, Kurtosis, dest, ), throws, NullArgumentException, {, MathUtils, ., checkNotNull, (, source, ), ;]
[static, void, copy, (, Kurtosis, source, ,, Kurtosis, dest, ), throws, NullArgumentException, {, MathUtils, ., checkNotNull, (, source, ), ;]
[Kurtosis, source, ,, Kurtosis, dest, ), throws, NullArgumentException, {, MathUtils, ., checkNotNull, (, source, ), ;, MathUtils, ., checkNotNull, (]
[Kurtosis, dest, ), throws, NullArgumentException, {, MathUtils, ., checkNotNull, (, source, ), ;, MathUtils, ., checkNotNull, (, dest, ), ;]
[Kurtosis, dest, ), throws, NullArgumentException, {, MathUtils, ., checkNotNull, (, source, ), ;, MathUtils, ., checkNotNull, (, dest, ), ;]
[NullArgumentException, {, MathUtils, ., checkNotNull, (, source, ), ;, MathUtils, ., checkNotNull, (, dest, ), ;, dest, ., setData, (]
[NullArgumentException, {, MathUtils, ., checkNotNull, (, source, ), ;, MathUtils, ., checkNotNull, (, dest, ), ;, dest, ., setData, (]
[), ;, MathUtils, ., checkNotNull, (, dest, ), ;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;]
[), ;, MathUtils, ., checkNotNull, (, dest, ), ;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;]
[checkNotNull, (, dest, ), ;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;, dest, ., moment, =]
[checkNotNull, (, dest, ), ;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;, dest, ., moment, =]
[checkNotNull, (, dest, ), ;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;, dest, ., moment, =]
[(, source, ., getDataRef, (, ), ), ;, dest, ., moment, =, source, ., moment, ., copy, (, ), ;]
[(, source, ., getDataRef, (, ), ), ;, dest, ., moment, =, source, ., moment, ., copy, (, ), ;]
[(, ), ), ;, dest, ., moment, =, source, ., moment, ., copy, (, ), ;, dest, ., incMoment, =]
[(, ), ), ;, dest, ., moment, =, source, ., moment, ., copy, (, ), ;, dest, ., incMoment, =]
