[., google, ., javascript, ., rhino, ., Node, ;, class, UnresolvedTypeExpression, extends, UnknownType, {, private, static, final, long, serialVersionUID, =]
[;, private, final, String, sourceName, ;, UnresolvedTypeExpression, (, JSTypeRegistry, registry, ,, Node, typeExpr, ,, String, sourceName, ), {, super, (]
[final, String, sourceName, ;, UnresolvedTypeExpression, (, JSTypeRegistry, registry, ,, Node, typeExpr, ,, String, sourceName, ), {, super, (, registry, ,]
[;, UnresolvedTypeExpression, (, JSTypeRegistry, registry, ,, Node, typeExpr, ,, String, sourceName, ), {, super, (, registry, ,, false, ), ;]
[;, UnresolvedTypeExpression, (, JSTypeRegistry, registry, ,, Node, typeExpr, ,, String, sourceName, ), {, super, (, registry, ,, false, ), ;]
[registry, ,, Node, typeExpr, ,, String, sourceName, ), {, super, (, registry, ,, false, ), ;, Preconditions, ., checkNotNull, (]
[typeExpr, ,, String, sourceName, ), {, super, (, registry, ,, false, ), ;, Preconditions, ., checkNotNull, (, typeExpr, ), ;]
[typeExpr, ,, String, sourceName, ), {, super, (, registry, ,, false, ), ;, Preconditions, ., checkNotNull, (, typeExpr, ), ;]
[), {, super, (, registry, ,, false, ), ;, Preconditions, ., checkNotNull, (, typeExpr, ), ;, this, ., typeExpr, =]
[super, (, registry, ,, false, ), ;, Preconditions, ., checkNotNull, (, typeExpr, ), ;, this, ., typeExpr, =, typeExpr, ;]
[super, (, registry, ,, false, ), ;, Preconditions, ., checkNotNull, (, typeExpr, ), ;, this, ., typeExpr, =, typeExpr, ;]
[false, ), ;, Preconditions, ., checkNotNull, (, typeExpr, ), ;, this, ., typeExpr, =, typeExpr, ;, this, ., sourceName, =]
[=, sourceName, ;, }, @, Override, JSType, resolveInternal, (, ErrorReporter, t, ,, StaticScope, <, JSType, >, enclosing, ), {, return]
[=, sourceName, ;, }, @, Override, JSType, resolveInternal, (, ErrorReporter, t, ,, StaticScope, <, JSType, >, enclosing, ), {, return]
[@, Override, JSType, resolveInternal, (, ErrorReporter, t, ,, StaticScope, <, JSType, >, enclosing, ), {, return, registry, ., createFromTypeNodes, (]
[JSType, resolveInternal, (, ErrorReporter, t, ,, StaticScope, <, JSType, >, enclosing, ), {, return, registry, ., createFromTypeNodes, (, typeExpr, ,]
[(, ErrorReporter, t, ,, StaticScope, <, JSType, >, enclosing, ), {, return, registry, ., createFromTypeNodes, (, typeExpr, ,, sourceName, ,]
