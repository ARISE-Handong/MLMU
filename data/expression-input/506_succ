[;, private, boolean, renderAsPercentages, ;, public, StackedBarRenderer, (, ), {, this, (, false, ), ;, }, public, StackedBarRenderer, (, boolean]
[), ;, }, public, StackedBarRenderer, (, boolean, renderAsPercentages, ), {, super, (, ), ;, this, ., renderAsPercentages, =, renderAsPercentages, ;]
[=, renderAsPercentages, ;, ItemLabelPosition, p, =, new, ItemLabelPosition, (, ItemLabelAnchor, ., CENTER, ,, TextAnchor, ., CENTER, ), ;, setBasePositiveItemLabelPosition, (]
[., renderAsPercentages, =, renderAsPercentages, ;, ItemLabelPosition, p, =, new, ItemLabelPosition, (, ItemLabelAnchor, ., CENTER, ,, TextAnchor, ., CENTER, ), ;]
[;, ItemLabelPosition, p, =, new, ItemLabelPosition, (, ItemLabelAnchor, ., CENTER, ,, TextAnchor, ., CENTER, ), ;, setBasePositiveItemLabelPosition, (, p, )]
[;, setBasePositiveItemLabelPosition, (, p, ), ;, setBaseNegativeItemLabelPosition, (, p, ), ;, setPositiveItemLabelPositionFallback, (, null, ), ;, setNegativeItemLabelPositionFallback, (, null, )]
[,, TextAnchor, ., CENTER, ), ;, setBasePositiveItemLabelPosition, (, p, ), ;, setBaseNegativeItemLabelPosition, (, p, ), ;, setPositiveItemLabelPositionFallback, (, null, )]
[., CENTER, ,, TextAnchor, ., CENTER, ), ;, setBasePositiveItemLabelPosition, (, p, ), ;, setBaseNegativeItemLabelPosition, (, p, ), ;, setPositiveItemLabelPositionFallback, (]
[), ;, setBasePositiveItemLabelPosition, (, p, ), ;, setBaseNegativeItemLabelPosition, (, p, ), ;, setPositiveItemLabelPositionFallback, (, null, ), ;, setNegativeItemLabelPositionFallback, (, null]
[., CENTER, ), ;, setBasePositiveItemLabelPosition, (, p, ), ;, setBaseNegativeItemLabelPosition, (, p, ), ;, setPositiveItemLabelPositionFallback, (, null, ), ;, setNegativeItemLabelPositionFallback]
[;, setBaseNegativeItemLabelPosition, (, p, ), ;, setPositiveItemLabelPositionFallback, (, null, ), ;, setNegativeItemLabelPositionFallback, (, null, ), ;, }, public, boolean, getRenderAsPercentages]
[), ;, setBaseNegativeItemLabelPosition, (, p, ), ;, setPositiveItemLabelPositionFallback, (, null, ), ;, setNegativeItemLabelPositionFallback, (, null, ), ;, }, public, boolean]
[;, setPositiveItemLabelPositionFallback, (, null, ), ;, setNegativeItemLabelPositionFallback, (, null, ), ;, }, public, boolean, getRenderAsPercentages, (, ), {, return, this]
[), ;, setPositiveItemLabelPositionFallback, (, null, ), ;, setNegativeItemLabelPositionFallback, (, null, ), ;, }, public, boolean, getRenderAsPercentages, (, ), {, return]
[;, setNegativeItemLabelPositionFallback, (, null, ), ;, }, public, boolean, getRenderAsPercentages, (, ), {, return, this, ., renderAsPercentages, ;, }, public]
[), ;, setNegativeItemLabelPositionFallback, (, null, ), ;, }, public, boolean, getRenderAsPercentages, (, ), {, return, this, ., renderAsPercentages, ;, }]
[;, }, public, boolean, getRenderAsPercentages, (, ), {, return, this, ., renderAsPercentages, ;, }, public, void, setRenderAsPercentages, (, boolean, asPercentages]
[), ;, }, public, boolean, getRenderAsPercentages, (, ), {, return, this, ., renderAsPercentages, ;, }, public, void, setRenderAsPercentages, (, boolean]
[;, }, public, void, setRenderAsPercentages, (, boolean, asPercentages, ), {, this, ., renderAsPercentages, =, asPercentages, ;, fireChangeEvent, (, ), ;]
[., renderAsPercentages, ;, }, public, void, setRenderAsPercentages, (, boolean, asPercentages, ), {, this, ., renderAsPercentages, =, asPercentages, ;, fireChangeEvent, (]
[=, asPercentages, ;, fireChangeEvent, (, ), ;, }, public, int, getPassCount, (, ), {, return, 3, ;, }, public, Range]
[., renderAsPercentages, =, asPercentages, ;, fireChangeEvent, (, ), ;, }, public, int, getPassCount, (, ), {, return, 3, ;, }]
[;, fireChangeEvent, (, ), ;, }, public, int, getPassCount, (, ), {, return, 3, ;, }, public, Range, findRangeBounds, (]
[;, }, public, int, getPassCount, (, ), {, return, 3, ;, }, public, Range, findRangeBounds, (, CategoryDataset, dataset, ), {]
[;, }, public, Range, findRangeBounds, (, CategoryDataset, dataset, ), {, if, (, dataset, ==, null, ), {, return, null, ;]
[), {, return, null, ;, }, if, (, this, ., renderAsPercentages, ), {, return, new, Range, (, 0.0, ,, 1.0]
[==, null, ), {, return, null, ;, }, if, (, this, ., renderAsPercentages, ), {, return, new, Range, (, 0.0]
[), {, return, null, ;, }, if, (, this, ., renderAsPercentages, ), {, return, new, Range, (, 0.0, ,, 1.0]
[;, }, if, (, this, ., renderAsPercentages, ), {, return, new, Range, (, 0.0, ,, 1.0, ), ;, }, else]
[), {, return, new, Range, (, 0.0, ,, 1.0, ), ;, }, else, {, return, DatasetUtilities, ., findStackedRangeBounds, (, dataset]
[., renderAsPercentages, ), {, return, new, Range, (, 0.0, ,, 1.0, ), ;, }, else, {, return, DatasetUtilities, ., findStackedRangeBounds]
[;, }, else, {, return, DatasetUtilities, ., findStackedRangeBounds, (, dataset, ,, getBase, (, ), ), ;, }, }, protected, void]
[,, 1.0, ), ;, }, else, {, return, DatasetUtilities, ., findStackedRangeBounds, (, dataset, ,, getBase, (, ), ), ;, }]
[), ;, }, else, {, return, DatasetUtilities, ., findStackedRangeBounds, (, dataset, ,, getBase, (, ), ), ;, }, }, protected]
[;, }, }, protected, void, calculateBarWidth, (, CategoryPlot, plot, ,, Rectangle2D, dataArea, ,, int, rendererIndex, ,, CategoryItemRendererState, state, ), {]
[., findStackedRangeBounds, (, dataset, ,, getBase, (, ), ), ;, }, }, protected, void, calculateBarWidth, (, CategoryPlot, plot, ,, Rectangle2D]
[,, getBase, (, ), ), ;, }, }, protected, void, calculateBarWidth, (, CategoryPlot, plot, ,, Rectangle2D, dataArea, ,, int, rendererIndex]
[), ;, }, }, protected, void, calculateBarWidth, (, CategoryPlot, plot, ,, Rectangle2D, dataArea, ,, int, rendererIndex, ,, CategoryItemRendererState, state, )]
[;, CategoryDataset, data, =, plot, ., getDataset, (, rendererIndex, ), ;, if, (, data, !=, null, ), {, PlotOrientation, orientation]
[., getDomainAxisForDataset, (, rendererIndex, ), ;, CategoryDataset, data, =, plot, ., getDataset, (, rendererIndex, ), ;, if, (, data, !=]
[), ;, CategoryDataset, data, =, plot, ., getDataset, (, rendererIndex, ), ;, if, (, data, !=, null, ), {, PlotOrientation]
[;, if, (, data, !=, null, ), {, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, space, =]
[., getDataset, (, rendererIndex, ), ;, if, (, data, !=, null, ), {, PlotOrientation, orientation, =, plot, ., getOrientation, (]
[), ;, if, (, data, !=, null, ), {, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, space]
[), {, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, space, =, 0.0, ;, if, (, orientation, ==]
[!=, null, ), {, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, space, =, 0.0, ;, if, (]
[), {, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, space, =, 0.0, ;, if, (, orientation, ==]
[;, double, space, =, 0.0, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight]
[., getOrientation, (, ), ;, double, space, =, 0.0, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space]
[;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else]
[), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, )]
[==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==]
[), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, )]
[., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==, PlotOrientation, .]
[=, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, space, =]
[;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, space, =, dataArea, ., getWidth, (, ), ;]
[., getHeight, (, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, space, =, dataArea, .]
[), {, space, =, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =, space, *, getMaximumBarWidth, (, ), ;]
[==, PlotOrientation, ., VERTICAL, ), {, space, =, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =, space, *]
[), {, space, =, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =, space, *, getMaximumBarWidth, (, ), ;]
[., VERTICAL, ), {, space, =, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =, space, *, getMaximumBarWidth, (]
[=, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =, space, *, getMaximumBarWidth, (, ), ;, int, columns, =]
[;, }, double, maxWidth, =, space, *, getMaximumBarWidth, (, ), ;, int, columns, =, data, ., getColumnCount, (, ), ;]
[., getWidth, (, ), ;, }, double, maxWidth, =, space, *, getMaximumBarWidth, (, ), ;, int, columns, =, data, .]
[;, int, columns, =, data, ., getColumnCount, (, ), ;, double, categoryMargin, =, 0.0, ;, if, (, columns, >, 1]
[*, getMaximumBarWidth, (, ), ;, int, columns, =, data, ., getColumnCount, (, ), ;, double, categoryMargin, =, 0.0, ;, if]
[;, int, columns, =, data, ., getColumnCount, (, ), ;, double, categoryMargin, =, 0.0, ;, if, (, columns, >, 1]
[;, double, categoryMargin, =, 0.0, ;, if, (, columns, >, 1, ), {, categoryMargin, =, xAxis, ., getCategoryMargin, (, )]
[., getColumnCount, (, ), ;, double, categoryMargin, =, 0.0, ;, if, (, columns, >, 1, ), {, categoryMargin, =, xAxis]
[;, if, (, columns, >, 1, ), {, categoryMargin, =, xAxis, ., getCategoryMargin, (, ), ;, }, double, used, =]
[), {, categoryMargin, =, xAxis, ., getCategoryMargin, (, ), ;, }, double, used, =, space, *, (, 1, -, xAxis]
[>, 1, ), {, categoryMargin, =, xAxis, ., getCategoryMargin, (, ), ;, }, double, used, =, space, *, (, 1]
[), {, categoryMargin, =, xAxis, ., getCategoryMargin, (, ), ;, }, double, used, =, space, *, (, 1, -, xAxis]
[=, xAxis, ., getCategoryMargin, (, ), ;, }, double, used, =, space, *, (, 1, -, xAxis, ., getLowerMargin, (]
[;, }, double, used, =, space, *, (, 1, -, xAxis, ., getLowerMargin, (, ), -, xAxis, ., getUpperMargin, (]
[., getCategoryMargin, (, ), ;, }, double, used, =, space, *, (, 1, -, xAxis, ., getLowerMargin, (, ), -]
[;, if, (, columns, >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (, used, /, columns, ,]
[*, (, 1, -, xAxis, ., getLowerMargin, (, ), -, xAxis, ., getUpperMargin, (, ), -, categoryMargin, ), ;, if]
[;, if, (, columns, >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (, used, /, columns, ,]
[), ;, if, (, columns, >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (, used, /, columns]
[-, categoryMargin, ), ;, if, (, columns, >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (, used]
[-, xAxis, ., getUpperMargin, (, ), -, categoryMargin, ), ;, if, (, columns, >, 0, ), {, state, ., setBarWidth]
[-, xAxis, ., getLowerMargin, (, ), -, xAxis, ., getUpperMargin, (, ), -, categoryMargin, ), ;, if, (, columns, >]
[-, xAxis, ., getUpperMargin, (, ), -, categoryMargin, ), ;, if, (, columns, >, 0, ), {, state, ., setBarWidth]
[., getLowerMargin, (, ), -, xAxis, ., getUpperMargin, (, ), -, categoryMargin, ), ;, if, (, columns, >, 0, )]
[-, categoryMargin, ), ;, if, (, columns, >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (, used]
[., getUpperMargin, (, ), -, categoryMargin, ), ;, if, (, columns, >, 0, ), {, state, ., setBarWidth, (, Math]
[), ;, if, (, columns, >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (, used, /, columns]
[), {, state, ., setBarWidth, (, Math, ., min, (, used, /, columns, ,, maxWidth, ), ), ;, }, else]
[>, 0, ), {, state, ., setBarWidth, (, Math, ., min, (, used, /, columns, ,, maxWidth, ), ), ;]
[), {, state, ., setBarWidth, (, Math, ., min, (, used, /, columns, ,, maxWidth, ), ), ;, }, else]
[;, }, else, {, state, ., setBarWidth, (, Math, ., min, (, used, ,, maxWidth, ), ), ;, }, }]
[., setBarWidth, (, Math, ., min, (, used, /, columns, ,, maxWidth, ), ), ;, }, else, {, state, .]
[), ;, }, else, {, state, ., setBarWidth, (, Math, ., min, (, used, ,, maxWidth, ), ), ;, }]
[., min, (, used, /, columns, ,, maxWidth, ), ), ;, }, else, {, state, ., setBarWidth, (, Math, .]
[,, maxWidth, ), ), ;, }, else, {, state, ., setBarWidth, (, Math, ., min, (, used, ,, maxWidth, )]
[/, columns, ,, maxWidth, ), ), ;, }, else, {, state, ., setBarWidth, (, Math, ., min, (, used, ,]
[,, maxWidth, ), ), ;, }, else, {, state, ., setBarWidth, (, Math, ., min, (, used, ,, maxWidth, )]
[), ), ;, }, else, {, state, ., setBarWidth, (, Math, ., min, (, used, ,, maxWidth, ), ), ;]
[;, }, }, }, public, void, drawItem, (, Graphics2D, g2, ,, CategoryItemRendererState, state, ,, Rectangle2D, dataArea, ,, CategoryPlot, plot, ,]
[., setBarWidth, (, Math, ., min, (, used, ,, maxWidth, ), ), ;, }, }, }, public, void, drawItem, (]
[), ;, }, }, }, public, void, drawItem, (, Graphics2D, g2, ,, CategoryItemRendererState, state, ,, Rectangle2D, dataArea, ,, CategoryPlot, plot]
[., min, (, used, ,, maxWidth, ), ), ;, }, }, }, public, void, drawItem, (, Graphics2D, g2, ,, CategoryItemRendererState]
[,, maxWidth, ), ), ;, }, }, }, public, void, drawItem, (, Graphics2D, g2, ,, CategoryItemRendererState, state, ,, Rectangle2D, dataArea]
[), ), ;, }, }, }, public, void, drawItem, (, Graphics2D, g2, ,, CategoryItemRendererState, state, ,, Rectangle2D, dataArea, ,, CategoryPlot]
[), {, return, ;, }, Number, dataValue, =, dataset, ., getValue, (, row, ,, column, ), ;, if, (, dataValue]
[), {, return, ;, }, Number, dataValue, =, dataset, ., getValue, (, row, ,, column, ), ;, if, (, dataValue]
[), ), {, return, ;, }, Number, dataValue, =, dataset, ., getValue, (, row, ,, column, ), ;, if, (]
[;, if, (, dataValue, ==, null, ), {, return, ;, }, double, value, =, dataValue, ., doubleValue, (, ), ;]
[., getValue, (, row, ,, column, ), ;, if, (, dataValue, ==, null, ), {, return, ;, }, double, value]
[,, column, ), ;, if, (, dataValue, ==, null, ), {, return, ;, }, double, value, =, dataValue, ., doubleValue]
[), ;, if, (, dataValue, ==, null, ), {, return, ;, }, double, value, =, dataValue, ., doubleValue, (, )]
[), {, return, ;, }, double, value, =, dataValue, ., doubleValue, (, ), ;, double, total, =, 0.0, ;, if]
[==, null, ), {, return, ;, }, double, value, =, dataValue, ., doubleValue, (, ), ;, double, total, =, 0.0]
[), {, return, ;, }, double, value, =, dataValue, ., doubleValue, (, ), ;, double, total, =, 0.0, ;, if]
[;, double, total, =, 0.0, ;, if, (, this, ., renderAsPercentages, ), {, total, =, DataUtilities, ., calculateColumnTotal, (, dataset]
[., doubleValue, (, ), ;, double, total, =, 0.0, ;, if, (, this, ., renderAsPercentages, ), {, total, =, DataUtilities]
[;, if, (, this, ., renderAsPercentages, ), {, total, =, DataUtilities, ., calculateColumnTotal, (, dataset, ,, column, ,, state, .]
[), {, total, =, DataUtilities, ., calculateColumnTotal, (, dataset, ,, column, ,, state, ., getVisibleSeriesArray, (, ), ), ;, value]
[., renderAsPercentages, ), {, total, =, DataUtilities, ., calculateColumnTotal, (, dataset, ,, column, ,, state, ., getVisibleSeriesArray, (, ), )]
[=, DataUtilities, ., calculateColumnTotal, (, dataset, ,, column, ,, state, ., getVisibleSeriesArray, (, ), ), ;, value, =, value, /]
[;, value, =, value, /, total, ;, }, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, barW0, =]
[., calculateColumnTotal, (, dataset, ,, column, ,, state, ., getVisibleSeriesArray, (, ), ), ;, value, =, value, /, total, ;]
[,, column, ,, state, ., getVisibleSeriesArray, (, ), ), ;, value, =, value, /, total, ;, }, PlotOrientation, orientation, =]
[,, state, ., getVisibleSeriesArray, (, ), ), ;, value, =, value, /, total, ;, }, PlotOrientation, orientation, =, plot, .]
[), ;, value, =, value, /, total, ;, }, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, barW0]
[., getVisibleSeriesArray, (, ), ), ;, value, =, value, /, total, ;, }, PlotOrientation, orientation, =, plot, ., getOrientation, (]
[=, value, /, total, ;, }, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, barW0, =, domainAxis, .]
[;, }, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, barW0, =, domainAxis, ., getCategoryMiddle, (, column, ,]
[/, total, ;, }, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, barW0, =, domainAxis, ., getCategoryMiddle, (]
[;, }, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, barW0, =, domainAxis, ., getCategoryMiddle, (, column, ,]
[;, double, barW0, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (]
[., getOrientation, (, ), ;, double, barW0, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,]
[;, double, positiveBase, =, getBase, (, ), ;, double, negativeBase, =, positiveBase, ;, for, (, int, i, =, 0, ;]
[-, state, ., getBarWidth, (, ), /, 2.0, ;, double, positiveBase, =, getBase, (, ), ;, double, negativeBase, =, positiveBase]
[., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), -, state, .]
[,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), -, state, ., getBarWidth, (, ), /]
[,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), -, state, ., getBarWidth, (, ), /, 2.0, ;, double, positiveBase]
[,, plot, ., getDomainAxisEdge, (, ), ), -, state, ., getBarWidth, (, ), /, 2.0, ;, double, positiveBase, =, getBase]
[), -, state, ., getBarWidth, (, ), /, 2.0, ;, double, positiveBase, =, getBase, (, ), ;, double, negativeBase, =]
[., getDomainAxisEdge, (, ), ), -, state, ., getBarWidth, (, ), /, 2.0, ;, double, positiveBase, =, getBase, (, )]
[;, double, positiveBase, =, getBase, (, ), ;, double, negativeBase, =, positiveBase, ;, for, (, int, i, =, 0, ;]
[/, 2.0, ;, double, positiveBase, =, getBase, (, ), ;, double, negativeBase, =, positiveBase, ;, for, (, int, i, =]
[., getBarWidth, (, ), /, 2.0, ;, double, positiveBase, =, getBase, (, ), ;, double, negativeBase, =, positiveBase, ;, for]
[;, double, positiveBase, =, getBase, (, ), ;, double, negativeBase, =, positiveBase, ;, for, (, int, i, =, 0, ;]
[;, double, negativeBase, =, positiveBase, ;, for, (, int, i, =, 0, ;, i, <, row, ;, i, ++, )]
[;, for, (, int, i, =, 0, ;, i, <, row, ;, i, ++, ), {, Number, v, =, dataset]
[;, i, <, row, ;, i, ++, ), {, Number, v, =, dataset, ., getValue, (, i, ,, column, )]
[;, i, ++, ), {, Number, v, =, dataset, ., getValue, (, i, ,, column, ), ;, if, (, v]
[<, row, ;, i, ++, ), {, Number, v, =, dataset, ., getValue, (, i, ,, column, ), ;, if]
[;, i, ++, ), {, Number, v, =, dataset, ., getValue, (, i, ,, column, ), ;, if, (, v]
[), {, Number, v, =, dataset, ., getValue, (, i, ,, column, ), ;, if, (, v, !=, null, &&]
[++, ), {, Number, v, =, dataset, ., getValue, (, i, ,, column, ), ;, if, (, v, !=, null]
[;, if, (, v, !=, null, &&, isSeriesVisible, (, i, ), ), {, double, d, =, v, ., doubleValue, (]
[., getValue, (, i, ,, column, ), ;, if, (, v, !=, null, &&, isSeriesVisible, (, i, ), ), {]
[,, column, ), ;, if, (, v, !=, null, &&, isSeriesVisible, (, i, ), ), {, double, d, =, v]
[), ;, if, (, v, !=, null, &&, isSeriesVisible, (, i, ), ), {, double, d, =, v, ., doubleValue]
[), {, double, d, =, v, ., doubleValue, (, ), ;, if, (, this, ., renderAsPercentages, ), {, d, =]
[&&, isSeriesVisible, (, i, ), ), {, double, d, =, v, ., doubleValue, (, ), ;, if, (, this, .]
[!=, null, &&, isSeriesVisible, (, i, ), ), {, double, d, =, v, ., doubleValue, (, ), ;, if, (]
[&&, isSeriesVisible, (, i, ), ), {, double, d, =, v, ., doubleValue, (, ), ;, if, (, this, .]
[), {, double, d, =, v, ., doubleValue, (, ), ;, if, (, this, ., renderAsPercentages, ), {, d, =]
[), ), {, double, d, =, v, ., doubleValue, (, ), ;, if, (, this, ., renderAsPercentages, ), {, d]
[;, if, (, this, ., renderAsPercentages, ), {, d, =, d, /, total, ;, }, if, (, d, >, 0]
[., doubleValue, (, ), ;, if, (, this, ., renderAsPercentages, ), {, d, =, d, /, total, ;, }, if]
[), {, d, =, d, /, total, ;, }, if, (, d, >, 0, ), {, positiveBase, =, positiveBase, +]
[., renderAsPercentages, ), {, d, =, d, /, total, ;, }, if, (, d, >, 0, ), {, positiveBase, =]
[=, d, /, total, ;, }, if, (, d, >, 0, ), {, positiveBase, =, positiveBase, +, d, ;, }]
[;, }, if, (, d, >, 0, ), {, positiveBase, =, positiveBase, +, d, ;, }, else, {, negativeBase, =]
[/, total, ;, }, if, (, d, >, 0, ), {, positiveBase, =, positiveBase, +, d, ;, }, else, {]
[;, }, if, (, d, >, 0, ), {, positiveBase, =, positiveBase, +, d, ;, }, else, {, negativeBase, =]
[), {, positiveBase, =, positiveBase, +, d, ;, }, else, {, negativeBase, =, negativeBase, +, d, ;, }, }, }]
[>, 0, ), {, positiveBase, =, positiveBase, +, d, ;, }, else, {, negativeBase, =, negativeBase, +, d, ;, }]
[), {, positiveBase, =, positiveBase, +, d, ;, }, else, {, negativeBase, =, negativeBase, +, d, ;, }, }, }]
[=, positiveBase, +, d, ;, }, else, {, negativeBase, =, negativeBase, +, d, ;, }, }, }, double, translatedBase, ;]
[;, }, else, {, negativeBase, =, negativeBase, +, d, ;, }, }, }, double, translatedBase, ;, double, translatedValue, ;, boolean]
[+, d, ;, }, else, {, negativeBase, =, negativeBase, +, d, ;, }, }, }, double, translatedBase, ;, double, translatedValue]
[;, }, else, {, negativeBase, =, negativeBase, +, d, ;, }, }, }, double, translatedBase, ;, double, translatedValue, ;, boolean]
[=, negativeBase, +, d, ;, }, }, }, double, translatedBase, ;, double, translatedValue, ;, boolean, positive, =, (, value, >]
[;, }, }, }, double, translatedBase, ;, double, translatedValue, ;, boolean, positive, =, (, value, >, 0.0, ), ;, boolean]
[+, d, ;, }, }, }, double, translatedBase, ;, double, translatedValue, ;, boolean, positive, =, (, value, >, 0.0, )]
[;, }, }, }, double, translatedBase, ;, double, translatedValue, ;, boolean, positive, =, (, value, >, 0.0, ), ;, boolean]
[;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL]
[), ;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, .]
[>, 0.0, ), ;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;, RectangleEdge, barBase, ;, if, (, orientation, ==]
[), ;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, .]
[;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !]
[., isInverted, (, ), ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive]
[), {, if, (, positive, &&, inverted, ||, !, positive, &&, !, inverted, ), {, barBase, =, RectangleEdge, ., RIGHT]
[==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !, positive, &&, !, inverted, ), {, barBase]
[), {, if, (, positive, &&, inverted, ||, !, positive, &&, !, inverted, ), {, barBase, =, RectangleEdge, ., RIGHT]
[., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !, positive, &&, !, inverted, ), {, barBase, =, RectangleEdge]
[), {, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else]
[||, !, positive, &&, !, inverted, ), {, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge]
[&&, inverted, ||, !, positive, &&, !, inverted, ), {, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase]
[||, !, positive, &&, !, inverted, ), {, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge]
[), {, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else]
[&&, !, inverted, ), {, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;]
[&&, !, inverted, ), {, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;]
[), {, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else]
[), {, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else]
[=, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (]
[;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&, !, inverted]
[., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&]
[=, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&, !, inverted, ||, !, positive, &&, inverted]
[;, }, }, else, {, if, (, positive, &&, !, inverted, ||, !, positive, &&, inverted, ), {, barBase, =]
[., LEFT, ;, }, }, else, {, if, (, positive, &&, !, inverted, ||, !, positive, &&, inverted, ), {]
[), {, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, RectangleEdge]
[||, !, positive, &&, inverted, ), {, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, .]
[&&, !, inverted, ||, !, positive, &&, inverted, ), {, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase]
[||, !, positive, &&, inverted, ), {, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, .]
[||, !, positive, &&, inverted, ), {, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, .]
[), {, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, RectangleEdge]
[&&, inverted, ), {, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }]
[&&, inverted, ), {, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }]
[), {, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, RectangleEdge]
[=, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, RectangleEdge, location, =, plot]
[;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, RectangleEdge, location, =, plot, ., getRangeAxisEdge, (, )]
[., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, RectangleEdge, location, =, plot, ., getRangeAxisEdge]
[=, RectangleEdge, ., TOP, ;, }, }, RectangleEdge, location, =, plot, ., getRangeAxisEdge, (, ), ;, if, (, positive, )]
[;, }, }, RectangleEdge, location, =, plot, ., getRangeAxisEdge, (, ), ;, if, (, positive, ), {, translatedBase, =, rangeAxis]
[., TOP, ;, }, }, RectangleEdge, location, =, plot, ., getRangeAxisEdge, (, ), ;, if, (, positive, ), {, translatedBase]
[;, if, (, positive, ), {, translatedBase, =, rangeAxis, ., valueToJava2D, (, positiveBase, ,, dataArea, ,, location, ), ;, translatedValue]
[., getRangeAxisEdge, (, ), ;, if, (, positive, ), {, translatedBase, =, rangeAxis, ., valueToJava2D, (, positiveBase, ,, dataArea, ,]
[), {, translatedBase, =, rangeAxis, ., valueToJava2D, (, positiveBase, ,, dataArea, ,, location, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D]
[=, rangeAxis, ., valueToJava2D, (, positiveBase, ,, dataArea, ,, location, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, positiveBase, +]
[;, translatedValue, =, rangeAxis, ., valueToJava2D, (, positiveBase, +, value, ,, dataArea, ,, location, ), ;, }, else, {, translatedBase]
[., valueToJava2D, (, positiveBase, ,, dataArea, ,, location, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, positiveBase, +, value, ,]
[,, dataArea, ,, location, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, positiveBase, +, value, ,, dataArea, ,, location, )]
[,, location, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, positiveBase, +, value, ,, dataArea, ,, location, ), ;, }]
[), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, positiveBase, +, value, ,, dataArea, ,, location, ), ;, }, else, {]
[=, rangeAxis, ., valueToJava2D, (, positiveBase, +, value, ,, dataArea, ,, location, ), ;, }, else, {, translatedBase, =, rangeAxis]
[;, }, else, {, translatedBase, =, rangeAxis, ., valueToJava2D, (, negativeBase, ,, dataArea, ,, location, ), ;, translatedValue, =, rangeAxis]
[., valueToJava2D, (, positiveBase, +, value, ,, dataArea, ,, location, ), ;, }, else, {, translatedBase, =, rangeAxis, ., valueToJava2D]
[,, dataArea, ,, location, ), ;, }, else, {, translatedBase, =, rangeAxis, ., valueToJava2D, (, negativeBase, ,, dataArea, ,, location]
[+, value, ,, dataArea, ,, location, ), ;, }, else, {, translatedBase, =, rangeAxis, ., valueToJava2D, (, negativeBase, ,, dataArea]
[,, dataArea, ,, location, ), ;, }, else, {, translatedBase, =, rangeAxis, ., valueToJava2D, (, negativeBase, ,, dataArea, ,, location]
[,, location, ), ;, }, else, {, translatedBase, =, rangeAxis, ., valueToJava2D, (, negativeBase, ,, dataArea, ,, location, ), ;]
[), ;, }, else, {, translatedBase, =, rangeAxis, ., valueToJava2D, (, negativeBase, ,, dataArea, ,, location, ), ;, translatedValue, =]
[=, rangeAxis, ., valueToJava2D, (, negativeBase, ,, dataArea, ,, location, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, negativeBase, +]
[;, translatedValue, =, rangeAxis, ., valueToJava2D, (, negativeBase, +, value, ,, dataArea, ,, location, ), ;, }, double, barL0, =]
[., valueToJava2D, (, negativeBase, ,, dataArea, ,, location, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, negativeBase, +, value, ,]
[,, dataArea, ,, location, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, negativeBase, +, value, ,, dataArea, ,, location, )]
[,, location, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, negativeBase, +, value, ,, dataArea, ,, location, ), ;, }]
[), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, negativeBase, +, value, ,, dataArea, ,, location, ), ;, }, double, barL0]
[=, rangeAxis, ., valueToJava2D, (, negativeBase, +, value, ,, dataArea, ,, location, ), ;, }, double, barL0, =, Math, .]
[;, }, double, barL0, =, Math, ., min, (, translatedBase, ,, translatedValue, ), ;, double, barLength, =, Math, ., max]
[., valueToJava2D, (, negativeBase, +, value, ,, dataArea, ,, location, ), ;, }, double, barL0, =, Math, ., min, (]
[,, dataArea, ,, location, ), ;, }, double, barL0, =, Math, ., min, (, translatedBase, ,, translatedValue, ), ;, double]
[+, value, ,, dataArea, ,, location, ), ;, }, double, barL0, =, Math, ., min, (, translatedBase, ,, translatedValue, )]
[,, dataArea, ,, location, ), ;, }, double, barL0, =, Math, ., min, (, translatedBase, ,, translatedValue, ), ;, double]
[,, location, ), ;, }, double, barL0, =, Math, ., min, (, translatedBase, ,, translatedValue, ), ;, double, barLength, =]
[), ;, }, double, barL0, =, Math, ., min, (, translatedBase, ,, translatedValue, ), ;, double, barLength, =, Math, .]
[;, double, barLength, =, Math, ., max, (, Math, ., abs, (, translatedValue, -, translatedBase, ), ,, getMinimumBarLength, (, )]
[., min, (, translatedBase, ,, translatedValue, ), ;, double, barLength, =, Math, ., max, (, Math, ., abs, (, translatedValue]
[,, translatedValue, ), ;, double, barLength, =, Math, ., max, (, Math, ., abs, (, translatedValue, -, translatedBase, ), ,]
[), ;, double, barLength, =, Math, ., max, (, Math, ., abs, (, translatedValue, -, translatedBase, ), ,, getMinimumBarLength, (]
[;, Rectangle2D, bar, =, null, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, bar, =, new, Rectangle2D, .]
[., max, (, Math, ., abs, (, translatedValue, -, translatedBase, ), ,, getMinimumBarLength, (, ), ), ;, Rectangle2D, bar, =]
[,, getMinimumBarLength, (, ), ), ;, Rectangle2D, bar, =, null, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {]
[., abs, (, translatedValue, -, translatedBase, ), ,, getMinimumBarLength, (, ), ), ;, Rectangle2D, bar, =, null, ;, if, (]
[), ,, getMinimumBarLength, (, ), ), ;, Rectangle2D, bar, =, null, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, )]
[-, translatedBase, ), ,, getMinimumBarLength, (, ), ), ;, Rectangle2D, bar, =, null, ;, if, (, orientation, ==, PlotOrientation, .]
[), ,, getMinimumBarLength, (, ), ), ;, Rectangle2D, bar, =, null, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, )]
[), ;, Rectangle2D, bar, =, null, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, bar, =, new, Rectangle2D]
[;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (, barL0, ,, barW0]
[), {, bar, =, new, Rectangle2D, ., Double, (, barL0, ,, barW0, ,, barLength, ,, state, ., getBarWidth, (, )]
[==, PlotOrientation, ., HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (, barL0, ,, barW0, ,, barLength, ,, state]
[), {, bar, =, new, Rectangle2D, ., Double, (, barL0, ,, barW0, ,, barLength, ,, state, ., getBarWidth, (, )]
[., HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (, barL0, ,, barW0, ,, barLength, ,, state, ., getBarWidth]
[=, new, Rectangle2D, ., Double, (, barL0, ,, barW0, ,, barLength, ,, state, ., getBarWidth, (, ), ), ;, }]
[;, }, else, {, bar, =, new, Rectangle2D, ., Double, (, barW0, ,, barL0, ,, state, ., getBarWidth, (, )]
[,, barW0, ,, barLength, ,, state, ., getBarWidth, (, ), ), ;, }, else, {, bar, =, new, Rectangle2D, .]
[,, barLength, ,, state, ., getBarWidth, (, ), ), ;, }, else, {, bar, =, new, Rectangle2D, ., Double, (]
[,, state, ., getBarWidth, (, ), ), ;, }, else, {, bar, =, new, Rectangle2D, ., Double, (, barW0, ,]
[), ;, }, else, {, bar, =, new, Rectangle2D, ., Double, (, barW0, ,, barL0, ,, state, ., getBarWidth, (]
[., getBarWidth, (, ), ), ;, }, else, {, bar, =, new, Rectangle2D, ., Double, (, barW0, ,, barL0, ,]
[=, new, Rectangle2D, ., Double, (, barW0, ,, barL0, ,, state, ., getBarWidth, (, ), ,, barLength, ), ;, }]
[;, }, if, (, pass, ==, 0, ), {, if, (, getShadowsVisible, (, ), ), {, boolean, pegToBase, =, (]
[,, barL0, ,, state, ., getBarWidth, (, ), ,, barLength, ), ;, }, if, (, pass, ==, 0, ), {]
[,, state, ., getBarWidth, (, ), ,, barLength, ), ;, }, if, (, pass, ==, 0, ), {, if, (]
[,, barLength, ), ;, }, if, (, pass, ==, 0, ), {, if, (, getShadowsVisible, (, ), ), {, boolean]
[., getBarWidth, (, ), ,, barLength, ), ;, }, if, (, pass, ==, 0, ), {, if, (, getShadowsVisible, (]
[), ;, }, if, (, pass, ==, 0, ), {, if, (, getShadowsVisible, (, ), ), {, boolean, pegToBase, =]
[), {, if, (, getShadowsVisible, (, ), ), {, boolean, pegToBase, =, (, positive, &&, (, positiveBase, ==, getBase, (]
[==, 0, ), {, if, (, getShadowsVisible, (, ), ), {, boolean, pegToBase, =, (, positive, &&, (, positiveBase, ==]
[), {, if, (, getShadowsVisible, (, ), ), {, boolean, pegToBase, =, (, positive, &&, (, positiveBase, ==, getBase, (]
[), {, boolean, pegToBase, =, (, positive, &&, (, positiveBase, ==, getBase, (, ), ), ), ||, (, !, positive]
[;, getBarPainter, (, ), ., paintBarShadow, (, g2, ,, this, ,, row, ,, column, ,, selected, ,, bar, ,, barBase]
[||, (, !, positive, &&, (, negativeBase, ==, getBase, (, ), ), ), ;, getBarPainter, (, ), ., paintBarShadow, (]
[), ||, (, !, positive, &&, (, negativeBase, ==, getBase, (, ), ), ), ;, getBarPainter, (, ), ., paintBarShadow]
[&&, (, positiveBase, ==, getBase, (, ), ), ), ||, (, !, positive, &&, (, negativeBase, ==, getBase, (, )]
[), ||, (, !, positive, &&, (, negativeBase, ==, getBase, (, ), ), ), ;, getBarPainter, (, ), ., paintBarShadow]
[), ), ||, (, !, positive, &&, (, negativeBase, ==, getBase, (, ), ), ), ;, getBarPainter, (, ), .]
[==, getBase, (, ), ), ), ||, (, !, positive, &&, (, negativeBase, ==, getBase, (, ), ), ), ;]
[), ), ||, (, !, positive, &&, (, negativeBase, ==, getBase, (, ), ), ), ;, getBarPainter, (, ), .]
[;, getBarPainter, (, ), ., paintBarShadow, (, g2, ,, this, ,, row, ,, column, ,, selected, ,, bar, ,, barBase]
[), ;, getBarPainter, (, ), ., paintBarShadow, (, g2, ,, this, ,, row, ,, column, ,, selected, ,, bar, ,]
[&&, (, negativeBase, ==, getBase, (, ), ), ), ;, getBarPainter, (, ), ., paintBarShadow, (, g2, ,, this, ,]
[&&, (, negativeBase, ==, getBase, (, ), ), ), ;, getBarPainter, (, ), ., paintBarShadow, (, g2, ,, this, ,]
[), ;, getBarPainter, (, ), ., paintBarShadow, (, g2, ,, this, ,, row, ,, column, ,, selected, ,, bar, ,]
[), ), ;, getBarPainter, (, ), ., paintBarShadow, (, g2, ,, this, ,, row, ,, column, ,, selected, ,, bar]
[==, getBase, (, ), ), ), ;, getBarPainter, (, ), ., paintBarShadow, (, g2, ,, this, ,, row, ,, column]
[), ), ;, getBarPainter, (, ), ., paintBarShadow, (, g2, ,, this, ,, row, ,, column, ,, selected, ,, bar]
[;, }, }, else, if, (, pass, ==, 1, ), {, getBarPainter, (, ), ., paintBar, (, g2, ,, this]
[., paintBarShadow, (, g2, ,, this, ,, row, ,, column, ,, selected, ,, bar, ,, barBase, ,, pegToBase, ), ;]
[,, this, ,, row, ,, column, ,, selected, ,, bar, ,, barBase, ,, pegToBase, ), ;, }, }, else, if]
[,, row, ,, column, ,, selected, ,, bar, ,, barBase, ,, pegToBase, ), ;, }, }, else, if, (, pass]
[,, column, ,, selected, ,, bar, ,, barBase, ,, pegToBase, ), ;, }, }, else, if, (, pass, ==, 1]
[,, selected, ,, bar, ,, barBase, ,, pegToBase, ), ;, }, }, else, if, (, pass, ==, 1, ), {]
[,, bar, ,, barBase, ,, pegToBase, ), ;, }, }, else, if, (, pass, ==, 1, ), {, getBarPainter, (]
[,, barBase, ,, pegToBase, ), ;, }, }, else, if, (, pass, ==, 1, ), {, getBarPainter, (, ), .]
[,, pegToBase, ), ;, }, }, else, if, (, pass, ==, 1, ), {, getBarPainter, (, ), ., paintBar, (]
[), ;, }, }, else, if, (, pass, ==, 1, ), {, getBarPainter, (, ), ., paintBar, (, g2, ,]
[), {, getBarPainter, (, ), ., paintBar, (, g2, ,, this, ,, row, ,, column, ,, selected, ,, bar, ,]
[==, 1, ), {, getBarPainter, (, ), ., paintBar, (, g2, ,, this, ,, row, ,, column, ,, selected, ,]
[), {, getBarPainter, (, ), ., paintBar, (, g2, ,, this, ,, row, ,, column, ,, selected, ,, bar, ,]
[;, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities]
[., paintBar, (, g2, ,, this, ,, row, ,, column, ,, selected, ,, bar, ,, barBase, ), ;, EntityCollection, entities]
[,, this, ,, row, ,, column, ,, selected, ,, bar, ,, barBase, ), ;, EntityCollection, entities, =, state, ., getEntityCollection]
[,, row, ,, column, ,, selected, ,, bar, ,, barBase, ), ;, EntityCollection, entities, =, state, ., getEntityCollection, (, )]
[,, column, ,, selected, ,, bar, ,, barBase, ), ;, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if]
[,, selected, ,, bar, ,, barBase, ), ;, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities]
[,, bar, ,, barBase, ), ;, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null]
[,, barBase, ), ;, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {]
[), ;, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (]
[;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,, row, ,, column, ,]
[., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,]
[), {, addEntity, (, entities, ,, bar, ,, dataset, ,, row, ,, column, ,, selected, ), ;, }, }, else]
[!=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,, row, ,, column, ,, selected, ), ;, }]
[), {, addEntity, (, entities, ,, bar, ,, dataset, ,, row, ,, column, ,, selected, ), ;, }, }, else]
[;, }, }, else, if, (, pass, ==, 2, ), {, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,]
[,, bar, ,, dataset, ,, row, ,, column, ,, selected, ), ;, }, }, else, if, (, pass, ==, 2]
[,, dataset, ,, row, ,, column, ,, selected, ), ;, }, }, else, if, (, pass, ==, 2, ), {]
[,, row, ,, column, ,, selected, ), ;, }, }, else, if, (, pass, ==, 2, ), {, CategoryItemLabelGenerator, generator]
[,, column, ,, selected, ), ;, }, }, else, if, (, pass, ==, 2, ), {, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator]
[,, selected, ), ;, }, }, else, if, (, pass, ==, 2, ), {, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row]
[), ;, }, }, else, if, (, pass, ==, 2, ), {, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column]
[), {, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (, generator, !=, null, &&]
[==, 2, ), {, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (, generator, !=]
[), {, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (, generator, !=, null, &&]
[;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2]
[,, column, ,, selected, ), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, )]
[,, selected, ), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {]
[), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (]
[), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,]
[&&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row]
[!=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset]
[&&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row]
[), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,]
[,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected]
[,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator]
[), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar]
[;, }, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,, (, value, <, 0.0, )]
[,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,, (, value, <, 0.0, ), ), ;]
[,, row, ,, column, ,, selected, ,, generator, ,, bar, ,, (, value, <, 0.0, ), ), ;, }, }]
[,, column, ,, selected, ,, generator, ,, bar, ,, (, value, <, 0.0, ), ), ;, }, }, }, public]
[,, selected, ,, generator, ,, bar, ,, (, value, <, 0.0, ), ), ;, }, }, }, public, boolean, equals]
[,, generator, ,, bar, ,, (, value, <, 0.0, ), ), ;, }, }, }, public, boolean, equals, (, Object]
[,, bar, ,, (, value, <, 0.0, ), ), ;, }, }, }, public, boolean, equals, (, Object, obj, )]
[,, (, value, <, 0.0, ), ), ;, }, }, }, public, boolean, equals, (, Object, obj, ), {, if]
[), ;, }, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {]
[), ), ;, }, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, )]
[<, 0.0, ), ), ;, }, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[), ), ;, }, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, )]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, StackedBarRenderer, ), ), {, return, false, ;, }]
[==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, StackedBarRenderer, ), ), {, return, false]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, StackedBarRenderer, ), ), {, return, false, ;, }]
[;, }, if, (, !, (, obj, instanceof, StackedBarRenderer, ), ), {, return, false, ;, }, StackedBarRenderer, that, =, (]
[), {, return, false, ;, }, StackedBarRenderer, that, =, (, StackedBarRenderer, ), obj, ;, if, (, this, ., renderAsPercentages, !=]
[), {, return, false, ;, }, StackedBarRenderer, that, =, (, StackedBarRenderer, ), obj, ;, if, (, this, ., renderAsPercentages, !=]
[), ), {, return, false, ;, }, StackedBarRenderer, that, =, (, StackedBarRenderer, ), obj, ;, if, (, this, ., renderAsPercentages]
[instanceof, StackedBarRenderer, ), ), {, return, false, ;, }, StackedBarRenderer, that, =, (, StackedBarRenderer, ), obj, ;, if, (, this]
[;, }, StackedBarRenderer, that, =, (, StackedBarRenderer, ), obj, ;, if, (, this, ., renderAsPercentages, !=, that, ., renderAsPercentages, )]
[;, if, (, this, ., renderAsPercentages, !=, that, ., renderAsPercentages, ), {, return, false, ;, }, return, super, ., equals]
[;, if, (, this, ., renderAsPercentages, !=, that, ., renderAsPercentages, ), {, return, false, ;, }, return, super, ., equals]
[), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, }]
[!=, that, ., renderAsPercentages, ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, }]
[., renderAsPercentages, !=, that, ., renderAsPercentages, ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;]
[), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, }]
[., renderAsPercentages, ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, }]
[;, }, return, super, ., equals, (, obj, ), ;, }, }]
[;, }, }]
[., equals, (, obj, ), ;, }, }]
[), ;, }, }]
