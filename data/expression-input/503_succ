[;, private, final, AbstractCompiler, compiler, ;, private, final, Set, <, Node, >, noSideEffectFunctionNames, ;, MarkNoSideEffectCalls, (, AbstractCompiler, compiler, ), {]
[., error, (, "JSC_INVALID_NO_SIDE_EFFECT_ANNOTATION", ,, "@nosideeffects may only appear in externs files.", ), ;, private, final, AbstractCompiler, compiler, ;, private, final, Set, <, Node, >, noSideEffectFunctionNames]
[,, "@nosideeffects may only appear in externs files.", ), ;, private, final, AbstractCompiler, compiler, ;, private, final, Set, <, Node, >, noSideEffectFunctionNames, ;, MarkNoSideEffectCalls, (, AbstractCompiler]
[), ;, private, final, AbstractCompiler, compiler, ;, private, final, Set, <, Node, >, noSideEffectFunctionNames, ;, MarkNoSideEffectCalls, (, AbstractCompiler, compiler, )]
[=, compiler, ;, this, ., noSideEffectFunctionNames, =, Sets, ., newHashSet, (, ), ;, }, @, Override, public, void, process, (]
[., compiler, =, compiler, ;, this, ., noSideEffectFunctionNames, =, Sets, ., newHashSet, (, ), ;, }, @, Override, public, void]
[;, this, ., noSideEffectFunctionNames, =, Sets, ., newHashSet, (, ), ;, }, @, Override, public, void, process, (, Node, externs]
[=, Sets, ., newHashSet, (, ), ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, )]
[., noSideEffectFunctionNames, =, Sets, ., newHashSet, (, ), ;, }, @, Override, public, void, process, (, Node, externs, ,, Node]
[;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, SimpleDefinitionFinder, defFinder, =, new, SimpleDefinitionFinder]
[., newHashSet, (, ), ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, SimpleDefinitionFinder]
[;, defFinder, ., process, (, externs, ,, root, ), ;, NodeTraversal, ., traverse, (, compiler, ,, externs, ,, new, GatherNoSideEffectFunctions]
[), ;, defFinder, ., process, (, externs, ,, root, ), ;, NodeTraversal, ., traverse, (, compiler, ,, externs, ,, new]
[;, NodeTraversal, ., traverse, (, compiler, ,, externs, ,, new, GatherNoSideEffectFunctions, (, true, ), ), ;, NodeTraversal, ., traverse, (]
[., process, (, externs, ,, root, ), ;, NodeTraversal, ., traverse, (, compiler, ,, externs, ,, new, GatherNoSideEffectFunctions, (, true]
[,, root, ), ;, NodeTraversal, ., traverse, (, compiler, ,, externs, ,, new, GatherNoSideEffectFunctions, (, true, ), ), ;, NodeTraversal]
[), ;, NodeTraversal, ., traverse, (, compiler, ,, externs, ,, new, GatherNoSideEffectFunctions, (, true, ), ), ;, NodeTraversal, ., traverse]
[;, NodeTraversal, ., traverse, (, compiler, ,, root, ,, new, GatherNoSideEffectFunctions, (, false, ), ), ;, NodeTraversal, ., traverse, (]
[., traverse, (, compiler, ,, externs, ,, new, GatherNoSideEffectFunctions, (, true, ), ), ;, NodeTraversal, ., traverse, (, compiler, ,]
[,, externs, ,, new, GatherNoSideEffectFunctions, (, true, ), ), ;, NodeTraversal, ., traverse, (, compiler, ,, root, ,, new, GatherNoSideEffectFunctions]
[,, new, GatherNoSideEffectFunctions, (, true, ), ), ;, NodeTraversal, ., traverse, (, compiler, ,, root, ,, new, GatherNoSideEffectFunctions, (, false]
[), ;, NodeTraversal, ., traverse, (, compiler, ,, root, ,, new, GatherNoSideEffectFunctions, (, false, ), ), ;, NodeTraversal, ., traverse]
[), ), ;, NodeTraversal, ., traverse, (, compiler, ,, root, ,, new, GatherNoSideEffectFunctions, (, false, ), ), ;, NodeTraversal, .]
[;, NodeTraversal, ., traverse, (, compiler, ,, root, ,, new, SetNoSideEffectCallProperty, (, defFinder, ), ), ;, }, private, static, boolean]
[., traverse, (, compiler, ,, root, ,, new, GatherNoSideEffectFunctions, (, false, ), ), ;, NodeTraversal, ., traverse, (, compiler, ,]
[,, root, ,, new, GatherNoSideEffectFunctions, (, false, ), ), ;, NodeTraversal, ., traverse, (, compiler, ,, root, ,, new, SetNoSideEffectCallProperty]
[,, new, GatherNoSideEffectFunctions, (, false, ), ), ;, NodeTraversal, ., traverse, (, compiler, ,, root, ,, new, SetNoSideEffectCallProperty, (, defFinder]
[), ;, NodeTraversal, ., traverse, (, compiler, ,, root, ,, new, SetNoSideEffectCallProperty, (, defFinder, ), ), ;, }, private, static]
[), ), ;, NodeTraversal, ., traverse, (, compiler, ,, root, ,, new, SetNoSideEffectCallProperty, (, defFinder, ), ), ;, }, private]
[;, }, private, static, boolean, definitionTypeContainsFunctionType, (, Definition, def, ), {, Node, rhs, =, def, ., getRValue, (, ), ;]
[., traverse, (, compiler, ,, root, ,, new, SetNoSideEffectCallProperty, (, defFinder, ), ), ;, }, private, static, boolean, definitionTypeContainsFunctionType, (]
[,, root, ,, new, SetNoSideEffectCallProperty, (, defFinder, ), ), ;, }, private, static, boolean, definitionTypeContainsFunctionType, (, Definition, def, ), {]
[,, new, SetNoSideEffectCallProperty, (, defFinder, ), ), ;, }, private, static, boolean, definitionTypeContainsFunctionType, (, Definition, def, ), {, Node, rhs]
[), ;, }, private, static, boolean, definitionTypeContainsFunctionType, (, Definition, def, ), {, Node, rhs, =, def, ., getRValue, (, )]
[), ), ;, }, private, static, boolean, definitionTypeContainsFunctionType, (, Definition, def, ), {, Node, rhs, =, def, ., getRValue, (]
[;, if, (, rhs, ==, null, ), {, return, true, ;, }, switch, (, rhs, ., getType, (, ), )]
[., getRValue, (, ), ;, if, (, rhs, ==, null, ), {, return, true, ;, }, switch, (, rhs, .]
[), {, return, true, ;, }, switch, (, rhs, ., getType, (, ), ), {, case, Token, ., ASSIGN, :]
[==, null, ), {, return, true, ;, }, switch, (, rhs, ., getType, (, ), ), {, case, Token, .]
[), {, return, true, ;, }, switch, (, rhs, ., getType, (, ), ), {, case, Token, ., ASSIGN, :]
[;, }, switch, (, rhs, ., getType, (, ), ), {, case, Token, ., ASSIGN, :, case, Token, ., AND]
[), {, case, Token, ., ASSIGN, :, case, Token, ., AND, :, case, Token, ., CALL, :, case, Token, .]
[., getType, (, ), ), {, case, Token, ., ASSIGN, :, case, Token, ., AND, :, case, Token, ., CALL]
[:, case, Token, ., AND, :, case, Token, ., CALL, :, case, Token, ., GETPROP, :, case, Token, ., GETELEM]
[., ASSIGN, :, case, Token, ., AND, :, case, Token, ., CALL, :, case, Token, ., GETPROP, :, case, Token]
[:, case, Token, ., CALL, :, case, Token, ., GETPROP, :, case, Token, ., GETELEM, :, case, Token, ., FUNCTION]
[., AND, :, case, Token, ., CALL, :, case, Token, ., GETPROP, :, case, Token, ., GETELEM, :, case, Token]
[:, case, Token, ., GETPROP, :, case, Token, ., GETELEM, :, case, Token, ., FUNCTION, :, case, Token, ., HOOK]
[., CALL, :, case, Token, ., GETPROP, :, case, Token, ., GETELEM, :, case, Token, ., FUNCTION, :, case, Token]
[:, case, Token, ., GETELEM, :, case, Token, ., FUNCTION, :, case, Token, ., HOOK, :, case, Token, ., NAME]
[., GETPROP, :, case, Token, ., GETELEM, :, case, Token, ., FUNCTION, :, case, Token, ., HOOK, :, case, Token]
[:, case, Token, ., FUNCTION, :, case, Token, ., HOOK, :, case, Token, ., NAME, :, case, Token, ., NEW]
[., GETELEM, :, case, Token, ., FUNCTION, :, case, Token, ., HOOK, :, case, Token, ., NAME, :, case, Token]
[:, case, Token, ., HOOK, :, case, Token, ., NAME, :, case, Token, ., NEW, :, case, Token, ., OR]
[., FUNCTION, :, case, Token, ., HOOK, :, case, Token, ., NAME, :, case, Token, ., NEW, :, case, Token]
[:, case, Token, ., NAME, :, case, Token, ., NEW, :, case, Token, ., OR, :, return, true, ;, default]
[., HOOK, :, case, Token, ., NAME, :, case, Token, ., NEW, :, case, Token, ., OR, :, return, true]
[:, case, Token, ., NEW, :, case, Token, ., OR, :, return, true, ;, default, :, return, false, ;, }]
[., NAME, :, case, Token, ., NEW, :, case, Token, ., OR, :, return, true, ;, default, :, return, false]
[:, case, Token, ., OR, :, return, true, ;, default, :, return, false, ;, }, }, private, static, boolean, hasNoSideEffectsAnnotation]
[., NEW, :, case, Token, ., OR, :, return, true, ;, default, :, return, false, ;, }, }, private, static]
[:, return, true, ;, default, :, return, false, ;, }, }, private, static, boolean, hasNoSideEffectsAnnotation, (, Node, node, ), {]
[., OR, :, return, true, ;, default, :, return, false, ;, }, }, private, static, boolean, hasNoSideEffectsAnnotation, (, Node, node]
[;, default, :, return, false, ;, }, }, private, static, boolean, hasNoSideEffectsAnnotation, (, Node, node, ), {, JSDocInfo, docInfo, =]
[;, }, }, private, static, boolean, hasNoSideEffectsAnnotation, (, Node, node, ), {, JSDocInfo, docInfo, =, node, ., getJSDocInfo, (, )]
[;, return, docInfo, !=, null, &&, docInfo, ., isNoSideEffects, (, ), ;, }, private, class, GatherNoSideEffectFunctions, extends, AbstractPostOrderCallback, {, private]
[., getJSDocInfo, (, ), ;, return, docInfo, !=, null, &&, docInfo, ., isNoSideEffects, (, ), ;, }, private, class, GatherNoSideEffectFunctions]
[;, }, private, class, GatherNoSideEffectFunctions, extends, AbstractPostOrderCallback, {, private, final, boolean, inExterns, ;, GatherNoSideEffectFunctions, (, boolean, inExterns, ), {, this]
[&&, docInfo, ., isNoSideEffects, (, ), ;, }, private, class, GatherNoSideEffectFunctions, extends, AbstractPostOrderCallback, {, private, final, boolean, inExterns, ;, GatherNoSideEffectFunctions]
[!=, null, &&, docInfo, ., isNoSideEffects, (, ), ;, }, private, class, GatherNoSideEffectFunctions, extends, AbstractPostOrderCallback, {, private, final, boolean, inExterns]
[&&, docInfo, ., isNoSideEffects, (, ), ;, }, private, class, GatherNoSideEffectFunctions, extends, AbstractPostOrderCallback, {, private, final, boolean, inExterns, ;, GatherNoSideEffectFunctions]
[;, }, private, class, GatherNoSideEffectFunctions, extends, AbstractPostOrderCallback, {, private, final, boolean, inExterns, ;, GatherNoSideEffectFunctions, (, boolean, inExterns, ), {, this]
[., isNoSideEffects, (, ), ;, }, private, class, GatherNoSideEffectFunctions, extends, AbstractPostOrderCallback, {, private, final, boolean, inExterns, ;, GatherNoSideEffectFunctions, (, boolean]
[=, inExterns, ;, }, @, Override, public, void, visit, (, NodeTraversal, traversal, ,, Node, node, ,, Node, parent, ), {]
[., inExterns, =, inExterns, ;, }, @, Override, public, void, visit, (, NodeTraversal, traversal, ,, Node, node, ,, Node, parent]
[;, }, @, Override, public, void, visit, (, NodeTraversal, traversal, ,, Node, node, ,, Node, parent, ), {, if, (]
[), {, traversal, ., report, (, node, ,, INVALID_NO_SIDE_EFFECT_ANNOTATION, ), ;, }, if, (, node, ., isGetProp, (, ), )]
[&&, hasNoSideEffectsAnnotation, (, node, ), ), {, traversal, ., report, (, node, ,, INVALID_NO_SIDE_EFFECT_ANNOTATION, ), ;, }, if, (, node]
[&&, hasNoSideEffectsAnnotation, (, node, ), ), {, traversal, ., report, (, node, ,, INVALID_NO_SIDE_EFFECT_ANNOTATION, ), ;, }, if, (, node]
[), {, traversal, ., report, (, node, ,, INVALID_NO_SIDE_EFFECT_ANNOTATION, ), ;, }, if, (, node, ., isGetProp, (, ), )]
[), ), {, traversal, ., report, (, node, ,, INVALID_NO_SIDE_EFFECT_ANNOTATION, ), ;, }, if, (, node, ., isGetProp, (, )]
[;, }, if, (, node, ., isGetProp, (, ), ), {, if, (, parent, ., isExprResult, (, ), &&, hasNoSideEffectsAnnotation]
[., report, (, node, ,, INVALID_NO_SIDE_EFFECT_ANNOTATION, ), ;, }, if, (, node, ., isGetProp, (, ), ), {, if, (]
[,, INVALID_NO_SIDE_EFFECT_ANNOTATION, ), ;, }, if, (, node, ., isGetProp, (, ), ), {, if, (, parent, ., isExprResult, (]
[), ;, }, if, (, node, ., isGetProp, (, ), ), {, if, (, parent, ., isExprResult, (, ), &&]
[), {, if, (, parent, ., isExprResult, (, ), &&, hasNoSideEffectsAnnotation, (, node, ), ), {, noSideEffectFunctionNames, ., add, (]
[., isGetProp, (, ), ), {, if, (, parent, ., isExprResult, (, ), &&, hasNoSideEffectsAnnotation, (, node, ), ), {]
[), {, noSideEffectFunctionNames, ., add, (, node, ), ;, }, }, else, if, (, node, ., isFunction, (, ), )]
[&&, hasNoSideEffectsAnnotation, (, node, ), ), {, noSideEffectFunctionNames, ., add, (, node, ), ;, }, }, else, if, (, node]
[., isExprResult, (, ), &&, hasNoSideEffectsAnnotation, (, node, ), ), {, noSideEffectFunctionNames, ., add, (, node, ), ;, }, }]
[), {, noSideEffectFunctionNames, ., add, (, node, ), ;, }, }, else, if, (, node, ., isFunction, (, ), )]
[), ), {, noSideEffectFunctionNames, ., add, (, node, ), ;, }, }, else, if, (, node, ., isFunction, (, )]
[;, }, }, else, if, (, node, ., isFunction, (, ), ), {, boolean, hasAnnotation, =, hasNoSideEffectsAnnotation, (, node, )]
[., add, (, node, ), ;, }, }, else, if, (, node, ., isFunction, (, ), ), {, boolean, hasAnnotation]
[), ;, }, }, else, if, (, node, ., isFunction, (, ), ), {, boolean, hasAnnotation, =, hasNoSideEffectsAnnotation, (, node]
[), {, boolean, hasAnnotation, =, hasNoSideEffectsAnnotation, (, node, ), ;, List, <, Node, >, nameNodes, =, Lists, ., newArrayList, (]
[., isFunction, (, ), ), {, boolean, hasAnnotation, =, hasNoSideEffectsAnnotation, (, node, ), ;, List, <, Node, >, nameNodes, =]
[;, List, <, Node, >, nameNodes, =, Lists, ., newArrayList, (, ), ;, nameNodes, ., add, (, node, ., getFirstChild]
[), ;, List, <, Node, >, nameNodes, =, Lists, ., newArrayList, (, ), ;, nameNodes, ., add, (, node, .]
[;, nameNodes, ., add, (, node, ., getFirstChild, (, ), ), ;, Node, nameNode, =, null, ;, if, (, parent]
[., newArrayList, (, ), ;, nameNodes, ., add, (, node, ., getFirstChild, (, ), ), ;, Node, nameNode, =, null]
[;, Node, nameNode, =, null, ;, if, (, parent, ., isName, (, ), ), {, Node, gramp, =, parent, .]
[., add, (, node, ., getFirstChild, (, ), ), ;, Node, nameNode, =, null, ;, if, (, parent, ., isName]
[), ;, Node, nameNode, =, null, ;, if, (, parent, ., isName, (, ), ), {, Node, gramp, =, parent]
[., getFirstChild, (, ), ), ;, Node, nameNode, =, null, ;, if, (, parent, ., isName, (, ), ), {]
[;, if, (, parent, ., isName, (, ), ), {, Node, gramp, =, parent, ., getParent, (, ), ;, if]
[), {, Node, gramp, =, parent, ., getParent, (, ), ;, if, (, gramp, ., isVar, (, ), &&, gramp]
[., isName, (, ), ), {, Node, gramp, =, parent, ., getParent, (, ), ;, if, (, gramp, ., isVar]
[;, if, (, gramp, ., isVar, (, ), &&, gramp, ., hasOneChild, (, ), &&, hasNoSideEffectsAnnotation, (, gramp, ), )]
[., getParent, (, ), ;, if, (, gramp, ., isVar, (, ), &&, gramp, ., hasOneChild, (, ), &&, hasNoSideEffectsAnnotation]
[), {, hasAnnotation, =, true, ;, }, nameNodes, ., add, (, parent, ), ;, }, else, if, (, parent, .]
[&&, hasNoSideEffectsAnnotation, (, gramp, ), ), {, hasAnnotation, =, true, ;, }, nameNodes, ., add, (, parent, ), ;, }]
[&&, gramp, ., hasOneChild, (, ), &&, hasNoSideEffectsAnnotation, (, gramp, ), ), {, hasAnnotation, =, true, ;, }, nameNodes, .]
[., isVar, (, ), &&, gramp, ., hasOneChild, (, ), &&, hasNoSideEffectsAnnotation, (, gramp, ), ), {, hasAnnotation, =, true]
[&&, hasNoSideEffectsAnnotation, (, gramp, ), ), {, hasAnnotation, =, true, ;, }, nameNodes, ., add, (, parent, ), ;, }]
[., hasOneChild, (, ), &&, hasNoSideEffectsAnnotation, (, gramp, ), ), {, hasAnnotation, =, true, ;, }, nameNodes, ., add, (]
[), {, hasAnnotation, =, true, ;, }, nameNodes, ., add, (, parent, ), ;, }, else, if, (, parent, .]
[), ), {, hasAnnotation, =, true, ;, }, nameNodes, ., add, (, parent, ), ;, }, else, if, (, parent]
[=, true, ;, }, nameNodes, ., add, (, parent, ), ;, }, else, if, (, parent, ., isAssign, (, )]
[;, }, nameNodes, ., add, (, parent, ), ;, }, else, if, (, parent, ., isAssign, (, ), ), {]
[;, }, else, if, (, parent, ., isAssign, (, ), ), {, if, (, hasNoSideEffectsAnnotation, (, parent, ), ), {]
[., add, (, parent, ), ;, }, else, if, (, parent, ., isAssign, (, ), ), {, if, (, hasNoSideEffectsAnnotation]
[), ;, }, else, if, (, parent, ., isAssign, (, ), ), {, if, (, hasNoSideEffectsAnnotation, (, parent, ), )]
[), {, if, (, hasNoSideEffectsAnnotation, (, parent, ), ), {, hasAnnotation, =, true, ;, }, nameNodes, ., add, (, parent]
[., isAssign, (, ), ), {, if, (, hasNoSideEffectsAnnotation, (, parent, ), ), {, hasAnnotation, =, true, ;, }, nameNodes]
[), {, hasAnnotation, =, true, ;, }, nameNodes, ., add, (, parent, ., getFirstChild, (, ), ), ;, }, if]
[), ), {, hasAnnotation, =, true, ;, }, nameNodes, ., add, (, parent, ., getFirstChild, (, ), ), ;, }]
[=, true, ;, }, nameNodes, ., add, (, parent, ., getFirstChild, (, ), ), ;, }, if, (, hasAnnotation, )]
[;, }, nameNodes, ., add, (, parent, ., getFirstChild, (, ), ), ;, }, if, (, hasAnnotation, ), {, noSideEffectFunctionNames]
[;, }, if, (, hasAnnotation, ), {, noSideEffectFunctionNames, ., addAll, (, nameNodes, ), ;, }, }, }, }, private, class]
[., add, (, parent, ., getFirstChild, (, ), ), ;, }, if, (, hasAnnotation, ), {, noSideEffectFunctionNames, ., addAll, (]
[), ;, }, if, (, hasAnnotation, ), {, noSideEffectFunctionNames, ., addAll, (, nameNodes, ), ;, }, }, }, }, private]
[., getFirstChild, (, ), ), ;, }, if, (, hasAnnotation, ), {, noSideEffectFunctionNames, ., addAll, (, nameNodes, ), ;, }]
[), {, noSideEffectFunctionNames, ., addAll, (, nameNodes, ), ;, }, }, }, }, private, class, SetNoSideEffectCallProperty, extends, AbstractPostOrderCallback, {, private]
[;, }, }, }, }, private, class, SetNoSideEffectCallProperty, extends, AbstractPostOrderCallback, {, private, final, SimpleDefinitionFinder, defFinder, ;, SetNoSideEffectCallProperty, (, SimpleDefinitionFinder, defFinder]
[., addAll, (, nameNodes, ), ;, }, }, }, }, private, class, SetNoSideEffectCallProperty, extends, AbstractPostOrderCallback, {, private, final, SimpleDefinitionFinder, defFinder]
[), ;, }, }, }, }, private, class, SetNoSideEffectCallProperty, extends, AbstractPostOrderCallback, {, private, final, SimpleDefinitionFinder, defFinder, ;, SetNoSideEffectCallProperty, (, SimpleDefinitionFinder]
[=, defFinder, ;, }, @, Override, public, void, visit, (, NodeTraversal, traversal, ,, Node, node, ,, Node, parent, ), {]
[., defFinder, =, defFinder, ;, }, @, Override, public, void, visit, (, NodeTraversal, traversal, ,, Node, node, ,, Node, parent]
[;, }, @, Override, public, void, visit, (, NodeTraversal, traversal, ,, Node, node, ,, Node, parent, ), {, if, (]
[), {, return, ;, }, Collection, <, Definition, >, definitions, =, defFinder, ., getDefinitionsReferencedAt, (, node, ., getFirstChild, (, )]
[&&, !, node, ., isNew, (, ), ), {, return, ;, }, Collection, <, Definition, >, definitions, =, defFinder, .]
[&&, !, node, ., isNew, (, ), ), {, return, ;, }, Collection, <, Definition, >, definitions, =, defFinder, .]
[., isCall, (, ), &&, !, node, ., isNew, (, ), ), {, return, ;, }, Collection, <, Definition, >]
[), {, return, ;, }, Collection, <, Definition, >, definitions, =, defFinder, ., getDefinitionsReferencedAt, (, node, ., getFirstChild, (, )]
[), {, return, ;, }, Collection, <, Definition, >, definitions, =, defFinder, ., getDefinitionsReferencedAt, (, node, ., getFirstChild, (, )]
[., isNew, (, ), ), {, return, ;, }, Collection, <, Definition, >, definitions, =, defFinder, ., getDefinitionsReferencedAt, (, node]
[;, if, (, definitions, ==, null, ), {, return, ;, }, for, (, Definition, def, :, definitions, ), {, Node]
[., getDefinitionsReferencedAt, (, node, ., getFirstChild, (, ), ), ;, if, (, definitions, ==, null, ), {, return, ;, }]
[), ;, if, (, definitions, ==, null, ), {, return, ;, }, for, (, Definition, def, :, definitions, ), {]
[., getFirstChild, (, ), ), ;, if, (, definitions, ==, null, ), {, return, ;, }, for, (, Definition, def]
[), {, return, ;, }, for, (, Definition, def, :, definitions, ), {, Node, lValue, =, def, ., getLValue, (]
[==, null, ), {, return, ;, }, for, (, Definition, def, :, definitions, ), {, Node, lValue, =, def, .]
[), {, return, ;, }, for, (, Definition, def, :, definitions, ), {, Node, lValue, =, def, ., getLValue, (]
[), {, Node, lValue, =, def, ., getLValue, (, ), ;, Preconditions, ., checkNotNull, (, lValue, ), ;, if, (]
[;, Preconditions, ., checkNotNull, (, lValue, ), ;, if, (, !, noSideEffectFunctionNames, ., contains, (, lValue, ), &&, definitionTypeContainsFunctionType, (]
[., getLValue, (, ), ;, Preconditions, ., checkNotNull, (, lValue, ), ;, if, (, !, noSideEffectFunctionNames, ., contains, (, lValue]
[;, if, (, !, noSideEffectFunctionNames, ., contains, (, lValue, ), &&, definitionTypeContainsFunctionType, (, def, ), ), {, return, ;, }]
[., checkNotNull, (, lValue, ), ;, if, (, !, noSideEffectFunctionNames, ., contains, (, lValue, ), &&, definitionTypeContainsFunctionType, (, def, )]
[), ;, if, (, !, noSideEffectFunctionNames, ., contains, (, lValue, ), &&, definitionTypeContainsFunctionType, (, def, ), ), {, return, ;]
[), {, return, ;, }, }, node, ., setSideEffectFlags, (, Node, ., NO_SIDE_EFFECTS, ), ;, }, }, }]
[&&, definitionTypeContainsFunctionType, (, def, ), ), {, return, ;, }, }, node, ., setSideEffectFlags, (, Node, ., NO_SIDE_EFFECTS, ), ;]
[&&, definitionTypeContainsFunctionType, (, def, ), ), {, return, ;, }, }, node, ., setSideEffectFlags, (, Node, ., NO_SIDE_EFFECTS, ), ;]
[., contains, (, lValue, ), &&, definitionTypeContainsFunctionType, (, def, ), ), {, return, ;, }, }, node, ., setSideEffectFlags, (]
[), &&, definitionTypeContainsFunctionType, (, def, ), ), {, return, ;, }, }, node, ., setSideEffectFlags, (, Node, ., NO_SIDE_EFFECTS, )]
[), {, return, ;, }, }, node, ., setSideEffectFlags, (, Node, ., NO_SIDE_EFFECTS, ), ;, }, }, }]
[), ), {, return, ;, }, }, node, ., setSideEffectFlags, (, Node, ., NO_SIDE_EFFECTS, ), ;, }, }, }]
[;, }, }, }]
[., setSideEffectFlags, (, Node, ., NO_SIDE_EFFECTS, ), ;, }, }, }]
[), ;, }, }, }]
[., NO_SIDE_EFFECTS, ), ;, }, }, }]
