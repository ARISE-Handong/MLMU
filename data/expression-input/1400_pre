[., Entry, ;, import, javax, ., annotation, ., Nullable, ;, public, class, SourceMapGeneratorV2, implements, SourceMapGenerator, {, private, boolean, validate, =]
[Nullable, ;, public, class, SourceMapGeneratorV2, implements, SourceMapGenerator, {, private, boolean, validate, =, false, ;, private, static, final, int, UNMAPPED, =]
[;, public, class, SourceMapGeneratorV2, implements, SourceMapGenerator, {, private, boolean, validate, =, false, ;, private, static, final, int, UNMAPPED, =, -]
[validate, =, false, ;, private, static, final, int, UNMAPPED, =, -, 1, ;, private, List, <, Mapping, >, mappings, =]
[validate, =, false, ;, private, static, final, int, UNMAPPED, =, -, 1, ;, private, List, <, Mapping, >, mappings, =]
[<, Mapping, >, mappings, =, Lists, ., newArrayList, (, ), ;, private, LinkedHashMap, <, String, ,, Integer, >, sourceFileMap, =]
[<, Mapping, >, mappings, =, Lists, ., newArrayList, (, ), ;, private, LinkedHashMap, <, String, ,, Integer, >, sourceFileMap, =]
[,, Integer, >, sourceFileMap, =, Maps, ., newLinkedHashMap, (, ), ;, private, LinkedHashMap, <, String, ,, Integer, >, originalNameMap, =]
[,, Integer, >, sourceFileMap, =, Maps, ., newLinkedHashMap, (, ), ;, private, LinkedHashMap, <, String, ,, Integer, >, originalNameMap, =]
[;, private, LinkedHashMap, <, String, ,, Integer, >, originalNameMap, =, Maps, ., newLinkedHashMap, (, ), ;, private, String, lastSourceFile, =]
[Integer, >, originalNameMap, =, Maps, ., newLinkedHashMap, (, ), ;, private, String, lastSourceFile, =, null, ;, private, int, lastSourceFileIndex, =]
[>, originalNameMap, =, Maps, ., newLinkedHashMap, (, ), ;, private, String, lastSourceFile, =, null, ;, private, int, lastSourceFileIndex, =, -]
[String, lastSourceFile, =, null, ;, private, int, lastSourceFileIndex, =, -, 1, ;, private, Mapping, lastMapping, ;, private, FilePosition, offsetPosition, =]
[null, ;, private, int, lastSourceFileIndex, =, -, 1, ;, private, Mapping, lastMapping, ;, private, FilePosition, offsetPosition, =, new, FilePosition, (]
[private, int, lastSourceFileIndex, =, -, 1, ;, private, Mapping, lastMapping, ;, private, FilePosition, offsetPosition, =, new, FilePosition, (, 0, ,]
[private, Mapping, lastMapping, ;, private, FilePosition, offsetPosition, =, new, FilePosition, (, 0, ,, 0, ), ;, private, FilePosition, prefixPosition, =]
[;, private, FilePosition, offsetPosition, =, new, FilePosition, (, 0, ,, 0, ), ;, private, FilePosition, prefixPosition, =, new, FilePosition, (]
[FilePosition, offsetPosition, =, new, FilePosition, (, 0, ,, 0, ), ;, private, FilePosition, prefixPosition, =, new, FilePosition, (, 0, ,]
[private, FilePosition, prefixPosition, =, new, FilePosition, (, 0, ,, 0, ), ;, @, Override, public, void, reset, (, ), {]
[private, FilePosition, prefixPosition, =, new, FilePosition, (, 0, ,, 0, ), ;, @, Override, public, void, reset, (, ), {]
[(, 0, ,, 0, ), ;, @, Override, public, void, reset, (, ), {, mappings, ., clear, (, ), ;]
[,, 0, ), ;, @, Override, public, void, reset, (, ), {, mappings, ., clear, (, ), ;, lastMapping, =]
[), ;, @, Override, public, void, reset, (, ), {, mappings, ., clear, (, ), ;, lastMapping, =, null, ;]
[), ;, @, Override, public, void, reset, (, ), {, mappings, ., clear, (, ), ;, lastMapping, =, null, ;]
[reset, (, ), {, mappings, ., clear, (, ), ;, lastMapping, =, null, ;, sourceFileMap, ., clear, (, ), ;]
[reset, (, ), {, mappings, ., clear, (, ), ;, lastMapping, =, null, ;, sourceFileMap, ., clear, (, ), ;]
[clear, (, ), ;, lastMapping, =, null, ;, sourceFileMap, ., clear, (, ), ;, originalNameMap, ., clear, (, ), ;]
[), ;, lastMapping, =, null, ;, sourceFileMap, ., clear, (, ), ;, originalNameMap, ., clear, (, ), ;, lastSourceFile, =]
[lastMapping, =, null, ;, sourceFileMap, ., clear, (, ), ;, originalNameMap, ., clear, (, ), ;, lastSourceFile, =, null, ;]
[null, ;, sourceFileMap, ., clear, (, ), ;, originalNameMap, ., clear, (, ), ;, lastSourceFile, =, null, ;, lastSourceFileIndex, =]
[;, sourceFileMap, ., clear, (, ), ;, originalNameMap, ., clear, (, ), ;, lastSourceFile, =, null, ;, lastSourceFileIndex, =, -]
[., clear, (, ), ;, originalNameMap, ., clear, (, ), ;, lastSourceFile, =, null, ;, lastSourceFileIndex, =, -, 1, ;]
[(, ), ;, originalNameMap, ., clear, (, ), ;, lastSourceFile, =, null, ;, lastSourceFileIndex, =, -, 1, ;, offsetPosition, =]
[originalNameMap, ., clear, (, ), ;, lastSourceFile, =, null, ;, lastSourceFileIndex, =, -, 1, ;, offsetPosition, =, new, FilePosition, (]
[clear, (, ), ;, lastSourceFile, =, null, ;, lastSourceFileIndex, =, -, 1, ;, offsetPosition, =, new, FilePosition, (, 0, ,]
[;, lastSourceFile, =, null, ;, lastSourceFileIndex, =, -, 1, ;, offsetPosition, =, new, FilePosition, (, 0, ,, 0, ), ;]
[=, null, ;, lastSourceFileIndex, =, -, 1, ;, offsetPosition, =, new, FilePosition, (, 0, ,, 0, ), ;, prefixPosition, =]
[lastSourceFileIndex, =, -, 1, ;, offsetPosition, =, new, FilePosition, (, 0, ,, 0, ), ;, prefixPosition, =, new, FilePosition, (]
[-, 1, ;, offsetPosition, =, new, FilePosition, (, 0, ,, 0, ), ;, prefixPosition, =, new, FilePosition, (, 0, ,]
[FilePosition, (, 0, ,, 0, ), ;, }, @, Override, @, VisibleForTesting, public, void, validate, (, boolean, validate, ), {]
[FilePosition, (, 0, ,, 0, ), ;, }, @, Override, @, VisibleForTesting, public, void, validate, (, boolean, validate, ), {]
[0, ), ;, }, @, Override, @, VisibleForTesting, public, void, validate, (, boolean, validate, ), {, this, ., validate, =]
[this, ., validate, =, validate, ;, }, @, Override, public, void, setWrapperPrefix, (, String, prefix, ), {, int, prefixLine, =]
[;, }, @, Override, public, void, setWrapperPrefix, (, String, prefix, ), {, int, prefixLine, =, 0, ;, int, prefixIndex, =]
[(, String, prefix, ), {, int, prefixLine, =, 0, ;, int, prefixIndex, =, 0, ;, for, (, int, i, =]
[prefix, ), {, int, prefixLine, =, 0, ;, int, prefixIndex, =, 0, ;, for, (, int, i, =, 0, ;]
[prefix, ), {, int, prefixLine, =, 0, ;, int, prefixIndex, =, 0, ;, for, (, int, i, =, 0, ;]
[{, int, prefixLine, =, 0, ;, int, prefixIndex, =, 0, ;, for, (, int, i, =, 0, ;, i, <]
[{, int, prefixLine, =, 0, ;, int, prefixIndex, =, 0, ;, for, (, int, i, =, 0, ;, i, <]
[int, prefixIndex, =, 0, ;, for, (, int, i, =, 0, ;, i, <, prefix, ., length, (, ), ;]
[prefixIndex, =, 0, ;, for, (, int, i, =, 0, ;, i, <, prefix, ., length, (, ), ;, ++]
[(, int, i, =, 0, ;, i, <, prefix, ., length, (, ), ;, ++, i, ), {, if, (]
[(, int, i, =, 0, ;, i, <, prefix, ., length, (, ), ;, ++, i, ), {, if, (]
[(, int, i, =, 0, ;, i, <, prefix, ., length, (, ), ;, ++, i, ), {, if, (]
[0, ;, i, <, prefix, ., length, (, ), ;, ++, i, ), {, if, (, prefix, ., charAt, (]
[<, prefix, ., length, (, ), ;, ++, i, ), {, if, (, prefix, ., charAt, (, i, ), ==]
[length, (, ), ;, ++, i, ), {, if, (, prefix, ., charAt, (, i, ), ==, '\n', ), {]
[length, (, ), ;, ++, i, ), {, if, (, prefix, ., charAt, (, i, ), ==, '\n', ), {]
[;, ++, i, ), {, if, (, prefix, ., charAt, (, i, ), ==, '\n', ), {, prefixLine, ++, ;]
[i, ), {, if, (, prefix, ., charAt, (, i, ), ==, '\n', ), {, prefixLine, ++, ;, prefixIndex, =]
[prefix, ., charAt, (, i, ), ==, '\n', ), {, prefixLine, ++, ;, prefixIndex, =, 0, ;, }, else, {]
[prefix, ., charAt, (, i, ), ==, '\n', ), {, prefixLine, ++, ;, prefixIndex, =, 0, ;, }, else, {]
[), ==, '\n', ), {, prefixLine, ++, ;, prefixIndex, =, 0, ;, }, else, {, prefixIndex, ++, ;, }, }]
['\n', ), {, prefixLine, ++, ;, prefixIndex, =, 0, ;, }, else, {, prefixIndex, ++, ;, }, }, prefixPosition, =]
[prefixLine, ++, ;, prefixIndex, =, 0, ;, }, else, {, prefixIndex, ++, ;, }, }, prefixPosition, =, new, FilePosition, (]
[;, prefixIndex, =, 0, ;, }, else, {, prefixIndex, ++, ;, }, }, prefixPosition, =, new, FilePosition, (, prefixLine, ,]
[(, prefixLine, ,, prefixIndex, ), ;, }, @, Override, public, void, setStartingPosition, (, int, offsetLine, ,, int, offsetIndex, ), {]
[(, prefixLine, ,, prefixIndex, ), ;, }, @, Override, public, void, setStartingPosition, (, int, offsetLine, ,, int, offsetIndex, ), {]
[), ;, }, @, Override, public, void, setStartingPosition, (, int, offsetLine, ,, int, offsetIndex, ), {, Preconditions, ., checkState, (]
[), ;, }, @, Override, public, void, setStartingPosition, (, int, offsetLine, ,, int, offsetIndex, ), {, Preconditions, ., checkState, (]
[}, @, Override, public, void, setStartingPosition, (, int, offsetLine, ,, int, offsetIndex, ), {, Preconditions, ., checkState, (, offsetLine, >=]
[public, void, setStartingPosition, (, int, offsetLine, ,, int, offsetIndex, ), {, Preconditions, ., checkState, (, offsetLine, >=, 0, ), ;]
[public, void, setStartingPosition, (, int, offsetLine, ,, int, offsetIndex, ), {, Preconditions, ., checkState, (, offsetLine, >=, 0, ), ;]
[int, offsetLine, ,, int, offsetIndex, ), {, Preconditions, ., checkState, (, offsetLine, >=, 0, ), ;, Preconditions, ., checkState, (]
[int, offsetLine, ,, int, offsetIndex, ), {, Preconditions, ., checkState, (, offsetLine, >=, 0, ), ;, Preconditions, ., checkState, (]
[,, int, offsetIndex, ), {, Preconditions, ., checkState, (, offsetLine, >=, 0, ), ;, Preconditions, ., checkState, (, offsetIndex, >=]
[), {, Preconditions, ., checkState, (, offsetLine, >=, 0, ), ;, Preconditions, ., checkState, (, offsetIndex, >=, 0, ), ;]
[Preconditions, ., checkState, (, offsetLine, >=, 0, ), ;, Preconditions, ., checkState, (, offsetIndex, >=, 0, ), ;, offsetPosition, =]
[(, offsetLine, >=, 0, ), ;, Preconditions, ., checkState, (, offsetIndex, >=, 0, ), ;, offsetPosition, =, new, FilePosition, (]
[>=, 0, ), ;, Preconditions, ., checkState, (, offsetIndex, >=, 0, ), ;, offsetPosition, =, new, FilePosition, (, offsetLine, ,]
[String, sourceName, ,, @, Nullable, String, symbolName, ,, FilePosition, sourceStartPosition, ,, FilePosition, startPosition, ,, FilePosition, endPosition, ), {, if, (]
[String, sourceName, ,, @, Nullable, String, symbolName, ,, FilePosition, sourceStartPosition, ,, FilePosition, startPosition, ,, FilePosition, endPosition, ), {, if, (]
[String, sourceName, ,, @, Nullable, String, symbolName, ,, FilePosition, sourceStartPosition, ,, FilePosition, startPosition, ,, FilePosition, endPosition, ), {, if, (]
[,, @, Nullable, String, symbolName, ,, FilePosition, sourceStartPosition, ,, FilePosition, startPosition, ,, FilePosition, endPosition, ), {, if, (, sourceName, ==]
[Nullable, String, symbolName, ,, FilePosition, sourceStartPosition, ,, FilePosition, startPosition, ,, FilePosition, endPosition, ), {, if, (, sourceName, ==, null, ||]
[Nullable, String, symbolName, ,, FilePosition, sourceStartPosition, ,, FilePosition, startPosition, ,, FilePosition, endPosition, ), {, if, (, sourceName, ==, null, ||]
[Nullable, String, symbolName, ,, FilePosition, sourceStartPosition, ,, FilePosition, startPosition, ,, FilePosition, endPosition, ), {, if, (, sourceName, ==, null, ||]
[,, FilePosition, startPosition, ,, FilePosition, endPosition, ), {, if, (, sourceName, ==, null, ||, sourceStartPosition, ., getLine, (, ), <]
[(, sourceName, ==, null, ||, sourceStartPosition, ., getLine, (, ), <, 0, ), {, return, ;, }, FilePosition, adjustedStart, =]
[sourceStartPosition, ., getLine, (, ), <, 0, ), {, return, ;, }, FilePosition, adjustedStart, =, startPosition, ;, FilePosition, adjustedEnd, =]
[), <, 0, ), {, return, ;, }, FilePosition, adjustedStart, =, startPosition, ;, FilePosition, adjustedEnd, =, endPosition, ;, if, (]
[), <, 0, ), {, return, ;, }, FilePosition, adjustedStart, =, startPosition, ;, FilePosition, adjustedEnd, =, endPosition, ;, if, (]
[), <, 0, ), {, return, ;, }, FilePosition, adjustedStart, =, startPosition, ;, FilePosition, adjustedEnd, =, endPosition, ;, if, (]
[), <, 0, ), {, return, ;, }, FilePosition, adjustedStart, =, startPosition, ;, FilePosition, adjustedEnd, =, endPosition, ;, if, (]
[;, }, FilePosition, adjustedStart, =, startPosition, ;, FilePosition, adjustedEnd, =, endPosition, ;, if, (, offsetPosition, ., getLine, (, ), !=]
[FilePosition, adjustedStart, =, startPosition, ;, FilePosition, adjustedEnd, =, endPosition, ;, if, (, offsetPosition, ., getLine, (, ), !=, 0, ||]
[FilePosition, adjustedStart, =, startPosition, ;, FilePosition, adjustedEnd, =, endPosition, ;, if, (, offsetPosition, ., getLine, (, ), !=, 0, ||]
[FilePosition, adjustedStart, =, startPosition, ;, FilePosition, adjustedEnd, =, endPosition, ;, if, (, offsetPosition, ., getLine, (, ), !=, 0, ||]
[adjustedEnd, =, endPosition, ;, if, (, offsetPosition, ., getLine, (, ), !=, 0, ||, offsetPosition, ., getColumn, (, ), !=]
[offsetPosition, ., getLine, (, ), !=, 0, ||, offsetPosition, ., getColumn, (, ), !=, 0, ), {, int, offsetLine, =]
[offsetPosition, ., getLine, (, ), !=, 0, ||, offsetPosition, ., getColumn, (, ), !=, 0, ), {, int, offsetLine, =]
[., getColumn, (, ), !=, 0, ), {, int, offsetLine, =, offsetPosition, ., getLine, (, ), ;, int, startOffsetPosition, =]
[., getColumn, (, ), !=, 0, ), {, int, offsetLine, =, offsetPosition, ., getLine, (, ), ;, int, startOffsetPosition, =]
[offsetLine, =, offsetPosition, ., getLine, (, ), ;, int, startOffsetPosition, =, offsetPosition, ., getColumn, (, ), ;, int, endOffsetPosition, =]
[offsetLine, =, offsetPosition, ., getLine, (, ), ;, int, startOffsetPosition, =, offsetPosition, ., getColumn, (, ), ;, int, endOffsetPosition, =]
[int, startOffsetPosition, =, offsetPosition, ., getColumn, (, ), ;, int, endOffsetPosition, =, offsetPosition, ., getColumn, (, ), ;, if, (]
[int, startOffsetPosition, =, offsetPosition, ., getColumn, (, ), ;, int, endOffsetPosition, =, offsetPosition, ., getColumn, (, ), ;, if, (]
[int, startOffsetPosition, =, offsetPosition, ., getColumn, (, ), ;, int, endOffsetPosition, =, offsetPosition, ., getColumn, (, ), ;, if, (]
[(, ), ;, int, endOffsetPosition, =, offsetPosition, ., getColumn, (, ), ;, if, (, startPosition, ., getLine, (, ), >]
[int, endOffsetPosition, =, offsetPosition, ., getColumn, (, ), ;, if, (, startPosition, ., getLine, (, ), >, 0, ), {]
[=, offsetPosition, ., getColumn, (, ), ;, if, (, startPosition, ., getLine, (, ), >, 0, ), {, startOffsetPosition, =]
[), ;, if, (, startPosition, ., getLine, (, ), >, 0, ), {, startOffsetPosition, =, 0, ;, }, if, (]
[), ;, if, (, startPosition, ., getLine, (, ), >, 0, ), {, startOffsetPosition, =, 0, ;, }, if, (]
[), ;, if, (, startPosition, ., getLine, (, ), >, 0, ), {, startOffsetPosition, =, 0, ;, }, if, (]
[getLine, (, ), >, 0, ), {, startOffsetPosition, =, 0, ;, }, if, (, endPosition, ., getLine, (, ), >]
[>, 0, ), {, startOffsetPosition, =, 0, ;, }, if, (, endPosition, ., getLine, (, ), >, 0, ), {]
[), {, startOffsetPosition, =, 0, ;, }, if, (, endPosition, ., getLine, (, ), >, 0, ), {, endOffsetPosition, =]
[=, 0, ;, }, if, (, endPosition, ., getLine, (, ), >, 0, ), {, endOffsetPosition, =, 0, ;, }]
[;, }, if, (, endPosition, ., getLine, (, ), >, 0, ), {, endOffsetPosition, =, 0, ;, }, adjustedStart, =]
[(, endPosition, ., getLine, (, ), >, 0, ), {, endOffsetPosition, =, 0, ;, }, adjustedStart, =, new, FilePosition, (]
[(, endPosition, ., getLine, (, ), >, 0, ), {, endOffsetPosition, =, 0, ;, }, adjustedStart, =, new, FilePosition, (]
[(, endPosition, ., getLine, (, ), >, 0, ), {, endOffsetPosition, =, 0, ;, }, adjustedStart, =, new, FilePosition, (]
[>, 0, ), {, endOffsetPosition, =, 0, ;, }, adjustedStart, =, new, FilePosition, (, startPosition, ., getLine, (, ), +]
[), {, endOffsetPosition, =, 0, ;, }, adjustedStart, =, new, FilePosition, (, startPosition, ., getLine, (, ), +, offsetLine, ,]
[), {, endOffsetPosition, =, 0, ;, }, adjustedStart, =, new, FilePosition, (, startPosition, ., getLine, (, ), +, offsetLine, ,]
[), {, endOffsetPosition, =, 0, ;, }, adjustedStart, =, new, FilePosition, (, startPosition, ., getLine, (, ), +, offsetLine, ,]
[}, adjustedStart, =, new, FilePosition, (, startPosition, ., getLine, (, ), +, offsetLine, ,, startPosition, ., getColumn, (, ), +]
[new, FilePosition, (, startPosition, ., getLine, (, ), +, offsetLine, ,, startPosition, ., getColumn, (, ), +, startOffsetPosition, ), ;]
[(, startPosition, ., getLine, (, ), +, offsetLine, ,, startPosition, ., getColumn, (, ), +, startOffsetPosition, ), ;, adjustedEnd, =]
[getLine, (, ), +, offsetLine, ,, startPosition, ., getColumn, (, ), +, startOffsetPosition, ), ;, adjustedEnd, =, new, FilePosition, (]
[getLine, (, ), +, offsetLine, ,, startPosition, ., getColumn, (, ), +, startOffsetPosition, ), ;, adjustedEnd, =, new, FilePosition, (]
[getLine, (, ), +, offsetLine, ,, startPosition, ., getColumn, (, ), +, startOffsetPosition, ), ;, adjustedEnd, =, new, FilePosition, (]
[startPosition, ., getColumn, (, ), +, startOffsetPosition, ), ;, adjustedEnd, =, new, FilePosition, (, endPosition, ., getLine, (, ), +]
[getColumn, (, ), +, startOffsetPosition, ), ;, adjustedEnd, =, new, FilePosition, (, endPosition, ., getLine, (, ), +, offsetLine, ,]
[getColumn, (, ), +, startOffsetPosition, ), ;, adjustedEnd, =, new, FilePosition, (, endPosition, ., getLine, (, ), +, offsetLine, ,]
[getColumn, (, ), +, startOffsetPosition, ), ;, adjustedEnd, =, new, FilePosition, (, endPosition, ., getLine, (, ), +, offsetLine, ,]
[;, adjustedEnd, =, new, FilePosition, (, endPosition, ., getLine, (, ), +, offsetLine, ,, endPosition, ., getColumn, (, ), +]
[., getLine, (, ), +, offsetLine, ,, endPosition, ., getColumn, (, ), +, endOffsetPosition, ), ;, }, Mapping, mapping, =]
[offsetLine, ,, endPosition, ., getColumn, (, ), +, endOffsetPosition, ), ;, }, Mapping, mapping, =, new, Mapping, (, ), ;]
[offsetLine, ,, endPosition, ., getColumn, (, ), +, endOffsetPosition, ), ;, }, Mapping, mapping, =, new, Mapping, (, ), ;]
[getColumn, (, ), +, endOffsetPosition, ), ;, }, Mapping, mapping, =, new, Mapping, (, ), ;, mapping, ., sourceFile, =]
[), +, endOffsetPosition, ), ;, }, Mapping, mapping, =, new, Mapping, (, ), ;, mapping, ., sourceFile, =, getSourceId, (]
[), ;, }, Mapping, mapping, =, new, Mapping, (, ), ;, mapping, ., sourceFile, =, getSourceId, (, sourceName, ), ;]
[), ;, }, Mapping, mapping, =, new, Mapping, (, ), ;, mapping, ., sourceFile, =, getSourceId, (, sourceName, ), ;]
[mapping, =, new, Mapping, (, ), ;, mapping, ., sourceFile, =, getSourceId, (, sourceName, ), ;, mapping, ., originalPosition, =]
[new, Mapping, (, ), ;, mapping, ., sourceFile, =, getSourceId, (, sourceName, ), ;, mapping, ., originalPosition, =, sourceStartPosition, ;]
[new, Mapping, (, ), ;, mapping, ., sourceFile, =, getSourceId, (, sourceName, ), ;, mapping, ., originalPosition, =, sourceStartPosition, ;]
[;, mapping, ., sourceFile, =, getSourceId, (, sourceName, ), ;, mapping, ., originalPosition, =, sourceStartPosition, ;, mapping, ., originalName, =]
[., sourceFile, =, getSourceId, (, sourceName, ), ;, mapping, ., originalPosition, =, sourceStartPosition, ;, mapping, ., originalName, =, symbolName, ;]
[., sourceFile, =, getSourceId, (, sourceName, ), ;, mapping, ., originalPosition, =, sourceStartPosition, ;, mapping, ., originalName, =, symbolName, ;]
[(, sourceName, ), ;, mapping, ., originalPosition, =, sourceStartPosition, ;, mapping, ., originalName, =, symbolName, ;, mapping, ., startPosition, =]
[), ;, mapping, ., originalPosition, =, sourceStartPosition, ;, mapping, ., originalName, =, symbolName, ;, mapping, ., startPosition, =, adjustedStart, ;]
[), ;, mapping, ., originalPosition, =, sourceStartPosition, ;, mapping, ., originalName, =, symbolName, ;, mapping, ., startPosition, =, adjustedStart, ;]
[originalPosition, =, sourceStartPosition, ;, mapping, ., originalName, =, symbolName, ;, mapping, ., startPosition, =, adjustedStart, ;, mapping, ., endPosition, =]
[mapping, ., originalName, =, symbolName, ;, mapping, ., startPosition, =, adjustedStart, ;, mapping, ., endPosition, =, adjustedEnd, ;, if, (]
[mapping, ., originalName, =, symbolName, ;, mapping, ., startPosition, =, adjustedStart, ;, mapping, ., endPosition, =, adjustedEnd, ;, if, (]
[originalName, =, symbolName, ;, mapping, ., startPosition, =, adjustedStart, ;, mapping, ., endPosition, =, adjustedEnd, ;, if, (, lastMapping, !=]
[startPosition, =, adjustedStart, ;, mapping, ., endPosition, =, adjustedEnd, ;, if, (, lastMapping, !=, null, ), {, int, lastLine, =]
[startPosition, =, adjustedStart, ;, mapping, ., endPosition, =, adjustedEnd, ;, if, (, lastMapping, !=, null, ), {, int, lastLine, =]
[startPosition, =, adjustedStart, ;, mapping, ., endPosition, =, adjustedEnd, ;, if, (, lastMapping, !=, null, ), {, int, lastLine, =]
[(, lastMapping, !=, null, ), {, int, lastLine, =, lastMapping, ., startPosition, ., getLine, (, ), ;, int, lastColumn, =]
[(, lastMapping, !=, null, ), {, int, lastLine, =, lastMapping, ., startPosition, ., getLine, (, ), ;, int, lastColumn, =]
[(, lastMapping, !=, null, ), {, int, lastLine, =, lastMapping, ., startPosition, ., getLine, (, ), ;, int, lastColumn, =]
[startPosition, ., getLine, (, ), ;, int, lastColumn, =, lastMapping, ., startPosition, ., getColumn, (, ), ;, int, nextLine, =]
[startPosition, ., getLine, (, ), ;, int, lastColumn, =, lastMapping, ., startPosition, ., getColumn, (, ), ;, int, nextLine, =]
[startPosition, ., getLine, (, ), ;, int, lastColumn, =, lastMapping, ., startPosition, ., getColumn, (, ), ;, int, nextLine, =]
[startPosition, ., getColumn, (, ), ;, int, nextLine, =, mapping, ., startPosition, ., getLine, (, ), ;, int, nextColumn, =]
[startPosition, ., getColumn, (, ), ;, int, nextLine, =, mapping, ., startPosition, ., getLine, (, ), ;, int, nextColumn, =]
[startPosition, ., getColumn, (, ), ;, int, nextLine, =, mapping, ., startPosition, ., getLine, (, ), ;, int, nextColumn, =]
[=, mapping, ., startPosition, ., getLine, (, ), ;, int, nextColumn, =, mapping, ., startPosition, ., getColumn, (, ), ;]
[=, mapping, ., startPosition, ., getLine, (, ), ;, int, nextColumn, =, mapping, ., startPosition, ., getColumn, (, ), ;]
[., getLine, (, ), ;, int, nextColumn, =, mapping, ., startPosition, ., getColumn, (, ), ;, Preconditions, ., checkState, (]
[., getLine, (, ), ;, int, nextColumn, =, mapping, ., startPosition, ., getColumn, (, ), ;, Preconditions, ., checkState, (]
[., getLine, (, ), ;, int, nextColumn, =, mapping, ., startPosition, ., getColumn, (, ), ;, Preconditions, ., checkState, (]
[(, ), ;, int, nextColumn, =, mapping, ., startPosition, ., getColumn, (, ), ;, Preconditions, ., checkState, (, nextLine, >]
[;, int, nextColumn, =, mapping, ., startPosition, ., getColumn, (, ), ;, Preconditions, ., checkState, (, nextLine, >, lastLine, ||]
[int, nextColumn, =, mapping, ., startPosition, ., getColumn, (, ), ;, Preconditions, ., checkState, (, nextLine, >, lastLine, ||, (]
[int, nextColumn, =, mapping, ., startPosition, ., getColumn, (, ), ;, Preconditions, ., checkState, (, nextLine, >, lastLine, ||, (]
[int, nextColumn, =, mapping, ., startPosition, ., getColumn, (, ), ;, Preconditions, ., checkState, (, nextLine, >, lastLine, ||, (]
[=, mapping, ., startPosition, ., getColumn, (, ), ;, Preconditions, ., checkState, (, nextLine, >, lastLine, ||, (, nextLine, ==]
[., startPosition, ., getColumn, (, ), ;, Preconditions, ., checkState, (, nextLine, >, lastLine, ||, (, nextLine, ==, lastLine, &&]
[., startPosition, ., getColumn, (, ), ;, Preconditions, ., checkState, (, nextLine, >, lastLine, ||, (, nextLine, ==, lastLine, &&]
[., getColumn, (, ), ;, Preconditions, ., checkState, (, nextLine, >, lastLine, ||, (, nextLine, ==, lastLine, &&, nextColumn, >=]
[), ;, Preconditions, ., checkState, (, nextLine, >, lastLine, ||, (, nextLine, ==, lastLine, &&, nextColumn, >=, lastColumn, ), ,]
[), ;, Preconditions, ., checkState, (, nextLine, >, lastLine, ||, (, nextLine, ==, lastLine, &&, nextColumn, >=, lastColumn, ), ,]
[Preconditions, ., checkState, (, nextLine, >, lastLine, ||, (, nextLine, ==, lastLine, &&, nextColumn, >=, lastColumn, ), ,, "Incorrect source mappings order, previous : (%s,%s)\n", +]
[checkState, (, nextLine, >, lastLine, ||, (, nextLine, ==, lastLine, &&, nextColumn, >=, lastColumn, ), ,, "Incorrect source mappings order, previous : (%s,%s)\n", +, "new : (%s,%s)\nnode : %s", ,]
[nextLine, >, lastLine, ||, (, nextLine, ==, lastLine, &&, nextColumn, >=, lastColumn, ), ,, "Incorrect source mappings order, previous : (%s,%s)\n", +, "new : (%s,%s)\nnode : %s", ,, lastLine, ,]
[lastLine, ||, (, nextLine, ==, lastLine, &&, nextColumn, >=, lastColumn, ), ,, "Incorrect source mappings order, previous : (%s,%s)\n", +, "new : (%s,%s)\nnode : %s", ,, lastLine, ,, lastColumn, ,]
[(, nextLine, ==, lastLine, &&, nextColumn, >=, lastColumn, ), ,, "Incorrect source mappings order, previous : (%s,%s)\n", +, "new : (%s,%s)\nnode : %s", ,, lastLine, ,, lastColumn, ,, nextLine, ,]
[&&, nextColumn, >=, lastColumn, ), ,, "Incorrect source mappings order, previous : (%s,%s)\n", +, "new : (%s,%s)\nnode : %s", ,, lastLine, ,, lastColumn, ,, nextLine, ,, nextColumn, ), ;, }]
[>=, lastColumn, ), ,, "Incorrect source mappings order, previous : (%s,%s)\n", +, "new : (%s,%s)\nnode : %s", ,, lastLine, ,, lastColumn, ,, nextLine, ,, nextColumn, ), ;, }, lastMapping, =]
[), ,, "Incorrect source mappings order, previous : (%s,%s)\n", +, "new : (%s,%s)\nnode : %s", ,, lastLine, ,, lastColumn, ,, nextLine, ,, nextColumn, ), ;, }, lastMapping, =, mapping, ;]
[), ,, "Incorrect source mappings order, previous : (%s,%s)\n", +, "new : (%s,%s)\nnode : %s", ,, lastLine, ,, lastColumn, ,, nextLine, ,, nextColumn, ), ;, }, lastMapping, =, mapping, ;]
["new : (%s,%s)\nnode : %s", ,, lastLine, ,, lastColumn, ,, nextLine, ,, nextColumn, ), ;, }, lastMapping, =, mapping, ;, mappings, ., add, (]
[;, }, @, Override, public, void, appendTo, (, Appendable, out, ,, String, name, ), throws, IOException, {, int, maxLine, =]
[public, void, appendTo, (, Appendable, out, ,, String, name, ), throws, IOException, {, int, maxLine, =, prepMappings, (, ), ;]
[public, void, appendTo, (, Appendable, out, ,, String, name, ), throws, IOException, {, int, maxLine, =, prepMappings, (, ), ;]
[Appendable, out, ,, String, name, ), throws, IOException, {, int, maxLine, =, prepMappings, (, ), ;, out, ., append, (]
[String, name, ), throws, IOException, {, int, maxLine, =, prepMappings, (, ), ;, out, ., append, (, "{\n", ), ;]
[), throws, IOException, {, int, maxLine, =, prepMappings, (, ), ;, out, ., append, (, "{\n", ), ;, appendFirstField, (]
[IOException, {, int, maxLine, =, prepMappings, (, ), ;, out, ., append, (, "{\n", ), ;, appendFirstField, (, out, ,]
[int, maxLine, =, prepMappings, (, ), ;, out, ., append, (, "{\n", ), ;, appendFirstField, (, out, ,, "version", ,]
[prepMappings, (, ), ;, out, ., append, (, "{\n", ), ;, appendFirstField, (, out, ,, "version", ,, "2", ), ;]
[), ;, out, ., append, (, "{\n", ), ;, appendFirstField, (, out, ,, "version", ,, "2", ), ;, appendField, (]
[out, ., append, (, "{\n", ), ;, appendFirstField, (, out, ,, "version", ,, "2", ), ;, appendField, (, out, ,]
[append, (, "{\n", ), ;, appendFirstField, (, out, ,, "version", ,, "2", ), ;, appendField, (, out, ,, "file", ,]
["{\n", ), ;, appendFirstField, (, out, ,, "version", ,, "2", ), ;, appendField, (, out, ,, "file", ,, escapeString, (]
[(, out, ,, "version", ,, "2", ), ;, appendField, (, out, ,, "file", ,, escapeString, (, name, ), ), ;]
[,, "version", ,, "2", ), ;, appendField, (, out, ,, "file", ,, escapeString, (, name, ), ), ;, appendField, (]
[,, "2", ), ;, appendField, (, out, ,, "file", ,, escapeString, (, name, ), ), ;, appendField, (, out, ,]
[), ;, appendField, (, out, ,, "file", ,, escapeString, (, name, ), ), ;, appendField, (, out, ,, "lineCount", ,]
[), ;, appendField, (, out, ,, "file", ,, escapeString, (, name, ), ), ;, appendField, (, out, ,, "lineCount", ,]
[out, ,, "file", ,, escapeString, (, name, ), ), ;, appendField, (, out, ,, "lineCount", ,, String, ., valueOf, (]
[out, ,, "file", ,, escapeString, (, name, ), ), ;, appendField, (, out, ,, "lineCount", ,, String, ., valueOf, (]
["file", ,, escapeString, (, name, ), ), ;, appendField, (, out, ,, "lineCount", ,, String, ., valueOf, (, maxLine, +]
[name, ), ), ;, appendField, (, out, ,, "lineCount", ,, String, ., valueOf, (, maxLine, +, 1, ), ), ;]
[), ;, appendField, (, out, ,, "lineCount", ,, String, ., valueOf, (, maxLine, +, 1, ), ), ;, appendFieldStart, (]
[appendField, (, out, ,, "lineCount", ,, String, ., valueOf, (, maxLine, +, 1, ), ), ;, appendFieldStart, (, out, ,]
[,, "lineCount", ,, String, ., valueOf, (, maxLine, +, 1, ), ), ;, appendFieldStart, (, out, ,, "lineMaps", ), ;]
[,, "lineCount", ,, String, ., valueOf, (, maxLine, +, 1, ), ), ;, appendFieldStart, (, out, ,, "lineMaps", ), ;]
[., valueOf, (, maxLine, +, 1, ), ), ;, appendFieldStart, (, out, ,, "lineMaps", ), ;, out, ., append, (]
[maxLine, +, 1, ), ), ;, appendFieldStart, (, out, ,, "lineMaps", ), ;, out, ., append, (, "[", ), ;]
[maxLine, +, 1, ), ), ;, appendFieldStart, (, out, ,, "lineMaps", ), ;, out, ., append, (, "[", ), ;]
[+, 1, ), ), ;, appendFieldStart, (, out, ,, "lineMaps", ), ;, out, ., append, (, "[", ), ;, (]
[), ;, appendFieldStart, (, out, ,, "lineMaps", ), ;, out, ., append, (, "[", ), ;, (, new, LineMapper, (]
[;, out, ., append, (, "[", ), ;, (, new, LineMapper, (, out, ), ), ., appendLineMappings, (, ), ;]
[;, out, ., append, (, "[", ), ;, (, new, LineMapper, (, out, ), ), ., appendLineMappings, (, ), ;]
[(, "[", ), ;, (, new, LineMapper, (, out, ), ), ., appendLineMappings, (, ), ;, out, ., append, (]
[;, (, new, LineMapper, (, out, ), ), ., appendLineMappings, (, ), ;, out, ., append, (, "]", ), ;]
[new, LineMapper, (, out, ), ), ., appendLineMappings, (, ), ;, out, ., append, (, "]", ), ;, appendFieldEnd, (]
[out, ), ), ., appendLineMappings, (, ), ;, out, ., append, (, "]", ), ;, appendFieldEnd, (, out, ), ;]
[), ., appendLineMappings, (, ), ;, out, ., append, (, "]", ), ;, appendFieldEnd, (, out, ), ;, appendFieldStart, (]
[appendLineMappings, (, ), ;, out, ., append, (, "]", ), ;, appendFieldEnd, (, out, ), ;, appendFieldStart, (, out, ,]
[;, out, ., append, (, "]", ), ;, appendFieldEnd, (, out, ), ;, appendFieldStart, (, out, ,, "mappings", ), ;]
[;, out, ., append, (, "]", ), ;, appendFieldEnd, (, out, ), ;, appendFieldStart, (, out, ,, "mappings", ), ;]
[(, "]", ), ;, appendFieldEnd, (, out, ), ;, appendFieldStart, (, out, ,, "mappings", ), ;, out, ., append, (]
[;, appendFieldEnd, (, out, ), ;, appendFieldStart, (, out, ,, "mappings", ), ;, out, ., append, (, "[", ), ;]
[;, appendFieldEnd, (, out, ), ;, appendFieldStart, (, out, ,, "mappings", ), ;, out, ., append, (, "[", ), ;]
[appendFieldEnd, (, out, ), ;, appendFieldStart, (, out, ,, "mappings", ), ;, out, ., append, (, "[", ), ;, (]
[,, "mappings", ), ;, out, ., append, (, "[", ), ;, (, new, MappingWriter, (, ), ), ., appendMappings, (]
[;, out, ., append, (, "[", ), ;, (, new, MappingWriter, (, ), ), ., appendMappings, (, out, ), ;]
[;, out, ., append, (, "[", ), ;, (, new, MappingWriter, (, ), ), ., appendMappings, (, out, ), ;]
[(, "[", ), ;, (, new, MappingWriter, (, ), ), ., appendMappings, (, out, ), ;, out, ., append, (]
[;, (, new, MappingWriter, (, ), ), ., appendMappings, (, out, ), ;, out, ., append, (, "]", ), ;]
[new, MappingWriter, (, ), ), ., appendMappings, (, out, ), ;, out, ., append, (, "]", ), ;, appendFieldEnd, (]
[), ), ., appendMappings, (, out, ), ;, out, ., append, (, "]", ), ;, appendFieldEnd, (, out, ), ;]
[., appendMappings, (, out, ), ;, out, ., append, (, "]", ), ;, appendFieldEnd, (, out, ), ;, appendFieldStart, (]
[(, out, ), ;, out, ., append, (, "]", ), ;, appendFieldEnd, (, out, ), ;, appendFieldStart, (, out, ,]
[;, out, ., append, (, "]", ), ;, appendFieldEnd, (, out, ), ;, appendFieldStart, (, out, ,, "sources", ), ;]
[;, out, ., append, (, "]", ), ;, appendFieldEnd, (, out, ), ;, appendFieldStart, (, out, ,, "sources", ), ;]
[(, "]", ), ;, appendFieldEnd, (, out, ), ;, appendFieldStart, (, out, ,, "sources", ), ;, out, ., append, (]
[;, appendFieldEnd, (, out, ), ;, appendFieldStart, (, out, ,, "sources", ), ;, out, ., append, (, "[", ), ;]
[(, out, ), ;, appendFieldStart, (, out, ,, "sources", ), ;, out, ., append, (, "[", ), ;, addSourceNameMap, (]
[;, appendFieldStart, (, out, ,, "sources", ), ;, out, ., append, (, "[", ), ;, addSourceNameMap, (, out, ), ;]
[;, appendFieldStart, (, out, ,, "sources", ), ;, out, ., append, (, "[", ), ;, addSourceNameMap, (, out, ), ;]
[,, "sources", ), ;, out, ., append, (, "[", ), ;, addSourceNameMap, (, out, ), ;, out, ., append, (]
[;, out, ., append, (, "[", ), ;, addSourceNameMap, (, out, ), ;, out, ., append, (, "]", ), ;]
[., append, (, "[", ), ;, addSourceNameMap, (, out, ), ;, out, ., append, (, "]", ), ;, appendFieldEnd, (]
["[", ), ;, addSourceNameMap, (, out, ), ;, out, ., append, (, "]", ), ;, appendFieldEnd, (, out, ), ;]
[;, addSourceNameMap, (, out, ), ;, out, ., append, (, "]", ), ;, appendFieldEnd, (, out, ), ;, appendFieldStart, (]
[(, out, ), ;, out, ., append, (, "]", ), ;, appendFieldEnd, (, out, ), ;, appendFieldStart, (, out, ,]
[;, out, ., append, (, "]", ), ;, appendFieldEnd, (, out, ), ;, appendFieldStart, (, out, ,, "names", ), ;]
[;, out, ., append, (, "]", ), ;, appendFieldEnd, (, out, ), ;, appendFieldStart, (, out, ,, "names", ), ;]
[(, "]", ), ;, appendFieldEnd, (, out, ), ;, appendFieldStart, (, out, ,, "names", ), ;, out, ., append, (]
[;, appendFieldEnd, (, out, ), ;, appendFieldStart, (, out, ,, "names", ), ;, out, ., append, (, "[", ), ;]
[(, out, ), ;, appendFieldStart, (, out, ,, "names", ), ;, out, ., append, (, "[", ), ;, addOriginalNameMap, (]
[;, appendFieldStart, (, out, ,, "names", ), ;, out, ., append, (, "[", ), ;, addOriginalNameMap, (, out, ), ;]
[;, appendFieldStart, (, out, ,, "names", ), ;, out, ., append, (, "[", ), ;, addOriginalNameMap, (, out, ), ;]
[,, "names", ), ;, out, ., append, (, "[", ), ;, addOriginalNameMap, (, out, ), ;, out, ., append, (]
[;, out, ., append, (, "[", ), ;, addOriginalNameMap, (, out, ), ;, out, ., append, (, "]", ), ;]
[., append, (, "[", ), ;, addOriginalNameMap, (, out, ), ;, out, ., append, (, "]", ), ;, appendFieldEnd, (]
["[", ), ;, addOriginalNameMap, (, out, ), ;, out, ., append, (, "]", ), ;, appendFieldEnd, (, out, ), ;]
["[", ), ;, addOriginalNameMap, (, out, ), ;, out, ., append, (, "]", ), ;, appendFieldEnd, (, out, ), ;]
[(, out, ), ;, out, ., append, (, "]", ), ;, appendFieldEnd, (, out, ), ;, out, ., append, (]
[), ;, out, ., append, (, "\n}\n", ), ;, }, private, void, addSourceNameMap, (, Appendable, out, ), throws, IOException, {]
[out, ., append, (, "\n}\n", ), ;, }, private, void, addSourceNameMap, (, Appendable, out, ), throws, IOException, {, addMap, (]
[append, (, "\n}\n", ), ;, }, private, void, addSourceNameMap, (, Appendable, out, ), throws, IOException, {, addMap, (, out, ,]
[IOException, {, addMap, (, out, ,, sourceFileMap, ), ;, }, private, void, addOriginalNameMap, (, Appendable, out, ), throws, IOException, {]
[addMap, (, out, ,, sourceFileMap, ), ;, }, private, void, addOriginalNameMap, (, Appendable, out, ), throws, IOException, {, addMap, (]
[out, ,, sourceFileMap, ), ;, }, private, void, addOriginalNameMap, (, Appendable, out, ), throws, IOException, {, addMap, (, out, ,]
[void, addMap, (, Appendable, out, ,, Map, <, String, ,, Integer, >, map, ), throws, IOException, {, int, i, =]
[map, ), throws, IOException, {, int, i, =, 0, ;, for, (, Entry, <, String, ,, Integer, >, entry, :]
[map, ), throws, IOException, {, int, i, =, 0, ;, for, (, Entry, <, String, ,, Integer, >, entry, :]
[for, (, Entry, <, String, ,, Integer, >, entry, :, map, ., entrySet, (, ), ), {, String, key, =]
[for, (, Entry, <, String, ,, Integer, >, entry, :, map, ., entrySet, (, ), ), {, String, key, =]
[entry, :, map, ., entrySet, (, ), ), {, String, key, =, entry, ., getKey, (, ), ;, if, (]
[entry, :, map, ., entrySet, (, ), ), {, String, key, =, entry, ., getKey, (, ), ;, if, (]
[map, ., entrySet, (, ), ), {, String, key, =, entry, ., getKey, (, ), ;, if, (, i, !=]
[(, ), ), {, String, key, =, entry, ., getKey, (, ), ;, if, (, i, !=, 0, ), {]
[(, ), ), {, String, key, =, entry, ., getKey, (, ), ;, if, (, i, !=, 0, ), {]
[String, key, =, entry, ., getKey, (, ), ;, if, (, i, !=, 0, ), {, out, ., append, (]
[., getKey, (, ), ;, if, (, i, !=, 0, ), {, out, ., append, (, ",", ), ;, }]
[., getKey, (, ), ;, if, (, i, !=, 0, ), {, out, ., append, (, ",", ), ;, }]
[;, if, (, i, !=, 0, ), {, out, ., append, (, ",", ), ;, }, out, ., append, (]
[(, i, !=, 0, ), {, out, ., append, (, ",", ), ;, }, out, ., append, (, escapeString, (]
[), {, out, ., append, (, ",", ), ;, }, out, ., append, (, escapeString, (, key, ), ), ;]
[), {, out, ., append, (, ",", ), ;, }, out, ., append, (, escapeString, (, key, ), ), ;]
[(, key, ), ), ;, i, ++, ;, }, }, private, static, String, escapeString, (, String, value, ), {, return]
[(, key, ), ), ;, i, ++, ;, }, }, private, static, String, escapeString, (, String, value, ), {, return]
[;, i, ++, ;, }, }, private, static, String, escapeString, (, String, value, ), {, return, Util, ., escapeString, (]
[), ;, }, private, static, void, appendFirstField, (, Appendable, out, ,, String, name, ,, CharSequence, value, ), throws, IOException, {]
[), ;, }, private, static, void, appendFirstField, (, Appendable, out, ,, String, name, ,, CharSequence, value, ), throws, IOException, {]
[static, void, appendFirstField, (, Appendable, out, ,, String, name, ,, CharSequence, value, ), throws, IOException, {, out, ., append, (]
[(, Appendable, out, ,, String, name, ,, CharSequence, value, ), throws, IOException, {, out, ., append, (, "\"", ), ;]
[(, Appendable, out, ,, String, name, ,, CharSequence, value, ), throws, IOException, {, out, ., append, (, "\"", ), ;]
[String, name, ,, CharSequence, value, ), throws, IOException, {, out, ., append, (, "\"", ), ;, out, ., append, (]
[CharSequence, value, ), throws, IOException, {, out, ., append, (, "\"", ), ;, out, ., append, (, name, ), ;]
[CharSequence, value, ), throws, IOException, {, out, ., append, (, "\"", ), ;, out, ., append, (, name, ), ;]
[IOException, {, out, ., append, (, "\"", ), ;, out, ., append, (, name, ), ;, out, ., append, (]
[., append, (, "\"", ), ;, out, ., append, (, name, ), ;, out, ., append, (, "\"", ), ;]
[., append, (, "\"", ), ;, out, ., append, (, name, ), ;, out, ., append, (, "\"", ), ;]
[), ;, out, ., append, (, name, ), ;, out, ., append, (, "\"", ), ;, out, ., append, (]
[., append, (, name, ), ;, out, ., append, (, "\"", ), ;, out, ., append, (, ":", ), ;]
[., append, (, name, ), ;, out, ., append, (, "\"", ), ;, out, ., append, (, ":", ), ;]
[), ;, out, ., append, (, "\"", ), ;, out, ., append, (, ":", ), ;, out, ., append, (]
[), ;, }, private, static, void, appendField, (, Appendable, out, ,, String, name, ,, CharSequence, value, ), throws, IOException, {]
[), ;, }, private, static, void, appendField, (, Appendable, out, ,, String, name, ,, CharSequence, value, ), throws, IOException, {]
[static, void, appendField, (, Appendable, out, ,, String, name, ,, CharSequence, value, ), throws, IOException, {, out, ., append, (]
[(, Appendable, out, ,, String, name, ,, CharSequence, value, ), throws, IOException, {, out, ., append, (, ",\n", ), ;]
[(, Appendable, out, ,, String, name, ,, CharSequence, value, ), throws, IOException, {, out, ., append, (, ",\n", ), ;]
[String, name, ,, CharSequence, value, ), throws, IOException, {, out, ., append, (, ",\n", ), ;, out, ., append, (]
[CharSequence, value, ), throws, IOException, {, out, ., append, (, ",\n", ), ;, out, ., append, (, "\"", ), ;]
[CharSequence, value, ), throws, IOException, {, out, ., append, (, ",\n", ), ;, out, ., append, (, "\"", ), ;]
[IOException, {, out, ., append, (, ",\n", ), ;, out, ., append, (, "\"", ), ;, out, ., append, (]
[., append, (, ",\n", ), ;, out, ., append, (, "\"", ), ;, out, ., append, (, name, ), ;]
[., append, (, ",\n", ), ;, out, ., append, (, "\"", ), ;, out, ., append, (, name, ), ;]
[), ;, out, ., append, (, "\"", ), ;, out, ., append, (, name, ), ;, out, ., append, (]
[., append, (, "\"", ), ;, out, ., append, (, name, ), ;, out, ., append, (, "\"", ), ;]
[., append, (, "\"", ), ;, out, ., append, (, name, ), ;, out, ., append, (, "\"", ), ;]
[), ;, out, ., append, (, name, ), ;, out, ., append, (, "\"", ), ;, out, ., append, (]
[., append, (, name, ), ;, out, ., append, (, "\"", ), ;, out, ., append, (, ":", ), ;]
[., append, (, name, ), ;, out, ., append, (, "\"", ), ;, out, ., append, (, ":", ), ;]
[), ;, out, ., append, (, "\"", ), ;, out, ., append, (, ":", ), ;, out, ., append, (]
[append, (, value, ), ;, }, private, static, void, appendFieldStart, (, Appendable, out, ,, String, name, ), throws, IOException, {]
[value, ), ;, }, private, static, void, appendFieldStart, (, Appendable, out, ,, String, name, ), throws, IOException, {, appendField, (]
[;, }, private, static, void, appendFieldStart, (, Appendable, out, ,, String, name, ), throws, IOException, {, appendField, (, out, ,]
[private, static, void, appendFieldStart, (, Appendable, out, ,, String, name, ), throws, IOException, {, appendField, (, out, ,, name, ,]
[(, Appendable, out, ,, String, name, ), throws, IOException, {, appendField, (, out, ,, name, ,, "", ), ;, }]
[,, String, name, ), throws, IOException, {, appendField, (, out, ,, name, ,, "", ), ;, }, @, SuppressWarnings, (]
[private, static, void, appendFieldEnd, (, Appendable, out, ), throws, IOException, {, }, private, int, prepMappings, (, ), throws, IOException, {]
[private, static, void, appendFieldEnd, (, Appendable, out, ), throws, IOException, {, }, private, int, prepMappings, (, ), throws, IOException, {]
[static, void, appendFieldEnd, (, Appendable, out, ), throws, IOException, {, }, private, int, prepMappings, (, ), throws, IOException, {, (]
[IOException, {, }, private, int, prepMappings, (, ), throws, IOException, {, (, new, MappingTraversal, (, ), ), ., traverse, (]
[IOException, {, (, new, MappingTraversal, (, ), ), ., traverse, (, new, UsedMappingCheck, (, ), ), ;, int, id, =]
[(, ), ), ., traverse, (, new, UsedMappingCheck, (, ), ), ;, int, id, =, 0, ;, int, maxLine, =]
[UsedMappingCheck, (, ), ), ;, int, id, =, 0, ;, int, maxLine, =, 0, ;, for, (, Mapping, m, :]
[int, id, =, 0, ;, int, maxLine, =, 0, ;, for, (, Mapping, m, :, mappings, ), {, if, (]
[int, id, =, 0, ;, int, maxLine, =, 0, ;, for, (, Mapping, m, :, mappings, ), {, if, (]
[int, maxLine, =, 0, ;, for, (, Mapping, m, :, mappings, ), {, if, (, m, ., used, ), {]
[int, maxLine, =, 0, ;, for, (, Mapping, m, :, mappings, ), {, if, (, m, ., used, ), {]
[;, for, (, Mapping, m, :, mappings, ), {, if, (, m, ., used, ), {, m, ., id, =]
[;, for, (, Mapping, m, :, mappings, ), {, if, (, m, ., used, ), {, m, ., id, =]
[mappings, ), {, if, (, m, ., used, ), {, m, ., id, =, id, ++, ;, int, endPositionLine, =]
[mappings, ), {, if, (, m, ., used, ), {, m, ., id, =, id, ++, ;, int, endPositionLine, =]
[mappings, ), {, if, (, m, ., used, ), {, m, ., id, =, id, ++, ;, int, endPositionLine, =]
[), {, m, ., id, =, id, ++, ;, int, endPositionLine, =, m, ., endPosition, ., getLine, (, ), ;]
[m, ., id, =, id, ++, ;, int, endPositionLine, =, m, ., endPosition, ., getLine, (, ), ;, maxLine, =]
[m, ., id, =, id, ++, ;, int, endPositionLine, =, m, ., endPosition, ., getLine, (, ), ;, maxLine, =]
[id, ++, ;, int, endPositionLine, =, m, ., endPosition, ., getLine, (, ), ;, maxLine, =, Math, ., max, (]
[;, int, endPositionLine, =, m, ., endPosition, ., getLine, (, ), ;, maxLine, =, Math, ., max, (, maxLine, ,]
[endPosition, ., getLine, (, ), ;, maxLine, =, Math, ., max, (, maxLine, ,, endPositionLine, ), ;, }, }, return]
[endPosition, ., getLine, (, ), ;, maxLine, =, Math, ., max, (, maxLine, ,, endPositionLine, ), ;, }, }, return]
[getLine, (, ), ;, maxLine, =, Math, ., max, (, maxLine, ,, endPositionLine, ), ;, }, }, return, maxLine, +]
[getLine, (, ), ;, maxLine, =, Math, ., max, (, maxLine, ,, endPositionLine, ), ;, }, }, return, maxLine, +]
[return, maxLine, +, prefixPosition, ., getLine, (, ), ;, }, private, int, getSourceId, (, String, sourceName, ), {, if, (]
[return, maxLine, +, prefixPosition, ., getLine, (, ), ;, }, private, int, getSourceId, (, String, sourceName, ), {, if, (]
[+, prefixPosition, ., getLine, (, ), ;, }, private, int, getSourceId, (, String, sourceName, ), {, if, (, sourceName, !=]
[getLine, (, ), ;, }, private, int, getSourceId, (, String, sourceName, ), {, if, (, sourceName, !=, lastSourceFile, ), {]
[), ;, }, private, int, getSourceId, (, String, sourceName, ), {, if, (, sourceName, !=, lastSourceFile, ), {, lastSourceFile, =]
[getSourceId, (, String, sourceName, ), {, if, (, sourceName, !=, lastSourceFile, ), {, lastSourceFile, =, sourceName, ;, Integer, index, =]
[getSourceId, (, String, sourceName, ), {, if, (, sourceName, !=, lastSourceFile, ), {, lastSourceFile, =, sourceName, ;, Integer, index, =]
[), {, if, (, sourceName, !=, lastSourceFile, ), {, lastSourceFile, =, sourceName, ;, Integer, index, =, sourceFileMap, ., get, (]
[!=, lastSourceFile, ), {, lastSourceFile, =, sourceName, ;, Integer, index, =, sourceFileMap, ., get, (, sourceName, ), ;, if, (]
[!=, lastSourceFile, ), {, lastSourceFile, =, sourceName, ;, Integer, index, =, sourceFileMap, ., get, (, sourceName, ), ;, if, (]
[), {, lastSourceFile, =, sourceName, ;, Integer, index, =, sourceFileMap, ., get, (, sourceName, ), ;, if, (, index, !=]
[=, sourceName, ;, Integer, index, =, sourceFileMap, ., get, (, sourceName, ), ;, if, (, index, !=, null, ), {]
[;, Integer, index, =, sourceFileMap, ., get, (, sourceName, ), ;, if, (, index, !=, null, ), {, lastSourceFileIndex, =]
[., get, (, sourceName, ), ;, if, (, index, !=, null, ), {, lastSourceFileIndex, =, index, ;, }, else, {]
[(, sourceName, ), ;, if, (, index, !=, null, ), {, lastSourceFileIndex, =, index, ;, }, else, {, lastSourceFileIndex, =]
[(, sourceName, ), ;, if, (, index, !=, null, ), {, lastSourceFileIndex, =, index, ;, }, else, {, lastSourceFileIndex, =]
[index, !=, null, ), {, lastSourceFileIndex, =, index, ;, }, else, {, lastSourceFileIndex, =, sourceFileMap, ., size, (, ), ;]
[index, !=, null, ), {, lastSourceFileIndex, =, index, ;, }, else, {, lastSourceFileIndex, =, sourceFileMap, ., size, (, ), ;]
[{, lastSourceFileIndex, =, index, ;, }, else, {, lastSourceFileIndex, =, sourceFileMap, ., size, (, ), ;, sourceFileMap, ., put, (]
[=, index, ;, }, else, {, lastSourceFileIndex, =, sourceFileMap, ., size, (, ), ;, sourceFileMap, ., put, (, sourceName, ,]
[lastSourceFileIndex, =, sourceFileMap, ., size, (, ), ;, sourceFileMap, ., put, (, sourceName, ,, lastSourceFileIndex, ), ;, }, }, return]
[}, }, return, lastSourceFileIndex, ;, }, private, int, getNameId, (, String, symbolName, ), {, int, originalNameIndex, ;, Integer, index, =]
[}, }, return, lastSourceFileIndex, ;, }, private, int, getNameId, (, String, symbolName, ), {, int, originalNameIndex, ;, Integer, index, =]
[;, }, private, int, getNameId, (, String, symbolName, ), {, int, originalNameIndex, ;, Integer, index, =, originalNameMap, ., get, (]
[(, String, symbolName, ), {, int, originalNameIndex, ;, Integer, index, =, originalNameMap, ., get, (, symbolName, ), ;, if, (]
[(, String, symbolName, ), {, int, originalNameIndex, ;, Integer, index, =, originalNameMap, ., get, (, symbolName, ), ;, if, (]
[symbolName, ), {, int, originalNameIndex, ;, Integer, index, =, originalNameMap, ., get, (, symbolName, ), ;, if, (, index, !=]
[int, originalNameIndex, ;, Integer, index, =, originalNameMap, ., get, (, symbolName, ), ;, if, (, index, !=, null, ), {]
[;, Integer, index, =, originalNameMap, ., get, (, symbolName, ), ;, if, (, index, !=, null, ), {, originalNameIndex, =]
[., get, (, symbolName, ), ;, if, (, index, !=, null, ), {, originalNameIndex, =, index, ;, }, else, {]
[(, symbolName, ), ;, if, (, index, !=, null, ), {, originalNameIndex, =, index, ;, }, else, {, originalNameIndex, =]
[(, symbolName, ), ;, if, (, index, !=, null, ), {, originalNameIndex, =, index, ;, }, else, {, originalNameIndex, =]
[index, !=, null, ), {, originalNameIndex, =, index, ;, }, else, {, originalNameIndex, =, originalNameMap, ., size, (, ), ;]
[index, !=, null, ), {, originalNameIndex, =, index, ;, }, else, {, originalNameIndex, =, originalNameMap, ., size, (, ), ;]
[{, originalNameIndex, =, index, ;, }, else, {, originalNameIndex, =, originalNameMap, ., size, (, ), ;, originalNameMap, ., put, (]
[=, index, ;, }, else, {, originalNameIndex, =, originalNameMap, ., size, (, ), ;, originalNameMap, ., put, (, symbolName, ,]
[{, originalNameIndex, =, originalNameMap, ., size, (, ), ;, originalNameMap, ., put, (, symbolName, ,, originalNameIndex, ), ;, }, return]
[., put, (, symbolName, ,, originalNameIndex, ), ;, }, return, originalNameIndex, ;, }, static, class, Mapping, {, int, id, =]
[UNMAPPED, ;, int, sourceFile, ;, FilePosition, originalPosition, ;, FilePosition, startPosition, ;, FilePosition, endPosition, ;, String, originalName, ;, boolean, used, =]
[FilePosition, endPosition, ;, String, originalName, ;, boolean, used, =, false, ;, }, private, class, MappingWriter, {, private, int, lastLine, =]
[boolean, used, =, false, ;, }, private, class, MappingWriter, {, private, int, lastLine, =, 0, ;, private, String, lastLineString, =]
[boolean, used, =, false, ;, }, private, class, MappingWriter, {, private, int, lastLine, =, 0, ;, private, String, lastLineString, =]
[;, }, private, class, MappingWriter, {, private, int, lastLine, =, 0, ;, private, String, lastLineString, =, String, ., valueOf, (]
[String, ., valueOf, (, 0, ), ;, private, void, appendMappingTo, (, Mapping, m, ,, Appendable, out, ), throws, IOException, {]
[String, ., valueOf, (, 0, ), ;, private, void, appendMappingTo, (, Mapping, m, ,, Appendable, out, ), throws, IOException, {]
[0, ), ;, private, void, appendMappingTo, (, Mapping, m, ,, Appendable, out, ), throws, IOException, {, out, ., append, (]
[private, void, appendMappingTo, (, Mapping, m, ,, Appendable, out, ), throws, IOException, {, out, ., append, (, "[", ), ;]
[private, void, appendMappingTo, (, Mapping, m, ,, Appendable, out, ), throws, IOException, {, out, ., append, (, "[", ), ;]
[Mapping, m, ,, Appendable, out, ), throws, IOException, {, out, ., append, (, "[", ), ;, out, ., append, (]
[Mapping, m, ,, Appendable, out, ), throws, IOException, {, out, ., append, (, "[", ), ;, out, ., append, (]
[out, ), throws, IOException, {, out, ., append, (, "[", ), ;, out, ., append, (, String, ., valueOf, (]
[out, ), throws, IOException, {, out, ., append, (, "[", ), ;, out, ., append, (, String, ., valueOf, (]
[., append, (, "[", ), ;, out, ., append, (, String, ., valueOf, (, m, ., sourceFile, ), ), ;]
[., append, (, "[", ), ;, out, ., append, (, String, ., valueOf, (, m, ., sourceFile, ), ), ;]
[), ;, out, ., append, (, String, ., valueOf, (, m, ., sourceFile, ), ), ;, out, ., append, (]
[String, ., valueOf, (, m, ., sourceFile, ), ), ;, out, ., append, (, ",", ), ;, int, line, =]
[String, ., valueOf, (, m, ., sourceFile, ), ), ;, out, ., append, (, ",", ), ;, int, line, =]
[String, ., valueOf, (, m, ., sourceFile, ), ), ;, out, ., append, (, ",", ), ;, int, line, =]
[out, ., append, (, ",", ), ;, int, line, =, m, ., originalPosition, ., getLine, (, ), ;, if, (]
[out, ., append, (, ",", ), ;, int, line, =, m, ., originalPosition, ., getLine, (, ), ;, if, (]
[append, (, ",", ), ;, int, line, =, m, ., originalPosition, ., getLine, (, ), ;, if, (, line, !=]
[), ;, int, line, =, m, ., originalPosition, ., getLine, (, ), ;, if, (, line, !=, lastLine, ), {]
[int, line, =, m, ., originalPosition, ., getLine, (, ), ;, if, (, line, !=, lastLine, ), {, lastLineString, =]
[int, line, =, m, ., originalPosition, ., getLine, (, ), ;, if, (, line, !=, lastLine, ), {, lastLineString, =]
[., originalPosition, ., getLine, (, ), ;, if, (, line, !=, lastLine, ), {, lastLineString, =, String, ., valueOf, (]
[if, (, line, !=, lastLine, ), {, lastLineString, =, String, ., valueOf, (, line, ), ;, }, String, lineValue, =]
[line, !=, lastLine, ), {, lastLineString, =, String, ., valueOf, (, line, ), ;, }, String, lineValue, =, lastLineString, ;]
[line, !=, lastLine, ), {, lastLineString, =, String, ., valueOf, (, line, ), ;, }, String, lineValue, =, lastLineString, ;]
[{, lastLineString, =, String, ., valueOf, (, line, ), ;, }, String, lineValue, =, lastLineString, ;, out, ., append, (]
[String, ., valueOf, (, line, ), ;, }, String, lineValue, =, lastLineString, ;, out, ., append, (, lineValue, ), ;]
[String, ., valueOf, (, line, ), ;, }, String, lineValue, =, lastLineString, ;, out, ., append, (, lineValue, ), ;]
[line, ), ;, }, String, lineValue, =, lastLineString, ;, out, ., append, (, lineValue, ), ;, out, ., append, (]
[}, String, lineValue, =, lastLineString, ;, out, ., append, (, lineValue, ), ;, out, ., append, (, ",", ), ;]
[}, String, lineValue, =, lastLineString, ;, out, ., append, (, lineValue, ), ;, out, ., append, (, ",", ), ;]
[lastLineString, ;, out, ., append, (, lineValue, ), ;, out, ., append, (, ",", ), ;, out, ., append, (]
[lastLineString, ;, out, ., append, (, lineValue, ), ;, out, ., append, (, ",", ), ;, out, ., append, (]
[append, (, lineValue, ), ;, out, ., append, (, ",", ), ;, out, ., append, (, String, ., valueOf, (]
[append, (, lineValue, ), ;, out, ., append, (, ",", ), ;, out, ., append, (, String, ., valueOf, (]
[append, (, lineValue, ), ;, out, ., append, (, ",", ), ;, out, ., append, (, String, ., valueOf, (]
[out, ., append, (, String, ., valueOf, (, m, ., originalPosition, ., getColumn, (, ), ), ), ;, if, (]
[out, ., append, (, String, ., valueOf, (, m, ., originalPosition, ., getColumn, (, ), ), ), ;, if, (]
[out, ., append, (, String, ., valueOf, (, m, ., originalPosition, ., getColumn, (, ), ), ), ;, if, (]
[String, ., valueOf, (, m, ., originalPosition, ., getColumn, (, ), ), ), ;, if, (, m, ., originalName, !=]
[(, m, ., originalPosition, ., getColumn, (, ), ), ), ;, if, (, m, ., originalName, !=, null, ), {]
[(, m, ., originalPosition, ., getColumn, (, ), ), ), ;, if, (, m, ., originalName, !=, null, ), {]
[., getColumn, (, ), ), ), ;, if, (, m, ., originalName, !=, null, ), {, out, ., append, (]
[), ), ), ;, if, (, m, ., originalName, !=, null, ), {, out, ., append, (, ",", ), ;]
[), ), ), ;, if, (, m, ., originalName, !=, null, ), {, out, ., append, (, ",", ), ;]
[if, (, m, ., originalName, !=, null, ), {, out, ., append, (, ",", ), ;, out, ., append, (]
[if, (, m, ., originalName, !=, null, ), {, out, ., append, (, ",", ), ;, out, ., append, (]
[originalName, !=, null, ), {, out, ., append, (, ",", ), ;, out, ., append, (, String, ., valueOf, (]
[null, ), {, out, ., append, (, ",", ), ;, out, ., append, (, String, ., valueOf, (, getNameId, (]
[null, ), {, out, ., append, (, ",", ), ;, out, ., append, (, String, ., valueOf, (, getNameId, (]
[), ;, out, ., append, (, String, ., valueOf, (, getNameId, (, m, ., originalName, ), ), ), ;, }]
[), ;, out, ., append, (, String, ., valueOf, (, getNameId, (, m, ., originalName, ), ), ), ;, }]
[append, (, String, ., valueOf, (, getNameId, (, m, ., originalName, ), ), ), ;, }, out, ., append, (]
[append, (, "],\n", ), ;, }, void, appendMappings, (, Appendable, out, ), throws, IOException, {, for, (, Mapping, m, :]
[}, void, appendMappings, (, Appendable, out, ), throws, IOException, {, for, (, Mapping, m, :, mappings, ), {, if, (]
[}, void, appendMappings, (, Appendable, out, ), throws, IOException, {, for, (, Mapping, m, :, mappings, ), {, if, (]
[out, ), throws, IOException, {, for, (, Mapping, m, :, mappings, ), {, if, (, m, ., used, ), {]
[throws, IOException, {, for, (, Mapping, m, :, mappings, ), {, if, (, m, ., used, ), {, appendMappingTo, (]
[{, for, (, Mapping, m, :, mappings, ), {, if, (, m, ., used, ), {, appendMappingTo, (, m, ,]
[;, }, }, }, }, private, class, LineMapper, implements, MappingVisitor, {, private, final, Appendable, out, ;, private, int, lastId, =]
[implements, MappingVisitor, {, private, final, Appendable, out, ;, private, int, lastId, =, UNMAPPED, ;, LineMapper, (, Appendable, out, ), {]
[implements, MappingVisitor, {, private, final, Appendable, out, ;, private, int, lastId, =, UNMAPPED, ;, LineMapper, (, Appendable, out, ), {]
[final, Appendable, out, ;, private, int, lastId, =, UNMAPPED, ;, LineMapper, (, Appendable, out, ), {, this, ., out, =]
[m, ,, int, line, ,, int, col, ,, int, nextLine, ,, int, nextCol, ), throws, IOException, {, int, id, =]
[m, ,, int, line, ,, int, col, ,, int, nextLine, ,, int, nextCol, ), throws, IOException, {, int, id, =]
[,, int, line, ,, int, col, ,, int, nextLine, ,, int, nextCol, ), throws, IOException, {, int, id, =, (]
[,, int, line, ,, int, col, ,, int, nextLine, ,, int, nextCol, ), throws, IOException, {, int, id, =, (]
[line, ,, int, col, ,, int, nextLine, ,, int, nextCol, ), throws, IOException, {, int, id, =, (, m, !=]
[col, ,, int, nextLine, ,, int, nextCol, ), throws, IOException, {, int, id, =, (, m, !=, null, ), ?]
[col, ,, int, nextLine, ,, int, nextCol, ), throws, IOException, {, int, id, =, (, m, !=, null, ), ?]
[,, int, nextCol, ), throws, IOException, {, int, id, =, (, m, !=, null, ), ?, m, ., id, :]
[int, id, =, (, m, !=, null, ), ?, m, ., id, :, UNMAPPED, ;, for, (, int, i, =]
[=, (, m, !=, null, ), ?, m, ., id, :, UNMAPPED, ;, for, (, int, i, =, line, ;]
[=, (, m, !=, null, ), ?, m, ., id, :, UNMAPPED, ;, for, (, int, i, =, line, ;]
[m, !=, null, ), ?, m, ., id, :, UNMAPPED, ;, for, (, int, i, =, line, ;, i, <=]
[null, ), ?, m, ., id, :, UNMAPPED, ;, for, (, int, i, =, line, ;, i, <=, nextLine, ;]
[null, ), ?, m, ., id, :, UNMAPPED, ;, for, (, int, i, =, line, ;, i, <=, nextLine, ;]
[:, UNMAPPED, ;, for, (, int, i, =, line, ;, i, <=, nextLine, ;, i, ++, ), {, if, (]
[:, UNMAPPED, ;, for, (, int, i, =, line, ;, i, <=, nextLine, ;, i, ++, ), {, if, (]
[;, for, (, int, i, =, line, ;, i, <=, nextLine, ;, i, ++, ), {, if, (, i, ==]
[int, i, =, line, ;, i, <=, nextLine, ;, i, ++, ), {, if, (, i, ==, nextLine, ), {]
[=, line, ;, i, <=, nextLine, ;, i, ++, ), {, if, (, i, ==, nextLine, ), {, closeEntry, (]
[;, i, <=, nextLine, ;, i, ++, ), {, if, (, i, ==, nextLine, ), {, closeEntry, (, id, ,]
[;, i, <=, nextLine, ;, i, ++, ), {, if, (, i, ==, nextLine, ), {, closeEntry, (, id, ,]
[<=, nextLine, ;, i, ++, ), {, if, (, i, ==, nextLine, ), {, closeEntry, (, id, ,, nextCol, -]
[{, if, (, i, ==, nextLine, ), {, closeEntry, (, id, ,, nextCol, -, col, ), ;, break, ;, }]
[(, i, ==, nextLine, ), {, closeEntry, (, id, ,, nextCol, -, col, ), ;, break, ;, }, closeLine, (]
[nextLine, ), {, closeEntry, (, id, ,, nextCol, -, col, ), ;, break, ;, }, closeLine, (, false, ), ;]
[(, id, ,, nextCol, -, col, ), ;, break, ;, }, closeLine, (, false, ), ;, openLine, (, ), ;]
[,, nextCol, -, col, ), ;, break, ;, }, closeLine, (, false, ), ;, openLine, (, ), ;, col, =]
[false, ), ;, openLine, (, ), ;, col, =, 0, ;, }, }, void, appendLineMappings, (, ), throws, IOException, {]
[(, ), ;, col, =, 0, ;, }, }, void, appendLineMappings, (, ), throws, IOException, {, openLine, (, ), ;]
[(, ), ;, col, =, 0, ;, }, }, void, appendLineMappings, (, ), throws, IOException, {, openLine, (, ), ;]
[), ;, col, =, 0, ;, }, }, void, appendLineMappings, (, ), throws, IOException, {, openLine, (, ), ;, (]
[void, appendLineMappings, (, ), throws, IOException, {, openLine, (, ), ;, (, new, MappingTraversal, (, ), ), ., traverse, (]
[), throws, IOException, {, openLine, (, ), ;, (, new, MappingTraversal, (, ), ), ., traverse, (, this, ), ;]
[IOException, {, openLine, (, ), ;, (, new, MappingTraversal, (, ), ), ., traverse, (, this, ), ;, closeLine, (]
[., traverse, (, this, ), ;, closeLine, (, true, ), ;, }, private, void, openLine, (, ), throws, IOException, {]
[., traverse, (, this, ), ;, closeLine, (, true, ), ;, }, private, void, openLine, (, ), throws, IOException, {]
[), ;, closeLine, (, true, ), ;, }, private, void, openLine, (, ), throws, IOException, {, out, ., append, (]
[(, true, ), ;, }, private, void, openLine, (, ), throws, IOException, {, out, ., append, (, "\"", ), ;]
[(, true, ), ;, }, private, void, openLine, (, ), throws, IOException, {, out, ., append, (, "\"", ), ;]
[}, private, void, openLine, (, ), throws, IOException, {, out, ., append, (, "\"", ), ;, this, ., lastId, =]
[;, this, ., lastId, =, 0, ;, }, private, void, closeLine, (, boolean, finalEntry, ), throws, IOException, {, if, (]
[lastId, =, 0, ;, }, private, void, closeLine, (, boolean, finalEntry, ), throws, IOException, {, if, (, finalEntry, ), {]
[lastId, =, 0, ;, }, private, void, closeLine, (, boolean, finalEntry, ), throws, IOException, {, if, (, finalEntry, ), {]
[}, private, void, closeLine, (, boolean, finalEntry, ), throws, IOException, {, if, (, finalEntry, ), {, out, ., append, (]
[finalEntry, ), throws, IOException, {, if, (, finalEntry, ), {, out, ., append, (, "\"", ), ;, }, else, {]
[finalEntry, ), throws, IOException, {, if, (, finalEntry, ), {, out, ., append, (, "\"", ), ;, }, else, {]
[{, if, (, finalEntry, ), {, out, ., append, (, "\"", ), ;, }, else, {, out, ., append, (]
["\",\n", ), ;, }, }, private, void, closeEntry, (, int, id, ,, int, reps, ), throws, IOException, {, if, (]
["\",\n", ), ;, }, }, private, void, closeEntry, (, int, id, ,, int, reps, ), throws, IOException, {, if, (]
[;, }, }, private, void, closeEntry, (, int, id, ,, int, reps, ), throws, IOException, {, if, (, reps, ==]
[,, int, reps, ), throws, IOException, {, if, (, reps, ==, 0, ), {, return, ;, }, StringBuilder, sb, =]
[IOException, {, if, (, reps, ==, 0, ), {, return, ;, }, StringBuilder, sb, =, new, StringBuilder, (, ), ;]
[IOException, {, if, (, reps, ==, 0, ), {, return, ;, }, StringBuilder, sb, =, new, StringBuilder, (, ), ;]
[reps, ==, 0, ), {, return, ;, }, StringBuilder, sb, =, new, StringBuilder, (, ), ;, LineMapEncoder, ., encodeEntry, (]
[0, ), {, return, ;, }, StringBuilder, sb, =, new, StringBuilder, (, ), ;, LineMapEncoder, ., encodeEntry, (, sb, ,]
[{, return, ;, }, StringBuilder, sb, =, new, StringBuilder, (, ), ;, LineMapEncoder, ., encodeEntry, (, sb, ,, id, ,]
[;, }, StringBuilder, sb, =, new, StringBuilder, (, ), ;, LineMapEncoder, ., encodeEntry, (, sb, ,, id, ,, lastId, ,]
[new, StringBuilder, (, ), ;, LineMapEncoder, ., encodeEntry, (, sb, ,, id, ,, lastId, ,, reps, ), ;, if, (]
[(, sb, ,, id, ,, lastId, ,, reps, ), ;, if, (, validate, ), {, SourceMapLineDecoder, ., LineEntry, entry, =]
[(, sb, ,, id, ,, lastId, ,, reps, ), ;, if, (, validate, ), {, SourceMapLineDecoder, ., LineEntry, entry, =]
[,, lastId, ,, reps, ), ;, if, (, validate, ), {, SourceMapLineDecoder, ., LineEntry, entry, =, SourceMapLineDecoder, ., decodeLineEntry, (]
[,, lastId, ,, reps, ), ;, if, (, validate, ), {, SourceMapLineDecoder, ., LineEntry, entry, =, SourceMapLineDecoder, ., decodeLineEntry, (]
[if, (, validate, ), {, SourceMapLineDecoder, ., LineEntry, entry, =, SourceMapLineDecoder, ., decodeLineEntry, (, sb, ., toString, (, ), ,]
[), {, SourceMapLineDecoder, ., LineEntry, entry, =, SourceMapLineDecoder, ., decodeLineEntry, (, sb, ., toString, (, ), ,, lastId, ), ;]
[), {, SourceMapLineDecoder, ., LineEntry, entry, =, SourceMapLineDecoder, ., decodeLineEntry, (, sb, ., toString, (, ), ,, lastId, ), ;]
[LineEntry, entry, =, SourceMapLineDecoder, ., decodeLineEntry, (, sb, ., toString, (, ), ,, lastId, ), ;, Preconditions, ., checkState, (]
[LineEntry, entry, =, SourceMapLineDecoder, ., decodeLineEntry, (, sb, ., toString, (, ), ,, lastId, ), ;, Preconditions, ., checkState, (]
[LineEntry, entry, =, SourceMapLineDecoder, ., decodeLineEntry, (, sb, ., toString, (, ), ,, lastId, ), ;, Preconditions, ., checkState, (]
[LineEntry, entry, =, SourceMapLineDecoder, ., decodeLineEntry, (, sb, ., toString, (, ), ,, lastId, ), ;, Preconditions, ., checkState, (]
[., decodeLineEntry, (, sb, ., toString, (, ), ,, lastId, ), ;, Preconditions, ., checkState, (, entry, ., id, ==]
[(, sb, ., toString, (, ), ,, lastId, ), ;, Preconditions, ., checkState, (, entry, ., id, ==, id, &&]
[(, sb, ., toString, (, ), ,, lastId, ), ;, Preconditions, ., checkState, (, entry, ., id, ==, id, &&]
[(, sb, ., toString, (, ), ,, lastId, ), ;, Preconditions, ., checkState, (, entry, ., id, ==, id, &&]
[(, ), ,, lastId, ), ;, Preconditions, ., checkState, (, entry, ., id, ==, id, &&, entry, ., reps, ==]
[,, lastId, ), ;, Preconditions, ., checkState, (, entry, ., id, ==, id, &&, entry, ., reps, ==, reps, ,]
[), ;, Preconditions, ., checkState, (, entry, ., id, ==, id, &&, entry, ., reps, ==, reps, ,, "expected (%s,%s) but got (%s,%s)", ,]
[Preconditions, ., checkState, (, entry, ., id, ==, id, &&, entry, ., reps, ==, reps, ,, "expected (%s,%s) but got (%s,%s)", ,, id, ,]
[checkState, (, entry, ., id, ==, id, &&, entry, ., reps, ==, reps, ,, "expected (%s,%s) but got (%s,%s)", ,, id, ,, reps, ,]
[checkState, (, entry, ., id, ==, id, &&, entry, ., reps, ==, reps, ,, "expected (%s,%s) but got (%s,%s)", ,, id, ,, reps, ,]
[id, ==, id, &&, entry, ., reps, ==, reps, ,, "expected (%s,%s) but got (%s,%s)", ,, id, ,, reps, ,, entry, ., id, ,]
[id, ==, id, &&, entry, ., reps, ==, reps, ,, "expected (%s,%s) but got (%s,%s)", ,, id, ,, reps, ,, entry, ., id, ,]
[reps, ==, reps, ,, "expected (%s,%s) but got (%s,%s)", ,, id, ,, reps, ,, entry, ., id, ,, entry, ., reps, ), ;, }]
[reps, ==, reps, ,, "expected (%s,%s) but got (%s,%s)", ,, id, ,, reps, ,, entry, ., id, ,, entry, ., reps, ), ;, }]
["expected (%s,%s) but got (%s,%s)", ,, id, ,, reps, ,, entry, ., id, ,, entry, ., reps, ), ;, }, out, ., append, (]
[,, reps, ,, entry, ., id, ,, entry, ., reps, ), ;, }, out, ., append, (, sb, ), ;]
[,, entry, ., id, ,, entry, ., reps, ), ;, }, out, ., append, (, sb, ), ;, lastId, =]
[public, static, void, encodeEntry, (, Appendable, out, ,, int, id, ,, int, lastId, ,, int, reps, ), throws, IOException, {]
[public, static, void, encodeEntry, (, Appendable, out, ,, int, id, ,, int, lastId, ,, int, reps, ), throws, IOException, {]
[(, Appendable, out, ,, int, id, ,, int, lastId, ,, int, reps, ), throws, IOException, {, Preconditions, ., checkState, (]
[(, Appendable, out, ,, int, id, ,, int, lastId, ,, int, reps, ), throws, IOException, {, Preconditions, ., checkState, (]
[out, ,, int, id, ,, int, lastId, ,, int, reps, ), throws, IOException, {, Preconditions, ., checkState, (, reps, >]
[lastId, ,, int, reps, ), throws, IOException, {, Preconditions, ., checkState, (, reps, >, 0, ), ;, int, relativeIdLength, =]
[int, reps, ), throws, IOException, {, Preconditions, ., checkState, (, reps, >, 0, ), ;, int, relativeIdLength, =, getRelativeMappingIdLength, (]
[), throws, IOException, {, Preconditions, ., checkState, (, reps, >, 0, ), ;, int, relativeIdLength, =, getRelativeMappingIdLength, (, id, ,]
[checkState, (, reps, >, 0, ), ;, int, relativeIdLength, =, getRelativeMappingIdLength, (, id, ,, lastId, ), ;, int, relativeId, =]
[reps, >, 0, ), ;, int, relativeIdLength, =, getRelativeMappingIdLength, (, id, ,, lastId, ), ;, int, relativeId, =, getRelativeMappingId, (]
[0, ), ;, int, relativeIdLength, =, getRelativeMappingIdLength, (, id, ,, lastId, ), ;, int, relativeId, =, getRelativeMappingId, (, id, ,]
[;, int, relativeIdLength, =, getRelativeMappingIdLength, (, id, ,, lastId, ), ;, int, relativeId, =, getRelativeMappingId, (, id, ,, relativeIdLength, ,]
[id, ,, lastId, ), ;, int, relativeId, =, getRelativeMappingId, (, id, ,, relativeIdLength, ,, lastId, ), ;, String, relativeIdString, =]
[lastId, ), ;, int, relativeId, =, getRelativeMappingId, (, id, ,, relativeIdLength, ,, lastId, ), ;, String, relativeIdString, =, valueToBase64, (]
[;, int, relativeId, =, getRelativeMappingId, (, id, ,, relativeIdLength, ,, lastId, ), ;, String, relativeIdString, =, valueToBase64, (, relativeId, ,]
[(, id, ,, relativeIdLength, ,, lastId, ), ;, String, relativeIdString, =, valueToBase64, (, relativeId, ,, relativeIdLength, ), ;, if, (]
[(, id, ,, relativeIdLength, ,, lastId, ), ;, String, relativeIdString, =, valueToBase64, (, relativeId, ,, relativeIdLength, ), ;, if, (]
[(, id, ,, relativeIdLength, ,, lastId, ), ;, String, relativeIdString, =, valueToBase64, (, relativeId, ,, relativeIdLength, ), ;, if, (]
[,, relativeIdLength, ,, lastId, ), ;, String, relativeIdString, =, valueToBase64, (, relativeId, ,, relativeIdLength, ), ;, if, (, reps, >]
[,, lastId, ), ;, String, relativeIdString, =, valueToBase64, (, relativeId, ,, relativeIdLength, ), ;, if, (, reps, >, 16, ||]
[,, lastId, ), ;, String, relativeIdString, =, valueToBase64, (, relativeId, ,, relativeIdLength, ), ;, if, (, reps, >, 16, ||]
[), ;, String, relativeIdString, =, valueToBase64, (, relativeId, ,, relativeIdLength, ), ;, if, (, reps, >, 16, ||, relativeIdLength, >]
[(, relativeId, ,, relativeIdLength, ), ;, if, (, reps, >, 16, ||, relativeIdLength, >, 4, ), {, String, repsString, =]
[,, relativeIdLength, ), ;, if, (, reps, >, 16, ||, relativeIdLength, >, 4, ), {, String, repsString, =, valueToBase64, (]
[,, relativeIdLength, ), ;, if, (, reps, >, 16, ||, relativeIdLength, >, 4, ), {, String, repsString, =, valueToBase64, (]
[), ;, if, (, reps, >, 16, ||, relativeIdLength, >, 4, ), {, String, repsString, =, valueToBase64, (, reps, -]
[if, (, reps, >, 16, ||, relativeIdLength, >, 4, ), {, String, repsString, =, valueToBase64, (, reps, -, 1, ,]
[4, ), {, String, repsString, =, valueToBase64, (, reps, -, 1, ,, 1, ), ;, for, (, int, i, =]
[{, String, repsString, =, valueToBase64, (, reps, -, 1, ,, 1, ), ;, for, (, int, i, =, 0, ;]
[{, String, repsString, =, valueToBase64, (, reps, -, 1, ,, 1, ), ;, for, (, int, i, =, 0, ;]
[repsString, =, valueToBase64, (, reps, -, 1, ,, 1, ), ;, for, (, int, i, =, 0, ;, i, <]
[repsString, =, valueToBase64, (, reps, -, 1, ,, 1, ), ;, for, (, int, i, =, 0, ;, i, <]
[1, ,, 1, ), ;, for, (, int, i, =, 0, ;, i, <, repsString, ., length, (, ), ;]
[1, ,, 1, ), ;, for, (, int, i, =, 0, ;, i, <, repsString, ., length, (, ), ;]
[;, for, (, int, i, =, 0, ;, i, <, repsString, ., length, (, ), ;, i, ++, ), {]
[;, for, (, int, i, =, 0, ;, i, <, repsString, ., length, (, ), ;, i, ++, ), {]
[i, =, 0, ;, i, <, repsString, ., length, (, ), ;, i, ++, ), {, out, ., append, (]
[., length, (, ), ;, i, ++, ), {, out, ., append, (, '!', ), ;, }, String, sizeId, =]
[(, ), ;, i, ++, ), {, out, ., append, (, '!', ), ;, }, String, sizeId, =, valueToBase64, (]
[(, ), ;, i, ++, ), {, out, ., append, (, '!', ), ;, }, String, sizeId, =, valueToBase64, (]
[(, ), ;, i, ++, ), {, out, ., append, (, '!', ), ;, }, String, sizeId, =, valueToBase64, (]
[{, out, ., append, (, '!', ), ;, }, String, sizeId, =, valueToBase64, (, relativeIdString, ., length, (, ), -]
[., append, (, '!', ), ;, }, String, sizeId, =, valueToBase64, (, relativeIdString, ., length, (, ), -, 1, ,]
['!', ), ;, }, String, sizeId, =, valueToBase64, (, relativeIdString, ., length, (, ), -, 1, ,, 1, ), ;]
['!', ), ;, }, String, sizeId, =, valueToBase64, (, relativeIdString, ., length, (, ), -, 1, ,, 1, ), ;]
[String, sizeId, =, valueToBase64, (, relativeIdString, ., length, (, ), -, 1, ,, 1, ), ;, out, ., append, (]
[valueToBase64, (, relativeIdString, ., length, (, ), -, 1, ,, 1, ), ;, out, ., append, (, sizeId, ), ;]
[valueToBase64, (, relativeIdString, ., length, (, ), -, 1, ,, 1, ), ;, out, ., append, (, sizeId, ), ;]
[length, (, ), -, 1, ,, 1, ), ;, out, ., append, (, sizeId, ), ;, out, ., append, (]
[out, ., append, (, sizeId, ), ;, out, ., append, (, repsString, ), ;, }, else, {, int, prefix, =]
[out, ., append, (, sizeId, ), ;, out, ., append, (, repsString, ), ;, }, else, {, int, prefix, =]
[., append, (, sizeId, ), ;, out, ., append, (, repsString, ), ;, }, else, {, int, prefix, =, (]
[., append, (, sizeId, ), ;, out, ., append, (, repsString, ), ;, }, else, {, int, prefix, =, (]
[append, (, sizeId, ), ;, out, ., append, (, repsString, ), ;, }, else, {, int, prefix, =, (, (]
[append, (, sizeId, ), ;, out, ., append, (, repsString, ), ;, }, else, {, int, prefix, =, (, (]
[sizeId, ), ;, out, ., append, (, repsString, ), ;, }, else, {, int, prefix, =, (, (, reps, -]
[out, ., append, (, repsString, ), ;, }, else, {, int, prefix, =, (, (, reps, -, 1, ), <<]
[(, repsString, ), ;, }, else, {, int, prefix, =, (, (, reps, -, 1, ), <<, 2, ), +]
[repsString, ), ;, }, else, {, int, prefix, =, (, (, reps, -, 1, ), <<, 2, ), +, (]
[repsString, ), ;, }, else, {, int, prefix, =, (, (, reps, -, 1, ), <<, 2, ), +, (]
[repsString, ), ;, }, else, {, int, prefix, =, (, (, reps, -, 1, ), <<, 2, ), +, (]
[int, prefix, =, (, (, reps, -, 1, ), <<, 2, ), +, (, relativeIdString, ., length, (, ), -]
[(, (, reps, -, 1, ), <<, 2, ), +, (, relativeIdString, ., length, (, ), -, 1, ), ;]
[(, (, reps, -, 1, ), <<, 2, ), +, (, relativeIdString, ., length, (, ), -, 1, ), ;]
[1, ), <<, 2, ), +, (, relativeIdString, ., length, (, ), -, 1, ), ;, Preconditions, ., checkState, (]
[1, ), <<, 2, ), +, (, relativeIdString, ., length, (, ), -, 1, ), ;, Preconditions, ., checkState, (]
[1, ), <<, 2, ), +, (, relativeIdString, ., length, (, ), -, 1, ), ;, Preconditions, ., checkState, (]
[<<, 2, ), +, (, relativeIdString, ., length, (, ), -, 1, ), ;, Preconditions, ., checkState, (, prefix, <]
[), +, (, relativeIdString, ., length, (, ), -, 1, ), ;, Preconditions, ., checkState, (, prefix, <, 64, &&]
[), +, (, relativeIdString, ., length, (, ), -, 1, ), ;, Preconditions, ., checkState, (, prefix, <, 64, &&]
[(, relativeIdString, ., length, (, ), -, 1, ), ;, Preconditions, ., checkState, (, prefix, <, 64, &&, prefix, >=]
[., length, (, ), -, 1, ), ;, Preconditions, ., checkState, (, prefix, <, 64, &&, prefix, >=, 0, ,]
[(, ), -, 1, ), ;, Preconditions, ., checkState, (, prefix, <, 64, &&, prefix, >=, 0, ,, "prefix (%s) reps(%s) map id size(%s)", ,]
[-, 1, ), ;, Preconditions, ., checkState, (, prefix, <, 64, &&, prefix, >=, 0, ,, "prefix (%s) reps(%s) map id size(%s)", ,, prefix, ,]
[), ;, Preconditions, ., checkState, (, prefix, <, 64, &&, prefix, >=, 0, ,, "prefix (%s) reps(%s) map id size(%s)", ,, prefix, ,, reps, ,]
[), ;, Preconditions, ., checkState, (, prefix, <, 64, &&, prefix, >=, 0, ,, "prefix (%s) reps(%s) map id size(%s)", ,, prefix, ,, reps, ,]
[<, 64, &&, prefix, >=, 0, ,, "prefix (%s) reps(%s) map id size(%s)", ,, prefix, ,, reps, ,, relativeIdString, ., length, (, ), ), ;]
[<, 64, &&, prefix, >=, 0, ,, "prefix (%s) reps(%s) map id size(%s)", ,, prefix, ,, reps, ,, relativeIdString, ., length, (, ), ), ;]
[>=, 0, ,, "prefix (%s) reps(%s) map id size(%s)", ,, prefix, ,, reps, ,, relativeIdString, ., length, (, ), ), ;, out, ., append, (]
[,, "prefix (%s) reps(%s) map id size(%s)", ,, prefix, ,, reps, ,, relativeIdString, ., length, (, ), ), ;, out, ., append, (, valueToBase64, (]
[,, prefix, ,, reps, ,, relativeIdString, ., length, (, ), ), ;, out, ., append, (, valueToBase64, (, prefix, ,]
[relativeIdString, ., length, (, ), ), ;, out, ., append, (, valueToBase64, (, prefix, ,, 1, ), ), ;, }]
[relativeIdString, ., length, (, ), ), ;, out, ., append, (, valueToBase64, (, prefix, ,, 1, ), ), ;, }]
[), ), ;, out, ., append, (, valueToBase64, (, prefix, ,, 1, ), ), ;, }, out, ., append, (]
[;, }, public, static, int, getRelativeMappingId, (, int, id, ,, int, idLength, ,, int, lastId, ), {, int, base, =]
[;, }, public, static, int, getRelativeMappingId, (, int, id, ,, int, idLength, ,, int, lastId, ), {, int, base, =]
[public, static, int, getRelativeMappingId, (, int, id, ,, int, idLength, ,, int, lastId, ), {, int, base, =, 1, <<]
[static, int, getRelativeMappingId, (, int, id, ,, int, idLength, ,, int, lastId, ), {, int, base, =, 1, <<, (]
[static, int, getRelativeMappingId, (, int, id, ,, int, idLength, ,, int, lastId, ), {, int, base, =, 1, <<, (]
[getRelativeMappingId, (, int, id, ,, int, idLength, ,, int, lastId, ), {, int, base, =, 1, <<, (, idLength, *]
[idLength, ,, int, lastId, ), {, int, base, =, 1, <<, (, idLength, *, 6, ), ;, int, relativeId, =]
[idLength, ,, int, lastId, ), {, int, base, =, 1, <<, (, idLength, *, 6, ), ;, int, relativeId, =]
[int, lastId, ), {, int, base, =, 1, <<, (, idLength, *, 6, ), ;, int, relativeId, =, id, -]
[{, int, base, =, 1, <<, (, idLength, *, 6, ), ;, int, relativeId, =, id, -, lastId, ;, return]
[{, int, base, =, 1, <<, (, idLength, *, 6, ), ;, int, relativeId, =, id, -, lastId, ;, return]
[int, base, =, 1, <<, (, idLength, *, 6, ), ;, int, relativeId, =, id, -, lastId, ;, return, (]
[int, base, =, 1, <<, (, idLength, *, 6, ), ;, int, relativeId, =, id, -, lastId, ;, return, (]
[=, 1, <<, (, idLength, *, 6, ), ;, int, relativeId, =, id, -, lastId, ;, return, (, relativeId, <]
[(, idLength, *, 6, ), ;, int, relativeId, =, id, -, lastId, ;, return, (, relativeId, <, 0, ), ?]
[(, idLength, *, 6, ), ;, int, relativeId, =, id, -, lastId, ;, return, (, relativeId, <, 0, ), ?]
[*, 6, ), ;, int, relativeId, =, id, -, lastId, ;, return, (, relativeId, <, 0, ), ?, relativeId, +]
[), ;, int, relativeId, =, id, -, lastId, ;, return, (, relativeId, <, 0, ), ?, relativeId, +, base, :]
[?, relativeId, +, base, :, relativeId, ;, }, public, static, int, getRelativeMappingIdLength, (, int, rawId, ,, int, lastId, ), {]
[?, relativeId, +, base, :, relativeId, ;, }, public, static, int, getRelativeMappingIdLength, (, int, rawId, ,, int, lastId, ), {]
[:, relativeId, ;, }, public, static, int, getRelativeMappingIdLength, (, int, rawId, ,, int, lastId, ), {, Preconditions, ., checkState, (]
[:, relativeId, ;, }, public, static, int, getRelativeMappingIdLength, (, int, rawId, ,, int, lastId, ), {, Preconditions, ., checkState, (]
[:, relativeId, ;, }, public, static, int, getRelativeMappingIdLength, (, int, rawId, ,, int, lastId, ), {, Preconditions, ., checkState, (]
[;, }, public, static, int, getRelativeMappingIdLength, (, int, rawId, ,, int, lastId, ), {, Preconditions, ., checkState, (, rawId, >=]
[public, static, int, getRelativeMappingIdLength, (, int, rawId, ,, int, lastId, ), {, Preconditions, ., checkState, (, rawId, >=, 0, ||]
[public, static, int, getRelativeMappingIdLength, (, int, rawId, ,, int, lastId, ), {, Preconditions, ., checkState, (, rawId, >=, 0, ||]
[int, getRelativeMappingIdLength, (, int, rawId, ,, int, lastId, ), {, Preconditions, ., checkState, (, rawId, >=, 0, ||, rawId, ==]
[int, lastId, ), {, Preconditions, ., checkState, (, rawId, >=, 0, ||, rawId, ==, UNMAPPED, ), ;, int, relativeId, =]
[int, lastId, ), {, Preconditions, ., checkState, (, rawId, >=, 0, ||, rawId, ==, UNMAPPED, ), ;, int, relativeId, =]
[), {, Preconditions, ., checkState, (, rawId, >=, 0, ||, rawId, ==, UNMAPPED, ), ;, int, relativeId, =, rawId, -]
[(, rawId, >=, 0, ||, rawId, ==, UNMAPPED, ), ;, int, relativeId, =, rawId, -, lastId, ;, int, id, =]
[(, rawId, >=, 0, ||, rawId, ==, UNMAPPED, ), ;, int, relativeId, =, rawId, -, lastId, ;, int, id, =]
[rawId, >=, 0, ||, rawId, ==, UNMAPPED, ), ;, int, relativeId, =, rawId, -, lastId, ;, int, id, =, (]
[rawId, >=, 0, ||, rawId, ==, UNMAPPED, ), ;, int, relativeId, =, rawId, -, lastId, ;, int, id, =, (]
[rawId, >=, 0, ||, rawId, ==, UNMAPPED, ), ;, int, relativeId, =, rawId, -, lastId, ;, int, id, =, (]
[0, ||, rawId, ==, UNMAPPED, ), ;, int, relativeId, =, rawId, -, lastId, ;, int, id, =, (, relativeId, <]
[rawId, ==, UNMAPPED, ), ;, int, relativeId, =, rawId, -, lastId, ;, int, id, =, (, relativeId, <, 0, ?]
[rawId, ==, UNMAPPED, ), ;, int, relativeId, =, rawId, -, lastId, ;, int, id, =, (, relativeId, <, 0, ?]
[rawId, ==, UNMAPPED, ), ;, int, relativeId, =, rawId, -, lastId, ;, int, id, =, (, relativeId, <, 0, ?]
[;, int, relativeId, =, rawId, -, lastId, ;, int, id, =, (, relativeId, <, 0, ?, Math, ., abs, (]
[=, rawId, -, lastId, ;, int, id, =, (, relativeId, <, 0, ?, Math, ., abs, (, relativeId, ), -]
[-, lastId, ;, int, id, =, (, relativeId, <, 0, ?, Math, ., abs, (, relativeId, ), -, 1, :]
[int, id, =, (, relativeId, <, 0, ?, Math, ., abs, (, relativeId, ), -, 1, :, relativeId, ), <<]
[<, 0, ?, Math, ., abs, (, relativeId, ), -, 1, :, relativeId, ), <<, 1, ;, int, digits, =]
[abs, (, relativeId, ), -, 1, :, relativeId, ), <<, 1, ;, int, digits, =, 1, ;, int, base, =]
[-, 1, :, relativeId, ), <<, 1, ;, int, digits, =, 1, ;, int, base, =, 64, ;, while, (]
[-, 1, :, relativeId, ), <<, 1, ;, int, digits, =, 1, ;, int, base, =, 64, ;, while, (]
[:, relativeId, ), <<, 1, ;, int, digits, =, 1, ;, int, base, =, 64, ;, while, (, id, >=]
[<<, 1, ;, int, digits, =, 1, ;, int, base, =, 64, ;, while, (, id, >=, base, ), {]
[<<, 1, ;, int, digits, =, 1, ;, int, base, =, 64, ;, while, (, id, >=, base, ), {]
[int, digits, =, 1, ;, int, base, =, 64, ;, while, (, id, >=, base, ), {, digits, ++, ;]
[=, 1, ;, int, base, =, 64, ;, while, (, id, >=, base, ), {, digits, ++, ;, base, *=]
[base, =, 64, ;, while, (, id, >=, base, ), {, digits, ++, ;, base, *=, 64, ;, }, return]
[;, }, return, digits, ;, }, static, String, valueToBase64, (, int, value, ,, int, minimumSize, ), {, int, size, =]
[String, valueToBase64, (, int, value, ,, int, minimumSize, ), {, int, size, =, 0, ;, char, chars, [, ], =]
[int, value, ,, int, minimumSize, ), {, int, size, =, 0, ;, char, chars, [, ], =, new, char, []
[size, =, 0, ;, char, chars, [, ], =, new, char, [, 4, ], ;, do, {, int, charValue, =]
[size, =, 0, ;, char, chars, [, ], =, new, char, [, 4, ], ;, do, {, int, charValue, =]
[0, ;, char, chars, [, ], =, new, char, [, 4, ], ;, do, {, int, charValue, =, value, &]
[char, chars, [, ], =, new, char, [, 4, ], ;, do, {, int, charValue, =, value, &, 63, ;]
[[, ], =, new, char, [, 4, ], ;, do, {, int, charValue, =, value, &, 63, ;, value, =]
[[, ], =, new, char, [, 4, ], ;, do, {, int, charValue, =, value, &, 63, ;, value, =]
[char, [, 4, ], ;, do, {, int, charValue, =, value, &, 63, ;, value, =, value, >, >, >]
[4, ], ;, do, {, int, charValue, =, value, &, 63, ;, value, =, value, >, >, >, 6, ;]
[4, ], ;, do, {, int, charValue, =, value, &, 63, ;, value, =, value, >, >, >, 6, ;]
[;, do, {, int, charValue, =, value, &, 63, ;, value, =, value, >, >, >, 6, ;, chars, []
[;, do, {, int, charValue, =, value, &, 63, ;, value, =, value, >, >, >, 6, ;, chars, []
[charValue, =, value, &, 63, ;, value, =, value, >, >, >, 6, ;, chars, [, size, ++, ], =]
[charValue, =, value, &, 63, ;, value, =, value, >, >, >, 6, ;, chars, [, size, ++, ], =]
[63, ;, value, =, value, >, >, >, 6, ;, chars, [, size, ++, ], =, Base64, ., toBase64, (]
[>, >, 6, ;, chars, [, size, ++, ], =, Base64, ., toBase64, (, charValue, ), ;, }, while, (]
[>, >, 6, ;, chars, [, size, ++, ], =, Base64, ., toBase64, (, charValue, ), ;, }, while, (]
[6, ;, chars, [, size, ++, ], =, Base64, ., toBase64, (, charValue, ), ;, }, while, (, value, >]
[], =, Base64, ., toBase64, (, charValue, ), ;, }, while, (, value, >, 0, ), ;, StringBuilder, sb, =]
[., toBase64, (, charValue, ), ;, }, while, (, value, >, 0, ), ;, StringBuilder, sb, =, new, StringBuilder, (]
[;, }, while, (, value, >, 0, ), ;, StringBuilder, sb, =, new, StringBuilder, (, size, ), ;, while, (]
[;, }, while, (, value, >, 0, ), ;, StringBuilder, sb, =, new, StringBuilder, (, size, ), ;, while, (]
[while, (, value, >, 0, ), ;, StringBuilder, sb, =, new, StringBuilder, (, size, ), ;, while, (, minimumSize, >]
[>, 0, ), ;, StringBuilder, sb, =, new, StringBuilder, (, size, ), ;, while, (, minimumSize, >, size, ), {]
[>, 0, ), ;, StringBuilder, sb, =, new, StringBuilder, (, size, ), ;, while, (, minimumSize, >, size, ), {]
[StringBuilder, sb, =, new, StringBuilder, (, size, ), ;, while, (, minimumSize, >, size, ), {, sb, ., append, (]
[StringBuilder, sb, =, new, StringBuilder, (, size, ), ;, while, (, minimumSize, >, size, ), {, sb, ., append, (]
[StringBuilder, (, size, ), ;, while, (, minimumSize, >, size, ), {, sb, ., append, (, Base64, ., toBase64, (]
[;, while, (, minimumSize, >, size, ), {, sb, ., append, (, Base64, ., toBase64, (, 0, ), ), ;]
[;, while, (, minimumSize, >, size, ), {, sb, ., append, (, Base64, ., toBase64, (, 0, ), ), ;]
[), {, sb, ., append, (, Base64, ., toBase64, (, 0, ), ), ;, minimumSize, --, ;, }, while, (]
[), {, sb, ., append, (, Base64, ., toBase64, (, 0, ), ), ;, minimumSize, --, ;, }, while, (]
[sb, ., append, (, Base64, ., toBase64, (, 0, ), ), ;, minimumSize, --, ;, }, while, (, size, >]
[(, Base64, ., toBase64, (, 0, ), ), ;, minimumSize, --, ;, }, while, (, size, >, 0, ), {]
[(, Base64, ., toBase64, (, 0, ), ), ;, minimumSize, --, ;, }, while, (, size, >, 0, ), {]
[(, 0, ), ), ;, minimumSize, --, ;, }, while, (, size, >, 0, ), {, sb, ., append, (]
[(, 0, ), ), ;, minimumSize, --, ;, }, while, (, size, >, 0, ), {, sb, ., append, (]
[), ), ;, minimumSize, --, ;, }, while, (, size, >, 0, ), {, sb, ., append, (, chars, []
[), ;, minimumSize, --, ;, }, while, (, size, >, 0, ), {, sb, ., append, (, chars, [, --]
[while, (, size, >, 0, ), {, sb, ., append, (, chars, [, --, size, ], ), ;, }, return]
[while, (, size, >, 0, ), {, sb, ., append, (, chars, [, --, size, ], ), ;, }, return]
[Mapping, m, ,, int, line, ,, int, col, ,, int, nextLine, ,, int, nextCol, ), throws, IOException, {, if, (]
[Mapping, m, ,, int, line, ,, int, col, ,, int, nextLine, ,, int, nextCol, ), throws, IOException, {, if, (]
[,, int, line, ,, int, col, ,, int, nextLine, ,, int, nextCol, ), throws, IOException, {, if, (, m, !=]
[,, int, col, ,, int, nextLine, ,, int, nextCol, ), throws, IOException, {, if, (, m, !=, null, ), {]
[,, int, col, ,, int, nextLine, ,, int, nextCol, ), throws, IOException, {, if, (, m, !=, null, ), {]
[int, nextLine, ,, int, nextCol, ), throws, IOException, {, if, (, m, !=, null, ), {, m, ., used, =]
[MappingTraversal, (, ), {, }, void, traverse, (, MappingVisitor, v, ), throws, IOException, {, Deque, <, Mapping, >, stack, =]
[{, Deque, <, Mapping, >, stack, =, new, ArrayDeque, <, Mapping, >, (, ), ;, for, (, Mapping, m, :]
[stack, =, new, ArrayDeque, <, Mapping, >, (, ), ;, for, (, Mapping, m, :, mappings, ), {, while, (]
[stack, =, new, ArrayDeque, <, Mapping, >, (, ), ;, for, (, Mapping, m, :, mappings, ), {, while, (]
[=, new, ArrayDeque, <, Mapping, >, (, ), ;, for, (, Mapping, m, :, mappings, ), {, while, (, !]
[=, new, ArrayDeque, <, Mapping, >, (, ), ;, for, (, Mapping, m, :, mappings, ), {, while, (, !]
[(, ), ;, for, (, Mapping, m, :, mappings, ), {, while, (, !, stack, ., isEmpty, (, ), &&]
[), ;, for, (, Mapping, m, :, mappings, ), {, while, (, !, stack, ., isEmpty, (, ), &&, !]
[for, (, Mapping, m, :, mappings, ), {, while, (, !, stack, ., isEmpty, (, ), &&, !, isOverlapped, (]
[for, (, Mapping, m, :, mappings, ), {, while, (, !, stack, ., isEmpty, (, ), &&, !, isOverlapped, (]
[), {, while, (, !, stack, ., isEmpty, (, ), &&, !, isOverlapped, (, stack, ., peek, (, ), ,]
[isEmpty, (, ), &&, !, isOverlapped, (, stack, ., peek, (, ), ,, m, ), ), {, Mapping, previous, =]
[isEmpty, (, ), &&, !, isOverlapped, (, stack, ., peek, (, ), ,, m, ), ), {, Mapping, previous, =]
[(, stack, ., peek, (, ), ,, m, ), ), {, Mapping, previous, =, stack, ., pop, (, ), ;]
[., peek, (, ), ,, m, ), ), {, Mapping, previous, =, stack, ., pop, (, ), ;, maybeVisit, (]
[(, ), ,, m, ), ), {, Mapping, previous, =, stack, ., pop, (, ), ;, maybeVisit, (, v, ,]
[Mapping, previous, =, stack, ., pop, (, ), ;, maybeVisit, (, v, ,, previous, ), ;, }, Mapping, parent, =]
[Mapping, previous, =, stack, ., pop, (, ), ;, maybeVisit, (, v, ,, previous, ), ;, }, Mapping, parent, =]
[(, ), ;, maybeVisit, (, v, ,, previous, ), ;, }, Mapping, parent, =, stack, ., peek, (, ), ;]
[;, maybeVisit, (, v, ,, previous, ), ;, }, Mapping, parent, =, stack, ., peek, (, ), ;, maybeVisitParent, (]
[(, v, ,, previous, ), ;, }, Mapping, parent, =, stack, ., peek, (, ), ;, maybeVisitParent, (, v, ,]
[,, previous, ), ;, }, Mapping, parent, =, stack, ., peek, (, ), ;, maybeVisitParent, (, v, ,, parent, ,]
[;, }, Mapping, parent, =, stack, ., peek, (, ), ;, maybeVisitParent, (, v, ,, parent, ,, m, ), ;]
[;, }, Mapping, parent, =, stack, ., peek, (, ), ;, maybeVisitParent, (, v, ,, parent, ,, m, ), ;]
[=, stack, ., peek, (, ), ;, maybeVisitParent, (, v, ,, parent, ,, m, ), ;, stack, ., push, (]
[;, maybeVisitParent, (, v, ,, parent, ,, m, ), ;, stack, ., push, (, m, ), ;, }, while, (]
[maybeVisitParent, (, v, ,, parent, ,, m, ), ;, stack, ., push, (, m, ), ;, }, while, (, !]
[maybeVisitParent, (, v, ,, parent, ,, m, ), ;, stack, ., push, (, m, ), ;, }, while, (, !]
[., push, (, m, ), ;, }, while, (, !, stack, ., isEmpty, (, ), ), {, Mapping, m, =]
[., push, (, m, ), ;, }, while, (, !, stack, ., isEmpty, (, ), ), {, Mapping, m, =]
[}, while, (, !, stack, ., isEmpty, (, ), ), {, Mapping, m, =, stack, ., pop, (, ), ;]
[(, !, stack, ., isEmpty, (, ), ), {, Mapping, m, =, stack, ., pop, (, ), ;, maybeVisit, (]
[stack, ., isEmpty, (, ), ), {, Mapping, m, =, stack, ., pop, (, ), ;, maybeVisit, (, v, ,]
[), ;, maybeVisit, (, v, ,, m, ), ;, }, }, private, int, getAdjustedLine, (, FilePosition, p, ), {, return]
[), ;, maybeVisit, (, v, ,, m, ), ;, }, }, private, int, getAdjustedLine, (, FilePosition, p, ), {, return]
[), ;, maybeVisit, (, v, ,, m, ), ;, }, }, private, int, getAdjustedLine, (, FilePosition, p, ), {, return]
[m, ), ;, }, }, private, int, getAdjustedLine, (, FilePosition, p, ), {, return, p, ., getLine, (, ), +]
[m, ), ;, }, }, private, int, getAdjustedLine, (, FilePosition, p, ), {, return, p, ., getLine, (, ), +]
[), +, prefixPosition, ., getLine, (, ), ;, }, private, int, getAdjustedCol, (, FilePosition, p, ), {, int, rawLine, =]
[), +, prefixPosition, ., getLine, (, ), ;, }, private, int, getAdjustedCol, (, FilePosition, p, ), {, int, rawLine, =]
[private, int, getAdjustedCol, (, FilePosition, p, ), {, int, rawLine, =, p, ., getLine, (, ), ;, int, rawCol, =]
[private, int, getAdjustedCol, (, FilePosition, p, ), {, int, rawLine, =, p, ., getLine, (, ), ;, int, rawCol, =]
[{, int, rawLine, =, p, ., getLine, (, ), ;, int, rawCol, =, p, ., getColumn, (, ), ;, return]
[{, int, rawLine, =, p, ., getLine, (, ), ;, int, rawCol, =, p, ., getColumn, (, ), ;, return]
[int, rawLine, =, p, ., getLine, (, ), ;, int, rawCol, =, p, ., getColumn, (, ), ;, return, (]
[int, rawLine, =, p, ., getLine, (, ), ;, int, rawCol, =, p, ., getColumn, (, ), ;, return, (]
[=, p, ., getLine, (, ), ;, int, rawCol, =, p, ., getColumn, (, ), ;, return, (, rawLine, !=]
[getLine, (, ), ;, int, rawCol, =, p, ., getColumn, (, ), ;, return, (, rawLine, !=, 0, ), ?]
[), ;, int, rawCol, =, p, ., getColumn, (, ), ;, return, (, rawLine, !=, 0, ), ?, rawCol, :]
[), ;, int, rawCol, =, p, ., getColumn, (, ), ;, return, (, rawLine, !=, 0, ), ?, rawCol, :]
[int, rawCol, =, p, ., getColumn, (, ), ;, return, (, rawLine, !=, 0, ), ?, rawCol, :, rawCol, +]
[int, rawCol, =, p, ., getColumn, (, ), ;, return, (, rawLine, !=, 0, ), ?, rawCol, :, rawCol, +]
[., getColumn, (, ), ;, }, private, boolean, isOverlapped, (, Mapping, m1, ,, Mapping, m2, ), {, int, l1, =]
[., getColumn, (, ), ;, }, private, boolean, isOverlapped, (, Mapping, m1, ,, Mapping, m2, ), {, int, l1, =]
[., getColumn, (, ), ;, }, private, boolean, isOverlapped, (, Mapping, m1, ,, Mapping, m2, ), {, int, l1, =]
[m1, ,, Mapping, m2, ), {, int, l1, =, m1, ., endPosition, ., getLine, (, ), ;, int, l2, =]
[m1, ,, Mapping, m2, ), {, int, l1, =, m1, ., endPosition, ., getLine, (, ), ;, int, l2, =]
[m1, ,, Mapping, m2, ), {, int, l1, =, m1, ., endPosition, ., getLine, (, ), ;, int, l2, =]
[endPosition, ., getLine, (, ), ;, int, l2, =, m2, ., startPosition, ., getLine, (, ), ;, int, c1, =]
[endPosition, ., getLine, (, ), ;, int, l2, =, m2, ., startPosition, ., getLine, (, ), ;, int, c1, =]
[endPosition, ., getLine, (, ), ;, int, l2, =, m2, ., startPosition, ., getLine, (, ), ;, int, c1, =]
[startPosition, ., getLine, (, ), ;, int, c1, =, m1, ., endPosition, ., getColumn, (, ), ;, int, c2, =]
[startPosition, ., getLine, (, ), ;, int, c1, =, m1, ., endPosition, ., getColumn, (, ), ;, int, c2, =]
[startPosition, ., getLine, (, ), ;, int, c1, =, m1, ., endPosition, ., getColumn, (, ), ;, int, c2, =]
[m1, ., endPosition, ., getColumn, (, ), ;, int, c2, =, m2, ., startPosition, ., getColumn, (, ), ;, return]
[m1, ., endPosition, ., getColumn, (, ), ;, int, c2, =, m2, ., startPosition, ., getColumn, (, ), ;, return]
[., endPosition, ., getColumn, (, ), ;, int, c2, =, m2, ., startPosition, ., getColumn, (, ), ;, return, (]
[., endPosition, ., getColumn, (, ), ;, int, c2, =, m2, ., startPosition, ., getColumn, (, ), ;, return, (]
[., endPosition, ., getColumn, (, ), ;, int, c2, =, m2, ., startPosition, ., getColumn, (, ), ;, return, (]
[., getColumn, (, ), ;, int, c2, =, m2, ., startPosition, ., getColumn, (, ), ;, return, (, l1, ==]
[(, ), ;, int, c2, =, m2, ., startPosition, ., getColumn, (, ), ;, return, (, l1, ==, l2, &&]
[(, ), ;, int, c2, =, m2, ., startPosition, ., getColumn, (, ), ;, return, (, l1, ==, l2, &&]
[;, int, c2, =, m2, ., startPosition, ., getColumn, (, ), ;, return, (, l1, ==, l2, &&, c1, >=]
[=, m2, ., startPosition, ., getColumn, (, ), ;, return, (, l1, ==, l2, &&, c1, >=, c2, ), ||]
[=, m2, ., startPosition, ., getColumn, (, ), ;, return, (, l1, ==, l2, &&, c1, >=, c2, ), ||]
[., startPosition, ., getColumn, (, ), ;, return, (, l1, ==, l2, &&, c1, >=, c2, ), ||, l1, >]
[>, l2, ;, }, private, void, maybeVisit, (, MappingVisitor, v, ,, Mapping, m, ), throws, IOException, {, int, nextLine, =]
[;, }, private, void, maybeVisit, (, MappingVisitor, v, ,, Mapping, m, ), throws, IOException, {, int, nextLine, =, getAdjustedLine, (]
[;, }, private, void, maybeVisit, (, MappingVisitor, v, ,, Mapping, m, ), throws, IOException, {, int, nextLine, =, getAdjustedLine, (]
[,, Mapping, m, ), throws, IOException, {, int, nextLine, =, getAdjustedLine, (, m, ., endPosition, ), ;, int, nextCol, =]
[m, ), throws, IOException, {, int, nextLine, =, getAdjustedLine, (, m, ., endPosition, ), ;, int, nextCol, =, getAdjustedCol, (]
[m, ), throws, IOException, {, int, nextLine, =, getAdjustedLine, (, m, ., endPosition, ), ;, int, nextCol, =, getAdjustedCol, (]
[=, getAdjustedLine, (, m, ., endPosition, ), ;, int, nextCol, =, getAdjustedCol, (, m, ., endPosition, ), ;, if, (]
[=, getAdjustedLine, (, m, ., endPosition, ), ;, int, nextCol, =, getAdjustedCol, (, m, ., endPosition, ), ;, if, (]
[=, getAdjustedLine, (, m, ., endPosition, ), ;, int, nextCol, =, getAdjustedCol, (, m, ., endPosition, ), ;, if, (]
[(, m, ., endPosition, ), ;, int, nextCol, =, getAdjustedCol, (, m, ., endPosition, ), ;, if, (, line, <]
[., endPosition, ), ;, int, nextCol, =, getAdjustedCol, (, m, ., endPosition, ), ;, if, (, line, <, nextLine, ||]
[endPosition, ), ;, int, nextCol, =, getAdjustedCol, (, m, ., endPosition, ), ;, if, (, line, <, nextLine, ||, (]
[endPosition, ), ;, int, nextCol, =, getAdjustedCol, (, m, ., endPosition, ), ;, if, (, line, <, nextLine, ||, (]
[endPosition, ), ;, int, nextCol, =, getAdjustedCol, (, m, ., endPosition, ), ;, if, (, line, <, nextLine, ||, (]
[;, int, nextCol, =, getAdjustedCol, (, m, ., endPosition, ), ;, if, (, line, <, nextLine, ||, (, line, ==]
[nextCol, =, getAdjustedCol, (, m, ., endPosition, ), ;, if, (, line, <, nextLine, ||, (, line, ==, nextLine, &&]
[nextCol, =, getAdjustedCol, (, m, ., endPosition, ), ;, if, (, line, <, nextLine, ||, (, line, ==, nextLine, &&]
[getAdjustedCol, (, m, ., endPosition, ), ;, if, (, line, <, nextLine, ||, (, line, ==, nextLine, &&, col, <]
[endPosition, ), ;, if, (, line, <, nextLine, ||, (, line, ==, nextLine, &&, col, <, nextCol, ), ), {]
[;, if, (, line, <, nextLine, ||, (, line, ==, nextLine, &&, col, <, nextCol, ), ), {, visit, (]
[(, line, <, nextLine, ||, (, line, ==, nextLine, &&, col, <, nextCol, ), ), {, visit, (, v, ,]
[<, nextLine, ||, (, line, ==, nextLine, &&, col, <, nextCol, ), ), {, visit, (, v, ,, m, ,]
[||, (, line, ==, nextLine, &&, col, <, nextCol, ), ), {, visit, (, v, ,, m, ,, nextLine, ,]
[}, private, void, maybeVisitParent, (, MappingVisitor, v, ,, Mapping, parent, ,, Mapping, m, ), throws, IOException, {, int, nextLine, =]
[void, maybeVisitParent, (, MappingVisitor, v, ,, Mapping, parent, ,, Mapping, m, ), throws, IOException, {, int, nextLine, =, getAdjustedLine, (]
[void, maybeVisitParent, (, MappingVisitor, v, ,, Mapping, parent, ,, Mapping, m, ), throws, IOException, {, int, nextLine, =, getAdjustedLine, (]
[,, Mapping, m, ), throws, IOException, {, int, nextLine, =, getAdjustedLine, (, m, ., startPosition, ), ;, int, nextCol, =]
[m, ), throws, IOException, {, int, nextLine, =, getAdjustedLine, (, m, ., startPosition, ), ;, int, nextCol, =, getAdjustedCol, (]
[m, ), throws, IOException, {, int, nextLine, =, getAdjustedLine, (, m, ., startPosition, ), ;, int, nextCol, =, getAdjustedCol, (]
[int, nextLine, =, getAdjustedLine, (, m, ., startPosition, ), ;, int, nextCol, =, getAdjustedCol, (, m, ., startPosition, ), ;]
[int, nextLine, =, getAdjustedLine, (, m, ., startPosition, ), ;, int, nextCol, =, getAdjustedCol, (, m, ., startPosition, ), ;]
[(, m, ., startPosition, ), ;, int, nextCol, =, getAdjustedCol, (, m, ., startPosition, ), ;, Preconditions, ., checkState, (]
[(, m, ., startPosition, ), ;, int, nextCol, =, getAdjustedCol, (, m, ., startPosition, ), ;, Preconditions, ., checkState, (]
[(, m, ., startPosition, ), ;, int, nextCol, =, getAdjustedCol, (, m, ., startPosition, ), ;, Preconditions, ., checkState, (]
[., startPosition, ), ;, int, nextCol, =, getAdjustedCol, (, m, ., startPosition, ), ;, Preconditions, ., checkState, (, line, <]
[), ;, int, nextCol, =, getAdjustedCol, (, m, ., startPosition, ), ;, Preconditions, ., checkState, (, line, <, nextLine, ||]
[), ;, int, nextCol, =, getAdjustedCol, (, m, ., startPosition, ), ;, Preconditions, ., checkState, (, line, <, nextLine, ||]
[int, nextCol, =, getAdjustedCol, (, m, ., startPosition, ), ;, Preconditions, ., checkState, (, line, <, nextLine, ||, col, <=]
[m, ., startPosition, ), ;, Preconditions, ., checkState, (, line, <, nextLine, ||, col, <=, nextCol, ), ;, if, (]
[m, ., startPosition, ), ;, Preconditions, ., checkState, (, line, <, nextLine, ||, col, <=, nextCol, ), ;, if, (]
[m, ., startPosition, ), ;, Preconditions, ., checkState, (, line, <, nextLine, ||, col, <=, nextCol, ), ;, if, (]
[startPosition, ), ;, Preconditions, ., checkState, (, line, <, nextLine, ||, col, <=, nextCol, ), ;, if, (, line, <]
[;, Preconditions, ., checkState, (, line, <, nextLine, ||, col, <=, nextCol, ), ;, if, (, line, <, nextLine, ||]
[Preconditions, ., checkState, (, line, <, nextLine, ||, col, <=, nextCol, ), ;, if, (, line, <, nextLine, ||, (]
[Preconditions, ., checkState, (, line, <, nextLine, ||, col, <=, nextCol, ), ;, if, (, line, <, nextLine, ||, (]
[Preconditions, ., checkState, (, line, <, nextLine, ||, col, <=, nextCol, ), ;, if, (, line, <, nextLine, ||, (]
[checkState, (, line, <, nextLine, ||, col, <=, nextCol, ), ;, if, (, line, <, nextLine, ||, (, line, ==]
[line, <, nextLine, ||, col, <=, nextCol, ), ;, if, (, line, <, nextLine, ||, (, line, ==, nextLine, &&]
[line, <, nextLine, ||, col, <=, nextCol, ), ;, if, (, line, <, nextLine, ||, (, line, ==, nextLine, &&]
[nextLine, ||, col, <=, nextCol, ), ;, if, (, line, <, nextLine, ||, (, line, ==, nextLine, &&, col, <]
[nextCol, ), ;, if, (, line, <, nextLine, ||, (, line, ==, nextLine, &&, col, <, nextCol, ), ), {]
[;, if, (, line, <, nextLine, ||, (, line, ==, nextLine, &&, col, <, nextCol, ), ), {, visit, (]
[(, line, <, nextLine, ||, (, line, ==, nextLine, &&, col, <, nextCol, ), ), {, visit, (, v, ,]
[<, nextLine, ||, (, line, ==, nextLine, &&, col, <, nextCol, ), ), {, visit, (, v, ,, parent, ,]
[||, (, line, ==, nextLine, &&, col, <, nextCol, ), ), {, visit, (, v, ,, parent, ,, nextLine, ,]
[}, private, void, visit, (, MappingVisitor, v, ,, Mapping, m, ,, int, nextLine, ,, int, nextCol, ), throws, IOException, {]
[}, private, void, visit, (, MappingVisitor, v, ,, Mapping, m, ,, int, nextLine, ,, int, nextCol, ), throws, IOException, {]
[(, MappingVisitor, v, ,, Mapping, m, ,, int, nextLine, ,, int, nextCol, ), throws, IOException, {, Preconditions, ., checkState, (]
[(, MappingVisitor, v, ,, Mapping, m, ,, int, nextLine, ,, int, nextCol, ), throws, IOException, {, Preconditions, ., checkState, (]
[v, ,, Mapping, m, ,, int, nextLine, ,, int, nextCol, ), throws, IOException, {, Preconditions, ., checkState, (, line, <=]
[m, ,, int, nextLine, ,, int, nextCol, ), throws, IOException, {, Preconditions, ., checkState, (, line, <=, nextLine, ), ;]
[m, ,, int, nextLine, ,, int, nextCol, ), throws, IOException, {, Preconditions, ., checkState, (, line, <=, nextLine, ), ;]
[,, int, nextCol, ), throws, IOException, {, Preconditions, ., checkState, (, line, <=, nextLine, ), ;, Preconditions, ., checkState, (]
[,, int, nextCol, ), throws, IOException, {, Preconditions, ., checkState, (, line, <=, nextLine, ), ;, Preconditions, ., checkState, (]
[,, int, nextCol, ), throws, IOException, {, Preconditions, ., checkState, (, line, <=, nextLine, ), ;, Preconditions, ., checkState, (]
[nextCol, ), throws, IOException, {, Preconditions, ., checkState, (, line, <=, nextLine, ), ;, Preconditions, ., checkState, (, line, <]
[throws, IOException, {, Preconditions, ., checkState, (, line, <=, nextLine, ), ;, Preconditions, ., checkState, (, line, <, nextLine, ||]
[throws, IOException, {, Preconditions, ., checkState, (, line, <=, nextLine, ), ;, Preconditions, ., checkState, (, line, <, nextLine, ||]
[{, Preconditions, ., checkState, (, line, <=, nextLine, ), ;, Preconditions, ., checkState, (, line, <, nextLine, ||, col, <]
[line, <=, nextLine, ), ;, Preconditions, ., checkState, (, line, <, nextLine, ||, col, <, nextCol, ), ;, if, (]
[line, <=, nextLine, ), ;, Preconditions, ., checkState, (, line, <, nextLine, ||, col, <, nextCol, ), ;, if, (]
[line, <=, nextLine, ), ;, Preconditions, ., checkState, (, line, <, nextLine, ||, col, <, nextCol, ), ;, if, (]
[nextLine, ), ;, Preconditions, ., checkState, (, line, <, nextLine, ||, col, <, nextCol, ), ;, if, (, line, ==]
[;, Preconditions, ., checkState, (, line, <, nextLine, ||, col, <, nextCol, ), ;, if, (, line, ==, nextLine, &&]
[;, Preconditions, ., checkState, (, line, <, nextLine, ||, col, <, nextCol, ), ;, if, (, line, ==, nextLine, &&]
[., checkState, (, line, <, nextLine, ||, col, <, nextCol, ), ;, if, (, line, ==, nextLine, &&, col, ==]
[line, <, nextLine, ||, col, <, nextCol, ), ;, if, (, line, ==, nextLine, &&, col, ==, nextCol, ), {]
[line, <, nextLine, ||, col, <, nextCol, ), ;, if, (, line, ==, nextLine, &&, col, ==, nextCol, ), {]
[col, <, nextCol, ), ;, if, (, line, ==, nextLine, &&, col, ==, nextCol, ), {, Preconditions, ., checkState, (]
[(, line, ==, nextLine, &&, col, ==, nextCol, ), {, Preconditions, ., checkState, (, false, ), ;, return, ;, }]
[(, line, ==, nextLine, &&, col, ==, nextCol, ), {, Preconditions, ., checkState, (, false, ), ;, return, ;, }]
[&&, col, ==, nextCol, ), {, Preconditions, ., checkState, (, false, ), ;, return, ;, }, v, ., visit, (]
[==, nextCol, ), {, Preconditions, ., checkState, (, false, ), ;, return, ;, }, v, ., visit, (, m, ,]
[), {, Preconditions, ., checkState, (, false, ), ;, return, ;, }, v, ., visit, (, m, ,, line, ,]
[Preconditions, ., checkState, (, false, ), ;, return, ;, }, v, ., visit, (, m, ,, line, ,, col, ,]
[checkState, (, false, ), ;, return, ;, }, v, ., visit, (, m, ,, line, ,, col, ,, nextLine, ,]
[), ;, return, ;, }, v, ., visit, (, m, ,, line, ,, col, ,, nextLine, ,, nextCol, ), ;]
[return, ;, }, v, ., visit, (, m, ,, line, ,, col, ,, nextLine, ,, nextCol, ), ;, line, =]
[}, v, ., visit, (, m, ,, line, ,, col, ,, nextLine, ,, nextCol, ), ;, line, =, nextLine, ;]
[., visit, (, m, ,, line, ,, col, ,, nextLine, ,, nextCol, ), ;, line, =, nextLine, ;, col, =]
[@, Override, public, void, appendIndexMapTo, (, Appendable, out, ,, String, name, ,, List, <, SourceMapSection, >, appSections, ), {, throw]
