[java, ., util, ., Set, ;, public, class, ClosureCodingConvention, extends, CodingConventions, ., Proxy, {, private, static, final, long, serialVersionUID, =]
[class, ClosureCodingConvention, extends, CodingConventions, ., Proxy, {, private, static, final, long, serialVersionUID, =, 1L, ;, static, final, DiagnosticType, OBJECTLIT_EXPECTED, =]
[class, ClosureCodingConvention, extends, CodingConventions, ., Proxy, {, private, static, final, long, serialVersionUID, =, 1L, ;, static, final, DiagnosticType, OBJECTLIT_EXPECTED, =]
[., Proxy, {, private, static, final, long, serialVersionUID, =, 1L, ;, static, final, DiagnosticType, OBJECTLIT_EXPECTED, =, DiagnosticType, ., warning, (]
[{, private, static, final, long, serialVersionUID, =, 1L, ;, static, final, DiagnosticType, OBJECTLIT_EXPECTED, =, DiagnosticType, ., warning, (, "JSC_REFLECT_OBJECTLIT_EXPECTED", ,]
["JSC_REFLECT_OBJECTLIT_EXPECTED", ,, "Object literal expected as second argument", ), ;, private, final, Set, <, String, >, indirectlyDeclaredProperties, ;, public, ClosureCodingConvention, (, ), {, this, (]
["JSC_REFLECT_OBJECTLIT_EXPECTED", ,, "Object literal expected as second argument", ), ;, private, final, Set, <, String, >, indirectlyDeclaredProperties, ;, public, ClosureCodingConvention, (, ), {, this, (]
[{, this, (, CodingConventions, ., getDefault, (, ), ), ;, }, public, ClosureCodingConvention, (, CodingConvention, wrapped, ), {, super, (]
[;, }, public, ClosureCodingConvention, (, CodingConvention, wrapped, ), {, super, (, wrapped, ), ;, Set, <, String, >, props, =]
[;, }, public, ClosureCodingConvention, (, CodingConvention, wrapped, ), {, super, (, wrapped, ), ;, Set, <, String, >, props, =]
[(, CodingConvention, wrapped, ), {, super, (, wrapped, ), ;, Set, <, String, >, props, =, Sets, ., newHashSet, (]
[wrapped, ), {, super, (, wrapped, ), ;, Set, <, String, >, props, =, Sets, ., newHashSet, (, "superClass_", ,]
[{, super, (, wrapped, ), ;, Set, <, String, >, props, =, Sets, ., newHashSet, (, "superClass_", ,, "instance_", ,]
[wrapped, ), ;, Set, <, String, >, props, =, Sets, ., newHashSet, (, "superClass_", ,, "instance_", ,, "getInstance", ), ;]
[wrapped, ), ;, Set, <, String, >, props, =, Sets, ., newHashSet, (, "superClass_", ,, "instance_", ,, "getInstance", ), ;]
[<, String, >, props, =, Sets, ., newHashSet, (, "superClass_", ,, "instance_", ,, "getInstance", ), ;, props, ., addAll, (]
[<, String, >, props, =, Sets, ., newHashSet, (, "superClass_", ,, "instance_", ,, "getInstance", ), ;, props, ., addAll, (]
[newHashSet, (, "superClass_", ,, "instance_", ,, "getInstance", ), ;, props, ., addAll, (, wrapped, ., getIndirectlyDeclaredProperties, (, ), ), ;]
["superClass_", ,, "instance_", ,, "getInstance", ), ;, props, ., addAll, (, wrapped, ., getIndirectlyDeclaredProperties, (, ), ), ;, indirectlyDeclaredProperties, =]
["superClass_", ,, "instance_", ,, "getInstance", ), ;, props, ., addAll, (, wrapped, ., getIndirectlyDeclaredProperties, (, ), ), ;, indirectlyDeclaredProperties, =]
["getInstance", ), ;, props, ., addAll, (, wrapped, ., getIndirectlyDeclaredProperties, (, ), ), ;, indirectlyDeclaredProperties, =, ImmutableSet, ., copyOf, (]
[props, ), ;, }, @, Override, public, void, applySubclassRelationship, (, FunctionType, parentCtor, ,, FunctionType, childCtor, ,, SubclassType, type, ), {]
[props, ), ;, }, @, Override, public, void, applySubclassRelationship, (, FunctionType, parentCtor, ,, FunctionType, childCtor, ,, SubclassType, type, ), {]
[@, Override, public, void, applySubclassRelationship, (, FunctionType, parentCtor, ,, FunctionType, childCtor, ,, SubclassType, type, ), {, super, ., applySubclassRelationship, (]
[public, void, applySubclassRelationship, (, FunctionType, parentCtor, ,, FunctionType, childCtor, ,, SubclassType, type, ), {, super, ., applySubclassRelationship, (, parentCtor, ,]
[applySubclassRelationship, (, FunctionType, parentCtor, ,, FunctionType, childCtor, ,, SubclassType, type, ), {, super, ., applySubclassRelationship, (, parentCtor, ,, childCtor, ,]
[FunctionType, childCtor, ,, SubclassType, type, ), {, super, ., applySubclassRelationship, (, parentCtor, ,, childCtor, ,, type, ), ;, if, (]
[FunctionType, childCtor, ,, SubclassType, type, ), {, super, ., applySubclassRelationship, (, parentCtor, ,, childCtor, ,, type, ), ;, if, (]
[,, SubclassType, type, ), {, super, ., applySubclassRelationship, (, parentCtor, ,, childCtor, ,, type, ), ;, if, (, type, ==]
[,, SubclassType, type, ), {, super, ., applySubclassRelationship, (, parentCtor, ,, childCtor, ,, type, ), ;, if, (, type, ==]
[super, ., applySubclassRelationship, (, parentCtor, ,, childCtor, ,, type, ), ;, if, (, type, ==, SubclassType, ., INHERITS, ), {]
[super, ., applySubclassRelationship, (, parentCtor, ,, childCtor, ,, type, ), ;, if, (, type, ==, SubclassType, ., INHERITS, ), {]
[parentCtor, ,, childCtor, ,, type, ), ;, if, (, type, ==, SubclassType, ., INHERITS, ), {, childCtor, ., defineDeclaredProperty, (]
[childCtor, ,, type, ), ;, if, (, type, ==, SubclassType, ., INHERITS, ), {, childCtor, ., defineDeclaredProperty, (, "superClass_", ,]
[childCtor, ,, type, ), ;, if, (, type, ==, SubclassType, ., INHERITS, ), {, childCtor, ., defineDeclaredProperty, (, "superClass_", ,]
[(, type, ==, SubclassType, ., INHERITS, ), {, childCtor, ., defineDeclaredProperty, (, "superClass_", ,, parentCtor, ., getPrototype, (, ), ,]
[(, type, ==, SubclassType, ., INHERITS, ), {, childCtor, ., defineDeclaredProperty, (, "superClass_", ,, parentCtor, ., getPrototype, (, ), ,]
[{, childCtor, ., defineDeclaredProperty, (, "superClass_", ,, parentCtor, ., getPrototype, (, ), ,, childCtor, ., getSource, (, ), ), ;]
[{, childCtor, ., defineDeclaredProperty, (, "superClass_", ,, parentCtor, ., getPrototype, (, ), ,, childCtor, ., getSource, (, ), ), ;]
[{, childCtor, ., defineDeclaredProperty, (, "superClass_", ,, parentCtor, ., getPrototype, (, ), ,, childCtor, ., getSource, (, ), ), ;]
[., getPrototype, (, ), ,, childCtor, ., getSource, (, ), ), ;, childCtor, ., getPrototype, (, ), ., defineDeclaredProperty, (]
[(, ), ,, childCtor, ., getSource, (, ), ), ;, childCtor, ., getPrototype, (, ), ., defineDeclaredProperty, (, "constructor", ,]
[(, ), ,, childCtor, ., getSource, (, ), ), ;, childCtor, ., getPrototype, (, ), ., defineDeclaredProperty, (, "constructor", ,]
[(, ), ), ;, childCtor, ., getPrototype, (, ), ., defineDeclaredProperty, (, "constructor", ,, childCtor, ., cloneWithoutArrowType, (, ), ,]
[(, ), ), ;, childCtor, ., getPrototype, (, ), ., defineDeclaredProperty, (, "constructor", ,, childCtor, ., cloneWithoutArrowType, (, ), ,]
[getSource, (, ), ), ;, }, }, @, Override, public, SubclassRelationship, getClassesDefinedByCall, (, Node, callNode, ), {, SubclassRelationship, relationship, =]
[getSource, (, ), ), ;, }, }, @, Override, public, SubclassRelationship, getClassesDefinedByCall, (, Node, callNode, ), {, SubclassRelationship, relationship, =]
[;, }, }, @, Override, public, SubclassRelationship, getClassesDefinedByCall, (, Node, callNode, ), {, SubclassRelationship, relationship, =, super, ., getClassesDefinedByCall, (]
[public, SubclassRelationship, getClassesDefinedByCall, (, Node, callNode, ), {, SubclassRelationship, relationship, =, super, ., getClassesDefinedByCall, (, callNode, ), ;, if, (]
[public, SubclassRelationship, getClassesDefinedByCall, (, Node, callNode, ), {, SubclassRelationship, relationship, =, super, ., getClassesDefinedByCall, (, callNode, ), ;, if, (]
[getClassesDefinedByCall, (, Node, callNode, ), {, SubclassRelationship, relationship, =, super, ., getClassesDefinedByCall, (, callNode, ), ;, if, (, relationship, !=]
[callNode, ), {, SubclassRelationship, relationship, =, super, ., getClassesDefinedByCall, (, callNode, ), ;, if, (, relationship, !=, null, ), return]
[=, super, ., getClassesDefinedByCall, (, callNode, ), ;, if, (, relationship, !=, null, ), return, relationship, ;, Node, callName, =]
[=, super, ., getClassesDefinedByCall, (, callNode, ), ;, if, (, relationship, !=, null, ), return, relationship, ;, Node, callName, =]
[(, relationship, !=, null, ), return, relationship, ;, Node, callName, =, callNode, ., getFirstChild, (, ), ;, SubclassType, type, =]
[!=, null, ), return, relationship, ;, Node, callName, =, callNode, ., getFirstChild, (, ), ;, SubclassType, type, =, typeofClassDefiningName, (]
[;, Node, callName, =, callNode, ., getFirstChild, (, ), ;, SubclassType, type, =, typeofClassDefiningName, (, callName, ), ;, if, (]
[;, Node, callName, =, callNode, ., getFirstChild, (, ), ;, SubclassType, type, =, typeofClassDefiningName, (, callName, ), ;, if, (]
[callName, =, callNode, ., getFirstChild, (, ), ;, SubclassType, type, =, typeofClassDefiningName, (, callName, ), ;, if, (, type, !=]
[), ;, SubclassType, type, =, typeofClassDefiningName, (, callName, ), ;, if, (, type, !=, null, ), {, Node, subclass, =]
[typeofClassDefiningName, (, callName, ), ;, if, (, type, !=, null, ), {, Node, subclass, =, null, ;, Node, superclass, =]
[typeofClassDefiningName, (, callName, ), ;, if, (, type, !=, null, ), {, Node, subclass, =, null, ;, Node, superclass, =]
[null, ), {, Node, subclass, =, null, ;, Node, superclass, =, callNode, ., getLastChild, (, ), ;, boolean, isDeprecatedCall, =]
[null, ), {, Node, subclass, =, null, ;, Node, superclass, =, callNode, ., getLastChild, (, ), ;, boolean, isDeprecatedCall, =]
[null, ), {, Node, subclass, =, null, ;, Node, superclass, =, callNode, ., getLastChild, (, ), ;, boolean, isDeprecatedCall, =]
[null, ), {, Node, subclass, =, null, ;, Node, superclass, =, callNode, ., getLastChild, (, ), ;, boolean, isDeprecatedCall, =]
[null, ;, Node, superclass, =, callNode, ., getLastChild, (, ), ;, boolean, isDeprecatedCall, =, callNode, ., getChildCount, (, ), ==]
[Node, superclass, =, callNode, ., getLastChild, (, ), ;, boolean, isDeprecatedCall, =, callNode, ., getChildCount, (, ), ==, 2, &&]
[Node, superclass, =, callNode, ., getLastChild, (, ), ;, boolean, isDeprecatedCall, =, callNode, ., getChildCount, (, ), ==, 2, &&]
[;, boolean, isDeprecatedCall, =, callNode, ., getChildCount, (, ), ==, 2, &&, callName, ., isGetProp, (, ), ;, if, (]
[=, callNode, ., getChildCount, (, ), ==, 2, &&, callName, ., isGetProp, (, ), ;, if, (, isDeprecatedCall, ), {]
[., getChildCount, (, ), ==, 2, &&, callName, ., isGetProp, (, ), ;, if, (, isDeprecatedCall, ), {, subclass, =]
[., getChildCount, (, ), ==, 2, &&, callName, ., isGetProp, (, ), ;, if, (, isDeprecatedCall, ), {, subclass, =]
[(, ), ;, if, (, isDeprecatedCall, ), {, subclass, =, callName, ., getFirstChild, (, ), ;, }, else, if, (]
[(, ), ;, if, (, isDeprecatedCall, ), {, subclass, =, callName, ., getFirstChild, (, ), ;, }, else, if, (]
[(, ), ;, if, (, isDeprecatedCall, ), {, subclass, =, callName, ., getFirstChild, (, ), ;, }, else, if, (]
[), {, subclass, =, callName, ., getFirstChild, (, ), ;, }, else, if, (, callNode, ., getChildCount, (, ), ==]
[=, callName, ., getFirstChild, (, ), ;, }, else, if, (, callNode, ., getChildCount, (, ), ==, 3, ), {]
[., getFirstChild, (, ), ;, }, else, if, (, callNode, ., getChildCount, (, ), ==, 3, ), {, subclass, =]
[., getFirstChild, (, ), ;, }, else, if, (, callNode, ., getChildCount, (, ), ==, 3, ), {, subclass, =]
[., getChildCount, (, ), ==, 3, ), {, subclass, =, callName, ., getNext, (, ), ;, }, else, {, return]
[3, ), {, subclass, =, callName, ., getNext, (, ), ;, }, else, {, return, null, ;, }, if, (]
[3, ), {, subclass, =, callName, ., getNext, (, ), ;, }, else, {, return, null, ;, }, if, (]
[{, subclass, =, callName, ., getNext, (, ), ;, }, else, {, return, null, ;, }, if, (, type, ==]
[{, subclass, =, callName, ., getNext, (, ), ;, }, else, {, return, null, ;, }, if, (, type, ==]
[), ;, }, else, {, return, null, ;, }, if, (, type, ==, SubclassType, ., MIXIN, ), {, if, (]
[;, }, else, {, return, null, ;, }, if, (, type, ==, SubclassType, ., MIXIN, ), {, if, (, !]
[else, {, return, null, ;, }, if, (, type, ==, SubclassType, ., MIXIN, ), {, if, (, !, endsWithPrototype, (]
[}, if, (, type, ==, SubclassType, ., MIXIN, ), {, if, (, !, endsWithPrototype, (, superclass, ), ), {, return]
[SubclassType, ., MIXIN, ), {, if, (, !, endsWithPrototype, (, superclass, ), ), {, return, null, ;, }, if, (]
[., MIXIN, ), {, if, (, !, endsWithPrototype, (, superclass, ), ), {, return, null, ;, }, if, (, !]
[(, !, endsWithPrototype, (, superclass, ), ), {, return, null, ;, }, if, (, !, isDeprecatedCall, ), {, if, (]
[!, endsWithPrototype, (, superclass, ), ), {, return, null, ;, }, if, (, !, isDeprecatedCall, ), {, if, (, !]
[(, superclass, ), ), {, return, null, ;, }, if, (, !, isDeprecatedCall, ), {, if, (, !, endsWithPrototype, (]
[return, null, ;, }, if, (, !, isDeprecatedCall, ), {, if, (, !, endsWithPrototype, (, subclass, ), ), {, return]
[}, if, (, !, isDeprecatedCall, ), {, if, (, !, endsWithPrototype, (, subclass, ), ), {, return, null, ;, }]
[(, !, isDeprecatedCall, ), {, if, (, !, endsWithPrototype, (, subclass, ), ), {, return, null, ;, }, subclass, =]
[(, !, isDeprecatedCall, ), {, if, (, !, endsWithPrototype, (, subclass, ), ), {, return, null, ;, }, subclass, =]
[!, endsWithPrototype, (, subclass, ), ), {, return, null, ;, }, subclass, =, subclass, ., getFirstChild, (, ), ;, }]
[(, subclass, ), ), {, return, null, ;, }, subclass, =, subclass, ., getFirstChild, (, ), ;, }, superclass, =]
[(, subclass, ), ), {, return, null, ;, }, subclass, =, subclass, ., getFirstChild, (, ), ;, }, superclass, =]
[subclass, =, subclass, ., getFirstChild, (, ), ;, }, superclass, =, superclass, ., getFirstChild, (, ), ;, }, if, (]
[subclass, =, subclass, ., getFirstChild, (, ), ;, }, superclass, =, superclass, ., getFirstChild, (, ), ;, }, if, (]
[subclass, =, subclass, ., getFirstChild, (, ), ;, }, superclass, =, superclass, ., getFirstChild, (, ), ;, }, if, (]
[subclass, =, subclass, ., getFirstChild, (, ), ;, }, superclass, =, superclass, ., getFirstChild, (, ), ;, }, if, (]
[subclass, ., getFirstChild, (, ), ;, }, superclass, =, superclass, ., getFirstChild, (, ), ;, }, if, (, subclass, !=]
[getFirstChild, (, ), ;, }, superclass, =, superclass, ., getFirstChild, (, ), ;, }, if, (, subclass, !=, null, &&]
[getFirstChild, (, ), ;, }, superclass, =, superclass, ., getFirstChild, (, ), ;, }, if, (, subclass, !=, null, &&]
[=, superclass, ., getFirstChild, (, ), ;, }, if, (, subclass, !=, null, &&, subclass, ., isUnscopedQualifiedName, (, ), &&]
[=, superclass, ., getFirstChild, (, ), ;, }, if, (, subclass, !=, null, &&, subclass, ., isUnscopedQualifiedName, (, ), &&]
[if, (, subclass, !=, null, &&, subclass, ., isUnscopedQualifiedName, (, ), &&, superclass, ., isUnscopedQualifiedName, (, ), ), {, return]
[!=, null, &&, subclass, ., isUnscopedQualifiedName, (, ), &&, superclass, ., isUnscopedQualifiedName, (, ), ), {, return, new, SubclassRelationship, (]
[&&, subclass, ., isUnscopedQualifiedName, (, ), &&, superclass, ., isUnscopedQualifiedName, (, ), ), {, return, new, SubclassRelationship, (, type, ,]
[., isUnscopedQualifiedName, (, ), &&, superclass, ., isUnscopedQualifiedName, (, ), ), {, return, new, SubclassRelationship, (, type, ,, subclass, ,]
[., isUnscopedQualifiedName, (, ), ), {, return, new, SubclassRelationship, (, type, ,, subclass, ,, superclass, ), ;, }, }, return]
[superclass, ), ;, }, }, return, null, ;, }, private, SubclassType, typeofClassDefiningName, (, Node, callName, ), {, String, methodName, =]
[}, return, null, ;, }, private, SubclassType, typeofClassDefiningName, (, Node, callName, ), {, String, methodName, =, null, ;, if, (]
[}, return, null, ;, }, private, SubclassType, typeofClassDefiningName, (, Node, callName, ), {, String, methodName, =, null, ;, if, (]
[typeofClassDefiningName, (, Node, callName, ), {, String, methodName, =, null, ;, if, (, callName, ., isGetProp, (, ), ), {]
[Node, callName, ), {, String, methodName, =, null, ;, if, (, callName, ., isGetProp, (, ), ), {, methodName, =]
[Node, callName, ), {, String, methodName, =, null, ;, if, (, callName, ., isGetProp, (, ), ), {, methodName, =]
[Node, callName, ), {, String, methodName, =, null, ;, if, (, callName, ., isGetProp, (, ), ), {, methodName, =]
[(, ), ), {, methodName, =, callName, ., getLastChild, (, ), ., getString, (, ), ;, }, else, if, (]
[(, ), ), {, methodName, =, callName, ., getLastChild, (, ), ., getString, (, ), ;, }, else, if, (]
[), ., getString, (, ), ;, }, else, if, (, callName, ., isName, (, ), ), {, String, name, =]
[), ., getString, (, ), ;, }, else, if, (, callName, ., isName, (, ), ), {, String, name, =]
[(, callName, ., isName, (, ), ), {, String, name, =, callName, ., getString, (, ), ;, int, dollarIndex, =]
[(, callName, ., isName, (, ), ), {, String, name, =, callName, ., getString, (, ), ;, int, dollarIndex, =]
[(, ), ), {, String, name, =, callName, ., getString, (, ), ;, int, dollarIndex, =, name, ., lastIndexOf, (]
[name, =, callName, ., getString, (, ), ;, int, dollarIndex, =, name, ., lastIndexOf, (, '$', ), ;, if, (]
[name, =, callName, ., getString, (, ), ;, int, dollarIndex, =, name, ., lastIndexOf, (, '$', ), ;, if, (]
[callName, ., getString, (, ), ;, int, dollarIndex, =, name, ., lastIndexOf, (, '$', ), ;, if, (, dollarIndex, !=]
[., getString, (, ), ;, int, dollarIndex, =, name, ., lastIndexOf, (, '$', ), ;, if, (, dollarIndex, !=, -]
[), ;, int, dollarIndex, =, name, ., lastIndexOf, (, '$', ), ;, if, (, dollarIndex, !=, -, 1, ), {]
[int, dollarIndex, =, name, ., lastIndexOf, (, '$', ), ;, if, (, dollarIndex, !=, -, 1, ), {, methodName, =]
[int, dollarIndex, =, name, ., lastIndexOf, (, '$', ), ;, if, (, dollarIndex, !=, -, 1, ), {, methodName, =]
[., lastIndexOf, (, '$', ), ;, if, (, dollarIndex, !=, -, 1, ), {, methodName, =, name, ., substring, (]
[., lastIndexOf, (, '$', ), ;, if, (, dollarIndex, !=, -, 1, ), {, methodName, =, name, ., substring, (]
[(, '$', ), ;, if, (, dollarIndex, !=, -, 1, ), {, methodName, =, name, ., substring, (, dollarIndex, +]
[!=, -, 1, ), {, methodName, =, name, ., substring, (, dollarIndex, +, 1, ), ;, }, }, if, (]
[!=, -, 1, ), {, methodName, =, name, ., substring, (, dollarIndex, +, 1, ), ;, }, }, if, (]
[1, ), {, methodName, =, name, ., substring, (, dollarIndex, +, 1, ), ;, }, }, if, (, methodName, !=]
[name, ., substring, (, dollarIndex, +, 1, ), ;, }, }, if, (, methodName, !=, null, ), {, if, (]
[name, ., substring, (, dollarIndex, +, 1, ), ;, }, }, if, (, methodName, !=, null, ), {, if, (]
[dollarIndex, +, 1, ), ;, }, }, if, (, methodName, !=, null, ), {, if, (, methodName, ., equals, (]
[}, }, if, (, methodName, !=, null, ), {, if, (, methodName, ., equals, (, "inherits", ), ), {, return]
[}, }, if, (, methodName, !=, null, ), {, if, (, methodName, ., equals, (, "inherits", ), ), {, return]
[{, if, (, methodName, ., equals, (, "inherits", ), ), {, return, SubclassType, ., INHERITS, ;, }, else, if, (]
[{, if, (, methodName, ., equals, (, "inherits", ), ), {, return, SubclassType, ., INHERITS, ;, }, else, if, (]
[., equals, (, "inherits", ), ), {, return, SubclassType, ., INHERITS, ;, }, else, if, (, methodName, ., equals, (]
[), {, return, SubclassType, ., INHERITS, ;, }, else, if, (, methodName, ., equals, (, "mixin", ), ), {, return]
[), {, return, SubclassType, ., INHERITS, ;, }, else, if, (, methodName, ., equals, (, "mixin", ), ), {, return]
[}, else, if, (, methodName, ., equals, (, "mixin", ), ), {, return, SubclassType, ., MIXIN, ;, }, }, return]
[., MIXIN, ;, }, }, return, null, ;, }, @, Override, public, boolean, isSuperClassReference, (, String, propertyName, ), {, return]
[., MIXIN, ;, }, }, return, null, ;, }, @, Override, public, boolean, isSuperClassReference, (, String, propertyName, ), {, return]
[., MIXIN, ;, }, }, return, null, ;, }, @, Override, public, boolean, isSuperClassReference, (, String, propertyName, ), {, return]
[}, return, null, ;, }, @, Override, public, boolean, isSuperClassReference, (, String, propertyName, ), {, return, "superClass_", ., equals, (]
[;, }, @, Override, public, boolean, isSuperClassReference, (, String, propertyName, ), {, return, "superClass_", ., equals, (, propertyName, ), ||]
[;, }, @, Override, public, boolean, isSuperClassReference, (, String, propertyName, ), {, return, "superClass_", ., equals, (, propertyName, ), ||]
[public, boolean, isSuperClassReference, (, String, propertyName, ), {, return, "superClass_", ., equals, (, propertyName, ), ||, super, ., isSuperClassReference, (]
[propertyName, ), ||, super, ., isSuperClassReference, (, propertyName, ), ;, }, private, boolean, endsWithPrototype, (, Node, qualifiedName, ), {, return]
[propertyName, ), ||, super, ., isSuperClassReference, (, propertyName, ), ;, }, private, boolean, endsWithPrototype, (, Node, qualifiedName, ), {, return]
[propertyName, ), ||, super, ., isSuperClassReference, (, propertyName, ), ;, }, private, boolean, endsWithPrototype, (, Node, qualifiedName, ), {, return]
[(, propertyName, ), ;, }, private, boolean, endsWithPrototype, (, Node, qualifiedName, ), {, return, qualifiedName, ., isGetProp, (, ), &&]
[(, propertyName, ), ;, }, private, boolean, endsWithPrototype, (, Node, qualifiedName, ), {, return, qualifiedName, ., isGetProp, (, ), &&]
[(, propertyName, ), ;, }, private, boolean, endsWithPrototype, (, Node, qualifiedName, ), {, return, qualifiedName, ., isGetProp, (, ), &&]
[(, propertyName, ), ;, }, private, boolean, endsWithPrototype, (, Node, qualifiedName, ), {, return, qualifiedName, ., isGetProp, (, ), &&]
[{, return, qualifiedName, ., isGetProp, (, ), &&, qualifiedName, ., getLastChild, (, ), ., getString, (, ), ., equals, (]
[equals, (, "prototype", ), ;, }, @, Override, public, String, extractClassNameIfProvide, (, Node, node, ,, Node, parent, ), {, return]
["prototype", ), ;, }, @, Override, public, String, extractClassNameIfProvide, (, Node, node, ,, Node, parent, ), {, return, extractClassNameIfGoog, (]
[;, }, @, Override, public, String, extractClassNameIfProvide, (, Node, node, ,, Node, parent, ), {, return, extractClassNameIfGoog, (, node, ,]
[@, Override, public, String, extractClassNameIfProvide, (, Node, node, ,, Node, parent, ), {, return, extractClassNameIfGoog, (, node, ,, parent, ,]
[parent, ,, "goog.provide", ), ;, }, @, Override, public, String, extractClassNameIfRequire, (, Node, node, ,, Node, parent, ), {, return]
["goog.provide", ), ;, }, @, Override, public, String, extractClassNameIfRequire, (, Node, node, ,, Node, parent, ), {, return, extractClassNameIfGoog, (]
[;, }, @, Override, public, String, extractClassNameIfRequire, (, Node, node, ,, Node, parent, ), {, return, extractClassNameIfGoog, (, node, ,]
[@, Override, public, String, extractClassNameIfRequire, (, Node, node, ,, Node, parent, ), {, return, extractClassNameIfGoog, (, node, ,, parent, ,]
[;, }, private, static, String, extractClassNameIfGoog, (, Node, node, ,, Node, parent, ,, String, functionName, ), {, String, className, =]
[String, extractClassNameIfGoog, (, Node, node, ,, Node, parent, ,, String, functionName, ), {, String, className, =, null, ;, if, (]
[String, extractClassNameIfGoog, (, Node, node, ,, Node, parent, ,, String, functionName, ), {, String, className, =, null, ;, if, (]
[node, ,, Node, parent, ,, String, functionName, ), {, String, className, =, null, ;, if, (, NodeUtil, ., isExprCall, (]
[), {, String, className, =, null, ;, if, (, NodeUtil, ., isExprCall, (, parent, ), ), {, Node, callee, =]
[), {, String, className, =, null, ;, if, (, NodeUtil, ., isExprCall, (, parent, ), ), {, Node, callee, =]
[(, NodeUtil, ., isExprCall, (, parent, ), ), {, Node, callee, =, node, ., getFirstChild, (, ), ;, if, (]
[(, NodeUtil, ., isExprCall, (, parent, ), ), {, Node, callee, =, node, ., getFirstChild, (, ), ;, if, (]
[(, NodeUtil, ., isExprCall, (, parent, ), ), {, Node, callee, =, node, ., getFirstChild, (, ), ;, if, (]
[., isExprCall, (, parent, ), ), {, Node, callee, =, node, ., getFirstChild, (, ), ;, if, (, callee, !=]
[(, parent, ), ), {, Node, callee, =, node, ., getFirstChild, (, ), ;, if, (, callee, !=, null, &&]
[(, parent, ), ), {, Node, callee, =, node, ., getFirstChild, (, ), ;, if, (, callee, !=, null, &&]
[getFirstChild, (, ), ;, if, (, callee, !=, null, &&, callee, ., isGetProp, (, ), ), {, String, qualifiedName, =]
[getFirstChild, (, ), ;, if, (, callee, !=, null, &&, callee, ., isGetProp, (, ), ), {, String, qualifiedName, =]
[null, &&, callee, ., isGetProp, (, ), ), {, String, qualifiedName, =, callee, ., getQualifiedName, (, ), ;, if, (]
[null, &&, callee, ., isGetProp, (, ), ), {, String, qualifiedName, =, callee, ., getQualifiedName, (, ), ;, if, (]
[isGetProp, (, ), ), {, String, qualifiedName, =, callee, ., getQualifiedName, (, ), ;, if, (, functionName, ., equals, (]
[=, callee, ., getQualifiedName, (, ), ;, if, (, functionName, ., equals, (, qualifiedName, ), ), {, Node, target, =]
[=, callee, ., getQualifiedName, (, ), ;, if, (, functionName, ., equals, (, qualifiedName, ), ), {, Node, target, =]
[(, functionName, ., equals, (, qualifiedName, ), ), {, Node, target, =, callee, ., getNext, (, ), ;, if, (]
[(, functionName, ., equals, (, qualifiedName, ), ), {, Node, target, =, callee, ., getNext, (, ), ;, if, (]
[(, functionName, ., equals, (, qualifiedName, ), ), {, Node, target, =, callee, ., getNext, (, ), ;, if, (]
[., equals, (, qualifiedName, ), ), {, Node, target, =, callee, ., getNext, (, ), ;, if, (, target, !=]
[(, qualifiedName, ), ), {, Node, target, =, callee, ., getNext, (, ), ;, if, (, target, !=, null, &&]
[(, qualifiedName, ), ), {, Node, target, =, callee, ., getNext, (, ), ;, if, (, target, !=, null, &&]
[=, callee, ., getNext, (, ), ;, if, (, target, !=, null, &&, target, ., isString, (, ), ), {]
[., getNext, (, ), ;, if, (, target, !=, null, &&, target, ., isString, (, ), ), {, className, =]
[., getNext, (, ), ;, if, (, target, !=, null, &&, target, ., isString, (, ), ), {, className, =]
[target, ., isString, (, ), ), {, className, =, target, ., getString, (, ), ;, }, }, }, }, return]
[(, ), ;, }, }, }, }, return, className, ;, }, @, Override, public, String, getExportPropertyFunction, (, ), {, return]
[Override, public, String, getExportPropertyFunction, (, ), {, return, "goog.exportProperty", ;, }, @, Override, public, String, getExportSymbolFunction, (, ), {, return]
[return, "goog.exportSymbol", ;, }, @, Override, public, List, <, String, >, identifyTypeDeclarationCall, (, Node, n, ), {, Node, callName, =]
[return, "goog.exportSymbol", ;, }, @, Override, public, List, <, String, >, identifyTypeDeclarationCall, (, Node, n, ), {, Node, callName, =]
[<, String, >, identifyTypeDeclarationCall, (, Node, n, ), {, Node, callName, =, n, ., getFirstChild, (, ), ;, if, (]
[<, String, >, identifyTypeDeclarationCall, (, Node, n, ), {, Node, callName, =, n, ., getFirstChild, (, ), ;, if, (]
[<, String, >, identifyTypeDeclarationCall, (, Node, n, ), {, Node, callName, =, n, ., getFirstChild, (, ), ;, if, (]
[(, Node, n, ), {, Node, callName, =, n, ., getFirstChild, (, ), ;, if, (, "goog.addDependency", ., equals, (]
[(, Node, n, ), {, Node, callName, =, n, ., getFirstChild, (, ), ;, if, (, "goog.addDependency", ., equals, (]
[=, n, ., getFirstChild, (, ), ;, if, (, "goog.addDependency", ., equals, (, callName, ., getQualifiedName, (, ), ), &&]
[=, n, ., getFirstChild, (, ), ;, if, (, "goog.addDependency", ., equals, (, callName, ., getQualifiedName, (, ), ), &&]
[=, n, ., getFirstChild, (, ), ;, if, (, "goog.addDependency", ., equals, (, callName, ., getQualifiedName, (, ), ), &&]
[;, if, (, "goog.addDependency", ., equals, (, callName, ., getQualifiedName, (, ), ), &&, n, ., getChildCount, (, ), >=]
[(, callName, ., getQualifiedName, (, ), ), &&, n, ., getChildCount, (, ), >=, 3, ), {, Node, typeArray, =]
[(, callName, ., getQualifiedName, (, ), ), &&, n, ., getChildCount, (, ), >=, 3, ), {, Node, typeArray, =]
[(, callName, ., getQualifiedName, (, ), ), &&, n, ., getChildCount, (, ), >=, 3, ), {, Node, typeArray, =]
[), >=, 3, ), {, Node, typeArray, =, callName, ., getNext, (, ), ., getNext, (, ), ;, if, (]
[), >=, 3, ), {, Node, typeArray, =, callName, ., getNext, (, ), ., getNext, (, ), ;, if, (]
[., getNext, (, ), ;, if, (, typeArray, ., isArrayLit, (, ), ), {, List, <, String, >, typeNames, =]
[., getNext, (, ), ;, if, (, typeArray, ., isArrayLit, (, ), ), {, List, <, String, >, typeNames, =]
[), ), {, List, <, String, >, typeNames, =, Lists, ., newArrayList, (, ), ;, for, (, Node, name, =]
[), ), {, List, <, String, >, typeNames, =, Lists, ., newArrayList, (, ), ;, for, (, Node, name, =]
[>, typeNames, =, Lists, ., newArrayList, (, ), ;, for, (, Node, name, =, typeArray, ., getFirstChild, (, ), ;]
[>, typeNames, =, Lists, ., newArrayList, (, ), ;, for, (, Node, name, =, typeArray, ., getFirstChild, (, ), ;]
[=, Lists, ., newArrayList, (, ), ;, for, (, Node, name, =, typeArray, ., getFirstChild, (, ), ;, name, !=]
[., newArrayList, (, ), ;, for, (, Node, name, =, typeArray, ., getFirstChild, (, ), ;, name, !=, null, ;]
[(, ), ;, for, (, Node, name, =, typeArray, ., getFirstChild, (, ), ;, name, !=, null, ;, name, =]
[(, ), ;, for, (, Node, name, =, typeArray, ., getFirstChild, (, ), ;, name, !=, null, ;, name, =]
[., getFirstChild, (, ), ;, name, !=, null, ;, name, =, name, ., getNext, (, ), ), {, if, (]
[., getFirstChild, (, ), ;, name, !=, null, ;, name, =, name, ., getNext, (, ), ), {, if, (]
[null, ;, name, =, name, ., getNext, (, ), ), {, if, (, name, ., isString, (, ), ), {]
[null, ;, name, =, name, ., getNext, (, ), ), {, if, (, name, ., isString, (, ), ), {]
[name, ., getNext, (, ), ), {, if, (, name, ., isString, (, ), ), {, typeNames, ., add, (]
[name, ., getNext, (, ), ), {, if, (, name, ., isString, (, ), ), {, typeNames, ., add, (]
[., isString, (, ), ), {, typeNames, ., add, (, name, ., getString, (, ), ), ;, }, }, return]
[{, typeNames, ., add, (, name, ., getString, (, ), ), ;, }, }, return, typeNames, ;, }, }, return]
[{, typeNames, ., add, (, name, ., getString, (, ), ), ;, }, }, return, typeNames, ;, }, }, return]
[(, name, ., getString, (, ), ), ;, }, }, return, typeNames, ;, }, }, return, super, ., identifyTypeDeclarationCall, (]
[}, }, return, super, ., identifyTypeDeclarationCall, (, n, ), ;, }, @, Override, public, String, getAbstractMethodName, (, ), {, return]
[(, ), {, return, "goog.abstractMethod", ;, }, @, Override, public, String, getSingletonGetterClassName, (, Node, callNode, ), {, Node, callArg, =]
[(, ), {, return, "goog.abstractMethod", ;, }, @, Override, public, String, getSingletonGetterClassName, (, Node, callNode, ), {, Node, callArg, =]
[public, String, getSingletonGetterClassName, (, Node, callNode, ), {, Node, callArg, =, callNode, ., getFirstChild, (, ), ;, String, callName, =]
[public, String, getSingletonGetterClassName, (, Node, callNode, ), {, Node, callArg, =, callNode, ., getFirstChild, (, ), ;, String, callName, =]
[Node, callArg, =, callNode, ., getFirstChild, (, ), ;, String, callName, =, callArg, ., getQualifiedName, (, ), ;, if, (]
[Node, callArg, =, callNode, ., getFirstChild, (, ), ;, String, callName, =, callArg, ., getQualifiedName, (, ), ;, if, (]
[callArg, =, callNode, ., getFirstChild, (, ), ;, String, callName, =, callArg, ., getQualifiedName, (, ), ;, if, (, !]
[=, callNode, ., getFirstChild, (, ), ;, String, callName, =, callArg, ., getQualifiedName, (, ), ;, if, (, !, (]
[=, callNode, ., getFirstChild, (, ), ;, String, callName, =, callArg, ., getQualifiedName, (, ), ;, if, (, !, (]
[=, callNode, ., getFirstChild, (, ), ;, String, callName, =, callArg, ., getQualifiedName, (, ), ;, if, (, !, (]
[(, ), ;, String, callName, =, callArg, ., getQualifiedName, (, ), ;, if, (, !, (, "goog.addSingletonGetter", ., equals, (]
[String, callName, =, callArg, ., getQualifiedName, (, ), ;, if, (, !, (, "goog.addSingletonGetter", ., equals, (, callName, ), ||]
[String, callName, =, callArg, ., getQualifiedName, (, ), ;, if, (, !, (, "goog.addSingletonGetter", ., equals, (, callName, ), ||]
[., getQualifiedName, (, ), ;, if, (, !, (, "goog.addSingletonGetter", ., equals, (, callName, ), ||, "goog$addSingletonGetter", ., equals, (]
[;, if, (, !, (, "goog.addSingletonGetter", ., equals, (, callName, ), ||, "goog$addSingletonGetter", ., equals, (, callName, ), ), ||]
[;, if, (, !, (, "goog.addSingletonGetter", ., equals, (, callName, ), ||, "goog$addSingletonGetter", ., equals, (, callName, ), ), ||]
[;, if, (, !, (, "goog.addSingletonGetter", ., equals, (, callName, ), ||, "goog$addSingletonGetter", ., equals, (, callName, ), ), ||]
[., equals, (, callName, ), ||, "goog$addSingletonGetter", ., equals, (, callName, ), ), ||, callNode, ., getChildCount, (, ), !=]
[), ||, "goog$addSingletonGetter", ., equals, (, callName, ), ), ||, callNode, ., getChildCount, (, ), !=, 2, ), {, return]
[), ||, "goog$addSingletonGetter", ., equals, (, callName, ), ), ||, callNode, ., getChildCount, (, ), !=, 2, ), {, return]
[equals, (, callName, ), ), ||, callNode, ., getChildCount, (, ), !=, 2, ), {, return, super, ., getSingletonGetterClassName, (]
[||, callNode, ., getChildCount, (, ), !=, 2, ), {, return, super, ., getSingletonGetterClassName, (, callNode, ), ;, }, return]
[||, callNode, ., getChildCount, (, ), !=, 2, ), {, return, super, ., getSingletonGetterClassName, (, callNode, ), ;, }, return]
[||, callNode, ., getChildCount, (, ), !=, 2, ), {, return, super, ., getSingletonGetterClassName, (, callNode, ), ;, }, return]
[(, ), ;, }, @, Override, public, void, applySingletonGetter, (, FunctionType, functionType, ,, FunctionType, getterType, ,, ObjectType, objectType, ), {]
[(, ), ;, }, @, Override, public, void, applySingletonGetter, (, FunctionType, functionType, ,, FunctionType, getterType, ,, ObjectType, objectType, ), {]
[@, Override, public, void, applySingletonGetter, (, FunctionType, functionType, ,, FunctionType, getterType, ,, ObjectType, objectType, ), {, super, ., applySingletonGetter, (]
[public, void, applySingletonGetter, (, FunctionType, functionType, ,, FunctionType, getterType, ,, ObjectType, objectType, ), {, super, ., applySingletonGetter, (, functionType, ,]
[applySingletonGetter, (, FunctionType, functionType, ,, FunctionType, getterType, ,, ObjectType, objectType, ), {, super, ., applySingletonGetter, (, functionType, ,, getterType, ,]
[functionType, ,, FunctionType, getterType, ,, ObjectType, objectType, ), {, super, ., applySingletonGetter, (, functionType, ,, getterType, ,, objectType, ), ;]
[functionType, ,, FunctionType, getterType, ,, ObjectType, objectType, ), {, super, ., applySingletonGetter, (, functionType, ,, getterType, ,, objectType, ), ;]
[,, ObjectType, objectType, ), {, super, ., applySingletonGetter, (, functionType, ,, getterType, ,, objectType, ), ;, functionType, ., defineDeclaredProperty, (]
[objectType, ), {, super, ., applySingletonGetter, (, functionType, ,, getterType, ,, objectType, ), ;, functionType, ., defineDeclaredProperty, (, "getInstance", ,]
[{, super, ., applySingletonGetter, (, functionType, ,, getterType, ,, objectType, ), ;, functionType, ., defineDeclaredProperty, (, "getInstance", ,, getterType, ,]
[{, super, ., applySingletonGetter, (, functionType, ,, getterType, ,, objectType, ), ;, functionType, ., defineDeclaredProperty, (, "getInstance", ,, getterType, ,]
[getterType, ,, objectType, ), ;, functionType, ., defineDeclaredProperty, (, "getInstance", ,, getterType, ,, functionType, ., getSource, (, ), ), ;]
[getterType, ,, objectType, ), ;, functionType, ., defineDeclaredProperty, (, "getInstance", ,, getterType, ,, functionType, ., getSource, (, ), ), ;]
[;, functionType, ., defineDeclaredProperty, (, "getInstance", ,, getterType, ,, functionType, ., getSource, (, ), ), ;, functionType, ., defineDeclaredProperty, (]
[., defineDeclaredProperty, (, "getInstance", ,, getterType, ,, functionType, ., getSource, (, ), ), ;, functionType, ., defineDeclaredProperty, (, "instance_", ,]
[(, "getInstance", ,, getterType, ,, functionType, ., getSource, (, ), ), ;, functionType, ., defineDeclaredProperty, (, "instance_", ,, objectType, ,]
[(, "getInstance", ,, getterType, ,, functionType, ., getSource, (, ), ), ;, functionType, ., defineDeclaredProperty, (, "instance_", ,, objectType, ,]
[,, objectType, ,, functionType, ., getSource, (, ), ), ;, }, @, Override, public, String, getGlobalObject, (, ), {, return]
[@, Override, public, String, getGlobalObject, (, ), {, return, "goog.global", ;, }, private, final, Set, <, String, >, propertyTestFunctions, =]
[@, Override, public, String, getGlobalObject, (, ), {, return, "goog.global", ;, }, private, final, Set, <, String, >, propertyTestFunctions, =]
[getGlobalObject, (, ), {, return, "goog.global", ;, }, private, final, Set, <, String, >, propertyTestFunctions, =, ImmutableSet, ., of, (]
[), {, return, "goog.global", ;, }, private, final, Set, <, String, >, propertyTestFunctions, =, ImmutableSet, ., of, (, "goog.isDef", ,]
[return, "goog.global", ;, }, private, final, Set, <, String, >, propertyTestFunctions, =, ImmutableSet, ., of, (, "goog.isDef", ,, "goog.isNull", ,]
[;, }, private, final, Set, <, String, >, propertyTestFunctions, =, ImmutableSet, ., of, (, "goog.isDef", ,, "goog.isNull", ,, "goog.isDefAndNotNull", ,]
[private, final, Set, <, String, >, propertyTestFunctions, =, ImmutableSet, ., of, (, "goog.isDef", ,, "goog.isNull", ,, "goog.isDefAndNotNull", ,, "goog.isString", ,]
[Set, <, String, >, propertyTestFunctions, =, ImmutableSet, ., of, (, "goog.isDef", ,, "goog.isNull", ,, "goog.isDefAndNotNull", ,, "goog.isString", ,, "goog.isNumber", ,]
[String, >, propertyTestFunctions, =, ImmutableSet, ., of, (, "goog.isDef", ,, "goog.isNull", ,, "goog.isDefAndNotNull", ,, "goog.isString", ,, "goog.isNumber", ,, "goog.isBoolean", ,]
[propertyTestFunctions, =, ImmutableSet, ., of, (, "goog.isDef", ,, "goog.isNull", ,, "goog.isDefAndNotNull", ,, "goog.isString", ,, "goog.isNumber", ,, "goog.isBoolean", ,, "goog.isFunction", ,]
[ImmutableSet, ., of, (, "goog.isDef", ,, "goog.isNull", ,, "goog.isDefAndNotNull", ,, "goog.isString", ,, "goog.isNumber", ,, "goog.isBoolean", ,, "goog.isFunction", ,, "goog.isArray", ,]
[,, "goog.isBoolean", ,, "goog.isFunction", ,, "goog.isArray", ,, "goog.isObject", ), ;, @, Override, public, boolean, isPropertyTestFunction, (, Node, call, ), {]
[,, "goog.isBoolean", ,, "goog.isFunction", ,, "goog.isArray", ,, "goog.isObject", ), ;, @, Override, public, boolean, isPropertyTestFunction, (, Node, call, ), {]
[,, "goog.isArray", ,, "goog.isObject", ), ;, @, Override, public, boolean, isPropertyTestFunction, (, Node, call, ), {, Preconditions, ., checkArgument, (]
[,, "goog.isArray", ,, "goog.isObject", ), ;, @, Override, public, boolean, isPropertyTestFunction, (, Node, call, ), {, Preconditions, ., checkArgument, (]
[public, boolean, isPropertyTestFunction, (, Node, call, ), {, Preconditions, ., checkArgument, (, call, ., isCall, (, ), ), ;, return]
[public, boolean, isPropertyTestFunction, (, Node, call, ), {, Preconditions, ., checkArgument, (, call, ., isCall, (, ), ), ;, return]
[public, boolean, isPropertyTestFunction, (, Node, call, ), {, Preconditions, ., checkArgument, (, call, ., isCall, (, ), ), ;, return]
[Node, call, ), {, Preconditions, ., checkArgument, (, call, ., isCall, (, ), ), ;, return, propertyTestFunctions, ., contains, (]
[Node, call, ), {, Preconditions, ., checkArgument, (, call, ., isCall, (, ), ), ;, return, propertyTestFunctions, ., contains, (]
[Node, call, ), {, Preconditions, ., checkArgument, (, call, ., isCall, (, ), ), ;, return, propertyTestFunctions, ., contains, (]
[(, ), ), ;, return, propertyTestFunctions, ., contains, (, call, ., getFirstChild, (, ), ., getQualifiedName, (, ), ), ||]
[(, ), ), ;, return, propertyTestFunctions, ., contains, (, call, ., getFirstChild, (, ), ., getQualifiedName, (, ), ), ||]
[return, propertyTestFunctions, ., contains, (, call, ., getFirstChild, (, ), ., getQualifiedName, (, ), ), ||, super, ., isPropertyTestFunction, (]
[), ||, super, ., isPropertyTestFunction, (, call, ), ;, }, @, Override, public, ObjectLiteralCast, getObjectLiteralCast, (, Node, callNode, ), {]
[), ||, super, ., isPropertyTestFunction, (, call, ), ;, }, @, Override, public, ObjectLiteralCast, getObjectLiteralCast, (, Node, callNode, ), {]
[isPropertyTestFunction, (, call, ), ;, }, @, Override, public, ObjectLiteralCast, getObjectLiteralCast, (, Node, callNode, ), {, Preconditions, ., checkArgument, (]
[isPropertyTestFunction, (, call, ), ;, }, @, Override, public, ObjectLiteralCast, getObjectLiteralCast, (, Node, callNode, ), {, Preconditions, ., checkArgument, (]
[getObjectLiteralCast, (, Node, callNode, ), {, Preconditions, ., checkArgument, (, callNode, ., isCall, (, ), ), ;, ObjectLiteralCast, proxyCast, =]
[getObjectLiteralCast, (, Node, callNode, ), {, Preconditions, ., checkArgument, (, callNode, ., isCall, (, ), ), ;, ObjectLiteralCast, proxyCast, =]
[), {, Preconditions, ., checkArgument, (, callNode, ., isCall, (, ), ), ;, ObjectLiteralCast, proxyCast, =, super, ., getObjectLiteralCast, (]
[(, callNode, ., isCall, (, ), ), ;, ObjectLiteralCast, proxyCast, =, super, ., getObjectLiteralCast, (, callNode, ), ;, if, (]
[(, callNode, ., isCall, (, ), ), ;, ObjectLiteralCast, proxyCast, =, super, ., getObjectLiteralCast, (, callNode, ), ;, if, (]
[., isCall, (, ), ), ;, ObjectLiteralCast, proxyCast, =, super, ., getObjectLiteralCast, (, callNode, ), ;, if, (, proxyCast, !=]
[), ;, ObjectLiteralCast, proxyCast, =, super, ., getObjectLiteralCast, (, callNode, ), ;, if, (, proxyCast, !=, null, ), {, return]
[., getObjectLiteralCast, (, callNode, ), ;, if, (, proxyCast, !=, null, ), {, return, proxyCast, ;, }, Node, callName, =]
[., getObjectLiteralCast, (, callNode, ), ;, if, (, proxyCast, !=, null, ), {, return, proxyCast, ;, }, Node, callName, =]
[proxyCast, !=, null, ), {, return, proxyCast, ;, }, Node, callName, =, callNode, ., getFirstChild, (, ), ;, if, (]
[proxyCast, !=, null, ), {, return, proxyCast, ;, }, Node, callName, =, callNode, ., getFirstChild, (, ), ;, if, (]
[!=, null, ), {, return, proxyCast, ;, }, Node, callName, =, callNode, ., getFirstChild, (, ), ;, if, (, !]
[!=, null, ), {, return, proxyCast, ;, }, Node, callName, =, callNode, ., getFirstChild, (, ), ;, if, (, !]
[return, proxyCast, ;, }, Node, callName, =, callNode, ., getFirstChild, (, ), ;, if, (, !, "goog.reflect.object", ., equals, (]
[return, proxyCast, ;, }, Node, callName, =, callNode, ., getFirstChild, (, ), ;, if, (, !, "goog.reflect.object", ., equals, (]
[callNode, ., getFirstChild, (, ), ;, if, (, !, "goog.reflect.object", ., equals, (, callName, ., getQualifiedName, (, ), ), ||]
[callNode, ., getFirstChild, (, ), ;, if, (, !, "goog.reflect.object", ., equals, (, callName, ., getQualifiedName, (, ), ), ||]
[callNode, ., getFirstChild, (, ), ;, if, (, !, "goog.reflect.object", ., equals, (, callName, ., getQualifiedName, (, ), ), ||]
[if, (, !, "goog.reflect.object", ., equals, (, callName, ., getQualifiedName, (, ), ), ||, callNode, ., getChildCount, (, ), !=]
[., equals, (, callName, ., getQualifiedName, (, ), ), ||, callNode, ., getChildCount, (, ), !=, 3, ), {, return]
[(, ), ), ||, callNode, ., getChildCount, (, ), !=, 3, ), {, return, null, ;, }, Node, typeNode, =]
[(, ), ), ||, callNode, ., getChildCount, (, ), !=, 3, ), {, return, null, ;, }, Node, typeNode, =]
[), !=, 3, ), {, return, null, ;, }, Node, typeNode, =, callName, ., getNext, (, ), ;, if, (]
[!=, 3, ), {, return, null, ;, }, Node, typeNode, =, callName, ., getNext, (, ), ;, if, (, !]
[!=, 3, ), {, return, null, ;, }, Node, typeNode, =, callName, ., getNext, (, ), ;, if, (, !]
[Node, typeNode, =, callName, ., getNext, (, ), ;, if, (, !, typeNode, ., isQualifiedName, (, ), ), {, return]
[(, ), ;, if, (, !, typeNode, ., isQualifiedName, (, ), ), {, return, null, ;, }, Node, objectNode, =]
[(, ), ;, if, (, !, typeNode, ., isQualifiedName, (, ), ), {, return, null, ;, }, Node, objectNode, =]
[isQualifiedName, (, ), ), {, return, null, ;, }, Node, objectNode, =, typeNode, ., getNext, (, ), ;, if, (]
[(, ), ), {, return, null, ;, }, Node, objectNode, =, typeNode, ., getNext, (, ), ;, if, (, !]
[(, ), ), {, return, null, ;, }, Node, objectNode, =, typeNode, ., getNext, (, ), ;, if, (, !]
[Node, objectNode, =, typeNode, ., getNext, (, ), ;, if, (, !, objectNode, ., isObjectLit, (, ), ), {, return]
[typeNode, ., getNext, (, ), ;, if, (, !, objectNode, ., isObjectLit, (, ), ), {, return, new, ObjectLiteralCast, (]
[getNext, (, ), ;, if, (, !, objectNode, ., isObjectLit, (, ), ), {, return, new, ObjectLiteralCast, (, null, ,]
[), ;, if, (, !, objectNode, ., isObjectLit, (, ), ), {, return, new, ObjectLiteralCast, (, null, ,, null, ,]
[objectNode, ., isObjectLit, (, ), ), {, return, new, ObjectLiteralCast, (, null, ,, null, ,, OBJECTLIT_EXPECTED, ), ;, }, return]
[(, ), ), {, return, new, ObjectLiteralCast, (, null, ,, null, ,, OBJECTLIT_EXPECTED, ), ;, }, return, new, ObjectLiteralCast, (]
[(, ), ), {, return, new, ObjectLiteralCast, (, null, ,, null, ,, OBJECTLIT_EXPECTED, ), ;, }, return, new, ObjectLiteralCast, (]
[ObjectLiteralCast, (, null, ,, null, ,, OBJECTLIT_EXPECTED, ), ;, }, return, new, ObjectLiteralCast, (, typeNode, ., getQualifiedName, (, ), ,]
[ObjectLiteralCast, (, null, ,, null, ,, OBJECTLIT_EXPECTED, ), ;, }, return, new, ObjectLiteralCast, (, typeNode, ., getQualifiedName, (, ), ,]
[OBJECTLIT_EXPECTED, ), ;, }, return, new, ObjectLiteralCast, (, typeNode, ., getQualifiedName, (, ), ,, typeNode, ., getNext, (, ), ,]
[., getNext, (, ), ,, null, ), ;, }, @, Override, public, boolean, isOptionalParameter, (, Node, parameter, ), {, return]
[(, Node, parameter, ), {, return, false, ;, }, @, Override, public, boolean, isVarArgsParameter, (, Node, parameter, ), {, return]
[(, Node, parameter, ), {, return, false, ;, }, @, Override, public, boolean, isPrivate, (, String, name, ), {, return]
[String, name, ), {, return, false, ;, }, @, Override, public, Collection, <, AssertionFunctionSpec, >, getAssertionFunctions, (, ), {, return]
[String, name, ), {, return, false, ;, }, @, Override, public, Collection, <, AssertionFunctionSpec, >, getAssertionFunctions, (, ), {, return]
[}, @, Override, public, Collection, <, AssertionFunctionSpec, >, getAssertionFunctions, (, ), {, return, ImmutableList, ., <, AssertionFunctionSpec, >, of, (]
[public, Collection, <, AssertionFunctionSpec, >, getAssertionFunctions, (, ), {, return, ImmutableList, ., <, AssertionFunctionSpec, >, of, (, new, AssertionFunctionSpec, (]
[AssertionFunctionSpec, >, getAssertionFunctions, (, ), {, return, ImmutableList, ., <, AssertionFunctionSpec, >, of, (, new, AssertionFunctionSpec, (, "goog.asserts.assert", ), ,]
[(, ), {, return, ImmutableList, ., <, AssertionFunctionSpec, >, of, (, new, AssertionFunctionSpec, (, "goog.asserts.assert", ), ,, new, AssertionFunctionSpec, (]
[{, return, ImmutableList, ., <, AssertionFunctionSpec, >, of, (, new, AssertionFunctionSpec, (, "goog.asserts.assert", ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertNumber", ,]
[{, return, ImmutableList, ., <, AssertionFunctionSpec, >, of, (, new, AssertionFunctionSpec, (, "goog.asserts.assert", ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertNumber", ,]
[AssertionFunctionSpec, >, of, (, new, AssertionFunctionSpec, (, "goog.asserts.assert", ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertNumber", ,, JSTypeNative, ., NUMBER_TYPE, ), ,]
[(, new, AssertionFunctionSpec, (, "goog.asserts.assert", ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertNumber", ,, JSTypeNative, ., NUMBER_TYPE, ), ,, new, AssertionFunctionSpec, (]
[AssertionFunctionSpec, (, "goog.asserts.assert", ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertNumber", ,, JSTypeNative, ., NUMBER_TYPE, ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertString", ,]
[AssertionFunctionSpec, (, "goog.asserts.assert", ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertNumber", ,, JSTypeNative, ., NUMBER_TYPE, ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertString", ,]
[new, AssertionFunctionSpec, (, "goog.asserts.assertNumber", ,, JSTypeNative, ., NUMBER_TYPE, ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertString", ,, JSTypeNative, ., STRING_TYPE, ), ,]
["goog.asserts.assertNumber", ,, JSTypeNative, ., NUMBER_TYPE, ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertString", ,, JSTypeNative, ., STRING_TYPE, ), ,, new, AssertionFunctionSpec, (]
[JSTypeNative, ., NUMBER_TYPE, ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertString", ,, JSTypeNative, ., STRING_TYPE, ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertFunction", ,]
[JSTypeNative, ., NUMBER_TYPE, ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertString", ,, JSTypeNative, ., STRING_TYPE, ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertFunction", ,]
[new, AssertionFunctionSpec, (, "goog.asserts.assertString", ,, JSTypeNative, ., STRING_TYPE, ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertFunction", ,, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ,]
["goog.asserts.assertString", ,, JSTypeNative, ., STRING_TYPE, ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertFunction", ,, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ,, new, AssertionFunctionSpec, (]
[JSTypeNative, ., STRING_TYPE, ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertFunction", ,, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertObject", ,]
[JSTypeNative, ., STRING_TYPE, ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertFunction", ,, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertObject", ,]
[new, AssertionFunctionSpec, (, "goog.asserts.assertFunction", ,, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertObject", ,, JSTypeNative, ., OBJECT_TYPE, ), ,]
["goog.asserts.assertFunction", ,, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertObject", ,, JSTypeNative, ., OBJECT_TYPE, ), ,, new, AssertionFunctionSpec, (]
[JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertObject", ,, JSTypeNative, ., OBJECT_TYPE, ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertArray", ,]
[JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertObject", ,, JSTypeNative, ., OBJECT_TYPE, ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertArray", ,]
[new, AssertionFunctionSpec, (, "goog.asserts.assertObject", ,, JSTypeNative, ., OBJECT_TYPE, ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertArray", ,, JSTypeNative, ., ARRAY_TYPE, ), ,]
["goog.asserts.assertObject", ,, JSTypeNative, ., OBJECT_TYPE, ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertArray", ,, JSTypeNative, ., ARRAY_TYPE, ), ,, new, AssertInstanceofSpec, (]
[), ), ;, }, @, Override, public, Bind, describeFunctionBind, (, Node, n, ,, boolean, useTypeInfo, ), {, Bind, result, =]
[), ), ;, }, @, Override, public, Bind, describeFunctionBind, (, Node, n, ,, boolean, useTypeInfo, ), {, Bind, result, =]
[@, Override, public, Bind, describeFunctionBind, (, Node, n, ,, boolean, useTypeInfo, ), {, Bind, result, =, super, ., describeFunctionBind, (]
[public, Bind, describeFunctionBind, (, Node, n, ,, boolean, useTypeInfo, ), {, Bind, result, =, super, ., describeFunctionBind, (, n, ,]
[n, ,, boolean, useTypeInfo, ), {, Bind, result, =, super, ., describeFunctionBind, (, n, ,, useTypeInfo, ), ;, if, (]
[n, ,, boolean, useTypeInfo, ), {, Bind, result, =, super, ., describeFunctionBind, (, n, ,, useTypeInfo, ), ;, if, (]
[boolean, useTypeInfo, ), {, Bind, result, =, super, ., describeFunctionBind, (, n, ,, useTypeInfo, ), ;, if, (, result, !=]
[Bind, result, =, super, ., describeFunctionBind, (, n, ,, useTypeInfo, ), ;, if, (, result, !=, null, ), {, return]
[describeFunctionBind, (, n, ,, useTypeInfo, ), ;, if, (, result, !=, null, ), {, return, result, ;, }, if, (]
[(, n, ,, useTypeInfo, ), ;, if, (, result, !=, null, ), {, return, result, ;, }, if, (, !]
[(, n, ,, useTypeInfo, ), ;, if, (, result, !=, null, ), {, return, result, ;, }, if, (, !]
[result, !=, null, ), {, return, result, ;, }, if, (, !, n, ., isCall, (, ), ), {, return]
[result, ;, }, if, (, !, n, ., isCall, (, ), ), {, return, null, ;, }, Node, callTarget, =]
[result, ;, }, if, (, !, n, ., isCall, (, ), ), {, return, null, ;, }, Node, callTarget, =]
[(, ), ), {, return, null, ;, }, Node, callTarget, =, n, ., getFirstChild, (, ), ;, String, name, =]
[(, ), ), {, return, null, ;, }, Node, callTarget, =, n, ., getFirstChild, (, ), ;, String, name, =]
[Node, callTarget, =, n, ., getFirstChild, (, ), ;, String, name, =, callTarget, ., getQualifiedName, (, ), ;, if, (]
[Node, callTarget, =, n, ., getFirstChild, (, ), ;, String, name, =, callTarget, ., getQualifiedName, (, ), ;, if, (]
[=, n, ., getFirstChild, (, ), ;, String, name, =, callTarget, ., getQualifiedName, (, ), ;, if, (, name, !=]
[), ;, String, name, =, callTarget, ., getQualifiedName, (, ), ;, if, (, name, !=, null, ), {, if, (]
[), ;, String, name, =, callTarget, ., getQualifiedName, (, ), ;, if, (, name, !=, null, ), {, if, (]
[), ;, String, name, =, callTarget, ., getQualifiedName, (, ), ;, if, (, name, !=, null, ), {, if, (]
[=, callTarget, ., getQualifiedName, (, ), ;, if, (, name, !=, null, ), {, if, (, name, ., equals, (]
[getQualifiedName, (, ), ;, if, (, name, !=, null, ), {, if, (, name, ., equals, (, "goog.bind", ), ||]
[getQualifiedName, (, ), ;, if, (, name, !=, null, ), {, if, (, name, ., equals, (, "goog.bind", ), ||]
[if, (, name, !=, null, ), {, if, (, name, ., equals, (, "goog.bind", ), ||, name, ., equals, (]
[if, (, name, ., equals, (, "goog.bind", ), ||, name, ., equals, (, "goog$bind", ), ), {, Node, fn, =]
[if, (, name, ., equals, (, "goog.bind", ), ||, name, ., equals, (, "goog$bind", ), ), {, Node, fn, =]
[||, name, ., equals, (, "goog$bind", ), ), {, Node, fn, =, callTarget, ., getNext, (, ), ;, if, (]
[||, name, ., equals, (, "goog$bind", ), ), {, Node, fn, =, callTarget, ., getNext, (, ), ;, if, (]
[., equals, (, "goog$bind", ), ), {, Node, fn, =, callTarget, ., getNext, (, ), ;, if, (, fn, ==]
[), ), {, Node, fn, =, callTarget, ., getNext, (, ), ;, if, (, fn, ==, null, ), {, return]
[callTarget, ., getNext, (, ), ;, if, (, fn, ==, null, ), {, return, null, ;, }, Node, thisValue, =]
[getNext, (, ), ;, if, (, fn, ==, null, ), {, return, null, ;, }, Node, thisValue, =, safeNext, (]
[fn, ==, null, ), {, return, null, ;, }, Node, thisValue, =, safeNext, (, fn, ), ;, Node, parameters, =]
[null, ), {, return, null, ;, }, Node, thisValue, =, safeNext, (, fn, ), ;, Node, parameters, =, safeNext, (]
[null, ;, }, Node, thisValue, =, safeNext, (, fn, ), ;, Node, parameters, =, safeNext, (, thisValue, ), ;, return]
[Node, thisValue, =, safeNext, (, fn, ), ;, Node, parameters, =, safeNext, (, thisValue, ), ;, return, new, Bind, (]
[=, safeNext, (, fn, ), ;, Node, parameters, =, safeNext, (, thisValue, ), ;, return, new, Bind, (, fn, ,]
[(, fn, ), ;, Node, parameters, =, safeNext, (, thisValue, ), ;, return, new, Bind, (, fn, ,, thisValue, ,]
[=, safeNext, (, thisValue, ), ;, return, new, Bind, (, fn, ,, thisValue, ,, parameters, ), ;, }, if, (]
[=, safeNext, (, thisValue, ), ;, return, new, Bind, (, fn, ,, thisValue, ,, parameters, ), ;, }, if, (]
[=, safeNext, (, thisValue, ), ;, return, new, Bind, (, fn, ,, thisValue, ,, parameters, ), ;, }, if, (]
[), ;, return, new, Bind, (, fn, ,, thisValue, ,, parameters, ), ;, }, if, (, name, ., equals, (]
[new, Bind, (, fn, ,, thisValue, ,, parameters, ), ;, }, if, (, name, ., equals, (, "goog.partial", ), ||]
[new, Bind, (, fn, ,, thisValue, ,, parameters, ), ;, }, if, (, name, ., equals, (, "goog.partial", ), ||]
[,, thisValue, ,, parameters, ), ;, }, if, (, name, ., equals, (, "goog.partial", ), ||, name, ., equals, (]
[if, (, name, ., equals, (, "goog.partial", ), ||, name, ., equals, (, "goog$partial", ), ), {, Node, fn, =]
[if, (, name, ., equals, (, "goog.partial", ), ||, name, ., equals, (, "goog$partial", ), ), {, Node, fn, =]
[||, name, ., equals, (, "goog$partial", ), ), {, Node, fn, =, callTarget, ., getNext, (, ), ;, if, (]
[||, name, ., equals, (, "goog$partial", ), ), {, Node, fn, =, callTarget, ., getNext, (, ), ;, if, (]
[., equals, (, "goog$partial", ), ), {, Node, fn, =, callTarget, ., getNext, (, ), ;, if, (, fn, ==]
[), ), {, Node, fn, =, callTarget, ., getNext, (, ), ;, if, (, fn, ==, null, ), {, return]
[callTarget, ., getNext, (, ), ;, if, (, fn, ==, null, ), {, return, null, ;, }, Node, thisValue, =]
[;, if, (, fn, ==, null, ), {, return, null, ;, }, Node, thisValue, =, null, ;, Node, parameters, =]
[(, fn, ==, null, ), {, return, null, ;, }, Node, thisValue, =, null, ;, Node, parameters, =, safeNext, (]
[), {, return, null, ;, }, Node, thisValue, =, null, ;, Node, parameters, =, safeNext, (, fn, ), ;, return]
[null, ;, }, Node, thisValue, =, null, ;, Node, parameters, =, safeNext, (, fn, ), ;, return, new, Bind, (]
[}, Node, thisValue, =, null, ;, Node, parameters, =, safeNext, (, fn, ), ;, return, new, Bind, (, fn, ,]
[thisValue, =, null, ;, Node, parameters, =, safeNext, (, fn, ), ;, return, new, Bind, (, fn, ,, thisValue, ,]
[=, safeNext, (, fn, ), ;, return, new, Bind, (, fn, ,, thisValue, ,, parameters, ), ;, }, }, return]
[), ;, }, }, return, null, ;, }, @, Override, public, Collection, <, String, >, getIndirectlyDeclaredProperties, (, ), {, return]
[String, >, getIndirectlyDeclaredProperties, (, ), {, return, indirectlyDeclaredProperties, ;, }, private, Node, safeNext, (, Node, n, ), {, if, (]
[String, >, getIndirectlyDeclaredProperties, (, ), {, return, indirectlyDeclaredProperties, ;, }, private, Node, safeNext, (, Node, n, ), {, if, (]
[getIndirectlyDeclaredProperties, (, ), {, return, indirectlyDeclaredProperties, ;, }, private, Node, safeNext, (, Node, n, ), {, if, (, n, !=]
[return, indirectlyDeclaredProperties, ;, }, private, Node, safeNext, (, Node, n, ), {, if, (, n, !=, null, ), {, return]
[return, indirectlyDeclaredProperties, ;, }, private, Node, safeNext, (, Node, n, ), {, if, (, n, !=, null, ), {, return]
[Node, n, ), {, if, (, n, !=, null, ), {, return, n, ., getNext, (, ), ;, }, return]
[return, null, ;, }, public, static, class, AssertInstanceofSpec, extends, AssertionFunctionSpec, {, public, AssertInstanceofSpec, (, String, functionName, ), {, super, (]
[;, }, public, static, class, AssertInstanceofSpec, extends, AssertionFunctionSpec, {, public, AssertInstanceofSpec, (, String, functionName, ), {, super, (, functionName, ,]
[;, }, public, static, class, AssertInstanceofSpec, extends, AssertionFunctionSpec, {, public, AssertInstanceofSpec, (, String, functionName, ), {, super, (, functionName, ,]
[., OBJECT_TYPE, ), ;, }, @, Override, public, JSType, getAssertedType, (, Node, call, ,, JSTypeRegistry, registry, ), {, if, (]
[., OBJECT_TYPE, ), ;, }, @, Override, public, JSType, getAssertedType, (, Node, call, ,, JSTypeRegistry, registry, ), {, if, (]
[., OBJECT_TYPE, ), ;, }, @, Override, public, JSType, getAssertedType, (, Node, call, ,, JSTypeRegistry, registry, ), {, if, (]
[Override, public, JSType, getAssertedType, (, Node, call, ,, JSTypeRegistry, registry, ), {, if, (, call, ., getChildCount, (, ), >]
[call, ,, JSTypeRegistry, registry, ), {, if, (, call, ., getChildCount, (, ), >, 2, ), {, Node, constructor, =]
[call, ,, JSTypeRegistry, registry, ), {, if, (, call, ., getChildCount, (, ), >, 2, ), {, Node, constructor, =]
[call, ,, JSTypeRegistry, registry, ), {, if, (, call, ., getChildCount, (, ), >, 2, ), {, Node, constructor, =]
[call, ,, JSTypeRegistry, registry, ), {, if, (, call, ., getChildCount, (, ), >, 2, ), {, Node, constructor, =]
[{, Node, constructor, =, call, ., getFirstChild, (, ), ., getNext, (, ), ., getNext, (, ), ;, if, (]
[{, Node, constructor, =, call, ., getFirstChild, (, ), ., getNext, (, ), ., getNext, (, ), ;, if, (]
[constructor, =, call, ., getFirstChild, (, ), ., getNext, (, ), ., getNext, (, ), ;, if, (, constructor, !=]
[), ., getNext, (, ), ., getNext, (, ), ;, if, (, constructor, !=, null, ), {, JSType, ownerType, =]
[), ., getNext, (, ), ., getNext, (, ), ;, if, (, constructor, !=, null, ), {, JSType, ownerType, =]
[), ;, if, (, constructor, !=, null, ), {, JSType, ownerType, =, constructor, ., getJSType, (, ), ;, if, (]
[), ;, if, (, constructor, !=, null, ), {, JSType, ownerType, =, constructor, ., getJSType, (, ), ;, if, (]
[), ;, if, (, constructor, !=, null, ), {, JSType, ownerType, =, constructor, ., getJSType, (, ), ;, if, (]
[), ;, if, (, constructor, !=, null, ), {, JSType, ownerType, =, constructor, ., getJSType, (, ), ;, if, (]
[if, (, constructor, !=, null, ), {, JSType, ownerType, =, constructor, ., getJSType, (, ), ;, if, (, ownerType, !=]
[constructor, !=, null, ), {, JSType, ownerType, =, constructor, ., getJSType, (, ), ;, if, (, ownerType, !=, null, &&]
[constructor, !=, null, ), {, JSType, ownerType, =, constructor, ., getJSType, (, ), ;, if, (, ownerType, !=, null, &&]
[ownerType, =, constructor, ., getJSType, (, ), ;, if, (, ownerType, !=, null, &&, ownerType, ., isFunctionType, (, ), &&]
[ownerType, =, constructor, ., getJSType, (, ), ;, if, (, ownerType, !=, null, &&, ownerType, ., isFunctionType, (, ), &&]
[ownerType, !=, null, &&, ownerType, ., isFunctionType, (, ), &&, ownerType, ., isConstructor, (, ), ), {, FunctionType, functionType, =]
[!=, null, &&, ownerType, ., isFunctionType, (, ), &&, ownerType, ., isConstructor, (, ), ), {, FunctionType, functionType, =, (]
[ownerType, ., isFunctionType, (, ), &&, ownerType, ., isConstructor, (, ), ), {, FunctionType, functionType, =, (, (, FunctionType, )]
[), &&, ownerType, ., isConstructor, (, ), ), {, FunctionType, functionType, =, (, (, FunctionType, ), ownerType, ), ;, return]
[), &&, ownerType, ., isConstructor, (, ), ), {, FunctionType, functionType, =, (, (, FunctionType, ), ownerType, ), ;, return]
[functionType, =, (, (, FunctionType, ), ownerType, ), ;, return, functionType, ., getInstanceType, (, ), ;, }, }, }, return]
[functionType, =, (, (, FunctionType, ), ownerType, ), ;, return, functionType, ., getInstanceType, (, ), ;, }, }, }, return]
[FunctionType, ), ownerType, ), ;, return, functionType, ., getInstanceType, (, ), ;, }, }, }, return, super, ., getAssertedType, (]
[ownerType, ), ;, return, functionType, ., getInstanceType, (, ), ;, }, }, }, return, super, ., getAssertedType, (, call, ,]
