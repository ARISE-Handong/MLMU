[., chart, ., util, ., SerialUtilities, ;, public, class, LineBorder, implements, BlockFrame, ,, Serializable, {, static, final, long, serialVersionUID, =]
[transient, Paint, paint, ;, private, transient, Stroke, stroke, ;, private, RectangleInsets, insets, ;, public, LineBorder, (, ), {, this, (]
[transient, Paint, paint, ;, private, transient, Stroke, stroke, ;, private, RectangleInsets, insets, ;, public, LineBorder, (, ), {, this, (]
[private, transient, Stroke, stroke, ;, private, RectangleInsets, insets, ;, public, LineBorder, (, ), {, this, (, Color, ., black, ,]
[stroke, ;, private, RectangleInsets, insets, ;, public, LineBorder, (, ), {, this, (, Color, ., black, ,, new, BasicStroke, (]
[RectangleInsets, insets, ;, public, LineBorder, (, ), {, this, (, Color, ., black, ,, new, BasicStroke, (, 1.0f, ), ,]
[public, LineBorder, (, ), {, this, (, Color, ., black, ,, new, BasicStroke, (, 1.0f, ), ,, new, RectangleInsets, (]
[(, ), {, this, (, Color, ., black, ,, new, BasicStroke, (, 1.0f, ), ,, new, RectangleInsets, (, 1.0, ,]
[{, this, (, Color, ., black, ,, new, BasicStroke, (, 1.0f, ), ,, new, RectangleInsets, (, 1.0, ,, 1.0, ,]
[(, Color, ., black, ,, new, BasicStroke, (, 1.0f, ), ,, new, RectangleInsets, (, 1.0, ,, 1.0, ,, 1.0, ,]
[1.0, ), ), ;, }, public, LineBorder, (, Paint, paint, ,, Stroke, stroke, ,, RectangleInsets, insets, ), {, if, (]
[1.0, ), ), ;, }, public, LineBorder, (, Paint, paint, ,, Stroke, stroke, ,, RectangleInsets, insets, ), {, if, (]
[), ;, }, public, LineBorder, (, Paint, paint, ,, Stroke, stroke, ,, RectangleInsets, insets, ), {, if, (, paint, ==]
[LineBorder, (, Paint, paint, ,, Stroke, stroke, ,, RectangleInsets, insets, ), {, if, (, paint, ==, null, ), {, throw]
[paint, ,, Stroke, stroke, ,, RectangleInsets, insets, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (]
[insets, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, if, (]
[insets, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, if, (]
[{, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, if, (, stroke, ==]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, if, (, stroke, ==, null, ), {, throw]
[{, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, if, (, stroke, ==, null, ), {, throw, new, IllegalArgumentException, (]
[), ;, }, if, (, stroke, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'stroke' argument.", ), ;, }, if, (]
[), ;, }, if, (, stroke, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'stroke' argument.", ), ;, }, if, (]
[}, if, (, stroke, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'stroke' argument.", ), ;, }, if, (, insets, ==]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'stroke' argument.", ), ;, }, if, (, insets, ==, null, ), {, throw]
[{, throw, new, IllegalArgumentException, (, "Null 'stroke' argument.", ), ;, }, if, (, insets, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, "Null 'stroke' argument.", ), ;, }, if, (, insets, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'insets' argument.", ), ;, }]
[(, "Null 'stroke' argument.", ), ;, }, if, (, insets, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'insets' argument.", ), ;, }]
[}, if, (, insets, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'insets' argument.", ), ;, }, this, ., paint, =]
[(, insets, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'insets' argument.", ), ;, }, this, ., paint, =, paint, ;]
[(, insets, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'insets' argument.", ), ;, }, this, ., paint, =, paint, ;]
[), {, throw, new, IllegalArgumentException, (, "Null 'insets' argument.", ), ;, }, this, ., paint, =, paint, ;, this, ., stroke, =]
[throw, new, IllegalArgumentException, (, "Null 'insets' argument.", ), ;, }, this, ., paint, =, paint, ;, this, ., stroke, =, stroke, ;]
[throw, new, IllegalArgumentException, (, "Null 'insets' argument.", ), ;, }, this, ., paint, =, paint, ;, this, ., stroke, =, stroke, ;]
["Null 'insets' argument.", ), ;, }, this, ., paint, =, paint, ;, this, ., stroke, =, stroke, ;, this, ., insets, =]
[this, ., stroke, =, stroke, ;, this, ., insets, =, insets, ;, }, public, Paint, getPaint, (, ), {, return]
[this, ., stroke, =, stroke, ;, this, ., insets, =, insets, ;, }, public, Paint, getPaint, (, ), {, return]
[}, public, Paint, getPaint, (, ), {, return, this, ., paint, ;, }, public, RectangleInsets, getInsets, (, ), {, return]
[}, public, Paint, getPaint, (, ), {, return, this, ., paint, ;, }, public, RectangleInsets, getInsets, (, ), {, return]
[}, public, RectangleInsets, getInsets, (, ), {, return, this, ., insets, ;, }, public, Stroke, getStroke, (, ), {, return]
[}, public, RectangleInsets, getInsets, (, ), {, return, this, ., insets, ;, }, public, Stroke, getStroke, (, ), {, return]
[return, this, ., stroke, ;, }, public, void, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ), {, double, w, =]
[return, this, ., stroke, ;, }, public, void, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ), {, double, w, =]
[(, Graphics2D, g2, ,, Rectangle2D, area, ), {, double, w, =, area, ., getWidth, (, ), ;, double, h, =]
[(, Graphics2D, g2, ,, Rectangle2D, area, ), {, double, w, =, area, ., getWidth, (, ), ;, double, h, =]
[double, w, =, area, ., getWidth, (, ), ;, double, h, =, area, ., getHeight, (, ), ;, if, (]
[double, w, =, area, ., getWidth, (, ), ;, double, h, =, area, ., getHeight, (, ), ;, if, (]
[double, w, =, area, ., getWidth, (, ), ;, double, h, =, area, ., getHeight, (, ), ;, if, (]
[=, area, ., getWidth, (, ), ;, double, h, =, area, ., getHeight, (, ), ;, if, (, w, <=]
[., getWidth, (, ), ;, double, h, =, area, ., getHeight, (, ), ;, if, (, w, <=, 0.0, ||]
[., getWidth, (, ), ;, double, h, =, area, ., getHeight, (, ), ;, if, (, w, <=, 0.0, ||]
[(, ), ;, double, h, =, area, ., getHeight, (, ), ;, if, (, w, <=, 0.0, ||, h, <=]
[(, ), ;, if, (, w, <=, 0.0, ||, h, <=, 0.0, ), {, return, ;, }, double, t, =]
[(, ), ;, if, (, w, <=, 0.0, ||, h, <=, 0.0, ), {, return, ;, }, double, t, =]
[(, ), ;, if, (, w, <=, 0.0, ||, h, <=, 0.0, ), {, return, ;, }, double, t, =]
[<=, 0.0, ||, h, <=, 0.0, ), {, return, ;, }, double, t, =, this, ., insets, ., calculateTopInset, (]
[), {, return, ;, }, double, t, =, this, ., insets, ., calculateTopInset, (, h, ), ;, double, b, =]
[), {, return, ;, }, double, t, =, this, ., insets, ., calculateTopInset, (, h, ), ;, double, b, =]
[), {, return, ;, }, double, t, =, this, ., insets, ., calculateTopInset, (, h, ), ;, double, b, =]
[t, =, this, ., insets, ., calculateTopInset, (, h, ), ;, double, b, =, this, ., insets, ., calculateBottomInset, (]
[calculateTopInset, (, h, ), ;, double, b, =, this, ., insets, ., calculateBottomInset, (, h, ), ;, double, l, =]
[calculateTopInset, (, h, ), ;, double, b, =, this, ., insets, ., calculateBottomInset, (, h, ), ;, double, l, =]
[calculateTopInset, (, h, ), ;, double, b, =, this, ., insets, ., calculateBottomInset, (, h, ), ;, double, l, =]
[b, =, this, ., insets, ., calculateBottomInset, (, h, ), ;, double, l, =, this, ., insets, ., calculateLeftInset, (]
[calculateBottomInset, (, h, ), ;, double, l, =, this, ., insets, ., calculateLeftInset, (, w, ), ;, double, r, =]
[calculateBottomInset, (, h, ), ;, double, l, =, this, ., insets, ., calculateLeftInset, (, w, ), ;, double, r, =]
[calculateBottomInset, (, h, ), ;, double, l, =, this, ., insets, ., calculateLeftInset, (, w, ), ;, double, r, =]
[l, =, this, ., insets, ., calculateLeftInset, (, w, ), ;, double, r, =, this, ., insets, ., calculateRightInset, (]
[calculateLeftInset, (, w, ), ;, double, r, =, this, ., insets, ., calculateRightInset, (, w, ), ;, double, x, =]
[calculateLeftInset, (, w, ), ;, double, r, =, this, ., insets, ., calculateRightInset, (, w, ), ;, double, x, =]
[., insets, ., calculateRightInset, (, w, ), ;, double, x, =, area, ., getX, (, ), ;, double, y, =]
[., insets, ., calculateRightInset, (, w, ), ;, double, x, =, area, ., getX, (, ), ;, double, y, =]
[x, =, area, ., getX, (, ), ;, double, y, =, area, ., getY, (, ), ;, double, x0, =]
[x, =, area, ., getX, (, ), ;, double, y, =, area, ., getY, (, ), ;, double, x0, =]
[area, ., getX, (, ), ;, double, y, =, area, ., getY, (, ), ;, double, x0, =, x, +]
[area, ., getX, (, ), ;, double, y, =, area, ., getY, (, ), ;, double, x0, =, x, +]
[getX, (, ), ;, double, y, =, area, ., getY, (, ), ;, double, x0, =, x, +, l, /]
[y, =, area, ., getY, (, ), ;, double, x0, =, x, +, l, /, 2.0, ;, double, x1, =]
[y, =, area, ., getY, (, ), ;, double, x0, =, x, +, l, /, 2.0, ;, double, x1, =]
[y, =, area, ., getY, (, ), ;, double, x0, =, x, +, l, /, 2.0, ;, double, x1, =]
[area, ., getY, (, ), ;, double, x0, =, x, +, l, /, 2.0, ;, double, x1, =, x, +]
[getY, (, ), ;, double, x0, =, x, +, l, /, 2.0, ;, double, x1, =, x, +, w, -]
[getY, (, ), ;, double, x0, =, x, +, l, /, 2.0, ;, double, x1, =, x, +, w, -]
[), ;, double, x0, =, x, +, l, /, 2.0, ;, double, x1, =, x, +, w, -, r, /]
[x, +, l, /, 2.0, ;, double, x1, =, x, +, w, -, r, /, 2.0, ;, double, y0, =]
[x, +, l, /, 2.0, ;, double, x1, =, x, +, w, -, r, /, 2.0, ;, double, y0, =]
[x, +, l, /, 2.0, ;, double, x1, =, x, +, w, -, r, /, 2.0, ;, double, y0, =]
[l, /, 2.0, ;, double, x1, =, x, +, w, -, r, /, 2.0, ;, double, y0, =, y, +]
[2.0, ;, double, x1, =, x, +, w, -, r, /, 2.0, ;, double, y0, =, y, +, h, -]
[2.0, ;, double, x1, =, x, +, w, -, r, /, 2.0, ;, double, y0, =, y, +, h, -]
[double, x1, =, x, +, w, -, r, /, 2.0, ;, double, y0, =, y, +, h, -, b, /]
[w, -, r, /, 2.0, ;, double, y0, =, y, +, h, -, b, /, 2.0, ;, double, y1, =]
[w, -, r, /, 2.0, ;, double, y0, =, y, +, h, -, b, /, 2.0, ;, double, y1, =]
[r, /, 2.0, ;, double, y0, =, y, +, h, -, b, /, 2.0, ;, double, y1, =, y, +]
[r, /, 2.0, ;, double, y0, =, y, +, h, -, b, /, 2.0, ;, double, y1, =, y, +]
[2.0, ;, double, y0, =, y, +, h, -, b, /, 2.0, ;, double, y1, =, y, +, t, /]
[double, y0, =, y, +, h, -, b, /, 2.0, ;, double, y1, =, y, +, t, /, 2.0, ;]
[double, y0, =, y, +, h, -, b, /, 2.0, ;, double, y1, =, y, +, t, /, 2.0, ;]
[+, h, -, b, /, 2.0, ;, double, y1, =, y, +, t, /, 2.0, ;, g2, ., setPaint, (]
[2.0, ;, double, y1, =, y, +, t, /, 2.0, ;, g2, ., setPaint, (, getPaint, (, ), ), ;]
[2.0, ;, double, y1, =, y, +, t, /, 2.0, ;, g2, ., setPaint, (, getPaint, (, ), ), ;]
[=, y, +, t, /, 2.0, ;, g2, ., setPaint, (, getPaint, (, ), ), ;, g2, ., setStroke, (]
[., setPaint, (, getPaint, (, ), ), ;, g2, ., setStroke, (, getStroke, (, ), ), ;, Line2D, line, =]
[., setStroke, (, getStroke, (, ), ), ;, Line2D, line, =, new, Line2D, ., Double, (, ), ;, if, (]
[., setStroke, (, getStroke, (, ), ), ;, Line2D, line, =, new, Line2D, ., Double, (, ), ;, if, (]
[(, getStroke, (, ), ), ;, Line2D, line, =, new, Line2D, ., Double, (, ), ;, if, (, t, >]
[), ), ;, Line2D, line, =, new, Line2D, ., Double, (, ), ;, if, (, t, >, 0.0, ), {]
[), ), ;, Line2D, line, =, new, Line2D, ., Double, (, ), ;, if, (, t, >, 0.0, ), {]
[line, =, new, Line2D, ., Double, (, ), ;, if, (, t, >, 0.0, ), {, line, ., setLine, (]
[new, Line2D, ., Double, (, ), ;, if, (, t, >, 0.0, ), {, line, ., setLine, (, x0, ,]
[., Double, (, ), ;, if, (, t, >, 0.0, ), {, line, ., setLine, (, x0, ,, y1, ,]
[(, ), ;, if, (, t, >, 0.0, ), {, line, ., setLine, (, x0, ,, y1, ,, x1, ,]
[if, (, t, >, 0.0, ), {, line, ., setLine, (, x0, ,, y1, ,, x1, ,, y1, ), ;]
[if, (, t, >, 0.0, ), {, line, ., setLine, (, x0, ,, y1, ,, x1, ,, y1, ), ;]
[0.0, ), {, line, ., setLine, (, x0, ,, y1, ,, x1, ,, y1, ), ;, g2, ., draw, (]
[(, x0, ,, y1, ,, x1, ,, y1, ), ;, g2, ., draw, (, line, ), ;, }, if, (]
[(, x0, ,, y1, ,, x1, ,, y1, ), ;, g2, ., draw, (, line, ), ;, }, if, (]
[,, y1, ,, x1, ,, y1, ), ;, g2, ., draw, (, line, ), ;, }, if, (, b, >]
[x1, ,, y1, ), ;, g2, ., draw, (, line, ), ;, }, if, (, b, >, 0.0, ), {]
[x1, ,, y1, ), ;, g2, ., draw, (, line, ), ;, }, if, (, b, >, 0.0, ), {]
[;, g2, ., draw, (, line, ), ;, }, if, (, b, >, 0.0, ), {, line, ., setLine, (]
[., draw, (, line, ), ;, }, if, (, b, >, 0.0, ), {, line, ., setLine, (, x0, ,]
[(, line, ), ;, }, if, (, b, >, 0.0, ), {, line, ., setLine, (, x0, ,, y0, ,]
[), ;, }, if, (, b, >, 0.0, ), {, line, ., setLine, (, x0, ,, y0, ,, x1, ,]
[if, (, b, >, 0.0, ), {, line, ., setLine, (, x0, ,, y0, ,, x1, ,, y0, ), ;]
[if, (, b, >, 0.0, ), {, line, ., setLine, (, x0, ,, y0, ,, x1, ,, y0, ), ;]
[0.0, ), {, line, ., setLine, (, x0, ,, y0, ,, x1, ,, y0, ), ;, g2, ., draw, (]
[(, x0, ,, y0, ,, x1, ,, y0, ), ;, g2, ., draw, (, line, ), ;, }, if, (]
[(, x0, ,, y0, ,, x1, ,, y0, ), ;, g2, ., draw, (, line, ), ;, }, if, (]
[,, y0, ,, x1, ,, y0, ), ;, g2, ., draw, (, line, ), ;, }, if, (, l, >]
[x1, ,, y0, ), ;, g2, ., draw, (, line, ), ;, }, if, (, l, >, 0.0, ), {]
[x1, ,, y0, ), ;, g2, ., draw, (, line, ), ;, }, if, (, l, >, 0.0, ), {]
[;, g2, ., draw, (, line, ), ;, }, if, (, l, >, 0.0, ), {, line, ., setLine, (]
[., draw, (, line, ), ;, }, if, (, l, >, 0.0, ), {, line, ., setLine, (, x0, ,]
[(, line, ), ;, }, if, (, l, >, 0.0, ), {, line, ., setLine, (, x0, ,, y0, ,]
[), ;, }, if, (, l, >, 0.0, ), {, line, ., setLine, (, x0, ,, y0, ,, x0, ,]
[if, (, l, >, 0.0, ), {, line, ., setLine, (, x0, ,, y0, ,, x0, ,, y1, ), ;]
[if, (, l, >, 0.0, ), {, line, ., setLine, (, x0, ,, y0, ,, x0, ,, y1, ), ;]
[0.0, ), {, line, ., setLine, (, x0, ,, y0, ,, x0, ,, y1, ), ;, g2, ., draw, (]
[(, x0, ,, y0, ,, x0, ,, y1, ), ;, g2, ., draw, (, line, ), ;, }, if, (]
[(, x0, ,, y0, ,, x0, ,, y1, ), ;, g2, ., draw, (, line, ), ;, }, if, (]
[,, y0, ,, x0, ,, y1, ), ;, g2, ., draw, (, line, ), ;, }, if, (, r, >]
[x0, ,, y1, ), ;, g2, ., draw, (, line, ), ;, }, if, (, r, >, 0.0, ), {]
[x0, ,, y1, ), ;, g2, ., draw, (, line, ), ;, }, if, (, r, >, 0.0, ), {]
[;, g2, ., draw, (, line, ), ;, }, if, (, r, >, 0.0, ), {, line, ., setLine, (]
[., draw, (, line, ), ;, }, if, (, r, >, 0.0, ), {, line, ., setLine, (, x1, ,]
[(, line, ), ;, }, if, (, r, >, 0.0, ), {, line, ., setLine, (, x1, ,, y0, ,]
[), ;, }, if, (, r, >, 0.0, ), {, line, ., setLine, (, x1, ,, y0, ,, x1, ,]
[if, (, r, >, 0.0, ), {, line, ., setLine, (, x1, ,, y0, ,, x1, ,, y1, ), ;]
[if, (, r, >, 0.0, ), {, line, ., setLine, (, x1, ,, y0, ,, x1, ,, y1, ), ;]
[0.0, ), {, line, ., setLine, (, x1, ,, y0, ,, x1, ,, y1, ), ;, g2, ., draw, (]
[;, g2, ., draw, (, line, ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[;, g2, ., draw, (, line, ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[., draw, (, line, ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, LineBorder, ), ), {, return]
[true, ;, }, if, (, !, (, obj, instanceof, LineBorder, ), ), {, return, false, ;, }, LineBorder, that, =]
[if, (, !, (, obj, instanceof, LineBorder, ), ), {, return, false, ;, }, LineBorder, that, =, (, LineBorder, )]
[obj, instanceof, LineBorder, ), ), {, return, false, ;, }, LineBorder, that, =, (, LineBorder, ), obj, ;, if, (]
[instanceof, LineBorder, ), ), {, return, false, ;, }, LineBorder, that, =, (, LineBorder, ), obj, ;, if, (, !]
[instanceof, LineBorder, ), ), {, return, false, ;, }, LineBorder, that, =, (, LineBorder, ), obj, ;, if, (, !]
[{, return, false, ;, }, LineBorder, that, =, (, LineBorder, ), obj, ;, if, (, !, PaintUtilities, ., equal, (]
[{, return, false, ;, }, LineBorder, that, =, (, LineBorder, ), obj, ;, if, (, !, PaintUtilities, ., equal, (]
[}, LineBorder, that, =, (, LineBorder, ), obj, ;, if, (, !, PaintUtilities, ., equal, (, this, ., paint, ,]
[}, LineBorder, that, =, (, LineBorder, ), obj, ;, if, (, !, PaintUtilities, ., equal, (, this, ., paint, ,]
[obj, ;, if, (, !, PaintUtilities, ., equal, (, this, ., paint, ,, that, ., paint, ), ), {, return]
[PaintUtilities, ., equal, (, this, ., paint, ,, that, ., paint, ), ), {, return, false, ;, }, if, (]
[., equal, (, this, ., paint, ,, that, ., paint, ), ), {, return, false, ;, }, if, (, !]
[., equal, (, this, ., paint, ,, that, ., paint, ), ), {, return, false, ;, }, if, (, !]
[., paint, ,, that, ., paint, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (]
[., paint, ,, that, ., paint, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (]
[., paint, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., stroke, ,]
[., paint, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., stroke, ,]
[;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., stroke, ,, that, ., stroke, ), ), {, return]
[ObjectUtilities, ., equal, (, this, ., stroke, ,, that, ., stroke, ), ), {, return, false, ;, }, if, (]
[., equal, (, this, ., stroke, ,, that, ., stroke, ), ), {, return, false, ;, }, if, (, !]
[., equal, (, this, ., stroke, ,, that, ., stroke, ), ), {, return, false, ;, }, if, (, !]
[., equal, (, this, ., stroke, ,, that, ., stroke, ), ), {, return, false, ;, }, if, (, !]
[,, that, ., stroke, ), ), {, return, false, ;, }, if, (, !, this, ., insets, ., equals, (]
[,, that, ., stroke, ), ), {, return, false, ;, }, if, (, !, this, ., insets, ., equals, (]
[return, false, ;, }, if, (, !, this, ., insets, ., equals, (, that, ., insets, ), ), {, return]
[if, (, !, this, ., insets, ., equals, (, that, ., insets, ), ), {, return, false, ;, }, return]
[), {, return, false, ;, }, return, true, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {]
[), {, return, false, ;, }, return, true, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {]
[return, true, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;]
[return, true, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;]
[private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (]
[private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (]
[ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (, this, ., paint, ,]
[throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (, this, ., paint, ,, stream, ), ;]
[throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (, this, ., paint, ,, stream, ), ;]
[., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (, this, ., paint, ,, stream, ), ;, SerialUtilities, ., writeStroke, (]
[., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (, this, ., paint, ,, stream, ), ;, SerialUtilities, ., writeStroke, (]
[;, SerialUtilities, ., writePaint, (, this, ., paint, ,, stream, ), ;, SerialUtilities, ., writeStroke, (, this, ., stroke, ,]
[this, ., stroke, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {]
[this, ., stroke, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {]
[;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;]
[;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;]
[readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., paint, =]
[readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., paint, =]
[), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., paint, =, SerialUtilities, ., readPaint, (]
[,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., paint, =, SerialUtilities, ., readPaint, (, stream, ), ;]
[,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., paint, =, SerialUtilities, ., readPaint, (, stream, ), ;]
[., defaultReadObject, (, ), ;, this, ., paint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., stroke, =]
[., defaultReadObject, (, ), ;, this, ., paint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., stroke, =]
[;, this, ., paint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., stroke, =, SerialUtilities, ., readStroke, (]
