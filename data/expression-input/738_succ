[;, private, List, data, ;, private, IntervalXYDelegate, intervalDelegate, ;, public, XYSeriesCollection, (, ), {, this, (, null, ), ;, }]
[;, private, List, data, ;, private, IntervalXYDelegate, intervalDelegate, ;, public, XYSeriesCollection, (, ), {, this, (, null, ), ;, }]
[), ;, }, public, XYSeriesCollection, (, XYSeries, series, ), {, this, ., data, =, new, java, ., util, ., ArrayList]
[=, new, java, ., util, ., ArrayList, (, ), ;, this, ., intervalDelegate, =, new, IntervalXYDelegate, (, this, ,, false]
[., data, =, new, java, ., util, ., ArrayList, (, ), ;, this, ., intervalDelegate, =, new, IntervalXYDelegate, (, this]
[;, this, ., intervalDelegate, =, new, IntervalXYDelegate, (, this, ,, false, ), ;, addChangeListener, (, this, ., intervalDelegate, ), ;]
[=, new, IntervalXYDelegate, (, this, ,, false, ), ;, addChangeListener, (, this, ., intervalDelegate, ), ;, if, (, series, !=]
[., intervalDelegate, =, new, IntervalXYDelegate, (, this, ,, false, ), ;, addChangeListener, (, this, ., intervalDelegate, ), ;, if, (]
[;, addChangeListener, (, this, ., intervalDelegate, ), ;, if, (, series, !=, null, ), {, this, ., data, ., add]
[,, false, ), ;, addChangeListener, (, this, ., intervalDelegate, ), ;, if, (, series, !=, null, ), {, this, .]
[), ;, addChangeListener, (, this, ., intervalDelegate, ), ;, if, (, series, !=, null, ), {, this, ., data, .]
[;, if, (, series, !=, null, ), {, this, ., data, ., add, (, series, ), ;, series, ., addChangeListener]
[), ;, if, (, series, !=, null, ), {, this, ., data, ., add, (, series, ), ;, series, .]
[., intervalDelegate, ), ;, if, (, series, !=, null, ), {, this, ., data, ., add, (, series, ), ;]
[), {, this, ., data, ., add, (, series, ), ;, series, ., addChangeListener, (, this, ), ;, }, setSelectionState]
[!=, null, ), {, this, ., data, ., add, (, series, ), ;, series, ., addChangeListener, (, this, ), ;]
[), {, this, ., data, ., add, (, series, ), ;, series, ., addChangeListener, (, this, ), ;, }, setSelectionState]
[;, series, ., addChangeListener, (, this, ), ;, }, setSelectionState, (, this, ), ;, }, public, DomainOrder, getDomainOrder, (, )]
[., add, (, series, ), ;, series, ., addChangeListener, (, this, ), ;, }, setSelectionState, (, this, ), ;, }]
[., data, ., add, (, series, ), ;, series, ., addChangeListener, (, this, ), ;, }, setSelectionState, (, this, )]
[), ;, series, ., addChangeListener, (, this, ), ;, }, setSelectionState, (, this, ), ;, }, public, DomainOrder, getDomainOrder, (]
[;, }, setSelectionState, (, this, ), ;, }, public, DomainOrder, getDomainOrder, (, ), {, int, seriesCount, =, getSeriesCount, (, )]
[., addChangeListener, (, this, ), ;, }, setSelectionState, (, this, ), ;, }, public, DomainOrder, getDomainOrder, (, ), {, int]
[), ;, }, setSelectionState, (, this, ), ;, }, public, DomainOrder, getDomainOrder, (, ), {, int, seriesCount, =, getSeriesCount, (]
[;, }, public, DomainOrder, getDomainOrder, (, ), {, int, seriesCount, =, getSeriesCount, (, ), ;, for, (, int, i, =]
[), ;, }, public, DomainOrder, getDomainOrder, (, ), {, int, seriesCount, =, getSeriesCount, (, ), ;, for, (, int, i]
[;, for, (, int, i, =, 0, ;, i, <, seriesCount, ;, i, ++, ), {, XYSeries, s, =, getSeries]
[;, i, <, seriesCount, ;, i, ++, ), {, XYSeries, s, =, getSeries, (, i, ), ;, if, (, !]
[;, i, ++, ), {, XYSeries, s, =, getSeries, (, i, ), ;, if, (, !, s, ., getAutoSort, (]
[<, seriesCount, ;, i, ++, ), {, XYSeries, s, =, getSeries, (, i, ), ;, if, (, !, s, .]
[;, i, ++, ), {, XYSeries, s, =, getSeries, (, i, ), ;, if, (, !, s, ., getAutoSort, (]
[), {, XYSeries, s, =, getSeries, (, i, ), ;, if, (, !, s, ., getAutoSort, (, ), ), {]
[++, ), {, XYSeries, s, =, getSeries, (, i, ), ;, if, (, !, s, ., getAutoSort, (, ), )]
[;, if, (, !, s, ., getAutoSort, (, ), ), {, return, DomainOrder, ., NONE, ;, }, }, return, DomainOrder]
[), ;, if, (, !, s, ., getAutoSort, (, ), ), {, return, DomainOrder, ., NONE, ;, }, }, return]
[), {, return, DomainOrder, ., NONE, ;, }, }, return, DomainOrder, ., ASCENDING, ;, }, public, void, addSeries, (, XYSeries]
[), {, return, DomainOrder, ., NONE, ;, }, }, return, DomainOrder, ., ASCENDING, ;, }, public, void, addSeries, (, XYSeries]
[., getAutoSort, (, ), ), {, return, DomainOrder, ., NONE, ;, }, }, return, DomainOrder, ., ASCENDING, ;, }, public]
[;, }, }, return, DomainOrder, ., ASCENDING, ;, }, public, void, addSeries, (, XYSeries, series, ), {, if, (, series]
[., NONE, ;, }, }, return, DomainOrder, ., ASCENDING, ;, }, public, void, addSeries, (, XYSeries, series, ), {, if]
[;, }, public, void, addSeries, (, XYSeries, series, ), {, if, (, series, ==, null, ), {, throw, new, IllegalArgumentException]
[., ASCENDING, ;, }, public, void, addSeries, (, XYSeries, series, ), {, if, (, series, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'series' argument.", ), ;, }, this, ., data, ., add, (, series, ), ;, series]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'series' argument.", ), ;, }, this, ., data, ., add, (, series, )]
[), {, throw, new, IllegalArgumentException, (, "Null 'series' argument.", ), ;, }, this, ., data, ., add, (, series, ), ;, series]
[;, }, this, ., data, ., add, (, series, ), ;, series, ., addChangeListener, (, this, ), ;, fireDatasetChanged, (]
[), ;, }, this, ., data, ., add, (, series, ), ;, series, ., addChangeListener, (, this, ), ;, fireDatasetChanged]
[;, series, ., addChangeListener, (, this, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, void, removeSeries]
[., add, (, series, ), ;, series, ., addChangeListener, (, this, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), )]
[., data, ., add, (, series, ), ;, series, ., addChangeListener, (, this, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (]
[), ;, series, ., addChangeListener, (, this, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, void]
[;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, void, removeSeries, (, int, series, ), {, if, (]
[., addChangeListener, (, this, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, void, removeSeries, (, int]
[), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, void, removeSeries, (, int, series, ), {, if]
[;, }, public, void, removeSeries, (, int, series, ), {, if, (, (, series, <, 0, ), ||, (, series]
[), ;, }, public, void, removeSeries, (, int, series, ), {, if, (, (, series, <, 0, ), ||, (]
[), {, throw, new, IllegalArgumentException, (, "Series index out of bounds.", ), ;, }, XYSeries, ts, =, (, XYSeries, ), this, ., data, .]
[||, (, series, >=, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (, "Series index out of bounds.", ), ;, }, XYSeries, ts]
[), ||, (, series, >=, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (, "Series index out of bounds.", ), ;, }, XYSeries]
[<, 0, ), ||, (, series, >=, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (, "Series index out of bounds.", ), ;]
[), ||, (, series, >=, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (, "Series index out of bounds.", ), ;, }, XYSeries]
[), {, throw, new, IllegalArgumentException, (, "Series index out of bounds.", ), ;, }, XYSeries, ts, =, (, XYSeries, ), this, ., data, .]
[), ), {, throw, new, IllegalArgumentException, (, "Series index out of bounds.", ), ;, }, XYSeries, ts, =, (, XYSeries, ), this, ., data]
[>=, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (, "Series index out of bounds.", ), ;, }, XYSeries, ts, =, (, XYSeries]
[), ), {, throw, new, IllegalArgumentException, (, "Series index out of bounds.", ), ;, }, XYSeries, ts, =, (, XYSeries, ), this, ., data]
[;, }, XYSeries, ts, =, (, XYSeries, ), this, ., data, ., get, (, series, ), ;, ts, ., removeChangeListener]
[), ;, }, XYSeries, ts, =, (, XYSeries, ), this, ., data, ., get, (, series, ), ;, ts, .]
[;, ts, ., removeChangeListener, (, this, ), ;, this, ., data, ., remove, (, series, ), ;, fireDatasetChanged, (, new]
[;, ts, ., removeChangeListener, (, this, ), ;, this, ., data, ., remove, (, series, ), ;, fireDatasetChanged, (, new]
[., get, (, series, ), ;, ts, ., removeChangeListener, (, this, ), ;, this, ., data, ., remove, (, series]
[., data, ., get, (, series, ), ;, ts, ., removeChangeListener, (, this, ), ;, this, ., data, ., remove]
[), ;, ts, ., removeChangeListener, (, this, ), ;, this, ., data, ., remove, (, series, ), ;, fireDatasetChanged, (]
[;, this, ., data, ., remove, (, series, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public]
[., removeChangeListener, (, this, ), ;, this, ., data, ., remove, (, series, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (]
[), ;, this, ., data, ., remove, (, series, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }]
[;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, void, removeSeries, (, XYSeries, series, ), {, if, (]
[., remove, (, series, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, void, removeSeries, (, XYSeries]
[., data, ., remove, (, series, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, void, removeSeries]
[), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, void, removeSeries, (, XYSeries, series, ), {, if]
[;, }, public, void, removeSeries, (, XYSeries, series, ), {, if, (, series, ==, null, ), {, throw, new, IllegalArgumentException]
[), ;, }, public, void, removeSeries, (, XYSeries, series, ), {, if, (, series, ==, null, ), {, throw, new]
[), {, throw, new, IllegalArgumentException, (, "Null 'series' argument.", ), ;, }, if, (, this, ., data, ., contains, (, series, )]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'series' argument.", ), ;, }, if, (, this, ., data, ., contains, (]
[), {, throw, new, IllegalArgumentException, (, "Null 'series' argument.", ), ;, }, if, (, this, ., data, ., contains, (, series, )]
[;, }, if, (, this, ., data, ., contains, (, series, ), ), {, series, ., removeChangeListener, (, this, )]
[), ;, }, if, (, this, ., data, ., contains, (, series, ), ), {, series, ., removeChangeListener, (, this]
[), {, series, ., removeChangeListener, (, this, ), ;, this, ., data, ., remove, (, series, ), ;, fireDatasetChanged, (]
[., contains, (, series, ), ), {, series, ., removeChangeListener, (, this, ), ;, this, ., data, ., remove, (]
[., data, ., contains, (, series, ), ), {, series, ., removeChangeListener, (, this, ), ;, this, ., data, .]
[), ), {, series, ., removeChangeListener, (, this, ), ;, this, ., data, ., remove, (, series, ), ;, fireDatasetChanged]
[;, this, ., data, ., remove, (, series, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, }]
[., removeChangeListener, (, this, ), ;, this, ., data, ., remove, (, series, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (]
[), ;, this, ., data, ., remove, (, series, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }]
[;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, }, public, void, removeAllSeries, (, ), {, for, (, int]
[., remove, (, series, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, }, public, void, removeAllSeries, (]
[., data, ., remove, (, series, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, }, public, void]
[), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, }, public, void, removeAllSeries, (, ), {, for, (]
[;, }, }, public, void, removeAllSeries, (, ), {, for, (, int, i, =, 0, ;, i, <, this, .]
[), ;, }, }, public, void, removeAllSeries, (, ), {, for, (, int, i, =, 0, ;, i, <, this]
[;, i, <, this, ., data, ., size, (, ), ;, i, ++, ), {, XYSeries, series, =, (, XYSeries]
[;, i, ++, ), {, XYSeries, series, =, (, XYSeries, ), this, ., data, ., get, (, i, ), ;]
[<, this, ., data, ., size, (, ), ;, i, ++, ), {, XYSeries, series, =, (, XYSeries, ), this]
[;, i, ++, ), {, XYSeries, series, =, (, XYSeries, ), this, ., data, ., get, (, i, ), ;]
[., size, (, ), ;, i, ++, ), {, XYSeries, series, =, (, XYSeries, ), this, ., data, ., get]
[., data, ., size, (, ), ;, i, ++, ), {, XYSeries, series, =, (, XYSeries, ), this, ., data]
[), {, XYSeries, series, =, (, XYSeries, ), this, ., data, ., get, (, i, ), ;, series, ., removeChangeListener]
[++, ), {, XYSeries, series, =, (, XYSeries, ), this, ., data, ., get, (, i, ), ;, series, .]
[;, series, ., removeChangeListener, (, this, ), ;, }, this, ., data, ., clear, (, ), ;, fireDatasetChanged, (, new]
[;, series, ., removeChangeListener, (, this, ), ;, }, this, ., data, ., clear, (, ), ;, fireDatasetChanged, (, new]
[., get, (, i, ), ;, series, ., removeChangeListener, (, this, ), ;, }, this, ., data, ., clear, (]
[., data, ., get, (, i, ), ;, series, ., removeChangeListener, (, this, ), ;, }, this, ., data, .]
[), ;, series, ., removeChangeListener, (, this, ), ;, }, this, ., data, ., clear, (, ), ;, fireDatasetChanged, (]
[;, }, this, ., data, ., clear, (, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public]
[., removeChangeListener, (, this, ), ;, }, this, ., data, ., clear, (, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (]
[), ;, }, this, ., data, ., clear, (, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }]
[;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, int, getSeriesCount, (, ), {, return, this, ., data]
[., clear, (, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, int, getSeriesCount, (, ), {]
[., data, ., clear, (, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, int, getSeriesCount, (]
[;, }, public, int, getSeriesCount, (, ), {, return, this, ., data, ., size, (, ), ;, }, public, List]
[), ;, }, public, int, getSeriesCount, (, ), {, return, this, ., data, ., size, (, ), ;, }, public]
[;, }, public, List, getSeries, (, ), {, return, Collections, ., unmodifiableList, (, this, ., data, ), ;, }, public]
[., size, (, ), ;, }, public, List, getSeries, (, ), {, return, Collections, ., unmodifiableList, (, this, ., data]
[., data, ., size, (, ), ;, }, public, List, getSeries, (, ), {, return, Collections, ., unmodifiableList, (, this]
[;, }, public, int, indexOf, (, XYSeries, series, ), {, if, (, series, ==, null, ), {, throw, new, IllegalArgumentException]
[., unmodifiableList, (, this, ., data, ), ;, }, public, int, indexOf, (, XYSeries, series, ), {, if, (, series]
[), ;, }, public, int, indexOf, (, XYSeries, series, ), {, if, (, series, ==, null, ), {, throw, new]
[., data, ), ;, }, public, int, indexOf, (, XYSeries, series, ), {, if, (, series, ==, null, ), {]
[), {, throw, new, IllegalArgumentException, (, "Null 'series' argument.", ), ;, }, return, this, ., data, ., indexOf, (, series, ), ;]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'series' argument.", ), ;, }, return, this, ., data, ., indexOf, (, series]
[), {, throw, new, IllegalArgumentException, (, "Null 'series' argument.", ), ;, }, return, this, ., data, ., indexOf, (, series, ), ;]
[;, }, return, this, ., data, ., indexOf, (, series, ), ;, }, public, XYSeries, getSeries, (, int, series, )]
[), ;, }, return, this, ., data, ., indexOf, (, series, ), ;, }, public, XYSeries, getSeries, (, int, series]
[;, }, public, XYSeries, getSeries, (, int, series, ), {, if, (, (, series, <, 0, ), ||, (, series]
[., indexOf, (, series, ), ;, }, public, XYSeries, getSeries, (, int, series, ), {, if, (, (, series, <]
[., data, ., indexOf, (, series, ), ;, }, public, XYSeries, getSeries, (, int, series, ), {, if, (, (]
[), ;, }, public, XYSeries, getSeries, (, int, series, ), {, if, (, (, series, <, 0, ), ||, (]
[), {, throw, new, IllegalArgumentException, (, "Series index out of bounds", ), ;, }, return, (, XYSeries, ), this, ., data, ., get, (]
[||, (, series, >=, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (, "Series index out of bounds", ), ;, }, return, (]
[), ||, (, series, >=, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (, "Series index out of bounds", ), ;, }, return]
[<, 0, ), ||, (, series, >=, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (, "Series index out of bounds", ), ;]
[), ||, (, series, >=, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (, "Series index out of bounds", ), ;, }, return]
[), {, throw, new, IllegalArgumentException, (, "Series index out of bounds", ), ;, }, return, (, XYSeries, ), this, ., data, ., get, (]
[), ), {, throw, new, IllegalArgumentException, (, "Series index out of bounds", ), ;, }, return, (, XYSeries, ), this, ., data, ., get]
[>=, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (, "Series index out of bounds", ), ;, }, return, (, XYSeries, ), this]
[), ), {, throw, new, IllegalArgumentException, (, "Series index out of bounds", ), ;, }, return, (, XYSeries, ), this, ., data, ., get]
[;, }, return, (, XYSeries, ), this, ., data, ., get, (, series, ), ;, }, public, XYSeries, getSeries, (]
[), ;, }, return, (, XYSeries, ), this, ., data, ., get, (, series, ), ;, }, public, XYSeries, getSeries]
[;, }, public, XYSeries, getSeries, (, Comparable, key, ), {, if, (, key, ==, null, ), {, throw, new, IllegalArgumentException]
[;, }, public, XYSeries, getSeries, (, Comparable, key, ), {, if, (, key, ==, null, ), {, throw, new, IllegalArgumentException]
[., get, (, series, ), ;, }, public, XYSeries, getSeries, (, Comparable, key, ), {, if, (, key, ==, null]
[., data, ., get, (, series, ), ;, }, public, XYSeries, getSeries, (, Comparable, key, ), {, if, (, key]
[), ;, }, public, XYSeries, getSeries, (, Comparable, key, ), {, if, (, key, ==, null, ), {, throw, new]
[), {, throw, new, IllegalArgumentException, (, "Null 'key' argument.", ), ;, }, Iterator, iterator, =, this, ., data, ., iterator, (, )]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'key' argument.", ), ;, }, Iterator, iterator, =, this, ., data, ., iterator]
[), {, throw, new, IllegalArgumentException, (, "Null 'key' argument.", ), ;, }, Iterator, iterator, =, this, ., data, ., iterator, (, )]
[;, }, Iterator, iterator, =, this, ., data, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, )]
[), ;, }, Iterator, iterator, =, this, ., data, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (]
[;, while, (, iterator, ., hasNext, (, ), ), {, XYSeries, series, =, (, XYSeries, ), iterator, ., next, (]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, XYSeries, series, =, (, XYSeries, )]
[., data, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, XYSeries, series, =, (]
[), {, XYSeries, series, =, (, XYSeries, ), iterator, ., next, (, ), ;, if, (, key, ., equals, (]
[., hasNext, (, ), ), {, XYSeries, series, =, (, XYSeries, ), iterator, ., next, (, ), ;, if, (]
[;, if, (, key, ., equals, (, series, ., getKey, (, ), ), ), {, return, series, ;, }, }]
[;, if, (, key, ., equals, (, series, ., getKey, (, ), ), ), {, return, series, ;, }, }]
[., next, (, ), ;, if, (, key, ., equals, (, series, ., getKey, (, ), ), ), {, return]
[), {, return, series, ;, }, }, throw, new, UnknownKeyException, (, "Key not found: ", +, key, ), ;, }, public, Comparable, getSeriesKey]
[., equals, (, series, ., getKey, (, ), ), ), {, return, series, ;, }, }, throw, new, UnknownKeyException, (]
[), ), {, return, series, ;, }, }, throw, new, UnknownKeyException, (, "Key not found: ", +, key, ), ;, }, public, Comparable]
[., getKey, (, ), ), ), {, return, series, ;, }, }, throw, new, UnknownKeyException, (, "Key not found: ", +, key, )]
[;, }, }, throw, new, UnknownKeyException, (, "Key not found: ", +, key, ), ;, }, public, Comparable, getSeriesKey, (, int, series, )]
[;, }, public, Comparable, getSeriesKey, (, int, series, ), {, return, getSeries, (, series, ), ., getKey, (, ), ;]
[), ;, }, public, Comparable, getSeriesKey, (, int, series, ), {, return, getSeries, (, series, ), ., getKey, (, )]
[+, key, ), ;, }, public, Comparable, getSeriesKey, (, int, series, ), {, return, getSeries, (, series, ), ., getKey]
[), ;, }, public, Comparable, getSeriesKey, (, int, series, ), {, return, getSeries, (, series, ), ., getKey, (, )]
[;, }, public, int, getItemCount, (, int, series, ), {, return, getSeries, (, series, ), ., getItemCount, (, ), ;]
[., getKey, (, ), ;, }, public, int, getItemCount, (, int, series, ), {, return, getSeries, (, series, ), .]
[), ., getKey, (, ), ;, }, public, int, getItemCount, (, int, series, ), {, return, getSeries, (, series, )]
[;, }, public, Number, getX, (, int, series, ,, int, item, ), {, XYSeries, s, =, (, XYSeries, ), this]
[., getItemCount, (, ), ;, }, public, Number, getX, (, int, series, ,, int, item, ), {, XYSeries, s, =]
[), ., getItemCount, (, ), ;, }, public, Number, getX, (, int, series, ,, int, item, ), {, XYSeries, s]
[;, return, s, ., getX, (, item, ), ;, }, public, Number, getStartX, (, int, series, ,, int, item, )]
[;, return, s, ., getX, (, item, ), ;, }, public, Number, getStartX, (, int, series, ,, int, item, )]
[., get, (, series, ), ;, return, s, ., getX, (, item, ), ;, }, public, Number, getStartX, (, int]
[., data, ., get, (, series, ), ;, return, s, ., getX, (, item, ), ;, }, public, Number, getStartX]
[), ;, return, s, ., getX, (, item, ), ;, }, public, Number, getStartX, (, int, series, ,, int, item]
[;, }, public, Number, getStartX, (, int, series, ,, int, item, ), {, return, this, ., intervalDelegate, ., getStartX, (]
[., getX, (, item, ), ;, }, public, Number, getStartX, (, int, series, ,, int, item, ), {, return, this]
[), ;, }, public, Number, getStartX, (, int, series, ,, int, item, ), {, return, this, ., intervalDelegate, ., getStartX]
[;, }, public, Number, getEndX, (, int, series, ,, int, item, ), {, return, this, ., intervalDelegate, ., getEndX, (]
[., getStartX, (, series, ,, item, ), ;, }, public, Number, getEndX, (, int, series, ,, int, item, ), {]
[., intervalDelegate, ., getStartX, (, series, ,, item, ), ;, }, public, Number, getEndX, (, int, series, ,, int, item]
[,, item, ), ;, }, public, Number, getEndX, (, int, series, ,, int, item, ), {, return, this, ., intervalDelegate]
[), ;, }, public, Number, getEndX, (, int, series, ,, int, item, ), {, return, this, ., intervalDelegate, ., getEndX]
[;, }, public, Number, getY, (, int, series, ,, int, index, ), {, XYSeries, s, =, (, XYSeries, ), this]
[., getEndX, (, series, ,, item, ), ;, }, public, Number, getY, (, int, series, ,, int, index, ), {]
[., intervalDelegate, ., getEndX, (, series, ,, item, ), ;, }, public, Number, getY, (, int, series, ,, int, index]
[,, item, ), ;, }, public, Number, getY, (, int, series, ,, int, index, ), {, XYSeries, s, =, (]
[), ;, }, public, Number, getY, (, int, series, ,, int, index, ), {, XYSeries, s, =, (, XYSeries, )]
[;, return, s, ., getY, (, index, ), ;, }, public, Number, getStartY, (, int, series, ,, int, item, )]
[;, return, s, ., getY, (, index, ), ;, }, public, Number, getStartY, (, int, series, ,, int, item, )]
[., get, (, series, ), ;, return, s, ., getY, (, index, ), ;, }, public, Number, getStartY, (, int]
[., data, ., get, (, series, ), ;, return, s, ., getY, (, index, ), ;, }, public, Number, getStartY]
[), ;, return, s, ., getY, (, index, ), ;, }, public, Number, getStartY, (, int, series, ,, int, item]
[;, }, public, Number, getStartY, (, int, series, ,, int, item, ), {, return, getY, (, series, ,, item, )]
[., getY, (, index, ), ;, }, public, Number, getStartY, (, int, series, ,, int, item, ), {, return, getY]
[), ;, }, public, Number, getStartY, (, int, series, ,, int, item, ), {, return, getY, (, series, ,, item]
[;, }, public, Number, getEndY, (, int, series, ,, int, item, ), {, return, getY, (, series, ,, item, )]
[,, item, ), ;, }, public, Number, getEndY, (, int, series, ,, int, item, ), {, return, getY, (, series]
[), ;, }, public, Number, getEndY, (, int, series, ,, int, item, ), {, return, getY, (, series, ,, item]
[;, }, public, boolean, isSelected, (, int, series, ,, int, item, ), {, XYSeries, s, =, getSeries, (, series, )]
[,, item, ), ;, }, public, boolean, isSelected, (, int, series, ,, int, item, ), {, XYSeries, s, =, getSeries]
[), ;, }, public, boolean, isSelected, (, int, series, ,, int, item, ), {, XYSeries, s, =, getSeries, (, series]
[;, XYDataItem, i, =, s, ., getRawDataItem, (, item, ), ;, return, i, ., isSelected, (, ), ;, }, public]
[), ;, XYDataItem, i, =, s, ., getRawDataItem, (, item, ), ;, return, i, ., isSelected, (, ), ;, }]
[;, return, i, ., isSelected, (, ), ;, }, public, void, setSelected, (, int, series, ,, int, item, ,, boolean]
[., getRawDataItem, (, item, ), ;, return, i, ., isSelected, (, ), ;, }, public, void, setSelected, (, int, series]
[), ;, return, i, ., isSelected, (, ), ;, }, public, void, setSelected, (, int, series, ,, int, item, ,]
[;, }, public, void, setSelected, (, int, series, ,, int, item, ,, boolean, selected, ), {, setSelected, (, series, ,]
[., isSelected, (, ), ;, }, public, void, setSelected, (, int, series, ,, int, item, ,, boolean, selected, ), {]
[;, }, public, void, setSelected, (, int, series, ,, int, item, ,, boolean, selected, ,, boolean, notify, ), {, XYSeries]
[,, item, ,, selected, ,, true, ), ;, }, public, void, setSelected, (, int, series, ,, int, item, ,, boolean]
[,, selected, ,, true, ), ;, }, public, void, setSelected, (, int, series, ,, int, item, ,, boolean, selected, ,]
[,, true, ), ;, }, public, void, setSelected, (, int, series, ,, int, item, ,, boolean, selected, ,, boolean, notify]
[), ;, }, public, void, setSelected, (, int, series, ,, int, item, ,, boolean, selected, ,, boolean, notify, ), {]
[;, XYDataItem, i, =, s, ., getRawDataItem, (, item, ), ;, i, ., setSelected, (, selected, ), ;, if, (]
[), ;, XYDataItem, i, =, s, ., getRawDataItem, (, item, ), ;, i, ., setSelected, (, selected, ), ;, if]
[;, i, ., setSelected, (, selected, ), ;, if, (, notify, ), {, fireSelectionEvent, (, ), ;, }, }, public]
[., getRawDataItem, (, item, ), ;, i, ., setSelected, (, selected, ), ;, if, (, notify, ), {, fireSelectionEvent, (]
[), ;, i, ., setSelected, (, selected, ), ;, if, (, notify, ), {, fireSelectionEvent, (, ), ;, }, }]
[;, if, (, notify, ), {, fireSelectionEvent, (, ), ;, }, }, public, void, clearSelection, (, ), {, int, seriesCount]
[., setSelected, (, selected, ), ;, if, (, notify, ), {, fireSelectionEvent, (, ), ;, }, }, public, void, clearSelection]
[), ;, if, (, notify, ), {, fireSelectionEvent, (, ), ;, }, }, public, void, clearSelection, (, ), {, int]
[), {, fireSelectionEvent, (, ), ;, }, }, public, void, clearSelection, (, ), {, int, seriesCount, =, getSeriesCount, (, )]
[;, }, }, public, void, clearSelection, (, ), {, int, seriesCount, =, getSeriesCount, (, ), ;, for, (, int, s]
[;, for, (, int, s, =, 0, ;, s, <, seriesCount, ;, s, ++, ), {, int, itemCount, =, getItemCount]
[;, s, <, seriesCount, ;, s, ++, ), {, int, itemCount, =, getItemCount, (, s, ), ;, for, (, int]
[;, s, ++, ), {, int, itemCount, =, getItemCount, (, s, ), ;, for, (, int, i, =, 0, ;]
[<, seriesCount, ;, s, ++, ), {, int, itemCount, =, getItemCount, (, s, ), ;, for, (, int, i, =]
[;, s, ++, ), {, int, itemCount, =, getItemCount, (, s, ), ;, for, (, int, i, =, 0, ;]
[), {, int, itemCount, =, getItemCount, (, s, ), ;, for, (, int, i, =, 0, ;, i, <, itemCount]
[++, ), {, int, itemCount, =, getItemCount, (, s, ), ;, for, (, int, i, =, 0, ;, i, <]
[;, for, (, int, i, =, 0, ;, i, <, itemCount, ;, i, ++, ), {, setSelected, (, s, ,]
[), ;, for, (, int, i, =, 0, ;, i, <, itemCount, ;, i, ++, ), {, setSelected, (, s]
[;, i, <, itemCount, ;, i, ++, ), {, setSelected, (, s, ,, i, ,, false, ,, false, ), ;]
[;, i, ++, ), {, setSelected, (, s, ,, i, ,, false, ,, false, ), ;, }, }, }, public]
[<, itemCount, ;, i, ++, ), {, setSelected, (, s, ,, i, ,, false, ,, false, ), ;, }, }]
[;, i, ++, ), {, setSelected, (, s, ,, i, ,, false, ,, false, ), ;, }, }, }, public]
[), {, setSelected, (, s, ,, i, ,, false, ,, false, ), ;, }, }, }, public, void, fireSelectionEvent, (]
[++, ), {, setSelected, (, s, ,, i, ,, false, ,, false, ), ;, }, }, }, public, void, fireSelectionEvent]
[;, }, }, }, public, void, fireSelectionEvent, (, ), {, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public]
[,, i, ,, false, ,, false, ), ;, }, }, }, public, void, fireSelectionEvent, (, ), {, fireDatasetChanged, (, new]
[,, false, ,, false, ), ;, }, }, }, public, void, fireSelectionEvent, (, ), {, fireDatasetChanged, (, new, DatasetChangeInfo, (]
[,, false, ), ;, }, }, }, public, void, fireSelectionEvent, (, ), {, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), )]
[), ;, }, }, }, public, void, fireSelectionEvent, (, ), {, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }]
[;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;]
[), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, XYSeriesCollection, ), ), {, return, false, ;, }]
[==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, XYSeriesCollection, ), ), {, return, false]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, XYSeriesCollection, ), ), {, return, false, ;, }]
[;, }, if, (, !, (, obj, instanceof, XYSeriesCollection, ), ), {, return, false, ;, }, XYSeriesCollection, that, =, (]
[), {, return, false, ;, }, XYSeriesCollection, that, =, (, XYSeriesCollection, ), obj, ;, if, (, !, this, ., intervalDelegate]
[), {, return, false, ;, }, XYSeriesCollection, that, =, (, XYSeriesCollection, ), obj, ;, if, (, !, this, ., intervalDelegate]
[), ), {, return, false, ;, }, XYSeriesCollection, that, =, (, XYSeriesCollection, ), obj, ;, if, (, !, this, .]
[instanceof, XYSeriesCollection, ), ), {, return, false, ;, }, XYSeriesCollection, that, =, (, XYSeriesCollection, ), obj, ;, if, (, !]
[;, }, XYSeriesCollection, that, =, (, XYSeriesCollection, ), obj, ;, if, (, !, this, ., intervalDelegate, ., equals, (, that]
[;, if, (, !, this, ., intervalDelegate, ., equals, (, that, ., intervalDelegate, ), ), {, return, false, ;, }]
[;, if, (, !, this, ., intervalDelegate, ., equals, (, that, ., intervalDelegate, ), ), {, return, false, ;, }]
[), {, return, false, ;, }, return, ObjectUtilities, ., equal, (, this, ., data, ,, that, ., data, ), ;]
[), {, return, false, ;, }, return, ObjectUtilities, ., equal, (, this, ., data, ,, that, ., data, ), ;]
[., equals, (, that, ., intervalDelegate, ), ), {, return, false, ;, }, return, ObjectUtilities, ., equal, (, this, .]
[., intervalDelegate, ., equals, (, that, ., intervalDelegate, ), ), {, return, false, ;, }, return, ObjectUtilities, ., equal, (]
[), ), {, return, false, ;, }, return, ObjectUtilities, ., equal, (, this, ., data, ,, that, ., data, )]
[., intervalDelegate, ), ), {, return, false, ;, }, return, ObjectUtilities, ., equal, (, this, ., data, ,, that, .]
[;, }, return, ObjectUtilities, ., equal, (, this, ., data, ,, that, ., data, ), ;, }, public, Object, clone]
[;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, XYSeriesCollection, clone, =, (, XYSeriesCollection, ), super, ., clone, (]
[., equal, (, this, ., data, ,, that, ., data, ), ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException]
[,, that, ., data, ), ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, XYSeriesCollection, clone, =, (, XYSeriesCollection]
[., data, ,, that, ., data, ), ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, XYSeriesCollection, clone, =]
[), ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, XYSeriesCollection, clone, =, (, XYSeriesCollection, ), super, ., clone]
[., data, ), ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, XYSeriesCollection, clone, =, (, XYSeriesCollection, ), super]
[;, clone, ., data, =, (, List, ), ObjectUtilities, ., deepClone, (, this, ., data, ), ;, clone, ., intervalDelegate]
[;, clone, ., data, =, (, List, ), ObjectUtilities, ., deepClone, (, this, ., data, ), ;, clone, ., intervalDelegate]
[., clone, (, ), ;, clone, ., data, =, (, List, ), ObjectUtilities, ., deepClone, (, this, ., data, )]
[=, (, List, ), ObjectUtilities, ., deepClone, (, this, ., data, ), ;, clone, ., intervalDelegate, =, (, IntervalXYDelegate, )]
[., data, =, (, List, ), ObjectUtilities, ., deepClone, (, this, ., data, ), ;, clone, ., intervalDelegate, =, (]
[;, clone, ., intervalDelegate, =, (, IntervalXYDelegate, ), this, ., intervalDelegate, ., clone, (, ), ;, return, clone, ;, }]
[;, clone, ., intervalDelegate, =, (, IntervalXYDelegate, ), this, ., intervalDelegate, ., clone, (, ), ;, return, clone, ;, }]
[., deepClone, (, this, ., data, ), ;, clone, ., intervalDelegate, =, (, IntervalXYDelegate, ), this, ., intervalDelegate, ., clone]
[), ;, clone, ., intervalDelegate, =, (, IntervalXYDelegate, ), this, ., intervalDelegate, ., clone, (, ), ;, return, clone, ;]
[., data, ), ;, clone, ., intervalDelegate, =, (, IntervalXYDelegate, ), this, ., intervalDelegate, ., clone, (, ), ;, return]
[=, (, IntervalXYDelegate, ), this, ., intervalDelegate, ., clone, (, ), ;, return, clone, ;, }, public, int, hashCode, (]
[., intervalDelegate, =, (, IntervalXYDelegate, ), this, ., intervalDelegate, ., clone, (, ), ;, return, clone, ;, }, public, int]
[;, return, clone, ;, }, public, int, hashCode, (, ), {, int, hash, =, 5, ;, hash, =, HashUtilities, .]
[;, return, clone, ;, }, public, int, hashCode, (, ), {, int, hash, =, 5, ;, hash, =, HashUtilities, .]
[., clone, (, ), ;, return, clone, ;, }, public, int, hashCode, (, ), {, int, hash, =, 5, ;]
[., intervalDelegate, ., clone, (, ), ;, return, clone, ;, }, public, int, hashCode, (, ), {, int, hash, =]
[;, }, public, int, hashCode, (, ), {, int, hash, =, 5, ;, hash, =, HashUtilities, ., hashCode, (, hash]
[;, hash, =, HashUtilities, ., hashCode, (, hash, ,, this, ., intervalDelegate, ), ;, hash, =, HashUtilities, ., hashCode, (]
[=, HashUtilities, ., hashCode, (, hash, ,, this, ., intervalDelegate, ), ;, hash, =, HashUtilities, ., hashCode, (, hash, ,]
[;, hash, =, HashUtilities, ., hashCode, (, hash, ,, this, ., data, ), ;, return, hash, ;, }, public, double]
[., hashCode, (, hash, ,, this, ., intervalDelegate, ), ;, hash, =, HashUtilities, ., hashCode, (, hash, ,, this, .]
[,, this, ., intervalDelegate, ), ;, hash, =, HashUtilities, ., hashCode, (, hash, ,, this, ., data, ), ;, return]
[), ;, hash, =, HashUtilities, ., hashCode, (, hash, ,, this, ., data, ), ;, return, hash, ;, }, public]
[., intervalDelegate, ), ;, hash, =, HashUtilities, ., hashCode, (, hash, ,, this, ., data, ), ;, return, hash, ;]
[=, HashUtilities, ., hashCode, (, hash, ,, this, ., data, ), ;, return, hash, ;, }, public, double, getDomainLowerBound, (]
[;, return, hash, ;, }, public, double, getDomainLowerBound, (, boolean, includeInterval, ), {, if, (, includeInterval, ), {, return, this]
[., hashCode, (, hash, ,, this, ., data, ), ;, return, hash, ;, }, public, double, getDomainLowerBound, (, boolean, includeInterval]
[,, this, ., data, ), ;, return, hash, ;, }, public, double, getDomainLowerBound, (, boolean, includeInterval, ), {, if, (]
[), ;, return, hash, ;, }, public, double, getDomainLowerBound, (, boolean, includeInterval, ), {, if, (, includeInterval, ), {, return]
[., data, ), ;, return, hash, ;, }, public, double, getDomainLowerBound, (, boolean, includeInterval, ), {, if, (, includeInterval, )]
[;, }, public, double, getDomainLowerBound, (, boolean, includeInterval, ), {, if, (, includeInterval, ), {, return, this, ., intervalDelegate, .]
[), {, return, this, ., intervalDelegate, ., getDomainLowerBound, (, includeInterval, ), ;, }, else, {, double, result, =, Double, .]
[;, }, else, {, double, result, =, Double, ., NaN, ;, int, seriesCount, =, getSeriesCount, (, ), ;, for, (]
[., getDomainLowerBound, (, includeInterval, ), ;, }, else, {, double, result, =, Double, ., NaN, ;, int, seriesCount, =, getSeriesCount]
[., intervalDelegate, ., getDomainLowerBound, (, includeInterval, ), ;, }, else, {, double, result, =, Double, ., NaN, ;, int, seriesCount]
[), ;, }, else, {, double, result, =, Double, ., NaN, ;, int, seriesCount, =, getSeriesCount, (, ), ;, for]
[;, int, seriesCount, =, getSeriesCount, (, ), ;, for, (, int, s, =, 0, ;, s, <, seriesCount, ;, s]
[., NaN, ;, int, seriesCount, =, getSeriesCount, (, ), ;, for, (, int, s, =, 0, ;, s, <, seriesCount]
[;, for, (, int, s, =, 0, ;, s, <, seriesCount, ;, s, ++, ), {, XYSeries, series, =, getSeries]
[;, s, <, seriesCount, ;, s, ++, ), {, XYSeries, series, =, getSeries, (, s, ), ;, double, lowX, =]
[;, s, ++, ), {, XYSeries, series, =, getSeries, (, s, ), ;, double, lowX, =, series, ., getMinX, (]
[<, seriesCount, ;, s, ++, ), {, XYSeries, series, =, getSeries, (, s, ), ;, double, lowX, =, series, .]
[;, s, ++, ), {, XYSeries, series, =, getSeries, (, s, ), ;, double, lowX, =, series, ., getMinX, (]
[), {, XYSeries, series, =, getSeries, (, s, ), ;, double, lowX, =, series, ., getMinX, (, ), ;, if]
[++, ), {, XYSeries, series, =, getSeries, (, s, ), ;, double, lowX, =, series, ., getMinX, (, ), ;]
[;, double, lowX, =, series, ., getMinX, (, ), ;, if, (, Double, ., isNaN, (, result, ), ), {]
[), ;, double, lowX, =, series, ., getMinX, (, ), ;, if, (, Double, ., isNaN, (, result, ), )]
[;, if, (, Double, ., isNaN, (, result, ), ), {, result, =, lowX, ;, }, else, {, if, (]
[., getMinX, (, ), ;, if, (, Double, ., isNaN, (, result, ), ), {, result, =, lowX, ;, }]
[), {, result, =, lowX, ;, }, else, {, if, (, !, Double, ., isNaN, (, lowX, ), ), {]
[., isNaN, (, result, ), ), {, result, =, lowX, ;, }, else, {, if, (, !, Double, ., isNaN]
[), ), {, result, =, lowX, ;, }, else, {, if, (, !, Double, ., isNaN, (, lowX, ), )]
[=, lowX, ;, }, else, {, if, (, !, Double, ., isNaN, (, lowX, ), ), {, result, =, Math]
[;, }, else, {, if, (, !, Double, ., isNaN, (, lowX, ), ), {, result, =, Math, ., min]
[), {, result, =, Math, ., min, (, result, ,, lowX, ), ;, }, }, }, return, result, ;, }]
[), {, result, =, Math, ., min, (, result, ,, lowX, ), ;, }, }, }, return, result, ;, }]
[., isNaN, (, lowX, ), ), {, result, =, Math, ., min, (, result, ,, lowX, ), ;, }, }]
[), ), {, result, =, Math, ., min, (, result, ,, lowX, ), ;, }, }, }, return, result, ;]
[=, Math, ., min, (, result, ,, lowX, ), ;, }, }, }, return, result, ;, }, }, public, double]
[;, }, }, }, return, result, ;, }, }, public, double, getDomainUpperBound, (, boolean, includeInterval, ), {, if, (, includeInterval]
[., min, (, result, ,, lowX, ), ;, }, }, }, return, result, ;, }, }, public, double, getDomainUpperBound, (]
[,, lowX, ), ;, }, }, }, return, result, ;, }, }, public, double, getDomainUpperBound, (, boolean, includeInterval, ), {]
[), ;, }, }, }, return, result, ;, }, }, public, double, getDomainUpperBound, (, boolean, includeInterval, ), {, if, (]
[;, }, }, public, double, getDomainUpperBound, (, boolean, includeInterval, ), {, if, (, includeInterval, ), {, return, this, ., intervalDelegate]
[), {, return, this, ., intervalDelegate, ., getDomainUpperBound, (, includeInterval, ), ;, }, else, {, double, result, =, Double, .]
[;, }, else, {, double, result, =, Double, ., NaN, ;, int, seriesCount, =, getSeriesCount, (, ), ;, for, (]
[., getDomainUpperBound, (, includeInterval, ), ;, }, else, {, double, result, =, Double, ., NaN, ;, int, seriesCount, =, getSeriesCount]
[., intervalDelegate, ., getDomainUpperBound, (, includeInterval, ), ;, }, else, {, double, result, =, Double, ., NaN, ;, int, seriesCount]
[), ;, }, else, {, double, result, =, Double, ., NaN, ;, int, seriesCount, =, getSeriesCount, (, ), ;, for]
[;, int, seriesCount, =, getSeriesCount, (, ), ;, for, (, int, s, =, 0, ;, s, <, seriesCount, ;, s]
[., NaN, ;, int, seriesCount, =, getSeriesCount, (, ), ;, for, (, int, s, =, 0, ;, s, <, seriesCount]
[;, for, (, int, s, =, 0, ;, s, <, seriesCount, ;, s, ++, ), {, XYSeries, series, =, getSeries]
[;, s, <, seriesCount, ;, s, ++, ), {, XYSeries, series, =, getSeries, (, s, ), ;, double, hiX, =]
[;, s, ++, ), {, XYSeries, series, =, getSeries, (, s, ), ;, double, hiX, =, series, ., getMaxX, (]
[<, seriesCount, ;, s, ++, ), {, XYSeries, series, =, getSeries, (, s, ), ;, double, hiX, =, series, .]
[;, s, ++, ), {, XYSeries, series, =, getSeries, (, s, ), ;, double, hiX, =, series, ., getMaxX, (]
[), {, XYSeries, series, =, getSeries, (, s, ), ;, double, hiX, =, series, ., getMaxX, (, ), ;, if]
[++, ), {, XYSeries, series, =, getSeries, (, s, ), ;, double, hiX, =, series, ., getMaxX, (, ), ;]
[;, double, hiX, =, series, ., getMaxX, (, ), ;, if, (, Double, ., isNaN, (, result, ), ), {]
[), ;, double, hiX, =, series, ., getMaxX, (, ), ;, if, (, Double, ., isNaN, (, result, ), )]
[;, if, (, Double, ., isNaN, (, result, ), ), {, result, =, hiX, ;, }, else, {, if, (]
[., getMaxX, (, ), ;, if, (, Double, ., isNaN, (, result, ), ), {, result, =, hiX, ;, }]
[), {, result, =, hiX, ;, }, else, {, if, (, !, Double, ., isNaN, (, hiX, ), ), {]
[., isNaN, (, result, ), ), {, result, =, hiX, ;, }, else, {, if, (, !, Double, ., isNaN]
[), ), {, result, =, hiX, ;, }, else, {, if, (, !, Double, ., isNaN, (, hiX, ), )]
[=, hiX, ;, }, else, {, if, (, !, Double, ., isNaN, (, hiX, ), ), {, result, =, Math]
[;, }, else, {, if, (, !, Double, ., isNaN, (, hiX, ), ), {, result, =, Math, ., max]
[), {, result, =, Math, ., max, (, result, ,, hiX, ), ;, }, }, }, return, result, ;, }]
[), {, result, =, Math, ., max, (, result, ,, hiX, ), ;, }, }, }, return, result, ;, }]
[., isNaN, (, hiX, ), ), {, result, =, Math, ., max, (, result, ,, hiX, ), ;, }, }]
[), ), {, result, =, Math, ., max, (, result, ,, hiX, ), ;, }, }, }, return, result, ;]
[=, Math, ., max, (, result, ,, hiX, ), ;, }, }, }, return, result, ;, }, }, public, Range]
[;, }, }, }, return, result, ;, }, }, public, Range, getDomainBounds, (, boolean, includeInterval, ), {, if, (, includeInterval]
[., max, (, result, ,, hiX, ), ;, }, }, }, return, result, ;, }, }, public, Range, getDomainBounds, (]
[,, hiX, ), ;, }, }, }, return, result, ;, }, }, public, Range, getDomainBounds, (, boolean, includeInterval, ), {]
[), ;, }, }, }, return, result, ;, }, }, public, Range, getDomainBounds, (, boolean, includeInterval, ), {, if, (]
[;, }, }, public, Range, getDomainBounds, (, boolean, includeInterval, ), {, if, (, includeInterval, ), {, return, this, ., intervalDelegate]
[), {, return, this, ., intervalDelegate, ., getDomainBounds, (, includeInterval, ), ;, }, else, {, double, lower, =, Double, .]
[;, }, else, {, double, lower, =, Double, ., POSITIVE_INFINITY, ;, double, upper, =, Double, ., NEGATIVE_INFINITY, ;, int, seriesCount]
[., getDomainBounds, (, includeInterval, ), ;, }, else, {, double, lower, =, Double, ., POSITIVE_INFINITY, ;, double, upper, =, Double]
[., intervalDelegate, ., getDomainBounds, (, includeInterval, ), ;, }, else, {, double, lower, =, Double, ., POSITIVE_INFINITY, ;, double, upper]
[), ;, }, else, {, double, lower, =, Double, ., POSITIVE_INFINITY, ;, double, upper, =, Double, ., NEGATIVE_INFINITY, ;, int]
[;, double, upper, =, Double, ., NEGATIVE_INFINITY, ;, int, seriesCount, =, getSeriesCount, (, ), ;, for, (, int, s, =]
[., POSITIVE_INFINITY, ;, double, upper, =, Double, ., NEGATIVE_INFINITY, ;, int, seriesCount, =, getSeriesCount, (, ), ;, for, (, int]
[;, int, seriesCount, =, getSeriesCount, (, ), ;, for, (, int, s, =, 0, ;, s, <, seriesCount, ;, s]
[., NEGATIVE_INFINITY, ;, int, seriesCount, =, getSeriesCount, (, ), ;, for, (, int, s, =, 0, ;, s, <, seriesCount]
[;, for, (, int, s, =, 0, ;, s, <, seriesCount, ;, s, ++, ), {, XYSeries, series, =, getSeries]
[;, s, <, seriesCount, ;, s, ++, ), {, XYSeries, series, =, getSeries, (, s, ), ;, double, minX, =]
[;, s, ++, ), {, XYSeries, series, =, getSeries, (, s, ), ;, double, minX, =, series, ., getMinX, (]
[<, seriesCount, ;, s, ++, ), {, XYSeries, series, =, getSeries, (, s, ), ;, double, minX, =, series, .]
[;, s, ++, ), {, XYSeries, series, =, getSeries, (, s, ), ;, double, minX, =, series, ., getMinX, (]
[), {, XYSeries, series, =, getSeries, (, s, ), ;, double, minX, =, series, ., getMinX, (, ), ;, if]
[++, ), {, XYSeries, series, =, getSeries, (, s, ), ;, double, minX, =, series, ., getMinX, (, ), ;]
[;, double, minX, =, series, ., getMinX, (, ), ;, if, (, !, Double, ., isNaN, (, minX, ), )]
[), ;, double, minX, =, series, ., getMinX, (, ), ;, if, (, !, Double, ., isNaN, (, minX, )]
[;, if, (, !, Double, ., isNaN, (, minX, ), ), {, lower, =, Math, ., min, (, lower, ,]
[., getMinX, (, ), ;, if, (, !, Double, ., isNaN, (, minX, ), ), {, lower, =, Math, .]
[), {, lower, =, Math, ., min, (, lower, ,, minX, ), ;, }, double, maxX, =, series, ., getMaxX]
[), {, lower, =, Math, ., min, (, lower, ,, minX, ), ;, }, double, maxX, =, series, ., getMaxX]
[., isNaN, (, minX, ), ), {, lower, =, Math, ., min, (, lower, ,, minX, ), ;, }, double]
[), ), {, lower, =, Math, ., min, (, lower, ,, minX, ), ;, }, double, maxX, =, series, .]
[=, Math, ., min, (, lower, ,, minX, ), ;, }, double, maxX, =, series, ., getMaxX, (, ), ;]
[;, }, double, maxX, =, series, ., getMaxX, (, ), ;, if, (, !, Double, ., isNaN, (, maxX, )]
[., min, (, lower, ,, minX, ), ;, }, double, maxX, =, series, ., getMaxX, (, ), ;, if, (]
[,, minX, ), ;, }, double, maxX, =, series, ., getMaxX, (, ), ;, if, (, !, Double, ., isNaN]
[), ;, }, double, maxX, =, series, ., getMaxX, (, ), ;, if, (, !, Double, ., isNaN, (, maxX]
[;, if, (, !, Double, ., isNaN, (, maxX, ), ), {, upper, =, Math, ., max, (, upper, ,]
[., getMaxX, (, ), ;, if, (, !, Double, ., isNaN, (, maxX, ), ), {, upper, =, Math, .]
[), {, upper, =, Math, ., max, (, upper, ,, maxX, ), ;, }, }, if, (, lower, >, upper]
[), {, upper, =, Math, ., max, (, upper, ,, maxX, ), ;, }, }, if, (, lower, >, upper]
[., isNaN, (, maxX, ), ), {, upper, =, Math, ., max, (, upper, ,, maxX, ), ;, }, }]
[), ), {, upper, =, Math, ., max, (, upper, ,, maxX, ), ;, }, }, if, (, lower, >]
[=, Math, ., max, (, upper, ,, maxX, ), ;, }, }, if, (, lower, >, upper, ), {, return]
[;, }, }, if, (, lower, >, upper, ), {, return, null, ;, }, else, {, return, new, Range, (]
[., max, (, upper, ,, maxX, ), ;, }, }, if, (, lower, >, upper, ), {, return, null, ;]
[,, maxX, ), ;, }, }, if, (, lower, >, upper, ), {, return, null, ;, }, else, {, return]
[), ;, }, }, if, (, lower, >, upper, ), {, return, null, ;, }, else, {, return, new, Range]
[), {, return, null, ;, }, else, {, return, new, Range, (, lower, ,, upper, ), ;, }, }, }]
[>, upper, ), {, return, null, ;, }, else, {, return, new, Range, (, lower, ,, upper, ), ;, }]
[), {, return, null, ;, }, else, {, return, new, Range, (, lower, ,, upper, ), ;, }, }, }]
[;, }, else, {, return, new, Range, (, lower, ,, upper, ), ;, }, }, }, public, double, getIntervalWidth, (]
[;, }, }, }, public, double, getIntervalWidth, (, ), {, return, this, ., intervalDelegate, ., getIntervalWidth, (, ), ;, }]
[,, upper, ), ;, }, }, }, public, double, getIntervalWidth, (, ), {, return, this, ., intervalDelegate, ., getIntervalWidth, (]
[), ;, }, }, }, public, double, getIntervalWidth, (, ), {, return, this, ., intervalDelegate, ., getIntervalWidth, (, ), ;]
[;, }, public, void, setIntervalWidth, (, double, width, ), {, if, (, width, <, 0.0, ), {, throw, new, IllegalArgumentException]
[., getIntervalWidth, (, ), ;, }, public, void, setIntervalWidth, (, double, width, ), {, if, (, width, <, 0.0, )]
[., intervalDelegate, ., getIntervalWidth, (, ), ;, }, public, void, setIntervalWidth, (, double, width, ), {, if, (, width, <]
[), {, throw, new, IllegalArgumentException, (, "Negative 'width' argument.", ), ;, }, this, ., intervalDelegate, ., setFixedIntervalWidth, (, width, ), ;, fireDatasetChanged]
[<, 0.0, ), {, throw, new, IllegalArgumentException, (, "Negative 'width' argument.", ), ;, }, this, ., intervalDelegate, ., setFixedIntervalWidth, (, width, )]
[), {, throw, new, IllegalArgumentException, (, "Negative 'width' argument.", ), ;, }, this, ., intervalDelegate, ., setFixedIntervalWidth, (, width, ), ;, fireDatasetChanged]
[;, }, this, ., intervalDelegate, ., setFixedIntervalWidth, (, width, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }]
[), ;, }, this, ., intervalDelegate, ., setFixedIntervalWidth, (, width, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;]
[;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, double, getIntervalPositionFactor, (, ), {, return, this, ., intervalDelegate]
[., setFixedIntervalWidth, (, width, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, double, getIntervalPositionFactor, (, )]
[., intervalDelegate, ., setFixedIntervalWidth, (, width, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, double, getIntervalPositionFactor]
[), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, double, getIntervalPositionFactor, (, ), {, return, this, .]
[;, }, public, double, getIntervalPositionFactor, (, ), {, return, this, ., intervalDelegate, ., getIntervalPositionFactor, (, ), ;, }, public, void]
[), ;, }, public, double, getIntervalPositionFactor, (, ), {, return, this, ., intervalDelegate, ., getIntervalPositionFactor, (, ), ;, }, public]
[;, }, public, void, setIntervalPositionFactor, (, double, factor, ), {, this, ., intervalDelegate, ., setIntervalPositionFactor, (, factor, ), ;, fireDatasetChanged]
[., getIntervalPositionFactor, (, ), ;, }, public, void, setIntervalPositionFactor, (, double, factor, ), {, this, ., intervalDelegate, ., setIntervalPositionFactor, (]
[., intervalDelegate, ., getIntervalPositionFactor, (, ), ;, }, public, void, setIntervalPositionFactor, (, double, factor, ), {, this, ., intervalDelegate, .]
[;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, boolean, isAutoWidth, (, ), {, return, this, ., intervalDelegate]
[., setIntervalPositionFactor, (, factor, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, boolean, isAutoWidth, (, )]
[., intervalDelegate, ., setIntervalPositionFactor, (, factor, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, boolean, isAutoWidth]
[), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, boolean, isAutoWidth, (, ), {, return, this, .]
[;, }, public, boolean, isAutoWidth, (, ), {, return, this, ., intervalDelegate, ., isAutoWidth, (, ), ;, }, public, void]
[), ;, }, public, boolean, isAutoWidth, (, ), {, return, this, ., intervalDelegate, ., isAutoWidth, (, ), ;, }, public]
[;, }, public, void, setAutoWidth, (, boolean, b, ), {, this, ., intervalDelegate, ., setAutoWidth, (, b, ), ;, fireDatasetChanged]
[., isAutoWidth, (, ), ;, }, public, void, setAutoWidth, (, boolean, b, ), {, this, ., intervalDelegate, ., setAutoWidth, (]
[., intervalDelegate, ., isAutoWidth, (, ), ;, }, public, void, setAutoWidth, (, boolean, b, ), {, this, ., intervalDelegate, .]
[;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, Range, getRangeBounds, (, boolean, includeInterval, ), {, double, lower]
[., setAutoWidth, (, b, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, Range, getRangeBounds, (, boolean]
[., intervalDelegate, ., setAutoWidth, (, b, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, Range, getRangeBounds]
[), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, Range, getRangeBounds, (, boolean, includeInterval, ), {, double]
[;, }, public, Range, getRangeBounds, (, boolean, includeInterval, ), {, double, lower, =, Double, ., POSITIVE_INFINITY, ;, double, upper, =]
[), ;, }, public, Range, getRangeBounds, (, boolean, includeInterval, ), {, double, lower, =, Double, ., POSITIVE_INFINITY, ;, double, upper]
[;, double, upper, =, Double, ., NEGATIVE_INFINITY, ;, int, seriesCount, =, getSeriesCount, (, ), ;, for, (, int, s, =]
[., POSITIVE_INFINITY, ;, double, upper, =, Double, ., NEGATIVE_INFINITY, ;, int, seriesCount, =, getSeriesCount, (, ), ;, for, (, int]
[;, int, seriesCount, =, getSeriesCount, (, ), ;, for, (, int, s, =, 0, ;, s, <, seriesCount, ;, s]
[., NEGATIVE_INFINITY, ;, int, seriesCount, =, getSeriesCount, (, ), ;, for, (, int, s, =, 0, ;, s, <, seriesCount]
[;, for, (, int, s, =, 0, ;, s, <, seriesCount, ;, s, ++, ), {, XYSeries, series, =, getSeries]
[;, s, <, seriesCount, ;, s, ++, ), {, XYSeries, series, =, getSeries, (, s, ), ;, double, minY, =]
[;, s, ++, ), {, XYSeries, series, =, getSeries, (, s, ), ;, double, minY, =, series, ., getMinY, (]
[<, seriesCount, ;, s, ++, ), {, XYSeries, series, =, getSeries, (, s, ), ;, double, minY, =, series, .]
[;, s, ++, ), {, XYSeries, series, =, getSeries, (, s, ), ;, double, minY, =, series, ., getMinY, (]
[), {, XYSeries, series, =, getSeries, (, s, ), ;, double, minY, =, series, ., getMinY, (, ), ;, if]
[++, ), {, XYSeries, series, =, getSeries, (, s, ), ;, double, minY, =, series, ., getMinY, (, ), ;]
[;, double, minY, =, series, ., getMinY, (, ), ;, if, (, !, Double, ., isNaN, (, minY, ), )]
[), ;, double, minY, =, series, ., getMinY, (, ), ;, if, (, !, Double, ., isNaN, (, minY, )]
[;, if, (, !, Double, ., isNaN, (, minY, ), ), {, lower, =, Math, ., min, (, lower, ,]
[., getMinY, (, ), ;, if, (, !, Double, ., isNaN, (, minY, ), ), {, lower, =, Math, .]
[), {, lower, =, Math, ., min, (, lower, ,, minY, ), ;, }, double, maxY, =, series, ., getMaxY]
[), {, lower, =, Math, ., min, (, lower, ,, minY, ), ;, }, double, maxY, =, series, ., getMaxY]
[., isNaN, (, minY, ), ), {, lower, =, Math, ., min, (, lower, ,, minY, ), ;, }, double]
[), ), {, lower, =, Math, ., min, (, lower, ,, minY, ), ;, }, double, maxY, =, series, .]
[=, Math, ., min, (, lower, ,, minY, ), ;, }, double, maxY, =, series, ., getMaxY, (, ), ;]
[;, }, double, maxY, =, series, ., getMaxY, (, ), ;, if, (, !, Double, ., isNaN, (, maxY, )]
[., min, (, lower, ,, minY, ), ;, }, double, maxY, =, series, ., getMaxY, (, ), ;, if, (]
[,, minY, ), ;, }, double, maxY, =, series, ., getMaxY, (, ), ;, if, (, !, Double, ., isNaN]
[), ;, }, double, maxY, =, series, ., getMaxY, (, ), ;, if, (, !, Double, ., isNaN, (, maxY]
[;, if, (, !, Double, ., isNaN, (, maxY, ), ), {, upper, =, Math, ., max, (, upper, ,]
[., getMaxY, (, ), ;, if, (, !, Double, ., isNaN, (, maxY, ), ), {, upper, =, Math, .]
[), {, upper, =, Math, ., max, (, upper, ,, maxY, ), ;, }, }, if, (, lower, >, upper]
[), {, upper, =, Math, ., max, (, upper, ,, maxY, ), ;, }, }, if, (, lower, >, upper]
[., isNaN, (, maxY, ), ), {, upper, =, Math, ., max, (, upper, ,, maxY, ), ;, }, }]
[), ), {, upper, =, Math, ., max, (, upper, ,, maxY, ), ;, }, }, if, (, lower, >]
[=, Math, ., max, (, upper, ,, maxY, ), ;, }, }, if, (, lower, >, upper, ), {, return]
[;, }, }, if, (, lower, >, upper, ), {, return, null, ;, }, else, {, return, new, Range, (]
[., max, (, upper, ,, maxY, ), ;, }, }, if, (, lower, >, upper, ), {, return, null, ;]
[,, maxY, ), ;, }, }, if, (, lower, >, upper, ), {, return, null, ;, }, else, {, return]
[), ;, }, }, if, (, lower, >, upper, ), {, return, null, ;, }, else, {, return, new, Range]
[), {, return, null, ;, }, else, {, return, new, Range, (, lower, ,, upper, ), ;, }, }, public]
[>, upper, ), {, return, null, ;, }, else, {, return, new, Range, (, lower, ,, upper, ), ;, }]
[), {, return, null, ;, }, else, {, return, new, Range, (, lower, ,, upper, ), ;, }, }, public]
[;, }, else, {, return, new, Range, (, lower, ,, upper, ), ;, }, }, public, double, getRangeLowerBound, (, boolean]
[;, }, }, public, double, getRangeLowerBound, (, boolean, includeInterval, ), {, double, result, =, Double, ., NaN, ;, int, seriesCount]
[,, upper, ), ;, }, }, public, double, getRangeLowerBound, (, boolean, includeInterval, ), {, double, result, =, Double, ., NaN]
[), ;, }, }, public, double, getRangeLowerBound, (, boolean, includeInterval, ), {, double, result, =, Double, ., NaN, ;, int]
[;, int, seriesCount, =, getSeriesCount, (, ), ;, for, (, int, s, =, 0, ;, s, <, seriesCount, ;, s]
[., NaN, ;, int, seriesCount, =, getSeriesCount, (, ), ;, for, (, int, s, =, 0, ;, s, <, seriesCount]
[;, for, (, int, s, =, 0, ;, s, <, seriesCount, ;, s, ++, ), {, XYSeries, series, =, getSeries]
[;, s, <, seriesCount, ;, s, ++, ), {, XYSeries, series, =, getSeries, (, s, ), ;, double, lowY, =]
[;, s, ++, ), {, XYSeries, series, =, getSeries, (, s, ), ;, double, lowY, =, series, ., getMinY, (]
[<, seriesCount, ;, s, ++, ), {, XYSeries, series, =, getSeries, (, s, ), ;, double, lowY, =, series, .]
[;, s, ++, ), {, XYSeries, series, =, getSeries, (, s, ), ;, double, lowY, =, series, ., getMinY, (]
[), {, XYSeries, series, =, getSeries, (, s, ), ;, double, lowY, =, series, ., getMinY, (, ), ;, if]
[++, ), {, XYSeries, series, =, getSeries, (, s, ), ;, double, lowY, =, series, ., getMinY, (, ), ;]
[;, double, lowY, =, series, ., getMinY, (, ), ;, if, (, Double, ., isNaN, (, result, ), ), {]
[), ;, double, lowY, =, series, ., getMinY, (, ), ;, if, (, Double, ., isNaN, (, result, ), )]
[;, if, (, Double, ., isNaN, (, result, ), ), {, result, =, lowY, ;, }, else, {, if, (]
[., getMinY, (, ), ;, if, (, Double, ., isNaN, (, result, ), ), {, result, =, lowY, ;, }]
[), {, result, =, lowY, ;, }, else, {, if, (, !, Double, ., isNaN, (, lowY, ), ), {]
[., isNaN, (, result, ), ), {, result, =, lowY, ;, }, else, {, if, (, !, Double, ., isNaN]
[), ), {, result, =, lowY, ;, }, else, {, if, (, !, Double, ., isNaN, (, lowY, ), )]
[=, lowY, ;, }, else, {, if, (, !, Double, ., isNaN, (, lowY, ), ), {, result, =, Math]
[;, }, else, {, if, (, !, Double, ., isNaN, (, lowY, ), ), {, result, =, Math, ., min]
[), {, result, =, Math, ., min, (, result, ,, lowY, ), ;, }, }, }, return, result, ;, }]
[), {, result, =, Math, ., min, (, result, ,, lowY, ), ;, }, }, }, return, result, ;, }]
[., isNaN, (, lowY, ), ), {, result, =, Math, ., min, (, result, ,, lowY, ), ;, }, }]
[), ), {, result, =, Math, ., min, (, result, ,, lowY, ), ;, }, }, }, return, result, ;]
[=, Math, ., min, (, result, ,, lowY, ), ;, }, }, }, return, result, ;, }, public, double, getRangeUpperBound]
[;, }, }, }, return, result, ;, }, public, double, getRangeUpperBound, (, boolean, includeInterval, ), {, double, result, =, Double]
[., min, (, result, ,, lowY, ), ;, }, }, }, return, result, ;, }, public, double, getRangeUpperBound, (, boolean]
[,, lowY, ), ;, }, }, }, return, result, ;, }, public, double, getRangeUpperBound, (, boolean, includeInterval, ), {, double]
[), ;, }, }, }, return, result, ;, }, public, double, getRangeUpperBound, (, boolean, includeInterval, ), {, double, result, =]
[;, }, public, double, getRangeUpperBound, (, boolean, includeInterval, ), {, double, result, =, Double, ., NaN, ;, int, seriesCount, =]
[;, int, seriesCount, =, getSeriesCount, (, ), ;, for, (, int, s, =, 0, ;, s, <, seriesCount, ;, s]
[., NaN, ;, int, seriesCount, =, getSeriesCount, (, ), ;, for, (, int, s, =, 0, ;, s, <, seriesCount]
[;, for, (, int, s, =, 0, ;, s, <, seriesCount, ;, s, ++, ), {, XYSeries, series, =, getSeries]
[;, s, <, seriesCount, ;, s, ++, ), {, XYSeries, series, =, getSeries, (, s, ), ;, double, hiY, =]
[;, s, ++, ), {, XYSeries, series, =, getSeries, (, s, ), ;, double, hiY, =, series, ., getMaxY, (]
[<, seriesCount, ;, s, ++, ), {, XYSeries, series, =, getSeries, (, s, ), ;, double, hiY, =, series, .]
[;, s, ++, ), {, XYSeries, series, =, getSeries, (, s, ), ;, double, hiY, =, series, ., getMaxY, (]
[), {, XYSeries, series, =, getSeries, (, s, ), ;, double, hiY, =, series, ., getMaxY, (, ), ;, if]
[++, ), {, XYSeries, series, =, getSeries, (, s, ), ;, double, hiY, =, series, ., getMaxY, (, ), ;]
[;, double, hiY, =, series, ., getMaxY, (, ), ;, if, (, Double, ., isNaN, (, result, ), ), {]
[), ;, double, hiY, =, series, ., getMaxY, (, ), ;, if, (, Double, ., isNaN, (, result, ), )]
[;, if, (, Double, ., isNaN, (, result, ), ), {, result, =, hiY, ;, }, else, {, if, (]
[., getMaxY, (, ), ;, if, (, Double, ., isNaN, (, result, ), ), {, result, =, hiY, ;, }]
[), {, result, =, hiY, ;, }, else, {, if, (, !, Double, ., isNaN, (, hiY, ), ), {]
[., isNaN, (, result, ), ), {, result, =, hiY, ;, }, else, {, if, (, !, Double, ., isNaN]
[), ), {, result, =, hiY, ;, }, else, {, if, (, !, Double, ., isNaN, (, hiY, ), )]
[=, hiY, ;, }, else, {, if, (, !, Double, ., isNaN, (, hiY, ), ), {, result, =, Math]
[;, }, else, {, if, (, !, Double, ., isNaN, (, hiY, ), ), {, result, =, Math, ., max]
[), {, result, =, Math, ., max, (, result, ,, hiY, ), ;, }, }, }, return, result, ;, }]
[), {, result, =, Math, ., max, (, result, ,, hiY, ), ;, }, }, }, return, result, ;, }]
[., isNaN, (, hiY, ), ), {, result, =, Math, ., max, (, result, ,, hiY, ), ;, }, }]
[), ), {, result, =, Math, ., max, (, result, ,, hiY, ), ;, }, }, }, return, result, ;]
[=, Math, ., max, (, result, ,, hiY, ), ;, }, }, }, return, result, ;, }, }]
[;, }, }, }, return, result, ;, }, }]
[., max, (, result, ,, hiY, ), ;, }, }, }, return, result, ;, }, }]
[,, hiY, ), ;, }, }, }, return, result, ;, }, }]
[), ;, }, }, }, return, result, ;, }, }]
[;, }, }]
