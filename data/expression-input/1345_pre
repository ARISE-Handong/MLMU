[commons, ., math3, ., util, ., FastMath, ;, public, class, CanberraDistance, implements, DistanceMeasure, {, private, static, final, long, serialVersionUID, =]
[., math3, ., util, ., FastMath, ;, public, class, CanberraDistance, implements, DistanceMeasure, {, private, static, final, long, serialVersionUID, =, -]
[6972277381587032228L, ;, public, double, compute, (, double, [, ], a, ,, double, [, ], b, ), {, double, sum, =]
[[, ], a, ,, double, [, ], b, ), {, double, sum, =, 0, ;, for, (, int, i, =]
[a, ,, double, [, ], b, ), {, double, sum, =, 0, ;, for, (, int, i, =, 0, ;]
[a, ,, double, [, ], b, ), {, double, sum, =, 0, ;, for, (, int, i, =, 0, ;]
[double, [, ], b, ), {, double, sum, =, 0, ;, for, (, int, i, =, 0, ;, i, <]
[double, [, ], b, ), {, double, sum, =, 0, ;, for, (, int, i, =, 0, ;, i, <]
[), {, double, sum, =, 0, ;, for, (, int, i, =, 0, ;, i, <, a, ., length, ;]
[), {, double, sum, =, 0, ;, for, (, int, i, =, 0, ;, i, <, a, ., length, ;]
[(, int, i, =, 0, ;, i, <, a, ., length, ;, i, ++, ), {, final, double, num, =]
[(, int, i, =, 0, ;, i, <, a, ., length, ;, i, ++, ), {, final, double, num, =]
[0, ;, i, <, a, ., length, ;, i, ++, ), {, final, double, num, =, FastMath, ., abs, (]
[0, ;, i, <, a, ., length, ;, i, ++, ), {, final, double, num, =, FastMath, ., abs, (]
[0, ;, i, <, a, ., length, ;, i, ++, ), {, final, double, num, =, FastMath, ., abs, (]
[i, <, a, ., length, ;, i, ++, ), {, final, double, num, =, FastMath, ., abs, (, a, []
[., length, ;, i, ++, ), {, final, double, num, =, FastMath, ., abs, (, a, [, i, ], -]
[., length, ;, i, ++, ), {, final, double, num, =, FastMath, ., abs, (, a, [, i, ], -]
[;, i, ++, ), {, final, double, num, =, FastMath, ., abs, (, a, [, i, ], -, b, []
[=, FastMath, ., abs, (, a, [, i, ], -, b, [, i, ], ), ;, final, double, denom, =]
[=, FastMath, ., abs, (, a, [, i, ], -, b, [, i, ], ), ;, final, double, denom, =]
[=, FastMath, ., abs, (, a, [, i, ], -, b, [, i, ], ), ;, final, double, denom, =]
[(, a, [, i, ], -, b, [, i, ], ), ;, final, double, denom, =, FastMath, ., abs, (]
[(, a, [, i, ], -, b, [, i, ], ), ;, final, double, denom, =, FastMath, ., abs, (]
[[, i, ], -, b, [, i, ], ), ;, final, double, denom, =, FastMath, ., abs, (, a, []
[b, [, i, ], ), ;, final, double, denom, =, FastMath, ., abs, (, a, [, i, ], ), +]
[b, [, i, ], ), ;, final, double, denom, =, FastMath, ., abs, (, a, [, i, ], ), +]
[), ;, final, double, denom, =, FastMath, ., abs, (, a, [, i, ], ), +, FastMath, ., abs, (]
[), ;, final, double, denom, =, FastMath, ., abs, (, a, [, i, ], ), +, FastMath, ., abs, (]
[final, double, denom, =, FastMath, ., abs, (, a, [, i, ], ), +, FastMath, ., abs, (, b, []
[FastMath, ., abs, (, a, [, i, ], ), +, FastMath, ., abs, (, b, [, i, ], ), ;]
[abs, (, a, [, i, ], ), +, FastMath, ., abs, (, b, [, i, ], ), ;, sum, +=]
[abs, (, a, [, i, ], ), +, FastMath, ., abs, (, b, [, i, ], ), ;, sum, +=]
[abs, (, a, [, i, ], ), +, FastMath, ., abs, (, b, [, i, ], ), ;, sum, +=]
[abs, (, a, [, i, ], ), +, FastMath, ., abs, (, b, [, i, ], ), ;, sum, +=]
[a, [, i, ], ), +, FastMath, ., abs, (, b, [, i, ], ), ;, sum, +=, num, ==]
[i, ], ), +, FastMath, ., abs, (, b, [, i, ], ), ;, sum, +=, num, ==, 0.0, &&]
[i, ], ), +, FastMath, ., abs, (, b, [, i, ], ), ;, sum, +=, num, ==, 0.0, &&]
[), +, FastMath, ., abs, (, b, [, i, ], ), ;, sum, +=, num, ==, 0.0, &&, denom, ==]
[FastMath, ., abs, (, b, [, i, ], ), ;, sum, +=, num, ==, 0.0, &&, denom, ==, 0.0, ?]
[abs, (, b, [, i, ], ), ;, sum, +=, num, ==, 0.0, &&, denom, ==, 0.0, ?, 0.0, :]
[abs, (, b, [, i, ], ), ;, sum, +=, num, ==, 0.0, &&, denom, ==, 0.0, ?, 0.0, :]
[b, [, i, ], ), ;, sum, +=, num, ==, 0.0, &&, denom, ==, 0.0, ?, 0.0, :, num, /]
[), ;, sum, +=, num, ==, 0.0, &&, denom, ==, 0.0, ?, 0.0, :, num, /, denom, ;, }, return]
