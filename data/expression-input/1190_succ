[;, for, (, Class, <, ?, >, clazz, =, instance, ., getClass, (, ), ;, clazz, !=, Object, ., class]
[;, clazz, !=, Object, ., class, ;, clazz, =, clazz, ., getSuperclass, (, ), ), {, instanceFields, ., addAll, (]
[., getClass, (, ), ;, clazz, !=, Object, ., class, ;, clazz, =, clazz, ., getSuperclass, (, ), ), {]
[;, clazz, =, clazz, ., getSuperclass, (, ), ), {, instanceFields, ., addAll, (, instanceFieldsIn, (, instance, ,, clazz, .]
[!=, Object, ., class, ;, clazz, =, clazz, ., getSuperclass, (, ), ), {, instanceFields, ., addAll, (, instanceFieldsIn, (]
[;, clazz, =, clazz, ., getSuperclass, (, ), ), {, instanceFields, ., addAll, (, instanceFieldsIn, (, instance, ,, clazz, .]
[=, clazz, ., getSuperclass, (, ), ), {, instanceFields, ., addAll, (, instanceFieldsIn, (, instance, ,, clazz, ., getDeclaredFields, (]
[), {, instanceFields, ., addAll, (, instanceFieldsIn, (, instance, ,, clazz, ., getDeclaredFields, (, ), ), ), ;, }, return]
[., getSuperclass, (, ), ), {, instanceFields, ., addAll, (, instanceFieldsIn, (, instance, ,, clazz, ., getDeclaredFields, (, ), )]
[;, }, return, new, InstanceFields, (, instance, ,, instanceFields, ), ;, }, public, static, InstanceFields, declaredFieldsOf, (, Object, instance, )]
[., addAll, (, instanceFieldsIn, (, instance, ,, clazz, ., getDeclaredFields, (, ), ), ), ;, }, return, new, InstanceFields, (]
[), ;, }, return, new, InstanceFields, (, instance, ,, instanceFields, ), ;, }, public, static, InstanceFields, declaredFieldsOf, (, Object, instance]
[,, clazz, ., getDeclaredFields, (, ), ), ), ;, }, return, new, InstanceFields, (, instance, ,, instanceFields, ), ;, }]
[), ), ;, }, return, new, InstanceFields, (, instance, ,, instanceFields, ), ;, }, public, static, InstanceFields, declaredFieldsOf, (, Object]
[., getDeclaredFields, (, ), ), ), ;, }, return, new, InstanceFields, (, instance, ,, instanceFields, ), ;, }, public, static]
[;, }, public, static, InstanceFields, declaredFieldsOf, (, Object, instance, ), {, List, <, InstanceField, >, instanceFields, =, new, ArrayList, <]
[,, instanceFields, ), ;, }, public, static, InstanceFields, declaredFieldsOf, (, Object, instance, ), {, List, <, InstanceField, >, instanceFields, =]
[), ;, }, public, static, InstanceFields, declaredFieldsOf, (, Object, instance, ), {, List, <, InstanceField, >, instanceFields, =, new, ArrayList]
[;, instanceFields, ., addAll, (, instanceFieldsIn, (, instance, ,, instance, ., getClass, (, ), ., getDeclaredFields, (, ), ), )]
[;, return, new, InstanceFields, (, instance, ,, instanceFields, ), ;, }, private, static, List, <, InstanceField, >, instanceFieldsIn, (, Object]
[., addAll, (, instanceFieldsIn, (, instance, ,, instance, ., getClass, (, ), ., getDeclaredFields, (, ), ), ), ;, return]
[), ;, return, new, InstanceFields, (, instance, ,, instanceFields, ), ;, }, private, static, List, <, InstanceField, >, instanceFieldsIn, (]
[,, instance, ., getClass, (, ), ., getDeclaredFields, (, ), ), ), ;, return, new, InstanceFields, (, instance, ,, instanceFields]
[), ), ;, return, new, InstanceFields, (, instance, ,, instanceFields, ), ;, }, private, static, List, <, InstanceField, >, instanceFieldsIn]
[., getDeclaredFields, (, ), ), ), ;, return, new, InstanceFields, (, instance, ,, instanceFields, ), ;, }, private, static, List]
[., getClass, (, ), ., getDeclaredFields, (, ), ), ), ;, return, new, InstanceFields, (, instance, ,, instanceFields, ), ;]
[;, }, private, static, List, <, InstanceField, >, instanceFieldsIn, (, Object, instance, ,, Field, [, ], fields, ), {, List]
[,, instanceFields, ), ;, }, private, static, List, <, InstanceField, >, instanceFieldsIn, (, Object, instance, ,, Field, [, ], fields]
[), ;, }, private, static, List, <, InstanceField, >, instanceFieldsIn, (, Object, instance, ,, Field, [, ], fields, ), {]
[;, for, (, Field, field, :, fields, ), {, InstanceField, instanceField, =, new, InstanceField, (, field, ,, instance, ), ;]
[), {, InstanceField, instanceField, =, new, InstanceField, (, field, ,, instance, ), ;, instanceDeclaredFields, ., add, (, instanceField, ), ;]
[;, instanceDeclaredFields, ., add, (, instanceField, ), ;, }, return, instanceDeclaredFields, ;, }, public, static, Filter, <, InstanceField, >, annotatedBy]
[,, instance, ), ;, instanceDeclaredFields, ., add, (, instanceField, ), ;, }, return, instanceDeclaredFields, ;, }, public, static, Filter, <]
[), ;, instanceDeclaredFields, ., add, (, instanceField, ), ;, }, return, instanceDeclaredFields, ;, }, public, static, Filter, <, InstanceField, >]
[;, }, return, instanceDeclaredFields, ;, }, public, static, Filter, <, InstanceField, >, annotatedBy, (, final, Class, <, ?, extends, Annotation]
[., add, (, instanceField, ), ;, }, return, instanceDeclaredFields, ;, }, public, static, Filter, <, InstanceField, >, annotatedBy, (, final]
[), ;, }, return, instanceDeclaredFields, ;, }, public, static, Filter, <, InstanceField, >, annotatedBy, (, final, Class, <, ?, extends]
[;, }, public, static, Filter, <, InstanceField, >, annotatedBy, (, final, Class, <, ?, extends, Annotation, >, ..., annotations, )]
[;, }, private, static, Filter, <, InstanceField, >, nullField, (, ), {, return, new, Filter, <, InstanceField, >, (, )]
[;, for, (, Class, <, ?, extends, Annotation, >, annotation, :, annotations, ), {, if, (, instanceField, ., isAnnotatedBy, (]
[., checkNotNull, (, annotations, ,, "Provide at least one annotation class", ), ;, for, (, Class, <, ?, extends, Annotation, >, annotation, :, annotations, )]
[,, "Provide at least one annotation class", ), ;, for, (, Class, <, ?, extends, Annotation, >, annotation, :, annotations, ), {, if, (, instanceField]
[), ;, for, (, Class, <, ?, extends, Annotation, >, annotation, :, annotations, ), {, if, (, instanceField, ., isAnnotatedBy]
[), {, if, (, instanceField, ., isAnnotatedBy, (, annotation, ), ), {, return, false, ;, }, }, return, true, ;]
[), {, return, false, ;, }, }, return, true, ;, }, }, ;, }, private, static, Filter, <, InstanceField, >]
[., isAnnotatedBy, (, annotation, ), ), {, return, false, ;, }, }, return, true, ;, }, }, ;, }, private]
[), ), {, return, false, ;, }, }, return, true, ;, }, }, ;, }, private, static, Filter, <, InstanceField]
[;, }, }, return, true, ;, }, }, ;, }, private, static, Filter, <, InstanceField, >, nullField, (, ), {]
[;, }, }, ;, }, private, static, Filter, <, InstanceField, >, nullField, (, ), {, return, new, Filter, <, InstanceField]
[;, }, public, static, class, InstanceFields, {, private, final, Object, instance, ;, private, final, List, <, InstanceField, >, instanceFields, ;]
[;, }, }, ;, }, public, static, class, InstanceFields, {, private, final, Object, instance, ;, private, final, List, <, InstanceField]
[., isNull, (, ), ;, }, }, ;, }, public, static, class, InstanceFields, {, private, final, Object, instance, ;, private]
[=, instance, ;, this, ., instanceFields, =, instanceFields, ;, }, public, InstanceFields, filter, (, Filter, <, InstanceField, >, withFilter, )]
[., instance, =, instance, ;, this, ., instanceFields, =, instanceFields, ;, }, public, InstanceFields, filter, (, Filter, <, InstanceField, >]
[;, this, ., instanceFields, =, instanceFields, ;, }, public, InstanceFields, filter, (, Filter, <, InstanceField, >, withFilter, ), {, return]
[=, instanceFields, ;, }, public, InstanceFields, filter, (, Filter, <, InstanceField, >, withFilter, ), {, return, new, InstanceFields, (, instance]
[., instanceFields, =, instanceFields, ;, }, public, InstanceFields, filter, (, Filter, <, InstanceField, >, withFilter, ), {, return, new, InstanceFields]
[;, }, public, InstanceFields, filter, (, Filter, <, InstanceField, >, withFilter, ), {, return, new, InstanceFields, (, instance, ,, ListUtil]
[;, }, public, InstanceFields, notNull, (, ), {, return, filter, (, nullField, (, ), ), ;, }, public, List, <]
[,, ListUtil, ., filter, (, instanceFields, ,, withFilter, ), ), ;, }, public, InstanceFields, notNull, (, ), {, return, filter]
[), ;, }, public, InstanceFields, notNull, (, ), {, return, filter, (, nullField, (, ), ), ;, }, public, List]
[., filter, (, instanceFields, ,, withFilter, ), ), ;, }, public, InstanceFields, notNull, (, ), {, return, filter, (, nullField]
[,, withFilter, ), ), ;, }, public, InstanceFields, notNull, (, ), {, return, filter, (, nullField, (, ), ), ;]
[), ), ;, }, public, InstanceFields, notNull, (, ), {, return, filter, (, nullField, (, ), ), ;, }, public]
[;, }, public, List, <, InstanceField, >, instanceFields, (, ), {, return, new, ArrayList, <, InstanceField, >, (, instanceFields, )]
[), ;, }, public, List, <, InstanceField, >, instanceFields, (, ), {, return, new, ArrayList, <, InstanceField, >, (, instanceFields]
[;, }, public, List, <, Object, >, assignedValues, (, ), {, List, <, Object, >, values, =, new, ArrayList, <]
[), ;, }, public, List, <, Object, >, assignedValues, (, ), {, List, <, Object, >, values, =, new, ArrayList]
[;, for, (, InstanceField, instanceField, :, instanceFields, ), {, values, ., add, (, instanceField, ., read, (, ), ), ;]
[), ;, for, (, InstanceField, instanceField, :, instanceFields, ), {, values, ., add, (, instanceField, ., read, (, ), )]
[., size, (, ), ), ;, for, (, InstanceField, instanceField, :, instanceFields, ), {, values, ., add, (, instanceField, .]
[), {, values, ., add, (, instanceField, ., read, (, ), ), ;, }, return, values, ;, }, public, List]
[;, }, return, values, ;, }, public, List, <, String, >, names, (, ), {, List, <, String, >, fieldNames]
[., add, (, instanceField, ., read, (, ), ), ;, }, return, values, ;, }, public, List, <, String, >]
[), ;, }, return, values, ;, }, public, List, <, String, >, names, (, ), {, List, <, String, >]
[., read, (, ), ), ;, }, return, values, ;, }, public, List, <, String, >, names, (, ), {]
[;, }, public, List, <, String, >, names, (, ), {, List, <, String, >, fieldNames, =, new, ArrayList, <]
[;, for, (, InstanceField, instanceField, :, instanceFields, ), {, fieldNames, ., add, (, instanceField, ., name, (, ), ), ;]
[), ;, for, (, InstanceField, instanceField, :, instanceFields, ), {, fieldNames, ., add, (, instanceField, ., name, (, ), )]
[., size, (, ), ), ;, for, (, InstanceField, instanceField, :, instanceFields, ), {, fieldNames, ., add, (, instanceField, .]
[), {, fieldNames, ., add, (, instanceField, ., name, (, ), ), ;, }, return, fieldNames, ;, }, }, }]
[;, }, return, fieldNames, ;, }, }, }]
[., add, (, instanceField, ., name, (, ), ), ;, }, return, fieldNames, ;, }, }, }]
[), ;, }, return, fieldNames, ;, }, }, }]
[., name, (, ), ), ;, }, return, fieldNames, ;, }, }, }]
[;, }, }, }]
