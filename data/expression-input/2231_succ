[;, public, static, final, Layer, FOREGROUND, =, new, Layer, (, "Layer.FOREGROUND", ), ;, public, static, final, Layer, BACKGROUND, =, new]
[;, public, static, final, Layer, FOREGROUND, =, new, Layer, (, "Layer.FOREGROUND", ), ;, public, static, final, Layer, BACKGROUND, =, new]
[;, public, static, final, Layer, BACKGROUND, =, new, Layer, (, "Layer.BACKGROUND", ), ;, private, String, name, ;, private, Layer, (]
[), ;, public, static, final, Layer, BACKGROUND, =, new, Layer, (, "Layer.BACKGROUND", ), ;, private, String, name, ;, private, Layer]
[;, private, String, name, ;, private, Layer, (, String, name, ), {, this, ., name, =, name, ;, }, public]
[), ;, private, String, name, ;, private, Layer, (, String, name, ), {, this, ., name, =, name, ;, }]
[=, name, ;, }, public, String, toString, (, ), {, return, this, ., name, ;, }, public, boolean, equals, (]
[., name, =, name, ;, }, public, String, toString, (, ), {, return, this, ., name, ;, }, public, boolean]
[;, }, public, String, toString, (, ), {, return, this, ., name, ;, }, public, boolean, equals, (, Object, obj]
[;, }, public, boolean, equals, (, Object, obj, ), {, if, (, this, ==, obj, ), {, return, true, ;]
[., name, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, this, ==, obj, ), {, return]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, Layer, ), ), {, return, false, ;, }]
[==, obj, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, Layer, ), ), {, return, false]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, Layer, ), ), {, return, false, ;, }]
[;, }, if, (, !, (, obj, instanceof, Layer, ), ), {, return, false, ;, }, Layer, layer, =, (]
[), {, return, false, ;, }, Layer, layer, =, (, Layer, ), obj, ;, if, (, !, this, ., name]
[), {, return, false, ;, }, Layer, layer, =, (, Layer, ), obj, ;, if, (, !, this, ., name]
[), ), {, return, false, ;, }, Layer, layer, =, (, Layer, ), obj, ;, if, (, !, this, .]
[instanceof, Layer, ), ), {, return, false, ;, }, Layer, layer, =, (, Layer, ), obj, ;, if, (, !]
[;, }, Layer, layer, =, (, Layer, ), obj, ;, if, (, !, this, ., name, ., equals, (, layer]
[;, if, (, !, this, ., name, ., equals, (, layer, ., name, ), ), {, return, false, ;, }]
[;, if, (, !, this, ., name, ., equals, (, layer, ., name, ), ), {, return, false, ;, }]
[), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, return, this, ., name]
[), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, return, this, ., name]
[., equals, (, layer, ., name, ), ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode]
[., name, ., equals, (, layer, ., name, ), ), {, return, false, ;, }, return, true, ;, }, public]
[), ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, return, this, .]
[., name, ), ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, return]
[;, }, return, true, ;, }, public, int, hashCode, (, ), {, return, this, ., name, ., hashCode, (, )]
[;, }, public, int, hashCode, (, ), {, return, this, ., name, ., hashCode, (, ), ;, }, private, Object]
[;, }, private, Object, readResolve, (, ), throws, ObjectStreamException, {, Layer, result, =, null, ;, if, (, this, ., equals]
[., hashCode, (, ), ;, }, private, Object, readResolve, (, ), throws, ObjectStreamException, {, Layer, result, =, null, ;, if]
[., name, ., hashCode, (, ), ;, }, private, Object, readResolve, (, ), throws, ObjectStreamException, {, Layer, result, =, null]
[;, if, (, this, ., equals, (, Layer, ., FOREGROUND, ), ), {, result, =, Layer, ., FOREGROUND, ;, }]
[), {, result, =, Layer, ., FOREGROUND, ;, }, else, if, (, this, ., equals, (, Layer, ., BACKGROUND, )]
[., equals, (, Layer, ., FOREGROUND, ), ), {, result, =, Layer, ., FOREGROUND, ;, }, else, if, (, this]
[), ), {, result, =, Layer, ., FOREGROUND, ;, }, else, if, (, this, ., equals, (, Layer, ., BACKGROUND]
[., FOREGROUND, ), ), {, result, =, Layer, ., FOREGROUND, ;, }, else, if, (, this, ., equals, (, Layer]
[=, Layer, ., FOREGROUND, ;, }, else, if, (, this, ., equals, (, Layer, ., BACKGROUND, ), ), {, result]
[;, }, else, if, (, this, ., equals, (, Layer, ., BACKGROUND, ), ), {, result, =, Layer, ., BACKGROUND]
[., FOREGROUND, ;, }, else, if, (, this, ., equals, (, Layer, ., BACKGROUND, ), ), {, result, =, Layer]
[), {, result, =, Layer, ., BACKGROUND, ;, }, return, result, ;, }, }]
[., equals, (, Layer, ., BACKGROUND, ), ), {, result, =, Layer, ., BACKGROUND, ;, }, return, result, ;, }]
[), ), {, result, =, Layer, ., BACKGROUND, ;, }, return, result, ;, }, }]
[., BACKGROUND, ), ), {, result, =, Layer, ., BACKGROUND, ;, }, return, result, ;, }, }]
[=, Layer, ., BACKGROUND, ;, }, return, result, ;, }, }]
[;, }, return, result, ;, }, }]
[., BACKGROUND, ;, }, return, result, ;, }, }]
[;, }, }]
