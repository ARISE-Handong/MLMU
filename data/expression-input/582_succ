[;, protected, FourthMoment, moment, ;, protected, boolean, incMoment, ;, public, Kurtosis, (, ), {, incMoment, =, true, ;, moment, =]
[=, true, ;, moment, =, new, FourthMoment, (, ), ;, }, public, Kurtosis, (, final, FourthMoment, m4, ), {, incMoment]
[;, moment, =, new, FourthMoment, (, ), ;, }, public, Kurtosis, (, final, FourthMoment, m4, ), {, incMoment, =, false]
[=, new, FourthMoment, (, ), ;, }, public, Kurtosis, (, final, FourthMoment, m4, ), {, incMoment, =, false, ;, this]
[;, }, public, Kurtosis, (, final, FourthMoment, m4, ), {, incMoment, =, false, ;, this, ., moment, =, m4, ;]
[=, false, ;, this, ., moment, =, m4, ;, }, public, Kurtosis, (, Kurtosis, original, ), throws, NullArgumentException, {, copy]
[;, this, ., moment, =, m4, ;, }, public, Kurtosis, (, Kurtosis, original, ), throws, NullArgumentException, {, copy, (, original]
[=, m4, ;, }, public, Kurtosis, (, Kurtosis, original, ), throws, NullArgumentException, {, copy, (, original, ,, this, ), ;]
[., moment, =, m4, ;, }, public, Kurtosis, (, Kurtosis, original, ), throws, NullArgumentException, {, copy, (, original, ,, this]
[;, }, public, Kurtosis, (, Kurtosis, original, ), throws, NullArgumentException, {, copy, (, original, ,, this, ), ;, }, @]
[;, }, @, Override, public, void, increment, (, final, double, d, ), {, if, (, incMoment, ), {, moment, .]
[,, this, ), ;, }, @, Override, public, void, increment, (, final, double, d, ), {, if, (, incMoment, )]
[), ;, }, @, Override, public, void, increment, (, final, double, d, ), {, if, (, incMoment, ), {, moment]
[), {, moment, ., increment, (, d, ), ;, }, }, @, Override, public, double, getResult, (, ), {, double]
[;, }, }, @, Override, public, double, getResult, (, ), {, double, kurtosis, =, Double, ., NaN, ;, if, (]
[., increment, (, d, ), ;, }, }, @, Override, public, double, getResult, (, ), {, double, kurtosis, =, Double]
[), ;, }, }, @, Override, public, double, getResult, (, ), {, double, kurtosis, =, Double, ., NaN, ;, if]
[;, if, (, moment, ., getN, (, ), >, 3, ), {, double, variance, =, moment, ., m2, /, (]
[., NaN, ;, if, (, moment, ., getN, (, ), >, 3, ), {, double, variance, =, moment, ., m2]
[), {, double, variance, =, moment, ., m2, /, (, moment, ., n, -, 1, ), ;, if, (, moment]
[>, 3, ), {, double, variance, =, moment, ., m2, /, (, moment, ., n, -, 1, ), ;, if]
[., getN, (, ), >, 3, ), {, double, variance, =, moment, ., m2, /, (, moment, ., n, -]
[), {, double, variance, =, moment, ., m2, /, (, moment, ., n, -, 1, ), ;, if, (, moment]
[;, if, (, moment, ., n, <=, 3, ||, variance, <, 10E-20, ), {, kurtosis, =, 0.0, ;, }, else]
[/, (, moment, ., n, -, 1, ), ;, if, (, moment, ., n, <=, 3, ||, variance, <, 10E-20]
[., m2, /, (, moment, ., n, -, 1, ), ;, if, (, moment, ., n, <=, 3, ||, variance]
[;, if, (, moment, ., n, <=, 3, ||, variance, <, 10E-20, ), {, kurtosis, =, 0.0, ;, }, else]
[), ;, if, (, moment, ., n, <=, 3, ||, variance, <, 10E-20, ), {, kurtosis, =, 0.0, ;, }]
[-, 1, ), ;, if, (, moment, ., n, <=, 3, ||, variance, <, 10E-20, ), {, kurtosis, =, 0.0]
[., n, -, 1, ), ;, if, (, moment, ., n, <=, 3, ||, variance, <, 10E-20, ), {, kurtosis]
[), ;, if, (, moment, ., n, <=, 3, ||, variance, <, 10E-20, ), {, kurtosis, =, 0.0, ;, }]
[), {, kurtosis, =, 0.0, ;, }, else, {, double, n, =, moment, ., n, ;, kurtosis, =, (, n]
[||, variance, <, 10E-20, ), {, kurtosis, =, 0.0, ;, }, else, {, double, n, =, moment, ., n, ;]
[<=, 3, ||, variance, <, 10E-20, ), {, kurtosis, =, 0.0, ;, }, else, {, double, n, =, moment, .]
[., n, <=, 3, ||, variance, <, 10E-20, ), {, kurtosis, =, 0.0, ;, }, else, {, double, n, =]
[||, variance, <, 10E-20, ), {, kurtosis, =, 0.0, ;, }, else, {, double, n, =, moment, ., n, ;]
[), {, kurtosis, =, 0.0, ;, }, else, {, double, n, =, moment, ., n, ;, kurtosis, =, (, n]
[<, 10E-20, ), {, kurtosis, =, 0.0, ;, }, else, {, double, n, =, moment, ., n, ;, kurtosis, =]
[), {, kurtosis, =, 0.0, ;, }, else, {, double, n, =, moment, ., n, ;, kurtosis, =, (, n]
[=, 0.0, ;, }, else, {, double, n, =, moment, ., n, ;, kurtosis, =, (, n, *, (, n]
[;, }, else, {, double, n, =, moment, ., n, ;, kurtosis, =, (, n, *, (, n, +, 1]
[;, kurtosis, =, (, n, *, (, n, +, 1, ), *, moment, ., getResult, (, ), -, 3, *]
[., n, ;, kurtosis, =, (, n, *, (, n, +, 1, ), *, moment, ., getResult, (, ), -]
[=, (, n, *, (, n, +, 1, ), *, moment, ., getResult, (, ), -, 3, *, moment, .]
[;, }, }, return, kurtosis, ;, }, @, Override, public, void, clear, (, ), {, if, (, incMoment, ), {]
[/, (, (, n, -, 1, ), *, (, n, -, 2, ), *, (, n, -, 3, ), *]
[), /, (, (, n, -, 1, ), *, (, n, -, 2, ), *, (, n, -, 3, )]
[-, 3, *, moment, ., m2, *, moment, ., m2, *, (, n, -, 1, ), ), /, (, (]
[*, moment, ., getResult, (, ), -, 3, *, moment, ., m2, *, moment, ., m2, *, (, n, -]
[*, (, n, +, 1, ), *, moment, ., getResult, (, ), -, 3, *, moment, ., m2, *, moment]
[*, moment, ., getResult, (, ), -, 3, *, moment, ., m2, *, moment, ., m2, *, (, n, -]
[), *, moment, ., getResult, (, ), -, 3, *, moment, ., m2, *, moment, ., m2, *, (, n]
[+, 1, ), *, moment, ., getResult, (, ), -, 3, *, moment, ., m2, *, moment, ., m2, *]
[), *, moment, ., getResult, (, ), -, 3, *, moment, ., m2, *, moment, ., m2, *, (, n]
[-, 3, *, moment, ., m2, *, moment, ., m2, *, (, n, -, 1, ), ), /, (, (]
[., getResult, (, ), -, 3, *, moment, ., m2, *, moment, ., m2, *, (, n, -, 1, )]
[), /, (, (, n, -, 1, ), *, (, n, -, 2, ), *, (, n, -, 3, )]
[*, (, n, -, 1, ), ), /, (, (, n, -, 1, ), *, (, n, -, 2, )]
[*, moment, ., m2, *, (, n, -, 1, ), ), /, (, (, n, -, 1, ), *, (]
[*, moment, ., m2, *, moment, ., m2, *, (, n, -, 1, ), ), /, (, (, n, -]
[*, moment, ., m2, *, (, n, -, 1, ), ), /, (, (, n, -, 1, ), *, (]
[., m2, *, moment, ., m2, *, (, n, -, 1, ), ), /, (, (, n, -, 1, )]
[*, (, n, -, 1, ), ), /, (, (, n, -, 1, ), *, (, n, -, 2, )]
[., m2, *, (, n, -, 1, ), ), /, (, (, n, -, 1, ), *, (, n, -]
[), /, (, (, n, -, 1, ), *, (, n, -, 2, ), *, (, n, -, 3, )]
[), ), /, (, (, n, -, 1, ), *, (, n, -, 2, ), *, (, n, -, 3]
[-, 1, ), ), /, (, (, n, -, 1, ), *, (, n, -, 2, ), *, (, n]
[), ), /, (, (, n, -, 1, ), *, (, n, -, 2, ), *, (, n, -, 3]
[;, }, }, return, kurtosis, ;, }, @, Override, public, void, clear, (, ), {, if, (, incMoment, ), {]
[), ;, }, }, return, kurtosis, ;, }, @, Override, public, void, clear, (, ), {, if, (, incMoment, )]
[*, variance, ), ;, }, }, return, kurtosis, ;, }, @, Override, public, void, clear, (, ), {, if, (]
[*, variance, *, variance, ), ;, }, }, return, kurtosis, ;, }, @, Override, public, void, clear, (, ), {]
[*, (, n, -, 3, ), *, variance, *, variance, ), ;, }, }, return, kurtosis, ;, }, @, Override]
[*, (, n, -, 2, ), *, (, n, -, 3, ), *, variance, *, variance, ), ;, }, }]
[), *, (, n, -, 2, ), *, (, n, -, 3, ), *, variance, *, variance, ), ;, }]
[-, 1, ), *, (, n, -, 2, ), *, (, n, -, 3, ), *, variance, *, variance, )]
[), *, (, n, -, 2, ), *, (, n, -, 3, ), *, variance, *, variance, ), ;, }]
[*, (, n, -, 3, ), *, variance, *, variance, ), ;, }, }, return, kurtosis, ;, }, @, Override]
[), *, (, n, -, 3, ), *, variance, *, variance, ), ;, }, }, return, kurtosis, ;, }, @]
[-, 2, ), *, (, n, -, 3, ), *, variance, *, variance, ), ;, }, }, return, kurtosis, ;]
[), *, (, n, -, 3, ), *, variance, *, variance, ), ;, }, }, return, kurtosis, ;, }, @]
[*, variance, *, variance, ), ;, }, }, return, kurtosis, ;, }, @, Override, public, void, clear, (, ), {]
[), *, variance, *, variance, ), ;, }, }, return, kurtosis, ;, }, @, Override, public, void, clear, (, )]
[-, 3, ), *, variance, *, variance, ), ;, }, }, return, kurtosis, ;, }, @, Override, public, void, clear]
[), *, variance, *, variance, ), ;, }, }, return, kurtosis, ;, }, @, Override, public, void, clear, (, )]
[*, variance, ), ;, }, }, return, kurtosis, ;, }, @, Override, public, void, clear, (, ), {, if, (]
[), ;, }, }, return, kurtosis, ;, }, @, Override, public, void, clear, (, ), {, if, (, incMoment, )]
[;, }, @, Override, public, void, clear, (, ), {, if, (, incMoment, ), {, moment, ., clear, (, )]
[), {, moment, ., clear, (, ), ;, }, }, public, long, getN, (, ), {, return, moment, ., getN]
[;, }, }, public, long, getN, (, ), {, return, moment, ., getN, (, ), ;, }, @, Override, public]
[., clear, (, ), ;, }, }, public, long, getN, (, ), {, return, moment, ., getN, (, ), ;]
[;, }, @, Override, public, double, evaluate, (, final, double, [, ], values, ,, final, int, begin, ,, final, int]
[., getN, (, ), ;, }, @, Override, public, double, evaluate, (, final, double, [, ], values, ,, final, int]
[;, if, (, test, (, values, ,, begin, ,, length, ), &&, length, >, 3, ), {, Variance, variance, =]
[., NaN, ;, if, (, test, (, values, ,, begin, ,, length, ), &&, length, >, 3, ), {, Variance]
[), {, Variance, variance, =, new, Variance, (, ), ;, variance, ., incrementAll, (, values, ,, begin, ,, length, )]
[&&, length, >, 3, ), {, Variance, variance, =, new, Variance, (, ), ;, variance, ., incrementAll, (, values, ,]
[,, begin, ,, length, ), &&, length, >, 3, ), {, Variance, variance, =, new, Variance, (, ), ;, variance]
[,, length, ), &&, length, >, 3, ), {, Variance, variance, =, new, Variance, (, ), ;, variance, ., incrementAll]
[), &&, length, >, 3, ), {, Variance, variance, =, new, Variance, (, ), ;, variance, ., incrementAll, (, values]
[), {, Variance, variance, =, new, Variance, (, ), ;, variance, ., incrementAll, (, values, ,, begin, ,, length, )]
[>, 3, ), {, Variance, variance, =, new, Variance, (, ), ;, variance, ., incrementAll, (, values, ,, begin, ,]
[), {, Variance, variance, =, new, Variance, (, ), ;, variance, ., incrementAll, (, values, ,, begin, ,, length, )]
[;, variance, ., incrementAll, (, values, ,, begin, ,, length, ), ;, double, mean, =, variance, ., moment, ., m1]
[;, double, mean, =, variance, ., moment, ., m1, ;, double, stdDev, =, FastMath, ., sqrt, (, variance, ., getResult]
[., incrementAll, (, values, ,, begin, ,, length, ), ;, double, mean, =, variance, ., moment, ., m1, ;, double]
[,, begin, ,, length, ), ;, double, mean, =, variance, ., moment, ., m1, ;, double, stdDev, =, FastMath, .]
[,, length, ), ;, double, mean, =, variance, ., moment, ., m1, ;, double, stdDev, =, FastMath, ., sqrt, (]
[), ;, double, mean, =, variance, ., moment, ., m1, ;, double, stdDev, =, FastMath, ., sqrt, (, variance, .]
[;, double, stdDev, =, FastMath, ., sqrt, (, variance, ., getResult, (, ), ), ;, double, accum3, =, 0.0, ;]
[., m1, ;, double, stdDev, =, FastMath, ., sqrt, (, variance, ., getResult, (, ), ), ;, double, accum3, =]
[., moment, ., m1, ;, double, stdDev, =, FastMath, ., sqrt, (, variance, ., getResult, (, ), ), ;, double]
[;, double, accum3, =, 0.0, ;, for, (, int, i, =, begin, ;, i, <, begin, +, length, ;, i]
[., sqrt, (, variance, ., getResult, (, ), ), ;, double, accum3, =, 0.0, ;, for, (, int, i, =]
[), ;, double, accum3, =, 0.0, ;, for, (, int, i, =, begin, ;, i, <, begin, +, length, ;]
[., getResult, (, ), ), ;, double, accum3, =, 0.0, ;, for, (, int, i, =, begin, ;, i, <]
[;, for, (, int, i, =, begin, ;, i, <, begin, +, length, ;, i, ++, ), {, accum3, +=]
[;, i, <, begin, +, length, ;, i, ++, ), {, accum3, +=, FastMath, ., pow, (, values, [, i]
[;, i, ++, ), {, accum3, +=, FastMath, ., pow, (, values, [, i, ], -, mean, ,, 4.0, )]
[<, begin, +, length, ;, i, ++, ), {, accum3, +=, FastMath, ., pow, (, values, [, i, ], -]
[;, i, ++, ), {, accum3, +=, FastMath, ., pow, (, values, [, i, ], -, mean, ,, 4.0, )]
[+, length, ;, i, ++, ), {, accum3, +=, FastMath, ., pow, (, values, [, i, ], -, mean, ,]
[;, i, ++, ), {, accum3, +=, FastMath, ., pow, (, values, [, i, ], -, mean, ,, 4.0, )]
[), {, accum3, +=, FastMath, ., pow, (, values, [, i, ], -, mean, ,, 4.0, ), ;, }, accum3]
[++, ), {, accum3, +=, FastMath, ., pow, (, values, [, i, ], -, mean, ,, 4.0, ), ;, }]
[+=, FastMath, ., pow, (, values, [, i, ], -, mean, ,, 4.0, ), ;, }, accum3, /=, FastMath, .]
[;, }, accum3, /=, FastMath, ., pow, (, stdDev, ,, 4.0d, ), ;, double, n0, =, length, ;, double, coefficientOne]
[., pow, (, values, [, i, ], -, mean, ,, 4.0, ), ;, }, accum3, /=, FastMath, ., pow, (]
[,, 4.0, ), ;, }, accum3, /=, FastMath, ., pow, (, stdDev, ,, 4.0d, ), ;, double, n0, =, length]
[-, mean, ,, 4.0, ), ;, }, accum3, /=, FastMath, ., pow, (, stdDev, ,, 4.0d, ), ;, double, n0]
[[, i, ], -, mean, ,, 4.0, ), ;, }, accum3, /=, FastMath, ., pow, (, stdDev, ,, 4.0d, )]
[], -, mean, ,, 4.0, ), ;, }, accum3, /=, FastMath, ., pow, (, stdDev, ,, 4.0d, ), ;, double]
[,, 4.0, ), ;, }, accum3, /=, FastMath, ., pow, (, stdDev, ,, 4.0d, ), ;, double, n0, =, length]
[), ;, }, accum3, /=, FastMath, ., pow, (, stdDev, ,, 4.0d, ), ;, double, n0, =, length, ;, double]
[/=, FastMath, ., pow, (, stdDev, ,, 4.0d, ), ;, double, n0, =, length, ;, double, coefficientOne, =, (, n0]
[;, double, n0, =, length, ;, double, coefficientOne, =, (, n0, *, (, n0, +, 1, ), ), /, (]
[., pow, (, stdDev, ,, 4.0d, ), ;, double, n0, =, length, ;, double, coefficientOne, =, (, n0, *, (]
[,, 4.0d, ), ;, double, n0, =, length, ;, double, coefficientOne, =, (, n0, *, (, n0, +, 1, )]
[), ;, double, n0, =, length, ;, double, coefficientOne, =, (, n0, *, (, n0, +, 1, ), ), /]
[;, double, coefficientOne, =, (, n0, *, (, n0, +, 1, ), ), /, (, (, n0, -, 1, )]
[;, double, termTwo, =, (, 3, *, FastMath, ., pow, (, n0, -, 1, ,, 2.0, ), ), /, (]
[/, (, (, n0, -, 1, ), *, (, n0, -, 2, ), *, (, n0, -, 3, ), )]
[), /, (, (, n0, -, 1, ), *, (, n0, -, 2, ), *, (, n0, -, 3, )]
[*, (, n0, +, 1, ), ), /, (, (, n0, -, 1, ), *, (, n0, -, 2, )]
[), /, (, (, n0, -, 1, ), *, (, n0, -, 2, ), *, (, n0, -, 3, )]
[), ), /, (, (, n0, -, 1, ), *, (, n0, -, 2, ), *, (, n0, -, 3]
[+, 1, ), ), /, (, (, n0, -, 1, ), *, (, n0, -, 2, ), *, (, n0]
[), ), /, (, (, n0, -, 1, ), *, (, n0, -, 2, ), *, (, n0, -, 3]
[;, double, termTwo, =, (, 3, *, FastMath, ., pow, (, n0, -, 1, ,, 2.0, ), ), /, (]
[), ;, double, termTwo, =, (, 3, *, FastMath, ., pow, (, n0, -, 1, ,, 2.0, ), ), /]
[*, (, n0, -, 3, ), ), ;, double, termTwo, =, (, 3, *, FastMath, ., pow, (, n0, -]
[*, (, n0, -, 2, ), *, (, n0, -, 3, ), ), ;, double, termTwo, =, (, 3, *]
[), *, (, n0, -, 2, ), *, (, n0, -, 3, ), ), ;, double, termTwo, =, (, 3]
[-, 1, ), *, (, n0, -, 2, ), *, (, n0, -, 3, ), ), ;, double, termTwo, =]
[), *, (, n0, -, 2, ), *, (, n0, -, 3, ), ), ;, double, termTwo, =, (, 3]
[*, (, n0, -, 3, ), ), ;, double, termTwo, =, (, 3, *, FastMath, ., pow, (, n0, -]
[), *, (, n0, -, 3, ), ), ;, double, termTwo, =, (, 3, *, FastMath, ., pow, (, n0]
[-, 2, ), *, (, n0, -, 3, ), ), ;, double, termTwo, =, (, 3, *, FastMath, ., pow]
[), *, (, n0, -, 3, ), ), ;, double, termTwo, =, (, 3, *, FastMath, ., pow, (, n0]
[), ;, double, termTwo, =, (, 3, *, FastMath, ., pow, (, n0, -, 1, ,, 2.0, ), ), /]
[), ), ;, double, termTwo, =, (, 3, *, FastMath, ., pow, (, n0, -, 1, ,, 2.0, ), )]
[-, 3, ), ), ;, double, termTwo, =, (, 3, *, FastMath, ., pow, (, n0, -, 1, ,, 2.0]
[), ), ;, double, termTwo, =, (, 3, *, FastMath, ., pow, (, n0, -, 1, ,, 2.0, ), )]
[;, kurt, =, (, coefficientOne, *, accum3, ), -, termTwo, ;, }, return, kurt, ;, }, @, Override, public, Kurtosis]
[/, (, (, n0, -, 2, ), *, (, n0, -, 3, ), ), ;, kurt, =, (, coefficientOne, *]
[), /, (, (, n0, -, 2, ), *, (, n0, -, 3, ), ), ;, kurt, =, (, coefficientOne]
[*, FastMath, ., pow, (, n0, -, 1, ,, 2.0, ), ), /, (, (, n0, -, 2, ), *]
[), /, (, (, n0, -, 2, ), *, (, n0, -, 3, ), ), ;, kurt, =, (, coefficientOne]
[., pow, (, n0, -, 1, ,, 2.0, ), ), /, (, (, n0, -, 2, ), *, (, n0]
[,, 2.0, ), ), /, (, (, n0, -, 2, ), *, (, n0, -, 3, ), ), ;, kurt]
[-, 1, ,, 2.0, ), ), /, (, (, n0, -, 2, ), *, (, n0, -, 3, ), )]
[,, 2.0, ), ), /, (, (, n0, -, 2, ), *, (, n0, -, 3, ), ), ;, kurt]
[), ), /, (, (, n0, -, 2, ), *, (, n0, -, 3, ), ), ;, kurt, =, (]
[;, kurt, =, (, coefficientOne, *, accum3, ), -, termTwo, ;, }, return, kurt, ;, }, @, Override, public, Kurtosis]
[), ;, kurt, =, (, coefficientOne, *, accum3, ), -, termTwo, ;, }, return, kurt, ;, }, @, Override, public]
[*, (, n0, -, 3, ), ), ;, kurt, =, (, coefficientOne, *, accum3, ), -, termTwo, ;, }, return]
[), *, (, n0, -, 3, ), ), ;, kurt, =, (, coefficientOne, *, accum3, ), -, termTwo, ;, }]
[-, 2, ), *, (, n0, -, 3, ), ), ;, kurt, =, (, coefficientOne, *, accum3, ), -, termTwo]
[), *, (, n0, -, 3, ), ), ;, kurt, =, (, coefficientOne, *, accum3, ), -, termTwo, ;, }]
[), ;, kurt, =, (, coefficientOne, *, accum3, ), -, termTwo, ;, }, return, kurt, ;, }, @, Override, public]
[), ), ;, kurt, =, (, coefficientOne, *, accum3, ), -, termTwo, ;, }, return, kurt, ;, }, @, Override]
[-, 3, ), ), ;, kurt, =, (, coefficientOne, *, accum3, ), -, termTwo, ;, }, return, kurt, ;, }]
[), ), ;, kurt, =, (, coefficientOne, *, accum3, ), -, termTwo, ;, }, return, kurt, ;, }, @, Override]
[=, (, coefficientOne, *, accum3, ), -, termTwo, ;, }, return, kurt, ;, }, @, Override, public, Kurtosis, copy, (]
[;, }, return, kurt, ;, }, @, Override, public, Kurtosis, copy, (, ), {, Kurtosis, result, =, new, Kurtosis, (]
[-, termTwo, ;, }, return, kurt, ;, }, @, Override, public, Kurtosis, copy, (, ), {, Kurtosis, result, =, new]
[), -, termTwo, ;, }, return, kurt, ;, }, @, Override, public, Kurtosis, copy, (, ), {, Kurtosis, result, =]
[*, accum3, ), -, termTwo, ;, }, return, kurt, ;, }, @, Override, public, Kurtosis, copy, (, ), {, Kurtosis]
[), -, termTwo, ;, }, return, kurt, ;, }, @, Override, public, Kurtosis, copy, (, ), {, Kurtosis, result, =]
[;, }, return, kurt, ;, }, @, Override, public, Kurtosis, copy, (, ), {, Kurtosis, result, =, new, Kurtosis, (]
[;, }, @, Override, public, Kurtosis, copy, (, ), {, Kurtosis, result, =, new, Kurtosis, (, ), ;, copy, (]
[;, copy, (, this, ,, result, ), ;, return, result, ;, }, public, static, void, copy, (, Kurtosis, source, ,]
[;, return, result, ;, }, public, static, void, copy, (, Kurtosis, source, ,, Kurtosis, dest, ), throws, NullArgumentException, {, MathUtils]
[,, result, ), ;, return, result, ;, }, public, static, void, copy, (, Kurtosis, source, ,, Kurtosis, dest, ), throws]
[), ;, return, result, ;, }, public, static, void, copy, (, Kurtosis, source, ,, Kurtosis, dest, ), throws, NullArgumentException, {]
[;, }, public, static, void, copy, (, Kurtosis, source, ,, Kurtosis, dest, ), throws, NullArgumentException, {, MathUtils, ., checkNotNull, (]
[;, MathUtils, ., checkNotNull, (, dest, ), ;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;, dest]
[., checkNotNull, (, source, ), ;, MathUtils, ., checkNotNull, (, dest, ), ;, dest, ., setData, (, source, ., getDataRef]
[), ;, MathUtils, ., checkNotNull, (, dest, ), ;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;]
[;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;, dest, ., moment, =, source, ., moment, .]
[., checkNotNull, (, dest, ), ;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;, dest, ., moment]
[), ;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;, dest, ., moment, =, source, ., moment]
[;, dest, ., moment, =, source, ., moment, ., copy, (, ), ;, dest, ., incMoment, =, source, ., incMoment]
[., setData, (, source, ., getDataRef, (, ), ), ;, dest, ., moment, =, source, ., moment, ., copy, (]
[), ;, dest, ., moment, =, source, ., moment, ., copy, (, ), ;, dest, ., incMoment, =, source, .]
[., getDataRef, (, ), ), ;, dest, ., moment, =, source, ., moment, ., copy, (, ), ;, dest, .]
[=, source, ., moment, ., copy, (, ), ;, dest, ., incMoment, =, source, ., incMoment, ;, }, }]
[., moment, =, source, ., moment, ., copy, (, ), ;, dest, ., incMoment, =, source, ., incMoment, ;, }]
[;, dest, ., incMoment, =, source, ., incMoment, ;, }, }]
[., copy, (, ), ;, dest, ., incMoment, =, source, ., incMoment, ;, }, }]
[., moment, ., copy, (, ), ;, dest, ., incMoment, =, source, ., incMoment, ;, }, }]
[=, source, ., incMoment, ;, }, }]
[., incMoment, =, source, ., incMoment, ;, }, }]
[;, }, }]
[., incMoment, ;, }, }]
