[;, private, double, depthFactor, =, 0.12, ;, private, boolean, darkerSides, =, false, ;, public, PiePlot3D, (, ), {, this, (]
[;, private, boolean, darkerSides, =, false, ;, public, PiePlot3D, (, ), {, this, (, null, ), ;, }, public, PiePlot3D]
[;, public, PiePlot3D, (, ), {, this, (, null, ), ;, }, public, PiePlot3D, (, PieDataset, dataset, ), {, super]
[), ;, }, public, PiePlot3D, (, PieDataset, dataset, ), {, super, (, dataset, ), ;, setCircular, (, false, ,, false]
[), ;, setCircular, (, false, ,, false, ), ;, }, public, double, getDepthFactor, (, ), {, return, this, ., depthFactor]
[;, }, public, double, getDepthFactor, (, ), {, return, this, ., depthFactor, ;, }, public, void, setDepthFactor, (, double, factor]
[,, false, ), ;, }, public, double, getDepthFactor, (, ), {, return, this, ., depthFactor, ;, }, public, void, setDepthFactor]
[), ;, }, public, double, getDepthFactor, (, ), {, return, this, ., depthFactor, ;, }, public, void, setDepthFactor, (, double]
[;, }, public, void, setDepthFactor, (, double, factor, ), {, this, ., depthFactor, =, factor, ;, fireChangeEvent, (, ), ;]
[., depthFactor, ;, }, public, void, setDepthFactor, (, double, factor, ), {, this, ., depthFactor, =, factor, ;, fireChangeEvent, (]
[=, factor, ;, fireChangeEvent, (, ), ;, }, public, boolean, getDarkerSides, (, ), {, return, this, ., darkerSides, ;, }]
[., depthFactor, =, factor, ;, fireChangeEvent, (, ), ;, }, public, boolean, getDarkerSides, (, ), {, return, this, ., darkerSides]
[;, fireChangeEvent, (, ), ;, }, public, boolean, getDarkerSides, (, ), {, return, this, ., darkerSides, ;, }, public, void]
[;, }, public, boolean, getDarkerSides, (, ), {, return, this, ., darkerSides, ;, }, public, void, setDarkerSides, (, boolean, darker]
[;, }, public, void, setDarkerSides, (, boolean, darker, ), {, this, ., darkerSides, =, darker, ;, fireChangeEvent, (, ), ;]
[., darkerSides, ;, }, public, void, setDarkerSides, (, boolean, darker, ), {, this, ., darkerSides, =, darker, ;, fireChangeEvent, (]
[=, darker, ;, fireChangeEvent, (, ), ;, }, public, void, draw, (, Graphics2D, g2, ,, Rectangle2D, plotArea, ,, Point2D, anchor]
[., darkerSides, =, darker, ;, fireChangeEvent, (, ), ;, }, public, void, draw, (, Graphics2D, g2, ,, Rectangle2D, plotArea, ,]
[;, fireChangeEvent, (, ), ;, }, public, void, draw, (, Graphics2D, g2, ,, Rectangle2D, plotArea, ,, Point2D, anchor, ,, PlotState]
[;, }, public, void, draw, (, Graphics2D, g2, ,, Rectangle2D, plotArea, ,, Point2D, anchor, ,, PlotState, parentState, ,, PlotRenderingInfo, info]
[;, insets, ., trim, (, plotArea, ), ;, Rectangle2D, originalPlotArea, =, (, Rectangle2D, ), plotArea, ., clone, (, ), ;]
[;, Rectangle2D, originalPlotArea, =, (, Rectangle2D, ), plotArea, ., clone, (, ), ;, if, (, info, !=, null, ), {]
[., trim, (, plotArea, ), ;, Rectangle2D, originalPlotArea, =, (, Rectangle2D, ), plotArea, ., clone, (, ), ;, if, (]
[), ;, Rectangle2D, originalPlotArea, =, (, Rectangle2D, ), plotArea, ., clone, (, ), ;, if, (, info, !=, null, )]
[;, if, (, info, !=, null, ), {, info, ., setPlotArea, (, plotArea, ), ;, info, ., setDataArea, (, plotArea]
[;, if, (, info, !=, null, ), {, info, ., setPlotArea, (, plotArea, ), ;, info, ., setDataArea, (, plotArea]
[., clone, (, ), ;, if, (, info, !=, null, ), {, info, ., setPlotArea, (, plotArea, ), ;, info]
[), {, info, ., setPlotArea, (, plotArea, ), ;, info, ., setDataArea, (, plotArea, ), ;, }, drawBackground, (, g2]
[!=, null, ), {, info, ., setPlotArea, (, plotArea, ), ;, info, ., setDataArea, (, plotArea, ), ;, }, drawBackground]
[), {, info, ., setPlotArea, (, plotArea, ), ;, info, ., setDataArea, (, plotArea, ), ;, }, drawBackground, (, g2]
[;, info, ., setDataArea, (, plotArea, ), ;, }, drawBackground, (, g2, ,, plotArea, ), ;, Shape, savedClip, =, g2]
[., setPlotArea, (, plotArea, ), ;, info, ., setDataArea, (, plotArea, ), ;, }, drawBackground, (, g2, ,, plotArea, )]
[), ;, info, ., setDataArea, (, plotArea, ), ;, }, drawBackground, (, g2, ,, plotArea, ), ;, Shape, savedClip, =]
[;, }, drawBackground, (, g2, ,, plotArea, ), ;, Shape, savedClip, =, g2, ., getClip, (, ), ;, g2, .]
[., setDataArea, (, plotArea, ), ;, }, drawBackground, (, g2, ,, plotArea, ), ;, Shape, savedClip, =, g2, ., getClip]
[), ;, }, drawBackground, (, g2, ,, plotArea, ), ;, Shape, savedClip, =, g2, ., getClip, (, ), ;, g2]
[;, Shape, savedClip, =, g2, ., getClip, (, ), ;, g2, ., clip, (, plotArea, ), ;, double, gapPercent, =]
[,, plotArea, ), ;, Shape, savedClip, =, g2, ., getClip, (, ), ;, g2, ., clip, (, plotArea, ), ;]
[), ;, Shape, savedClip, =, g2, ., getClip, (, ), ;, g2, ., clip, (, plotArea, ), ;, double, gapPercent]
[;, g2, ., clip, (, plotArea, ), ;, double, gapPercent, =, getInteriorGap, (, ), ;, double, labelPercent, =, 0.0, ;]
[., getClip, (, ), ;, g2, ., clip, (, plotArea, ), ;, double, gapPercent, =, getInteriorGap, (, ), ;, double]
[;, double, gapPercent, =, getInteriorGap, (, ), ;, double, labelPercent, =, 0.0, ;, if, (, getLabelGenerator, (, ), !=, null]
[., clip, (, plotArea, ), ;, double, gapPercent, =, getInteriorGap, (, ), ;, double, labelPercent, =, 0.0, ;, if, (]
[), ;, double, gapPercent, =, getInteriorGap, (, ), ;, double, labelPercent, =, 0.0, ;, if, (, getLabelGenerator, (, ), !=]
[;, double, labelPercent, =, 0.0, ;, if, (, getLabelGenerator, (, ), !=, null, ), {, labelPercent, =, getLabelGap, (, )]
[;, if, (, getLabelGenerator, (, ), !=, null, ), {, labelPercent, =, getLabelGap, (, ), +, getMaximumLabelWidth, (, ), ;]
[), {, labelPercent, =, getLabelGap, (, ), +, getMaximumLabelWidth, (, ), ;, }, double, gapHorizontal, =, plotArea, ., getWidth, (]
[!=, null, ), {, labelPercent, =, getLabelGap, (, ), +, getMaximumLabelWidth, (, ), ;, }, double, gapHorizontal, =, plotArea, .]
[), {, labelPercent, =, getLabelGap, (, ), +, getMaximumLabelWidth, (, ), ;, }, double, gapHorizontal, =, plotArea, ., getWidth, (]
[=, getLabelGap, (, ), +, getMaximumLabelWidth, (, ), ;, }, double, gapHorizontal, =, plotArea, ., getWidth, (, ), *, (]
[;, }, double, gapHorizontal, =, plotArea, ., getWidth, (, ), *, (, gapPercent, +, labelPercent, ), *, 2.0, ;, double]
[+, getMaximumLabelWidth, (, ), ;, }, double, gapHorizontal, =, plotArea, ., getWidth, (, ), *, (, gapPercent, +, labelPercent, )]
[;, }, double, gapHorizontal, =, plotArea, ., getWidth, (, ), *, (, gapPercent, +, labelPercent, ), *, 2.0, ;, double]
[;, double, gapVertical, =, plotArea, ., getHeight, (, ), *, gapPercent, *, 2.0, ;, if, (, DEBUG_DRAW_INTERIOR, ), {, double]
[*, 2.0, ;, double, gapVertical, =, plotArea, ., getHeight, (, ), *, gapPercent, *, 2.0, ;, if, (, DEBUG_DRAW_INTERIOR, )]
[*, (, gapPercent, +, labelPercent, ), *, 2.0, ;, double, gapVertical, =, plotArea, ., getHeight, (, ), *, gapPercent, *]
[., getWidth, (, ), *, (, gapPercent, +, labelPercent, ), *, 2.0, ;, double, gapVertical, =, plotArea, ., getHeight, (]
[*, 2.0, ;, double, gapVertical, =, plotArea, ., getHeight, (, ), *, gapPercent, *, 2.0, ;, if, (, DEBUG_DRAW_INTERIOR, )]
[), *, 2.0, ;, double, gapVertical, =, plotArea, ., getHeight, (, ), *, gapPercent, *, 2.0, ;, if, (, DEBUG_DRAW_INTERIOR]
[+, labelPercent, ), *, 2.0, ;, double, gapVertical, =, plotArea, ., getHeight, (, ), *, gapPercent, *, 2.0, ;, if]
[), *, 2.0, ;, double, gapVertical, =, plotArea, ., getHeight, (, ), *, gapPercent, *, 2.0, ;, if, (, DEBUG_DRAW_INTERIOR]
[;, double, gapVertical, =, plotArea, ., getHeight, (, ), *, gapPercent, *, 2.0, ;, if, (, DEBUG_DRAW_INTERIOR, ), {, double]
[;, if, (, DEBUG_DRAW_INTERIOR, ), {, double, hGap, =, plotArea, ., getWidth, (, ), *, getInteriorGap, (, ), ;, double]
[*, 2.0, ;, if, (, DEBUG_DRAW_INTERIOR, ), {, double, hGap, =, plotArea, ., getWidth, (, ), *, getInteriorGap, (, )]
[*, gapPercent, *, 2.0, ;, if, (, DEBUG_DRAW_INTERIOR, ), {, double, hGap, =, plotArea, ., getWidth, (, ), *, getInteriorGap]
[., getHeight, (, ), *, gapPercent, *, 2.0, ;, if, (, DEBUG_DRAW_INTERIOR, ), {, double, hGap, =, plotArea, ., getWidth]
[*, 2.0, ;, if, (, DEBUG_DRAW_INTERIOR, ), {, double, hGap, =, plotArea, ., getWidth, (, ), *, getInteriorGap, (, )]
[;, if, (, DEBUG_DRAW_INTERIOR, ), {, double, hGap, =, plotArea, ., getWidth, (, ), *, getInteriorGap, (, ), ;, double]
[), {, double, hGap, =, plotArea, ., getWidth, (, ), *, getInteriorGap, (, ), ;, double, vGap, =, plotArea, .]
[;, double, vGap, =, plotArea, ., getHeight, (, ), *, getInteriorGap, (, ), ;, double, igx1, =, plotArea, ., getX]
[*, getInteriorGap, (, ), ;, double, vGap, =, plotArea, ., getHeight, (, ), *, getInteriorGap, (, ), ;, double, igx1]
[., getWidth, (, ), *, getInteriorGap, (, ), ;, double, vGap, =, plotArea, ., getHeight, (, ), *, getInteriorGap, (]
[;, double, vGap, =, plotArea, ., getHeight, (, ), *, getInteriorGap, (, ), ;, double, igx1, =, plotArea, ., getX]
[;, double, igx1, =, plotArea, ., getX, (, ), +, hGap, ;, double, igx2, =, plotArea, ., getMaxX, (, )]
[*, getInteriorGap, (, ), ;, double, igx1, =, plotArea, ., getX, (, ), +, hGap, ;, double, igx2, =, plotArea]
[., getHeight, (, ), *, getInteriorGap, (, ), ;, double, igx1, =, plotArea, ., getX, (, ), +, hGap, ;]
[;, double, igx1, =, plotArea, ., getX, (, ), +, hGap, ;, double, igx2, =, plotArea, ., getMaxX, (, )]
[;, double, igx2, =, plotArea, ., getMaxX, (, ), -, hGap, ;, double, igy1, =, plotArea, ., getY, (, )]
[+, hGap, ;, double, igx2, =, plotArea, ., getMaxX, (, ), -, hGap, ;, double, igy1, =, plotArea, ., getY]
[., getX, (, ), +, hGap, ;, double, igx2, =, plotArea, ., getMaxX, (, ), -, hGap, ;, double, igy1]
[;, double, igx2, =, plotArea, ., getMaxX, (, ), -, hGap, ;, double, igy1, =, plotArea, ., getY, (, )]
[;, double, igy1, =, plotArea, ., getY, (, ), +, vGap, ;, double, igy2, =, plotArea, ., getMaxY, (, )]
[-, hGap, ;, double, igy1, =, plotArea, ., getY, (, ), +, vGap, ;, double, igy2, =, plotArea, ., getMaxY]
[., getMaxX, (, ), -, hGap, ;, double, igy1, =, plotArea, ., getY, (, ), +, vGap, ;, double, igy2]
[;, double, igy1, =, plotArea, ., getY, (, ), +, vGap, ;, double, igy2, =, plotArea, ., getMaxY, (, )]
[;, double, igy2, =, plotArea, ., getMaxY, (, ), -, vGap, ;, g2, ., setPaint, (, Color, ., lightGray, )]
[+, vGap, ;, double, igy2, =, plotArea, ., getMaxY, (, ), -, vGap, ;, g2, ., setPaint, (, Color, .]
[., getY, (, ), +, vGap, ;, double, igy2, =, plotArea, ., getMaxY, (, ), -, vGap, ;, g2, .]
[;, double, igy2, =, plotArea, ., getMaxY, (, ), -, vGap, ;, g2, ., setPaint, (, Color, ., lightGray, )]
[;, g2, ., setPaint, (, Color, ., lightGray, ), ;, g2, ., draw, (, new, Rectangle2D, ., Double, (, igx1]
[-, vGap, ;, g2, ., setPaint, (, Color, ., lightGray, ), ;, g2, ., draw, (, new, Rectangle2D, ., Double]
[., getMaxY, (, ), -, vGap, ;, g2, ., setPaint, (, Color, ., lightGray, ), ;, g2, ., draw, (]
[;, g2, ., setPaint, (, Color, ., lightGray, ), ;, g2, ., draw, (, new, Rectangle2D, ., Double, (, igx1]
[;, g2, ., draw, (, new, Rectangle2D, ., Double, (, igx1, ,, igy1, ,, igx2, -, igx1, ,, igy2, -]
[., setPaint, (, Color, ., lightGray, ), ;, g2, ., draw, (, new, Rectangle2D, ., Double, (, igx1, ,, igy1]
[), ;, g2, ., draw, (, new, Rectangle2D, ., Double, (, igx1, ,, igy1, ,, igx2, -, igx1, ,, igy2]
[., lightGray, ), ;, g2, ., draw, (, new, Rectangle2D, ., Double, (, igx1, ,, igy1, ,, igx2, -, igx1]
[;, }, double, linkX, =, plotArea, ., getX, (, ), +, gapHorizontal, /, 2, ;, double, linkY, =, plotArea, .]
[., draw, (, new, Rectangle2D, ., Double, (, igx1, ,, igy1, ,, igx2, -, igx1, ,, igy2, -, igy1, )]
[), ;, }, double, linkX, =, plotArea, ., getX, (, ), +, gapHorizontal, /, 2, ;, double, linkY, =, plotArea]
[,, igy1, ,, igx2, -, igx1, ,, igy2, -, igy1, ), ), ;, }, double, linkX, =, plotArea, ., getX]
[,, igx2, -, igx1, ,, igy2, -, igy1, ), ), ;, }, double, linkX, =, plotArea, ., getX, (, )]
[,, igy2, -, igy1, ), ), ;, }, double, linkX, =, plotArea, ., getX, (, ), +, gapHorizontal, /, 2]
[-, igx1, ,, igy2, -, igy1, ), ), ;, }, double, linkX, =, plotArea, ., getX, (, ), +, gapHorizontal]
[,, igy2, -, igy1, ), ), ;, }, double, linkX, =, plotArea, ., getX, (, ), +, gapHorizontal, /, 2]
[), ), ;, }, double, linkX, =, plotArea, ., getX, (, ), +, gapHorizontal, /, 2, ;, double, linkY, =]
[-, igy1, ), ), ;, }, double, linkX, =, plotArea, ., getX, (, ), +, gapHorizontal, /, 2, ;, double]
[), ), ;, }, double, linkX, =, plotArea, ., getX, (, ), +, gapHorizontal, /, 2, ;, double, linkY, =]
[;, double, linkY, =, plotArea, ., getY, (, ), +, gapVertical, /, 2, ;, double, linkW, =, plotArea, ., getWidth]
[+, gapHorizontal, /, 2, ;, double, linkY, =, plotArea, ., getY, (, ), +, gapVertical, /, 2, ;, double, linkW]
[., getX, (, ), +, gapHorizontal, /, 2, ;, double, linkY, =, plotArea, ., getY, (, ), +, gapVertical, /]
[;, double, linkY, =, plotArea, ., getY, (, ), +, gapVertical, /, 2, ;, double, linkW, =, plotArea, ., getWidth]
[/, 2, ;, double, linkY, =, plotArea, ., getY, (, ), +, gapVertical, /, 2, ;, double, linkW, =, plotArea]
[;, double, linkY, =, plotArea, ., getY, (, ), +, gapVertical, /, 2, ;, double, linkW, =, plotArea, ., getWidth]
[;, double, linkW, =, plotArea, ., getWidth, (, ), -, gapHorizontal, ;, double, linkH, =, plotArea, ., getHeight, (, )]
[+, gapVertical, /, 2, ;, double, linkW, =, plotArea, ., getWidth, (, ), -, gapHorizontal, ;, double, linkH, =, plotArea]
[., getY, (, ), +, gapVertical, /, 2, ;, double, linkW, =, plotArea, ., getWidth, (, ), -, gapHorizontal, ;]
[;, double, linkW, =, plotArea, ., getWidth, (, ), -, gapHorizontal, ;, double, linkH, =, plotArea, ., getHeight, (, )]
[/, 2, ;, double, linkW, =, plotArea, ., getWidth, (, ), -, gapHorizontal, ;, double, linkH, =, plotArea, ., getHeight]
[;, double, linkW, =, plotArea, ., getWidth, (, ), -, gapHorizontal, ;, double, linkH, =, plotArea, ., getHeight, (, )]
[;, double, linkH, =, plotArea, ., getHeight, (, ), -, gapVertical, ;, if, (, isCircular, (, ), ), {, double]
[-, gapHorizontal, ;, double, linkH, =, plotArea, ., getHeight, (, ), -, gapVertical, ;, if, (, isCircular, (, ), )]
[., getWidth, (, ), -, gapHorizontal, ;, double, linkH, =, plotArea, ., getHeight, (, ), -, gapVertical, ;, if, (]
[;, double, linkH, =, plotArea, ., getHeight, (, ), -, gapVertical, ;, if, (, isCircular, (, ), ), {, double]
[;, if, (, isCircular, (, ), ), {, double, min, =, Math, ., min, (, linkW, ,, linkH, ), /]
[-, gapVertical, ;, if, (, isCircular, (, ), ), {, double, min, =, Math, ., min, (, linkW, ,, linkH]
[., getHeight, (, ), -, gapVertical, ;, if, (, isCircular, (, ), ), {, double, min, =, Math, ., min]
[;, if, (, isCircular, (, ), ), {, double, min, =, Math, ., min, (, linkW, ,, linkH, ), /]
[), {, double, min, =, Math, ., min, (, linkW, ,, linkH, ), /, 2, ;, linkX, =, (, linkX]
[;, linkX, =, (, linkX, +, linkX, +, linkW, ), /, 2, -, min, ;, linkY, =, (, linkY, +]
[/, 2, ;, linkX, =, (, linkX, +, linkX, +, linkW, ), /, 2, -, min, ;, linkY, =, (]
[., min, (, linkW, ,, linkH, ), /, 2, ;, linkX, =, (, linkX, +, linkX, +, linkW, ), /]
[,, linkH, ), /, 2, ;, linkX, =, (, linkX, +, linkX, +, linkW, ), /, 2, -, min, ;]
[), /, 2, ;, linkX, =, (, linkX, +, linkX, +, linkW, ), /, 2, -, min, ;, linkY, =]
[;, linkX, =, (, linkX, +, linkX, +, linkW, ), /, 2, -, min, ;, linkY, =, (, linkY, +]
[=, (, linkX, +, linkX, +, linkW, ), /, 2, -, min, ;, linkY, =, (, linkY, +, linkY, +]
[;, linkY, =, (, linkY, +, linkY, +, linkH, ), /, 2, -, min, ;, linkW, =, 2, *, min]
[-, min, ;, linkY, =, (, linkY, +, linkY, +, linkH, ), /, 2, -, min, ;, linkW, =, 2]
[/, 2, -, min, ;, linkY, =, (, linkY, +, linkY, +, linkH, ), /, 2, -, min, ;, linkW]
[), /, 2, -, min, ;, linkY, =, (, linkY, +, linkY, +, linkH, ), /, 2, -, min, ;]
[+, linkW, ), /, 2, -, min, ;, linkY, =, (, linkY, +, linkY, +, linkH, ), /, 2, -]
[+, linkX, +, linkW, ), /, 2, -, min, ;, linkY, =, (, linkY, +, linkY, +, linkH, ), /]
[+, linkW, ), /, 2, -, min, ;, linkY, =, (, linkY, +, linkY, +, linkH, ), /, 2, -]
[), /, 2, -, min, ;, linkY, =, (, linkY, +, linkY, +, linkH, ), /, 2, -, min, ;]
[-, min, ;, linkY, =, (, linkY, +, linkY, +, linkH, ), /, 2, -, min, ;, linkW, =, 2]
[;, linkY, =, (, linkY, +, linkY, +, linkH, ), /, 2, -, min, ;, linkW, =, 2, *, min]
[=, (, linkY, +, linkY, +, linkH, ), /, 2, -, min, ;, linkW, =, 2, *, min, ;, linkH]
[;, linkW, =, 2, *, min, ;, linkH, =, 2, *, min, ;, }, PiePlotState, state, =, initialise, (, g2]
[-, min, ;, linkW, =, 2, *, min, ;, linkH, =, 2, *, min, ;, }, PiePlotState, state, =, initialise]
[/, 2, -, min, ;, linkW, =, 2, *, min, ;, linkH, =, 2, *, min, ;, }, PiePlotState, state]
[), /, 2, -, min, ;, linkW, =, 2, *, min, ;, linkH, =, 2, *, min, ;, }, PiePlotState]
[+, linkH, ), /, 2, -, min, ;, linkW, =, 2, *, min, ;, linkH, =, 2, *, min, ;]
[+, linkY, +, linkH, ), /, 2, -, min, ;, linkW, =, 2, *, min, ;, linkH, =, 2, *]
[+, linkH, ), /, 2, -, min, ;, linkW, =, 2, *, min, ;, linkH, =, 2, *, min, ;]
[), /, 2, -, min, ;, linkW, =, 2, *, min, ;, linkH, =, 2, *, min, ;, }, PiePlotState]
[-, min, ;, linkW, =, 2, *, min, ;, linkH, =, 2, *, min, ;, }, PiePlotState, state, =, initialise]
[;, linkW, =, 2, *, min, ;, linkH, =, 2, *, min, ;, }, PiePlotState, state, =, initialise, (, g2]
[=, 2, *, min, ;, linkH, =, 2, *, min, ;, }, PiePlotState, state, =, initialise, (, g2, ,, plotArea]
[;, linkH, =, 2, *, min, ;, }, PiePlotState, state, =, initialise, (, g2, ,, plotArea, ,, this, ,, null]
[*, min, ;, linkH, =, 2, *, min, ;, }, PiePlotState, state, =, initialise, (, g2, ,, plotArea, ,, this]
[;, linkH, =, 2, *, min, ;, }, PiePlotState, state, =, initialise, (, g2, ,, plotArea, ,, this, ,, null]
[=, 2, *, min, ;, }, PiePlotState, state, =, initialise, (, g2, ,, plotArea, ,, this, ,, null, ,, info]
[;, }, PiePlotState, state, =, initialise, (, g2, ,, plotArea, ,, this, ,, null, ,, info, ), ;, Rectangle2D, linkAreaXX]
[*, min, ;, }, PiePlotState, state, =, initialise, (, g2, ,, plotArea, ,, this, ,, null, ,, info, ), ;]
[;, }, PiePlotState, state, =, initialise, (, g2, ,, plotArea, ,, this, ,, null, ,, info, ), ;, Rectangle2D, linkAreaXX]
[;, Rectangle2D, linkAreaXX, =, new, Rectangle2D, ., Double, (, linkX, ,, linkY, ,, linkW, ,, linkH, *, (, 1, -]
[,, plotArea, ,, this, ,, null, ,, info, ), ;, Rectangle2D, linkAreaXX, =, new, Rectangle2D, ., Double, (, linkX, ,]
[,, this, ,, null, ,, info, ), ;, Rectangle2D, linkAreaXX, =, new, Rectangle2D, ., Double, (, linkX, ,, linkY, ,]
[,, null, ,, info, ), ;, Rectangle2D, linkAreaXX, =, new, Rectangle2D, ., Double, (, linkX, ,, linkY, ,, linkW, ,]
[,, info, ), ;, Rectangle2D, linkAreaXX, =, new, Rectangle2D, ., Double, (, linkX, ,, linkY, ,, linkW, ,, linkH, *]
[), ;, Rectangle2D, linkAreaXX, =, new, Rectangle2D, ., Double, (, linkX, ,, linkY, ,, linkW, ,, linkH, *, (, 1]
[;, state, ., setLinkArea, (, linkAreaXX, ), ;, if, (, DEBUG_DRAW_LINK_AREA, ), {, g2, ., setPaint, (, Color, ., blue]
[,, linkY, ,, linkW, ,, linkH, *, (, 1, -, this, ., depthFactor, ), ), ;, state, ., setLinkArea, (]
[,, linkW, ,, linkH, *, (, 1, -, this, ., depthFactor, ), ), ;, state, ., setLinkArea, (, linkAreaXX, )]
[,, linkH, *, (, 1, -, this, ., depthFactor, ), ), ;, state, ., setLinkArea, (, linkAreaXX, ), ;, if]
[), ;, state, ., setLinkArea, (, linkAreaXX, ), ;, if, (, DEBUG_DRAW_LINK_AREA, ), {, g2, ., setPaint, (, Color, .]
[*, (, 1, -, this, ., depthFactor, ), ), ;, state, ., setLinkArea, (, linkAreaXX, ), ;, if, (, DEBUG_DRAW_LINK_AREA]
[), ;, state, ., setLinkArea, (, linkAreaXX, ), ;, if, (, DEBUG_DRAW_LINK_AREA, ), {, g2, ., setPaint, (, Color, .]
[), ), ;, state, ., setLinkArea, (, linkAreaXX, ), ;, if, (, DEBUG_DRAW_LINK_AREA, ), {, g2, ., setPaint, (, Color]
[-, this, ., depthFactor, ), ), ;, state, ., setLinkArea, (, linkAreaXX, ), ;, if, (, DEBUG_DRAW_LINK_AREA, ), {, g2]
[), ), ;, state, ., setLinkArea, (, linkAreaXX, ), ;, if, (, DEBUG_DRAW_LINK_AREA, ), {, g2, ., setPaint, (, Color]
[., depthFactor, ), ), ;, state, ., setLinkArea, (, linkAreaXX, ), ;, if, (, DEBUG_DRAW_LINK_AREA, ), {, g2, ., setPaint]
[;, if, (, DEBUG_DRAW_LINK_AREA, ), {, g2, ., setPaint, (, Color, ., blue, ), ;, g2, ., draw, (, linkAreaXX]
[., setLinkArea, (, linkAreaXX, ), ;, if, (, DEBUG_DRAW_LINK_AREA, ), {, g2, ., setPaint, (, Color, ., blue, ), ;]
[), ;, if, (, DEBUG_DRAW_LINK_AREA, ), {, g2, ., setPaint, (, Color, ., blue, ), ;, g2, ., draw, (]
[), {, g2, ., setPaint, (, Color, ., blue, ), ;, g2, ., draw, (, linkAreaXX, ), ;, g2, .]
[;, g2, ., draw, (, linkAreaXX, ), ;, g2, ., setPaint, (, Color, ., yellow, ), ;, g2, ., draw]
[., setPaint, (, Color, ., blue, ), ;, g2, ., draw, (, linkAreaXX, ), ;, g2, ., setPaint, (, Color]
[), ;, g2, ., draw, (, linkAreaXX, ), ;, g2, ., setPaint, (, Color, ., yellow, ), ;, g2, .]
[., blue, ), ;, g2, ., draw, (, linkAreaXX, ), ;, g2, ., setPaint, (, Color, ., yellow, ), ;]
[;, g2, ., setPaint, (, Color, ., yellow, ), ;, g2, ., draw, (, new, Ellipse2D, ., Double, (, linkAreaXX]
[., draw, (, linkAreaXX, ), ;, g2, ., setPaint, (, Color, ., yellow, ), ;, g2, ., draw, (, new]
[), ;, g2, ., setPaint, (, Color, ., yellow, ), ;, g2, ., draw, (, new, Ellipse2D, ., Double, (]
[;, g2, ., draw, (, new, Ellipse2D, ., Double, (, linkAreaXX, ., getX, (, ), ,, linkAreaXX, ., getY, (]
[., setPaint, (, Color, ., yellow, ), ;, g2, ., draw, (, new, Ellipse2D, ., Double, (, linkAreaXX, ., getX]
[), ;, g2, ., draw, (, new, Ellipse2D, ., Double, (, linkAreaXX, ., getX, (, ), ,, linkAreaXX, ., getY]
[., yellow, ), ;, g2, ., draw, (, new, Ellipse2D, ., Double, (, linkAreaXX, ., getX, (, ), ,, linkAreaXX]
[;, }, double, hh, =, linkW, *, getLabelLinkMargin, (, ), ;, double, vv, =, linkH, *, getLabelLinkMargin, (, ), ;]
[., draw, (, new, Ellipse2D, ., Double, (, linkAreaXX, ., getX, (, ), ,, linkAreaXX, ., getY, (, ), ,]
[), ;, }, double, hh, =, linkW, *, getLabelLinkMargin, (, ), ;, double, vv, =, linkH, *, getLabelLinkMargin, (, )]
[,, linkAreaXX, ., getY, (, ), ,, linkAreaXX, ., getWidth, (, ), ,, linkAreaXX, ., getHeight, (, ), ), )]
[., getX, (, ), ,, linkAreaXX, ., getY, (, ), ,, linkAreaXX, ., getWidth, (, ), ,, linkAreaXX, ., getHeight]
[,, linkAreaXX, ., getWidth, (, ), ,, linkAreaXX, ., getHeight, (, ), ), ), ;, }, double, hh, =, linkW]
[., getY, (, ), ,, linkAreaXX, ., getWidth, (, ), ,, linkAreaXX, ., getHeight, (, ), ), ), ;, }]
[,, linkAreaXX, ., getHeight, (, ), ), ), ;, }, double, hh, =, linkW, *, getLabelLinkMargin, (, ), ;, double]
[., getWidth, (, ), ,, linkAreaXX, ., getHeight, (, ), ), ), ;, }, double, hh, =, linkW, *, getLabelLinkMargin]
[), ), ;, }, double, hh, =, linkW, *, getLabelLinkMargin, (, ), ;, double, vv, =, linkH, *, getLabelLinkMargin, (]
[., getHeight, (, ), ), ), ;, }, double, hh, =, linkW, *, getLabelLinkMargin, (, ), ;, double, vv, =]
[;, double, vv, =, linkH, *, getLabelLinkMargin, (, ), ;, Rectangle2D, explodeArea, =, new, Rectangle2D, ., Double, (, linkX, +]
[*, getLabelLinkMargin, (, ), ;, double, vv, =, linkH, *, getLabelLinkMargin, (, ), ;, Rectangle2D, explodeArea, =, new, Rectangle2D, .]
[;, double, vv, =, linkH, *, getLabelLinkMargin, (, ), ;, Rectangle2D, explodeArea, =, new, Rectangle2D, ., Double, (, linkX, +]
[;, Rectangle2D, explodeArea, =, new, Rectangle2D, ., Double, (, linkX, +, hh, /, 2.0, ,, linkY, +, vv, /, 2.0]
[*, getLabelLinkMargin, (, ), ;, Rectangle2D, explodeArea, =, new, Rectangle2D, ., Double, (, linkX, +, hh, /, 2.0, ,, linkY]
[;, Rectangle2D, explodeArea, =, new, Rectangle2D, ., Double, (, linkX, +, hh, /, 2.0, ,, linkY, +, vv, /, 2.0]
[;, state, ., setExplodedPieArea, (, explodeArea, ), ;, double, maximumExplodePercent, =, getMaximumExplodePercent, (, ), ;, double, percent, =, maximumExplodePercent, /]
[,, linkY, +, vv, /, 2.0, ,, linkW, -, hh, ,, linkH, -, vv, ), ;, state, ., setExplodedPieArea, (]
[+, hh, /, 2.0, ,, linkY, +, vv, /, 2.0, ,, linkW, -, hh, ,, linkH, -, vv, ), ;]
[,, linkY, +, vv, /, 2.0, ,, linkW, -, hh, ,, linkH, -, vv, ), ;, state, ., setExplodedPieArea, (]
[/, 2.0, ,, linkY, +, vv, /, 2.0, ,, linkW, -, hh, ,, linkH, -, vv, ), ;, state, .]
[,, linkY, +, vv, /, 2.0, ,, linkW, -, hh, ,, linkH, -, vv, ), ;, state, ., setExplodedPieArea, (]
[,, linkW, -, hh, ,, linkH, -, vv, ), ;, state, ., setExplodedPieArea, (, explodeArea, ), ;, double, maximumExplodePercent, =]
[+, vv, /, 2.0, ,, linkW, -, hh, ,, linkH, -, vv, ), ;, state, ., setExplodedPieArea, (, explodeArea, )]
[,, linkW, -, hh, ,, linkH, -, vv, ), ;, state, ., setExplodedPieArea, (, explodeArea, ), ;, double, maximumExplodePercent, =]
[/, 2.0, ,, linkW, -, hh, ,, linkH, -, vv, ), ;, state, ., setExplodedPieArea, (, explodeArea, ), ;, double]
[,, linkW, -, hh, ,, linkH, -, vv, ), ;, state, ., setExplodedPieArea, (, explodeArea, ), ;, double, maximumExplodePercent, =]
[,, linkH, -, vv, ), ;, state, ., setExplodedPieArea, (, explodeArea, ), ;, double, maximumExplodePercent, =, getMaximumExplodePercent, (, ), ;]
[-, hh, ,, linkH, -, vv, ), ;, state, ., setExplodedPieArea, (, explodeArea, ), ;, double, maximumExplodePercent, =, getMaximumExplodePercent, (]
[,, linkH, -, vv, ), ;, state, ., setExplodedPieArea, (, explodeArea, ), ;, double, maximumExplodePercent, =, getMaximumExplodePercent, (, ), ;]
[), ;, state, ., setExplodedPieArea, (, explodeArea, ), ;, double, maximumExplodePercent, =, getMaximumExplodePercent, (, ), ;, double, percent, =, maximumExplodePercent]
[-, vv, ), ;, state, ., setExplodedPieArea, (, explodeArea, ), ;, double, maximumExplodePercent, =, getMaximumExplodePercent, (, ), ;, double, percent]
[), ;, state, ., setExplodedPieArea, (, explodeArea, ), ;, double, maximumExplodePercent, =, getMaximumExplodePercent, (, ), ;, double, percent, =, maximumExplodePercent]
[;, double, maximumExplodePercent, =, getMaximumExplodePercent, (, ), ;, double, percent, =, maximumExplodePercent, /, (, 1.0, +, maximumExplodePercent, ), ;, double]
[., setExplodedPieArea, (, explodeArea, ), ;, double, maximumExplodePercent, =, getMaximumExplodePercent, (, ), ;, double, percent, =, maximumExplodePercent, /, (, 1.0]
[), ;, double, maximumExplodePercent, =, getMaximumExplodePercent, (, ), ;, double, percent, =, maximumExplodePercent, /, (, 1.0, +, maximumExplodePercent, ), ;]
[;, double, percent, =, maximumExplodePercent, /, (, 1.0, +, maximumExplodePercent, ), ;, double, h1, =, explodeArea, ., getWidth, (, )]
[;, double, h1, =, explodeArea, ., getWidth, (, ), *, percent, ;, double, v1, =, explodeArea, ., getHeight, (, )]
[/, (, 1.0, +, maximumExplodePercent, ), ;, double, h1, =, explodeArea, ., getWidth, (, ), *, percent, ;, double, v1]
[;, double, h1, =, explodeArea, ., getWidth, (, ), *, percent, ;, double, v1, =, explodeArea, ., getHeight, (, )]
[), ;, double, h1, =, explodeArea, ., getWidth, (, ), *, percent, ;, double, v1, =, explodeArea, ., getHeight, (]
[+, maximumExplodePercent, ), ;, double, h1, =, explodeArea, ., getWidth, (, ), *, percent, ;, double, v1, =, explodeArea, .]
[), ;, double, h1, =, explodeArea, ., getWidth, (, ), *, percent, ;, double, v1, =, explodeArea, ., getHeight, (]
[;, double, v1, =, explodeArea, ., getHeight, (, ), *, percent, ;, Rectangle2D, pieArea, =, new, Rectangle2D, ., Double, (]
[*, percent, ;, double, v1, =, explodeArea, ., getHeight, (, ), *, percent, ;, Rectangle2D, pieArea, =, new, Rectangle2D, .]
[., getWidth, (, ), *, percent, ;, double, v1, =, explodeArea, ., getHeight, (, ), *, percent, ;, Rectangle2D, pieArea]
[;, double, v1, =, explodeArea, ., getHeight, (, ), *, percent, ;, Rectangle2D, pieArea, =, new, Rectangle2D, ., Double, (]
[;, Rectangle2D, pieArea, =, new, Rectangle2D, ., Double, (, explodeArea, ., getX, (, ), +, h1, /, 2.0, ,, explodeArea]
[*, percent, ;, Rectangle2D, pieArea, =, new, Rectangle2D, ., Double, (, explodeArea, ., getX, (, ), +, h1, /, 2.0]
[., getHeight, (, ), *, percent, ;, Rectangle2D, pieArea, =, new, Rectangle2D, ., Double, (, explodeArea, ., getX, (, )]
[;, Rectangle2D, pieArea, =, new, Rectangle2D, ., Double, (, explodeArea, ., getX, (, ), +, h1, /, 2.0, ,, explodeArea]
[;, int, depth, =, (, int, ), (, pieArea, ., getHeight, (, ), *, this, ., depthFactor, ), ;, Rectangle2D]
[,, explodeArea, ., getY, (, ), +, v1, /, 2.0, ,, explodeArea, ., getWidth, (, ), -, h1, ,, explodeArea]
[+, h1, /, 2.0, ,, explodeArea, ., getY, (, ), +, v1, /, 2.0, ,, explodeArea, ., getWidth, (, )]
[., getX, (, ), +, h1, /, 2.0, ,, explodeArea, ., getY, (, ), +, v1, /, 2.0, ,, explodeArea]
[,, explodeArea, ., getY, (, ), +, v1, /, 2.0, ,, explodeArea, ., getWidth, (, ), -, h1, ,, explodeArea]
[/, 2.0, ,, explodeArea, ., getY, (, ), +, v1, /, 2.0, ,, explodeArea, ., getWidth, (, ), -, h1]
[,, explodeArea, ., getY, (, ), +, v1, /, 2.0, ,, explodeArea, ., getWidth, (, ), -, h1, ,, explodeArea]
[,, explodeArea, ., getWidth, (, ), -, h1, ,, explodeArea, ., getHeight, (, ), -, v1, ), ;, int, depth]
[+, v1, /, 2.0, ,, explodeArea, ., getWidth, (, ), -, h1, ,, explodeArea, ., getHeight, (, ), -, v1]
[., getY, (, ), +, v1, /, 2.0, ,, explodeArea, ., getWidth, (, ), -, h1, ,, explodeArea, ., getHeight]
[,, explodeArea, ., getWidth, (, ), -, h1, ,, explodeArea, ., getHeight, (, ), -, v1, ), ;, int, depth]
[/, 2.0, ,, explodeArea, ., getWidth, (, ), -, h1, ,, explodeArea, ., getHeight, (, ), -, v1, ), ;]
[,, explodeArea, ., getWidth, (, ), -, h1, ,, explodeArea, ., getHeight, (, ), -, v1, ), ;, int, depth]
[,, explodeArea, ., getHeight, (, ), -, v1, ), ;, int, depth, =, (, int, ), (, pieArea, ., getHeight]
[-, h1, ,, explodeArea, ., getHeight, (, ), -, v1, ), ;, int, depth, =, (, int, ), (, pieArea]
[., getWidth, (, ), -, h1, ,, explodeArea, ., getHeight, (, ), -, v1, ), ;, int, depth, =, (]
[,, explodeArea, ., getHeight, (, ), -, v1, ), ;, int, depth, =, (, int, ), (, pieArea, ., getHeight]
[), ;, int, depth, =, (, int, ), (, pieArea, ., getHeight, (, ), *, this, ., depthFactor, ), ;]
[-, v1, ), ;, int, depth, =, (, int, ), (, pieArea, ., getHeight, (, ), *, this, ., depthFactor]
[., getHeight, (, ), -, v1, ), ;, int, depth, =, (, int, ), (, pieArea, ., getHeight, (, )]
[), ;, int, depth, =, (, int, ), (, pieArea, ., getHeight, (, ), *, this, ., depthFactor, ), ;]
[;, Rectangle2D, linkArea, =, new, Rectangle2D, ., Double, (, linkX, ,, linkY, ,, linkW, ,, linkH, -, depth, ), ;]
[;, Rectangle2D, linkArea, =, new, Rectangle2D, ., Double, (, linkX, ,, linkY, ,, linkW, ,, linkH, -, depth, ), ;]
[), ;, Rectangle2D, linkArea, =, new, Rectangle2D, ., Double, (, linkX, ,, linkY, ,, linkW, ,, linkH, -, depth, )]
[*, this, ., depthFactor, ), ;, Rectangle2D, linkArea, =, new, Rectangle2D, ., Double, (, linkX, ,, linkY, ,, linkW, ,]
[., getHeight, (, ), *, this, ., depthFactor, ), ;, Rectangle2D, linkArea, =, new, Rectangle2D, ., Double, (, linkX, ,]
[), ;, Rectangle2D, linkArea, =, new, Rectangle2D, ., Double, (, linkX, ,, linkY, ,, linkW, ,, linkH, -, depth, )]
[., depthFactor, ), ;, Rectangle2D, linkArea, =, new, Rectangle2D, ., Double, (, linkX, ,, linkY, ,, linkW, ,, linkH, -]
[;, state, ., setLinkArea, (, linkArea, ), ;, state, ., setPieArea, (, pieArea, ), ;, state, ., setPieCenterX, (, pieArea]
[,, linkY, ,, linkW, ,, linkH, -, depth, ), ;, state, ., setLinkArea, (, linkArea, ), ;, state, ., setPieArea]
[,, linkW, ,, linkH, -, depth, ), ;, state, ., setLinkArea, (, linkArea, ), ;, state, ., setPieArea, (, pieArea]
[,, linkH, -, depth, ), ;, state, ., setLinkArea, (, linkArea, ), ;, state, ., setPieArea, (, pieArea, ), ;]
[), ;, state, ., setLinkArea, (, linkArea, ), ;, state, ., setPieArea, (, pieArea, ), ;, state, ., setPieCenterX, (]
[-, depth, ), ;, state, ., setLinkArea, (, linkArea, ), ;, state, ., setPieArea, (, pieArea, ), ;, state, .]
[), ;, state, ., setLinkArea, (, linkArea, ), ;, state, ., setPieArea, (, pieArea, ), ;, state, ., setPieCenterX, (]
[;, state, ., setPieArea, (, pieArea, ), ;, state, ., setPieCenterX, (, pieArea, ., getCenterX, (, ), ), ;, state]
[., setLinkArea, (, linkArea, ), ;, state, ., setPieArea, (, pieArea, ), ;, state, ., setPieCenterX, (, pieArea, ., getCenterX]
[), ;, state, ., setPieArea, (, pieArea, ), ;, state, ., setPieCenterX, (, pieArea, ., getCenterX, (, ), ), ;]
[;, state, ., setPieCenterX, (, pieArea, ., getCenterX, (, ), ), ;, state, ., setPieCenterY, (, pieArea, ., getCenterY, (]
[., setPieArea, (, pieArea, ), ;, state, ., setPieCenterX, (, pieArea, ., getCenterX, (, ), ), ;, state, ., setPieCenterY]
[), ;, state, ., setPieCenterX, (, pieArea, ., getCenterX, (, ), ), ;, state, ., setPieCenterY, (, pieArea, ., getCenterY]
[;, state, ., setPieCenterY, (, pieArea, ., getCenterY, (, ), -, depth, /, 2.0, ), ;, state, ., setPieWRadius, (]
[., setPieCenterX, (, pieArea, ., getCenterX, (, ), ), ;, state, ., setPieCenterY, (, pieArea, ., getCenterY, (, ), -]
[), ;, state, ., setPieCenterY, (, pieArea, ., getCenterY, (, ), -, depth, /, 2.0, ), ;, state, ., setPieWRadius]
[., getCenterX, (, ), ), ;, state, ., setPieCenterY, (, pieArea, ., getCenterY, (, ), -, depth, /, 2.0, )]
[;, state, ., setPieWRadius, (, pieArea, ., getWidth, (, ), /, 2.0, ), ;, state, ., setPieHRadius, (, (, pieArea]
[., setPieCenterY, (, pieArea, ., getCenterY, (, ), -, depth, /, 2.0, ), ;, state, ., setPieWRadius, (, pieArea, .]
[), ;, state, ., setPieWRadius, (, pieArea, ., getWidth, (, ), /, 2.0, ), ;, state, ., setPieHRadius, (, (]
[-, depth, /, 2.0, ), ;, state, ., setPieWRadius, (, pieArea, ., getWidth, (, ), /, 2.0, ), ;, state]
[., getCenterY, (, ), -, depth, /, 2.0, ), ;, state, ., setPieWRadius, (, pieArea, ., getWidth, (, ), /]
[), ;, state, ., setPieWRadius, (, pieArea, ., getWidth, (, ), /, 2.0, ), ;, state, ., setPieHRadius, (, (]
[/, 2.0, ), ;, state, ., setPieWRadius, (, pieArea, ., getWidth, (, ), /, 2.0, ), ;, state, ., setPieHRadius]
[), ;, state, ., setPieWRadius, (, pieArea, ., getWidth, (, ), /, 2.0, ), ;, state, ., setPieHRadius, (, (]
[;, state, ., setPieHRadius, (, (, pieArea, ., getHeight, (, ), -, depth, ), /, 2.0, ), ;, PieDataset, dataset]
[., setPieWRadius, (, pieArea, ., getWidth, (, ), /, 2.0, ), ;, state, ., setPieHRadius, (, (, pieArea, ., getHeight]
[), ;, state, ., setPieHRadius, (, (, pieArea, ., getHeight, (, ), -, depth, ), /, 2.0, ), ;, PieDataset]
[/, 2.0, ), ;, state, ., setPieHRadius, (, (, pieArea, ., getHeight, (, ), -, depth, ), /, 2.0, )]
[., getWidth, (, ), /, 2.0, ), ;, state, ., setPieHRadius, (, (, pieArea, ., getHeight, (, ), -, depth]
[), ;, state, ., setPieHRadius, (, (, pieArea, ., getHeight, (, ), -, depth, ), /, 2.0, ), ;, PieDataset]
[;, PieDataset, dataset, =, getDataset, (, ), ;, if, (, DatasetUtilities, ., isEmptyOrNull, (, getDataset, (, ), ), ), {]
[., setPieHRadius, (, (, pieArea, ., getHeight, (, ), -, depth, ), /, 2.0, ), ;, PieDataset, dataset, =, getDataset]
[), ;, PieDataset, dataset, =, getDataset, (, ), ;, if, (, DatasetUtilities, ., isEmptyOrNull, (, getDataset, (, ), ), )]
[/, 2.0, ), ;, PieDataset, dataset, =, getDataset, (, ), ;, if, (, DatasetUtilities, ., isEmptyOrNull, (, getDataset, (, )]
[), /, 2.0, ), ;, PieDataset, dataset, =, getDataset, (, ), ;, if, (, DatasetUtilities, ., isEmptyOrNull, (, getDataset, (]
[-, depth, ), /, 2.0, ), ;, PieDataset, dataset, =, getDataset, (, ), ;, if, (, DatasetUtilities, ., isEmptyOrNull, (]
[., getHeight, (, ), -, depth, ), /, 2.0, ), ;, PieDataset, dataset, =, getDataset, (, ), ;, if, (]
[), /, 2.0, ), ;, PieDataset, dataset, =, getDataset, (, ), ;, if, (, DatasetUtilities, ., isEmptyOrNull, (, getDataset, (]
[), ;, PieDataset, dataset, =, getDataset, (, ), ;, if, (, DatasetUtilities, ., isEmptyOrNull, (, getDataset, (, ), ), )]
[;, if, (, DatasetUtilities, ., isEmptyOrNull, (, getDataset, (, ), ), ), {, drawNoDataMessage, (, g2, ,, plotArea, ), ;]
[), {, drawNoDataMessage, (, g2, ,, plotArea, ), ;, g2, ., setClip, (, savedClip, ), ;, drawOutline, (, g2, ,]
[., isEmptyOrNull, (, getDataset, (, ), ), ), {, drawNoDataMessage, (, g2, ,, plotArea, ), ;, g2, ., setClip, (]
[), ), {, drawNoDataMessage, (, g2, ,, plotArea, ), ;, g2, ., setClip, (, savedClip, ), ;, drawOutline, (, g2]
[;, g2, ., setClip, (, savedClip, ), ;, drawOutline, (, g2, ,, plotArea, ), ;, return, ;, }, if, (]
[,, plotArea, ), ;, g2, ., setClip, (, savedClip, ), ;, drawOutline, (, g2, ,, plotArea, ), ;, return, ;]
[), ;, g2, ., setClip, (, savedClip, ), ;, drawOutline, (, g2, ,, plotArea, ), ;, return, ;, }, if]
[;, drawOutline, (, g2, ,, plotArea, ), ;, return, ;, }, if, (, dataset, ., getKeys, (, ), ., size]
[., setClip, (, savedClip, ), ;, drawOutline, (, g2, ,, plotArea, ), ;, return, ;, }, if, (, dataset, .]
[), ;, drawOutline, (, g2, ,, plotArea, ), ;, return, ;, }, if, (, dataset, ., getKeys, (, ), .]
[;, return, ;, }, if, (, dataset, ., getKeys, (, ), ., size, (, ), >, plotArea, ., getWidth, (]
[,, plotArea, ), ;, return, ;, }, if, (, dataset, ., getKeys, (, ), ., size, (, ), >, plotArea]
[), ;, return, ;, }, if, (, dataset, ., getKeys, (, ), ., size, (, ), >, plotArea, ., getWidth]
[), {, String, text, =, "Too many elements", ;, Font, sfont, =, new, Font, (, "Tahoma", ,, Font, ., BOLD, ,, 10]
[>, plotArea, ., getWidth, (, ), ), {, String, text, =, "Too many elements", ;, Font, sfont, =, new, Font, (, "Tahoma"]
[., size, (, ), >, plotArea, ., getWidth, (, ), ), {, String, text, =, "Too many elements", ;, Font, sfont, =]
[., getKeys, (, ), ., size, (, ), >, plotArea, ., getWidth, (, ), ), {, String, text, =, "Too many elements"]
[), {, String, text, =, "Too many elements", ;, Font, sfont, =, new, Font, (, "Tahoma", ,, Font, ., BOLD, ,, 10]
[., getWidth, (, ), ), {, String, text, =, "Too many elements", ;, Font, sfont, =, new, Font, (, "Tahoma", ,, Font]
[;, Font, sfont, =, new, Font, (, "Tahoma", ,, Font, ., BOLD, ,, 10, ), ;, g2, ., setFont, (]
[;, g2, ., setFont, (, sfont, ), ;, FontMetrics, fm, =, g2, ., getFontMetrics, (, sfont, ), ;, int, stringWidth]
[,, Font, ., BOLD, ,, 10, ), ;, g2, ., setFont, (, sfont, ), ;, FontMetrics, fm, =, g2, .]
[,, 10, ), ;, g2, ., setFont, (, sfont, ), ;, FontMetrics, fm, =, g2, ., getFontMetrics, (, sfont, )]
[., BOLD, ,, 10, ), ;, g2, ., setFont, (, sfont, ), ;, FontMetrics, fm, =, g2, ., getFontMetrics, (]
[), ;, g2, ., setFont, (, sfont, ), ;, FontMetrics, fm, =, g2, ., getFontMetrics, (, sfont, ), ;, int]
[;, FontMetrics, fm, =, g2, ., getFontMetrics, (, sfont, ), ;, int, stringWidth, =, fm, ., stringWidth, (, text, )]
[., setFont, (, sfont, ), ;, FontMetrics, fm, =, g2, ., getFontMetrics, (, sfont, ), ;, int, stringWidth, =, fm]
[), ;, FontMetrics, fm, =, g2, ., getFontMetrics, (, sfont, ), ;, int, stringWidth, =, fm, ., stringWidth, (, text]
[;, int, stringWidth, =, fm, ., stringWidth, (, text, ), ;, g2, ., drawString, (, text, ,, (, int, )]
[., getFontMetrics, (, sfont, ), ;, int, stringWidth, =, fm, ., stringWidth, (, text, ), ;, g2, ., drawString, (]
[), ;, int, stringWidth, =, fm, ., stringWidth, (, text, ), ;, g2, ., drawString, (, text, ,, (, int]
[;, g2, ., drawString, (, text, ,, (, int, ), (, plotArea, ., getX, (, ), +, (, plotArea, .]
[., stringWidth, (, text, ), ;, g2, ., drawString, (, text, ,, (, int, ), (, plotArea, ., getX, (]
[), ;, g2, ., drawString, (, text, ,, (, int, ), (, plotArea, ., getX, (, ), +, (, plotArea]
[;, return, ;, }, if, (, isCircular, (, ), ), {, double, min, =, Math, ., min, (, plotArea, .]
[., drawString, (, text, ,, (, int, ), (, plotArea, ., getX, (, ), +, (, plotArea, ., getWidth, (]
[,, (, int, ), (, plotArea, ., getX, (, ), +, (, plotArea, ., getWidth, (, ), -, stringWidth, )]
[,, (, int, ), (, plotArea, ., getY, (, ), +, (, plotArea, ., getHeight, (, ), /, 2, )]
[,, (, int, ), (, plotArea, ., getY, (, ), +, (, plotArea, ., getHeight, (, ), /, 2, )]
[), ,, (, int, ), (, plotArea, ., getY, (, ), +, (, plotArea, ., getHeight, (, ), /, 2]
[+, (, plotArea, ., getWidth, (, ), -, stringWidth, ), /, 2, ), ,, (, int, ), (, plotArea, .]
[., getX, (, ), +, (, plotArea, ., getWidth, (, ), -, stringWidth, ), /, 2, ), ,, (, int]
[), ,, (, int, ), (, plotArea, ., getY, (, ), +, (, plotArea, ., getHeight, (, ), /, 2]
[/, 2, ), ,, (, int, ), (, plotArea, ., getY, (, ), +, (, plotArea, ., getHeight, (, )]
[), /, 2, ), ,, (, int, ), (, plotArea, ., getY, (, ), +, (, plotArea, ., getHeight, (]
[-, stringWidth, ), /, 2, ), ,, (, int, ), (, plotArea, ., getY, (, ), +, (, plotArea, .]
[., getWidth, (, ), -, stringWidth, ), /, 2, ), ,, (, int, ), (, plotArea, ., getY, (, )]
[), /, 2, ), ,, (, int, ), (, plotArea, ., getY, (, ), +, (, plotArea, ., getHeight, (]
[), ,, (, int, ), (, plotArea, ., getY, (, ), +, (, plotArea, ., getHeight, (, ), /, 2]
[), ;, return, ;, }, if, (, isCircular, (, ), ), {, double, min, =, Math, ., min, (, plotArea]
[), ;, return, ;, }, if, (, isCircular, (, ), ), {, double, min, =, Math, ., min, (, plotArea]
[), ), ;, return, ;, }, if, (, isCircular, (, ), ), {, double, min, =, Math, ., min, (]
[+, (, plotArea, ., getHeight, (, ), /, 2, ), ), ), ;, return, ;, }, if, (, isCircular, (]
[., getY, (, ), +, (, plotArea, ., getHeight, (, ), /, 2, ), ), ), ;, return, ;, }]
[), ), ;, return, ;, }, if, (, isCircular, (, ), ), {, double, min, =, Math, ., min, (]
[), ), ), ;, return, ;, }, if, (, isCircular, (, ), ), {, double, min, =, Math, ., min]
[/, 2, ), ), ), ;, return, ;, }, if, (, isCircular, (, ), ), {, double, min, =, Math]
[., getHeight, (, ), /, 2, ), ), ), ;, return, ;, }, if, (, isCircular, (, ), ), {]
[), ), ), ;, return, ;, }, if, (, isCircular, (, ), ), {, double, min, =, Math, ., min]
[), {, double, min, =, Math, ., min, (, plotArea, ., getWidth, (, ), ,, plotArea, ., getHeight, (, )]
[;, plotArea, =, new, Rectangle2D, ., Double, (, plotArea, ., getCenterX, (, ), -, min, ,, plotArea, ., getCenterY, (]
[/, 2, ;, plotArea, =, new, Rectangle2D, ., Double, (, plotArea, ., getCenterX, (, ), -, min, ,, plotArea, .]
[., min, (, plotArea, ., getWidth, (, ), ,, plotArea, ., getHeight, (, ), ), /, 2, ;, plotArea, =]
[,, plotArea, ., getHeight, (, ), ), /, 2, ;, plotArea, =, new, Rectangle2D, ., Double, (, plotArea, ., getCenterX]
[., getWidth, (, ), ,, plotArea, ., getHeight, (, ), ), /, 2, ;, plotArea, =, new, Rectangle2D, ., Double]
[), /, 2, ;, plotArea, =, new, Rectangle2D, ., Double, (, plotArea, ., getCenterX, (, ), -, min, ,, plotArea]
[., getHeight, (, ), ), /, 2, ;, plotArea, =, new, Rectangle2D, ., Double, (, plotArea, ., getCenterX, (, )]
[;, plotArea, =, new, Rectangle2D, ., Double, (, plotArea, ., getCenterX, (, ), -, min, ,, plotArea, ., getCenterY, (]
[=, new, Rectangle2D, ., Double, (, plotArea, ., getCenterX, (, ), -, min, ,, plotArea, ., getCenterY, (, ), -]
[;, }, List, sectionKeys, =, dataset, ., getKeys, (, ), ;, if, (, sectionKeys, ., size, (, ), ==, 0]
[,, plotArea, ., getCenterY, (, ), -, min, ,, 2, *, min, ,, 2, *, min, ), ;, }, List]
[-, min, ,, plotArea, ., getCenterY, (, ), -, min, ,, 2, *, min, ,, 2, *, min, ), ;]
[., getCenterX, (, ), -, min, ,, plotArea, ., getCenterY, (, ), -, min, ,, 2, *, min, ,, 2]
[,, plotArea, ., getCenterY, (, ), -, min, ,, 2, *, min, ,, 2, *, min, ), ;, }, List]
[,, 2, *, min, ,, 2, *, min, ), ;, }, List, sectionKeys, =, dataset, ., getKeys, (, ), ;]
[-, min, ,, 2, *, min, ,, 2, *, min, ), ;, }, List, sectionKeys, =, dataset, ., getKeys, (]
[., getCenterY, (, ), -, min, ,, 2, *, min, ,, 2, *, min, ), ;, }, List, sectionKeys, =]
[,, 2, *, min, ,, 2, *, min, ), ;, }, List, sectionKeys, =, dataset, ., getKeys, (, ), ;]
[,, 2, *, min, ), ;, }, List, sectionKeys, =, dataset, ., getKeys, (, ), ;, if, (, sectionKeys, .]
[*, min, ,, 2, *, min, ), ;, }, List, sectionKeys, =, dataset, ., getKeys, (, ), ;, if, (]
[,, 2, *, min, ), ;, }, List, sectionKeys, =, dataset, ., getKeys, (, ), ;, if, (, sectionKeys, .]
[), ;, }, List, sectionKeys, =, dataset, ., getKeys, (, ), ;, if, (, sectionKeys, ., size, (, ), ==]
[*, min, ), ;, }, List, sectionKeys, =, dataset, ., getKeys, (, ), ;, if, (, sectionKeys, ., size, (]
[), ;, }, List, sectionKeys, =, dataset, ., getKeys, (, ), ;, if, (, sectionKeys, ., size, (, ), ==]
[;, if, (, sectionKeys, ., size, (, ), ==, 0, ), {, return, ;, }, double, arcX, =, pieArea, .]
[., getKeys, (, ), ;, if, (, sectionKeys, ., size, (, ), ==, 0, ), {, return, ;, }, double]
[), {, return, ;, }, double, arcX, =, pieArea, ., getX, (, ), ;, double, arcY, =, pieArea, ., getY]
[==, 0, ), {, return, ;, }, double, arcX, =, pieArea, ., getX, (, ), ;, double, arcY, =, pieArea]
[., size, (, ), ==, 0, ), {, return, ;, }, double, arcX, =, pieArea, ., getX, (, ), ;]
[), {, return, ;, }, double, arcX, =, pieArea, ., getX, (, ), ;, double, arcY, =, pieArea, ., getY]
[;, double, arcY, =, pieArea, ., getY, (, ), ;, Composite, originalComposite, =, g2, ., getComposite, (, ), ;, g2]
[., getX, (, ), ;, double, arcY, =, pieArea, ., getY, (, ), ;, Composite, originalComposite, =, g2, ., getComposite]
[;, Composite, originalComposite, =, g2, ., getComposite, (, ), ;, g2, ., setComposite, (, AlphaComposite, ., getInstance, (, AlphaComposite, .]
[., getY, (, ), ;, Composite, originalComposite, =, g2, ., getComposite, (, ), ;, g2, ., setComposite, (, AlphaComposite, .]
[;, g2, ., setComposite, (, AlphaComposite, ., getInstance, (, AlphaComposite, ., SRC_OVER, ,, getForegroundAlpha, (, ), ), ), ;, double]
[., getComposite, (, ), ;, g2, ., setComposite, (, AlphaComposite, ., getInstance, (, AlphaComposite, ., SRC_OVER, ,, getForegroundAlpha, (, )]
[;, double, totalValue, =, DatasetUtilities, ., calculatePieDatasetTotal, (, dataset, ), ;, double, runningTotal, =, 0, ;, if, (, depth, <]
[., setComposite, (, AlphaComposite, ., getInstance, (, AlphaComposite, ., SRC_OVER, ,, getForegroundAlpha, (, ), ), ), ;, double, totalValue, =]
[), ;, double, totalValue, =, DatasetUtilities, ., calculatePieDatasetTotal, (, dataset, ), ;, double, runningTotal, =, 0, ;, if, (, depth]
[., getInstance, (, AlphaComposite, ., SRC_OVER, ,, getForegroundAlpha, (, ), ), ), ;, double, totalValue, =, DatasetUtilities, ., calculatePieDatasetTotal, (]
[,, getForegroundAlpha, (, ), ), ), ;, double, totalValue, =, DatasetUtilities, ., calculatePieDatasetTotal, (, dataset, ), ;, double, runningTotal, =]
[., SRC_OVER, ,, getForegroundAlpha, (, ), ), ), ;, double, totalValue, =, DatasetUtilities, ., calculatePieDatasetTotal, (, dataset, ), ;, double]
[), ), ;, double, totalValue, =, DatasetUtilities, ., calculatePieDatasetTotal, (, dataset, ), ;, double, runningTotal, =, 0, ;, if, (]
[;, double, runningTotal, =, 0, ;, if, (, depth, <, 0, ), {, return, ;, }, ArrayList, arcList, =, new]
[., calculatePieDatasetTotal, (, dataset, ), ;, double, runningTotal, =, 0, ;, if, (, depth, <, 0, ), {, return, ;]
[), ;, double, runningTotal, =, 0, ;, if, (, depth, <, 0, ), {, return, ;, }, ArrayList, arcList, =]
[;, if, (, depth, <, 0, ), {, return, ;, }, ArrayList, arcList, =, new, ArrayList, (, ), ;, Arc2D]
[), {, return, ;, }, ArrayList, arcList, =, new, ArrayList, (, ), ;, Arc2D, ., Double, arc, ;, Paint, paint]
[<, 0, ), {, return, ;, }, ArrayList, arcList, =, new, ArrayList, (, ), ;, Arc2D, ., Double, arc, ;]
[), {, return, ;, }, ArrayList, arcList, =, new, ArrayList, (, ), ;, Arc2D, ., Double, arc, ;, Paint, paint]
[;, Arc2D, ., Double, arc, ;, Paint, paint, ;, Paint, outlinePaint, ;, Stroke, outlineStroke, ;, Iterator, iterator, =, sectionKeys, .]
[;, while, (, iterator, ., hasNext, (, ), ), {, Comparable, currentKey, =, (, Comparable, ), iterator, ., next, (]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, Comparable, currentKey, =, (, Comparable, )]
[), {, Comparable, currentKey, =, (, Comparable, ), iterator, ., next, (, ), ;, Number, dataValue, =, dataset, ., getValue]
[., hasNext, (, ), ), {, Comparable, currentKey, =, (, Comparable, ), iterator, ., next, (, ), ;, Number, dataValue]
[;, Number, dataValue, =, dataset, ., getValue, (, currentKey, ), ;, if, (, dataValue, ==, null, ), {, arcList, .]
[;, Number, dataValue, =, dataset, ., getValue, (, currentKey, ), ;, if, (, dataValue, ==, null, ), {, arcList, .]
[., next, (, ), ;, Number, dataValue, =, dataset, ., getValue, (, currentKey, ), ;, if, (, dataValue, ==, null]
[;, if, (, dataValue, ==, null, ), {, arcList, ., add, (, null, ), ;, continue, ;, }, double, value]
[., getValue, (, currentKey, ), ;, if, (, dataValue, ==, null, ), {, arcList, ., add, (, null, ), ;]
[), ;, if, (, dataValue, ==, null, ), {, arcList, ., add, (, null, ), ;, continue, ;, }, double]
[), {, arcList, ., add, (, null, ), ;, continue, ;, }, double, value, =, dataValue, ., doubleValue, (, )]
[==, null, ), {, arcList, ., add, (, null, ), ;, continue, ;, }, double, value, =, dataValue, ., doubleValue]
[), {, arcList, ., add, (, null, ), ;, continue, ;, }, double, value, =, dataValue, ., doubleValue, (, )]
[;, continue, ;, }, double, value, =, dataValue, ., doubleValue, (, ), ;, if, (, value, <=, 0, ), {]
[., add, (, null, ), ;, continue, ;, }, double, value, =, dataValue, ., doubleValue, (, ), ;, if, (]
[), ;, continue, ;, }, double, value, =, dataValue, ., doubleValue, (, ), ;, if, (, value, <=, 0, )]
[;, if, (, value, <=, 0, ), {, arcList, ., add, (, null, ), ;, continue, ;, }, double, startAngle]
[., doubleValue, (, ), ;, if, (, value, <=, 0, ), {, arcList, ., add, (, null, ), ;, continue]
[), {, arcList, ., add, (, null, ), ;, continue, ;, }, double, startAngle, =, getStartAngle, (, ), ;, double]
[<=, 0, ), {, arcList, ., add, (, null, ), ;, continue, ;, }, double, startAngle, =, getStartAngle, (, )]
[), {, arcList, ., add, (, null, ), ;, continue, ;, }, double, startAngle, =, getStartAngle, (, ), ;, double]
[;, continue, ;, }, double, startAngle, =, getStartAngle, (, ), ;, double, direction, =, getDirection, (, ), ., getFactor, (]
[., add, (, null, ), ;, continue, ;, }, double, startAngle, =, getStartAngle, (, ), ;, double, direction, =, getDirection]
[), ;, continue, ;, }, double, startAngle, =, getStartAngle, (, ), ;, double, direction, =, getDirection, (, ), ., getFactor]
[;, double, direction, =, getDirection, (, ), ., getFactor, (, ), ;, double, angle1, =, startAngle, +, (, direction, *]
[;, double, angle1, =, startAngle, +, (, direction, *, (, runningTotal, *, 360, ), ), /, totalValue, ;, double, angle2]
[., getFactor, (, ), ;, double, angle1, =, startAngle, +, (, direction, *, (, runningTotal, *, 360, ), ), /]
[;, double, angle2, =, startAngle, +, (, direction, *, (, runningTotal, +, value, ), *, 360, ), /, totalValue, ;]
[+, (, direction, *, (, runningTotal, *, 360, ), ), /, totalValue, ;, double, angle2, =, startAngle, +, (, direction]
[;, double, angle2, =, startAngle, +, (, direction, *, (, runningTotal, +, value, ), *, 360, ), /, totalValue, ;]
[/, totalValue, ;, double, angle2, =, startAngle, +, (, direction, *, (, runningTotal, +, value, ), *, 360, ), /]
[), /, totalValue, ;, double, angle2, =, startAngle, +, (, direction, *, (, runningTotal, +, value, ), *, 360, )]
[*, (, runningTotal, *, 360, ), ), /, totalValue, ;, double, angle2, =, startAngle, +, (, direction, *, (, runningTotal]
[), /, totalValue, ;, double, angle2, =, startAngle, +, (, direction, *, (, runningTotal, +, value, ), *, 360, )]
[), ), /, totalValue, ;, double, angle2, =, startAngle, +, (, direction, *, (, runningTotal, +, value, ), *, 360]
[*, 360, ), ), /, totalValue, ;, double, angle2, =, startAngle, +, (, direction, *, (, runningTotal, +, value, )]
[), ), /, totalValue, ;, double, angle2, =, startAngle, +, (, direction, *, (, runningTotal, +, value, ), *, 360]
[;, double, angle2, =, startAngle, +, (, direction, *, (, runningTotal, +, value, ), *, 360, ), /, totalValue, ;]
[;, if, (, Math, ., abs, (, angle2, -, angle1, ), >, getMinimumArcAngleToDraw, (, ), ), {, arcList, ., add]
[+, (, direction, *, (, runningTotal, +, value, ), *, 360, ), /, totalValue, ;, if, (, Math, ., abs]
[;, if, (, Math, ., abs, (, angle2, -, angle1, ), >, getMinimumArcAngleToDraw, (, ), ), {, arcList, ., add]
[/, totalValue, ;, if, (, Math, ., abs, (, angle2, -, angle1, ), >, getMinimumArcAngleToDraw, (, ), ), {, arcList]
[), /, totalValue, ;, if, (, Math, ., abs, (, angle2, -, angle1, ), >, getMinimumArcAngleToDraw, (, ), ), {]
[*, 360, ), /, totalValue, ;, if, (, Math, ., abs, (, angle2, -, angle1, ), >, getMinimumArcAngleToDraw, (, )]
[*, (, runningTotal, +, value, ), *, 360, ), /, totalValue, ;, if, (, Math, ., abs, (, angle2, -]
[*, 360, ), /, totalValue, ;, if, (, Math, ., abs, (, angle2, -, angle1, ), >, getMinimumArcAngleToDraw, (, )]
[), *, 360, ), /, totalValue, ;, if, (, Math, ., abs, (, angle2, -, angle1, ), >, getMinimumArcAngleToDraw, (]
[+, value, ), *, 360, ), /, totalValue, ;, if, (, Math, ., abs, (, angle2, -, angle1, ), >]
[), *, 360, ), /, totalValue, ;, if, (, Math, ., abs, (, angle2, -, angle1, ), >, getMinimumArcAngleToDraw, (]
[), /, totalValue, ;, if, (, Math, ., abs, (, angle2, -, angle1, ), >, getMinimumArcAngleToDraw, (, ), ), {]
[;, if, (, Math, ., abs, (, angle2, -, angle1, ), >, getMinimumArcAngleToDraw, (, ), ), {, arcList, ., add]
[), {, arcList, ., add, (, new, Arc2D, ., Double, (, arcX, ,, arcY, +, depth, ,, pieArea, ., getWidth]
[>, getMinimumArcAngleToDraw, (, ), ), {, arcList, ., add, (, new, Arc2D, ., Double, (, arcX, ,, arcY, +, depth]
[., abs, (, angle2, -, angle1, ), >, getMinimumArcAngleToDraw, (, ), ), {, arcList, ., add, (, new, Arc2D, .]
[), >, getMinimumArcAngleToDraw, (, ), ), {, arcList, ., add, (, new, Arc2D, ., Double, (, arcX, ,, arcY, +]
[-, angle1, ), >, getMinimumArcAngleToDraw, (, ), ), {, arcList, ., add, (, new, Arc2D, ., Double, (, arcX, ,]
[), >, getMinimumArcAngleToDraw, (, ), ), {, arcList, ., add, (, new, Arc2D, ., Double, (, arcX, ,, arcY, +]
[), {, arcList, ., add, (, new, Arc2D, ., Double, (, arcX, ,, arcY, +, depth, ,, pieArea, ., getWidth]
[;, }, else, {, arcList, ., add, (, null, ), ;, }, runningTotal, +=, value, ;, }, Shape, oldClip, =]
[., add, (, new, Arc2D, ., Double, (, arcX, ,, arcY, +, depth, ,, pieArea, ., getWidth, (, ), ,]
[), ;, }, else, {, arcList, ., add, (, null, ), ;, }, runningTotal, +=, value, ;, }, Shape, oldClip]
[,, arcY, +, depth, ,, pieArea, ., getWidth, (, ), ,, pieArea, ., getHeight, (, ), -, depth, ,, angle1]
[,, pieArea, ., getWidth, (, ), ,, pieArea, ., getHeight, (, ), -, depth, ,, angle1, ,, angle2, -, angle1]
[+, depth, ,, pieArea, ., getWidth, (, ), ,, pieArea, ., getHeight, (, ), -, depth, ,, angle1, ,, angle2]
[,, pieArea, ., getWidth, (, ), ,, pieArea, ., getHeight, (, ), -, depth, ,, angle1, ,, angle2, -, angle1]
[,, pieArea, ., getHeight, (, ), -, depth, ,, angle1, ,, angle2, -, angle1, ,, Arc2D, ., PIE, ), )]
[., getWidth, (, ), ,, pieArea, ., getHeight, (, ), -, depth, ,, angle1, ,, angle2, -, angle1, ,, Arc2D]
[,, angle1, ,, angle2, -, angle1, ,, Arc2D, ., PIE, ), ), ;, }, else, {, arcList, ., add, (]
[-, depth, ,, angle1, ,, angle2, -, angle1, ,, Arc2D, ., PIE, ), ), ;, }, else, {, arcList, .]
[., getHeight, (, ), -, depth, ,, angle1, ,, angle2, -, angle1, ,, Arc2D, ., PIE, ), ), ;, }]
[,, angle1, ,, angle2, -, angle1, ,, Arc2D, ., PIE, ), ), ;, }, else, {, arcList, ., add, (]
[,, angle2, -, angle1, ,, Arc2D, ., PIE, ), ), ;, }, else, {, arcList, ., add, (, null, )]
[,, Arc2D, ., PIE, ), ), ;, }, else, {, arcList, ., add, (, null, ), ;, }, runningTotal, +=]
[-, angle1, ,, Arc2D, ., PIE, ), ), ;, }, else, {, arcList, ., add, (, null, ), ;, }]
[,, Arc2D, ., PIE, ), ), ;, }, else, {, arcList, ., add, (, null, ), ;, }, runningTotal, +=]
[), ), ;, }, else, {, arcList, ., add, (, null, ), ;, }, runningTotal, +=, value, ;, }, Shape]
[., PIE, ), ), ;, }, else, {, arcList, ., add, (, null, ), ;, }, runningTotal, +=, value, ;]
[;, }, runningTotal, +=, value, ;, }, Shape, oldClip, =, g2, ., getClip, (, ), ;, Ellipse2D, top, =, new]
[., add, (, null, ), ;, }, runningTotal, +=, value, ;, }, Shape, oldClip, =, g2, ., getClip, (, )]
[), ;, }, runningTotal, +=, value, ;, }, Shape, oldClip, =, g2, ., getClip, (, ), ;, Ellipse2D, top, =]
[+=, value, ;, }, Shape, oldClip, =, g2, ., getClip, (, ), ;, Ellipse2D, top, =, new, Ellipse2D, ., Double]
[;, }, Shape, oldClip, =, g2, ., getClip, (, ), ;, Ellipse2D, top, =, new, Ellipse2D, ., Double, (, pieArea]
[;, Ellipse2D, top, =, new, Ellipse2D, ., Double, (, pieArea, ., getX, (, ), ,, pieArea, ., getY, (, )]
[., getClip, (, ), ;, Ellipse2D, top, =, new, Ellipse2D, ., Double, (, pieArea, ., getX, (, ), ,, pieArea]
[;, Ellipse2D, bottom, =, new, Ellipse2D, ., Double, (, pieArea, ., getX, (, ), ,, pieArea, ., getY, (, )]
[,, pieArea, ., getY, (, ), ,, pieArea, ., getWidth, (, ), ,, pieArea, ., getHeight, (, ), -, depth]
[., getX, (, ), ,, pieArea, ., getY, (, ), ,, pieArea, ., getWidth, (, ), ,, pieArea, ., getHeight]
[,, pieArea, ., getWidth, (, ), ,, pieArea, ., getHeight, (, ), -, depth, ), ;, Ellipse2D, bottom, =, new]
[., getY, (, ), ,, pieArea, ., getWidth, (, ), ,, pieArea, ., getHeight, (, ), -, depth, ), ;]
[,, pieArea, ., getHeight, (, ), -, depth, ), ;, Ellipse2D, bottom, =, new, Ellipse2D, ., Double, (, pieArea, .]
[., getWidth, (, ), ,, pieArea, ., getHeight, (, ), -, depth, ), ;, Ellipse2D, bottom, =, new, Ellipse2D, .]
[), ;, Ellipse2D, bottom, =, new, Ellipse2D, ., Double, (, pieArea, ., getX, (, ), ,, pieArea, ., getY, (]
[-, depth, ), ;, Ellipse2D, bottom, =, new, Ellipse2D, ., Double, (, pieArea, ., getX, (, ), ,, pieArea, .]
[., getHeight, (, ), -, depth, ), ;, Ellipse2D, bottom, =, new, Ellipse2D, ., Double, (, pieArea, ., getX, (]
[), ;, Ellipse2D, bottom, =, new, Ellipse2D, ., Double, (, pieArea, ., getX, (, ), ,, pieArea, ., getY, (]
[;, Rectangle2D, lower, =, new, Rectangle2D, ., Double, (, top, ., getX, (, ), ,, top, ., getCenterY, (, )]
[,, pieArea, ., getY, (, ), +, depth, ,, pieArea, ., getWidth, (, ), ,, pieArea, ., getHeight, (, )]
[., getX, (, ), ,, pieArea, ., getY, (, ), +, depth, ,, pieArea, ., getWidth, (, ), ,, pieArea]
[,, pieArea, ., getWidth, (, ), ,, pieArea, ., getHeight, (, ), -, depth, ), ;, Rectangle2D, lower, =, new]
[+, depth, ,, pieArea, ., getWidth, (, ), ,, pieArea, ., getHeight, (, ), -, depth, ), ;, Rectangle2D, lower]
[., getY, (, ), +, depth, ,, pieArea, ., getWidth, (, ), ,, pieArea, ., getHeight, (, ), -, depth]
[,, pieArea, ., getWidth, (, ), ,, pieArea, ., getHeight, (, ), -, depth, ), ;, Rectangle2D, lower, =, new]
[,, pieArea, ., getHeight, (, ), -, depth, ), ;, Rectangle2D, lower, =, new, Rectangle2D, ., Double, (, top, .]
[., getWidth, (, ), ,, pieArea, ., getHeight, (, ), -, depth, ), ;, Rectangle2D, lower, =, new, Rectangle2D, .]
[), ;, Rectangle2D, lower, =, new, Rectangle2D, ., Double, (, top, ., getX, (, ), ,, top, ., getCenterY, (]
[-, depth, ), ;, Rectangle2D, lower, =, new, Rectangle2D, ., Double, (, top, ., getX, (, ), ,, top, .]
[., getHeight, (, ), -, depth, ), ;, Rectangle2D, lower, =, new, Rectangle2D, ., Double, (, top, ., getX, (]
[), ;, Rectangle2D, lower, =, new, Rectangle2D, ., Double, (, top, ., getX, (, ), ,, top, ., getCenterY, (]
[;, Rectangle2D, upper, =, new, Rectangle2D, ., Double, (, pieArea, ., getX, (, ), ,, top, ., getY, (, )]
[,, top, ., getCenterY, (, ), ,, pieArea, ., getWidth, (, ), ,, bottom, ., getMaxY, (, ), -, top]
[., getX, (, ), ,, top, ., getCenterY, (, ), ,, pieArea, ., getWidth, (, ), ,, bottom, ., getMaxY]
[,, pieArea, ., getWidth, (, ), ,, bottom, ., getMaxY, (, ), -, top, ., getCenterY, (, ), ), ;]
[., getCenterY, (, ), ,, pieArea, ., getWidth, (, ), ,, bottom, ., getMaxY, (, ), -, top, ., getCenterY]
[,, bottom, ., getMaxY, (, ), -, top, ., getCenterY, (, ), ), ;, Rectangle2D, upper, =, new, Rectangle2D, .]
[., getWidth, (, ), ,, bottom, ., getMaxY, (, ), -, top, ., getCenterY, (, ), ), ;, Rectangle2D, upper]
[), ;, Rectangle2D, upper, =, new, Rectangle2D, ., Double, (, pieArea, ., getX, (, ), ,, top, ., getY, (]
[-, top, ., getCenterY, (, ), ), ;, Rectangle2D, upper, =, new, Rectangle2D, ., Double, (, pieArea, ., getX, (]
[., getMaxY, (, ), -, top, ., getCenterY, (, ), ), ;, Rectangle2D, upper, =, new, Rectangle2D, ., Double, (]
[), ;, Rectangle2D, upper, =, new, Rectangle2D, ., Double, (, pieArea, ., getX, (, ), ,, top, ., getY, (]
[., getCenterY, (, ), ), ;, Rectangle2D, upper, =, new, Rectangle2D, ., Double, (, pieArea, ., getX, (, ), ,]
[;, Area, a, =, new, Area, (, top, ), ;, a, ., add, (, new, Area, (, lower, ), )]
[,, top, ., getY, (, ), ,, pieArea, ., getWidth, (, ), ,, bottom, ., getCenterY, (, ), -, top]
[., getX, (, ), ,, top, ., getY, (, ), ,, pieArea, ., getWidth, (, ), ,, bottom, ., getCenterY]
[,, pieArea, ., getWidth, (, ), ,, bottom, ., getCenterY, (, ), -, top, ., getY, (, ), ), ;]
[., getY, (, ), ,, pieArea, ., getWidth, (, ), ,, bottom, ., getCenterY, (, ), -, top, ., getY]
[,, bottom, ., getCenterY, (, ), -, top, ., getY, (, ), ), ;, Area, a, =, new, Area, (]
[., getWidth, (, ), ,, bottom, ., getCenterY, (, ), -, top, ., getY, (, ), ), ;, Area, a]
[), ;, Area, a, =, new, Area, (, top, ), ;, a, ., add, (, new, Area, (, lower, )]
[-, top, ., getY, (, ), ), ;, Area, a, =, new, Area, (, top, ), ;, a, ., add]
[., getCenterY, (, ), -, top, ., getY, (, ), ), ;, Area, a, =, new, Area, (, top, )]
[), ;, Area, a, =, new, Area, (, top, ), ;, a, ., add, (, new, Area, (, lower, )]
[., getY, (, ), ), ;, Area, a, =, new, Area, (, top, ), ;, a, ., add, (, new]
[;, a, ., add, (, new, Area, (, lower, ), ), ;, Area, b, =, new, Area, (, bottom, )]
[), ;, a, ., add, (, new, Area, (, lower, ), ), ;, Area, b, =, new, Area, (, bottom]
[;, Area, b, =, new, Area, (, bottom, ), ;, b, ., add, (, new, Area, (, upper, ), )]
[., add, (, new, Area, (, lower, ), ), ;, Area, b, =, new, Area, (, bottom, ), ;, b]
[), ;, Area, b, =, new, Area, (, bottom, ), ;, b, ., add, (, new, Area, (, upper, )]
[), ), ;, Area, b, =, new, Area, (, bottom, ), ;, b, ., add, (, new, Area, (, upper]
[;, b, ., add, (, new, Area, (, upper, ), ), ;, Area, pie, =, new, Area, (, a, )]
[), ;, b, ., add, (, new, Area, (, upper, ), ), ;, Area, pie, =, new, Area, (, a]
[;, Area, pie, =, new, Area, (, a, ), ;, pie, ., intersect, (, b, ), ;, Area, front, =]
[., add, (, new, Area, (, upper, ), ), ;, Area, pie, =, new, Area, (, a, ), ;, pie]
[), ;, Area, pie, =, new, Area, (, a, ), ;, pie, ., intersect, (, b, ), ;, Area, front]
[), ), ;, Area, pie, =, new, Area, (, a, ), ;, pie, ., intersect, (, b, ), ;, Area]
[;, pie, ., intersect, (, b, ), ;, Area, front, =, new, Area, (, pie, ), ;, front, ., subtract]
[), ;, pie, ., intersect, (, b, ), ;, Area, front, =, new, Area, (, pie, ), ;, front, .]
[;, Area, front, =, new, Area, (, pie, ), ;, front, ., subtract, (, new, Area, (, top, ), )]
[., intersect, (, b, ), ;, Area, front, =, new, Area, (, pie, ), ;, front, ., subtract, (, new]
[), ;, Area, front, =, new, Area, (, pie, ), ;, front, ., subtract, (, new, Area, (, top, )]
[;, front, ., subtract, (, new, Area, (, top, ), ), ;, Area, back, =, new, Area, (, pie, )]
[), ;, front, ., subtract, (, new, Area, (, top, ), ), ;, Area, back, =, new, Area, (, pie]
[;, Area, back, =, new, Area, (, pie, ), ;, back, ., subtract, (, new, Area, (, bottom, ), )]
[., subtract, (, new, Area, (, top, ), ), ;, Area, back, =, new, Area, (, pie, ), ;, back]
[), ;, Area, back, =, new, Area, (, pie, ), ;, back, ., subtract, (, new, Area, (, bottom, )]
[), ), ;, Area, back, =, new, Area, (, pie, ), ;, back, ., subtract, (, new, Area, (, bottom]
[;, back, ., subtract, (, new, Area, (, bottom, ), ), ;, int, [, ], xs, ;, int, [, ]]
[), ;, back, ., subtract, (, new, Area, (, bottom, ), ), ;, int, [, ], xs, ;, int, []
[;, int, [, ], xs, ;, int, [, ], ys, ;, arc, =, new, Arc2D, ., Double, (, arcX, ,]
[., subtract, (, new, Area, (, bottom, ), ), ;, int, [, ], xs, ;, int, [, ], ys, ;]
[), ;, int, [, ], xs, ;, int, [, ], ys, ;, arc, =, new, Arc2D, ., Double, (, arcX]
[), ), ;, int, [, ], xs, ;, int, [, ], ys, ;, arc, =, new, Arc2D, ., Double, (]
[=, new, Arc2D, ., Double, (, arcX, ,, arcY, +, depth, ,, pieArea, ., getWidth, (, ), ,, pieArea, .]
[;, int, categoryCount, =, arcList, ., size, (, ), ;, for, (, int, categoryIndex, =, 0, ;, categoryIndex, <, categoryCount]
[,, arcY, +, depth, ,, pieArea, ., getWidth, (, ), ,, pieArea, ., getHeight, (, ), -, depth, ,, 0]
[,, pieArea, ., getWidth, (, ), ,, pieArea, ., getHeight, (, ), -, depth, ,, 0, ,, 360, ,, Arc2D]
[+, depth, ,, pieArea, ., getWidth, (, ), ,, pieArea, ., getHeight, (, ), -, depth, ,, 0, ,, 360]
[,, pieArea, ., getWidth, (, ), ,, pieArea, ., getHeight, (, ), -, depth, ,, 0, ,, 360, ,, Arc2D]
[,, pieArea, ., getHeight, (, ), -, depth, ,, 0, ,, 360, ,, Arc2D, ., PIE, ), ;, int, categoryCount]
[., getWidth, (, ), ,, pieArea, ., getHeight, (, ), -, depth, ,, 0, ,, 360, ,, Arc2D, ., PIE]
[,, 0, ,, 360, ,, Arc2D, ., PIE, ), ;, int, categoryCount, =, arcList, ., size, (, ), ;, for]
[-, depth, ,, 0, ,, 360, ,, Arc2D, ., PIE, ), ;, int, categoryCount, =, arcList, ., size, (, )]
[., getHeight, (, ), -, depth, ,, 0, ,, 360, ,, Arc2D, ., PIE, ), ;, int, categoryCount, =, arcList]
[,, 0, ,, 360, ,, Arc2D, ., PIE, ), ;, int, categoryCount, =, arcList, ., size, (, ), ;, for]
[,, 360, ,, Arc2D, ., PIE, ), ;, int, categoryCount, =, arcList, ., size, (, ), ;, for, (, int]
[,, Arc2D, ., PIE, ), ;, int, categoryCount, =, arcList, ., size, (, ), ;, for, (, int, categoryIndex, =]
[), ;, int, categoryCount, =, arcList, ., size, (, ), ;, for, (, int, categoryIndex, =, 0, ;, categoryIndex, <]
[., PIE, ), ;, int, categoryCount, =, arcList, ., size, (, ), ;, for, (, int, categoryIndex, =, 0, ;]
[;, for, (, int, categoryIndex, =, 0, ;, categoryIndex, <, categoryCount, ;, categoryIndex, ++, ), {, arc, =, (, Arc2D]
[., size, (, ), ;, for, (, int, categoryIndex, =, 0, ;, categoryIndex, <, categoryCount, ;, categoryIndex, ++, ), {]
[;, categoryIndex, <, categoryCount, ;, categoryIndex, ++, ), {, arc, =, (, Arc2D, ., Double, ), arcList, ., get, (]
[;, categoryIndex, ++, ), {, arc, =, (, Arc2D, ., Double, ), arcList, ., get, (, categoryIndex, ), ;, if]
[<, categoryCount, ;, categoryIndex, ++, ), {, arc, =, (, Arc2D, ., Double, ), arcList, ., get, (, categoryIndex, )]
[;, categoryIndex, ++, ), {, arc, =, (, Arc2D, ., Double, ), arcList, ., get, (, categoryIndex, ), ;, if]
[), {, arc, =, (, Arc2D, ., Double, ), arcList, ., get, (, categoryIndex, ), ;, if, (, arc, ==]
[++, ), {, arc, =, (, Arc2D, ., Double, ), arcList, ., get, (, categoryIndex, ), ;, if, (, arc]
[=, (, Arc2D, ., Double, ), arcList, ., get, (, categoryIndex, ), ;, if, (, arc, ==, null, ), {]
[;, if, (, arc, ==, null, ), {, continue, ;, }, Comparable, key, =, getSectionKey, (, categoryIndex, ), ;, paint]
[;, if, (, arc, ==, null, ), {, continue, ;, }, Comparable, key, =, getSectionKey, (, categoryIndex, ), ;, paint]
[., get, (, categoryIndex, ), ;, if, (, arc, ==, null, ), {, continue, ;, }, Comparable, key, =, getSectionKey]
[), ;, if, (, arc, ==, null, ), {, continue, ;, }, Comparable, key, =, getSectionKey, (, categoryIndex, ), ;]
[), {, continue, ;, }, Comparable, key, =, getSectionKey, (, categoryIndex, ), ;, paint, =, lookupSectionPaint, (, key, ,, false]
[==, null, ), {, continue, ;, }, Comparable, key, =, getSectionKey, (, categoryIndex, ), ;, paint, =, lookupSectionPaint, (, key]
[), {, continue, ;, }, Comparable, key, =, getSectionKey, (, categoryIndex, ), ;, paint, =, lookupSectionPaint, (, key, ,, false]
[;, paint, =, lookupSectionPaint, (, key, ,, false, ), ;, outlinePaint, =, lookupSectionOutlinePaint, (, key, ,, false, ), ;, outlineStroke]
[), ;, paint, =, lookupSectionPaint, (, key, ,, false, ), ;, outlinePaint, =, lookupSectionOutlinePaint, (, key, ,, false, ), ;]
[=, lookupSectionPaint, (, key, ,, false, ), ;, outlinePaint, =, lookupSectionOutlinePaint, (, key, ,, false, ), ;, outlineStroke, =, lookupSectionOutlineStroke]
[;, outlinePaint, =, lookupSectionOutlinePaint, (, key, ,, false, ), ;, outlineStroke, =, lookupSectionOutlineStroke, (, key, ,, false, ), ;, g2]
[,, false, ), ;, outlinePaint, =, lookupSectionOutlinePaint, (, key, ,, false, ), ;, outlineStroke, =, lookupSectionOutlineStroke, (, key, ,, false]
[), ;, outlinePaint, =, lookupSectionOutlinePaint, (, key, ,, false, ), ;, outlineStroke, =, lookupSectionOutlineStroke, (, key, ,, false, ), ;]
[=, lookupSectionOutlinePaint, (, key, ,, false, ), ;, outlineStroke, =, lookupSectionOutlineStroke, (, key, ,, false, ), ;, g2, ., setPaint]
[;, outlineStroke, =, lookupSectionOutlineStroke, (, key, ,, false, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill]
[,, false, ), ;, outlineStroke, =, lookupSectionOutlineStroke, (, key, ,, false, ), ;, g2, ., setPaint, (, paint, ), ;]
[), ;, outlineStroke, =, lookupSectionOutlineStroke, (, key, ,, false, ), ;, g2, ., setPaint, (, paint, ), ;, g2, .]
[=, lookupSectionOutlineStroke, (, key, ,, false, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, arc]
[;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, arc, ), ;, g2, ., setPaint, (, outlinePaint]
[,, false, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, arc, ), ;, g2, .]
[), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, arc, ), ;, g2, ., setPaint, (]
[;, g2, ., fill, (, arc, ), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., setStroke, (, outlineStroke]
[., setPaint, (, paint, ), ;, g2, ., fill, (, arc, ), ;, g2, ., setPaint, (, outlinePaint, ), ;]
[), ;, g2, ., fill, (, arc, ), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., setStroke, (]
[;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., setStroke, (, outlineStroke, ), ;, g2, ., draw, (, arc]
[., fill, (, arc, ), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., setStroke, (, outlineStroke, ), ;]
[), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., setStroke, (, outlineStroke, ), ;, g2, ., draw, (]
[;, g2, ., setStroke, (, outlineStroke, ), ;, g2, ., draw, (, arc, ), ;, g2, ., setPaint, (, paint]
[., setPaint, (, outlinePaint, ), ;, g2, ., setStroke, (, outlineStroke, ), ;, g2, ., draw, (, arc, ), ;]
[), ;, g2, ., setStroke, (, outlineStroke, ), ;, g2, ., draw, (, arc, ), ;, g2, ., setPaint, (]
[;, g2, ., draw, (, arc, ), ;, g2, ., setPaint, (, paint, ), ;, Point2D, p1, =, arc, .]
[., setStroke, (, outlineStroke, ), ;, g2, ., draw, (, arc, ), ;, g2, ., setPaint, (, paint, ), ;]
[), ;, g2, ., draw, (, arc, ), ;, g2, ., setPaint, (, paint, ), ;, Point2D, p1, =, arc]
[;, g2, ., setPaint, (, paint, ), ;, Point2D, p1, =, arc, ., getStartPoint, (, ), ;, xs, =, new]
[., draw, (, arc, ), ;, g2, ., setPaint, (, paint, ), ;, Point2D, p1, =, arc, ., getStartPoint, (]
[), ;, g2, ., setPaint, (, paint, ), ;, Point2D, p1, =, arc, ., getStartPoint, (, ), ;, xs, =]
[;, Point2D, p1, =, arc, ., getStartPoint, (, ), ;, xs, =, new, int, [, ], {, (, int, )]
[., setPaint, (, paint, ), ;, Point2D, p1, =, arc, ., getStartPoint, (, ), ;, xs, =, new, int, []
[), ;, Point2D, p1, =, arc, ., getStartPoint, (, ), ;, xs, =, new, int, [, ], {, (, int]
[;, xs, =, new, int, [, ], {, (, int, ), arc, ., getCenterX, (, ), ,, (, int, )]
[., getStartPoint, (, ), ;, xs, =, new, int, [, ], {, (, int, ), arc, ., getCenterX, (, )]
[=, new, int, [, ], {, (, int, ), arc, ., getCenterX, (, ), ,, (, int, ), arc, .]
[;, ys, =, new, int, [, ], {, (, int, ), arc, ., getCenterY, (, ), ,, (, int, )]
[;, ys, =, new, int, [, ], {, (, int, ), arc, ., getCenterY, (, ), ,, (, int, )]
[,, (, int, ), arc, ., getCenterX, (, ), ,, (, int, ), p1, ., getX, (, ), ,, (]
[,, (, int, ), arc, ., getCenterX, (, ), ,, (, int, ), p1, ., getX, (, ), ,, (]
[., getCenterX, (, ), ,, (, int, ), arc, ., getCenterX, (, ), ,, (, int, ), p1, ., getX]
[,, (, int, ), p1, ., getX, (, ), ,, (, int, ), p1, ., getX, (, ), }, ;]
[,, (, int, ), p1, ., getX, (, ), ,, (, int, ), p1, ., getX, (, ), }, ;]
[., getCenterX, (, ), ,, (, int, ), p1, ., getX, (, ), ,, (, int, ), p1, ., getX]
[,, (, int, ), p1, ., getX, (, ), }, ;, ys, =, new, int, [, ], {, (, int]
[,, (, int, ), p1, ., getX, (, ), }, ;, ys, =, new, int, [, ], {, (, int]
[., getX, (, ), ,, (, int, ), p1, ., getX, (, ), }, ;, ys, =, new, int, []
[}, ;, ys, =, new, int, [, ], {, (, int, ), arc, ., getCenterY, (, ), ,, (, int]
[}, ;, ys, =, new, int, [, ], {, (, int, ), arc, ., getCenterY, (, ), ,, (, int]
[., getX, (, ), }, ;, ys, =, new, int, [, ], {, (, int, ), arc, ., getCenterY, (]
[=, new, int, [, ], {, (, int, ), arc, ., getCenterY, (, ), ,, (, int, ), arc, .]
[;, Polygon, polygon, =, new, Polygon, (, xs, ,, ys, ,, 4, ), ;, g2, ., setPaint, (, java, .]
[;, Polygon, polygon, =, new, Polygon, (, xs, ,, ys, ,, 4, ), ;, g2, ., setPaint, (, java, .]
[,, (, int, ), arc, ., getCenterY, (, ), -, depth, ,, (, int, ), p1, ., getY, (, )]
[,, (, int, ), arc, ., getCenterY, (, ), -, depth, ,, (, int, ), p1, ., getY, (, )]
[., getCenterY, (, ), ,, (, int, ), arc, ., getCenterY, (, ), -, depth, ,, (, int, ), p1]
[,, (, int, ), p1, ., getY, (, ), -, depth, ,, (, int, ), p1, ., getY, (, )]
[-, depth, ,, (, int, ), p1, ., getY, (, ), -, depth, ,, (, int, ), p1, ., getY]
[-, depth, ,, (, int, ), p1, ., getY, (, ), -, depth, ,, (, int, ), p1, ., getY]
[., getCenterY, (, ), -, depth, ,, (, int, ), p1, ., getY, (, ), -, depth, ,, (, int]
[,, (, int, ), p1, ., getY, (, ), -, depth, ,, (, int, ), p1, ., getY, (, )]
[,, (, int, ), p1, ., getY, (, ), }, ;, Polygon, polygon, =, new, Polygon, (, xs, ,, ys]
[-, depth, ,, (, int, ), p1, ., getY, (, ), }, ;, Polygon, polygon, =, new, Polygon, (, xs]
[-, depth, ,, (, int, ), p1, ., getY, (, ), }, ;, Polygon, polygon, =, new, Polygon, (, xs]
[., getY, (, ), -, depth, ,, (, int, ), p1, ., getY, (, ), }, ;, Polygon, polygon, =]
[,, (, int, ), p1, ., getY, (, ), }, ;, Polygon, polygon, =, new, Polygon, (, xs, ,, ys]
[}, ;, Polygon, polygon, =, new, Polygon, (, xs, ,, ys, ,, 4, ), ;, g2, ., setPaint, (, java]
[}, ;, Polygon, polygon, =, new, Polygon, (, xs, ,, ys, ,, 4, ), ;, g2, ., setPaint, (, java]
[., getY, (, ), }, ;, Polygon, polygon, =, new, Polygon, (, xs, ,, ys, ,, 4, ), ;, g2]
[;, g2, ., setPaint, (, java, ., awt, ., Color, ., lightGray, ), ;, g2, ., fill, (, polygon, )]
[,, ys, ,, 4, ), ;, g2, ., setPaint, (, java, ., awt, ., Color, ., lightGray, ), ;, g2]
[,, 4, ), ;, g2, ., setPaint, (, java, ., awt, ., Color, ., lightGray, ), ;, g2, ., fill]
[), ;, g2, ., setPaint, (, java, ., awt, ., Color, ., lightGray, ), ;, g2, ., fill, (, polygon]
[;, g2, ., fill, (, polygon, ), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., setStroke, (, outlineStroke]
[., setPaint, (, java, ., awt, ., Color, ., lightGray, ), ;, g2, ., fill, (, polygon, ), ;, g2]
[), ;, g2, ., fill, (, polygon, ), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., setStroke, (]
[., lightGray, ), ;, g2, ., fill, (, polygon, ), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, .]
[., Color, ., lightGray, ), ;, g2, ., fill, (, polygon, ), ;, g2, ., setPaint, (, outlinePaint, ), ;]
[., awt, ., Color, ., lightGray, ), ;, g2, ., fill, (, polygon, ), ;, g2, ., setPaint, (, outlinePaint]
[;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., setStroke, (, outlineStroke, ), ;, g2, ., draw, (, polygon]
[., fill, (, polygon, ), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., setStroke, (, outlineStroke, ), ;]
[), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., setStroke, (, outlineStroke, ), ;, g2, ., draw, (]
[;, g2, ., setStroke, (, outlineStroke, ), ;, g2, ., draw, (, polygon, ), ;, g2, ., setPaint, (, paint]
[., setPaint, (, outlinePaint, ), ;, g2, ., setStroke, (, outlineStroke, ), ;, g2, ., draw, (, polygon, ), ;]
[), ;, g2, ., setStroke, (, outlineStroke, ), ;, g2, ., draw, (, polygon, ), ;, g2, ., setPaint, (]
[;, g2, ., draw, (, polygon, ), ;, g2, ., setPaint, (, paint, ), ;, }, g2, ., setPaint, (]
[., setStroke, (, outlineStroke, ), ;, g2, ., draw, (, polygon, ), ;, g2, ., setPaint, (, paint, ), ;]
[), ;, g2, ., draw, (, polygon, ), ;, g2, ., setPaint, (, paint, ), ;, }, g2, ., setPaint]
[;, g2, ., setPaint, (, paint, ), ;, }, g2, ., setPaint, (, Color, ., gray, ), ;, g2, .]
[., draw, (, polygon, ), ;, g2, ., setPaint, (, paint, ), ;, }, g2, ., setPaint, (, Color, .]
[), ;, g2, ., setPaint, (, paint, ), ;, }, g2, ., setPaint, (, Color, ., gray, ), ;, g2]
[;, }, g2, ., setPaint, (, Color, ., gray, ), ;, g2, ., fill, (, back, ), ;, g2, .]
[., setPaint, (, paint, ), ;, }, g2, ., setPaint, (, Color, ., gray, ), ;, g2, ., fill, (]
[), ;, }, g2, ., setPaint, (, Color, ., gray, ), ;, g2, ., fill, (, back, ), ;, g2]
[;, g2, ., fill, (, back, ), ;, g2, ., fill, (, front, ), ;, int, cat, =, 0, ;]
[., setPaint, (, Color, ., gray, ), ;, g2, ., fill, (, back, ), ;, g2, ., fill, (, front]
[), ;, g2, ., fill, (, back, ), ;, g2, ., fill, (, front, ), ;, int, cat, =, 0]
[., gray, ), ;, g2, ., fill, (, back, ), ;, g2, ., fill, (, front, ), ;, int, cat]
[;, g2, ., fill, (, front, ), ;, int, cat, =, 0, ;, iterator, =, arcList, ., iterator, (, )]
[., fill, (, back, ), ;, g2, ., fill, (, front, ), ;, int, cat, =, 0, ;, iterator, =]
[), ;, g2, ., fill, (, front, ), ;, int, cat, =, 0, ;, iterator, =, arcList, ., iterator, (]
[;, int, cat, =, 0, ;, iterator, =, arcList, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (]
[., fill, (, front, ), ;, int, cat, =, 0, ;, iterator, =, arcList, ., iterator, (, ), ;, while]
[), ;, int, cat, =, 0, ;, iterator, =, arcList, ., iterator, (, ), ;, while, (, iterator, ., hasNext]
[;, iterator, =, arcList, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, Arc2D, segment]
[=, arcList, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, Arc2D, segment, =, (]
[;, while, (, iterator, ., hasNext, (, ), ), {, Arc2D, segment, =, (, Arc2D, ), iterator, ., next, (]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, Arc2D, segment, =, (, Arc2D, )]
[), {, Arc2D, segment, =, (, Arc2D, ), iterator, ., next, (, ), ;, if, (, segment, !=, null, )]
[., hasNext, (, ), ), {, Arc2D, segment, =, (, Arc2D, ), iterator, ., next, (, ), ;, if, (]
[;, if, (, segment, !=, null, ), {, Comparable, key, =, getSectionKey, (, cat, ), ;, paint, =, lookupSectionPaint, (]
[;, if, (, segment, !=, null, ), {, Comparable, key, =, getSectionKey, (, cat, ), ;, paint, =, lookupSectionPaint, (]
[., next, (, ), ;, if, (, segment, !=, null, ), {, Comparable, key, =, getSectionKey, (, cat, ), ;]
[), {, Comparable, key, =, getSectionKey, (, cat, ), ;, paint, =, lookupSectionPaint, (, key, ,, false, ), ;, outlinePaint]
[!=, null, ), {, Comparable, key, =, getSectionKey, (, cat, ), ;, paint, =, lookupSectionPaint, (, key, ,, false, )]
[), {, Comparable, key, =, getSectionKey, (, cat, ), ;, paint, =, lookupSectionPaint, (, key, ,, false, ), ;, outlinePaint]
[;, paint, =, lookupSectionPaint, (, key, ,, false, ), ;, outlinePaint, =, lookupSectionOutlinePaint, (, key, ,, false, ), ;, outlineStroke]
[), ;, paint, =, lookupSectionPaint, (, key, ,, false, ), ;, outlinePaint, =, lookupSectionOutlinePaint, (, key, ,, false, ), ;]
[=, lookupSectionPaint, (, key, ,, false, ), ;, outlinePaint, =, lookupSectionOutlinePaint, (, key, ,, false, ), ;, outlineStroke, =, lookupSectionOutlineStroke]
[;, outlinePaint, =, lookupSectionOutlinePaint, (, key, ,, false, ), ;, outlineStroke, =, lookupSectionOutlineStroke, (, key, ,, false, ), ;, drawSide]
[,, false, ), ;, outlinePaint, =, lookupSectionOutlinePaint, (, key, ,, false, ), ;, outlineStroke, =, lookupSectionOutlineStroke, (, key, ,, false]
[), ;, outlinePaint, =, lookupSectionOutlinePaint, (, key, ,, false, ), ;, outlineStroke, =, lookupSectionOutlineStroke, (, key, ,, false, ), ;]
[=, lookupSectionOutlinePaint, (, key, ,, false, ), ;, outlineStroke, =, lookupSectionOutlineStroke, (, key, ,, false, ), ;, drawSide, (, g2]
[;, outlineStroke, =, lookupSectionOutlineStroke, (, key, ,, false, ), ;, drawSide, (, g2, ,, pieArea, ,, segment, ,, front, ,]
[,, false, ), ;, outlineStroke, =, lookupSectionOutlineStroke, (, key, ,, false, ), ;, drawSide, (, g2, ,, pieArea, ,, segment]
[), ;, outlineStroke, =, lookupSectionOutlineStroke, (, key, ,, false, ), ;, drawSide, (, g2, ,, pieArea, ,, segment, ,, front]
[=, lookupSectionOutlineStroke, (, key, ,, false, ), ;, drawSide, (, g2, ,, pieArea, ,, segment, ,, front, ,, back, ,]
[;, drawSide, (, g2, ,, pieArea, ,, segment, ,, front, ,, back, ,, paint, ,, outlinePaint, ,, outlineStroke, ,, false]
[,, false, ), ;, drawSide, (, g2, ,, pieArea, ,, segment, ,, front, ,, back, ,, paint, ,, outlinePaint, ,]
[), ;, drawSide, (, g2, ,, pieArea, ,, segment, ,, front, ,, back, ,, paint, ,, outlinePaint, ,, outlineStroke, ,]
[;, }, cat, ++, ;, }, cat, =, 0, ;, iterator, =, arcList, ., iterator, (, ), ;, while, (]
[,, pieArea, ,, segment, ,, front, ,, back, ,, paint, ,, outlinePaint, ,, outlineStroke, ,, false, ,, true, ), ;]
[,, segment, ,, front, ,, back, ,, paint, ,, outlinePaint, ,, outlineStroke, ,, false, ,, true, ), ;, }, cat]
[,, front, ,, back, ,, paint, ,, outlinePaint, ,, outlineStroke, ,, false, ,, true, ), ;, }, cat, ++, ;]
[,, back, ,, paint, ,, outlinePaint, ,, outlineStroke, ,, false, ,, true, ), ;, }, cat, ++, ;, }, cat]
[,, paint, ,, outlinePaint, ,, outlineStroke, ,, false, ,, true, ), ;, }, cat, ++, ;, }, cat, =, 0]
[,, outlinePaint, ,, outlineStroke, ,, false, ,, true, ), ;, }, cat, ++, ;, }, cat, =, 0, ;, iterator]
[,, outlineStroke, ,, false, ,, true, ), ;, }, cat, ++, ;, }, cat, =, 0, ;, iterator, =, arcList]
[,, false, ,, true, ), ;, }, cat, ++, ;, }, cat, =, 0, ;, iterator, =, arcList, ., iterator]
[,, true, ), ;, }, cat, ++, ;, }, cat, =, 0, ;, iterator, =, arcList, ., iterator, (, )]
[), ;, }, cat, ++, ;, }, cat, =, 0, ;, iterator, =, arcList, ., iterator, (, ), ;, while]
[;, }, cat, =, 0, ;, iterator, =, arcList, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (]
[++, ;, }, cat, =, 0, ;, iterator, =, arcList, ., iterator, (, ), ;, while, (, iterator, ., hasNext]
[=, 0, ;, iterator, =, arcList, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {]
[;, iterator, =, arcList, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, Arc2D, segment]
[=, arcList, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, Arc2D, segment, =, (]
[;, while, (, iterator, ., hasNext, (, ), ), {, Arc2D, segment, =, (, Arc2D, ), iterator, ., next, (]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, Arc2D, segment, =, (, Arc2D, )]
[), {, Arc2D, segment, =, (, Arc2D, ), iterator, ., next, (, ), ;, if, (, segment, !=, null, )]
[., hasNext, (, ), ), {, Arc2D, segment, =, (, Arc2D, ), iterator, ., next, (, ), ;, if, (]
[;, if, (, segment, !=, null, ), {, Comparable, key, =, getSectionKey, (, cat, ), ;, paint, =, lookupSectionPaint, (]
[;, if, (, segment, !=, null, ), {, Comparable, key, =, getSectionKey, (, cat, ), ;, paint, =, lookupSectionPaint, (]
[., next, (, ), ;, if, (, segment, !=, null, ), {, Comparable, key, =, getSectionKey, (, cat, ), ;]
[), {, Comparable, key, =, getSectionKey, (, cat, ), ;, paint, =, lookupSectionPaint, (, key, ,, false, ), ;, outlinePaint]
[!=, null, ), {, Comparable, key, =, getSectionKey, (, cat, ), ;, paint, =, lookupSectionPaint, (, key, ,, false, )]
[), {, Comparable, key, =, getSectionKey, (, cat, ), ;, paint, =, lookupSectionPaint, (, key, ,, false, ), ;, outlinePaint]
[;, paint, =, lookupSectionPaint, (, key, ,, false, ), ;, outlinePaint, =, lookupSectionOutlinePaint, (, key, ,, false, ), ;, outlineStroke]
[), ;, paint, =, lookupSectionPaint, (, key, ,, false, ), ;, outlinePaint, =, lookupSectionOutlinePaint, (, key, ,, false, ), ;]
[=, lookupSectionPaint, (, key, ,, false, ), ;, outlinePaint, =, lookupSectionOutlinePaint, (, key, ,, false, ), ;, outlineStroke, =, lookupSectionOutlineStroke]
[;, outlinePaint, =, lookupSectionOutlinePaint, (, key, ,, false, ), ;, outlineStroke, =, lookupSectionOutlineStroke, (, key, ,, false, ), ;, drawSide]
[,, false, ), ;, outlinePaint, =, lookupSectionOutlinePaint, (, key, ,, false, ), ;, outlineStroke, =, lookupSectionOutlineStroke, (, key, ,, false]
[), ;, outlinePaint, =, lookupSectionOutlinePaint, (, key, ,, false, ), ;, outlineStroke, =, lookupSectionOutlineStroke, (, key, ,, false, ), ;]
[=, lookupSectionOutlinePaint, (, key, ,, false, ), ;, outlineStroke, =, lookupSectionOutlineStroke, (, key, ,, false, ), ;, drawSide, (, g2]
[;, outlineStroke, =, lookupSectionOutlineStroke, (, key, ,, false, ), ;, drawSide, (, g2, ,, pieArea, ,, segment, ,, front, ,]
[,, false, ), ;, outlineStroke, =, lookupSectionOutlineStroke, (, key, ,, false, ), ;, drawSide, (, g2, ,, pieArea, ,, segment]
[), ;, outlineStroke, =, lookupSectionOutlineStroke, (, key, ,, false, ), ;, drawSide, (, g2, ,, pieArea, ,, segment, ,, front]
[=, lookupSectionOutlineStroke, (, key, ,, false, ), ;, drawSide, (, g2, ,, pieArea, ,, segment, ,, front, ,, back, ,]
[;, drawSide, (, g2, ,, pieArea, ,, segment, ,, front, ,, back, ,, paint, ,, outlinePaint, ,, outlineStroke, ,, true]
[,, false, ), ;, drawSide, (, g2, ,, pieArea, ,, segment, ,, front, ,, back, ,, paint, ,, outlinePaint, ,]
[), ;, drawSide, (, g2, ,, pieArea, ,, segment, ,, front, ,, back, ,, paint, ,, outlinePaint, ,, outlineStroke, ,]
[;, }, cat, ++, ;, }, g2, ., setClip, (, oldClip, ), ;, Arc2D, upperArc, ;, for, (, int, sectionIndex]
[,, pieArea, ,, segment, ,, front, ,, back, ,, paint, ,, outlinePaint, ,, outlineStroke, ,, true, ,, false, ), ;]
[,, segment, ,, front, ,, back, ,, paint, ,, outlinePaint, ,, outlineStroke, ,, true, ,, false, ), ;, }, cat]
[,, front, ,, back, ,, paint, ,, outlinePaint, ,, outlineStroke, ,, true, ,, false, ), ;, }, cat, ++, ;]
[,, back, ,, paint, ,, outlinePaint, ,, outlineStroke, ,, true, ,, false, ), ;, }, cat, ++, ;, }, g2]
[,, paint, ,, outlinePaint, ,, outlineStroke, ,, true, ,, false, ), ;, }, cat, ++, ;, }, g2, ., setClip]
[,, outlinePaint, ,, outlineStroke, ,, true, ,, false, ), ;, }, cat, ++, ;, }, g2, ., setClip, (, oldClip]
[,, outlineStroke, ,, true, ,, false, ), ;, }, cat, ++, ;, }, g2, ., setClip, (, oldClip, ), ;]
[,, true, ,, false, ), ;, }, cat, ++, ;, }, g2, ., setClip, (, oldClip, ), ;, Arc2D, upperArc]
[,, false, ), ;, }, cat, ++, ;, }, g2, ., setClip, (, oldClip, ), ;, Arc2D, upperArc, ;, for]
[), ;, }, cat, ++, ;, }, g2, ., setClip, (, oldClip, ), ;, Arc2D, upperArc, ;, for, (, int]
[;, }, g2, ., setClip, (, oldClip, ), ;, Arc2D, upperArc, ;, for, (, int, sectionIndex, =, 0, ;, sectionIndex]
[++, ;, }, g2, ., setClip, (, oldClip, ), ;, Arc2D, upperArc, ;, for, (, int, sectionIndex, =, 0, ;]
[;, Arc2D, upperArc, ;, for, (, int, sectionIndex, =, 0, ;, sectionIndex, <, categoryCount, ;, sectionIndex, ++, ), {, arc]
[., setClip, (, oldClip, ), ;, Arc2D, upperArc, ;, for, (, int, sectionIndex, =, 0, ;, sectionIndex, <, categoryCount, ;]
[), ;, Arc2D, upperArc, ;, for, (, int, sectionIndex, =, 0, ;, sectionIndex, <, categoryCount, ;, sectionIndex, ++, ), {]
[;, sectionIndex, <, categoryCount, ;, sectionIndex, ++, ), {, arc, =, (, Arc2D, ., Double, ), arcList, ., get, (]
[;, sectionIndex, ++, ), {, arc, =, (, Arc2D, ., Double, ), arcList, ., get, (, sectionIndex, ), ;, if]
[<, categoryCount, ;, sectionIndex, ++, ), {, arc, =, (, Arc2D, ., Double, ), arcList, ., get, (, sectionIndex, )]
[;, sectionIndex, ++, ), {, arc, =, (, Arc2D, ., Double, ), arcList, ., get, (, sectionIndex, ), ;, if]
[), {, arc, =, (, Arc2D, ., Double, ), arcList, ., get, (, sectionIndex, ), ;, if, (, arc, ==]
[++, ), {, arc, =, (, Arc2D, ., Double, ), arcList, ., get, (, sectionIndex, ), ;, if, (, arc]
[=, (, Arc2D, ., Double, ), arcList, ., get, (, sectionIndex, ), ;, if, (, arc, ==, null, ), {]
[;, if, (, arc, ==, null, ), {, continue, ;, }, upperArc, =, new, Arc2D, ., Double, (, arcX, ,]
[;, if, (, arc, ==, null, ), {, continue, ;, }, upperArc, =, new, Arc2D, ., Double, (, arcX, ,]
[., get, (, sectionIndex, ), ;, if, (, arc, ==, null, ), {, continue, ;, }, upperArc, =, new, Arc2D]
[), ;, if, (, arc, ==, null, ), {, continue, ;, }, upperArc, =, new, Arc2D, ., Double, (, arcX]
[), {, continue, ;, }, upperArc, =, new, Arc2D, ., Double, (, arcX, ,, arcY, ,, pieArea, ., getWidth, (]
[==, null, ), {, continue, ;, }, upperArc, =, new, Arc2D, ., Double, (, arcX, ,, arcY, ,, pieArea, .]
[), {, continue, ;, }, upperArc, =, new, Arc2D, ., Double, (, arcX, ,, arcY, ,, pieArea, ., getWidth, (]
[=, new, Arc2D, ., Double, (, arcX, ,, arcY, ,, pieArea, ., getWidth, (, ), ,, pieArea, ., getHeight, (]
[;, Comparable, currentKey, =, (, Comparable, ), sectionKeys, ., get, (, sectionIndex, ), ;, paint, =, lookupSectionPaint, (, currentKey, ,]
[,, arcY, ,, pieArea, ., getWidth, (, ), ,, pieArea, ., getHeight, (, ), -, depth, ,, arc, ., getAngleStart]
[,, pieArea, ., getWidth, (, ), ,, pieArea, ., getHeight, (, ), -, depth, ,, arc, ., getAngleStart, (, )]
[,, pieArea, ., getHeight, (, ), -, depth, ,, arc, ., getAngleStart, (, ), ,, arc, ., getAngleExtent, (, )]
[., getWidth, (, ), ,, pieArea, ., getHeight, (, ), -, depth, ,, arc, ., getAngleStart, (, ), ,, arc]
[,, arc, ., getAngleStart, (, ), ,, arc, ., getAngleExtent, (, ), ,, Arc2D, ., PIE, ), ;, Comparable, currentKey]
[-, depth, ,, arc, ., getAngleStart, (, ), ,, arc, ., getAngleExtent, (, ), ,, Arc2D, ., PIE, ), ;]
[., getHeight, (, ), -, depth, ,, arc, ., getAngleStart, (, ), ,, arc, ., getAngleExtent, (, ), ,, Arc2D]
[,, arc, ., getAngleStart, (, ), ,, arc, ., getAngleExtent, (, ), ,, Arc2D, ., PIE, ), ;, Comparable, currentKey]
[,, arc, ., getAngleExtent, (, ), ,, Arc2D, ., PIE, ), ;, Comparable, currentKey, =, (, Comparable, ), sectionKeys, .]
[., getAngleStart, (, ), ,, arc, ., getAngleExtent, (, ), ,, Arc2D, ., PIE, ), ;, Comparable, currentKey, =, (]
[,, Arc2D, ., PIE, ), ;, Comparable, currentKey, =, (, Comparable, ), sectionKeys, ., get, (, sectionIndex, ), ;, paint]
[., getAngleExtent, (, ), ,, Arc2D, ., PIE, ), ;, Comparable, currentKey, =, (, Comparable, ), sectionKeys, ., get, (]
[), ;, Comparable, currentKey, =, (, Comparable, ), sectionKeys, ., get, (, sectionIndex, ), ;, paint, =, lookupSectionPaint, (, currentKey]
[., PIE, ), ;, Comparable, currentKey, =, (, Comparable, ), sectionKeys, ., get, (, sectionIndex, ), ;, paint, =, lookupSectionPaint]
[;, paint, =, lookupSectionPaint, (, currentKey, ,, true, ), ;, outlinePaint, =, lookupSectionOutlinePaint, (, currentKey, ,, false, ), ;, outlineStroke]
[;, paint, =, lookupSectionPaint, (, currentKey, ,, true, ), ;, outlinePaint, =, lookupSectionOutlinePaint, (, currentKey, ,, false, ), ;, outlineStroke]
[., get, (, sectionIndex, ), ;, paint, =, lookupSectionPaint, (, currentKey, ,, true, ), ;, outlinePaint, =, lookupSectionOutlinePaint, (, currentKey]
[), ;, paint, =, lookupSectionPaint, (, currentKey, ,, true, ), ;, outlinePaint, =, lookupSectionOutlinePaint, (, currentKey, ,, false, ), ;]
[=, lookupSectionPaint, (, currentKey, ,, true, ), ;, outlinePaint, =, lookupSectionOutlinePaint, (, currentKey, ,, false, ), ;, outlineStroke, =, lookupSectionOutlineStroke]
[;, outlinePaint, =, lookupSectionOutlinePaint, (, currentKey, ,, false, ), ;, outlineStroke, =, lookupSectionOutlineStroke, (, currentKey, ,, false, ), ;, g2]
[,, true, ), ;, outlinePaint, =, lookupSectionOutlinePaint, (, currentKey, ,, false, ), ;, outlineStroke, =, lookupSectionOutlineStroke, (, currentKey, ,, false]
[), ;, outlinePaint, =, lookupSectionOutlinePaint, (, currentKey, ,, false, ), ;, outlineStroke, =, lookupSectionOutlineStroke, (, currentKey, ,, false, ), ;]
[=, lookupSectionOutlinePaint, (, currentKey, ,, false, ), ;, outlineStroke, =, lookupSectionOutlineStroke, (, currentKey, ,, false, ), ;, g2, ., setPaint]
[;, outlineStroke, =, lookupSectionOutlineStroke, (, currentKey, ,, false, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill]
[,, false, ), ;, outlineStroke, =, lookupSectionOutlineStroke, (, currentKey, ,, false, ), ;, g2, ., setPaint, (, paint, ), ;]
[), ;, outlineStroke, =, lookupSectionOutlineStroke, (, currentKey, ,, false, ), ;, g2, ., setPaint, (, paint, ), ;, g2, .]
[=, lookupSectionOutlineStroke, (, currentKey, ,, false, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, upperArc]
[;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, upperArc, ), ;, g2, ., setStroke, (, outlineStroke]
[,, false, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, upperArc, ), ;, g2, .]
[), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, upperArc, ), ;, g2, ., setStroke, (]
[;, g2, ., fill, (, upperArc, ), ;, g2, ., setStroke, (, outlineStroke, ), ;, g2, ., setPaint, (, outlinePaint]
[., setPaint, (, paint, ), ;, g2, ., fill, (, upperArc, ), ;, g2, ., setStroke, (, outlineStroke, ), ;]
[), ;, g2, ., fill, (, upperArc, ), ;, g2, ., setStroke, (, outlineStroke, ), ;, g2, ., setPaint, (]
[;, g2, ., setStroke, (, outlineStroke, ), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, upperArc]
[., fill, (, upperArc, ), ;, g2, ., setStroke, (, outlineStroke, ), ;, g2, ., setPaint, (, outlinePaint, ), ;]
[), ;, g2, ., setStroke, (, outlineStroke, ), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (]
[;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, upperArc, ), ;, if, (, info, !=, null]
[., setStroke, (, outlineStroke, ), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, upperArc, ), ;]
[), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, upperArc, ), ;, if, (, info, !=]
[;, g2, ., draw, (, upperArc, ), ;, if, (, info, !=, null, ), {, EntityCollection, entities, =, info, .]
[., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, upperArc, ), ;, if, (, info, !=, null, ), {]
[), ;, g2, ., draw, (, upperArc, ), ;, if, (, info, !=, null, ), {, EntityCollection, entities, =, info]
[;, if, (, info, !=, null, ), {, EntityCollection, entities, =, info, ., getOwner, (, ), ., getEntityCollection, (, )]
[., draw, (, upperArc, ), ;, if, (, info, !=, null, ), {, EntityCollection, entities, =, info, ., getOwner, (]
[), ;, if, (, info, !=, null, ), {, EntityCollection, entities, =, info, ., getOwner, (, ), ., getEntityCollection, (]
[), {, EntityCollection, entities, =, info, ., getOwner, (, ), ., getEntityCollection, (, ), ;, if, (, entities, !=, null]
[!=, null, ), {, EntityCollection, entities, =, info, ., getOwner, (, ), ., getEntityCollection, (, ), ;, if, (, entities]
[), {, EntityCollection, entities, =, info, ., getOwner, (, ), ., getEntityCollection, (, ), ;, if, (, entities, !=, null]
[;, if, (, entities, !=, null, ), {, String, tip, =, null, ;, PieToolTipGenerator, tipster, =, getToolTipGenerator, (, ), ;]
[., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, String, tip, =, null, ;, PieToolTipGenerator, tipster, =]
[., getOwner, (, ), ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, String, tip, =, null]
[), {, String, tip, =, null, ;, PieToolTipGenerator, tipster, =, getToolTipGenerator, (, ), ;, if, (, tipster, !=, null, )]
[!=, null, ), {, String, tip, =, null, ;, PieToolTipGenerator, tipster, =, getToolTipGenerator, (, ), ;, if, (, tipster, !=]
[), {, String, tip, =, null, ;, PieToolTipGenerator, tipster, =, getToolTipGenerator, (, ), ;, if, (, tipster, !=, null, )]
[;, PieToolTipGenerator, tipster, =, getToolTipGenerator, (, ), ;, if, (, tipster, !=, null, ), {, tip, =, tipster, ., generateToolTip]
[;, if, (, tipster, !=, null, ), {, tip, =, tipster, ., generateToolTip, (, dataset, ,, currentKey, ), ;, }]
[), {, tip, =, tipster, ., generateToolTip, (, dataset, ,, currentKey, ), ;, }, String, url, =, null, ;, if]
[!=, null, ), {, tip, =, tipster, ., generateToolTip, (, dataset, ,, currentKey, ), ;, }, String, url, =, null]
[), {, tip, =, tipster, ., generateToolTip, (, dataset, ,, currentKey, ), ;, }, String, url, =, null, ;, if]
[=, tipster, ., generateToolTip, (, dataset, ,, currentKey, ), ;, }, String, url, =, null, ;, if, (, getURLGenerator, (]
[;, }, String, url, =, null, ;, if, (, getURLGenerator, (, ), !=, null, ), {, url, =, getURLGenerator, (]
[., generateToolTip, (, dataset, ,, currentKey, ), ;, }, String, url, =, null, ;, if, (, getURLGenerator, (, ), !=]
[,, currentKey, ), ;, }, String, url, =, null, ;, if, (, getURLGenerator, (, ), !=, null, ), {, url]
[), ;, }, String, url, =, null, ;, if, (, getURLGenerator, (, ), !=, null, ), {, url, =, getURLGenerator]
[;, if, (, getURLGenerator, (, ), !=, null, ), {, url, =, getURLGenerator, (, ), ., generateURL, (, dataset, ,]
[), {, url, =, getURLGenerator, (, ), ., generateURL, (, dataset, ,, currentKey, ,, getPieIndex, (, ), ), ;, }]
[!=, null, ), {, url, =, getURLGenerator, (, ), ., generateURL, (, dataset, ,, currentKey, ,, getPieIndex, (, ), )]
[), {, url, =, getURLGenerator, (, ), ., generateURL, (, dataset, ,, currentKey, ,, getPieIndex, (, ), ), ;, }]
[=, getURLGenerator, (, ), ., generateURL, (, dataset, ,, currentKey, ,, getPieIndex, (, ), ), ;, }, PieSectionEntity, entity, =]
[;, }, PieSectionEntity, entity, =, new, PieSectionEntity, (, upperArc, ,, dataset, ,, getPieIndex, (, ), ,, sectionIndex, ,, currentKey, ,]
[., generateURL, (, dataset, ,, currentKey, ,, getPieIndex, (, ), ), ;, }, PieSectionEntity, entity, =, new, PieSectionEntity, (, upperArc]
[,, currentKey, ,, getPieIndex, (, ), ), ;, }, PieSectionEntity, entity, =, new, PieSectionEntity, (, upperArc, ,, dataset, ,, getPieIndex]
[,, getPieIndex, (, ), ), ;, }, PieSectionEntity, entity, =, new, PieSectionEntity, (, upperArc, ,, dataset, ,, getPieIndex, (, )]
[), ;, }, PieSectionEntity, entity, =, new, PieSectionEntity, (, upperArc, ,, dataset, ,, getPieIndex, (, ), ,, sectionIndex, ,, currentKey]
[;, entities, ., add, (, entity, ), ;, }, }, }, List, keys, =, dataset, ., getKeys, (, ), ;]
[,, dataset, ,, getPieIndex, (, ), ,, sectionIndex, ,, currentKey, ,, tip, ,, url, ), ;, entities, ., add, (]
[,, getPieIndex, (, ), ,, sectionIndex, ,, currentKey, ,, tip, ,, url, ), ;, entities, ., add, (, entity, )]
[,, sectionIndex, ,, currentKey, ,, tip, ,, url, ), ;, entities, ., add, (, entity, ), ;, }, }, }]
[,, currentKey, ,, tip, ,, url, ), ;, entities, ., add, (, entity, ), ;, }, }, }, List, keys]
[,, tip, ,, url, ), ;, entities, ., add, (, entity, ), ;, }, }, }, List, keys, =, dataset]
[,, url, ), ;, entities, ., add, (, entity, ), ;, }, }, }, List, keys, =, dataset, ., getKeys]
[), ;, entities, ., add, (, entity, ), ;, }, }, }, List, keys, =, dataset, ., getKeys, (, )]
[;, }, }, }, List, keys, =, dataset, ., getKeys, (, ), ;, Rectangle2D, adjustedPlotArea, =, new, Rectangle2D, ., Double]
[., add, (, entity, ), ;, }, }, }, List, keys, =, dataset, ., getKeys, (, ), ;, Rectangle2D, adjustedPlotArea]
[), ;, }, }, }, List, keys, =, dataset, ., getKeys, (, ), ;, Rectangle2D, adjustedPlotArea, =, new, Rectangle2D, .]
[;, Rectangle2D, adjustedPlotArea, =, new, Rectangle2D, ., Double, (, originalPlotArea, ., getX, (, ), ,, originalPlotArea, ., getY, (, )]
[., getKeys, (, ), ;, Rectangle2D, adjustedPlotArea, =, new, Rectangle2D, ., Double, (, originalPlotArea, ., getX, (, ), ,, originalPlotArea]
[;, if, (, getSimpleLabels, (, ), ), {, drawSimpleLabels, (, g2, ,, keys, ,, totalValue, ,, adjustedPlotArea, ,, linkArea, ,]
[,, originalPlotArea, ., getY, (, ), ,, originalPlotArea, ., getWidth, (, ), ,, originalPlotArea, ., getHeight, (, ), -, depth]
[., getX, (, ), ,, originalPlotArea, ., getY, (, ), ,, originalPlotArea, ., getWidth, (, ), ,, originalPlotArea, ., getHeight]
[,, originalPlotArea, ., getWidth, (, ), ,, originalPlotArea, ., getHeight, (, ), -, depth, ), ;, if, (, getSimpleLabels, (]
[., getY, (, ), ,, originalPlotArea, ., getWidth, (, ), ,, originalPlotArea, ., getHeight, (, ), -, depth, ), ;]
[,, originalPlotArea, ., getHeight, (, ), -, depth, ), ;, if, (, getSimpleLabels, (, ), ), {, drawSimpleLabels, (, g2]
[., getWidth, (, ), ,, originalPlotArea, ., getHeight, (, ), -, depth, ), ;, if, (, getSimpleLabels, (, ), )]
[), ;, if, (, getSimpleLabels, (, ), ), {, drawSimpleLabels, (, g2, ,, keys, ,, totalValue, ,, adjustedPlotArea, ,, linkArea]
[-, depth, ), ;, if, (, getSimpleLabels, (, ), ), {, drawSimpleLabels, (, g2, ,, keys, ,, totalValue, ,, adjustedPlotArea]
[., getHeight, (, ), -, depth, ), ;, if, (, getSimpleLabels, (, ), ), {, drawSimpleLabels, (, g2, ,, keys]
[), ;, if, (, getSimpleLabels, (, ), ), {, drawSimpleLabels, (, g2, ,, keys, ,, totalValue, ,, adjustedPlotArea, ,, linkArea]
[), {, drawSimpleLabels, (, g2, ,, keys, ,, totalValue, ,, adjustedPlotArea, ,, linkArea, ,, state, ), ;, }, else, {]
[;, }, else, {, drawLabels, (, g2, ,, keys, ,, totalValue, ,, adjustedPlotArea, ,, linkArea, ,, state, ), ;, }]
[,, keys, ,, totalValue, ,, adjustedPlotArea, ,, linkArea, ,, state, ), ;, }, else, {, drawLabels, (, g2, ,, keys]
[,, totalValue, ,, adjustedPlotArea, ,, linkArea, ,, state, ), ;, }, else, {, drawLabels, (, g2, ,, keys, ,, totalValue]
[,, adjustedPlotArea, ,, linkArea, ,, state, ), ;, }, else, {, drawLabels, (, g2, ,, keys, ,, totalValue, ,, adjustedPlotArea]
[,, linkArea, ,, state, ), ;, }, else, {, drawLabels, (, g2, ,, keys, ,, totalValue, ,, adjustedPlotArea, ,, linkArea]
[,, state, ), ;, }, else, {, drawLabels, (, g2, ,, keys, ,, totalValue, ,, adjustedPlotArea, ,, linkArea, ,, state]
[), ;, }, else, {, drawLabels, (, g2, ,, keys, ,, totalValue, ,, adjustedPlotArea, ,, linkArea, ,, state, ), ;]
[;, }, g2, ., setClip, (, savedClip, ), ;, g2, ., setComposite, (, originalComposite, ), ;, drawOutline, (, g2, ,]
[,, keys, ,, totalValue, ,, adjustedPlotArea, ,, linkArea, ,, state, ), ;, }, g2, ., setClip, (, savedClip, ), ;]
[,, totalValue, ,, adjustedPlotArea, ,, linkArea, ,, state, ), ;, }, g2, ., setClip, (, savedClip, ), ;, g2, .]
[,, adjustedPlotArea, ,, linkArea, ,, state, ), ;, }, g2, ., setClip, (, savedClip, ), ;, g2, ., setComposite, (]
[,, linkArea, ,, state, ), ;, }, g2, ., setClip, (, savedClip, ), ;, g2, ., setComposite, (, originalComposite, )]
[,, state, ), ;, }, g2, ., setClip, (, savedClip, ), ;, g2, ., setComposite, (, originalComposite, ), ;, drawOutline]
[), ;, }, g2, ., setClip, (, savedClip, ), ;, g2, ., setComposite, (, originalComposite, ), ;, drawOutline, (, g2]
[;, g2, ., setComposite, (, originalComposite, ), ;, drawOutline, (, g2, ,, originalPlotArea, ), ;, }, protected, void, drawSide, (]
[., setClip, (, savedClip, ), ;, g2, ., setComposite, (, originalComposite, ), ;, drawOutline, (, g2, ,, originalPlotArea, ), ;]
[), ;, g2, ., setComposite, (, originalComposite, ), ;, drawOutline, (, g2, ,, originalPlotArea, ), ;, }, protected, void, drawSide]
[;, drawOutline, (, g2, ,, originalPlotArea, ), ;, }, protected, void, drawSide, (, Graphics2D, g2, ,, Rectangle2D, plotArea, ,, Arc2D]
[., setComposite, (, originalComposite, ), ;, drawOutline, (, g2, ,, originalPlotArea, ), ;, }, protected, void, drawSide, (, Graphics2D, g2]
[), ;, drawOutline, (, g2, ,, originalPlotArea, ), ;, }, protected, void, drawSide, (, Graphics2D, g2, ,, Rectangle2D, plotArea, ,]
[;, }, protected, void, drawSide, (, Graphics2D, g2, ,, Rectangle2D, plotArea, ,, Arc2D, arc, ,, Area, front, ,, Area, back]
[,, originalPlotArea, ), ;, }, protected, void, drawSide, (, Graphics2D, g2, ,, Rectangle2D, plotArea, ,, Arc2D, arc, ,, Area, front]
[), ;, }, protected, void, drawSide, (, Graphics2D, g2, ,, Rectangle2D, plotArea, ,, Arc2D, arc, ,, Area, front, ,, Area]
[), {, if, (, paint, instanceof, Color, ), {, Color, c, =, (, Color, ), paint, ;, c, =, c]
[), {, Color, c, =, (, Color, ), paint, ;, c, =, c, ., darker, (, ), ;, paint, =]
[instanceof, Color, ), {, Color, c, =, (, Color, ), paint, ;, c, =, c, ., darker, (, ), ;]
[;, c, =, c, ., darker, (, ), ;, paint, =, c, ;, }, }, double, start, =, arc, .]
[;, c, =, c, ., darker, (, ), ;, paint, =, c, ;, }, }, double, start, =, arc, .]
[=, c, ., darker, (, ), ;, paint, =, c, ;, }, }, double, start, =, arc, ., getAngleStart, (]
[;, paint, =, c, ;, }, }, double, start, =, arc, ., getAngleStart, (, ), ;, double, extent, =, arc]
[., darker, (, ), ;, paint, =, c, ;, }, }, double, start, =, arc, ., getAngleStart, (, ), ;]
[=, c, ;, }, }, double, start, =, arc, ., getAngleStart, (, ), ;, double, extent, =, arc, ., getAngleExtent]
[;, }, }, double, start, =, arc, ., getAngleStart, (, ), ;, double, extent, =, arc, ., getAngleExtent, (, )]
[;, double, extent, =, arc, ., getAngleExtent, (, ), ;, double, end, =, start, +, extent, ;, g2, ., setStroke]
[., getAngleStart, (, ), ;, double, extent, =, arc, ., getAngleExtent, (, ), ;, double, end, =, start, +, extent]
[;, double, end, =, start, +, extent, ;, g2, ., setStroke, (, outlineStroke, ), ;, if, (, extent, <, 0.0]
[., getAngleExtent, (, ), ;, double, end, =, start, +, extent, ;, g2, ., setStroke, (, outlineStroke, ), ;, if]
[;, g2, ., setStroke, (, outlineStroke, ), ;, if, (, extent, <, 0.0, ), {, if, (, isAngleAtFront, (, start]
[+, extent, ;, g2, ., setStroke, (, outlineStroke, ), ;, if, (, extent, <, 0.0, ), {, if, (, isAngleAtFront]
[;, g2, ., setStroke, (, outlineStroke, ), ;, if, (, extent, <, 0.0, ), {, if, (, isAngleAtFront, (, start]
[;, if, (, extent, <, 0.0, ), {, if, (, isAngleAtFront, (, start, ), ), {, if, (, !, isAngleAtBack]
[., setStroke, (, outlineStroke, ), ;, if, (, extent, <, 0.0, ), {, if, (, isAngleAtFront, (, start, ), )]
[), ;, if, (, extent, <, 0.0, ), {, if, (, isAngleAtFront, (, start, ), ), {, if, (, !]
[), {, if, (, isAngleAtFront, (, start, ), ), {, if, (, !, isAngleAtBack, (, end, ), ), {, if]
[<, 0.0, ), {, if, (, isAngleAtFront, (, start, ), ), {, if, (, !, isAngleAtBack, (, end, ), )]
[), {, if, (, isAngleAtFront, (, start, ), ), {, if, (, !, isAngleAtBack, (, end, ), ), {, if]
[), {, if, (, !, isAngleAtBack, (, end, ), ), {, if, (, extent, >, -, 180.0, ), {, if]
[), ), {, if, (, !, isAngleAtBack, (, end, ), ), {, if, (, extent, >, -, 180.0, ), {]
[), {, if, (, extent, >, -, 180.0, ), {, if, (, drawFront, ), {, Area, side, =, new, Area]
[), {, if, (, extent, >, -, 180.0, ), {, if, (, drawFront, ), {, Area, side, =, new, Area]
[), ), {, if, (, extent, >, -, 180.0, ), {, if, (, drawFront, ), {, Area, side, =, new]
[), {, if, (, drawFront, ), {, Area, side, =, new, Area, (, new, Rectangle2D, ., Double, (, arc, .]
[>, -, 180.0, ), {, if, (, drawFront, ), {, Area, side, =, new, Area, (, new, Rectangle2D, ., Double]
[), {, if, (, drawFront, ), {, Area, side, =, new, Area, (, new, Rectangle2D, ., Double, (, arc, .]
[), {, if, (, drawFront, ), {, Area, side, =, new, Area, (, new, Rectangle2D, ., Double, (, arc, .]
[), {, Area, side, =, new, Area, (, new, Rectangle2D, ., Double, (, arc, ., getEndPoint, (, ), ., getX]
[;, side, ., intersect, (, front, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side]
[), ;, side, ., intersect, (, front, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (]
[,, plotArea, ., getY, (, ), ,, arc, ., getStartPoint, (, ), ., getX, (, ), -, arc, ., getEndPoint]
[., getX, (, ), ,, plotArea, ., getY, (, ), ,, arc, ., getStartPoint, (, ), ., getX, (, )]
[., getEndPoint, (, ), ., getX, (, ), ,, plotArea, ., getY, (, ), ,, arc, ., getStartPoint, (, )]
[,, arc, ., getStartPoint, (, ), ., getX, (, ), -, arc, ., getEndPoint, (, ), ., getX, (, )]
[., getY, (, ), ,, arc, ., getStartPoint, (, ), ., getX, (, ), -, arc, ., getEndPoint, (, )]
[,, plotArea, ., getHeight, (, ), ), ), ;, side, ., intersect, (, front, ), ;, g2, ., setPaint, (]
[-, arc, ., getEndPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side]
[., getX, (, ), -, arc, ., getEndPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight, (, )]
[., getStartPoint, (, ), ., getX, (, ), -, arc, ., getEndPoint, (, ), ., getX, (, ), ,, plotArea]
[,, plotArea, ., getHeight, (, ), ), ), ;, side, ., intersect, (, front, ), ;, g2, ., setPaint, (]
[., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side, ., intersect, (, front, ), ;]
[., getEndPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side, ., intersect]
[), ), ;, side, ., intersect, (, front, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill]
[., getHeight, (, ), ), ), ;, side, ., intersect, (, front, ), ;, g2, ., setPaint, (, paint, )]
[;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side, ), ;, g2, ., setPaint, (, outlinePaint]
[., intersect, (, front, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side, ), ;]
[), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side, ), ;, g2, ., setPaint, (]
[;, g2, ., fill, (, side, ), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side]
[., setPaint, (, paint, ), ;, g2, ., fill, (, side, ), ;, g2, ., setPaint, (, outlinePaint, ), ;]
[), ;, g2, ., fill, (, side, ), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (]
[;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side, ), ;, }, }, else, {, Area]
[., fill, (, side, ), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side, ), ;]
[), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side, ), ;, }, }, else, {]
[;, g2, ., draw, (, side, ), ;, }, }, else, {, Area, side1, =, new, Area, (, new, Rectangle2D]
[., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side, ), ;, }, }, else, {, Area, side1, =]
[), ;, g2, ., draw, (, side, ), ;, }, }, else, {, Area, side1, =, new, Area, (, new]
[;, }, }, else, {, Area, side1, =, new, Area, (, new, Rectangle2D, ., Double, (, plotArea, ., getX, (]
[., draw, (, side, ), ;, }, }, else, {, Area, side1, =, new, Area, (, new, Rectangle2D, ., Double]
[), ;, }, }, else, {, Area, side1, =, new, Area, (, new, Rectangle2D, ., Double, (, plotArea, ., getX]
[;, side1, ., intersect, (, front, ), ;, Area, side2, =, new, Area, (, new, Rectangle2D, ., Double, (, arc]
[), ;, side1, ., intersect, (, front, ), ;, Area, side2, =, new, Area, (, new, Rectangle2D, ., Double, (]
[,, plotArea, ., getY, (, ), ,, arc, ., getStartPoint, (, ), ., getX, (, ), -, plotArea, ., getX]
[., getX, (, ), ,, plotArea, ., getY, (, ), ,, arc, ., getStartPoint, (, ), ., getX, (, )]
[,, arc, ., getStartPoint, (, ), ., getX, (, ), -, plotArea, ., getX, (, ), ,, plotArea, ., getHeight]
[., getY, (, ), ,, arc, ., getStartPoint, (, ), ., getX, (, ), -, plotArea, ., getX, (, )]
[,, plotArea, ., getHeight, (, ), ), ), ;, side1, ., intersect, (, front, ), ;, Area, side2, =, new]
[-, plotArea, ., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side1, ., intersect, (, front]
[., getX, (, ), -, plotArea, ., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side1]
[., getStartPoint, (, ), ., getX, (, ), -, plotArea, ., getX, (, ), ,, plotArea, ., getHeight, (, )]
[,, plotArea, ., getHeight, (, ), ), ), ;, side1, ., intersect, (, front, ), ;, Area, side2, =, new]
[., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side1, ., intersect, (, front, ), ;]
[), ), ;, side1, ., intersect, (, front, ), ;, Area, side2, =, new, Area, (, new, Rectangle2D, ., Double]
[., getHeight, (, ), ), ), ;, side1, ., intersect, (, front, ), ;, Area, side2, =, new, Area, (]
[;, Area, side2, =, new, Area, (, new, Rectangle2D, ., Double, (, arc, ., getEndPoint, (, ), ., getX, (]
[., intersect, (, front, ), ;, Area, side2, =, new, Area, (, new, Rectangle2D, ., Double, (, arc, ., getEndPoint]
[), ;, Area, side2, =, new, Area, (, new, Rectangle2D, ., Double, (, arc, ., getEndPoint, (, ), ., getX]
[;, side2, ., intersect, (, front, ), ;, g2, ., setPaint, (, paint, ), ;, if, (, drawFront, ), {]
[), ;, side2, ., intersect, (, front, ), ;, g2, ., setPaint, (, paint, ), ;, if, (, drawFront, )]
[,, plotArea, ., getY, (, ), ,, plotArea, ., getMaxX, (, ), -, arc, ., getEndPoint, (, ), ., getX]
[., getX, (, ), ,, plotArea, ., getY, (, ), ,, plotArea, ., getMaxX, (, ), -, arc, ., getEndPoint]
[., getEndPoint, (, ), ., getX, (, ), ,, plotArea, ., getY, (, ), ,, plotArea, ., getMaxX, (, )]
[,, plotArea, ., getMaxX, (, ), -, arc, ., getEndPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight]
[., getY, (, ), ,, plotArea, ., getMaxX, (, ), -, arc, ., getEndPoint, (, ), ., getX, (, )]
[,, plotArea, ., getHeight, (, ), ), ), ;, side2, ., intersect, (, front, ), ;, g2, ., setPaint, (]
[-, arc, ., getEndPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side2]
[., getMaxX, (, ), -, arc, ., getEndPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight, (, )]
[,, plotArea, ., getHeight, (, ), ), ), ;, side2, ., intersect, (, front, ), ;, g2, ., setPaint, (]
[., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side2, ., intersect, (, front, ), ;]
[., getEndPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side2, ., intersect]
[), ), ;, side2, ., intersect, (, front, ), ;, g2, ., setPaint, (, paint, ), ;, if, (, drawFront]
[., getHeight, (, ), ), ), ;, side2, ., intersect, (, front, ), ;, g2, ., setPaint, (, paint, )]
[;, g2, ., setPaint, (, paint, ), ;, if, (, drawFront, ), {, g2, ., fill, (, side1, ), ;]
[., intersect, (, front, ), ;, g2, ., setPaint, (, paint, ), ;, if, (, drawFront, ), {, g2, .]
[), ;, g2, ., setPaint, (, paint, ), ;, if, (, drawFront, ), {, g2, ., fill, (, side1, )]
[;, if, (, drawFront, ), {, g2, ., fill, (, side1, ), ;, g2, ., fill, (, side2, ), ;]
[., setPaint, (, paint, ), ;, if, (, drawFront, ), {, g2, ., fill, (, side1, ), ;, g2, .]
[), ;, if, (, drawFront, ), {, g2, ., fill, (, side1, ), ;, g2, ., fill, (, side2, )]
[), {, g2, ., fill, (, side1, ), ;, g2, ., fill, (, side2, ), ;, }, if, (, drawBack]
[;, g2, ., fill, (, side2, ), ;, }, if, (, drawBack, ), {, g2, ., fill, (, back, )]
[., fill, (, side1, ), ;, g2, ., fill, (, side2, ), ;, }, if, (, drawBack, ), {, g2]
[), ;, g2, ., fill, (, side2, ), ;, }, if, (, drawBack, ), {, g2, ., fill, (, back]
[;, }, if, (, drawBack, ), {, g2, ., fill, (, back, ), ;, }, g2, ., setPaint, (, outlinePaint]
[., fill, (, side2, ), ;, }, if, (, drawBack, ), {, g2, ., fill, (, back, ), ;, }]
[), ;, }, if, (, drawBack, ), {, g2, ., fill, (, back, ), ;, }, g2, ., setPaint, (]
[), {, g2, ., fill, (, back, ), ;, }, g2, ., setPaint, (, outlinePaint, ), ;, if, (, drawFront]
[;, }, g2, ., setPaint, (, outlinePaint, ), ;, if, (, drawFront, ), {, g2, ., draw, (, side1, )]
[., fill, (, back, ), ;, }, g2, ., setPaint, (, outlinePaint, ), ;, if, (, drawFront, ), {, g2]
[), ;, }, g2, ., setPaint, (, outlinePaint, ), ;, if, (, drawFront, ), {, g2, ., draw, (, side1]
[;, if, (, drawFront, ), {, g2, ., draw, (, side1, ), ;, g2, ., draw, (, side2, ), ;]
[., setPaint, (, outlinePaint, ), ;, if, (, drawFront, ), {, g2, ., draw, (, side1, ), ;, g2, .]
[), ;, if, (, drawFront, ), {, g2, ., draw, (, side1, ), ;, g2, ., draw, (, side2, )]
[), {, g2, ., draw, (, side1, ), ;, g2, ., draw, (, side2, ), ;, }, if, (, drawBack]
[;, g2, ., draw, (, side2, ), ;, }, if, (, drawBack, ), {, g2, ., draw, (, back, )]
[., draw, (, side1, ), ;, g2, ., draw, (, side2, ), ;, }, if, (, drawBack, ), {, g2]
[), ;, g2, ., draw, (, side2, ), ;, }, if, (, drawBack, ), {, g2, ., draw, (, back]
[;, }, if, (, drawBack, ), {, g2, ., draw, (, back, ), ;, }, }, }, else, {, if]
[., draw, (, side2, ), ;, }, if, (, drawBack, ), {, g2, ., draw, (, back, ), ;, }]
[), ;, }, if, (, drawBack, ), {, g2, ., draw, (, back, ), ;, }, }, }, else, {]
[), {, g2, ., draw, (, back, ), ;, }, }, }, else, {, if, (, drawBack, ), {, Area]
[;, }, }, }, else, {, if, (, drawBack, ), {, Area, side2, =, new, Area, (, new, Rectangle2D, .]
[., draw, (, back, ), ;, }, }, }, else, {, if, (, drawBack, ), {, Area, side2, =, new]
[), ;, }, }, }, else, {, if, (, drawBack, ), {, Area, side2, =, new, Area, (, new, Rectangle2D]
[), {, Area, side2, =, new, Area, (, new, Rectangle2D, ., Double, (, plotArea, ., getX, (, ), ,, plotArea]
[;, side2, ., intersect, (, back, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side2]
[), ;, side2, ., intersect, (, back, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (]
[,, plotArea, ., getY, (, ), ,, arc, ., getEndPoint, (, ), ., getX, (, ), -, plotArea, ., getX]
[., getX, (, ), ,, plotArea, ., getY, (, ), ,, arc, ., getEndPoint, (, ), ., getX, (, )]
[,, arc, ., getEndPoint, (, ), ., getX, (, ), -, plotArea, ., getX, (, ), ,, plotArea, ., getHeight]
[., getY, (, ), ,, arc, ., getEndPoint, (, ), ., getX, (, ), -, plotArea, ., getX, (, )]
[,, plotArea, ., getHeight, (, ), ), ), ;, side2, ., intersect, (, back, ), ;, g2, ., setPaint, (]
[-, plotArea, ., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side2, ., intersect, (, back]
[., getX, (, ), -, plotArea, ., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side2]
[., getEndPoint, (, ), ., getX, (, ), -, plotArea, ., getX, (, ), ,, plotArea, ., getHeight, (, )]
[,, plotArea, ., getHeight, (, ), ), ), ;, side2, ., intersect, (, back, ), ;, g2, ., setPaint, (]
[., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side2, ., intersect, (, back, ), ;]
[), ), ;, side2, ., intersect, (, back, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill]
[., getHeight, (, ), ), ), ;, side2, ., intersect, (, back, ), ;, g2, ., setPaint, (, paint, )]
[;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side2, ), ;, g2, ., setPaint, (, outlinePaint]
[., intersect, (, back, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side2, ), ;]
[), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side2, ), ;, g2, ., setPaint, (]
[;, g2, ., fill, (, side2, ), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side2]
[., setPaint, (, paint, ), ;, g2, ., fill, (, side2, ), ;, g2, ., setPaint, (, outlinePaint, ), ;]
[), ;, g2, ., fill, (, side2, ), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (]
[;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side2, ), ;, }, if, (, drawFront, )]
[., fill, (, side2, ), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side2, ), ;]
[), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side2, ), ;, }, if, (, drawFront]
[;, g2, ., draw, (, side2, ), ;, }, if, (, drawFront, ), {, Area, side1, =, new, Area, (]
[., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side2, ), ;, }, if, (, drawFront, ), {, Area]
[), ;, g2, ., draw, (, side2, ), ;, }, if, (, drawFront, ), {, Area, side1, =, new, Area]
[;, }, if, (, drawFront, ), {, Area, side1, =, new, Area, (, new, Rectangle2D, ., Double, (, plotArea, .]
[., draw, (, side2, ), ;, }, if, (, drawFront, ), {, Area, side1, =, new, Area, (, new, Rectangle2D]
[), ;, }, if, (, drawFront, ), {, Area, side1, =, new, Area, (, new, Rectangle2D, ., Double, (, plotArea]
[), {, Area, side1, =, new, Area, (, new, Rectangle2D, ., Double, (, plotArea, ., getX, (, ), ,, plotArea]
[;, side1, ., intersect, (, front, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side1]
[), ;, side1, ., intersect, (, front, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (]
[,, plotArea, ., getY, (, ), ,, arc, ., getStartPoint, (, ), ., getX, (, ), -, plotArea, ., getX]
[., getX, (, ), ,, plotArea, ., getY, (, ), ,, arc, ., getStartPoint, (, ), ., getX, (, )]
[,, arc, ., getStartPoint, (, ), ., getX, (, ), -, plotArea, ., getX, (, ), ,, plotArea, ., getHeight]
[., getY, (, ), ,, arc, ., getStartPoint, (, ), ., getX, (, ), -, plotArea, ., getX, (, )]
[,, plotArea, ., getHeight, (, ), ), ), ;, side1, ., intersect, (, front, ), ;, g2, ., setPaint, (]
[-, plotArea, ., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side1, ., intersect, (, front]
[., getX, (, ), -, plotArea, ., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side1]
[., getStartPoint, (, ), ., getX, (, ), -, plotArea, ., getX, (, ), ,, plotArea, ., getHeight, (, )]
[,, plotArea, ., getHeight, (, ), ), ), ;, side1, ., intersect, (, front, ), ;, g2, ., setPaint, (]
[., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side1, ., intersect, (, front, ), ;]
[), ), ;, side1, ., intersect, (, front, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill]
[., getHeight, (, ), ), ), ;, side1, ., intersect, (, front, ), ;, g2, ., setPaint, (, paint, )]
[;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side1, ), ;, g2, ., setPaint, (, outlinePaint]
[., intersect, (, front, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side1, ), ;]
[), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side1, ), ;, g2, ., setPaint, (]
[;, g2, ., fill, (, side1, ), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side1]
[., setPaint, (, paint, ), ;, g2, ., fill, (, side1, ), ;, g2, ., setPaint, (, outlinePaint, ), ;]
[), ;, g2, ., fill, (, side1, ), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (]
[;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side1, ), ;, }, }, }, else, {]
[., fill, (, side1, ), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side1, ), ;]
[), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side1, ), ;, }, }, }, else]
[;, g2, ., draw, (, side1, ), ;, }, }, }, else, {, if, (, !, isAngleAtFront, (, end, )]
[., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side1, ), ;, }, }, }, else, {, if, (]
[), ;, g2, ., draw, (, side1, ), ;, }, }, }, else, {, if, (, !, isAngleAtFront, (, end]
[;, }, }, }, else, {, if, (, !, isAngleAtFront, (, end, ), ), {, if, (, extent, >, -]
[., draw, (, side1, ), ;, }, }, }, else, {, if, (, !, isAngleAtFront, (, end, ), ), {]
[), ;, }, }, }, else, {, if, (, !, isAngleAtFront, (, end, ), ), {, if, (, extent, >]
[), {, if, (, extent, >, -, 180.0, ), {, if, (, drawBack, ), {, Area, side, =, new, Area]
[), {, if, (, extent, >, -, 180.0, ), {, if, (, drawBack, ), {, Area, side, =, new, Area]
[), ), {, if, (, extent, >, -, 180.0, ), {, if, (, drawBack, ), {, Area, side, =, new]
[), {, if, (, drawBack, ), {, Area, side, =, new, Area, (, new, Rectangle2D, ., Double, (, arc, .]
[>, -, 180.0, ), {, if, (, drawBack, ), {, Area, side, =, new, Area, (, new, Rectangle2D, ., Double]
[), {, if, (, drawBack, ), {, Area, side, =, new, Area, (, new, Rectangle2D, ., Double, (, arc, .]
[), {, if, (, drawBack, ), {, Area, side, =, new, Area, (, new, Rectangle2D, ., Double, (, arc, .]
[), {, Area, side, =, new, Area, (, new, Rectangle2D, ., Double, (, arc, ., getStartPoint, (, ), ., getX]
[;, side, ., intersect, (, back, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side]
[), ;, side, ., intersect, (, back, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (]
[,, plotArea, ., getY, (, ), ,, arc, ., getEndPoint, (, ), ., getX, (, ), -, arc, ., getStartPoint]
[., getX, (, ), ,, plotArea, ., getY, (, ), ,, arc, ., getEndPoint, (, ), ., getX, (, )]
[., getStartPoint, (, ), ., getX, (, ), ,, plotArea, ., getY, (, ), ,, arc, ., getEndPoint, (, )]
[,, arc, ., getEndPoint, (, ), ., getX, (, ), -, arc, ., getStartPoint, (, ), ., getX, (, )]
[., getY, (, ), ,, arc, ., getEndPoint, (, ), ., getX, (, ), -, arc, ., getStartPoint, (, )]
[,, plotArea, ., getHeight, (, ), ), ), ;, side, ., intersect, (, back, ), ;, g2, ., setPaint, (]
[-, arc, ., getStartPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side]
[., getX, (, ), -, arc, ., getStartPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight, (, )]
[., getEndPoint, (, ), ., getX, (, ), -, arc, ., getStartPoint, (, ), ., getX, (, ), ,, plotArea]
[,, plotArea, ., getHeight, (, ), ), ), ;, side, ., intersect, (, back, ), ;, g2, ., setPaint, (]
[., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side, ., intersect, (, back, ), ;]
[., getStartPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side, ., intersect]
[), ), ;, side, ., intersect, (, back, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill]
[., getHeight, (, ), ), ), ;, side, ., intersect, (, back, ), ;, g2, ., setPaint, (, paint, )]
[;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side, ), ;, g2, ., setPaint, (, outlinePaint]
[., intersect, (, back, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side, ), ;]
[), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side, ), ;, g2, ., setPaint, (]
[;, g2, ., fill, (, side, ), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side]
[., setPaint, (, paint, ), ;, g2, ., fill, (, side, ), ;, g2, ., setPaint, (, outlinePaint, ), ;]
[), ;, g2, ., fill, (, side, ), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (]
[;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side, ), ;, }, }, else, {, Area]
[., fill, (, side, ), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side, ), ;]
[), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side, ), ;, }, }, else, {]
[;, g2, ., draw, (, side, ), ;, }, }, else, {, Area, side1, =, new, Area, (, new, Rectangle2D]
[., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side, ), ;, }, }, else, {, Area, side1, =]
[), ;, g2, ., draw, (, side, ), ;, }, }, else, {, Area, side1, =, new, Area, (, new]
[;, }, }, else, {, Area, side1, =, new, Area, (, new, Rectangle2D, ., Double, (, arc, ., getStartPoint, (]
[., draw, (, side, ), ;, }, }, else, {, Area, side1, =, new, Area, (, new, Rectangle2D, ., Double]
[), ;, }, }, else, {, Area, side1, =, new, Area, (, new, Rectangle2D, ., Double, (, arc, ., getStartPoint]
[;, side1, ., intersect, (, back, ), ;, Area, side2, =, new, Area, (, new, Rectangle2D, ., Double, (, plotArea]
[), ;, side1, ., intersect, (, back, ), ;, Area, side2, =, new, Area, (, new, Rectangle2D, ., Double, (]
[,, plotArea, ., getY, (, ), ,, plotArea, ., getMaxX, (, ), -, arc, ., getStartPoint, (, ), ., getX]
[., getX, (, ), ,, plotArea, ., getY, (, ), ,, plotArea, ., getMaxX, (, ), -, arc, ., getStartPoint]
[., getStartPoint, (, ), ., getX, (, ), ,, plotArea, ., getY, (, ), ,, plotArea, ., getMaxX, (, )]
[,, plotArea, ., getMaxX, (, ), -, arc, ., getStartPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight]
[., getY, (, ), ,, plotArea, ., getMaxX, (, ), -, arc, ., getStartPoint, (, ), ., getX, (, )]
[,, plotArea, ., getHeight, (, ), ), ), ;, side1, ., intersect, (, back, ), ;, Area, side2, =, new]
[-, arc, ., getStartPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side1]
[., getMaxX, (, ), -, arc, ., getStartPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight, (, )]
[,, plotArea, ., getHeight, (, ), ), ), ;, side1, ., intersect, (, back, ), ;, Area, side2, =, new]
[., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side1, ., intersect, (, back, ), ;]
[., getStartPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side1, ., intersect]
[), ), ;, side1, ., intersect, (, back, ), ;, Area, side2, =, new, Area, (, new, Rectangle2D, ., Double]
[., getHeight, (, ), ), ), ;, side1, ., intersect, (, back, ), ;, Area, side2, =, new, Area, (]
[;, Area, side2, =, new, Area, (, new, Rectangle2D, ., Double, (, plotArea, ., getX, (, ), ,, plotArea, .]
[., intersect, (, back, ), ;, Area, side2, =, new, Area, (, new, Rectangle2D, ., Double, (, plotArea, ., getX]
[), ;, Area, side2, =, new, Area, (, new, Rectangle2D, ., Double, (, plotArea, ., getX, (, ), ,, plotArea]
[;, side2, ., intersect, (, back, ), ;, g2, ., setPaint, (, paint, ), ;, if, (, drawBack, ), {]
[), ;, side2, ., intersect, (, back, ), ;, g2, ., setPaint, (, paint, ), ;, if, (, drawBack, )]
[,, plotArea, ., getY, (, ), ,, arc, ., getEndPoint, (, ), ., getX, (, ), -, plotArea, ., getX]
[., getX, (, ), ,, plotArea, ., getY, (, ), ,, arc, ., getEndPoint, (, ), ., getX, (, )]
[,, arc, ., getEndPoint, (, ), ., getX, (, ), -, plotArea, ., getX, (, ), ,, plotArea, ., getHeight]
[., getY, (, ), ,, arc, ., getEndPoint, (, ), ., getX, (, ), -, plotArea, ., getX, (, )]
[,, plotArea, ., getHeight, (, ), ), ), ;, side2, ., intersect, (, back, ), ;, g2, ., setPaint, (]
[-, plotArea, ., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side2, ., intersect, (, back]
[., getX, (, ), -, plotArea, ., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side2]
[., getEndPoint, (, ), ., getX, (, ), -, plotArea, ., getX, (, ), ,, plotArea, ., getHeight, (, )]
[,, plotArea, ., getHeight, (, ), ), ), ;, side2, ., intersect, (, back, ), ;, g2, ., setPaint, (]
[., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side2, ., intersect, (, back, ), ;]
[), ), ;, side2, ., intersect, (, back, ), ;, g2, ., setPaint, (, paint, ), ;, if, (, drawBack]
[., getHeight, (, ), ), ), ;, side2, ., intersect, (, back, ), ;, g2, ., setPaint, (, paint, )]
[;, g2, ., setPaint, (, paint, ), ;, if, (, drawBack, ), {, g2, ., fill, (, side1, ), ;]
[., intersect, (, back, ), ;, g2, ., setPaint, (, paint, ), ;, if, (, drawBack, ), {, g2, .]
[), ;, g2, ., setPaint, (, paint, ), ;, if, (, drawBack, ), {, g2, ., fill, (, side1, )]
[;, if, (, drawBack, ), {, g2, ., fill, (, side1, ), ;, g2, ., fill, (, side2, ), ;]
[., setPaint, (, paint, ), ;, if, (, drawBack, ), {, g2, ., fill, (, side1, ), ;, g2, .]
[), ;, if, (, drawBack, ), {, g2, ., fill, (, side1, ), ;, g2, ., fill, (, side2, )]
[), {, g2, ., fill, (, side1, ), ;, g2, ., fill, (, side2, ), ;, }, if, (, drawFront]
[;, g2, ., fill, (, side2, ), ;, }, if, (, drawFront, ), {, g2, ., fill, (, front, )]
[., fill, (, side1, ), ;, g2, ., fill, (, side2, ), ;, }, if, (, drawFront, ), {, g2]
[), ;, g2, ., fill, (, side2, ), ;, }, if, (, drawFront, ), {, g2, ., fill, (, front]
[;, }, if, (, drawFront, ), {, g2, ., fill, (, front, ), ;, }, g2, ., setPaint, (, outlinePaint]
[., fill, (, side2, ), ;, }, if, (, drawFront, ), {, g2, ., fill, (, front, ), ;, }]
[), ;, }, if, (, drawFront, ), {, g2, ., fill, (, front, ), ;, }, g2, ., setPaint, (]
[), {, g2, ., fill, (, front, ), ;, }, g2, ., setPaint, (, outlinePaint, ), ;, if, (, drawBack]
[;, }, g2, ., setPaint, (, outlinePaint, ), ;, if, (, drawBack, ), {, g2, ., draw, (, side1, )]
[., fill, (, front, ), ;, }, g2, ., setPaint, (, outlinePaint, ), ;, if, (, drawBack, ), {, g2]
[), ;, }, g2, ., setPaint, (, outlinePaint, ), ;, if, (, drawBack, ), {, g2, ., draw, (, side1]
[;, if, (, drawBack, ), {, g2, ., draw, (, side1, ), ;, g2, ., draw, (, side2, ), ;]
[., setPaint, (, outlinePaint, ), ;, if, (, drawBack, ), {, g2, ., draw, (, side1, ), ;, g2, .]
[), ;, if, (, drawBack, ), {, g2, ., draw, (, side1, ), ;, g2, ., draw, (, side2, )]
[), {, g2, ., draw, (, side1, ), ;, g2, ., draw, (, side2, ), ;, }, if, (, drawFront]
[;, g2, ., draw, (, side2, ), ;, }, if, (, drawFront, ), {, g2, ., draw, (, front, )]
[., draw, (, side1, ), ;, g2, ., draw, (, side2, ), ;, }, if, (, drawFront, ), {, g2]
[), ;, g2, ., draw, (, side2, ), ;, }, if, (, drawFront, ), {, g2, ., draw, (, front]
[;, }, if, (, drawFront, ), {, g2, ., draw, (, front, ), ;, }, }, }, else, {, if]
[., draw, (, side2, ), ;, }, if, (, drawFront, ), {, g2, ., draw, (, front, ), ;, }]
[), ;, }, if, (, drawFront, ), {, g2, ., draw, (, front, ), ;, }, }, }, else, {]
[), {, g2, ., draw, (, front, ), ;, }, }, }, else, {, if, (, drawBack, ), {, Area]
[;, }, }, }, else, {, if, (, drawBack, ), {, Area, side1, =, new, Area, (, new, Rectangle2D, .]
[., draw, (, front, ), ;, }, }, }, else, {, if, (, drawBack, ), {, Area, side1, =, new]
[), ;, }, }, }, else, {, if, (, drawBack, ), {, Area, side1, =, new, Area, (, new, Rectangle2D]
[), {, Area, side1, =, new, Area, (, new, Rectangle2D, ., Double, (, arc, ., getStartPoint, (, ), ., getX]
[;, side1, ., intersect, (, back, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side1]
[), ;, side1, ., intersect, (, back, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (]
[,, plotArea, ., getY, (, ), ,, plotArea, ., getMaxX, (, ), -, arc, ., getStartPoint, (, ), ., getX]
[., getX, (, ), ,, plotArea, ., getY, (, ), ,, plotArea, ., getMaxX, (, ), -, arc, ., getStartPoint]
[., getStartPoint, (, ), ., getX, (, ), ,, plotArea, ., getY, (, ), ,, plotArea, ., getMaxX, (, )]
[,, plotArea, ., getMaxX, (, ), -, arc, ., getStartPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight]
[., getY, (, ), ,, plotArea, ., getMaxX, (, ), -, arc, ., getStartPoint, (, ), ., getX, (, )]
[,, plotArea, ., getHeight, (, ), ), ), ;, side1, ., intersect, (, back, ), ;, g2, ., setPaint, (]
[-, arc, ., getStartPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side1]
[., getMaxX, (, ), -, arc, ., getStartPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight, (, )]
[,, plotArea, ., getHeight, (, ), ), ), ;, side1, ., intersect, (, back, ), ;, g2, ., setPaint, (]
[., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side1, ., intersect, (, back, ), ;]
[., getStartPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side1, ., intersect]
[), ), ;, side1, ., intersect, (, back, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill]
[., getHeight, (, ), ), ), ;, side1, ., intersect, (, back, ), ;, g2, ., setPaint, (, paint, )]
[;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side1, ), ;, g2, ., setPaint, (, outlinePaint]
[., intersect, (, back, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side1, ), ;]
[), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side1, ), ;, g2, ., setPaint, (]
[;, g2, ., fill, (, side1, ), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side1]
[., setPaint, (, paint, ), ;, g2, ., fill, (, side1, ), ;, g2, ., setPaint, (, outlinePaint, ), ;]
[), ;, g2, ., fill, (, side1, ), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (]
[;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side1, ), ;, }, if, (, drawFront, )]
[., fill, (, side1, ), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side1, ), ;]
[), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side1, ), ;, }, if, (, drawFront]
[;, g2, ., draw, (, side1, ), ;, }, if, (, drawFront, ), {, Area, side2, =, new, Area, (]
[., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side1, ), ;, }, if, (, drawFront, ), {, Area]
[), ;, g2, ., draw, (, side1, ), ;, }, if, (, drawFront, ), {, Area, side2, =, new, Area]
[;, }, if, (, drawFront, ), {, Area, side2, =, new, Area, (, new, Rectangle2D, ., Double, (, arc, .]
[., draw, (, side1, ), ;, }, if, (, drawFront, ), {, Area, side2, =, new, Area, (, new, Rectangle2D]
[), ;, }, if, (, drawFront, ), {, Area, side2, =, new, Area, (, new, Rectangle2D, ., Double, (, arc]
[), {, Area, side2, =, new, Area, (, new, Rectangle2D, ., Double, (, arc, ., getEndPoint, (, ), ., getX]
[;, side2, ., intersect, (, front, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side2]
[), ;, side2, ., intersect, (, front, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (]
[,, plotArea, ., getY, (, ), ,, plotArea, ., getMaxX, (, ), -, arc, ., getEndPoint, (, ), ., getX]
[., getX, (, ), ,, plotArea, ., getY, (, ), ,, plotArea, ., getMaxX, (, ), -, arc, ., getEndPoint]
[., getEndPoint, (, ), ., getX, (, ), ,, plotArea, ., getY, (, ), ,, plotArea, ., getMaxX, (, )]
[,, plotArea, ., getMaxX, (, ), -, arc, ., getEndPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight]
[., getY, (, ), ,, plotArea, ., getMaxX, (, ), -, arc, ., getEndPoint, (, ), ., getX, (, )]
[,, plotArea, ., getHeight, (, ), ), ), ;, side2, ., intersect, (, front, ), ;, g2, ., setPaint, (]
[-, arc, ., getEndPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side2]
[., getMaxX, (, ), -, arc, ., getEndPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight, (, )]
[,, plotArea, ., getHeight, (, ), ), ), ;, side2, ., intersect, (, front, ), ;, g2, ., setPaint, (]
[., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side2, ., intersect, (, front, ), ;]
[., getEndPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side2, ., intersect]
[), ), ;, side2, ., intersect, (, front, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill]
[., getHeight, (, ), ), ), ;, side2, ., intersect, (, front, ), ;, g2, ., setPaint, (, paint, )]
[;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side2, ), ;, g2, ., setPaint, (, outlinePaint]
[., intersect, (, front, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side2, ), ;]
[), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side2, ), ;, g2, ., setPaint, (]
[;, g2, ., fill, (, side2, ), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side2]
[., setPaint, (, paint, ), ;, g2, ., fill, (, side2, ), ;, g2, ., setPaint, (, outlinePaint, ), ;]
[), ;, g2, ., fill, (, side2, ), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (]
[;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side2, ), ;, }, }, }, }, else]
[., fill, (, side2, ), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side2, ), ;]
[), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side2, ), ;, }, }, }, }]
[;, g2, ., draw, (, side2, ), ;, }, }, }, }, else, if, (, extent, >, 0.0, ), {]
[., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side2, ), ;, }, }, }, }, else, if, (]
[), ;, g2, ., draw, (, side2, ), ;, }, }, }, }, else, if, (, extent, >, 0.0, )]
[;, }, }, }, }, else, if, (, extent, >, 0.0, ), {, if, (, isAngleAtFront, (, start, ), )]
[., draw, (, side2, ), ;, }, }, }, }, else, if, (, extent, >, 0.0, ), {, if, (]
[), ;, }, }, }, }, else, if, (, extent, >, 0.0, ), {, if, (, isAngleAtFront, (, start, )]
[), {, if, (, isAngleAtFront, (, start, ), ), {, if, (, !, isAngleAtBack, (, end, ), ), {, if]
[>, 0.0, ), {, if, (, isAngleAtFront, (, start, ), ), {, if, (, !, isAngleAtBack, (, end, ), )]
[), {, if, (, isAngleAtFront, (, start, ), ), {, if, (, !, isAngleAtBack, (, end, ), ), {, if]
[), {, if, (, !, isAngleAtBack, (, end, ), ), {, if, (, extent, <, 180.0, ), {, if, (]
[), ), {, if, (, !, isAngleAtBack, (, end, ), ), {, if, (, extent, <, 180.0, ), {, if]
[), {, if, (, extent, <, 180.0, ), {, if, (, drawFront, ), {, Area, side, =, new, Area, (]
[), {, if, (, extent, <, 180.0, ), {, if, (, drawFront, ), {, Area, side, =, new, Area, (]
[), ), {, if, (, extent, <, 180.0, ), {, if, (, drawFront, ), {, Area, side, =, new, Area]
[), {, if, (, drawFront, ), {, Area, side, =, new, Area, (, new, Rectangle2D, ., Double, (, arc, .]
[<, 180.0, ), {, if, (, drawFront, ), {, Area, side, =, new, Area, (, new, Rectangle2D, ., Double, (]
[), {, if, (, drawFront, ), {, Area, side, =, new, Area, (, new, Rectangle2D, ., Double, (, arc, .]
[), {, Area, side, =, new, Area, (, new, Rectangle2D, ., Double, (, arc, ., getStartPoint, (, ), ., getX]
[;, side, ., intersect, (, front, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side]
[), ;, side, ., intersect, (, front, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (]
[,, plotArea, ., getY, (, ), ,, arc, ., getEndPoint, (, ), ., getX, (, ), -, arc, ., getStartPoint]
[., getX, (, ), ,, plotArea, ., getY, (, ), ,, arc, ., getEndPoint, (, ), ., getX, (, )]
[., getStartPoint, (, ), ., getX, (, ), ,, plotArea, ., getY, (, ), ,, arc, ., getEndPoint, (, )]
[,, arc, ., getEndPoint, (, ), ., getX, (, ), -, arc, ., getStartPoint, (, ), ., getX, (, )]
[., getY, (, ), ,, arc, ., getEndPoint, (, ), ., getX, (, ), -, arc, ., getStartPoint, (, )]
[,, plotArea, ., getHeight, (, ), ), ), ;, side, ., intersect, (, front, ), ;, g2, ., setPaint, (]
[-, arc, ., getStartPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side]
[., getX, (, ), -, arc, ., getStartPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight, (, )]
[., getEndPoint, (, ), ., getX, (, ), -, arc, ., getStartPoint, (, ), ., getX, (, ), ,, plotArea]
[,, plotArea, ., getHeight, (, ), ), ), ;, side, ., intersect, (, front, ), ;, g2, ., setPaint, (]
[., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side, ., intersect, (, front, ), ;]
[., getStartPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side, ., intersect]
[), ), ;, side, ., intersect, (, front, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill]
[., getHeight, (, ), ), ), ;, side, ., intersect, (, front, ), ;, g2, ., setPaint, (, paint, )]
[;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side, ), ;, g2, ., setPaint, (, outlinePaint]
[., intersect, (, front, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side, ), ;]
[), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side, ), ;, g2, ., setPaint, (]
[;, g2, ., fill, (, side, ), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side]
[., setPaint, (, paint, ), ;, g2, ., fill, (, side, ), ;, g2, ., setPaint, (, outlinePaint, ), ;]
[), ;, g2, ., fill, (, side, ), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (]
[;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side, ), ;, }, }, else, {, Area]
[., fill, (, side, ), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side, ), ;]
[), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side, ), ;, }, }, else, {]
[;, g2, ., draw, (, side, ), ;, }, }, else, {, Area, side1, =, new, Area, (, new, Rectangle2D]
[., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side, ), ;, }, }, else, {, Area, side1, =]
[), ;, g2, ., draw, (, side, ), ;, }, }, else, {, Area, side1, =, new, Area, (, new]
[;, }, }, else, {, Area, side1, =, new, Area, (, new, Rectangle2D, ., Double, (, arc, ., getStartPoint, (]
[., draw, (, side, ), ;, }, }, else, {, Area, side1, =, new, Area, (, new, Rectangle2D, ., Double]
[), ;, }, }, else, {, Area, side1, =, new, Area, (, new, Rectangle2D, ., Double, (, arc, ., getStartPoint]
[;, side1, ., intersect, (, front, ), ;, Area, side2, =, new, Area, (, new, Rectangle2D, ., Double, (, plotArea]
[), ;, side1, ., intersect, (, front, ), ;, Area, side2, =, new, Area, (, new, Rectangle2D, ., Double, (]
[,, plotArea, ., getY, (, ), ,, plotArea, ., getMaxX, (, ), -, arc, ., getStartPoint, (, ), ., getX]
[., getX, (, ), ,, plotArea, ., getY, (, ), ,, plotArea, ., getMaxX, (, ), -, arc, ., getStartPoint]
[., getStartPoint, (, ), ., getX, (, ), ,, plotArea, ., getY, (, ), ,, plotArea, ., getMaxX, (, )]
[,, plotArea, ., getMaxX, (, ), -, arc, ., getStartPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight]
[., getY, (, ), ,, plotArea, ., getMaxX, (, ), -, arc, ., getStartPoint, (, ), ., getX, (, )]
[,, plotArea, ., getHeight, (, ), ), ), ;, side1, ., intersect, (, front, ), ;, Area, side2, =, new]
[-, arc, ., getStartPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side1]
[., getMaxX, (, ), -, arc, ., getStartPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight, (, )]
[,, plotArea, ., getHeight, (, ), ), ), ;, side1, ., intersect, (, front, ), ;, Area, side2, =, new]
[., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side1, ., intersect, (, front, ), ;]
[., getStartPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side1, ., intersect]
[), ), ;, side1, ., intersect, (, front, ), ;, Area, side2, =, new, Area, (, new, Rectangle2D, ., Double]
[., getHeight, (, ), ), ), ;, side1, ., intersect, (, front, ), ;, Area, side2, =, new, Area, (]
[;, Area, side2, =, new, Area, (, new, Rectangle2D, ., Double, (, plotArea, ., getX, (, ), ,, plotArea, .]
[., intersect, (, front, ), ;, Area, side2, =, new, Area, (, new, Rectangle2D, ., Double, (, plotArea, ., getX]
[), ;, Area, side2, =, new, Area, (, new, Rectangle2D, ., Double, (, plotArea, ., getX, (, ), ,, plotArea]
[;, side2, ., intersect, (, front, ), ;, g2, ., setPaint, (, paint, ), ;, if, (, drawFront, ), {]
[), ;, side2, ., intersect, (, front, ), ;, g2, ., setPaint, (, paint, ), ;, if, (, drawFront, )]
[,, plotArea, ., getY, (, ), ,, arc, ., getEndPoint, (, ), ., getX, (, ), -, plotArea, ., getX]
[., getX, (, ), ,, plotArea, ., getY, (, ), ,, arc, ., getEndPoint, (, ), ., getX, (, )]
[,, arc, ., getEndPoint, (, ), ., getX, (, ), -, plotArea, ., getX, (, ), ,, plotArea, ., getHeight]
[., getY, (, ), ,, arc, ., getEndPoint, (, ), ., getX, (, ), -, plotArea, ., getX, (, )]
[,, plotArea, ., getHeight, (, ), ), ), ;, side2, ., intersect, (, front, ), ;, g2, ., setPaint, (]
[-, plotArea, ., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side2, ., intersect, (, front]
[., getX, (, ), -, plotArea, ., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side2]
[., getEndPoint, (, ), ., getX, (, ), -, plotArea, ., getX, (, ), ,, plotArea, ., getHeight, (, )]
[,, plotArea, ., getHeight, (, ), ), ), ;, side2, ., intersect, (, front, ), ;, g2, ., setPaint, (]
[., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side2, ., intersect, (, front, ), ;]
[), ), ;, side2, ., intersect, (, front, ), ;, g2, ., setPaint, (, paint, ), ;, if, (, drawFront]
[., getHeight, (, ), ), ), ;, side2, ., intersect, (, front, ), ;, g2, ., setPaint, (, paint, )]
[;, g2, ., setPaint, (, paint, ), ;, if, (, drawFront, ), {, g2, ., fill, (, side1, ), ;]
[., intersect, (, front, ), ;, g2, ., setPaint, (, paint, ), ;, if, (, drawFront, ), {, g2, .]
[), ;, g2, ., setPaint, (, paint, ), ;, if, (, drawFront, ), {, g2, ., fill, (, side1, )]
[;, if, (, drawFront, ), {, g2, ., fill, (, side1, ), ;, g2, ., fill, (, side2, ), ;]
[., setPaint, (, paint, ), ;, if, (, drawFront, ), {, g2, ., fill, (, side1, ), ;, g2, .]
[), ;, if, (, drawFront, ), {, g2, ., fill, (, side1, ), ;, g2, ., fill, (, side2, )]
[), {, g2, ., fill, (, side1, ), ;, g2, ., fill, (, side2, ), ;, }, if, (, drawBack]
[;, g2, ., fill, (, side2, ), ;, }, if, (, drawBack, ), {, g2, ., fill, (, back, )]
[., fill, (, side1, ), ;, g2, ., fill, (, side2, ), ;, }, if, (, drawBack, ), {, g2]
[), ;, g2, ., fill, (, side2, ), ;, }, if, (, drawBack, ), {, g2, ., fill, (, back]
[;, }, if, (, drawBack, ), {, g2, ., fill, (, back, ), ;, }, g2, ., setPaint, (, outlinePaint]
[., fill, (, side2, ), ;, }, if, (, drawBack, ), {, g2, ., fill, (, back, ), ;, }]
[), ;, }, if, (, drawBack, ), {, g2, ., fill, (, back, ), ;, }, g2, ., setPaint, (]
[), {, g2, ., fill, (, back, ), ;, }, g2, ., setPaint, (, outlinePaint, ), ;, if, (, drawFront]
[;, }, g2, ., setPaint, (, outlinePaint, ), ;, if, (, drawFront, ), {, g2, ., draw, (, side1, )]
[., fill, (, back, ), ;, }, g2, ., setPaint, (, outlinePaint, ), ;, if, (, drawFront, ), {, g2]
[), ;, }, g2, ., setPaint, (, outlinePaint, ), ;, if, (, drawFront, ), {, g2, ., draw, (, side1]
[;, if, (, drawFront, ), {, g2, ., draw, (, side1, ), ;, g2, ., draw, (, side2, ), ;]
[., setPaint, (, outlinePaint, ), ;, if, (, drawFront, ), {, g2, ., draw, (, side1, ), ;, g2, .]
[), ;, if, (, drawFront, ), {, g2, ., draw, (, side1, ), ;, g2, ., draw, (, side2, )]
[), {, g2, ., draw, (, side1, ), ;, g2, ., draw, (, side2, ), ;, }, if, (, drawBack]
[;, g2, ., draw, (, side2, ), ;, }, if, (, drawBack, ), {, g2, ., draw, (, back, )]
[., draw, (, side1, ), ;, g2, ., draw, (, side2, ), ;, }, if, (, drawBack, ), {, g2]
[), ;, g2, ., draw, (, side2, ), ;, }, if, (, drawBack, ), {, g2, ., draw, (, back]
[;, }, if, (, drawBack, ), {, g2, ., draw, (, back, ), ;, }, }, }, else, {, if]
[., draw, (, side2, ), ;, }, if, (, drawBack, ), {, g2, ., draw, (, back, ), ;, }]
[), ;, }, if, (, drawBack, ), {, g2, ., draw, (, back, ), ;, }, }, }, else, {]
[), {, g2, ., draw, (, back, ), ;, }, }, }, else, {, if, (, drawBack, ), {, Area]
[;, }, }, }, else, {, if, (, drawBack, ), {, Area, side2, =, new, Area, (, new, Rectangle2D, .]
[., draw, (, back, ), ;, }, }, }, else, {, if, (, drawBack, ), {, Area, side2, =, new]
[), ;, }, }, }, else, {, if, (, drawBack, ), {, Area, side2, =, new, Area, (, new, Rectangle2D]
[), {, Area, side2, =, new, Area, (, new, Rectangle2D, ., Double, (, arc, ., getEndPoint, (, ), ., getX]
[;, side2, ., intersect, (, back, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side2]
[), ;, side2, ., intersect, (, back, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (]
[,, plotArea, ., getY, (, ), ,, plotArea, ., getMaxX, (, ), -, arc, ., getEndPoint, (, ), ., getX]
[., getX, (, ), ,, plotArea, ., getY, (, ), ,, plotArea, ., getMaxX, (, ), -, arc, ., getEndPoint]
[., getEndPoint, (, ), ., getX, (, ), ,, plotArea, ., getY, (, ), ,, plotArea, ., getMaxX, (, )]
[,, plotArea, ., getMaxX, (, ), -, arc, ., getEndPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight]
[., getY, (, ), ,, plotArea, ., getMaxX, (, ), -, arc, ., getEndPoint, (, ), ., getX, (, )]
[,, plotArea, ., getHeight, (, ), ), ), ;, side2, ., intersect, (, back, ), ;, g2, ., setPaint, (]
[-, arc, ., getEndPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side2]
[., getMaxX, (, ), -, arc, ., getEndPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight, (, )]
[,, plotArea, ., getHeight, (, ), ), ), ;, side2, ., intersect, (, back, ), ;, g2, ., setPaint, (]
[., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side2, ., intersect, (, back, ), ;]
[., getEndPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side2, ., intersect]
[), ), ;, side2, ., intersect, (, back, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill]
[., getHeight, (, ), ), ), ;, side2, ., intersect, (, back, ), ;, g2, ., setPaint, (, paint, )]
[;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side2, ), ;, g2, ., setPaint, (, outlinePaint]
[., intersect, (, back, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side2, ), ;]
[), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side2, ), ;, g2, ., setPaint, (]
[;, g2, ., fill, (, side2, ), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side2]
[., setPaint, (, paint, ), ;, g2, ., fill, (, side2, ), ;, g2, ., setPaint, (, outlinePaint, ), ;]
[), ;, g2, ., fill, (, side2, ), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (]
[;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side2, ), ;, }, if, (, drawFront, )]
[., fill, (, side2, ), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side2, ), ;]
[), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side2, ), ;, }, if, (, drawFront]
[;, g2, ., draw, (, side2, ), ;, }, if, (, drawFront, ), {, Area, side1, =, new, Area, (]
[., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side2, ), ;, }, if, (, drawFront, ), {, Area]
[), ;, g2, ., draw, (, side2, ), ;, }, if, (, drawFront, ), {, Area, side1, =, new, Area]
[;, }, if, (, drawFront, ), {, Area, side1, =, new, Area, (, new, Rectangle2D, ., Double, (, arc, .]
[., draw, (, side2, ), ;, }, if, (, drawFront, ), {, Area, side1, =, new, Area, (, new, Rectangle2D]
[), ;, }, if, (, drawFront, ), {, Area, side1, =, new, Area, (, new, Rectangle2D, ., Double, (, arc]
[), {, Area, side1, =, new, Area, (, new, Rectangle2D, ., Double, (, arc, ., getStartPoint, (, ), ., getX]
[;, side1, ., intersect, (, front, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side1]
[), ;, side1, ., intersect, (, front, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (]
[,, plotArea, ., getY, (, ), ,, plotArea, ., getMaxX, (, ), -, arc, ., getStartPoint, (, ), ., getX]
[., getX, (, ), ,, plotArea, ., getY, (, ), ,, plotArea, ., getMaxX, (, ), -, arc, ., getStartPoint]
[., getStartPoint, (, ), ., getX, (, ), ,, plotArea, ., getY, (, ), ,, plotArea, ., getMaxX, (, )]
[,, plotArea, ., getMaxX, (, ), -, arc, ., getStartPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight]
[., getY, (, ), ,, plotArea, ., getMaxX, (, ), -, arc, ., getStartPoint, (, ), ., getX, (, )]
[,, plotArea, ., getHeight, (, ), ), ), ;, side1, ., intersect, (, front, ), ;, g2, ., setPaint, (]
[-, arc, ., getStartPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side1]
[., getMaxX, (, ), -, arc, ., getStartPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight, (, )]
[,, plotArea, ., getHeight, (, ), ), ), ;, side1, ., intersect, (, front, ), ;, g2, ., setPaint, (]
[., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side1, ., intersect, (, front, ), ;]
[., getStartPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side1, ., intersect]
[), ), ;, side1, ., intersect, (, front, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill]
[., getHeight, (, ), ), ), ;, side1, ., intersect, (, front, ), ;, g2, ., setPaint, (, paint, )]
[;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side1, ), ;, g2, ., setPaint, (, outlinePaint]
[., intersect, (, front, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side1, ), ;]
[), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side1, ), ;, g2, ., setPaint, (]
[;, g2, ., fill, (, side1, ), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side1]
[., setPaint, (, paint, ), ;, g2, ., fill, (, side1, ), ;, g2, ., setPaint, (, outlinePaint, ), ;]
[), ;, g2, ., fill, (, side1, ), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (]
[;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side1, ), ;, }, }, }, else, {]
[., fill, (, side1, ), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side1, ), ;]
[), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side1, ), ;, }, }, }, else]
[;, g2, ., draw, (, side1, ), ;, }, }, }, else, {, if, (, !, isAngleAtFront, (, end, )]
[., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side1, ), ;, }, }, }, else, {, if, (]
[), ;, g2, ., draw, (, side1, ), ;, }, }, }, else, {, if, (, !, isAngleAtFront, (, end]
[;, }, }, }, else, {, if, (, !, isAngleAtFront, (, end, ), ), {, if, (, extent, <, 180.0]
[., draw, (, side1, ), ;, }, }, }, else, {, if, (, !, isAngleAtFront, (, end, ), ), {]
[), ;, }, }, }, else, {, if, (, !, isAngleAtFront, (, end, ), ), {, if, (, extent, <]
[), {, if, (, extent, <, 180.0, ), {, if, (, drawBack, ), {, Area, side, =, new, Area, (]
[), {, if, (, extent, <, 180.0, ), {, if, (, drawBack, ), {, Area, side, =, new, Area, (]
[), ), {, if, (, extent, <, 180.0, ), {, if, (, drawBack, ), {, Area, side, =, new, Area]
[), {, if, (, drawBack, ), {, Area, side, =, new, Area, (, new, Rectangle2D, ., Double, (, arc, .]
[<, 180.0, ), {, if, (, drawBack, ), {, Area, side, =, new, Area, (, new, Rectangle2D, ., Double, (]
[), {, if, (, drawBack, ), {, Area, side, =, new, Area, (, new, Rectangle2D, ., Double, (, arc, .]
[), {, Area, side, =, new, Area, (, new, Rectangle2D, ., Double, (, arc, ., getEndPoint, (, ), ., getX]
[;, side, ., intersect, (, back, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side]
[), ;, side, ., intersect, (, back, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (]
[,, plotArea, ., getY, (, ), ,, arc, ., getStartPoint, (, ), ., getX, (, ), -, arc, ., getEndPoint]
[., getX, (, ), ,, plotArea, ., getY, (, ), ,, arc, ., getStartPoint, (, ), ., getX, (, )]
[., getEndPoint, (, ), ., getX, (, ), ,, plotArea, ., getY, (, ), ,, arc, ., getStartPoint, (, )]
[,, arc, ., getStartPoint, (, ), ., getX, (, ), -, arc, ., getEndPoint, (, ), ., getX, (, )]
[., getY, (, ), ,, arc, ., getStartPoint, (, ), ., getX, (, ), -, arc, ., getEndPoint, (, )]
[,, plotArea, ., getHeight, (, ), ), ), ;, side, ., intersect, (, back, ), ;, g2, ., setPaint, (]
[-, arc, ., getEndPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side]
[., getX, (, ), -, arc, ., getEndPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight, (, )]
[., getStartPoint, (, ), ., getX, (, ), -, arc, ., getEndPoint, (, ), ., getX, (, ), ,, plotArea]
[,, plotArea, ., getHeight, (, ), ), ), ;, side, ., intersect, (, back, ), ;, g2, ., setPaint, (]
[., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side, ., intersect, (, back, ), ;]
[., getEndPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side, ., intersect]
[), ), ;, side, ., intersect, (, back, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill]
[., getHeight, (, ), ), ), ;, side, ., intersect, (, back, ), ;, g2, ., setPaint, (, paint, )]
[;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side, ), ;, g2, ., setPaint, (, outlinePaint]
[., intersect, (, back, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side, ), ;]
[), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side, ), ;, g2, ., setPaint, (]
[;, g2, ., fill, (, side, ), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side]
[., setPaint, (, paint, ), ;, g2, ., fill, (, side, ), ;, g2, ., setPaint, (, outlinePaint, ), ;]
[), ;, g2, ., fill, (, side, ), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (]
[;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side, ), ;, }, }, else, {, Area]
[., fill, (, side, ), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side, ), ;]
[), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side, ), ;, }, }, else, {]
[;, g2, ., draw, (, side, ), ;, }, }, else, {, Area, side1, =, new, Area, (, new, Rectangle2D]
[., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side, ), ;, }, }, else, {, Area, side1, =]
[), ;, g2, ., draw, (, side, ), ;, }, }, else, {, Area, side1, =, new, Area, (, new]
[;, }, }, else, {, Area, side1, =, new, Area, (, new, Rectangle2D, ., Double, (, arc, ., getStartPoint, (]
[., draw, (, side, ), ;, }, }, else, {, Area, side1, =, new, Area, (, new, Rectangle2D, ., Double]
[), ;, }, }, else, {, Area, side1, =, new, Area, (, new, Rectangle2D, ., Double, (, arc, ., getStartPoint]
[;, side1, ., intersect, (, back, ), ;, Area, side2, =, new, Area, (, new, Rectangle2D, ., Double, (, arc]
[), ;, side1, ., intersect, (, back, ), ;, Area, side2, =, new, Area, (, new, Rectangle2D, ., Double, (]
[,, plotArea, ., getY, (, ), ,, plotArea, ., getX, (, ), -, arc, ., getStartPoint, (, ), ., getX]
[., getX, (, ), ,, plotArea, ., getY, (, ), ,, plotArea, ., getX, (, ), -, arc, ., getStartPoint]
[., getStartPoint, (, ), ., getX, (, ), ,, plotArea, ., getY, (, ), ,, plotArea, ., getX, (, )]
[,, plotArea, ., getX, (, ), -, arc, ., getStartPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight]
[., getY, (, ), ,, plotArea, ., getX, (, ), -, arc, ., getStartPoint, (, ), ., getX, (, )]
[,, plotArea, ., getHeight, (, ), ), ), ;, side1, ., intersect, (, back, ), ;, Area, side2, =, new]
[-, arc, ., getStartPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side1]
[., getX, (, ), -, arc, ., getStartPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight, (, )]
[,, plotArea, ., getHeight, (, ), ), ), ;, side1, ., intersect, (, back, ), ;, Area, side2, =, new]
[., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side1, ., intersect, (, back, ), ;]
[., getStartPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side1, ., intersect]
[), ), ;, side1, ., intersect, (, back, ), ;, Area, side2, =, new, Area, (, new, Rectangle2D, ., Double]
[., getHeight, (, ), ), ), ;, side1, ., intersect, (, back, ), ;, Area, side2, =, new, Area, (]
[;, Area, side2, =, new, Area, (, new, Rectangle2D, ., Double, (, arc, ., getEndPoint, (, ), ., getX, (]
[., intersect, (, back, ), ;, Area, side2, =, new, Area, (, new, Rectangle2D, ., Double, (, arc, ., getEndPoint]
[), ;, Area, side2, =, new, Area, (, new, Rectangle2D, ., Double, (, arc, ., getEndPoint, (, ), ., getX]
[;, side2, ., intersect, (, back, ), ;, g2, ., setPaint, (, paint, ), ;, if, (, drawBack, ), {]
[), ;, side2, ., intersect, (, back, ), ;, g2, ., setPaint, (, paint, ), ;, if, (, drawBack, )]
[,, plotArea, ., getY, (, ), ,, plotArea, ., getMaxX, (, ), -, arc, ., getEndPoint, (, ), ., getX]
[., getX, (, ), ,, plotArea, ., getY, (, ), ,, plotArea, ., getMaxX, (, ), -, arc, ., getEndPoint]
[., getEndPoint, (, ), ., getX, (, ), ,, plotArea, ., getY, (, ), ,, plotArea, ., getMaxX, (, )]
[,, plotArea, ., getMaxX, (, ), -, arc, ., getEndPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight]
[., getY, (, ), ,, plotArea, ., getMaxX, (, ), -, arc, ., getEndPoint, (, ), ., getX, (, )]
[,, plotArea, ., getHeight, (, ), ), ), ;, side2, ., intersect, (, back, ), ;, g2, ., setPaint, (]
[-, arc, ., getEndPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side2]
[., getMaxX, (, ), -, arc, ., getEndPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight, (, )]
[,, plotArea, ., getHeight, (, ), ), ), ;, side2, ., intersect, (, back, ), ;, g2, ., setPaint, (]
[., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side2, ., intersect, (, back, ), ;]
[., getEndPoint, (, ), ., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side2, ., intersect]
[), ), ;, side2, ., intersect, (, back, ), ;, g2, ., setPaint, (, paint, ), ;, if, (, drawBack]
[., getHeight, (, ), ), ), ;, side2, ., intersect, (, back, ), ;, g2, ., setPaint, (, paint, )]
[;, g2, ., setPaint, (, paint, ), ;, if, (, drawBack, ), {, g2, ., fill, (, side1, ), ;]
[., intersect, (, back, ), ;, g2, ., setPaint, (, paint, ), ;, if, (, drawBack, ), {, g2, .]
[), ;, g2, ., setPaint, (, paint, ), ;, if, (, drawBack, ), {, g2, ., fill, (, side1, )]
[;, if, (, drawBack, ), {, g2, ., fill, (, side1, ), ;, g2, ., fill, (, side2, ), ;]
[., setPaint, (, paint, ), ;, if, (, drawBack, ), {, g2, ., fill, (, side1, ), ;, g2, .]
[), ;, if, (, drawBack, ), {, g2, ., fill, (, side1, ), ;, g2, ., fill, (, side2, )]
[), {, g2, ., fill, (, side1, ), ;, g2, ., fill, (, side2, ), ;, }, if, (, drawFront]
[;, g2, ., fill, (, side2, ), ;, }, if, (, drawFront, ), {, g2, ., fill, (, front, )]
[., fill, (, side1, ), ;, g2, ., fill, (, side2, ), ;, }, if, (, drawFront, ), {, g2]
[), ;, g2, ., fill, (, side2, ), ;, }, if, (, drawFront, ), {, g2, ., fill, (, front]
[;, }, if, (, drawFront, ), {, g2, ., fill, (, front, ), ;, }, g2, ., setPaint, (, outlinePaint]
[., fill, (, side2, ), ;, }, if, (, drawFront, ), {, g2, ., fill, (, front, ), ;, }]
[), ;, }, if, (, drawFront, ), {, g2, ., fill, (, front, ), ;, }, g2, ., setPaint, (]
[), {, g2, ., fill, (, front, ), ;, }, g2, ., setPaint, (, outlinePaint, ), ;, if, (, drawBack]
[;, }, g2, ., setPaint, (, outlinePaint, ), ;, if, (, drawBack, ), {, g2, ., draw, (, side1, )]
[., fill, (, front, ), ;, }, g2, ., setPaint, (, outlinePaint, ), ;, if, (, drawBack, ), {, g2]
[), ;, }, g2, ., setPaint, (, outlinePaint, ), ;, if, (, drawBack, ), {, g2, ., draw, (, side1]
[;, if, (, drawBack, ), {, g2, ., draw, (, side1, ), ;, g2, ., draw, (, side2, ), ;]
[., setPaint, (, outlinePaint, ), ;, if, (, drawBack, ), {, g2, ., draw, (, side1, ), ;, g2, .]
[), ;, if, (, drawBack, ), {, g2, ., draw, (, side1, ), ;, g2, ., draw, (, side2, )]
[), {, g2, ., draw, (, side1, ), ;, g2, ., draw, (, side2, ), ;, }, if, (, drawFront]
[;, g2, ., draw, (, side2, ), ;, }, if, (, drawFront, ), {, g2, ., draw, (, front, )]
[., draw, (, side1, ), ;, g2, ., draw, (, side2, ), ;, }, if, (, drawFront, ), {, g2]
[), ;, g2, ., draw, (, side2, ), ;, }, if, (, drawFront, ), {, g2, ., draw, (, front]
[;, }, if, (, drawFront, ), {, g2, ., draw, (, front, ), ;, }, }, }, else, {, if]
[., draw, (, side2, ), ;, }, if, (, drawFront, ), {, g2, ., draw, (, front, ), ;, }]
[), ;, }, if, (, drawFront, ), {, g2, ., draw, (, front, ), ;, }, }, }, else, {]
[), {, g2, ., draw, (, front, ), ;, }, }, }, else, {, if, (, drawBack, ), {, Area]
[;, }, }, }, else, {, if, (, drawBack, ), {, Area, side1, =, new, Area, (, new, Rectangle2D, .]
[., draw, (, front, ), ;, }, }, }, else, {, if, (, drawBack, ), {, Area, side1, =, new]
[), ;, }, }, }, else, {, if, (, drawBack, ), {, Area, side1, =, new, Area, (, new, Rectangle2D]
[), {, Area, side1, =, new, Area, (, new, Rectangle2D, ., Double, (, plotArea, ., getX, (, ), ,, plotArea]
[;, side1, ., intersect, (, back, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side1]
[), ;, side1, ., intersect, (, back, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (]
[,, plotArea, ., getY, (, ), ,, arc, ., getStartPoint, (, ), ., getX, (, ), -, plotArea, ., getX]
[., getX, (, ), ,, plotArea, ., getY, (, ), ,, arc, ., getStartPoint, (, ), ., getX, (, )]
[,, arc, ., getStartPoint, (, ), ., getX, (, ), -, plotArea, ., getX, (, ), ,, plotArea, ., getHeight]
[., getY, (, ), ,, arc, ., getStartPoint, (, ), ., getX, (, ), -, plotArea, ., getX, (, )]
[,, plotArea, ., getHeight, (, ), ), ), ;, side1, ., intersect, (, back, ), ;, g2, ., setPaint, (]
[-, plotArea, ., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side1, ., intersect, (, back]
[., getX, (, ), -, plotArea, ., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side1]
[., getStartPoint, (, ), ., getX, (, ), -, plotArea, ., getX, (, ), ,, plotArea, ., getHeight, (, )]
[,, plotArea, ., getHeight, (, ), ), ), ;, side1, ., intersect, (, back, ), ;, g2, ., setPaint, (]
[., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side1, ., intersect, (, back, ), ;]
[), ), ;, side1, ., intersect, (, back, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill]
[., getHeight, (, ), ), ), ;, side1, ., intersect, (, back, ), ;, g2, ., setPaint, (, paint, )]
[;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side1, ), ;, g2, ., setPaint, (, outlinePaint]
[., intersect, (, back, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side1, ), ;]
[), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side1, ), ;, g2, ., setPaint, (]
[;, g2, ., fill, (, side1, ), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side1]
[., setPaint, (, paint, ), ;, g2, ., fill, (, side1, ), ;, g2, ., setPaint, (, outlinePaint, ), ;]
[), ;, g2, ., fill, (, side1, ), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (]
[;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side1, ), ;, }, if, (, drawFront, )]
[., fill, (, side1, ), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side1, ), ;]
[), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side1, ), ;, }, if, (, drawFront]
[;, g2, ., draw, (, side1, ), ;, }, if, (, drawFront, ), {, Area, side2, =, new, Area, (]
[., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side1, ), ;, }, if, (, drawFront, ), {, Area]
[), ;, g2, ., draw, (, side1, ), ;, }, if, (, drawFront, ), {, Area, side2, =, new, Area]
[;, }, if, (, drawFront, ), {, Area, side2, =, new, Area, (, new, Rectangle2D, ., Double, (, plotArea, .]
[., draw, (, side1, ), ;, }, if, (, drawFront, ), {, Area, side2, =, new, Area, (, new, Rectangle2D]
[), ;, }, if, (, drawFront, ), {, Area, side2, =, new, Area, (, new, Rectangle2D, ., Double, (, plotArea]
[), {, Area, side2, =, new, Area, (, new, Rectangle2D, ., Double, (, plotArea, ., getX, (, ), ,, plotArea]
[;, side2, ., intersect, (, front, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side2]
[), ;, side2, ., intersect, (, front, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (]
[,, plotArea, ., getY, (, ), ,, arc, ., getEndPoint, (, ), ., getX, (, ), -, plotArea, ., getX]
[., getX, (, ), ,, plotArea, ., getY, (, ), ,, arc, ., getEndPoint, (, ), ., getX, (, )]
[,, arc, ., getEndPoint, (, ), ., getX, (, ), -, plotArea, ., getX, (, ), ,, plotArea, ., getHeight]
[., getY, (, ), ,, arc, ., getEndPoint, (, ), ., getX, (, ), -, plotArea, ., getX, (, )]
[,, plotArea, ., getHeight, (, ), ), ), ;, side2, ., intersect, (, front, ), ;, g2, ., setPaint, (]
[-, plotArea, ., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side2, ., intersect, (, front]
[., getX, (, ), -, plotArea, ., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side2]
[., getEndPoint, (, ), ., getX, (, ), -, plotArea, ., getX, (, ), ,, plotArea, ., getHeight, (, )]
[,, plotArea, ., getHeight, (, ), ), ), ;, side2, ., intersect, (, front, ), ;, g2, ., setPaint, (]
[., getX, (, ), ,, plotArea, ., getHeight, (, ), ), ), ;, side2, ., intersect, (, front, ), ;]
[), ), ;, side2, ., intersect, (, front, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill]
[., getHeight, (, ), ), ), ;, side2, ., intersect, (, front, ), ;, g2, ., setPaint, (, paint, )]
[;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side2, ), ;, g2, ., setPaint, (, outlinePaint]
[., intersect, (, front, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side2, ), ;]
[), ;, g2, ., setPaint, (, paint, ), ;, g2, ., fill, (, side2, ), ;, g2, ., setPaint, (]
[;, g2, ., fill, (, side2, ), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side2]
[., setPaint, (, paint, ), ;, g2, ., fill, (, side2, ), ;, g2, ., setPaint, (, outlinePaint, ), ;]
[), ;, g2, ., fill, (, side2, ), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (]
[;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side2, ), ;, }, }, }, }, }]
[., fill, (, side2, ), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side2, ), ;]
[), ;, g2, ., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side2, ), ;, }, }, }, }]
[;, g2, ., draw, (, side2, ), ;, }, }, }, }, }, public, String, getPlotType, (, ), {, return]
[., setPaint, (, outlinePaint, ), ;, g2, ., draw, (, side2, ), ;, }, }, }, }, }, public, String]
[), ;, g2, ., draw, (, side2, ), ;, }, }, }, }, }, public, String, getPlotType, (, ), {]
[;, }, }, }, }, }, public, String, getPlotType, (, ), {, return, localizationResources, ., getString, (, "Pie_3D_Plot", ), ;]
[., draw, (, side2, ), ;, }, }, }, }, }, public, String, getPlotType, (, ), {, return, localizationResources, .]
[), ;, }, }, }, }, }, public, String, getPlotType, (, ), {, return, localizationResources, ., getString, (, "Pie_3D_Plot", )]
[;, }, private, boolean, isAngleAtFront, (, double, angle, ), {, return, (, Math, ., sin, (, Math, ., toRadians, (]
[., getString, (, "Pie_3D_Plot", ), ;, }, private, boolean, isAngleAtFront, (, double, angle, ), {, return, (, Math, ., sin]
[), ;, }, private, boolean, isAngleAtFront, (, double, angle, ), {, return, (, Math, ., sin, (, Math, ., toRadians]
[;, }, private, boolean, isAngleAtBack, (, double, angle, ), {, return, (, Math, ., sin, (, Math, ., toRadians, (]
[), ;, }, private, boolean, isAngleAtBack, (, double, angle, ), {, return, (, Math, ., sin, (, Math, ., toRadians]
[<, 0.0, ), ;, }, private, boolean, isAngleAtBack, (, double, angle, ), {, return, (, Math, ., sin, (, Math]
[., sin, (, Math, ., toRadians, (, angle, ), ), <, 0.0, ), ;, }, private, boolean, isAngleAtBack, (, double]
[), <, 0.0, ), ;, }, private, boolean, isAngleAtBack, (, double, angle, ), {, return, (, Math, ., sin, (]
[., toRadians, (, angle, ), ), <, 0.0, ), ;, }, private, boolean, isAngleAtBack, (, double, angle, ), {, return]
[), ), <, 0.0, ), ;, }, private, boolean, isAngleAtBack, (, double, angle, ), {, return, (, Math, ., sin]
[), ;, }, private, boolean, isAngleAtBack, (, double, angle, ), {, return, (, Math, ., sin, (, Math, ., toRadians]
[;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;]
[), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true]
[>, 0.0, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {]
[., sin, (, Math, ., toRadians, (, angle, ), ), >, 0.0, ), ;, }, public, boolean, equals, (, Object]
[), >, 0.0, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, )]
[., toRadians, (, angle, ), ), >, 0.0, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if]
[), ), >, 0.0, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this]
[), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, PiePlot3D, ), ), {, return, false, ;, }]
[==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, PiePlot3D, ), ), {, return, false]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, PiePlot3D, ), ), {, return, false, ;, }]
[;, }, if, (, !, (, obj, instanceof, PiePlot3D, ), ), {, return, false, ;, }, PiePlot3D, that, =, (]
[), {, return, false, ;, }, PiePlot3D, that, =, (, PiePlot3D, ), obj, ;, if, (, this, ., depthFactor, !=]
[), {, return, false, ;, }, PiePlot3D, that, =, (, PiePlot3D, ), obj, ;, if, (, this, ., depthFactor, !=]
[), ), {, return, false, ;, }, PiePlot3D, that, =, (, PiePlot3D, ), obj, ;, if, (, this, ., depthFactor]
[instanceof, PiePlot3D, ), ), {, return, false, ;, }, PiePlot3D, that, =, (, PiePlot3D, ), obj, ;, if, (, this]
[;, }, PiePlot3D, that, =, (, PiePlot3D, ), obj, ;, if, (, this, ., depthFactor, !=, that, ., depthFactor, )]
[;, if, (, this, ., depthFactor, !=, that, ., depthFactor, ), {, return, false, ;, }, if, (, this, .]
[;, if, (, this, ., depthFactor, !=, that, ., depthFactor, ), {, return, false, ;, }, if, (, this, .]
[), {, return, false, ;, }, if, (, this, ., darkerSides, !=, that, ., darkerSides, ), {, return, false, ;]
[!=, that, ., depthFactor, ), {, return, false, ;, }, if, (, this, ., darkerSides, !=, that, ., darkerSides, )]
[., depthFactor, !=, that, ., depthFactor, ), {, return, false, ;, }, if, (, this, ., darkerSides, !=, that, .]
[), {, return, false, ;, }, if, (, this, ., darkerSides, !=, that, ., darkerSides, ), {, return, false, ;]
[., depthFactor, ), {, return, false, ;, }, if, (, this, ., darkerSides, !=, that, ., darkerSides, ), {, return]
[;, }, if, (, this, ., darkerSides, !=, that, ., darkerSides, ), {, return, false, ;, }, return, super, .]
[), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, }]
[!=, that, ., darkerSides, ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, }]
[., darkerSides, !=, that, ., darkerSides, ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;]
[), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, }]
[., darkerSides, ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, }]
[;, }, return, super, ., equals, (, obj, ), ;, }, }]
[;, }, }]
[., equals, (, obj, ), ;, }, }]
[), ;, }, }]
