[;, protected, final, EnumeratedDistribution, <, Integer, >, innerDistribution, ;, public, EnumeratedIntegerDistribution, (, final, int, [, ], singletons, ,, final, double]
[,, singletons, ,, probabilities, ), ;, }, public, EnumeratedIntegerDistribution, (, final, RandomGenerator, rng, ,, final, int, [, ], singletons, ,]
[,, probabilities, ), ;, }, public, EnumeratedIntegerDistribution, (, final, RandomGenerator, rng, ,, final, int, [, ], singletons, ,, final, double]
[), ;, }, public, EnumeratedIntegerDistribution, (, final, RandomGenerator, rng, ,, final, int, [, ], singletons, ,, final, double, [, ]]
[), ;, if, (, singletons, ., length, !=, probabilities, ., length, ), {, throw, new, DimensionMismatchException, (, probabilities, ., length]
[), {, throw, new, DimensionMismatchException, (, probabilities, ., length, ,, singletons, ., length, ), ;, }, final, List, <, Pair]
[!=, probabilities, ., length, ), {, throw, new, DimensionMismatchException, (, probabilities, ., length, ,, singletons, ., length, ), ;, }]
[., length, !=, probabilities, ., length, ), {, throw, new, DimensionMismatchException, (, probabilities, ., length, ,, singletons, ., length, )]
[), {, throw, new, DimensionMismatchException, (, probabilities, ., length, ,, singletons, ., length, ), ;, }, final, List, <, Pair]
[., length, ), {, throw, new, DimensionMismatchException, (, probabilities, ., length, ,, singletons, ., length, ), ;, }, final, List]
[;, }, final, List, <, Pair, <, Integer, ,, Double, >, >, samples, =, new, ArrayList, <, Pair, <, Integer]
[,, singletons, ., length, ), ;, }, final, List, <, Pair, <, Integer, ,, Double, >, >, samples, =, new]
[., length, ,, singletons, ., length, ), ;, }, final, List, <, Pair, <, Integer, ,, Double, >, >, samples]
[), ;, }, final, List, <, Pair, <, Integer, ,, Double, >, >, samples, =, new, ArrayList, <, Pair, <]
[., length, ), ;, }, final, List, <, Pair, <, Integer, ,, Double, >, >, samples, =, new, ArrayList, <]
[;, for, (, int, i, =, 0, ;, i, <, singletons, ., length, ;, i, ++, ), {, samples, .]
[), ;, for, (, int, i, =, 0, ;, i, <, singletons, ., length, ;, i, ++, ), {, samples]
[., length, ), ;, for, (, int, i, =, 0, ;, i, <, singletons, ., length, ;, i, ++, )]
[;, i, <, singletons, ., length, ;, i, ++, ), {, samples, ., add, (, new, Pair, <, Integer, ,]
[;, i, ++, ), {, samples, ., add, (, new, Pair, <, Integer, ,, Double, >, (, singletons, [, i]
[<, singletons, ., length, ;, i, ++, ), {, samples, ., add, (, new, Pair, <, Integer, ,, Double, >]
[;, i, ++, ), {, samples, ., add, (, new, Pair, <, Integer, ,, Double, >, (, singletons, [, i]
[., length, ;, i, ++, ), {, samples, ., add, (, new, Pair, <, Integer, ,, Double, >, (, singletons]
[), {, samples, ., add, (, new, Pair, <, Integer, ,, Double, >, (, singletons, [, i, ], ,, probabilities]
[++, ), {, samples, ., add, (, new, Pair, <, Integer, ,, Double, >, (, singletons, [, i, ], ,]
[;, }, innerDistribution, =, new, EnumeratedDistribution, <, Integer, >, (, rng, ,, samples, ), ;, }, public, double, probability, (]
[., add, (, new, Pair, <, Integer, ,, Double, >, (, singletons, [, i, ], ,, probabilities, [, i, ]]
[), ;, }, innerDistribution, =, new, EnumeratedDistribution, <, Integer, >, (, rng, ,, samples, ), ;, }, public, double, probability]
[,, probabilities, [, i, ], ), ), ;, }, innerDistribution, =, new, EnumeratedDistribution, <, Integer, >, (, rng, ,, samples]
[[, i, ], ,, probabilities, [, i, ], ), ), ;, }, innerDistribution, =, new, EnumeratedDistribution, <, Integer, >, (]
[], ,, probabilities, [, i, ], ), ), ;, }, innerDistribution, =, new, EnumeratedDistribution, <, Integer, >, (, rng, ,]
[), ), ;, }, innerDistribution, =, new, EnumeratedDistribution, <, Integer, >, (, rng, ,, samples, ), ;, }, public, double]
[[, i, ], ), ), ;, }, innerDistribution, =, new, EnumeratedDistribution, <, Integer, >, (, rng, ,, samples, ), ;]
[], ), ), ;, }, innerDistribution, =, new, EnumeratedDistribution, <, Integer, >, (, rng, ,, samples, ), ;, }, public]
[=, new, EnumeratedDistribution, <, Integer, >, (, rng, ,, samples, ), ;, }, public, double, probability, (, final, int, x]
[;, }, public, double, probability, (, final, int, x, ), {, return, innerDistribution, ., probability, (, x, ), ;, }]
[,, samples, ), ;, }, public, double, probability, (, final, int, x, ), {, return, innerDistribution, ., probability, (, x]
[), ;, }, public, double, probability, (, final, int, x, ), {, return, innerDistribution, ., probability, (, x, ), ;]
[;, }, public, double, cumulativeProbability, (, final, int, x, ), {, double, probability, =, 0, ;, for, (, final, Pair]
[., probability, (, x, ), ;, }, public, double, cumulativeProbability, (, final, int, x, ), {, double, probability, =, 0]
[), ;, }, public, double, cumulativeProbability, (, final, int, x, ), {, double, probability, =, 0, ;, for, (, final]
[;, for, (, final, Pair, <, Integer, ,, Double, >, sample, :, innerDistribution, ., getPmf, (, ), ), {, if]
[), {, if, (, sample, ., getKey, (, ), <=, x, ), {, probability, +=, sample, ., getValue, (, )]
[., getPmf, (, ), ), {, if, (, sample, ., getKey, (, ), <=, x, ), {, probability, +=, sample]
[), {, probability, +=, sample, ., getValue, (, ), ;, }, }, return, probability, ;, }, public, double, getNumericalMean, (]
[<=, x, ), {, probability, +=, sample, ., getValue, (, ), ;, }, }, return, probability, ;, }, public, double]
[., getKey, (, ), <=, x, ), {, probability, +=, sample, ., getValue, (, ), ;, }, }, return, probability]
[), {, probability, +=, sample, ., getValue, (, ), ;, }, }, return, probability, ;, }, public, double, getNumericalMean, (]
[+=, sample, ., getValue, (, ), ;, }, }, return, probability, ;, }, public, double, getNumericalMean, (, ), {, double]
[;, }, }, return, probability, ;, }, public, double, getNumericalMean, (, ), {, double, mean, =, 0, ;, for, (]
[., getValue, (, ), ;, }, }, return, probability, ;, }, public, double, getNumericalMean, (, ), {, double, mean, =]
[;, }, public, double, getNumericalMean, (, ), {, double, mean, =, 0, ;, for, (, final, Pair, <, Integer, ,]
[;, for, (, final, Pair, <, Integer, ,, Double, >, sample, :, innerDistribution, ., getPmf, (, ), ), {, mean]
[), {, mean, +=, sample, ., getValue, (, ), *, sample, ., getKey, (, ), ;, }, return, mean, ;]
[., getPmf, (, ), ), {, mean, +=, sample, ., getValue, (, ), *, sample, ., getKey, (, ), ;]
[+=, sample, ., getValue, (, ), *, sample, ., getKey, (, ), ;, }, return, mean, ;, }, public, double]
[;, }, return, mean, ;, }, public, double, getNumericalVariance, (, ), {, double, mean, =, 0, ;, double, meanOfSquares, =]
[*, sample, ., getKey, (, ), ;, }, return, mean, ;, }, public, double, getNumericalVariance, (, ), {, double, mean]
[., getValue, (, ), *, sample, ., getKey, (, ), ;, }, return, mean, ;, }, public, double, getNumericalVariance, (]
[;, }, return, mean, ;, }, public, double, getNumericalVariance, (, ), {, double, mean, =, 0, ;, double, meanOfSquares, =]
[., getKey, (, ), ;, }, return, mean, ;, }, public, double, getNumericalVariance, (, ), {, double, mean, =, 0]
[;, }, public, double, getNumericalVariance, (, ), {, double, mean, =, 0, ;, double, meanOfSquares, =, 0, ;, for, (]
[;, double, meanOfSquares, =, 0, ;, for, (, final, Pair, <, Integer, ,, Double, >, sample, :, innerDistribution, ., getPmf]
[;, for, (, final, Pair, <, Integer, ,, Double, >, sample, :, innerDistribution, ., getPmf, (, ), ), {, mean]
[), {, mean, +=, sample, ., getValue, (, ), *, sample, ., getKey, (, ), ;, meanOfSquares, +=, sample, .]
[., getPmf, (, ), ), {, mean, +=, sample, ., getValue, (, ), *, sample, ., getKey, (, ), ;]
[+=, sample, ., getValue, (, ), *, sample, ., getKey, (, ), ;, meanOfSquares, +=, sample, ., getValue, (, )]
[;, meanOfSquares, +=, sample, ., getValue, (, ), *, sample, ., getKey, (, ), *, sample, ., getKey, (, )]
[*, sample, ., getKey, (, ), ;, meanOfSquares, +=, sample, ., getValue, (, ), *, sample, ., getKey, (, )]
[., getValue, (, ), *, sample, ., getKey, (, ), ;, meanOfSquares, +=, sample, ., getValue, (, ), *, sample]
[;, meanOfSquares, +=, sample, ., getValue, (, ), *, sample, ., getKey, (, ), *, sample, ., getKey, (, )]
[., getKey, (, ), ;, meanOfSquares, +=, sample, ., getValue, (, ), *, sample, ., getKey, (, ), *, sample]
[+=, sample, ., getValue, (, ), *, sample, ., getKey, (, ), *, sample, ., getKey, (, ), ;, }]
[;, }, return, meanOfSquares, -, mean, *, mean, ;, }, public, int, getSupportLowerBound, (, ), {, int, min, =, Integer]
[*, sample, ., getKey, (, ), ;, }, return, meanOfSquares, -, mean, *, mean, ;, }, public, int, getSupportLowerBound, (]
[*, sample, ., getKey, (, ), *, sample, ., getKey, (, ), ;, }, return, meanOfSquares, -, mean, *, mean]
[., getValue, (, ), *, sample, ., getKey, (, ), *, sample, ., getKey, (, ), ;, }, return, meanOfSquares]
[*, sample, ., getKey, (, ), ;, }, return, meanOfSquares, -, mean, *, mean, ;, }, public, int, getSupportLowerBound, (]
[., getKey, (, ), *, sample, ., getKey, (, ), ;, }, return, meanOfSquares, -, mean, *, mean, ;, }]
[;, }, return, meanOfSquares, -, mean, *, mean, ;, }, public, int, getSupportLowerBound, (, ), {, int, min, =, Integer]
[., getKey, (, ), ;, }, return, meanOfSquares, -, mean, *, mean, ;, }, public, int, getSupportLowerBound, (, ), {]
[;, }, public, int, getSupportLowerBound, (, ), {, int, min, =, Integer, ., MAX_VALUE, ;, for, (, final, Pair, <]
[-, mean, *, mean, ;, }, public, int, getSupportLowerBound, (, ), {, int, min, =, Integer, ., MAX_VALUE, ;, for]
[;, }, public, int, getSupportLowerBound, (, ), {, int, min, =, Integer, ., MAX_VALUE, ;, for, (, final, Pair, <]
[*, mean, ;, }, public, int, getSupportLowerBound, (, ), {, int, min, =, Integer, ., MAX_VALUE, ;, for, (, final]
[;, }, public, int, getSupportLowerBound, (, ), {, int, min, =, Integer, ., MAX_VALUE, ;, for, (, final, Pair, <]
[;, for, (, final, Pair, <, Integer, ,, Double, >, sample, :, innerDistribution, ., getPmf, (, ), ), {, if]
[., MAX_VALUE, ;, for, (, final, Pair, <, Integer, ,, Double, >, sample, :, innerDistribution, ., getPmf, (, ), )]
[), {, if, (, sample, ., getKey, (, ), <, min, &&, sample, ., getValue, (, ), >, 0, )]
[., getPmf, (, ), ), {, if, (, sample, ., getKey, (, ), <, min, &&, sample, ., getValue, (]
[), {, min, =, sample, ., getKey, (, ), ;, }, }, return, min, ;, }, public, int, getSupportUpperBound, (]
[&&, sample, ., getValue, (, ), >, 0, ), {, min, =, sample, ., getKey, (, ), ;, }, }]
[<, min, &&, sample, ., getValue, (, ), >, 0, ), {, min, =, sample, ., getKey, (, ), ;]
[., getKey, (, ), <, min, &&, sample, ., getValue, (, ), >, 0, ), {, min, =, sample, .]
[&&, sample, ., getValue, (, ), >, 0, ), {, min, =, sample, ., getKey, (, ), ;, }, }]
[), {, min, =, sample, ., getKey, (, ), ;, }, }, return, min, ;, }, public, int, getSupportUpperBound, (]
[>, 0, ), {, min, =, sample, ., getKey, (, ), ;, }, }, return, min, ;, }, public, int]
[., getValue, (, ), >, 0, ), {, min, =, sample, ., getKey, (, ), ;, }, }, return, min]
[), {, min, =, sample, ., getKey, (, ), ;, }, }, return, min, ;, }, public, int, getSupportUpperBound, (]
[=, sample, ., getKey, (, ), ;, }, }, return, min, ;, }, public, int, getSupportUpperBound, (, ), {, int]
[;, }, }, return, min, ;, }, public, int, getSupportUpperBound, (, ), {, int, max, =, Integer, ., MIN_VALUE, ;]
[., getKey, (, ), ;, }, }, return, min, ;, }, public, int, getSupportUpperBound, (, ), {, int, max, =]
[;, }, public, int, getSupportUpperBound, (, ), {, int, max, =, Integer, ., MIN_VALUE, ;, for, (, final, Pair, <]
[;, for, (, final, Pair, <, Integer, ,, Double, >, sample, :, innerDistribution, ., getPmf, (, ), ), {, if]
[., MIN_VALUE, ;, for, (, final, Pair, <, Integer, ,, Double, >, sample, :, innerDistribution, ., getPmf, (, ), )]
[), {, if, (, sample, ., getKey, (, ), >, max, &&, sample, ., getValue, (, ), >, 0, )]
[., getPmf, (, ), ), {, if, (, sample, ., getKey, (, ), >, max, &&, sample, ., getValue, (]
[), {, max, =, sample, ., getKey, (, ), ;, }, }, return, max, ;, }, public, boolean, isSupportConnected, (]
[&&, sample, ., getValue, (, ), >, 0, ), {, max, =, sample, ., getKey, (, ), ;, }, }]
[>, max, &&, sample, ., getValue, (, ), >, 0, ), {, max, =, sample, ., getKey, (, ), ;]
[., getKey, (, ), >, max, &&, sample, ., getValue, (, ), >, 0, ), {, max, =, sample, .]
[&&, sample, ., getValue, (, ), >, 0, ), {, max, =, sample, ., getKey, (, ), ;, }, }]
[), {, max, =, sample, ., getKey, (, ), ;, }, }, return, max, ;, }, public, boolean, isSupportConnected, (]
[>, 0, ), {, max, =, sample, ., getKey, (, ), ;, }, }, return, max, ;, }, public, boolean]
[., getValue, (, ), >, 0, ), {, max, =, sample, ., getKey, (, ), ;, }, }, return, max]
[), {, max, =, sample, ., getKey, (, ), ;, }, }, return, max, ;, }, public, boolean, isSupportConnected, (]
[=, sample, ., getKey, (, ), ;, }, }, return, max, ;, }, public, boolean, isSupportConnected, (, ), {, return]
[;, }, }, return, max, ;, }, public, boolean, isSupportConnected, (, ), {, return, true, ;, }, @, Override, public]
[., getKey, (, ), ;, }, }, return, max, ;, }, public, boolean, isSupportConnected, (, ), {, return, true, ;]
[;, }, public, boolean, isSupportConnected, (, ), {, return, true, ;, }, @, Override, public, int, sample, (, ), {]
[;, }, @, Override, public, int, sample, (, ), {, return, innerDistribution, ., sample, (, ), ;, }, }]
[;, }, }]
[., sample, (, ), ;, }, }]
