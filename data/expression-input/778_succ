[;, private, static, final, String, DEFAULT_SOURCE_NAME, =, "[[jsonmlsource]]", ;, private, JsonML, jsonml, ;, private, Node, root, ;, private, final, SourceFile]
[;, private, JsonML, jsonml, ;, private, Node, root, ;, private, final, SourceFile, sourceFile, ;, private, final, InputId, inputId, ;, public]
[=, jsonml, ;, this, ., inputId, =, new, InputId, (, getSourceName, (, ), ), ;, this, ., sourceFile, =, new]
[., jsonml, =, jsonml, ;, this, ., inputId, =, new, InputId, (, getSourceName, (, ), ), ;, this, ., sourceFile]
[;, this, ., inputId, =, new, InputId, (, getSourceName, (, ), ), ;, this, ., sourceFile, =, new, SourceFile, (]
[=, new, InputId, (, getSourceName, (, ), ), ;, this, ., sourceFile, =, new, SourceFile, (, getSourceName, (, ), )]
[., inputId, =, new, InputId, (, getSourceName, (, ), ), ;, this, ., sourceFile, =, new, SourceFile, (, getSourceName, (]
[;, this, ., sourceFile, =, new, SourceFile, (, getSourceName, (, ), ), ;, }, @, Override, public, void, clearAst, (]
[), ;, this, ., sourceFile, =, new, SourceFile, (, getSourceName, (, ), ), ;, }, @, Override, public, void, clearAst]
[=, new, SourceFile, (, getSourceName, (, ), ), ;, }, @, Override, public, void, clearAst, (, ), {, root, =]
[., sourceFile, =, new, SourceFile, (, getSourceName, (, ), ), ;, }, @, Override, public, void, clearAst, (, ), {]
[;, }, @, Override, public, void, clearAst, (, ), {, root, =, null, ;, }, @, Override, public, Node, getAstRoot]
[), ;, }, @, Override, public, void, clearAst, (, ), {, root, =, null, ;, }, @, Override, public, Node]
[=, null, ;, }, @, Override, public, Node, getAstRoot, (, AbstractCompiler, compiler, ), {, if, (, root, ==, null, )]
[;, }, @, Override, public, Node, getAstRoot, (, AbstractCompiler, compiler, ), {, if, (, root, ==, null, ), {, createAst]
[), {, createAst, (, compiler, ), ;, }, return, root, ;, }, @, Override, public, SourceFile, getSourceFile, (, ), {]
[==, null, ), {, createAst, (, compiler, ), ;, }, return, root, ;, }, @, Override, public, SourceFile, getSourceFile, (]
[), {, createAst, (, compiler, ), ;, }, return, root, ;, }, @, Override, public, SourceFile, getSourceFile, (, ), {]
[;, }, return, root, ;, }, @, Override, public, SourceFile, getSourceFile, (, ), {, return, null, ;, }, @, Override]
[), ;, }, return, root, ;, }, @, Override, public, SourceFile, getSourceFile, (, ), {, return, null, ;, }, @]
[;, }, @, Override, public, SourceFile, getSourceFile, (, ), {, return, null, ;, }, @, Override, public, void, setSourceFile, (]
[;, }, @, Override, public, void, setSourceFile, (, SourceFile, file, ), {, throw, new, UnsupportedOperationException, (, "JsonMLAst cannot be associated with a SourceFile instance.", ), ;, }]
[;, }, public, String, getSourceName, (, ), {, Object, obj, =, jsonml, ., getAttribute, (, TagAttr, ., SOURCE, ), ;]
[), ;, }, public, String, getSourceName, (, ), {, Object, obj, =, jsonml, ., getAttribute, (, TagAttr, ., SOURCE, )]
[;, if, (, obj, instanceof, String, ), {, return, (, String, ), obj, ;, }, else, {, return, DEFAULT_SOURCE_NAME, ;]
[., getAttribute, (, TagAttr, ., SOURCE, ), ;, if, (, obj, instanceof, String, ), {, return, (, String, ), obj]
[), ;, if, (, obj, instanceof, String, ), {, return, (, String, ), obj, ;, }, else, {, return, DEFAULT_SOURCE_NAME]
[., SOURCE, ), ;, if, (, obj, instanceof, String, ), {, return, (, String, ), obj, ;, }, else, {]
[), {, return, (, String, ), obj, ;, }, else, {, return, DEFAULT_SOURCE_NAME, ;, }, }, private, void, createAst, (]
[instanceof, String, ), {, return, (, String, ), obj, ;, }, else, {, return, DEFAULT_SOURCE_NAME, ;, }, }, private, void]
[;, }, else, {, return, DEFAULT_SOURCE_NAME, ;, }, }, private, void, createAst, (, AbstractCompiler, compiler, ), {, Reader, translator, =]
[;, }, else, {, return, DEFAULT_SOURCE_NAME, ;, }, }, private, void, createAst, (, AbstractCompiler, compiler, ), {, Reader, translator, =]
[;, }, }, private, void, createAst, (, AbstractCompiler, compiler, ), {, Reader, translator, =, new, Reader, (, ), ;, translator]
[;, translator, ., setRootElement, (, jsonml, ), ;, try, {, root, =, translator, ., parse, (, compiler, ), ;, root]
[;, try, {, root, =, translator, ., parse, (, compiler, ), ;, root, ., setInputId, (, inputId, ), ;, root]
[., setRootElement, (, jsonml, ), ;, try, {, root, =, translator, ., parse, (, compiler, ), ;, root, ., setInputId]
[), ;, try, {, root, =, translator, ., parse, (, compiler, ), ;, root, ., setInputId, (, inputId, ), ;]
[=, translator, ., parse, (, compiler, ), ;, root, ., setInputId, (, inputId, ), ;, root, ., setStaticSourceFile, (, sourceFile]
[;, root, ., setInputId, (, inputId, ), ;, root, ., setStaticSourceFile, (, sourceFile, ), ;, new, AstValidator, (, ), .]
[., parse, (, compiler, ), ;, root, ., setInputId, (, inputId, ), ;, root, ., setStaticSourceFile, (, sourceFile, ), ;]
[), ;, root, ., setInputId, (, inputId, ), ;, root, ., setStaticSourceFile, (, sourceFile, ), ;, new, AstValidator, (, )]
[;, root, ., setStaticSourceFile, (, sourceFile, ), ;, new, AstValidator, (, ), ., validateScript, (, root, ), ;, }, catch]
[., setInputId, (, inputId, ), ;, root, ., setStaticSourceFile, (, sourceFile, ), ;, new, AstValidator, (, ), ., validateScript, (]
[), ;, root, ., setStaticSourceFile, (, sourceFile, ), ;, new, AstValidator, (, ), ., validateScript, (, root, ), ;, }]
[;, new, AstValidator, (, ), ., validateScript, (, root, ), ;, }, catch, (, JsonMLException, e, ), {, }, }]
[., setStaticSourceFile, (, sourceFile, ), ;, new, AstValidator, (, ), ., validateScript, (, root, ), ;, }, catch, (, JsonMLException]
[), ;, new, AstValidator, (, ), ., validateScript, (, root, ), ;, }, catch, (, JsonMLException, e, ), {, }]
[;, }, catch, (, JsonMLException, e, ), {, }, }, public, JsonML, convertToJsonML, (, ), {, if, (, root, !=]
[., validateScript, (, root, ), ;, }, catch, (, JsonMLException, e, ), {, }, }, public, JsonML, convertToJsonML, (, )]
[), ;, }, catch, (, JsonMLException, e, ), {, }, }, public, JsonML, convertToJsonML, (, ), {, if, (, root]
[), {, Writer, converter, =, new, Writer, (, ), ;, return, converter, ., processAst, (, root, ), ;, }, return]
[!=, null, ), {, Writer, converter, =, new, Writer, (, ), ;, return, converter, ., processAst, (, root, ), ;]
[), {, Writer, converter, =, new, Writer, (, ), ;, return, converter, ., processAst, (, root, ), ;, }, return]
[;, return, converter, ., processAst, (, root, ), ;, }, return, null, ;, }, public, JsonML, getElementPreOrder, (, int, n]
[;, }, return, null, ;, }, public, JsonML, getElementPreOrder, (, int, n, ), {, Preconditions, ., checkState, (, jsonml, !=]
[., processAst, (, root, ), ;, }, return, null, ;, }, public, JsonML, getElementPreOrder, (, int, n, ), {, Preconditions]
[), ;, }, return, null, ;, }, public, JsonML, getElementPreOrder, (, int, n, ), {, Preconditions, ., checkState, (, jsonml]
[;, }, public, JsonML, getElementPreOrder, (, int, n, ), {, Preconditions, ., checkState, (, jsonml, !=, null, ), ;, if]
[;, if, (, n, ==, 0, ), {, return, jsonml, ;, }, Deque, <, WalkHelper, >, stack, =, new, ArrayDeque]
[., checkState, (, jsonml, !=, null, ), ;, if, (, n, ==, 0, ), {, return, jsonml, ;, }, Deque]
[), ;, if, (, n, ==, 0, ), {, return, jsonml, ;, }, Deque, <, WalkHelper, >, stack, =, new]
[!=, null, ), ;, if, (, n, ==, 0, ), {, return, jsonml, ;, }, Deque, <, WalkHelper, >, stack]
[), ;, if, (, n, ==, 0, ), {, return, jsonml, ;, }, Deque, <, WalkHelper, >, stack, =, new]
[), {, return, jsonml, ;, }, Deque, <, WalkHelper, >, stack, =, new, ArrayDeque, <, WalkHelper, >, (, ), ;]
[==, 0, ), {, return, jsonml, ;, }, Deque, <, WalkHelper, >, stack, =, new, ArrayDeque, <, WalkHelper, >, (]
[), {, return, jsonml, ;, }, Deque, <, WalkHelper, >, stack, =, new, ArrayDeque, <, WalkHelper, >, (, ), ;]
[;, }, Deque, <, WalkHelper, >, stack, =, new, ArrayDeque, <, WalkHelper, >, (, ), ;, stack, ., push, (]
[;, stack, ., push, (, new, WalkHelper, (, jsonml, ,, 0, ), ), ;, int, i, =, 0, ;, while]
[;, int, i, =, 0, ;, while, (, i, <=, n, &&, !, stack, ., isEmpty, (, ), ), {]
[., push, (, new, WalkHelper, (, jsonml, ,, 0, ), ), ;, int, i, =, 0, ;, while, (, i]
[), ;, int, i, =, 0, ;, while, (, i, <=, n, &&, !, stack, ., isEmpty, (, ), )]
[,, 0, ), ), ;, int, i, =, 0, ;, while, (, i, <=, n, &&, !, stack, ., isEmpty]
[), ), ;, int, i, =, 0, ;, while, (, i, <=, n, &&, !, stack, ., isEmpty, (, )]
[;, while, (, i, <=, n, &&, !, stack, ., isEmpty, (, ), ), {, WalkHelper, current, =, stack, .]
[), {, WalkHelper, current, =, stack, ., pop, (, ), ;, JsonML, element, =, current, ., element, ;, Integer, childno]
[&&, !, stack, ., isEmpty, (, ), ), {, WalkHelper, current, =, stack, ., pop, (, ), ;, JsonML, element]
[<=, n, &&, !, stack, ., isEmpty, (, ), ), {, WalkHelper, current, =, stack, ., pop, (, ), ;]
[&&, !, stack, ., isEmpty, (, ), ), {, WalkHelper, current, =, stack, ., pop, (, ), ;, JsonML, element]
[), {, WalkHelper, current, =, stack, ., pop, (, ), ;, JsonML, element, =, current, ., element, ;, Integer, childno]
[), {, WalkHelper, current, =, stack, ., pop, (, ), ;, JsonML, element, =, current, ., element, ;, Integer, childno]
[., isEmpty, (, ), ), {, WalkHelper, current, =, stack, ., pop, (, ), ;, JsonML, element, =, current, .]
[;, JsonML, element, =, current, ., element, ;, Integer, childno, =, current, ., childno, ;, if, (, childno, <, element]
[., pop, (, ), ;, JsonML, element, =, current, ., element, ;, Integer, childno, =, current, ., childno, ;, if]
[;, Integer, childno, =, current, ., childno, ;, if, (, childno, <, element, ., childrenSize, (, ), ), {, stack]
[., element, ;, Integer, childno, =, current, ., childno, ;, if, (, childno, <, element, ., childrenSize, (, ), )]
[;, if, (, childno, <, element, ., childrenSize, (, ), ), {, stack, ., push, (, new, WalkHelper, (, element]
[., childno, ;, if, (, childno, <, element, ., childrenSize, (, ), ), {, stack, ., push, (, new, WalkHelper]
[), {, stack, ., push, (, new, WalkHelper, (, element, ,, childno, +, 1, ), ), ;, i, ++, ;]
[<, element, ., childrenSize, (, ), ), {, stack, ., push, (, new, WalkHelper, (, element, ,, childno, +, 1]
[), {, stack, ., push, (, new, WalkHelper, (, element, ,, childno, +, 1, ), ), ;, i, ++, ;]
[., childrenSize, (, ), ), {, stack, ., push, (, new, WalkHelper, (, element, ,, childno, +, 1, ), )]
[;, i, ++, ;, element, =, element, ., getChild, (, childno, ), ;, if, (, i, ==, n, ), {]
[., push, (, new, WalkHelper, (, element, ,, childno, +, 1, ), ), ;, i, ++, ;, element, =, element]
[), ;, i, ++, ;, element, =, element, ., getChild, (, childno, ), ;, if, (, i, ==, n, )]
[,, childno, +, 1, ), ), ;, i, ++, ;, element, =, element, ., getChild, (, childno, ), ;, if]
[), ), ;, i, ++, ;, element, =, element, ., getChild, (, childno, ), ;, if, (, i, ==, n]
[+, 1, ), ), ;, i, ++, ;, element, =, element, ., getChild, (, childno, ), ;, if, (, i]
[), ), ;, i, ++, ;, element, =, element, ., getChild, (, childno, ), ;, if, (, i, ==, n]
[;, element, =, element, ., getChild, (, childno, ), ;, if, (, i, ==, n, ), {, return, element, ;]
[++, ;, element, =, element, ., getChild, (, childno, ), ;, if, (, i, ==, n, ), {, return, element]
[=, element, ., getChild, (, childno, ), ;, if, (, i, ==, n, ), {, return, element, ;, }, stack]
[;, if, (, i, ==, n, ), {, return, element, ;, }, stack, ., push, (, new, WalkHelper, (, element]
[., getChild, (, childno, ), ;, if, (, i, ==, n, ), {, return, element, ;, }, stack, ., push]
[), ;, if, (, i, ==, n, ), {, return, element, ;, }, stack, ., push, (, new, WalkHelper, (]
[), {, return, element, ;, }, stack, ., push, (, new, WalkHelper, (, element, ,, 0, ), ), ;, }]
[==, n, ), {, return, element, ;, }, stack, ., push, (, new, WalkHelper, (, element, ,, 0, ), )]
[), {, return, element, ;, }, stack, ., push, (, new, WalkHelper, (, element, ,, 0, ), ), ;, }]
[;, }, stack, ., push, (, new, WalkHelper, (, element, ,, 0, ), ), ;, }, }, return, null, ;]
[;, }, }, return, null, ;, }, private, static, class, WalkHelper, {, final, JsonML, element, ;, final, int, childno, ;]
[., push, (, new, WalkHelper, (, element, ,, 0, ), ), ;, }, }, return, null, ;, }, private, static]
[), ;, }, }, return, null, ;, }, private, static, class, WalkHelper, {, final, JsonML, element, ;, final, int, childno]
[,, 0, ), ), ;, }, }, return, null, ;, }, private, static, class, WalkHelper, {, final, JsonML, element, ;]
[), ), ;, }, }, return, null, ;, }, private, static, class, WalkHelper, {, final, JsonML, element, ;, final, int]
[;, }, private, static, class, WalkHelper, {, final, JsonML, element, ;, final, int, childno, ;, WalkHelper, (, JsonML, element, ,]
[=, element, ;, this, ., childno, =, childno, ;, }, }, @, Override, public, InputId, getInputId, (, ), {, return]
[., element, =, element, ;, this, ., childno, =, childno, ;, }, }, @, Override, public, InputId, getInputId, (, )]
[;, this, ., childno, =, childno, ;, }, }, @, Override, public, InputId, getInputId, (, ), {, return, inputId, ;]
[=, childno, ;, }, }, @, Override, public, InputId, getInputId, (, ), {, return, inputId, ;, }, }]
[., childno, =, childno, ;, }, }, @, Override, public, InputId, getInputId, (, ), {, return, inputId, ;, }, }]
[;, }, }, @, Override, public, InputId, getInputId, (, ), {, return, inputId, ;, }, }]
[;, }, }]
