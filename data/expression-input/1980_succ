[;, private, final, DurationFieldType, iType, ;, protected, BaseDurationField, (, DurationFieldType, type, ), {, super, (, ), ;, if, (, type]
[;, private, final, DurationFieldType, iType, ;, protected, BaseDurationField, (, DurationFieldType, type, ), {, super, (, ), ;, if, (, type]
[), {, throw, new, IllegalArgumentException, (, "The type must not be null", ), ;, }, iType, =, type, ;, }, public, final, DurationFieldType, getType, (]
[==, null, ), {, throw, new, IllegalArgumentException, (, "The type must not be null", ), ;, }, iType, =, type, ;, }, public, final, DurationFieldType]
[), {, throw, new, IllegalArgumentException, (, "The type must not be null", ), ;, }, iType, =, type, ;, }, public, final, DurationFieldType, getType, (]
[;, }, iType, =, type, ;, }, public, final, DurationFieldType, getType, (, ), {, return, iType, ;, }, public, final]
[), ;, }, iType, =, type, ;, }, public, final, DurationFieldType, getType, (, ), {, return, iType, ;, }, public]
[=, type, ;, }, public, final, DurationFieldType, getType, (, ), {, return, iType, ;, }, public, final, String, getName, (]
[;, }, public, final, DurationFieldType, getType, (, ), {, return, iType, ;, }, public, final, String, getName, (, ), {]
[;, }, public, final, String, getName, (, ), {, return, iType, ., getName, (, ), ;, }, public, final, boolean]
[;, }, public, final, boolean, isSupported, (, ), {, return, true, ;, }, public, int, getValue, (, long, duration, )]
[., getName, (, ), ;, }, public, final, boolean, isSupported, (, ), {, return, true, ;, }, public, int, getValue]
[;, }, public, int, getValue, (, long, duration, ), {, return, FieldUtils, ., safeToInt, (, getValueAsLong, (, duration, ), )]
[;, }, public, long, getValueAsLong, (, long, duration, ), {, return, duration, /, getUnitMillis, (, ), ;, }, public, int]
[., safeToInt, (, getValueAsLong, (, duration, ), ), ;, }, public, long, getValueAsLong, (, long, duration, ), {, return, duration]
[), ;, }, public, long, getValueAsLong, (, long, duration, ), {, return, duration, /, getUnitMillis, (, ), ;, }, public]
[), ), ;, }, public, long, getValueAsLong, (, long, duration, ), {, return, duration, /, getUnitMillis, (, ), ;, }]
[;, }, public, int, getValue, (, long, duration, ,, long, instant, ), {, return, FieldUtils, ., safeToInt, (, getValueAsLong, (]
[/, getUnitMillis, (, ), ;, }, public, int, getValue, (, long, duration, ,, long, instant, ), {, return, FieldUtils, .]
[;, }, public, int, getValue, (, long, duration, ,, long, instant, ), {, return, FieldUtils, ., safeToInt, (, getValueAsLong, (]
[;, }, public, long, getMillis, (, int, value, ), {, return, value, *, getUnitMillis, (, ), ;, }, public, long]
[., safeToInt, (, getValueAsLong, (, duration, ,, instant, ), ), ;, }, public, long, getMillis, (, int, value, ), {]
[), ;, }, public, long, getMillis, (, int, value, ), {, return, value, *, getUnitMillis, (, ), ;, }, public]
[,, instant, ), ), ;, }, public, long, getMillis, (, int, value, ), {, return, value, *, getUnitMillis, (, )]
[), ), ;, }, public, long, getMillis, (, int, value, ), {, return, value, *, getUnitMillis, (, ), ;, }]
[;, }, public, long, getMillis, (, long, value, ), {, return, FieldUtils, ., safeMultiply, (, value, ,, getUnitMillis, (, )]
[*, getUnitMillis, (, ), ;, }, public, long, getMillis, (, long, value, ), {, return, FieldUtils, ., safeMultiply, (, value]
[;, }, public, long, getMillis, (, long, value, ), {, return, FieldUtils, ., safeMultiply, (, value, ,, getUnitMillis, (, )]
[;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, FieldUtils, ., safeToInt, (, getDifferenceAsLong, (]
[., safeMultiply, (, value, ,, getUnitMillis, (, ), ), ;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant]
[,, getUnitMillis, (, ), ), ;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, FieldUtils]
[), ;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, FieldUtils, ., safeToInt, (, getDifferenceAsLong]
[;, }, public, int, compareTo, (, DurationField, otherField, ), {, long, otherMillis, =, otherField, ., getUnitMillis, (, ), ;, long]
[., safeToInt, (, getDifferenceAsLong, (, minuendInstant, ,, subtrahendInstant, ), ), ;, }, public, int, compareTo, (, DurationField, otherField, ), {]
[), ;, }, public, int, compareTo, (, DurationField, otherField, ), {, long, otherMillis, =, otherField, ., getUnitMillis, (, ), ;]
[,, subtrahendInstant, ), ), ;, }, public, int, compareTo, (, DurationField, otherField, ), {, long, otherMillis, =, otherField, ., getUnitMillis]
[), ), ;, }, public, int, compareTo, (, DurationField, otherField, ), {, long, otherMillis, =, otherField, ., getUnitMillis, (, )]
[;, long, thisMillis, =, getUnitMillis, (, ), ;, if, (, thisMillis, ==, otherMillis, ), {, return, 0, ;, }, if]
[., getUnitMillis, (, ), ;, long, thisMillis, =, getUnitMillis, (, ), ;, if, (, thisMillis, ==, otherMillis, ), {, return]
[;, if, (, thisMillis, ==, otherMillis, ), {, return, 0, ;, }, if, (, thisMillis, <, otherMillis, ), {, return]
[), {, return, 0, ;, }, if, (, thisMillis, <, otherMillis, ), {, return, -, 1, ;, }, else, {]
[==, otherMillis, ), {, return, 0, ;, }, if, (, thisMillis, <, otherMillis, ), {, return, -, 1, ;, }]
[), {, return, 0, ;, }, if, (, thisMillis, <, otherMillis, ), {, return, -, 1, ;, }, else, {]
[;, }, if, (, thisMillis, <, otherMillis, ), {, return, -, 1, ;, }, else, {, return, 1, ;, }]
[), {, return, -, 1, ;, }, else, {, return, 1, ;, }, }, public, String, toString, (, ), {]
[<, otherMillis, ), {, return, -, 1, ;, }, else, {, return, 1, ;, }, }, public, String, toString, (]
[), {, return, -, 1, ;, }, else, {, return, 1, ;, }, }, public, String, toString, (, ), {]
[;, }, else, {, return, 1, ;, }, }, public, String, toString, (, ), {, return, "DurationField[", +, getName, (]
[;, }, else, {, return, 1, ;, }, }, public, String, toString, (, ), {, return, "DurationField[", +, getName, (]
[;, }, }, public, String, toString, (, ), {, return, "DurationField[", +, getName, (, ), +, ']', ;, }, }]
[;, }, }]
[+, ']', ;, }, }]
[+, getName, (, ), +, ']', ;, }, }]
[+, ']', ;, }, }]
[;, }, }]
