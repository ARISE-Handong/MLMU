[;, private, double, viewY, ;, private, double, viewW, ;, private, double, viewH, ;, public, DialPlot, (, ), {, this, (]
[viewH, ;, public, DialPlot, (, ), {, this, (, null, ), ;, }, public, DialPlot, (, ValueDataset, dataset, ), {]
[viewH, ;, public, DialPlot, (, ), {, this, (, null, ), ;, }, public, DialPlot, (, ValueDataset, dataset, ), {]
[(, ), {, this, (, null, ), ;, }, public, DialPlot, (, ValueDataset, dataset, ), {, this, ., background, =]
[{, this, (, null, ), ;, }, public, DialPlot, (, ValueDataset, dataset, ), {, this, ., background, =, null, ;]
[{, this, (, null, ), ;, }, public, DialPlot, (, ValueDataset, dataset, ), {, this, ., background, =, null, ;]
[), ;, }, public, DialPlot, (, ValueDataset, dataset, ), {, this, ., background, =, null, ;, this, ., cap, =]
[}, public, DialPlot, (, ValueDataset, dataset, ), {, this, ., background, =, null, ;, this, ., cap, =, null, ;]
[}, public, DialPlot, (, ValueDataset, dataset, ), {, this, ., background, =, null, ;, this, ., cap, =, null, ;]
[ValueDataset, dataset, ), {, this, ., background, =, null, ;, this, ., cap, =, null, ;, this, ., dialFrame, =]
[., background, =, null, ;, this, ., cap, =, null, ;, this, ., dialFrame, =, new, ArcDialFrame, (, ), ;]
[., background, =, null, ;, this, ., cap, =, null, ;, this, ., dialFrame, =, new, ArcDialFrame, (, ), ;]
[;, this, ., cap, =, null, ;, this, ., dialFrame, =, new, ArcDialFrame, (, ), ;, this, ., datasets, =]
[this, ., dialFrame, =, new, ArcDialFrame, (, ), ;, this, ., datasets, =, new, ObjectList, (, ), ;, if, (]
[this, ., dialFrame, =, new, ArcDialFrame, (, ), ;, this, ., datasets, =, new, ObjectList, (, ), ;, if, (]
[dialFrame, =, new, ArcDialFrame, (, ), ;, this, ., datasets, =, new, ObjectList, (, ), ;, if, (, dataset, !=]
[ArcDialFrame, (, ), ;, this, ., datasets, =, new, ObjectList, (, ), ;, if, (, dataset, !=, null, ), {]
[), ;, this, ., datasets, =, new, ObjectList, (, ), ;, if, (, dataset, !=, null, ), {, setDataset, (]
[datasets, =, new, ObjectList, (, ), ;, if, (, dataset, !=, null, ), {, setDataset, (, dataset, ), ;, }]
[datasets, =, new, ObjectList, (, ), ;, if, (, dataset, !=, null, ), {, setDataset, (, dataset, ), ;, }]
[(, ), ;, if, (, dataset, !=, null, ), {, setDataset, (, dataset, ), ;, }, this, ., scales, =]
[dataset, !=, null, ), {, setDataset, (, dataset, ), ;, }, this, ., scales, =, new, ObjectList, (, ), ;]
[dataset, !=, null, ), {, setDataset, (, dataset, ), ;, }, this, ., scales, =, new, ObjectList, (, ), ;]
[{, setDataset, (, dataset, ), ;, }, this, ., scales, =, new, ObjectList, (, ), ;, this, ., datasetToScaleMap, =]
[;, }, this, ., scales, =, new, ObjectList, (, ), ;, this, ., datasetToScaleMap, =, new, ObjectList, (, ), ;]
[;, }, this, ., scales, =, new, ObjectList, (, ), ;, this, ., datasetToScaleMap, =, new, ObjectList, (, ), ;]
[scales, =, new, ObjectList, (, ), ;, this, ., datasetToScaleMap, =, new, ObjectList, (, ), ;, this, ., layers, =]
[datasetToScaleMap, =, new, ObjectList, (, ), ;, this, ., layers, =, new, java, ., util, ., ArrayList, (, ), ;]
[datasetToScaleMap, =, new, ObjectList, (, ), ;, this, ., layers, =, new, java, ., util, ., ArrayList, (, ), ;]
[(, ), ;, this, ., layers, =, new, java, ., util, ., ArrayList, (, ), ;, this, ., pointers, =]
[., util, ., ArrayList, (, ), ;, this, ., pointers, =, new, java, ., util, ., ArrayList, (, ), ;]
[., util, ., ArrayList, (, ), ;, this, ., pointers, =, new, java, ., util, ., ArrayList, (, ), ;]
[(, ), ;, this, ., pointers, =, new, java, ., util, ., ArrayList, (, ), ;, this, ., viewX, =]
[;, this, ., pointers, =, new, java, ., util, ., ArrayList, (, ), ;, this, ., viewX, =, 0.0, ;]
[;, this, ., pointers, =, new, java, ., util, ., ArrayList, (, ), ;, this, ., viewX, =, 0.0, ;]
[=, new, java, ., util, ., ArrayList, (, ), ;, this, ., viewX, =, 0.0, ;, this, ., viewY, =]
[java, ., util, ., ArrayList, (, ), ;, this, ., viewX, =, 0.0, ;, this, ., viewY, =, 0.0, ;]
[java, ., util, ., ArrayList, (, ), ;, this, ., viewX, =, 0.0, ;, this, ., viewY, =, 0.0, ;]
[ArrayList, (, ), ;, this, ., viewX, =, 0.0, ;, this, ., viewY, =, 0.0, ;, this, ., viewW, =]
[), ;, this, ., viewX, =, 0.0, ;, this, ., viewY, =, 0.0, ;, this, ., viewW, =, 1.0, ;]
[), ;, this, ., viewX, =, 0.0, ;, this, ., viewY, =, 0.0, ;, this, ., viewW, =, 1.0, ;]
[viewX, =, 0.0, ;, this, ., viewY, =, 0.0, ;, this, ., viewW, =, 1.0, ;, this, ., viewH, =]
[this, ., viewW, =, 1.0, ;, this, ., viewH, =, 1.0, ;, }, public, DialLayer, getBackground, (, ), {, return]
[this, ., viewW, =, 1.0, ;, this, ., viewH, =, 1.0, ;, }, public, DialLayer, getBackground, (, ), {, return]
[getBackground, (, ), {, return, this, ., background, ;, }, public, void, setBackground, (, DialLayer, background, ), {, if, (]
[getBackground, (, ), {, return, this, ., background, ;, }, public, void, setBackground, (, DialLayer, background, ), {, if, (]
[getBackground, (, ), {, return, this, ., background, ;, }, public, void, setBackground, (, DialLayer, background, ), {, if, (]
[return, this, ., background, ;, }, public, void, setBackground, (, DialLayer, background, ), {, if, (, this, ., background, !=]
[background, ;, }, public, void, setBackground, (, DialLayer, background, ), {, if, (, this, ., background, !=, null, ), {]
[background, ;, }, public, void, setBackground, (, DialLayer, background, ), {, if, (, this, ., background, !=, null, ), {]
[background, ;, }, public, void, setBackground, (, DialLayer, background, ), {, if, (, this, ., background, !=, null, ), {]
[(, DialLayer, background, ), {, if, (, this, ., background, !=, null, ), {, this, ., background, ., removeChangeListener, (]
[{, if, (, this, ., background, !=, null, ), {, this, ., background, ., removeChangeListener, (, this, ), ;, }]
[{, if, (, this, ., background, !=, null, ), {, this, ., background, ., removeChangeListener, (, this, ), ;, }]
[., background, !=, null, ), {, this, ., background, ., removeChangeListener, (, this, ), ;, }, this, ., background, =]
[), {, this, ., background, ., removeChangeListener, (, this, ), ;, }, this, ., background, =, background, ;, if, (]
[), {, this, ., background, ., removeChangeListener, (, this, ), ;, }, this, ., background, =, background, ;, if, (]
[this, ., background, ., removeChangeListener, (, this, ), ;, }, this, ., background, =, background, ;, if, (, background, !=]
[., removeChangeListener, (, this, ), ;, }, this, ., background, =, background, ;, if, (, background, !=, null, ), {]
[., removeChangeListener, (, this, ), ;, }, this, ., background, =, background, ;, if, (, background, !=, null, ), {]
[), ;, }, this, ., background, =, background, ;, if, (, background, !=, null, ), {, background, ., addChangeListener, (]
[., background, =, background, ;, if, (, background, !=, null, ), {, background, ., addChangeListener, (, this, ), ;, }]
[background, ., addChangeListener, (, this, ), ;, }, fireChangeEvent, (, ), ;, }, public, DialLayer, getCap, (, ), {, return]
[background, ., addChangeListener, (, this, ), ;, }, fireChangeEvent, (, ), ;, }, public, DialLayer, getCap, (, ), {, return]
[getCap, (, ), {, return, this, ., cap, ;, }, public, void, setCap, (, DialLayer, cap, ), {, if, (]
[getCap, (, ), {, return, this, ., cap, ;, }, public, void, setCap, (, DialLayer, cap, ), {, if, (]
[getCap, (, ), {, return, this, ., cap, ;, }, public, void, setCap, (, DialLayer, cap, ), {, if, (]
[return, this, ., cap, ;, }, public, void, setCap, (, DialLayer, cap, ), {, if, (, this, ., cap, !=]
[cap, ;, }, public, void, setCap, (, DialLayer, cap, ), {, if, (, this, ., cap, !=, null, ), {]
[cap, ;, }, public, void, setCap, (, DialLayer, cap, ), {, if, (, this, ., cap, !=, null, ), {]
[cap, ;, }, public, void, setCap, (, DialLayer, cap, ), {, if, (, this, ., cap, !=, null, ), {]
[(, DialLayer, cap, ), {, if, (, this, ., cap, !=, null, ), {, this, ., cap, ., removeChangeListener, (]
[{, if, (, this, ., cap, !=, null, ), {, this, ., cap, ., removeChangeListener, (, this, ), ;, }]
[{, if, (, this, ., cap, !=, null, ), {, this, ., cap, ., removeChangeListener, (, this, ), ;, }]
[., cap, !=, null, ), {, this, ., cap, ., removeChangeListener, (, this, ), ;, }, this, ., cap, =]
[), {, this, ., cap, ., removeChangeListener, (, this, ), ;, }, this, ., cap, =, cap, ;, if, (]
[), {, this, ., cap, ., removeChangeListener, (, this, ), ;, }, this, ., cap, =, cap, ;, if, (]
[this, ., cap, ., removeChangeListener, (, this, ), ;, }, this, ., cap, =, cap, ;, if, (, cap, !=]
[., removeChangeListener, (, this, ), ;, }, this, ., cap, =, cap, ;, if, (, cap, !=, null, ), {]
[., removeChangeListener, (, this, ), ;, }, this, ., cap, =, cap, ;, if, (, cap, !=, null, ), {]
[), ;, }, this, ., cap, =, cap, ;, if, (, cap, !=, null, ), {, cap, ., addChangeListener, (]
[., cap, =, cap, ;, if, (, cap, !=, null, ), {, cap, ., addChangeListener, (, this, ), ;, }]
[cap, ., addChangeListener, (, this, ), ;, }, fireChangeEvent, (, ), ;, }, public, DialFrame, getDialFrame, (, ), {, return]
[cap, ., addChangeListener, (, this, ), ;, }, fireChangeEvent, (, ), ;, }, public, DialFrame, getDialFrame, (, ), {, return]
[getDialFrame, (, ), {, return, this, ., dialFrame, ;, }, public, void, setDialFrame, (, DialFrame, frame, ), {, if, (]
[getDialFrame, (, ), {, return, this, ., dialFrame, ;, }, public, void, setDialFrame, (, DialFrame, frame, ), {, if, (]
[), {, return, this, ., dialFrame, ;, }, public, void, setDialFrame, (, DialFrame, frame, ), {, if, (, frame, ==]
[., dialFrame, ;, }, public, void, setDialFrame, (, DialFrame, frame, ), {, if, (, frame, ==, null, ), {, throw]
[}, public, void, setDialFrame, (, DialFrame, frame, ), {, if, (, frame, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, DialFrame, frame, ), {, if, (, frame, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'frame' argument.", ), ;, }]
[(, DialFrame, frame, ), {, if, (, frame, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'frame' argument.", ), ;, }]
[(, DialFrame, frame, ), {, if, (, frame, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'frame' argument.", ), ;, }]
[(, frame, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'frame' argument.", ), ;, }, this, ., dialFrame, ., removeChangeListener, (]
[null, ), {, throw, new, IllegalArgumentException, (, "Null 'frame' argument.", ), ;, }, this, ., dialFrame, ., removeChangeListener, (, this, ), ;]
[null, ), {, throw, new, IllegalArgumentException, (, "Null 'frame' argument.", ), ;, }, this, ., dialFrame, ., removeChangeListener, (, this, ), ;]
[new, IllegalArgumentException, (, "Null 'frame' argument.", ), ;, }, this, ., dialFrame, ., removeChangeListener, (, this, ), ;, this, ., dialFrame, =]
[(, "Null 'frame' argument.", ), ;, }, this, ., dialFrame, ., removeChangeListener, (, this, ), ;, this, ., dialFrame, =, frame, ;]
[(, "Null 'frame' argument.", ), ;, }, this, ., dialFrame, ., removeChangeListener, (, this, ), ;, this, ., dialFrame, =, frame, ;]
[}, this, ., dialFrame, ., removeChangeListener, (, this, ), ;, this, ., dialFrame, =, frame, ;, frame, ., addChangeListener, (]
[dialFrame, ., removeChangeListener, (, this, ), ;, this, ., dialFrame, =, frame, ;, frame, ., addChangeListener, (, this, ), ;]
[;, frame, ., addChangeListener, (, this, ), ;, fireChangeEvent, (, ), ;, }, public, double, getViewX, (, ), {, return]
[;, frame, ., addChangeListener, (, this, ), ;, fireChangeEvent, (, ), ;, }, public, double, getViewX, (, ), {, return]
[}, public, double, getViewX, (, ), {, return, this, ., viewX, ;, }, public, double, getViewY, (, ), {, return]
[}, public, double, getViewX, (, ), {, return, this, ., viewX, ;, }, public, double, getViewY, (, ), {, return]
[}, public, double, getViewY, (, ), {, return, this, ., viewY, ;, }, public, double, getViewWidth, (, ), {, return]
[}, public, double, getViewY, (, ), {, return, this, ., viewY, ;, }, public, double, getViewWidth, (, ), {, return]
[}, public, double, getViewWidth, (, ), {, return, this, ., viewW, ;, }, public, double, getViewHeight, (, ), {, return]
[}, public, double, getViewWidth, (, ), {, return, this, ., viewW, ;, }, public, double, getViewHeight, (, ), {, return]
[viewH, ;, }, public, void, setView, (, double, x, ,, double, y, ,, double, w, ,, double, h, ), {]
[viewH, ;, }, public, void, setView, (, double, x, ,, double, y, ,, double, w, ,, double, h, ), {]
[void, setView, (, double, x, ,, double, y, ,, double, w, ,, double, h, ), {, this, ., viewX, =]
[(, double, x, ,, double, y, ,, double, w, ,, double, h, ), {, this, ., viewX, =, x, ;]
[(, double, x, ,, double, y, ,, double, w, ,, double, h, ), {, this, ., viewX, =, x, ;]
[double, y, ,, double, w, ,, double, h, ), {, this, ., viewX, =, x, ;, this, ., viewY, =]
[,, double, w, ,, double, h, ), {, this, ., viewX, =, x, ;, this, ., viewY, =, y, ;]
[,, double, w, ,, double, h, ), {, this, ., viewX, =, x, ;, this, ., viewY, =, y, ;]
[double, h, ), {, this, ., viewX, =, x, ;, this, ., viewY, =, y, ;, this, ., viewW, =]
[), {, this, ., viewX, =, x, ;, this, ., viewY, =, y, ;, this, ., viewW, =, w, ;]
[), {, this, ., viewX, =, x, ;, this, ., viewY, =, y, ;, this, ., viewW, =, w, ;]
[viewX, =, x, ;, this, ., viewY, =, y, ;, this, ., viewW, =, w, ;, this, ., viewH, =]
[x, ;, this, ., viewY, =, y, ;, this, ., viewW, =, w, ;, this, ., viewH, =, h, ;]
[., viewH, =, h, ;, fireChangeEvent, (, ), ;, }, public, void, addLayer, (, DialLayer, layer, ), {, if, (]
[., viewH, =, h, ;, fireChangeEvent, (, ), ;, }, public, void, addLayer, (, DialLayer, layer, ), {, if, (]
[=, h, ;, fireChangeEvent, (, ), ;, }, public, void, addLayer, (, DialLayer, layer, ), {, if, (, layer, ==]
[(, ), ;, }, public, void, addLayer, (, DialLayer, layer, ), {, if, (, layer, ==, null, ), {, throw]
[}, public, void, addLayer, (, DialLayer, layer, ), {, if, (, layer, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, DialLayer, layer, ), {, if, (, layer, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'layer' argument.", ), ;, }]
[(, DialLayer, layer, ), {, if, (, layer, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'layer' argument.", ), ;, }]
[(, DialLayer, layer, ), {, if, (, layer, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'layer' argument.", ), ;, }]
[(, layer, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'layer' argument.", ), ;, }, this, ., layers, ., add, (]
[null, ), {, throw, new, IllegalArgumentException, (, "Null 'layer' argument.", ), ;, }, this, ., layers, ., add, (, layer, ), ;]
[null, ), {, throw, new, IllegalArgumentException, (, "Null 'layer' argument.", ), ;, }, this, ., layers, ., add, (, layer, ), ;]
[new, IllegalArgumentException, (, "Null 'layer' argument.", ), ;, }, this, ., layers, ., add, (, layer, ), ;, layer, ., addChangeListener, (]
["Null 'layer' argument.", ), ;, }, this, ., layers, ., add, (, layer, ), ;, layer, ., addChangeListener, (, this, ), ;]
[addChangeListener, (, this, ), ;, fireChangeEvent, (, ), ;, }, public, int, getLayerIndex, (, DialLayer, layer, ), {, if, (]
[addChangeListener, (, this, ), ;, fireChangeEvent, (, ), ;, }, public, int, getLayerIndex, (, DialLayer, layer, ), {, if, (]
[this, ), ;, fireChangeEvent, (, ), ;, }, public, int, getLayerIndex, (, DialLayer, layer, ), {, if, (, layer, ==]
[(, ), ;, }, public, int, getLayerIndex, (, DialLayer, layer, ), {, if, (, layer, ==, null, ), {, throw]
[}, public, int, getLayerIndex, (, DialLayer, layer, ), {, if, (, layer, ==, null, ), {, throw, new, IllegalArgumentException, (]
[DialLayer, layer, ), {, if, (, layer, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'layer' argument.", ), ;, }, return]
[DialLayer, layer, ), {, if, (, layer, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'layer' argument.", ), ;, }, return]
[DialLayer, layer, ), {, if, (, layer, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'layer' argument.", ), ;, }, return]
[layer, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'layer' argument.", ), ;, }, return, this, ., layers, ., indexOf, (]
[., layers, ., indexOf, (, layer, ), ;, }, public, void, removeLayer, (, int, index, ), {, DialLayer, layer, =]
[indexOf, (, layer, ), ;, }, public, void, removeLayer, (, int, index, ), {, DialLayer, layer, =, (, DialLayer, )]
[indexOf, (, layer, ), ;, }, public, void, removeLayer, (, int, index, ), {, DialLayer, layer, =, (, DialLayer, )]
[indexOf, (, layer, ), ;, }, public, void, removeLayer, (, int, index, ), {, DialLayer, layer, =, (, DialLayer, )]
[public, void, removeLayer, (, int, index, ), {, DialLayer, layer, =, (, DialLayer, ), this, ., layers, ., get, (]
[index, ), {, DialLayer, layer, =, (, DialLayer, ), this, ., layers, ., get, (, index, ), ;, if, (]
[index, ), {, DialLayer, layer, =, (, DialLayer, ), this, ., layers, ., get, (, index, ), ;, if, (]
[{, DialLayer, layer, =, (, DialLayer, ), this, ., layers, ., get, (, index, ), ;, if, (, layer, !=]
[=, (, DialLayer, ), this, ., layers, ., get, (, index, ), ;, if, (, layer, !=, null, ), {]
[=, (, DialLayer, ), this, ., layers, ., get, (, index, ), ;, if, (, layer, !=, null, ), {]
[this, ., layers, ., get, (, index, ), ;, if, (, layer, !=, null, ), {, layer, ., removeChangeListener, (]
[get, (, index, ), ;, if, (, layer, !=, null, ), {, layer, ., removeChangeListener, (, this, ), ;, }]
[get, (, index, ), ;, if, (, layer, !=, null, ), {, layer, ., removeChangeListener, (, this, ), ;, }]
[get, (, index, ), ;, if, (, layer, !=, null, ), {, layer, ., removeChangeListener, (, this, ), ;, }]
[(, layer, !=, null, ), {, layer, ., removeChangeListener, (, this, ), ;, }, this, ., layers, ., remove, (]
[null, ), {, layer, ., removeChangeListener, (, this, ), ;, }, this, ., layers, ., remove, (, index, ), ;]
[layers, ., remove, (, index, ), ;, fireChangeEvent, (, ), ;, }, public, void, removeLayer, (, DialLayer, layer, ), {]
[remove, (, index, ), ;, fireChangeEvent, (, ), ;, }, public, void, removeLayer, (, DialLayer, layer, ), {, removeLayer, (]
[index, ), ;, fireChangeEvent, (, ), ;, }, public, void, removeLayer, (, DialLayer, layer, ), {, removeLayer, (, getLayerIndex, (]
[{, removeLayer, (, getLayerIndex, (, layer, ), ), ;, }, public, void, addPointer, (, DialPointer, pointer, ), {, if, (]
[{, removeLayer, (, getLayerIndex, (, layer, ), ), ;, }, public, void, addPointer, (, DialPointer, pointer, ), {, if, (]
[(, getLayerIndex, (, layer, ), ), ;, }, public, void, addPointer, (, DialPointer, pointer, ), {, if, (, pointer, ==]
[), ), ;, }, public, void, addPointer, (, DialPointer, pointer, ), {, if, (, pointer, ==, null, ), {, throw]
[}, public, void, addPointer, (, DialPointer, pointer, ), {, if, (, pointer, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, DialPointer, pointer, ), {, if, (, pointer, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'pointer' argument.", ), ;, }]
[(, DialPointer, pointer, ), {, if, (, pointer, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'pointer' argument.", ), ;, }]
[(, DialPointer, pointer, ), {, if, (, pointer, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'pointer' argument.", ), ;, }]
[(, pointer, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'pointer' argument.", ), ;, }, this, ., pointers, ., add, (]
[null, ), {, throw, new, IllegalArgumentException, (, "Null 'pointer' argument.", ), ;, }, this, ., pointers, ., add, (, pointer, ), ;]
[null, ), {, throw, new, IllegalArgumentException, (, "Null 'pointer' argument.", ), ;, }, this, ., pointers, ., add, (, pointer, ), ;]
[new, IllegalArgumentException, (, "Null 'pointer' argument.", ), ;, }, this, ., pointers, ., add, (, pointer, ), ;, pointer, ., addChangeListener, (]
["Null 'pointer' argument.", ), ;, }, this, ., pointers, ., add, (, pointer, ), ;, pointer, ., addChangeListener, (, this, ), ;]
[addChangeListener, (, this, ), ;, fireChangeEvent, (, ), ;, }, public, int, getPointerIndex, (, DialPointer, pointer, ), {, if, (]
[addChangeListener, (, this, ), ;, fireChangeEvent, (, ), ;, }, public, int, getPointerIndex, (, DialPointer, pointer, ), {, if, (]
[this, ), ;, fireChangeEvent, (, ), ;, }, public, int, getPointerIndex, (, DialPointer, pointer, ), {, if, (, pointer, ==]
[(, ), ;, }, public, int, getPointerIndex, (, DialPointer, pointer, ), {, if, (, pointer, ==, null, ), {, throw]
[}, public, int, getPointerIndex, (, DialPointer, pointer, ), {, if, (, pointer, ==, null, ), {, throw, new, IllegalArgumentException, (]
[DialPointer, pointer, ), {, if, (, pointer, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'pointer' argument.", ), ;, }, return]
[DialPointer, pointer, ), {, if, (, pointer, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'pointer' argument.", ), ;, }, return]
[DialPointer, pointer, ), {, if, (, pointer, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'pointer' argument.", ), ;, }, return]
[pointer, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'pointer' argument.", ), ;, }, return, this, ., pointers, ., indexOf, (]
[., pointers, ., indexOf, (, pointer, ), ;, }, public, void, removePointer, (, int, index, ), {, DialPointer, pointer, =]
[indexOf, (, pointer, ), ;, }, public, void, removePointer, (, int, index, ), {, DialPointer, pointer, =, (, DialPointer, )]
[indexOf, (, pointer, ), ;, }, public, void, removePointer, (, int, index, ), {, DialPointer, pointer, =, (, DialPointer, )]
[indexOf, (, pointer, ), ;, }, public, void, removePointer, (, int, index, ), {, DialPointer, pointer, =, (, DialPointer, )]
[public, void, removePointer, (, int, index, ), {, DialPointer, pointer, =, (, DialPointer, ), this, ., pointers, ., get, (]
[index, ), {, DialPointer, pointer, =, (, DialPointer, ), this, ., pointers, ., get, (, index, ), ;, if, (]
[index, ), {, DialPointer, pointer, =, (, DialPointer, ), this, ., pointers, ., get, (, index, ), ;, if, (]
[{, DialPointer, pointer, =, (, DialPointer, ), this, ., pointers, ., get, (, index, ), ;, if, (, pointer, !=]
[=, (, DialPointer, ), this, ., pointers, ., get, (, index, ), ;, if, (, pointer, !=, null, ), {]
[=, (, DialPointer, ), this, ., pointers, ., get, (, index, ), ;, if, (, pointer, !=, null, ), {]
[this, ., pointers, ., get, (, index, ), ;, if, (, pointer, !=, null, ), {, pointer, ., removeChangeListener, (]
[get, (, index, ), ;, if, (, pointer, !=, null, ), {, pointer, ., removeChangeListener, (, this, ), ;, }]
[get, (, index, ), ;, if, (, pointer, !=, null, ), {, pointer, ., removeChangeListener, (, this, ), ;, }]
[get, (, index, ), ;, if, (, pointer, !=, null, ), {, pointer, ., removeChangeListener, (, this, ), ;, }]
[(, pointer, !=, null, ), {, pointer, ., removeChangeListener, (, this, ), ;, }, this, ., pointers, ., remove, (]
[null, ), {, pointer, ., removeChangeListener, (, this, ), ;, }, this, ., pointers, ., remove, (, index, ), ;]
[pointers, ., remove, (, index, ), ;, fireChangeEvent, (, ), ;, }, public, void, removePointer, (, DialPointer, pointer, ), {]
[remove, (, index, ), ;, fireChangeEvent, (, ), ;, }, public, void, removePointer, (, DialPointer, pointer, ), {, removeLayer, (]
[index, ), ;, fireChangeEvent, (, ), ;, }, public, void, removePointer, (, DialPointer, pointer, ), {, removeLayer, (, getPointerIndex, (]
[removeLayer, (, getPointerIndex, (, pointer, ), ), ;, }, public, DialPointer, getPointerForDataset, (, int, datasetIndex, ), {, DialPointer, result, =]
[), ), ;, }, public, DialPointer, getPointerForDataset, (, int, datasetIndex, ), {, DialPointer, result, =, null, ;, Iterator, iterator, =]
[), ), ;, }, public, DialPointer, getPointerForDataset, (, int, datasetIndex, ), {, DialPointer, result, =, null, ;, Iterator, iterator, =]
[), ), ;, }, public, DialPointer, getPointerForDataset, (, int, datasetIndex, ), {, DialPointer, result, =, null, ;, Iterator, iterator, =]
[), {, DialPointer, result, =, null, ;, Iterator, iterator, =, this, ., pointers, ., iterator, (, ), ;, while, (]
[), {, DialPointer, result, =, null, ;, Iterator, iterator, =, this, ., pointers, ., iterator, (, ), ;, while, (]
[this, ., pointers, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, DialPointer, p, =]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, DialPointer, p, =, (, DialPointer, )]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, DialPointer, p, =, (, DialPointer, )]
[., hasNext, (, ), ), {, DialPointer, p, =, (, DialPointer, ), iterator, ., next, (, ), ;, if, (]
[., hasNext, (, ), ), {, DialPointer, p, =, (, DialPointer, ), iterator, ., next, (, ), ;, if, (]
[., hasNext, (, ), ), {, DialPointer, p, =, (, DialPointer, ), iterator, ., next, (, ), ;, if, (]
[DialPointer, p, =, (, DialPointer, ), iterator, ., next, (, ), ;, if, (, p, ., getDatasetIndex, (, ), ==]
[DialPointer, ), iterator, ., next, (, ), ;, if, (, p, ., getDatasetIndex, (, ), ==, datasetIndex, ), {, return]
[(, ), ;, if, (, p, ., getDatasetIndex, (, ), ==, datasetIndex, ), {, return, p, ;, }, }, return]
[==, datasetIndex, ), {, return, p, ;, }, }, return, result, ;, }, public, ValueDataset, getDataset, (, ), {, return]
[), {, return, p, ;, }, }, return, result, ;, }, public, ValueDataset, getDataset, (, ), {, return, getDataset, (]
[), {, return, getDataset, (, 0, ), ;, }, public, ValueDataset, getDataset, (, int, index, ), {, ValueDataset, result, =]
[(, 0, ), ;, }, public, ValueDataset, getDataset, (, int, index, ), {, ValueDataset, result, =, null, ;, if, (]
[(, 0, ), ;, }, public, ValueDataset, getDataset, (, int, index, ), {, ValueDataset, result, =, null, ;, if, (]
[(, 0, ), ;, }, public, ValueDataset, getDataset, (, int, index, ), {, ValueDataset, result, =, null, ;, if, (]
[(, 0, ), ;, }, public, ValueDataset, getDataset, (, int, index, ), {, ValueDataset, result, =, null, ;, if, (]
[(, int, index, ), {, ValueDataset, result, =, null, ;, if, (, this, ., datasets, ., size, (, ), >]
[), {, ValueDataset, result, =, null, ;, if, (, this, ., datasets, ., size, (, ), >, index, ), {]
[ValueDataset, result, =, null, ;, if, (, this, ., datasets, ., size, (, ), >, index, ), {, result, =]
[null, ;, if, (, this, ., datasets, ., size, (, ), >, index, ), {, result, =, (, ValueDataset, )]
[null, ;, if, (, this, ., datasets, ., size, (, ), >, index, ), {, result, =, (, ValueDataset, )]
[null, ;, if, (, this, ., datasets, ., size, (, ), >, index, ), {, result, =, (, ValueDataset, )]
[datasets, ., size, (, ), >, index, ), {, result, =, (, ValueDataset, ), this, ., datasets, ., get, (]
[>, index, ), {, result, =, (, ValueDataset, ), this, ., datasets, ., get, (, index, ), ;, }, return]
[datasets, ., get, (, index, ), ;, }, return, result, ;, }, public, void, setDataset, (, ValueDataset, dataset, ), {]
[get, (, index, ), ;, }, return, result, ;, }, public, void, setDataset, (, ValueDataset, dataset, ), {, setDataset, (]
[index, ), ;, }, return, result, ;, }, public, void, setDataset, (, ValueDataset, dataset, ), {, setDataset, (, 0, ,]
[0, ,, dataset, ), ;, }, public, void, setDataset, (, int, index, ,, ValueDataset, dataset, ), {, ValueDataset, existing, =]
[), ;, }, public, void, setDataset, (, int, index, ,, ValueDataset, dataset, ), {, ValueDataset, existing, =, (, ValueDataset, )]
[), ;, }, public, void, setDataset, (, int, index, ,, ValueDataset, dataset, ), {, ValueDataset, existing, =, (, ValueDataset, )]
[), ;, }, public, void, setDataset, (, int, index, ,, ValueDataset, dataset, ), {, ValueDataset, existing, =, (, ValueDataset, )]
[(, int, index, ,, ValueDataset, dataset, ), {, ValueDataset, existing, =, (, ValueDataset, ), this, ., datasets, ., get, (]
[dataset, ), {, ValueDataset, existing, =, (, ValueDataset, ), this, ., datasets, ., get, (, index, ), ;, if, (]
[dataset, ), {, ValueDataset, existing, =, (, ValueDataset, ), this, ., datasets, ., get, (, index, ), ;, if, (]
[{, ValueDataset, existing, =, (, ValueDataset, ), this, ., datasets, ., get, (, index, ), ;, if, (, existing, !=]
[=, (, ValueDataset, ), this, ., datasets, ., get, (, index, ), ;, if, (, existing, !=, null, ), {]
[=, (, ValueDataset, ), this, ., datasets, ., get, (, index, ), ;, if, (, existing, !=, null, ), {]
[this, ., datasets, ., get, (, index, ), ;, if, (, existing, !=, null, ), {, existing, ., removeChangeListener, (]
[get, (, index, ), ;, if, (, existing, !=, null, ), {, existing, ., removeChangeListener, (, this, ), ;, }]
[get, (, index, ), ;, if, (, existing, !=, null, ), {, existing, ., removeChangeListener, (, this, ), ;, }]
[get, (, index, ), ;, if, (, existing, !=, null, ), {, existing, ., removeChangeListener, (, this, ), ;, }]
[(, existing, !=, null, ), {, existing, ., removeChangeListener, (, this, ), ;, }, this, ., datasets, ., set, (]
[!=, null, ), {, existing, ., removeChangeListener, (, this, ), ;, }, this, ., datasets, ., set, (, index, ,]
[., removeChangeListener, (, this, ), ;, }, this, ., datasets, ., set, (, index, ,, dataset, ), ;, if, (]
[., removeChangeListener, (, this, ), ;, }, this, ., datasets, ., set, (, index, ,, dataset, ), ;, if, (]
[(, this, ), ;, }, this, ., datasets, ., set, (, index, ,, dataset, ), ;, if, (, dataset, !=]
[;, }, this, ., datasets, ., set, (, index, ,, dataset, ), ;, if, (, dataset, !=, null, ), {]
[;, }, this, ., datasets, ., set, (, index, ,, dataset, ), ;, if, (, dataset, !=, null, ), {]
[datasets, ., set, (, index, ,, dataset, ), ;, if, (, dataset, !=, null, ), {, dataset, ., addChangeListener, (]
[), ;, if, (, dataset, !=, null, ), {, dataset, ., addChangeListener, (, this, ), ;, }, DatasetChangeEvent, event, =]
[(, dataset, !=, null, ), {, dataset, ., addChangeListener, (, this, ), ;, }, DatasetChangeEvent, event, =, new, DatasetChangeEvent, (]
[!=, null, ), {, dataset, ., addChangeListener, (, this, ), ;, }, DatasetChangeEvent, event, =, new, DatasetChangeEvent, (, this, ,]
[), {, dataset, ., addChangeListener, (, this, ), ;, }, DatasetChangeEvent, event, =, new, DatasetChangeEvent, (, this, ,, dataset, ,]
[this, ), ;, }, DatasetChangeEvent, event, =, new, DatasetChangeEvent, (, this, ,, dataset, ,, new, DatasetChangeInfo, (, ), ), ;]
[;, }, DatasetChangeEvent, event, =, new, DatasetChangeEvent, (, this, ,, dataset, ,, new, DatasetChangeInfo, (, ), ), ;, datasetChanged, (]
[,, new, DatasetChangeInfo, (, ), ), ;, datasetChanged, (, event, ), ;, }, public, int, getDatasetCount, (, ), {, return]
[,, new, DatasetChangeInfo, (, ), ), ;, datasetChanged, (, event, ), ;, }, public, int, getDatasetCount, (, ), {, return]
[,, new, DatasetChangeInfo, (, ), ), ;, datasetChanged, (, event, ), ;, }, public, int, getDatasetCount, (, ), {, return]
[(, Graphics2D, g2, ,, Rectangle2D, area, ,, Point2D, anchor, ,, PlotState, parentState, ,, PlotRenderingInfo, info, ), {, Shape, origClip, =]
[(, Graphics2D, g2, ,, Rectangle2D, area, ,, Point2D, anchor, ,, PlotState, parentState, ,, PlotRenderingInfo, info, ), {, Shape, origClip, =]
[,, Point2D, anchor, ,, PlotState, parentState, ,, PlotRenderingInfo, info, ), {, Shape, origClip, =, g2, ., getClip, (, ), ;]
[,, Point2D, anchor, ,, PlotState, parentState, ,, PlotRenderingInfo, info, ), {, Shape, origClip, =, g2, ., getClip, (, ), ;]
[PlotState, parentState, ,, PlotRenderingInfo, info, ), {, Shape, origClip, =, g2, ., getClip, (, ), ;, g2, ., setClip, (]
[{, Shape, origClip, =, g2, ., getClip, (, ), ;, g2, ., setClip, (, area, ), ;, Rectangle2D, frame, =]
[origClip, =, g2, ., getClip, (, ), ;, g2, ., setClip, (, area, ), ;, Rectangle2D, frame, =, viewToFrame, (]
[(, ), ;, g2, ., setClip, (, area, ), ;, Rectangle2D, frame, =, viewToFrame, (, area, ), ;, if, (]
[(, ), ;, g2, ., setClip, (, area, ), ;, Rectangle2D, frame, =, viewToFrame, (, area, ), ;, if, (]
[(, ), ;, g2, ., setClip, (, area, ), ;, Rectangle2D, frame, =, viewToFrame, (, area, ), ;, if, (]
[(, ), ;, g2, ., setClip, (, area, ), ;, Rectangle2D, frame, =, viewToFrame, (, area, ), ;, if, (]
[., setClip, (, area, ), ;, Rectangle2D, frame, =, viewToFrame, (, area, ), ;, if, (, this, ., background, !=]
[(, area, ), ;, Rectangle2D, frame, =, viewToFrame, (, area, ), ;, if, (, this, ., background, !=, null, &&]
[(, area, ), ;, Rectangle2D, frame, =, viewToFrame, (, area, ), ;, if, (, this, ., background, !=, null, &&]
[(, area, ), ;, Rectangle2D, frame, =, viewToFrame, (, area, ), ;, if, (, this, ., background, !=, null, &&]
[;, if, (, this, ., background, !=, null, &&, this, ., background, ., isVisible, (, ), ), {, if, (]
[;, if, (, this, ., background, !=, null, &&, this, ., background, ., isVisible, (, ), ), {, if, (]
[;, if, (, this, ., background, !=, null, &&, this, ., background, ., isVisible, (, ), ), {, if, (]
[., isVisible, (, ), ), {, if, (, this, ., background, ., isClippedToWindow, (, ), ), {, Shape, savedClip, =]
[., isVisible, (, ), ), {, if, (, this, ., background, ., isClippedToWindow, (, ), ), {, Shape, savedClip, =]
[if, (, this, ., background, ., isClippedToWindow, (, ), ), {, Shape, savedClip, =, g2, ., getClip, (, ), ;]
[if, (, this, ., background, ., isClippedToWindow, (, ), ), {, Shape, savedClip, =, g2, ., getClip, (, ), ;]
[background, ., isClippedToWindow, (, ), ), {, Shape, savedClip, =, g2, ., getClip, (, ), ;, g2, ., clip, (]
[background, ., isClippedToWindow, (, ), ), {, Shape, savedClip, =, g2, ., getClip, (, ), ;, g2, ., clip, (]
[background, ., isClippedToWindow, (, ), ), {, Shape, savedClip, =, g2, ., getClip, (, ), ;, g2, ., clip, (]
[{, Shape, savedClip, =, g2, ., getClip, (, ), ;, g2, ., clip, (, this, ., dialFrame, ., getWindow, (]
[g2, ., getClip, (, ), ;, g2, ., clip, (, this, ., dialFrame, ., getWindow, (, frame, ), ), ;]
[g2, ., getClip, (, ), ;, g2, ., clip, (, this, ., dialFrame, ., getWindow, (, frame, ), ), ;]
[g2, ., getClip, (, ), ;, g2, ., clip, (, this, ., dialFrame, ., getWindow, (, frame, ), ), ;]
[g2, ., clip, (, this, ., dialFrame, ., getWindow, (, frame, ), ), ;, this, ., background, ., draw, (]
[clip, (, this, ., dialFrame, ., getWindow, (, frame, ), ), ;, this, ., background, ., draw, (, g2, ,]
[this, ., dialFrame, ., getWindow, (, frame, ), ), ;, this, ., background, ., draw, (, g2, ,, this, ,]
[dialFrame, ., getWindow, (, frame, ), ), ;, this, ., background, ., draw, (, g2, ,, this, ,, frame, ,]
[(, frame, ), ), ;, this, ., background, ., draw, (, g2, ,, this, ,, frame, ,, area, ), ;]
[(, frame, ), ), ;, this, ., background, ., draw, (, g2, ,, this, ,, frame, ,, area, ), ;]
[;, this, ., background, ., draw, (, g2, ,, this, ,, frame, ,, area, ), ;, g2, ., setClip, (]
[(, g2, ,, this, ,, frame, ,, area, ), ;, g2, ., setClip, (, savedClip, ), ;, }, else, {]
[(, g2, ,, this, ,, frame, ,, area, ), ;, g2, ., setClip, (, savedClip, ), ;, }, else, {]
[(, g2, ,, this, ,, frame, ,, area, ), ;, g2, ., setClip, (, savedClip, ), ;, }, else, {]
[,, area, ), ;, g2, ., setClip, (, savedClip, ), ;, }, else, {, this, ., background, ., draw, (]
[), ;, g2, ., setClip, (, savedClip, ), ;, }, else, {, this, ., background, ., draw, (, g2, ,]
[g2, ., setClip, (, savedClip, ), ;, }, else, {, this, ., background, ., draw, (, g2, ,, this, ,]
[setClip, (, savedClip, ), ;, }, else, {, this, ., background, ., draw, (, g2, ,, this, ,, frame, ,]
[this, ., background, ., draw, (, g2, ,, this, ,, frame, ,, area, ), ;, }, }, Iterator, iterator, =]
[this, ., background, ., draw, (, g2, ,, this, ,, frame, ,, area, ), ;, }, }, Iterator, iterator, =]
[this, ., background, ., draw, (, g2, ,, this, ,, frame, ,, area, ), ;, }, }, Iterator, iterator, =]
[frame, ,, area, ), ;, }, }, Iterator, iterator, =, this, ., layers, ., iterator, (, ), ;, while, (]
[frame, ,, area, ), ;, }, }, Iterator, iterator, =, this, ., layers, ., iterator, (, ), ;, while, (]
[this, ., layers, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, DialLayer, current, =]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, DialLayer, current, =, (, DialLayer, )]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, DialLayer, current, =, (, DialLayer, )]
[., hasNext, (, ), ), {, DialLayer, current, =, (, DialLayer, ), iterator, ., next, (, ), ;, if, (]
[., hasNext, (, ), ), {, DialLayer, current, =, (, DialLayer, ), iterator, ., next, (, ), ;, if, (]
[(, DialLayer, ), iterator, ., next, (, ), ;, if, (, current, ., isVisible, (, ), ), {, if, (]
[(, DialLayer, ), iterator, ., next, (, ), ;, if, (, current, ., isVisible, (, ), ), {, if, (]
[(, current, ., isVisible, (, ), ), {, if, (, current, ., isClippedToWindow, (, ), ), {, Shape, savedClip, =]
[(, current, ., isVisible, (, ), ), {, if, (, current, ., isClippedToWindow, (, ), ), {, Shape, savedClip, =]
[), {, if, (, current, ., isClippedToWindow, (, ), ), {, Shape, savedClip, =, g2, ., getClip, (, ), ;]
[), {, if, (, current, ., isClippedToWindow, (, ), ), {, Shape, savedClip, =, g2, ., getClip, (, ), ;]
[current, ., isClippedToWindow, (, ), ), {, Shape, savedClip, =, g2, ., getClip, (, ), ;, g2, ., clip, (]
[current, ., isClippedToWindow, (, ), ), {, Shape, savedClip, =, g2, ., getClip, (, ), ;, g2, ., clip, (]
[current, ., isClippedToWindow, (, ), ), {, Shape, savedClip, =, g2, ., getClip, (, ), ;, g2, ., clip, (]
[{, Shape, savedClip, =, g2, ., getClip, (, ), ;, g2, ., clip, (, this, ., dialFrame, ., getWindow, (]
[g2, ., getClip, (, ), ;, g2, ., clip, (, this, ., dialFrame, ., getWindow, (, frame, ), ), ;]
[g2, ., getClip, (, ), ;, g2, ., clip, (, this, ., dialFrame, ., getWindow, (, frame, ), ), ;]
[), ;, g2, ., clip, (, this, ., dialFrame, ., getWindow, (, frame, ), ), ;, current, ., draw, (]
[g2, ., clip, (, this, ., dialFrame, ., getWindow, (, frame, ), ), ;, current, ., draw, (, g2, ,]
[clip, (, this, ., dialFrame, ., getWindow, (, frame, ), ), ;, current, ., draw, (, g2, ,, this, ,]
[this, ., dialFrame, ., getWindow, (, frame, ), ), ;, current, ., draw, (, g2, ,, this, ,, frame, ,]
[., getWindow, (, frame, ), ), ;, current, ., draw, (, g2, ,, this, ,, frame, ,, area, ), ;]
[., getWindow, (, frame, ), ), ;, current, ., draw, (, g2, ,, this, ,, frame, ,, area, ), ;]
[), ), ;, current, ., draw, (, g2, ,, this, ,, frame, ,, area, ), ;, g2, ., setClip, (]
[(, g2, ,, this, ,, frame, ,, area, ), ;, g2, ., setClip, (, savedClip, ), ;, }, else, {]
[(, g2, ,, this, ,, frame, ,, area, ), ;, g2, ., setClip, (, savedClip, ), ;, }, else, {]
[,, frame, ,, area, ), ;, g2, ., setClip, (, savedClip, ), ;, }, else, {, current, ., draw, (]
[,, area, ), ;, g2, ., setClip, (, savedClip, ), ;, }, else, {, current, ., draw, (, g2, ,]
[), ;, g2, ., setClip, (, savedClip, ), ;, }, else, {, current, ., draw, (, g2, ,, this, ,]
[g2, ., setClip, (, savedClip, ), ;, }, else, {, current, ., draw, (, g2, ,, this, ,, frame, ,]
[;, }, else, {, current, ., draw, (, g2, ,, this, ,, frame, ,, area, ), ;, }, }, }]
[else, {, current, ., draw, (, g2, ,, this, ,, frame, ,, area, ), ;, }, }, }, iterator, =]
[else, {, current, ., draw, (, g2, ,, this, ,, frame, ,, area, ), ;, }, }, }, iterator, =]
[else, {, current, ., draw, (, g2, ,, this, ,, frame, ,, area, ), ;, }, }, }, iterator, =]
[frame, ,, area, ), ;, }, }, }, iterator, =, this, ., pointers, ., iterator, (, ), ;, while, (]
[frame, ,, area, ), ;, }, }, }, iterator, =, this, ., pointers, ., iterator, (, ), ;, while, (]
[this, ., pointers, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, DialPointer, current, =]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, DialPointer, current, =, (, DialPointer, )]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, DialPointer, current, =, (, DialPointer, )]
[., hasNext, (, ), ), {, DialPointer, current, =, (, DialPointer, ), iterator, ., next, (, ), ;, if, (]
[., hasNext, (, ), ), {, DialPointer, current, =, (, DialPointer, ), iterator, ., next, (, ), ;, if, (]
[(, DialPointer, ), iterator, ., next, (, ), ;, if, (, current, ., isVisible, (, ), ), {, if, (]
[(, DialPointer, ), iterator, ., next, (, ), ;, if, (, current, ., isVisible, (, ), ), {, if, (]
[(, current, ., isVisible, (, ), ), {, if, (, current, ., isClippedToWindow, (, ), ), {, Shape, savedClip, =]
[(, current, ., isVisible, (, ), ), {, if, (, current, ., isClippedToWindow, (, ), ), {, Shape, savedClip, =]
[), {, if, (, current, ., isClippedToWindow, (, ), ), {, Shape, savedClip, =, g2, ., getClip, (, ), ;]
[), {, if, (, current, ., isClippedToWindow, (, ), ), {, Shape, savedClip, =, g2, ., getClip, (, ), ;]
[current, ., isClippedToWindow, (, ), ), {, Shape, savedClip, =, g2, ., getClip, (, ), ;, g2, ., clip, (]
[current, ., isClippedToWindow, (, ), ), {, Shape, savedClip, =, g2, ., getClip, (, ), ;, g2, ., clip, (]
[current, ., isClippedToWindow, (, ), ), {, Shape, savedClip, =, g2, ., getClip, (, ), ;, g2, ., clip, (]
[{, Shape, savedClip, =, g2, ., getClip, (, ), ;, g2, ., clip, (, this, ., dialFrame, ., getWindow, (]
[g2, ., getClip, (, ), ;, g2, ., clip, (, this, ., dialFrame, ., getWindow, (, frame, ), ), ;]
[g2, ., getClip, (, ), ;, g2, ., clip, (, this, ., dialFrame, ., getWindow, (, frame, ), ), ;]
[), ;, g2, ., clip, (, this, ., dialFrame, ., getWindow, (, frame, ), ), ;, current, ., draw, (]
[g2, ., clip, (, this, ., dialFrame, ., getWindow, (, frame, ), ), ;, current, ., draw, (, g2, ,]
[clip, (, this, ., dialFrame, ., getWindow, (, frame, ), ), ;, current, ., draw, (, g2, ,, this, ,]
[this, ., dialFrame, ., getWindow, (, frame, ), ), ;, current, ., draw, (, g2, ,, this, ,, frame, ,]
[., getWindow, (, frame, ), ), ;, current, ., draw, (, g2, ,, this, ,, frame, ,, area, ), ;]
[., getWindow, (, frame, ), ), ;, current, ., draw, (, g2, ,, this, ,, frame, ,, area, ), ;]
[), ), ;, current, ., draw, (, g2, ,, this, ,, frame, ,, area, ), ;, g2, ., setClip, (]
[(, g2, ,, this, ,, frame, ,, area, ), ;, g2, ., setClip, (, savedClip, ), ;, }, else, {]
[(, g2, ,, this, ,, frame, ,, area, ), ;, g2, ., setClip, (, savedClip, ), ;, }, else, {]
[,, frame, ,, area, ), ;, g2, ., setClip, (, savedClip, ), ;, }, else, {, current, ., draw, (]
[,, area, ), ;, g2, ., setClip, (, savedClip, ), ;, }, else, {, current, ., draw, (, g2, ,]
[), ;, g2, ., setClip, (, savedClip, ), ;, }, else, {, current, ., draw, (, g2, ,, this, ,]
[g2, ., setClip, (, savedClip, ), ;, }, else, {, current, ., draw, (, g2, ,, this, ,, frame, ,]
[else, {, current, ., draw, (, g2, ,, this, ,, frame, ,, area, ), ;, }, }, }, if, (]
[else, {, current, ., draw, (, g2, ,, this, ,, frame, ,, area, ), ;, }, }, }, if, (]
[else, {, current, ., draw, (, g2, ,, this, ,, frame, ,, area, ), ;, }, }, }, if, (]
[else, {, current, ., draw, (, g2, ,, this, ,, frame, ,, area, ), ;, }, }, }, if, (]
[draw, (, g2, ,, this, ,, frame, ,, area, ), ;, }, }, }, if, (, this, ., cap, !=]
[g2, ,, this, ,, frame, ,, area, ), ;, }, }, }, if, (, this, ., cap, !=, null, &&]
[g2, ,, this, ,, frame, ,, area, ), ;, }, }, }, if, (, this, ., cap, !=, null, &&]
[g2, ,, this, ,, frame, ,, area, ), ;, }, }, }, if, (, this, ., cap, !=, null, &&]
[}, if, (, this, ., cap, !=, null, &&, this, ., cap, ., isVisible, (, ), ), {, if, (]
[}, if, (, this, ., cap, !=, null, &&, this, ., cap, ., isVisible, (, ), ), {, if, (]
[}, if, (, this, ., cap, !=, null, &&, this, ., cap, ., isVisible, (, ), ), {, if, (]
[., isVisible, (, ), ), {, if, (, this, ., cap, ., isClippedToWindow, (, ), ), {, Shape, savedClip, =]
[., isVisible, (, ), ), {, if, (, this, ., cap, ., isClippedToWindow, (, ), ), {, Shape, savedClip, =]
[if, (, this, ., cap, ., isClippedToWindow, (, ), ), {, Shape, savedClip, =, g2, ., getClip, (, ), ;]
[if, (, this, ., cap, ., isClippedToWindow, (, ), ), {, Shape, savedClip, =, g2, ., getClip, (, ), ;]
[cap, ., isClippedToWindow, (, ), ), {, Shape, savedClip, =, g2, ., getClip, (, ), ;, g2, ., clip, (]
[cap, ., isClippedToWindow, (, ), ), {, Shape, savedClip, =, g2, ., getClip, (, ), ;, g2, ., clip, (]
[cap, ., isClippedToWindow, (, ), ), {, Shape, savedClip, =, g2, ., getClip, (, ), ;, g2, ., clip, (]
[{, Shape, savedClip, =, g2, ., getClip, (, ), ;, g2, ., clip, (, this, ., dialFrame, ., getWindow, (]
[g2, ., getClip, (, ), ;, g2, ., clip, (, this, ., dialFrame, ., getWindow, (, frame, ), ), ;]
[g2, ., getClip, (, ), ;, g2, ., clip, (, this, ., dialFrame, ., getWindow, (, frame, ), ), ;]
[g2, ., getClip, (, ), ;, g2, ., clip, (, this, ., dialFrame, ., getWindow, (, frame, ), ), ;]
[g2, ., clip, (, this, ., dialFrame, ., getWindow, (, frame, ), ), ;, this, ., cap, ., draw, (]
[clip, (, this, ., dialFrame, ., getWindow, (, frame, ), ), ;, this, ., cap, ., draw, (, g2, ,]
[this, ., dialFrame, ., getWindow, (, frame, ), ), ;, this, ., cap, ., draw, (, g2, ,, this, ,]
[dialFrame, ., getWindow, (, frame, ), ), ;, this, ., cap, ., draw, (, g2, ,, this, ,, frame, ,]
[(, frame, ), ), ;, this, ., cap, ., draw, (, g2, ,, this, ,, frame, ,, area, ), ;]
[(, frame, ), ), ;, this, ., cap, ., draw, (, g2, ,, this, ,, frame, ,, area, ), ;]
[;, this, ., cap, ., draw, (, g2, ,, this, ,, frame, ,, area, ), ;, g2, ., setClip, (]
[(, g2, ,, this, ,, frame, ,, area, ), ;, g2, ., setClip, (, savedClip, ), ;, }, else, {]
[(, g2, ,, this, ,, frame, ,, area, ), ;, g2, ., setClip, (, savedClip, ), ;, }, else, {]
[(, g2, ,, this, ,, frame, ,, area, ), ;, g2, ., setClip, (, savedClip, ), ;, }, else, {]
[,, area, ), ;, g2, ., setClip, (, savedClip, ), ;, }, else, {, this, ., cap, ., draw, (]
[), ;, g2, ., setClip, (, savedClip, ), ;, }, else, {, this, ., cap, ., draw, (, g2, ,]
[g2, ., setClip, (, savedClip, ), ;, }, else, {, this, ., cap, ., draw, (, g2, ,, this, ,]
[setClip, (, savedClip, ), ;, }, else, {, this, ., cap, ., draw, (, g2, ,, this, ,, frame, ,]
[{, this, ., cap, ., draw, (, g2, ,, this, ,, frame, ,, area, ), ;, }, }, if, (]
[{, this, ., cap, ., draw, (, g2, ,, this, ,, frame, ,, area, ), ;, }, }, if, (]
[{, this, ., cap, ., draw, (, g2, ,, this, ,, frame, ,, area, ), ;, }, }, if, (]
[this, ,, frame, ,, area, ), ;, }, }, if, (, this, ., dialFrame, ., isVisible, (, ), ), {]
[this, ,, frame, ,, area, ), ;, }, }, if, (, this, ., dialFrame, ., isVisible, (, ), ), {]
[this, ,, frame, ,, area, ), ;, }, }, if, (, this, ., dialFrame, ., isVisible, (, ), ), {]
[;, }, }, if, (, this, ., dialFrame, ., isVisible, (, ), ), {, this, ., dialFrame, ., draw, (]
[}, if, (, this, ., dialFrame, ., isVisible, (, ), ), {, this, ., dialFrame, ., draw, (, g2, ,]
[(, this, ., dialFrame, ., isVisible, (, ), ), {, this, ., dialFrame, ., draw, (, g2, ,, this, ,]
[., dialFrame, ., isVisible, (, ), ), {, this, ., dialFrame, ., draw, (, g2, ,, this, ,, frame, ,]
[(, ), ), {, this, ., dialFrame, ., draw, (, g2, ,, this, ,, frame, ,, area, ), ;, }]
[(, ), ), {, this, ., dialFrame, ., draw, (, g2, ,, this, ,, frame, ,, area, ), ;, }]
[this, ., dialFrame, ., draw, (, g2, ,, this, ,, frame, ,, area, ), ;, }, g2, ., setClip, (]
[}, g2, ., setClip, (, origClip, ), ;, }, private, Rectangle2D, viewToFrame, (, Rectangle2D, view, ), {, double, width, =]
[}, g2, ., setClip, (, origClip, ), ;, }, private, Rectangle2D, viewToFrame, (, Rectangle2D, view, ), {, double, width, =]
[}, g2, ., setClip, (, origClip, ), ;, }, private, Rectangle2D, viewToFrame, (, Rectangle2D, view, ), {, double, width, =]
[), ;, }, private, Rectangle2D, viewToFrame, (, Rectangle2D, view, ), {, double, width, =, view, ., getWidth, (, ), /]
[), ;, }, private, Rectangle2D, viewToFrame, (, Rectangle2D, view, ), {, double, width, =, view, ., getWidth, (, ), /]
[Rectangle2D, view, ), {, double, width, =, view, ., getWidth, (, ), /, this, ., viewW, ;, double, height, =]
[Rectangle2D, view, ), {, double, width, =, view, ., getWidth, (, ), /, this, ., viewW, ;, double, height, =]
[Rectangle2D, view, ), {, double, width, =, view, ., getWidth, (, ), /, this, ., viewW, ;, double, height, =]
[=, view, ., getWidth, (, ), /, this, ., viewW, ;, double, height, =, view, ., getHeight, (, ), /]
[=, view, ., getWidth, (, ), /, this, ., viewW, ;, double, height, =, view, ., getHeight, (, ), /]
[this, ., viewW, ;, double, height, =, view, ., getHeight, (, ), /, this, ., viewH, ;, double, x, =]
[this, ., viewW, ;, double, height, =, view, ., getHeight, (, ), /, this, ., viewH, ;, double, x, =]
[this, ., viewW, ;, double, height, =, view, ., getHeight, (, ), /, this, ., viewH, ;, double, x, =]
[=, view, ., getHeight, (, ), /, this, ., viewH, ;, double, x, =, view, ., getX, (, ), -]
[view, ., getHeight, (, ), /, this, ., viewH, ;, double, x, =, view, ., getX, (, ), -, (]
[view, ., getHeight, (, ), /, this, ., viewH, ;, double, x, =, view, ., getX, (, ), -, (]
[getHeight, (, ), /, this, ., viewH, ;, double, x, =, view, ., getX, (, ), -, (, width, *]
[getHeight, (, ), /, this, ., viewH, ;, double, x, =, view, ., getX, (, ), -, (, width, *]
[double, x, =, view, ., getX, (, ), -, (, width, *, this, ., viewX, ), ;, double, y, =]
[double, x, =, view, ., getX, (, ), -, (, width, *, this, ., viewX, ), ;, double, y, =]
[double, x, =, view, ., getX, (, ), -, (, width, *, this, ., viewX, ), ;, double, y, =]
[(, ), -, (, width, *, this, ., viewX, ), ;, double, y, =, view, ., getY, (, ), -]
[), -, (, width, *, this, ., viewX, ), ;, double, y, =, view, ., getY, (, ), -, (]
[), -, (, width, *, this, ., viewX, ), ;, double, y, =, view, ., getY, (, ), -, (]
[(, width, *, this, ., viewX, ), ;, double, y, =, view, ., getY, (, ), -, (, height, *]
[(, width, *, this, ., viewX, ), ;, double, y, =, view, ., getY, (, ), -, (, height, *]
[), ;, double, y, =, view, ., getY, (, ), -, (, height, *, this, ., viewY, ), ;, return]
[view, ., getY, (, ), -, (, height, *, this, ., viewY, ), ;, return, new, Rectangle2D, ., Double, (]
[getY, (, ), -, (, height, *, this, ., viewY, ), ;, return, new, Rectangle2D, ., Double, (, x, ,]
[), -, (, height, *, this, ., viewY, ), ;, return, new, Rectangle2D, ., Double, (, x, ,, y, ,]
[(, height, *, this, ., viewY, ), ;, return, new, Rectangle2D, ., Double, (, x, ,, y, ,, width, ,]
[,, y, ,, width, ,, height, ), ;, }, public, double, getValue, (, int, datasetIndex, ), {, double, result, =]
[,, y, ,, width, ,, height, ), ;, }, public, double, getValue, (, int, datasetIndex, ), {, double, result, =]
[;, }, public, double, getValue, (, int, datasetIndex, ), {, double, result, =, Double, ., NaN, ;, ValueDataset, dataset, =]
[public, double, getValue, (, int, datasetIndex, ), {, double, result, =, Double, ., NaN, ;, ValueDataset, dataset, =, getDataset, (]
[datasetIndex, ), {, double, result, =, Double, ., NaN, ;, ValueDataset, dataset, =, getDataset, (, datasetIndex, ), ;, if, (]
[datasetIndex, ), {, double, result, =, Double, ., NaN, ;, ValueDataset, dataset, =, getDataset, (, datasetIndex, ), ;, if, (]
[{, double, result, =, Double, ., NaN, ;, ValueDataset, dataset, =, getDataset, (, datasetIndex, ), ;, if, (, dataset, !=]
[NaN, ;, ValueDataset, dataset, =, getDataset, (, datasetIndex, ), ;, if, (, dataset, !=, null, ), {, Number, n, =]
[NaN, ;, ValueDataset, dataset, =, getDataset, (, datasetIndex, ), ;, if, (, dataset, !=, null, ), {, Number, n, =]
[), ;, if, (, dataset, !=, null, ), {, Number, n, =, dataset, ., getValue, (, ), ;, if, (]
[), ;, if, (, dataset, !=, null, ), {, Number, n, =, dataset, ., getValue, (, ), ;, if, (]
[if, (, dataset, !=, null, ), {, Number, n, =, dataset, ., getValue, (, ), ;, if, (, n, !=]
[!=, null, ), {, Number, n, =, dataset, ., getValue, (, ), ;, if, (, n, !=, null, ), {]
[), {, Number, n, =, dataset, ., getValue, (, ), ;, if, (, n, !=, null, ), {, result, =]
[), {, Number, n, =, dataset, ., getValue, (, ), ;, if, (, n, !=, null, ), {, result, =]
[), ;, if, (, n, !=, null, ), {, result, =, n, ., doubleValue, (, ), ;, }, }, return]
[;, }, }, return, result, ;, }, public, void, addScale, (, int, index, ,, DialScale, scale, ), {, if, (]
[;, }, }, return, result, ;, }, public, void, addScale, (, int, index, ,, DialScale, scale, ), {, if, (]
[}, return, result, ;, }, public, void, addScale, (, int, index, ,, DialScale, scale, ), {, if, (, scale, ==]
[}, public, void, addScale, (, int, index, ,, DialScale, scale, ), {, if, (, scale, ==, null, ), {, throw]
[addScale, (, int, index, ,, DialScale, scale, ), {, if, (, scale, ==, null, ), {, throw, new, IllegalArgumentException, (]
[), {, if, (, scale, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'scale' argument.", ), ;, }, DialScale, existing, =]
[(, scale, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'scale' argument.", ), ;, }, DialScale, existing, =, (, DialScale, )]
[(, scale, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'scale' argument.", ), ;, }, DialScale, existing, =, (, DialScale, )]
[(, scale, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'scale' argument.", ), ;, }, DialScale, existing, =, (, DialScale, )]
[throw, new, IllegalArgumentException, (, "Null 'scale' argument.", ), ;, }, DialScale, existing, =, (, DialScale, ), this, ., scales, ., get, (]
[), ;, }, DialScale, existing, =, (, DialScale, ), this, ., scales, ., get, (, index, ), ;, if, (]
[), ;, }, DialScale, existing, =, (, DialScale, ), this, ., scales, ., get, (, index, ), ;, if, (]
[}, DialScale, existing, =, (, DialScale, ), this, ., scales, ., get, (, index, ), ;, if, (, existing, !=]
[=, (, DialScale, ), this, ., scales, ., get, (, index, ), ;, if, (, existing, !=, null, ), {]
[DialScale, ), this, ., scales, ., get, (, index, ), ;, if, (, existing, !=, null, ), {, removeLayer, (]
[scales, ., get, (, index, ), ;, if, (, existing, !=, null, ), {, removeLayer, (, existing, ), ;, }]
[scales, ., get, (, index, ), ;, if, (, existing, !=, null, ), {, removeLayer, (, existing, ), ;, }]
[scales, ., get, (, index, ), ;, if, (, existing, !=, null, ), {, removeLayer, (, existing, ), ;, }]
[;, if, (, existing, !=, null, ), {, removeLayer, (, existing, ), ;, }, this, ., layers, ., add, (]
[existing, !=, null, ), {, removeLayer, (, existing, ), ;, }, this, ., layers, ., add, (, scale, ), ;]
[existing, !=, null, ), {, removeLayer, (, existing, ), ;, }, this, ., layers, ., add, (, scale, ), ;]
[existing, !=, null, ), {, removeLayer, (, existing, ), ;, }, this, ., layers, ., add, (, scale, ), ;]
[(, existing, ), ;, }, this, ., layers, ., add, (, scale, ), ;, this, ., scales, ., set, (]
[), ;, }, this, ., layers, ., add, (, scale, ), ;, this, ., scales, ., set, (, index, ,]
[this, ., layers, ., add, (, scale, ), ;, this, ., scales, ., set, (, index, ,, scale, ), ;]
[this, ., layers, ., add, (, scale, ), ;, this, ., scales, ., set, (, index, ,, scale, ), ;]
[add, (, scale, ), ;, this, ., scales, ., set, (, index, ,, scale, ), ;, scale, ., addChangeListener, (]
[), ;, this, ., scales, ., set, (, index, ,, scale, ), ;, scale, ., addChangeListener, (, this, ), ;]
[(, this, ), ;, fireChangeEvent, (, ), ;, }, public, DialScale, getScale, (, int, index, ), {, DialScale, result, =]
[fireChangeEvent, (, ), ;, }, public, DialScale, getScale, (, int, index, ), {, DialScale, result, =, null, ;, if, (]
[fireChangeEvent, (, ), ;, }, public, DialScale, getScale, (, int, index, ), {, DialScale, result, =, null, ;, if, (]
[fireChangeEvent, (, ), ;, }, public, DialScale, getScale, (, int, index, ), {, DialScale, result, =, null, ;, if, (]
[fireChangeEvent, (, ), ;, }, public, DialScale, getScale, (, int, index, ), {, DialScale, result, =, null, ;, if, (]
[(, int, index, ), {, DialScale, result, =, null, ;, if, (, this, ., scales, ., size, (, ), >]
[), {, DialScale, result, =, null, ;, if, (, this, ., scales, ., size, (, ), >, index, ), {]
[DialScale, result, =, null, ;, if, (, this, ., scales, ., size, (, ), >, index, ), {, result, =]
[null, ;, if, (, this, ., scales, ., size, (, ), >, index, ), {, result, =, (, DialScale, )]
[null, ;, if, (, this, ., scales, ., size, (, ), >, index, ), {, result, =, (, DialScale, )]
[null, ;, if, (, this, ., scales, ., size, (, ), >, index, ), {, result, =, (, DialScale, )]
[scales, ., size, (, ), >, index, ), {, result, =, (, DialScale, ), this, ., scales, ., get, (]
[>, index, ), {, result, =, (, DialScale, ), this, ., scales, ., get, (, index, ), ;, }, return]
[(, index, ), ;, }, return, result, ;, }, public, void, mapDatasetToScale, (, int, index, ,, int, scaleIndex, ), {]
[(, index, ), ;, }, return, result, ;, }, public, void, mapDatasetToScale, (, int, index, ,, int, scaleIndex, ), {]
[(, index, ), ;, }, return, result, ;, }, public, void, mapDatasetToScale, (, int, index, ,, int, scaleIndex, ), {]
[result, ;, }, public, void, mapDatasetToScale, (, int, index, ,, int, scaleIndex, ), {, this, ., datasetToScaleMap, ., set, (]
[}, public, void, mapDatasetToScale, (, int, index, ,, int, scaleIndex, ), {, this, ., datasetToScaleMap, ., set, (, index, ,]
[mapDatasetToScale, (, int, index, ,, int, scaleIndex, ), {, this, ., datasetToScaleMap, ., set, (, index, ,, new, Integer, (]
[,, int, scaleIndex, ), {, this, ., datasetToScaleMap, ., set, (, index, ,, new, Integer, (, scaleIndex, ), ), ;]
[scaleIndex, ), ), ;, fireChangeEvent, (, ), ;, }, public, DialScale, getScaleForDataset, (, int, datasetIndex, ), {, DialScale, result, =]
[;, fireChangeEvent, (, ), ;, }, public, DialScale, getScaleForDataset, (, int, datasetIndex, ), {, DialScale, result, =, (, DialScale, )]
[;, fireChangeEvent, (, ), ;, }, public, DialScale, getScaleForDataset, (, int, datasetIndex, ), {, DialScale, result, =, (, DialScale, )]
[;, fireChangeEvent, (, ), ;, }, public, DialScale, getScaleForDataset, (, int, datasetIndex, ), {, DialScale, result, =, (, DialScale, )]
[public, DialScale, getScaleForDataset, (, int, datasetIndex, ), {, DialScale, result, =, (, DialScale, ), this, ., scales, ., get, (]
[), {, DialScale, result, =, (, DialScale, ), this, ., scales, ., get, (, 0, ), ;, Integer, scaleIndex, =]
[result, =, (, DialScale, ), this, ., scales, ., get, (, 0, ), ;, Integer, scaleIndex, =, (, Integer, )]
[result, =, (, DialScale, ), this, ., scales, ., get, (, 0, ), ;, Integer, scaleIndex, =, (, Integer, )]
[result, =, (, DialScale, ), this, ., scales, ., get, (, 0, ), ;, Integer, scaleIndex, =, (, Integer, )]
[., scales, ., get, (, 0, ), ;, Integer, scaleIndex, =, (, Integer, ), this, ., datasetToScaleMap, ., get, (]
[0, ), ;, Integer, scaleIndex, =, (, Integer, ), this, ., datasetToScaleMap, ., get, (, datasetIndex, ), ;, if, (]
[0, ), ;, Integer, scaleIndex, =, (, Integer, ), this, ., datasetToScaleMap, ., get, (, datasetIndex, ), ;, if, (]
[;, Integer, scaleIndex, =, (, Integer, ), this, ., datasetToScaleMap, ., get, (, datasetIndex, ), ;, if, (, scaleIndex, !=]
[=, (, Integer, ), this, ., datasetToScaleMap, ., get, (, datasetIndex, ), ;, if, (, scaleIndex, !=, null, ), {]
[Integer, ), this, ., datasetToScaleMap, ., get, (, datasetIndex, ), ;, if, (, scaleIndex, !=, null, ), {, result, =]
[this, ., datasetToScaleMap, ., get, (, datasetIndex, ), ;, if, (, scaleIndex, !=, null, ), {, result, =, getScale, (]
[this, ., datasetToScaleMap, ., get, (, datasetIndex, ), ;, if, (, scaleIndex, !=, null, ), {, result, =, getScale, (]
[if, (, scaleIndex, !=, null, ), {, result, =, getScale, (, scaleIndex, ., intValue, (, ), ), ;, }, return]
[result, ;, }, public, static, Rectangle2D, rectangleByRadius, (, Rectangle2D, rect, ,, double, radiusW, ,, double, radiusH, ), {, if, (]
[result, ;, }, public, static, Rectangle2D, rectangleByRadius, (, Rectangle2D, rect, ,, double, radiusW, ,, double, radiusH, ), {, if, (]
[}, public, static, Rectangle2D, rectangleByRadius, (, Rectangle2D, rect, ,, double, radiusW, ,, double, radiusH, ), {, if, (, rect, ==]
[rectangleByRadius, (, Rectangle2D, rect, ,, double, radiusW, ,, double, radiusH, ), {, if, (, rect, ==, null, ), {, throw]
[rect, ,, double, radiusW, ,, double, radiusH, ), {, if, (, rect, ==, null, ), {, throw, new, IllegalArgumentException, (]
[), {, if, (, rect, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'rect' argument.", ), ;, }, double, x, =]
[), {, if, (, rect, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'rect' argument.", ), ;, }, double, x, =]
[throw, new, IllegalArgumentException, (, "Null 'rect' argument.", ), ;, }, double, x, =, rect, ., getCenterX, (, ), ;, double, y, =]
[throw, new, IllegalArgumentException, (, "Null 'rect' argument.", ), ;, }, double, x, =, rect, ., getCenterX, (, ), ;, double, y, =]
[x, =, rect, ., getCenterX, (, ), ;, double, y, =, rect, ., getCenterY, (, ), ;, double, w, =]
[x, =, rect, ., getCenterX, (, ), ;, double, y, =, rect, ., getCenterY, (, ), ;, double, w, =]
[x, =, rect, ., getCenterX, (, ), ;, double, y, =, rect, ., getCenterY, (, ), ;, double, w, =]
[), ;, double, y, =, rect, ., getCenterY, (, ), ;, double, w, =, rect, ., getWidth, (, ), *]
[rect, ., getCenterY, (, ), ;, double, w, =, rect, ., getWidth, (, ), *, radiusW, ;, double, h, =]
[rect, ., getCenterY, (, ), ;, double, w, =, rect, ., getWidth, (, ), *, radiusW, ;, double, h, =]
[rect, ., getCenterY, (, ), ;, double, w, =, rect, ., getWidth, (, ), *, radiusW, ;, double, h, =]
[double, w, =, rect, ., getWidth, (, ), *, radiusW, ;, double, h, =, rect, ., getHeight, (, ), *]
[rect, ., getWidth, (, ), *, radiusW, ;, double, h, =, rect, ., getHeight, (, ), *, radiusH, ;, return]
[*, radiusW, ;, double, h, =, rect, ., getHeight, (, ), *, radiusH, ;, return, new, Rectangle2D, ., Double, (]
[*, radiusW, ;, double, h, =, rect, ., getHeight, (, ), *, radiusH, ;, return, new, Rectangle2D, ., Double, (]
[;, double, h, =, rect, ., getHeight, (, ), *, radiusH, ;, return, new, Rectangle2D, ., Double, (, x, -]
[;, double, h, =, rect, ., getHeight, (, ), *, radiusH, ;, return, new, Rectangle2D, ., Double, (, x, -]
[h, =, rect, ., getHeight, (, ), *, radiusH, ;, return, new, Rectangle2D, ., Double, (, x, -, w, /]
[rect, ., getHeight, (, ), *, radiusH, ;, return, new, Rectangle2D, ., Double, (, x, -, w, /, 2.0, ,]
[rect, ., getHeight, (, ), *, radiusH, ;, return, new, Rectangle2D, ., Double, (, x, -, w, /, 2.0, ,]
[getHeight, (, ), *, radiusH, ;, return, new, Rectangle2D, ., Double, (, x, -, w, /, 2.0, ,, y, -]
[getHeight, (, ), *, radiusH, ;, return, new, Rectangle2D, ., Double, (, x, -, w, /, 2.0, ,, y, -]
[), *, radiusH, ;, return, new, Rectangle2D, ., Double, (, x, -, w, /, 2.0, ,, y, -, h, /]
[radiusH, ;, return, new, Rectangle2D, ., Double, (, x, -, w, /, 2.0, ,, y, -, h, /, 2.0, ,]
[return, new, Rectangle2D, ., Double, (, x, -, w, /, 2.0, ,, y, -, h, /, 2.0, ,, w, ,]
[y, -, h, /, 2.0, ,, w, ,, h, ), ;, }, public, void, dialLayerChanged, (, DialLayerChangeEvent, event, ), {]
[(, DialLayerChangeEvent, event, ), {, fireChangeEvent, (, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[(, DialLayerChangeEvent, event, ), {, fireChangeEvent, (, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[event, ), {, fireChangeEvent, (, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[(, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, DialPlot, ), ), {, return]
[true, ;, }, if, (, !, (, obj, instanceof, DialPlot, ), ), {, return, false, ;, }, DialPlot, that, =]
[if, (, !, (, obj, instanceof, DialPlot, ), ), {, return, false, ;, }, DialPlot, that, =, (, DialPlot, )]
[obj, instanceof, DialPlot, ), ), {, return, false, ;, }, DialPlot, that, =, (, DialPlot, ), obj, ;, if, (]
[instanceof, DialPlot, ), ), {, return, false, ;, }, DialPlot, that, =, (, DialPlot, ), obj, ;, if, (, !]
[instanceof, DialPlot, ), ), {, return, false, ;, }, DialPlot, that, =, (, DialPlot, ), obj, ;, if, (, !]
[{, return, false, ;, }, DialPlot, that, =, (, DialPlot, ), obj, ;, if, (, !, ObjectUtilities, ., equal, (]
[{, return, false, ;, }, DialPlot, that, =, (, DialPlot, ), obj, ;, if, (, !, ObjectUtilities, ., equal, (]
[}, DialPlot, that, =, (, DialPlot, ), obj, ;, if, (, !, ObjectUtilities, ., equal, (, this, ., background, ,]
[}, DialPlot, that, =, (, DialPlot, ), obj, ;, if, (, !, ObjectUtilities, ., equal, (, this, ., background, ,]
[obj, ;, if, (, !, ObjectUtilities, ., equal, (, this, ., background, ,, that, ., background, ), ), {, return]
[ObjectUtilities, ., equal, (, this, ., background, ,, that, ., background, ), ), {, return, false, ;, }, if, (]
[., equal, (, this, ., background, ,, that, ., background, ), ), {, return, false, ;, }, if, (, !]
[., equal, (, this, ., background, ,, that, ., background, ), ), {, return, false, ;, }, if, (, !]
[., background, ,, that, ., background, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (]
[., background, ,, that, ., background, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (]
[., background, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., cap, ,]
[., background, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., cap, ,]
[;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., cap, ,, that, ., cap, ), ), {, return]
[ObjectUtilities, ., equal, (, this, ., cap, ,, that, ., cap, ), ), {, return, false, ;, }, if, (]
[., equal, (, this, ., cap, ,, that, ., cap, ), ), {, return, false, ;, }, if, (, !]
[., equal, (, this, ., cap, ,, that, ., cap, ), ), {, return, false, ;, }, if, (, !]
[., equal, (, this, ., cap, ,, that, ., cap, ), ), {, return, false, ;, }, if, (, !]
[,, that, ., cap, ), ), {, return, false, ;, }, if, (, !, this, ., dialFrame, ., equals, (]
[,, that, ., cap, ), ), {, return, false, ;, }, if, (, !, this, ., dialFrame, ., equals, (]
[return, false, ;, }, if, (, !, this, ., dialFrame, ., equals, (, that, ., dialFrame, ), ), {, return]
[(, !, this, ., dialFrame, ., equals, (, that, ., dialFrame, ), ), {, return, false, ;, }, if, (]
[(, !, this, ., dialFrame, ., equals, (, that, ., dialFrame, ), ), {, return, false, ;, }, if, (]
[(, !, this, ., dialFrame, ., equals, (, that, ., dialFrame, ), ), {, return, false, ;, }, if, (]
[dialFrame, ., equals, (, that, ., dialFrame, ), ), {, return, false, ;, }, if, (, this, ., viewX, !=]
[dialFrame, ., equals, (, that, ., dialFrame, ), ), {, return, false, ;, }, if, (, this, ., viewX, !=]
[dialFrame, ), ), {, return, false, ;, }, if, (, this, ., viewX, !=, that, ., viewX, ), {, return]
[false, ;, }, if, (, this, ., viewX, !=, that, ., viewX, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., viewX, !=, that, ., viewX, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., viewX, !=, that, ., viewX, ), {, return, false, ;, }, if, (]
[(, this, ., viewX, !=, that, ., viewX, ), {, return, false, ;, }, if, (, this, ., viewY, !=]
[(, this, ., viewX, !=, that, ., viewX, ), {, return, false, ;, }, if, (, this, ., viewY, !=]
[., viewX, ), {, return, false, ;, }, if, (, this, ., viewY, !=, that, ., viewY, ), {, return]
[false, ;, }, if, (, this, ., viewY, !=, that, ., viewY, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., viewY, !=, that, ., viewY, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., viewY, !=, that, ., viewY, ), {, return, false, ;, }, if, (]
[(, this, ., viewY, !=, that, ., viewY, ), {, return, false, ;, }, if, (, this, ., viewW, !=]
[(, this, ., viewY, !=, that, ., viewY, ), {, return, false, ;, }, if, (, this, ., viewW, !=]
[., viewY, ), {, return, false, ;, }, if, (, this, ., viewW, !=, that, ., viewW, ), {, return]
[false, ;, }, if, (, this, ., viewW, !=, that, ., viewW, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., viewW, !=, that, ., viewW, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., viewW, !=, that, ., viewW, ), {, return, false, ;, }, if, (]
[(, this, ., viewW, !=, that, ., viewW, ), {, return, false, ;, }, if, (, this, ., viewH, !=]
[(, this, ., viewW, !=, that, ., viewW, ), {, return, false, ;, }, if, (, this, ., viewH, !=]
[., viewW, ), {, return, false, ;, }, if, (, this, ., viewH, !=, that, ., viewH, ), {, return]
[false, ;, }, if, (, this, ., viewH, !=, that, ., viewH, ), {, return, false, ;, }, if, (]
[;, }, if, (, this, ., viewH, !=, that, ., viewH, ), {, return, false, ;, }, if, (, !]
[;, }, if, (, this, ., viewH, !=, that, ., viewH, ), {, return, false, ;, }, if, (, !]
[;, }, if, (, this, ., viewH, !=, that, ., viewH, ), {, return, false, ;, }, if, (, !]
[viewH, !=, that, ., viewH, ), {, return, false, ;, }, if, (, !, this, ., layers, ., equals, (]
[viewH, !=, that, ., viewH, ), {, return, false, ;, }, if, (, !, this, ., layers, ., equals, (]
[return, false, ;, }, if, (, !, this, ., layers, ., equals, (, that, ., layers, ), ), {, return]
[(, !, this, ., layers, ., equals, (, that, ., layers, ), ), {, return, false, ;, }, if, (]
[!, this, ., layers, ., equals, (, that, ., layers, ), ), {, return, false, ;, }, if, (, !]
[!, this, ., layers, ., equals, (, that, ., layers, ), ), {, return, false, ;, }, if, (, !]
[!, this, ., layers, ., equals, (, that, ., layers, ), ), {, return, false, ;, }, if, (, !]
[(, that, ., layers, ), ), {, return, false, ;, }, if, (, !, this, ., pointers, ., equals, (]
[(, that, ., layers, ), ), {, return, false, ;, }, if, (, !, this, ., pointers, ., equals, (]
[return, false, ;, }, if, (, !, this, ., pointers, ., equals, (, that, ., pointers, ), ), {, return]
[if, (, !, this, ., pointers, ., equals, (, that, ., pointers, ), ), {, return, false, ;, }, return]
[if, (, !, this, ., pointers, ., equals, (, that, ., pointers, ), ), {, return, false, ;, }, return]
[., pointers, ., equals, (, that, ., pointers, ), ), {, return, false, ;, }, return, super, ., equals, (]
[;, }, return, super, ., equals, (, obj, ), ;, }, public, int, hashCode, (, ), {, int, result, =]
[return, super, ., equals, (, obj, ), ;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;]
[., equals, (, obj, ), ;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;, result, =]
[., equals, (, obj, ), ;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;, result, =]
[., equals, (, obj, ), ;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;, result, =]
[(, obj, ), ;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;, result, =, 37, *]
[), ;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;, result, =, 37, *, result, +]
[), ;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;, result, =, 37, *, result, +]
[int, hashCode, (, ), {, int, result, =, 193, ;, result, =, 37, *, result, +, ObjectUtilities, ., hashCode, (]
[int, hashCode, (, ), {, int, result, =, 193, ;, result, =, 37, *, result, +, ObjectUtilities, ., hashCode, (]
[int, result, =, 193, ;, result, =, 37, *, result, +, ObjectUtilities, ., hashCode, (, this, ., background, ), ;]
[=, 193, ;, result, =, 37, *, result, +, ObjectUtilities, ., hashCode, (, this, ., background, ), ;, result, =]
[=, 193, ;, result, =, 37, *, result, +, ObjectUtilities, ., hashCode, (, this, ., background, ), ;, result, =]
[=, 193, ;, result, =, 37, *, result, +, ObjectUtilities, ., hashCode, (, this, ., background, ), ;, result, =]
[;, result, =, 37, *, result, +, ObjectUtilities, ., hashCode, (, this, ., background, ), ;, result, =, 37, *]
[=, 37, *, result, +, ObjectUtilities, ., hashCode, (, this, ., background, ), ;, result, =, 37, *, result, +]
[=, 37, *, result, +, ObjectUtilities, ., hashCode, (, this, ., background, ), ;, result, =, 37, *, result, +]
[+, ObjectUtilities, ., hashCode, (, this, ., background, ), ;, result, =, 37, *, result, +, ObjectUtilities, ., hashCode, (]
[+, ObjectUtilities, ., hashCode, (, this, ., background, ), ;, result, =, 37, *, result, +, ObjectUtilities, ., hashCode, (]
[this, ., background, ), ;, result, =, 37, *, result, +, ObjectUtilities, ., hashCode, (, this, ., cap, ), ;]
[background, ), ;, result, =, 37, *, result, +, ObjectUtilities, ., hashCode, (, this, ., cap, ), ;, result, =]
[background, ), ;, result, =, 37, *, result, +, ObjectUtilities, ., hashCode, (, this, ., cap, ), ;, result, =]
[background, ), ;, result, =, 37, *, result, +, ObjectUtilities, ., hashCode, (, this, ., cap, ), ;, result, =]
[;, result, =, 37, *, result, +, ObjectUtilities, ., hashCode, (, this, ., cap, ), ;, result, =, 37, *]
[=, 37, *, result, +, ObjectUtilities, ., hashCode, (, this, ., cap, ), ;, result, =, 37, *, result, +]
[=, 37, *, result, +, ObjectUtilities, ., hashCode, (, this, ., cap, ), ;, result, =, 37, *, result, +]
[=, 37, *, result, +, ObjectUtilities, ., hashCode, (, this, ., cap, ), ;, result, =, 37, *, result, +]
[cap, ), ;, result, =, 37, *, result, +, this, ., dialFrame, ., hashCode, (, ), ;, long, temp, =]
[cap, ), ;, result, =, 37, *, result, +, this, ., dialFrame, ., hashCode, (, ), ;, long, temp, =]
[=, 37, *, result, +, this, ., dialFrame, ., hashCode, (, ), ;, long, temp, =, Double, ., doubleToLongBits, (]
[=, 37, *, result, +, this, ., dialFrame, ., hashCode, (, ), ;, long, temp, =, Double, ., doubleToLongBits, (]
[this, ., dialFrame, ., hashCode, (, ), ;, long, temp, =, Double, ., doubleToLongBits, (, this, ., viewX, ), ;]
[dialFrame, ., hashCode, (, ), ;, long, temp, =, Double, ., doubleToLongBits, (, this, ., viewX, ), ;, result, =]
[dialFrame, ., hashCode, (, ), ;, long, temp, =, Double, ., doubleToLongBits, (, this, ., viewX, ), ;, result, =]
[dialFrame, ., hashCode, (, ), ;, long, temp, =, Double, ., doubleToLongBits, (, this, ., viewX, ), ;, result, =]
[hashCode, (, ), ;, long, temp, =, Double, ., doubleToLongBits, (, this, ., viewX, ), ;, result, =, 37, *]
[), ;, long, temp, =, Double, ., doubleToLongBits, (, this, ., viewX, ), ;, result, =, 37, *, result, +]
[temp, =, Double, ., doubleToLongBits, (, this, ., viewX, ), ;, result, =, 37, *, result, +, (, int, )]
[=, Double, ., doubleToLongBits, (, this, ., viewX, ), ;, result, =, 37, *, result, +, (, int, ), (]
[=, Double, ., doubleToLongBits, (, this, ., viewX, ), ;, result, =, 37, *, result, +, (, int, ), (]
[., doubleToLongBits, (, this, ., viewX, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^]
[doubleToLongBits, (, this, ., viewX, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (]
[doubleToLongBits, (, this, ., viewX, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (]
[viewX, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >]
[=, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;]
[*, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =]
[*, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =]
[int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (]
[int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (]
[(, temp, >, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., viewY, ), ;]
[>, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., viewY, ), ;, result, =]
[>, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., viewY, ), ;, result, =]
[>, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., viewY, ), ;, result, =]
[>, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., viewY, ), ;, result, =, 37, *]
[), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., viewY, ), ;, result, =, 37, *, result, +]
[temp, =, Double, ., doubleToLongBits, (, this, ., viewY, ), ;, result, =, 37, *, result, +, (, int, )]
[=, Double, ., doubleToLongBits, (, this, ., viewY, ), ;, result, =, 37, *, result, +, (, int, ), (]
[=, Double, ., doubleToLongBits, (, this, ., viewY, ), ;, result, =, 37, *, result, +, (, int, ), (]
[., doubleToLongBits, (, this, ., viewY, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^]
[doubleToLongBits, (, this, ., viewY, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (]
[doubleToLongBits, (, this, ., viewY, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (]
[viewY, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >]
[=, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;]
[*, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =]
[*, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =]
[int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (]
[int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (]
[(, temp, >, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., viewW, ), ;]
[>, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., viewW, ), ;, result, =]
[>, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., viewW, ), ;, result, =]
[>, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., viewW, ), ;, result, =]
[>, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., viewW, ), ;, result, =, 37, *]
[), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., viewW, ), ;, result, =, 37, *, result, +]
[temp, =, Double, ., doubleToLongBits, (, this, ., viewW, ), ;, result, =, 37, *, result, +, (, int, )]
[=, Double, ., doubleToLongBits, (, this, ., viewW, ), ;, result, =, 37, *, result, +, (, int, ), (]
[=, Double, ., doubleToLongBits, (, this, ., viewW, ), ;, result, =, 37, *, result, +, (, int, ), (]
[., doubleToLongBits, (, this, ., viewW, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^]
[doubleToLongBits, (, this, ., viewW, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (]
[doubleToLongBits, (, this, ., viewW, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (]
[viewW, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >]
[=, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;]
[*, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =]
[*, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =]
[int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (]
[int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (]
[(, temp, >, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., viewH, ), ;]
[>, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., viewH, ), ;, result, =]
[>, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., viewH, ), ;, result, =]
[>, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., viewH, ), ;, result, =]
[>, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., viewH, ), ;, result, =, 37, *]
[), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., viewH, ), ;, result, =, 37, *, result, +]
[temp, =, Double, ., doubleToLongBits, (, this, ., viewH, ), ;, result, =, 37, *, result, +, (, int, )]
[=, Double, ., doubleToLongBits, (, this, ., viewH, ), ;, result, =, 37, *, result, +, (, int, ), (]
[=, Double, ., doubleToLongBits, (, this, ., viewH, ), ;, result, =, 37, *, result, +, (, int, ), (]
[., doubleToLongBits, (, this, ., viewH, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^]
[doubleToLongBits, (, this, ., viewH, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (]
[doubleToLongBits, (, this, ., viewH, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (]
[viewH, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >]
[37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, return]
[(, temp, >, >, >, 32, ), ), ;, return, result, ;, }, public, String, getPlotType, (, ), {, return]
[public, String, getPlotType, (, ), {, return, "DialPlot", ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {]
[public, String, getPlotType, (, ), {, return, "DialPlot", ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {]
[{, stream, ., defaultWriteObject, (, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {]
[{, stream, ., defaultWriteObject, (, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {]
