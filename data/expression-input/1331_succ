[;, private, final, Set, <, Node, >, goodFunctionNodes, =, Sets, ., newHashSet, (, ), ;, private, final, List, <, CallSite]
[., newHashSet, (, ), ;, private, final, Set, <, Node, >, goodFunctionNodes, =, Sets, ., newHashSet, (, ), ;, private]
[;, private, final, List, <, CallSite, >, callSites, =, Lists, ., newArrayList, (, ), ;, private, SimpleDefinitionFinder, defFinder, ;, private]
[., newHashSet, (, ), ;, private, final, List, <, CallSite, >, callSites, =, Lists, ., newArrayList, (, ), ;, private]
[;, private, SimpleDefinitionFinder, defFinder, ;, private, GatherFunctions, gatherFunctions, =, new, GatherFunctions, (, ), ;, ChainCalls, (, AbstractCompiler, compiler, ), {]
[., newArrayList, (, ), ;, private, SimpleDefinitionFinder, defFinder, ;, private, GatherFunctions, gatherFunctions, =, new, GatherFunctions, (, ), ;, ChainCalls, (]
[;, ChainCalls, (, AbstractCompiler, compiler, ), {, this, ., compiler, =, compiler, ;, }, @, Override, public, void, process, (]
[=, compiler, ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, defFinder, =, new]
[., compiler, =, compiler, ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, defFinder]
[;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, defFinder, =, new, SimpleDefinitionFinder, (]
[=, new, SimpleDefinitionFinder, (, compiler, ), ;, defFinder, ., process, (, externs, ,, root, ), ;, NodeTraversal, ., traverse, (]
[;, defFinder, ., process, (, externs, ,, root, ), ;, NodeTraversal, ., traverse, (, compiler, ,, root, ,, new, GatherCallSites]
[), ;, defFinder, ., process, (, externs, ,, root, ), ;, NodeTraversal, ., traverse, (, compiler, ,, root, ,, new]
[;, NodeTraversal, ., traverse, (, compiler, ,, root, ,, new, GatherCallSites, (, ), ), ;, for, (, CallSite, callSite, :]
[., process, (, externs, ,, root, ), ;, NodeTraversal, ., traverse, (, compiler, ,, root, ,, new, GatherCallSites, (, )]
[,, root, ), ;, NodeTraversal, ., traverse, (, compiler, ,, root, ,, new, GatherCallSites, (, ), ), ;, for, (]
[), ;, NodeTraversal, ., traverse, (, compiler, ,, root, ,, new, GatherCallSites, (, ), ), ;, for, (, CallSite, callSite]
[;, for, (, CallSite, callSite, :, callSites, ), {, callSite, ., parent, ., removeChild, (, callSite, ., n, ), ;]
[., traverse, (, compiler, ,, root, ,, new, GatherCallSites, (, ), ), ;, for, (, CallSite, callSite, :, callSites, )]
[,, root, ,, new, GatherCallSites, (, ), ), ;, for, (, CallSite, callSite, :, callSites, ), {, callSite, ., parent]
[,, new, GatherCallSites, (, ), ), ;, for, (, CallSite, callSite, :, callSites, ), {, callSite, ., parent, ., removeChild]
[), ;, for, (, CallSite, callSite, :, callSites, ), {, callSite, ., parent, ., removeChild, (, callSite, ., n, )]
[), {, callSite, ., parent, ., removeChild, (, callSite, ., n, ), ;, callSite, ., n, ., removeChild, (, callSite]
[;, callSite, ., n, ., removeChild, (, callSite, ., callNode, ), ;, callSite, ., nextGetPropNode, ., replaceChild, (, callSite, .]
[., removeChild, (, callSite, ., n, ), ;, callSite, ., n, ., removeChild, (, callSite, ., callNode, ), ;, callSite]
[., parent, ., removeChild, (, callSite, ., n, ), ;, callSite, ., n, ., removeChild, (, callSite, ., callNode, )]
[), ;, callSite, ., n, ., removeChild, (, callSite, ., callNode, ), ;, callSite, ., nextGetPropNode, ., replaceChild, (, callSite]
[., n, ), ;, callSite, ., n, ., removeChild, (, callSite, ., callNode, ), ;, callSite, ., nextGetPropNode, ., replaceChild]
[;, callSite, ., nextGetPropNode, ., replaceChild, (, callSite, ., nextGetPropFirstChildNode, ,, callSite, ., callNode, ), ;, compiler, ., reportCodeChange, (]
[., removeChild, (, callSite, ., callNode, ), ;, callSite, ., nextGetPropNode, ., replaceChild, (, callSite, ., nextGetPropFirstChildNode, ,, callSite, .]
[., n, ., removeChild, (, callSite, ., callNode, ), ;, callSite, ., nextGetPropNode, ., replaceChild, (, callSite, ., nextGetPropFirstChildNode, ,]
[), ;, callSite, ., nextGetPropNode, ., replaceChild, (, callSite, ., nextGetPropFirstChildNode, ,, callSite, ., callNode, ), ;, compiler, ., reportCodeChange]
[., callNode, ), ;, callSite, ., nextGetPropNode, ., replaceChild, (, callSite, ., nextGetPropFirstChildNode, ,, callSite, ., callNode, ), ;, compiler]
[;, compiler, ., reportCodeChange, (, ), ;, }, }, private, class, GatherFunctions, implements, ScopedCallback, {, @, Override, public, void, enterScope]
[., replaceChild, (, callSite, ., nextGetPropFirstChildNode, ,, callSite, ., callNode, ), ;, compiler, ., reportCodeChange, (, ), ;, }, }]
[., nextGetPropNode, ., replaceChild, (, callSite, ., nextGetPropFirstChildNode, ,, callSite, ., callNode, ), ;, compiler, ., reportCodeChange, (, ), ;]
[,, callSite, ., callNode, ), ;, compiler, ., reportCodeChange, (, ), ;, }, }, private, class, GatherFunctions, implements, ScopedCallback, {]
[., nextGetPropFirstChildNode, ,, callSite, ., callNode, ), ;, compiler, ., reportCodeChange, (, ), ;, }, }, private, class, GatherFunctions, implements]
[), ;, compiler, ., reportCodeChange, (, ), ;, }, }, private, class, GatherFunctions, implements, ScopedCallback, {, @, Override, public, void]
[., callNode, ), ;, compiler, ., reportCodeChange, (, ), ;, }, }, private, class, GatherFunctions, implements, ScopedCallback, {, @, Override]
[;, }, }, private, class, GatherFunctions, implements, ScopedCallback, {, @, Override, public, void, enterScope, (, NodeTraversal, t, ), {, ControlFlowGraph]
[., reportCodeChange, (, ), ;, }, }, private, class, GatherFunctions, implements, ScopedCallback, {, @, Override, public, void, enterScope, (, NodeTraversal]
[;, for, (, DiGraphEdge, <, Node, ,, Branch, >, s, :, cfg, ., getImplicitReturn, (, ), ., getInEdges, (, )]
[., getControlFlowGraph, (, ), ;, for, (, DiGraphEdge, <, Node, ,, Branch, >, s, :, cfg, ., getImplicitReturn, (, )]
[), {, Node, exitNode, =, s, ., getSource, (, ), ., getValue, (, ), ;, if, (, !, exitNode, .]
[., getInEdges, (, ), ), {, Node, exitNode, =, s, ., getSource, (, ), ., getValue, (, ), ;, if]
[., getImplicitReturn, (, ), ., getInEdges, (, ), ), {, Node, exitNode, =, s, ., getSource, (, ), ., getValue]
[;, if, (, !, exitNode, ., isReturn, (, ), ||, exitNode, ., getFirstChild, (, ), ==, null, ||, !, exitNode]
[., getValue, (, ), ;, if, (, !, exitNode, ., isReturn, (, ), ||, exitNode, ., getFirstChild, (, ), ==]
[., getSource, (, ), ., getValue, (, ), ;, if, (, !, exitNode, ., isReturn, (, ), ||, exitNode, .]
[), {, badFunctionNodes, ., add, (, t, ., getScopeRoot, (, ), ), ;, return, ;, }, }, goodFunctionNodes, ., add]
[||, !, exitNode, ., getFirstChild, (, ), ., isThis, (, ), ), {, badFunctionNodes, ., add, (, t, ., getScopeRoot]
[||, exitNode, ., getFirstChild, (, ), ==, null, ||, !, exitNode, ., getFirstChild, (, ), ., isThis, (, ), )]
[||, exitNode, ., getFirstChild, (, ), ==, null, ||, !, exitNode, ., getFirstChild, (, ), ., isThis, (, ), )]
[., isReturn, (, ), ||, exitNode, ., getFirstChild, (, ), ==, null, ||, !, exitNode, ., getFirstChild, (, ), .]
[||, !, exitNode, ., getFirstChild, (, ), ., isThis, (, ), ), {, badFunctionNodes, ., add, (, t, ., getScopeRoot]
[==, null, ||, !, exitNode, ., getFirstChild, (, ), ., isThis, (, ), ), {, badFunctionNodes, ., add, (, t]
[., getFirstChild, (, ), ==, null, ||, !, exitNode, ., getFirstChild, (, ), ., isThis, (, ), ), {, badFunctionNodes]
[||, !, exitNode, ., getFirstChild, (, ), ., isThis, (, ), ), {, badFunctionNodes, ., add, (, t, ., getScopeRoot]
[), {, badFunctionNodes, ., add, (, t, ., getScopeRoot, (, ), ), ;, return, ;, }, }, goodFunctionNodes, ., add]
[), {, badFunctionNodes, ., add, (, t, ., getScopeRoot, (, ), ), ;, return, ;, }, }, goodFunctionNodes, ., add]
[., isThis, (, ), ), {, badFunctionNodes, ., add, (, t, ., getScopeRoot, (, ), ), ;, return, ;, }]
[., getFirstChild, (, ), ., isThis, (, ), ), {, badFunctionNodes, ., add, (, t, ., getScopeRoot, (, ), )]
[;, return, ;, }, }, goodFunctionNodes, ., add, (, t, ., getScopeRoot, (, ), ), ;, }, @, Override, public]
[., add, (, t, ., getScopeRoot, (, ), ), ;, return, ;, }, }, goodFunctionNodes, ., add, (, t, .]
[), ;, return, ;, }, }, goodFunctionNodes, ., add, (, t, ., getScopeRoot, (, ), ), ;, }, @, Override]
[., getScopeRoot, (, ), ), ;, return, ;, }, }, goodFunctionNodes, ., add, (, t, ., getScopeRoot, (, ), )]
[;, }, @, Override, public, void, exitScope, (, NodeTraversal, t, ), {, }, @, Override, public, boolean, shouldTraverse, (, NodeTraversal]
[., add, (, t, ., getScopeRoot, (, ), ), ;, }, @, Override, public, void, exitScope, (, NodeTraversal, t, )]
[), ;, }, @, Override, public, void, exitScope, (, NodeTraversal, t, ), {, }, @, Override, public, boolean, shouldTraverse, (]
[., getScopeRoot, (, ), ), ;, }, @, Override, public, void, exitScope, (, NodeTraversal, t, ), {, }, @, Override]
[;, }, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, }, }]
[), {, return, ;, }, Node, callNode, =, n, ., getFirstChild, (, ), ;, if, (, !, callNode, ., isCall]
[), {, return, ;, }, Node, callNode, =, n, ., getFirstChild, (, ), ;, if, (, !, callNode, ., isCall]
[., isExprResult, (, ), ), {, return, ;, }, Node, callNode, =, n, ., getFirstChild, (, ), ;, if, (]
[;, if, (, !, callNode, ., isCall, (, ), ), {, return, ;, }, Node, getPropNode, =, callNode, ., getFirstChild]
[., getFirstChild, (, ), ;, if, (, !, callNode, ., isCall, (, ), ), {, return, ;, }, Node, getPropNode]
[), {, return, ;, }, Node, getPropNode, =, callNode, ., getFirstChild, (, ), ;, if, (, !, getPropNode, ., isGetProp]
[), {, return, ;, }, Node, getPropNode, =, callNode, ., getFirstChild, (, ), ;, if, (, !, getPropNode, ., isGetProp]
[., isCall, (, ), ), {, return, ;, }, Node, getPropNode, =, callNode, ., getFirstChild, (, ), ;, if, (]
[;, if, (, !, getPropNode, ., isGetProp, (, ), ), {, return, ;, }, Node, getPropFirstChildNode, =, getPropNode, ., getFirstChild]
[., getFirstChild, (, ), ;, if, (, !, getPropNode, ., isGetProp, (, ), ), {, return, ;, }, Node, getPropFirstChildNode]
[), {, return, ;, }, Node, getPropFirstChildNode, =, getPropNode, ., getFirstChild, (, ), ;, Collection, <, Definition, >, definitions, =]
[), {, return, ;, }, Node, getPropFirstChildNode, =, getPropNode, ., getFirstChild, (, ), ;, Collection, <, Definition, >, definitions, =]
[., isGetProp, (, ), ), {, return, ;, }, Node, getPropFirstChildNode, =, getPropNode, ., getFirstChild, (, ), ;, Collection, <]
[;, Collection, <, Definition, >, definitions, =, defFinder, ., getDefinitionsReferencedAt, (, getPropNode, ), ;, if, (, definitions, ==, null, )]
[., getFirstChild, (, ), ;, Collection, <, Definition, >, definitions, =, defFinder, ., getDefinitionsReferencedAt, (, getPropNode, ), ;, if, (]
[;, if, (, definitions, ==, null, ), {, return, ;, }, for, (, Definition, definition, :, definitions, ), {, Node]
[., getDefinitionsReferencedAt, (, getPropNode, ), ;, if, (, definitions, ==, null, ), {, return, ;, }, for, (, Definition, definition]
[), ;, if, (, definitions, ==, null, ), {, return, ;, }, for, (, Definition, definition, :, definitions, ), {]
[), {, return, ;, }, for, (, Definition, definition, :, definitions, ), {, Node, rValue, =, definition, ., getRValue, (]
[==, null, ), {, return, ;, }, for, (, Definition, definition, :, definitions, ), {, Node, rValue, =, definition, .]
[), {, return, ;, }, for, (, Definition, definition, :, definitions, ), {, Node, rValue, =, definition, ., getRValue, (]
[), {, Node, rValue, =, definition, ., getRValue, (, ), ;, if, (, rValue, ==, null, ), {, return, ;]
[;, if, (, rValue, ==, null, ), {, return, ;, }, if, (, badFunctionNodes, ., contains, (, rValue, ), )]
[., getRValue, (, ), ;, if, (, rValue, ==, null, ), {, return, ;, }, if, (, badFunctionNodes, ., contains]
[), {, return, ;, }, if, (, badFunctionNodes, ., contains, (, rValue, ), ), {, return, ;, }, if, (]
[==, null, ), {, return, ;, }, if, (, badFunctionNodes, ., contains, (, rValue, ), ), {, return, ;, }]
[), {, return, ;, }, if, (, badFunctionNodes, ., contains, (, rValue, ), ), {, return, ;, }, if, (]
[), {, return, ;, }, if, (, !, goodFunctionNodes, ., contains, (, rValue, ), ), {, NodeTraversal, ., traverse, (]
[., contains, (, rValue, ), ), {, return, ;, }, if, (, !, goodFunctionNodes, ., contains, (, rValue, ), )]
[), ), {, return, ;, }, if, (, !, goodFunctionNodes, ., contains, (, rValue, ), ), {, NodeTraversal, ., traverse]
[), {, NodeTraversal, ., traverse, (, compiler, ,, rValue, ,, gatherFunctions, ), ;, if, (, badFunctionNodes, ., contains, (, rValue]
[), {, NodeTraversal, ., traverse, (, compiler, ,, rValue, ,, gatherFunctions, ), ;, if, (, badFunctionNodes, ., contains, (, rValue]
[., contains, (, rValue, ), ), {, NodeTraversal, ., traverse, (, compiler, ,, rValue, ,, gatherFunctions, ), ;, if, (]
[), ), {, NodeTraversal, ., traverse, (, compiler, ,, rValue, ,, gatherFunctions, ), ;, if, (, badFunctionNodes, ., contains, (]
[;, if, (, badFunctionNodes, ., contains, (, rValue, ), ), {, return, ;, }, }, }, Node, nextNode, =, n]
[., traverse, (, compiler, ,, rValue, ,, gatherFunctions, ), ;, if, (, badFunctionNodes, ., contains, (, rValue, ), ), {]
[,, rValue, ,, gatherFunctions, ), ;, if, (, badFunctionNodes, ., contains, (, rValue, ), ), {, return, ;, }, }]
[,, gatherFunctions, ), ;, if, (, badFunctionNodes, ., contains, (, rValue, ), ), {, return, ;, }, }, }, Node]
[), ;, if, (, badFunctionNodes, ., contains, (, rValue, ), ), {, return, ;, }, }, }, Node, nextNode, =]
[), {, return, ;, }, }, }, Node, nextNode, =, n, ., getNext, (, ), ;, if, (, nextNode, ==]
[., contains, (, rValue, ), ), {, return, ;, }, }, }, Node, nextNode, =, n, ., getNext, (, )]
[), ), {, return, ;, }, }, }, Node, nextNode, =, n, ., getNext, (, ), ;, if, (, nextNode]
[;, if, (, nextNode, ==, null, ||, !, nextNode, ., isExprResult, (, ), ), {, return, ;, }, Node, nextCallNode]
[., getNext, (, ), ;, if, (, nextNode, ==, null, ||, !, nextNode, ., isExprResult, (, ), ), {, return]
[), {, return, ;, }, Node, nextCallNode, =, nextNode, ., getFirstChild, (, ), ;, if, (, !, nextCallNode, ., isCall]
[||, !, nextNode, ., isExprResult, (, ), ), {, return, ;, }, Node, nextCallNode, =, nextNode, ., getFirstChild, (, )]
[==, null, ||, !, nextNode, ., isExprResult, (, ), ), {, return, ;, }, Node, nextCallNode, =, nextNode, ., getFirstChild]
[||, !, nextNode, ., isExprResult, (, ), ), {, return, ;, }, Node, nextCallNode, =, nextNode, ., getFirstChild, (, )]
[), {, return, ;, }, Node, nextCallNode, =, nextNode, ., getFirstChild, (, ), ;, if, (, !, nextCallNode, ., isCall]
[), {, return, ;, }, Node, nextCallNode, =, nextNode, ., getFirstChild, (, ), ;, if, (, !, nextCallNode, ., isCall]
[., isExprResult, (, ), ), {, return, ;, }, Node, nextCallNode, =, nextNode, ., getFirstChild, (, ), ;, if, (]
[;, if, (, !, nextCallNode, ., isCall, (, ), ), {, return, ;, }, Node, nextGetPropNode, =, nextCallNode, ., getFirstChild]
[., getFirstChild, (, ), ;, if, (, !, nextCallNode, ., isCall, (, ), ), {, return, ;, }, Node, nextGetPropNode]
[), {, return, ;, }, Node, nextGetPropNode, =, nextCallNode, ., getFirstChild, (, ), ;, if, (, !, nextGetPropNode, ., isGetProp]
[), {, return, ;, }, Node, nextGetPropNode, =, nextCallNode, ., getFirstChild, (, ), ;, if, (, !, nextGetPropNode, ., isGetProp]
[., isCall, (, ), ), {, return, ;, }, Node, nextGetPropNode, =, nextCallNode, ., getFirstChild, (, ), ;, if, (]
[;, if, (, !, nextGetPropNode, ., isGetProp, (, ), ), {, return, ;, }, Node, nextGetPropFirstChildNode, =, nextGetPropNode, ., getFirstChild]
[., getFirstChild, (, ), ;, if, (, !, nextGetPropNode, ., isGetProp, (, ), ), {, return, ;, }, Node, nextGetPropFirstChildNode]
[), {, return, ;, }, Node, nextGetPropFirstChildNode, =, nextGetPropNode, ., getFirstChild, (, ), ;, if, (, !, compiler, ., areNodesEqualForInlining]
[), {, return, ;, }, Node, nextGetPropFirstChildNode, =, nextGetPropNode, ., getFirstChild, (, ), ;, if, (, !, compiler, ., areNodesEqualForInlining]
[., isGetProp, (, ), ), {, return, ;, }, Node, nextGetPropFirstChildNode, =, nextGetPropNode, ., getFirstChild, (, ), ;, if, (]
[;, if, (, !, compiler, ., areNodesEqualForInlining, (, nextGetPropFirstChildNode, ,, getPropFirstChildNode, ), ), {, return, ;, }, if, (, NodeUtil]
[., getFirstChild, (, ), ;, if, (, !, compiler, ., areNodesEqualForInlining, (, nextGetPropFirstChildNode, ,, getPropFirstChildNode, ), ), {, return, ;]
[), {, return, ;, }, if, (, NodeUtil, ., mayEffectMutableState, (, getPropFirstChildNode, ), ), {, return, ;, }, callSites, .]
[), {, return, ;, }, if, (, NodeUtil, ., mayEffectMutableState, (, getPropFirstChildNode, ), ), {, return, ;, }, callSites, .]
[., areNodesEqualForInlining, (, nextGetPropFirstChildNode, ,, getPropFirstChildNode, ), ), {, return, ;, }, if, (, NodeUtil, ., mayEffectMutableState, (, getPropFirstChildNode, )]
[,, getPropFirstChildNode, ), ), {, return, ;, }, if, (, NodeUtil, ., mayEffectMutableState, (, getPropFirstChildNode, ), ), {, return, ;]
[), ), {, return, ;, }, if, (, NodeUtil, ., mayEffectMutableState, (, getPropFirstChildNode, ), ), {, return, ;, }, callSites]
[), {, return, ;, }, callSites, ., add, (, new, CallSite, (, parent, ,, n, ,, callNode, ,, nextGetPropNode, ,]
[., mayEffectMutableState, (, getPropFirstChildNode, ), ), {, return, ;, }, callSites, ., add, (, new, CallSite, (, parent, ,, n]
[), ), {, return, ;, }, callSites, ., add, (, new, CallSite, (, parent, ,, n, ,, callNode, ,, nextGetPropNode]
[;, }, }, private, static, class, CallSite, {, final, Node, parent, ;, final, Node, n, ;, final, Node, callNode, ;]
[., add, (, new, CallSite, (, parent, ,, n, ,, callNode, ,, nextGetPropNode, ,, nextGetPropFirstChildNode, ), ), ;, }, }]
[), ;, }, }, private, static, class, CallSite, {, final, Node, parent, ;, final, Node, n, ;, final, Node, callNode]
[,, n, ,, callNode, ,, nextGetPropNode, ,, nextGetPropFirstChildNode, ), ), ;, }, }, private, static, class, CallSite, {, final, Node]
[,, callNode, ,, nextGetPropNode, ,, nextGetPropFirstChildNode, ), ), ;, }, }, private, static, class, CallSite, {, final, Node, parent, ;]
[,, nextGetPropNode, ,, nextGetPropFirstChildNode, ), ), ;, }, }, private, static, class, CallSite, {, final, Node, parent, ;, final, Node]
[,, nextGetPropFirstChildNode, ), ), ;, }, }, private, static, class, CallSite, {, final, Node, parent, ;, final, Node, n, ;]
[), ), ;, }, }, private, static, class, CallSite, {, final, Node, parent, ;, final, Node, n, ;, final, Node]
[=, parent, ;, this, ., n, =, n, ;, this, ., callNode, =, callNode, ;, this, ., nextGetPropNode, =, nextGetPropNode]
[., parent, =, parent, ;, this, ., n, =, n, ;, this, ., callNode, =, callNode, ;, this, ., nextGetPropNode]
[;, this, ., n, =, n, ;, this, ., callNode, =, callNode, ;, this, ., nextGetPropNode, =, nextGetPropNode, ;, this]
[=, n, ;, this, ., callNode, =, callNode, ;, this, ., nextGetPropNode, =, nextGetPropNode, ;, this, ., nextGetPropFirstChildNode, =, nextGetPropFirstChildNode]
[., n, =, n, ;, this, ., callNode, =, callNode, ;, this, ., nextGetPropNode, =, nextGetPropNode, ;, this, ., nextGetPropFirstChildNode]
[;, this, ., callNode, =, callNode, ;, this, ., nextGetPropNode, =, nextGetPropNode, ;, this, ., nextGetPropFirstChildNode, =, nextGetPropFirstChildNode, ;, }]
[=, callNode, ;, this, ., nextGetPropNode, =, nextGetPropNode, ;, this, ., nextGetPropFirstChildNode, =, nextGetPropFirstChildNode, ;, }, }, }]
[., callNode, =, callNode, ;, this, ., nextGetPropNode, =, nextGetPropNode, ;, this, ., nextGetPropFirstChildNode, =, nextGetPropFirstChildNode, ;, }, }, }]
[;, this, ., nextGetPropNode, =, nextGetPropNode, ;, this, ., nextGetPropFirstChildNode, =, nextGetPropFirstChildNode, ;, }, }, }]
[=, nextGetPropNode, ;, this, ., nextGetPropFirstChildNode, =, nextGetPropFirstChildNode, ;, }, }, }]
[., nextGetPropNode, =, nextGetPropNode, ;, this, ., nextGetPropFirstChildNode, =, nextGetPropFirstChildNode, ;, }, }, }]
[;, this, ., nextGetPropFirstChildNode, =, nextGetPropFirstChildNode, ;, }, }, }]
[=, nextGetPropFirstChildNode, ;, }, }, }]
[., nextGetPropFirstChildNode, =, nextGetPropFirstChildNode, ;, }, }, }]
[;, }, }, }]
