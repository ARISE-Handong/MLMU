[., chart, ., util, ., Size2D, ;, public, class, ColorBlock, extends, AbstractBlock, implements, Block, {, static, final, long, serialVersionUID, =]
[private, transient, Paint, paint, ;, public, ColorBlock, (, Paint, paint, ,, double, width, ,, double, height, ), {, if, (]
[private, transient, Paint, paint, ;, public, ColorBlock, (, Paint, paint, ,, double, width, ,, double, height, ), {, if, (]
[Paint, paint, ;, public, ColorBlock, (, Paint, paint, ,, double, width, ,, double, height, ), {, if, (, paint, ==]
[ColorBlock, (, Paint, paint, ,, double, width, ,, double, height, ), {, if, (, paint, ==, null, ), {, throw]
[paint, ,, double, width, ,, double, height, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (]
[,, double, height, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }]
[,, double, height, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }]
[{, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., paint, =]
[(, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., paint, =, paint, ;]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., paint, =, paint, ;, setWidth, (]
[{, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., paint, =, paint, ;, setWidth, (, width, ), ;]
[new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., paint, =, paint, ;, setWidth, (, width, ), ;, setHeight, (]
[paint, ;, setWidth, (, width, ), ;, setHeight, (, height, ), ;, }, public, Paint, getPaint, (, ), {, return]
[paint, ;, setWidth, (, width, ), ;, setHeight, (, height, ), ;, }, public, Paint, getPaint, (, ), {, return]
[), {, return, this, ., paint, ;, }, public, Size2D, arrange, (, Graphics2D, g2, ,, RectangleConstraint, constraint, ), {, return]
[this, ., paint, ;, }, public, Size2D, arrange, (, Graphics2D, g2, ,, RectangleConstraint, constraint, ), {, return, new, Size2D, (]
[paint, ;, }, public, Size2D, arrange, (, Graphics2D, g2, ,, RectangleConstraint, constraint, ), {, return, new, Size2D, (, calculateTotalWidth, (]
[arrange, (, Graphics2D, g2, ,, RectangleConstraint, constraint, ), {, return, new, Size2D, (, calculateTotalWidth, (, getWidth, (, ), ), ,]
[Graphics2D, g2, ,, RectangleConstraint, constraint, ), {, return, new, Size2D, (, calculateTotalWidth, (, getWidth, (, ), ), ,, calculateTotalHeight, (]
[calculateTotalHeight, (, getHeight, (, ), ), ), ;, }, public, void, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ), {]
[getHeight, (, ), ), ), ;, }, public, void, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ), {, area, =]
[), ), ), ;, }, public, void, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ), {, area, =, trimMargin, (]
[;, }, public, void, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ), {, area, =, trimMargin, (, area, ), ;]
[public, void, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ), {, area, =, trimMargin, (, area, ), ;, drawBorder, (]
[draw, (, Graphics2D, g2, ,, Rectangle2D, area, ), {, area, =, trimMargin, (, area, ), ;, drawBorder, (, g2, ,]
[g2, ,, Rectangle2D, area, ), {, area, =, trimMargin, (, area, ), ;, drawBorder, (, g2, ,, area, ), ;]
[Rectangle2D, area, ), {, area, =, trimMargin, (, area, ), ;, drawBorder, (, g2, ,, area, ), ;, area, =]
[), {, area, =, trimMargin, (, area, ), ;, drawBorder, (, g2, ,, area, ), ;, area, =, trimBorder, (]
[=, trimMargin, (, area, ), ;, drawBorder, (, g2, ,, area, ), ;, area, =, trimBorder, (, area, ), ;]
[(, area, ), ;, drawBorder, (, g2, ,, area, ), ;, area, =, trimBorder, (, area, ), ;, area, =]
[), ;, drawBorder, (, g2, ,, area, ), ;, area, =, trimBorder, (, area, ), ;, area, =, trimPadding, (]
[(, g2, ,, area, ), ;, area, =, trimBorder, (, area, ), ;, area, =, trimPadding, (, area, ), ;]
[(, g2, ,, area, ), ;, area, =, trimBorder, (, area, ), ;, area, =, trimPadding, (, area, ), ;]
[), ;, area, =, trimBorder, (, area, ), ;, area, =, trimPadding, (, area, ), ;, g2, ., setPaint, (]
[), ;, area, =, trimBorder, (, area, ), ;, area, =, trimPadding, (, area, ), ;, g2, ., setPaint, (]
[(, area, ), ;, area, =, trimPadding, (, area, ), ;, g2, ., setPaint, (, this, ., paint, ), ;]
[(, area, ), ;, area, =, trimPadding, (, area, ), ;, g2, ., setPaint, (, this, ., paint, ), ;]
[area, =, trimPadding, (, area, ), ;, g2, ., setPaint, (, this, ., paint, ), ;, g2, ., fill, (]
[fill, (, area, ), ;, }, public, Object, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ,, Object, params, ), {]
[area, ), ;, }, public, Object, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ,, Object, params, ), {, draw, (]
[;, }, public, Object, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ,, Object, params, ), {, draw, (, g2, ,]
[draw, (, Graphics2D, g2, ,, Rectangle2D, area, ,, Object, params, ), {, draw, (, g2, ,, area, ), ;, return]
[(, g2, ,, area, ), ;, return, null, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[(, g2, ,, area, ), ;, return, null, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[,, area, ), ;, return, null, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[return, null, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, ColorBlock, ), ), {, return]
[true, ;, }, if, (, !, (, obj, instanceof, ColorBlock, ), ), {, return, false, ;, }, ColorBlock, that, =]
[if, (, !, (, obj, instanceof, ColorBlock, ), ), {, return, false, ;, }, ColorBlock, that, =, (, ColorBlock, )]
[obj, instanceof, ColorBlock, ), ), {, return, false, ;, }, ColorBlock, that, =, (, ColorBlock, ), obj, ;, if, (]
[instanceof, ColorBlock, ), ), {, return, false, ;, }, ColorBlock, that, =, (, ColorBlock, ), obj, ;, if, (, !]
[instanceof, ColorBlock, ), ), {, return, false, ;, }, ColorBlock, that, =, (, ColorBlock, ), obj, ;, if, (, !]
[{, return, false, ;, }, ColorBlock, that, =, (, ColorBlock, ), obj, ;, if, (, !, PaintUtilities, ., equal, (]
[{, return, false, ;, }, ColorBlock, that, =, (, ColorBlock, ), obj, ;, if, (, !, PaintUtilities, ., equal, (]
[}, ColorBlock, that, =, (, ColorBlock, ), obj, ;, if, (, !, PaintUtilities, ., equal, (, this, ., paint, ,]
[}, ColorBlock, that, =, (, ColorBlock, ), obj, ;, if, (, !, PaintUtilities, ., equal, (, this, ., paint, ,]
[obj, ;, if, (, !, PaintUtilities, ., equal, (, this, ., paint, ,, that, ., paint, ), ), {, return]
[!, PaintUtilities, ., equal, (, this, ., paint, ,, that, ., paint, ), ), {, return, false, ;, }, return]
[!, PaintUtilities, ., equal, (, this, ., paint, ,, that, ., paint, ), ), {, return, false, ;, }, return]
[(, this, ., paint, ,, that, ., paint, ), ), {, return, false, ;, }, return, super, ., equals, (]
[}, return, super, ., equals, (, obj, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {]
[}, return, super, ., equals, (, obj, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {]
[obj, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;]
[obj, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;]
[private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (]
[private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (]
[ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (, this, ., paint, ,]
[this, ., paint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {]
[this, ., paint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {]
[;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;]
[;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;]
[readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., paint, =]
[readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., paint, =]
[), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., paint, =, SerialUtilities, ., readPaint, (]
