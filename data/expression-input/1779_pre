[., google, ., javascript, ., rhino, ., Token, ;, final, class, CheckGlobalThis, implements, Callback, {, static, final, DiagnosticType, GLOBAL_THIS, =]
[., google, ., javascript, ., rhino, ., Token, ;, final, class, CheckGlobalThis, implements, Callback, {, static, final, DiagnosticType, GLOBAL_THIS, =]
[., rhino, ., Token, ;, final, class, CheckGlobalThis, implements, Callback, {, static, final, DiagnosticType, GLOBAL_THIS, =, DiagnosticType, ., warning, (]
[., Token, ;, final, class, CheckGlobalThis, implements, Callback, {, static, final, DiagnosticType, GLOBAL_THIS, =, DiagnosticType, ., warning, (, "JSC_USED_GLOBAL_THIS", ,]
[GLOBAL_THIS, =, DiagnosticType, ., warning, (, "JSC_USED_GLOBAL_THIS", ,, "dangerous use of the global 'this' object", ), ;, private, final, AbstractCompiler, compiler, ;, private, Node, assignLhsChild, =]
["dangerous use of the global 'this' object", ), ;, private, final, AbstractCompiler, compiler, ;, private, Node, assignLhsChild, =, null, ;, CheckGlobalThis, (, AbstractCompiler, compiler, ), {]
["dangerous use of the global 'this' object", ), ;, private, final, AbstractCompiler, compiler, ;, private, Node, assignLhsChild, =, null, ;, CheckGlobalThis, (, AbstractCompiler, compiler, ), {]
[final, AbstractCompiler, compiler, ;, private, Node, assignLhsChild, =, null, ;, CheckGlobalThis, (, AbstractCompiler, compiler, ), {, this, ., compiler, =]
[;, }, @, Override, public, boolean, shouldTraverse, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (]
[;, }, @, Override, public, boolean, shouldTraverse, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (]
[,, Node, n, ,, Node, parent, ), {, if, (, n, ., isFunction, (, ), ), {, JSDocInfo, jsDoc, =]
[n, ,, Node, parent, ), {, if, (, n, ., isFunction, (, ), ), {, JSDocInfo, jsDoc, =, getFunctionJsDocInfo, (]
[{, if, (, n, ., isFunction, (, ), ), {, JSDocInfo, jsDoc, =, getFunctionJsDocInfo, (, n, ), ;, if, (]
[{, if, (, n, ., isFunction, (, ), ), {, JSDocInfo, jsDoc, =, getFunctionJsDocInfo, (, n, ), ;, if, (]
[{, if, (, n, ., isFunction, (, ), ), {, JSDocInfo, jsDoc, =, getFunctionJsDocInfo, (, n, ), ;, if, (]
[(, n, ., isFunction, (, ), ), {, JSDocInfo, jsDoc, =, getFunctionJsDocInfo, (, n, ), ;, if, (, jsDoc, !=]
[., isFunction, (, ), ), {, JSDocInfo, jsDoc, =, getFunctionJsDocInfo, (, n, ), ;, if, (, jsDoc, !=, null, &&]
[isFunction, (, ), ), {, JSDocInfo, jsDoc, =, getFunctionJsDocInfo, (, n, ), ;, if, (, jsDoc, !=, null, &&, (]
[isFunction, (, ), ), {, JSDocInfo, jsDoc, =, getFunctionJsDocInfo, (, n, ), ;, if, (, jsDoc, !=, null, &&, (]
[isFunction, (, ), ), {, JSDocInfo, jsDoc, =, getFunctionJsDocInfo, (, n, ), ;, if, (, jsDoc, !=, null, &&, (]
[isFunction, (, ), ), {, JSDocInfo, jsDoc, =, getFunctionJsDocInfo, (, n, ), ;, if, (, jsDoc, !=, null, &&, (]
[isFunction, (, ), ), {, JSDocInfo, jsDoc, =, getFunctionJsDocInfo, (, n, ), ;, if, (, jsDoc, !=, null, &&, (]
[jsDoc, =, getFunctionJsDocInfo, (, n, ), ;, if, (, jsDoc, !=, null, &&, (, jsDoc, ., isConstructor, (, ), ||]
[jsDoc, =, getFunctionJsDocInfo, (, n, ), ;, if, (, jsDoc, !=, null, &&, (, jsDoc, ., isConstructor, (, ), ||]
[;, if, (, jsDoc, !=, null, &&, (, jsDoc, ., isConstructor, (, ), ||, jsDoc, ., isInterface, (, ), ||]
[;, if, (, jsDoc, !=, null, &&, (, jsDoc, ., isConstructor, (, ), ||, jsDoc, ., isInterface, (, ), ||]
[&&, (, jsDoc, ., isConstructor, (, ), ||, jsDoc, ., isInterface, (, ), ||, jsDoc, ., hasThisType, (, ), ||]
[&&, (, jsDoc, ., isConstructor, (, ), ||, jsDoc, ., isInterface, (, ), ||, jsDoc, ., hasThisType, (, ), ||]
[., isInterface, (, ), ||, jsDoc, ., hasThisType, (, ), ||, jsDoc, ., isOverride, (, ), ), ), {, return]
[., hasThisType, (, ), ||, jsDoc, ., isOverride, (, ), ), ), {, return, false, ;, }, int, pType, =]
[., hasThisType, (, ), ||, jsDoc, ., isOverride, (, ), ), ), {, return, false, ;, }, int, pType, =]
[(, ), ), ), {, return, false, ;, }, int, pType, =, parent, ., getType, (, ), ;, if, (]
[), ), ), {, return, false, ;, }, int, pType, =, parent, ., getType, (, ), ;, if, (, !]
[), ), {, return, false, ;, }, int, pType, =, parent, ., getType, (, ), ;, if, (, !, (]
[), ), {, return, false, ;, }, int, pType, =, parent, ., getType, (, ), ;, if, (, !, (]
[), ), {, return, false, ;, }, int, pType, =, parent, ., getType, (, ), ;, if, (, !, (]
[), ), {, return, false, ;, }, int, pType, =, parent, ., getType, (, ), ;, if, (, !, (]
[), ), {, return, false, ;, }, int, pType, =, parent, ., getType, (, ), ;, if, (, !, (]
[), ), {, return, false, ;, }, int, pType, =, parent, ., getType, (, ), ;, if, (, !, (]
[{, return, false, ;, }, int, pType, =, parent, ., getType, (, ), ;, if, (, !, (, pType, ==]
[{, return, false, ;, }, int, pType, =, parent, ., getType, (, ), ;, if, (, !, (, pType, ==]
[}, int, pType, =, parent, ., getType, (, ), ;, if, (, !, (, pType, ==, Token, ., BLOCK, ||]
[}, int, pType, =, parent, ., getType, (, ), ;, if, (, !, (, pType, ==, Token, ., BLOCK, ||]
[pType, =, parent, ., getType, (, ), ;, if, (, !, (, pType, ==, Token, ., BLOCK, ||, pType, ==]
[pType, =, parent, ., getType, (, ), ;, if, (, !, (, pType, ==, Token, ., BLOCK, ||, pType, ==]
[getType, (, ), ;, if, (, !, (, pType, ==, Token, ., BLOCK, ||, pType, ==, Token, ., SCRIPT, ||]
[getType, (, ), ;, if, (, !, (, pType, ==, Token, ., BLOCK, ||, pType, ==, Token, ., SCRIPT, ||]
[), ;, if, (, !, (, pType, ==, Token, ., BLOCK, ||, pType, ==, Token, ., SCRIPT, ||, pType, ==]
[), ;, if, (, !, (, pType, ==, Token, ., BLOCK, ||, pType, ==, Token, ., SCRIPT, ||, pType, ==]
[!, (, pType, ==, Token, ., BLOCK, ||, pType, ==, Token, ., SCRIPT, ||, pType, ==, Token, ., NAME, ||]
[!, (, pType, ==, Token, ., BLOCK, ||, pType, ==, Token, ., SCRIPT, ||, pType, ==, Token, ., NAME, ||]
[pType, ==, Token, ., BLOCK, ||, pType, ==, Token, ., SCRIPT, ||, pType, ==, Token, ., NAME, ||, pType, ==]
[pType, ==, Token, ., BLOCK, ||, pType, ==, Token, ., SCRIPT, ||, pType, ==, Token, ., NAME, ||, pType, ==]
[BLOCK, ||, pType, ==, Token, ., SCRIPT, ||, pType, ==, Token, ., NAME, ||, pType, ==, Token, ., ASSIGN, ||]
[BLOCK, ||, pType, ==, Token, ., SCRIPT, ||, pType, ==, Token, ., NAME, ||, pType, ==, Token, ., ASSIGN, ||]
[pType, ==, Token, ., SCRIPT, ||, pType, ==, Token, ., NAME, ||, pType, ==, Token, ., ASSIGN, ||, pType, ==]
[pType, ==, Token, ., SCRIPT, ||, pType, ==, Token, ., NAME, ||, pType, ==, Token, ., ASSIGN, ||, pType, ==]
[==, Token, ., NAME, ||, pType, ==, Token, ., ASSIGN, ||, pType, ==, Token, ., STRING_KEY, ), ), {, return]
[==, Token, ., ASSIGN, ||, pType, ==, Token, ., STRING_KEY, ), ), {, return, false, ;, }, Node, gramps, =]
[==, Token, ., ASSIGN, ||, pType, ==, Token, ., STRING_KEY, ), ), {, return, false, ;, }, Node, gramps, =]
[., STRING_KEY, ), ), {, return, false, ;, }, Node, gramps, =, parent, ., getParent, (, ), ;, if, (]
[., STRING_KEY, ), ), {, return, false, ;, }, Node, gramps, =, parent, ., getParent, (, ), ;, if, (]
[{, return, false, ;, }, Node, gramps, =, parent, ., getParent, (, ), ;, if, (, NodeUtil, ., isObjectLitKey, (]
[false, ;, }, Node, gramps, =, parent, ., getParent, (, ), ;, if, (, NodeUtil, ., isObjectLitKey, (, parent, ,]
[., getParent, (, ), ;, if, (, NodeUtil, ., isObjectLitKey, (, parent, ,, gramps, ), ), {, JSDocInfo, maybeLends, =]
[., getParent, (, ), ;, if, (, NodeUtil, ., isObjectLitKey, (, parent, ,, gramps, ), ), {, JSDocInfo, maybeLends, =]
[., isObjectLitKey, (, parent, ,, gramps, ), ), {, JSDocInfo, maybeLends, =, gramps, ., getJSDocInfo, (, ), ;, if, (]
[., isObjectLitKey, (, parent, ,, gramps, ), ), {, JSDocInfo, maybeLends, =, gramps, ., getJSDocInfo, (, ), ;, if, (]
[., isObjectLitKey, (, parent, ,, gramps, ), ), {, JSDocInfo, maybeLends, =, gramps, ., getJSDocInfo, (, ), ;, if, (]
[., isObjectLitKey, (, parent, ,, gramps, ), ), {, JSDocInfo, maybeLends, =, gramps, ., getJSDocInfo, (, ), ;, if, (]
[(, parent, ,, gramps, ), ), {, JSDocInfo, maybeLends, =, gramps, ., getJSDocInfo, (, ), ;, if, (, maybeLends, !=]
[,, gramps, ), ), {, JSDocInfo, maybeLends, =, gramps, ., getJSDocInfo, (, ), ;, if, (, maybeLends, !=, null, &&]
[,, gramps, ), ), {, JSDocInfo, maybeLends, =, gramps, ., getJSDocInfo, (, ), ;, if, (, maybeLends, !=, null, &&]
[,, gramps, ), ), {, JSDocInfo, maybeLends, =, gramps, ., getJSDocInfo, (, ), ;, if, (, maybeLends, !=, null, &&]
[maybeLends, =, gramps, ., getJSDocInfo, (, ), ;, if, (, maybeLends, !=, null, &&, maybeLends, ., getLendsName, (, ), !=]
[gramps, ., getJSDocInfo, (, ), ;, if, (, maybeLends, !=, null, &&, maybeLends, ., getLendsName, (, ), !=, null, &&]
[gramps, ., getJSDocInfo, (, ), ;, if, (, maybeLends, !=, null, &&, maybeLends, ., getLendsName, (, ), !=, null, &&]
[gramps, ., getJSDocInfo, (, ), ;, if, (, maybeLends, !=, null, &&, maybeLends, ., getLendsName, (, ), !=, null, &&]
[maybeLends, !=, null, &&, maybeLends, ., getLendsName, (, ), !=, null, &&, maybeLends, ., getLendsName, (, ), ., endsWith, (]
[., getLendsName, (, ), !=, null, &&, maybeLends, ., getLendsName, (, ), ., endsWith, (, ".prototype", ), ), {, return]
[maybeLends, ., getLendsName, (, ), ., endsWith, (, ".prototype", ), ), {, return, false, ;, }, }, }, if, (]
[maybeLends, ., getLendsName, (, ), ., endsWith, (, ".prototype", ), ), {, return, false, ;, }, }, }, if, (]
[maybeLends, ., getLendsName, (, ), ., endsWith, (, ".prototype", ), ), {, return, false, ;, }, }, }, if, (]
[getLendsName, (, ), ., endsWith, (, ".prototype", ), ), {, return, false, ;, }, }, }, if, (, parent, !=]
[), ., endsWith, (, ".prototype", ), ), {, return, false, ;, }, }, }, if, (, parent, !=, null, &&]
[), ., endsWith, (, ".prototype", ), ), {, return, false, ;, }, }, }, if, (, parent, !=, null, &&]
[;, }, }, }, if, (, parent, !=, null, &&, parent, ., isAssign, (, ), ), {, Node, lhs, =]
[;, }, }, }, if, (, parent, !=, null, &&, parent, ., isAssign, (, ), ), {, Node, lhs, =]
[&&, parent, ., isAssign, (, ), ), {, Node, lhs, =, parent, ., getFirstChild, (, ), ;, Node, rhs, =]
[&&, parent, ., isAssign, (, ), ), {, Node, lhs, =, parent, ., getFirstChild, (, ), ;, Node, rhs, =]
[Node, lhs, =, parent, ., getFirstChild, (, ), ;, Node, rhs, =, lhs, ., getNext, (, ), ;, if, (]
[Node, lhs, =, parent, ., getFirstChild, (, ), ;, Node, rhs, =, lhs, ., getNext, (, ), ;, if, (]
[=, parent, ., getFirstChild, (, ), ;, Node, rhs, =, lhs, ., getNext, (, ), ;, if, (, n, ==]
[), ;, Node, rhs, =, lhs, ., getNext, (, ), ;, if, (, n, ==, lhs, ), {, if, (]
[), ;, Node, rhs, =, lhs, ., getNext, (, ), ;, if, (, n, ==, lhs, ), {, if, (]
[Node, rhs, =, lhs, ., getNext, (, ), ;, if, (, n, ==, lhs, ), {, if, (, assignLhsChild, ==]
[lhs, ., getNext, (, ), ;, if, (, n, ==, lhs, ), {, if, (, assignLhsChild, ==, null, ), {]
[getNext, (, ), ;, if, (, n, ==, lhs, ), {, if, (, assignLhsChild, ==, null, ), {, assignLhsChild, =]
[lhs, ), {, if, (, assignLhsChild, ==, null, ), {, assignLhsChild, =, lhs, ;, }, }, else, {, if, (]
[lhs, ), {, if, (, assignLhsChild, ==, null, ), {, assignLhsChild, =, lhs, ;, }, }, else, {, if, (]
[(, assignLhsChild, ==, null, ), {, assignLhsChild, =, lhs, ;, }, }, else, {, if, (, NodeUtil, ., isGet, (]
[assignLhsChild, =, lhs, ;, }, }, else, {, if, (, NodeUtil, ., isGet, (, lhs, ), ), {, if, (]
[assignLhsChild, =, lhs, ;, }, }, else, {, if, (, NodeUtil, ., isGet, (, lhs, ), ), {, if, (]
[assignLhsChild, =, lhs, ;, }, }, else, {, if, (, NodeUtil, ., isGet, (, lhs, ), ), {, if, (]
[else, {, if, (, NodeUtil, ., isGet, (, lhs, ), ), {, if, (, lhs, ., isGetProp, (, ), &&]
[else, {, if, (, NodeUtil, ., isGet, (, lhs, ), ), {, if, (, lhs, ., isGetProp, (, ), &&]
[else, {, if, (, NodeUtil, ., isGet, (, lhs, ), ), {, if, (, lhs, ., isGetProp, (, ), &&]
[else, {, if, (, NodeUtil, ., isGet, (, lhs, ), ), {, if, (, lhs, ., isGetProp, (, ), &&]
[if, (, lhs, ., isGetProp, (, ), &&, lhs, ., getLastChild, (, ), ., getString, (, ), ., equals, (]
[(, ), &&, lhs, ., getLastChild, (, ), ., getString, (, ), ., equals, (, "prototype", ), ), {, return]
[(, ), ., getString, (, ), ., equals, (, "prototype", ), ), {, return, false, ;, }, Node, llhs, =]
[(, ), ., getString, (, ), ., equals, (, "prototype", ), ), {, return, false, ;, }, Node, llhs, =]
[(, "prototype", ), ), {, return, false, ;, }, Node, llhs, =, lhs, ., getFirstChild, (, ), ;, if, (]
[(, "prototype", ), ), {, return, false, ;, }, Node, llhs, =, lhs, ., getFirstChild, (, ), ;, if, (]
[(, "prototype", ), ), {, return, false, ;, }, Node, llhs, =, lhs, ., getFirstChild, (, ), ;, if, (]
[false, ;, }, Node, llhs, =, lhs, ., getFirstChild, (, ), ;, if, (, llhs, ., isGetProp, (, ), &&]
[false, ;, }, Node, llhs, =, lhs, ., getFirstChild, (, ), ;, if, (, llhs, ., isGetProp, (, ), &&]
[false, ;, }, Node, llhs, =, lhs, ., getFirstChild, (, ), ;, if, (, llhs, ., isGetProp, (, ), &&]
[false, ;, }, Node, llhs, =, lhs, ., getFirstChild, (, ), ;, if, (, llhs, ., isGetProp, (, ), &&]
[if, (, llhs, ., isGetProp, (, ), &&, llhs, ., getLastChild, (, ), ., getString, (, ), ., equals, (]
[(, ), &&, llhs, ., getLastChild, (, ), ., getString, (, ), ., equals, (, "prototype", ), ), {, return]
[), ., getString, (, ), ., equals, (, "prototype", ), ), {, return, false, ;, }, }, }, }, return]
[;, }, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (]
[;, }, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (]
[;, }, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (]
[visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (, n, ., isThis, (, ), &&]
[NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (, n, ., isThis, (, ), &&, shouldReportThis, (]
[,, Node, n, ,, Node, parent, ), {, if, (, n, ., isThis, (, ), &&, shouldReportThis, (, n, ,]
[Node, parent, ), {, if, (, n, ., isThis, (, ), &&, shouldReportThis, (, n, ,, parent, ), ), {]
[Node, parent, ), {, if, (, n, ., isThis, (, ), &&, shouldReportThis, (, n, ,, parent, ), ), {]
[if, (, n, ., isThis, (, ), &&, shouldReportThis, (, n, ,, parent, ), ), {, compiler, ., report, (]
[if, (, n, ., isThis, (, ), &&, shouldReportThis, (, n, ,, parent, ), ), {, compiler, ., report, (]
[isThis, (, ), &&, shouldReportThis, (, n, ,, parent, ), ), {, compiler, ., report, (, t, ., makeError, (]
[), &&, shouldReportThis, (, n, ,, parent, ), ), {, compiler, ., report, (, t, ., makeError, (, n, ,]
[), ), {, compiler, ., report, (, t, ., makeError, (, n, ,, GLOBAL_THIS, ), ), ;, }, if, (]
[), ), {, compiler, ., report, (, t, ., makeError, (, n, ,, GLOBAL_THIS, ), ), ;, }, if, (]
[{, compiler, ., report, (, t, ., makeError, (, n, ,, GLOBAL_THIS, ), ), ;, }, if, (, n, ==]
[report, (, t, ., makeError, (, n, ,, GLOBAL_THIS, ), ), ;, }, if, (, n, ==, assignLhsChild, ), {]
[t, ., makeError, (, n, ,, GLOBAL_THIS, ), ), ;, }, if, (, n, ==, assignLhsChild, ), {, assignLhsChild, =]
[{, assignLhsChild, =, null, ;, }, }, private, boolean, shouldReportThis, (, Node, n, ,, Node, parent, ), {, if, (]
[{, assignLhsChild, =, null, ;, }, }, private, boolean, shouldReportThis, (, Node, n, ,, Node, parent, ), {, if, (]
[=, null, ;, }, }, private, boolean, shouldReportThis, (, Node, n, ,, Node, parent, ), {, if, (, assignLhsChild, !=]
[}, private, boolean, shouldReportThis, (, Node, n, ,, Node, parent, ), {, if, (, assignLhsChild, !=, null, ), {, return]
[(, Node, n, ,, Node, parent, ), {, if, (, assignLhsChild, !=, null, ), {, return, true, ;, }, return]
[(, Node, n, ,, Node, parent, ), {, if, (, assignLhsChild, !=, null, ), {, return, true, ;, }, return]
[(, Node, n, ,, Node, parent, ), {, if, (, assignLhsChild, !=, null, ), {, return, true, ;, }, return]
[n, ,, Node, parent, ), {, if, (, assignLhsChild, !=, null, ), {, return, true, ;, }, return, parent, !=]
[Node, parent, ), {, if, (, assignLhsChild, !=, null, ), {, return, true, ;, }, return, parent, !=, null, &&]
[Node, parent, ), {, if, (, assignLhsChild, !=, null, ), {, return, true, ;, }, return, parent, !=, null, &&]
[if, (, assignLhsChild, !=, null, ), {, return, true, ;, }, return, parent, !=, null, &&, NodeUtil, ., isGet, (]
[&&, NodeUtil, ., isGet, (, parent, ), ;, }, private, JSDocInfo, getFunctionJsDocInfo, (, Node, n, ), {, JSDocInfo, jsDoc, =]
[&&, NodeUtil, ., isGet, (, parent, ), ;, }, private, JSDocInfo, getFunctionJsDocInfo, (, Node, n, ), {, JSDocInfo, jsDoc, =]
[private, JSDocInfo, getFunctionJsDocInfo, (, Node, n, ), {, JSDocInfo, jsDoc, =, n, ., getJSDocInfo, (, ), ;, Node, parent, =]
[private, JSDocInfo, getFunctionJsDocInfo, (, Node, n, ), {, JSDocInfo, jsDoc, =, n, ., getJSDocInfo, (, ), ;, Node, parent, =]
[JSDocInfo, jsDoc, =, n, ., getJSDocInfo, (, ), ;, Node, parent, =, n, ., getParent, (, ), ;, if, (]
[JSDocInfo, jsDoc, =, n, ., getJSDocInfo, (, ), ;, Node, parent, =, n, ., getParent, (, ), ;, if, (]
[=, n, ., getJSDocInfo, (, ), ;, Node, parent, =, n, ., getParent, (, ), ;, if, (, jsDoc, ==]
[;, Node, parent, =, n, ., getParent, (, ), ;, if, (, jsDoc, ==, null, ), {, int, parentType, =]
[;, Node, parent, =, n, ., getParent, (, ), ;, if, (, jsDoc, ==, null, ), {, int, parentType, =]
[), ;, if, (, jsDoc, ==, null, ), {, int, parentType, =, parent, ., getType, (, ), ;, if, (]
[), ;, if, (, jsDoc, ==, null, ), {, int, parentType, =, parent, ., getType, (, ), ;, if, (]
[), ;, if, (, jsDoc, ==, null, ), {, int, parentType, =, parent, ., getType, (, ), ;, if, (]
[if, (, jsDoc, ==, null, ), {, int, parentType, =, parent, ., getType, (, ), ;, if, (, parentType, ==]
[if, (, jsDoc, ==, null, ), {, int, parentType, =, parent, ., getType, (, ), ;, if, (, parentType, ==]
[null, ), {, int, parentType, =, parent, ., getType, (, ), ;, if, (, parentType, ==, Token, ., NAME, ||]
[null, ), {, int, parentType, =, parent, ., getType, (, ), ;, if, (, parentType, ==, Token, ., NAME, ||]
[{, int, parentType, =, parent, ., getType, (, ), ;, if, (, parentType, ==, Token, ., NAME, ||, parentType, ==]
[{, int, parentType, =, parent, ., getType, (, ), ;, if, (, parentType, ==, Token, ., NAME, ||, parentType, ==]
[., getType, (, ), ;, if, (, parentType, ==, Token, ., NAME, ||, parentType, ==, Token, ., ASSIGN, ), {]
[(, ), ;, if, (, parentType, ==, Token, ., NAME, ||, parentType, ==, Token, ., ASSIGN, ), {, jsDoc, =]
[(, ), ;, if, (, parentType, ==, Token, ., NAME, ||, parentType, ==, Token, ., ASSIGN, ), {, jsDoc, =]
[., NAME, ||, parentType, ==, Token, ., ASSIGN, ), {, jsDoc, =, parent, ., getJSDocInfo, (, ), ;, if, (]
[., NAME, ||, parentType, ==, Token, ., ASSIGN, ), {, jsDoc, =, parent, ., getJSDocInfo, (, ), ;, if, (]
[., NAME, ||, parentType, ==, Token, ., ASSIGN, ), {, jsDoc, =, parent, ., getJSDocInfo, (, ), ;, if, (]
[||, parentType, ==, Token, ., ASSIGN, ), {, jsDoc, =, parent, ., getJSDocInfo, (, ), ;, if, (, jsDoc, ==]
[==, Token, ., ASSIGN, ), {, jsDoc, =, parent, ., getJSDocInfo, (, ), ;, if, (, jsDoc, ==, null, &&]
[==, Token, ., ASSIGN, ), {, jsDoc, =, parent, ., getJSDocInfo, (, ), ;, if, (, jsDoc, ==, null, &&]
[., ASSIGN, ), {, jsDoc, =, parent, ., getJSDocInfo, (, ), ;, if, (, jsDoc, ==, null, &&, parentType, ==]
[., ASSIGN, ), {, jsDoc, =, parent, ., getJSDocInfo, (, ), ;, if, (, jsDoc, ==, null, &&, parentType, ==]
[getJSDocInfo, (, ), ;, if, (, jsDoc, ==, null, &&, parentType, ==, Token, ., NAME, ), {, Node, gramps, =]
[getJSDocInfo, (, ), ;, if, (, jsDoc, ==, null, &&, parentType, ==, Token, ., NAME, ), {, Node, gramps, =]
[null, &&, parentType, ==, Token, ., NAME, ), {, Node, gramps, =, parent, ., getParent, (, ), ;, if, (]
[null, &&, parentType, ==, Token, ., NAME, ), {, Node, gramps, =, parent, ., getParent, (, ), ;, if, (]
[), {, Node, gramps, =, parent, ., getParent, (, ), ;, if, (, gramps, ., isVar, (, ), ), {]
[Node, gramps, =, parent, ., getParent, (, ), ;, if, (, gramps, ., isVar, (, ), ), {, jsDoc, =]
[Node, gramps, =, parent, ., getParent, (, ), ;, if, (, gramps, ., isVar, (, ), ), {, jsDoc, =]
[gramps, ., isVar, (, ), ), {, jsDoc, =, gramps, ., getJSDocInfo, (, ), ;, }, }, }, }, return]
