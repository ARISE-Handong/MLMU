[public, abstract, class, Fields, {, public, static, InstanceFields, allDeclaredFieldsOf, (, Object, instance, ), {, List, <, InstanceField, >, instanceFields, =]
[InstanceField, >, instanceFields, =, new, ArrayList, <, InstanceField, >, (, ), ;, for, (, Class, <, ?, >, clazz, =]
[InstanceField, >, instanceFields, =, new, ArrayList, <, InstanceField, >, (, ), ;, for, (, Class, <, ?, >, clazz, =]
[<, InstanceField, >, (, ), ;, for, (, Class, <, ?, >, clazz, =, instance, ., getClass, (, ), ;]
[<, InstanceField, >, (, ), ;, for, (, Class, <, ?, >, clazz, =, instance, ., getClass, (, ), ;]
[>, (, ), ;, for, (, Class, <, ?, >, clazz, =, instance, ., getClass, (, ), ;, clazz, !=]
[for, (, Class, <, ?, >, clazz, =, instance, ., getClass, (, ), ;, clazz, !=, Object, ., class, ;]
[Class, <, ?, >, clazz, =, instance, ., getClass, (, ), ;, clazz, !=, Object, ., class, ;, clazz, =]
[Class, <, ?, >, clazz, =, instance, ., getClass, (, ), ;, clazz, !=, Object, ., class, ;, clazz, =]
[., getClass, (, ), ;, clazz, !=, Object, ., class, ;, clazz, =, clazz, ., getSuperclass, (, ), ), {]
[., getClass, (, ), ;, clazz, !=, Object, ., class, ;, clazz, =, clazz, ., getSuperclass, (, ), ), {]
[;, clazz, !=, Object, ., class, ;, clazz, =, clazz, ., getSuperclass, (, ), ), {, instanceFields, ., addAll, (]
[!=, Object, ., class, ;, clazz, =, clazz, ., getSuperclass, (, ), ), {, instanceFields, ., addAll, (, instanceFieldsIn, (]
[., class, ;, clazz, =, clazz, ., getSuperclass, (, ), ), {, instanceFields, ., addAll, (, instanceFieldsIn, (, instance, ,]
[., class, ;, clazz, =, clazz, ., getSuperclass, (, ), ), {, instanceFields, ., addAll, (, instanceFieldsIn, (, instance, ,]
[), {, instanceFields, ., addAll, (, instanceFieldsIn, (, instance, ,, clazz, ., getDeclaredFields, (, ), ), ), ;, }, return]
[., addAll, (, instanceFieldsIn, (, instance, ,, clazz, ., getDeclaredFields, (, ), ), ), ;, }, return, new, InstanceFields, (]
[(, instanceFieldsIn, (, instance, ,, clazz, ., getDeclaredFields, (, ), ), ), ;, }, return, new, InstanceFields, (, instance, ,]
[,, instanceFields, ), ;, }, public, static, InstanceFields, declaredFieldsOf, (, Object, instance, ), {, List, <, InstanceField, >, instanceFields, =]
[declaredFieldsOf, (, Object, instance, ), {, List, <, InstanceField, >, instanceFields, =, new, ArrayList, <, InstanceField, >, (, ), ;]
[declaredFieldsOf, (, Object, instance, ), {, List, <, InstanceField, >, instanceFields, =, new, ArrayList, <, InstanceField, >, (, ), ;]
[), {, List, <, InstanceField, >, instanceFields, =, new, ArrayList, <, InstanceField, >, (, ), ;, instanceFields, ., addAll, (]
[List, <, InstanceField, >, instanceFields, =, new, ArrayList, <, InstanceField, >, (, ), ;, instanceFields, ., addAll, (, instanceFieldsIn, (]
[InstanceField, >, instanceFields, =, new, ArrayList, <, InstanceField, >, (, ), ;, instanceFields, ., addAll, (, instanceFieldsIn, (, instance, ,]
[InstanceField, >, instanceFields, =, new, ArrayList, <, InstanceField, >, (, ), ;, instanceFields, ., addAll, (, instanceFieldsIn, (, instance, ,]
[InstanceField, >, instanceFields, =, new, ArrayList, <, InstanceField, >, (, ), ;, instanceFields, ., addAll, (, instanceFieldsIn, (, instance, ,]
[., addAll, (, instanceFieldsIn, (, instance, ,, instance, ., getClass, (, ), ., getDeclaredFields, (, ), ), ), ;, return]
[instanceFieldsIn, (, instance, ,, instance, ., getClass, (, ), ., getDeclaredFields, (, ), ), ), ;, return, new, InstanceFields, (]
[instance, ,, instance, ., getClass, (, ), ., getDeclaredFields, (, ), ), ), ;, return, new, InstanceFields, (, instance, ,]
[<, InstanceField, >, instanceFieldsIn, (, Object, instance, ,, Field, [, ], fields, ), {, List, <, InstanceField, >, instanceDeclaredFields, =]
[{, List, <, InstanceField, >, instanceDeclaredFields, =, new, ArrayList, <, InstanceField, >, (, ), ;, for, (, Field, field, :]
[=, new, ArrayList, <, InstanceField, >, (, ), ;, for, (, Field, field, :, fields, ), {, InstanceField, instanceField, =]
[<, InstanceField, >, (, ), ;, for, (, Field, field, :, fields, ), {, InstanceField, instanceField, =, new, InstanceField, (]
[>, (, ), ;, for, (, Field, field, :, fields, ), {, InstanceField, instanceField, =, new, InstanceField, (, field, ,]
[;, for, (, Field, field, :, fields, ), {, InstanceField, instanceField, =, new, InstanceField, (, field, ,, instance, ), ;]
[;, for, (, Field, field, :, fields, ), {, InstanceField, instanceField, =, new, InstanceField, (, field, ,, instance, ), ;]
[field, :, fields, ), {, InstanceField, instanceField, =, new, InstanceField, (, field, ,, instance, ), ;, instanceDeclaredFields, ., add, (]
[InstanceField, instanceField, =, new, InstanceField, (, field, ,, instance, ), ;, instanceDeclaredFields, ., add, (, instanceField, ), ;, }, return]
[public, static, Filter, <, InstanceField, >, annotatedBy, (, final, Class, <, ?, extends, Annotation, >, ..., annotations, ), {, return]
[annotations, ), {, return, new, Filter, <, InstanceField, >, (, ), {, public, boolean, isOut, (, InstanceField, instanceField, ), {]
[annotations, ), {, return, new, Filter, <, InstanceField, >, (, ), {, public, boolean, isOut, (, InstanceField, instanceField, ), {]
[new, Filter, <, InstanceField, >, (, ), {, public, boolean, isOut, (, InstanceField, instanceField, ), {, Checks, ., checkNotNull, (]
[<, InstanceField, >, (, ), {, public, boolean, isOut, (, InstanceField, instanceField, ), {, Checks, ., checkNotNull, (, annotations, ,]
[{, Checks, ., checkNotNull, (, annotations, ,, "Provide at least one annotation class", ), ;, for, (, Class, <, ?, extends, Annotation, >, annotation, :]
[annotations, ,, "Provide at least one annotation class", ), ;, for, (, Class, <, ?, extends, Annotation, >, annotation, :, annotations, ), {, if, (]
[annotations, ,, "Provide at least one annotation class", ), ;, for, (, Class, <, ?, extends, Annotation, >, annotation, :, annotations, ), {, if, (]
[;, for, (, Class, <, ?, extends, Annotation, >, annotation, :, annotations, ), {, if, (, instanceField, ., isAnnotatedBy, (]
[?, extends, Annotation, >, annotation, :, annotations, ), {, if, (, instanceField, ., isAnnotatedBy, (, annotation, ), ), {, return]
[:, annotations, ), {, if, (, instanceField, ., isAnnotatedBy, (, annotation, ), ), {, return, false, ;, }, }, return]
[}, }, return, true, ;, }, }, ;, }, private, static, Filter, <, InstanceField, >, nullField, (, ), {, return]
[), {, return, new, Filter, <, InstanceField, >, (, ), {, public, boolean, isOut, (, InstanceField, instanceField, ), {, return]
[), {, return, new, Filter, <, InstanceField, >, (, ), {, public, boolean, isOut, (, InstanceField, instanceField, ), {, return]
[final, List, <, InstanceField, >, instanceFields, ;, public, InstanceFields, (, Object, instance, ,, List, <, InstanceField, >, instanceFields, ), {]
[final, List, <, InstanceField, >, instanceFields, ;, public, InstanceFields, (, Object, instance, ,, List, <, InstanceField, >, instanceFields, ), {]
[>, instanceFields, ;, public, InstanceFields, (, Object, instance, ,, List, <, InstanceField, >, instanceFields, ), {, this, ., instance, =]
[;, public, InstanceFields, (, Object, instance, ,, List, <, InstanceField, >, instanceFields, ), {, this, ., instance, =, instance, ;]
[;, public, InstanceFields, (, Object, instance, ,, List, <, InstanceField, >, instanceFields, ), {, this, ., instance, =, instance, ;]
[Object, instance, ,, List, <, InstanceField, >, instanceFields, ), {, this, ., instance, =, instance, ;, this, ., instanceFields, =]
[;, this, ., instanceFields, =, instanceFields, ;, }, public, InstanceFields, filter, (, Filter, <, InstanceField, >, withFilter, ), {, return]
[instanceFields, =, instanceFields, ;, }, public, InstanceFields, filter, (, Filter, <, InstanceField, >, withFilter, ), {, return, new, InstanceFields, (]
[instanceFields, ;, }, public, InstanceFields, filter, (, Filter, <, InstanceField, >, withFilter, ), {, return, new, InstanceFields, (, instance, ,]
[instanceFields, ;, }, public, InstanceFields, filter, (, Filter, <, InstanceField, >, withFilter, ), {, return, new, InstanceFields, (, instance, ,]
[InstanceFields, filter, (, Filter, <, InstanceField, >, withFilter, ), {, return, new, InstanceFields, (, instance, ,, ListUtil, ., filter, (]
[(, Filter, <, InstanceField, >, withFilter, ), {, return, new, InstanceFields, (, instance, ,, ListUtil, ., filter, (, instanceFields, ,]
[instance, ,, ListUtil, ., filter, (, instanceFields, ,, withFilter, ), ), ;, }, public, InstanceFields, notNull, (, ), {, return]
[ListUtil, ., filter, (, instanceFields, ,, withFilter, ), ), ;, }, public, InstanceFields, notNull, (, ), {, return, filter, (]
[{, return, filter, (, nullField, (, ), ), ;, }, public, List, <, InstanceField, >, instanceFields, (, ), {, return]
[), ), ;, }, public, List, <, InstanceField, >, instanceFields, (, ), {, return, new, ArrayList, <, InstanceField, >, (]
[(, instanceFields, ), ;, }, public, List, <, Object, >, assignedValues, (, ), {, List, <, Object, >, values, =]
[List, <, Object, >, assignedValues, (, ), {, List, <, Object, >, values, =, new, ArrayList, <, Object, >, (]
[List, <, Object, >, assignedValues, (, ), {, List, <, Object, >, values, =, new, ArrayList, <, Object, >, (]
[values, =, new, ArrayList, <, Object, >, (, instanceFields, ., size, (, ), ), ;, for, (, InstanceField, instanceField, :]
[ArrayList, <, Object, >, (, instanceFields, ., size, (, ), ), ;, for, (, InstanceField, instanceField, :, instanceFields, ), {]
[ArrayList, <, Object, >, (, instanceFields, ., size, (, ), ), ;, for, (, InstanceField, instanceField, :, instanceFields, ), {]
[(, instanceFields, ., size, (, ), ), ;, for, (, InstanceField, instanceField, :, instanceFields, ), {, values, ., add, (]
[(, instanceFields, ., size, (, ), ), ;, for, (, InstanceField, instanceField, :, instanceFields, ), {, values, ., add, (]
[(, InstanceField, instanceField, :, instanceFields, ), {, values, ., add, (, instanceField, ., read, (, ), ), ;, }, return]
[}, return, values, ;, }, public, List, <, String, >, names, (, ), {, List, <, String, >, fieldNames, =]
[List, <, String, >, names, (, ), {, List, <, String, >, fieldNames, =, new, ArrayList, <, String, >, (]
[List, <, String, >, names, (, ), {, List, <, String, >, fieldNames, =, new, ArrayList, <, String, >, (]
[fieldNames, =, new, ArrayList, <, String, >, (, instanceFields, ., size, (, ), ), ;, for, (, InstanceField, instanceField, :]
[ArrayList, <, String, >, (, instanceFields, ., size, (, ), ), ;, for, (, InstanceField, instanceField, :, instanceFields, ), {]
[ArrayList, <, String, >, (, instanceFields, ., size, (, ), ), ;, for, (, InstanceField, instanceField, :, instanceFields, ), {]
[(, instanceFields, ., size, (, ), ), ;, for, (, InstanceField, instanceField, :, instanceFields, ), {, fieldNames, ., add, (]
[(, instanceFields, ., size, (, ), ), ;, for, (, InstanceField, instanceField, :, instanceFields, ), {, fieldNames, ., add, (]
[(, InstanceField, instanceField, :, instanceFields, ), {, fieldNames, ., add, (, instanceField, ., name, (, ), ), ;, }, return]
