[io, ., Serializable, ;, public, class, PlumNeedle, extends, MeterNeedle, implements, Cloneable, ,, Serializable, {, private, static, final, long, serialVersionUID, =]
[., Serializable, ;, public, class, PlumNeedle, extends, MeterNeedle, implements, Cloneable, ,, Serializable, {, private, static, final, long, serialVersionUID, =, -]
[protected, void, drawNeedle, (, Graphics2D, g2, ,, Rectangle2D, plotArea, ,, Point2D, rotate, ,, double, angle, ), {, Arc2D, shape, =]
[g2, ,, Rectangle2D, plotArea, ,, Point2D, rotate, ,, double, angle, ), {, Arc2D, shape, =, new, Arc2D, ., Double, (]
[g2, ,, Rectangle2D, plotArea, ,, Point2D, rotate, ,, double, angle, ), {, Arc2D, shape, =, new, Arc2D, ., Double, (]
[double, angle, ), {, Arc2D, shape, =, new, Arc2D, ., Double, (, Arc2D, ., PIE, ), ;, double, radius, =]
[double, angle, ), {, Arc2D, shape, =, new, Arc2D, ., Double, (, Arc2D, ., PIE, ), ;, double, radius, =]
[., Double, (, Arc2D, ., PIE, ), ;, double, radius, =, plotArea, ., getHeight, (, ), ;, double, halfX, =]
[., Double, (, Arc2D, ., PIE, ), ;, double, radius, =, plotArea, ., getHeight, (, ), ;, double, halfX, =]
[., Double, (, Arc2D, ., PIE, ), ;, double, radius, =, plotArea, ., getHeight, (, ), ;, double, halfX, =]
[), ;, double, radius, =, plotArea, ., getHeight, (, ), ;, double, halfX, =, plotArea, ., getWidth, (, ), /]
[plotArea, ., getHeight, (, ), ;, double, halfX, =, plotArea, ., getWidth, (, ), /, 2, ;, double, diameter, =]
[plotArea, ., getHeight, (, ), ;, double, halfX, =, plotArea, ., getWidth, (, ), /, 2, ;, double, diameter, =]
[getHeight, (, ), ;, double, halfX, =, plotArea, ., getWidth, (, ), /, 2, ;, double, diameter, =, 2, *]
[), ;, double, halfX, =, plotArea, ., getWidth, (, ), /, 2, ;, double, diameter, =, 2, *, radius, ;]
[), ;, double, halfX, =, plotArea, ., getWidth, (, ), /, 2, ;, double, diameter, =, 2, *, radius, ;]
[=, plotArea, ., getWidth, (, ), /, 2, ;, double, diameter, =, 2, *, radius, ;, shape, ., setFrame, (]
[=, plotArea, ., getWidth, (, ), /, 2, ;, double, diameter, =, 2, *, radius, ;, shape, ., setFrame, (]
[=, plotArea, ., getWidth, (, ), /, 2, ;, double, diameter, =, 2, *, radius, ;, shape, ., setFrame, (]
[=, plotArea, ., getWidth, (, ), /, 2, ;, double, diameter, =, 2, *, radius, ;, shape, ., setFrame, (]
[/, 2, ;, double, diameter, =, 2, *, radius, ;, shape, ., setFrame, (, plotArea, ., getMinX, (, ), +]
[;, double, diameter, =, 2, *, radius, ;, shape, ., setFrame, (, plotArea, ., getMinX, (, ), +, halfX, -]
[diameter, =, 2, *, radius, ;, shape, ., setFrame, (, plotArea, ., getMinX, (, ), +, halfX, -, radius, ,]
[diameter, =, 2, *, radius, ;, shape, ., setFrame, (, plotArea, ., getMinX, (, ), +, halfX, -, radius, ,]
[diameter, =, 2, *, radius, ;, shape, ., setFrame, (, plotArea, ., getMinX, (, ), +, halfX, -, radius, ,]
[shape, ., setFrame, (, plotArea, ., getMinX, (, ), +, halfX, -, radius, ,, plotArea, ., getMinY, (, ), -]
[setFrame, (, plotArea, ., getMinX, (, ), +, halfX, -, radius, ,, plotArea, ., getMinY, (, ), -, radius, ,]
[plotArea, ., getMinX, (, ), +, halfX, -, radius, ,, plotArea, ., getMinY, (, ), -, radius, ,, diameter, ,]
[(, ), +, halfX, -, radius, ,, plotArea, ., getMinY, (, ), -, radius, ,, diameter, ,, diameter, ), ;]
[+, halfX, -, radius, ,, plotArea, ., getMinY, (, ), -, radius, ,, diameter, ,, diameter, ), ;, radius, =]
[+, halfX, -, radius, ,, plotArea, ., getMinY, (, ), -, radius, ,, diameter, ,, diameter, ), ;, radius, =]
[,, plotArea, ., getMinY, (, ), -, radius, ,, diameter, ,, diameter, ), ;, radius, =, Math, ., toDegrees, (]
[,, plotArea, ., getMinY, (, ), -, radius, ,, diameter, ,, diameter, ), ;, radius, =, Math, ., toDegrees, (]
[(, ), -, radius, ,, diameter, ,, diameter, ), ;, radius, =, Math, ., toDegrees, (, Math, ., asin, (]
[(, ), -, radius, ,, diameter, ,, diameter, ), ;, radius, =, Math, ., toDegrees, (, Math, ., asin, (]
[-, radius, ,, diameter, ,, diameter, ), ;, radius, =, Math, ., toDegrees, (, Math, ., asin, (, halfX, /]
[,, diameter, ), ;, radius, =, Math, ., toDegrees, (, Math, ., asin, (, halfX, /, radius, ), ), ;]
[,, diameter, ), ;, radius, =, Math, ., toDegrees, (, Math, ., asin, (, halfX, /, radius, ), ), ;]
[radius, =, Math, ., toDegrees, (, Math, ., asin, (, halfX, /, radius, ), ), ;, shape, ., setAngleStart, (]
[radius, =, Math, ., toDegrees, (, Math, ., asin, (, halfX, /, radius, ), ), ;, shape, ., setAngleStart, (]
[Math, ., toDegrees, (, Math, ., asin, (, halfX, /, radius, ), ), ;, shape, ., setAngleStart, (, 270, -]
[(, Math, ., asin, (, halfX, /, radius, ), ), ;, shape, ., setAngleStart, (, 270, -, radius, ), ;]
[(, Math, ., asin, (, halfX, /, radius, ), ), ;, shape, ., setAngleStart, (, 270, -, radius, ), ;]
[(, halfX, /, radius, ), ), ;, shape, ., setAngleStart, (, 270, -, radius, ), ;, shape, ., setAngleExtent, (]
[(, halfX, /, radius, ), ), ;, shape, ., setAngleStart, (, 270, -, radius, ), ;, shape, ., setAngleExtent, (]
[/, radius, ), ), ;, shape, ., setAngleStart, (, 270, -, radius, ), ;, shape, ., setAngleExtent, (, 2, *]
[., setAngleStart, (, 270, -, radius, ), ;, shape, ., setAngleExtent, (, 2, *, radius, ), ;, Area, s, =]
[270, -, radius, ), ;, shape, ., setAngleExtent, (, 2, *, radius, ), ;, Area, s, =, new, Area, (]
[shape, ., setAngleExtent, (, 2, *, radius, ), ;, Area, s, =, new, Area, (, shape, ), ;, if, (]
[shape, ., setAngleExtent, (, 2, *, radius, ), ;, Area, s, =, new, Area, (, shape, ), ;, if, (]
[., setAngleExtent, (, 2, *, radius, ), ;, Area, s, =, new, Area, (, shape, ), ;, if, (, (]
[., setAngleExtent, (, 2, *, radius, ), ;, Area, s, =, new, Area, (, shape, ), ;, if, (, (]
[(, 2, *, radius, ), ;, Area, s, =, new, Area, (, shape, ), ;, if, (, (, rotate, !=]
[radius, ), ;, Area, s, =, new, Area, (, shape, ), ;, if, (, (, rotate, !=, null, ), &&]
[), ;, Area, s, =, new, Area, (, shape, ), ;, if, (, (, rotate, !=, null, ), &&, (]
[), ;, Area, s, =, new, Area, (, shape, ), ;, if, (, (, rotate, !=, null, ), &&, (]
[Area, s, =, new, Area, (, shape, ), ;, if, (, (, rotate, !=, null, ), &&, (, angle, !=]
[Area, (, shape, ), ;, if, (, (, rotate, !=, null, ), &&, (, angle, !=, 0, ), ), {]
[Area, (, shape, ), ;, if, (, (, rotate, !=, null, ), &&, (, angle, !=, 0, ), ), {]
[(, (, rotate, !=, null, ), &&, (, angle, !=, 0, ), ), {, getTransform, (, ), ., setToRotation, (]
[rotate, !=, null, ), &&, (, angle, !=, 0, ), ), {, getTransform, (, ), ., setToRotation, (, angle, ,]
[rotate, !=, null, ), &&, (, angle, !=, 0, ), ), {, getTransform, (, ), ., setToRotation, (, angle, ,]
[angle, !=, 0, ), ), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,]
[angle, !=, 0, ), ), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,]
[(, ), ., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,, rotate, ., getY, (, ), ), ;]
[(, ), ., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,, rotate, ., getY, (, ), ), ;]
[(, angle, ,, rotate, ., getX, (, ), ,, rotate, ., getY, (, ), ), ;, s, ., transform, (]
[(, ), ,, rotate, ., getY, (, ), ), ;, s, ., transform, (, getTransform, (, ), ), ;, }]
[,, rotate, ., getY, (, ), ), ;, s, ., transform, (, getTransform, (, ), ), ;, }, defaultDisplay, (]
[., getY, (, ), ), ;, s, ., transform, (, getTransform, (, ), ), ;, }, defaultDisplay, (, g2, ,]
[;, }, defaultDisplay, (, g2, ,, s, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[;, }, defaultDisplay, (, g2, ,, s, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[defaultDisplay, (, g2, ,, s, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[s, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, PlumNeedle, ), ), {, return]
[return, true, ;, }, if, (, !, (, obj, instanceof, PlumNeedle, ), ), {, return, false, ;, }, if, (]
[true, ;, }, if, (, !, (, obj, instanceof, PlumNeedle, ), ), {, return, false, ;, }, if, (, !]
[true, ;, }, if, (, !, (, obj, instanceof, PlumNeedle, ), ), {, return, false, ;, }, if, (, !]
[(, !, (, obj, instanceof, PlumNeedle, ), ), {, return, false, ;, }, if, (, !, super, ., equals, (]
[PlumNeedle, ), ), {, return, false, ;, }, if, (, !, super, ., equals, (, obj, ), ), {, return]
[return, false, ;, }, if, (, !, super, ., equals, (, obj, ), ), {, return, false, ;, }, return]
[(, obj, ), ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, return]
[(, obj, ), ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, return]
[(, ), {, return, super, ., hashCode, (, ), ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return]
[(, ), {, return, super, ., hashCode, (, ), ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return]
