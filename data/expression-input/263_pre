[commons, ., math3, ., exception, ., NullArgumentException, ;, public, class, Incrementor, {, private, int, maximalCount, ;, private, int, count, =]
[maximalCount, ;, private, int, count, =, 0, ;, private, final, MaxCountExceededCallback, maxCountCallback, ;, public, Incrementor, (, ), {, this, (]
[public, Incrementor, (, ), {, this, (, 0, ), ;, }, public, Incrementor, (, int, max, ), {, this, (]
[(, ), {, this, (, 0, ), ;, }, public, Incrementor, (, int, max, ), {, this, (, max, ,]
[this, (, max, ,, new, MaxCountExceededCallback, (, ), {, public, void, trigger, (, int, max, ), throws, MaxCountExceededException, {, throw]
[,, new, MaxCountExceededCallback, (, ), {, public, void, trigger, (, int, max, ), throws, MaxCountExceededException, {, throw, new, MaxCountExceededException, (]
[;, }, }, ), ;, }, public, Incrementor, (, int, max, ,, MaxCountExceededCallback, cb, ), throws, NullArgumentException, {, if, (]
[;, }, }, ), ;, }, public, Incrementor, (, int, max, ,, MaxCountExceededCallback, cb, ), throws, NullArgumentException, {, if, (]
[}, ), ;, }, public, Incrementor, (, int, max, ,, MaxCountExceededCallback, cb, ), throws, NullArgumentException, {, if, (, cb, ==]
[public, Incrementor, (, int, max, ,, MaxCountExceededCallback, cb, ), throws, NullArgumentException, {, if, (, cb, ==, null, ), {, throw]
[MaxCountExceededCallback, cb, ), throws, NullArgumentException, {, if, (, cb, ==, null, ), {, throw, new, NullArgumentException, (, ), ;, }]
[), throws, NullArgumentException, {, if, (, cb, ==, null, ), {, throw, new, NullArgumentException, (, ), ;, }, maximalCount, =]
[NullArgumentException, {, if, (, cb, ==, null, ), {, throw, new, NullArgumentException, (, ), ;, }, maximalCount, =, max, ;]
[if, (, cb, ==, null, ), {, throw, new, NullArgumentException, (, ), ;, }, maximalCount, =, max, ;, maxCountCallback, =]
[), ;, }, maximalCount, =, max, ;, maxCountCallback, =, cb, ;, }, public, void, setMaximalCount, (, int, max, ), {]
[}, maximalCount, =, max, ;, maxCountCallback, =, cb, ;, }, public, void, setMaximalCount, (, int, max, ), {, maximalCount, =]
[public, void, setMaximalCount, (, int, max, ), {, maximalCount, =, max, ;, }, public, int, getMaximalCount, (, ), {, return]
[max, ;, }, public, int, getMaximalCount, (, ), {, return, maximalCount, ;, }, public, int, getCount, (, ), {, return]
[maximalCount, ;, }, public, int, getCount, (, ), {, return, count, ;, }, public, boolean, canIncrement, (, ), {, return]
[maximalCount, ;, }, public, int, getCount, (, ), {, return, count, ;, }, public, boolean, canIncrement, (, ), {, return]
[}, public, int, getCount, (, ), {, return, count, ;, }, public, boolean, canIncrement, (, ), {, return, count, <]
[count, <, maximalCount, ;, }, public, void, incrementCount, (, int, value, ), throws, MaxCountExceededException, {, for, (, int, i, =]
[maximalCount, ;, }, public, void, incrementCount, (, int, value, ), throws, MaxCountExceededException, {, for, (, int, i, =, 0, ;]
[maximalCount, ;, }, public, void, incrementCount, (, int, value, ), throws, MaxCountExceededException, {, for, (, int, i, =, 0, ;]
[}, public, void, incrementCount, (, int, value, ), throws, MaxCountExceededException, {, for, (, int, i, =, 0, ;, i, <]
[void, incrementCount, (, int, value, ), throws, MaxCountExceededException, {, for, (, int, i, =, 0, ;, i, <, value, ;]
[void, incrementCount, (, int, value, ), throws, MaxCountExceededException, {, for, (, int, i, =, 0, ;, i, <, value, ;]
[value, ), throws, MaxCountExceededException, {, for, (, int, i, =, 0, ;, i, <, value, ;, i, ++, ), {]
[i, ++, ), {, incrementCount, (, ), ;, }, }, public, void, incrementCount, (, ), throws, MaxCountExceededException, {, if, (]
[i, ++, ), {, incrementCount, (, ), ;, }, }, public, void, incrementCount, (, ), throws, MaxCountExceededException, {, if, (]
[++, ), {, incrementCount, (, ), ;, }, }, public, void, incrementCount, (, ), throws, MaxCountExceededException, {, if, (, ++]
[{, incrementCount, (, ), ;, }, }, public, void, incrementCount, (, ), throws, MaxCountExceededException, {, if, (, ++, count, >]
[), ;, }, }, public, void, incrementCount, (, ), throws, MaxCountExceededException, {, if, (, ++, count, >, maximalCount, ), {]
[), ;, }, }, public, void, incrementCount, (, ), throws, MaxCountExceededException, {, if, (, ++, count, >, maximalCount, ), {]
[public, void, incrementCount, (, ), throws, MaxCountExceededException, {, if, (, ++, count, >, maximalCount, ), {, maxCountCallback, ., trigger, (]
[count, >, maximalCount, ), {, maxCountCallback, ., trigger, (, maximalCount, ), ;, }, }, public, void, resetCount, (, ), {]
[maximalCount, ), {, maxCountCallback, ., trigger, (, maximalCount, ), ;, }, }, public, void, resetCount, (, ), {, count, =]
