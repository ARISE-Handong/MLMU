[;, import, java, ., util, ., List, ;, public, class, SourceMapConsumerV1, implements, SourceMapConsumer, {, private, static, final, String, LINEMAP_HEADER, =]
[public, class, SourceMapConsumerV1, implements, SourceMapConsumer, {, private, static, final, String, LINEMAP_HEADER, =, "/** Begin line maps. **/", ;, private, static, final, String, FILEINFO_HEADER, =]
[final, String, LINEMAP_HEADER, =, "/** Begin line maps. **/", ;, private, static, final, String, FILEINFO_HEADER, =, "/** Begin file information. **/", ;, private, static, final, String, DEFINITION_HEADER, =]
[private, static, final, String, DEFINITION_HEADER, =, "/** Begin mapping definitions. **/", ;, private, static, class, ParseState, {, final, String, contents, ;, int, currentPosition, =]
[private, static, class, ParseState, {, final, String, contents, ;, int, currentPosition, =, 0, ;, ParseState, (, String, contents, ), {]
[private, static, class, ParseState, {, final, String, contents, ;, int, currentPosition, =, 0, ;, ParseState, (, String, contents, ), {]
[{, final, String, contents, ;, int, currentPosition, =, 0, ;, ParseState, (, String, contents, ), {, this, ., contents, =]
[ParseState, (, String, contents, ), {, this, ., contents, =, contents, ;, }, String, readLineOrNull, (, ), {, if, (]
[ParseState, (, String, contents, ), {, this, ., contents, =, contents, ;, }, String, readLineOrNull, (, ), {, if, (]
[String, contents, ), {, this, ., contents, =, contents, ;, }, String, readLineOrNull, (, ), {, if, (, currentPosition, >=]
[String, contents, ), {, this, ., contents, =, contents, ;, }, String, readLineOrNull, (, ), {, if, (, currentPosition, >=]
[contents, ;, }, String, readLineOrNull, (, ), {, if, (, currentPosition, >=, contents, ., length, (, ), ), {, return]
[), {, if, (, currentPosition, >=, contents, ., length, (, ), ), {, return, null, ;, }, int, index, =]
[), {, if, (, currentPosition, >=, contents, ., length, (, ), ), {, return, null, ;, }, int, index, =]
[currentPosition, >=, contents, ., length, (, ), ), {, return, null, ;, }, int, index, =, contents, ., indexOf, (]
[contents, ., length, (, ), ), {, return, null, ;, }, int, index, =, contents, ., indexOf, (, '\n', ,]
[), {, return, null, ;, }, int, index, =, contents, ., indexOf, (, '\n', ,, currentPosition, ), ;, if, (]
[), {, return, null, ;, }, int, index, =, contents, ., indexOf, (, '\n', ,, currentPosition, ), ;, if, (]
[return, null, ;, }, int, index, =, contents, ., indexOf, (, '\n', ,, currentPosition, ), ;, if, (, index, <]
[}, int, index, =, contents, ., indexOf, (, '\n', ,, currentPosition, ), ;, if, (, index, <, 0, ), {]
[index, =, contents, ., indexOf, (, '\n', ,, currentPosition, ), ;, if, (, index, <, 0, ), {, index, =]
[index, =, contents, ., indexOf, (, '\n', ,, currentPosition, ), ;, if, (, index, <, 0, ), {, index, =]
[;, if, (, index, <, 0, ), {, index, =, contents, ., length, (, ), ;, }, String, line, =]
[;, if, (, index, <, 0, ), {, index, =, contents, ., length, (, ), ;, }, String, line, =]
[<, 0, ), {, index, =, contents, ., length, (, ), ;, }, String, line, =, contents, ., substring, (]
[), {, index, =, contents, ., length, (, ), ;, }, String, line, =, contents, ., substring, (, currentPosition, ,]
[=, contents, ., length, (, ), ;, }, String, line, =, contents, ., substring, (, currentPosition, ,, index, ), ;]
[., length, (, ), ;, }, String, line, =, contents, ., substring, (, currentPosition, ,, index, ), ;, currentPosition, =]
[., length, (, ), ;, }, String, line, =, contents, ., substring, (, currentPosition, ,, index, ), ;, currentPosition, =]
[(, ), ;, }, String, line, =, contents, ., substring, (, currentPosition, ,, index, ), ;, currentPosition, =, index, +]
[}, String, line, =, contents, ., substring, (, currentPosition, ,, index, ), ;, currentPosition, =, index, +, 1, ;, return]
[currentPosition, =, index, +, 1, ;, return, line, ;, }, String, readLine, (, ), throws, SourceMapParseException, {, String, line, =]
[return, line, ;, }, String, readLine, (, ), throws, SourceMapParseException, {, String, line, =, readLineOrNull, (, ), ;, if, (]
[return, line, ;, }, String, readLine, (, ), throws, SourceMapParseException, {, String, line, =, readLineOrNull, (, ), ;, if, (]
[;, }, String, readLine, (, ), throws, SourceMapParseException, {, String, line, =, readLineOrNull, (, ), ;, if, (, line, ==]
[readLine, (, ), throws, SourceMapParseException, {, String, line, =, readLineOrNull, (, ), ;, if, (, line, ==, null, ), {]
[), throws, SourceMapParseException, {, String, line, =, readLineOrNull, (, ), ;, if, (, line, ==, null, ), {, fail, (]
[line, =, readLineOrNull, (, ), ;, if, (, line, ==, null, ), {, fail, (, "EOF", ), ;, }, return]
["EOF", ), ;, }, return, line, ;, }, void, expectLine, (, String, expect, ), throws, SourceMapParseException, {, String, line, =]
[;, }, void, expectLine, (, String, expect, ), throws, SourceMapParseException, {, String, line, =, readLine, (, ), ;, if, (]
[}, void, expectLine, (, String, expect, ), throws, SourceMapParseException, {, String, line, =, readLine, (, ), ;, if, (, !]
[}, void, expectLine, (, String, expect, ), throws, SourceMapParseException, {, String, line, =, readLine, (, ), ;, if, (, !]
[String, expect, ), throws, SourceMapParseException, {, String, line, =, readLine, (, ), ;, if, (, !, expect, ., equals, (]
[SourceMapParseException, {, String, line, =, readLine, (, ), ;, if, (, !, expect, ., equals, (, line, ), ), {]
[String, line, =, readLine, (, ), ;, if, (, !, expect, ., equals, (, line, ), ), {, fail, (]
[String, line, =, readLine, (, ), ;, if, (, !, expect, ., equals, (, line, ), ), {, fail, (]
[String, line, =, readLine, (, ), ;, if, (, !, expect, ., equals, (, line, ), ), {, fail, (]
[String, line, =, readLine, (, ), ;, if, (, !, expect, ., equals, (, line, ), ), {, fail, (]
[=, readLine, (, ), ;, if, (, !, expect, ., equals, (, line, ), ), {, fail, (, "Expected ", +]
[(, ), ;, if, (, !, expect, ., equals, (, line, ), ), {, fail, (, "Expected ", +, expect, +]
[;, if, (, !, expect, ., equals, (, line, ), ), {, fail, (, "Expected ", +, expect, +, " got ", +]
[+, expect, +, " got ", +, line, ), ;, }, }, void, fail, (, String, message, ), throws, SourceMapParseException, {, throw]
[" got ", +, line, ), ;, }, }, void, fail, (, String, message, ), throws, SourceMapParseException, {, throw, new, SourceMapParseException, (]
[<, SourceFile, >, mappings, ;, @, Override, public, void, parse, (, String, contents, ), throws, SourceMapParseException, {, ParseState, parser, =]
[mappings, ;, @, Override, public, void, parse, (, String, contents, ), throws, SourceMapParseException, {, ParseState, parser, =, new, ParseState, (]
[void, parse, (, String, contents, ), throws, SourceMapParseException, {, ParseState, parser, =, new, ParseState, (, contents, ), ;, try, {]
[(, String, contents, ), throws, SourceMapParseException, {, ParseState, parser, =, new, ParseState, (, contents, ), ;, try, {, parseInternal, (]
[new, ParseState, (, contents, ), ;, try, {, parseInternal, (, parser, ), ;, }, catch, (, JSONException, ex, ), {]
[new, ParseState, (, contents, ), ;, try, {, parseInternal, (, parser, ), ;, }, catch, (, JSONException, ex, ), {]
[), ;, try, {, parseInternal, (, parser, ), ;, }, catch, (, JSONException, ex, ), {, parser, ., fail, (]
[), ;, try, {, parseInternal, (, parser, ), ;, }, catch, (, JSONException, ex, ), {, parser, ., fail, (]
[try, {, parseInternal, (, parser, ), ;, }, catch, (, JSONException, ex, ), {, parser, ., fail, (, "JSON parse exception: ", +]
[,, ImmutableList, ., Builder, <, ImmutableList, <, LineFragment, >, >, characterMapBuilder, ), throws, SourceMapParseException, ,, JSONException, {, int, maxID, =]
[ImmutableList, ., Builder, <, ImmutableList, <, LineFragment, >, >, characterMapBuilder, ), throws, SourceMapParseException, ,, JSONException, {, int, maxID, =, -]
[>, >, characterMapBuilder, ), throws, SourceMapParseException, ,, JSONException, {, int, maxID, =, -, 1, ;, for, (, int, i, =]
[characterMapBuilder, ), throws, SourceMapParseException, ,, JSONException, {, int, maxID, =, -, 1, ;, for, (, int, i, =, 0, ;]
[characterMapBuilder, ), throws, SourceMapParseException, ,, JSONException, {, int, maxID, =, -, 1, ;, for, (, int, i, =, 0, ;]
[throws, SourceMapParseException, ,, JSONException, {, int, maxID, =, -, 1, ;, for, (, int, i, =, 0, ;, i, <]
[,, JSONException, {, int, maxID, =, -, 1, ;, for, (, int, i, =, 0, ;, i, <, lineCount, ;]
[JSONException, {, int, maxID, =, -, 1, ;, for, (, int, i, =, 0, ;, i, <, lineCount, ;, ++]
[1, ;, for, (, int, i, =, 0, ;, i, <, lineCount, ;, ++, i, ), {, String, currentLine, =]
[1, ;, for, (, int, i, =, 0, ;, i, <, lineCount, ;, ++, i, ), {, String, currentLine, =]
[;, i, <, lineCount, ;, ++, i, ), {, String, currentLine, =, parser, ., readLine, (, ), ;, if, (]
[;, i, <, lineCount, ;, ++, i, ), {, String, currentLine, =, parser, ., readLine, (, ), ;, if, (]
[if, (, currentLine, ., isEmpty, (, ), ), {, continue, ;, }, ImmutableList, ., Builder, <, LineFragment, >, fragmentList, =]
[if, (, currentLine, ., isEmpty, (, ), ), {, continue, ;, }, ImmutableList, ., Builder, <, LineFragment, >, fragmentList, =]
[continue, ;, }, ImmutableList, ., Builder, <, LineFragment, >, fragmentList, =, ImmutableList, ., builder, (, ), ;, LineFragment, myLineFragment, =]
[Builder, <, LineFragment, >, fragmentList, =, ImmutableList, ., builder, (, ), ;, LineFragment, myLineFragment, =, null, ;, JSONArray, charArray, =]
[>, fragmentList, =, ImmutableList, ., builder, (, ), ;, LineFragment, myLineFragment, =, null, ;, JSONArray, charArray, =, new, JSONArray, (]
[(, ), ;, LineFragment, myLineFragment, =, null, ;, JSONArray, charArray, =, new, JSONArray, (, currentLine, ), ;, int, numOffsets, =]
[(, ), ;, LineFragment, myLineFragment, =, null, ;, JSONArray, charArray, =, new, JSONArray, (, currentLine, ), ;, int, numOffsets, =]
[charArray, =, new, JSONArray, (, currentLine, ), ;, int, numOffsets, =, charArray, ., length, (, ), ;, int, lastID, =]
[=, new, JSONArray, (, currentLine, ), ;, int, numOffsets, =, charArray, ., length, (, ), ;, int, lastID, =, -]
[), ;, int, numOffsets, =, charArray, ., length, (, ), ;, int, lastID, =, -, 1, ;, int, startID, =]
[), ;, int, numOffsets, =, charArray, ., length, (, ), ;, int, lastID, =, -, 1, ;, int, startID, =]
[;, int, lastID, =, -, 1, ;, int, startID, =, Integer, ., MIN_VALUE, ;, List, <, Byte, >, currentOffsets, =]
[;, int, lastID, =, -, 1, ;, int, startID, =, Integer, ., MIN_VALUE, ;, List, <, Byte, >, currentOffsets, =]
[., MIN_VALUE, ;, List, <, Byte, >, currentOffsets, =, Lists, ., newArrayList, (, ), ;, for, (, int, j, =]
[;, List, <, Byte, >, currentOffsets, =, Lists, ., newArrayList, (, ), ;, for, (, int, j, =, 0, ;]
[;, List, <, Byte, >, currentOffsets, =, Lists, ., newArrayList, (, ), ;, for, (, int, j, =, 0, ;]
[<, Byte, >, currentOffsets, =, Lists, ., newArrayList, (, ), ;, for, (, int, j, =, 0, ;, j, <]
[<, Byte, >, currentOffsets, =, Lists, ., newArrayList, (, ), ;, for, (, int, j, =, 0, ;, j, <]
[., newArrayList, (, ), ;, for, (, int, j, =, 0, ;, j, <, charArray, ., length, (, ), ;]
[newArrayList, (, ), ;, for, (, int, j, =, 0, ;, j, <, charArray, ., length, (, ), ;, ++]
[int, j, =, 0, ;, j, <, charArray, ., length, (, ), ;, ++, j, ), {, int, mappingID, =]
[;, j, <, charArray, ., length, (, ), ;, ++, j, ), {, int, mappingID, =, lastID, ;, if, (]
[j, <, charArray, ., length, (, ), ;, ++, j, ), {, int, mappingID, =, lastID, ;, if, (, !]
[j, <, charArray, ., length, (, ), ;, ++, j, ), {, int, mappingID, =, lastID, ;, if, (, !]
[length, (, ), ;, ++, j, ), {, int, mappingID, =, lastID, ;, if, (, !, charArray, ., isNull, (]
[++, j, ), {, int, mappingID, =, lastID, ;, if, (, !, charArray, ., isNull, (, j, ), ), {]
[), {, int, mappingID, =, lastID, ;, if, (, !, charArray, ., isNull, (, j, ), ), {, mappingID, =]
[), {, int, mappingID, =, lastID, ;, if, (, !, charArray, ., isNull, (, j, ), ), {, mappingID, =]
[=, lastID, ;, if, (, !, charArray, ., isNull, (, j, ), ), {, mappingID, =, charArray, ., optInt, (]
[!, charArray, ., isNull, (, j, ), ), {, mappingID, =, charArray, ., optInt, (, j, ), ;, if, (]
[!, charArray, ., isNull, (, j, ), ), {, mappingID, =, charArray, ., optInt, (, j, ), ;, if, (]
[., isNull, (, j, ), ), {, mappingID, =, charArray, ., optInt, (, j, ), ;, if, (, mappingID, >]
[j, ), ), {, mappingID, =, charArray, ., optInt, (, j, ), ;, if, (, mappingID, >, maxID, ), {]
[), {, mappingID, =, charArray, ., optInt, (, j, ), ;, if, (, mappingID, >, maxID, ), {, maxID, =]
[optInt, (, j, ), ;, if, (, mappingID, >, maxID, ), {, maxID, =, mappingID, ;, }, }, if, (]
[optInt, (, j, ), ;, if, (, mappingID, >, maxID, ), {, maxID, =, mappingID, ;, }, }, if, (]
[j, ), ;, if, (, mappingID, >, maxID, ), {, maxID, =, mappingID, ;, }, }, if, (, startID, ==]
[j, ), ;, if, (, mappingID, >, maxID, ), {, maxID, =, mappingID, ;, }, }, if, (, startID, ==]
[mappingID, >, maxID, ), {, maxID, =, mappingID, ;, }, }, if, (, startID, ==, Integer, ., MIN_VALUE, ), {]
[maxID, ), {, maxID, =, mappingID, ;, }, }, if, (, startID, ==, Integer, ., MIN_VALUE, ), {, startID, =]
[}, }, if, (, startID, ==, Integer, ., MIN_VALUE, ), {, startID, =, mappingID, ;, }, else, {, if, (]
[}, }, if, (, startID, ==, Integer, ., MIN_VALUE, ), {, startID, =, mappingID, ;, }, else, {, if, (]
[}, }, if, (, startID, ==, Integer, ., MIN_VALUE, ), {, startID, =, mappingID, ;, }, else, {, if, (]
[}, }, if, (, startID, ==, Integer, ., MIN_VALUE, ), {, startID, =, mappingID, ;, }, else, {, if, (]
[if, (, startID, ==, Integer, ., MIN_VALUE, ), {, startID, =, mappingID, ;, }, else, {, if, (, mappingID, -]
[startID, ==, Integer, ., MIN_VALUE, ), {, startID, =, mappingID, ;, }, else, {, if, (, mappingID, -, lastID, >]
[startID, ==, Integer, ., MIN_VALUE, ), {, startID, =, mappingID, ;, }, else, {, if, (, mappingID, -, lastID, >]
[MIN_VALUE, ), {, startID, =, mappingID, ;, }, else, {, if, (, mappingID, -, lastID, >, Byte, ., MAX_VALUE, ||]
[MIN_VALUE, ), {, startID, =, mappingID, ;, }, else, {, if, (, mappingID, -, lastID, >, Byte, ., MAX_VALUE, ||]
[MIN_VALUE, ), {, startID, =, mappingID, ;, }, else, {, if, (, mappingID, -, lastID, >, Byte, ., MAX_VALUE, ||]
[{, startID, =, mappingID, ;, }, else, {, if, (, mappingID, -, lastID, >, Byte, ., MAX_VALUE, ||, mappingID, -]
[=, mappingID, ;, }, else, {, if, (, mappingID, -, lastID, >, Byte, ., MAX_VALUE, ||, mappingID, -, lastID, <]
[=, mappingID, ;, }, else, {, if, (, mappingID, -, lastID, >, Byte, ., MAX_VALUE, ||, mappingID, -, lastID, <]
[{, if, (, mappingID, -, lastID, >, Byte, ., MAX_VALUE, ||, mappingID, -, lastID, <, Byte, ., MIN_VALUE, ), {]
[(, mappingID, -, lastID, >, Byte, ., MAX_VALUE, ||, mappingID, -, lastID, <, Byte, ., MIN_VALUE, ), {, myLineFragment, =]
[lastID, >, Byte, ., MAX_VALUE, ||, mappingID, -, lastID, <, Byte, ., MIN_VALUE, ), {, myLineFragment, =, new, LineFragment, (]
[Byte, ., MAX_VALUE, ||, mappingID, -, lastID, <, Byte, ., MIN_VALUE, ), {, myLineFragment, =, new, LineFragment, (, startID, ,]
[Byte, ., MAX_VALUE, ||, mappingID, -, lastID, <, Byte, ., MIN_VALUE, ), {, myLineFragment, =, new, LineFragment, (, startID, ,]
[mappingID, -, lastID, <, Byte, ., MIN_VALUE, ), {, myLineFragment, =, new, LineFragment, (, startID, ,, Bytes, ., toArray, (]
[Byte, ., MIN_VALUE, ), {, myLineFragment, =, new, LineFragment, (, startID, ,, Bytes, ., toArray, (, currentOffsets, ), ), ;]
[Byte, ., MIN_VALUE, ), {, myLineFragment, =, new, LineFragment, (, startID, ,, Bytes, ., toArray, (, currentOffsets, ), ), ;]
[=, new, LineFragment, (, startID, ,, Bytes, ., toArray, (, currentOffsets, ), ), ;, currentOffsets, ., clear, (, ), ;]
[=, new, LineFragment, (, startID, ,, Bytes, ., toArray, (, currentOffsets, ), ), ;, currentOffsets, ., clear, (, ), ;]
[startID, ,, Bytes, ., toArray, (, currentOffsets, ), ), ;, currentOffsets, ., clear, (, ), ;, fragmentList, ., add, (]
[., toArray, (, currentOffsets, ), ), ;, currentOffsets, ., clear, (, ), ;, fragmentList, ., add, (, myLineFragment, ), ;]
[(, currentOffsets, ), ), ;, currentOffsets, ., clear, (, ), ;, fragmentList, ., add, (, myLineFragment, ), ;, startID, =]
[currentOffsets, ., clear, (, ), ;, fragmentList, ., add, (, myLineFragment, ), ;, startID, =, mappingID, ;, }, else, {]
[currentOffsets, ., clear, (, ), ;, fragmentList, ., add, (, myLineFragment, ), ;, startID, =, mappingID, ;, }, else, {]
[), ;, fragmentList, ., add, (, myLineFragment, ), ;, startID, =, mappingID, ;, }, else, {, currentOffsets, ., add, (]
[., add, (, myLineFragment, ), ;, startID, =, mappingID, ;, }, else, {, currentOffsets, ., add, (, (, byte, )]
[add, (, myLineFragment, ), ;, startID, =, mappingID, ;, }, else, {, currentOffsets, ., add, (, (, byte, ), (]
[add, (, myLineFragment, ), ;, startID, =, mappingID, ;, }, else, {, currentOffsets, ., add, (, (, byte, ), (]
[myLineFragment, ), ;, startID, =, mappingID, ;, }, else, {, currentOffsets, ., add, (, (, byte, ), (, mappingID, -]
[;, }, else, {, currentOffsets, ., add, (, (, byte, ), (, mappingID, -, lastID, ), ), ;, }, }]
[else, {, currentOffsets, ., add, (, (, byte, ), (, mappingID, -, lastID, ), ), ;, }, }, lastID, =]
[(, (, byte, ), (, mappingID, -, lastID, ), ), ;, }, }, lastID, =, mappingID, ;, }, if, (]
[(, (, byte, ), (, mappingID, -, lastID, ), ), ;, }, }, lastID, =, mappingID, ;, }, if, (]
[byte, ), (, mappingID, -, lastID, ), ), ;, }, }, lastID, =, mappingID, ;, }, if, (, startID, !=]
[byte, ), (, mappingID, -, lastID, ), ), ;, }, }, lastID, =, mappingID, ;, }, if, (, startID, !=]
[lastID, ), ), ;, }, }, lastID, =, mappingID, ;, }, if, (, startID, !=, Integer, ., MIN_VALUE, ), {]
[), ;, }, }, lastID, =, mappingID, ;, }, if, (, startID, !=, Integer, ., MIN_VALUE, ), {, myLineFragment, =]
[}, lastID, =, mappingID, ;, }, if, (, startID, !=, Integer, ., MIN_VALUE, ), {, myLineFragment, =, new, LineFragment, (]
[=, mappingID, ;, }, if, (, startID, !=, Integer, ., MIN_VALUE, ), {, myLineFragment, =, new, LineFragment, (, startID, ,]
[=, mappingID, ;, }, if, (, startID, !=, Integer, ., MIN_VALUE, ), {, myLineFragment, =, new, LineFragment, (, startID, ,]
[if, (, startID, !=, Integer, ., MIN_VALUE, ), {, myLineFragment, =, new, LineFragment, (, startID, ,, Bytes, ., toArray, (]
[Integer, ., MIN_VALUE, ), {, myLineFragment, =, new, LineFragment, (, startID, ,, Bytes, ., toArray, (, currentOffsets, ), ), ;]
[Integer, ., MIN_VALUE, ), {, myLineFragment, =, new, LineFragment, (, startID, ,, Bytes, ., toArray, (, currentOffsets, ), ), ;]
[{, myLineFragment, =, new, LineFragment, (, startID, ,, Bytes, ., toArray, (, currentOffsets, ), ), ;, fragmentList, ., add, (]
[LineFragment, (, startID, ,, Bytes, ., toArray, (, currentOffsets, ), ), ;, fragmentList, ., add, (, myLineFragment, ), ;, }]
[LineFragment, (, startID, ,, Bytes, ., toArray, (, currentOffsets, ), ), ;, fragmentList, ., add, (, myLineFragment, ), ;, }]
[Bytes, ., toArray, (, currentOffsets, ), ), ;, fragmentList, ., add, (, myLineFragment, ), ;, }, characterMapBuilder, ., add, (]
[Bytes, ., toArray, (, currentOffsets, ), ), ;, fragmentList, ., add, (, myLineFragment, ), ;, }, characterMapBuilder, ., add, (]
[., add, (, myLineFragment, ), ;, }, characterMapBuilder, ., add, (, fragmentList, ., build, (, ), ), ;, }, return]
[{, private, final, String, dir, ;, private, final, String, name, ;, FileName, (, String, directory, ,, String, name, ), {]
[{, private, final, String, dir, ;, private, final, String, name, ;, FileName, (, String, directory, ,, String, name, ), {]
[dir, ;, private, final, String, name, ;, FileName, (, String, directory, ,, String, name, ), {, this, ., dir, =]
[private, final, String, name, ;, FileName, (, String, directory, ,, String, name, ), {, this, ., dir, =, directory, ;]
[private, final, String, name, ;, FileName, (, String, directory, ,, String, name, ), {, this, ., dir, =, directory, ;]
[;, FileName, (, String, directory, ,, String, name, ), {, this, ., dir, =, directory, ;, this, ., name, =]
[;, }, }, private, FileName, splitFileName, (, Interner, <, String, >, interner, ,, String, input, ), {, int, hashIndex, =]
[;, }, }, private, FileName, splitFileName, (, Interner, <, String, >, interner, ,, String, input, ), {, int, hashIndex, =]
[FileName, splitFileName, (, Interner, <, String, >, interner, ,, String, input, ), {, int, hashIndex, =, input, ., lastIndexOf, (]
[>, interner, ,, String, input, ), {, int, hashIndex, =, input, ., lastIndexOf, (, '/', ), ;, String, dir, =]
[>, interner, ,, String, input, ), {, int, hashIndex, =, input, ., lastIndexOf, (, '/', ), ;, String, dir, =]
[input, ), {, int, hashIndex, =, input, ., lastIndexOf, (, '/', ), ;, String, dir, =, interner, ., intern, (]
[input, ), {, int, hashIndex, =, input, ., lastIndexOf, (, '/', ), ;, String, dir, =, interner, ., intern, (]
[hashIndex, =, input, ., lastIndexOf, (, '/', ), ;, String, dir, =, interner, ., intern, (, input, ., substring, (]
[input, ., lastIndexOf, (, '/', ), ;, String, dir, =, interner, ., intern, (, input, ., substring, (, 0, ,]
[input, ., lastIndexOf, (, '/', ), ;, String, dir, =, interner, ., intern, (, input, ., substring, (, 0, ,]
[lastIndexOf, (, '/', ), ;, String, dir, =, interner, ., intern, (, input, ., substring, (, 0, ,, hashIndex, +]
[=, interner, ., intern, (, input, ., substring, (, 0, ,, hashIndex, +, 1, ), ), ;, String, fileName, =]
[=, interner, ., intern, (, input, ., substring, (, 0, ,, hashIndex, +, 1, ), ), ;, String, fileName, =]
[(, input, ., substring, (, 0, ,, hashIndex, +, 1, ), ), ;, String, fileName, =, interner, ., intern, (]
[(, input, ., substring, (, 0, ,, hashIndex, +, 1, ), ), ;, String, fileName, =, interner, ., intern, (]
[(, 0, ,, hashIndex, +, 1, ), ), ;, String, fileName, =, interner, ., intern, (, input, ., substring, (]
[(, 0, ,, hashIndex, +, 1, ), ), ;, String, fileName, =, interner, ., intern, (, input, ., substring, (]
[,, hashIndex, +, 1, ), ), ;, String, fileName, =, interner, ., intern, (, input, ., substring, (, hashIndex, +]
[), ;, String, fileName, =, interner, ., intern, (, input, ., substring, (, hashIndex, +, 1, ), ), ;, return]
[fileName, =, interner, ., intern, (, input, ., substring, (, hashIndex, +, 1, ), ), ;, return, new, FileName, (]
[interner, ., intern, (, input, ., substring, (, hashIndex, +, 1, ), ), ;, return, new, FileName, (, dir, ,]
[void, parseFileMappings, (, ParseState, parser, ,, int, maxID, ), throws, SourceMapParseException, ,, JSONException, {, Interner, <, String, >, interner, =]
[void, parseFileMappings, (, ParseState, parser, ,, int, maxID, ), throws, SourceMapParseException, ,, JSONException, {, Interner, <, String, >, interner, =]
[Interner, <, String, >, interner, =, Interners, ., newStrongInterner, (, ), ;, ImmutableList, ., Builder, <, SourceFile, >, mappingsBuilder, =]
[Interner, <, String, >, interner, =, Interners, ., newStrongInterner, (, ), ;, ImmutableList, ., Builder, <, SourceFile, >, mappingsBuilder, =]
[ImmutableList, ., Builder, <, SourceFile, >, mappingsBuilder, =, ImmutableList, ., builder, (, ), ;, ArrayList, <, Byte, >, lineOffsets, =]
[ImmutableList, ., Builder, <, SourceFile, >, mappingsBuilder, =, ImmutableList, ., builder, (, ), ;, ArrayList, <, Byte, >, lineOffsets, =]
[), ;, ArrayList, <, Byte, >, lineOffsets, =, Lists, ., newArrayList, (, ), ;, ArrayList, <, Short, >, columns, =]
[), ;, ArrayList, <, Byte, >, lineOffsets, =, Lists, ., newArrayList, (, ), ;, ArrayList, <, Short, >, columns, =]
[), ;, ArrayList, <, Short, >, columns, =, Lists, ., newArrayList, (, ), ;, ArrayList, <, String, >, identifiers, =]
[), ;, ArrayList, <, Short, >, columns, =, Lists, ., newArrayList, (, ), ;, ArrayList, <, String, >, identifiers, =]
[., newArrayList, (, ), ;, ArrayList, <, String, >, identifiers, =, Lists, ., newArrayList, (, ), ;, String, currentFile, =]
[ArrayList, <, String, >, identifiers, =, Lists, ., newArrayList, (, ), ;, String, currentFile, =, null, ;, int, lastLine, =]
[<, String, >, identifiers, =, Lists, ., newArrayList, (, ), ;, String, currentFile, =, null, ;, int, lastLine, =, -]
[Lists, ., newArrayList, (, ), ;, String, currentFile, =, null, ;, int, lastLine, =, -, 1, ;, int, startLine, =]
[., newArrayList, (, ), ;, String, currentFile, =, null, ;, int, lastLine, =, -, 1, ;, int, startLine, =, -]
[String, currentFile, =, null, ;, int, lastLine, =, -, 1, ;, int, startLine, =, -, 1, ;, int, startMapId, =]
[currentFile, =, null, ;, int, lastLine, =, -, 1, ;, int, startLine, =, -, 1, ;, int, startMapId, =, -]
[-, 1, ;, int, startLine, =, -, 1, ;, int, startMapId, =, -, 1, ;, for, (, int, mappingId, =]
[;, int, startLine, =, -, 1, ;, int, startMapId, =, -, 1, ;, for, (, int, mappingId, =, 0, ;]
[;, int, startLine, =, -, 1, ;, int, startMapId, =, -, 1, ;, for, (, int, mappingId, =, 0, ;]
[startLine, =, -, 1, ;, int, startMapId, =, -, 1, ;, for, (, int, mappingId, =, 0, ;, mappingId, <=]
[-, 1, ;, int, startMapId, =, -, 1, ;, for, (, int, mappingId, =, 0, ;, mappingId, <=, maxID, ;]
[1, ;, int, startMapId, =, -, 1, ;, for, (, int, mappingId, =, 0, ;, mappingId, <=, maxID, ;, ++]
[1, ;, for, (, int, mappingId, =, 0, ;, mappingId, <=, maxID, ;, ++, mappingId, ), {, String, currentLine, =]
[1, ;, for, (, int, mappingId, =, 0, ;, mappingId, <=, maxID, ;, ++, mappingId, ), {, String, currentLine, =]
[mappingId, <=, maxID, ;, ++, mappingId, ), {, String, currentLine, =, parser, ., readLine, (, ), ;, JSONArray, mapArray, =]
[;, ++, mappingId, ), {, String, currentLine, =, parser, ., readLine, (, ), ;, JSONArray, mapArray, =, new, JSONArray, (]
[String, currentLine, =, parser, ., readLine, (, ), ;, JSONArray, mapArray, =, new, JSONArray, (, currentLine, ), ;, if, (]
[String, currentLine, =, parser, ., readLine, (, ), ;, JSONArray, mapArray, =, new, JSONArray, (, currentLine, ), ;, if, (]
[String, currentLine, =, parser, ., readLine, (, ), ;, JSONArray, mapArray, =, new, JSONArray, (, currentLine, ), ;, if, (]
[(, ), ;, JSONArray, mapArray, =, new, JSONArray, (, currentLine, ), ;, if, (, mapArray, ., length, (, ), <]
[JSONArray, mapArray, =, new, JSONArray, (, currentLine, ), ;, if, (, mapArray, ., length, (, ), <, 3, ), {]
[JSONArray, mapArray, =, new, JSONArray, (, currentLine, ), ;, if, (, mapArray, ., length, (, ), <, 3, ), {]
[JSONArray, (, currentLine, ), ;, if, (, mapArray, ., length, (, ), <, 3, ), {, parser, ., fail, (]
[mapArray, ., length, (, ), <, 3, ), {, parser, ., fail, (, "Invalid mapping array", ), ;, }, String, myFile, =]
[mapArray, ., length, (, ), <, 3, ), {, parser, ., fail, (, "Invalid mapping array", ), ;, }, String, myFile, =]
[), <, 3, ), {, parser, ., fail, (, "Invalid mapping array", ), ;, }, String, myFile, =, mapArray, ., getString, (]
[., fail, (, "Invalid mapping array", ), ;, }, String, myFile, =, mapArray, ., getString, (, 0, ), ;, int, line, =]
[., fail, (, "Invalid mapping array", ), ;, }, String, myFile, =, mapArray, ., getString, (, 0, ), ;, int, line, =]
[), ;, }, String, myFile, =, mapArray, ., getString, (, 0, ), ;, int, line, =, mapArray, ., getInt, (]
[=, mapArray, ., getString, (, 0, ), ;, int, line, =, mapArray, ., getInt, (, 1, ), ;, if, (]
[=, mapArray, ., getString, (, 0, ), ;, int, line, =, mapArray, ., getInt, (, 1, ), ;, if, (]
[=, mapArray, ., getString, (, 0, ), ;, int, line, =, mapArray, ., getInt, (, 1, ), ;, if, (]
[mapArray, ., getString, (, 0, ), ;, int, line, =, mapArray, ., getInt, (, 1, ), ;, if, (, !]
[mapArray, ., getString, (, 0, ), ;, int, line, =, mapArray, ., getInt, (, 1, ), ;, if, (, !]
[0, ), ;, int, line, =, mapArray, ., getInt, (, 1, ), ;, if, (, !, myFile, ., equals, (]
[int, line, =, mapArray, ., getInt, (, 1, ), ;, if, (, !, myFile, ., equals, (, currentFile, ), ||]
[int, line, =, mapArray, ., getInt, (, 1, ), ;, if, (, !, myFile, ., equals, (, currentFile, ), ||]
[line, =, mapArray, ., getInt, (, 1, ), ;, if, (, !, myFile, ., equals, (, currentFile, ), ||, (]
[line, =, mapArray, ., getInt, (, 1, ), ;, if, (, !, myFile, ., equals, (, currentFile, ), ||, (]
[mapArray, ., getInt, (, 1, ), ;, if, (, !, myFile, ., equals, (, currentFile, ), ||, (, line, -]
[(, 1, ), ;, if, (, !, myFile, ., equals, (, currentFile, ), ||, (, line, -, lastLine, ), >]
[(, 1, ), ;, if, (, !, myFile, ., equals, (, currentFile, ), ||, (, line, -, lastLine, ), >]
[if, (, !, myFile, ., equals, (, currentFile, ), ||, (, line, -, lastLine, ), >, Byte, ., MAX_VALUE, ||]
[if, (, !, myFile, ., equals, (, currentFile, ), ||, (, line, -, lastLine, ), >, Byte, ., MAX_VALUE, ||]
[(, !, myFile, ., equals, (, currentFile, ), ||, (, line, -, lastLine, ), >, Byte, ., MAX_VALUE, ||, (]
[(, !, myFile, ., equals, (, currentFile, ), ||, (, line, -, lastLine, ), >, Byte, ., MAX_VALUE, ||, (]
[myFile, ., equals, (, currentFile, ), ||, (, line, -, lastLine, ), >, Byte, ., MAX_VALUE, ||, (, line, -]
[(, currentFile, ), ||, (, line, -, lastLine, ), >, Byte, ., MAX_VALUE, ||, (, line, -, lastLine, ), <]
[(, currentFile, ), ||, (, line, -, lastLine, ), >, Byte, ., MAX_VALUE, ||, (, line, -, lastLine, ), <]
[lastLine, ), >, Byte, ., MAX_VALUE, ||, (, line, -, lastLine, ), <, Byte, ., MIN_VALUE, ), {, if, (]
[lastLine, ), >, Byte, ., MAX_VALUE, ||, (, line, -, lastLine, ), <, Byte, ., MIN_VALUE, ), {, if, (]
[>, Byte, ., MAX_VALUE, ||, (, line, -, lastLine, ), <, Byte, ., MIN_VALUE, ), {, if, (, currentFile, !=]
[line, -, lastLine, ), <, Byte, ., MIN_VALUE, ), {, if, (, currentFile, !=, null, ), {, FileName, dirFile, =]
[lastLine, ), <, Byte, ., MIN_VALUE, ), {, if, (, currentFile, !=, null, ), {, FileName, dirFile, =, splitFileName, (]
[<, Byte, ., MIN_VALUE, ), {, if, (, currentFile, !=, null, ), {, FileName, dirFile, =, splitFileName, (, interner, ,]
[currentFile, !=, null, ), {, FileName, dirFile, =, splitFileName, (, interner, ,, currentFile, ), ;, SourceFile, ., Builder, builder, =]
[currentFile, !=, null, ), {, FileName, dirFile, =, splitFileName, (, interner, ,, currentFile, ), ;, SourceFile, ., Builder, builder, =]
[currentFile, !=, null, ), {, FileName, dirFile, =, splitFileName, (, interner, ,, currentFile, ), ;, SourceFile, ., Builder, builder, =]
[currentFile, !=, null, ), {, FileName, dirFile, =, splitFileName, (, interner, ,, currentFile, ), ;, SourceFile, ., Builder, builder, =]
[currentFile, !=, null, ), {, FileName, dirFile, =, splitFileName, (, interner, ,, currentFile, ), ;, SourceFile, ., Builder, builder, =]
[currentFile, !=, null, ), {, FileName, dirFile, =, splitFileName, (, interner, ,, currentFile, ), ;, SourceFile, ., Builder, builder, =]
[currentFile, !=, null, ), {, FileName, dirFile, =, splitFileName, (, interner, ,, currentFile, ), ;, SourceFile, ., Builder, builder, =]
[currentFile, !=, null, ), {, FileName, dirFile, =, splitFileName, (, interner, ,, currentFile, ), ;, SourceFile, ., Builder, builder, =]
[currentFile, !=, null, ), {, FileName, dirFile, =, splitFileName, (, interner, ,, currentFile, ), ;, SourceFile, ., Builder, builder, =]
[splitFileName, (, interner, ,, currentFile, ), ;, SourceFile, ., Builder, builder, =, SourceFile, ., newBuilder, (, ), ., setDir, (]
[splitFileName, (, interner, ,, currentFile, ), ;, SourceFile, ., Builder, builder, =, SourceFile, ., newBuilder, (, ), ., setDir, (]
[SourceFile, ., Builder, builder, =, SourceFile, ., newBuilder, (, ), ., setDir, (, dirFile, ., dir, ), ., setFileName, (]
[SourceFile, ., Builder, builder, =, SourceFile, ., newBuilder, (, ), ., setDir, (, dirFile, ., dir, ), ., setFileName, (]
[newBuilder, (, ), ., setDir, (, dirFile, ., dir, ), ., setFileName, (, dirFile, ., name, ), ., setStartLine, (]
[(, dirFile, ., dir, ), ., setFileName, (, dirFile, ., name, ), ., setStartLine, (, startLine, ), ., setStartMapId, (]
[., setFileName, (, dirFile, ., name, ), ., setStartLine, (, startLine, ), ., setStartMapId, (, startMapId, ), ., setLineOffsets, (]
[name, ), ., setStartLine, (, startLine, ), ., setStartMapId, (, startMapId, ), ., setLineOffsets, (, lineOffsets, ), ., setColumns, (]
[startLine, ), ., setStartMapId, (, startMapId, ), ., setLineOffsets, (, lineOffsets, ), ., setColumns, (, columns, ), ., setIdentifiers, (]
[setStartMapId, (, startMapId, ), ., setLineOffsets, (, lineOffsets, ), ., setColumns, (, columns, ), ., setIdentifiers, (, identifiers, ), ;]
[setStartMapId, (, startMapId, ), ., setLineOffsets, (, lineOffsets, ), ., setColumns, (, columns, ), ., setIdentifiers, (, identifiers, ), ;]
[., setLineOffsets, (, lineOffsets, ), ., setColumns, (, columns, ), ., setIdentifiers, (, identifiers, ), ;, mappingsBuilder, ., add, (]
[., setLineOffsets, (, lineOffsets, ), ., setColumns, (, columns, ), ., setIdentifiers, (, identifiers, ), ;, mappingsBuilder, ., add, (]
[columns, ), ., setIdentifiers, (, identifiers, ), ;, mappingsBuilder, ., add, (, builder, ., build, (, ), ), ;, }]
[., setIdentifiers, (, identifiers, ), ;, mappingsBuilder, ., add, (, builder, ., build, (, ), ), ;, }, currentFile, =]
[(, identifiers, ), ;, mappingsBuilder, ., add, (, builder, ., build, (, ), ), ;, }, currentFile, =, myFile, ;]
[), ;, mappingsBuilder, ., add, (, builder, ., build, (, ), ), ;, }, currentFile, =, myFile, ;, startLine, =]
[mappingsBuilder, ., add, (, builder, ., build, (, ), ), ;, }, currentFile, =, myFile, ;, startLine, =, line, ;]
[add, (, builder, ., build, (, ), ), ;, }, currentFile, =, myFile, ;, startLine, =, line, ;, lastLine, =]
[builder, ., build, (, ), ), ;, }, currentFile, =, myFile, ;, startLine, =, line, ;, lastLine, =, line, ;]
[build, (, ), ), ;, }, currentFile, =, myFile, ;, startLine, =, line, ;, lastLine, =, line, ;, startMapId, =]
[), ), ;, }, currentFile, =, myFile, ;, startLine, =, line, ;, lastLine, =, line, ;, startMapId, =, mappingId, ;]
[), ), ;, }, currentFile, =, myFile, ;, startLine, =, line, ;, lastLine, =, line, ;, startMapId, =, mappingId, ;]
[myFile, ;, startLine, =, line, ;, lastLine, =, line, ;, startMapId, =, mappingId, ;, columns, ., clear, (, ), ;]
[myFile, ;, startLine, =, line, ;, lastLine, =, line, ;, startMapId, =, mappingId, ;, columns, ., clear, (, ), ;]
[lastLine, =, line, ;, startMapId, =, mappingId, ;, columns, ., clear, (, ), ;, lineOffsets, ., clear, (, ), ;]
[lastLine, =, line, ;, startMapId, =, mappingId, ;, columns, ., clear, (, ), ;, lineOffsets, ., clear, (, ), ;]
[;, columns, ., clear, (, ), ;, lineOffsets, ., clear, (, ), ;, identifiers, ., clear, (, ), ;, }]
[;, columns, ., clear, (, ), ;, lineOffsets, ., clear, (, ), ;, identifiers, ., clear, (, ), ;, }]
[(, ), ;, lineOffsets, ., clear, (, ), ;, identifiers, ., clear, (, ), ;, }, lineOffsets, ., add, (]
[lineOffsets, ., clear, (, ), ;, identifiers, ., clear, (, ), ;, }, lineOffsets, ., add, (, (, byte, )]
[., clear, (, ), ;, identifiers, ., clear, (, ), ;, }, lineOffsets, ., add, (, (, byte, ), (]
[., clear, (, ), ;, identifiers, ., clear, (, ), ;, }, lineOffsets, ., add, (, (, byte, ), (]
[(, ), ;, identifiers, ., clear, (, ), ;, }, lineOffsets, ., add, (, (, byte, ), (, line, -]
[., clear, (, ), ;, }, lineOffsets, ., add, (, (, byte, ), (, line, -, lastLine, ), ), ;]
[., clear, (, ), ;, }, lineOffsets, ., add, (, (, byte, ), (, line, -, lastLine, ), ), ;]
[;, }, lineOffsets, ., add, (, (, byte, ), (, line, -, lastLine, ), ), ;, columns, ., add, (]
[., add, (, (, byte, ), (, line, -, lastLine, ), ), ;, columns, ., add, (, (, short, )]
[., add, (, (, byte, ), (, line, -, lastLine, ), ), ;, columns, ., add, (, (, short, )]
[byte, ), (, line, -, lastLine, ), ), ;, columns, ., add, (, (, short, ), mapArray, ., getInt, (]
[-, lastLine, ), ), ;, columns, ., add, (, (, short, ), mapArray, ., getInt, (, 2, ), ), ;]
[-, lastLine, ), ), ;, columns, ., add, (, (, short, ), mapArray, ., getInt, (, 2, ), ), ;]
[;, columns, ., add, (, (, short, ), mapArray, ., getInt, (, 2, ), ), ;, identifiers, ., add, (]
[;, columns, ., add, (, (, short, ), mapArray, ., getInt, (, 2, ), ), ;, identifiers, ., add, (]
[(, (, short, ), mapArray, ., getInt, (, 2, ), ), ;, identifiers, ., add, (, interner, ., intern, (]
[(, (, short, ), mapArray, ., getInt, (, 2, ), ), ;, identifiers, ., add, (, interner, ., intern, (]
[mapArray, ., getInt, (, 2, ), ), ;, identifiers, ., add, (, interner, ., intern, (, mapArray, ., optString, (]
[getInt, (, 2, ), ), ;, identifiers, ., add, (, interner, ., intern, (, mapArray, ., optString, (, 3, ,]
[;, identifiers, ., add, (, interner, ., intern, (, mapArray, ., optString, (, 3, ,, "", ), ), ), ;]
[., add, (, interner, ., intern, (, mapArray, ., optString, (, 3, ,, "", ), ), ), ;, lastLine, =]
[intern, (, mapArray, ., optString, (, 3, ,, "", ), ), ), ;, lastLine, =, line, ;, }, if, (]
[intern, (, mapArray, ., optString, (, 3, ,, "", ), ), ), ;, lastLine, =, line, ;, }, if, (]
[mapArray, ., optString, (, 3, ,, "", ), ), ), ;, lastLine, =, line, ;, }, if, (, currentFile, !=]
["", ), ), ), ;, lastLine, =, line, ;, }, if, (, currentFile, !=, null, ), {, FileName, dirFile, =]
[), ), ;, lastLine, =, line, ;, }, if, (, currentFile, !=, null, ), {, FileName, dirFile, =, splitFileName, (]
[;, lastLine, =, line, ;, }, if, (, currentFile, !=, null, ), {, FileName, dirFile, =, splitFileName, (, interner, ,]
[currentFile, !=, null, ), {, FileName, dirFile, =, splitFileName, (, interner, ,, currentFile, ), ;, SourceFile, ., Builder, builder, =]
[currentFile, !=, null, ), {, FileName, dirFile, =, splitFileName, (, interner, ,, currentFile, ), ;, SourceFile, ., Builder, builder, =]
[currentFile, !=, null, ), {, FileName, dirFile, =, splitFileName, (, interner, ,, currentFile, ), ;, SourceFile, ., Builder, builder, =]
[currentFile, !=, null, ), {, FileName, dirFile, =, splitFileName, (, interner, ,, currentFile, ), ;, SourceFile, ., Builder, builder, =]
[currentFile, !=, null, ), {, FileName, dirFile, =, splitFileName, (, interner, ,, currentFile, ), ;, SourceFile, ., Builder, builder, =]
[currentFile, !=, null, ), {, FileName, dirFile, =, splitFileName, (, interner, ,, currentFile, ), ;, SourceFile, ., Builder, builder, =]
[currentFile, !=, null, ), {, FileName, dirFile, =, splitFileName, (, interner, ,, currentFile, ), ;, SourceFile, ., Builder, builder, =]
[currentFile, !=, null, ), {, FileName, dirFile, =, splitFileName, (, interner, ,, currentFile, ), ;, SourceFile, ., Builder, builder, =]
[currentFile, !=, null, ), {, FileName, dirFile, =, splitFileName, (, interner, ,, currentFile, ), ;, SourceFile, ., Builder, builder, =]
[splitFileName, (, interner, ,, currentFile, ), ;, SourceFile, ., Builder, builder, =, SourceFile, ., newBuilder, (, ), ., setDir, (]
[splitFileName, (, interner, ,, currentFile, ), ;, SourceFile, ., Builder, builder, =, SourceFile, ., newBuilder, (, ), ., setDir, (]
[SourceFile, ., Builder, builder, =, SourceFile, ., newBuilder, (, ), ., setDir, (, dirFile, ., dir, ), ., setFileName, (]
[SourceFile, ., Builder, builder, =, SourceFile, ., newBuilder, (, ), ., setDir, (, dirFile, ., dir, ), ., setFileName, (]
[newBuilder, (, ), ., setDir, (, dirFile, ., dir, ), ., setFileName, (, dirFile, ., name, ), ., setStartLine, (]
[(, dirFile, ., dir, ), ., setFileName, (, dirFile, ., name, ), ., setStartLine, (, startLine, ), ., setStartMapId, (]
[., setFileName, (, dirFile, ., name, ), ., setStartLine, (, startLine, ), ., setStartMapId, (, startMapId, ), ., setLineOffsets, (]
[name, ), ., setStartLine, (, startLine, ), ., setStartMapId, (, startMapId, ), ., setLineOffsets, (, lineOffsets, ), ., setColumns, (]
[startLine, ), ., setStartMapId, (, startMapId, ), ., setLineOffsets, (, lineOffsets, ), ., setColumns, (, columns, ), ., setIdentifiers, (]
[setStartMapId, (, startMapId, ), ., setLineOffsets, (, lineOffsets, ), ., setColumns, (, columns, ), ., setIdentifiers, (, identifiers, ), ;]
[setStartMapId, (, startMapId, ), ., setLineOffsets, (, lineOffsets, ), ., setColumns, (, columns, ), ., setIdentifiers, (, identifiers, ), ;]
[., setLineOffsets, (, lineOffsets, ), ., setColumns, (, columns, ), ., setIdentifiers, (, identifiers, ), ;, mappingsBuilder, ., add, (]
[., setLineOffsets, (, lineOffsets, ), ., setColumns, (, columns, ), ., setIdentifiers, (, identifiers, ), ;, mappingsBuilder, ., add, (]
[columns, ), ., setIdentifiers, (, identifiers, ), ;, mappingsBuilder, ., add, (, builder, ., build, (, ), ), ;, }]
[., setIdentifiers, (, identifiers, ), ;, mappingsBuilder, ., add, (, builder, ., build, (, ), ), ;, }, mappings, =]
[., setIdentifiers, (, identifiers, ), ;, mappingsBuilder, ., add, (, builder, ., build, (, ), ), ;, }, mappings, =]
[build, (, ), ;, }, private, void, parseInternal, (, ParseState, parser, ), throws, SourceMapParseException, ,, JSONException, {, String, headerCount, =]
[build, (, ), ;, }, private, void, parseInternal, (, ParseState, parser, ), throws, SourceMapParseException, ,, JSONException, {, String, headerCount, =]
[void, parseInternal, (, ParseState, parser, ), throws, SourceMapParseException, ,, JSONException, {, String, headerCount, =, parser, ., readLine, (, ), ;]
[void, parseInternal, (, ParseState, parser, ), throws, SourceMapParseException, ,, JSONException, {, String, headerCount, =, parser, ., readLine, (, ), ;]
[parser, ), throws, SourceMapParseException, ,, JSONException, {, String, headerCount, =, parser, ., readLine, (, ), ;, Preconditions, ., checkArgument, (]
[parser, ), throws, SourceMapParseException, ,, JSONException, {, String, headerCount, =, parser, ., readLine, (, ), ;, Preconditions, ., checkArgument, (]
[,, JSONException, {, String, headerCount, =, parser, ., readLine, (, ), ;, Preconditions, ., checkArgument, (, headerCount, ., startsWith, (]
[String, headerCount, =, parser, ., readLine, (, ), ;, Preconditions, ., checkArgument, (, headerCount, ., startsWith, (, LINEMAP_HEADER, ), ,]
[=, parser, ., readLine, (, ), ;, Preconditions, ., checkArgument, (, headerCount, ., startsWith, (, LINEMAP_HEADER, ), ,, "Expected %s", ,]
[;, Preconditions, ., checkArgument, (, headerCount, ., startsWith, (, LINEMAP_HEADER, ), ,, "Expected %s", ,, LINEMAP_HEADER, ), ;, JSONObject, countObject, =]
[checkArgument, (, headerCount, ., startsWith, (, LINEMAP_HEADER, ), ,, "Expected %s", ,, LINEMAP_HEADER, ), ;, JSONObject, countObject, =, new, JSONObject, (]
[checkArgument, (, headerCount, ., startsWith, (, LINEMAP_HEADER, ), ,, "Expected %s", ,, LINEMAP_HEADER, ), ;, JSONObject, countObject, =, new, JSONObject, (]
[startsWith, (, LINEMAP_HEADER, ), ,, "Expected %s", ,, LINEMAP_HEADER, ), ;, JSONObject, countObject, =, new, JSONObject, (, headerCount, ., substring, (]
[startsWith, (, LINEMAP_HEADER, ), ,, "Expected %s", ,, LINEMAP_HEADER, ), ;, JSONObject, countObject, =, new, JSONObject, (, headerCount, ., substring, (]
[JSONObject, countObject, =, new, JSONObject, (, headerCount, ., substring, (, LINEMAP_HEADER, ., length, (, ), ), ), ;, if, (]
[countObject, =, new, JSONObject, (, headerCount, ., substring, (, LINEMAP_HEADER, ., length, (, ), ), ), ;, if, (, !]
[countObject, =, new, JSONObject, (, headerCount, ., substring, (, LINEMAP_HEADER, ., length, (, ), ), ), ;, if, (, !]
[(, headerCount, ., substring, (, LINEMAP_HEADER, ., length, (, ), ), ), ;, if, (, !, countObject, ., has, (]
[(, LINEMAP_HEADER, ., length, (, ), ), ), ;, if, (, !, countObject, ., has, (, "count", ), ), {]
[(, LINEMAP_HEADER, ., length, (, ), ), ), ;, if, (, !, countObject, ., has, (, "count", ), ), {]
[(, ), ), ), ;, if, (, !, countObject, ., has, (, "count", ), ), {, parser, ., fail, (]
[!, countObject, ., has, (, "count", ), ), {, parser, ., fail, (, "Missing 'count'", ), ;, }, int, lineCount, =]
[!, countObject, ., has, (, "count", ), ), {, parser, ., fail, (, "Missing 'count'", ), ;, }, int, lineCount, =]
[(, "count", ), ), {, parser, ., fail, (, "Missing 'count'", ), ;, }, int, lineCount, =, countObject, ., getInt, (]
[parser, ., fail, (, "Missing 'count'", ), ;, }, int, lineCount, =, countObject, ., getInt, (, "count", ), ;, if, (]
[parser, ., fail, (, "Missing 'count'", ), ;, }, int, lineCount, =, countObject, ., getInt, (, "count", ), ;, if, (]
[fail, (, "Missing 'count'", ), ;, }, int, lineCount, =, countObject, ., getInt, (, "count", ), ;, if, (, lineCount, <=]
[), ;, }, int, lineCount, =, countObject, ., getInt, (, "count", ), ;, if, (, lineCount, <=, 0, ), {]
[), ;, }, int, lineCount, =, countObject, ., getInt, (, "count", ), ;, if, (, lineCount, <=, 0, ), {]
[lineCount, =, countObject, ., getInt, (, "count", ), ;, if, (, lineCount, <=, 0, ), {, parser, ., fail, (]
[{, parser, ., fail, (, "Count must be >= 1", ), ;, }, ImmutableList, ., Builder, <, ImmutableList, <, LineFragment, >, >, characterMapBuilder, =]
[{, parser, ., fail, (, "Count must be >= 1", ), ;, }, ImmutableList, ., Builder, <, ImmutableList, <, LineFragment, >, >, characterMapBuilder, =]
[ImmutableList, ., Builder, <, ImmutableList, <, LineFragment, >, >, characterMapBuilder, =, ImmutableList, ., builder, (, ), ;, int, maxId, =]
[Builder, <, ImmutableList, <, LineFragment, >, >, characterMapBuilder, =, ImmutableList, ., builder, (, ), ;, int, maxId, =, parseCharacterMap, (]
[ImmutableList, <, LineFragment, >, >, characterMapBuilder, =, ImmutableList, ., builder, (, ), ;, int, maxId, =, parseCharacterMap, (, parser, ,]
[LineFragment, >, >, characterMapBuilder, =, ImmutableList, ., builder, (, ), ;, int, maxId, =, parseCharacterMap, (, parser, ,, lineCount, ,]
[characterMapBuilder, =, ImmutableList, ., builder, (, ), ;, int, maxId, =, parseCharacterMap, (, parser, ,, lineCount, ,, characterMapBuilder, ), ;]
[ImmutableList, ., builder, (, ), ;, int, maxId, =, parseCharacterMap, (, parser, ,, lineCount, ,, characterMapBuilder, ), ;, characterMap, =]
[ImmutableList, ., builder, (, ), ;, int, maxId, =, parseCharacterMap, (, parser, ,, lineCount, ,, characterMapBuilder, ), ;, characterMap, =]
[int, maxId, =, parseCharacterMap, (, parser, ,, lineCount, ,, characterMapBuilder, ), ;, characterMap, =, characterMapBuilder, ., build, (, ), ;]
[int, maxId, =, parseCharacterMap, (, parser, ,, lineCount, ,, characterMapBuilder, ), ;, characterMap, =, characterMapBuilder, ., build, (, ), ;]
[(, parser, ,, lineCount, ,, characterMapBuilder, ), ;, characterMap, =, characterMapBuilder, ., build, (, ), ;, parser, ., expectLine, (]
[characterMap, =, characterMapBuilder, ., build, (, ), ;, parser, ., expectLine, (, FILEINFO_HEADER, ), ;, for, (, int, i, =]
[characterMapBuilder, ., build, (, ), ;, parser, ., expectLine, (, FILEINFO_HEADER, ), ;, for, (, int, i, =, 0, ;]
[characterMapBuilder, ., build, (, ), ;, parser, ., expectLine, (, FILEINFO_HEADER, ), ;, for, (, int, i, =, 0, ;]
[build, (, ), ;, parser, ., expectLine, (, FILEINFO_HEADER, ), ;, for, (, int, i, =, 0, ;, i, <]
[), ;, parser, ., expectLine, (, FILEINFO_HEADER, ), ;, for, (, int, i, =, 0, ;, i, <, lineCount, ;]
[), ;, parser, ., expectLine, (, FILEINFO_HEADER, ), ;, for, (, int, i, =, 0, ;, i, <, lineCount, ;]
[expectLine, (, FILEINFO_HEADER, ), ;, for, (, int, i, =, 0, ;, i, <, lineCount, ;, i, ++, ), {]
[expectLine, (, FILEINFO_HEADER, ), ;, for, (, int, i, =, 0, ;, i, <, lineCount, ;, i, ++, ), {]
[int, i, =, 0, ;, i, <, lineCount, ;, i, ++, ), {, parser, ., readLine, (, ), ;, }]
[int, i, =, 0, ;, i, <, lineCount, ;, i, ++, ), {, parser, ., readLine, (, ), ;, }]
[;, i, <, lineCount, ;, i, ++, ), {, parser, ., readLine, (, ), ;, }, parser, ., expectLine, (]
[lineCount, ;, i, ++, ), {, parser, ., readLine, (, ), ;, }, parser, ., expectLine, (, DEFINITION_HEADER, ), ;]
[i, ++, ), {, parser, ., readLine, (, ), ;, }, parser, ., expectLine, (, DEFINITION_HEADER, ), ;, parseFileMappings, (]
[), {, parser, ., readLine, (, ), ;, }, parser, ., expectLine, (, DEFINITION_HEADER, ), ;, parseFileMappings, (, parser, ,]
[(, parser, ,, maxId, ), ;, }, @, Override, public, OriginalMapping, getMappingForLine, (, int, lineNumber, ,, int, columnIndex, ), {]
[(, parser, ,, maxId, ), ;, }, @, Override, public, OriginalMapping, getMappingForLine, (, int, lineNumber, ,, int, columnIndex, ), {]
[), ;, }, @, Override, public, OriginalMapping, getMappingForLine, (, int, lineNumber, ,, int, columnIndex, ), {, Preconditions, ., checkNotNull, (]
[}, @, Override, public, OriginalMapping, getMappingForLine, (, int, lineNumber, ,, int, columnIndex, ), {, Preconditions, ., checkNotNull, (, characterMap, ,]
[getMappingForLine, (, int, lineNumber, ,, int, columnIndex, ), {, Preconditions, ., checkNotNull, (, characterMap, ,, "parse() must be called first", ), ;, if, (]
[getMappingForLine, (, int, lineNumber, ,, int, columnIndex, ), {, Preconditions, ., checkNotNull, (, characterMap, ,, "parse() must be called first", ), ;, if, (]
[getMappingForLine, (, int, lineNumber, ,, int, columnIndex, ), {, Preconditions, ., checkNotNull, (, characterMap, ,, "parse() must be called first", ), ;, if, (]
[getMappingForLine, (, int, lineNumber, ,, int, columnIndex, ), {, Preconditions, ., checkNotNull, (, characterMap, ,, "parse() must be called first", ), ;, if, (]
[int, lineNumber, ,, int, columnIndex, ), {, Preconditions, ., checkNotNull, (, characterMap, ,, "parse() must be called first", ), ;, if, (, lineNumber, <]
[,, int, columnIndex, ), {, Preconditions, ., checkNotNull, (, characterMap, ,, "parse() must be called first", ), ;, if, (, lineNumber, <, 1, ||]
[,, int, columnIndex, ), {, Preconditions, ., checkNotNull, (, characterMap, ,, "parse() must be called first", ), ;, if, (, lineNumber, <, 1, ||]
[columnIndex, ), {, Preconditions, ., checkNotNull, (, characterMap, ,, "parse() must be called first", ), ;, if, (, lineNumber, <, 1, ||, lineNumber, >]
[columnIndex, ), {, Preconditions, ., checkNotNull, (, characterMap, ,, "parse() must be called first", ), ;, if, (, lineNumber, <, 1, ||, lineNumber, >]
[(, characterMap, ,, "parse() must be called first", ), ;, if, (, lineNumber, <, 1, ||, lineNumber, >, characterMap, ., size, (, ), ||]
[(, characterMap, ,, "parse() must be called first", ), ;, if, (, lineNumber, <, 1, ||, lineNumber, >, characterMap, ., size, (, ), ||]
[,, "parse() must be called first", ), ;, if, (, lineNumber, <, 1, ||, lineNumber, >, characterMap, ., size, (, ), ||, columnIndex, <]
[if, (, lineNumber, <, 1, ||, lineNumber, >, characterMap, ., size, (, ), ||, columnIndex, <, 1, ), {, return]
[., size, (, ), ||, columnIndex, <, 1, ), {, return, null, ;, }, List, <, LineFragment, >, lineFragments, =]
[., size, (, ), ||, columnIndex, <, 1, ), {, return, null, ;, }, List, <, LineFragment, >, lineFragments, =]
[||, columnIndex, <, 1, ), {, return, null, ;, }, List, <, LineFragment, >, lineFragments, =, characterMap, ., get, (]
[||, columnIndex, <, 1, ), {, return, null, ;, }, List, <, LineFragment, >, lineFragments, =, characterMap, ., get, (]
[<, 1, ), {, return, null, ;, }, List, <, LineFragment, >, lineFragments, =, characterMap, ., get, (, lineNumber, -]
[null, ;, }, List, <, LineFragment, >, lineFragments, =, characterMap, ., get, (, lineNumber, -, 1, ), ;, if, (]
[null, ;, }, List, <, LineFragment, >, lineFragments, =, characterMap, ., get, (, lineNumber, -, 1, ), ;, if, (]
[null, ;, }, List, <, LineFragment, >, lineFragments, =, characterMap, ., get, (, lineNumber, -, 1, ), ;, if, (]
[}, List, <, LineFragment, >, lineFragments, =, characterMap, ., get, (, lineNumber, -, 1, ), ;, if, (, lineFragments, ==]
[<, LineFragment, >, lineFragments, =, characterMap, ., get, (, lineNumber, -, 1, ), ;, if, (, lineFragments, ==, null, ||]
[<, LineFragment, >, lineFragments, =, characterMap, ., get, (, lineNumber, -, 1, ), ;, if, (, lineFragments, ==, null, ||]
[(, lineNumber, -, 1, ), ;, if, (, lineFragments, ==, null, ||, lineFragments, ., isEmpty, (, ), ), {, return]
[if, (, lineFragments, ==, null, ||, lineFragments, ., isEmpty, (, ), ), {, return, null, ;, }, int, columnOffset, =]
[||, lineFragments, ., isEmpty, (, ), ), {, return, null, ;, }, int, columnOffset, =, 0, ;, LineFragment, lastFragment, =]
[||, lineFragments, ., isEmpty, (, ), ), {, return, null, ;, }, int, columnOffset, =, 0, ;, LineFragment, lastFragment, =]
[(, ), ), {, return, null, ;, }, int, columnOffset, =, 0, ;, LineFragment, lastFragment, =, lineFragments, ., get, (]
[(, ), ), {, return, null, ;, }, int, columnOffset, =, 0, ;, LineFragment, lastFragment, =, lineFragments, ., get, (]
[(, ), ), {, return, null, ;, }, int, columnOffset, =, 0, ;, LineFragment, lastFragment, =, lineFragments, ., get, (]
[;, }, int, columnOffset, =, 0, ;, LineFragment, lastFragment, =, lineFragments, ., get, (, lineFragments, ., size, (, ), -]
[;, LineFragment, lastFragment, =, lineFragments, ., get, (, lineFragments, ., size, (, ), -, 1, ), ;, int, mapId, =]
[;, LineFragment, lastFragment, =, lineFragments, ., get, (, lineFragments, ., size, (, ), -, 1, ), ;, int, mapId, =]
[lineFragments, ., get, (, lineFragments, ., size, (, ), -, 1, ), ;, int, mapId, =, lastFragment, ., valueAtColumn, (]
[lineFragments, ., get, (, lineFragments, ., size, (, ), -, 1, ), ;, int, mapId, =, lastFragment, ., valueAtColumn, (]
[;, int, mapId, =, lastFragment, ., valueAtColumn, (, lastFragment, ., length, (, ), ), ;, for, (, LineFragment, lineFragment, :]
[valueAtColumn, (, lastFragment, ., length, (, ), ), ;, for, (, LineFragment, lineFragment, :, lineFragments, ), {, int, columnPosition, =]
[valueAtColumn, (, lastFragment, ., length, (, ), ), ;, for, (, LineFragment, lineFragment, :, lineFragments, ), {, int, columnPosition, =]
[lastFragment, ., length, (, ), ), ;, for, (, LineFragment, lineFragment, :, lineFragments, ), {, int, columnPosition, =, columnIndex, -]
[), ), ;, for, (, LineFragment, lineFragment, :, lineFragments, ), {, int, columnPosition, =, columnIndex, -, columnOffset, ;, if, (]
[), ), ;, for, (, LineFragment, lineFragment, :, lineFragments, ), {, int, columnPosition, =, columnIndex, -, columnOffset, ;, if, (]
[;, for, (, LineFragment, lineFragment, :, lineFragments, ), {, int, columnPosition, =, columnIndex, -, columnOffset, ;, if, (, columnPosition, <=]
[;, for, (, LineFragment, lineFragment, :, lineFragments, ), {, int, columnPosition, =, columnIndex, -, columnOffset, ;, if, (, columnPosition, <=]
[), {, int, columnPosition, =, columnIndex, -, columnOffset, ;, if, (, columnPosition, <=, lineFragment, ., length, (, ), ), {]
[int, columnPosition, =, columnIndex, -, columnOffset, ;, if, (, columnPosition, <=, lineFragment, ., length, (, ), ), {, mapId, =]
[int, columnPosition, =, columnIndex, -, columnOffset, ;, if, (, columnPosition, <=, lineFragment, ., length, (, ), ), {, mapId, =]
[-, columnOffset, ;, if, (, columnPosition, <=, lineFragment, ., length, (, ), ), {, mapId, =, lineFragment, ., valueAtColumn, (]
[<=, lineFragment, ., length, (, ), ), {, mapId, =, lineFragment, ., valueAtColumn, (, columnPosition, ), ;, break, ;, }]
[., length, (, ), ), {, mapId, =, lineFragment, ., valueAtColumn, (, columnPosition, ), ;, break, ;, }, columnOffset, +=]
[., length, (, ), ), {, mapId, =, lineFragment, ., valueAtColumn, (, columnPosition, ), ;, break, ;, }, columnOffset, +=]
[., valueAtColumn, (, columnPosition, ), ;, break, ;, }, columnOffset, +=, lineFragment, ., length, (, ), ;, }, if, (]
[., valueAtColumn, (, columnPosition, ), ;, break, ;, }, columnOffset, +=, lineFragment, ., length, (, ), ;, }, if, (]
[(, columnPosition, ), ;, break, ;, }, columnOffset, +=, lineFragment, ., length, (, ), ;, }, if, (, mapId, <]
[break, ;, }, columnOffset, +=, lineFragment, ., length, (, ), ;, }, if, (, mapId, <, 0, ), {, return]
[+=, lineFragment, ., length, (, ), ;, }, if, (, mapId, <, 0, ), {, return, null, ;, }, return]
[., length, (, ), ;, }, if, (, mapId, <, 0, ), {, return, null, ;, }, return, getMappingFromId, (]
[;, }, return, getMappingFromId, (, mapId, ), ;, }, private, SourceFile, binarySearch, (, int, mapId, ), {, int, lower, =]
[mapId, ), ;, }, private, SourceFile, binarySearch, (, int, mapId, ), {, int, lower, =, 0, ;, int, upper, =]
[mapId, ), ;, }, private, SourceFile, binarySearch, (, int, mapId, ), {, int, lower, =, 0, ;, int, upper, =]
[mapId, ), ;, }, private, SourceFile, binarySearch, (, int, mapId, ), {, int, lower, =, 0, ;, int, upper, =]
[binarySearch, (, int, mapId, ), {, int, lower, =, 0, ;, int, upper, =, mappings, ., size, (, ), -]
[), {, int, lower, =, 0, ;, int, upper, =, mappings, ., size, (, ), -, 1, ;, while, (]
[), {, int, lower, =, 0, ;, int, upper, =, mappings, ., size, (, ), -, 1, ;, while, (]
[int, lower, =, 0, ;, int, upper, =, mappings, ., size, (, ), -, 1, ;, while, (, lower, <=]
[upper, =, mappings, ., size, (, ), -, 1, ;, while, (, lower, <=, upper, ), {, int, middle, =]
[upper, =, mappings, ., size, (, ), -, 1, ;, while, (, lower, <=, upper, ), {, int, middle, =]
[mappings, ., size, (, ), -, 1, ;, while, (, lower, <=, upper, ), {, int, middle, =, lower, +]
[mappings, ., size, (, ), -, 1, ;, while, (, lower, <=, upper, ), {, int, middle, =, lower, +]
[., size, (, ), -, 1, ;, while, (, lower, <=, upper, ), {, int, middle, =, lower, +, (]
[., size, (, ), -, 1, ;, while, (, lower, <=, upper, ), {, int, middle, =, lower, +, (]
[(, ), -, 1, ;, while, (, lower, <=, upper, ), {, int, middle, =, lower, +, (, upper, -]
[1, ;, while, (, lower, <=, upper, ), {, int, middle, =, lower, +, (, upper, -, lower, ), /]
[<=, upper, ), {, int, middle, =, lower, +, (, upper, -, lower, ), /, 2, ;, SourceFile, middleCompare, =]
[<=, upper, ), {, int, middle, =, lower, +, (, upper, -, lower, ), /, 2, ;, SourceFile, middleCompare, =]
[int, middle, =, lower, +, (, upper, -, lower, ), /, 2, ;, SourceFile, middleCompare, =, mappings, ., get, (]
[(, upper, -, lower, ), /, 2, ;, SourceFile, middleCompare, =, mappings, ., get, (, middle, ), ;, if, (]
[(, upper, -, lower, ), /, 2, ;, SourceFile, middleCompare, =, mappings, ., get, (, middle, ), ;, if, (]
[-, lower, ), /, 2, ;, SourceFile, middleCompare, =, mappings, ., get, (, middle, ), ;, if, (, mapId, <]
[-, lower, ), /, 2, ;, SourceFile, middleCompare, =, mappings, ., get, (, middle, ), ;, if, (, mapId, <]
[middleCompare, =, mappings, ., get, (, middle, ), ;, if, (, mapId, <, middleCompare, ., getStartMapId, (, ), ), {]
[mappings, ., get, (, middle, ), ;, if, (, mapId, <, middleCompare, ., getStartMapId, (, ), ), {, upper, =]
[mappings, ., get, (, middle, ), ;, if, (, mapId, <, middleCompare, ., getStartMapId, (, ), ), {, upper, =]
[get, (, middle, ), ;, if, (, mapId, <, middleCompare, ., getStartMapId, (, ), ), {, upper, =, middle, -]
[(, mapId, <, middleCompare, ., getStartMapId, (, ), ), {, upper, =, middle, -, 1, ;, }, else, if, (]
[(, mapId, <, middleCompare, ., getStartMapId, (, ), ), {, upper, =, middle, -, 1, ;, }, else, if, (]
[<, middleCompare, ., getStartMapId, (, ), ), {, upper, =, middle, -, 1, ;, }, else, if, (, mapId, <]
[middleCompare, ., getStartMapId, (, ), ), {, upper, =, middle, -, 1, ;, }, else, if, (, mapId, <, (]
[middleCompare, ., getStartMapId, (, ), ), {, upper, =, middle, -, 1, ;, }, else, if, (, mapId, <, (]
[middleCompare, ., getStartMapId, (, ), ), {, upper, =, middle, -, 1, ;, }, else, if, (, mapId, <, (]
[{, upper, =, middle, -, 1, ;, }, else, if, (, mapId, <, (, middleCompare, ., getStartMapId, (, ), +]
[{, upper, =, middle, -, 1, ;, }, else, if, (, mapId, <, (, middleCompare, ., getStartMapId, (, ), +]
[if, (, mapId, <, (, middleCompare, ., getStartMapId, (, ), +, middleCompare, ., getLength, (, ), ), ), {, return]
[middleCompare, ., getStartMapId, (, ), +, middleCompare, ., getLength, (, ), ), ), {, return, middleCompare, ;, }, else, {]
[getStartMapId, (, ), +, middleCompare, ., getLength, (, ), ), ), {, return, middleCompare, ;, }, else, {, lower, =]
[getStartMapId, (, ), +, middleCompare, ., getLength, (, ), ), ), {, return, middleCompare, ;, }, else, {, lower, =]
[), +, middleCompare, ., getLength, (, ), ), ), {, return, middleCompare, ;, }, else, {, lower, =, middle, +]
[(, ), ), ), {, return, middleCompare, ;, }, else, {, lower, =, middle, +, 1, ;, }, }, return]
[+, 1, ;, }, }, return, null, ;, }, private, OriginalMapping, getMappingFromId, (, int, mapID, ), {, SourceFile, match, =]
[;, }, }, return, null, ;, }, private, OriginalMapping, getMappingFromId, (, int, mapID, ), {, SourceFile, match, =, binarySearch, (]
[;, }, private, OriginalMapping, getMappingFromId, (, int, mapID, ), {, SourceFile, match, =, binarySearch, (, mapID, ), ;, if, (]
[;, }, private, OriginalMapping, getMappingFromId, (, int, mapID, ), {, SourceFile, match, =, binarySearch, (, mapID, ), ;, if, (]
[private, OriginalMapping, getMappingFromId, (, int, mapID, ), {, SourceFile, match, =, binarySearch, (, mapID, ), ;, if, (, match, ==]
[int, mapID, ), {, SourceFile, match, =, binarySearch, (, mapID, ), ;, if, (, match, ==, null, ), {, return]
[=, binarySearch, (, mapID, ), ;, if, (, match, ==, null, ), {, return, null, ;, }, int, pos, =]
[=, binarySearch, (, mapID, ), ;, if, (, match, ==, null, ), {, return, null, ;, }, int, pos, =]
[(, mapID, ), ;, if, (, match, ==, null, ), {, return, null, ;, }, int, pos, =, mapID, -]
[(, mapID, ), ;, if, (, match, ==, null, ), {, return, null, ;, }, int, pos, =, mapID, -]
[==, null, ), {, return, null, ;, }, int, pos, =, mapID, -, match, ., getStartMapId, (, ), ;, return]
[==, null, ), {, return, null, ;, }, int, pos, =, mapID, -, match, ., getStartMapId, (, ), ;, return]
[return, null, ;, }, int, pos, =, mapID, -, match, ., getStartMapId, (, ), ;, return, match, ., getOriginalMapping, (]
[startIndex, ;, private, final, byte, [, ], offsets, ;, LineFragment, (, int, startIndex, ,, byte, [, ], offsets, ), {]
[startIndex, ;, private, final, byte, [, ], offsets, ;, LineFragment, (, int, startIndex, ,, byte, [, ], offsets, ), {]
[byte, [, ], offsets, ;, LineFragment, (, int, startIndex, ,, byte, [, ], offsets, ), {, this, ., startIndex, =]
[], offsets, ;, LineFragment, (, int, startIndex, ,, byte, [, ], offsets, ), {, this, ., startIndex, =, startIndex, ;]
[], offsets, ;, LineFragment, (, int, startIndex, ,, byte, [, ], offsets, ), {, this, ., startIndex, =, startIndex, ;]
[(, int, startIndex, ,, byte, [, ], offsets, ), {, this, ., startIndex, =, startIndex, ;, this, ., offsets, =]
[{, this, ., startIndex, =, startIndex, ;, this, ., offsets, =, offsets, ;, }, int, length, (, ), {, return]
[{, this, ., startIndex, =, startIndex, ;, this, ., offsets, =, offsets, ;, }, int, length, (, ), {, return]
[{, this, ., startIndex, =, startIndex, ;, this, ., offsets, =, offsets, ;, }, int, length, (, ), {, return]
[=, startIndex, ;, this, ., offsets, =, offsets, ;, }, int, length, (, ), {, return, offsets, ., length, +]
[int, length, (, ), {, return, offsets, ., length, +, 1, ;, }, int, valueAtColumn, (, int, column, ), {]
[int, length, (, ), {, return, offsets, ., length, +, 1, ;, }, int, valueAtColumn, (, int, column, ), {]
[{, return, offsets, ., length, +, 1, ;, }, int, valueAtColumn, (, int, column, ), {, Preconditions, ., checkArgument, (]
[{, return, offsets, ., length, +, 1, ;, }, int, valueAtColumn, (, int, column, ), {, Preconditions, ., checkArgument, (]
[offsets, ., length, +, 1, ;, }, int, valueAtColumn, (, int, column, ), {, Preconditions, ., checkArgument, (, column, >]
[}, int, valueAtColumn, (, int, column, ), {, Preconditions, ., checkArgument, (, column, >, 0, ), ;, int, pos, =]
[{, Preconditions, ., checkArgument, (, column, >, 0, ), ;, int, pos, =, startIndex, ;, for, (, int, i, =]
[., checkArgument, (, column, >, 0, ), ;, int, pos, =, startIndex, ;, for, (, int, i, =, 0, ;]
[., checkArgument, (, column, >, 0, ), ;, int, pos, =, startIndex, ;, for, (, int, i, =, 0, ;]
[(, column, >, 0, ), ;, int, pos, =, startIndex, ;, for, (, int, i, =, 0, ;, i, <]
[(, column, >, 0, ), ;, int, pos, =, startIndex, ;, for, (, int, i, =, 0, ;, i, <]
[>, 0, ), ;, int, pos, =, startIndex, ;, for, (, int, i, =, 0, ;, i, <, column, -]
[), ;, int, pos, =, startIndex, ;, for, (, int, i, =, 0, ;, i, <, column, -, 1, ;]
[), ;, int, pos, =, startIndex, ;, for, (, int, i, =, 0, ;, i, <, column, -, 1, ;]
[=, startIndex, ;, for, (, int, i, =, 0, ;, i, <, column, -, 1, ;, i, ++, ), {]
[;, for, (, int, i, =, 0, ;, i, <, column, -, 1, ;, i, ++, ), {, pos, +=]
[;, for, (, int, i, =, 0, ;, i, <, column, -, 1, ;, i, ++, ), {, pos, +=]
[(, int, i, =, 0, ;, i, <, column, -, 1, ;, i, ++, ), {, pos, +=, offsets, []
[;, i, <, column, -, 1, ;, i, ++, ), {, pos, +=, offsets, [, i, ], ;, }, return]
[,, int, startMapId, ,, byte, [, ], lineOffsets, ,, short, [, ], columns, ,, String, [, ], identifiers, ), {]
[,, int, startMapId, ,, byte, [, ], lineOffsets, ,, short, [, ], columns, ,, String, [, ], identifiers, ), {]
[byte, [, ], lineOffsets, ,, short, [, ], columns, ,, String, [, ], identifiers, ), {, this, ., fileName, =]
[byte, [, ], lineOffsets, ,, short, [, ], columns, ,, String, [, ], identifiers, ), {, this, ., fileName, =]
[,, short, [, ], columns, ,, String, [, ], identifiers, ), {, this, ., fileName, =, Preconditions, ., checkNotNull, (]
[], columns, ,, String, [, ], identifiers, ), {, this, ., fileName, =, Preconditions, ., checkNotNull, (, fileName, ), ;]
[], columns, ,, String, [, ], identifiers, ), {, this, ., fileName, =, Preconditions, ., checkNotNull, (, fileName, ), ;]
[[, ], identifiers, ), {, this, ., fileName, =, Preconditions, ., checkNotNull, (, fileName, ), ;, this, ., dir, =]
[[, ], identifiers, ), {, this, ., fileName, =, Preconditions, ., checkNotNull, (, fileName, ), ;, this, ., dir, =]
[{, this, ., fileName, =, Preconditions, ., checkNotNull, (, fileName, ), ;, this, ., dir, =, Preconditions, ., checkNotNull, (]
[fileName, =, Preconditions, ., checkNotNull, (, fileName, ), ;, this, ., dir, =, Preconditions, ., checkNotNull, (, dir, ), ;]
[fileName, =, Preconditions, ., checkNotNull, (, fileName, ), ;, this, ., dir, =, Preconditions, ., checkNotNull, (, dir, ), ;]
[checkNotNull, (, fileName, ), ;, this, ., dir, =, Preconditions, ., checkNotNull, (, dir, ), ;, this, ., startLine, =]
[fileName, ), ;, this, ., dir, =, Preconditions, ., checkNotNull, (, dir, ), ;, this, ., startLine, =, startLine, ;]
[fileName, ), ;, this, ., dir, =, Preconditions, ., checkNotNull, (, dir, ), ;, this, ., startLine, =, startLine, ;]
[., dir, =, Preconditions, ., checkNotNull, (, dir, ), ;, this, ., startLine, =, startLine, ;, this, ., startMapId, =]
[=, Preconditions, ., checkNotNull, (, dir, ), ;, this, ., startLine, =, startLine, ;, this, ., startMapId, =, startMapId, ;]
[=, Preconditions, ., checkNotNull, (, dir, ), ;, this, ., startLine, =, startLine, ;, this, ., startMapId, =, startMapId, ;]
[(, dir, ), ;, this, ., startLine, =, startLine, ;, this, ., startMapId, =, startMapId, ;, this, ., lineOffsets, =]
[(, dir, ), ;, this, ., startLine, =, startLine, ;, this, ., startMapId, =, startMapId, ;, this, ., lineOffsets, =]
[this, ., startLine, =, startLine, ;, this, ., startMapId, =, startMapId, ;, this, ., lineOffsets, =, Preconditions, ., checkNotNull, (]
[=, startLine, ;, this, ., startMapId, =, startMapId, ;, this, ., lineOffsets, =, Preconditions, ., checkNotNull, (, lineOffsets, ), ;]
[=, startLine, ;, this, ., startMapId, =, startMapId, ;, this, ., lineOffsets, =, Preconditions, ., checkNotNull, (, lineOffsets, ), ;]
[., startMapId, =, startMapId, ;, this, ., lineOffsets, =, Preconditions, ., checkNotNull, (, lineOffsets, ), ;, this, ., columns, =]
[., startMapId, =, startMapId, ;, this, ., lineOffsets, =, Preconditions, ., checkNotNull, (, lineOffsets, ), ;, this, ., columns, =]
[;, this, ., lineOffsets, =, Preconditions, ., checkNotNull, (, lineOffsets, ), ;, this, ., columns, =, Preconditions, ., checkNotNull, (]
[lineOffsets, =, Preconditions, ., checkNotNull, (, lineOffsets, ), ;, this, ., columns, =, Preconditions, ., checkNotNull, (, columns, ), ;]
[lineOffsets, =, Preconditions, ., checkNotNull, (, lineOffsets, ), ;, this, ., columns, =, Preconditions, ., checkNotNull, (, columns, ), ;]
[checkNotNull, (, lineOffsets, ), ;, this, ., columns, =, Preconditions, ., checkNotNull, (, columns, ), ;, this, ., identifiers, =]
[checkNotNull, (, lineOffsets, ), ;, this, ., columns, =, Preconditions, ., checkNotNull, (, columns, ), ;, this, ., identifiers, =]
[;, this, ., columns, =, Preconditions, ., checkNotNull, (, columns, ), ;, this, ., identifiers, =, Preconditions, ., checkNotNull, (]
[columns, =, Preconditions, ., checkNotNull, (, columns, ), ;, this, ., identifiers, =, Preconditions, ., checkNotNull, (, identifiers, ), ;]
[columns, =, Preconditions, ., checkNotNull, (, columns, ), ;, this, ., identifiers, =, Preconditions, ., checkNotNull, (, identifiers, ), ;]
[checkNotNull, (, columns, ), ;, this, ., identifiers, =, Preconditions, ., checkNotNull, (, identifiers, ), ;, Preconditions, ., checkArgument, (]
[checkNotNull, (, columns, ), ;, this, ., identifiers, =, Preconditions, ., checkNotNull, (, identifiers, ), ;, Preconditions, ., checkArgument, (]
[checkNotNull, (, columns, ), ;, this, ., identifiers, =, Preconditions, ., checkNotNull, (, identifiers, ), ;, Preconditions, ., checkArgument, (]
[checkNotNull, (, columns, ), ;, this, ., identifiers, =, Preconditions, ., checkNotNull, (, identifiers, ), ;, Preconditions, ., checkArgument, (]
[;, this, ., identifiers, =, Preconditions, ., checkNotNull, (, identifiers, ), ;, Preconditions, ., checkArgument, (, lineOffsets, ., length, ==]
[;, this, ., identifiers, =, Preconditions, ., checkNotNull, (, identifiers, ), ;, Preconditions, ., checkArgument, (, lineOffsets, ., length, ==]
[=, Preconditions, ., checkNotNull, (, identifiers, ), ;, Preconditions, ., checkArgument, (, lineOffsets, ., length, ==, columns, ., length, &&]
[=, Preconditions, ., checkNotNull, (, identifiers, ), ;, Preconditions, ., checkArgument, (, lineOffsets, ., length, ==, columns, ., length, &&]
[=, Preconditions, ., checkNotNull, (, identifiers, ), ;, Preconditions, ., checkArgument, (, lineOffsets, ., length, ==, columns, ., length, &&]
[(, identifiers, ), ;, Preconditions, ., checkArgument, (, lineOffsets, ., length, ==, columns, ., length, &&, columns, ., length, ==]
[(, identifiers, ), ;, Preconditions, ., checkArgument, (, lineOffsets, ., length, ==, columns, ., length, &&, columns, ., length, ==]
[., length, &&, columns, ., length, ==, identifiers, ., length, ), ;, }, private, SourceFile, (, int, startMapId, ), {]
[., length, &&, columns, ., length, ==, identifiers, ., length, ), ;, }, private, SourceFile, (, int, startMapId, ), {]
[., length, ==, identifiers, ., length, ), ;, }, private, SourceFile, (, int, startMapId, ), {, this, ., startMapId, =]
[==, identifiers, ., length, ), ;, }, private, SourceFile, (, int, startMapId, ), {, this, ., startMapId, =, startMapId, ;]
[==, identifiers, ., length, ), ;, }, private, SourceFile, (, int, startMapId, ), {, this, ., startMapId, =, startMapId, ;]
[), ;, }, private, SourceFile, (, int, startMapId, ), {, this, ., startMapId, =, startMapId, ;, this, ., fileName, =]
[}, private, SourceFile, (, int, startMapId, ), {, this, ., startMapId, =, startMapId, ;, this, ., fileName, =, null, ;]
[}, private, SourceFile, (, int, startMapId, ), {, this, ., startMapId, =, startMapId, ;, this, ., fileName, =, null, ;]
[int, startMapId, ), {, this, ., startMapId, =, startMapId, ;, this, ., fileName, =, null, ;, this, ., dir, =]
[), {, this, ., startMapId, =, startMapId, ;, this, ., fileName, =, null, ;, this, ., dir, =, null, ;]
[), {, this, ., startMapId, =, startMapId, ;, this, ., fileName, =, null, ;, this, ., dir, =, null, ;]
[startMapId, =, startMapId, ;, this, ., fileName, =, null, ;, this, ., dir, =, null, ;, this, ., startLine, =]
[startMapId, ;, this, ., fileName, =, null, ;, this, ., dir, =, null, ;, this, ., startLine, =, 0, ;]
[startMapId, ;, this, ., fileName, =, null, ;, this, ., dir, =, null, ;, this, ., startLine, =, 0, ;]
[fileName, =, null, ;, this, ., dir, =, null, ;, this, ., startLine, =, 0, ;, this, ., lineOffsets, =]
[null, ;, this, ., dir, =, null, ;, this, ., startLine, =, 0, ;, this, ., lineOffsets, =, null, ;]
[null, ;, this, ., dir, =, null, ;, this, ., startLine, =, 0, ;, this, ., lineOffsets, =, null, ;]
[dir, =, null, ;, this, ., startLine, =, 0, ;, this, ., lineOffsets, =, null, ;, this, ., columns, =]
[null, ;, this, ., startLine, =, 0, ;, this, ., lineOffsets, =, null, ;, this, ., columns, =, null, ;]
[null, ;, this, ., startLine, =, 0, ;, this, ., lineOffsets, =, null, ;, this, ., columns, =, null, ;]
[startLine, =, 0, ;, this, ., lineOffsets, =, null, ;, this, ., columns, =, null, ;, this, ., identifiers, =]
[;, this, ., columns, =, null, ;, this, ., identifiers, =, null, ;, }, int, getLength, (, ), {, return]
[;, this, ., columns, =, null, ;, this, ., identifiers, =, null, ;, }, int, getLength, (, ), {, return]
[null, ;, }, int, getLength, (, ), {, return, lineOffsets, ., length, ;, }, int, getStartMapId, (, ), {, return]
[}, int, getStartMapId, (, ), {, return, startMapId, ;, }, OriginalMapping, getOriginalMapping, (, int, offset, ), {, int, lineNumber, =]
[}, int, getStartMapId, (, ), {, return, startMapId, ;, }, OriginalMapping, getOriginalMapping, (, int, offset, ), {, int, lineNumber, =]
[}, OriginalMapping, getOriginalMapping, (, int, offset, ), {, int, lineNumber, =, this, ., startLine, ;, for, (, int, i, =]
[getOriginalMapping, (, int, offset, ), {, int, lineNumber, =, this, ., startLine, ;, for, (, int, i, =, 0, ;]
[getOriginalMapping, (, int, offset, ), {, int, lineNumber, =, this, ., startLine, ;, for, (, int, i, =, 0, ;]
[int, offset, ), {, int, lineNumber, =, this, ., startLine, ;, for, (, int, i, =, 0, ;, i, <=]
[), {, int, lineNumber, =, this, ., startLine, ;, for, (, int, i, =, 0, ;, i, <=, offset, ;]
[), {, int, lineNumber, =, this, ., startLine, ;, for, (, int, i, =, 0, ;, i, <=, offset, ;]
[=, this, ., startLine, ;, for, (, int, i, =, 0, ;, i, <=, offset, ;, i, ++, ), {]
[., startLine, ;, for, (, int, i, =, 0, ;, i, <=, offset, ;, i, ++, ), {, lineNumber, +=]
[., startLine, ;, for, (, int, i, =, 0, ;, i, <=, offset, ;, i, ++, ), {, lineNumber, +=]
[;, for, (, int, i, =, 0, ;, i, <=, offset, ;, i, ++, ), {, lineNumber, +=, lineOffsets, []
[<=, offset, ;, i, ++, ), {, lineNumber, +=, lineOffsets, [, i, ], ;, }, OriginalMapping, ., Builder, builder, =]
[<=, offset, ;, i, ++, ), {, lineNumber, +=, lineOffsets, [, i, ], ;, }, OriginalMapping, ., Builder, builder, =]
[<=, offset, ;, i, ++, ), {, lineNumber, +=, lineOffsets, [, i, ], ;, }, OriginalMapping, ., Builder, builder, =]
[<=, offset, ;, i, ++, ), {, lineNumber, +=, lineOffsets, [, i, ], ;, }, OriginalMapping, ., Builder, builder, =]
[<=, offset, ;, i, ++, ), {, lineNumber, +=, lineOffsets, [, i, ], ;, }, OriginalMapping, ., Builder, builder, =]
[<=, offset, ;, i, ++, ), {, lineNumber, +=, lineOffsets, [, i, ], ;, }, OriginalMapping, ., Builder, builder, =]
[+=, lineOffsets, [, i, ], ;, }, OriginalMapping, ., Builder, builder, =, OriginalMapping, ., newBuilder, (, ), ., setOriginalFile, (]
[+=, lineOffsets, [, i, ], ;, }, OriginalMapping, ., Builder, builder, =, OriginalMapping, ., newBuilder, (, ), ., setOriginalFile, (]
[[, i, ], ;, }, OriginalMapping, ., Builder, builder, =, OriginalMapping, ., newBuilder, (, ), ., setOriginalFile, (, dir, +]
[OriginalMapping, ., Builder, builder, =, OriginalMapping, ., newBuilder, (, ), ., setOriginalFile, (, dir, +, fileName, ), ., setLineNumber, (]
[OriginalMapping, ., newBuilder, (, ), ., setOriginalFile, (, dir, +, fileName, ), ., setLineNumber, (, lineNumber, ), ., setColumnPosition, (]
[OriginalMapping, ., newBuilder, (, ), ., setOriginalFile, (, dir, +, fileName, ), ., setLineNumber, (, lineNumber, ), ., setColumnPosition, (]
[newBuilder, (, ), ., setOriginalFile, (, dir, +, fileName, ), ., setLineNumber, (, lineNumber, ), ., setColumnPosition, (, columns, []
[dir, +, fileName, ), ., setLineNumber, (, lineNumber, ), ., setColumnPosition, (, columns, [, offset, ], ), ., setIdentifier, (]
[dir, +, fileName, ), ., setLineNumber, (, lineNumber, ), ., setColumnPosition, (, columns, [, offset, ], ), ., setIdentifier, (]
[fileName, ), ., setLineNumber, (, lineNumber, ), ., setColumnPosition, (, columns, [, offset, ], ), ., setIdentifier, (, identifiers, []
[lineNumber, ), ., setColumnPosition, (, columns, [, offset, ], ), ., setIdentifier, (, identifiers, [, offset, ], ), ;, return]
[lineNumber, ), ., setColumnPosition, (, columns, [, offset, ], ), ., setIdentifier, (, identifiers, [, offset, ], ), ;, return]
[], lineOffsets, ;, short, [, ], columns, ;, String, [, ], identifiers, ;, Builder, setDir, (, String, dir, ), {]
[], lineOffsets, ;, short, [, ], columns, ;, String, [, ], identifiers, ;, Builder, setDir, (, String, dir, ), {]
[[, ], columns, ;, String, [, ], identifiers, ;, Builder, setDir, (, String, dir, ), {, this, ., dir, =]
[;, String, [, ], identifiers, ;, Builder, setDir, (, String, dir, ), {, this, ., dir, =, dir, ;, return]
[dir, ), {, this, ., dir, =, dir, ;, return, this, ;, }, Builder, setFileName, (, String, fileName, ), {]
[dir, ), {, this, ., dir, =, dir, ;, return, this, ;, }, Builder, setFileName, (, String, fileName, ), {]
[., dir, =, dir, ;, return, this, ;, }, Builder, setFileName, (, String, fileName, ), {, this, ., fileName, =]
[dir, ;, return, this, ;, }, Builder, setFileName, (, String, fileName, ), {, this, ., fileName, =, fileName, ;, return]
[fileName, ), {, this, ., fileName, =, fileName, ;, return, this, ;, }, Builder, setStartMapId, (, int, startMapId, ), {]
[fileName, ), {, this, ., fileName, =, fileName, ;, return, this, ;, }, Builder, setStartMapId, (, int, startMapId, ), {]
[., fileName, =, fileName, ;, return, this, ;, }, Builder, setStartMapId, (, int, startMapId, ), {, this, ., startMapId, =]
[fileName, ;, return, this, ;, }, Builder, setStartMapId, (, int, startMapId, ), {, this, ., startMapId, =, startMapId, ;, return]
[startMapId, ), {, this, ., startMapId, =, startMapId, ;, return, this, ;, }, Builder, setStartLine, (, int, startLine, ), {]
[startMapId, ), {, this, ., startMapId, =, startMapId, ;, return, this, ;, }, Builder, setStartLine, (, int, startLine, ), {]
[., startMapId, =, startMapId, ;, return, this, ;, }, Builder, setStartLine, (, int, startLine, ), {, this, ., startLine, =]
[startMapId, ;, return, this, ;, }, Builder, setStartLine, (, int, startLine, ), {, this, ., startLine, =, startLine, ;, return]
[this, ., startLine, =, startLine, ;, return, this, ;, }, Builder, setLineOffsets, (, List, <, Byte, >, lineOffsets, ), {]
[this, ., startLine, =, startLine, ;, return, this, ;, }, Builder, setLineOffsets, (, List, <, Byte, >, lineOffsets, ), {]
[startLine, ;, return, this, ;, }, Builder, setLineOffsets, (, List, <, Byte, >, lineOffsets, ), {, this, ., lineOffsets, =]
[startLine, ;, return, this, ;, }, Builder, setLineOffsets, (, List, <, Byte, >, lineOffsets, ), {, this, ., lineOffsets, =]
[;, }, Builder, setLineOffsets, (, List, <, Byte, >, lineOffsets, ), {, this, ., lineOffsets, =, Bytes, ., toArray, (]
[(, List, <, Byte, >, lineOffsets, ), {, this, ., lineOffsets, =, Bytes, ., toArray, (, lineOffsets, ), ;, return]
[., toArray, (, lineOffsets, ), ;, return, this, ;, }, Builder, setColumns, (, List, <, Short, >, columns, ), {]
[., toArray, (, lineOffsets, ), ;, return, this, ;, }, Builder, setColumns, (, List, <, Short, >, columns, ), {]
[), ;, return, this, ;, }, Builder, setColumns, (, List, <, Short, >, columns, ), {, this, ., columns, =]
[), ;, return, this, ;, }, Builder, setColumns, (, List, <, Short, >, columns, ), {, this, ., columns, =]
[;, }, Builder, setColumns, (, List, <, Short, >, columns, ), {, this, ., columns, =, Shorts, ., toArray, (]
[(, List, <, Short, >, columns, ), {, this, ., columns, =, Shorts, ., toArray, (, columns, ), ;, return]
[., toArray, (, columns, ), ;, return, this, ;, }, Builder, setIdentifiers, (, List, <, String, >, identifiers, ), {]
[., toArray, (, columns, ), ;, return, this, ;, }, Builder, setIdentifiers, (, List, <, String, >, identifiers, ), {]
[), ;, return, this, ;, }, Builder, setIdentifiers, (, List, <, String, >, identifiers, ), {, this, ., identifiers, =]
[), ;, return, this, ;, }, Builder, setIdentifiers, (, List, <, String, >, identifiers, ), {, this, ., identifiers, =]
[;, }, Builder, setIdentifiers, (, List, <, String, >, identifiers, ), {, this, ., identifiers, =, identifiers, ., toArray, (]
[setIdentifiers, (, List, <, String, >, identifiers, ), {, this, ., identifiers, =, identifiers, ., toArray, (, new, String, []
[>, identifiers, ), {, this, ., identifiers, =, identifiers, ., toArray, (, new, String, [, 0, ], ), ;, return]
[., toArray, (, new, String, [, 0, ], ), ;, return, this, ;, }, SourceFile, build, (, ), {, return]
[new, String, [, 0, ], ), ;, return, this, ;, }, SourceFile, build, (, ), {, return, new, SourceFile, (]
[[, 0, ], ), ;, return, this, ;, }, SourceFile, build, (, ), {, return, new, SourceFile, (, dir, ,]
[], ), ;, return, this, ;, }, SourceFile, build, (, ), {, return, new, SourceFile, (, dir, ,, fileName, ,]
[;, return, this, ;, }, SourceFile, build, (, ), {, return, new, SourceFile, (, dir, ,, fileName, ,, startLine, ,]
[this, ;, }, SourceFile, build, (, ), {, return, new, SourceFile, (, dir, ,, fileName, ,, startLine, ,, startMapId, ,]
[}, SourceFile, build, (, ), {, return, new, SourceFile, (, dir, ,, fileName, ,, startLine, ,, startMapId, ,, lineOffsets, ,]
[build, (, ), {, return, new, SourceFile, (, dir, ,, fileName, ,, startLine, ,, startMapId, ,, lineOffsets, ,, columns, ,]
[startLine, ,, startMapId, ,, lineOffsets, ,, columns, ,, identifiers, ), ;, }, }, static, Builder, newBuilder, (, ), {, return]
