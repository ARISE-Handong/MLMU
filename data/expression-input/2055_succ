[;, private, HashSet, xPoints, =, null, ;, private, boolean, propagateEvents, =, true, ;, private, boolean, autoPrune, =, false, ;, private]
[;, private, boolean, propagateEvents, =, true, ;, private, boolean, autoPrune, =, false, ;, private, IntervalXYDelegate, intervalDelegate, ;, public, DefaultTableXYDataset, (]
[;, private, boolean, autoPrune, =, false, ;, private, IntervalXYDelegate, intervalDelegate, ;, public, DefaultTableXYDataset, (, ), {, this, (, false, )]
[;, private, IntervalXYDelegate, intervalDelegate, ;, public, DefaultTableXYDataset, (, ), {, this, (, false, ), ;, }, public, DefaultTableXYDataset, (, boolean]
[), ;, }, public, DefaultTableXYDataset, (, boolean, autoPrune, ), {, this, ., autoPrune, =, autoPrune, ;, this, ., data, =]
[=, autoPrune, ;, this, ., data, =, new, ArrayList, (, ), ;, this, ., xPoints, =, new, HashSet, (, )]
[., autoPrune, =, autoPrune, ;, this, ., data, =, new, ArrayList, (, ), ;, this, ., xPoints, =, new, HashSet]
[;, this, ., data, =, new, ArrayList, (, ), ;, this, ., xPoints, =, new, HashSet, (, ), ;, this]
[=, new, ArrayList, (, ), ;, this, ., xPoints, =, new, HashSet, (, ), ;, this, ., intervalDelegate, =, new]
[., data, =, new, ArrayList, (, ), ;, this, ., xPoints, =, new, HashSet, (, ), ;, this, ., intervalDelegate]
[;, this, ., xPoints, =, new, HashSet, (, ), ;, this, ., intervalDelegate, =, new, IntervalXYDelegate, (, this, ,, false]
[=, new, HashSet, (, ), ;, this, ., intervalDelegate, =, new, IntervalXYDelegate, (, this, ,, false, ), ;, addChangeListener, (]
[., xPoints, =, new, HashSet, (, ), ;, this, ., intervalDelegate, =, new, IntervalXYDelegate, (, this, ,, false, ), ;]
[;, this, ., intervalDelegate, =, new, IntervalXYDelegate, (, this, ,, false, ), ;, addChangeListener, (, this, ., intervalDelegate, ), ;]
[=, new, IntervalXYDelegate, (, this, ,, false, ), ;, addChangeListener, (, this, ., intervalDelegate, ), ;, }, public, boolean, isAutoPrune]
[., intervalDelegate, =, new, IntervalXYDelegate, (, this, ,, false, ), ;, addChangeListener, (, this, ., intervalDelegate, ), ;, }, public]
[;, addChangeListener, (, this, ., intervalDelegate, ), ;, }, public, boolean, isAutoPrune, (, ), {, return, this, ., autoPrune, ;]
[,, false, ), ;, addChangeListener, (, this, ., intervalDelegate, ), ;, }, public, boolean, isAutoPrune, (, ), {, return, this]
[), ;, addChangeListener, (, this, ., intervalDelegate, ), ;, }, public, boolean, isAutoPrune, (, ), {, return, this, ., autoPrune]
[;, }, public, boolean, isAutoPrune, (, ), {, return, this, ., autoPrune, ;, }, public, void, addSeries, (, XYSeries, series]
[), ;, }, public, boolean, isAutoPrune, (, ), {, return, this, ., autoPrune, ;, }, public, void, addSeries, (, XYSeries]
[., intervalDelegate, ), ;, }, public, boolean, isAutoPrune, (, ), {, return, this, ., autoPrune, ;, }, public, void, addSeries]
[;, }, public, void, addSeries, (, XYSeries, series, ), {, if, (, series, ==, null, ), {, throw, new, IllegalArgumentException]
[., autoPrune, ;, }, public, void, addSeries, (, XYSeries, series, ), {, if, (, series, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'series' argument.", ), ;, }, if, (, series, ., getAllowDuplicateXValues, (, ), ), {, throw]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'series' argument.", ), ;, }, if, (, series, ., getAllowDuplicateXValues, (, ), )]
[), {, throw, new, IllegalArgumentException, (, "Null 'series' argument.", ), ;, }, if, (, series, ., getAllowDuplicateXValues, (, ), ), {, throw]
[;, }, if, (, series, ., getAllowDuplicateXValues, (, ), ), {, throw, new, IllegalArgumentException, (, "Cannot accept XYSeries that allow duplicate values. ", +, "Use XYSeries(seriesName, <sort>, false) constructor.", ), ;]
[), ;, }, if, (, series, ., getAllowDuplicateXValues, (, ), ), {, throw, new, IllegalArgumentException, (, "Cannot accept XYSeries that allow duplicate values. ", +, "Use XYSeries(seriesName, <sort>, false) constructor.", )]
[), {, throw, new, IllegalArgumentException, (, "Cannot accept XYSeries that allow duplicate values. ", +, "Use XYSeries(seriesName, <sort>, false) constructor.", ), ;, }, updateXPoints, (, series, ), ;, this, ., data]
[., getAllowDuplicateXValues, (, ), ), {, throw, new, IllegalArgumentException, (, "Cannot accept XYSeries that allow duplicate values. ", +, "Use XYSeries(seriesName, <sort>, false) constructor.", ), ;, }, updateXPoints, (, series, )]
[;, }, updateXPoints, (, series, ), ;, this, ., data, ., add, (, series, ), ;, series, ., addChangeListener, (]
[), ;, }, updateXPoints, (, series, ), ;, this, ., data, ., add, (, series, ), ;, series, ., addChangeListener]
[+, "Use XYSeries(seriesName, <sort>, false) constructor.", ), ;, }, updateXPoints, (, series, ), ;, this, ., data, ., add, (, series, ), ;, series]
[), ;, }, updateXPoints, (, series, ), ;, this, ., data, ., add, (, series, ), ;, series, ., addChangeListener]
[;, this, ., data, ., add, (, series, ), ;, series, ., addChangeListener, (, this, ), ;, fireDatasetChanged, (, new]
[), ;, this, ., data, ., add, (, series, ), ;, series, ., addChangeListener, (, this, ), ;, fireDatasetChanged, (]
[;, series, ., addChangeListener, (, this, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, private, void, updateXPoints]
[., add, (, series, ), ;, series, ., addChangeListener, (, this, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), )]
[., data, ., add, (, series, ), ;, series, ., addChangeListener, (, this, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (]
[), ;, series, ., addChangeListener, (, this, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, private, void]
[;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, private, void, updateXPoints, (, XYSeries, series, ), {, if, (]
[., addChangeListener, (, this, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, private, void, updateXPoints, (, XYSeries]
[), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, private, void, updateXPoints, (, XYSeries, series, ), {, if]
[;, }, private, void, updateXPoints, (, XYSeries, series, ), {, if, (, series, ==, null, ), {, throw, new, IllegalArgumentException]
[), ;, }, private, void, updateXPoints, (, XYSeries, series, ), {, if, (, series, ==, null, ), {, throw, new]
[), {, throw, new, IllegalArgumentException, (, "Null 'series' not permitted.", ), ;, }, HashSet, seriesXPoints, =, new, HashSet, (, ), ;, boolean, savedState]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'series' not permitted.", ), ;, }, HashSet, seriesXPoints, =, new, HashSet, (, ), ;]
[), {, throw, new, IllegalArgumentException, (, "Null 'series' not permitted.", ), ;, }, HashSet, seriesXPoints, =, new, HashSet, (, ), ;, boolean, savedState]
[;, }, HashSet, seriesXPoints, =, new, HashSet, (, ), ;, boolean, savedState, =, this, ., propagateEvents, ;, this, ., propagateEvents]
[), ;, }, HashSet, seriesXPoints, =, new, HashSet, (, ), ;, boolean, savedState, =, this, ., propagateEvents, ;, this, .]
[;, boolean, savedState, =, this, ., propagateEvents, ;, this, ., propagateEvents, =, false, ;, for, (, int, itemNo, =, 0]
[;, this, ., propagateEvents, =, false, ;, for, (, int, itemNo, =, 0, ;, itemNo, <, series, ., getItemCount, (]
[., propagateEvents, ;, this, ., propagateEvents, =, false, ;, for, (, int, itemNo, =, 0, ;, itemNo, <, series, .]
[=, false, ;, for, (, int, itemNo, =, 0, ;, itemNo, <, series, ., getItemCount, (, ), ;, itemNo, ++]
[., propagateEvents, =, false, ;, for, (, int, itemNo, =, 0, ;, itemNo, <, series, ., getItemCount, (, ), ;]
[;, for, (, int, itemNo, =, 0, ;, itemNo, <, series, ., getItemCount, (, ), ;, itemNo, ++, ), {]
[;, itemNo, <, series, ., getItemCount, (, ), ;, itemNo, ++, ), {, Number, xValue, =, series, ., getX, (]
[;, itemNo, ++, ), {, Number, xValue, =, series, ., getX, (, itemNo, ), ;, seriesXPoints, ., add, (, xValue]
[<, series, ., getItemCount, (, ), ;, itemNo, ++, ), {, Number, xValue, =, series, ., getX, (, itemNo, )]
[;, itemNo, ++, ), {, Number, xValue, =, series, ., getX, (, itemNo, ), ;, seriesXPoints, ., add, (, xValue]
[., getItemCount, (, ), ;, itemNo, ++, ), {, Number, xValue, =, series, ., getX, (, itemNo, ), ;, seriesXPoints]
[), {, Number, xValue, =, series, ., getX, (, itemNo, ), ;, seriesXPoints, ., add, (, xValue, ), ;, if]
[++, ), {, Number, xValue, =, series, ., getX, (, itemNo, ), ;, seriesXPoints, ., add, (, xValue, ), ;]
[;, seriesXPoints, ., add, (, xValue, ), ;, if, (, !, this, ., xPoints, ., contains, (, xValue, ), )]
[., getX, (, itemNo, ), ;, seriesXPoints, ., add, (, xValue, ), ;, if, (, !, this, ., xPoints, .]
[), ;, seriesXPoints, ., add, (, xValue, ), ;, if, (, !, this, ., xPoints, ., contains, (, xValue, )]
[;, if, (, !, this, ., xPoints, ., contains, (, xValue, ), ), {, this, ., xPoints, ., add, (]
[., add, (, xValue, ), ;, if, (, !, this, ., xPoints, ., contains, (, xValue, ), ), {, this]
[), ;, if, (, !, this, ., xPoints, ., contains, (, xValue, ), ), {, this, ., xPoints, ., add]
[), {, this, ., xPoints, ., add, (, xValue, ), ;, int, seriesCount, =, this, ., data, ., size, (]
[), {, this, ., xPoints, ., add, (, xValue, ), ;, int, seriesCount, =, this, ., data, ., size, (]
[., contains, (, xValue, ), ), {, this, ., xPoints, ., add, (, xValue, ), ;, int, seriesCount, =, this]
[., xPoints, ., contains, (, xValue, ), ), {, this, ., xPoints, ., add, (, xValue, ), ;, int, seriesCount]
[), ), {, this, ., xPoints, ., add, (, xValue, ), ;, int, seriesCount, =, this, ., data, ., size]
[;, int, seriesCount, =, this, ., data, ., size, (, ), ;, for, (, int, seriesNo, =, 0, ;, seriesNo]
[., add, (, xValue, ), ;, int, seriesCount, =, this, ., data, ., size, (, ), ;, for, (, int]
[., xPoints, ., add, (, xValue, ), ;, int, seriesCount, =, this, ., data, ., size, (, ), ;, for]
[), ;, int, seriesCount, =, this, ., data, ., size, (, ), ;, for, (, int, seriesNo, =, 0, ;]
[;, for, (, int, seriesNo, =, 0, ;, seriesNo, <, seriesCount, ;, seriesNo, ++, ), {, XYSeries, dataSeries, =, (]
[., size, (, ), ;, for, (, int, seriesNo, =, 0, ;, seriesNo, <, seriesCount, ;, seriesNo, ++, ), {]
[., data, ., size, (, ), ;, for, (, int, seriesNo, =, 0, ;, seriesNo, <, seriesCount, ;, seriesNo, ++]
[;, seriesNo, <, seriesCount, ;, seriesNo, ++, ), {, XYSeries, dataSeries, =, (, XYSeries, ), this, ., data, ., get]
[;, seriesNo, ++, ), {, XYSeries, dataSeries, =, (, XYSeries, ), this, ., data, ., get, (, seriesNo, ), ;]
[<, seriesCount, ;, seriesNo, ++, ), {, XYSeries, dataSeries, =, (, XYSeries, ), this, ., data, ., get, (, seriesNo]
[;, seriesNo, ++, ), {, XYSeries, dataSeries, =, (, XYSeries, ), this, ., data, ., get, (, seriesNo, ), ;]
[), {, XYSeries, dataSeries, =, (, XYSeries, ), this, ., data, ., get, (, seriesNo, ), ;, if, (, !]
[++, ), {, XYSeries, dataSeries, =, (, XYSeries, ), this, ., data, ., get, (, seriesNo, ), ;, if, (]
[;, if, (, !, dataSeries, ., equals, (, series, ), ), {, dataSeries, ., add, (, xValue, ,, null, )]
[;, if, (, !, dataSeries, ., equals, (, series, ), ), {, dataSeries, ., add, (, xValue, ,, null, )]
[., get, (, seriesNo, ), ;, if, (, !, dataSeries, ., equals, (, series, ), ), {, dataSeries, ., add]
[., data, ., get, (, seriesNo, ), ;, if, (, !, dataSeries, ., equals, (, series, ), ), {, dataSeries]
[), ;, if, (, !, dataSeries, ., equals, (, series, ), ), {, dataSeries, ., add, (, xValue, ,, null]
[), {, dataSeries, ., add, (, xValue, ,, null, ), ;, }, }, }, }, Iterator, iterator, =, this, .]
[), {, dataSeries, ., add, (, xValue, ,, null, ), ;, }, }, }, }, Iterator, iterator, =, this, .]
[., equals, (, series, ), ), {, dataSeries, ., add, (, xValue, ,, null, ), ;, }, }, }, }]
[), ), {, dataSeries, ., add, (, xValue, ,, null, ), ;, }, }, }, }, Iterator, iterator, =, this]
[;, }, }, }, }, Iterator, iterator, =, this, ., xPoints, ., iterator, (, ), ;, while, (, iterator, .]
[., add, (, xValue, ,, null, ), ;, }, }, }, }, Iterator, iterator, =, this, ., xPoints, ., iterator]
[,, null, ), ;, }, }, }, }, Iterator, iterator, =, this, ., xPoints, ., iterator, (, ), ;, while]
[), ;, }, }, }, }, Iterator, iterator, =, this, ., xPoints, ., iterator, (, ), ;, while, (, iterator]
[;, while, (, iterator, ., hasNext, (, ), ), {, Number, xPoint, =, (, Number, ), iterator, ., next, (]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, Number, xPoint, =, (, Number, )]
[., xPoints, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, Number, xPoint, =, (]
[), {, Number, xPoint, =, (, Number, ), iterator, ., next, (, ), ;, if, (, !, seriesXPoints, ., contains]
[., hasNext, (, ), ), {, Number, xPoint, =, (, Number, ), iterator, ., next, (, ), ;, if, (]
[;, if, (, !, seriesXPoints, ., contains, (, xPoint, ), ), {, series, ., add, (, xPoint, ,, null, )]
[;, if, (, !, seriesXPoints, ., contains, (, xPoint, ), ), {, series, ., add, (, xPoint, ,, null, )]
[., next, (, ), ;, if, (, !, seriesXPoints, ., contains, (, xPoint, ), ), {, series, ., add, (]
[), {, series, ., add, (, xPoint, ,, null, ), ;, }, }, this, ., propagateEvents, =, savedState, ;, }]
[), {, series, ., add, (, xPoint, ,, null, ), ;, }, }, this, ., propagateEvents, =, savedState, ;, }]
[., contains, (, xPoint, ), ), {, series, ., add, (, xPoint, ,, null, ), ;, }, }, this, .]
[), ), {, series, ., add, (, xPoint, ,, null, ), ;, }, }, this, ., propagateEvents, =, savedState, ;]
[;, }, }, this, ., propagateEvents, =, savedState, ;, }, public, void, updateXPoints, (, ), {, this, ., propagateEvents, =]
[., add, (, xPoint, ,, null, ), ;, }, }, this, ., propagateEvents, =, savedState, ;, }, public, void, updateXPoints]
[,, null, ), ;, }, }, this, ., propagateEvents, =, savedState, ;, }, public, void, updateXPoints, (, ), {, this]
[), ;, }, }, this, ., propagateEvents, =, savedState, ;, }, public, void, updateXPoints, (, ), {, this, ., propagateEvents]
[=, savedState, ;, }, public, void, updateXPoints, (, ), {, this, ., propagateEvents, =, false, ;, for, (, int, s]
[., propagateEvents, =, savedState, ;, }, public, void, updateXPoints, (, ), {, this, ., propagateEvents, =, false, ;, for, (]
[;, }, public, void, updateXPoints, (, ), {, this, ., propagateEvents, =, false, ;, for, (, int, s, =, 0]
[=, false, ;, for, (, int, s, =, 0, ;, s, <, this, ., data, ., size, (, ), ;]
[., propagateEvents, =, false, ;, for, (, int, s, =, 0, ;, s, <, this, ., data, ., size, (]
[;, for, (, int, s, =, 0, ;, s, <, this, ., data, ., size, (, ), ;, s, ++]
[;, s, <, this, ., data, ., size, (, ), ;, s, ++, ), {, updateXPoints, (, (, XYSeries, )]
[;, s, ++, ), {, updateXPoints, (, (, XYSeries, ), this, ., data, ., get, (, s, ), ), ;]
[<, this, ., data, ., size, (, ), ;, s, ++, ), {, updateXPoints, (, (, XYSeries, ), this, .]
[;, s, ++, ), {, updateXPoints, (, (, XYSeries, ), this, ., data, ., get, (, s, ), ), ;]
[., size, (, ), ;, s, ++, ), {, updateXPoints, (, (, XYSeries, ), this, ., data, ., get, (]
[., data, ., size, (, ), ;, s, ++, ), {, updateXPoints, (, (, XYSeries, ), this, ., data, .]
[), {, updateXPoints, (, (, XYSeries, ), this, ., data, ., get, (, s, ), ), ;, }, if, (]
[++, ), {, updateXPoints, (, (, XYSeries, ), this, ., data, ., get, (, s, ), ), ;, }, if]
[;, }, if, (, this, ., autoPrune, ), {, prune, (, ), ;, }, this, ., propagateEvents, =, true, ;]
[), ;, }, if, (, this, ., autoPrune, ), {, prune, (, ), ;, }, this, ., propagateEvents, =, true]
[), ;, }, if, (, this, ., autoPrune, ), {, prune, (, ), ;, }, this, ., propagateEvents, =, true]
[., get, (, s, ), ), ;, }, if, (, this, ., autoPrune, ), {, prune, (, ), ;, }]
[., data, ., get, (, s, ), ), ;, }, if, (, this, ., autoPrune, ), {, prune, (, )]
[), ), ;, }, if, (, this, ., autoPrune, ), {, prune, (, ), ;, }, this, ., propagateEvents, =]
[), {, prune, (, ), ;, }, this, ., propagateEvents, =, true, ;, }, public, int, getSeriesCount, (, ), {]
[., autoPrune, ), {, prune, (, ), ;, }, this, ., propagateEvents, =, true, ;, }, public, int, getSeriesCount, (]
[;, }, this, ., propagateEvents, =, true, ;, }, public, int, getSeriesCount, (, ), {, return, this, ., data, .]
[=, true, ;, }, public, int, getSeriesCount, (, ), {, return, this, ., data, ., size, (, ), ;, }]
[., propagateEvents, =, true, ;, }, public, int, getSeriesCount, (, ), {, return, this, ., data, ., size, (, )]
[;, }, public, int, getSeriesCount, (, ), {, return, this, ., data, ., size, (, ), ;, }, public, int]
[;, }, public, int, getItemCount, (, ), {, if, (, this, ., xPoints, ==, null, ), {, return, 0, ;]
[., size, (, ), ;, }, public, int, getItemCount, (, ), {, if, (, this, ., xPoints, ==, null, )]
[., data, ., size, (, ), ;, }, public, int, getItemCount, (, ), {, if, (, this, ., xPoints, ==]
[), {, return, 0, ;, }, else, {, return, this, ., xPoints, ., size, (, ), ;, }, }, public]
[==, null, ), {, return, 0, ;, }, else, {, return, this, ., xPoints, ., size, (, ), ;, }]
[., xPoints, ==, null, ), {, return, 0, ;, }, else, {, return, this, ., xPoints, ., size, (, )]
[), {, return, 0, ;, }, else, {, return, this, ., xPoints, ., size, (, ), ;, }, }, public]
[;, }, else, {, return, this, ., xPoints, ., size, (, ), ;, }, }, public, XYSeries, getSeries, (, int]
[;, }, }, public, XYSeries, getSeries, (, int, series, ), {, if, (, (, series, <, 0, ), ||, (]
[., size, (, ), ;, }, }, public, XYSeries, getSeries, (, int, series, ), {, if, (, (, series, <]
[., xPoints, ., size, (, ), ;, }, }, public, XYSeries, getSeries, (, int, series, ), {, if, (, (]
[), {, throw, new, IllegalArgumentException, (, "Index outside valid range.", ), ;, }, return, (, XYSeries, ), this, ., data, ., get, (]
[||, (, series, >=, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (, "Index outside valid range.", ), ;, }, return, (]
[), ||, (, series, >=, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (, "Index outside valid range.", ), ;, }, return]
[<, 0, ), ||, (, series, >=, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (, "Index outside valid range.", ), ;]
[), ||, (, series, >=, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (, "Index outside valid range.", ), ;, }, return]
[), {, throw, new, IllegalArgumentException, (, "Index outside valid range.", ), ;, }, return, (, XYSeries, ), this, ., data, ., get, (]
[), ), {, throw, new, IllegalArgumentException, (, "Index outside valid range.", ), ;, }, return, (, XYSeries, ), this, ., data, ., get]
[>=, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (, "Index outside valid range.", ), ;, }, return, (, XYSeries, ), this]
[), ), {, throw, new, IllegalArgumentException, (, "Index outside valid range.", ), ;, }, return, (, XYSeries, ), this, ., data, ., get]
[;, }, return, (, XYSeries, ), this, ., data, ., get, (, series, ), ;, }, public, Comparable, getSeriesKey, (]
[), ;, }, return, (, XYSeries, ), this, ., data, ., get, (, series, ), ;, }, public, Comparable, getSeriesKey]
[;, }, public, Comparable, getSeriesKey, (, int, series, ), {, return, getSeries, (, series, ), ., getKey, (, ), ;]
[;, }, public, Comparable, getSeriesKey, (, int, series, ), {, return, getSeries, (, series, ), ., getKey, (, ), ;]
[., get, (, series, ), ;, }, public, Comparable, getSeriesKey, (, int, series, ), {, return, getSeries, (, series, )]
[., data, ., get, (, series, ), ;, }, public, Comparable, getSeriesKey, (, int, series, ), {, return, getSeries, (]
[), ;, }, public, Comparable, getSeriesKey, (, int, series, ), {, return, getSeries, (, series, ), ., getKey, (, )]
[;, }, public, int, getItemCount, (, int, series, ), {, return, getSeries, (, series, ), ., getItemCount, (, ), ;]
[., getKey, (, ), ;, }, public, int, getItemCount, (, int, series, ), {, return, getSeries, (, series, ), .]
[), ., getKey, (, ), ;, }, public, int, getItemCount, (, int, series, ), {, return, getSeries, (, series, )]
[;, }, public, Number, getX, (, int, series, ,, int, item, ), {, XYSeries, s, =, (, XYSeries, ), this]
[., getItemCount, (, ), ;, }, public, Number, getX, (, int, series, ,, int, item, ), {, XYSeries, s, =]
[), ., getItemCount, (, ), ;, }, public, Number, getX, (, int, series, ,, int, item, ), {, XYSeries, s]
[;, return, s, ., getX, (, item, ), ;, }, public, Number, getStartX, (, int, series, ,, int, item, )]
[;, return, s, ., getX, (, item, ), ;, }, public, Number, getStartX, (, int, series, ,, int, item, )]
[., get, (, series, ), ;, return, s, ., getX, (, item, ), ;, }, public, Number, getStartX, (, int]
[., data, ., get, (, series, ), ;, return, s, ., getX, (, item, ), ;, }, public, Number, getStartX]
[), ;, return, s, ., getX, (, item, ), ;, }, public, Number, getStartX, (, int, series, ,, int, item]
[;, }, public, Number, getStartX, (, int, series, ,, int, item, ), {, return, this, ., intervalDelegate, ., getStartX, (]
[., getX, (, item, ), ;, }, public, Number, getStartX, (, int, series, ,, int, item, ), {, return, this]
[), ;, }, public, Number, getStartX, (, int, series, ,, int, item, ), {, return, this, ., intervalDelegate, ., getStartX]
[;, }, public, Number, getEndX, (, int, series, ,, int, item, ), {, return, this, ., intervalDelegate, ., getEndX, (]
[., getStartX, (, series, ,, item, ), ;, }, public, Number, getEndX, (, int, series, ,, int, item, ), {]
[., intervalDelegate, ., getStartX, (, series, ,, item, ), ;, }, public, Number, getEndX, (, int, series, ,, int, item]
[,, item, ), ;, }, public, Number, getEndX, (, int, series, ,, int, item, ), {, return, this, ., intervalDelegate]
[), ;, }, public, Number, getEndX, (, int, series, ,, int, item, ), {, return, this, ., intervalDelegate, ., getEndX]
[;, }, public, Number, getY, (, int, series, ,, int, index, ), {, XYSeries, s, =, (, XYSeries, ), this]
[., getEndX, (, series, ,, item, ), ;, }, public, Number, getY, (, int, series, ,, int, index, ), {]
[., intervalDelegate, ., getEndX, (, series, ,, item, ), ;, }, public, Number, getY, (, int, series, ,, int, index]
[,, item, ), ;, }, public, Number, getY, (, int, series, ,, int, index, ), {, XYSeries, s, =, (]
[), ;, }, public, Number, getY, (, int, series, ,, int, index, ), {, XYSeries, s, =, (, XYSeries, )]
[;, return, s, ., getY, (, index, ), ;, }, public, Number, getStartY, (, int, series, ,, int, item, )]
[;, return, s, ., getY, (, index, ), ;, }, public, Number, getStartY, (, int, series, ,, int, item, )]
[., get, (, series, ), ;, return, s, ., getY, (, index, ), ;, }, public, Number, getStartY, (, int]
[., data, ., get, (, series, ), ;, return, s, ., getY, (, index, ), ;, }, public, Number, getStartY]
[), ;, return, s, ., getY, (, index, ), ;, }, public, Number, getStartY, (, int, series, ,, int, item]
[;, }, public, Number, getStartY, (, int, series, ,, int, item, ), {, return, getY, (, series, ,, item, )]
[., getY, (, index, ), ;, }, public, Number, getStartY, (, int, series, ,, int, item, ), {, return, getY]
[), ;, }, public, Number, getStartY, (, int, series, ,, int, item, ), {, return, getY, (, series, ,, item]
[;, }, public, Number, getEndY, (, int, series, ,, int, item, ), {, return, getY, (, series, ,, item, )]
[,, item, ), ;, }, public, Number, getEndY, (, int, series, ,, int, item, ), {, return, getY, (, series]
[), ;, }, public, Number, getEndY, (, int, series, ,, int, item, ), {, return, getY, (, series, ,, item]
[;, }, public, void, removeAllSeries, (, ), {, for, (, int, i, =, 0, ;, i, <, this, ., data]
[,, item, ), ;, }, public, void, removeAllSeries, (, ), {, for, (, int, i, =, 0, ;, i, <]
[), ;, }, public, void, removeAllSeries, (, ), {, for, (, int, i, =, 0, ;, i, <, this, .]
[;, i, <, this, ., data, ., size, (, ), ;, i, ++, ), {, XYSeries, series, =, (, XYSeries]
[;, i, ++, ), {, XYSeries, series, =, (, XYSeries, ), this, ., data, ., get, (, i, ), ;]
[<, this, ., data, ., size, (, ), ;, i, ++, ), {, XYSeries, series, =, (, XYSeries, ), this]
[;, i, ++, ), {, XYSeries, series, =, (, XYSeries, ), this, ., data, ., get, (, i, ), ;]
[., size, (, ), ;, i, ++, ), {, XYSeries, series, =, (, XYSeries, ), this, ., data, ., get]
[., data, ., size, (, ), ;, i, ++, ), {, XYSeries, series, =, (, XYSeries, ), this, ., data]
[), {, XYSeries, series, =, (, XYSeries, ), this, ., data, ., get, (, i, ), ;, series, ., removeChangeListener]
[++, ), {, XYSeries, series, =, (, XYSeries, ), this, ., data, ., get, (, i, ), ;, series, .]
[;, series, ., removeChangeListener, (, this, ), ;, }, this, ., data, ., clear, (, ), ;, this, ., xPoints]
[;, series, ., removeChangeListener, (, this, ), ;, }, this, ., data, ., clear, (, ), ;, this, ., xPoints]
[., get, (, i, ), ;, series, ., removeChangeListener, (, this, ), ;, }, this, ., data, ., clear, (]
[., data, ., get, (, i, ), ;, series, ., removeChangeListener, (, this, ), ;, }, this, ., data, .]
[), ;, series, ., removeChangeListener, (, this, ), ;, }, this, ., data, ., clear, (, ), ;, this, .]
[;, }, this, ., data, ., clear, (, ), ;, this, ., xPoints, ., clear, (, ), ;, fireDatasetChanged, (]
[., removeChangeListener, (, this, ), ;, }, this, ., data, ., clear, (, ), ;, this, ., xPoints, ., clear]
[), ;, }, this, ., data, ., clear, (, ), ;, this, ., xPoints, ., clear, (, ), ;, fireDatasetChanged]
[;, this, ., xPoints, ., clear, (, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, void]
[., clear, (, ), ;, this, ., xPoints, ., clear, (, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), )]
[., data, ., clear, (, ), ;, this, ., xPoints, ., clear, (, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (]
[;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, void, removeSeries, (, XYSeries, series, ), {, if, (]
[., clear, (, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, void, removeSeries, (, XYSeries, series]
[., xPoints, ., clear, (, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, void, removeSeries, (]
[;, }, public, void, removeSeries, (, XYSeries, series, ), {, if, (, series, ==, null, ), {, throw, new, IllegalArgumentException]
[), ;, }, public, void, removeSeries, (, XYSeries, series, ), {, if, (, series, ==, null, ), {, throw, new]
[), {, throw, new, IllegalArgumentException, (, "Null 'series' argument.", ), ;, }, if, (, this, ., data, ., contains, (, series, )]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'series' argument.", ), ;, }, if, (, this, ., data, ., contains, (]
[), {, throw, new, IllegalArgumentException, (, "Null 'series' argument.", ), ;, }, if, (, this, ., data, ., contains, (, series, )]
[;, }, if, (, this, ., data, ., contains, (, series, ), ), {, series, ., removeChangeListener, (, this, )]
[), ;, }, if, (, this, ., data, ., contains, (, series, ), ), {, series, ., removeChangeListener, (, this]
[), {, series, ., removeChangeListener, (, this, ), ;, this, ., data, ., remove, (, series, ), ;, if, (]
[., contains, (, series, ), ), {, series, ., removeChangeListener, (, this, ), ;, this, ., data, ., remove, (]
[., data, ., contains, (, series, ), ), {, series, ., removeChangeListener, (, this, ), ;, this, ., data, .]
[), ), {, series, ., removeChangeListener, (, this, ), ;, this, ., data, ., remove, (, series, ), ;, if]
[;, this, ., data, ., remove, (, series, ), ;, if, (, this, ., data, ., size, (, ), ==]
[., removeChangeListener, (, this, ), ;, this, ., data, ., remove, (, series, ), ;, if, (, this, ., data]
[), ;, this, ., data, ., remove, (, series, ), ;, if, (, this, ., data, ., size, (, )]
[;, if, (, this, ., data, ., size, (, ), ==, 0, ), {, this, ., xPoints, ., clear, (]
[., remove, (, series, ), ;, if, (, this, ., data, ., size, (, ), ==, 0, ), {, this]
[., data, ., remove, (, series, ), ;, if, (, this, ., data, ., size, (, ), ==, 0, )]
[), ;, if, (, this, ., data, ., size, (, ), ==, 0, ), {, this, ., xPoints, ., clear]
[), {, this, ., xPoints, ., clear, (, ), ;, }, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }]
[==, 0, ), {, this, ., xPoints, ., clear, (, ), ;, }, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), )]
[., size, (, ), ==, 0, ), {, this, ., xPoints, ., clear, (, ), ;, }, fireDatasetChanged, (, new]
[., data, ., size, (, ), ==, 0, ), {, this, ., xPoints, ., clear, (, ), ;, }, fireDatasetChanged]
[), {, this, ., xPoints, ., clear, (, ), ;, }, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }]
[;, }, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, }, public, void, removeSeries, (, int, series, ), {]
[., clear, (, ), ;, }, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, }, public, void, removeSeries, (]
[., xPoints, ., clear, (, ), ;, }, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, }, public, void]
[;, }, }, public, void, removeSeries, (, int, series, ), {, if, (, (, series, <, 0, ), ||, (]
[), ;, }, }, public, void, removeSeries, (, int, series, ), {, if, (, (, series, <, 0, ), ||]
[), {, throw, new, IllegalArgumentException, (, "Index outside valid range.", ), ;, }, XYSeries, s, =, (, XYSeries, ), this, ., data, .]
[||, (, series, >, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (, "Index outside valid range.", ), ;, }, XYSeries, s]
[), ||, (, series, >, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (, "Index outside valid range.", ), ;, }, XYSeries]
[<, 0, ), ||, (, series, >, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (, "Index outside valid range.", ), ;]
[), ||, (, series, >, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (, "Index outside valid range.", ), ;, }, XYSeries]
[), {, throw, new, IllegalArgumentException, (, "Index outside valid range.", ), ;, }, XYSeries, s, =, (, XYSeries, ), this, ., data, .]
[), ), {, throw, new, IllegalArgumentException, (, "Index outside valid range.", ), ;, }, XYSeries, s, =, (, XYSeries, ), this, ., data]
[>, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (, "Index outside valid range.", ), ;, }, XYSeries, s, =, (, XYSeries]
[), ), {, throw, new, IllegalArgumentException, (, "Index outside valid range.", ), ;, }, XYSeries, s, =, (, XYSeries, ), this, ., data]
[;, }, XYSeries, s, =, (, XYSeries, ), this, ., data, ., get, (, series, ), ;, s, ., removeChangeListener]
[), ;, }, XYSeries, s, =, (, XYSeries, ), this, ., data, ., get, (, series, ), ;, s, .]
[;, s, ., removeChangeListener, (, this, ), ;, this, ., data, ., remove, (, series, ), ;, if, (, this]
[;, s, ., removeChangeListener, (, this, ), ;, this, ., data, ., remove, (, series, ), ;, if, (, this]
[., get, (, series, ), ;, s, ., removeChangeListener, (, this, ), ;, this, ., data, ., remove, (, series]
[., data, ., get, (, series, ), ;, s, ., removeChangeListener, (, this, ), ;, this, ., data, ., remove]
[), ;, s, ., removeChangeListener, (, this, ), ;, this, ., data, ., remove, (, series, ), ;, if, (]
[;, this, ., data, ., remove, (, series, ), ;, if, (, this, ., data, ., size, (, ), ==]
[., removeChangeListener, (, this, ), ;, this, ., data, ., remove, (, series, ), ;, if, (, this, ., data]
[), ;, this, ., data, ., remove, (, series, ), ;, if, (, this, ., data, ., size, (, )]
[;, if, (, this, ., data, ., size, (, ), ==, 0, ), {, this, ., xPoints, ., clear, (]
[., remove, (, series, ), ;, if, (, this, ., data, ., size, (, ), ==, 0, ), {, this]
[., data, ., remove, (, series, ), ;, if, (, this, ., data, ., size, (, ), ==, 0, )]
[), ;, if, (, this, ., data, ., size, (, ), ==, 0, ), {, this, ., xPoints, ., clear]
[), {, this, ., xPoints, ., clear, (, ), ;, }, else, if, (, this, ., autoPrune, ), {, prune]
[==, 0, ), {, this, ., xPoints, ., clear, (, ), ;, }, else, if, (, this, ., autoPrune, )]
[., size, (, ), ==, 0, ), {, this, ., xPoints, ., clear, (, ), ;, }, else, if, (]
[., data, ., size, (, ), ==, 0, ), {, this, ., xPoints, ., clear, (, ), ;, }, else]
[), {, this, ., xPoints, ., clear, (, ), ;, }, else, if, (, this, ., autoPrune, ), {, prune]
[;, }, else, if, (, this, ., autoPrune, ), {, prune, (, ), ;, }, fireDatasetChanged, (, new, DatasetChangeInfo, (]
[., clear, (, ), ;, }, else, if, (, this, ., autoPrune, ), {, prune, (, ), ;, }, fireDatasetChanged]
[., xPoints, ., clear, (, ), ;, }, else, if, (, this, ., autoPrune, ), {, prune, (, ), ;]
[), {, prune, (, ), ;, }, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, void, removeAllValuesForX, (]
[., autoPrune, ), {, prune, (, ), ;, }, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, void]
[;, }, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, void, removeAllValuesForX, (, Number, x, ), {, if]
[;, }, public, void, removeAllValuesForX, (, Number, x, ), {, if, (, x, ==, null, ), {, throw, new, IllegalArgumentException]
[), ;, }, public, void, removeAllValuesForX, (, Number, x, ), {, if, (, x, ==, null, ), {, throw, new]
[), {, throw, new, IllegalArgumentException, (, "Null 'x' argument.", ), ;, }, boolean, savedState, =, this, ., propagateEvents, ;, this, ., propagateEvents]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'x' argument.", ), ;, }, boolean, savedState, =, this, ., propagateEvents, ;, this]
[), {, throw, new, IllegalArgumentException, (, "Null 'x' argument.", ), ;, }, boolean, savedState, =, this, ., propagateEvents, ;, this, ., propagateEvents]
[;, }, boolean, savedState, =, this, ., propagateEvents, ;, this, ., propagateEvents, =, false, ;, for, (, int, s, =]
[), ;, }, boolean, savedState, =, this, ., propagateEvents, ;, this, ., propagateEvents, =, false, ;, for, (, int, s]
[;, this, ., propagateEvents, =, false, ;, for, (, int, s, =, 0, ;, s, <, this, ., data, .]
[., propagateEvents, ;, this, ., propagateEvents, =, false, ;, for, (, int, s, =, 0, ;, s, <, this, .]
[=, false, ;, for, (, int, s, =, 0, ;, s, <, this, ., data, ., size, (, ), ;]
[., propagateEvents, =, false, ;, for, (, int, s, =, 0, ;, s, <, this, ., data, ., size, (]
[;, for, (, int, s, =, 0, ;, s, <, this, ., data, ., size, (, ), ;, s, ++]
[;, s, <, this, ., data, ., size, (, ), ;, s, ++, ), {, XYSeries, series, =, (, XYSeries]
[;, s, ++, ), {, XYSeries, series, =, (, XYSeries, ), this, ., data, ., get, (, s, ), ;]
[<, this, ., data, ., size, (, ), ;, s, ++, ), {, XYSeries, series, =, (, XYSeries, ), this]
[;, s, ++, ), {, XYSeries, series, =, (, XYSeries, ), this, ., data, ., get, (, s, ), ;]
[., size, (, ), ;, s, ++, ), {, XYSeries, series, =, (, XYSeries, ), this, ., data, ., get]
[., data, ., size, (, ), ;, s, ++, ), {, XYSeries, series, =, (, XYSeries, ), this, ., data]
[), {, XYSeries, series, =, (, XYSeries, ), this, ., data, ., get, (, s, ), ;, series, ., remove]
[++, ), {, XYSeries, series, =, (, XYSeries, ), this, ., data, ., get, (, s, ), ;, series, .]
[;, series, ., remove, (, x, ), ;, }, this, ., propagateEvents, =, savedState, ;, this, ., xPoints, ., remove]
[;, series, ., remove, (, x, ), ;, }, this, ., propagateEvents, =, savedState, ;, this, ., xPoints, ., remove]
[., get, (, s, ), ;, series, ., remove, (, x, ), ;, }, this, ., propagateEvents, =, savedState, ;]
[., data, ., get, (, s, ), ;, series, ., remove, (, x, ), ;, }, this, ., propagateEvents, =]
[), ;, series, ., remove, (, x, ), ;, }, this, ., propagateEvents, =, savedState, ;, this, ., xPoints, .]
[;, }, this, ., propagateEvents, =, savedState, ;, this, ., xPoints, ., remove, (, x, ), ;, fireDatasetChanged, (, new]
[., remove, (, x, ), ;, }, this, ., propagateEvents, =, savedState, ;, this, ., xPoints, ., remove, (, x]
[), ;, }, this, ., propagateEvents, =, savedState, ;, this, ., xPoints, ., remove, (, x, ), ;, fireDatasetChanged, (]
[=, savedState, ;, this, ., xPoints, ., remove, (, x, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;]
[., propagateEvents, =, savedState, ;, this, ., xPoints, ., remove, (, x, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, )]
[;, this, ., xPoints, ., remove, (, x, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, protected]
[;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, protected, boolean, canPrune, (, Number, x, ), {, for, (]
[., remove, (, x, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, protected, boolean, canPrune, (, Number]
[., xPoints, ., remove, (, x, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, protected, boolean, canPrune]
[), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, protected, boolean, canPrune, (, Number, x, ), {, for]
[;, }, protected, boolean, canPrune, (, Number, x, ), {, for, (, int, s, =, 0, ;, s, <, this]
[), ;, }, protected, boolean, canPrune, (, Number, x, ), {, for, (, int, s, =, 0, ;, s, <]
[;, s, <, this, ., data, ., size, (, ), ;, s, ++, ), {, XYSeries, series, =, (, XYSeries]
[;, s, ++, ), {, XYSeries, series, =, (, XYSeries, ), this, ., data, ., get, (, s, ), ;]
[<, this, ., data, ., size, (, ), ;, s, ++, ), {, XYSeries, series, =, (, XYSeries, ), this]
[;, s, ++, ), {, XYSeries, series, =, (, XYSeries, ), this, ., data, ., get, (, s, ), ;]
[., size, (, ), ;, s, ++, ), {, XYSeries, series, =, (, XYSeries, ), this, ., data, ., get]
[., data, ., size, (, ), ;, s, ++, ), {, XYSeries, series, =, (, XYSeries, ), this, ., data]
[), {, XYSeries, series, =, (, XYSeries, ), this, ., data, ., get, (, s, ), ;, if, (, series]
[++, ), {, XYSeries, series, =, (, XYSeries, ), this, ., data, ., get, (, s, ), ;, if, (]
[;, if, (, series, ., getY, (, series, ., indexOf, (, x, ), ), !=, null, ), {, return, false]
[;, if, (, series, ., getY, (, series, ., indexOf, (, x, ), ), !=, null, ), {, return, false]
[., get, (, s, ), ;, if, (, series, ., getY, (, series, ., indexOf, (, x, ), ), !=]
[., data, ., get, (, s, ), ;, if, (, series, ., getY, (, series, ., indexOf, (, x, )]
[), ;, if, (, series, ., getY, (, series, ., indexOf, (, x, ), ), !=, null, ), {, return]
[), {, return, false, ;, }, }, return, true, ;, }, public, void, prune, (, ), {, HashSet, hs, =]
[!=, null, ), {, return, false, ;, }, }, return, true, ;, }, public, void, prune, (, ), {, HashSet]
[., getY, (, series, ., indexOf, (, x, ), ), !=, null, ), {, return, false, ;, }, }, return]
[), !=, null, ), {, return, false, ;, }, }, return, true, ;, }, public, void, prune, (, ), {]
[., indexOf, (, x, ), ), !=, null, ), {, return, false, ;, }, }, return, true, ;, }, public]
[), ), !=, null, ), {, return, false, ;, }, }, return, true, ;, }, public, void, prune, (, )]
[), {, return, false, ;, }, }, return, true, ;, }, public, void, prune, (, ), {, HashSet, hs, =]
[;, }, }, return, true, ;, }, public, void, prune, (, ), {, HashSet, hs, =, (, HashSet, ), this]
[;, }, public, void, prune, (, ), {, HashSet, hs, =, (, HashSet, ), this, ., xPoints, ., clone, (]
[;, Iterator, iterator, =, hs, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, Number]
[;, Iterator, iterator, =, hs, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, Number]
[., clone, (, ), ;, Iterator, iterator, =, hs, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (]
[., xPoints, ., clone, (, ), ;, Iterator, iterator, =, hs, ., iterator, (, ), ;, while, (, iterator, .]
[;, while, (, iterator, ., hasNext, (, ), ), {, Number, x, =, (, Number, ), iterator, ., next, (]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, Number, x, =, (, Number, )]
[), {, Number, x, =, (, Number, ), iterator, ., next, (, ), ;, if, (, canPrune, (, x, )]
[., hasNext, (, ), ), {, Number, x, =, (, Number, ), iterator, ., next, (, ), ;, if, (]
[;, if, (, canPrune, (, x, ), ), {, removeAllValuesForX, (, x, ), ;, }, }, }, public, void, seriesChanged]
[;, if, (, canPrune, (, x, ), ), {, removeAllValuesForX, (, x, ), ;, }, }, }, public, void, seriesChanged]
[., next, (, ), ;, if, (, canPrune, (, x, ), ), {, removeAllValuesForX, (, x, ), ;, }, }]
[), {, removeAllValuesForX, (, x, ), ;, }, }, }, public, void, seriesChanged, (, SeriesChangeEvent, event, ), {, if, (]
[), ), {, removeAllValuesForX, (, x, ), ;, }, }, }, public, void, seriesChanged, (, SeriesChangeEvent, event, ), {, if]
[;, }, }, }, public, void, seriesChanged, (, SeriesChangeEvent, event, ), {, if, (, this, ., propagateEvents, ), {, updateXPoints]
[), ;, }, }, }, public, void, seriesChanged, (, SeriesChangeEvent, event, ), {, if, (, this, ., propagateEvents, ), {]
[), {, updateXPoints, (, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, }, public, boolean, equals, (]
[., propagateEvents, ), {, updateXPoints, (, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, }, public, boolean]
[;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if]
[;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true]
[), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, DefaultTableXYDataset, ), ), {, return, false, ;, }]
[==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, DefaultTableXYDataset, ), ), {, return, false]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, DefaultTableXYDataset, ), ), {, return, false, ;, }]
[;, }, if, (, !, (, obj, instanceof, DefaultTableXYDataset, ), ), {, return, false, ;, }, DefaultTableXYDataset, that, =, (]
[), {, return, false, ;, }, DefaultTableXYDataset, that, =, (, DefaultTableXYDataset, ), obj, ;, if, (, this, ., autoPrune, !=]
[), {, return, false, ;, }, DefaultTableXYDataset, that, =, (, DefaultTableXYDataset, ), obj, ;, if, (, this, ., autoPrune, !=]
[), ), {, return, false, ;, }, DefaultTableXYDataset, that, =, (, DefaultTableXYDataset, ), obj, ;, if, (, this, ., autoPrune]
[instanceof, DefaultTableXYDataset, ), ), {, return, false, ;, }, DefaultTableXYDataset, that, =, (, DefaultTableXYDataset, ), obj, ;, if, (, this]
[;, }, DefaultTableXYDataset, that, =, (, DefaultTableXYDataset, ), obj, ;, if, (, this, ., autoPrune, !=, that, ., autoPrune, )]
[;, if, (, this, ., autoPrune, !=, that, ., autoPrune, ), {, return, false, ;, }, if, (, this, .]
[;, if, (, this, ., autoPrune, !=, that, ., autoPrune, ), {, return, false, ;, }, if, (, this, .]
[), {, return, false, ;, }, if, (, this, ., propagateEvents, !=, that, ., propagateEvents, ), {, return, false, ;]
[!=, that, ., autoPrune, ), {, return, false, ;, }, if, (, this, ., propagateEvents, !=, that, ., propagateEvents, )]
[., autoPrune, !=, that, ., autoPrune, ), {, return, false, ;, }, if, (, this, ., propagateEvents, !=, that, .]
[), {, return, false, ;, }, if, (, this, ., propagateEvents, !=, that, ., propagateEvents, ), {, return, false, ;]
[., autoPrune, ), {, return, false, ;, }, if, (, this, ., propagateEvents, !=, that, ., propagateEvents, ), {, return]
[;, }, if, (, this, ., propagateEvents, !=, that, ., propagateEvents, ), {, return, false, ;, }, if, (, !]
[), {, return, false, ;, }, if, (, !, this, ., intervalDelegate, ., equals, (, that, ., intervalDelegate, ), )]
[!=, that, ., propagateEvents, ), {, return, false, ;, }, if, (, !, this, ., intervalDelegate, ., equals, (, that]
[., propagateEvents, !=, that, ., propagateEvents, ), {, return, false, ;, }, if, (, !, this, ., intervalDelegate, ., equals]
[), {, return, false, ;, }, if, (, !, this, ., intervalDelegate, ., equals, (, that, ., intervalDelegate, ), )]
[., propagateEvents, ), {, return, false, ;, }, if, (, !, this, ., intervalDelegate, ., equals, (, that, ., intervalDelegate]
[;, }, if, (, !, this, ., intervalDelegate, ., equals, (, that, ., intervalDelegate, ), ), {, return, false, ;]
[), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., data, ,, that, ., data]
[), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., data, ,, that, ., data]
[., equals, (, that, ., intervalDelegate, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (]
[., intervalDelegate, ., equals, (, that, ., intervalDelegate, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, .]
[), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., data, ,, that, .]
[., intervalDelegate, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., data, ,]
[;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., data, ,, that, ., data, ), ), {, return]
[), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, ;, result]
[), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, ;, result]
[., equal, (, this, ., data, ,, that, ., data, ), ), {, return, false, ;, }, return, true, ;]
[,, that, ., data, ), ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, )]
[., data, ,, that, ., data, ), ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode]
[), ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, ;]
[., data, ), ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int]
[;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, ;, result, =, (, this, .]
[;, }, public, int, hashCode, (, ), {, int, result, ;, result, =, (, this, ., data, !=, null, ?]
[=, (, this, ., data, !=, null, ?, this, ., data, ., hashCode, (, ), :, 0, ), ;, result]
[;, result, =, 29, *, result, +, (, this, ., xPoints, !=, null, ?, this, ., xPoints, ., hashCode, (]
[), ;, result, =, 29, *, result, +, (, this, ., xPoints, !=, null, ?, this, ., xPoints, ., hashCode]
[?, this, ., data, ., hashCode, (, ), :, 0, ), ;, result, =, 29, *, result, +, (, this]
[!=, null, ?, this, ., data, ., hashCode, (, ), :, 0, ), ;, result, =, 29, *, result, +]
[., data, !=, null, ?, this, ., data, ., hashCode, (, ), :, 0, ), ;, result, =, 29, *]
[?, this, ., data, ., hashCode, (, ), :, 0, ), ;, result, =, 29, *, result, +, (, this]
[:, 0, ), ;, result, =, 29, *, result, +, (, this, ., xPoints, !=, null, ?, this, ., xPoints]
[., hashCode, (, ), :, 0, ), ;, result, =, 29, *, result, +, (, this, ., xPoints, !=, null]
[., data, ., hashCode, (, ), :, 0, ), ;, result, =, 29, *, result, +, (, this, ., xPoints]
[), ;, result, =, 29, *, result, +, (, this, ., xPoints, !=, null, ?, this, ., xPoints, ., hashCode]
[=, 29, *, result, +, (, this, ., xPoints, !=, null, ?, this, ., xPoints, ., hashCode, (, ), :]
[;, result, =, 29, *, result, +, (, this, ., propagateEvents, ?, 1, :, 0, ), ;, result, =, 29]
[+, (, this, ., xPoints, !=, null, ?, this, ., xPoints, ., hashCode, (, ), :, 0, ), ;, result]
[*, result, +, (, this, ., xPoints, !=, null, ?, this, ., xPoints, ., hashCode, (, ), :, 0, )]
[+, (, this, ., xPoints, !=, null, ?, this, ., xPoints, ., hashCode, (, ), :, 0, ), ;, result]
[;, result, =, 29, *, result, +, (, this, ., propagateEvents, ?, 1, :, 0, ), ;, result, =, 29]
[), ;, result, =, 29, *, result, +, (, this, ., propagateEvents, ?, 1, :, 0, ), ;, result, =]
[?, this, ., xPoints, ., hashCode, (, ), :, 0, ), ;, result, =, 29, *, result, +, (, this]
[!=, null, ?, this, ., xPoints, ., hashCode, (, ), :, 0, ), ;, result, =, 29, *, result, +]
[., xPoints, !=, null, ?, this, ., xPoints, ., hashCode, (, ), :, 0, ), ;, result, =, 29, *]
[?, this, ., xPoints, ., hashCode, (, ), :, 0, ), ;, result, =, 29, *, result, +, (, this]
[:, 0, ), ;, result, =, 29, *, result, +, (, this, ., propagateEvents, ?, 1, :, 0, ), ;]
[., hashCode, (, ), :, 0, ), ;, result, =, 29, *, result, +, (, this, ., propagateEvents, ?, 1]
[., xPoints, ., hashCode, (, ), :, 0, ), ;, result, =, 29, *, result, +, (, this, ., propagateEvents]
[), ;, result, =, 29, *, result, +, (, this, ., propagateEvents, ?, 1, :, 0, ), ;, result, =]
[=, 29, *, result, +, (, this, ., propagateEvents, ?, 1, :, 0, ), ;, result, =, 29, *, result]
[;, result, =, 29, *, result, +, (, this, ., autoPrune, ?, 1, :, 0, ), ;, return, result, ;]
[+, (, this, ., propagateEvents, ?, 1, :, 0, ), ;, result, =, 29, *, result, +, (, this, .]
[*, result, +, (, this, ., propagateEvents, ?, 1, :, 0, ), ;, result, =, 29, *, result, +, (]
[+, (, this, ., propagateEvents, ?, 1, :, 0, ), ;, result, =, 29, *, result, +, (, this, .]
[;, result, =, 29, *, result, +, (, this, ., autoPrune, ?, 1, :, 0, ), ;, return, result, ;]
[), ;, result, =, 29, *, result, +, (, this, ., autoPrune, ?, 1, :, 0, ), ;, return, result]
[?, 1, :, 0, ), ;, result, =, 29, *, result, +, (, this, ., autoPrune, ?, 1, :, 0]
[., propagateEvents, ?, 1, :, 0, ), ;, result, =, 29, *, result, +, (, this, ., autoPrune, ?, 1]
[:, 0, ), ;, result, =, 29, *, result, +, (, this, ., autoPrune, ?, 1, :, 0, ), ;]
[), ;, result, =, 29, *, result, +, (, this, ., autoPrune, ?, 1, :, 0, ), ;, return, result]
[=, 29, *, result, +, (, this, ., autoPrune, ?, 1, :, 0, ), ;, return, result, ;, }, public]
[;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, DefaultTableXYDataset, clone, =, (, DefaultTableXYDataset, ), super]
[+, (, this, ., autoPrune, ?, 1, :, 0, ), ;, return, result, ;, }, public, Object, clone, (, )]
[*, result, +, (, this, ., autoPrune, ?, 1, :, 0, ), ;, return, result, ;, }, public, Object, clone]
[+, (, this, ., autoPrune, ?, 1, :, 0, ), ;, return, result, ;, }, public, Object, clone, (, )]
[;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, DefaultTableXYDataset, clone, =, (, DefaultTableXYDataset, ), super]
[), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, DefaultTableXYDataset, clone, =, (, DefaultTableXYDataset, )]
[?, 1, :, 0, ), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, DefaultTableXYDataset, clone]
[., autoPrune, ?, 1, :, 0, ), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {]
[:, 0, ), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, DefaultTableXYDataset, clone, =, (]
[), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, DefaultTableXYDataset, clone, =, (, DefaultTableXYDataset, )]
[;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, DefaultTableXYDataset, clone, =, (, DefaultTableXYDataset, ), super, ., clone, (]
[;, int, seriesCount, =, this, ., data, ., size, (, ), ;, clone, ., data, =, new, java, ., util]
[;, int, seriesCount, =, this, ., data, ., size, (, ), ;, clone, ., data, =, new, java, ., util]
[., clone, (, ), ;, int, seriesCount, =, this, ., data, ., size, (, ), ;, clone, ., data, =]
[;, clone, ., data, =, new, java, ., util, ., ArrayList, (, seriesCount, ), ;, for, (, int, i, =]
[., size, (, ), ;, clone, ., data, =, new, java, ., util, ., ArrayList, (, seriesCount, ), ;, for]
[., data, ., size, (, ), ;, clone, ., data, =, new, java, ., util, ., ArrayList, (, seriesCount, )]
[=, new, java, ., util, ., ArrayList, (, seriesCount, ), ;, for, (, int, i, =, 0, ;, i, <]
[., data, =, new, java, ., util, ., ArrayList, (, seriesCount, ), ;, for, (, int, i, =, 0, ;]
[;, for, (, int, i, =, 0, ;, i, <, seriesCount, ;, i, ++, ), {, XYSeries, series, =, (]
[), ;, for, (, int, i, =, 0, ;, i, <, seriesCount, ;, i, ++, ), {, XYSeries, series, =]
[;, i, <, seriesCount, ;, i, ++, ), {, XYSeries, series, =, (, XYSeries, ), this, ., data, ., get]
[;, i, ++, ), {, XYSeries, series, =, (, XYSeries, ), this, ., data, ., get, (, i, ), ;]
[<, seriesCount, ;, i, ++, ), {, XYSeries, series, =, (, XYSeries, ), this, ., data, ., get, (, i]
[;, i, ++, ), {, XYSeries, series, =, (, XYSeries, ), this, ., data, ., get, (, i, ), ;]
[), {, XYSeries, series, =, (, XYSeries, ), this, ., data, ., get, (, i, ), ;, clone, ., data]
[++, ), {, XYSeries, series, =, (, XYSeries, ), this, ., data, ., get, (, i, ), ;, clone, .]
[;, clone, ., data, ., add, (, series, ., clone, (, ), ), ;, }, clone, ., intervalDelegate, =, new]
[;, clone, ., data, ., add, (, series, ., clone, (, ), ), ;, }, clone, ., intervalDelegate, =, new]
[., get, (, i, ), ;, clone, ., data, ., add, (, series, ., clone, (, ), ), ;, }]
[., data, ., get, (, i, ), ;, clone, ., data, ., add, (, series, ., clone, (, ), )]
[), ;, clone, ., data, ., add, (, series, ., clone, (, ), ), ;, }, clone, ., intervalDelegate, =]
[;, }, clone, ., intervalDelegate, =, new, IntervalXYDelegate, (, clone, ), ;, clone, ., intervalDelegate, ., setFixedIntervalWidth, (, getIntervalWidth, (]
[., add, (, series, ., clone, (, ), ), ;, }, clone, ., intervalDelegate, =, new, IntervalXYDelegate, (, clone, )]
[., data, ., add, (, series, ., clone, (, ), ), ;, }, clone, ., intervalDelegate, =, new, IntervalXYDelegate, (]
[), ;, }, clone, ., intervalDelegate, =, new, IntervalXYDelegate, (, clone, ), ;, clone, ., intervalDelegate, ., setFixedIntervalWidth, (, getIntervalWidth]
[., clone, (, ), ), ;, }, clone, ., intervalDelegate, =, new, IntervalXYDelegate, (, clone, ), ;, clone, ., intervalDelegate]
[=, new, IntervalXYDelegate, (, clone, ), ;, clone, ., intervalDelegate, ., setFixedIntervalWidth, (, getIntervalWidth, (, ), ), ;, clone, .]
[., intervalDelegate, =, new, IntervalXYDelegate, (, clone, ), ;, clone, ., intervalDelegate, ., setFixedIntervalWidth, (, getIntervalWidth, (, ), ), ;]
[;, clone, ., intervalDelegate, ., setFixedIntervalWidth, (, getIntervalWidth, (, ), ), ;, clone, ., intervalDelegate, ., setAutoWidth, (, isAutoWidth, (]
[), ;, clone, ., intervalDelegate, ., setFixedIntervalWidth, (, getIntervalWidth, (, ), ), ;, clone, ., intervalDelegate, ., setAutoWidth, (, isAutoWidth]
[;, clone, ., intervalDelegate, ., setAutoWidth, (, isAutoWidth, (, ), ), ;, clone, ., intervalDelegate, ., setIntervalPositionFactor, (, getIntervalPositionFactor, (]
[., setFixedIntervalWidth, (, getIntervalWidth, (, ), ), ;, clone, ., intervalDelegate, ., setAutoWidth, (, isAutoWidth, (, ), ), ;, clone]
[., intervalDelegate, ., setFixedIntervalWidth, (, getIntervalWidth, (, ), ), ;, clone, ., intervalDelegate, ., setAutoWidth, (, isAutoWidth, (, ), )]
[), ;, clone, ., intervalDelegate, ., setAutoWidth, (, isAutoWidth, (, ), ), ;, clone, ., intervalDelegate, ., setIntervalPositionFactor, (, getIntervalPositionFactor]
[;, clone, ., intervalDelegate, ., setIntervalPositionFactor, (, getIntervalPositionFactor, (, ), ), ;, clone, ., updateXPoints, (, ), ;, return, clone]
[., setAutoWidth, (, isAutoWidth, (, ), ), ;, clone, ., intervalDelegate, ., setIntervalPositionFactor, (, getIntervalPositionFactor, (, ), ), ;, clone]
[., intervalDelegate, ., setAutoWidth, (, isAutoWidth, (, ), ), ;, clone, ., intervalDelegate, ., setIntervalPositionFactor, (, getIntervalPositionFactor, (, ), )]
[), ;, clone, ., intervalDelegate, ., setIntervalPositionFactor, (, getIntervalPositionFactor, (, ), ), ;, clone, ., updateXPoints, (, ), ;, return]
[;, clone, ., updateXPoints, (, ), ;, return, clone, ;, }, public, double, getDomainLowerBound, (, boolean, includeInterval, ), {, return]
[., setIntervalPositionFactor, (, getIntervalPositionFactor, (, ), ), ;, clone, ., updateXPoints, (, ), ;, return, clone, ;, }, public, double]
[., intervalDelegate, ., setIntervalPositionFactor, (, getIntervalPositionFactor, (, ), ), ;, clone, ., updateXPoints, (, ), ;, return, clone, ;, }]
[), ;, clone, ., updateXPoints, (, ), ;, return, clone, ;, }, public, double, getDomainLowerBound, (, boolean, includeInterval, ), {]
[;, return, clone, ;, }, public, double, getDomainLowerBound, (, boolean, includeInterval, ), {, return, this, ., intervalDelegate, ., getDomainLowerBound, (]
[., updateXPoints, (, ), ;, return, clone, ;, }, public, double, getDomainLowerBound, (, boolean, includeInterval, ), {, return, this, .]
[;, }, public, double, getDomainLowerBound, (, boolean, includeInterval, ), {, return, this, ., intervalDelegate, ., getDomainLowerBound, (, includeInterval, ), ;]
[;, }, public, double, getDomainUpperBound, (, boolean, includeInterval, ), {, return, this, ., intervalDelegate, ., getDomainUpperBound, (, includeInterval, ), ;]
[., getDomainLowerBound, (, includeInterval, ), ;, }, public, double, getDomainUpperBound, (, boolean, includeInterval, ), {, return, this, ., intervalDelegate, .]
[., intervalDelegate, ., getDomainLowerBound, (, includeInterval, ), ;, }, public, double, getDomainUpperBound, (, boolean, includeInterval, ), {, return, this, .]
[), ;, }, public, double, getDomainUpperBound, (, boolean, includeInterval, ), {, return, this, ., intervalDelegate, ., getDomainUpperBound, (, includeInterval, )]
[;, }, public, Range, getDomainBounds, (, boolean, includeInterval, ), {, if, (, includeInterval, ), {, return, this, ., intervalDelegate, .]
[., getDomainUpperBound, (, includeInterval, ), ;, }, public, Range, getDomainBounds, (, boolean, includeInterval, ), {, if, (, includeInterval, ), {]
[., intervalDelegate, ., getDomainUpperBound, (, includeInterval, ), ;, }, public, Range, getDomainBounds, (, boolean, includeInterval, ), {, if, (, includeInterval]
[), ;, }, public, Range, getDomainBounds, (, boolean, includeInterval, ), {, if, (, includeInterval, ), {, return, this, ., intervalDelegate]
[), {, return, this, ., intervalDelegate, ., getDomainBounds, (, includeInterval, ), ;, }, else, {, return, DatasetUtilities, ., iterateDomainBounds, (]
[;, }, else, {, return, DatasetUtilities, ., iterateDomainBounds, (, this, ,, includeInterval, ), ;, }, }, public, double, getIntervalPositionFactor, (]
[., getDomainBounds, (, includeInterval, ), ;, }, else, {, return, DatasetUtilities, ., iterateDomainBounds, (, this, ,, includeInterval, ), ;, }]
[., intervalDelegate, ., getDomainBounds, (, includeInterval, ), ;, }, else, {, return, DatasetUtilities, ., iterateDomainBounds, (, this, ,, includeInterval, )]
[), ;, }, else, {, return, DatasetUtilities, ., iterateDomainBounds, (, this, ,, includeInterval, ), ;, }, }, public, double, getIntervalPositionFactor]
[;, }, }, public, double, getIntervalPositionFactor, (, ), {, return, this, ., intervalDelegate, ., getIntervalPositionFactor, (, ), ;, }, public]
[., iterateDomainBounds, (, this, ,, includeInterval, ), ;, }, }, public, double, getIntervalPositionFactor, (, ), {, return, this, ., intervalDelegate]
[,, includeInterval, ), ;, }, }, public, double, getIntervalPositionFactor, (, ), {, return, this, ., intervalDelegate, ., getIntervalPositionFactor, (, )]
[), ;, }, }, public, double, getIntervalPositionFactor, (, ), {, return, this, ., intervalDelegate, ., getIntervalPositionFactor, (, ), ;, }]
[;, }, public, void, setIntervalPositionFactor, (, double, d, ), {, this, ., intervalDelegate, ., setIntervalPositionFactor, (, d, ), ;, fireDatasetChanged]
[., getIntervalPositionFactor, (, ), ;, }, public, void, setIntervalPositionFactor, (, double, d, ), {, this, ., intervalDelegate, ., setIntervalPositionFactor, (]
[., intervalDelegate, ., getIntervalPositionFactor, (, ), ;, }, public, void, setIntervalPositionFactor, (, double, d, ), {, this, ., intervalDelegate, .]
[;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, double, getIntervalWidth, (, ), {, return, this, ., intervalDelegate]
[., setIntervalPositionFactor, (, d, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, double, getIntervalWidth, (, )]
[., intervalDelegate, ., setIntervalPositionFactor, (, d, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, double, getIntervalWidth]
[), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, double, getIntervalWidth, (, ), {, return, this, .]
[;, }, public, double, getIntervalWidth, (, ), {, return, this, ., intervalDelegate, ., getIntervalWidth, (, ), ;, }, public, void]
[), ;, }, public, double, getIntervalWidth, (, ), {, return, this, ., intervalDelegate, ., getIntervalWidth, (, ), ;, }, public]
[;, }, public, void, setIntervalWidth, (, double, d, ), {, this, ., intervalDelegate, ., setFixedIntervalWidth, (, d, ), ;, fireDatasetChanged]
[., getIntervalWidth, (, ), ;, }, public, void, setIntervalWidth, (, double, d, ), {, this, ., intervalDelegate, ., setFixedIntervalWidth, (]
[., intervalDelegate, ., getIntervalWidth, (, ), ;, }, public, void, setIntervalWidth, (, double, d, ), {, this, ., intervalDelegate, .]
[;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, boolean, isAutoWidth, (, ), {, return, this, ., intervalDelegate]
[., setFixedIntervalWidth, (, d, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, boolean, isAutoWidth, (, )]
[., intervalDelegate, ., setFixedIntervalWidth, (, d, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, boolean, isAutoWidth]
[), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, boolean, isAutoWidth, (, ), {, return, this, .]
[;, }, public, boolean, isAutoWidth, (, ), {, return, this, ., intervalDelegate, ., isAutoWidth, (, ), ;, }, public, void]
[), ;, }, public, boolean, isAutoWidth, (, ), {, return, this, ., intervalDelegate, ., isAutoWidth, (, ), ;, }, public]
[;, }, public, void, setAutoWidth, (, boolean, b, ), {, this, ., intervalDelegate, ., setAutoWidth, (, b, ), ;, fireDatasetChanged]
[., isAutoWidth, (, ), ;, }, public, void, setAutoWidth, (, boolean, b, ), {, this, ., intervalDelegate, ., setAutoWidth, (]
[., intervalDelegate, ., isAutoWidth, (, ), ;, }, public, void, setAutoWidth, (, boolean, b, ), {, this, ., intervalDelegate, .]
[;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, }]
[., setAutoWidth, (, b, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, }]
[., intervalDelegate, ., setAutoWidth, (, b, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, }]
[), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, }]
[;, }, }]
[), ;, }, }]
