[XYDataset, ;, public, class, VectorRenderer, extends, AbstractXYItemRenderer, implements, XYItemRenderer, ,, Cloneable, ,, PublicCloneable, ,, Serializable, {, private, double, baseLength, =]
[AbstractXYItemRenderer, implements, XYItemRenderer, ,, Cloneable, ,, PublicCloneable, ,, Serializable, {, private, double, baseLength, =, 0.10, ;, private, double, headLength, =]
[headLength, =, 0.14, ;, public, VectorRenderer, (, ), {, }, public, Range, findDomainBounds, (, XYDataset, dataset, ), {, if, (]
[headLength, =, 0.14, ;, public, VectorRenderer, (, ), {, }, public, Range, findDomainBounds, (, XYDataset, dataset, ), {, if, (]
[0.14, ;, public, VectorRenderer, (, ), {, }, public, Range, findDomainBounds, (, XYDataset, dataset, ), {, if, (, dataset, ==]
[(, ), {, }, public, Range, findDomainBounds, (, XYDataset, dataset, ), {, if, (, dataset, ==, null, ), {, throw]
[}, public, Range, findDomainBounds, (, XYDataset, dataset, ), {, if, (, dataset, ==, null, ), {, throw, new, IllegalArgumentException, (]
[), {, if, (, dataset, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'dataset' argument.", ), ;, }, double, minimum, =]
[), {, if, (, dataset, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'dataset' argument.", ), ;, }, double, minimum, =]
[), {, throw, new, IllegalArgumentException, (, "Null 'dataset' argument.", ), ;, }, double, minimum, =, Double, ., POSITIVE_INFINITY, ;, double, maximum, =]
[), {, throw, new, IllegalArgumentException, (, "Null 'dataset' argument.", ), ;, }, double, minimum, =, Double, ., POSITIVE_INFINITY, ;, double, maximum, =]
[), ;, }, double, minimum, =, Double, ., POSITIVE_INFINITY, ;, double, maximum, =, Double, ., NEGATIVE_INFINITY, ;, int, seriesCount, =]
[), ;, }, double, minimum, =, Double, ., POSITIVE_INFINITY, ;, double, maximum, =, Double, ., NEGATIVE_INFINITY, ;, int, seriesCount, =]
[., NEGATIVE_INFINITY, ;, int, seriesCount, =, dataset, ., getSeriesCount, (, ), ;, double, lvalue, ;, double, uvalue, ;, if, (]
[., NEGATIVE_INFINITY, ;, int, seriesCount, =, dataset, ., getSeriesCount, (, ), ;, double, lvalue, ;, double, uvalue, ;, if, (]
[getSeriesCount, (, ), ;, double, lvalue, ;, double, uvalue, ;, if, (, dataset, instanceof, VectorXYDataset, ), {, VectorXYDataset, vdataset, =]
[;, double, lvalue, ;, double, uvalue, ;, if, (, dataset, instanceof, VectorXYDataset, ), {, VectorXYDataset, vdataset, =, (, VectorXYDataset, )]
[if, (, dataset, instanceof, VectorXYDataset, ), {, VectorXYDataset, vdataset, =, (, VectorXYDataset, ), dataset, ;, for, (, int, series, =]
[dataset, instanceof, VectorXYDataset, ), {, VectorXYDataset, vdataset, =, (, VectorXYDataset, ), dataset, ;, for, (, int, series, =, 0, ;]
[dataset, instanceof, VectorXYDataset, ), {, VectorXYDataset, vdataset, =, (, VectorXYDataset, ), dataset, ;, for, (, int, series, =, 0, ;]
[VectorXYDataset, ), {, VectorXYDataset, vdataset, =, (, VectorXYDataset, ), dataset, ;, for, (, int, series, =, 0, ;, series, <]
[{, VectorXYDataset, vdataset, =, (, VectorXYDataset, ), dataset, ;, for, (, int, series, =, 0, ;, series, <, seriesCount, ;]
[{, VectorXYDataset, vdataset, =, (, VectorXYDataset, ), dataset, ;, for, (, int, series, =, 0, ;, series, <, seriesCount, ;]
[dataset, ;, for, (, int, series, =, 0, ;, series, <, seriesCount, ;, series, ++, ), {, int, itemCount, =]
[dataset, ;, for, (, int, series, =, 0, ;, series, <, seriesCount, ;, series, ++, ), {, int, itemCount, =]
[int, series, =, 0, ;, series, <, seriesCount, ;, series, ++, ), {, int, itemCount, =, dataset, ., getItemCount, (]
[;, series, ++, ), {, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int, item, =]
[++, ), {, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int, item, =, 0, ;]
[++, ), {, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int, item, =, 0, ;]
[{, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int, item, =, 0, ;, item, <]
[itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int, item, =, 0, ;, item, <, itemCount, ;]
[itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int, item, =, 0, ;, item, <, itemCount, ;]
[), ;, for, (, int, item, =, 0, ;, item, <, itemCount, ;, item, ++, ), {, double, delta, =]
[), ;, for, (, int, item, =, 0, ;, item, <, itemCount, ;, item, ++, ), {, double, delta, =]
[int, item, =, 0, ;, item, <, itemCount, ;, item, ++, ), {, double, delta, =, vdataset, ., getVectorXValue, (]
[=, 0, ;, item, <, itemCount, ;, item, ++, ), {, double, delta, =, vdataset, ., getVectorXValue, (, series, ,]
[itemCount, ;, item, ++, ), {, double, delta, =, vdataset, ., getVectorXValue, (, series, ,, item, ), ;, if, (]
[itemCount, ;, item, ++, ), {, double, delta, =, vdataset, ., getVectorXValue, (, series, ,, item, ), ;, if, (]
[item, ++, ), {, double, delta, =, vdataset, ., getVectorXValue, (, series, ,, item, ), ;, if, (, delta, <]
[{, double, delta, =, vdataset, ., getVectorXValue, (, series, ,, item, ), ;, if, (, delta, <, 0.0, ), {]
[delta, =, vdataset, ., getVectorXValue, (, series, ,, item, ), ;, if, (, delta, <, 0.0, ), {, uvalue, =]
[delta, =, vdataset, ., getVectorXValue, (, series, ,, item, ), ;, if, (, delta, <, 0.0, ), {, uvalue, =]
[getVectorXValue, (, series, ,, item, ), ;, if, (, delta, <, 0.0, ), {, uvalue, =, vdataset, ., getXValue, (]
[series, ,, item, ), ;, if, (, delta, <, 0.0, ), {, uvalue, =, vdataset, ., getXValue, (, series, ,]
[), ;, if, (, delta, <, 0.0, ), {, uvalue, =, vdataset, ., getXValue, (, series, ,, item, ), ;]
[if, (, delta, <, 0.0, ), {, uvalue, =, vdataset, ., getXValue, (, series, ,, item, ), ;, lvalue, =]
[if, (, delta, <, 0.0, ), {, uvalue, =, vdataset, ., getXValue, (, series, ,, item, ), ;, lvalue, =]
[delta, <, 0.0, ), {, uvalue, =, vdataset, ., getXValue, (, series, ,, item, ), ;, lvalue, =, uvalue, +]
[uvalue, =, vdataset, ., getXValue, (, series, ,, item, ), ;, lvalue, =, uvalue, +, delta, ;, }, else, {]
[vdataset, ., getXValue, (, series, ,, item, ), ;, lvalue, =, uvalue, +, delta, ;, }, else, {, lvalue, =]
[vdataset, ., getXValue, (, series, ,, item, ), ;, lvalue, =, uvalue, +, delta, ;, }, else, {, lvalue, =]
[series, ,, item, ), ;, lvalue, =, uvalue, +, delta, ;, }, else, {, lvalue, =, vdataset, ., getXValue, (]
[item, ), ;, lvalue, =, uvalue, +, delta, ;, }, else, {, lvalue, =, vdataset, ., getXValue, (, series, ,]
[lvalue, =, uvalue, +, delta, ;, }, else, {, lvalue, =, vdataset, ., getXValue, (, series, ,, item, ), ;]
[uvalue, +, delta, ;, }, else, {, lvalue, =, vdataset, ., getXValue, (, series, ,, item, ), ;, uvalue, =]
[uvalue, +, delta, ;, }, else, {, lvalue, =, vdataset, ., getXValue, (, series, ,, item, ), ;, uvalue, =]
[delta, ;, }, else, {, lvalue, =, vdataset, ., getXValue, (, series, ,, item, ), ;, uvalue, =, lvalue, +]
[else, {, lvalue, =, vdataset, ., getXValue, (, series, ,, item, ), ;, uvalue, =, lvalue, +, delta, ;, }]
[lvalue, =, vdataset, ., getXValue, (, series, ,, item, ), ;, uvalue, =, lvalue, +, delta, ;, }, minimum, =]
[lvalue, =, vdataset, ., getXValue, (, series, ,, item, ), ;, uvalue, =, lvalue, +, delta, ;, }, minimum, =]
[getXValue, (, series, ,, item, ), ;, uvalue, =, lvalue, +, delta, ;, }, minimum, =, Math, ., min, (]
[series, ,, item, ), ;, uvalue, =, lvalue, +, delta, ;, }, minimum, =, Math, ., min, (, minimum, ,]
[), ;, uvalue, =, lvalue, +, delta, ;, }, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;]
[uvalue, =, lvalue, +, delta, ;, }, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum, =]
[uvalue, =, lvalue, +, delta, ;, }, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum, =]
[delta, ;, }, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum, =, Math, ., max, (]
[}, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum, =, Math, ., max, (, maximum, ,]
[=, Math, ., max, (, maximum, ,, uvalue, ), ;, }, }, }, else, {, for, (, int, series, =]
[., max, (, maximum, ,, uvalue, ), ;, }, }, }, else, {, for, (, int, series, =, 0, ;]
[., max, (, maximum, ,, uvalue, ), ;, }, }, }, else, {, for, (, int, series, =, 0, ;]
[(, maximum, ,, uvalue, ), ;, }, }, }, else, {, for, (, int, series, =, 0, ;, series, <]
[,, uvalue, ), ;, }, }, }, else, {, for, (, int, series, =, 0, ;, series, <, seriesCount, ;]
[,, uvalue, ), ;, }, }, }, else, {, for, (, int, series, =, 0, ;, series, <, seriesCount, ;]
[else, {, for, (, int, series, =, 0, ;, series, <, seriesCount, ;, series, ++, ), {, int, itemCount, =]
[else, {, for, (, int, series, =, 0, ;, series, <, seriesCount, ;, series, ++, ), {, int, itemCount, =]
[int, series, =, 0, ;, series, <, seriesCount, ;, series, ++, ), {, int, itemCount, =, dataset, ., getItemCount, (]
[;, series, ++, ), {, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int, item, =]
[++, ), {, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int, item, =, 0, ;]
[++, ), {, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int, item, =, 0, ;]
[{, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int, item, =, 0, ;, item, <]
[itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int, item, =, 0, ;, item, <, itemCount, ;]
[itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int, item, =, 0, ;, item, <, itemCount, ;]
[getItemCount, (, series, ), ;, for, (, int, item, =, 0, ;, item, <, itemCount, ;, item, ++, ), {]
[series, ), ;, for, (, int, item, =, 0, ;, item, <, itemCount, ;, item, ++, ), {, lvalue, =]
[series, ), ;, for, (, int, item, =, 0, ;, item, <, itemCount, ;, item, ++, ), {, lvalue, =]
[(, int, item, =, 0, ;, item, <, itemCount, ;, item, ++, ), {, lvalue, =, dataset, ., getXValue, (]
[item, =, 0, ;, item, <, itemCount, ;, item, ++, ), {, lvalue, =, dataset, ., getXValue, (, series, ,]
[;, item, <, itemCount, ;, item, ++, ), {, lvalue, =, dataset, ., getXValue, (, series, ,, item, ), ;]
[<, itemCount, ;, item, ++, ), {, lvalue, =, dataset, ., getXValue, (, series, ,, item, ), ;, uvalue, =]
[;, item, ++, ), {, lvalue, =, dataset, ., getXValue, (, series, ,, item, ), ;, uvalue, =, lvalue, ;]
[++, ), {, lvalue, =, dataset, ., getXValue, (, series, ,, item, ), ;, uvalue, =, lvalue, ;, minimum, =]
[++, ), {, lvalue, =, dataset, ., getXValue, (, series, ,, item, ), ;, uvalue, =, lvalue, ;, minimum, =]
[=, dataset, ., getXValue, (, series, ,, item, ), ;, uvalue, =, lvalue, ;, minimum, =, Math, ., min, (]
[., getXValue, (, series, ,, item, ), ;, uvalue, =, lvalue, ;, minimum, =, Math, ., min, (, minimum, ,]
[series, ,, item, ), ;, uvalue, =, lvalue, ;, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;]
[item, ), ;, uvalue, =, lvalue, ;, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum, =]
[item, ), ;, uvalue, =, lvalue, ;, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum, =]
[=, lvalue, ;, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum, =, Math, ., max, (]
[;, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum, =, Math, ., max, (, maximum, ,]
[,, lvalue, ), ;, maximum, =, Math, ., max, (, maximum, ,, uvalue, ), ;, }, }, }, if, (]
[,, lvalue, ), ;, maximum, =, Math, ., max, (, maximum, ,, uvalue, ), ;, }, }, }, if, (]
[), ;, maximum, =, Math, ., max, (, maximum, ,, uvalue, ), ;, }, }, }, if, (, minimum, >]
[Math, ., max, (, maximum, ,, uvalue, ), ;, }, }, }, if, (, minimum, >, maximum, ), {, return]
[uvalue, ), ;, }, }, }, if, (, minimum, >, maximum, ), {, return, null, ;, }, else, {, return]
[}, }, }, if, (, minimum, >, maximum, ), {, return, null, ;, }, else, {, return, new, Range, (]
[}, if, (, minimum, >, maximum, ), {, return, null, ;, }, else, {, return, new, Range, (, minimum, ,]
[new, Range, (, minimum, ,, maximum, ), ;, }, }, public, Range, findRangeBounds, (, XYDataset, dataset, ), {, if, (]
[new, Range, (, minimum, ,, maximum, ), ;, }, }, public, Range, findRangeBounds, (, XYDataset, dataset, ), {, if, (]
[(, minimum, ,, maximum, ), ;, }, }, public, Range, findRangeBounds, (, XYDataset, dataset, ), {, if, (, dataset, ==]
[), ;, }, }, public, Range, findRangeBounds, (, XYDataset, dataset, ), {, if, (, dataset, ==, null, ), {, throw]
[}, public, Range, findRangeBounds, (, XYDataset, dataset, ), {, if, (, dataset, ==, null, ), {, throw, new, IllegalArgumentException, (]
[), {, if, (, dataset, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'dataset' argument.", ), ;, }, double, minimum, =]
[), {, if, (, dataset, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'dataset' argument.", ), ;, }, double, minimum, =]
[), {, throw, new, IllegalArgumentException, (, "Null 'dataset' argument.", ), ;, }, double, minimum, =, Double, ., POSITIVE_INFINITY, ;, double, maximum, =]
[), {, throw, new, IllegalArgumentException, (, "Null 'dataset' argument.", ), ;, }, double, minimum, =, Double, ., POSITIVE_INFINITY, ;, double, maximum, =]
[), ;, }, double, minimum, =, Double, ., POSITIVE_INFINITY, ;, double, maximum, =, Double, ., NEGATIVE_INFINITY, ;, int, seriesCount, =]
[), ;, }, double, minimum, =, Double, ., POSITIVE_INFINITY, ;, double, maximum, =, Double, ., NEGATIVE_INFINITY, ;, int, seriesCount, =]
[., NEGATIVE_INFINITY, ;, int, seriesCount, =, dataset, ., getSeriesCount, (, ), ;, double, lvalue, ;, double, uvalue, ;, if, (]
[., NEGATIVE_INFINITY, ;, int, seriesCount, =, dataset, ., getSeriesCount, (, ), ;, double, lvalue, ;, double, uvalue, ;, if, (]
[getSeriesCount, (, ), ;, double, lvalue, ;, double, uvalue, ;, if, (, dataset, instanceof, VectorXYDataset, ), {, VectorXYDataset, vdataset, =]
[;, double, lvalue, ;, double, uvalue, ;, if, (, dataset, instanceof, VectorXYDataset, ), {, VectorXYDataset, vdataset, =, (, VectorXYDataset, )]
[if, (, dataset, instanceof, VectorXYDataset, ), {, VectorXYDataset, vdataset, =, (, VectorXYDataset, ), dataset, ;, for, (, int, series, =]
[dataset, instanceof, VectorXYDataset, ), {, VectorXYDataset, vdataset, =, (, VectorXYDataset, ), dataset, ;, for, (, int, series, =, 0, ;]
[dataset, instanceof, VectorXYDataset, ), {, VectorXYDataset, vdataset, =, (, VectorXYDataset, ), dataset, ;, for, (, int, series, =, 0, ;]
[VectorXYDataset, ), {, VectorXYDataset, vdataset, =, (, VectorXYDataset, ), dataset, ;, for, (, int, series, =, 0, ;, series, <]
[{, VectorXYDataset, vdataset, =, (, VectorXYDataset, ), dataset, ;, for, (, int, series, =, 0, ;, series, <, seriesCount, ;]
[{, VectorXYDataset, vdataset, =, (, VectorXYDataset, ), dataset, ;, for, (, int, series, =, 0, ;, series, <, seriesCount, ;]
[dataset, ;, for, (, int, series, =, 0, ;, series, <, seriesCount, ;, series, ++, ), {, int, itemCount, =]
[dataset, ;, for, (, int, series, =, 0, ;, series, <, seriesCount, ;, series, ++, ), {, int, itemCount, =]
[int, series, =, 0, ;, series, <, seriesCount, ;, series, ++, ), {, int, itemCount, =, dataset, ., getItemCount, (]
[;, series, ++, ), {, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int, item, =]
[++, ), {, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int, item, =, 0, ;]
[++, ), {, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int, item, =, 0, ;]
[{, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int, item, =, 0, ;, item, <]
[itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int, item, =, 0, ;, item, <, itemCount, ;]
[itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int, item, =, 0, ;, item, <, itemCount, ;]
[), ;, for, (, int, item, =, 0, ;, item, <, itemCount, ;, item, ++, ), {, double, delta, =]
[), ;, for, (, int, item, =, 0, ;, item, <, itemCount, ;, item, ++, ), {, double, delta, =]
[int, item, =, 0, ;, item, <, itemCount, ;, item, ++, ), {, double, delta, =, vdataset, ., getVectorYValue, (]
[=, 0, ;, item, <, itemCount, ;, item, ++, ), {, double, delta, =, vdataset, ., getVectorYValue, (, series, ,]
[itemCount, ;, item, ++, ), {, double, delta, =, vdataset, ., getVectorYValue, (, series, ,, item, ), ;, if, (]
[itemCount, ;, item, ++, ), {, double, delta, =, vdataset, ., getVectorYValue, (, series, ,, item, ), ;, if, (]
[item, ++, ), {, double, delta, =, vdataset, ., getVectorYValue, (, series, ,, item, ), ;, if, (, delta, <]
[{, double, delta, =, vdataset, ., getVectorYValue, (, series, ,, item, ), ;, if, (, delta, <, 0.0, ), {]
[delta, =, vdataset, ., getVectorYValue, (, series, ,, item, ), ;, if, (, delta, <, 0.0, ), {, uvalue, =]
[delta, =, vdataset, ., getVectorYValue, (, series, ,, item, ), ;, if, (, delta, <, 0.0, ), {, uvalue, =]
[getVectorYValue, (, series, ,, item, ), ;, if, (, delta, <, 0.0, ), {, uvalue, =, vdataset, ., getYValue, (]
[series, ,, item, ), ;, if, (, delta, <, 0.0, ), {, uvalue, =, vdataset, ., getYValue, (, series, ,]
[), ;, if, (, delta, <, 0.0, ), {, uvalue, =, vdataset, ., getYValue, (, series, ,, item, ), ;]
[if, (, delta, <, 0.0, ), {, uvalue, =, vdataset, ., getYValue, (, series, ,, item, ), ;, lvalue, =]
[if, (, delta, <, 0.0, ), {, uvalue, =, vdataset, ., getYValue, (, series, ,, item, ), ;, lvalue, =]
[delta, <, 0.0, ), {, uvalue, =, vdataset, ., getYValue, (, series, ,, item, ), ;, lvalue, =, uvalue, +]
[uvalue, =, vdataset, ., getYValue, (, series, ,, item, ), ;, lvalue, =, uvalue, +, delta, ;, }, else, {]
[vdataset, ., getYValue, (, series, ,, item, ), ;, lvalue, =, uvalue, +, delta, ;, }, else, {, lvalue, =]
[vdataset, ., getYValue, (, series, ,, item, ), ;, lvalue, =, uvalue, +, delta, ;, }, else, {, lvalue, =]
[series, ,, item, ), ;, lvalue, =, uvalue, +, delta, ;, }, else, {, lvalue, =, vdataset, ., getYValue, (]
[item, ), ;, lvalue, =, uvalue, +, delta, ;, }, else, {, lvalue, =, vdataset, ., getYValue, (, series, ,]
[lvalue, =, uvalue, +, delta, ;, }, else, {, lvalue, =, vdataset, ., getYValue, (, series, ,, item, ), ;]
[uvalue, +, delta, ;, }, else, {, lvalue, =, vdataset, ., getYValue, (, series, ,, item, ), ;, uvalue, =]
[uvalue, +, delta, ;, }, else, {, lvalue, =, vdataset, ., getYValue, (, series, ,, item, ), ;, uvalue, =]
[delta, ;, }, else, {, lvalue, =, vdataset, ., getYValue, (, series, ,, item, ), ;, uvalue, =, lvalue, +]
[else, {, lvalue, =, vdataset, ., getYValue, (, series, ,, item, ), ;, uvalue, =, lvalue, +, delta, ;, }]
[lvalue, =, vdataset, ., getYValue, (, series, ,, item, ), ;, uvalue, =, lvalue, +, delta, ;, }, minimum, =]
[lvalue, =, vdataset, ., getYValue, (, series, ,, item, ), ;, uvalue, =, lvalue, +, delta, ;, }, minimum, =]
[getYValue, (, series, ,, item, ), ;, uvalue, =, lvalue, +, delta, ;, }, minimum, =, Math, ., min, (]
[series, ,, item, ), ;, uvalue, =, lvalue, +, delta, ;, }, minimum, =, Math, ., min, (, minimum, ,]
[), ;, uvalue, =, lvalue, +, delta, ;, }, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;]
[uvalue, =, lvalue, +, delta, ;, }, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum, =]
[uvalue, =, lvalue, +, delta, ;, }, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum, =]
[delta, ;, }, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum, =, Math, ., max, (]
[}, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum, =, Math, ., max, (, maximum, ,]
[=, Math, ., max, (, maximum, ,, uvalue, ), ;, }, }, }, else, {, for, (, int, series, =]
[., max, (, maximum, ,, uvalue, ), ;, }, }, }, else, {, for, (, int, series, =, 0, ;]
[., max, (, maximum, ,, uvalue, ), ;, }, }, }, else, {, for, (, int, series, =, 0, ;]
[(, maximum, ,, uvalue, ), ;, }, }, }, else, {, for, (, int, series, =, 0, ;, series, <]
[,, uvalue, ), ;, }, }, }, else, {, for, (, int, series, =, 0, ;, series, <, seriesCount, ;]
[,, uvalue, ), ;, }, }, }, else, {, for, (, int, series, =, 0, ;, series, <, seriesCount, ;]
[else, {, for, (, int, series, =, 0, ;, series, <, seriesCount, ;, series, ++, ), {, int, itemCount, =]
[else, {, for, (, int, series, =, 0, ;, series, <, seriesCount, ;, series, ++, ), {, int, itemCount, =]
[int, series, =, 0, ;, series, <, seriesCount, ;, series, ++, ), {, int, itemCount, =, dataset, ., getItemCount, (]
[;, series, ++, ), {, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int, item, =]
[++, ), {, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int, item, =, 0, ;]
[++, ), {, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int, item, =, 0, ;]
[{, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int, item, =, 0, ;, item, <]
[itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int, item, =, 0, ;, item, <, itemCount, ;]
[itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int, item, =, 0, ;, item, <, itemCount, ;]
[getItemCount, (, series, ), ;, for, (, int, item, =, 0, ;, item, <, itemCount, ;, item, ++, ), {]
[series, ), ;, for, (, int, item, =, 0, ;, item, <, itemCount, ;, item, ++, ), {, lvalue, =]
[series, ), ;, for, (, int, item, =, 0, ;, item, <, itemCount, ;, item, ++, ), {, lvalue, =]
[(, int, item, =, 0, ;, item, <, itemCount, ;, item, ++, ), {, lvalue, =, dataset, ., getYValue, (]
[item, =, 0, ;, item, <, itemCount, ;, item, ++, ), {, lvalue, =, dataset, ., getYValue, (, series, ,]
[;, item, <, itemCount, ;, item, ++, ), {, lvalue, =, dataset, ., getYValue, (, series, ,, item, ), ;]
[<, itemCount, ;, item, ++, ), {, lvalue, =, dataset, ., getYValue, (, series, ,, item, ), ;, uvalue, =]
[;, item, ++, ), {, lvalue, =, dataset, ., getYValue, (, series, ,, item, ), ;, uvalue, =, lvalue, ;]
[++, ), {, lvalue, =, dataset, ., getYValue, (, series, ,, item, ), ;, uvalue, =, lvalue, ;, minimum, =]
[++, ), {, lvalue, =, dataset, ., getYValue, (, series, ,, item, ), ;, uvalue, =, lvalue, ;, minimum, =]
[=, dataset, ., getYValue, (, series, ,, item, ), ;, uvalue, =, lvalue, ;, minimum, =, Math, ., min, (]
[., getYValue, (, series, ,, item, ), ;, uvalue, =, lvalue, ;, minimum, =, Math, ., min, (, minimum, ,]
[series, ,, item, ), ;, uvalue, =, lvalue, ;, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;]
[item, ), ;, uvalue, =, lvalue, ;, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum, =]
[item, ), ;, uvalue, =, lvalue, ;, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum, =]
[=, lvalue, ;, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum, =, Math, ., max, (]
[;, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum, =, Math, ., max, (, maximum, ,]
[,, lvalue, ), ;, maximum, =, Math, ., max, (, maximum, ,, uvalue, ), ;, }, }, }, if, (]
[,, lvalue, ), ;, maximum, =, Math, ., max, (, maximum, ,, uvalue, ), ;, }, }, }, if, (]
[), ;, maximum, =, Math, ., max, (, maximum, ,, uvalue, ), ;, }, }, }, if, (, minimum, >]
[Math, ., max, (, maximum, ,, uvalue, ), ;, }, }, }, if, (, minimum, >, maximum, ), {, return]
[uvalue, ), ;, }, }, }, if, (, minimum, >, maximum, ), {, return, null, ;, }, else, {, return]
[}, }, }, if, (, minimum, >, maximum, ), {, return, null, ;, }, else, {, return, new, Range, (]
[}, if, (, minimum, >, maximum, ), {, return, null, ;, }, else, {, return, new, Range, (, minimum, ,]
[,, XYDataset, dataset, ,, int, series, ,, int, item, ,, boolean, selected, ,, int, pass, ), {, double, x, =]
[,, XYDataset, dataset, ,, int, series, ,, int, item, ,, boolean, selected, ,, int, pass, ), {, double, x, =]
[int, series, ,, int, item, ,, boolean, selected, ,, int, pass, ), {, double, x, =, dataset, ., getXValue, (]
[,, int, item, ,, boolean, selected, ,, int, pass, ), {, double, x, =, dataset, ., getXValue, (, series, ,]
[,, int, pass, ), {, double, x, =, dataset, ., getXValue, (, series, ,, item, ), ;, double, y, =]
[,, int, pass, ), {, double, x, =, dataset, ., getXValue, (, series, ,, item, ), ;, double, y, =]
[{, double, x, =, dataset, ., getXValue, (, series, ,, item, ), ;, double, y, =, dataset, ., getYValue, (]
[x, =, dataset, ., getXValue, (, series, ,, item, ), ;, double, y, =, dataset, ., getYValue, (, series, ,]
[series, ,, item, ), ;, double, y, =, dataset, ., getYValue, (, series, ,, item, ), ;, double, dx, =]
[double, y, =, dataset, ., getYValue, (, series, ,, item, ), ;, double, dx, =, 0.0, ;, double, dy, =]
[., getYValue, (, series, ,, item, ), ;, double, dx, =, 0.0, ;, double, dy, =, 0.0, ;, if, (]
[., getYValue, (, series, ,, item, ), ;, double, dx, =, 0.0, ;, double, dy, =, 0.0, ;, if, (]
[item, ), ;, double, dx, =, 0.0, ;, double, dy, =, 0.0, ;, if, (, dataset, instanceof, VectorXYDataset, ), {]
[;, double, dx, =, 0.0, ;, double, dy, =, 0.0, ;, if, (, dataset, instanceof, VectorXYDataset, ), {, dx, =]
[;, double, dx, =, 0.0, ;, double, dy, =, 0.0, ;, if, (, dataset, instanceof, VectorXYDataset, ), {, dx, =]
[double, dx, =, 0.0, ;, double, dy, =, 0.0, ;, if, (, dataset, instanceof, VectorXYDataset, ), {, dx, =, (]
[0.0, ;, double, dy, =, 0.0, ;, if, (, dataset, instanceof, VectorXYDataset, ), {, dx, =, (, (, VectorXYDataset, )]
[0.0, ;, if, (, dataset, instanceof, VectorXYDataset, ), {, dx, =, (, (, VectorXYDataset, ), dataset, ), ., getVectorXValue, (]
[if, (, dataset, instanceof, VectorXYDataset, ), {, dx, =, (, (, VectorXYDataset, ), dataset, ), ., getVectorXValue, (, series, ,]
[instanceof, VectorXYDataset, ), {, dx, =, (, (, VectorXYDataset, ), dataset, ), ., getVectorXValue, (, series, ,, item, ), ;]
[), {, dx, =, (, (, VectorXYDataset, ), dataset, ), ., getVectorXValue, (, series, ,, item, ), ;, dy, =]
[), {, dx, =, (, (, VectorXYDataset, ), dataset, ), ., getVectorXValue, (, series, ,, item, ), ;, dy, =]
[{, dx, =, (, (, VectorXYDataset, ), dataset, ), ., getVectorXValue, (, series, ,, item, ), ;, dy, =, (]
[(, (, VectorXYDataset, ), dataset, ), ., getVectorXValue, (, series, ,, item, ), ;, dy, =, (, (, VectorXYDataset, )]
[), ., getVectorXValue, (, series, ,, item, ), ;, dy, =, (, (, VectorXYDataset, ), dataset, ), ., getVectorYValue, (]
[getVectorXValue, (, series, ,, item, ), ;, dy, =, (, (, VectorXYDataset, ), dataset, ), ., getVectorYValue, (, series, ,]
[dy, =, (, (, VectorXYDataset, ), dataset, ), ., getVectorYValue, (, series, ,, item, ), ;, }, double, xx0, =]
[dy, =, (, (, VectorXYDataset, ), dataset, ), ., getVectorYValue, (, series, ,, item, ), ;, }, double, xx0, =]
[VectorXYDataset, ), dataset, ), ., getVectorYValue, (, series, ,, item, ), ;, }, double, xx0, =, domainAxis, ., valueToJava2D, (]
[dataset, ), ., getVectorYValue, (, series, ,, item, ), ;, }, double, xx0, =, domainAxis, ., valueToJava2D, (, x, ,]
[., getVectorYValue, (, series, ,, item, ), ;, }, double, xx0, =, domainAxis, ., valueToJava2D, (, x, ,, dataArea, ,]
[., getVectorYValue, (, series, ,, item, ), ;, }, double, xx0, =, domainAxis, ., valueToJava2D, (, x, ,, dataArea, ,]
[xx0, =, domainAxis, ., valueToJava2D, (, x, ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy0, =]
[xx0, =, domainAxis, ., valueToJava2D, (, x, ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy0, =]
[valueToJava2D, (, x, ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy0, =, rangeAxis, ., valueToJava2D, (]
[x, ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy0, =, rangeAxis, ., valueToJava2D, (, y, ,]
[dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy0, =, rangeAxis, ., valueToJava2D, (, y, ,, dataArea, ,]
[dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy0, =, rangeAxis, ., valueToJava2D, (, y, ,, dataArea, ,]
[yy0, =, rangeAxis, ., valueToJava2D, (, y, ,, dataArea, ,, plot, ., getRangeAxisEdge, (, ), ), ;, double, xx1, =]
[yy0, =, rangeAxis, ., valueToJava2D, (, y, ,, dataArea, ,, plot, ., getRangeAxisEdge, (, ), ), ;, double, xx1, =]
[valueToJava2D, (, y, ,, dataArea, ,, plot, ., getRangeAxisEdge, (, ), ), ;, double, xx1, =, domainAxis, ., valueToJava2D, (]
[valueToJava2D, (, y, ,, dataArea, ,, plot, ., getRangeAxisEdge, (, ), ), ;, double, xx1, =, domainAxis, ., valueToJava2D, (]
[y, ,, dataArea, ,, plot, ., getRangeAxisEdge, (, ), ), ;, double, xx1, =, domainAxis, ., valueToJava2D, (, x, +]
[dataArea, ,, plot, ., getRangeAxisEdge, (, ), ), ;, double, xx1, =, domainAxis, ., valueToJava2D, (, x, +, dx, ,]
[plot, ., getRangeAxisEdge, (, ), ), ;, double, xx1, =, domainAxis, ., valueToJava2D, (, x, +, dx, ,, dataArea, ,]
[plot, ., getRangeAxisEdge, (, ), ), ;, double, xx1, =, domainAxis, ., valueToJava2D, (, x, +, dx, ,, dataArea, ,]
[domainAxis, ., valueToJava2D, (, x, +, dx, ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy1, =]
[domainAxis, ., valueToJava2D, (, x, +, dx, ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy1, =]
[x, +, dx, ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy1, =, rangeAxis, ., valueToJava2D, (]
[x, +, dx, ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy1, =, rangeAxis, ., valueToJava2D, (]
[dx, ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy1, =, rangeAxis, ., valueToJava2D, (, y, +]
[dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy1, =, rangeAxis, ., valueToJava2D, (, y, +, dy, ,]
[plot, ., getDomainAxisEdge, (, ), ), ;, double, yy1, =, rangeAxis, ., valueToJava2D, (, y, +, dy, ,, dataArea, ,]
[plot, ., getDomainAxisEdge, (, ), ), ;, double, yy1, =, rangeAxis, ., valueToJava2D, (, y, +, dy, ,, dataArea, ,]
[(, y, +, dy, ,, dataArea, ,, plot, ., getRangeAxisEdge, (, ), ), ;, Line2D, line, ;, PlotOrientation, orientation, =]
[(, y, +, dy, ,, dataArea, ,, plot, ., getRangeAxisEdge, (, ), ), ;, Line2D, line, ;, PlotOrientation, orientation, =]
[., getRangeAxisEdge, (, ), ), ;, Line2D, line, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (]
[., getRangeAxisEdge, (, ), ), ;, Line2D, line, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (]
[), ;, Line2D, line, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ., equals, (]
[), ;, Line2D, line, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ., equals, (]
[orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ., equals, (, PlotOrientation, ., HORIZONTAL, ), ), {]
[plot, ., getOrientation, (, ), ;, if, (, orientation, ., equals, (, PlotOrientation, ., HORIZONTAL, ), ), {, line, =]
[;, if, (, orientation, ., equals, (, PlotOrientation, ., HORIZONTAL, ), ), {, line, =, new, Line2D, ., Double, (]
[(, orientation, ., equals, (, PlotOrientation, ., HORIZONTAL, ), ), {, line, =, new, Line2D, ., Double, (, yy0, ,]
[., equals, (, PlotOrientation, ., HORIZONTAL, ), ), {, line, =, new, Line2D, ., Double, (, yy0, ,, xx0, ,]
[(, PlotOrientation, ., HORIZONTAL, ), ), {, line, =, new, Line2D, ., Double, (, yy0, ,, xx0, ,, yy1, ,]
[{, line, =, new, Line2D, ., Double, (, yy0, ,, xx0, ,, yy1, ,, xx1, ), ;, }, else, {]
[=, new, Line2D, ., Double, (, yy0, ,, xx0, ,, yy1, ,, xx1, ), ;, }, else, {, line, =]
[(, yy0, ,, xx0, ,, yy1, ,, xx1, ), ;, }, else, {, line, =, new, Line2D, ., Double, (]
[,, xx0, ,, yy1, ,, xx1, ), ;, }, else, {, line, =, new, Line2D, ., Double, (, xx0, ,]
[,, yy1, ,, xx1, ), ;, }, else, {, line, =, new, Line2D, ., Double, (, xx0, ,, yy0, ,]
[,, xx1, ), ;, }, else, {, line, =, new, Line2D, ., Double, (, xx0, ,, yy0, ,, xx1, ,]
[}, else, {, line, =, new, Line2D, ., Double, (, xx0, ,, yy0, ,, xx1, ,, yy1, ), ;, }]
[}, else, {, line, =, new, Line2D, ., Double, (, xx0, ,, yy0, ,, xx1, ,, yy1, ), ;, }]
[=, new, Line2D, ., Double, (, xx0, ,, yy0, ,, xx1, ,, yy1, ), ;, }, g2, ., setPaint, (]
[Line2D, ., Double, (, xx0, ,, yy0, ,, xx1, ,, yy1, ), ;, }, g2, ., setPaint, (, getItemPaint, (]
[Double, (, xx0, ,, yy0, ,, xx1, ,, yy1, ), ;, }, g2, ., setPaint, (, getItemPaint, (, series, ,]
[xx0, ,, yy0, ,, xx1, ,, yy1, ), ;, }, g2, ., setPaint, (, getItemPaint, (, series, ,, item, ,]
[xx1, ,, yy1, ), ;, }, g2, ., setPaint, (, getItemPaint, (, series, ,, item, ,, selected, ), ), ;]
[xx1, ,, yy1, ), ;, }, g2, ., setPaint, (, getItemPaint, (, series, ,, item, ,, selected, ), ), ;]
[;, }, g2, ., setPaint, (, getItemPaint, (, series, ,, item, ,, selected, ), ), ;, g2, ., setStroke, (]
[g2, ., setPaint, (, getItemPaint, (, series, ,, item, ,, selected, ), ), ;, g2, ., setStroke, (, getItemStroke, (]
[setPaint, (, getItemPaint, (, series, ,, item, ,, selected, ), ), ;, g2, ., setStroke, (, getItemStroke, (, series, ,]
[getItemPaint, (, series, ,, item, ,, selected, ), ), ;, g2, ., setStroke, (, getItemStroke, (, series, ,, item, ,]
[item, ,, selected, ), ), ;, g2, ., setStroke, (, getItemStroke, (, series, ,, item, ,, selected, ), ), ;]
[item, ,, selected, ), ), ;, g2, ., setStroke, (, getItemStroke, (, series, ,, item, ,, selected, ), ), ;]
[), ;, g2, ., setStroke, (, getItemStroke, (, series, ,, item, ,, selected, ), ), ;, g2, ., draw, (]
[getItemStroke, (, series, ,, item, ,, selected, ), ), ;, g2, ., draw, (, line, ), ;, double, dxx, =]
[(, series, ,, item, ,, selected, ), ), ;, g2, ., draw, (, line, ), ;, double, dxx, =, (]
[(, series, ,, item, ,, selected, ), ), ;, g2, ., draw, (, line, ), ;, double, dxx, =, (]
[,, item, ,, selected, ), ), ;, g2, ., draw, (, line, ), ;, double, dxx, =, (, xx1, -]
[;, g2, ., draw, (, line, ), ;, double, dxx, =, (, xx1, -, xx0, ), ;, double, dyy, =]
[g2, ., draw, (, line, ), ;, double, dxx, =, (, xx1, -, xx0, ), ;, double, dyy, =, (]
[g2, ., draw, (, line, ), ;, double, dxx, =, (, xx1, -, xx0, ), ;, double, dyy, =, (]
[draw, (, line, ), ;, double, dxx, =, (, xx1, -, xx0, ), ;, double, dyy, =, (, yy1, -]
[dxx, =, (, xx1, -, xx0, ), ;, double, dyy, =, (, yy1, -, yy0, ), ;, double, bx, =]
[dxx, =, (, xx1, -, xx0, ), ;, double, dyy, =, (, yy1, -, yy0, ), ;, double, bx, =]
[(, xx1, -, xx0, ), ;, double, dyy, =, (, yy1, -, yy0, ), ;, double, bx, =, xx0, +]
[(, xx1, -, xx0, ), ;, double, dyy, =, (, yy1, -, yy0, ), ;, double, bx, =, xx0, +]
[xx1, -, xx0, ), ;, double, dyy, =, (, yy1, -, yy0, ), ;, double, bx, =, xx0, +, (]
[xx1, -, xx0, ), ;, double, dyy, =, (, yy1, -, yy0, ), ;, double, bx, =, xx0, +, (]
[xx0, ), ;, double, dyy, =, (, yy1, -, yy0, ), ;, double, bx, =, xx0, +, (, 1.0, -]
[xx0, ), ;, double, dyy, =, (, yy1, -, yy0, ), ;, double, bx, =, xx0, +, (, 1.0, -]
[=, (, yy1, -, yy0, ), ;, double, bx, =, xx0, +, (, 1.0, -, this, ., baseLength, ), *]
[), ;, double, bx, =, xx0, +, (, 1.0, -, this, ., baseLength, ), *, dxx, ;, double, by, =]
[), ;, double, bx, =, xx0, +, (, 1.0, -, this, ., baseLength, ), *, dxx, ;, double, by, =]
[double, bx, =, xx0, +, (, 1.0, -, this, ., baseLength, ), *, dxx, ;, double, by, =, yy0, +]
[double, bx, =, xx0, +, (, 1.0, -, this, ., baseLength, ), *, dxx, ;, double, by, =, yy0, +]
[bx, =, xx0, +, (, 1.0, -, this, ., baseLength, ), *, dxx, ;, double, by, =, yy0, +, (]
[bx, =, xx0, +, (, 1.0, -, this, ., baseLength, ), *, dxx, ;, double, by, =, yy0, +, (]
[xx0, +, (, 1.0, -, this, ., baseLength, ), *, dxx, ;, double, by, =, yy0, +, (, 1.0, -]
[xx0, +, (, 1.0, -, this, ., baseLength, ), *, dxx, ;, double, by, =, yy0, +, (, 1.0, -]
[this, ., baseLength, ), *, dxx, ;, double, by, =, yy0, +, (, 1.0, -, this, ., baseLength, ), *]
[dxx, ;, double, by, =, yy0, +, (, 1.0, -, this, ., baseLength, ), *, dyy, ;, double, cx, =]
[dxx, ;, double, by, =, yy0, +, (, 1.0, -, this, ., baseLength, ), *, dyy, ;, double, cx, =]
[double, by, =, yy0, +, (, 1.0, -, this, ., baseLength, ), *, dyy, ;, double, cx, =, xx0, +]
[double, by, =, yy0, +, (, 1.0, -, this, ., baseLength, ), *, dyy, ;, double, cx, =, xx0, +]
[by, =, yy0, +, (, 1.0, -, this, ., baseLength, ), *, dyy, ;, double, cx, =, xx0, +, (]
[by, =, yy0, +, (, 1.0, -, this, ., baseLength, ), *, dyy, ;, double, cx, =, xx0, +, (]
[yy0, +, (, 1.0, -, this, ., baseLength, ), *, dyy, ;, double, cx, =, xx0, +, (, 1.0, -]
[yy0, +, (, 1.0, -, this, ., baseLength, ), *, dyy, ;, double, cx, =, xx0, +, (, 1.0, -]
[this, ., baseLength, ), *, dyy, ;, double, cx, =, xx0, +, (, 1.0, -, this, ., headLength, ), *]
[dyy, ;, double, cx, =, xx0, +, (, 1.0, -, this, ., headLength, ), *, dxx, ;, double, cy, =]
[dyy, ;, double, cx, =, xx0, +, (, 1.0, -, this, ., headLength, ), *, dxx, ;, double, cy, =]
[double, cx, =, xx0, +, (, 1.0, -, this, ., headLength, ), *, dxx, ;, double, cy, =, yy0, +]
[double, cx, =, xx0, +, (, 1.0, -, this, ., headLength, ), *, dxx, ;, double, cy, =, yy0, +]
[cx, =, xx0, +, (, 1.0, -, this, ., headLength, ), *, dxx, ;, double, cy, =, yy0, +, (]
[cx, =, xx0, +, (, 1.0, -, this, ., headLength, ), *, dxx, ;, double, cy, =, yy0, +, (]
[xx0, +, (, 1.0, -, this, ., headLength, ), *, dxx, ;, double, cy, =, yy0, +, (, 1.0, -]
[xx0, +, (, 1.0, -, this, ., headLength, ), *, dxx, ;, double, cy, =, yy0, +, (, 1.0, -]
[this, ., headLength, ), *, dxx, ;, double, cy, =, yy0, +, (, 1.0, -, this, ., headLength, ), *]
[dxx, ;, double, cy, =, yy0, +, (, 1.0, -, this, ., headLength, ), *, dyy, ;, double, angle, =]
[=, yy0, +, (, 1.0, -, this, ., headLength, ), *, dyy, ;, double, angle, =, 0.0, ;, if, (]
[=, yy0, +, (, 1.0, -, this, ., headLength, ), *, dyy, ;, double, angle, =, 0.0, ;, if, (]
[+, (, 1.0, -, this, ., headLength, ), *, dyy, ;, double, angle, =, 0.0, ;, if, (, dxx, !=]
[-, this, ., headLength, ), *, dyy, ;, double, angle, =, 0.0, ;, if, (, dxx, !=, 0.0, ), {]
[., headLength, ), *, dyy, ;, double, angle, =, 0.0, ;, if, (, dxx, !=, 0.0, ), {, angle, =]
[., headLength, ), *, dyy, ;, double, angle, =, 0.0, ;, if, (, dxx, !=, 0.0, ), {, angle, =]
[., headLength, ), *, dyy, ;, double, angle, =, 0.0, ;, if, (, dxx, !=, 0.0, ), {, angle, =]
[., headLength, ), *, dyy, ;, double, angle, =, 0.0, ;, if, (, dxx, !=, 0.0, ), {, angle, =]
[dyy, ;, double, angle, =, 0.0, ;, if, (, dxx, !=, 0.0, ), {, angle, =, Math, ., PI, /]
[double, angle, =, 0.0, ;, if, (, dxx, !=, 0.0, ), {, angle, =, Math, ., PI, /, 2.0, -]
[double, angle, =, 0.0, ;, if, (, dxx, !=, 0.0, ), {, angle, =, Math, ., PI, /, 2.0, -]
[;, if, (, dxx, !=, 0.0, ), {, angle, =, Math, ., PI, /, 2.0, -, Math, ., atan, (]
[;, if, (, dxx, !=, 0.0, ), {, angle, =, Math, ., PI, /, 2.0, -, Math, ., atan, (]
[(, dxx, !=, 0.0, ), {, angle, =, Math, ., PI, /, 2.0, -, Math, ., atan, (, dyy, /]
[=, Math, ., PI, /, 2.0, -, Math, ., atan, (, dyy, /, dxx, ), ;, }, double, deltaX, =]
[=, Math, ., PI, /, 2.0, -, Math, ., atan, (, dyy, /, dxx, ), ;, }, double, deltaX, =]
[., PI, /, 2.0, -, Math, ., atan, (, dyy, /, dxx, ), ;, }, double, deltaX, =, 2.0, *]
[., PI, /, 2.0, -, Math, ., atan, (, dyy, /, dxx, ), ;, }, double, deltaX, =, 2.0, *]
[-, Math, ., atan, (, dyy, /, dxx, ), ;, }, double, deltaX, =, 2.0, *, Math, ., cos, (]
[/, dxx, ), ;, }, double, deltaX, =, 2.0, *, Math, ., cos, (, angle, ), ;, double, deltaY, =]
[/, dxx, ), ;, }, double, deltaX, =, 2.0, *, Math, ., cos, (, angle, ), ;, double, deltaY, =]
[), ;, }, double, deltaX, =, 2.0, *, Math, ., cos, (, angle, ), ;, double, deltaY, =, 2.0, *]
[), ;, }, double, deltaX, =, 2.0, *, Math, ., cos, (, angle, ), ;, double, deltaY, =, 2.0, *]
[deltaX, =, 2.0, *, Math, ., cos, (, angle, ), ;, double, deltaY, =, 2.0, *, Math, ., sin, (]
[cos, (, angle, ), ;, double, deltaY, =, 2.0, *, Math, ., sin, (, angle, ), ;, double, leftx, =]
[cos, (, angle, ), ;, double, deltaY, =, 2.0, *, Math, ., sin, (, angle, ), ;, double, leftx, =]
[angle, ), ;, double, deltaY, =, 2.0, *, Math, ., sin, (, angle, ), ;, double, leftx, =, cx, +]
[=, 2.0, *, Math, ., sin, (, angle, ), ;, double, leftx, =, cx, +, deltaX, ;, double, lefty, =]
[=, 2.0, *, Math, ., sin, (, angle, ), ;, double, leftx, =, cx, +, deltaX, ;, double, lefty, =]
[*, Math, ., sin, (, angle, ), ;, double, leftx, =, cx, +, deltaX, ;, double, lefty, =, cy, -]
[angle, ), ;, double, leftx, =, cx, +, deltaX, ;, double, lefty, =, cy, -, deltaY, ;, double, rightx, =]
[angle, ), ;, double, leftx, =, cx, +, deltaX, ;, double, lefty, =, cy, -, deltaY, ;, double, rightx, =]
[;, double, leftx, =, cx, +, deltaX, ;, double, lefty, =, cy, -, deltaY, ;, double, rightx, =, cx, -]
[+, deltaX, ;, double, lefty, =, cy, -, deltaY, ;, double, rightx, =, cx, -, deltaX, ;, double, righty, =]
[+, deltaX, ;, double, lefty, =, cy, -, deltaY, ;, double, rightx, =, cx, -, deltaX, ;, double, righty, =]
[;, double, lefty, =, cy, -, deltaY, ;, double, rightx, =, cx, -, deltaX, ;, double, righty, =, cy, +]
[-, deltaY, ;, double, rightx, =, cx, -, deltaX, ;, double, righty, =, cy, +, deltaY, ;, GeneralPath, p, =]
[-, deltaX, ;, double, righty, =, cy, +, deltaY, ;, GeneralPath, p, =, new, GeneralPath, (, ), ;, if, (]
[-, deltaX, ;, double, righty, =, cy, +, deltaY, ;, GeneralPath, p, =, new, GeneralPath, (, ), ;, if, (]
[;, double, righty, =, cy, +, deltaY, ;, GeneralPath, p, =, new, GeneralPath, (, ), ;, if, (, orientation, ==]
[;, double, righty, =, cy, +, deltaY, ;, GeneralPath, p, =, new, GeneralPath, (, ), ;, if, (, orientation, ==]
[+, deltaY, ;, GeneralPath, p, =, new, GeneralPath, (, ), ;, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {]
[+, deltaY, ;, GeneralPath, p, =, new, GeneralPath, (, ), ;, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {]
[p, =, new, GeneralPath, (, ), ;, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, p, ., moveTo, (]
[GeneralPath, (, ), ;, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, p, ., moveTo, (, (, float, )]
[), ;, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, p, ., moveTo, (, (, float, ), xx1, ,]
[(, orientation, ==, PlotOrientation, ., VERTICAL, ), {, p, ., moveTo, (, (, float, ), xx1, ,, (, float, )]
[PlotOrientation, ., VERTICAL, ), {, p, ., moveTo, (, (, float, ), xx1, ,, (, float, ), yy1, ), ;]
[PlotOrientation, ., VERTICAL, ), {, p, ., moveTo, (, (, float, ), xx1, ,, (, float, ), yy1, ), ;]
[{, p, ., moveTo, (, (, float, ), xx1, ,, (, float, ), yy1, ), ;, p, ., lineTo, (]
[moveTo, (, (, float, ), xx1, ,, (, float, ), yy1, ), ;, p, ., lineTo, (, (, float, )]
[(, float, ), xx1, ,, (, float, ), yy1, ), ;, p, ., lineTo, (, (, float, ), rightx, ,]
[xx1, ,, (, float, ), yy1, ), ;, p, ., lineTo, (, (, float, ), rightx, ,, (, float, )]
[float, ), yy1, ), ;, p, ., lineTo, (, (, float, ), rightx, ,, (, float, ), righty, ), ;]
[float, ), yy1, ), ;, p, ., lineTo, (, (, float, ), rightx, ,, (, float, ), righty, ), ;]
[;, p, ., lineTo, (, (, float, ), rightx, ,, (, float, ), righty, ), ;, p, ., lineTo, (]
[lineTo, (, (, float, ), rightx, ,, (, float, ), righty, ), ;, p, ., lineTo, (, (, float, )]
[(, float, ), rightx, ,, (, float, ), righty, ), ;, p, ., lineTo, (, (, float, ), bx, ,]
[rightx, ,, (, float, ), righty, ), ;, p, ., lineTo, (, (, float, ), bx, ,, (, float, )]
[float, ), righty, ), ;, p, ., lineTo, (, (, float, ), bx, ,, (, float, ), by, ), ;]
[float, ), righty, ), ;, p, ., lineTo, (, (, float, ), bx, ,, (, float, ), by, ), ;]
[;, p, ., lineTo, (, (, float, ), bx, ,, (, float, ), by, ), ;, p, ., lineTo, (]
[lineTo, (, (, float, ), bx, ,, (, float, ), by, ), ;, p, ., lineTo, (, (, float, )]
[(, float, ), bx, ,, (, float, ), by, ), ;, p, ., lineTo, (, (, float, ), leftx, ,]
[bx, ,, (, float, ), by, ), ;, p, ., lineTo, (, (, float, ), leftx, ,, (, float, )]
[), ;, p, ., lineTo, (, (, float, ), leftx, ,, (, float, ), lefty, ), ;, }, else, {]
[), ;, p, ., lineTo, (, (, float, ), leftx, ,, (, float, ), lefty, ), ;, }, else, {]
[lineTo, (, (, float, ), leftx, ,, (, float, ), lefty, ), ;, }, else, {, p, ., moveTo, (]
[float, ), leftx, ,, (, float, ), lefty, ), ;, }, else, {, p, ., moveTo, (, (, float, )]
[leftx, ,, (, float, ), lefty, ), ;, }, else, {, p, ., moveTo, (, (, float, ), yy1, ,]
[float, ), lefty, ), ;, }, else, {, p, ., moveTo, (, (, float, ), yy1, ,, (, float, )]
[), ;, }, else, {, p, ., moveTo, (, (, float, ), yy1, ,, (, float, ), xx1, ), ;]
[), ;, }, else, {, p, ., moveTo, (, (, float, ), yy1, ,, (, float, ), xx1, ), ;]
[{, p, ., moveTo, (, (, float, ), yy1, ,, (, float, ), xx1, ), ;, p, ., lineTo, (]
[moveTo, (, (, float, ), yy1, ,, (, float, ), xx1, ), ;, p, ., lineTo, (, (, float, )]
[(, float, ), yy1, ,, (, float, ), xx1, ), ;, p, ., lineTo, (, (, float, ), righty, ,]
[yy1, ,, (, float, ), xx1, ), ;, p, ., lineTo, (, (, float, ), righty, ,, (, float, )]
[float, ), xx1, ), ;, p, ., lineTo, (, (, float, ), righty, ,, (, float, ), rightx, ), ;]
[float, ), xx1, ), ;, p, ., lineTo, (, (, float, ), righty, ,, (, float, ), rightx, ), ;]
[;, p, ., lineTo, (, (, float, ), righty, ,, (, float, ), rightx, ), ;, p, ., lineTo, (]
[lineTo, (, (, float, ), righty, ,, (, float, ), rightx, ), ;, p, ., lineTo, (, (, float, )]
[(, float, ), righty, ,, (, float, ), rightx, ), ;, p, ., lineTo, (, (, float, ), by, ,]
[righty, ,, (, float, ), rightx, ), ;, p, ., lineTo, (, (, float, ), by, ,, (, float, )]
[float, ), rightx, ), ;, p, ., lineTo, (, (, float, ), by, ,, (, float, ), bx, ), ;]
[float, ), rightx, ), ;, p, ., lineTo, (, (, float, ), by, ,, (, float, ), bx, ), ;]
[;, p, ., lineTo, (, (, float, ), by, ,, (, float, ), bx, ), ;, p, ., lineTo, (]
[lineTo, (, (, float, ), by, ,, (, float, ), bx, ), ;, p, ., lineTo, (, (, float, )]
[(, float, ), by, ,, (, float, ), bx, ), ;, p, ., lineTo, (, (, float, ), lefty, ,]
[by, ,, (, float, ), bx, ), ;, p, ., lineTo, (, (, float, ), lefty, ,, (, float, )]
[), bx, ), ;, p, ., lineTo, (, (, float, ), lefty, ,, (, float, ), leftx, ), ;, }]
[), bx, ), ;, p, ., lineTo, (, (, float, ), lefty, ,, (, float, ), leftx, ), ;, }]
[lineTo, (, (, float, ), lefty, ,, (, float, ), leftx, ), ;, }, p, ., closePath, (, ), ;]
[lineTo, (, (, float, ), lefty, ,, (, float, ), leftx, ), ;, }, p, ., closePath, (, ), ;]
[), lefty, ,, (, float, ), leftx, ), ;, }, p, ., closePath, (, ), ;, g2, ., draw, (]
[leftx, ), ;, }, p, ., closePath, (, ), ;, g2, ., draw, (, p, ), ;, EntityCollection, entities, =]
[p, ., closePath, (, ), ;, g2, ., draw, (, p, ), ;, EntityCollection, entities, =, null, ;, if, (]
[p, ., closePath, (, ), ;, g2, ., draw, (, p, ), ;, EntityCollection, entities, =, null, ;, if, (]
[p, ., closePath, (, ), ;, g2, ., draw, (, p, ), ;, EntityCollection, entities, =, null, ;, if, (]
[g2, ., draw, (, p, ), ;, EntityCollection, entities, =, null, ;, if, (, state, ., getInfo, (, ), !=]
[(, p, ), ;, EntityCollection, entities, =, null, ;, if, (, state, ., getInfo, (, ), !=, null, ), {]
[), ;, EntityCollection, entities, =, null, ;, if, (, state, ., getInfo, (, ), !=, null, ), {, entities, =]
[), ;, EntityCollection, entities, =, null, ;, if, (, state, ., getInfo, (, ), !=, null, ), {, entities, =]
[), ;, EntityCollection, entities, =, null, ;, if, (, state, ., getInfo, (, ), !=, null, ), {, entities, =]
[), ;, EntityCollection, entities, =, null, ;, if, (, state, ., getInfo, (, ), !=, null, ), {, entities, =]
[), {, entities, =, state, ., getInfo, (, ), ., getOwner, (, ), ., getEntityCollection, (, ), ;, if, (]
[), {, entities, =, state, ., getInfo, (, ), ., getOwner, (, ), ., getEntityCollection, (, ), ;, if, (]
[entities, =, state, ., getInfo, (, ), ., getOwner, (, ), ., getEntityCollection, (, ), ;, if, (, entities, !=]
[., getInfo, (, ), ., getOwner, (, ), ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {]
[(, ), ., getOwner, (, ), ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (]
[., getOwner, (, ), ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,]
[., getOwner, (, ), ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,]
[(, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, line, ., getBounds, (, ), ,]
[;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, line, ., getBounds, (, ), ,, dataset, ,]
[(, entities, !=, null, ), {, addEntity, (, entities, ,, line, ., getBounds, (, ), ,, dataset, ,, series, ,]
[!=, null, ), {, addEntity, (, entities, ,, line, ., getBounds, (, ), ,, dataset, ,, series, ,, item, ,]
[), {, addEntity, (, entities, ,, line, ., getBounds, (, ), ,, dataset, ,, series, ,, item, ,, selected, ,]
[addEntity, (, entities, ,, line, ., getBounds, (, ), ,, dataset, ,, series, ,, item, ,, selected, ,, 0.0, ,]
[selected, ,, 0.0, ,, 0.0, ), ;, }, }, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[selected, ,, 0.0, ,, 0.0, ), ;, }, }, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[0.0, ,, 0.0, ), ;, }, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[;, }, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, VectorRenderer, ), ), {, return]
[true, ;, }, if, (, !, (, obj, instanceof, VectorRenderer, ), ), {, return, false, ;, }, VectorRenderer, that, =]
[if, (, !, (, obj, instanceof, VectorRenderer, ), ), {, return, false, ;, }, VectorRenderer, that, =, (, VectorRenderer, )]
[obj, instanceof, VectorRenderer, ), ), {, return, false, ;, }, VectorRenderer, that, =, (, VectorRenderer, ), obj, ;, if, (]
[obj, instanceof, VectorRenderer, ), ), {, return, false, ;, }, VectorRenderer, that, =, (, VectorRenderer, ), obj, ;, if, (]
[obj, instanceof, VectorRenderer, ), ), {, return, false, ;, }, VectorRenderer, that, =, (, VectorRenderer, ), obj, ;, if, (]
[), {, return, false, ;, }, VectorRenderer, that, =, (, VectorRenderer, ), obj, ;, if, (, this, ., baseLength, !=]
[), {, return, false, ;, }, VectorRenderer, that, =, (, VectorRenderer, ), obj, ;, if, (, this, ., baseLength, !=]
[VectorRenderer, that, =, (, VectorRenderer, ), obj, ;, if, (, this, ., baseLength, !=, that, ., baseLength, ), {, return]
[), obj, ;, if, (, this, ., baseLength, !=, that, ., baseLength, ), {, return, false, ;, }, if, (]
[), obj, ;, if, (, this, ., baseLength, !=, that, ., baseLength, ), {, return, false, ;, }, if, (]
[), obj, ;, if, (, this, ., baseLength, !=, that, ., baseLength, ), {, return, false, ;, }, if, (]
[(, this, ., baseLength, !=, that, ., baseLength, ), {, return, false, ;, }, if, (, this, ., headLength, !=]
[(, this, ., baseLength, !=, that, ., baseLength, ), {, return, false, ;, }, if, (, this, ., headLength, !=]
[., baseLength, ), {, return, false, ;, }, if, (, this, ., headLength, !=, that, ., headLength, ), {, return]
[return, false, ;, }, if, (, this, ., headLength, !=, that, ., headLength, ), {, return, false, ;, }, return]
[return, false, ;, }, if, (, this, ., headLength, !=, that, ., headLength, ), {, return, false, ;, }, return]
[if, (, this, ., headLength, !=, that, ., headLength, ), {, return, false, ;, }, return, super, ., equals, (]
[;, }, return, super, ., equals, (, obj, ), ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return]
[;, }, return, super, ., equals, (, obj, ), ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return]
