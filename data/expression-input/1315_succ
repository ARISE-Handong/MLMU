[;, private, List, blocks, ;, private, Arrangement, arrangement, ;, public, BlockContainer, (, ), {, this, (, new, BorderArrangement, (, )]
[), ;, }, public, BlockContainer, (, Arrangement, arrangement, ), {, if, (, arrangement, ==, null, ), {, throw, new, IllegalArgumentException]
[), {, throw, new, IllegalArgumentException, (, "Null 'arrangement' argument.", ), ;, }, this, ., arrangement, =, arrangement, ;, this, ., blocks, =]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'arrangement' argument.", ), ;, }, this, ., arrangement, =, arrangement, ;, this, .]
[), {, throw, new, IllegalArgumentException, (, "Null 'arrangement' argument.", ), ;, }, this, ., arrangement, =, arrangement, ;, this, ., blocks, =]
[;, }, this, ., arrangement, =, arrangement, ;, this, ., blocks, =, new, ArrayList, (, ), ;, }, public, Arrangement]
[), ;, }, this, ., arrangement, =, arrangement, ;, this, ., blocks, =, new, ArrayList, (, ), ;, }, public]
[=, arrangement, ;, this, ., blocks, =, new, ArrayList, (, ), ;, }, public, Arrangement, getArrangement, (, ), {, return]
[., arrangement, =, arrangement, ;, this, ., blocks, =, new, ArrayList, (, ), ;, }, public, Arrangement, getArrangement, (, )]
[;, this, ., blocks, =, new, ArrayList, (, ), ;, }, public, Arrangement, getArrangement, (, ), {, return, this, .]
[=, new, ArrayList, (, ), ;, }, public, Arrangement, getArrangement, (, ), {, return, this, ., arrangement, ;, }, public]
[., blocks, =, new, ArrayList, (, ), ;, }, public, Arrangement, getArrangement, (, ), {, return, this, ., arrangement, ;]
[;, }, public, Arrangement, getArrangement, (, ), {, return, this, ., arrangement, ;, }, public, void, setArrangement, (, Arrangement, arrangement]
[;, }, public, void, setArrangement, (, Arrangement, arrangement, ), {, if, (, arrangement, ==, null, ), {, throw, new, IllegalArgumentException]
[., arrangement, ;, }, public, void, setArrangement, (, Arrangement, arrangement, ), {, if, (, arrangement, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'arrangement' argument.", ), ;, }, this, ., arrangement, =, arrangement, ;, }, public, boolean, isEmpty]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'arrangement' argument.", ), ;, }, this, ., arrangement, =, arrangement, ;, }, public]
[), {, throw, new, IllegalArgumentException, (, "Null 'arrangement' argument.", ), ;, }, this, ., arrangement, =, arrangement, ;, }, public, boolean, isEmpty]
[;, }, this, ., arrangement, =, arrangement, ;, }, public, boolean, isEmpty, (, ), {, return, this, ., blocks, .]
[), ;, }, this, ., arrangement, =, arrangement, ;, }, public, boolean, isEmpty, (, ), {, return, this, ., blocks]
[=, arrangement, ;, }, public, boolean, isEmpty, (, ), {, return, this, ., blocks, ., isEmpty, (, ), ;, }]
[., arrangement, =, arrangement, ;, }, public, boolean, isEmpty, (, ), {, return, this, ., blocks, ., isEmpty, (, )]
[;, }, public, boolean, isEmpty, (, ), {, return, this, ., blocks, ., isEmpty, (, ), ;, }, public, List]
[;, }, public, List, getBlocks, (, ), {, return, Collections, ., unmodifiableList, (, this, ., blocks, ), ;, }, public]
[., isEmpty, (, ), ;, }, public, List, getBlocks, (, ), {, return, Collections, ., unmodifiableList, (, this, ., blocks]
[., blocks, ., isEmpty, (, ), ;, }, public, List, getBlocks, (, ), {, return, Collections, ., unmodifiableList, (, this]
[;, }, public, void, add, (, Block, block, ), {, add, (, block, ,, null, ), ;, }, public, void]
[., unmodifiableList, (, this, ., blocks, ), ;, }, public, void, add, (, Block, block, ), {, add, (, block]
[), ;, }, public, void, add, (, Block, block, ), {, add, (, block, ,, null, ), ;, }, public]
[., blocks, ), ;, }, public, void, add, (, Block, block, ), {, add, (, block, ,, null, ), ;]
[;, }, public, void, add, (, Block, block, ,, Object, key, ), {, this, ., blocks, ., add, (, block]
[,, null, ), ;, }, public, void, add, (, Block, block, ,, Object, key, ), {, this, ., blocks, .]
[), ;, }, public, void, add, (, Block, block, ,, Object, key, ), {, this, ., blocks, ., add, (]
[;, this, ., arrangement, ., add, (, block, ,, key, ), ;, }, public, void, clear, (, ), {, this]
[., add, (, block, ), ;, this, ., arrangement, ., add, (, block, ,, key, ), ;, }, public, void]
[., blocks, ., add, (, block, ), ;, this, ., arrangement, ., add, (, block, ,, key, ), ;, }]
[), ;, this, ., arrangement, ., add, (, block, ,, key, ), ;, }, public, void, clear, (, ), {]
[;, }, public, void, clear, (, ), {, this, ., blocks, ., clear, (, ), ;, this, ., arrangement, .]
[., add, (, block, ,, key, ), ;, }, public, void, clear, (, ), {, this, ., blocks, ., clear]
[., arrangement, ., add, (, block, ,, key, ), ;, }, public, void, clear, (, ), {, this, ., blocks]
[,, key, ), ;, }, public, void, clear, (, ), {, this, ., blocks, ., clear, (, ), ;, this]
[), ;, }, public, void, clear, (, ), {, this, ., blocks, ., clear, (, ), ;, this, ., arrangement]
[;, this, ., arrangement, ., clear, (, ), ;, }, public, Size2D, arrange, (, Graphics2D, g2, ,, RectangleConstraint, constraint, )]
[., clear, (, ), ;, this, ., arrangement, ., clear, (, ), ;, }, public, Size2D, arrange, (, Graphics2D, g2]
[., blocks, ., clear, (, ), ;, this, ., arrangement, ., clear, (, ), ;, }, public, Size2D, arrange, (]
[;, }, public, Size2D, arrange, (, Graphics2D, g2, ,, RectangleConstraint, constraint, ), {, return, this, ., arrangement, ., arrange, (]
[., clear, (, ), ;, }, public, Size2D, arrange, (, Graphics2D, g2, ,, RectangleConstraint, constraint, ), {, return, this, .]
[., arrangement, ., clear, (, ), ;, }, public, Size2D, arrange, (, Graphics2D, g2, ,, RectangleConstraint, constraint, ), {, return]
[;, }, public, void, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ), {, draw, (, g2, ,, area, ,, null]
[., arrange, (, this, ,, g2, ,, constraint, ), ;, }, public, void, draw, (, Graphics2D, g2, ,, Rectangle2D, area]
[., arrangement, ., arrange, (, this, ,, g2, ,, constraint, ), ;, }, public, void, draw, (, Graphics2D, g2, ,]
[,, g2, ,, constraint, ), ;, }, public, void, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ), {, draw, (]
[,, constraint, ), ;, }, public, void, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ), {, draw, (, g2, ,]
[), ;, }, public, void, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ), {, draw, (, g2, ,, area, ,]
[;, }, public, Object, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ,, Object, params, ), {, EntityBlockParams, ebp, =, null]
[,, area, ,, null, ), ;, }, public, Object, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ,, Object, params, )]
[,, null, ), ;, }, public, Object, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ,, Object, params, ), {, EntityBlockParams]
[), ;, }, public, Object, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ,, Object, params, ), {, EntityBlockParams, ebp, =]
[;, StandardEntityCollection, sec, =, null, ;, if, (, params, instanceof, EntityBlockParams, ), {, ebp, =, (, EntityBlockParams, ), params, ;]
[;, if, (, params, instanceof, EntityBlockParams, ), {, ebp, =, (, EntityBlockParams, ), params, ;, if, (, ebp, ., getGenerateEntities]
[), {, ebp, =, (, EntityBlockParams, ), params, ;, if, (, ebp, ., getGenerateEntities, (, ), ), {, sec, =]
[instanceof, EntityBlockParams, ), {, ebp, =, (, EntityBlockParams, ), params, ;, if, (, ebp, ., getGenerateEntities, (, ), ), {]
[=, (, EntityBlockParams, ), params, ;, if, (, ebp, ., getGenerateEntities, (, ), ), {, sec, =, new, StandardEntityCollection, (]
[;, if, (, ebp, ., getGenerateEntities, (, ), ), {, sec, =, new, StandardEntityCollection, (, ), ;, }, }, Rectangle2D]
[;, if, (, ebp, ., getGenerateEntities, (, ), ), {, sec, =, new, StandardEntityCollection, (, ), ;, }, }, Rectangle2D]
[), {, sec, =, new, StandardEntityCollection, (, ), ;, }, }, Rectangle2D, contentArea, =, (, Rectangle2D, ), area, ., clone]
[., getGenerateEntities, (, ), ), {, sec, =, new, StandardEntityCollection, (, ), ;, }, }, Rectangle2D, contentArea, =, (, Rectangle2D]
[=, new, StandardEntityCollection, (, ), ;, }, }, Rectangle2D, contentArea, =, (, Rectangle2D, ), area, ., clone, (, ), ;]
[;, }, }, Rectangle2D, contentArea, =, (, Rectangle2D, ), area, ., clone, (, ), ;, contentArea, =, trimMargin, (, contentArea]
[;, contentArea, =, trimMargin, (, contentArea, ), ;, drawBorder, (, g2, ,, contentArea, ), ;, contentArea, =, trimBorder, (, contentArea]
[;, contentArea, =, trimMargin, (, contentArea, ), ;, drawBorder, (, g2, ,, contentArea, ), ;, contentArea, =, trimBorder, (, contentArea]
[., clone, (, ), ;, contentArea, =, trimMargin, (, contentArea, ), ;, drawBorder, (, g2, ,, contentArea, ), ;, contentArea]
[=, trimMargin, (, contentArea, ), ;, drawBorder, (, g2, ,, contentArea, ), ;, contentArea, =, trimBorder, (, contentArea, ), ;]
[;, drawBorder, (, g2, ,, contentArea, ), ;, contentArea, =, trimBorder, (, contentArea, ), ;, contentArea, =, trimPadding, (, contentArea]
[), ;, drawBorder, (, g2, ,, contentArea, ), ;, contentArea, =, trimBorder, (, contentArea, ), ;, contentArea, =, trimPadding, (]
[;, contentArea, =, trimBorder, (, contentArea, ), ;, contentArea, =, trimPadding, (, contentArea, ), ;, Iterator, iterator, =, this, .]
[,, contentArea, ), ;, contentArea, =, trimBorder, (, contentArea, ), ;, contentArea, =, trimPadding, (, contentArea, ), ;, Iterator, iterator]
[), ;, contentArea, =, trimBorder, (, contentArea, ), ;, contentArea, =, trimPadding, (, contentArea, ), ;, Iterator, iterator, =, this]
[=, trimBorder, (, contentArea, ), ;, contentArea, =, trimPadding, (, contentArea, ), ;, Iterator, iterator, =, this, ., blocks, .]
[;, contentArea, =, trimPadding, (, contentArea, ), ;, Iterator, iterator, =, this, ., blocks, ., iterator, (, ), ;, while]
[), ;, contentArea, =, trimPadding, (, contentArea, ), ;, Iterator, iterator, =, this, ., blocks, ., iterator, (, ), ;]
[=, trimPadding, (, contentArea, ), ;, Iterator, iterator, =, this, ., blocks, ., iterator, (, ), ;, while, (, iterator]
[;, Iterator, iterator, =, this, ., blocks, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), )]
[), ;, Iterator, iterator, =, this, ., blocks, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, )]
[;, while, (, iterator, ., hasNext, (, ), ), {, Block, block, =, (, Block, ), iterator, ., next, (]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, Block, block, =, (, Block, )]
[., blocks, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, Block, block, =, (]
[), {, Block, block, =, (, Block, ), iterator, ., next, (, ), ;, Rectangle2D, bounds, =, block, ., getBounds]
[., hasNext, (, ), ), {, Block, block, =, (, Block, ), iterator, ., next, (, ), ;, Rectangle2D, bounds]
[;, Rectangle2D, bounds, =, block, ., getBounds, (, ), ;, Rectangle2D, drawArea, =, new, Rectangle2D, ., Double, (, bounds, .]
[;, Rectangle2D, bounds, =, block, ., getBounds, (, ), ;, Rectangle2D, drawArea, =, new, Rectangle2D, ., Double, (, bounds, .]
[., next, (, ), ;, Rectangle2D, bounds, =, block, ., getBounds, (, ), ;, Rectangle2D, drawArea, =, new, Rectangle2D, .]
[;, Rectangle2D, drawArea, =, new, Rectangle2D, ., Double, (, bounds, ., getX, (, ), +, area, ., getX, (, )]
[., getBounds, (, ), ;, Rectangle2D, drawArea, =, new, Rectangle2D, ., Double, (, bounds, ., getX, (, ), +, area]
[;, Object, r, =, block, ., draw, (, g2, ,, drawArea, ,, params, ), ;, if, (, sec, !=, null]
[,, bounds, ., getY, (, ), +, area, ., getY, (, ), ,, bounds, ., getWidth, (, ), ,, bounds]
[+, area, ., getX, (, ), ,, bounds, ., getY, (, ), +, area, ., getY, (, ), ,, bounds]
[., getX, (, ), +, area, ., getX, (, ), ,, bounds, ., getY, (, ), +, area, ., getY]
[,, bounds, ., getY, (, ), +, area, ., getY, (, ), ,, bounds, ., getWidth, (, ), ,, bounds]
[., getX, (, ), ,, bounds, ., getY, (, ), +, area, ., getY, (, ), ,, bounds, ., getWidth]
[,, bounds, ., getWidth, (, ), ,, bounds, ., getHeight, (, ), ), ;, Object, r, =, block, ., draw]
[+, area, ., getY, (, ), ,, bounds, ., getWidth, (, ), ,, bounds, ., getHeight, (, ), ), ;]
[., getY, (, ), +, area, ., getY, (, ), ,, bounds, ., getWidth, (, ), ,, bounds, ., getHeight]
[,, bounds, ., getWidth, (, ), ,, bounds, ., getHeight, (, ), ), ;, Object, r, =, block, ., draw]
[., getY, (, ), ,, bounds, ., getWidth, (, ), ,, bounds, ., getHeight, (, ), ), ;, Object, r]
[,, bounds, ., getHeight, (, ), ), ;, Object, r, =, block, ., draw, (, g2, ,, drawArea, ,, params]
[., getWidth, (, ), ,, bounds, ., getHeight, (, ), ), ;, Object, r, =, block, ., draw, (, g2]
[), ;, Object, r, =, block, ., draw, (, g2, ,, drawArea, ,, params, ), ;, if, (, sec, !=]
[., getHeight, (, ), ), ;, Object, r, =, block, ., draw, (, g2, ,, drawArea, ,, params, ), ;]
[;, if, (, sec, !=, null, ), {, if, (, r, instanceof, EntityBlockResult, ), {, EntityBlockResult, ebr, =, (, EntityBlockResult]
[., draw, (, g2, ,, drawArea, ,, params, ), ;, if, (, sec, !=, null, ), {, if, (, r]
[,, drawArea, ,, params, ), ;, if, (, sec, !=, null, ), {, if, (, r, instanceof, EntityBlockResult, ), {]
[,, params, ), ;, if, (, sec, !=, null, ), {, if, (, r, instanceof, EntityBlockResult, ), {, EntityBlockResult, ebr]
[), ;, if, (, sec, !=, null, ), {, if, (, r, instanceof, EntityBlockResult, ), {, EntityBlockResult, ebr, =, (]
[), {, if, (, r, instanceof, EntityBlockResult, ), {, EntityBlockResult, ebr, =, (, EntityBlockResult, ), r, ;, EntityCollection, ec, =]
[!=, null, ), {, if, (, r, instanceof, EntityBlockResult, ), {, EntityBlockResult, ebr, =, (, EntityBlockResult, ), r, ;, EntityCollection]
[), {, if, (, r, instanceof, EntityBlockResult, ), {, EntityBlockResult, ebr, =, (, EntityBlockResult, ), r, ;, EntityCollection, ec, =]
[), {, EntityBlockResult, ebr, =, (, EntityBlockResult, ), r, ;, EntityCollection, ec, =, ebr, ., getEntityCollection, (, ), ;, sec]
[instanceof, EntityBlockResult, ), {, EntityBlockResult, ebr, =, (, EntityBlockResult, ), r, ;, EntityCollection, ec, =, ebr, ., getEntityCollection, (, )]
[;, EntityCollection, ec, =, ebr, ., getEntityCollection, (, ), ;, sec, ., addAll, (, ec, ), ;, }, }, }]
[;, EntityCollection, ec, =, ebr, ., getEntityCollection, (, ), ;, sec, ., addAll, (, ec, ), ;, }, }, }]
[;, sec, ., addAll, (, ec, ), ;, }, }, }, BlockResult, result, =, null, ;, if, (, sec, !=]
[., getEntityCollection, (, ), ;, sec, ., addAll, (, ec, ), ;, }, }, }, BlockResult, result, =, null, ;]
[;, }, }, }, BlockResult, result, =, null, ;, if, (, sec, !=, null, ), {, result, =, new, BlockResult]
[., addAll, (, ec, ), ;, }, }, }, BlockResult, result, =, null, ;, if, (, sec, !=, null, )]
[), ;, }, }, }, BlockResult, result, =, null, ;, if, (, sec, !=, null, ), {, result, =, new]
[;, if, (, sec, !=, null, ), {, result, =, new, BlockResult, (, ), ;, result, ., setEntityCollection, (, sec]
[), {, result, =, new, BlockResult, (, ), ;, result, ., setEntityCollection, (, sec, ), ;, }, return, result, ;]
[!=, null, ), {, result, =, new, BlockResult, (, ), ;, result, ., setEntityCollection, (, sec, ), ;, }, return]
[), {, result, =, new, BlockResult, (, ), ;, result, ., setEntityCollection, (, sec, ), ;, }, return, result, ;]
[=, new, BlockResult, (, ), ;, result, ., setEntityCollection, (, sec, ), ;, }, return, result, ;, }, public, boolean]
[;, result, ., setEntityCollection, (, sec, ), ;, }, return, result, ;, }, public, boolean, equals, (, Object, obj, )]
[;, }, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, )]
[., setEntityCollection, (, sec, ), ;, }, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if]
[), ;, }, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this]
[;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, BlockContainer, ), ), {, return, false, ;, }]
[==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, BlockContainer, ), ), {, return, false]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, BlockContainer, ), ), {, return, false, ;, }]
[;, }, if, (, !, (, obj, instanceof, BlockContainer, ), ), {, return, false, ;, }, if, (, !, super]
[), {, return, false, ;, }, if, (, !, super, ., equals, (, obj, ), ), {, return, false, ;]
[), {, return, false, ;, }, if, (, !, super, ., equals, (, obj, ), ), {, return, false, ;]
[), ), {, return, false, ;, }, if, (, !, super, ., equals, (, obj, ), ), {, return, false]
[instanceof, BlockContainer, ), ), {, return, false, ;, }, if, (, !, super, ., equals, (, obj, ), ), {]
[;, }, if, (, !, super, ., equals, (, obj, ), ), {, return, false, ;, }, BlockContainer, that, =]
[), {, return, false, ;, }, BlockContainer, that, =, (, BlockContainer, ), obj, ;, if, (, !, this, ., arrangement]
[), {, return, false, ;, }, BlockContainer, that, =, (, BlockContainer, ), obj, ;, if, (, !, this, ., arrangement]
[., equals, (, obj, ), ), {, return, false, ;, }, BlockContainer, that, =, (, BlockContainer, ), obj, ;, if]
[), ), {, return, false, ;, }, BlockContainer, that, =, (, BlockContainer, ), obj, ;, if, (, !, this, .]
[;, }, BlockContainer, that, =, (, BlockContainer, ), obj, ;, if, (, !, this, ., arrangement, ., equals, (, that]
[;, if, (, !, this, ., arrangement, ., equals, (, that, ., arrangement, ), ), {, return, false, ;, }]
[;, if, (, !, this, ., arrangement, ., equals, (, that, ., arrangement, ), ), {, return, false, ;, }]
[), {, return, false, ;, }, if, (, !, this, ., blocks, ., equals, (, that, ., blocks, ), )]
[), {, return, false, ;, }, if, (, !, this, ., blocks, ., equals, (, that, ., blocks, ), )]
[., equals, (, that, ., arrangement, ), ), {, return, false, ;, }, if, (, !, this, ., blocks, .]
[., arrangement, ., equals, (, that, ., arrangement, ), ), {, return, false, ;, }, if, (, !, this, .]
[), ), {, return, false, ;, }, if, (, !, this, ., blocks, ., equals, (, that, ., blocks, )]
[., arrangement, ), ), {, return, false, ;, }, if, (, !, this, ., blocks, ., equals, (, that, .]
[;, }, if, (, !, this, ., blocks, ., equals, (, that, ., blocks, ), ), {, return, false, ;]
[), {, return, false, ;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, BlockContainer, clone]
[), {, return, false, ;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, BlockContainer, clone]
[., equals, (, that, ., blocks, ), ), {, return, false, ;, }, return, true, ;, }, public, Object, clone]
[., blocks, ., equals, (, that, ., blocks, ), ), {, return, false, ;, }, return, true, ;, }, public]
[), ), {, return, false, ;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, BlockContainer]
[., blocks, ), ), {, return, false, ;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException]
[;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, BlockContainer, clone, =, (, BlockContainer, )]
[;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, BlockContainer, clone, =, (, BlockContainer, ), super, ., clone, (]
[;, return, clone, ;, }, }]
[;, return, clone, ;, }, }]
[., clone, (, ), ;, return, clone, ;, }, }]
[;, }, }]
