[{, private, double, lowerBound, ;, private, double, upperBound, ;, private, int, alpha, ;, public, GrayPaintScale, (, ), {, this, (]
[double, lowerBound, ;, private, double, upperBound, ;, private, int, alpha, ;, public, GrayPaintScale, (, ), {, this, (, 0.0, ,]
[this, (, 0.0, ,, 1.0, ), ;, }, public, GrayPaintScale, (, double, lowerBound, ,, double, upperBound, ), {, this, (]
[0.0, ,, 1.0, ), ;, }, public, GrayPaintScale, (, double, lowerBound, ,, double, upperBound, ), {, this, (, lowerBound, ,]
[1.0, ), ;, }, public, GrayPaintScale, (, double, lowerBound, ,, double, upperBound, ), {, this, (, lowerBound, ,, upperBound, ,]
[,, 255, ), ;, }, public, GrayPaintScale, (, double, lowerBound, ,, double, upperBound, ,, int, alpha, ), {, if, (]
[,, 255, ), ;, }, public, GrayPaintScale, (, double, lowerBound, ,, double, upperBound, ,, int, alpha, ), {, if, (]
[), ;, }, public, GrayPaintScale, (, double, lowerBound, ,, double, upperBound, ,, int, alpha, ), {, if, (, lowerBound, >=]
[GrayPaintScale, (, double, lowerBound, ,, double, upperBound, ,, int, alpha, ), {, if, (, lowerBound, >=, upperBound, ), {, throw]
[lowerBound, ,, double, upperBound, ,, int, alpha, ), {, if, (, lowerBound, >=, upperBound, ), {, throw, new, IllegalArgumentException, (]
[alpha, ), {, if, (, lowerBound, >=, upperBound, ), {, throw, new, IllegalArgumentException, (, "Requires lowerBound < upperBound.", ), ;, }, if, (]
[alpha, ), {, if, (, lowerBound, >=, upperBound, ), {, throw, new, IllegalArgumentException, (, "Requires lowerBound < upperBound.", ), ;, }, if, (]
[alpha, ), {, if, (, lowerBound, >=, upperBound, ), {, throw, new, IllegalArgumentException, (, "Requires lowerBound < upperBound.", ), ;, }, if, (]
[{, if, (, lowerBound, >=, upperBound, ), {, throw, new, IllegalArgumentException, (, "Requires lowerBound < upperBound.", ), ;, }, if, (, alpha, <]
[(, lowerBound, >=, upperBound, ), {, throw, new, IllegalArgumentException, (, "Requires lowerBound < upperBound.", ), ;, }, if, (, alpha, <, 0, ||]
[(, lowerBound, >=, upperBound, ), {, throw, new, IllegalArgumentException, (, "Requires lowerBound < upperBound.", ), ;, }, if, (, alpha, <, 0, ||]
[>=, upperBound, ), {, throw, new, IllegalArgumentException, (, "Requires lowerBound < upperBound.", ), ;, }, if, (, alpha, <, 0, ||, alpha, >]
[throw, new, IllegalArgumentException, (, "Requires lowerBound < upperBound.", ), ;, }, if, (, alpha, <, 0, ||, alpha, >, 255, ), {, throw]
[(, "Requires lowerBound < upperBound.", ), ;, }, if, (, alpha, <, 0, ||, alpha, >, 255, ), {, throw, new, IllegalArgumentException, (]
[}, if, (, alpha, <, 0, ||, alpha, >, 255, ), {, throw, new, IllegalArgumentException, (, "Requires alpha in the range 0 to 255.", ), ;, }]
[}, if, (, alpha, <, 0, ||, alpha, >, 255, ), {, throw, new, IllegalArgumentException, (, "Requires alpha in the range 0 to 255.", ), ;, }]
[<, 0, ||, alpha, >, 255, ), {, throw, new, IllegalArgumentException, (, "Requires alpha in the range 0 to 255.", ), ;, }, this, ., lowerBound, =]
[||, alpha, >, 255, ), {, throw, new, IllegalArgumentException, (, "Requires alpha in the range 0 to 255.", ), ;, }, this, ., lowerBound, =, lowerBound, ;]
[||, alpha, >, 255, ), {, throw, new, IllegalArgumentException, (, "Requires alpha in the range 0 to 255.", ), ;, }, this, ., lowerBound, =, lowerBound, ;]
[), {, throw, new, IllegalArgumentException, (, "Requires alpha in the range 0 to 255.", ), ;, }, this, ., lowerBound, =, lowerBound, ;, this, ., upperBound, =]
[throw, new, IllegalArgumentException, (, "Requires alpha in the range 0 to 255.", ), ;, }, this, ., lowerBound, =, lowerBound, ;, this, ., upperBound, =, upperBound, ;]
[throw, new, IllegalArgumentException, (, "Requires alpha in the range 0 to 255.", ), ;, }, this, ., lowerBound, =, lowerBound, ;, this, ., upperBound, =, upperBound, ;]
["Requires alpha in the range 0 to 255.", ), ;, }, this, ., lowerBound, =, lowerBound, ;, this, ., upperBound, =, upperBound, ;, this, ., alpha, =]
[this, ., upperBound, =, upperBound, ;, this, ., alpha, =, alpha, ;, }, public, double, getLowerBound, (, ), {, return]
[this, ., upperBound, =, upperBound, ;, this, ., alpha, =, alpha, ;, }, public, double, getLowerBound, (, ), {, return]
[}, public, double, getLowerBound, (, ), {, return, this, ., lowerBound, ;, }, public, double, getUpperBound, (, ), {, return]
[}, public, double, getLowerBound, (, ), {, return, this, ., lowerBound, ;, }, public, double, getUpperBound, (, ), {, return]
[}, public, double, getUpperBound, (, ), {, return, this, ., upperBound, ;, }, public, int, getAlpha, (, ), {, return]
[}, public, double, getUpperBound, (, ), {, return, this, ., upperBound, ;, }, public, int, getAlpha, (, ), {, return]
[(, ), {, return, this, ., alpha, ;, }, public, Paint, getPaint, (, double, value, ), {, double, v, =]
[(, ), {, return, this, ., alpha, ;, }, public, Paint, getPaint, (, double, value, ), {, double, v, =]
[this, ., alpha, ;, }, public, Paint, getPaint, (, double, value, ), {, double, v, =, Math, ., max, (]
[alpha, ;, }, public, Paint, getPaint, (, double, value, ), {, double, v, =, Math, ., max, (, value, ,]
[alpha, ;, }, public, Paint, getPaint, (, double, value, ), {, double, v, =, Math, ., max, (, value, ,]
[getPaint, (, double, value, ), {, double, v, =, Math, ., max, (, value, ,, this, ., lowerBound, ), ;]
[double, value, ), {, double, v, =, Math, ., max, (, value, ,, this, ., lowerBound, ), ;, v, =]
[double, value, ), {, double, v, =, Math, ., max, (, value, ,, this, ., lowerBound, ), ;, v, =]
[double, v, =, Math, ., max, (, value, ,, this, ., lowerBound, ), ;, v, =, Math, ., min, (]
[=, Math, ., max, (, value, ,, this, ., lowerBound, ), ;, v, =, Math, ., min, (, v, ,]
[=, Math, ., max, (, value, ,, this, ., lowerBound, ), ;, v, =, Math, ., min, (, v, ,]
[., lowerBound, ), ;, v, =, Math, ., min, (, v, ,, this, ., upperBound, ), ;, int, g, =]
[;, v, =, Math, ., min, (, v, ,, this, ., upperBound, ), ;, int, g, =, (, int, )]
[v, =, Math, ., min, (, v, ,, this, ., upperBound, ), ;, int, g, =, (, int, ), (]
[v, =, Math, ., min, (, v, ,, this, ., upperBound, ), ;, int, g, =, (, int, ), (]
[v, =, Math, ., min, (, v, ,, this, ., upperBound, ), ;, int, g, =, (, int, ), (]
[=, Math, ., min, (, v, ,, this, ., upperBound, ), ;, int, g, =, (, int, ), (, (]
[=, Math, ., min, (, v, ,, this, ., upperBound, ), ;, int, g, =, (, int, ), (, (]
[., min, (, v, ,, this, ., upperBound, ), ;, int, g, =, (, int, ), (, (, v, -]
[., min, (, v, ,, this, ., upperBound, ), ;, int, g, =, (, int, ), (, (, v, -]
[this, ., upperBound, ), ;, int, g, =, (, int, ), (, (, v, -, this, ., lowerBound, ), /]
[., upperBound, ), ;, int, g, =, (, int, ), (, (, v, -, this, ., lowerBound, ), /, (]
[., upperBound, ), ;, int, g, =, (, int, ), (, (, v, -, this, ., lowerBound, ), /, (]
[., upperBound, ), ;, int, g, =, (, int, ), (, (, v, -, this, ., lowerBound, ), /, (]
[int, g, =, (, int, ), (, (, v, -, this, ., lowerBound, ), /, (, this, ., upperBound, -]
[int, g, =, (, int, ), (, (, v, -, this, ., lowerBound, ), /, (, this, ., upperBound, -]
[), (, (, v, -, this, ., lowerBound, ), /, (, this, ., upperBound, -, this, ., lowerBound, ), *]
[-, this, ., lowerBound, ), /, (, this, ., upperBound, -, this, ., lowerBound, ), *, 255.0, ), ;, return]
[lowerBound, ), /, (, this, ., upperBound, -, this, ., lowerBound, ), *, 255.0, ), ;, return, new, Color, (]
[/, (, this, ., upperBound, -, this, ., lowerBound, ), *, 255.0, ), ;, return, new, Color, (, g, ,]
[this, ., upperBound, -, this, ., lowerBound, ), *, 255.0, ), ;, return, new, Color, (, g, ,, g, ,]
[upperBound, -, this, ., lowerBound, ), *, 255.0, ), ;, return, new, Color, (, g, ,, g, ,, g, ,]
[upperBound, -, this, ., lowerBound, ), *, 255.0, ), ;, return, new, Color, (, g, ,, g, ,, g, ,]
[g, ,, g, ,, this, ., alpha, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[g, ,, g, ,, this, ., alpha, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[g, ,, this, ., alpha, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[alpha, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, GrayPaintScale, ), ), {, return]
[true, ;, }, if, (, !, (, obj, instanceof, GrayPaintScale, ), ), {, return, false, ;, }, GrayPaintScale, that, =]
[if, (, !, (, obj, instanceof, GrayPaintScale, ), ), {, return, false, ;, }, GrayPaintScale, that, =, (, GrayPaintScale, )]
[obj, instanceof, GrayPaintScale, ), ), {, return, false, ;, }, GrayPaintScale, that, =, (, GrayPaintScale, ), obj, ;, if, (]
[obj, instanceof, GrayPaintScale, ), ), {, return, false, ;, }, GrayPaintScale, that, =, (, GrayPaintScale, ), obj, ;, if, (]
[obj, instanceof, GrayPaintScale, ), ), {, return, false, ;, }, GrayPaintScale, that, =, (, GrayPaintScale, ), obj, ;, if, (]
[), {, return, false, ;, }, GrayPaintScale, that, =, (, GrayPaintScale, ), obj, ;, if, (, this, ., lowerBound, !=]
[), {, return, false, ;, }, GrayPaintScale, that, =, (, GrayPaintScale, ), obj, ;, if, (, this, ., lowerBound, !=]
[GrayPaintScale, that, =, (, GrayPaintScale, ), obj, ;, if, (, this, ., lowerBound, !=, that, ., lowerBound, ), {, return]
[), obj, ;, if, (, this, ., lowerBound, !=, that, ., lowerBound, ), {, return, false, ;, }, if, (]
[), obj, ;, if, (, this, ., lowerBound, !=, that, ., lowerBound, ), {, return, false, ;, }, if, (]
[), obj, ;, if, (, this, ., lowerBound, !=, that, ., lowerBound, ), {, return, false, ;, }, if, (]
[(, this, ., lowerBound, !=, that, ., lowerBound, ), {, return, false, ;, }, if, (, this, ., upperBound, !=]
[(, this, ., lowerBound, !=, that, ., lowerBound, ), {, return, false, ;, }, if, (, this, ., upperBound, !=]
[., lowerBound, ), {, return, false, ;, }, if, (, this, ., upperBound, !=, that, ., upperBound, ), {, return]
[false, ;, }, if, (, this, ., upperBound, !=, that, ., upperBound, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., upperBound, !=, that, ., upperBound, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., upperBound, !=, that, ., upperBound, ), {, return, false, ;, }, if, (]
[(, this, ., upperBound, !=, that, ., upperBound, ), {, return, false, ;, }, if, (, this, ., alpha, !=]
[(, this, ., upperBound, !=, that, ., upperBound, ), {, return, false, ;, }, if, (, this, ., alpha, !=]
[., upperBound, ), {, return, false, ;, }, if, (, this, ., alpha, !=, that, ., alpha, ), {, return]
[return, false, ;, }, if, (, this, ., alpha, !=, that, ., alpha, ), {, return, false, ;, }, return]
[alpha, ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, hash, =]
[{, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, hash, =, 7, ;]
[false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, hash, =, 7, ;, hash, =]
[false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, hash, =, 7, ;, hash, =]
[true, ;, }, public, int, hashCode, (, ), {, int, hash, =, 7, ;, hash, =, HashUtilities, ., hashCode, (]
[}, public, int, hashCode, (, ), {, int, hash, =, 7, ;, hash, =, HashUtilities, ., hashCode, (, hash, ,]
[}, public, int, hashCode, (, ), {, int, hash, =, 7, ;, hash, =, HashUtilities, ., hashCode, (, hash, ,]
[), {, int, hash, =, 7, ;, hash, =, HashUtilities, ., hashCode, (, hash, ,, this, ., lowerBound, ), ;]
[int, hash, =, 7, ;, hash, =, HashUtilities, ., hashCode, (, hash, ,, this, ., lowerBound, ), ;, hash, =]
[int, hash, =, 7, ;, hash, =, HashUtilities, ., hashCode, (, hash, ,, this, ., lowerBound, ), ;, hash, =]
[;, hash, =, HashUtilities, ., hashCode, (, hash, ,, this, ., lowerBound, ), ;, hash, =, HashUtilities, ., hashCode, (]
[=, HashUtilities, ., hashCode, (, hash, ,, this, ., lowerBound, ), ;, hash, =, HashUtilities, ., hashCode, (, hash, ,]
[=, HashUtilities, ., hashCode, (, hash, ,, this, ., lowerBound, ), ;, hash, =, HashUtilities, ., hashCode, (, hash, ,]
[hash, ,, this, ., lowerBound, ), ;, hash, =, HashUtilities, ., hashCode, (, hash, ,, this, ., upperBound, ), ;]
[this, ., lowerBound, ), ;, hash, =, HashUtilities, ., hashCode, (, hash, ,, this, ., upperBound, ), ;, hash, =]
[this, ., lowerBound, ), ;, hash, =, HashUtilities, ., hashCode, (, hash, ,, this, ., upperBound, ), ;, hash, =]
[this, ., lowerBound, ), ;, hash, =, HashUtilities, ., hashCode, (, hash, ,, this, ., upperBound, ), ;, hash, =]
[lowerBound, ), ;, hash, =, HashUtilities, ., hashCode, (, hash, ,, this, ., upperBound, ), ;, hash, =, 43, *]
[;, hash, =, HashUtilities, ., hashCode, (, hash, ,, this, ., upperBound, ), ;, hash, =, 43, *, hash, +]
[;, hash, =, HashUtilities, ., hashCode, (, hash, ,, this, ., upperBound, ), ;, hash, =, 43, *, hash, +]
[hashCode, (, hash, ,, this, ., upperBound, ), ;, hash, =, 43, *, hash, +, this, ., alpha, ;, return]
[*, hash, +, this, ., alpha, ;, return, hash, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return]
[*, hash, +, this, ., alpha, ;, return, hash, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return]
