[;, private, int, initialGuessIndex, =, -, 1, ;, public, BaseMultiStartMultivariateOptimizer, (, final, BaseMultivariateOptimizer, <, PAIR, >, optimizer, ,, final, int]
[;, private, int, initialGuessIndex, =, -, 1, ;, public, BaseMultiStartMultivariateOptimizer, (, final, BaseMultivariateOptimizer, <, PAIR, >, optimizer, ,, final, int]
[;, public, BaseMultiStartMultivariateOptimizer, (, final, BaseMultivariateOptimizer, <, PAIR, >, optimizer, ,, final, int, starts, ,, final, RandomVectorGenerator, generator, ), {]
[;, public, BaseMultiStartMultivariateOptimizer, (, final, BaseMultivariateOptimizer, <, PAIR, >, optimizer, ,, final, int, starts, ,, final, RandomVectorGenerator, generator, ), {]
[), ;, if, (, starts, <, 1, ), {, throw, new, NotStrictlyPositiveException, (, starts, ), ;, }, this, ., optimizer]
[., getConvergenceChecker, (, ), ), ;, if, (, starts, <, 1, ), {, throw, new, NotStrictlyPositiveException, (, starts, ), ;]
[), {, throw, new, NotStrictlyPositiveException, (, starts, ), ;, }, this, ., optimizer, =, optimizer, ;, this, ., starts, =]
[<, 1, ), {, throw, new, NotStrictlyPositiveException, (, starts, ), ;, }, this, ., optimizer, =, optimizer, ;, this, .]
[), {, throw, new, NotStrictlyPositiveException, (, starts, ), ;, }, this, ., optimizer, =, optimizer, ;, this, ., starts, =]
[;, }, this, ., optimizer, =, optimizer, ;, this, ., starts, =, starts, ;, this, ., generator, =, generator, ;]
[), ;, }, this, ., optimizer, =, optimizer, ;, this, ., starts, =, starts, ;, this, ., generator, =, generator]
[=, optimizer, ;, this, ., starts, =, starts, ;, this, ., generator, =, generator, ;, }, @, Override, public, int]
[., optimizer, =, optimizer, ;, this, ., starts, =, starts, ;, this, ., generator, =, generator, ;, }, @, Override]
[;, this, ., starts, =, starts, ;, this, ., generator, =, generator, ;, }, @, Override, public, int, getEvaluations, (]
[=, starts, ;, this, ., generator, =, generator, ;, }, @, Override, public, int, getEvaluations, (, ), {, return, totalEvaluations]
[., starts, =, starts, ;, this, ., generator, =, generator, ;, }, @, Override, public, int, getEvaluations, (, ), {]
[;, this, ., generator, =, generator, ;, }, @, Override, public, int, getEvaluations, (, ), {, return, totalEvaluations, ;, }]
[=, generator, ;, }, @, Override, public, int, getEvaluations, (, ), {, return, totalEvaluations, ;, }, public, abstract, PAIR, []
[., generator, =, generator, ;, }, @, Override, public, int, getEvaluations, (, ), {, return, totalEvaluations, ;, }, public, abstract]
[;, }, @, Override, public, int, getEvaluations, (, ), {, return, totalEvaluations, ;, }, public, abstract, PAIR, [, ], getOptima]
[;, }, public, abstract, PAIR, [, ], getOptima, (, ), ;, @, Override, public, PAIR, optimize, (, OptimizationData, ..., optData]
[=, optData, ;, return, super, ., optimize, (, optData, ), ;, }, @, Override, protected, PAIR, doOptimize, (, ), {]
[;, return, super, ., optimize, (, optData, ), ;, }, @, Override, protected, PAIR, doOptimize, (, ), {, for, (]
[;, }, @, Override, protected, PAIR, doOptimize, (, ), {, for, (, int, i, =, 0, ;, i, <, optimData]
[., optimize, (, optData, ), ;, }, @, Override, protected, PAIR, doOptimize, (, ), {, for, (, int, i, =]
[), ;, }, @, Override, protected, PAIR, doOptimize, (, ), {, for, (, int, i, =, 0, ;, i, <]
[;, i, <, optimData, ., length, ;, i, ++, ), {, if, (, optimData, [, i, ], instanceof, MaxEval, )]
[;, i, ++, ), {, if, (, optimData, [, i, ], instanceof, MaxEval, ), {, optimData, [, i, ], =]
[<, optimData, ., length, ;, i, ++, ), {, if, (, optimData, [, i, ], instanceof, MaxEval, ), {, optimData]
[;, i, ++, ), {, if, (, optimData, [, i, ], instanceof, MaxEval, ), {, optimData, [, i, ], =]
[., length, ;, i, ++, ), {, if, (, optimData, [, i, ], instanceof, MaxEval, ), {, optimData, [, i]
[), {, if, (, optimData, [, i, ], instanceof, MaxEval, ), {, optimData, [, i, ], =, null, ;, maxEvalIndex]
[++, ), {, if, (, optimData, [, i, ], instanceof, MaxEval, ), {, optimData, [, i, ], =, null, ;]
[), {, optimData, [, i, ], =, null, ;, maxEvalIndex, =, i, ;, }, if, (, optimData, [, i, ]]
[instanceof, MaxEval, ), {, optimData, [, i, ], =, null, ;, maxEvalIndex, =, i, ;, }, if, (, optimData, []
[[, i, ], instanceof, MaxEval, ), {, optimData, [, i, ], =, null, ;, maxEvalIndex, =, i, ;, }, if]
[], instanceof, MaxEval, ), {, optimData, [, i, ], =, null, ;, maxEvalIndex, =, i, ;, }, if, (, optimData]
[=, null, ;, maxEvalIndex, =, i, ;, }, if, (, optimData, [, i, ], instanceof, InitialGuess, ), {, optimData, []
[[, i, ], =, null, ;, maxEvalIndex, =, i, ;, }, if, (, optimData, [, i, ], instanceof, InitialGuess, )]
[], =, null, ;, maxEvalIndex, =, i, ;, }, if, (, optimData, [, i, ], instanceof, InitialGuess, ), {, optimData]
[;, maxEvalIndex, =, i, ;, }, if, (, optimData, [, i, ], instanceof, InitialGuess, ), {, optimData, [, i, ]]
[=, i, ;, }, if, (, optimData, [, i, ], instanceof, InitialGuess, ), {, optimData, [, i, ], =, null]
[;, }, if, (, optimData, [, i, ], instanceof, InitialGuess, ), {, optimData, [, i, ], =, null, ;, initialGuessIndex]
[), {, optimData, [, i, ], =, null, ;, initialGuessIndex, =, i, ;, continue, ;, }, }, if, (, maxEvalIndex]
[instanceof, InitialGuess, ), {, optimData, [, i, ], =, null, ;, initialGuessIndex, =, i, ;, continue, ;, }, }, if]
[[, i, ], instanceof, InitialGuess, ), {, optimData, [, i, ], =, null, ;, initialGuessIndex, =, i, ;, continue, ;]
[], instanceof, InitialGuess, ), {, optimData, [, i, ], =, null, ;, initialGuessIndex, =, i, ;, continue, ;, }, }]
[=, null, ;, initialGuessIndex, =, i, ;, continue, ;, }, }, if, (, maxEvalIndex, ==, -, 1, ), {, throw]
[[, i, ], =, null, ;, initialGuessIndex, =, i, ;, continue, ;, }, }, if, (, maxEvalIndex, ==, -, 1]
[], =, null, ;, initialGuessIndex, =, i, ;, continue, ;, }, }, if, (, maxEvalIndex, ==, -, 1, ), {]
[;, initialGuessIndex, =, i, ;, continue, ;, }, }, if, (, maxEvalIndex, ==, -, 1, ), {, throw, new, MathIllegalStateException]
[=, i, ;, continue, ;, }, }, if, (, maxEvalIndex, ==, -, 1, ), {, throw, new, MathIllegalStateException, (, )]
[;, continue, ;, }, }, if, (, maxEvalIndex, ==, -, 1, ), {, throw, new, MathIllegalStateException, (, ), ;, }]
[), {, throw, new, MathIllegalStateException, (, ), ;, }, if, (, initialGuessIndex, ==, -, 1, ), {, throw, new, MathIllegalStateException]
[==, -, 1, ), {, throw, new, MathIllegalStateException, (, ), ;, }, if, (, initialGuessIndex, ==, -, 1, ), {]
[), {, throw, new, MathIllegalStateException, (, ), ;, }, if, (, initialGuessIndex, ==, -, 1, ), {, throw, new, MathIllegalStateException]
[), {, throw, new, MathIllegalStateException, (, ), ;, }, if, (, initialGuessIndex, ==, -, 1, ), {, throw, new, MathIllegalStateException]
[;, }, if, (, initialGuessIndex, ==, -, 1, ), {, throw, new, MathIllegalStateException, (, ), ;, }, RuntimeException, lastException, =]
[), {, throw, new, MathIllegalStateException, (, ), ;, }, RuntimeException, lastException, =, null, ;, totalEvaluations, =, 0, ;, clear, (]
[==, -, 1, ), {, throw, new, MathIllegalStateException, (, ), ;, }, RuntimeException, lastException, =, null, ;, totalEvaluations, =, 0]
[), {, throw, new, MathIllegalStateException, (, ), ;, }, RuntimeException, lastException, =, null, ;, totalEvaluations, =, 0, ;, clear, (]
[), {, throw, new, MathIllegalStateException, (, ), ;, }, RuntimeException, lastException, =, null, ;, totalEvaluations, =, 0, ;, clear, (]
[;, }, RuntimeException, lastException, =, null, ;, totalEvaluations, =, 0, ;, clear, (, ), ;, final, int, maxEval, =, getMaxEvaluations]
[;, totalEvaluations, =, 0, ;, clear, (, ), ;, final, int, maxEval, =, getMaxEvaluations, (, ), ;, final, double, []
[=, 0, ;, clear, (, ), ;, final, int, maxEval, =, getMaxEvaluations, (, ), ;, final, double, [, ], min]
[;, clear, (, ), ;, final, int, maxEval, =, getMaxEvaluations, (, ), ;, final, double, [, ], min, =, getLowerBound]
[;, final, int, maxEval, =, getMaxEvaluations, (, ), ;, final, double, [, ], min, =, getLowerBound, (, ), ;, final]
[;, final, double, [, ], min, =, getLowerBound, (, ), ;, final, double, [, ], max, =, getUpperBound, (, )]
[;, final, double, [, ], max, =, getUpperBound, (, ), ;, final, double, [, ], startPoint, =, getStartPoint, (, )]
[;, final, double, [, ], startPoint, =, getStartPoint, (, ), ;, for, (, int, i, =, 0, ;, i, <]
[;, for, (, int, i, =, 0, ;, i, <, starts, ;, i, ++, ), {, try, {, optimData, []
[;, i, <, starts, ;, i, ++, ), {, try, {, optimData, [, maxEvalIndex, ], =, new, MaxEval, (, maxEval]
[;, i, ++, ), {, try, {, optimData, [, maxEvalIndex, ], =, new, MaxEval, (, maxEval, -, totalEvaluations, ), ;]
[<, starts, ;, i, ++, ), {, try, {, optimData, [, maxEvalIndex, ], =, new, MaxEval, (, maxEval, -, totalEvaluations]
[;, i, ++, ), {, try, {, optimData, [, maxEvalIndex, ], =, new, MaxEval, (, maxEval, -, totalEvaluations, ), ;]
[), {, try, {, optimData, [, maxEvalIndex, ], =, new, MaxEval, (, maxEval, -, totalEvaluations, ), ;, double, [, ]]
[++, ), {, try, {, optimData, [, maxEvalIndex, ], =, new, MaxEval, (, maxEval, -, totalEvaluations, ), ;, double, []
[=, new, MaxEval, (, maxEval, -, totalEvaluations, ), ;, double, [, ], s, =, null, ;, if, (, i, ==]
[[, maxEvalIndex, ], =, new, MaxEval, (, maxEval, -, totalEvaluations, ), ;, double, [, ], s, =, null, ;, if]
[], =, new, MaxEval, (, maxEval, -, totalEvaluations, ), ;, double, [, ], s, =, null, ;, if, (, i]
[;, double, [, ], s, =, null, ;, if, (, i, ==, 0, ), {, s, =, startPoint, ;, }]
[), ;, double, [, ], s, =, null, ;, if, (, i, ==, 0, ), {, s, =, startPoint, ;]
[-, totalEvaluations, ), ;, double, [, ], s, =, null, ;, if, (, i, ==, 0, ), {, s, =]
[), ;, double, [, ], s, =, null, ;, if, (, i, ==, 0, ), {, s, =, startPoint, ;]
[;, if, (, i, ==, 0, ), {, s, =, startPoint, ;, }, else, {, int, attempts, =, 0, ;]
[), {, s, =, startPoint, ;, }, else, {, int, attempts, =, 0, ;, while, (, s, ==, null, )]
[==, 0, ), {, s, =, startPoint, ;, }, else, {, int, attempts, =, 0, ;, while, (, s, ==]
[), {, s, =, startPoint, ;, }, else, {, int, attempts, =, 0, ;, while, (, s, ==, null, )]
[=, startPoint, ;, }, else, {, int, attempts, =, 0, ;, while, (, s, ==, null, ), {, if, (]
[;, }, else, {, int, attempts, =, 0, ;, while, (, s, ==, null, ), {, if, (, attempts, ++]
[;, while, (, s, ==, null, ), {, if, (, attempts, ++, >=, getMaxEvaluations, (, ), ), {, throw, new]
[), {, if, (, attempts, ++, >=, getMaxEvaluations, (, ), ), {, throw, new, TooManyEvaluationsException, (, getMaxEvaluations, (, ), )]
[==, null, ), {, if, (, attempts, ++, >=, getMaxEvaluations, (, ), ), {, throw, new, TooManyEvaluationsException, (, getMaxEvaluations, (]
[), {, if, (, attempts, ++, >=, getMaxEvaluations, (, ), ), {, throw, new, TooManyEvaluationsException, (, getMaxEvaluations, (, ), )]
[), {, throw, new, TooManyEvaluationsException, (, getMaxEvaluations, (, ), ), ;, }, s, =, generator, ., nextVector, (, ), ;]
[>=, getMaxEvaluations, (, ), ), {, throw, new, TooManyEvaluationsException, (, getMaxEvaluations, (, ), ), ;, }, s, =, generator, .]
[++, >=, getMaxEvaluations, (, ), ), {, throw, new, TooManyEvaluationsException, (, getMaxEvaluations, (, ), ), ;, }, s, =, generator]
[), {, throw, new, TooManyEvaluationsException, (, getMaxEvaluations, (, ), ), ;, }, s, =, generator, ., nextVector, (, ), ;]
[;, }, s, =, generator, ., nextVector, (, ), ;, for, (, int, k, =, 0, ;, s, !=, null]
[), ;, }, s, =, generator, ., nextVector, (, ), ;, for, (, int, k, =, 0, ;, s, !=]
[=, generator, ., nextVector, (, ), ;, for, (, int, k, =, 0, ;, s, !=, null, &&, k, <]
[;, for, (, int, k, =, 0, ;, s, !=, null, &&, k, <, s, ., length, ;, ++, k]
[., nextVector, (, ), ;, for, (, int, k, =, 0, ;, s, !=, null, &&, k, <, s, .]
[;, s, !=, null, &&, k, <, s, ., length, ;, ++, k, ), {, if, (, (, min, !=]
[;, ++, k, ), {, if, (, (, min, !=, null, &&, s, [, k, ], <, min, [, k]
[&&, k, <, s, ., length, ;, ++, k, ), {, if, (, (, min, !=, null, &&, s, []
[!=, null, &&, k, <, s, ., length, ;, ++, k, ), {, if, (, (, min, !=, null, &&]
[&&, k, <, s, ., length, ;, ++, k, ), {, if, (, (, min, !=, null, &&, s, []
[;, ++, k, ), {, if, (, (, min, !=, null, &&, s, [, k, ], <, min, [, k]
[<, s, ., length, ;, ++, k, ), {, if, (, (, min, !=, null, &&, s, [, k, ]]
[;, ++, k, ), {, if, (, (, min, !=, null, &&, s, [, k, ], <, min, [, k]
[., length, ;, ++, k, ), {, if, (, (, min, !=, null, &&, s, [, k, ], <, min]
[), {, if, (, (, min, !=, null, &&, s, [, k, ], <, min, [, k, ], ), ||]
[), {, if, (, (, min, !=, null, &&, s, [, k, ], <, min, [, k, ], ), ||]
[), {, s, =, null, ;, }, }, }, }, optimData, [, initialGuessIndex, ], =, new, InitialGuess, (, s, )]
[||, (, max, !=, null, &&, s, [, k, ], >, max, [, k, ], ), ), {, s, =]
[), ||, (, max, !=, null, &&, s, [, k, ], >, max, [, k, ], ), ), {, s]
[&&, s, [, k, ], <, min, [, k, ], ), ||, (, max, !=, null, &&, s, [, k]
[!=, null, &&, s, [, k, ], <, min, [, k, ], ), ||, (, max, !=, null, &&, s]
[&&, s, [, k, ], <, min, [, k, ], ), ||, (, max, !=, null, &&, s, [, k]
[), ||, (, max, !=, null, &&, s, [, k, ], >, max, [, k, ], ), ), {, s]
[<, min, [, k, ], ), ||, (, max, !=, null, &&, s, [, k, ], >, max, [, k]
[[, k, ], <, min, [, k, ], ), ||, (, max, !=, null, &&, s, [, k, ], >]
[], <, min, [, k, ], ), ||, (, max, !=, null, &&, s, [, k, ], >, max, []
[), ||, (, max, !=, null, &&, s, [, k, ], >, max, [, k, ], ), ), {, s]
[[, k, ], ), ||, (, max, !=, null, &&, s, [, k, ], >, max, [, k, ], )]
[], ), ||, (, max, !=, null, &&, s, [, k, ], >, max, [, k, ], ), ), {]
[), {, s, =, null, ;, }, }, }, }, optimData, [, initialGuessIndex, ], =, new, InitialGuess, (, s, )]
[), ), {, s, =, null, ;, }, }, }, }, optimData, [, initialGuessIndex, ], =, new, InitialGuess, (, s]
[&&, s, [, k, ], >, max, [, k, ], ), ), {, s, =, null, ;, }, }, }]
[!=, null, &&, s, [, k, ], >, max, [, k, ], ), ), {, s, =, null, ;, }]
[&&, s, [, k, ], >, max, [, k, ], ), ), {, s, =, null, ;, }, }, }]
[), ), {, s, =, null, ;, }, }, }, }, optimData, [, initialGuessIndex, ], =, new, InitialGuess, (, s]
[>, max, [, k, ], ), ), {, s, =, null, ;, }, }, }, }, optimData, [, initialGuessIndex, ]]
[[, k, ], >, max, [, k, ], ), ), {, s, =, null, ;, }, }, }, }, optimData]
[], >, max, [, k, ], ), ), {, s, =, null, ;, }, }, }, }, optimData, [, initialGuessIndex]
[), ), {, s, =, null, ;, }, }, }, }, optimData, [, initialGuessIndex, ], =, new, InitialGuess, (, s]
[[, k, ], ), ), {, s, =, null, ;, }, }, }, }, optimData, [, initialGuessIndex, ], =, new]
[], ), ), {, s, =, null, ;, }, }, }, }, optimData, [, initialGuessIndex, ], =, new, InitialGuess, (]
[=, null, ;, }, }, }, }, optimData, [, initialGuessIndex, ], =, new, InitialGuess, (, s, ), ;, final, PAIR]
[;, }, }, }, }, optimData, [, initialGuessIndex, ], =, new, InitialGuess, (, s, ), ;, final, PAIR, result, =]
[=, new, InitialGuess, (, s, ), ;, final, PAIR, result, =, optimizer, ., optimize, (, optimData, ), ;, store, (]
[[, initialGuessIndex, ], =, new, InitialGuess, (, s, ), ;, final, PAIR, result, =, optimizer, ., optimize, (, optimData, )]
[], =, new, InitialGuess, (, s, ), ;, final, PAIR, result, =, optimizer, ., optimize, (, optimData, ), ;, store]
[;, final, PAIR, result, =, optimizer, ., optimize, (, optimData, ), ;, store, (, result, ), ;, }, catch, (]
[), ;, final, PAIR, result, =, optimizer, ., optimize, (, optimData, ), ;, store, (, result, ), ;, }, catch]
[;, store, (, result, ), ;, }, catch, (, RuntimeException, mue, ), {, lastException, =, mue, ;, }, totalEvaluations, +=]
[., optimize, (, optimData, ), ;, store, (, result, ), ;, }, catch, (, RuntimeException, mue, ), {, lastException, =]
[), ;, store, (, result, ), ;, }, catch, (, RuntimeException, mue, ), {, lastException, =, mue, ;, }, totalEvaluations]
[;, }, catch, (, RuntimeException, mue, ), {, lastException, =, mue, ;, }, totalEvaluations, +=, optimizer, ., getEvaluations, (, )]
[), ;, }, catch, (, RuntimeException, mue, ), {, lastException, =, mue, ;, }, totalEvaluations, +=, optimizer, ., getEvaluations, (]
[=, mue, ;, }, totalEvaluations, +=, optimizer, ., getEvaluations, (, ), ;, }, final, PAIR, [, ], optima, =, getOptima]
[;, }, totalEvaluations, +=, optimizer, ., getEvaluations, (, ), ;, }, final, PAIR, [, ], optima, =, getOptima, (, )]
[+=, optimizer, ., getEvaluations, (, ), ;, }, final, PAIR, [, ], optima, =, getOptima, (, ), ;, if, (]
[;, }, final, PAIR, [, ], optima, =, getOptima, (, ), ;, if, (, optima, ., length, ==, 0, )]
[., getEvaluations, (, ), ;, }, final, PAIR, [, ], optima, =, getOptima, (, ), ;, if, (, optima, .]
[;, if, (, optima, ., length, ==, 0, ), {, throw, lastException, ;, }, return, optima, [, 0, ], ;]
[), {, throw, lastException, ;, }, return, optima, [, 0, ], ;, }, protected, abstract, void, store, (, PAIR, optimum]
[==, 0, ), {, throw, lastException, ;, }, return, optima, [, 0, ], ;, }, protected, abstract, void, store, (]
[., length, ==, 0, ), {, throw, lastException, ;, }, return, optima, [, 0, ], ;, }, protected, abstract, void]
[), {, throw, lastException, ;, }, return, optima, [, 0, ], ;, }, protected, abstract, void, store, (, PAIR, optimum]
[;, }, return, optima, [, 0, ], ;, }, protected, abstract, void, store, (, PAIR, optimum, ), ;, protected, abstract]
[;, }, protected, abstract, void, store, (, PAIR, optimum, ), ;, protected, abstract, void, clear, (, ), ;, }]
[[, 0, ], ;, }, protected, abstract, void, store, (, PAIR, optimum, ), ;, protected, abstract, void, clear, (, )]
[], ;, }, protected, abstract, void, store, (, PAIR, optimum, ), ;, protected, abstract, void, clear, (, ), ;, }]
