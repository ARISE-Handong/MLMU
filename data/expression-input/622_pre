[org, ., joda, ., time, ., DurationFieldType, ;, public, class, ScaledDurationField, extends, DecoratedDurationField, {, private, static, final, long, serialVersionUID, =]
[., joda, ., time, ., DurationFieldType, ;, public, class, ScaledDurationField, extends, DecoratedDurationField, {, private, static, final, long, serialVersionUID, =, -]
[private, final, int, iScalar, ;, public, ScaledDurationField, (, DurationField, field, ,, DurationFieldType, type, ,, int, scalar, ), {, super, (]
[int, iScalar, ;, public, ScaledDurationField, (, DurationField, field, ,, DurationFieldType, type, ,, int, scalar, ), {, super, (, field, ,]
[(, DurationField, field, ,, DurationFieldType, type, ,, int, scalar, ), {, super, (, field, ,, type, ), ;, if, (]
[(, DurationField, field, ,, DurationFieldType, type, ,, int, scalar, ), {, super, (, field, ,, type, ), ;, if, (]
[(, DurationField, field, ,, DurationFieldType, type, ,, int, scalar, ), {, super, (, field, ,, type, ), ;, if, (]
[field, ,, DurationFieldType, type, ,, int, scalar, ), {, super, (, field, ,, type, ), ;, if, (, scalar, ==]
[DurationFieldType, type, ,, int, scalar, ), {, super, (, field, ,, type, ), ;, if, (, scalar, ==, 0, ||]
[DurationFieldType, type, ,, int, scalar, ), {, super, (, field, ,, type, ), ;, if, (, scalar, ==, 0, ||]
[,, int, scalar, ), {, super, (, field, ,, type, ), ;, if, (, scalar, ==, 0, ||, scalar, ==]
[{, super, (, field, ,, type, ), ;, if, (, scalar, ==, 0, ||, scalar, ==, 1, ), {, throw]
[field, ,, type, ), ;, if, (, scalar, ==, 0, ||, scalar, ==, 1, ), {, throw, new, IllegalArgumentException, (]
[;, if, (, scalar, ==, 0, ||, scalar, ==, 1, ), {, throw, new, IllegalArgumentException, (, "The scalar must not be 0 or 1", ), ;, }]
[(, scalar, ==, 0, ||, scalar, ==, 1, ), {, throw, new, IllegalArgumentException, (, "The scalar must not be 0 or 1", ), ;, }, iScalar, =]
[IllegalArgumentException, (, "The scalar must not be 0 or 1", ), ;, }, iScalar, =, scalar, ;, }, public, int, getValue, (, long, duration, ), {, return]
[IllegalArgumentException, (, "The scalar must not be 0 or 1", ), ;, }, iScalar, =, scalar, ;, }, public, int, getValue, (, long, duration, ), {, return]
[IllegalArgumentException, (, "The scalar must not be 0 or 1", ), ;, }, iScalar, =, scalar, ;, }, public, int, getValue, (, long, duration, ), {, return]
[iScalar, =, scalar, ;, }, public, int, getValue, (, long, duration, ), {, return, getWrappedField, (, ), ., getValue, (]
[;, }, public, int, getValue, (, long, duration, ), {, return, getWrappedField, (, ), ., getValue, (, duration, ), /]
[(, ), ., getValue, (, duration, ), /, iScalar, ;, }, public, long, getValueAsLong, (, long, duration, ), {, return]
[(, ), ., getValue, (, duration, ), /, iScalar, ;, }, public, long, getValueAsLong, (, long, duration, ), {, return]
[(, ), ., getValue, (, duration, ), /, iScalar, ;, }, public, long, getValueAsLong, (, long, duration, ), {, return]
[), /, iScalar, ;, }, public, long, getValueAsLong, (, long, duration, ), {, return, getWrappedField, (, ), ., getValueAsLong, (]
[;, }, public, long, getValueAsLong, (, long, duration, ), {, return, getWrappedField, (, ), ., getValueAsLong, (, duration, ), /]
[getValueAsLong, (, duration, ), /, iScalar, ;, }, public, int, getValue, (, long, duration, ,, long, instant, ), {, return]
[getValueAsLong, (, duration, ), /, iScalar, ;, }, public, int, getValue, (, long, duration, ,, long, instant, ), {, return]
[getValueAsLong, (, duration, ), /, iScalar, ;, }, public, int, getValue, (, long, duration, ,, long, instant, ), {, return]
[;, }, public, int, getValue, (, long, duration, ,, long, instant, ), {, return, getWrappedField, (, ), ., getValue, (]
[public, int, getValue, (, long, duration, ,, long, instant, ), {, return, getWrappedField, (, ), ., getValue, (, duration, ,]
[(, long, duration, ,, long, instant, ), {, return, getWrappedField, (, ), ., getValue, (, duration, ,, instant, ), /]
[duration, ,, instant, ), /, iScalar, ;, }, public, long, getValueAsLong, (, long, duration, ,, long, instant, ), {, return]
[duration, ,, instant, ), /, iScalar, ;, }, public, long, getValueAsLong, (, long, duration, ,, long, instant, ), {, return]
[duration, ,, instant, ), /, iScalar, ;, }, public, long, getValueAsLong, (, long, duration, ,, long, instant, ), {, return]
[;, }, public, long, getValueAsLong, (, long, duration, ,, long, instant, ), {, return, getWrappedField, (, ), ., getValueAsLong, (]
[public, long, getValueAsLong, (, long, duration, ,, long, instant, ), {, return, getWrappedField, (, ), ., getValueAsLong, (, duration, ,]
[(, long, duration, ,, long, instant, ), {, return, getWrappedField, (, ), ., getValueAsLong, (, duration, ,, instant, ), /]
[(, duration, ,, instant, ), /, iScalar, ;, }, public, long, getMillis, (, int, value, ), {, long, scaled, =]
[(, duration, ,, instant, ), /, iScalar, ;, }, public, long, getMillis, (, int, value, ), {, long, scaled, =]
[duration, ,, instant, ), /, iScalar, ;, }, public, long, getMillis, (, int, value, ), {, long, scaled, =, (]
[), /, iScalar, ;, }, public, long, getMillis, (, int, value, ), {, long, scaled, =, (, (, long, )]
[;, }, public, long, getMillis, (, int, value, ), {, long, scaled, =, (, (, long, ), value, ), *]
[}, public, long, getMillis, (, int, value, ), {, long, scaled, =, (, (, long, ), value, ), *, (]
[getMillis, (, int, value, ), {, long, scaled, =, (, (, long, ), value, ), *, (, (, long, )]
[), {, long, scaled, =, (, (, long, ), value, ), *, (, (, long, ), iScalar, ), ;, return]
[), {, long, scaled, =, (, (, long, ), value, ), *, (, (, long, ), iScalar, ), ;, return]
[(, long, ), value, ), *, (, (, long, ), iScalar, ), ;, return, getWrappedField, (, ), ., getMillis, (]
[(, ), ., getMillis, (, scaled, ), ;, }, public, long, getMillis, (, long, value, ), {, long, scaled, =]
[(, ), ., getMillis, (, scaled, ), ;, }, public, long, getMillis, (, long, value, ), {, long, scaled, =]
[(, scaled, ), ;, }, public, long, getMillis, (, long, value, ), {, long, scaled, =, FieldUtils, ., safeMultiply, (]
[), ;, }, public, long, getMillis, (, long, value, ), {, long, scaled, =, FieldUtils, ., safeMultiply, (, value, ,]
[long, getMillis, (, long, value, ), {, long, scaled, =, FieldUtils, ., safeMultiply, (, value, ,, iScalar, ), ;, return]
[long, getMillis, (, long, value, ), {, long, scaled, =, FieldUtils, ., safeMultiply, (, value, ,, iScalar, ), ;, return]
[{, long, scaled, =, FieldUtils, ., safeMultiply, (, value, ,, iScalar, ), ;, return, getWrappedField, (, ), ., getMillis, (]
[getMillis, (, scaled, ), ;, }, public, long, getMillis, (, int, value, ,, long, instant, ), {, long, scaled, =]
[getMillis, (, scaled, ), ;, }, public, long, getMillis, (, int, value, ,, long, instant, ), {, long, scaled, =]
[(, scaled, ), ;, }, public, long, getMillis, (, int, value, ,, long, instant, ), {, long, scaled, =, (]
[;, }, public, long, getMillis, (, int, value, ,, long, instant, ), {, long, scaled, =, (, (, long, )]
[long, getMillis, (, int, value, ,, long, instant, ), {, long, scaled, =, (, (, long, ), value, ), *]
[getMillis, (, int, value, ,, long, instant, ), {, long, scaled, =, (, (, long, ), value, ), *, (]
[value, ,, long, instant, ), {, long, scaled, =, (, (, long, ), value, ), *, (, (, long, )]
[), {, long, scaled, =, (, (, long, ), value, ), *, (, (, long, ), iScalar, ), ;, return]
[), {, long, scaled, =, (, (, long, ), value, ), *, (, (, long, ), iScalar, ), ;, return]
[(, long, ), value, ), *, (, (, long, ), iScalar, ), ;, return, getWrappedField, (, ), ., getMillis, (]
[), value, ), *, (, (, long, ), iScalar, ), ;, return, getWrappedField, (, ), ., getMillis, (, scaled, ,]
[scaled, ,, instant, ), ;, }, public, long, getMillis, (, long, value, ,, long, instant, ), {, long, scaled, =]
[scaled, ,, instant, ), ;, }, public, long, getMillis, (, long, value, ,, long, instant, ), {, long, scaled, =]
[;, }, public, long, getMillis, (, long, value, ,, long, instant, ), {, long, scaled, =, FieldUtils, ., safeMultiply, (]
[public, long, getMillis, (, long, value, ,, long, instant, ), {, long, scaled, =, FieldUtils, ., safeMultiply, (, value, ,]
[long, value, ,, long, instant, ), {, long, scaled, =, FieldUtils, ., safeMultiply, (, value, ,, iScalar, ), ;, return]
[long, value, ,, long, instant, ), {, long, scaled, =, FieldUtils, ., safeMultiply, (, value, ,, iScalar, ), ;, return]
[{, long, scaled, =, FieldUtils, ., safeMultiply, (, value, ,, iScalar, ), ;, return, getWrappedField, (, ), ., getMillis, (]
[scaled, =, FieldUtils, ., safeMultiply, (, value, ,, iScalar, ), ;, return, getWrappedField, (, ), ., getMillis, (, scaled, ,]
[scaled, ,, instant, ), ;, }, public, long, add, (, long, instant, ,, int, value, ), {, long, scaled, =]
[scaled, ,, instant, ), ;, }, public, long, add, (, long, instant, ,, int, value, ), {, long, scaled, =]
[,, instant, ), ;, }, public, long, add, (, long, instant, ,, int, value, ), {, long, scaled, =, (]
[;, }, public, long, add, (, long, instant, ,, int, value, ), {, long, scaled, =, (, (, long, )]
[long, add, (, long, instant, ,, int, value, ), {, long, scaled, =, (, (, long, ), value, ), *]
[add, (, long, instant, ,, int, value, ), {, long, scaled, =, (, (, long, ), value, ), *, (]
[instant, ,, int, value, ), {, long, scaled, =, (, (, long, ), value, ), *, (, (, long, )]
[), {, long, scaled, =, (, (, long, ), value, ), *, (, (, long, ), iScalar, ), ;, return]
[), {, long, scaled, =, (, (, long, ), value, ), *, (, (, long, ), iScalar, ), ;, return]
[(, long, ), value, ), *, (, (, long, ), iScalar, ), ;, return, getWrappedField, (, ), ., add, (]
[), value, ), *, (, (, long, ), iScalar, ), ;, return, getWrappedField, (, ), ., add, (, instant, ,]
[instant, ,, scaled, ), ;, }, public, long, add, (, long, instant, ,, long, value, ), {, long, scaled, =]
[instant, ,, scaled, ), ;, }, public, long, add, (, long, instant, ,, long, value, ), {, long, scaled, =]
[;, }, public, long, add, (, long, instant, ,, long, value, ), {, long, scaled, =, FieldUtils, ., safeMultiply, (]
[public, long, add, (, long, instant, ,, long, value, ), {, long, scaled, =, FieldUtils, ., safeMultiply, (, value, ,]
[long, instant, ,, long, value, ), {, long, scaled, =, FieldUtils, ., safeMultiply, (, value, ,, iScalar, ), ;, return]
[long, instant, ,, long, value, ), {, long, scaled, =, FieldUtils, ., safeMultiply, (, value, ,, iScalar, ), ;, return]
[{, long, scaled, =, FieldUtils, ., safeMultiply, (, value, ,, iScalar, ), ;, return, getWrappedField, (, ), ., add, (]
[scaled, =, FieldUtils, ., safeMultiply, (, value, ,, iScalar, ), ;, return, getWrappedField, (, ), ., add, (, instant, ,]
[add, (, instant, ,, scaled, ), ;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return]
[add, (, instant, ,, scaled, ), ;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return]
[add, (, instant, ,, scaled, ), ;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return]
[;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, getWrappedField, (, ), ., getDifference, (]
[public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, getWrappedField, (, ), ., getDifference, (, minuendInstant, ,]
[(, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, getWrappedField, (, ), ., getDifference, (, minuendInstant, ,, subtrahendInstant, ), /]
[minuendInstant, ,, subtrahendInstant, ), /, iScalar, ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return]
[minuendInstant, ,, subtrahendInstant, ), /, iScalar, ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return]
[minuendInstant, ,, subtrahendInstant, ), /, iScalar, ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return]
[;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, getWrappedField, (, ), ., getDifferenceAsLong, (]
[public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, getWrappedField, (, ), ., getDifferenceAsLong, (, minuendInstant, ,]
[(, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, getWrappedField, (, ), ., getDifferenceAsLong, (, minuendInstant, ,, subtrahendInstant, ), /]
[(, ), ., getDifferenceAsLong, (, minuendInstant, ,, subtrahendInstant, ), /, iScalar, ;, }, public, long, getUnitMillis, (, ), {, return]
[(, ), ., getDifferenceAsLong, (, minuendInstant, ,, subtrahendInstant, ), /, iScalar, ;, }, public, long, getUnitMillis, (, ), {, return]
[(, ), ., getDifferenceAsLong, (, minuendInstant, ,, subtrahendInstant, ), /, iScalar, ;, }, public, long, getUnitMillis, (, ), {, return]
[), /, iScalar, ;, }, public, long, getUnitMillis, (, ), {, return, getWrappedField, (, ), ., getUnitMillis, (, ), *]
[{, return, getWrappedField, (, ), ., getUnitMillis, (, ), *, iScalar, ;, }, public, int, getScalar, (, ), {, return]
[public, int, getScalar, (, ), {, return, iScalar, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[public, int, getScalar, (, ), {, return, iScalar, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[getScalar, (, ), {, return, iScalar, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, this, ==]
[return, iScalar, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, this, ==, obj, ), {, return]
[equals, (, Object, obj, ), {, if, (, this, ==, obj, ), {, return, true, ;, }, else, if, (]
[equals, (, Object, obj, ), {, if, (, this, ==, obj, ), {, return, true, ;, }, else, if, (]
[this, ==, obj, ), {, return, true, ;, }, else, if, (, obj, instanceof, ScaledDurationField, ), {, ScaledDurationField, other, =]
[), {, return, true, ;, }, else, if, (, obj, instanceof, ScaledDurationField, ), {, ScaledDurationField, other, =, (, ScaledDurationField, )]
[true, ;, }, else, if, (, obj, instanceof, ScaledDurationField, ), {, ScaledDurationField, other, =, (, ScaledDurationField, ), obj, ;, return]
[true, ;, }, else, if, (, obj, instanceof, ScaledDurationField, ), {, ScaledDurationField, other, =, (, ScaledDurationField, ), obj, ;, return]
[true, ;, }, else, if, (, obj, instanceof, ScaledDurationField, ), {, ScaledDurationField, other, =, (, ScaledDurationField, ), obj, ;, return]
[;, }, else, if, (, obj, instanceof, ScaledDurationField, ), {, ScaledDurationField, other, =, (, ScaledDurationField, ), obj, ;, return, (]
[;, }, else, if, (, obj, instanceof, ScaledDurationField, ), {, ScaledDurationField, other, =, (, ScaledDurationField, ), obj, ;, return, (]
[instanceof, ScaledDurationField, ), {, ScaledDurationField, other, =, (, ScaledDurationField, ), obj, ;, return, (, getWrappedField, (, ), ., equals, (]
[instanceof, ScaledDurationField, ), {, ScaledDurationField, other, =, (, ScaledDurationField, ), obj, ;, return, (, getWrappedField, (, ), ., equals, (]
[ScaledDurationField, ), obj, ;, return, (, getWrappedField, (, ), ., equals, (, other, ., getWrappedField, (, ), ), ), &&]
[), obj, ;, return, (, getWrappedField, (, ), ., equals, (, other, ., getWrappedField, (, ), ), ), &&, (]
[), obj, ;, return, (, getWrappedField, (, ), ., equals, (, other, ., getWrappedField, (, ), ), ), &&, (]
[(, getWrappedField, (, ), ., equals, (, other, ., getWrappedField, (, ), ), ), &&, (, getType, (, ), ==]
[(, getWrappedField, (, ), ., equals, (, other, ., getWrappedField, (, ), ), ), &&, (, getType, (, ), ==]
[other, ., getWrappedField, (, ), ), ), &&, (, getType, (, ), ==, other, ., getType, (, ), ), &&]
[., getWrappedField, (, ), ), ), &&, (, getType, (, ), ==, other, ., getType, (, ), ), &&, (]
[., getWrappedField, (, ), ), ), &&, (, getType, (, ), ==, other, ., getType, (, ), ), &&, (]
[(, ), ), ), &&, (, getType, (, ), ==, other, ., getType, (, ), ), &&, (, iScalar, ==]
[(, ), ), ), &&, (, getType, (, ), ==, other, ., getType, (, ), ), &&, (, iScalar, ==]
[(, ), ==, other, ., getType, (, ), ), &&, (, iScalar, ==, other, ., iScalar, ), ;, }, return]
[==, other, ., iScalar, ), ;, }, return, false, ;, }, public, int, hashCode, (, ), {, long, scalar, =]
[;, }, return, false, ;, }, public, int, hashCode, (, ), {, long, scalar, =, iScalar, ;, int, hash, =]
[false, ;, }, public, int, hashCode, (, ), {, long, scalar, =, iScalar, ;, int, hash, =, (, int, )]
[;, }, public, int, hashCode, (, ), {, long, scalar, =, iScalar, ;, int, hash, =, (, int, ), (]
[;, }, public, int, hashCode, (, ), {, long, scalar, =, iScalar, ;, int, hash, =, (, int, ), (]
[public, int, hashCode, (, ), {, long, scalar, =, iScalar, ;, int, hash, =, (, int, ), (, scalar, ^]
[int, hashCode, (, ), {, long, scalar, =, iScalar, ;, int, hash, =, (, int, ), (, scalar, ^, (]
[int, hashCode, (, ), {, long, scalar, =, iScalar, ;, int, hash, =, (, int, ), (, scalar, ^, (]
[{, long, scalar, =, iScalar, ;, int, hash, =, (, int, ), (, scalar, ^, (, scalar, >, >, >]
[iScalar, ;, int, hash, =, (, int, ), (, scalar, ^, (, scalar, >, >, >, 32, ), ), ;]
[int, hash, =, (, int, ), (, scalar, ^, (, scalar, >, >, >, 32, ), ), ;, hash, +=]
[int, hash, =, (, int, ), (, scalar, ^, (, scalar, >, >, >, 32, ), ), ;, hash, +=]
[^, (, scalar, >, >, >, 32, ), ), ;, hash, +=, getType, (, ), ., hashCode, (, ), ;]
[scalar, >, >, >, 32, ), ), ;, hash, +=, getType, (, ), ., hashCode, (, ), ;, hash, +=]
[scalar, >, >, >, 32, ), ), ;, hash, +=, getType, (, ), ., hashCode, (, ), ;, hash, +=]
[+=, getType, (, ), ., hashCode, (, ), ;, hash, +=, getWrappedField, (, ), ., hashCode, (, ), ;, return]
