[;, if, (, n, <, 2, ), {, throw, new, IllegalArgumentException, (, "Not enough data.", ), ;, }, double, sumX, =, 0]
[., length, ;, if, (, n, <, 2, ), {, throw, new, IllegalArgumentException, (, "Not enough data.", ), ;, }, double, sumX]
[), {, throw, new, IllegalArgumentException, (, "Not enough data.", ), ;, }, double, sumX, =, 0, ;, double, sumY, =, 0, ;]
[<, 2, ), {, throw, new, IllegalArgumentException, (, "Not enough data.", ), ;, }, double, sumX, =, 0, ;, double, sumY, =]
[), {, throw, new, IllegalArgumentException, (, "Not enough data.", ), ;, }, double, sumX, =, 0, ;, double, sumY, =, 0, ;]
[;, }, double, sumX, =, 0, ;, double, sumY, =, 0, ;, double, sumXX, =, 0, ;, double, sumXY, =]
[), ;, }, double, sumX, =, 0, ;, double, sumY, =, 0, ;, double, sumXX, =, 0, ;, double, sumXY]
[;, double, sumY, =, 0, ;, double, sumXX, =, 0, ;, double, sumXY, =, 0, ;, for, (, int, i]
[;, double, sumXX, =, 0, ;, double, sumXY, =, 0, ;, for, (, int, i, =, 0, ;, i, <]
[;, double, sumXY, =, 0, ;, for, (, int, i, =, 0, ;, i, <, n, ;, i, ++, )]
[;, for, (, int, i, =, 0, ;, i, <, n, ;, i, ++, ), {, double, x, =, data]
[;, i, <, n, ;, i, ++, ), {, double, x, =, data, [, i, ], [, 0, ], ;]
[;, i, ++, ), {, double, x, =, data, [, i, ], [, 0, ], ;, double, y, =, data]
[<, n, ;, i, ++, ), {, double, x, =, data, [, i, ], [, 0, ], ;, double, y]
[;, i, ++, ), {, double, x, =, data, [, i, ], [, 0, ], ;, double, y, =, data]
[), {, double, x, =, data, [, i, ], [, 0, ], ;, double, y, =, data, [, i, ]]
[++, ), {, double, x, =, data, [, i, ], [, 0, ], ;, double, y, =, data, [, i]
[;, double, y, =, data, [, i, ], [, 1, ], ;, sumX, +=, x, ;, sumY, +=, y, ;]
[[, 0, ], ;, double, y, =, data, [, i, ], [, 1, ], ;, sumX, +=, x, ;, sumY]
[[, i, ], [, 0, ], ;, double, y, =, data, [, i, ], [, 1, ], ;, sumX, +=]
[], [, 0, ], ;, double, y, =, data, [, i, ], [, 1, ], ;, sumX, +=, x, ;]
[], ;, double, y, =, data, [, i, ], [, 1, ], ;, sumX, +=, x, ;, sumY, +=, y]
[;, sumX, +=, x, ;, sumY, +=, y, ;, double, xx, =, x, *, x, ;, sumXX, +=, xx, ;]
[[, 1, ], ;, sumX, +=, x, ;, sumY, +=, y, ;, double, xx, =, x, *, x, ;, sumXX]
[[, i, ], [, 1, ], ;, sumX, +=, x, ;, sumY, +=, y, ;, double, xx, =, x, *]
[], [, 1, ], ;, sumX, +=, x, ;, sumY, +=, y, ;, double, xx, =, x, *, x, ;]
[], ;, sumX, +=, x, ;, sumY, +=, y, ;, double, xx, =, x, *, x, ;, sumXX, +=, xx]
[+=, x, ;, sumY, +=, y, ;, double, xx, =, x, *, x, ;, sumXX, +=, xx, ;, double, xy]
[;, sumY, +=, y, ;, double, xx, =, x, *, x, ;, sumXX, +=, xx, ;, double, xy, =, x]
[+=, y, ;, double, xx, =, x, *, x, ;, sumXX, +=, xx, ;, double, xy, =, x, *, y]
[;, double, xx, =, x, *, x, ;, sumXX, +=, xx, ;, double, xy, =, x, *, y, ;, sumXY]
[;, sumXX, +=, xx, ;, double, xy, =, x, *, y, ;, sumXY, +=, xy, ;, }, double, sxx, =]
[*, x, ;, sumXX, +=, xx, ;, double, xy, =, x, *, y, ;, sumXY, +=, xy, ;, }, double]
[;, sumXX, +=, xx, ;, double, xy, =, x, *, y, ;, sumXY, +=, xy, ;, }, double, sxx, =]
[+=, xx, ;, double, xy, =, x, *, y, ;, sumXY, +=, xy, ;, }, double, sxx, =, sumXX, -]
[;, double, xy, =, x, *, y, ;, sumXY, +=, xy, ;, }, double, sxx, =, sumXX, -, (, sumX]
[;, sumXY, +=, xy, ;, }, double, sxx, =, sumXX, -, (, sumX, *, sumX, ), /, n, ;, double]
[*, y, ;, sumXY, +=, xy, ;, }, double, sxx, =, sumXX, -, (, sumX, *, sumX, ), /, n]
[;, sumXY, +=, xy, ;, }, double, sxx, =, sumXX, -, (, sumX, *, sumX, ), /, n, ;, double]
[+=, xy, ;, }, double, sxx, =, sumXX, -, (, sumX, *, sumX, ), /, n, ;, double, sxy, =]
[;, }, double, sxx, =, sumXX, -, (, sumX, *, sumX, ), /, n, ;, double, sxy, =, sumXY, -]
[;, double, sxy, =, sumXY, -, (, sumX, *, sumY, ), /, n, ;, double, xbar, =, sumX, /, n]
[-, (, sumX, *, sumX, ), /, n, ;, double, sxy, =, sumXY, -, (, sumX, *, sumY, ), /]
[;, double, sxy, =, sumXY, -, (, sumX, *, sumY, ), /, n, ;, double, xbar, =, sumX, /, n]
[/, n, ;, double, sxy, =, sumXY, -, (, sumX, *, sumY, ), /, n, ;, double, xbar, =, sumX]
[), /, n, ;, double, sxy, =, sumXY, -, (, sumX, *, sumY, ), /, n, ;, double, xbar, =]
[*, sumX, ), /, n, ;, double, sxy, =, sumXY, -, (, sumX, *, sumY, ), /, n, ;, double]
[), /, n, ;, double, sxy, =, sumXY, -, (, sumX, *, sumY, ), /, n, ;, double, xbar, =]
[;, double, sxy, =, sumXY, -, (, sumX, *, sumY, ), /, n, ;, double, xbar, =, sumX, /, n]
[;, double, xbar, =, sumX, /, n, ;, double, ybar, =, sumY, /, n, ;, double, [, ], result, =]
[-, (, sumX, *, sumY, ), /, n, ;, double, xbar, =, sumX, /, n, ;, double, ybar, =, sumY]
[;, double, xbar, =, sumX, /, n, ;, double, ybar, =, sumY, /, n, ;, double, [, ], result, =]
[/, n, ;, double, xbar, =, sumX, /, n, ;, double, ybar, =, sumY, /, n, ;, double, [, ]]
[), /, n, ;, double, xbar, =, sumX, /, n, ;, double, ybar, =, sumY, /, n, ;, double, []
[*, sumY, ), /, n, ;, double, xbar, =, sumX, /, n, ;, double, ybar, =, sumY, /, n, ;]
[), /, n, ;, double, xbar, =, sumX, /, n, ;, double, ybar, =, sumY, /, n, ;, double, []
[;, double, xbar, =, sumX, /, n, ;, double, ybar, =, sumY, /, n, ;, double, [, ], result, =]
[;, double, ybar, =, sumY, /, n, ;, double, [, ], result, =, new, double, [, 2, ], ;, result]
[/, n, ;, double, ybar, =, sumY, /, n, ;, double, [, ], result, =, new, double, [, 2, ]]
[;, double, ybar, =, sumY, /, n, ;, double, [, ], result, =, new, double, [, 2, ], ;, result]
[;, double, [, ], result, =, new, double, [, 2, ], ;, result, [, 1, ], =, sxy, /, sxx]
[/, n, ;, double, [, ], result, =, new, double, [, 2, ], ;, result, [, 1, ], =, sxy]
[;, double, [, ], result, =, new, double, [, 2, ], ;, result, [, 1, ], =, sxy, /, sxx]
[;, result, [, 1, ], =, sxy, /, sxx, ;, result, [, 0, ], =, ybar, -, result, [, 1]
[], ;, result, [, 1, ], =, sxy, /, sxx, ;, result, [, 0, ], =, ybar, -, result, []
[=, sxy, /, sxx, ;, result, [, 0, ], =, ybar, -, result, [, 1, ], *, xbar, ;, return]
[[, 1, ], =, sxy, /, sxx, ;, result, [, 0, ], =, ybar, -, result, [, 1, ], *]
[], =, sxy, /, sxx, ;, result, [, 0, ], =, ybar, -, result, [, 1, ], *, xbar, ;]
[;, result, [, 0, ], =, ybar, -, result, [, 1, ], *, xbar, ;, return, result, ;, }, public]
[/, sxx, ;, result, [, 0, ], =, ybar, -, result, [, 1, ], *, xbar, ;, return, result, ;]
[;, result, [, 0, ], =, ybar, -, result, [, 1, ], *, xbar, ;, return, result, ;, }, public]
[=, ybar, -, result, [, 1, ], *, xbar, ;, return, result, ;, }, public, static, double, [, ], getOLSRegression]
[[, 0, ], =, ybar, -, result, [, 1, ], *, xbar, ;, return, result, ;, }, public, static, double]
[], =, ybar, -, result, [, 1, ], *, xbar, ;, return, result, ;, }, public, static, double, [, ]]
[;, return, result, ;, }, public, static, double, [, ], getOLSRegression, (, XYDataset, data, ,, int, series, ), {, int]
[-, result, [, 1, ], *, xbar, ;, return, result, ;, }, public, static, double, [, ], getOLSRegression, (, XYDataset]
[;, return, result, ;, }, public, static, double, [, ], getOLSRegression, (, XYDataset, data, ,, int, series, ), {, int]
[*, xbar, ;, return, result, ;, }, public, static, double, [, ], getOLSRegression, (, XYDataset, data, ,, int, series, )]
[[, 1, ], *, xbar, ;, return, result, ;, }, public, static, double, [, ], getOLSRegression, (, XYDataset, data, ,]
[], *, xbar, ;, return, result, ;, }, public, static, double, [, ], getOLSRegression, (, XYDataset, data, ,, int, series]
[;, return, result, ;, }, public, static, double, [, ], getOLSRegression, (, XYDataset, data, ,, int, series, ), {, int]
[;, }, public, static, double, [, ], getOLSRegression, (, XYDataset, data, ,, int, series, ), {, int, n, =, data]
[;, if, (, n, <, 2, ), {, throw, new, IllegalArgumentException, (, "Not enough data.", ), ;, }, double, sumX, =, 0]
[., getItemCount, (, series, ), ;, if, (, n, <, 2, ), {, throw, new, IllegalArgumentException, (, "Not enough data.", ), ;]
[), ;, if, (, n, <, 2, ), {, throw, new, IllegalArgumentException, (, "Not enough data.", ), ;, }, double, sumX, =]
[), {, throw, new, IllegalArgumentException, (, "Not enough data.", ), ;, }, double, sumX, =, 0, ;, double, sumY, =, 0, ;]
[<, 2, ), {, throw, new, IllegalArgumentException, (, "Not enough data.", ), ;, }, double, sumX, =, 0, ;, double, sumY, =]
[), {, throw, new, IllegalArgumentException, (, "Not enough data.", ), ;, }, double, sumX, =, 0, ;, double, sumY, =, 0, ;]
[;, }, double, sumX, =, 0, ;, double, sumY, =, 0, ;, double, sumXX, =, 0, ;, double, sumXY, =]
[), ;, }, double, sumX, =, 0, ;, double, sumY, =, 0, ;, double, sumXX, =, 0, ;, double, sumXY]
[;, double, sumY, =, 0, ;, double, sumXX, =, 0, ;, double, sumXY, =, 0, ;, for, (, int, i]
[;, double, sumXX, =, 0, ;, double, sumXY, =, 0, ;, for, (, int, i, =, 0, ;, i, <]
[;, double, sumXY, =, 0, ;, for, (, int, i, =, 0, ;, i, <, n, ;, i, ++, )]
[;, for, (, int, i, =, 0, ;, i, <, n, ;, i, ++, ), {, double, x, =, data]
[;, i, <, n, ;, i, ++, ), {, double, x, =, data, ., getXValue, (, series, ,, i, )]
[;, i, ++, ), {, double, x, =, data, ., getXValue, (, series, ,, i, ), ;, double, y, =]
[<, n, ;, i, ++, ), {, double, x, =, data, ., getXValue, (, series, ,, i, ), ;, double]
[;, i, ++, ), {, double, x, =, data, ., getXValue, (, series, ,, i, ), ;, double, y, =]
[), {, double, x, =, data, ., getXValue, (, series, ,, i, ), ;, double, y, =, data, ., getYValue]
[++, ), {, double, x, =, data, ., getXValue, (, series, ,, i, ), ;, double, y, =, data, .]
[;, double, y, =, data, ., getYValue, (, series, ,, i, ), ;, sumX, +=, x, ;, sumY, +=, y]
[., getXValue, (, series, ,, i, ), ;, double, y, =, data, ., getYValue, (, series, ,, i, ), ;]
[,, i, ), ;, double, y, =, data, ., getYValue, (, series, ,, i, ), ;, sumX, +=, x, ;]
[), ;, double, y, =, data, ., getYValue, (, series, ,, i, ), ;, sumX, +=, x, ;, sumY, +=]
[;, sumX, +=, x, ;, sumY, +=, y, ;, double, xx, =, x, *, x, ;, sumXX, +=, xx, ;]
[., getYValue, (, series, ,, i, ), ;, sumX, +=, x, ;, sumY, +=, y, ;, double, xx, =, x]
[,, i, ), ;, sumX, +=, x, ;, sumY, +=, y, ;, double, xx, =, x, *, x, ;, sumXX]
[), ;, sumX, +=, x, ;, sumY, +=, y, ;, double, xx, =, x, *, x, ;, sumXX, +=, xx]
[+=, x, ;, sumY, +=, y, ;, double, xx, =, x, *, x, ;, sumXX, +=, xx, ;, double, xy]
[;, sumY, +=, y, ;, double, xx, =, x, *, x, ;, sumXX, +=, xx, ;, double, xy, =, x]
[+=, y, ;, double, xx, =, x, *, x, ;, sumXX, +=, xx, ;, double, xy, =, x, *, y]
[;, double, xx, =, x, *, x, ;, sumXX, +=, xx, ;, double, xy, =, x, *, y, ;, sumXY]
[;, sumXX, +=, xx, ;, double, xy, =, x, *, y, ;, sumXY, +=, xy, ;, }, double, sxx, =]
[*, x, ;, sumXX, +=, xx, ;, double, xy, =, x, *, y, ;, sumXY, +=, xy, ;, }, double]
[;, sumXX, +=, xx, ;, double, xy, =, x, *, y, ;, sumXY, +=, xy, ;, }, double, sxx, =]
[+=, xx, ;, double, xy, =, x, *, y, ;, sumXY, +=, xy, ;, }, double, sxx, =, sumXX, -]
[;, double, xy, =, x, *, y, ;, sumXY, +=, xy, ;, }, double, sxx, =, sumXX, -, (, sumX]
[;, sumXY, +=, xy, ;, }, double, sxx, =, sumXX, -, (, sumX, *, sumX, ), /, n, ;, double]
[*, y, ;, sumXY, +=, xy, ;, }, double, sxx, =, sumXX, -, (, sumX, *, sumX, ), /, n]
[;, sumXY, +=, xy, ;, }, double, sxx, =, sumXX, -, (, sumX, *, sumX, ), /, n, ;, double]
[+=, xy, ;, }, double, sxx, =, sumXX, -, (, sumX, *, sumX, ), /, n, ;, double, sxy, =]
[;, }, double, sxx, =, sumXX, -, (, sumX, *, sumX, ), /, n, ;, double, sxy, =, sumXY, -]
[;, double, sxy, =, sumXY, -, (, sumX, *, sumY, ), /, n, ;, double, xbar, =, sumX, /, n]
[-, (, sumX, *, sumX, ), /, n, ;, double, sxy, =, sumXY, -, (, sumX, *, sumY, ), /]
[;, double, sxy, =, sumXY, -, (, sumX, *, sumY, ), /, n, ;, double, xbar, =, sumX, /, n]
[/, n, ;, double, sxy, =, sumXY, -, (, sumX, *, sumY, ), /, n, ;, double, xbar, =, sumX]
[), /, n, ;, double, sxy, =, sumXY, -, (, sumX, *, sumY, ), /, n, ;, double, xbar, =]
[*, sumX, ), /, n, ;, double, sxy, =, sumXY, -, (, sumX, *, sumY, ), /, n, ;, double]
[), /, n, ;, double, sxy, =, sumXY, -, (, sumX, *, sumY, ), /, n, ;, double, xbar, =]
[;, double, sxy, =, sumXY, -, (, sumX, *, sumY, ), /, n, ;, double, xbar, =, sumX, /, n]
[;, double, xbar, =, sumX, /, n, ;, double, ybar, =, sumY, /, n, ;, double, [, ], result, =]
[-, (, sumX, *, sumY, ), /, n, ;, double, xbar, =, sumX, /, n, ;, double, ybar, =, sumY]
[;, double, xbar, =, sumX, /, n, ;, double, ybar, =, sumY, /, n, ;, double, [, ], result, =]
[/, n, ;, double, xbar, =, sumX, /, n, ;, double, ybar, =, sumY, /, n, ;, double, [, ]]
[), /, n, ;, double, xbar, =, sumX, /, n, ;, double, ybar, =, sumY, /, n, ;, double, []
[*, sumY, ), /, n, ;, double, xbar, =, sumX, /, n, ;, double, ybar, =, sumY, /, n, ;]
[), /, n, ;, double, xbar, =, sumX, /, n, ;, double, ybar, =, sumY, /, n, ;, double, []
[;, double, xbar, =, sumX, /, n, ;, double, ybar, =, sumY, /, n, ;, double, [, ], result, =]
[;, double, ybar, =, sumY, /, n, ;, double, [, ], result, =, new, double, [, 2, ], ;, result]
[/, n, ;, double, ybar, =, sumY, /, n, ;, double, [, ], result, =, new, double, [, 2, ]]
[;, double, ybar, =, sumY, /, n, ;, double, [, ], result, =, new, double, [, 2, ], ;, result]
[;, double, [, ], result, =, new, double, [, 2, ], ;, result, [, 1, ], =, sxy, /, sxx]
[/, n, ;, double, [, ], result, =, new, double, [, 2, ], ;, result, [, 1, ], =, sxy]
[;, double, [, ], result, =, new, double, [, 2, ], ;, result, [, 1, ], =, sxy, /, sxx]
[;, result, [, 1, ], =, sxy, /, sxx, ;, result, [, 0, ], =, ybar, -, result, [, 1]
[], ;, result, [, 1, ], =, sxy, /, sxx, ;, result, [, 0, ], =, ybar, -, result, []
[=, sxy, /, sxx, ;, result, [, 0, ], =, ybar, -, result, [, 1, ], *, xbar, ;, return]
[[, 1, ], =, sxy, /, sxx, ;, result, [, 0, ], =, ybar, -, result, [, 1, ], *]
[], =, sxy, /, sxx, ;, result, [, 0, ], =, ybar, -, result, [, 1, ], *, xbar, ;]
[;, result, [, 0, ], =, ybar, -, result, [, 1, ], *, xbar, ;, return, result, ;, }, public]
[/, sxx, ;, result, [, 0, ], =, ybar, -, result, [, 1, ], *, xbar, ;, return, result, ;]
[;, result, [, 0, ], =, ybar, -, result, [, 1, ], *, xbar, ;, return, result, ;, }, public]
[=, ybar, -, result, [, 1, ], *, xbar, ;, return, result, ;, }, public, static, double, [, ], getPowerRegression]
[[, 0, ], =, ybar, -, result, [, 1, ], *, xbar, ;, return, result, ;, }, public, static, double]
[], =, ybar, -, result, [, 1, ], *, xbar, ;, return, result, ;, }, public, static, double, [, ]]
[;, return, result, ;, }, public, static, double, [, ], getPowerRegression, (, double, [, ], [, ], data, ), {]
[-, result, [, 1, ], *, xbar, ;, return, result, ;, }, public, static, double, [, ], getPowerRegression, (, double]
[;, return, result, ;, }, public, static, double, [, ], getPowerRegression, (, double, [, ], [, ], data, ), {]
[*, xbar, ;, return, result, ;, }, public, static, double, [, ], getPowerRegression, (, double, [, ], [, ], data]
[[, 1, ], *, xbar, ;, return, result, ;, }, public, static, double, [, ], getPowerRegression, (, double, [, ]]
[], *, xbar, ;, return, result, ;, }, public, static, double, [, ], getPowerRegression, (, double, [, ], [, ]]
[;, return, result, ;, }, public, static, double, [, ], getPowerRegression, (, double, [, ], [, ], data, ), {]
[;, }, public, static, double, [, ], getPowerRegression, (, double, [, ], [, ], data, ), {, int, n, =]
[;, if, (, n, <, 2, ), {, throw, new, IllegalArgumentException, (, "Not enough data.", ), ;, }, double, sumX, =, 0]
[., length, ;, if, (, n, <, 2, ), {, throw, new, IllegalArgumentException, (, "Not enough data.", ), ;, }, double, sumX]
[), {, throw, new, IllegalArgumentException, (, "Not enough data.", ), ;, }, double, sumX, =, 0, ;, double, sumY, =, 0, ;]
[<, 2, ), {, throw, new, IllegalArgumentException, (, "Not enough data.", ), ;, }, double, sumX, =, 0, ;, double, sumY, =]
[), {, throw, new, IllegalArgumentException, (, "Not enough data.", ), ;, }, double, sumX, =, 0, ;, double, sumY, =, 0, ;]
[;, }, double, sumX, =, 0, ;, double, sumY, =, 0, ;, double, sumXX, =, 0, ;, double, sumXY, =]
[), ;, }, double, sumX, =, 0, ;, double, sumY, =, 0, ;, double, sumXX, =, 0, ;, double, sumXY]
[;, double, sumY, =, 0, ;, double, sumXX, =, 0, ;, double, sumXY, =, 0, ;, for, (, int, i]
[;, double, sumXX, =, 0, ;, double, sumXY, =, 0, ;, for, (, int, i, =, 0, ;, i, <]
[;, double, sumXY, =, 0, ;, for, (, int, i, =, 0, ;, i, <, n, ;, i, ++, )]
[;, for, (, int, i, =, 0, ;, i, <, n, ;, i, ++, ), {, double, x, =, Math]
[;, i, <, n, ;, i, ++, ), {, double, x, =, Math, ., log, (, data, [, i, ]]
[;, i, ++, ), {, double, x, =, Math, ., log, (, data, [, i, ], [, 0, ], )]
[<, n, ;, i, ++, ), {, double, x, =, Math, ., log, (, data, [, i, ], [, 0]
[;, i, ++, ), {, double, x, =, Math, ., log, (, data, [, i, ], [, 0, ], )]
[), {, double, x, =, Math, ., log, (, data, [, i, ], [, 0, ], ), ;, double, y]
[++, ), {, double, x, =, Math, ., log, (, data, [, i, ], [, 0, ], ), ;, double]
[;, double, y, =, Math, ., log, (, data, [, i, ], [, 1, ], ), ;, sumX, +=, x]
[., log, (, data, [, i, ], [, 0, ], ), ;, double, y, =, Math, ., log, (, data]
[), ;, double, y, =, Math, ., log, (, data, [, i, ], [, 1, ], ), ;, sumX, +=]
[[, 0, ], ), ;, double, y, =, Math, ., log, (, data, [, i, ], [, 1, ], )]
[[, i, ], [, 0, ], ), ;, double, y, =, Math, ., log, (, data, [, i, ], []
[], [, 0, ], ), ;, double, y, =, Math, ., log, (, data, [, i, ], [, 1, ]]
[], ), ;, double, y, =, Math, ., log, (, data, [, i, ], [, 1, ], ), ;, sumX]
[;, sumX, +=, x, ;, sumY, +=, y, ;, double, xx, =, x, *, x, ;, sumXX, +=, xx, ;]
[., log, (, data, [, i, ], [, 1, ], ), ;, sumX, +=, x, ;, sumY, +=, y, ;]
[), ;, sumX, +=, x, ;, sumY, +=, y, ;, double, xx, =, x, *, x, ;, sumXX, +=, xx]
[[, 1, ], ), ;, sumX, +=, x, ;, sumY, +=, y, ;, double, xx, =, x, *, x, ;]
[[, i, ], [, 1, ], ), ;, sumX, +=, x, ;, sumY, +=, y, ;, double, xx, =, x]
[], [, 1, ], ), ;, sumX, +=, x, ;, sumY, +=, y, ;, double, xx, =, x, *, x]
[], ), ;, sumX, +=, x, ;, sumY, +=, y, ;, double, xx, =, x, *, x, ;, sumXX, +=]
[+=, x, ;, sumY, +=, y, ;, double, xx, =, x, *, x, ;, sumXX, +=, xx, ;, double, xy]
[;, sumY, +=, y, ;, double, xx, =, x, *, x, ;, sumXX, +=, xx, ;, double, xy, =, x]
[+=, y, ;, double, xx, =, x, *, x, ;, sumXX, +=, xx, ;, double, xy, =, x, *, y]
[;, double, xx, =, x, *, x, ;, sumXX, +=, xx, ;, double, xy, =, x, *, y, ;, sumXY]
[;, sumXX, +=, xx, ;, double, xy, =, x, *, y, ;, sumXY, +=, xy, ;, }, double, sxx, =]
[*, x, ;, sumXX, +=, xx, ;, double, xy, =, x, *, y, ;, sumXY, +=, xy, ;, }, double]
[;, sumXX, +=, xx, ;, double, xy, =, x, *, y, ;, sumXY, +=, xy, ;, }, double, sxx, =]
[+=, xx, ;, double, xy, =, x, *, y, ;, sumXY, +=, xy, ;, }, double, sxx, =, sumXX, -]
[;, double, xy, =, x, *, y, ;, sumXY, +=, xy, ;, }, double, sxx, =, sumXX, -, (, sumX]
[;, sumXY, +=, xy, ;, }, double, sxx, =, sumXX, -, (, sumX, *, sumX, ), /, n, ;, double]
[*, y, ;, sumXY, +=, xy, ;, }, double, sxx, =, sumXX, -, (, sumX, *, sumX, ), /, n]
[;, sumXY, +=, xy, ;, }, double, sxx, =, sumXX, -, (, sumX, *, sumX, ), /, n, ;, double]
[+=, xy, ;, }, double, sxx, =, sumXX, -, (, sumX, *, sumX, ), /, n, ;, double, sxy, =]
[;, }, double, sxx, =, sumXX, -, (, sumX, *, sumX, ), /, n, ;, double, sxy, =, sumXY, -]
[;, double, sxy, =, sumXY, -, (, sumX, *, sumY, ), /, n, ;, double, xbar, =, sumX, /, n]
[-, (, sumX, *, sumX, ), /, n, ;, double, sxy, =, sumXY, -, (, sumX, *, sumY, ), /]
[;, double, sxy, =, sumXY, -, (, sumX, *, sumY, ), /, n, ;, double, xbar, =, sumX, /, n]
[/, n, ;, double, sxy, =, sumXY, -, (, sumX, *, sumY, ), /, n, ;, double, xbar, =, sumX]
[), /, n, ;, double, sxy, =, sumXY, -, (, sumX, *, sumY, ), /, n, ;, double, xbar, =]
[*, sumX, ), /, n, ;, double, sxy, =, sumXY, -, (, sumX, *, sumY, ), /, n, ;, double]
[), /, n, ;, double, sxy, =, sumXY, -, (, sumX, *, sumY, ), /, n, ;, double, xbar, =]
[;, double, sxy, =, sumXY, -, (, sumX, *, sumY, ), /, n, ;, double, xbar, =, sumX, /, n]
[;, double, xbar, =, sumX, /, n, ;, double, ybar, =, sumY, /, n, ;, double, [, ], result, =]
[-, (, sumX, *, sumY, ), /, n, ;, double, xbar, =, sumX, /, n, ;, double, ybar, =, sumY]
[;, double, xbar, =, sumX, /, n, ;, double, ybar, =, sumY, /, n, ;, double, [, ], result, =]
[/, n, ;, double, xbar, =, sumX, /, n, ;, double, ybar, =, sumY, /, n, ;, double, [, ]]
[), /, n, ;, double, xbar, =, sumX, /, n, ;, double, ybar, =, sumY, /, n, ;, double, []
[*, sumY, ), /, n, ;, double, xbar, =, sumX, /, n, ;, double, ybar, =, sumY, /, n, ;]
[), /, n, ;, double, xbar, =, sumX, /, n, ;, double, ybar, =, sumY, /, n, ;, double, []
[;, double, xbar, =, sumX, /, n, ;, double, ybar, =, sumY, /, n, ;, double, [, ], result, =]
[;, double, ybar, =, sumY, /, n, ;, double, [, ], result, =, new, double, [, 2, ], ;, result]
[/, n, ;, double, ybar, =, sumY, /, n, ;, double, [, ], result, =, new, double, [, 2, ]]
[;, double, ybar, =, sumY, /, n, ;, double, [, ], result, =, new, double, [, 2, ], ;, result]
[;, double, [, ], result, =, new, double, [, 2, ], ;, result, [, 1, ], =, sxy, /, sxx]
[/, n, ;, double, [, ], result, =, new, double, [, 2, ], ;, result, [, 1, ], =, sxy]
[;, double, [, ], result, =, new, double, [, 2, ], ;, result, [, 1, ], =, sxy, /, sxx]
[;, result, [, 1, ], =, sxy, /, sxx, ;, result, [, 0, ], =, Math, ., pow, (, Math]
[], ;, result, [, 1, ], =, sxy, /, sxx, ;, result, [, 0, ], =, Math, ., pow, (]
[=, sxy, /, sxx, ;, result, [, 0, ], =, Math, ., pow, (, Math, ., exp, (, 1.0, )]
[[, 1, ], =, sxy, /, sxx, ;, result, [, 0, ], =, Math, ., pow, (, Math, ., exp]
[], =, sxy, /, sxx, ;, result, [, 0, ], =, Math, ., pow, (, Math, ., exp, (, 1.0]
[;, result, [, 0, ], =, Math, ., pow, (, Math, ., exp, (, 1.0, ), ,, ybar, -, result]
[/, sxx, ;, result, [, 0, ], =, Math, ., pow, (, Math, ., exp, (, 1.0, ), ,, ybar]
[;, result, [, 0, ], =, Math, ., pow, (, Math, ., exp, (, 1.0, ), ,, ybar, -, result]
[=, Math, ., pow, (, Math, ., exp, (, 1.0, ), ,, ybar, -, result, [, 1, ], *, xbar]
[[, 0, ], =, Math, ., pow, (, Math, ., exp, (, 1.0, ), ,, ybar, -, result, [, 1]
[], =, Math, ., pow, (, Math, ., exp, (, 1.0, ), ,, ybar, -, result, [, 1, ], *]
[;, return, result, ;, }, public, static, double, [, ], getPowerRegression, (, XYDataset, data, ,, int, series, ), {, int]
[., pow, (, Math, ., exp, (, 1.0, ), ,, ybar, -, result, [, 1, ], *, xbar, ), ;]
[,, ybar, -, result, [, 1, ], *, xbar, ), ;, return, result, ;, }, public, static, double, [, ]]
[., exp, (, 1.0, ), ,, ybar, -, result, [, 1, ], *, xbar, ), ;, return, result, ;, }]
[), ,, ybar, -, result, [, 1, ], *, xbar, ), ;, return, result, ;, }, public, static, double, []
[), ;, return, result, ;, }, public, static, double, [, ], getPowerRegression, (, XYDataset, data, ,, int, series, ), {]
[-, result, [, 1, ], *, xbar, ), ;, return, result, ;, }, public, static, double, [, ], getPowerRegression, (]
[), ;, return, result, ;, }, public, static, double, [, ], getPowerRegression, (, XYDataset, data, ,, int, series, ), {]
[*, xbar, ), ;, return, result, ;, }, public, static, double, [, ], getPowerRegression, (, XYDataset, data, ,, int, series]
[[, 1, ], *, xbar, ), ;, return, result, ;, }, public, static, double, [, ], getPowerRegression, (, XYDataset, data]
[], *, xbar, ), ;, return, result, ;, }, public, static, double, [, ], getPowerRegression, (, XYDataset, data, ,, int]
[), ;, return, result, ;, }, public, static, double, [, ], getPowerRegression, (, XYDataset, data, ,, int, series, ), {]
[;, }, public, static, double, [, ], getPowerRegression, (, XYDataset, data, ,, int, series, ), {, int, n, =, data]
[;, if, (, n, <, 2, ), {, throw, new, IllegalArgumentException, (, "Not enough data.", ), ;, }, double, sumX, =, 0]
[., getItemCount, (, series, ), ;, if, (, n, <, 2, ), {, throw, new, IllegalArgumentException, (, "Not enough data.", ), ;]
[), ;, if, (, n, <, 2, ), {, throw, new, IllegalArgumentException, (, "Not enough data.", ), ;, }, double, sumX, =]
[), {, throw, new, IllegalArgumentException, (, "Not enough data.", ), ;, }, double, sumX, =, 0, ;, double, sumY, =, 0, ;]
[<, 2, ), {, throw, new, IllegalArgumentException, (, "Not enough data.", ), ;, }, double, sumX, =, 0, ;, double, sumY, =]
[), {, throw, new, IllegalArgumentException, (, "Not enough data.", ), ;, }, double, sumX, =, 0, ;, double, sumY, =, 0, ;]
[;, }, double, sumX, =, 0, ;, double, sumY, =, 0, ;, double, sumXX, =, 0, ;, double, sumXY, =]
[), ;, }, double, sumX, =, 0, ;, double, sumY, =, 0, ;, double, sumXX, =, 0, ;, double, sumXY]
[;, double, sumY, =, 0, ;, double, sumXX, =, 0, ;, double, sumXY, =, 0, ;, for, (, int, i]
[;, double, sumXX, =, 0, ;, double, sumXY, =, 0, ;, for, (, int, i, =, 0, ;, i, <]
[;, double, sumXY, =, 0, ;, for, (, int, i, =, 0, ;, i, <, n, ;, i, ++, )]
[;, for, (, int, i, =, 0, ;, i, <, n, ;, i, ++, ), {, double, x, =, Math]
[;, i, <, n, ;, i, ++, ), {, double, x, =, Math, ., log, (, data, ., getXValue, (]
[;, i, ++, ), {, double, x, =, Math, ., log, (, data, ., getXValue, (, series, ,, i, )]
[<, n, ;, i, ++, ), {, double, x, =, Math, ., log, (, data, ., getXValue, (, series, ,]
[;, i, ++, ), {, double, x, =, Math, ., log, (, data, ., getXValue, (, series, ,, i, )]
[), {, double, x, =, Math, ., log, (, data, ., getXValue, (, series, ,, i, ), ), ;, double]
[++, ), {, double, x, =, Math, ., log, (, data, ., getXValue, (, series, ,, i, ), ), ;]
[;, double, y, =, Math, ., log, (, data, ., getYValue, (, series, ,, i, ), ), ;, sumX, +=]
[., log, (, data, ., getXValue, (, series, ,, i, ), ), ;, double, y, =, Math, ., log, (]
[), ;, double, y, =, Math, ., log, (, data, ., getYValue, (, series, ,, i, ), ), ;, sumX]
[., getXValue, (, series, ,, i, ), ), ;, double, y, =, Math, ., log, (, data, ., getYValue, (]
[,, i, ), ), ;, double, y, =, Math, ., log, (, data, ., getYValue, (, series, ,, i, )]
[), ), ;, double, y, =, Math, ., log, (, data, ., getYValue, (, series, ,, i, ), ), ;]
[;, sumX, +=, x, ;, sumY, +=, y, ;, double, xx, =, x, *, x, ;, sumXX, +=, xx, ;]
[., log, (, data, ., getYValue, (, series, ,, i, ), ), ;, sumX, +=, x, ;, sumY, +=, y]
[), ;, sumX, +=, x, ;, sumY, +=, y, ;, double, xx, =, x, *, x, ;, sumXX, +=, xx]
[., getYValue, (, series, ,, i, ), ), ;, sumX, +=, x, ;, sumY, +=, y, ;, double, xx, =]
[,, i, ), ), ;, sumX, +=, x, ;, sumY, +=, y, ;, double, xx, =, x, *, x, ;]
[), ), ;, sumX, +=, x, ;, sumY, +=, y, ;, double, xx, =, x, *, x, ;, sumXX, +=]
[+=, x, ;, sumY, +=, y, ;, double, xx, =, x, *, x, ;, sumXX, +=, xx, ;, double, xy]
[;, sumY, +=, y, ;, double, xx, =, x, *, x, ;, sumXX, +=, xx, ;, double, xy, =, x]
[+=, y, ;, double, xx, =, x, *, x, ;, sumXX, +=, xx, ;, double, xy, =, x, *, y]
[;, double, xx, =, x, *, x, ;, sumXX, +=, xx, ;, double, xy, =, x, *, y, ;, sumXY]
[;, sumXX, +=, xx, ;, double, xy, =, x, *, y, ;, sumXY, +=, xy, ;, }, double, sxx, =]
[*, x, ;, sumXX, +=, xx, ;, double, xy, =, x, *, y, ;, sumXY, +=, xy, ;, }, double]
[;, sumXX, +=, xx, ;, double, xy, =, x, *, y, ;, sumXY, +=, xy, ;, }, double, sxx, =]
[+=, xx, ;, double, xy, =, x, *, y, ;, sumXY, +=, xy, ;, }, double, sxx, =, sumXX, -]
[;, double, xy, =, x, *, y, ;, sumXY, +=, xy, ;, }, double, sxx, =, sumXX, -, (, sumX]
[;, sumXY, +=, xy, ;, }, double, sxx, =, sumXX, -, (, sumX, *, sumX, ), /, n, ;, double]
[*, y, ;, sumXY, +=, xy, ;, }, double, sxx, =, sumXX, -, (, sumX, *, sumX, ), /, n]
[;, sumXY, +=, xy, ;, }, double, sxx, =, sumXX, -, (, sumX, *, sumX, ), /, n, ;, double]
[+=, xy, ;, }, double, sxx, =, sumXX, -, (, sumX, *, sumX, ), /, n, ;, double, sxy, =]
[;, }, double, sxx, =, sumXX, -, (, sumX, *, sumX, ), /, n, ;, double, sxy, =, sumXY, -]
[;, double, sxy, =, sumXY, -, (, sumX, *, sumY, ), /, n, ;, double, xbar, =, sumX, /, n]
[-, (, sumX, *, sumX, ), /, n, ;, double, sxy, =, sumXY, -, (, sumX, *, sumY, ), /]
[;, double, sxy, =, sumXY, -, (, sumX, *, sumY, ), /, n, ;, double, xbar, =, sumX, /, n]
[/, n, ;, double, sxy, =, sumXY, -, (, sumX, *, sumY, ), /, n, ;, double, xbar, =, sumX]
[), /, n, ;, double, sxy, =, sumXY, -, (, sumX, *, sumY, ), /, n, ;, double, xbar, =]
[*, sumX, ), /, n, ;, double, sxy, =, sumXY, -, (, sumX, *, sumY, ), /, n, ;, double]
[), /, n, ;, double, sxy, =, sumXY, -, (, sumX, *, sumY, ), /, n, ;, double, xbar, =]
[;, double, sxy, =, sumXY, -, (, sumX, *, sumY, ), /, n, ;, double, xbar, =, sumX, /, n]
[;, double, xbar, =, sumX, /, n, ;, double, ybar, =, sumY, /, n, ;, double, [, ], result, =]
[-, (, sumX, *, sumY, ), /, n, ;, double, xbar, =, sumX, /, n, ;, double, ybar, =, sumY]
[;, double, xbar, =, sumX, /, n, ;, double, ybar, =, sumY, /, n, ;, double, [, ], result, =]
[/, n, ;, double, xbar, =, sumX, /, n, ;, double, ybar, =, sumY, /, n, ;, double, [, ]]
[), /, n, ;, double, xbar, =, sumX, /, n, ;, double, ybar, =, sumY, /, n, ;, double, []
[*, sumY, ), /, n, ;, double, xbar, =, sumX, /, n, ;, double, ybar, =, sumY, /, n, ;]
[), /, n, ;, double, xbar, =, sumX, /, n, ;, double, ybar, =, sumY, /, n, ;, double, []
[;, double, xbar, =, sumX, /, n, ;, double, ybar, =, sumY, /, n, ;, double, [, ], result, =]
[;, double, ybar, =, sumY, /, n, ;, double, [, ], result, =, new, double, [, 2, ], ;, result]
[/, n, ;, double, ybar, =, sumY, /, n, ;, double, [, ], result, =, new, double, [, 2, ]]
[;, double, ybar, =, sumY, /, n, ;, double, [, ], result, =, new, double, [, 2, ], ;, result]
[;, double, [, ], result, =, new, double, [, 2, ], ;, result, [, 1, ], =, sxy, /, sxx]
[/, n, ;, double, [, ], result, =, new, double, [, 2, ], ;, result, [, 1, ], =, sxy]
[;, double, [, ], result, =, new, double, [, 2, ], ;, result, [, 1, ], =, sxy, /, sxx]
[;, result, [, 1, ], =, sxy, /, sxx, ;, result, [, 0, ], =, Math, ., pow, (, Math]
[], ;, result, [, 1, ], =, sxy, /, sxx, ;, result, [, 0, ], =, Math, ., pow, (]
[=, sxy, /, sxx, ;, result, [, 0, ], =, Math, ., pow, (, Math, ., exp, (, 1.0, )]
[[, 1, ], =, sxy, /, sxx, ;, result, [, 0, ], =, Math, ., pow, (, Math, ., exp]
[], =, sxy, /, sxx, ;, result, [, 0, ], =, Math, ., pow, (, Math, ., exp, (, 1.0]
[;, result, [, 0, ], =, Math, ., pow, (, Math, ., exp, (, 1.0, ), ,, ybar, -, result]
[/, sxx, ;, result, [, 0, ], =, Math, ., pow, (, Math, ., exp, (, 1.0, ), ,, ybar]
[;, result, [, 0, ], =, Math, ., pow, (, Math, ., exp, (, 1.0, ), ,, ybar, -, result]
[=, Math, ., pow, (, Math, ., exp, (, 1.0, ), ,, ybar, -, result, [, 1, ], *, xbar]
[[, 0, ], =, Math, ., pow, (, Math, ., exp, (, 1.0, ), ,, ybar, -, result, [, 1]
[], =, Math, ., pow, (, Math, ., exp, (, 1.0, ), ,, ybar, -, result, [, 1, ], *]
[;, return, result, ;, }, public, static, double, [, ], getPolynomialRegression, (, XYDataset, dataset, ,, int, series, ,, int, order]
[., pow, (, Math, ., exp, (, 1.0, ), ,, ybar, -, result, [, 1, ], *, xbar, ), ;]
[,, ybar, -, result, [, 1, ], *, xbar, ), ;, return, result, ;, }, public, static, double, [, ]]
[., exp, (, 1.0, ), ,, ybar, -, result, [, 1, ], *, xbar, ), ;, return, result, ;, }]
[), ,, ybar, -, result, [, 1, ], *, xbar, ), ;, return, result, ;, }, public, static, double, []
[), ;, return, result, ;, }, public, static, double, [, ], getPolynomialRegression, (, XYDataset, dataset, ,, int, series, ,, int]
[-, result, [, 1, ], *, xbar, ), ;, return, result, ;, }, public, static, double, [, ], getPolynomialRegression, (]
[), ;, return, result, ;, }, public, static, double, [, ], getPolynomialRegression, (, XYDataset, dataset, ,, int, series, ,, int]
[*, xbar, ), ;, return, result, ;, }, public, static, double, [, ], getPolynomialRegression, (, XYDataset, dataset, ,, int, series]
[[, 1, ], *, xbar, ), ;, return, result, ;, }, public, static, double, [, ], getPolynomialRegression, (, XYDataset, dataset]
[], *, xbar, ), ;, return, result, ;, }, public, static, double, [, ], getPolynomialRegression, (, XYDataset, dataset, ,, int]
[), ;, return, result, ;, }, public, static, double, [, ], getPolynomialRegression, (, XYDataset, dataset, ,, int, series, ,, int]
[;, }, public, static, double, [, ], getPolynomialRegression, (, XYDataset, dataset, ,, int, series, ,, int, order, ), {, if]
[), {, throw, new, IllegalArgumentException, (, "Null 'dataset' argument.", ), ;, }, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'dataset' argument.", ), ;, }, int, itemCount, =, dataset, ., getItemCount, (, series]
[), {, throw, new, IllegalArgumentException, (, "Null 'dataset' argument.", ), ;, }, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;]
[;, }, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, if, (, itemCount, <, order, +, 1, )]
[), ;, }, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, if, (, itemCount, <, order, +, 1]
[;, if, (, itemCount, <, order, +, 1, ), {, throw, new, IllegalArgumentException, (, "Not enough data.", ), ;, }, int, validItems]
[., getItemCount, (, series, ), ;, if, (, itemCount, <, order, +, 1, ), {, throw, new, IllegalArgumentException, (, "Not enough data."]
[), ;, if, (, itemCount, <, order, +, 1, ), {, throw, new, IllegalArgumentException, (, "Not enough data.", ), ;, }, int]
[), {, throw, new, IllegalArgumentException, (, "Not enough data.", ), ;, }, int, validItems, =, 0, ;, double, [, ], [, ]]
[<, order, +, 1, ), {, throw, new, IllegalArgumentException, (, "Not enough data.", ), ;, }, int, validItems, =, 0, ;, double]
[), {, throw, new, IllegalArgumentException, (, "Not enough data.", ), ;, }, int, validItems, =, 0, ;, double, [, ], [, ]]
[+, 1, ), {, throw, new, IllegalArgumentException, (, "Not enough data.", ), ;, }, int, validItems, =, 0, ;, double, [, ]]
[), {, throw, new, IllegalArgumentException, (, "Not enough data.", ), ;, }, int, validItems, =, 0, ;, double, [, ], [, ]]
[;, }, int, validItems, =, 0, ;, double, [, ], [, ], data, =, new, double, [, 2, ], []
[), ;, }, int, validItems, =, 0, ;, double, [, ], [, ], data, =, new, double, [, 2, ]]
[;, double, [, ], [, ], data, =, new, double, [, 2, ], [, itemCount, ], ;, for, (, int]
[;, for, (, int, item, =, 0, ;, item, <, itemCount, ;, item, ++, ), {, double, x, =, dataset]
[], [, itemCount, ], ;, for, (, int, item, =, 0, ;, item, <, itemCount, ;, item, ++, ), {]
[], ;, for, (, int, item, =, 0, ;, item, <, itemCount, ;, item, ++, ), {, double, x, =]
[;, item, <, itemCount, ;, item, ++, ), {, double, x, =, dataset, ., getXValue, (, series, ,, item, )]
[;, item, ++, ), {, double, x, =, dataset, ., getXValue, (, series, ,, item, ), ;, double, y, =]
[<, itemCount, ;, item, ++, ), {, double, x, =, dataset, ., getXValue, (, series, ,, item, ), ;, double]
[;, item, ++, ), {, double, x, =, dataset, ., getXValue, (, series, ,, item, ), ;, double, y, =]
[), {, double, x, =, dataset, ., getXValue, (, series, ,, item, ), ;, double, y, =, dataset, ., getYValue]
[++, ), {, double, x, =, dataset, ., getXValue, (, series, ,, item, ), ;, double, y, =, dataset, .]
[;, double, y, =, dataset, ., getYValue, (, series, ,, item, ), ;, if, (, !, Double, ., isNaN, (]
[., getXValue, (, series, ,, item, ), ;, double, y, =, dataset, ., getYValue, (, series, ,, item, ), ;]
[,, item, ), ;, double, y, =, dataset, ., getYValue, (, series, ,, item, ), ;, if, (, !, Double]
[), ;, double, y, =, dataset, ., getYValue, (, series, ,, item, ), ;, if, (, !, Double, ., isNaN]
[;, if, (, !, Double, ., isNaN, (, x, ), &&, !, Double, ., isNaN, (, y, ), ), {]
[., getYValue, (, series, ,, item, ), ;, if, (, !, Double, ., isNaN, (, x, ), &&, !, Double]
[,, item, ), ;, if, (, !, Double, ., isNaN, (, x, ), &&, !, Double, ., isNaN, (, y]
[), ;, if, (, !, Double, ., isNaN, (, x, ), &&, !, Double, ., isNaN, (, y, ), )]
[), {, data, [, 0, ], [, validItems, ], =, x, ;, data, [, 1, ], [, validItems, ], =]
[&&, !, Double, ., isNaN, (, y, ), ), {, data, [, 0, ], [, validItems, ], =, x, ;]
[&&, !, Double, ., isNaN, (, y, ), ), {, data, [, 0, ], [, validItems, ], =, x, ;]
[., isNaN, (, x, ), &&, !, Double, ., isNaN, (, y, ), ), {, data, [, 0, ], []
[), &&, !, Double, ., isNaN, (, y, ), ), {, data, [, 0, ], [, validItems, ], =, x]
[), {, data, [, 0, ], [, validItems, ], =, x, ;, data, [, 1, ], [, validItems, ], =]
[), {, data, [, 0, ], [, validItems, ], =, x, ;, data, [, 1, ], [, validItems, ], =]
[., isNaN, (, y, ), ), {, data, [, 0, ], [, validItems, ], =, x, ;, data, [, 1]
[), ), {, data, [, 0, ], [, validItems, ], =, x, ;, data, [, 1, ], [, validItems, ]]
[=, x, ;, data, [, 1, ], [, validItems, ], =, y, ;, validItems, ++, ;, }, }, if, (]
[[, validItems, ], =, x, ;, data, [, 1, ], [, validItems, ], =, y, ;, validItems, ++, ;, }]
[[, 0, ], [, validItems, ], =, x, ;, data, [, 1, ], [, validItems, ], =, y, ;, validItems]
[], [, validItems, ], =, x, ;, data, [, 1, ], [, validItems, ], =, y, ;, validItems, ++, ;]
[], =, x, ;, data, [, 1, ], [, validItems, ], =, y, ;, validItems, ++, ;, }, }, if]
[;, data, [, 1, ], [, validItems, ], =, y, ;, validItems, ++, ;, }, }, if, (, validItems, <]
[=, y, ;, validItems, ++, ;, }, }, if, (, validItems, <, order, +, 1, ), {, throw, new, IllegalArgumentException]
[[, validItems, ], =, y, ;, validItems, ++, ;, }, }, if, (, validItems, <, order, +, 1, ), {]
[[, 1, ], [, validItems, ], =, y, ;, validItems, ++, ;, }, }, if, (, validItems, <, order, +]
[], [, validItems, ], =, y, ;, validItems, ++, ;, }, }, if, (, validItems, <, order, +, 1, )]
[], =, y, ;, validItems, ++, ;, }, }, if, (, validItems, <, order, +, 1, ), {, throw, new]
[;, validItems, ++, ;, }, }, if, (, validItems, <, order, +, 1, ), {, throw, new, IllegalArgumentException, (, "Not enough data."]
[;, }, }, if, (, validItems, <, order, +, 1, ), {, throw, new, IllegalArgumentException, (, "Not enough data.", ), ;, }]
[++, ;, }, }, if, (, validItems, <, order, +, 1, ), {, throw, new, IllegalArgumentException, (, "Not enough data.", ), ;]
[), {, throw, new, IllegalArgumentException, (, "Not enough data.", ), ;, }, int, equations, =, order, +, 1, ;, int, coefficients, =]
[<, order, +, 1, ), {, throw, new, IllegalArgumentException, (, "Not enough data.", ), ;, }, int, equations, =, order, +, 1]
[), {, throw, new, IllegalArgumentException, (, "Not enough data.", ), ;, }, int, equations, =, order, +, 1, ;, int, coefficients, =]
[+, 1, ), {, throw, new, IllegalArgumentException, (, "Not enough data.", ), ;, }, int, equations, =, order, +, 1, ;, int]
[), {, throw, new, IllegalArgumentException, (, "Not enough data.", ), ;, }, int, equations, =, order, +, 1, ;, int, coefficients, =]
[;, }, int, equations, =, order, +, 1, ;, int, coefficients, =, order, +, 2, ;, double, [, ], result]
[), ;, }, int, equations, =, order, +, 1, ;, int, coefficients, =, order, +, 2, ;, double, [, ]]
[;, int, coefficients, =, order, +, 2, ;, double, [, ], result, =, new, double, [, equations, +, 1, ]]
[+, 1, ;, int, coefficients, =, order, +, 2, ;, double, [, ], result, =, new, double, [, equations, +]
[;, int, coefficients, =, order, +, 2, ;, double, [, ], result, =, new, double, [, equations, +, 1, ]]
[;, double, [, ], result, =, new, double, [, equations, +, 1, ], ;, double, [, ], [, ], matrix]
[+, 2, ;, double, [, ], result, =, new, double, [, equations, +, 1, ], ;, double, [, ], []
[;, double, [, ], result, =, new, double, [, equations, +, 1, ], ;, double, [, ], [, ], matrix]
[;, double, [, ], [, ], matrix, =, new, double, [, equations, ], [, coefficients, ], ;, double, sumX, =]
[], ;, double, [, ], [, ], matrix, =, new, double, [, equations, ], [, coefficients, ], ;, double, sumX]
[+, 1, ], ;, double, [, ], [, ], matrix, =, new, double, [, equations, ], [, coefficients, ], ;]
[], ;, double, [, ], [, ], matrix, =, new, double, [, equations, ], [, coefficients, ], ;, double, sumX]
[;, double, sumX, =, 0.0, ;, double, sumY, =, 0.0, ;, for, (, int, item, =, 0, ;, item, <]
[], [, coefficients, ], ;, double, sumX, =, 0.0, ;, double, sumY, =, 0.0, ;, for, (, int, item, =]
[], ;, double, sumX, =, 0.0, ;, double, sumY, =, 0.0, ;, for, (, int, item, =, 0, ;, item]
[;, double, sumY, =, 0.0, ;, for, (, int, item, =, 0, ;, item, <, validItems, ;, item, ++, )]
[;, for, (, int, item, =, 0, ;, item, <, validItems, ;, item, ++, ), {, sumX, +=, data, []
[;, item, <, validItems, ;, item, ++, ), {, sumX, +=, data, [, 0, ], [, item, ], ;, sumY]
[;, item, ++, ), {, sumX, +=, data, [, 0, ], [, item, ], ;, sumY, +=, data, [, 1]
[<, validItems, ;, item, ++, ), {, sumX, +=, data, [, 0, ], [, item, ], ;, sumY, +=, data]
[;, item, ++, ), {, sumX, +=, data, [, 0, ], [, item, ], ;, sumY, +=, data, [, 1]
[), {, sumX, +=, data, [, 0, ], [, item, ], ;, sumY, +=, data, [, 1, ], [, item]
[++, ), {, sumX, +=, data, [, 0, ], [, item, ], ;, sumY, +=, data, [, 1, ], []
[+=, data, [, 0, ], [, item, ], ;, sumY, +=, data, [, 1, ], [, item, ], ;, for]
[;, sumY, +=, data, [, 1, ], [, item, ], ;, for, (, int, eq, =, 0, ;, eq, <]
[[, item, ], ;, sumY, +=, data, [, 1, ], [, item, ], ;, for, (, int, eq, =, 0]
[[, 0, ], [, item, ], ;, sumY, +=, data, [, 1, ], [, item, ], ;, for, (, int]
[], [, item, ], ;, sumY, +=, data, [, 1, ], [, item, ], ;, for, (, int, eq, =]
[], ;, sumY, +=, data, [, 1, ], [, item, ], ;, for, (, int, eq, =, 0, ;, eq]
[+=, data, [, 1, ], [, item, ], ;, for, (, int, eq, =, 0, ;, eq, <, equations, ;]
[;, for, (, int, eq, =, 0, ;, eq, <, equations, ;, eq, ++, ), {, for, (, int, coe]
[[, item, ], ;, for, (, int, eq, =, 0, ;, eq, <, equations, ;, eq, ++, ), {, for]
[[, 1, ], [, item, ], ;, for, (, int, eq, =, 0, ;, eq, <, equations, ;, eq, ++]
[], [, item, ], ;, for, (, int, eq, =, 0, ;, eq, <, equations, ;, eq, ++, ), {]
[], ;, for, (, int, eq, =, 0, ;, eq, <, equations, ;, eq, ++, ), {, for, (, int]
[;, eq, <, equations, ;, eq, ++, ), {, for, (, int, coe, =, 0, ;, coe, <, coefficients, -]
[;, eq, ++, ), {, for, (, int, coe, =, 0, ;, coe, <, coefficients, -, 1, ;, coe, ++]
[<, equations, ;, eq, ++, ), {, for, (, int, coe, =, 0, ;, coe, <, coefficients, -, 1, ;]
[;, eq, ++, ), {, for, (, int, coe, =, 0, ;, coe, <, coefficients, -, 1, ;, coe, ++]
[), {, for, (, int, coe, =, 0, ;, coe, <, coefficients, -, 1, ;, coe, ++, ), {, matrix]
[++, ), {, for, (, int, coe, =, 0, ;, coe, <, coefficients, -, 1, ;, coe, ++, ), {]
[;, coe, <, coefficients, -, 1, ;, coe, ++, ), {, matrix, [, eq, ], [, coe, ], +=, Math]
[;, coe, ++, ), {, matrix, [, eq, ], [, coe, ], +=, Math, ., pow, (, data, [, 0]
[<, coefficients, -, 1, ;, coe, ++, ), {, matrix, [, eq, ], [, coe, ], +=, Math, ., pow]
[;, coe, ++, ), {, matrix, [, eq, ], [, coe, ], +=, Math, ., pow, (, data, [, 0]
[-, 1, ;, coe, ++, ), {, matrix, [, eq, ], [, coe, ], +=, Math, ., pow, (, data]
[;, coe, ++, ), {, matrix, [, eq, ], [, coe, ], +=, Math, ., pow, (, data, [, 0]
[), {, matrix, [, eq, ], [, coe, ], +=, Math, ., pow, (, data, [, 0, ], [, item]
[++, ), {, matrix, [, eq, ], [, coe, ], +=, Math, ., pow, (, data, [, 0, ], []
[+=, Math, ., pow, (, data, [, 0, ], [, item, ], ,, eq, +, coe, ), ;, }, matrix]
[[, coe, ], +=, Math, ., pow, (, data, [, 0, ], [, item, ], ,, eq, +, coe, )]
[[, eq, ], [, coe, ], +=, Math, ., pow, (, data, [, 0, ], [, item, ], ,, eq]
[], [, coe, ], +=, Math, ., pow, (, data, [, 0, ], [, item, ], ,, eq, +, coe]
[], +=, Math, ., pow, (, data, [, 0, ], [, item, ], ,, eq, +, coe, ), ;, }]
[;, }, matrix, [, eq, ], [, coefficients, -, 1, ], +=, data, [, 1, ], [, item, ], *]
[., pow, (, data, [, 0, ], [, item, ], ,, eq, +, coe, ), ;, }, matrix, [, eq]
[,, eq, +, coe, ), ;, }, matrix, [, eq, ], [, coefficients, -, 1, ], +=, data, [, 1]
[[, item, ], ,, eq, +, coe, ), ;, }, matrix, [, eq, ], [, coefficients, -, 1, ], +=]
[[, 0, ], [, item, ], ,, eq, +, coe, ), ;, }, matrix, [, eq, ], [, coefficients, -]
[], [, item, ], ,, eq, +, coe, ), ;, }, matrix, [, eq, ], [, coefficients, -, 1, ]]
[], ,, eq, +, coe, ), ;, }, matrix, [, eq, ], [, coefficients, -, 1, ], +=, data, []
[), ;, }, matrix, [, eq, ], [, coefficients, -, 1, ], +=, data, [, 1, ], [, item, ]]
[+, coe, ), ;, }, matrix, [, eq, ], [, coefficients, -, 1, ], +=, data, [, 1, ], []
[), ;, }, matrix, [, eq, ], [, coefficients, -, 1, ], +=, data, [, 1, ], [, item, ]]
[+=, data, [, 1, ], [, item, ], *, Math, ., pow, (, data, [, 0, ], [, item, ]]
[[, coefficients, -, 1, ], +=, data, [, 1, ], [, item, ], *, Math, ., pow, (, data, []
[[, eq, ], [, coefficients, -, 1, ], +=, data, [, 1, ], [, item, ], *, Math, ., pow]
[], [, coefficients, -, 1, ], +=, data, [, 1, ], [, item, ], *, Math, ., pow, (, data]
[], +=, data, [, 1, ], [, item, ], *, Math, ., pow, (, data, [, 0, ], [, item]
[-, 1, ], +=, data, [, 1, ], [, item, ], *, Math, ., pow, (, data, [, 0, ]]
[], +=, data, [, 1, ], [, item, ], *, Math, ., pow, (, data, [, 0, ], [, item]
[;, }, }, double, [, ], [, ], subMatrix, =, calculateSubMatrix, (, matrix, ), ;, for, (, int, eq, =]
[*, Math, ., pow, (, data, [, 0, ], [, item, ], ,, eq, ), ;, }, }, double, []
[[, item, ], *, Math, ., pow, (, data, [, 0, ], [, item, ], ,, eq, ), ;, }]
[[, 1, ], [, item, ], *, Math, ., pow, (, data, [, 0, ], [, item, ], ,, eq]
[], [, item, ], *, Math, ., pow, (, data, [, 0, ], [, item, ], ,, eq, ), ;]
[], *, Math, ., pow, (, data, [, 0, ], [, item, ], ,, eq, ), ;, }, }, double]
[;, }, }, double, [, ], [, ], subMatrix, =, calculateSubMatrix, (, matrix, ), ;, for, (, int, eq, =]
[., pow, (, data, [, 0, ], [, item, ], ,, eq, ), ;, }, }, double, [, ], []
[,, eq, ), ;, }, }, double, [, ], [, ], subMatrix, =, calculateSubMatrix, (, matrix, ), ;, for, (]
[[, item, ], ,, eq, ), ;, }, }, double, [, ], [, ], subMatrix, =, calculateSubMatrix, (, matrix, )]
[[, 0, ], [, item, ], ,, eq, ), ;, }, }, double, [, ], [, ], subMatrix, =, calculateSubMatrix]
[], [, item, ], ,, eq, ), ;, }, }, double, [, ], [, ], subMatrix, =, calculateSubMatrix, (, matrix]
[], ,, eq, ), ;, }, }, double, [, ], [, ], subMatrix, =, calculateSubMatrix, (, matrix, ), ;, for]
[), ;, }, }, double, [, ], [, ], subMatrix, =, calculateSubMatrix, (, matrix, ), ;, for, (, int, eq]
[;, for, (, int, eq, =, 1, ;, eq, <, equations, ;, eq, ++, ), {, matrix, [, eq, ]]
[), ;, for, (, int, eq, =, 1, ;, eq, <, equations, ;, eq, ++, ), {, matrix, [, eq]
[;, eq, <, equations, ;, eq, ++, ), {, matrix, [, eq, ], [, 0, ], =, 0, ;, for]
[;, eq, ++, ), {, matrix, [, eq, ], [, 0, ], =, 0, ;, for, (, int, coe, =]
[<, equations, ;, eq, ++, ), {, matrix, [, eq, ], [, 0, ], =, 0, ;, for, (, int]
[;, eq, ++, ), {, matrix, [, eq, ], [, 0, ], =, 0, ;, for, (, int, coe, =]
[), {, matrix, [, eq, ], [, 0, ], =, 0, ;, for, (, int, coe, =, 1, ;, coe]
[++, ), {, matrix, [, eq, ], [, 0, ], =, 0, ;, for, (, int, coe, =, 1, ;]
[=, 0, ;, for, (, int, coe, =, 1, ;, coe, <, coefficients, ;, coe, ++, ), {, matrix, []
[[, 0, ], =, 0, ;, for, (, int, coe, =, 1, ;, coe, <, coefficients, ;, coe, ++, )]
[[, eq, ], [, 0, ], =, 0, ;, for, (, int, coe, =, 1, ;, coe, <, coefficients, ;]
[], [, 0, ], =, 0, ;, for, (, int, coe, =, 1, ;, coe, <, coefficients, ;, coe, ++]
[], =, 0, ;, for, (, int, coe, =, 1, ;, coe, <, coefficients, ;, coe, ++, ), {, matrix]
[;, for, (, int, coe, =, 1, ;, coe, <, coefficients, ;, coe, ++, ), {, matrix, [, eq, ]]
[;, coe, <, coefficients, ;, coe, ++, ), {, matrix, [, eq, ], [, coe, ], =, subMatrix, [, eq]
[;, coe, ++, ), {, matrix, [, eq, ], [, coe, ], =, subMatrix, [, eq, -, 1, ], []
[<, coefficients, ;, coe, ++, ), {, matrix, [, eq, ], [, coe, ], =, subMatrix, [, eq, -, 1]
[;, coe, ++, ), {, matrix, [, eq, ], [, coe, ], =, subMatrix, [, eq, -, 1, ], []
[), {, matrix, [, eq, ], [, coe, ], =, subMatrix, [, eq, -, 1, ], [, coe, -, 1]
[++, ), {, matrix, [, eq, ], [, coe, ], =, subMatrix, [, eq, -, 1, ], [, coe, -]
[=, subMatrix, [, eq, -, 1, ], [, coe, -, 1, ], ;, }, }, for, (, int, eq, =]
[[, coe, ], =, subMatrix, [, eq, -, 1, ], [, coe, -, 1, ], ;, }, }, for, (]
[[, eq, ], [, coe, ], =, subMatrix, [, eq, -, 1, ], [, coe, -, 1, ], ;, }]
[], [, coe, ], =, subMatrix, [, eq, -, 1, ], [, coe, -, 1, ], ;, }, }, for]
[], =, subMatrix, [, eq, -, 1, ], [, coe, -, 1, ], ;, }, }, for, (, int, eq]
[;, }, }, for, (, int, eq, =, equations, -, 1, ;, eq, >, -, 1, ;, eq, --, )]
[[, coe, -, 1, ], ;, }, }, for, (, int, eq, =, equations, -, 1, ;, eq, >, -]
[[, eq, -, 1, ], [, coe, -, 1, ], ;, }, }, for, (, int, eq, =, equations, -]
[], [, coe, -, 1, ], ;, }, }, for, (, int, eq, =, equations, -, 1, ;, eq, >]
[-, 1, ], [, coe, -, 1, ], ;, }, }, for, (, int, eq, =, equations, -, 1, ;]
[], [, coe, -, 1, ], ;, }, }, for, (, int, eq, =, equations, -, 1, ;, eq, >]
[], ;, }, }, for, (, int, eq, =, equations, -, 1, ;, eq, >, -, 1, ;, eq, --]
[-, 1, ], ;, }, }, for, (, int, eq, =, equations, -, 1, ;, eq, >, -, 1, ;]
[], ;, }, }, for, (, int, eq, =, equations, -, 1, ;, eq, >, -, 1, ;, eq, --]
[;, eq, >, -, 1, ;, eq, --, ), {, double, value, =, matrix, [, eq, ], [, coefficients, -]
[-, 1, ;, eq, >, -, 1, ;, eq, --, ), {, double, value, =, matrix, [, eq, ], []
[;, eq, >, -, 1, ;, eq, --, ), {, double, value, =, matrix, [, eq, ], [, coefficients, -]
[;, eq, --, ), {, double, value, =, matrix, [, eq, ], [, coefficients, -, 1, ], ;, for, (]
[>, -, 1, ;, eq, --, ), {, double, value, =, matrix, [, eq, ], [, coefficients, -, 1, ]]
[;, eq, --, ), {, double, value, =, matrix, [, eq, ], [, coefficients, -, 1, ], ;, for, (]
[;, eq, --, ), {, double, value, =, matrix, [, eq, ], [, coefficients, -, 1, ], ;, for, (]
[), {, double, value, =, matrix, [, eq, ], [, coefficients, -, 1, ], ;, for, (, int, coe, =]
[--, ), {, double, value, =, matrix, [, eq, ], [, coefficients, -, 1, ], ;, for, (, int, coe]
[;, for, (, int, coe, =, eq, ;, coe, <, coefficients, -, 1, ;, coe, ++, ), {, value, -=]
[[, coefficients, -, 1, ], ;, for, (, int, coe, =, eq, ;, coe, <, coefficients, -, 1, ;, coe]
[[, eq, ], [, coefficients, -, 1, ], ;, for, (, int, coe, =, eq, ;, coe, <, coefficients, -]
[], [, coefficients, -, 1, ], ;, for, (, int, coe, =, eq, ;, coe, <, coefficients, -, 1, ;]
[], ;, for, (, int, coe, =, eq, ;, coe, <, coefficients, -, 1, ;, coe, ++, ), {, value]
[-, 1, ], ;, for, (, int, coe, =, eq, ;, coe, <, coefficients, -, 1, ;, coe, ++, )]
[], ;, for, (, int, coe, =, eq, ;, coe, <, coefficients, -, 1, ;, coe, ++, ), {, value]
[;, coe, <, coefficients, -, 1, ;, coe, ++, ), {, value, -=, matrix, [, eq, ], [, coe, ]]
[;, coe, ++, ), {, value, -=, matrix, [, eq, ], [, coe, ], *, result, [, coe, ], ;]
[<, coefficients, -, 1, ;, coe, ++, ), {, value, -=, matrix, [, eq, ], [, coe, ], *, result]
[;, coe, ++, ), {, value, -=, matrix, [, eq, ], [, coe, ], *, result, [, coe, ], ;]
[-, 1, ;, coe, ++, ), {, value, -=, matrix, [, eq, ], [, coe, ], *, result, [, coe]
[;, coe, ++, ), {, value, -=, matrix, [, eq, ], [, coe, ], *, result, [, coe, ], ;]
[), {, value, -=, matrix, [, eq, ], [, coe, ], *, result, [, coe, ], ;, }, result, []
[++, ), {, value, -=, matrix, [, eq, ], [, coe, ], *, result, [, coe, ], ;, }, result]
[-=, matrix, [, eq, ], [, coe, ], *, result, [, coe, ], ;, }, result, [, eq, ], =]
[;, }, result, [, eq, ], =, value, /, matrix, [, eq, ], [, eq, ], ;, }, double, meanY]
[*, result, [, coe, ], ;, }, result, [, eq, ], =, value, /, matrix, [, eq, ], [, eq]
[[, coe, ], *, result, [, coe, ], ;, }, result, [, eq, ], =, value, /, matrix, [, eq]
[[, eq, ], [, coe, ], *, result, [, coe, ], ;, }, result, [, eq, ], =, value, /]
[], [, coe, ], *, result, [, coe, ], ;, }, result, [, eq, ], =, value, /, matrix, []
[], *, result, [, coe, ], ;, }, result, [, eq, ], =, value, /, matrix, [, eq, ], []
[;, }, result, [, eq, ], =, value, /, matrix, [, eq, ], [, eq, ], ;, }, double, meanY]
[[, coe, ], ;, }, result, [, eq, ], =, value, /, matrix, [, eq, ], [, eq, ], ;]
[], ;, }, result, [, eq, ], =, value, /, matrix, [, eq, ], [, eq, ], ;, }, double]
[=, value, /, matrix, [, eq, ], [, eq, ], ;, }, double, meanY, =, sumY, /, validItems, ;, double]
[[, eq, ], =, value, /, matrix, [, eq, ], [, eq, ], ;, }, double, meanY, =, sumY, /]
[], =, value, /, matrix, [, eq, ], [, eq, ], ;, }, double, meanY, =, sumY, /, validItems, ;]
[;, }, double, meanY, =, sumY, /, validItems, ;, double, yObsSquare, =, 0.0, ;, double, yRegSquare, =, 0.0, ;, for]
[/, matrix, [, eq, ], [, eq, ], ;, }, double, meanY, =, sumY, /, validItems, ;, double, yObsSquare, =]
[;, }, double, meanY, =, sumY, /, validItems, ;, double, yObsSquare, =, 0.0, ;, double, yRegSquare, =, 0.0, ;, for]
[[, eq, ], ;, }, double, meanY, =, sumY, /, validItems, ;, double, yObsSquare, =, 0.0, ;, double, yRegSquare, =]
[[, eq, ], [, eq, ], ;, }, double, meanY, =, sumY, /, validItems, ;, double, yObsSquare, =, 0.0, ;]
[], [, eq, ], ;, }, double, meanY, =, sumY, /, validItems, ;, double, yObsSquare, =, 0.0, ;, double, yRegSquare]
[], ;, }, double, meanY, =, sumY, /, validItems, ;, double, yObsSquare, =, 0.0, ;, double, yRegSquare, =, 0.0, ;]
[;, double, yObsSquare, =, 0.0, ;, double, yRegSquare, =, 0.0, ;, for, (, int, item, =, 0, ;, item, <]
[/, validItems, ;, double, yObsSquare, =, 0.0, ;, double, yRegSquare, =, 0.0, ;, for, (, int, item, =, 0, ;]
[;, double, yObsSquare, =, 0.0, ;, double, yRegSquare, =, 0.0, ;, for, (, int, item, =, 0, ;, item, <]
[;, double, yRegSquare, =, 0.0, ;, for, (, int, item, =, 0, ;, item, <, validItems, ;, item, ++, )]
[;, for, (, int, item, =, 0, ;, item, <, validItems, ;, item, ++, ), {, double, yCalc, =, 0]
[;, item, <, validItems, ;, item, ++, ), {, double, yCalc, =, 0, ;, for, (, int, eq, =, 0]
[;, item, ++, ), {, double, yCalc, =, 0, ;, for, (, int, eq, =, 0, ;, eq, <, equations]
[<, validItems, ;, item, ++, ), {, double, yCalc, =, 0, ;, for, (, int, eq, =, 0, ;, eq]
[;, item, ++, ), {, double, yCalc, =, 0, ;, for, (, int, eq, =, 0, ;, eq, <, equations]
[), {, double, yCalc, =, 0, ;, for, (, int, eq, =, 0, ;, eq, <, equations, ;, eq, ++]
[++, ), {, double, yCalc, =, 0, ;, for, (, int, eq, =, 0, ;, eq, <, equations, ;, eq]
[;, for, (, int, eq, =, 0, ;, eq, <, equations, ;, eq, ++, ), {, yCalc, +=, result, []
[;, eq, <, equations, ;, eq, ++, ), {, yCalc, +=, result, [, eq, ], *, Math, ., pow, (]
[;, eq, ++, ), {, yCalc, +=, result, [, eq, ], *, Math, ., pow, (, data, [, 0, ]]
[<, equations, ;, eq, ++, ), {, yCalc, +=, result, [, eq, ], *, Math, ., pow, (, data, []
[;, eq, ++, ), {, yCalc, +=, result, [, eq, ], *, Math, ., pow, (, data, [, 0, ]]
[), {, yCalc, +=, result, [, eq, ], *, Math, ., pow, (, data, [, 0, ], [, item, ]]
[++, ), {, yCalc, +=, result, [, eq, ], *, Math, ., pow, (, data, [, 0, ], [, item]
[+=, result, [, eq, ], *, Math, ., pow, (, data, [, 0, ], [, item, ], ,, eq, )]
[;, }, yRegSquare, +=, Math, ., pow, (, yCalc, -, meanY, ,, 2, ), ;, yObsSquare, +=, Math, ., pow]
[*, Math, ., pow, (, data, [, 0, ], [, item, ], ,, eq, ), ;, }, yRegSquare, +=, Math]
[[, eq, ], *, Math, ., pow, (, data, [, 0, ], [, item, ], ,, eq, ), ;, }]
[], *, Math, ., pow, (, data, [, 0, ], [, item, ], ,, eq, ), ;, }, yRegSquare, +=]
[;, }, yRegSquare, +=, Math, ., pow, (, yCalc, -, meanY, ,, 2, ), ;, yObsSquare, +=, Math, ., pow]
[., pow, (, data, [, 0, ], [, item, ], ,, eq, ), ;, }, yRegSquare, +=, Math, ., pow]
[,, eq, ), ;, }, yRegSquare, +=, Math, ., pow, (, yCalc, -, meanY, ,, 2, ), ;, yObsSquare, +=]
[[, item, ], ,, eq, ), ;, }, yRegSquare, +=, Math, ., pow, (, yCalc, -, meanY, ,, 2, )]
[[, 0, ], [, item, ], ,, eq, ), ;, }, yRegSquare, +=, Math, ., pow, (, yCalc, -, meanY]
[], [, item, ], ,, eq, ), ;, }, yRegSquare, +=, Math, ., pow, (, yCalc, -, meanY, ,, 2]
[], ,, eq, ), ;, }, yRegSquare, +=, Math, ., pow, (, yCalc, -, meanY, ,, 2, ), ;, yObsSquare]
[), ;, }, yRegSquare, +=, Math, ., pow, (, yCalc, -, meanY, ,, 2, ), ;, yObsSquare, +=, Math, .]
[+=, Math, ., pow, (, yCalc, -, meanY, ,, 2, ), ;, yObsSquare, +=, Math, ., pow, (, data, []
[;, yObsSquare, +=, Math, ., pow, (, data, [, 1, ], [, item, ], -, meanY, ,, 2, ), ;]
[., pow, (, yCalc, -, meanY, ,, 2, ), ;, yObsSquare, +=, Math, ., pow, (, data, [, 1, ]]
[,, 2, ), ;, yObsSquare, +=, Math, ., pow, (, data, [, 1, ], [, item, ], -, meanY, ,]
[-, meanY, ,, 2, ), ;, yObsSquare, +=, Math, ., pow, (, data, [, 1, ], [, item, ], -]
[,, 2, ), ;, yObsSquare, +=, Math, ., pow, (, data, [, 1, ], [, item, ], -, meanY, ,]
[), ;, yObsSquare, +=, Math, ., pow, (, data, [, 1, ], [, item, ], -, meanY, ,, 2, )]
[+=, Math, ., pow, (, data, [, 1, ], [, item, ], -, meanY, ,, 2, ), ;, }, double]
[;, }, double, rSquare, =, yRegSquare, /, yObsSquare, ;, result, [, equations, ], =, rSquare, ;, return, result, ;, }]
[., pow, (, data, [, 1, ], [, item, ], -, meanY, ,, 2, ), ;, }, double, rSquare, =]
[,, 2, ), ;, }, double, rSquare, =, yRegSquare, /, yObsSquare, ;, result, [, equations, ], =, rSquare, ;, return]
[-, meanY, ,, 2, ), ;, }, double, rSquare, =, yRegSquare, /, yObsSquare, ;, result, [, equations, ], =, rSquare]
[[, item, ], -, meanY, ,, 2, ), ;, }, double, rSquare, =, yRegSquare, /, yObsSquare, ;, result, [, equations]
[[, 1, ], [, item, ], -, meanY, ,, 2, ), ;, }, double, rSquare, =, yRegSquare, /, yObsSquare, ;]
[], [, item, ], -, meanY, ,, 2, ), ;, }, double, rSquare, =, yRegSquare, /, yObsSquare, ;, result, []
[], -, meanY, ,, 2, ), ;, }, double, rSquare, =, yRegSquare, /, yObsSquare, ;, result, [, equations, ], =]
[,, 2, ), ;, }, double, rSquare, =, yRegSquare, /, yObsSquare, ;, result, [, equations, ], =, rSquare, ;, return]
[), ;, }, double, rSquare, =, yRegSquare, /, yObsSquare, ;, result, [, equations, ], =, rSquare, ;, return, result, ;]
[;, result, [, equations, ], =, rSquare, ;, return, result, ;, }, private, static, double, [, ], [, ], calculateSubMatrix]
[/, yObsSquare, ;, result, [, equations, ], =, rSquare, ;, return, result, ;, }, private, static, double, [, ], []
[;, result, [, equations, ], =, rSquare, ;, return, result, ;, }, private, static, double, [, ], [, ], calculateSubMatrix]
[=, rSquare, ;, return, result, ;, }, private, static, double, [, ], [, ], calculateSubMatrix, (, double, [, ], []
[[, equations, ], =, rSquare, ;, return, result, ;, }, private, static, double, [, ], [, ], calculateSubMatrix, (, double]
[], =, rSquare, ;, return, result, ;, }, private, static, double, [, ], [, ], calculateSubMatrix, (, double, [, ]]
[;, return, result, ;, }, private, static, double, [, ], [, ], calculateSubMatrix, (, double, [, ], [, ], matrix]
[;, }, private, static, double, [, ], [, ], calculateSubMatrix, (, double, [, ], [, ], matrix, ), {, int]
[;, int, coefficients, =, matrix, [, 0, ], ., length, ;, double, [, ], [, ], result, =, new, double]
[., length, ;, int, coefficients, =, matrix, [, 0, ], ., length, ;, double, [, ], [, ], result, =]
[;, double, [, ], [, ], result, =, new, double, [, equations, -, 1, ], [, coefficients, -, 1, ]]
[., length, ;, double, [, ], [, ], result, =, new, double, [, equations, -, 1, ], [, coefficients, -]
[[, 0, ], ., length, ;, double, [, ], [, ], result, =, new, double, [, equations, -, 1, ]]
[], ., length, ;, double, [, ], [, ], result, =, new, double, [, equations, -, 1, ], [, coefficients]
[;, for, (, int, eq, =, 1, ;, eq, <, equations, ;, eq, ++, ), {, double, factor, =, matrix]
[], [, coefficients, -, 1, ], ;, for, (, int, eq, =, 1, ;, eq, <, equations, ;, eq, ++]
[-, 1, ], [, coefficients, -, 1, ], ;, for, (, int, eq, =, 1, ;, eq, <, equations, ;]
[], [, coefficients, -, 1, ], ;, for, (, int, eq, =, 1, ;, eq, <, equations, ;, eq, ++]
[], ;, for, (, int, eq, =, 1, ;, eq, <, equations, ;, eq, ++, ), {, double, factor, =]
[-, 1, ], ;, for, (, int, eq, =, 1, ;, eq, <, equations, ;, eq, ++, ), {, double]
[], ;, for, (, int, eq, =, 1, ;, eq, <, equations, ;, eq, ++, ), {, double, factor, =]
[;, eq, <, equations, ;, eq, ++, ), {, double, factor, =, matrix, [, 0, ], [, 0, ], /]
[;, eq, ++, ), {, double, factor, =, matrix, [, 0, ], [, 0, ], /, matrix, [, eq, ]]
[<, equations, ;, eq, ++, ), {, double, factor, =, matrix, [, 0, ], [, 0, ], /, matrix, []
[;, eq, ++, ), {, double, factor, =, matrix, [, 0, ], [, 0, ], /, matrix, [, eq, ]]
[), {, double, factor, =, matrix, [, 0, ], [, 0, ], /, matrix, [, eq, ], [, 0, ]]
[++, ), {, double, factor, =, matrix, [, 0, ], [, 0, ], /, matrix, [, eq, ], [, 0]
[;, for, (, int, coe, =, 1, ;, coe, <, coefficients, ;, coe, ++, ), {, result, [, eq, -]
[/, matrix, [, eq, ], [, 0, ], ;, for, (, int, coe, =, 1, ;, coe, <, coefficients, ;]
[[, 0, ], /, matrix, [, eq, ], [, 0, ], ;, for, (, int, coe, =, 1, ;, coe]
[[, 0, ], [, 0, ], /, matrix, [, eq, ], [, 0, ], ;, for, (, int, coe, =]
[], [, 0, ], /, matrix, [, eq, ], [, 0, ], ;, for, (, int, coe, =, 1, ;]
[], /, matrix, [, eq, ], [, 0, ], ;, for, (, int, coe, =, 1, ;, coe, <, coefficients]
[;, for, (, int, coe, =, 1, ;, coe, <, coefficients, ;, coe, ++, ), {, result, [, eq, -]
[[, 0, ], ;, for, (, int, coe, =, 1, ;, coe, <, coefficients, ;, coe, ++, ), {, result]
[[, eq, ], [, 0, ], ;, for, (, int, coe, =, 1, ;, coe, <, coefficients, ;, coe, ++]
[], [, 0, ], ;, for, (, int, coe, =, 1, ;, coe, <, coefficients, ;, coe, ++, ), {]
[], ;, for, (, int, coe, =, 1, ;, coe, <, coefficients, ;, coe, ++, ), {, result, [, eq]
[;, coe, <, coefficients, ;, coe, ++, ), {, result, [, eq, -, 1, ], [, coe, -, 1, ]]
[;, coe, ++, ), {, result, [, eq, -, 1, ], [, coe, -, 1, ], =, matrix, [, 0]
[<, coefficients, ;, coe, ++, ), {, result, [, eq, -, 1, ], [, coe, -, 1, ], =, matrix]
[;, coe, ++, ), {, result, [, eq, -, 1, ], [, coe, -, 1, ], =, matrix, [, 0]
[), {, result, [, eq, -, 1, ], [, coe, -, 1, ], =, matrix, [, 0, ], [, coe]
[++, ), {, result, [, eq, -, 1, ], [, coe, -, 1, ], =, matrix, [, 0, ], []
[=, matrix, [, 0, ], [, coe, ], -, matrix, [, eq, ], [, coe, ], *, factor, ;, }]
[[, coe, -, 1, ], =, matrix, [, 0, ], [, coe, ], -, matrix, [, eq, ], [, coe]
[[, eq, -, 1, ], [, coe, -, 1, ], =, matrix, [, 0, ], [, coe, ], -, matrix]
[], [, coe, -, 1, ], =, matrix, [, 0, ], [, coe, ], -, matrix, [, eq, ], []
[-, 1, ], [, coe, -, 1, ], =, matrix, [, 0, ], [, coe, ], -, matrix, [, eq]
[], [, coe, -, 1, ], =, matrix, [, 0, ], [, coe, ], -, matrix, [, eq, ], []
[], =, matrix, [, 0, ], [, coe, ], -, matrix, [, eq, ], [, coe, ], *, factor, ;]
[-, 1, ], =, matrix, [, 0, ], [, coe, ], -, matrix, [, eq, ], [, coe, ], *]
[], =, matrix, [, 0, ], [, coe, ], -, matrix, [, eq, ], [, coe, ], *, factor, ;]
[;, }, }, if, (, equations, ==, 1, ), {, return, result, ;, }, if, (, result, [, 0, ]]
[-, matrix, [, eq, ], [, coe, ], *, factor, ;, }, }, if, (, equations, ==, 1, ), {]
[[, coe, ], -, matrix, [, eq, ], [, coe, ], *, factor, ;, }, }, if, (, equations, ==]
[[, 0, ], [, coe, ], -, matrix, [, eq, ], [, coe, ], *, factor, ;, }, }, if]
[], [, coe, ], -, matrix, [, eq, ], [, coe, ], *, factor, ;, }, }, if, (, equations]
[], -, matrix, [, eq, ], [, coe, ], *, factor, ;, }, }, if, (, equations, ==, 1, )]
[;, }, }, if, (, equations, ==, 1, ), {, return, result, ;, }, if, (, result, [, 0, ]]
[*, factor, ;, }, }, if, (, equations, ==, 1, ), {, return, result, ;, }, if, (, result, []
[[, coe, ], *, factor, ;, }, }, if, (, equations, ==, 1, ), {, return, result, ;, }, if]
[[, eq, ], [, coe, ], *, factor, ;, }, }, if, (, equations, ==, 1, ), {, return, result]
[], [, coe, ], *, factor, ;, }, }, if, (, equations, ==, 1, ), {, return, result, ;, }]
[], *, factor, ;, }, }, if, (, equations, ==, 1, ), {, return, result, ;, }, if, (, result]
[;, }, }, if, (, equations, ==, 1, ), {, return, result, ;, }, if, (, result, [, 0, ]]
[), {, return, result, ;, }, if, (, result, [, 0, ], [, 0, ], ==, 0, ), {, boolean]
[==, 1, ), {, return, result, ;, }, if, (, result, [, 0, ], [, 0, ], ==, 0, )]
[), {, return, result, ;, }, if, (, result, [, 0, ], [, 0, ], ==, 0, ), {, boolean]
[;, }, if, (, result, [, 0, ], [, 0, ], ==, 0, ), {, boolean, found, =, false, ;]
[), {, boolean, found, =, false, ;, for, (, int, i, =, 0, ;, i, <, result, ., length, ;]
[==, 0, ), {, boolean, found, =, false, ;, for, (, int, i, =, 0, ;, i, <, result, .]
[[, 0, ], ==, 0, ), {, boolean, found, =, false, ;, for, (, int, i, =, 0, ;, i]
[[, 0, ], [, 0, ], ==, 0, ), {, boolean, found, =, false, ;, for, (, int, i, =]
[], [, 0, ], ==, 0, ), {, boolean, found, =, false, ;, for, (, int, i, =, 0, ;]
[], ==, 0, ), {, boolean, found, =, false, ;, for, (, int, i, =, 0, ;, i, <, result]
[), {, boolean, found, =, false, ;, for, (, int, i, =, 0, ;, i, <, result, ., length, ;]
[;, for, (, int, i, =, 0, ;, i, <, result, ., length, ;, i, ++, ), {, if, (]
[;, i, <, result, ., length, ;, i, ++, ), {, if, (, result, [, i, ], [, 0, ]]
[;, i, ++, ), {, if, (, result, [, i, ], [, 0, ], !=, 0, ), {, found, =]
[<, result, ., length, ;, i, ++, ), {, if, (, result, [, i, ], [, 0, ], !=, 0]
[;, i, ++, ), {, if, (, result, [, i, ], [, 0, ], !=, 0, ), {, found, =]
[., length, ;, i, ++, ), {, if, (, result, [, i, ], [, 0, ], !=, 0, ), {]
[), {, if, (, result, [, i, ], [, 0, ], !=, 0, ), {, found, =, true, ;, double]
[++, ), {, if, (, result, [, i, ], [, 0, ], !=, 0, ), {, found, =, true, ;]
[), {, found, =, true, ;, double, [, ], temp, =, result, [, 0, ], ;, for, (, int, j]
[!=, 0, ), {, found, =, true, ;, double, [, ], temp, =, result, [, 0, ], ;, for, (]
[[, 0, ], !=, 0, ), {, found, =, true, ;, double, [, ], temp, =, result, [, 0, ]]
[[, i, ], [, 0, ], !=, 0, ), {, found, =, true, ;, double, [, ], temp, =, result]
[], [, 0, ], !=, 0, ), {, found, =, true, ;, double, [, ], temp, =, result, [, 0]
[], !=, 0, ), {, found, =, true, ;, double, [, ], temp, =, result, [, 0, ], ;, for]
[), {, found, =, true, ;, double, [, ], temp, =, result, [, 0, ], ;, for, (, int, j]
[=, true, ;, double, [, ], temp, =, result, [, 0, ], ;, for, (, int, j, =, 0, ;]
[;, double, [, ], temp, =, result, [, 0, ], ;, for, (, int, j, =, 0, ;, j, <]
[;, for, (, int, j, =, 0, ;, j, <, result, [, i, ], ., length, ;, j, ++, )]
[[, 0, ], ;, for, (, int, j, =, 0, ;, j, <, result, [, i, ], ., length, ;]
[], ;, for, (, int, j, =, 0, ;, j, <, result, [, i, ], ., length, ;, j, ++]
[;, j, <, result, [, i, ], ., length, ;, j, ++, ), {, result, [, 0, ], [, j]
[;, j, ++, ), {, result, [, 0, ], [, j, ], =, result, [, i, ], [, j, ]]
[<, result, [, i, ], ., length, ;, j, ++, ), {, result, [, 0, ], [, j, ], =]
[;, j, ++, ), {, result, [, 0, ], [, j, ], =, result, [, i, ], [, j, ]]
[., length, ;, j, ++, ), {, result, [, 0, ], [, j, ], =, result, [, i, ], []
[[, i, ], ., length, ;, j, ++, ), {, result, [, 0, ], [, j, ], =, result, []
[], ., length, ;, j, ++, ), {, result, [, 0, ], [, j, ], =, result, [, i, ]]
[), {, result, [, 0, ], [, j, ], =, result, [, i, ], [, j, ], ;, }, for]
[++, ), {, result, [, 0, ], [, j, ], =, result, [, i, ], [, j, ], ;, }]
[=, result, [, i, ], [, j, ], ;, }, for, (, int, j, =, 0, ;, j, <, temp]
[[, j, ], =, result, [, i, ], [, j, ], ;, }, for, (, int, j, =, 0, ;]
[[, 0, ], [, j, ], =, result, [, i, ], [, j, ], ;, }, for, (, int, j]
[], [, j, ], =, result, [, i, ], [, j, ], ;, }, for, (, int, j, =, 0]
[], =, result, [, i, ], [, j, ], ;, }, for, (, int, j, =, 0, ;, j, <]
[;, }, for, (, int, j, =, 0, ;, j, <, temp, ., length, ;, j, ++, ), {, result]
[[, j, ], ;, }, for, (, int, j, =, 0, ;, j, <, temp, ., length, ;, j, ++]
[[, i, ], [, j, ], ;, }, for, (, int, j, =, 0, ;, j, <, temp, ., length]
[], [, j, ], ;, }, for, (, int, j, =, 0, ;, j, <, temp, ., length, ;, j]
[], ;, }, for, (, int, j, =, 0, ;, j, <, temp, ., length, ;, j, ++, ), {]
[;, j, <, temp, ., length, ;, j, ++, ), {, result, [, i, ], [, j, ], =, temp]
[;, j, ++, ), {, result, [, i, ], [, j, ], =, temp, [, j, ], ;, }, break]
[<, temp, ., length, ;, j, ++, ), {, result, [, i, ], [, j, ], =, temp, [, j]
[;, j, ++, ), {, result, [, i, ], [, j, ], =, temp, [, j, ], ;, }, break]
[., length, ;, j, ++, ), {, result, [, i, ], [, j, ], =, temp, [, j, ], ;]
[), {, result, [, i, ], [, j, ], =, temp, [, j, ], ;, }, break, ;, }, }]
[++, ), {, result, [, i, ], [, j, ], =, temp, [, j, ], ;, }, break, ;, }]
[=, temp, [, j, ], ;, }, break, ;, }, }, if, (, !, found, ), {, System, ., out]
[[, j, ], =, temp, [, j, ], ;, }, break, ;, }, }, if, (, !, found, ), {]
[[, i, ], [, j, ], =, temp, [, j, ], ;, }, break, ;, }, }, if, (, !]
[], [, j, ], =, temp, [, j, ], ;, }, break, ;, }, }, if, (, !, found, )]
[], =, temp, [, j, ], ;, }, break, ;, }, }, if, (, !, found, ), {, System, .]
[;, }, break, ;, }, }, if, (, !, found, ), {, System, ., out, ., println, (, "Equation has no solution!", )]
[[, j, ], ;, }, break, ;, }, }, if, (, !, found, ), {, System, ., out, ., println]
[], ;, }, break, ;, }, }, if, (, !, found, ), {, System, ., out, ., println, (, "Equation has no solution!"]
[), {, System, ., out, ., println, (, "Equation has no solution!", ), ;, return, new, double, [, equations, -, 1, ], []
[), {, System, ., out, ., println, (, "Equation has no solution!", ), ;, return, new, double, [, equations, -, 1, ], []
[;, return, new, double, [, equations, -, 1, ], [, coefficients, -, 1, ], ;, }, }, double, [, ]]
[., println, (, "Equation has no solution!", ), ;, return, new, double, [, equations, -, 1, ], [, coefficients, -, 1, ], ;]
[., out, ., println, (, "Equation has no solution!", ), ;, return, new, double, [, equations, -, 1, ], [, coefficients, -, 1]
[), ;, return, new, double, [, equations, -, 1, ], [, coefficients, -, 1, ], ;, }, }, double, []
[;, }, }, double, [, ], [, ], subMatrix, =, calculateSubMatrix, (, result, ), ;, for, (, int, eq, =]
[], [, coefficients, -, 1, ], ;, }, }, double, [, ], [, ], subMatrix, =, calculateSubMatrix, (, result, )]
[-, 1, ], [, coefficients, -, 1, ], ;, }, }, double, [, ], [, ], subMatrix, =, calculateSubMatrix, (]
[], [, coefficients, -, 1, ], ;, }, }, double, [, ], [, ], subMatrix, =, calculateSubMatrix, (, result, )]
[], ;, }, }, double, [, ], [, ], subMatrix, =, calculateSubMatrix, (, result, ), ;, for, (, int, eq]
[-, 1, ], ;, }, }, double, [, ], [, ], subMatrix, =, calculateSubMatrix, (, result, ), ;, for, (]
[], ;, }, }, double, [, ], [, ], subMatrix, =, calculateSubMatrix, (, result, ), ;, for, (, int, eq]
[;, for, (, int, eq, =, 1, ;, eq, <, equations, -, 1, ;, eq, ++, ), {, result, []
[), ;, for, (, int, eq, =, 1, ;, eq, <, equations, -, 1, ;, eq, ++, ), {, result]
[;, eq, <, equations, -, 1, ;, eq, ++, ), {, result, [, eq, ], [, 0, ], =, 0]
[;, eq, ++, ), {, result, [, eq, ], [, 0, ], =, 0, ;, for, (, int, coe, =]
[<, equations, -, 1, ;, eq, ++, ), {, result, [, eq, ], [, 0, ], =, 0, ;, for]
[;, eq, ++, ), {, result, [, eq, ], [, 0, ], =, 0, ;, for, (, int, coe, =]
[-, 1, ;, eq, ++, ), {, result, [, eq, ], [, 0, ], =, 0, ;, for, (, int]
[;, eq, ++, ), {, result, [, eq, ], [, 0, ], =, 0, ;, for, (, int, coe, =]
[), {, result, [, eq, ], [, 0, ], =, 0, ;, for, (, int, coe, =, 1, ;, coe]
[++, ), {, result, [, eq, ], [, 0, ], =, 0, ;, for, (, int, coe, =, 1, ;]
[=, 0, ;, for, (, int, coe, =, 1, ;, coe, <, coefficients, -, 1, ;, coe, ++, ), {]
[[, 0, ], =, 0, ;, for, (, int, coe, =, 1, ;, coe, <, coefficients, -, 1, ;, coe]
[[, eq, ], [, 0, ], =, 0, ;, for, (, int, coe, =, 1, ;, coe, <, coefficients, -]
[], [, 0, ], =, 0, ;, for, (, int, coe, =, 1, ;, coe, <, coefficients, -, 1, ;]
[], =, 0, ;, for, (, int, coe, =, 1, ;, coe, <, coefficients, -, 1, ;, coe, ++, )]
[;, for, (, int, coe, =, 1, ;, coe, <, coefficients, -, 1, ;, coe, ++, ), {, result, []
[;, coe, <, coefficients, -, 1, ;, coe, ++, ), {, result, [, eq, ], [, coe, ], =, subMatrix]
[;, coe, ++, ), {, result, [, eq, ], [, coe, ], =, subMatrix, [, eq, -, 1, ], []
[<, coefficients, -, 1, ;, coe, ++, ), {, result, [, eq, ], [, coe, ], =, subMatrix, [, eq]
[;, coe, ++, ), {, result, [, eq, ], [, coe, ], =, subMatrix, [, eq, -, 1, ], []
[-, 1, ;, coe, ++, ), {, result, [, eq, ], [, coe, ], =, subMatrix, [, eq, -, 1]
[;, coe, ++, ), {, result, [, eq, ], [, coe, ], =, subMatrix, [, eq, -, 1, ], []
[), {, result, [, eq, ], [, coe, ], =, subMatrix, [, eq, -, 1, ], [, coe, -, 1]
[++, ), {, result, [, eq, ], [, coe, ], =, subMatrix, [, eq, -, 1, ], [, coe, -]
[=, subMatrix, [, eq, -, 1, ], [, coe, -, 1, ], ;, }, }, return, result, ;, }, }]
[[, coe, ], =, subMatrix, [, eq, -, 1, ], [, coe, -, 1, ], ;, }, }, return, result]
[[, eq, ], [, coe, ], =, subMatrix, [, eq, -, 1, ], [, coe, -, 1, ], ;, }]
[], [, coe, ], =, subMatrix, [, eq, -, 1, ], [, coe, -, 1, ], ;, }, }, return]
[], =, subMatrix, [, eq, -, 1, ], [, coe, -, 1, ], ;, }, }, return, result, ;, }]
[;, }, }, return, result, ;, }, }]
[[, coe, -, 1, ], ;, }, }, return, result, ;, }, }]
[[, eq, -, 1, ], [, coe, -, 1, ], ;, }, }, return, result, ;, }, }]
[], [, coe, -, 1, ], ;, }, }, return, result, ;, }, }]
[-, 1, ], [, coe, -, 1, ], ;, }, }, return, result, ;, }, }]
[], [, coe, -, 1, ], ;, }, }, return, result, ;, }, }]
[], ;, }, }, return, result, ;, }, }]
[-, 1, ], ;, }, }, return, result, ;, }, }]
[], ;, }, }, return, result, ;, }, }]
[;, }, }]
