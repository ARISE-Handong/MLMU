[math3, ., exception, ., MathIllegalArgumentException, ;, public, class, TransformerMap, implements, NumberTransformer, ,, Serializable, {, private, static, final, long, serialVersionUID, =]
[public, class, TransformerMap, implements, NumberTransformer, ,, Serializable, {, private, static, final, long, serialVersionUID, =, 4605318041528645258L, ;, private, NumberTransformer, defaultTransformer, =]
[4605318041528645258L, ;, private, NumberTransformer, defaultTransformer, =, null, ;, private, Map, <, Class, <, ?, >, ,, NumberTransformer, >, map, =]
[;, private, Map, <, Class, <, ?, >, ,, NumberTransformer, >, map, =, null, ;, public, TransformerMap, (, ), {]
[Map, <, Class, <, ?, >, ,, NumberTransformer, >, map, =, null, ;, public, TransformerMap, (, ), {, map, =]
[public, TransformerMap, (, ), {, map, =, new, HashMap, <, Class, <, ?, >, ,, NumberTransformer, >, (, ), ;]
[(, ), {, map, =, new, HashMap, <, Class, <, ?, >, ,, NumberTransformer, >, (, ), ;, defaultTransformer, =]
[defaultTransformer, =, new, DefaultTransformer, (, ), ;, }, public, boolean, containsClass, (, Class, <, ?, >, key, ), {, return]
[defaultTransformer, =, new, DefaultTransformer, (, ), ;, }, public, boolean, containsClass, (, Class, <, ?, >, key, ), {, return]
[(, ), ;, }, public, boolean, containsClass, (, Class, <, ?, >, key, ), {, return, map, ., containsKey, (]
[), {, return, map, ., containsKey, (, key, ), ;, }, public, boolean, containsTransformer, (, NumberTransformer, value, ), {, return]
[), {, return, map, ., containsKey, (, key, ), ;, }, public, boolean, containsTransformer, (, NumberTransformer, value, ), {, return]
[., containsKey, (, key, ), ;, }, public, boolean, containsTransformer, (, NumberTransformer, value, ), {, return, map, ., containsValue, (]
[map, ., containsValue, (, value, ), ;, }, public, NumberTransformer, getTransformer, (, Class, <, ?, >, key, ), {, return]
[map, ., containsValue, (, value, ), ;, }, public, NumberTransformer, getTransformer, (, Class, <, ?, >, key, ), {, return]
[value, ), ;, }, public, NumberTransformer, getTransformer, (, Class, <, ?, >, key, ), {, return, map, ., get, (]
[(, key, ), ;, }, public, NumberTransformer, putTransformer, (, Class, <, ?, >, key, ,, NumberTransformer, transformer, ), {, return]
[(, key, ), ;, }, public, NumberTransformer, putTransformer, (, Class, <, ?, >, key, ,, NumberTransformer, transformer, ), {, return]
[}, public, NumberTransformer, putTransformer, (, Class, <, ?, >, key, ,, NumberTransformer, transformer, ), {, return, map, ., put, (]
[NumberTransformer, putTransformer, (, Class, <, ?, >, key, ,, NumberTransformer, transformer, ), {, return, map, ., put, (, key, ,]
[put, (, key, ,, transformer, ), ;, }, public, NumberTransformer, removeTransformer, (, Class, <, ?, >, key, ), {, return]
[put, (, key, ,, transformer, ), ;, }, public, NumberTransformer, removeTransformer, (, Class, <, ?, >, key, ), {, return]
[transformer, ), ;, }, public, NumberTransformer, removeTransformer, (, Class, <, ?, >, key, ), {, return, map, ., remove, (]
[?, >, key, ), {, return, map, ., remove, (, key, ), ;, }, public, void, clear, (, ), {]
[?, >, key, ), {, return, map, ., remove, (, key, ), ;, }, public, void, clear, (, ), {]
[map, ., clear, (, ), ;, }, public, Set, <, Class, <, ?, >, >, classes, (, ), {, return]
[map, ., clear, (, ), ;, }, public, Set, <, Class, <, ?, >, >, classes, (, ), {, return]
[), {, return, map, ., keySet, (, ), ;, }, public, Collection, <, NumberTransformer, >, transformers, (, ), {, return]
[), {, return, map, ., keySet, (, ), ;, }, public, Collection, <, NumberTransformer, >, transformers, (, ), {, return]
[map, ., values, (, ), ;, }, public, double, transform, (, Object, o, ), throws, MathIllegalArgumentException, {, double, value, =]
[map, ., values, (, ), ;, }, public, double, transform, (, Object, o, ), throws, MathIllegalArgumentException, {, double, value, =]
[}, public, double, transform, (, Object, o, ), throws, MathIllegalArgumentException, {, double, value, =, Double, ., NaN, ;, if, (]
[}, public, double, transform, (, Object, o, ), throws, MathIllegalArgumentException, {, double, value, =, Double, ., NaN, ;, if, (]
[}, public, double, transform, (, Object, o, ), throws, MathIllegalArgumentException, {, double, value, =, Double, ., NaN, ;, if, (]
[(, Object, o, ), throws, MathIllegalArgumentException, {, double, value, =, Double, ., NaN, ;, if, (, o, instanceof, Number, ||]
[(, Object, o, ), throws, MathIllegalArgumentException, {, double, value, =, Double, ., NaN, ;, if, (, o, instanceof, Number, ||]
[MathIllegalArgumentException, {, double, value, =, Double, ., NaN, ;, if, (, o, instanceof, Number, ||, o, instanceof, String, ), {]
[double, value, =, Double, ., NaN, ;, if, (, o, instanceof, Number, ||, o, instanceof, String, ), {, value, =]
[double, value, =, Double, ., NaN, ;, if, (, o, instanceof, Number, ||, o, instanceof, String, ), {, value, =]
[., NaN, ;, if, (, o, instanceof, Number, ||, o, instanceof, String, ), {, value, =, defaultTransformer, ., transform, (]
[o, instanceof, String, ), {, value, =, defaultTransformer, ., transform, (, o, ), ;, }, else, {, NumberTransformer, trans, =]
[String, ), {, value, =, defaultTransformer, ., transform, (, o, ), ;, }, else, {, NumberTransformer, trans, =, getTransformer, (]
[String, ), {, value, =, defaultTransformer, ., transform, (, o, ), ;, }, else, {, NumberTransformer, trans, =, getTransformer, (]
[o, ), ;, }, else, {, NumberTransformer, trans, =, getTransformer, (, o, ., getClass, (, ), ), ;, if, (]
[o, ), ;, }, else, {, NumberTransformer, trans, =, getTransformer, (, o, ., getClass, (, ), ), ;, if, (]
[;, }, else, {, NumberTransformer, trans, =, getTransformer, (, o, ., getClass, (, ), ), ;, if, (, trans, !=]
[{, NumberTransformer, trans, =, getTransformer, (, o, ., getClass, (, ), ), ;, if, (, trans, !=, null, ), {]
[trans, =, getTransformer, (, o, ., getClass, (, ), ), ;, if, (, trans, !=, null, ), {, value, =]
[trans, =, getTransformer, (, o, ., getClass, (, ), ), ;, if, (, trans, !=, null, ), {, value, =]
[o, ., getClass, (, ), ), ;, if, (, trans, !=, null, ), {, value, =, trans, ., transform, (]
[;, if, (, trans, !=, null, ), {, value, =, trans, ., transform, (, o, ), ;, }, }, return]
[), ;, }, }, return, value, ;, }, @, Override, public, boolean, equals, (, Object, other, ), {, if, (]
[), ;, }, }, return, value, ;, }, @, Override, public, boolean, equals, (, Object, other, ), {, if, (]
[}, }, return, value, ;, }, @, Override, public, boolean, equals, (, Object, other, ), {, if, (, this, ==]
[;, }, @, Override, public, boolean, equals, (, Object, other, ), {, if, (, this, ==, other, ), {, return]
[boolean, equals, (, Object, other, ), {, if, (, this, ==, other, ), {, return, true, ;, }, if, (]
[boolean, equals, (, Object, other, ), {, if, (, this, ==, other, ), {, return, true, ;, }, if, (]
[(, this, ==, other, ), {, return, true, ;, }, if, (, other, instanceof, TransformerMap, ), {, TransformerMap, rhs, =]
[other, ), {, return, true, ;, }, if, (, other, instanceof, TransformerMap, ), {, TransformerMap, rhs, =, (, TransformerMap, )]
[true, ;, }, if, (, other, instanceof, TransformerMap, ), {, TransformerMap, rhs, =, (, TransformerMap, ), other, ;, if, (]
[;, }, if, (, other, instanceof, TransformerMap, ), {, TransformerMap, rhs, =, (, TransformerMap, ), other, ;, if, (, !]
[;, }, if, (, other, instanceof, TransformerMap, ), {, TransformerMap, rhs, =, (, TransformerMap, ), other, ;, if, (, !]
[other, instanceof, TransformerMap, ), {, TransformerMap, rhs, =, (, TransformerMap, ), other, ;, if, (, !, defaultTransformer, ., equals, (]
[other, instanceof, TransformerMap, ), {, TransformerMap, rhs, =, (, TransformerMap, ), other, ;, if, (, !, defaultTransformer, ., equals, (]
[=, (, TransformerMap, ), other, ;, if, (, !, defaultTransformer, ., equals, (, rhs, ., defaultTransformer, ), ), {, return]
[;, if, (, !, defaultTransformer, ., equals, (, rhs, ., defaultTransformer, ), ), {, return, false, ;, }, if, (]
[;, if, (, !, defaultTransformer, ., equals, (, rhs, ., defaultTransformer, ), ), {, return, false, ;, }, if, (]
[;, if, (, !, defaultTransformer, ., equals, (, rhs, ., defaultTransformer, ), ), {, return, false, ;, }, if, (]
[equals, (, rhs, ., defaultTransformer, ), ), {, return, false, ;, }, if, (, map, ., size, (, ), !=]
[equals, (, rhs, ., defaultTransformer, ), ), {, return, false, ;, }, if, (, map, ., size, (, ), !=]
[equals, (, rhs, ., defaultTransformer, ), ), {, return, false, ;, }, if, (, map, ., size, (, ), !=]
[;, }, if, (, map, ., size, (, ), !=, rhs, ., map, ., size, (, ), ), {, return]
[{, return, false, ;, }, for, (, Map, ., Entry, <, Class, <, ?, >, ,, NumberTransformer, >, entry, :]
[{, return, false, ;, }, for, (, Map, ., Entry, <, Class, <, ?, >, ,, NumberTransformer, >, entry, :]
[Entry, <, Class, <, ?, >, ,, NumberTransformer, >, entry, :, map, ., entrySet, (, ), ), {, if, (]
[<, Class, <, ?, >, ,, NumberTransformer, >, entry, :, map, ., entrySet, (, ), ), {, if, (, !]
[<, Class, <, ?, >, ,, NumberTransformer, >, entry, :, map, ., entrySet, (, ), ), {, if, (, !]
[<, Class, <, ?, >, ,, NumberTransformer, >, entry, :, map, ., entrySet, (, ), ), {, if, (, !]
[entry, :, map, ., entrySet, (, ), ), {, if, (, !, entry, ., getValue, (, ), ., equals, (]
[entry, :, map, ., entrySet, (, ), ), {, if, (, !, entry, ., getValue, (, ), ., equals, (]
[entry, :, map, ., entrySet, (, ), ), {, if, (, !, entry, ., getValue, (, ), ., equals, (]
[), ), {, if, (, !, entry, ., getValue, (, ), ., equals, (, rhs, ., map, ., get, (]
[), ), {, if, (, !, entry, ., getValue, (, ), ., equals, (, rhs, ., map, ., get, (]
[), ., equals, (, rhs, ., map, ., get, (, entry, ., getKey, (, ), ), ), ), {, return]
[., map, ., get, (, entry, ., getKey, (, ), ), ), ), {, return, false, ;, }, }, return]
[(, entry, ., getKey, (, ), ), ), ), {, return, false, ;, }, }, return, true, ;, }, return]
[}, return, true, ;, }, return, false, ;, }, @, Override, public, int, hashCode, (, ), {, int, hash, =]
[}, return, true, ;, }, return, false, ;, }, @, Override, public, int, hashCode, (, ), {, int, hash, =]
[public, int, hashCode, (, ), {, int, hash, =, defaultTransformer, ., hashCode, (, ), ;, for, (, NumberTransformer, t, :]
[public, int, hashCode, (, ), {, int, hash, =, defaultTransformer, ., hashCode, (, ), ;, for, (, NumberTransformer, t, :]
[hash, =, defaultTransformer, ., hashCode, (, ), ;, for, (, NumberTransformer, t, :, map, ., values, (, ), ), {]
[defaultTransformer, ., hashCode, (, ), ;, for, (, NumberTransformer, t, :, map, ., values, (, ), ), {, hash, =]
[defaultTransformer, ., hashCode, (, ), ;, for, (, NumberTransformer, t, :, map, ., values, (, ), ), {, hash, =]
[defaultTransformer, ., hashCode, (, ), ;, for, (, NumberTransformer, t, :, map, ., values, (, ), ), {, hash, =]
[hashCode, (, ), ;, for, (, NumberTransformer, t, :, map, ., values, (, ), ), {, hash, =, hash, *]
[), ;, for, (, NumberTransformer, t, :, map, ., values, (, ), ), {, hash, =, hash, *, 31, +]
[), ;, for, (, NumberTransformer, t, :, map, ., values, (, ), ), {, hash, =, hash, *, 31, +]
[., values, (, ), ), {, hash, =, hash, *, 31, +, t, ., hashCode, (, ), ;, }, return]
