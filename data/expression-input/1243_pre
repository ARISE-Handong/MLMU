[javascript, ., rhino, ., jstype, ., StaticSourceFile, ;, class, CheckAccessControls, implements, ScopedCallback, ,, HotSwapCompilerPass, {, static, final, DiagnosticType, DEPRECATED_NAME, =]
[javascript, ., rhino, ., jstype, ., StaticSourceFile, ;, class, CheckAccessControls, implements, ScopedCallback, ,, HotSwapCompilerPass, {, static, final, DiagnosticType, DEPRECATED_NAME, =]
[jstype, ., StaticSourceFile, ;, class, CheckAccessControls, implements, ScopedCallback, ,, HotSwapCompilerPass, {, static, final, DiagnosticType, DEPRECATED_NAME, =, DiagnosticType, ., disabled, (]
[StaticSourceFile, ;, class, CheckAccessControls, implements, ScopedCallback, ,, HotSwapCompilerPass, {, static, final, DiagnosticType, DEPRECATED_NAME, =, DiagnosticType, ., disabled, (, "JSC_DEPRECATED_VAR", ,]
[{, static, final, DiagnosticType, DEPRECATED_NAME, =, DiagnosticType, ., disabled, (, "JSC_DEPRECATED_VAR", ,, "Variable {0} has been deprecated.", ), ;, static, final, DiagnosticType, DEPRECATED_NAME_REASON, =]
[{, static, final, DiagnosticType, DEPRECATED_NAME, =, DiagnosticType, ., disabled, (, "JSC_DEPRECATED_VAR", ,, "Variable {0} has been deprecated.", ), ;, static, final, DiagnosticType, DEPRECATED_NAME_REASON, =]
[DEPRECATED_NAME, =, DiagnosticType, ., disabled, (, "JSC_DEPRECATED_VAR", ,, "Variable {0} has been deprecated.", ), ;, static, final, DiagnosticType, DEPRECATED_NAME_REASON, =, DiagnosticType, ., disabled, (]
[DiagnosticType, ., disabled, (, "JSC_DEPRECATED_VAR", ,, "Variable {0} has been deprecated.", ), ;, static, final, DiagnosticType, DEPRECATED_NAME_REASON, =, DiagnosticType, ., disabled, (, "JSC_DEPRECATED_VAR_REASON", ,]
[;, static, final, DiagnosticType, DEPRECATED_NAME_REASON, =, DiagnosticType, ., disabled, (, "JSC_DEPRECATED_VAR_REASON", ,, "Variable {0} has been deprecated: {1}", ), ;, static, final, DiagnosticType, DEPRECATED_PROP, =]
[;, static, final, DiagnosticType, DEPRECATED_NAME_REASON, =, DiagnosticType, ., disabled, (, "JSC_DEPRECATED_VAR_REASON", ,, "Variable {0} has been deprecated: {1}", ), ;, static, final, DiagnosticType, DEPRECATED_PROP, =]
[DEPRECATED_NAME_REASON, =, DiagnosticType, ., disabled, (, "JSC_DEPRECATED_VAR_REASON", ,, "Variable {0} has been deprecated: {1}", ), ;, static, final, DiagnosticType, DEPRECATED_PROP, =, DiagnosticType, ., disabled, (]
[DiagnosticType, ., disabled, (, "JSC_DEPRECATED_VAR_REASON", ,, "Variable {0} has been deprecated: {1}", ), ;, static, final, DiagnosticType, DEPRECATED_PROP, =, DiagnosticType, ., disabled, (, "JSC_DEPRECATED_PROP", ,]
[;, static, final, DiagnosticType, DEPRECATED_PROP, =, DiagnosticType, ., disabled, (, "JSC_DEPRECATED_PROP", ,, "Property {0} of type {1} has been deprecated.", ), ;, static, final, DiagnosticType, DEPRECATED_PROP_REASON, =]
[;, static, final, DiagnosticType, DEPRECATED_PROP, =, DiagnosticType, ., disabled, (, "JSC_DEPRECATED_PROP", ,, "Property {0} of type {1} has been deprecated.", ), ;, static, final, DiagnosticType, DEPRECATED_PROP_REASON, =]
[DEPRECATED_PROP, =, DiagnosticType, ., disabled, (, "JSC_DEPRECATED_PROP", ,, "Property {0} of type {1} has been deprecated.", ), ;, static, final, DiagnosticType, DEPRECATED_PROP_REASON, =, DiagnosticType, ., disabled, (]
[DiagnosticType, ., disabled, (, "JSC_DEPRECATED_PROP", ,, "Property {0} of type {1} has been deprecated.", ), ;, static, final, DiagnosticType, DEPRECATED_PROP_REASON, =, DiagnosticType, ., disabled, (, "JSC_DEPRECATED_PROP_REASON", ,]
[;, static, final, DiagnosticType, DEPRECATED_PROP_REASON, =, DiagnosticType, ., disabled, (, "JSC_DEPRECATED_PROP_REASON", ,, "Property {0} of type {1} has been deprecated: {2}", ), ;, static, final, DiagnosticType, DEPRECATED_CLASS, =]
[;, static, final, DiagnosticType, DEPRECATED_PROP_REASON, =, DiagnosticType, ., disabled, (, "JSC_DEPRECATED_PROP_REASON", ,, "Property {0} of type {1} has been deprecated: {2}", ), ;, static, final, DiagnosticType, DEPRECATED_CLASS, =]
[DEPRECATED_PROP_REASON, =, DiagnosticType, ., disabled, (, "JSC_DEPRECATED_PROP_REASON", ,, "Property {0} of type {1} has been deprecated: {2}", ), ;, static, final, DiagnosticType, DEPRECATED_CLASS, =, DiagnosticType, ., disabled, (]
[DiagnosticType, ., disabled, (, "JSC_DEPRECATED_PROP_REASON", ,, "Property {0} of type {1} has been deprecated: {2}", ), ;, static, final, DiagnosticType, DEPRECATED_CLASS, =, DiagnosticType, ., disabled, (, "JSC_DEPRECATED_CLASS", ,]
[;, static, final, DiagnosticType, DEPRECATED_CLASS, =, DiagnosticType, ., disabled, (, "JSC_DEPRECATED_CLASS", ,, "Class {0} has been deprecated.", ), ;, static, final, DiagnosticType, DEPRECATED_CLASS_REASON, =]
[;, static, final, DiagnosticType, DEPRECATED_CLASS, =, DiagnosticType, ., disabled, (, "JSC_DEPRECATED_CLASS", ,, "Class {0} has been deprecated.", ), ;, static, final, DiagnosticType, DEPRECATED_CLASS_REASON, =]
[DEPRECATED_CLASS, =, DiagnosticType, ., disabled, (, "JSC_DEPRECATED_CLASS", ,, "Class {0} has been deprecated.", ), ;, static, final, DiagnosticType, DEPRECATED_CLASS_REASON, =, DiagnosticType, ., disabled, (]
[DiagnosticType, ., disabled, (, "JSC_DEPRECATED_CLASS", ,, "Class {0} has been deprecated.", ), ;, static, final, DiagnosticType, DEPRECATED_CLASS_REASON, =, DiagnosticType, ., disabled, (, "JSC_DEPRECATED_CLASS_REASON", ,]
[;, static, final, DiagnosticType, DEPRECATED_CLASS_REASON, =, DiagnosticType, ., disabled, (, "JSC_DEPRECATED_CLASS_REASON", ,, "Class {0} has been deprecated: {1}", ), ;, static, final, DiagnosticType, BAD_PRIVATE_GLOBAL_ACCESS, =]
[;, static, final, DiagnosticType, DEPRECATED_CLASS_REASON, =, DiagnosticType, ., disabled, (, "JSC_DEPRECATED_CLASS_REASON", ,, "Class {0} has been deprecated: {1}", ), ;, static, final, DiagnosticType, BAD_PRIVATE_GLOBAL_ACCESS, =]
[DEPRECATED_CLASS_REASON, =, DiagnosticType, ., disabled, (, "JSC_DEPRECATED_CLASS_REASON", ,, "Class {0} has been deprecated: {1}", ), ;, static, final, DiagnosticType, BAD_PRIVATE_GLOBAL_ACCESS, =, DiagnosticType, ., disabled, (]
[DiagnosticType, ., disabled, (, "JSC_DEPRECATED_CLASS_REASON", ,, "Class {0} has been deprecated: {1}", ), ;, static, final, DiagnosticType, BAD_PRIVATE_GLOBAL_ACCESS, =, DiagnosticType, ., disabled, (, "JSC_BAD_PRIVATE_GLOBAL_ACCESS", ,]
[;, static, final, DiagnosticType, BAD_PRIVATE_GLOBAL_ACCESS, =, DiagnosticType, ., disabled, (, "JSC_BAD_PRIVATE_GLOBAL_ACCESS", ,, "Access to private variable {0} not allowed outside file {1}.", ), ;, static, final, DiagnosticType, BAD_PRIVATE_PROPERTY_ACCESS, =]
[;, static, final, DiagnosticType, BAD_PRIVATE_GLOBAL_ACCESS, =, DiagnosticType, ., disabled, (, "JSC_BAD_PRIVATE_GLOBAL_ACCESS", ,, "Access to private variable {0} not allowed outside file {1}.", ), ;, static, final, DiagnosticType, BAD_PRIVATE_PROPERTY_ACCESS, =]
[BAD_PRIVATE_GLOBAL_ACCESS, =, DiagnosticType, ., disabled, (, "JSC_BAD_PRIVATE_GLOBAL_ACCESS", ,, "Access to private variable {0} not allowed outside file {1}.", ), ;, static, final, DiagnosticType, BAD_PRIVATE_PROPERTY_ACCESS, =, DiagnosticType, ., disabled, (]
[DiagnosticType, ., disabled, (, "JSC_BAD_PRIVATE_GLOBAL_ACCESS", ,, "Access to private variable {0} not allowed outside file {1}.", ), ;, static, final, DiagnosticType, BAD_PRIVATE_PROPERTY_ACCESS, =, DiagnosticType, ., disabled, (, "JSC_BAD_PRIVATE_PROPERTY_ACCESS", ,]
[;, static, final, DiagnosticType, BAD_PRIVATE_PROPERTY_ACCESS, =, DiagnosticType, ., disabled, (, "JSC_BAD_PRIVATE_PROPERTY_ACCESS", ,, "Access to private property {0} of {1} not allowed here.", ), ;, static, final, DiagnosticType, BAD_PROTECTED_PROPERTY_ACCESS, =]
[;, static, final, DiagnosticType, BAD_PRIVATE_PROPERTY_ACCESS, =, DiagnosticType, ., disabled, (, "JSC_BAD_PRIVATE_PROPERTY_ACCESS", ,, "Access to private property {0} of {1} not allowed here.", ), ;, static, final, DiagnosticType, BAD_PROTECTED_PROPERTY_ACCESS, =]
[BAD_PRIVATE_PROPERTY_ACCESS, =, DiagnosticType, ., disabled, (, "JSC_BAD_PRIVATE_PROPERTY_ACCESS", ,, "Access to private property {0} of {1} not allowed here.", ), ;, static, final, DiagnosticType, BAD_PROTECTED_PROPERTY_ACCESS, =, DiagnosticType, ., disabled, (]
[DiagnosticType, ., disabled, (, "JSC_BAD_PRIVATE_PROPERTY_ACCESS", ,, "Access to private property {0} of {1} not allowed here.", ), ;, static, final, DiagnosticType, BAD_PROTECTED_PROPERTY_ACCESS, =, DiagnosticType, ., disabled, (, "JSC_BAD_PROTECTED_PROPERTY_ACCESS", ,]
[;, static, final, DiagnosticType, BAD_PROTECTED_PROPERTY_ACCESS, =, DiagnosticType, ., disabled, (, "JSC_BAD_PROTECTED_PROPERTY_ACCESS", ,, "Access to protected property {0} of {1} not allowed here.", ), ;, static, final, DiagnosticType, PRIVATE_OVERRIDE, =]
[;, static, final, DiagnosticType, BAD_PROTECTED_PROPERTY_ACCESS, =, DiagnosticType, ., disabled, (, "JSC_BAD_PROTECTED_PROPERTY_ACCESS", ,, "Access to protected property {0} of {1} not allowed here.", ), ;, static, final, DiagnosticType, PRIVATE_OVERRIDE, =]
[BAD_PROTECTED_PROPERTY_ACCESS, =, DiagnosticType, ., disabled, (, "JSC_BAD_PROTECTED_PROPERTY_ACCESS", ,, "Access to protected property {0} of {1} not allowed here.", ), ;, static, final, DiagnosticType, PRIVATE_OVERRIDE, =, DiagnosticType, ., disabled, (]
[DiagnosticType, ., disabled, (, "JSC_BAD_PROTECTED_PROPERTY_ACCESS", ,, "Access to protected property {0} of {1} not allowed here.", ), ;, static, final, DiagnosticType, PRIVATE_OVERRIDE, =, DiagnosticType, ., disabled, (, "JSC_PRIVATE_OVERRIDE", ,]
[;, static, final, DiagnosticType, PRIVATE_OVERRIDE, =, DiagnosticType, ., disabled, (, "JSC_PRIVATE_OVERRIDE", ,, "Overriding private property of {0}.", ), ;, static, final, DiagnosticType, EXTEND_FINAL_CLASS, =]
[;, static, final, DiagnosticType, PRIVATE_OVERRIDE, =, DiagnosticType, ., disabled, (, "JSC_PRIVATE_OVERRIDE", ,, "Overriding private property of {0}.", ), ;, static, final, DiagnosticType, EXTEND_FINAL_CLASS, =]
[PRIVATE_OVERRIDE, =, DiagnosticType, ., disabled, (, "JSC_PRIVATE_OVERRIDE", ,, "Overriding private property of {0}.", ), ;, static, final, DiagnosticType, EXTEND_FINAL_CLASS, =, DiagnosticType, ., error, (]
[DiagnosticType, ., disabled, (, "JSC_PRIVATE_OVERRIDE", ,, "Overriding private property of {0}.", ), ;, static, final, DiagnosticType, EXTEND_FINAL_CLASS, =, DiagnosticType, ., error, (, "JSC_EXTEND_FINAL_CLASS", ,]
[;, static, final, DiagnosticType, EXTEND_FINAL_CLASS, =, DiagnosticType, ., error, (, "JSC_EXTEND_FINAL_CLASS", ,, "{0} is not allowed to extend final class {1}.", ), ;, static, final, DiagnosticType, VISIBILITY_MISMATCH, =]
[;, static, final, DiagnosticType, EXTEND_FINAL_CLASS, =, DiagnosticType, ., error, (, "JSC_EXTEND_FINAL_CLASS", ,, "{0} is not allowed to extend final class {1}.", ), ;, static, final, DiagnosticType, VISIBILITY_MISMATCH, =]
[EXTEND_FINAL_CLASS, =, DiagnosticType, ., error, (, "JSC_EXTEND_FINAL_CLASS", ,, "{0} is not allowed to extend final class {1}.", ), ;, static, final, DiagnosticType, VISIBILITY_MISMATCH, =, DiagnosticType, ., disabled, (]
[DiagnosticType, ., error, (, "JSC_EXTEND_FINAL_CLASS", ,, "{0} is not allowed to extend final class {1}.", ), ;, static, final, DiagnosticType, VISIBILITY_MISMATCH, =, DiagnosticType, ., disabled, (, "JSC_VISIBILITY_MISMATCH", ,]
[;, static, final, DiagnosticType, VISIBILITY_MISMATCH, =, DiagnosticType, ., disabled, (, "JSC_VISIBILITY_MISMATCH", ,, "Overriding {0} property of {1} with {2} property.", ), ;, static, final, DiagnosticType, CONST_PROPERTY_REASSIGNED_VALUE, =]
[;, static, final, DiagnosticType, VISIBILITY_MISMATCH, =, DiagnosticType, ., disabled, (, "JSC_VISIBILITY_MISMATCH", ,, "Overriding {0} property of {1} with {2} property.", ), ;, static, final, DiagnosticType, CONST_PROPERTY_REASSIGNED_VALUE, =]
[VISIBILITY_MISMATCH, =, DiagnosticType, ., disabled, (, "JSC_VISIBILITY_MISMATCH", ,, "Overriding {0} property of {1} with {2} property.", ), ;, static, final, DiagnosticType, CONST_PROPERTY_REASSIGNED_VALUE, =, DiagnosticType, ., warning, (]
[DiagnosticType, ., disabled, (, "JSC_VISIBILITY_MISMATCH", ,, "Overriding {0} property of {1} with {2} property.", ), ;, static, final, DiagnosticType, CONST_PROPERTY_REASSIGNED_VALUE, =, DiagnosticType, ., warning, (, "JSC_CONSTANT_PROPERTY_REASSIGNED_VALUE", ,]
[;, static, final, DiagnosticType, CONST_PROPERTY_REASSIGNED_VALUE, =, DiagnosticType, ., warning, (, "JSC_CONSTANT_PROPERTY_REASSIGNED_VALUE", ,, "constant property {0} assigned a value more than once", ), ;, static, final, DiagnosticType, CONST_PROPERTY_DELETED, =]
[;, static, final, DiagnosticType, CONST_PROPERTY_REASSIGNED_VALUE, =, DiagnosticType, ., warning, (, "JSC_CONSTANT_PROPERTY_REASSIGNED_VALUE", ,, "constant property {0} assigned a value more than once", ), ;, static, final, DiagnosticType, CONST_PROPERTY_DELETED, =]
[CONST_PROPERTY_REASSIGNED_VALUE, =, DiagnosticType, ., warning, (, "JSC_CONSTANT_PROPERTY_REASSIGNED_VALUE", ,, "constant property {0} assigned a value more than once", ), ;, static, final, DiagnosticType, CONST_PROPERTY_DELETED, =, DiagnosticType, ., warning, (]
[DiagnosticType, ., warning, (, "JSC_CONSTANT_PROPERTY_REASSIGNED_VALUE", ,, "constant property {0} assigned a value more than once", ), ;, static, final, DiagnosticType, CONST_PROPERTY_DELETED, =, DiagnosticType, ., warning, (, "JSC_CONSTANT_PROPERTY_DELETED", ,]
[(, "JSC_CONSTANT_PROPERTY_DELETED", ,, "constant property {0} cannot be deleted", ), ;, private, final, AbstractCompiler, compiler, ;, private, final, TypeValidator, validator, ;, private, int, deprecatedDepth, =]
[private, final, AbstractCompiler, compiler, ;, private, final, TypeValidator, validator, ;, private, int, deprecatedDepth, =, 0, ;, private, int, methodDepth, =]
[final, TypeValidator, validator, ;, private, int, deprecatedDepth, =, 0, ;, private, int, methodDepth, =, 0, ;, private, JSType, currentClass, =]
[currentClass, =, null, ;, private, final, Multimap, <, String, ,, String, >, initializedConstantProperties, ;, CheckAccessControls, (, AbstractCompiler, compiler, ), {]
[currentClass, =, null, ;, private, final, Multimap, <, String, ,, String, >, initializedConstantProperties, ;, CheckAccessControls, (, AbstractCompiler, compiler, ), {]
[private, final, Multimap, <, String, ,, String, >, initializedConstantProperties, ;, CheckAccessControls, (, AbstractCompiler, compiler, ), {, this, ., compiler, =]
[Multimap, <, String, ,, String, >, initializedConstantProperties, ;, CheckAccessControls, (, AbstractCompiler, compiler, ), {, this, ., compiler, =, compiler, ;]
[Multimap, <, String, ,, String, >, initializedConstantProperties, ;, CheckAccessControls, (, AbstractCompiler, compiler, ), {, this, ., compiler, =, compiler, ;]
[String, >, initializedConstantProperties, ;, CheckAccessControls, (, AbstractCompiler, compiler, ), {, this, ., compiler, =, compiler, ;, this, ., validator, =]
[String, >, initializedConstantProperties, ;, CheckAccessControls, (, AbstractCompiler, compiler, ), {, this, ., compiler, =, compiler, ;, this, ., validator, =]
[AbstractCompiler, compiler, ), {, this, ., compiler, =, compiler, ;, this, ., validator, =, compiler, ., getTypeValidator, (, ), ;]
[AbstractCompiler, compiler, ), {, this, ., compiler, =, compiler, ;, this, ., validator, =, compiler, ., getTypeValidator, (, ), ;]
[this, ., compiler, =, compiler, ;, this, ., validator, =, compiler, ., getTypeValidator, (, ), ;, this, ., initializedConstantProperties, =]
[this, ., compiler, =, compiler, ;, this, ., validator, =, compiler, ., getTypeValidator, (, ), ;, this, ., initializedConstantProperties, =]
[HashMultimap, ., create, (, ), ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {]
[HashMultimap, ., create, (, ), ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {]
[), ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, NodeTraversal, ., traverse, (]
[}, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, NodeTraversal, ., traverse, (, compiler, ,]
[Override, public, void, process, (, Node, externs, ,, Node, root, ), {, NodeTraversal, ., traverse, (, compiler, ,, root, ,]
[,, root, ,, this, ), ;, }, @, Override, public, void, hotSwapScript, (, Node, scriptRoot, ,, Node, originalRoot, ), {]
[,, root, ,, this, ), ;, }, @, Override, public, void, hotSwapScript, (, Node, scriptRoot, ,, Node, originalRoot, ), {]
[), ;, }, @, Override, public, void, hotSwapScript, (, Node, scriptRoot, ,, Node, originalRoot, ), {, NodeTraversal, ., traverse, (]
[}, @, Override, public, void, hotSwapScript, (, Node, scriptRoot, ,, Node, originalRoot, ), {, NodeTraversal, ., traverse, (, compiler, ,]
[Override, public, void, hotSwapScript, (, Node, scriptRoot, ,, Node, originalRoot, ), {, NodeTraversal, ., traverse, (, compiler, ,, scriptRoot, ,]
[compiler, ,, scriptRoot, ,, this, ), ;, }, @, Override, public, void, enterScope, (, NodeTraversal, t, ), {, if, (]
[,, scriptRoot, ,, this, ), ;, }, @, Override, public, void, enterScope, (, NodeTraversal, t, ), {, if, (, !]
[,, scriptRoot, ,, this, ), ;, }, @, Override, public, void, enterScope, (, NodeTraversal, t, ), {, if, (, !]
[void, enterScope, (, NodeTraversal, t, ), {, if, (, !, t, ., inGlobalScope, (, ), ), {, Node, n, =]
[void, enterScope, (, NodeTraversal, t, ), {, if, (, !, t, ., inGlobalScope, (, ), ), {, Node, n, =]
[!, t, ., inGlobalScope, (, ), ), {, Node, n, =, t, ., getScopeRoot, (, ), ;, Node, parent, =]
[!, t, ., inGlobalScope, (, ), ), {, Node, n, =, t, ., getScopeRoot, (, ), ;, Node, parent, =]
[Node, n, =, t, ., getScopeRoot, (, ), ;, Node, parent, =, n, ., getParent, (, ), ;, if, (]
[=, t, ., getScopeRoot, (, ), ;, Node, parent, =, n, ., getParent, (, ), ;, if, (, isDeprecatedFunction, (]
[., getScopeRoot, (, ), ;, Node, parent, =, n, ., getParent, (, ), ;, if, (, isDeprecatedFunction, (, n, ,]
[;, Node, parent, =, n, ., getParent, (, ), ;, if, (, isDeprecatedFunction, (, n, ,, parent, ), ), {]
[;, Node, parent, =, n, ., getParent, (, ), ;, if, (, isDeprecatedFunction, (, n, ,, parent, ), ), {]
[getParent, (, ), ;, if, (, isDeprecatedFunction, (, n, ,, parent, ), ), {, deprecatedDepth, ++, ;, }, if, (]
[getParent, (, ), ;, if, (, isDeprecatedFunction, (, n, ,, parent, ), ), {, deprecatedDepth, ++, ;, }, if, (]
[), ;, if, (, isDeprecatedFunction, (, n, ,, parent, ), ), {, deprecatedDepth, ++, ;, }, if, (, methodDepth, ==]
[(, isDeprecatedFunction, (, n, ,, parent, ), ), {, deprecatedDepth, ++, ;, }, if, (, methodDepth, ==, 0, ), {]
[(, n, ,, parent, ), ), {, deprecatedDepth, ++, ;, }, if, (, methodDepth, ==, 0, ), {, currentClass, =]
[,, parent, ), ), {, deprecatedDepth, ++, ;, }, if, (, methodDepth, ==, 0, ), {, currentClass, =, getClassOfMethod, (]
[), ), {, deprecatedDepth, ++, ;, }, if, (, methodDepth, ==, 0, ), {, currentClass, =, getClassOfMethod, (, n, ,]
[++, ;, }, if, (, methodDepth, ==, 0, ), {, currentClass, =, getClassOfMethod, (, n, ,, parent, ), ;, }]
[++, ;, }, if, (, methodDepth, ==, 0, ), {, currentClass, =, getClassOfMethod, (, n, ,, parent, ), ;, }]
[), ;, }, methodDepth, ++, ;, }, }, @, Override, public, void, exitScope, (, NodeTraversal, t, ), {, if, (]
[;, }, methodDepth, ++, ;, }, }, @, Override, public, void, exitScope, (, NodeTraversal, t, ), {, if, (, !]
[;, }, methodDepth, ++, ;, }, }, @, Override, public, void, exitScope, (, NodeTraversal, t, ), {, if, (, !]
[void, exitScope, (, NodeTraversal, t, ), {, if, (, !, t, ., inGlobalScope, (, ), ), {, Node, n, =]
[void, exitScope, (, NodeTraversal, t, ), {, if, (, !, t, ., inGlobalScope, (, ), ), {, Node, n, =]
[!, t, ., inGlobalScope, (, ), ), {, Node, n, =, t, ., getScopeRoot, (, ), ;, Node, parent, =]
[!, t, ., inGlobalScope, (, ), ), {, Node, n, =, t, ., getScopeRoot, (, ), ;, Node, parent, =]
[Node, n, =, t, ., getScopeRoot, (, ), ;, Node, parent, =, n, ., getParent, (, ), ;, if, (]
[=, t, ., getScopeRoot, (, ), ;, Node, parent, =, n, ., getParent, (, ), ;, if, (, isDeprecatedFunction, (]
[., getScopeRoot, (, ), ;, Node, parent, =, n, ., getParent, (, ), ;, if, (, isDeprecatedFunction, (, n, ,]
[;, Node, parent, =, n, ., getParent, (, ), ;, if, (, isDeprecatedFunction, (, n, ,, parent, ), ), {]
[;, Node, parent, =, n, ., getParent, (, ), ;, if, (, isDeprecatedFunction, (, n, ,, parent, ), ), {]
[n, ., getParent, (, ), ;, if, (, isDeprecatedFunction, (, n, ,, parent, ), ), {, deprecatedDepth, --, ;, }]
[n, ., getParent, (, ), ;, if, (, isDeprecatedFunction, (, n, ,, parent, ), ), {, deprecatedDepth, --, ;, }]
[;, if, (, isDeprecatedFunction, (, n, ,, parent, ), ), {, deprecatedDepth, --, ;, }, methodDepth, --, ;, if, (]
[;, if, (, isDeprecatedFunction, (, n, ,, parent, ), ), {, deprecatedDepth, --, ;, }, methodDepth, --, ;, if, (]
[(, isDeprecatedFunction, (, n, ,, parent, ), ), {, deprecatedDepth, --, ;, }, methodDepth, --, ;, if, (, methodDepth, ==]
[n, ,, parent, ), ), {, deprecatedDepth, --, ;, }, methodDepth, --, ;, if, (, methodDepth, ==, 0, ), {]
[parent, ), ), {, deprecatedDepth, --, ;, }, methodDepth, --, ;, if, (, methodDepth, ==, 0, ), {, currentClass, =]
[currentClass, =, null, ;, }, }, }, private, JSType, getClassOfMethod, (, Node, n, ,, Node, parent, ), {, if, (]
[currentClass, =, null, ;, }, }, }, private, JSType, getClassOfMethod, (, Node, n, ,, Node, parent, ), {, if, (]
[(, Node, n, ,, Node, parent, ), {, if, (, parent, ., isAssign, (, ), ), {, Node, lValue, =]
[(, Node, n, ,, Node, parent, ), {, if, (, parent, ., isAssign, (, ), ), {, Node, lValue, =]
[if, (, parent, ., isAssign, (, ), ), {, Node, lValue, =, parent, ., getFirstChild, (, ), ;, if, (]
[if, (, parent, ., isAssign, (, ), ), {, Node, lValue, =, parent, ., getFirstChild, (, ), ;, if, (]
[isAssign, (, ), ), {, Node, lValue, =, parent, ., getFirstChild, (, ), ;, if, (, NodeUtil, ., isGet, (]
[=, parent, ., getFirstChild, (, ), ;, if, (, NodeUtil, ., isGet, (, lValue, ), ), {, JSType, lValueType, =]
[=, parent, ., getFirstChild, (, ), ;, if, (, NodeUtil, ., isGet, (, lValue, ), ), {, JSType, lValueType, =]
[(, NodeUtil, ., isGet, (, lValue, ), ), {, JSType, lValueType, =, lValue, ., getJSType, (, ), ;, if, (]
[(, NodeUtil, ., isGet, (, lValue, ), ), {, JSType, lValueType, =, lValue, ., getJSType, (, ), ;, if, (]
[(, NodeUtil, ., isGet, (, lValue, ), ), {, JSType, lValueType, =, lValue, ., getJSType, (, ), ;, if, (]
[., isGet, (, lValue, ), ), {, JSType, lValueType, =, lValue, ., getJSType, (, ), ;, if, (, lValueType, !=]
[(, lValue, ), ), {, JSType, lValueType, =, lValue, ., getJSType, (, ), ;, if, (, lValueType, !=, null, &&]
[(, lValue, ), ), {, JSType, lValueType, =, lValue, ., getJSType, (, ), ;, if, (, lValueType, !=, null, &&]
[lValue, ., getJSType, (, ), ;, if, (, lValueType, !=, null, &&, lValueType, ., isNominalConstructor, (, ), ), {, return]
[lValue, ., getJSType, (, ), ;, if, (, lValueType, !=, null, &&, lValueType, ., isNominalConstructor, (, ), ), {, return]
[., getJSType, (, ), ;, if, (, lValueType, !=, null, &&, lValueType, ., isNominalConstructor, (, ), ), {, return, (]
[., getJSType, (, ), ;, if, (, lValueType, !=, null, &&, lValueType, ., isNominalConstructor, (, ), ), {, return, (]
[), ), {, return, (, lValueType, ., toMaybeFunctionType, (, ), ), ., getInstanceType, (, ), ;, }, else, {, return]
[{, return, (, lValueType, ., toMaybeFunctionType, (, ), ), ., getInstanceType, (, ), ;, }, else, {, return, normalizeClassType, (]
[{, return, (, lValueType, ., toMaybeFunctionType, (, ), ), ., getInstanceType, (, ), ;, }, else, {, return, normalizeClassType, (]
[{, return, (, lValueType, ., toMaybeFunctionType, (, ), ), ., getInstanceType, (, ), ;, }, else, {, return, normalizeClassType, (]
[{, return, normalizeClassType, (, lValue, ., getFirstChild, (, ), ., getJSType, (, ), ), ;, }, }, else, {, return]
[normalizeClassType, (, lValue, ., getFirstChild, (, ), ., getJSType, (, ), ), ;, }, }, else, {, return, normalizeClassType, (]
[normalizeClassType, (, lValue, ., getFirstChild, (, ), ., getJSType, (, ), ), ;, }, }, else, {, return, normalizeClassType, (]
[;, }, }, else, {, return, normalizeClassType, (, lValue, ., getJSType, (, ), ), ;, }, }, else, if, (]
[;, }, }, else, {, return, normalizeClassType, (, lValue, ., getJSType, (, ), ), ;, }, }, else, if, (]
[;, }, }, else, {, return, normalizeClassType, (, lValue, ., getJSType, (, ), ), ;, }, }, else, if, (]
[{, return, normalizeClassType, (, lValue, ., getJSType, (, ), ), ;, }, }, else, if, (, NodeUtil, ., isFunctionDeclaration, (]
[(, lValue, ., getJSType, (, ), ), ;, }, }, else, if, (, NodeUtil, ., isFunctionDeclaration, (, n, ), ||]
[(, lValue, ., getJSType, (, ), ), ;, }, }, else, if, (, NodeUtil, ., isFunctionDeclaration, (, n, ), ||]
[}, }, else, if, (, NodeUtil, ., isFunctionDeclaration, (, n, ), ||, parent, ., isName, (, ), ), {, return]
[else, if, (, NodeUtil, ., isFunctionDeclaration, (, n, ), ||, parent, ., isName, (, ), ), {, return, normalizeClassType, (]
[else, if, (, NodeUtil, ., isFunctionDeclaration, (, n, ), ||, parent, ., isName, (, ), ), {, return, normalizeClassType, (]
[||, parent, ., isName, (, ), ), {, return, normalizeClassType, (, n, ., getJSType, (, ), ), ;, }, return]
[getJSType, (, ), ), ;, }, return, null, ;, }, private, JSType, normalizeClassType, (, JSType, type, ), {, if, (]
[getJSType, (, ), ), ;, }, return, null, ;, }, private, JSType, normalizeClassType, (, JSType, type, ), {, if, (]
[getJSType, (, ), ), ;, }, return, null, ;, }, private, JSType, normalizeClassType, (, JSType, type, ), {, if, (]
[), ), ;, }, return, null, ;, }, private, JSType, normalizeClassType, (, JSType, type, ), {, if, (, type, ==]
[;, }, return, null, ;, }, private, JSType, normalizeClassType, (, JSType, type, ), {, if, (, type, ==, null, ||]
[;, }, return, null, ;, }, private, JSType, normalizeClassType, (, JSType, type, ), {, if, (, type, ==, null, ||]
[normalizeClassType, (, JSType, type, ), {, if, (, type, ==, null, ||, type, ., isUnknownType, (, ), ), {, return]
[if, (, type, ==, null, ||, type, ., isUnknownType, (, ), ), {, return, type, ;, }, else, if, (]
[if, (, type, ==, null, ||, type, ., isUnknownType, (, ), ), {, return, type, ;, }, else, if, (]
[isUnknownType, (, ), ), {, return, type, ;, }, else, if, (, type, ., isNominalConstructor, (, ), ), {, return]
[isUnknownType, (, ), ), {, return, type, ;, }, else, if, (, type, ., isNominalConstructor, (, ), ), {, return]
[(, ), ), {, return, type, ;, }, else, if, (, type, ., isNominalConstructor, (, ), ), {, return, (]
[(, ), ), {, return, type, ;, }, else, if, (, type, ., isNominalConstructor, (, ), ), {, return, (]
[), ), {, return, (, type, ., toMaybeFunctionType, (, ), ), ., getInstanceType, (, ), ;, }, else, if, (]
[), ), {, return, (, type, ., toMaybeFunctionType, (, ), ), ., getInstanceType, (, ), ;, }, else, if, (]
[), ., getInstanceType, (, ), ;, }, else, if, (, type, ., isFunctionPrototypeType, (, ), ), {, FunctionType, owner, =]
[), ., getInstanceType, (, ), ;, }, else, if, (, type, ., isFunctionPrototypeType, (, ), ), {, FunctionType, owner, =]
[., getInstanceType, (, ), ;, }, else, if, (, type, ., isFunctionPrototypeType, (, ), ), {, FunctionType, owner, =, (]
[), ;, }, else, if, (, type, ., isFunctionPrototypeType, (, ), ), {, FunctionType, owner, =, (, (, ObjectType, )]
[(, ), ), {, FunctionType, owner, =, (, (, ObjectType, ), type, ), ., getOwnerFunction, (, ), ;, if, (]
[(, ), ), {, FunctionType, owner, =, (, (, ObjectType, ), type, ), ., getOwnerFunction, (, ), ;, if, (]
[(, ObjectType, ), type, ), ., getOwnerFunction, (, ), ;, if, (, owner, ., isConstructor, (, ), ), {, return]
[(, ObjectType, ), type, ), ., getOwnerFunction, (, ), ;, if, (, owner, ., isConstructor, (, ), ), {, return]
[;, if, (, owner, ., isConstructor, (, ), ), {, return, owner, ., getInstanceType, (, ), ;, }, }, return]
[type, ;, }, @, Override, public, boolean, shouldTraverse, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, return]
[;, }, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, switch, (]
[;, }, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, switch, (]
[NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, switch, (, n, ., getType, (, ), ), {, case]
[NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, switch, (, n, ., getType, (, ), ), {, case]
[n, ,, Node, parent, ), {, switch, (, n, ., getType, (, ), ), {, case, Token, ., NAME, :]
[Node, parent, ), {, switch, (, n, ., getType, (, ), ), {, case, Token, ., NAME, :, checkNameDeprecation, (]
[), {, switch, (, n, ., getType, (, ), ), {, case, Token, ., NAME, :, checkNameDeprecation, (, t, ,]
[switch, (, n, ., getType, (, ), ), {, case, Token, ., NAME, :, checkNameDeprecation, (, t, ,, n, ,]
[., getType, (, ), ), {, case, Token, ., NAME, :, checkNameDeprecation, (, t, ,, n, ,, parent, ), ;]
[(, ), ), {, case, Token, ., NAME, :, checkNameDeprecation, (, t, ,, n, ,, parent, ), ;, checkNameVisibility, (]
[), {, case, Token, ., NAME, :, checkNameDeprecation, (, t, ,, n, ,, parent, ), ;, checkNameVisibility, (, t, ,]
[case, Token, ., NAME, :, checkNameDeprecation, (, t, ,, n, ,, parent, ), ;, checkNameVisibility, (, t, ,, n, ,]
[(, t, ,, n, ,, parent, ), ;, checkNameVisibility, (, t, ,, n, ,, parent, ), ;, break, ;, case]
[(, t, ,, n, ,, parent, ), ;, checkNameVisibility, (, t, ,, n, ,, parent, ), ;, break, ;, case]
[,, parent, ), ;, checkNameVisibility, (, t, ,, n, ,, parent, ), ;, break, ;, case, Token, ., GETPROP, :]
[), ;, checkNameVisibility, (, t, ,, n, ,, parent, ), ;, break, ;, case, Token, ., GETPROP, :, checkPropertyDeprecation, (]
[checkNameVisibility, (, t, ,, n, ,, parent, ), ;, break, ;, case, Token, ., GETPROP, :, checkPropertyDeprecation, (, t, ,]
[t, ,, n, ,, parent, ), ;, break, ;, case, Token, ., GETPROP, :, checkPropertyDeprecation, (, t, ,, n, ,]
[,, parent, ), ;, break, ;, case, Token, ., GETPROP, :, checkPropertyDeprecation, (, t, ,, n, ,, parent, ), ;]
[), ;, break, ;, case, Token, ., GETPROP, :, checkPropertyDeprecation, (, t, ,, n, ,, parent, ), ;, checkPropertyVisibility, (]
[break, ;, case, Token, ., GETPROP, :, checkPropertyDeprecation, (, t, ,, n, ,, parent, ), ;, checkPropertyVisibility, (, t, ,]
[case, Token, ., GETPROP, :, checkPropertyDeprecation, (, t, ,, n, ,, parent, ), ;, checkPropertyVisibility, (, t, ,, n, ,]
[GETPROP, :, checkPropertyDeprecation, (, t, ,, n, ,, parent, ), ;, checkPropertyVisibility, (, t, ,, n, ,, parent, ), ;]
[checkPropertyDeprecation, (, t, ,, n, ,, parent, ), ;, checkPropertyVisibility, (, t, ,, n, ,, parent, ), ;, checkConstantProperty, (]
[t, ,, n, ,, parent, ), ;, checkPropertyVisibility, (, t, ,, n, ,, parent, ), ;, checkConstantProperty, (, t, ,]
[;, checkPropertyVisibility, (, t, ,, n, ,, parent, ), ;, checkConstantProperty, (, t, ,, n, ), ;, break, ;, case]
[;, checkPropertyVisibility, (, t, ,, n, ,, parent, ), ;, checkConstantProperty, (, t, ,, n, ), ;, break, ;, case]
[,, n, ,, parent, ), ;, checkConstantProperty, (, t, ,, n, ), ;, break, ;, case, Token, ., NEW, :]
[,, parent, ), ;, checkConstantProperty, (, t, ,, n, ), ;, break, ;, case, Token, ., NEW, :, checkConstructorDeprecation, (]
[), ;, checkConstantProperty, (, t, ,, n, ), ;, break, ;, case, Token, ., NEW, :, checkConstructorDeprecation, (, t, ,]
[checkConstantProperty, (, t, ,, n, ), ;, break, ;, case, Token, ., NEW, :, checkConstructorDeprecation, (, t, ,, n, ,]
[;, break, ;, case, Token, ., NEW, :, checkConstructorDeprecation, (, t, ,, n, ,, parent, ), ;, break, ;, case]
[;, break, ;, case, Token, ., NEW, :, checkConstructorDeprecation, (, t, ,, n, ,, parent, ), ;, break, ;, case]
[Token, ., NEW, :, checkConstructorDeprecation, (, t, ,, n, ,, parent, ), ;, break, ;, case, Token, ., FUNCTION, :]
[NEW, :, checkConstructorDeprecation, (, t, ,, n, ,, parent, ), ;, break, ;, case, Token, ., FUNCTION, :, checkFinalClassOverrides, (]
[checkConstructorDeprecation, (, t, ,, n, ,, parent, ), ;, break, ;, case, Token, ., FUNCTION, :, checkFinalClassOverrides, (, t, ,]
[t, ,, n, ,, parent, ), ;, break, ;, case, Token, ., FUNCTION, :, checkFinalClassOverrides, (, t, ,, n, ,]
[;, }, }, private, void, checkConstructorDeprecation, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, JSType, type, =]
[;, }, }, private, void, checkConstructorDeprecation, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, JSType, type, =]
[t, ,, Node, n, ,, Node, parent, ), {, JSType, type, =, n, ., getJSType, (, ), ;, if, (]
[t, ,, Node, n, ,, Node, parent, ), {, JSType, type, =, n, ., getJSType, (, ), ;, if, (]
[Node, n, ,, Node, parent, ), {, JSType, type, =, n, ., getJSType, (, ), ;, if, (, type, !=]
[{, JSType, type, =, n, ., getJSType, (, ), ;, if, (, type, !=, null, ), {, String, deprecationInfo, =]
[type, =, n, ., getJSType, (, ), ;, if, (, type, !=, null, ), {, String, deprecationInfo, =, getTypeDeprecationInfo, (]
[(, ), ;, if, (, type, !=, null, ), {, String, deprecationInfo, =, getTypeDeprecationInfo, (, type, ), ;, if, (]
[(, ), ;, if, (, type, !=, null, ), {, String, deprecationInfo, =, getTypeDeprecationInfo, (, type, ), ;, if, (]
[(, ), ;, if, (, type, !=, null, ), {, String, deprecationInfo, =, getTypeDeprecationInfo, (, type, ), ;, if, (]
[;, if, (, type, !=, null, ), {, String, deprecationInfo, =, getTypeDeprecationInfo, (, type, ), ;, if, (, deprecationInfo, !=]
[(, type, !=, null, ), {, String, deprecationInfo, =, getTypeDeprecationInfo, (, type, ), ;, if, (, deprecationInfo, !=, null, &&]
[!=, null, ), {, String, deprecationInfo, =, getTypeDeprecationInfo, (, type, ), ;, if, (, deprecationInfo, !=, null, &&, shouldEmitDeprecationWarning, (]
[), {, String, deprecationInfo, =, getTypeDeprecationInfo, (, type, ), ;, if, (, deprecationInfo, !=, null, &&, shouldEmitDeprecationWarning, (, t, ,]
[String, deprecationInfo, =, getTypeDeprecationInfo, (, type, ), ;, if, (, deprecationInfo, !=, null, &&, shouldEmitDeprecationWarning, (, t, ,, n, ,]
[), ;, if, (, deprecationInfo, !=, null, &&, shouldEmitDeprecationWarning, (, t, ,, n, ,, parent, ), ), {, if, (]
[;, if, (, deprecationInfo, !=, null, &&, shouldEmitDeprecationWarning, (, t, ,, n, ,, parent, ), ), {, if, (, !]
[;, if, (, deprecationInfo, !=, null, &&, shouldEmitDeprecationWarning, (, t, ,, n, ,, parent, ), ), {, if, (, !]
[shouldEmitDeprecationWarning, (, t, ,, n, ,, parent, ), ), {, if, (, !, deprecationInfo, ., isEmpty, (, ), ), {]
[shouldEmitDeprecationWarning, (, t, ,, n, ,, parent, ), ), {, if, (, !, deprecationInfo, ., isEmpty, (, ), ), {]
[n, ,, parent, ), ), {, if, (, !, deprecationInfo, ., isEmpty, (, ), ), {, compiler, ., report, (]
[n, ,, parent, ), ), {, if, (, !, deprecationInfo, ., isEmpty, (, ), ), {, compiler, ., report, (]
[), {, if, (, !, deprecationInfo, ., isEmpty, (, ), ), {, compiler, ., report, (, t, ., makeError, (]
[if, (, !, deprecationInfo, ., isEmpty, (, ), ), {, compiler, ., report, (, t, ., makeError, (, n, ,]
[!, deprecationInfo, ., isEmpty, (, ), ), {, compiler, ., report, (, t, ., makeError, (, n, ,, DEPRECATED_CLASS_REASON, ,]
[!, deprecationInfo, ., isEmpty, (, ), ), {, compiler, ., report, (, t, ., makeError, (, n, ,, DEPRECATED_CLASS_REASON, ,]
[), {, compiler, ., report, (, t, ., makeError, (, n, ,, DEPRECATED_CLASS_REASON, ,, type, ., toString, (, ), ,]
[., makeError, (, n, ,, DEPRECATED_CLASS_REASON, ,, type, ., toString, (, ), ,, deprecationInfo, ), ), ;, }, else, {]
[., makeError, (, n, ,, DEPRECATED_CLASS_REASON, ,, type, ., toString, (, ), ,, deprecationInfo, ), ), ;, }, else, {]
[,, DEPRECATED_CLASS_REASON, ,, type, ., toString, (, ), ,, deprecationInfo, ), ), ;, }, else, {, compiler, ., report, (]
[,, DEPRECATED_CLASS_REASON, ,, type, ., toString, (, ), ,, deprecationInfo, ), ), ;, }, else, {, compiler, ., report, (]
[., toString, (, ), ,, deprecationInfo, ), ), ;, }, else, {, compiler, ., report, (, t, ., makeError, (]
[(, ), ,, deprecationInfo, ), ), ;, }, else, {, compiler, ., report, (, t, ., makeError, (, n, ,]
[,, deprecationInfo, ), ), ;, }, else, {, compiler, ., report, (, t, ., makeError, (, n, ,, DEPRECATED_CLASS, ,]
[,, deprecationInfo, ), ), ;, }, else, {, compiler, ., report, (, t, ., makeError, (, n, ,, DEPRECATED_CLASS, ,]
[}, }, }, }, private, void, checkNameDeprecation, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (]
[}, }, }, }, private, void, checkNameDeprecation, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (]
[}, }, }, }, private, void, checkNameDeprecation, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (]
[}, }, }, }, private, void, checkNameDeprecation, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (]
[checkNameDeprecation, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (, parent, ., isFunction, (, ), ||]
[checkNameDeprecation, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (, parent, ., isFunction, (, ), ||]
[n, ,, Node, parent, ), {, if, (, parent, ., isFunction, (, ), ||, parent, ., isVar, (, ), ||]
[n, ,, Node, parent, ), {, if, (, parent, ., isFunction, (, ), ||, parent, ., isVar, (, ), ||]
[., isVar, (, ), ||, parent, ., isNew, (, ), ), {, return, ;, }, Scope, ., Var, var, =]
[., isVar, (, ), ||, parent, ., isNew, (, ), ), {, return, ;, }, Scope, ., Var, var, =]
[., isVar, (, ), ||, parent, ., isNew, (, ), ), {, return, ;, }, Scope, ., Var, var, =]
[(, ), ), {, return, ;, }, Scope, ., Var, var, =, t, ., getScope, (, ), ., getVar, (]
[(, ), ), {, return, ;, }, Scope, ., Var, var, =, t, ., getScope, (, ), ., getVar, (]
[var, =, t, ., getScope, (, ), ., getVar, (, n, ., getString, (, ), ), ;, JSDocInfo, docInfo, =]
[var, =, t, ., getScope, (, ), ., getVar, (, n, ., getString, (, ), ), ;, JSDocInfo, docInfo, =]
[var, =, t, ., getScope, (, ), ., getVar, (, n, ., getString, (, ), ), ;, JSDocInfo, docInfo, =]
[t, ., getScope, (, ), ., getVar, (, n, ., getString, (, ), ), ;, JSDocInfo, docInfo, =, var, ==]
[getScope, (, ), ., getVar, (, n, ., getString, (, ), ), ;, JSDocInfo, docInfo, =, var, ==, null, ?]
[), ., getVar, (, n, ., getString, (, ), ), ;, JSDocInfo, docInfo, =, var, ==, null, ?, null, :]
[), ., getVar, (, n, ., getString, (, ), ), ;, JSDocInfo, docInfo, =, var, ==, null, ?, null, :]
[), ), ;, JSDocInfo, docInfo, =, var, ==, null, ?, null, :, var, ., getJSDocInfo, (, ), ;, if, (]
[), ), ;, JSDocInfo, docInfo, =, var, ==, null, ?, null, :, var, ., getJSDocInfo, (, ), ;, if, (]
[), ), ;, JSDocInfo, docInfo, =, var, ==, null, ?, null, :, var, ., getJSDocInfo, (, ), ;, if, (]
[), ), ;, JSDocInfo, docInfo, =, var, ==, null, ?, null, :, var, ., getJSDocInfo, (, ), ;, if, (]
[;, JSDocInfo, docInfo, =, var, ==, null, ?, null, :, var, ., getJSDocInfo, (, ), ;, if, (, docInfo, !=]
[docInfo, =, var, ==, null, ?, null, :, var, ., getJSDocInfo, (, ), ;, if, (, docInfo, !=, null, &&]
[docInfo, =, var, ==, null, ?, null, :, var, ., getJSDocInfo, (, ), ;, if, (, docInfo, !=, null, &&]
[null, :, var, ., getJSDocInfo, (, ), ;, if, (, docInfo, !=, null, &&, docInfo, ., isDeprecated, (, ), &&]
[var, ., getJSDocInfo, (, ), ;, if, (, docInfo, !=, null, &&, docInfo, ., isDeprecated, (, ), &&, shouldEmitDeprecationWarning, (]
[getJSDocInfo, (, ), ;, if, (, docInfo, !=, null, &&, docInfo, ., isDeprecated, (, ), &&, shouldEmitDeprecationWarning, (, t, ,]
[), ;, if, (, docInfo, !=, null, &&, docInfo, ., isDeprecated, (, ), &&, shouldEmitDeprecationWarning, (, t, ,, n, ,]
[null, &&, docInfo, ., isDeprecated, (, ), &&, shouldEmitDeprecationWarning, (, t, ,, n, ,, parent, ), ), {, if, (]
[null, &&, docInfo, ., isDeprecated, (, ), &&, shouldEmitDeprecationWarning, (, t, ,, n, ,, parent, ), ), {, if, (]
[null, &&, docInfo, ., isDeprecated, (, ), &&, shouldEmitDeprecationWarning, (, t, ,, n, ,, parent, ), ), {, if, (]
[), &&, shouldEmitDeprecationWarning, (, t, ,, n, ,, parent, ), ), {, if, (, docInfo, ., getDeprecationReason, (, ), !=]
[(, t, ,, n, ,, parent, ), ), {, if, (, docInfo, ., getDeprecationReason, (, ), !=, null, ), {]
[(, t, ,, n, ,, parent, ), ), {, if, (, docInfo, ., getDeprecationReason, (, ), !=, null, ), {]
[,, parent, ), ), {, if, (, docInfo, ., getDeprecationReason, (, ), !=, null, ), {, compiler, ., report, (]
[,, parent, ), ), {, if, (, docInfo, ., getDeprecationReason, (, ), !=, null, ), {, compiler, ., report, (]
[{, if, (, docInfo, ., getDeprecationReason, (, ), !=, null, ), {, compiler, ., report, (, t, ., makeError, (]
[(, docInfo, ., getDeprecationReason, (, ), !=, null, ), {, compiler, ., report, (, t, ., makeError, (, n, ,]
[., getDeprecationReason, (, ), !=, null, ), {, compiler, ., report, (, t, ., makeError, (, n, ,, DEPRECATED_NAME_REASON, ,]
[., getDeprecationReason, (, ), !=, null, ), {, compiler, ., report, (, t, ., makeError, (, n, ,, DEPRECATED_NAME_REASON, ,]
[), {, compiler, ., report, (, t, ., makeError, (, n, ,, DEPRECATED_NAME_REASON, ,, n, ., getString, (, ), ,]
[), {, compiler, ., report, (, t, ., makeError, (, n, ,, DEPRECATED_NAME_REASON, ,, n, ., getString, (, ), ,]
[,, DEPRECATED_NAME_REASON, ,, n, ., getString, (, ), ,, docInfo, ., getDeprecationReason, (, ), ), ), ;, }, else, {]
[,, DEPRECATED_NAME_REASON, ,, n, ., getString, (, ), ,, docInfo, ., getDeprecationReason, (, ), ), ), ;, }, else, {]
[., getString, (, ), ,, docInfo, ., getDeprecationReason, (, ), ), ), ;, }, else, {, compiler, ., report, (]
[., getString, (, ), ,, docInfo, ., getDeprecationReason, (, ), ), ), ;, }, else, {, compiler, ., report, (]
[,, docInfo, ., getDeprecationReason, (, ), ), ), ;, }, else, {, compiler, ., report, (, t, ., makeError, (]
[., getDeprecationReason, (, ), ), ), ;, }, else, {, compiler, ., report, (, t, ., makeError, (, n, ,]
[(, ), ), ), ;, }, else, {, compiler, ., report, (, t, ., makeError, (, n, ,, DEPRECATED_NAME, ,]
[(, ), ), ), ;, }, else, {, compiler, ., report, (, t, ., makeError, (, n, ,, DEPRECATED_NAME, ,]
[;, }, }, }, private, void, checkPropertyDeprecation, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (]
[;, }, }, }, private, void, checkPropertyDeprecation, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (]
[,, Node, parent, ), {, if, (, parent, ., isNew, (, ), ), {, return, ;, }, ObjectType, objectType, =]
[,, Node, parent, ), {, if, (, parent, ., isNew, (, ), ), {, return, ;, }, ObjectType, objectType, =]
[{, if, (, parent, ., isNew, (, ), ), {, return, ;, }, ObjectType, objectType, =, ObjectType, ., cast, (]
[(, parent, ., isNew, (, ), ), {, return, ;, }, ObjectType, objectType, =, ObjectType, ., cast, (, dereference, (]
[(, parent, ., isNew, (, ), ), {, return, ;, }, ObjectType, objectType, =, ObjectType, ., cast, (, dereference, (]
[(, parent, ., isNew, (, ), ), {, return, ;, }, ObjectType, objectType, =, ObjectType, ., cast, (, dereference, (]
[., cast, (, dereference, (, n, ., getFirstChild, (, ), ., getJSType, (, ), ), ), ;, String, propertyName, =]
[., cast, (, dereference, (, n, ., getFirstChild, (, ), ., getJSType, (, ), ), ), ;, String, propertyName, =]
[., cast, (, dereference, (, n, ., getFirstChild, (, ), ., getJSType, (, ), ), ), ;, String, propertyName, =]
[(, ), ), ), ;, String, propertyName, =, n, ., getLastChild, (, ), ., getString, (, ), ;, if, (]
[(, ), ), ), ;, String, propertyName, =, n, ., getLastChild, (, ), ., getString, (, ), ;, if, (]
[), ), ;, String, propertyName, =, n, ., getLastChild, (, ), ., getString, (, ), ;, if, (, objectType, !=]
[n, ., getLastChild, (, ), ., getString, (, ), ;, if, (, objectType, !=, null, ), {, String, deprecationInfo, =]
[getLastChild, (, ), ., getString, (, ), ;, if, (, objectType, !=, null, ), {, String, deprecationInfo, =, getPropertyDeprecationInfo, (]
[), ., getString, (, ), ;, if, (, objectType, !=, null, ), {, String, deprecationInfo, =, getPropertyDeprecationInfo, (, objectType, ,]
[;, if, (, objectType, !=, null, ), {, String, deprecationInfo, =, getPropertyDeprecationInfo, (, objectType, ,, propertyName, ), ;, if, (]
[;, if, (, objectType, !=, null, ), {, String, deprecationInfo, =, getPropertyDeprecationInfo, (, objectType, ,, propertyName, ), ;, if, (]
[;, if, (, objectType, !=, null, ), {, String, deprecationInfo, =, getPropertyDeprecationInfo, (, objectType, ,, propertyName, ), ;, if, (]
[(, objectType, !=, null, ), {, String, deprecationInfo, =, getPropertyDeprecationInfo, (, objectType, ,, propertyName, ), ;, if, (, deprecationInfo, !=]
[!=, null, ), {, String, deprecationInfo, =, getPropertyDeprecationInfo, (, objectType, ,, propertyName, ), ;, if, (, deprecationInfo, !=, null, &&]
[), {, String, deprecationInfo, =, getPropertyDeprecationInfo, (, objectType, ,, propertyName, ), ;, if, (, deprecationInfo, !=, null, &&, shouldEmitDeprecationWarning, (]
[String, deprecationInfo, =, getPropertyDeprecationInfo, (, objectType, ,, propertyName, ), ;, if, (, deprecationInfo, !=, null, &&, shouldEmitDeprecationWarning, (, t, ,]
[=, getPropertyDeprecationInfo, (, objectType, ,, propertyName, ), ;, if, (, deprecationInfo, !=, null, &&, shouldEmitDeprecationWarning, (, t, ,, n, ,]
[), ;, if, (, deprecationInfo, !=, null, &&, shouldEmitDeprecationWarning, (, t, ,, n, ,, parent, ), ), {, if, (]
[;, if, (, deprecationInfo, !=, null, &&, shouldEmitDeprecationWarning, (, t, ,, n, ,, parent, ), ), {, if, (, !]
[;, if, (, deprecationInfo, !=, null, &&, shouldEmitDeprecationWarning, (, t, ,, n, ,, parent, ), ), {, if, (, !]
[shouldEmitDeprecationWarning, (, t, ,, n, ,, parent, ), ), {, if, (, !, deprecationInfo, ., isEmpty, (, ), ), {]
[shouldEmitDeprecationWarning, (, t, ,, n, ,, parent, ), ), {, if, (, !, deprecationInfo, ., isEmpty, (, ), ), {]
[n, ,, parent, ), ), {, if, (, !, deprecationInfo, ., isEmpty, (, ), ), {, compiler, ., report, (]
[n, ,, parent, ), ), {, if, (, !, deprecationInfo, ., isEmpty, (, ), ), {, compiler, ., report, (]
[), {, if, (, !, deprecationInfo, ., isEmpty, (, ), ), {, compiler, ., report, (, t, ., makeError, (]
[if, (, !, deprecationInfo, ., isEmpty, (, ), ), {, compiler, ., report, (, t, ., makeError, (, n, ,]
[!, deprecationInfo, ., isEmpty, (, ), ), {, compiler, ., report, (, t, ., makeError, (, n, ,, DEPRECATED_PROP_REASON, ,]
[., isEmpty, (, ), ), {, compiler, ., report, (, t, ., makeError, (, n, ,, DEPRECATED_PROP_REASON, ,, propertyName, ,]
[., isEmpty, (, ), ), {, compiler, ., report, (, t, ., makeError, (, n, ,, DEPRECATED_PROP_REASON, ,, propertyName, ,]
[), {, compiler, ., report, (, t, ., makeError, (, n, ,, DEPRECATED_PROP_REASON, ,, propertyName, ,, validator, ., getReadableJSTypeName, (]
[), {, compiler, ., report, (, t, ., makeError, (, n, ,, DEPRECATED_PROP_REASON, ,, propertyName, ,, validator, ., getReadableJSTypeName, (]
[t, ., makeError, (, n, ,, DEPRECATED_PROP_REASON, ,, propertyName, ,, validator, ., getReadableJSTypeName, (, n, ., getFirstChild, (, ), ,]
[(, n, ,, DEPRECATED_PROP_REASON, ,, propertyName, ,, validator, ., getReadableJSTypeName, (, n, ., getFirstChild, (, ), ,, true, ), ,]
[validator, ., getReadableJSTypeName, (, n, ., getFirstChild, (, ), ,, true, ), ,, deprecationInfo, ), ), ;, }, else, {]
[validator, ., getReadableJSTypeName, (, n, ., getFirstChild, (, ), ,, true, ), ,, deprecationInfo, ), ), ;, }, else, {]
[n, ., getFirstChild, (, ), ,, true, ), ,, deprecationInfo, ), ), ;, }, else, {, compiler, ., report, (]
[n, ., getFirstChild, (, ), ,, true, ), ,, deprecationInfo, ), ), ;, }, else, {, compiler, ., report, (]
[), ,, true, ), ,, deprecationInfo, ), ), ;, }, else, {, compiler, ., report, (, t, ., makeError, (]
[true, ), ,, deprecationInfo, ), ), ;, }, else, {, compiler, ., report, (, t, ., makeError, (, n, ,]
[,, deprecationInfo, ), ), ;, }, else, {, compiler, ., report, (, t, ., makeError, (, n, ,, DEPRECATED_PROP, ,]
[), ), ;, }, else, {, compiler, ., report, (, t, ., makeError, (, n, ,, DEPRECATED_PROP, ,, propertyName, ,]
[), ), ;, }, else, {, compiler, ., report, (, t, ., makeError, (, n, ,, DEPRECATED_PROP, ,, propertyName, ,]
[else, {, compiler, ., report, (, t, ., makeError, (, n, ,, DEPRECATED_PROP, ,, propertyName, ,, validator, ., getReadableJSTypeName, (]
[else, {, compiler, ., report, (, t, ., makeError, (, n, ,, DEPRECATED_PROP, ,, propertyName, ,, validator, ., getReadableJSTypeName, (]
[t, ., makeError, (, n, ,, DEPRECATED_PROP, ,, propertyName, ,, validator, ., getReadableJSTypeName, (, n, ., getFirstChild, (, ), ,]
[}, }, }, private, void, checkNameVisibility, (, NodeTraversal, t, ,, Node, name, ,, Node, parent, ), {, Var, var, =]
[}, }, }, private, void, checkNameVisibility, (, NodeTraversal, t, ,, Node, name, ,, Node, parent, ), {, Var, var, =]
[}, }, }, private, void, checkNameVisibility, (, NodeTraversal, t, ,, Node, name, ,, Node, parent, ), {, Var, var, =]
[t, ,, Node, name, ,, Node, parent, ), {, Var, var, =, t, ., getScope, (, ), ., getVar, (]
[t, ,, Node, name, ,, Node, parent, ), {, Var, var, =, t, ., getScope, (, ), ., getVar, (]
[Var, var, =, t, ., getScope, (, ), ., getVar, (, name, ., getString, (, ), ), ;, if, (]
[Var, var, =, t, ., getScope, (, ), ., getVar, (, name, ., getString, (, ), ), ;, if, (]
[=, t, ., getScope, (, ), ., getVar, (, name, ., getString, (, ), ), ;, if, (, var, !=]
[., getVar, (, name, ., getString, (, ), ), ;, if, (, var, !=, null, ), {, JSDocInfo, docInfo, =]
[., getVar, (, name, ., getString, (, ), ), ;, if, (, var, !=, null, ), {, JSDocInfo, docInfo, =]
[), ;, if, (, var, !=, null, ), {, JSDocInfo, docInfo, =, var, ., getJSDocInfo, (, ), ;, if, (]
[), ;, if, (, var, !=, null, ), {, JSDocInfo, docInfo, =, var, ., getJSDocInfo, (, ), ;, if, (]
[if, (, var, !=, null, ), {, JSDocInfo, docInfo, =, var, ., getJSDocInfo, (, ), ;, if, (, docInfo, !=]
[{, JSDocInfo, docInfo, =, var, ., getJSDocInfo, (, ), ;, if, (, docInfo, !=, null, ), {, Visibility, visibility, =]
[{, JSDocInfo, docInfo, =, var, ., getJSDocInfo, (, ), ;, if, (, docInfo, !=, null, ), {, Visibility, visibility, =]
[), ;, if, (, docInfo, !=, null, ), {, Visibility, visibility, =, docInfo, ., getVisibility, (, ), ;, if, (]
[), ;, if, (, docInfo, !=, null, ), {, Visibility, visibility, =, docInfo, ., getVisibility, (, ), ;, if, (]
[if, (, docInfo, !=, null, ), {, Visibility, visibility, =, docInfo, ., getVisibility, (, ), ;, if, (, visibility, ==]
[if, (, docInfo, !=, null, ), {, Visibility, visibility, =, docInfo, ., getVisibility, (, ), ;, if, (, visibility, ==]
[visibility, =, docInfo, ., getVisibility, (, ), ;, if, (, visibility, ==, Visibility, ., PRIVATE, ), {, StaticSourceFile, varSrc, =]
[visibility, =, docInfo, ., getVisibility, (, ), ;, if, (, visibility, ==, Visibility, ., PRIVATE, ), {, StaticSourceFile, varSrc, =]
[(, visibility, ==, Visibility, ., PRIVATE, ), {, StaticSourceFile, varSrc, =, var, ., getSourceFile, (, ), ;, StaticSourceFile, refSrc, =]
[(, visibility, ==, Visibility, ., PRIVATE, ), {, StaticSourceFile, varSrc, =, var, ., getSourceFile, (, ), ;, StaticSourceFile, refSrc, =]
[StaticSourceFile, varSrc, =, var, ., getSourceFile, (, ), ;, StaticSourceFile, refSrc, =, name, ., getStaticSourceFile, (, ), ;, if, (]
[StaticSourceFile, varSrc, =, var, ., getSourceFile, (, ), ;, StaticSourceFile, refSrc, =, name, ., getStaticSourceFile, (, ), ;, if, (]
[StaticSourceFile, varSrc, =, var, ., getSourceFile, (, ), ;, StaticSourceFile, refSrc, =, name, ., getStaticSourceFile, (, ), ;, if, (]
[StaticSourceFile, varSrc, =, var, ., getSourceFile, (, ), ;, StaticSourceFile, refSrc, =, name, ., getStaticSourceFile, (, ), ;, if, (]
[=, var, ., getSourceFile, (, ), ;, StaticSourceFile, refSrc, =, name, ., getStaticSourceFile, (, ), ;, if, (, varSrc, !=]
[., getSourceFile, (, ), ;, StaticSourceFile, refSrc, =, name, ., getStaticSourceFile, (, ), ;, if, (, varSrc, !=, null, &&]
[., getSourceFile, (, ), ;, StaticSourceFile, refSrc, =, name, ., getStaticSourceFile, (, ), ;, if, (, varSrc, !=, null, &&]
[(, ), ;, StaticSourceFile, refSrc, =, name, ., getStaticSourceFile, (, ), ;, if, (, varSrc, !=, null, &&, refSrc, !=]
[;, StaticSourceFile, refSrc, =, name, ., getStaticSourceFile, (, ), ;, if, (, varSrc, !=, null, &&, refSrc, !=, null, &&]
[StaticSourceFile, refSrc, =, name, ., getStaticSourceFile, (, ), ;, if, (, varSrc, !=, null, &&, refSrc, !=, null, &&, !]
[StaticSourceFile, refSrc, =, name, ., getStaticSourceFile, (, ), ;, if, (, varSrc, !=, null, &&, refSrc, !=, null, &&, !]
[StaticSourceFile, refSrc, =, name, ., getStaticSourceFile, (, ), ;, if, (, varSrc, !=, null, &&, refSrc, !=, null, &&, !]
[;, if, (, varSrc, !=, null, &&, refSrc, !=, null, &&, !, varSrc, ., getName, (, ), ., equals, (]
[;, if, (, varSrc, !=, null, &&, refSrc, !=, null, &&, !, varSrc, ., getName, (, ), ., equals, (]
[&&, !, varSrc, ., getName, (, ), ., equals, (, refSrc, ., getName, (, ), ), ), {, if, (]
[&&, !, varSrc, ., getName, (, ), ., equals, (, refSrc, ., getName, (, ), ), ), {, if, (]
[&&, !, varSrc, ., getName, (, ), ., equals, (, refSrc, ., getName, (, ), ), ), {, if, (]
[), ., equals, (, refSrc, ., getName, (, ), ), ), {, if, (, docInfo, ., isConstructor, (, ), &&]
[equals, (, refSrc, ., getName, (, ), ), ), {, if, (, docInfo, ., isConstructor, (, ), &&, isValidPrivateConstructorAccess, (]
[), ), {, if, (, docInfo, ., isConstructor, (, ), &&, isValidPrivateConstructorAccess, (, parent, ), ), {, return, ;, }]
[), ), {, if, (, docInfo, ., isConstructor, (, ), &&, isValidPrivateConstructorAccess, (, parent, ), ), {, return, ;, }]
[(, docInfo, ., isConstructor, (, ), &&, isValidPrivateConstructorAccess, (, parent, ), ), {, return, ;, }, compiler, ., report, (]
[(, docInfo, ., isConstructor, (, ), &&, isValidPrivateConstructorAccess, (, parent, ), ), {, return, ;, }, compiler, ., report, (]
[(, ), &&, isValidPrivateConstructorAccess, (, parent, ), ), {, return, ;, }, compiler, ., report, (, t, ., makeError, (]
[&&, isValidPrivateConstructorAccess, (, parent, ), ), {, return, ;, }, compiler, ., report, (, t, ., makeError, (, name, ,]
[(, parent, ), ), {, return, ;, }, compiler, ., report, (, t, ., makeError, (, name, ,, BAD_PRIVATE_GLOBAL_ACCESS, ,]
[(, parent, ), ), {, return, ;, }, compiler, ., report, (, t, ., makeError, (, name, ,, BAD_PRIVATE_GLOBAL_ACCESS, ,]
[;, }, compiler, ., report, (, t, ., makeError, (, name, ,, BAD_PRIVATE_GLOBAL_ACCESS, ,, name, ., getString, (, ), ,]
[;, }, compiler, ., report, (, t, ., makeError, (, name, ,, BAD_PRIVATE_GLOBAL_ACCESS, ,, name, ., getString, (, ), ,]
[}, }, }, private, void, checkFinalClassOverrides, (, NodeTraversal, t, ,, Node, fn, ,, Node, parent, ), {, JSType, type, =]
[}, }, }, private, void, checkFinalClassOverrides, (, NodeTraversal, t, ,, Node, fn, ,, Node, parent, ), {, JSType, type, =]
[}, }, }, private, void, checkFinalClassOverrides, (, NodeTraversal, t, ,, Node, fn, ,, Node, parent, ), {, JSType, type, =]
[,, Node, parent, ), {, JSType, type, =, fn, ., getJSType, (, ), ., toMaybeFunctionType, (, ), ;, if, (]
[,, Node, parent, ), {, JSType, type, =, fn, ., getJSType, (, ), ., toMaybeFunctionType, (, ), ;, if, (]
[,, Node, parent, ), {, JSType, type, =, fn, ., getJSType, (, ), ., toMaybeFunctionType, (, ), ;, if, (]
[parent, ), {, JSType, type, =, fn, ., getJSType, (, ), ., toMaybeFunctionType, (, ), ;, if, (, type, !=]
[{, JSType, type, =, fn, ., getJSType, (, ), ., toMaybeFunctionType, (, ), ;, if, (, type, !=, null, &&]
[{, JSType, type, =, fn, ., getJSType, (, ), ., toMaybeFunctionType, (, ), ;, if, (, type, !=, null, &&]
[toMaybeFunctionType, (, ), ;, if, (, type, !=, null, &&, type, ., isConstructor, (, ), ), {, JSType, finalParentClass, =]
[), ;, if, (, type, !=, null, &&, type, ., isConstructor, (, ), ), {, JSType, finalParentClass, =, getFinalParentClass, (]
[if, (, type, !=, null, &&, type, ., isConstructor, (, ), ), {, JSType, finalParentClass, =, getFinalParentClass, (, getClassOfMethod, (]
[type, !=, null, &&, type, ., isConstructor, (, ), ), {, JSType, finalParentClass, =, getFinalParentClass, (, getClassOfMethod, (, fn, ,]
[isConstructor, (, ), ), {, JSType, finalParentClass, =, getFinalParentClass, (, getClassOfMethod, (, fn, ,, parent, ), ), ;, if, (]
[isConstructor, (, ), ), {, JSType, finalParentClass, =, getFinalParentClass, (, getClassOfMethod, (, fn, ,, parent, ), ), ;, if, (]
[), ), {, JSType, finalParentClass, =, getFinalParentClass, (, getClassOfMethod, (, fn, ,, parent, ), ), ;, if, (, finalParentClass, !=]
[JSType, finalParentClass, =, getFinalParentClass, (, getClassOfMethod, (, fn, ,, parent, ), ), ;, if, (, finalParentClass, !=, null, ), {]
[JSType, finalParentClass, =, getFinalParentClass, (, getClassOfMethod, (, fn, ,, parent, ), ), ;, if, (, finalParentClass, !=, null, ), {]
[(, getClassOfMethod, (, fn, ,, parent, ), ), ;, if, (, finalParentClass, !=, null, ), {, compiler, ., report, (]
[(, getClassOfMethod, (, fn, ,, parent, ), ), ;, if, (, finalParentClass, !=, null, ), {, compiler, ., report, (]
[,, parent, ), ), ;, if, (, finalParentClass, !=, null, ), {, compiler, ., report, (, t, ., makeError, (]
[), ), ;, if, (, finalParentClass, !=, null, ), {, compiler, ., report, (, t, ., makeError, (, fn, ,]
[;, if, (, finalParentClass, !=, null, ), {, compiler, ., report, (, t, ., makeError, (, fn, ,, EXTEND_FINAL_CLASS, ,]
[;, if, (, finalParentClass, !=, null, ), {, compiler, ., report, (, t, ., makeError, (, fn, ,, EXTEND_FINAL_CLASS, ,]
[), {, compiler, ., report, (, t, ., makeError, (, fn, ,, EXTEND_FINAL_CLASS, ,, type, ., getDisplayName, (, ), ,]
[), {, compiler, ., report, (, t, ., makeError, (, fn, ,, EXTEND_FINAL_CLASS, ,, type, ., getDisplayName, (, ), ,]
[), ), ;, }, }, }, private, void, checkConstantProperty, (, NodeTraversal, t, ,, Node, getprop, ), {, Node, parent, =]
[), ), ;, }, }, }, private, void, checkConstantProperty, (, NodeTraversal, t, ,, Node, getprop, ), {, Node, parent, =]
[(, NodeTraversal, t, ,, Node, getprop, ), {, Node, parent, =, getprop, ., getParent, (, ), ;, boolean, isDelete, =]
[(, NodeTraversal, t, ,, Node, getprop, ), {, Node, parent, =, getprop, ., getParent, (, ), ;, boolean, isDelete, =]
[Node, parent, =, getprop, ., getParent, (, ), ;, boolean, isDelete, =, parent, ., isDelProp, (, ), ;, if, (]
[Node, parent, =, getprop, ., getParent, (, ), ;, boolean, isDelete, =, parent, ., isDelProp, (, ), ;, if, (]
[Node, parent, =, getprop, ., getParent, (, ), ;, boolean, isDelete, =, parent, ., isDelProp, (, ), ;, if, (]
[Node, parent, =, getprop, ., getParent, (, ), ;, boolean, isDelete, =, parent, ., isDelProp, (, ), ;, if, (]
[parent, =, getprop, ., getParent, (, ), ;, boolean, isDelete, =, parent, ., isDelProp, (, ), ;, if, (, !]
[=, getprop, ., getParent, (, ), ;, boolean, isDelete, =, parent, ., isDelProp, (, ), ;, if, (, !, (]
[=, getprop, ., getParent, (, ), ;, boolean, isDelete, =, parent, ., isDelProp, (, ), ;, if, (, !, (]
[=, getprop, ., getParent, (, ), ;, boolean, isDelete, =, parent, ., isDelProp, (, ), ;, if, (, !, (]
[(, ), ;, boolean, isDelete, =, parent, ., isDelProp, (, ), ;, if, (, !, (, NodeUtil, ., isAssignmentOp, (]
[boolean, isDelete, =, parent, ., isDelProp, (, ), ;, if, (, !, (, NodeUtil, ., isAssignmentOp, (, parent, ), &&]
[boolean, isDelete, =, parent, ., isDelProp, (, ), ;, if, (, !, (, NodeUtil, ., isAssignmentOp, (, parent, ), &&]
[boolean, isDelete, =, parent, ., isDelProp, (, ), ;, if, (, !, (, NodeUtil, ., isAssignmentOp, (, parent, ), &&]
[(, ), ;, if, (, !, (, NodeUtil, ., isAssignmentOp, (, parent, ), &&, parent, ., getFirstChild, (, ), ==]
[if, (, !, (, NodeUtil, ., isAssignmentOp, (, parent, ), &&, parent, ., getFirstChild, (, ), ==, getprop, ), &&]
[(, !, (, NodeUtil, ., isAssignmentOp, (, parent, ), &&, parent, ., getFirstChild, (, ), ==, getprop, ), &&, !]
[(, !, (, NodeUtil, ., isAssignmentOp, (, parent, ), &&, parent, ., getFirstChild, (, ), ==, getprop, ), &&, !]
[(, parent, ), &&, parent, ., getFirstChild, (, ), ==, getprop, ), &&, !, parent, ., isInc, (, ), &&]
[parent, ), &&, parent, ., getFirstChild, (, ), ==, getprop, ), &&, !, parent, ., isInc, (, ), &&, !]
[parent, ), &&, parent, ., getFirstChild, (, ), ==, getprop, ), &&, !, parent, ., isInc, (, ), &&, !]
[(, ), ==, getprop, ), &&, !, parent, ., isInc, (, ), &&, !, parent, ., isDec, (, ), &&]
[), ==, getprop, ), &&, !, parent, ., isInc, (, ), &&, !, parent, ., isDec, (, ), &&, !]
[(, ), &&, !, parent, ., isDec, (, ), &&, !, isDelete, ), {, return, ;, }, ObjectType, objectType, =]
[(, ), &&, !, parent, ., isDec, (, ), &&, !, isDelete, ), {, return, ;, }, ObjectType, objectType, =]
[parent, ., isDec, (, ), &&, !, isDelete, ), {, return, ;, }, ObjectType, objectType, =, ObjectType, ., cast, (]
[isDec, (, ), &&, !, isDelete, ), {, return, ;, }, ObjectType, objectType, =, ObjectType, ., cast, (, dereference, (]
[isDec, (, ), &&, !, isDelete, ), {, return, ;, }, ObjectType, objectType, =, ObjectType, ., cast, (, dereference, (]
[isDec, (, ), &&, !, isDelete, ), {, return, ;, }, ObjectType, objectType, =, ObjectType, ., cast, (, dereference, (]
[., cast, (, dereference, (, getprop, ., getFirstChild, (, ), ., getJSType, (, ), ), ), ;, String, propertyName, =]
[., cast, (, dereference, (, getprop, ., getFirstChild, (, ), ., getJSType, (, ), ), ), ;, String, propertyName, =]
[., cast, (, dereference, (, getprop, ., getFirstChild, (, ), ., getJSType, (, ), ), ), ;, String, propertyName, =]
[), ), ), ;, String, propertyName, =, getprop, ., getLastChild, (, ), ., getString, (, ), ;, boolean, isConstant, =]
[), ;, String, propertyName, =, getprop, ., getLastChild, (, ), ., getString, (, ), ;, boolean, isConstant, =, isPropertyDeclaredConstant, (]
[String, propertyName, =, getprop, ., getLastChild, (, ), ., getString, (, ), ;, boolean, isConstant, =, isPropertyDeclaredConstant, (, objectType, ,]
[getLastChild, (, ), ., getString, (, ), ;, boolean, isConstant, =, isPropertyDeclaredConstant, (, objectType, ,, propertyName, ), ;, if, (]
[(, ), ;, boolean, isConstant, =, isPropertyDeclaredConstant, (, objectType, ,, propertyName, ), ;, if, (, isConstant, ), {, if, (]
[boolean, isConstant, =, isPropertyDeclaredConstant, (, objectType, ,, propertyName, ), ;, if, (, isConstant, ), {, if, (, isDelete, ), {]
[boolean, isConstant, =, isPropertyDeclaredConstant, (, objectType, ,, propertyName, ), ;, if, (, isConstant, ), {, if, (, isDelete, ), {]
[(, objectType, ,, propertyName, ), ;, if, (, isConstant, ), {, if, (, isDelete, ), {, compiler, ., report, (]
[(, objectType, ,, propertyName, ), ;, if, (, isConstant, ), {, if, (, isDelete, ), {, compiler, ., report, (]
[), ;, if, (, isConstant, ), {, if, (, isDelete, ), {, compiler, ., report, (, t, ., makeError, (]
[if, (, isConstant, ), {, if, (, isDelete, ), {, compiler, ., report, (, t, ., makeError, (, getprop, ,]
[isConstant, ), {, if, (, isDelete, ), {, compiler, ., report, (, t, ., makeError, (, getprop, ,, CONST_PROPERTY_DELETED, ,]
[report, (, t, ., makeError, (, getprop, ,, CONST_PROPERTY_DELETED, ,, propertyName, ), ), ;, return, ;, }, ObjectType, oType, =]
[makeError, (, getprop, ,, CONST_PROPERTY_DELETED, ,, propertyName, ), ), ;, return, ;, }, ObjectType, oType, =, objectType, ;, while, (]
[makeError, (, getprop, ,, CONST_PROPERTY_DELETED, ,, propertyName, ), ), ;, return, ;, }, ObjectType, oType, =, objectType, ;, while, (]
[getprop, ,, CONST_PROPERTY_DELETED, ,, propertyName, ), ), ;, return, ;, }, ObjectType, oType, =, objectType, ;, while, (, oType, !=]
[), ), ;, return, ;, }, ObjectType, oType, =, objectType, ;, while, (, oType, !=, null, ), {, if, (]
[), ), ;, return, ;, }, ObjectType, oType, =, objectType, ;, while, (, oType, !=, null, ), {, if, (]
[objectType, ;, while, (, oType, !=, null, ), {, if, (, oType, ., hasReferenceName, (, ), ), {, if, (]
[objectType, ;, while, (, oType, !=, null, ), {, if, (, oType, ., hasReferenceName, (, ), ), {, if, (]
[oType, !=, null, ), {, if, (, oType, ., hasReferenceName, (, ), ), {, if, (, initializedConstantProperties, ., containsEntry, (]
[oType, !=, null, ), {, if, (, oType, ., hasReferenceName, (, ), ), {, if, (, initializedConstantProperties, ., containsEntry, (]
[(, oType, ., hasReferenceName, (, ), ), {, if, (, initializedConstantProperties, ., containsEntry, (, oType, ., getReferenceName, (, ), ,]
[(, ), ), {, if, (, initializedConstantProperties, ., containsEntry, (, oType, ., getReferenceName, (, ), ,, propertyName, ), ), {]
[(, ), ), {, if, (, initializedConstantProperties, ., containsEntry, (, oType, ., getReferenceName, (, ), ,, propertyName, ), ), {]
[if, (, initializedConstantProperties, ., containsEntry, (, oType, ., getReferenceName, (, ), ,, propertyName, ), ), {, compiler, ., report, (]
[if, (, initializedConstantProperties, ., containsEntry, (, oType, ., getReferenceName, (, ), ,, propertyName, ), ), {, compiler, ., report, (]
[containsEntry, (, oType, ., getReferenceName, (, ), ,, propertyName, ), ), {, compiler, ., report, (, t, ., makeError, (]
[oType, ., getReferenceName, (, ), ,, propertyName, ), ), {, compiler, ., report, (, t, ., makeError, (, getprop, ,]
[getReferenceName, (, ), ,, propertyName, ), ), {, compiler, ., report, (, t, ., makeError, (, getprop, ,, CONST_PROPERTY_REASSIGNED_VALUE, ,]
[compiler, ., report, (, t, ., makeError, (, getprop, ,, CONST_PROPERTY_REASSIGNED_VALUE, ,, propertyName, ), ), ;, break, ;, }, }]
[report, (, t, ., makeError, (, getprop, ,, CONST_PROPERTY_REASSIGNED_VALUE, ,, propertyName, ), ), ;, break, ;, }, }, oType, =]
[report, (, t, ., makeError, (, getprop, ,, CONST_PROPERTY_REASSIGNED_VALUE, ,, propertyName, ), ), ;, break, ;, }, }, oType, =]
[,, CONST_PROPERTY_REASSIGNED_VALUE, ,, propertyName, ), ), ;, break, ;, }, }, oType, =, oType, ., getImplicitPrototype, (, ), ;, }]
[,, CONST_PROPERTY_REASSIGNED_VALUE, ,, propertyName, ), ), ;, break, ;, }, }, oType, =, oType, ., getImplicitPrototype, (, ), ;, }]
[), ), ;, break, ;, }, }, oType, =, oType, ., getImplicitPrototype, (, ), ;, }, Preconditions, ., checkState, (]
[), ), ;, break, ;, }, }, oType, =, oType, ., getImplicitPrototype, (, ), ;, }, Preconditions, ., checkState, (]
[oType, =, oType, ., getImplicitPrototype, (, ), ;, }, Preconditions, ., checkState, (, objectType, ., hasReferenceName, (, ), ), ;]
[oType, =, oType, ., getImplicitPrototype, (, ), ;, }, Preconditions, ., checkState, (, objectType, ., hasReferenceName, (, ), ), ;]
[getImplicitPrototype, (, ), ;, }, Preconditions, ., checkState, (, objectType, ., hasReferenceName, (, ), ), ;, initializedConstantProperties, ., put, (]
[getImplicitPrototype, (, ), ;, }, Preconditions, ., checkState, (, objectType, ., hasReferenceName, (, ), ), ;, initializedConstantProperties, ., put, (]
[., checkState, (, objectType, ., hasReferenceName, (, ), ), ;, initializedConstantProperties, ., put, (, objectType, ., getReferenceName, (, ), ,]
[hasReferenceName, (, ), ), ;, initializedConstantProperties, ., put, (, objectType, ., getReferenceName, (, ), ,, propertyName, ), ;, if, (]
[hasReferenceName, (, ), ), ;, initializedConstantProperties, ., put, (, objectType, ., getReferenceName, (, ), ,, propertyName, ), ;, if, (]
[., getReferenceName, (, ), ,, propertyName, ), ;, if, (, objectType, ., isInstanceType, (, ), ), {, ObjectType, prototype, =]
[., getReferenceName, (, ), ,, propertyName, ), ;, if, (, objectType, ., isInstanceType, (, ), ), {, ObjectType, prototype, =]
[if, (, objectType, ., isInstanceType, (, ), ), {, ObjectType, prototype, =, objectType, ., getImplicitPrototype, (, ), ;, if, (]
[if, (, objectType, ., isInstanceType, (, ), ), {, ObjectType, prototype, =, objectType, ., getImplicitPrototype, (, ), ;, if, (]
[objectType, ., isInstanceType, (, ), ), {, ObjectType, prototype, =, objectType, ., getImplicitPrototype, (, ), ;, if, (, prototype, !=]
[), {, ObjectType, prototype, =, objectType, ., getImplicitPrototype, (, ), ;, if, (, prototype, !=, null, ), {, if, (]
[), {, ObjectType, prototype, =, objectType, ., getImplicitPrototype, (, ), ;, if, (, prototype, !=, null, ), {, if, (]
[), {, ObjectType, prototype, =, objectType, ., getImplicitPrototype, (, ), ;, if, (, prototype, !=, null, ), {, if, (]
[=, objectType, ., getImplicitPrototype, (, ), ;, if, (, prototype, !=, null, ), {, if, (, prototype, ., hasProperty, (]
[getImplicitPrototype, (, ), ;, if, (, prototype, !=, null, ), {, if, (, prototype, ., hasProperty, (, propertyName, ), &&]
[getImplicitPrototype, (, ), ;, if, (, prototype, !=, null, ), {, if, (, prototype, ., hasProperty, (, propertyName, ), &&]
[!=, null, ), {, if, (, prototype, ., hasProperty, (, propertyName, ), &&, prototype, ., hasReferenceName, (, ), ), {]
[!=, null, ), {, if, (, prototype, ., hasProperty, (, propertyName, ), &&, prototype, ., hasReferenceName, (, ), ), {]
[if, (, prototype, ., hasProperty, (, propertyName, ), &&, prototype, ., hasReferenceName, (, ), ), {, initializedConstantProperties, ., put, (]
[if, (, prototype, ., hasProperty, (, propertyName, ), &&, prototype, ., hasReferenceName, (, ), ), {, initializedConstantProperties, ., put, (]
[propertyName, ), &&, prototype, ., hasReferenceName, (, ), ), {, initializedConstantProperties, ., put, (, prototype, ., getReferenceName, (, ), ,]
[}, }, }, private, void, checkPropertyVisibility, (, NodeTraversal, t, ,, Node, getprop, ,, Node, parent, ), {, ObjectType, objectType, =]
[}, }, }, private, void, checkPropertyVisibility, (, NodeTraversal, t, ,, Node, getprop, ,, Node, parent, ), {, ObjectType, objectType, =]
[void, checkPropertyVisibility, (, NodeTraversal, t, ,, Node, getprop, ,, Node, parent, ), {, ObjectType, objectType, =, ObjectType, ., cast, (]
[(, NodeTraversal, t, ,, Node, getprop, ,, Node, parent, ), {, ObjectType, objectType, =, ObjectType, ., cast, (, dereference, (]
[(, NodeTraversal, t, ,, Node, getprop, ,, Node, parent, ), {, ObjectType, objectType, =, ObjectType, ., cast, (, dereference, (]
[(, NodeTraversal, t, ,, Node, getprop, ,, Node, parent, ), {, ObjectType, objectType, =, ObjectType, ., cast, (, dereference, (]
[., cast, (, dereference, (, getprop, ., getFirstChild, (, ), ., getJSType, (, ), ), ), ;, String, propertyName, =]
[., cast, (, dereference, (, getprop, ., getFirstChild, (, ), ., getJSType, (, ), ), ), ;, String, propertyName, =]
[., cast, (, dereference, (, getprop, ., getFirstChild, (, ), ., getJSType, (, ), ), ), ;, String, propertyName, =]
[(, ), ), ), ;, String, propertyName, =, getprop, ., getLastChild, (, ), ., getString, (, ), ;, if, (]
[(, ), ), ), ;, String, propertyName, =, getprop, ., getLastChild, (, ), ., getString, (, ), ;, if, (]
[), ), ;, String, propertyName, =, getprop, ., getLastChild, (, ), ., getString, (, ), ;, if, (, objectType, !=]
[getprop, ., getLastChild, (, ), ., getString, (, ), ;, if, (, objectType, !=, null, ), {, boolean, isOverride, =]
[getprop, ., getLastChild, (, ), ., getString, (, ), ;, if, (, objectType, !=, null, ), {, boolean, isOverride, =]
[getprop, ., getLastChild, (, ), ., getString, (, ), ;, if, (, objectType, !=, null, ), {, boolean, isOverride, =]
[getprop, ., getLastChild, (, ), ., getString, (, ), ;, if, (, objectType, !=, null, ), {, boolean, isOverride, =]
[getprop, ., getLastChild, (, ), ., getString, (, ), ;, if, (, objectType, !=, null, ), {, boolean, isOverride, =]
[getString, (, ), ;, if, (, objectType, !=, null, ), {, boolean, isOverride, =, parent, ., getJSDocInfo, (, ), !=]
[), ;, if, (, objectType, !=, null, ), {, boolean, isOverride, =, parent, ., getJSDocInfo, (, ), !=, null, &&]
[), ;, if, (, objectType, !=, null, ), {, boolean, isOverride, =, parent, ., getJSDocInfo, (, ), !=, null, &&]
[null, ), {, boolean, isOverride, =, parent, ., getJSDocInfo, (, ), !=, null, &&, parent, ., isAssign, (, ), &&]
[null, ), {, boolean, isOverride, =, parent, ., getJSDocInfo, (, ), !=, null, &&, parent, ., isAssign, (, ), &&]
[null, ), {, boolean, isOverride, =, parent, ., getJSDocInfo, (, ), !=, null, &&, parent, ., isAssign, (, ), &&]
[parent, ., getJSDocInfo, (, ), !=, null, &&, parent, ., isAssign, (, ), &&, parent, ., getFirstChild, (, ), ==]
[), !=, null, &&, parent, ., isAssign, (, ), &&, parent, ., getFirstChild, (, ), ==, getprop, ;, if, (]
[&&, parent, ., isAssign, (, ), &&, parent, ., getFirstChild, (, ), ==, getprop, ;, if, (, isOverride, ), {]
[., isAssign, (, ), &&, parent, ., getFirstChild, (, ), ==, getprop, ;, if, (, isOverride, ), {, objectType, =]
[., isAssign, (, ), &&, parent, ., getFirstChild, (, ), ==, getprop, ;, if, (, isOverride, ), {, objectType, =]
[==, getprop, ;, if, (, isOverride, ), {, objectType, =, objectType, ., getImplicitPrototype, (, ), ;, }, JSDocInfo, docInfo, =]
[isOverride, ), {, objectType, =, objectType, ., getImplicitPrototype, (, ), ;, }, JSDocInfo, docInfo, =, null, ;, for, (, ;]
[isOverride, ), {, objectType, =, objectType, ., getImplicitPrototype, (, ), ;, }, JSDocInfo, docInfo, =, null, ;, for, (, ;]
[{, objectType, =, objectType, ., getImplicitPrototype, (, ), ;, }, JSDocInfo, docInfo, =, null, ;, for, (, ;, objectType, !=]
[=, objectType, ., getImplicitPrototype, (, ), ;, }, JSDocInfo, docInfo, =, null, ;, for, (, ;, objectType, !=, null, ;]
[., getImplicitPrototype, (, ), ;, }, JSDocInfo, docInfo, =, null, ;, for, (, ;, objectType, !=, null, ;, objectType, =]
[., getImplicitPrototype, (, ), ;, }, JSDocInfo, docInfo, =, null, ;, for, (, ;, objectType, !=, null, ;, objectType, =]
[docInfo, =, null, ;, for, (, ;, objectType, !=, null, ;, objectType, =, objectType, ., getImplicitPrototype, (, ), ), {]
[null, ;, for, (, ;, objectType, !=, null, ;, objectType, =, objectType, ., getImplicitPrototype, (, ), ), {, docInfo, =]
[null, ;, for, (, ;, objectType, !=, null, ;, objectType, =, objectType, ., getImplicitPrototype, (, ), ), {, docInfo, =]
[;, objectType, !=, null, ;, objectType, =, objectType, ., getImplicitPrototype, (, ), ), {, docInfo, =, objectType, ., getOwnPropertyJSDocInfo, (]
[objectType, =, objectType, ., getImplicitPrototype, (, ), ), {, docInfo, =, objectType, ., getOwnPropertyJSDocInfo, (, propertyName, ), ;, if, (]
[objectType, =, objectType, ., getImplicitPrototype, (, ), ), {, docInfo, =, objectType, ., getOwnPropertyJSDocInfo, (, propertyName, ), ;, if, (]
[objectType, =, objectType, ., getImplicitPrototype, (, ), ), {, docInfo, =, objectType, ., getOwnPropertyJSDocInfo, (, propertyName, ), ;, if, (]
[objectType, ., getImplicitPrototype, (, ), ), {, docInfo, =, objectType, ., getOwnPropertyJSDocInfo, (, propertyName, ), ;, if, (, docInfo, !=]
[getImplicitPrototype, (, ), ), {, docInfo, =, objectType, ., getOwnPropertyJSDocInfo, (, propertyName, ), ;, if, (, docInfo, !=, null, &&]
[getImplicitPrototype, (, ), ), {, docInfo, =, objectType, ., getOwnPropertyJSDocInfo, (, propertyName, ), ;, if, (, docInfo, !=, null, &&]
[getImplicitPrototype, (, ), ), {, docInfo, =, objectType, ., getOwnPropertyJSDocInfo, (, propertyName, ), ;, if, (, docInfo, !=, null, &&]
[=, objectType, ., getOwnPropertyJSDocInfo, (, propertyName, ), ;, if, (, docInfo, !=, null, &&, docInfo, ., getVisibility, (, ), !=]
[=, objectType, ., getOwnPropertyJSDocInfo, (, propertyName, ), ;, if, (, docInfo, !=, null, &&, docInfo, ., getVisibility, (, ), !=]
[!=, null, &&, docInfo, ., getVisibility, (, ), !=, Visibility, ., INHERITED, ), {, break, ;, }, }, if, (]
[!=, null, &&, docInfo, ., getVisibility, (, ), !=, Visibility, ., INHERITED, ), {, break, ;, }, }, if, (]
[&&, docInfo, ., getVisibility, (, ), !=, Visibility, ., INHERITED, ), {, break, ;, }, }, if, (, objectType, ==]
[INHERITED, ), {, break, ;, }, }, if, (, objectType, ==, null, ), {, return, ;, }, String, referenceSource, =]
[INHERITED, ), {, break, ;, }, }, if, (, objectType, ==, null, ), {, return, ;, }, String, referenceSource, =]
[objectType, ==, null, ), {, return, ;, }, String, referenceSource, =, getprop, ., getSourceFileName, (, ), ;, String, definingSource, =]
[objectType, ==, null, ), {, return, ;, }, String, referenceSource, =, getprop, ., getSourceFileName, (, ), ;, String, definingSource, =]
[referenceSource, =, getprop, ., getSourceFileName, (, ), ;, String, definingSource, =, docInfo, ., getSourceName, (, ), ;, boolean, sameInput, =]
[referenceSource, =, getprop, ., getSourceFileName, (, ), ;, String, definingSource, =, docInfo, ., getSourceName, (, ), ;, boolean, sameInput, =]
[referenceSource, =, getprop, ., getSourceFileName, (, ), ;, String, definingSource, =, docInfo, ., getSourceName, (, ), ;, boolean, sameInput, =]
[getprop, ., getSourceFileName, (, ), ;, String, definingSource, =, docInfo, ., getSourceName, (, ), ;, boolean, sameInput, =, referenceSource, !=]
[getSourceFileName, (, ), ;, String, definingSource, =, docInfo, ., getSourceName, (, ), ;, boolean, sameInput, =, referenceSource, !=, null, &&]
[getSourceFileName, (, ), ;, String, definingSource, =, docInfo, ., getSourceName, (, ), ;, boolean, sameInput, =, referenceSource, !=, null, &&]
[String, definingSource, =, docInfo, ., getSourceName, (, ), ;, boolean, sameInput, =, referenceSource, !=, null, &&, referenceSource, ., equals, (]
[(, ), ;, boolean, sameInput, =, referenceSource, !=, null, &&, referenceSource, ., equals, (, definingSource, ), ;, Visibility, visibility, =]
[(, ), ;, boolean, sameInput, =, referenceSource, !=, null, &&, referenceSource, ., equals, (, definingSource, ), ;, Visibility, visibility, =]
[&&, referenceSource, ., equals, (, definingSource, ), ;, Visibility, visibility, =, docInfo, ., getVisibility, (, ), ;, JSType, ownerType, =]
[., equals, (, definingSource, ), ;, Visibility, visibility, =, docInfo, ., getVisibility, (, ), ;, JSType, ownerType, =, normalizeClassType, (]
[;, Visibility, visibility, =, docInfo, ., getVisibility, (, ), ;, JSType, ownerType, =, normalizeClassType, (, objectType, ), ;, if, (]
[getVisibility, (, ), ;, JSType, ownerType, =, normalizeClassType, (, objectType, ), ;, if, (, isOverride, ), {, JSDocInfo, overridingInfo, =]
[getVisibility, (, ), ;, JSType, ownerType, =, normalizeClassType, (, objectType, ), ;, if, (, isOverride, ), {, JSDocInfo, overridingInfo, =]
[objectType, ), ;, if, (, isOverride, ), {, JSDocInfo, overridingInfo, =, parent, ., getJSDocInfo, (, ), ;, Visibility, overridingVisibility, =]
[objectType, ), ;, if, (, isOverride, ), {, JSDocInfo, overridingInfo, =, parent, ., getJSDocInfo, (, ), ;, Visibility, overridingVisibility, =]
[objectType, ), ;, if, (, isOverride, ), {, JSDocInfo, overridingInfo, =, parent, ., getJSDocInfo, (, ), ;, Visibility, overridingVisibility, =]
[;, if, (, isOverride, ), {, JSDocInfo, overridingInfo, =, parent, ., getJSDocInfo, (, ), ;, Visibility, overridingVisibility, =, overridingInfo, ==]
[(, isOverride, ), {, JSDocInfo, overridingInfo, =, parent, ., getJSDocInfo, (, ), ;, Visibility, overridingVisibility, =, overridingInfo, ==, null, ?]
[(, isOverride, ), {, JSDocInfo, overridingInfo, =, parent, ., getJSDocInfo, (, ), ;, Visibility, overridingVisibility, =, overridingInfo, ==, null, ?]
[JSDocInfo, overridingInfo, =, parent, ., getJSDocInfo, (, ), ;, Visibility, overridingVisibility, =, overridingInfo, ==, null, ?, Visibility, ., INHERITED, :]
[JSDocInfo, overridingInfo, =, parent, ., getJSDocInfo, (, ), ;, Visibility, overridingVisibility, =, overridingInfo, ==, null, ?, Visibility, ., INHERITED, :]
[;, Visibility, overridingVisibility, =, overridingInfo, ==, null, ?, Visibility, ., INHERITED, :, overridingInfo, ., getVisibility, (, ), ;, if, (]
[;, Visibility, overridingVisibility, =, overridingInfo, ==, null, ?, Visibility, ., INHERITED, :, overridingInfo, ., getVisibility, (, ), ;, if, (]
[;, Visibility, overridingVisibility, =, overridingInfo, ==, null, ?, Visibility, ., INHERITED, :, overridingInfo, ., getVisibility, (, ), ;, if, (]
[overridingVisibility, =, overridingInfo, ==, null, ?, Visibility, ., INHERITED, :, overridingInfo, ., getVisibility, (, ), ;, if, (, visibility, ==]
[overridingVisibility, =, overridingInfo, ==, null, ?, Visibility, ., INHERITED, :, overridingInfo, ., getVisibility, (, ), ;, if, (, visibility, ==]
[null, ?, Visibility, ., INHERITED, :, overridingInfo, ., getVisibility, (, ), ;, if, (, visibility, ==, Visibility, ., PRIVATE, &&]
[?, Visibility, ., INHERITED, :, overridingInfo, ., getVisibility, (, ), ;, if, (, visibility, ==, Visibility, ., PRIVATE, &&, !]
[INHERITED, :, overridingInfo, ., getVisibility, (, ), ;, if, (, visibility, ==, Visibility, ., PRIVATE, &&, !, sameInput, ), {]
[INHERITED, :, overridingInfo, ., getVisibility, (, ), ;, if, (, visibility, ==, Visibility, ., PRIVATE, &&, !, sameInput, ), {]
[getVisibility, (, ), ;, if, (, visibility, ==, Visibility, ., PRIVATE, &&, !, sameInput, ), {, compiler, ., report, (]
[getVisibility, (, ), ;, if, (, visibility, ==, Visibility, ., PRIVATE, &&, !, sameInput, ), {, compiler, ., report, (]
[if, (, visibility, ==, Visibility, ., PRIVATE, &&, !, sameInput, ), {, compiler, ., report, (, t, ., makeError, (]
[visibility, ==, Visibility, ., PRIVATE, &&, !, sameInput, ), {, compiler, ., report, (, t, ., makeError, (, getprop, ,]
[Visibility, ., PRIVATE, &&, !, sameInput, ), {, compiler, ., report, (, t, ., makeError, (, getprop, ,, PRIVATE_OVERRIDE, ,]
[Visibility, ., PRIVATE, &&, !, sameInput, ), {, compiler, ., report, (, t, ., makeError, (, getprop, ,, PRIVATE_OVERRIDE, ,]
[t, ., makeError, (, getprop, ,, PRIVATE_OVERRIDE, ,, objectType, ., toString, (, ), ), ), ;, }, else, if, (]
[t, ., makeError, (, getprop, ,, PRIVATE_OVERRIDE, ,, objectType, ., toString, (, ), ), ), ;, }, else, if, (]
[t, ., makeError, (, getprop, ,, PRIVATE_OVERRIDE, ,, objectType, ., toString, (, ), ), ), ;, }, else, if, (]
[makeError, (, getprop, ,, PRIVATE_OVERRIDE, ,, objectType, ., toString, (, ), ), ), ;, }, else, if, (, overridingVisibility, !=]
[makeError, (, getprop, ,, PRIVATE_OVERRIDE, ,, objectType, ., toString, (, ), ), ), ;, }, else, if, (, overridingVisibility, !=]
[PRIVATE_OVERRIDE, ,, objectType, ., toString, (, ), ), ), ;, }, else, if, (, overridingVisibility, !=, Visibility, ., INHERITED, &&]
[PRIVATE_OVERRIDE, ,, objectType, ., toString, (, ), ), ), ;, }, else, if, (, overridingVisibility, !=, Visibility, ., INHERITED, &&]
[objectType, ., toString, (, ), ), ), ;, }, else, if, (, overridingVisibility, !=, Visibility, ., INHERITED, &&, overridingVisibility, !=]
[(, ), ), ), ;, }, else, if, (, overridingVisibility, !=, Visibility, ., INHERITED, &&, overridingVisibility, !=, visibility, ), {]
[(, ), ), ), ;, }, else, if, (, overridingVisibility, !=, Visibility, ., INHERITED, &&, overridingVisibility, !=, visibility, ), {]
[;, }, else, if, (, overridingVisibility, !=, Visibility, ., INHERITED, &&, overridingVisibility, !=, visibility, ), {, compiler, ., report, (]
[;, }, else, if, (, overridingVisibility, !=, Visibility, ., INHERITED, &&, overridingVisibility, !=, visibility, ), {, compiler, ., report, (]
[(, overridingVisibility, !=, Visibility, ., INHERITED, &&, overridingVisibility, !=, visibility, ), {, compiler, ., report, (, t, ., makeError, (]
[!=, Visibility, ., INHERITED, &&, overridingVisibility, !=, visibility, ), {, compiler, ., report, (, t, ., makeError, (, getprop, ,]
[., INHERITED, &&, overridingVisibility, !=, visibility, ), {, compiler, ., report, (, t, ., makeError, (, getprop, ,, VISIBILITY_MISMATCH, ,]
[., INHERITED, &&, overridingVisibility, !=, visibility, ), {, compiler, ., report, (, t, ., makeError, (, getprop, ,, VISIBILITY_MISMATCH, ,]
[), {, compiler, ., report, (, t, ., makeError, (, getprop, ,, VISIBILITY_MISMATCH, ,, visibility, ., name, (, ), ,]
[), {, compiler, ., report, (, t, ., makeError, (, getprop, ,, VISIBILITY_MISMATCH, ,, visibility, ., name, (, ), ,]
[t, ., makeError, (, getprop, ,, VISIBILITY_MISMATCH, ,, visibility, ., name, (, ), ,, objectType, ., toString, (, ), ,]
[t, ., makeError, (, getprop, ,, VISIBILITY_MISMATCH, ,, visibility, ., name, (, ), ,, objectType, ., toString, (, ), ,]
[objectType, ., toString, (, ), ,, overridingVisibility, ., name, (, ), ), ), ;, }, }, else, {, if, (]
[(, ), ), ), ;, }, }, else, {, if, (, sameInput, ), {, return, ;, }, else, if, (]
[(, ), ), ), ;, }, }, else, {, if, (, sameInput, ), {, return, ;, }, else, if, (]
[(, ), ), ), ;, }, }, else, {, if, (, sameInput, ), {, return, ;, }, else, if, (]
[), ), ;, }, }, else, {, if, (, sameInput, ), {, return, ;, }, else, if, (, visibility, ==]
[), ), ;, }, }, else, {, if, (, sameInput, ), {, return, ;, }, else, if, (, visibility, ==]
[}, else, {, if, (, sameInput, ), {, return, ;, }, else, if, (, visibility, ==, Visibility, ., PRIVATE, &&]
[else, {, if, (, sameInput, ), {, return, ;, }, else, if, (, visibility, ==, Visibility, ., PRIVATE, &&, (]
[else, {, if, (, sameInput, ), {, return, ;, }, else, if, (, visibility, ==, Visibility, ., PRIVATE, &&, (]
[else, {, if, (, sameInput, ), {, return, ;, }, else, if, (, visibility, ==, Visibility, ., PRIVATE, &&, (]
[if, (, sameInput, ), {, return, ;, }, else, if, (, visibility, ==, Visibility, ., PRIVATE, &&, (, currentClass, ==]
[sameInput, ), {, return, ;, }, else, if, (, visibility, ==, Visibility, ., PRIVATE, &&, (, currentClass, ==, null, ||]
[), {, return, ;, }, else, if, (, visibility, ==, Visibility, ., PRIVATE, &&, (, currentClass, ==, null, ||, !]
[), {, return, ;, }, else, if, (, visibility, ==, Visibility, ., PRIVATE, &&, (, currentClass, ==, null, ||, !]
[}, else, if, (, visibility, ==, Visibility, ., PRIVATE, &&, (, currentClass, ==, null, ||, !, ownerType, ., isEquivalentTo, (]
[., PRIVATE, &&, (, currentClass, ==, null, ||, !, ownerType, ., isEquivalentTo, (, currentClass, ), ), ), {, if, (]
[., PRIVATE, &&, (, currentClass, ==, null, ||, !, ownerType, ., isEquivalentTo, (, currentClass, ), ), ), {, if, (]
[., PRIVATE, &&, (, currentClass, ==, null, ||, !, ownerType, ., isEquivalentTo, (, currentClass, ), ), ), {, if, (]
[null, ||, !, ownerType, ., isEquivalentTo, (, currentClass, ), ), ), {, if, (, docInfo, ., isConstructor, (, ), &&]
[!, ownerType, ., isEquivalentTo, (, currentClass, ), ), ), {, if, (, docInfo, ., isConstructor, (, ), &&, isValidPrivateConstructorAccess, (]
[), ), {, if, (, docInfo, ., isConstructor, (, ), &&, isValidPrivateConstructorAccess, (, parent, ), ), {, return, ;, }]
[), ), {, if, (, docInfo, ., isConstructor, (, ), &&, isValidPrivateConstructorAccess, (, parent, ), ), {, return, ;, }]
[(, docInfo, ., isConstructor, (, ), &&, isValidPrivateConstructorAccess, (, parent, ), ), {, return, ;, }, compiler, ., report, (]
[(, docInfo, ., isConstructor, (, ), &&, isValidPrivateConstructorAccess, (, parent, ), ), {, return, ;, }, compiler, ., report, (]
[(, ), &&, isValidPrivateConstructorAccess, (, parent, ), ), {, return, ;, }, compiler, ., report, (, t, ., makeError, (]
[&&, isValidPrivateConstructorAccess, (, parent, ), ), {, return, ;, }, compiler, ., report, (, t, ., makeError, (, getprop, ,]
[(, parent, ), ), {, return, ;, }, compiler, ., report, (, t, ., makeError, (, getprop, ,, BAD_PRIVATE_PROPERTY_ACCESS, ,]
[), ), {, return, ;, }, compiler, ., report, (, t, ., makeError, (, getprop, ,, BAD_PRIVATE_PROPERTY_ACCESS, ,, propertyName, ,]
[), ), {, return, ;, }, compiler, ., report, (, t, ., makeError, (, getprop, ,, BAD_PRIVATE_PROPERTY_ACCESS, ,, propertyName, ,]
[;, }, compiler, ., report, (, t, ., makeError, (, getprop, ,, BAD_PRIVATE_PROPERTY_ACCESS, ,, propertyName, ,, validator, ., getReadableJSTypeName, (]
[;, }, compiler, ., report, (, t, ., makeError, (, getprop, ,, BAD_PRIVATE_PROPERTY_ACCESS, ,, propertyName, ,, validator, ., getReadableJSTypeName, (]
[t, ., makeError, (, getprop, ,, BAD_PRIVATE_PROPERTY_ACCESS, ,, propertyName, ,, validator, ., getReadableJSTypeName, (, getprop, ., getFirstChild, (, ), ,]
[,, validator, ., getReadableJSTypeName, (, getprop, ., getFirstChild, (, ), ,, true, ), ), ), ;, }, else, if, (]
[,, validator, ., getReadableJSTypeName, (, getprop, ., getFirstChild, (, ), ,, true, ), ), ), ;, }, else, if, (]
[., getReadableJSTypeName, (, getprop, ., getFirstChild, (, ), ,, true, ), ), ), ;, }, else, if, (, visibility, ==]
[., getReadableJSTypeName, (, getprop, ., getFirstChild, (, ), ,, true, ), ), ), ;, }, else, if, (, visibility, ==]
[), ,, true, ), ), ), ;, }, else, if, (, visibility, ==, Visibility, ., PROTECTED, ), {, if, (]
[), ,, true, ), ), ), ;, }, else, if, (, visibility, ==, Visibility, ., PROTECTED, ), {, if, (]
[), ,, true, ), ), ), ;, }, else, if, (, visibility, ==, Visibility, ., PROTECTED, ), {, if, (]
[true, ), ), ), ;, }, else, if, (, visibility, ==, Visibility, ., PROTECTED, ), {, if, (, currentClass, ==]
[), ), ;, }, else, if, (, visibility, ==, Visibility, ., PROTECTED, ), {, if, (, currentClass, ==, null, ||]
[), ;, }, else, if, (, visibility, ==, Visibility, ., PROTECTED, ), {, if, (, currentClass, ==, null, ||, !]
[), ;, }, else, if, (, visibility, ==, Visibility, ., PROTECTED, ), {, if, (, currentClass, ==, null, ||, !]
[if, (, visibility, ==, Visibility, ., PROTECTED, ), {, if, (, currentClass, ==, null, ||, !, currentClass, ., isSubtype, (]
[Visibility, ., PROTECTED, ), {, if, (, currentClass, ==, null, ||, !, currentClass, ., isSubtype, (, ownerType, ), ), {]
[Visibility, ., PROTECTED, ), {, if, (, currentClass, ==, null, ||, !, currentClass, ., isSubtype, (, ownerType, ), ), {]
[{, if, (, currentClass, ==, null, ||, !, currentClass, ., isSubtype, (, ownerType, ), ), {, compiler, ., report, (]
[{, if, (, currentClass, ==, null, ||, !, currentClass, ., isSubtype, (, ownerType, ), ), {, compiler, ., report, (]
[==, null, ||, !, currentClass, ., isSubtype, (, ownerType, ), ), {, compiler, ., report, (, t, ., makeError, (]
[||, !, currentClass, ., isSubtype, (, ownerType, ), ), {, compiler, ., report, (, t, ., makeError, (, getprop, ,]
[currentClass, ., isSubtype, (, ownerType, ), ), {, compiler, ., report, (, t, ., makeError, (, getprop, ,, BAD_PROTECTED_PROPERTY_ACCESS, ,]
[isSubtype, (, ownerType, ), ), {, compiler, ., report, (, t, ., makeError, (, getprop, ,, BAD_PROTECTED_PROPERTY_ACCESS, ,, propertyName, ,]
[isSubtype, (, ownerType, ), ), {, compiler, ., report, (, t, ., makeError, (, getprop, ,, BAD_PROTECTED_PROPERTY_ACCESS, ,, propertyName, ,]
[), {, compiler, ., report, (, t, ., makeError, (, getprop, ,, BAD_PROTECTED_PROPERTY_ACCESS, ,, propertyName, ,, validator, ., getReadableJSTypeName, (]
[), {, compiler, ., report, (, t, ., makeError, (, getprop, ,, BAD_PROTECTED_PROPERTY_ACCESS, ,, propertyName, ,, validator, ., getReadableJSTypeName, (]
[t, ., makeError, (, getprop, ,, BAD_PROTECTED_PROPERTY_ACCESS, ,, propertyName, ,, validator, ., getReadableJSTypeName, (, getprop, ., getFirstChild, (, ), ,]
[true, ), ), ), ;, }, }, }, }, }, private, static, boolean, isValidPrivateConstructorAccess, (, Node, parent, ), {, return]
[), ), ), ;, }, }, }, }, }, private, static, boolean, isValidPrivateConstructorAccess, (, Node, parent, ), {, return, !]
[), ), ), ;, }, }, }, }, }, private, static, boolean, isValidPrivateConstructorAccess, (, Node, parent, ), {, return, !]
[(, ), ;, }, private, boolean, shouldEmitDeprecationWarning, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (]
[(, ), ;, }, private, boolean, shouldEmitDeprecationWarning, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (]
[t, ,, Node, n, ,, Node, parent, ), {, if, (, t, ., inGlobalScope, (, ), ), {, if, (]
[,, Node, n, ,, Node, parent, ), {, if, (, t, ., inGlobalScope, (, ), ), {, if, (, !]
[Node, n, ,, Node, parent, ), {, if, (, t, ., inGlobalScope, (, ), ), {, if, (, !, (]
[Node, n, ,, Node, parent, ), {, if, (, t, ., inGlobalScope, (, ), ), {, if, (, !, (]
[n, ,, Node, parent, ), {, if, (, t, ., inGlobalScope, (, ), ), {, if, (, !, (, (]
[n, ,, Node, parent, ), {, if, (, t, ., inGlobalScope, (, ), ), {, if, (, !, (, (]
[n, ,, Node, parent, ), {, if, (, t, ., inGlobalScope, (, ), ), {, if, (, !, (, (]
[if, (, t, ., inGlobalScope, (, ), ), {, if, (, !, (, (, parent, ., isCall, (, ), &&]
[if, (, t, ., inGlobalScope, (, ), ), {, if, (, !, (, (, parent, ., isCall, (, ), &&]
[if, (, t, ., inGlobalScope, (, ), ), {, if, (, !, (, (, parent, ., isCall, (, ), &&]
[), ), {, if, (, !, (, (, parent, ., isCall, (, ), &&, parent, ., getFirstChild, (, ), ==]
[if, (, !, (, (, parent, ., isCall, (, ), &&, parent, ., getFirstChild, (, ), ==, n, ), ||]
[if, (, !, (, (, parent, ., isCall, (, ), &&, parent, ., getFirstChild, (, ), ==, n, ), ||]
[), &&, parent, ., getFirstChild, (, ), ==, n, ), ||, n, ., isNew, (, ), ), ), {, return]
[), ==, n, ), ||, n, ., isNew, (, ), ), ), {, return, false, ;, }, }, if, (]
[), ==, n, ), ||, n, ., isNew, (, ), ), ), {, return, false, ;, }, }, if, (]
[), ==, n, ), ||, n, ., isNew, (, ), ), ), {, return, false, ;, }, }, if, (]
[), ==, n, ), ||, n, ., isNew, (, ), ), ), {, return, false, ;, }, }, if, (]
[., isNew, (, ), ), ), {, return, false, ;, }, }, if, (, n, ., isGetProp, (, ), &&]
[., isNew, (, ), ), ), {, return, false, ;, }, }, if, (, n, ., isGetProp, (, ), &&]
[(, ), ), ), {, return, false, ;, }, }, if, (, n, ., isGetProp, (, ), &&, n, ==]
[(, ), ), ), {, return, false, ;, }, }, if, (, n, ., isGetProp, (, ), &&, n, ==]
[false, ;, }, }, if, (, n, ., isGetProp, (, ), &&, n, ==, parent, ., getFirstChild, (, ), &&]
[false, ;, }, }, if, (, n, ., isGetProp, (, ), &&, n, ==, parent, ., getFirstChild, (, ), &&]
[if, (, n, ., isGetProp, (, ), &&, n, ==, parent, ., getFirstChild, (, ), &&, NodeUtil, ., isAssignmentOp, (]
[(, ), &&, n, ==, parent, ., getFirstChild, (, ), &&, NodeUtil, ., isAssignmentOp, (, parent, ), ), {, return]
[==, parent, ., getFirstChild, (, ), &&, NodeUtil, ., isAssignmentOp, (, parent, ), ), {, return, false, ;, }, return]
[parent, ., getFirstChild, (, ), &&, NodeUtil, ., isAssignmentOp, (, parent, ), ), {, return, false, ;, }, return, !]
[getFirstChild, (, ), &&, NodeUtil, ., isAssignmentOp, (, parent, ), ), {, return, false, ;, }, return, !, canAccessDeprecatedTypes, (]
[}, return, !, canAccessDeprecatedTypes, (, t, ), ;, }, private, boolean, canAccessDeprecatedTypes, (, NodeTraversal, t, ), {, Node, scopeRoot, =]
[}, return, !, canAccessDeprecatedTypes, (, t, ), ;, }, private, boolean, canAccessDeprecatedTypes, (, NodeTraversal, t, ), {, Node, scopeRoot, =]
[private, boolean, canAccessDeprecatedTypes, (, NodeTraversal, t, ), {, Node, scopeRoot, =, t, ., getScopeRoot, (, ), ;, Node, scopeRootParent, =]
[private, boolean, canAccessDeprecatedTypes, (, NodeTraversal, t, ), {, Node, scopeRoot, =, t, ., getScopeRoot, (, ), ;, Node, scopeRootParent, =]
[{, Node, scopeRoot, =, t, ., getScopeRoot, (, ), ;, Node, scopeRootParent, =, scopeRoot, ., getParent, (, ), ;, return]
[{, Node, scopeRoot, =, t, ., getScopeRoot, (, ), ;, Node, scopeRootParent, =, scopeRoot, ., getParent, (, ), ;, return]
[{, Node, scopeRoot, =, t, ., getScopeRoot, (, ), ;, Node, scopeRootParent, =, scopeRoot, ., getParent, (, ), ;, return]
[Node, scopeRoot, =, t, ., getScopeRoot, (, ), ;, Node, scopeRootParent, =, scopeRoot, ., getParent, (, ), ;, return, (]
[Node, scopeRoot, =, t, ., getScopeRoot, (, ), ;, Node, scopeRootParent, =, scopeRoot, ., getParent, (, ), ;, return, (]
[=, t, ., getScopeRoot, (, ), ;, Node, scopeRootParent, =, scopeRoot, ., getParent, (, ), ;, return, (, deprecatedDepth, >]
[getScopeRoot, (, ), ;, Node, scopeRootParent, =, scopeRoot, ., getParent, (, ), ;, return, (, deprecatedDepth, >, 0, ), ||]
[(, ), ;, Node, scopeRootParent, =, scopeRoot, ., getParent, (, ), ;, return, (, deprecatedDepth, >, 0, ), ||, (]
[(, ), ;, Node, scopeRootParent, =, scopeRoot, ., getParent, (, ), ;, return, (, deprecatedDepth, >, 0, ), ||, (]
[;, Node, scopeRootParent, =, scopeRoot, ., getParent, (, ), ;, return, (, deprecatedDepth, >, 0, ), ||, (, getTypeDeprecationInfo, (]
[;, Node, scopeRootParent, =, scopeRoot, ., getParent, (, ), ;, return, (, deprecatedDepth, >, 0, ), ||, (, getTypeDeprecationInfo, (]
[;, Node, scopeRootParent, =, scopeRoot, ., getParent, (, ), ;, return, (, deprecatedDepth, >, 0, ), ||, (, getTypeDeprecationInfo, (]
[(, deprecatedDepth, >, 0, ), ||, (, getTypeDeprecationInfo, (, t, ., getScope, (, ), ., getTypeOfThis, (, ), ), !=]
[0, ), ||, (, getTypeDeprecationInfo, (, t, ., getScope, (, ), ., getTypeOfThis, (, ), ), !=, null, ), ||]
[), ||, (, getTypeDeprecationInfo, (, t, ., getScope, (, ), ., getTypeOfThis, (, ), ), !=, null, ), ||, (]
[), ||, (, getTypeDeprecationInfo, (, t, ., getScope, (, ), ., getTypeOfThis, (, ), ), !=, null, ), ||, (]
[), ||, (, getTypeDeprecationInfo, (, t, ., getScope, (, ), ., getTypeOfThis, (, ), ), !=, null, ), ||, (]
[), ||, (, getTypeDeprecationInfo, (, t, ., getScope, (, ), ., getTypeOfThis, (, ), ), !=, null, ), ||, (]
[(, getTypeDeprecationInfo, (, t, ., getScope, (, ), ., getTypeOfThis, (, ), ), !=, null, ), ||, (, scopeRootParent, !=]
[(, t, ., getScope, (, ), ., getTypeOfThis, (, ), ), !=, null, ), ||, (, scopeRootParent, !=, null, &&]
[(, t, ., getScope, (, ), ., getTypeOfThis, (, ), ), !=, null, ), ||, (, scopeRootParent, !=, null, &&]
[., getTypeOfThis, (, ), ), !=, null, ), ||, (, scopeRootParent, !=, null, &&, scopeRootParent, ., isAssign, (, ), &&]
[., getTypeOfThis, (, ), ), !=, null, ), ||, (, scopeRootParent, !=, null, &&, scopeRootParent, ., isAssign, (, ), &&]
[(, ), ), !=, null, ), ||, (, scopeRootParent, !=, null, &&, scopeRootParent, ., isAssign, (, ), &&, getTypeDeprecationInfo, (]
[), !=, null, ), ||, (, scopeRootParent, !=, null, &&, scopeRootParent, ., isAssign, (, ), &&, getTypeDeprecationInfo, (, getClassOfMethod, (]
[null, ), ||, (, scopeRootParent, !=, null, &&, scopeRootParent, ., isAssign, (, ), &&, getTypeDeprecationInfo, (, getClassOfMethod, (, scopeRoot, ,]
[scopeRootParent, !=, null, &&, scopeRootParent, ., isAssign, (, ), &&, getTypeDeprecationInfo, (, getClassOfMethod, (, scopeRoot, ,, scopeRootParent, ), ), !=]
[), !=, null, ), ;, }, private, static, boolean, isDeprecatedFunction, (, Node, n, ,, Node, parent, ), {, if, (]
[), !=, null, ), ;, }, private, static, boolean, isDeprecatedFunction, (, Node, n, ,, Node, parent, ), {, if, (]
[(, Node, n, ,, Node, parent, ), {, if, (, n, ., isFunction, (, ), ), {, JSType, type, =]
[(, Node, n, ,, Node, parent, ), {, if, (, n, ., isFunction, (, ), ), {, JSType, type, =]
[if, (, n, ., isFunction, (, ), ), {, JSType, type, =, n, ., getJSType, (, ), ;, if, (]
[if, (, n, ., isFunction, (, ), ), {, JSType, type, =, n, ., getJSType, (, ), ;, if, (]
[n, ., isFunction, (, ), ), {, JSType, type, =, n, ., getJSType, (, ), ;, if, (, type, !=]
[), ), {, JSType, type, =, n, ., getJSType, (, ), ;, if, (, type, !=, null, ), {, return]
[), ), {, JSType, type, =, n, ., getJSType, (, ), ;, if, (, type, !=, null, ), {, return]
[{, JSType, type, =, n, ., getJSType, (, ), ;, if, (, type, !=, null, ), {, return, getTypeDeprecationInfo, (]
[=, n, ., getJSType, (, ), ;, if, (, type, !=, null, ), {, return, getTypeDeprecationInfo, (, type, ), !=]
[), ;, if, (, type, !=, null, ), {, return, getTypeDeprecationInfo, (, type, ), !=, null, ;, }, }, return]
[!=, null, ;, }, }, return, false, ;, }, private, static, String, getTypeDeprecationInfo, (, JSType, type, ), {, if, (]
[!=, null, ;, }, }, return, false, ;, }, private, static, String, getTypeDeprecationInfo, (, JSType, type, ), {, if, (]
[;, }, }, return, false, ;, }, private, static, String, getTypeDeprecationInfo, (, JSType, type, ), {, if, (, type, ==]
[false, ;, }, private, static, String, getTypeDeprecationInfo, (, JSType, type, ), {, if, (, type, ==, null, ), {, return]
[getTypeDeprecationInfo, (, JSType, type, ), {, if, (, type, ==, null, ), {, return, null, ;, }, JSDocInfo, info, =]
[getTypeDeprecationInfo, (, JSType, type, ), {, if, (, type, ==, null, ), {, return, null, ;, }, JSDocInfo, info, =]
[type, ==, null, ), {, return, null, ;, }, JSDocInfo, info, =, type, ., getJSDocInfo, (, ), ;, if, (]
[type, ==, null, ), {, return, null, ;, }, JSDocInfo, info, =, type, ., getJSDocInfo, (, ), ;, if, (]
[type, ==, null, ), {, return, null, ;, }, JSDocInfo, info, =, type, ., getJSDocInfo, (, ), ;, if, (]
[null, ), {, return, null, ;, }, JSDocInfo, info, =, type, ., getJSDocInfo, (, ), ;, if, (, info, !=]
[{, return, null, ;, }, JSDocInfo, info, =, type, ., getJSDocInfo, (, ), ;, if, (, info, !=, null, &&]
[{, return, null, ;, }, JSDocInfo, info, =, type, ., getJSDocInfo, (, ), ;, if, (, info, !=, null, &&]
[., getJSDocInfo, (, ), ;, if, (, info, !=, null, &&, info, ., isDeprecated, (, ), ), {, if, (]
[., getJSDocInfo, (, ), ;, if, (, info, !=, null, &&, info, ., isDeprecated, (, ), ), {, if, (]
[., getJSDocInfo, (, ), ;, if, (, info, !=, null, &&, info, ., isDeprecated, (, ), ), {, if, (]
[(, info, !=, null, &&, info, ., isDeprecated, (, ), ), {, if, (, info, ., getDeprecationReason, (, ), !=]
[&&, info, ., isDeprecated, (, ), ), {, if, (, info, ., getDeprecationReason, (, ), !=, null, ), {, return]
[&&, info, ., isDeprecated, (, ), ), {, if, (, info, ., getDeprecationReason, (, ), !=, null, ), {, return]
[if, (, info, ., getDeprecationReason, (, ), !=, null, ), {, return, info, ., getDeprecationReason, (, ), ;, }, return]
[), !=, null, ), {, return, info, ., getDeprecationReason, (, ), ;, }, return, "", ;, }, ObjectType, objType, =]
[), !=, null, ), {, return, info, ., getDeprecationReason, (, ), ;, }, return, "", ;, }, ObjectType, objType, =]
[{, return, info, ., getDeprecationReason, (, ), ;, }, return, "", ;, }, ObjectType, objType, =, ObjectType, ., cast, (]
[(, ), ;, }, return, "", ;, }, ObjectType, objType, =, ObjectType, ., cast, (, type, ), ;, if, (]
[(, ), ;, }, return, "", ;, }, ObjectType, objType, =, ObjectType, ., cast, (, type, ), ;, if, (]
[;, }, return, "", ;, }, ObjectType, objType, =, ObjectType, ., cast, (, type, ), ;, if, (, objType, !=]
[ObjectType, objType, =, ObjectType, ., cast, (, type, ), ;, if, (, objType, !=, null, ), {, ObjectType, implicitProto, =]
[ObjectType, objType, =, ObjectType, ., cast, (, type, ), ;, if, (, objType, !=, null, ), {, ObjectType, implicitProto, =]
[), ;, if, (, objType, !=, null, ), {, ObjectType, implicitProto, =, objType, ., getImplicitPrototype, (, ), ;, if, (]
[), ;, if, (, objType, !=, null, ), {, ObjectType, implicitProto, =, objType, ., getImplicitPrototype, (, ), ;, if, (]
[if, (, objType, !=, null, ), {, ObjectType, implicitProto, =, objType, ., getImplicitPrototype, (, ), ;, if, (, implicitProto, !=]
[null, ), {, ObjectType, implicitProto, =, objType, ., getImplicitPrototype, (, ), ;, if, (, implicitProto, !=, null, ), {, return]
[{, ObjectType, implicitProto, =, objType, ., getImplicitPrototype, (, ), ;, if, (, implicitProto, !=, null, ), {, return, getTypeDeprecationInfo, (]
[getImplicitPrototype, (, ), ;, if, (, implicitProto, !=, null, ), {, return, getTypeDeprecationInfo, (, implicitProto, ), ;, }, }, return]
[}, return, null, ;, }, private, static, boolean, isPropertyDeclaredConstant, (, ObjectType, objectType, ,, String, prop, ), {, for, (, ;]
[}, return, null, ;, }, private, static, boolean, isPropertyDeclaredConstant, (, ObjectType, objectType, ,, String, prop, ), {, for, (, ;]
[}, return, null, ;, }, private, static, boolean, isPropertyDeclaredConstant, (, ObjectType, objectType, ,, String, prop, ), {, for, (, ;]
[null, ;, }, private, static, boolean, isPropertyDeclaredConstant, (, ObjectType, objectType, ,, String, prop, ), {, for, (, ;, objectType, !=]
[}, private, static, boolean, isPropertyDeclaredConstant, (, ObjectType, objectType, ,, String, prop, ), {, for, (, ;, objectType, !=, null, &&]
[}, private, static, boolean, isPropertyDeclaredConstant, (, ObjectType, objectType, ,, String, prop, ), {, for, (, ;, objectType, !=, null, &&]
[ObjectType, objectType, ,, String, prop, ), {, for, (, ;, objectType, !=, null, &&, objectType, ., hasReferenceName, (, ), ;]
[,, String, prop, ), {, for, (, ;, objectType, !=, null, &&, objectType, ., hasReferenceName, (, ), ;, objectType, =]
[,, String, prop, ), {, for, (, ;, objectType, !=, null, &&, objectType, ., hasReferenceName, (, ), ;, objectType, =]
[null, &&, objectType, ., hasReferenceName, (, ), ;, objectType, =, objectType, ., getImplicitPrototype, (, ), ), {, JSDocInfo, docInfo, =]
[null, &&, objectType, ., hasReferenceName, (, ), ;, objectType, =, objectType, ., getImplicitPrototype, (, ), ), {, JSDocInfo, docInfo, =]
[hasReferenceName, (, ), ;, objectType, =, objectType, ., getImplicitPrototype, (, ), ), {, JSDocInfo, docInfo, =, objectType, ., getOwnPropertyJSDocInfo, (]
[=, objectType, ., getImplicitPrototype, (, ), ), {, JSDocInfo, docInfo, =, objectType, ., getOwnPropertyJSDocInfo, (, prop, ), ;, if, (]
[=, objectType, ., getImplicitPrototype, (, ), ), {, JSDocInfo, docInfo, =, objectType, ., getOwnPropertyJSDocInfo, (, prop, ), ;, if, (]
[=, objectType, ., getImplicitPrototype, (, ), ), {, JSDocInfo, docInfo, =, objectType, ., getOwnPropertyJSDocInfo, (, prop, ), ;, if, (]
[., getImplicitPrototype, (, ), ), {, JSDocInfo, docInfo, =, objectType, ., getOwnPropertyJSDocInfo, (, prop, ), ;, if, (, docInfo, !=]
[(, ), ), {, JSDocInfo, docInfo, =, objectType, ., getOwnPropertyJSDocInfo, (, prop, ), ;, if, (, docInfo, !=, null, &&]
[(, ), ), {, JSDocInfo, docInfo, =, objectType, ., getOwnPropertyJSDocInfo, (, prop, ), ;, if, (, docInfo, !=, null, &&]
[., getOwnPropertyJSDocInfo, (, prop, ), ;, if, (, docInfo, !=, null, &&, docInfo, ., isConstant, (, ), ), {, return]
[;, if, (, docInfo, !=, null, &&, docInfo, ., isConstant, (, ), ), {, return, true, ;, }, }, return]
[}, return, false, ;, }, private, static, String, getPropertyDeprecationInfo, (, ObjectType, type, ,, String, prop, ), {, JSDocInfo, info, =]
[}, return, false, ;, }, private, static, String, getPropertyDeprecationInfo, (, ObjectType, type, ,, String, prop, ), {, JSDocInfo, info, =]
[}, private, static, String, getPropertyDeprecationInfo, (, ObjectType, type, ,, String, prop, ), {, JSDocInfo, info, =, type, ., getOwnPropertyJSDocInfo, (]
[(, ObjectType, type, ,, String, prop, ), {, JSDocInfo, info, =, type, ., getOwnPropertyJSDocInfo, (, prop, ), ;, if, (]
[(, ObjectType, type, ,, String, prop, ), {, JSDocInfo, info, =, type, ., getOwnPropertyJSDocInfo, (, prop, ), ;, if, (]
[(, ObjectType, type, ,, String, prop, ), {, JSDocInfo, info, =, type, ., getOwnPropertyJSDocInfo, (, prop, ), ;, if, (]
[type, ,, String, prop, ), {, JSDocInfo, info, =, type, ., getOwnPropertyJSDocInfo, (, prop, ), ;, if, (, info, !=]
[String, prop, ), {, JSDocInfo, info, =, type, ., getOwnPropertyJSDocInfo, (, prop, ), ;, if, (, info, !=, null, &&]
[String, prop, ), {, JSDocInfo, info, =, type, ., getOwnPropertyJSDocInfo, (, prop, ), ;, if, (, info, !=, null, &&]
[getOwnPropertyJSDocInfo, (, prop, ), ;, if, (, info, !=, null, &&, info, ., isDeprecated, (, ), ), {, if, (]
[getOwnPropertyJSDocInfo, (, prop, ), ;, if, (, info, !=, null, &&, info, ., isDeprecated, (, ), ), {, if, (]
[getOwnPropertyJSDocInfo, (, prop, ), ;, if, (, info, !=, null, &&, info, ., isDeprecated, (, ), ), {, if, (]
[(, info, !=, null, &&, info, ., isDeprecated, (, ), ), {, if, (, info, ., getDeprecationReason, (, ), !=]
[&&, info, ., isDeprecated, (, ), ), {, if, (, info, ., getDeprecationReason, (, ), !=, null, ), {, return]
[&&, info, ., isDeprecated, (, ), ), {, if, (, info, ., getDeprecationReason, (, ), !=, null, ), {, return]
[if, (, info, ., getDeprecationReason, (, ), !=, null, ), {, return, info, ., getDeprecationReason, (, ), ;, }, return]
[), !=, null, ), {, return, info, ., getDeprecationReason, (, ), ;, }, return, "", ;, }, ObjectType, implicitProto, =]
[), !=, null, ), {, return, info, ., getDeprecationReason, (, ), ;, }, return, "", ;, }, ObjectType, implicitProto, =]
[getDeprecationReason, (, ), ;, }, return, "", ;, }, ObjectType, implicitProto, =, type, ., getImplicitPrototype, (, ), ;, if, (]
[getDeprecationReason, (, ), ;, }, return, "", ;, }, ObjectType, implicitProto, =, type, ., getImplicitPrototype, (, ), ;, if, (]
[), ;, }, return, "", ;, }, ObjectType, implicitProto, =, type, ., getImplicitPrototype, (, ), ;, if, (, implicitProto, !=]
["", ;, }, ObjectType, implicitProto, =, type, ., getImplicitPrototype, (, ), ;, if, (, implicitProto, !=, null, ), {, return]
[}, ObjectType, implicitProto, =, type, ., getImplicitPrototype, (, ), ;, if, (, implicitProto, !=, null, ), {, return, getPropertyDeprecationInfo, (]
[implicitProto, =, type, ., getImplicitPrototype, (, ), ;, if, (, implicitProto, !=, null, ), {, return, getPropertyDeprecationInfo, (, implicitProto, ,]
[(, ), ;, if, (, implicitProto, !=, null, ), {, return, getPropertyDeprecationInfo, (, implicitProto, ,, prop, ), ;, }, return]
[implicitProto, ,, prop, ), ;, }, return, null, ;, }, private, static, JSType, dereference, (, JSType, type, ), {, return]
[implicitProto, ,, prop, ), ;, }, return, null, ;, }, private, static, JSType, dereference, (, JSType, type, ), {, return]
[implicitProto, ,, prop, ), ;, }, return, null, ;, }, private, static, JSType, dereference, (, JSType, type, ), {, return]
[prop, ), ;, }, return, null, ;, }, private, static, JSType, dereference, (, JSType, type, ), {, return, type, ==]
[;, }, return, null, ;, }, private, static, JSType, dereference, (, JSType, type, ), {, return, type, ==, null, ?]
[return, null, ;, }, private, static, JSType, dereference, (, JSType, type, ), {, return, type, ==, null, ?, null, :]
[return, null, ;, }, private, static, JSType, dereference, (, JSType, type, ), {, return, type, ==, null, ?, null, :]
[?, null, :, type, ., dereference, (, ), ;, }, private, JSType, getFinalParentClass, (, JSType, type, ), {, if, (]
[?, null, :, type, ., dereference, (, ), ;, }, private, JSType, getFinalParentClass, (, JSType, type, ), {, if, (]
[:, type, ., dereference, (, ), ;, }, private, JSType, getFinalParentClass, (, JSType, type, ), {, if, (, type, !=]
[;, }, private, JSType, getFinalParentClass, (, JSType, type, ), {, if, (, type, !=, null, ), {, ObjectType, iproto, =]
[;, }, private, JSType, getFinalParentClass, (, JSType, type, ), {, if, (, type, !=, null, ), {, ObjectType, iproto, =]
[;, }, private, JSType, getFinalParentClass, (, JSType, type, ), {, if, (, type, !=, null, ), {, ObjectType, iproto, =]
[getFinalParentClass, (, JSType, type, ), {, if, (, type, !=, null, ), {, ObjectType, iproto, =, ObjectType, ., cast, (]
[!=, null, ), {, ObjectType, iproto, =, ObjectType, ., cast, (, type, ), ., getImplicitPrototype, (, ), ;, while, (]
[!=, null, ), {, ObjectType, iproto, =, ObjectType, ., cast, (, type, ), ., getImplicitPrototype, (, ), ;, while, (]
[!=, null, ), {, ObjectType, iproto, =, ObjectType, ., cast, (, type, ), ., getImplicitPrototype, (, ), ;, while, (]
[), {, ObjectType, iproto, =, ObjectType, ., cast, (, type, ), ., getImplicitPrototype, (, ), ;, while, (, iproto, !=]
[ObjectType, iproto, =, ObjectType, ., cast, (, type, ), ., getImplicitPrototype, (, ), ;, while, (, iproto, !=, null, &&]
[ObjectType, iproto, =, ObjectType, ., cast, (, type, ), ., getImplicitPrototype, (, ), ;, while, (, iproto, !=, null, &&]
[ObjectType, iproto, =, ObjectType, ., cast, (, type, ), ., getImplicitPrototype, (, ), ;, while, (, iproto, !=, null, &&]
[(, type, ), ., getImplicitPrototype, (, ), ;, while, (, iproto, !=, null, &&, iproto, ., getConstructor, (, ), ==]
[., getImplicitPrototype, (, ), ;, while, (, iproto, !=, null, &&, iproto, ., getConstructor, (, ), ==, null, ), {]
[(, ), ;, while, (, iproto, !=, null, &&, iproto, ., getConstructor, (, ), ==, null, ), {, iproto, =]
[(, ), ;, while, (, iproto, !=, null, &&, iproto, ., getConstructor, (, ), ==, null, ), {, iproto, =]
[iproto, ., getConstructor, (, ), ==, null, ), {, iproto, =, iproto, ., getImplicitPrototype, (, ), ;, }, if, (]
[iproto, ., getConstructor, (, ), ==, null, ), {, iproto, =, iproto, ., getImplicitPrototype, (, ), ;, }, if, (]
[getConstructor, (, ), ==, null, ), {, iproto, =, iproto, ., getImplicitPrototype, (, ), ;, }, if, (, iproto, !=]
[{, iproto, =, iproto, ., getImplicitPrototype, (, ), ;, }, if, (, iproto, !=, null, ), {, Node, source, =]
[{, iproto, =, iproto, ., getImplicitPrototype, (, ), ;, }, if, (, iproto, !=, null, ), {, Node, source, =]
[{, iproto, =, iproto, ., getImplicitPrototype, (, ), ;, }, if, (, iproto, !=, null, ), {, Node, source, =]
[!=, null, ), {, Node, source, =, iproto, ., getConstructor, (, ), ., getSource, (, ), ;, JSDocInfo, jsDoc, =]
[!=, null, ), {, Node, source, =, iproto, ., getConstructor, (, ), ., getSource, (, ), ;, JSDocInfo, jsDoc, =]
[!=, null, ), {, Node, source, =, iproto, ., getConstructor, (, ), ., getSource, (, ), ;, JSDocInfo, jsDoc, =]
[), {, Node, source, =, iproto, ., getConstructor, (, ), ., getSource, (, ), ;, JSDocInfo, jsDoc, =, source, !=]
[Node, source, =, iproto, ., getConstructor, (, ), ., getSource, (, ), ;, JSDocInfo, jsDoc, =, source, !=, null, ?]
[Node, source, =, iproto, ., getConstructor, (, ), ., getSource, (, ), ;, JSDocInfo, jsDoc, =, source, !=, null, ?]
[., getConstructor, (, ), ., getSource, (, ), ;, JSDocInfo, jsDoc, =, source, !=, null, ?, NodeUtil, ., getBestJSDocInfo, (]
[), ., getSource, (, ), ;, JSDocInfo, jsDoc, =, source, !=, null, ?, NodeUtil, ., getBestJSDocInfo, (, source, ), :]
[), ;, JSDocInfo, jsDoc, =, source, !=, null, ?, NodeUtil, ., getBestJSDocInfo, (, source, ), :, null, ;, if, (]
[), ;, JSDocInfo, jsDoc, =, source, !=, null, ?, NodeUtil, ., getBestJSDocInfo, (, source, ), :, null, ;, if, (]
[), ;, JSDocInfo, jsDoc, =, source, !=, null, ?, NodeUtil, ., getBestJSDocInfo, (, source, ), :, null, ;, if, (]
[JSDocInfo, jsDoc, =, source, !=, null, ?, NodeUtil, ., getBestJSDocInfo, (, source, ), :, null, ;, if, (, jsDoc, !=]
[=, source, !=, null, ?, NodeUtil, ., getBestJSDocInfo, (, source, ), :, null, ;, if, (, jsDoc, !=, null, &&]
[=, source, !=, null, ?, NodeUtil, ., getBestJSDocInfo, (, source, ), :, null, ;, if, (, jsDoc, !=, null, &&]
[(, source, ), :, null, ;, if, (, jsDoc, !=, null, &&, jsDoc, ., isConstant, (, ), ), {, return]
[if, (, jsDoc, !=, null, &&, jsDoc, ., isConstant, (, ), ), {, return, iproto, ;, }, }, }, return]
