[;, public, class, TaskSeries, extends, Series, {, private, List, tasks, ;, public, TaskSeries, (, String, name, ), {, super, (]
[TaskSeries, extends, Series, {, private, List, tasks, ;, public, TaskSeries, (, String, name, ), {, super, (, name, ), ;]
[TaskSeries, extends, Series, {, private, List, tasks, ;, public, TaskSeries, (, String, name, ), {, super, (, name, ), ;]
[private, List, tasks, ;, public, TaskSeries, (, String, name, ), {, super, (, name, ), ;, this, ., tasks, =]
[new, java, ., util, ., ArrayList, (, ), ;, }, public, void, add, (, Task, task, ), {, if, (]
[new, java, ., util, ., ArrayList, (, ), ;, }, public, void, add, (, Task, task, ), {, if, (]
[., util, ., ArrayList, (, ), ;, }, public, void, add, (, Task, task, ), {, if, (, task, ==]
[(, ), ;, }, public, void, add, (, Task, task, ), {, if, (, task, ==, null, ), {, throw]
[}, public, void, add, (, Task, task, ), {, if, (, task, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, Task, task, ), {, if, (, task, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'task' argument.", ), ;, }]
[(, Task, task, ), {, if, (, task, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'task' argument.", ), ;, }]
[(, Task, task, ), {, if, (, task, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'task' argument.", ), ;, }]
[(, task, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'task' argument.", ), ;, }, this, ., tasks, ., add, (]
[null, ), {, throw, new, IllegalArgumentException, (, "Null 'task' argument.", ), ;, }, this, ., tasks, ., add, (, task, ), ;]
[tasks, ., add, (, task, ), ;, fireSeriesChanged, (, ), ;, }, public, void, remove, (, Task, task, ), {]
[tasks, ., add, (, task, ), ;, fireSeriesChanged, (, ), ;, }, public, void, remove, (, Task, task, ), {]
[tasks, ., add, (, task, ), ;, fireSeriesChanged, (, ), ;, }, public, void, remove, (, Task, task, ), {]
[;, fireSeriesChanged, (, ), ;, }, public, void, remove, (, Task, task, ), {, this, ., tasks, ., remove, (]
[), ;, }, public, void, remove, (, Task, task, ), {, this, ., tasks, ., remove, (, task, ), ;]
[this, ., tasks, ., remove, (, task, ), ;, fireSeriesChanged, (, ), ;, }, public, void, removeAll, (, ), {]
[this, ., tasks, ., remove, (, task, ), ;, fireSeriesChanged, (, ), ;, }, public, void, removeAll, (, ), {]
[this, ., tasks, ., remove, (, task, ), ;, fireSeriesChanged, (, ), ;, }, public, void, removeAll, (, ), {]
[;, fireSeriesChanged, (, ), ;, }, public, void, removeAll, (, ), {, this, ., tasks, ., clear, (, ), ;]
[this, ., tasks, ., clear, (, ), ;, fireSeriesChanged, (, ), ;, }, public, int, getItemCount, (, ), {, return]
[this, ., tasks, ., clear, (, ), ;, fireSeriesChanged, (, ), ;, }, public, int, getItemCount, (, ), {, return]
[this, ., tasks, ., clear, (, ), ;, fireSeriesChanged, (, ), ;, }, public, int, getItemCount, (, ), {, return]
[{, return, this, ., tasks, ., size, (, ), ;, }, public, Task, get, (, int, index, ), {, return]
[., tasks, ., size, (, ), ;, }, public, Task, get, (, int, index, ), {, return, (, Task, )]
[., tasks, ., size, (, ), ;, }, public, Task, get, (, int, index, ), {, return, (, Task, )]
[., tasks, ., size, (, ), ;, }, public, Task, get, (, int, index, ), {, return, (, Task, )]
[;, }, public, Task, get, (, int, index, ), {, return, (, Task, ), this, ., tasks, ., get, (]
[., tasks, ., get, (, index, ), ;, }, public, Task, get, (, String, description, ), {, Task, result, =]
[index, ), ;, }, public, Task, get, (, String, description, ), {, Task, result, =, null, ;, int, count, =]
[index, ), ;, }, public, Task, get, (, String, description, ), {, Task, result, =, null, ;, int, count, =]
[index, ), ;, }, public, Task, get, (, String, description, ), {, Task, result, =, null, ;, int, count, =]
[result, =, null, ;, int, count, =, this, ., tasks, ., size, (, ), ;, for, (, int, i, =]
[null, ;, int, count, =, this, ., tasks, ., size, (, ), ;, for, (, int, i, =, 0, ;]
[null, ;, int, count, =, this, ., tasks, ., size, (, ), ;, for, (, int, i, =, 0, ;]
[int, count, =, this, ., tasks, ., size, (, ), ;, for, (, int, i, =, 0, ;, i, <]
[=, this, ., tasks, ., size, (, ), ;, for, (, int, i, =, 0, ;, i, <, count, ;]
[=, this, ., tasks, ., size, (, ), ;, for, (, int, i, =, 0, ;, i, <, count, ;]
[), ;, for, (, int, i, =, 0, ;, i, <, count, ;, i, ++, ), {, Task, t, =]
[(, int, i, =, 0, ;, i, <, count, ;, i, ++, ), {, Task, t, =, (, Task, )]
[(, int, i, =, 0, ;, i, <, count, ;, i, ++, ), {, Task, t, =, (, Task, )]
[(, int, i, =, 0, ;, i, <, count, ;, i, ++, ), {, Task, t, =, (, Task, )]
[i, <, count, ;, i, ++, ), {, Task, t, =, (, Task, ), this, ., tasks, ., get, (]
[++, ), {, Task, t, =, (, Task, ), this, ., tasks, ., get, (, i, ), ;, if, (]
[++, ), {, Task, t, =, (, Task, ), this, ., tasks, ., get, (, i, ), ;, if, (]
[++, ), {, Task, t, =, (, Task, ), this, ., tasks, ., get, (, i, ), ;, if, (]
[), this, ., tasks, ., get, (, i, ), ;, if, (, t, ., getDescription, (, ), ., equals, (]
[., get, (, i, ), ;, if, (, t, ., getDescription, (, ), ., equals, (, description, ), ), {]
[(, i, ), ;, if, (, t, ., getDescription, (, ), ., equals, (, description, ), ), {, result, =]
[., getDescription, (, ), ., equals, (, description, ), ), {, result, =, t, ;, break, ;, }, }, return]
[{, result, =, t, ;, break, ;, }, }, return, result, ;, }, public, List, getTasks, (, ), {, return]
[{, result, =, t, ;, break, ;, }, }, return, result, ;, }, public, List, getTasks, (, ), {, return]
[;, break, ;, }, }, return, result, ;, }, public, List, getTasks, (, ), {, return, Collections, ., unmodifiableList, (]
[;, break, ;, }, }, return, result, ;, }, public, List, getTasks, (, ), {, return, Collections, ., unmodifiableList, (]
[Collections, ., unmodifiableList, (, this, ., tasks, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[Collections, ., unmodifiableList, (, this, ., tasks, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[unmodifiableList, (, this, ., tasks, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[tasks, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, TaskSeries, ), ), {, return]
[return, true, ;, }, if, (, !, (, obj, instanceof, TaskSeries, ), ), {, return, false, ;, }, if, (]
[true, ;, }, if, (, !, (, obj, instanceof, TaskSeries, ), ), {, return, false, ;, }, if, (, !]
[true, ;, }, if, (, !, (, obj, instanceof, TaskSeries, ), ), {, return, false, ;, }, if, (, !]
[(, !, (, obj, instanceof, TaskSeries, ), ), {, return, false, ;, }, if, (, !, super, ., equals, (]
[TaskSeries, ), ), {, return, false, ;, }, if, (, !, super, ., equals, (, obj, ), ), {, return]
[;, }, if, (, !, super, ., equals, (, obj, ), ), {, return, false, ;, }, TaskSeries, that, =]
[(, !, super, ., equals, (, obj, ), ), {, return, false, ;, }, TaskSeries, that, =, (, TaskSeries, )]
[equals, (, obj, ), ), {, return, false, ;, }, TaskSeries, that, =, (, TaskSeries, ), obj, ;, if, (]
[(, obj, ), ), {, return, false, ;, }, TaskSeries, that, =, (, TaskSeries, ), obj, ;, if, (, !]
[(, obj, ), ), {, return, false, ;, }, TaskSeries, that, =, (, TaskSeries, ), obj, ;, if, (, !]
[(, obj, ), ), {, return, false, ;, }, TaskSeries, that, =, (, TaskSeries, ), obj, ;, if, (, !]
[false, ;, }, TaskSeries, that, =, (, TaskSeries, ), obj, ;, if, (, !, this, ., tasks, ., equals, (]
[false, ;, }, TaskSeries, that, =, (, TaskSeries, ), obj, ;, if, (, !, this, ., tasks, ., equals, (]
[TaskSeries, ), obj, ;, if, (, !, this, ., tasks, ., equals, (, that, ., tasks, ), ), {, return]
[if, (, !, this, ., tasks, ., equals, (, that, ., tasks, ), ), {, return, false, ;, }, return]
[{, return, false, ;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, TaskSeries, clone, =]
[;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, TaskSeries, clone, =, (, TaskSeries, )]
[;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, TaskSeries, clone, =, (, TaskSeries, )]
[public, Object, clone, (, ), throws, CloneNotSupportedException, {, TaskSeries, clone, =, (, TaskSeries, ), super, ., clone, (, ), ;]
[public, Object, clone, (, ), throws, CloneNotSupportedException, {, TaskSeries, clone, =, (, TaskSeries, ), super, ., clone, (, ), ;]
[), throws, CloneNotSupportedException, {, TaskSeries, clone, =, (, TaskSeries, ), super, ., clone, (, ), ;, clone, ., tasks, =]
[{, TaskSeries, clone, =, (, TaskSeries, ), super, ., clone, (, ), ;, clone, ., tasks, =, (, List, )]
[{, TaskSeries, clone, =, (, TaskSeries, ), super, ., clone, (, ), ;, clone, ., tasks, =, (, List, )]
[(, TaskSeries, ), super, ., clone, (, ), ;, clone, ., tasks, =, (, List, ), ObjectUtilities, ., deepClone, (]
[(, TaskSeries, ), super, ., clone, (, ), ;, clone, ., tasks, =, (, List, ), ObjectUtilities, ., deepClone, (]
[(, ), ;, clone, ., tasks, =, (, List, ), ObjectUtilities, ., deepClone, (, this, ., tasks, ), ;, return]
