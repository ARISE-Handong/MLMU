[=, new, java, ., util, ., ArrayList, (, ), ;, this, ., seriesList, =, new, java, ., util, ., ArrayList]
[., seriesKeys, =, new, java, ., util, ., ArrayList, (, ), ;, this, ., seriesList, =, new, java, ., util]
[;, this, ., seriesList, =, new, java, ., util, ., ArrayList, (, ), ;, }, public, int, getSeriesCount, (, )]
[=, new, java, ., util, ., ArrayList, (, ), ;, }, public, int, getSeriesCount, (, ), {, return, this, .]
[., seriesList, =, new, java, ., util, ., ArrayList, (, ), ;, }, public, int, getSeriesCount, (, ), {, return]
[;, }, public, int, getSeriesCount, (, ), {, return, this, ., seriesList, ., size, (, ), ;, }, public, Comparable]
[;, }, public, Comparable, getSeriesKey, (, int, series, ), {, if, (, (, series, <, 0, ), ||, (, series]
[., size, (, ), ;, }, public, Comparable, getSeriesKey, (, int, series, ), {, if, (, (, series, <, 0]
[., seriesList, ., size, (, ), ;, }, public, Comparable, getSeriesKey, (, int, series, ), {, if, (, (, series]
[), {, throw, new, IllegalArgumentException, (, "Series index out of bounds", ), ;, }, return, (, Comparable, ), this, ., seriesKeys, ., get, (]
[||, (, series, >=, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (, "Series index out of bounds", ), ;, }, return, (]
[), ||, (, series, >=, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (, "Series index out of bounds", ), ;, }, return]
[<, 0, ), ||, (, series, >=, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (, "Series index out of bounds", ), ;]
[), ||, (, series, >=, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (, "Series index out of bounds", ), ;, }, return]
[), {, throw, new, IllegalArgumentException, (, "Series index out of bounds", ), ;, }, return, (, Comparable, ), this, ., seriesKeys, ., get, (]
[), ), {, throw, new, IllegalArgumentException, (, "Series index out of bounds", ), ;, }, return, (, Comparable, ), this, ., seriesKeys, ., get]
[>=, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (, "Series index out of bounds", ), ;, }, return, (, Comparable, ), this]
[), ), {, throw, new, IllegalArgumentException, (, "Series index out of bounds", ), ;, }, return, (, Comparable, ), this, ., seriesKeys, ., get]
[;, }, return, (, Comparable, ), this, ., seriesKeys, ., get, (, series, ), ;, }, public, int, getItemCount, (]
[), ;, }, return, (, Comparable, ), this, ., seriesKeys, ., get, (, series, ), ;, }, public, int, getItemCount]
[;, }, public, int, getItemCount, (, int, series, ), {, if, (, (, series, <, 0, ), ||, (, series]
[;, }, public, int, getItemCount, (, int, series, ), {, if, (, (, series, <, 0, ), ||, (, series]
[., get, (, series, ), ;, }, public, int, getItemCount, (, int, series, ), {, if, (, (, series, <]
[., seriesKeys, ., get, (, series, ), ;, }, public, int, getItemCount, (, int, series, ), {, if, (, (]
[), ;, }, public, int, getItemCount, (, int, series, ), {, if, (, (, series, <, 0, ), ||, (]
[), {, throw, new, IllegalArgumentException, (, "Series index out of bounds", ), ;, }, double, [, ], [, ], seriesArray, =, (, double, []
[||, (, series, >=, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (, "Series index out of bounds", ), ;, }, double, []
[), ||, (, series, >=, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (, "Series index out of bounds", ), ;, }, double]
[<, 0, ), ||, (, series, >=, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (, "Series index out of bounds", ), ;]
[), ||, (, series, >=, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (, "Series index out of bounds", ), ;, }, double]
[), {, throw, new, IllegalArgumentException, (, "Series index out of bounds", ), ;, }, double, [, ], [, ], seriesArray, =, (, double, []
[), ), {, throw, new, IllegalArgumentException, (, "Series index out of bounds", ), ;, }, double, [, ], [, ], seriesArray, =, (, double]
[>=, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (, "Series index out of bounds", ), ;, }, double, [, ], [, ]]
[), ), {, throw, new, IllegalArgumentException, (, "Series index out of bounds", ), ;, }, double, [, ], [, ], seriesArray, =, (, double]
[;, }, double, [, ], [, ], seriesArray, =, (, double, [, ], [, ], ), this, ., seriesList, .]
[), ;, }, double, [, ], [, ], seriesArray, =, (, double, [, ], [, ], ), this, ., seriesList]
[;, return, seriesArray, [, 0, ], ., length, ;, }, public, double, getXValue, (, int, series, ,, int, item, )]
[;, return, seriesArray, [, 0, ], ., length, ;, }, public, double, getXValue, (, int, series, ,, int, item, )]
[., get, (, series, ), ;, return, seriesArray, [, 0, ], ., length, ;, }, public, double, getXValue, (, int]
[., seriesList, ., get, (, series, ), ;, return, seriesArray, [, 0, ], ., length, ;, }, public, double, getXValue]
[), ;, return, seriesArray, [, 0, ], ., length, ;, }, public, double, getXValue, (, int, series, ,, int, item]
[;, }, public, double, getXValue, (, int, series, ,, int, item, ), {, double, [, ], [, ], seriesData, =]
[., length, ;, }, public, double, getXValue, (, int, series, ,, int, item, ), {, double, [, ], [, ]]
[[, 0, ], ., length, ;, }, public, double, getXValue, (, int, series, ,, int, item, ), {, double, []
[], ., length, ;, }, public, double, getXValue, (, int, series, ,, int, item, ), {, double, [, ], []
[;, return, seriesData, [, 0, ], [, item, ], ;, }, public, double, getYValue, (, int, series, ,, int, item]
[;, return, seriesData, [, 0, ], [, item, ], ;, }, public, double, getYValue, (, int, series, ,, int, item]
[., get, (, series, ), ;, return, seriesData, [, 0, ], [, item, ], ;, }, public, double, getYValue, (]
[., seriesList, ., get, (, series, ), ;, return, seriesData, [, 0, ], [, item, ], ;, }, public, double]
[), ;, return, seriesData, [, 0, ], [, item, ], ;, }, public, double, getYValue, (, int, series, ,, int]
[;, }, public, double, getYValue, (, int, series, ,, int, item, ), {, double, [, ], [, ], seriesData, =]
[[, item, ], ;, }, public, double, getYValue, (, int, series, ,, int, item, ), {, double, [, ], []
[[, 0, ], [, item, ], ;, }, public, double, getYValue, (, int, series, ,, int, item, ), {, double]
[], [, item, ], ;, }, public, double, getYValue, (, int, series, ,, int, item, ), {, double, [, ]]
[], ;, }, public, double, getYValue, (, int, series, ,, int, item, ), {, double, [, ], [, ], seriesData]
[;, return, seriesData, [, 3, ], [, item, ], ;, }, public, double, getStartXValue, (, int, series, ,, int, item]
[;, return, seriesData, [, 3, ], [, item, ], ;, }, public, double, getStartXValue, (, int, series, ,, int, item]
[., get, (, series, ), ;, return, seriesData, [, 3, ], [, item, ], ;, }, public, double, getStartXValue, (]
[., seriesList, ., get, (, series, ), ;, return, seriesData, [, 3, ], [, item, ], ;, }, public, double]
[), ;, return, seriesData, [, 3, ], [, item, ], ;, }, public, double, getStartXValue, (, int, series, ,, int]
[;, }, public, double, getStartXValue, (, int, series, ,, int, item, ), {, double, [, ], [, ], seriesData, =]
[[, item, ], ;, }, public, double, getStartXValue, (, int, series, ,, int, item, ), {, double, [, ], []
[[, 3, ], [, item, ], ;, }, public, double, getStartXValue, (, int, series, ,, int, item, ), {, double]
[], [, item, ], ;, }, public, double, getStartXValue, (, int, series, ,, int, item, ), {, double, [, ]]
[], ;, }, public, double, getStartXValue, (, int, series, ,, int, item, ), {, double, [, ], [, ], seriesData]
[;, return, seriesData, [, 1, ], [, item, ], ;, }, public, double, getEndXValue, (, int, series, ,, int, item]
[;, return, seriesData, [, 1, ], [, item, ], ;, }, public, double, getEndXValue, (, int, series, ,, int, item]
[., get, (, series, ), ;, return, seriesData, [, 1, ], [, item, ], ;, }, public, double, getEndXValue, (]
[., seriesList, ., get, (, series, ), ;, return, seriesData, [, 1, ], [, item, ], ;, }, public, double]
[), ;, return, seriesData, [, 1, ], [, item, ], ;, }, public, double, getEndXValue, (, int, series, ,, int]
[;, }, public, double, getEndXValue, (, int, series, ,, int, item, ), {, double, [, ], [, ], seriesData, =]
[[, item, ], ;, }, public, double, getEndXValue, (, int, series, ,, int, item, ), {, double, [, ], []
[[, 1, ], [, item, ], ;, }, public, double, getEndXValue, (, int, series, ,, int, item, ), {, double]
[], [, item, ], ;, }, public, double, getEndXValue, (, int, series, ,, int, item, ), {, double, [, ]]
[], ;, }, public, double, getEndXValue, (, int, series, ,, int, item, ), {, double, [, ], [, ], seriesData]
[;, return, seriesData, [, 2, ], [, item, ], ;, }, public, double, getStartYValue, (, int, series, ,, int, item]
[;, return, seriesData, [, 2, ], [, item, ], ;, }, public, double, getStartYValue, (, int, series, ,, int, item]
[., get, (, series, ), ;, return, seriesData, [, 2, ], [, item, ], ;, }, public, double, getStartYValue, (]
[., seriesList, ., get, (, series, ), ;, return, seriesData, [, 2, ], [, item, ], ;, }, public, double]
[), ;, return, seriesData, [, 2, ], [, item, ], ;, }, public, double, getStartYValue, (, int, series, ,, int]
[;, }, public, double, getStartYValue, (, int, series, ,, int, item, ), {, double, [, ], [, ], seriesData, =]
[[, item, ], ;, }, public, double, getStartYValue, (, int, series, ,, int, item, ), {, double, [, ], []
[[, 2, ], [, item, ], ;, }, public, double, getStartYValue, (, int, series, ,, int, item, ), {, double]
[], [, item, ], ;, }, public, double, getStartYValue, (, int, series, ,, int, item, ), {, double, [, ]]
[], ;, }, public, double, getStartYValue, (, int, series, ,, int, item, ), {, double, [, ], [, ], seriesData]
[;, return, seriesData, [, 4, ], [, item, ], ;, }, public, double, getEndYValue, (, int, series, ,, int, item]
[;, return, seriesData, [, 4, ], [, item, ], ;, }, public, double, getEndYValue, (, int, series, ,, int, item]
[., get, (, series, ), ;, return, seriesData, [, 4, ], [, item, ], ;, }, public, double, getEndYValue, (]
[., seriesList, ., get, (, series, ), ;, return, seriesData, [, 4, ], [, item, ], ;, }, public, double]
[), ;, return, seriesData, [, 4, ], [, item, ], ;, }, public, double, getEndYValue, (, int, series, ,, int]
[;, }, public, double, getEndYValue, (, int, series, ,, int, item, ), {, double, [, ], [, ], seriesData, =]
[[, item, ], ;, }, public, double, getEndYValue, (, int, series, ,, int, item, ), {, double, [, ], []
[[, 4, ], [, item, ], ;, }, public, double, getEndYValue, (, int, series, ,, int, item, ), {, double]
[], [, item, ], ;, }, public, double, getEndYValue, (, int, series, ,, int, item, ), {, double, [, ]]
[], ;, }, public, double, getEndYValue, (, int, series, ,, int, item, ), {, double, [, ], [, ], seriesData]
[;, return, seriesData, [, 5, ], [, item, ], ;, }, public, Number, getEndX, (, int, series, ,, int, item]
[;, return, seriesData, [, 5, ], [, item, ], ;, }, public, Number, getEndX, (, int, series, ,, int, item]
[., get, (, series, ), ;, return, seriesData, [, 5, ], [, item, ], ;, }, public, Number, getEndX, (]
[., seriesList, ., get, (, series, ), ;, return, seriesData, [, 5, ], [, item, ], ;, }, public, Number]
[), ;, return, seriesData, [, 5, ], [, item, ], ;, }, public, Number, getEndX, (, int, series, ,, int]
[;, }, public, Number, getEndX, (, int, series, ,, int, item, ), {, return, new, Double, (, getEndXValue, (, series]
[[, item, ], ;, }, public, Number, getEndX, (, int, series, ,, int, item, ), {, return, new, Double, (]
[[, 5, ], [, item, ], ;, }, public, Number, getEndX, (, int, series, ,, int, item, ), {, return]
[], [, item, ], ;, }, public, Number, getEndX, (, int, series, ,, int, item, ), {, return, new, Double]
[], ;, }, public, Number, getEndX, (, int, series, ,, int, item, ), {, return, new, Double, (, getEndXValue, (]
[;, }, public, Number, getEndY, (, int, series, ,, int, item, ), {, return, new, Double, (, getEndYValue, (, series]
[), ;, }, public, Number, getEndY, (, int, series, ,, int, item, ), {, return, new, Double, (, getEndYValue, (]
[,, item, ), ), ;, }, public, Number, getEndY, (, int, series, ,, int, item, ), {, return, new, Double]
[), ), ;, }, public, Number, getEndY, (, int, series, ,, int, item, ), {, return, new, Double, (, getEndYValue]
[;, }, public, Number, getStartX, (, int, series, ,, int, item, ), {, return, new, Double, (, getStartXValue, (, series]
[), ;, }, public, Number, getStartX, (, int, series, ,, int, item, ), {, return, new, Double, (, getStartXValue, (]
[,, item, ), ), ;, }, public, Number, getStartX, (, int, series, ,, int, item, ), {, return, new, Double]
[), ), ;, }, public, Number, getStartX, (, int, series, ,, int, item, ), {, return, new, Double, (, getStartXValue]
[;, }, public, Number, getStartY, (, int, series, ,, int, item, ), {, return, new, Double, (, getStartYValue, (, series]
[), ;, }, public, Number, getStartY, (, int, series, ,, int, item, ), {, return, new, Double, (, getStartYValue, (]
[,, item, ), ), ;, }, public, Number, getStartY, (, int, series, ,, int, item, ), {, return, new, Double]
[), ), ;, }, public, Number, getStartY, (, int, series, ,, int, item, ), {, return, new, Double, (, getStartYValue]
[;, }, public, Number, getX, (, int, series, ,, int, item, ), {, return, new, Double, (, getXValue, (, series]
[), ;, }, public, Number, getX, (, int, series, ,, int, item, ), {, return, new, Double, (, getXValue, (]
[,, item, ), ), ;, }, public, Number, getX, (, int, series, ,, int, item, ), {, return, new, Double]
[), ), ;, }, public, Number, getX, (, int, series, ,, int, item, ), {, return, new, Double, (, getXValue]
[;, }, public, Number, getY, (, int, series, ,, int, item, ), {, return, new, Double, (, getYValue, (, series]
[), ;, }, public, Number, getY, (, int, series, ,, int, item, ), {, return, new, Double, (, getYValue, (]
[,, item, ), ), ;, }, public, Number, getY, (, int, series, ,, int, item, ), {, return, new, Double]
[), ), ;, }, public, Number, getY, (, int, series, ,, int, item, ), {, return, new, Double, (, getYValue]
[;, }, public, void, addSeries, (, Comparable, seriesKey, ,, double, [, ], [, ], data, ), {, if, (, seriesKey]
[), ;, }, public, void, addSeries, (, Comparable, seriesKey, ,, double, [, ], [, ], data, ), {, if, (]
[,, item, ), ), ;, }, public, void, addSeries, (, Comparable, seriesKey, ,, double, [, ], [, ], data, )]
[), ), ;, }, public, void, addSeries, (, Comparable, seriesKey, ,, double, [, ], [, ], data, ), {, if]
[), {, throw, new, IllegalArgumentException, (, "The 'seriesKey' cannot be null.", ), ;, }, if, (, data, ==, null, ), {, throw, new, IllegalArgumentException]
[==, null, ), {, throw, new, IllegalArgumentException, (, "The 'seriesKey' cannot be null.", ), ;, }, if, (, data, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "The 'seriesKey' cannot be null.", ), ;, }, if, (, data, ==, null, ), {, throw, new, IllegalArgumentException]
[;, }, if, (, data, ==, null, ), {, throw, new, IllegalArgumentException, (, "The 'data' is null.", ), ;, }, if, (, data]
[), ;, }, if, (, data, ==, null, ), {, throw, new, IllegalArgumentException, (, "The 'data' is null.", ), ;, }, if, (]
[), {, throw, new, IllegalArgumentException, (, "The 'data' is null.", ), ;, }, if, (, data, ., length, !=, 6, ), {, throw]
[==, null, ), {, throw, new, IllegalArgumentException, (, "The 'data' is null.", ), ;, }, if, (, data, ., length, !=, 6, )]
[), {, throw, new, IllegalArgumentException, (, "The 'data' is null.", ), ;, }, if, (, data, ., length, !=, 6, ), {, throw]
[;, }, if, (, data, ., length, !=, 6, ), {, throw, new, IllegalArgumentException, (, "The 'data' array must have length == 6.", ), ;, }, int]
[), ;, }, if, (, data, ., length, !=, 6, ), {, throw, new, IllegalArgumentException, (, "The 'data' array must have length == 6.", ), ;, }]
[), {, throw, new, IllegalArgumentException, (, "The 'data' array must have length == 6.", ), ;, }, int, length, =, data, [, 0, ], ., length, ;]
[!=, 6, ), {, throw, new, IllegalArgumentException, (, "The 'data' array must have length == 6.", ), ;, }, int, length, =, data, [, 0, ], .]
[., length, !=, 6, ), {, throw, new, IllegalArgumentException, (, "The 'data' array must have length == 6.", ), ;, }, int, length, =, data, [, 0]
[), {, throw, new, IllegalArgumentException, (, "The 'data' array must have length == 6.", ), ;, }, int, length, =, data, [, 0, ], ., length, ;]
[;, }, int, length, =, data, [, 0, ], ., length, ;, if, (, length, !=, data, [, 1, ]]
[), ;, }, int, length, =, data, [, 0, ], ., length, ;, if, (, length, !=, data, [, 1]
[;, if, (, length, !=, data, [, 1, ], ., length, ||, length, !=, data, [, 2, ], ., length]
[., length, ;, if, (, length, !=, data, [, 1, ], ., length, ||, length, !=, data, [, 2, ]]
[[, 0, ], ., length, ;, if, (, length, !=, data, [, 1, ], ., length, ||, length, !=, data]
[], ., length, ;, if, (, length, !=, data, [, 1, ], ., length, ||, length, !=, data, [, 2]
[), {, throw, new, IllegalArgumentException, (, "The 'data' array must contain six arrays with equal length.", ), ;, }, int, seriesIndex, =, indexOf, (, seriesKey, ), ;, if, (]
[||, length, !=, data, [, 5, ], ., length, ), {, throw, new, IllegalArgumentException, (, "The 'data' array must contain six arrays with equal length.", ), ;, }, int]
[||, length, !=, data, [, 4, ], ., length, ||, length, !=, data, [, 5, ], ., length, ), {]
[||, length, !=, data, [, 3, ], ., length, ||, length, !=, data, [, 4, ], ., length, ||, length]
[||, length, !=, data, [, 2, ], ., length, ||, length, !=, data, [, 3, ], ., length, ||, length]
[!=, data, [, 1, ], ., length, ||, length, !=, data, [, 2, ], ., length, ||, length, !=, data]
[||, length, !=, data, [, 2, ], ., length, ||, length, !=, data, [, 3, ], ., length, ||, length]
[., length, ||, length, !=, data, [, 2, ], ., length, ||, length, !=, data, [, 3, ], ., length]
[[, 1, ], ., length, ||, length, !=, data, [, 2, ], ., length, ||, length, !=, data, [, 3]
[], ., length, ||, length, !=, data, [, 2, ], ., length, ||, length, !=, data, [, 3, ], .]
[||, length, !=, data, [, 3, ], ., length, ||, length, !=, data, [, 4, ], ., length, ||, length]
[!=, data, [, 2, ], ., length, ||, length, !=, data, [, 3, ], ., length, ||, length, !=, data]
[||, length, !=, data, [, 3, ], ., length, ||, length, !=, data, [, 4, ], ., length, ||, length]
[., length, ||, length, !=, data, [, 3, ], ., length, ||, length, !=, data, [, 4, ], ., length]
[[, 2, ], ., length, ||, length, !=, data, [, 3, ], ., length, ||, length, !=, data, [, 4]
[], ., length, ||, length, !=, data, [, 3, ], ., length, ||, length, !=, data, [, 4, ], .]
[||, length, !=, data, [, 4, ], ., length, ||, length, !=, data, [, 5, ], ., length, ), {]
[!=, data, [, 3, ], ., length, ||, length, !=, data, [, 4, ], ., length, ||, length, !=, data]
[||, length, !=, data, [, 4, ], ., length, ||, length, !=, data, [, 5, ], ., length, ), {]
[., length, ||, length, !=, data, [, 4, ], ., length, ||, length, !=, data, [, 5, ], ., length]
[[, 3, ], ., length, ||, length, !=, data, [, 4, ], ., length, ||, length, !=, data, [, 5]
[], ., length, ||, length, !=, data, [, 4, ], ., length, ||, length, !=, data, [, 5, ], .]
[||, length, !=, data, [, 5, ], ., length, ), {, throw, new, IllegalArgumentException, (, "The 'data' array must contain six arrays with equal length.", ), ;, }, int]
[!=, data, [, 4, ], ., length, ||, length, !=, data, [, 5, ], ., length, ), {, throw, new]
[||, length, !=, data, [, 5, ], ., length, ), {, throw, new, IllegalArgumentException, (, "The 'data' array must contain six arrays with equal length.", ), ;, }, int]
[., length, ||, length, !=, data, [, 5, ], ., length, ), {, throw, new, IllegalArgumentException, (, "The 'data' array must contain six arrays with equal length.", ), ;]
[[, 4, ], ., length, ||, length, !=, data, [, 5, ], ., length, ), {, throw, new, IllegalArgumentException, (]
[], ., length, ||, length, !=, data, [, 5, ], ., length, ), {, throw, new, IllegalArgumentException, (, "The 'data' array must contain six arrays with equal length.", )]
[), {, throw, new, IllegalArgumentException, (, "The 'data' array must contain six arrays with equal length.", ), ;, }, int, seriesIndex, =, indexOf, (, seriesKey, ), ;, if, (]
[!=, data, [, 5, ], ., length, ), {, throw, new, IllegalArgumentException, (, "The 'data' array must contain six arrays with equal length.", ), ;, }, int, seriesIndex, =]
[), {, throw, new, IllegalArgumentException, (, "The 'data' array must contain six arrays with equal length.", ), ;, }, int, seriesIndex, =, indexOf, (, seriesKey, ), ;, if, (]
[., length, ), {, throw, new, IllegalArgumentException, (, "The 'data' array must contain six arrays with equal length.", ), ;, }, int, seriesIndex, =, indexOf, (, seriesKey, ), ;]
[[, 5, ], ., length, ), {, throw, new, IllegalArgumentException, (, "The 'data' array must contain six arrays with equal length.", ), ;, }, int, seriesIndex, =, indexOf, (]
[], ., length, ), {, throw, new, IllegalArgumentException, (, "The 'data' array must contain six arrays with equal length.", ), ;, }, int, seriesIndex, =, indexOf, (, seriesKey, )]
[;, }, int, seriesIndex, =, indexOf, (, seriesKey, ), ;, if, (, seriesIndex, ==, -, 1, ), {, this, .]
[), ;, }, int, seriesIndex, =, indexOf, (, seriesKey, ), ;, if, (, seriesIndex, ==, -, 1, ), {, this]
[;, if, (, seriesIndex, ==, -, 1, ), {, this, ., seriesKeys, ., add, (, seriesKey, ), ;, this, .]
[), ;, if, (, seriesIndex, ==, -, 1, ), {, this, ., seriesKeys, ., add, (, seriesKey, ), ;, this]
[), {, this, ., seriesKeys, ., add, (, seriesKey, ), ;, this, ., seriesList, ., add, (, data, ), ;]
[==, -, 1, ), {, this, ., seriesKeys, ., add, (, seriesKey, ), ;, this, ., seriesList, ., add, (]
[), {, this, ., seriesKeys, ., add, (, seriesKey, ), ;, this, ., seriesList, ., add, (, data, ), ;]
[), {, this, ., seriesKeys, ., add, (, seriesKey, ), ;, this, ., seriesList, ., add, (, data, ), ;]
[;, this, ., seriesList, ., add, (, data, ), ;, }, else, {, this, ., seriesList, ., remove, (, seriesIndex]
[., add, (, seriesKey, ), ;, this, ., seriesList, ., add, (, data, ), ;, }, else, {, this, .]
[., seriesKeys, ., add, (, seriesKey, ), ;, this, ., seriesList, ., add, (, data, ), ;, }, else, {]
[), ;, this, ., seriesList, ., add, (, data, ), ;, }, else, {, this, ., seriesList, ., remove, (]
[;, }, else, {, this, ., seriesList, ., remove, (, seriesIndex, ), ;, this, ., seriesList, ., add, (, seriesIndex]
[., add, (, data, ), ;, }, else, {, this, ., seriesList, ., remove, (, seriesIndex, ), ;, this, .]
[., seriesList, ., add, (, data, ), ;, }, else, {, this, ., seriesList, ., remove, (, seriesIndex, ), ;]
[), ;, }, else, {, this, ., seriesList, ., remove, (, seriesIndex, ), ;, this, ., seriesList, ., add, (]
[;, this, ., seriesList, ., add, (, seriesIndex, ,, data, ), ;, }, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), )]
[., remove, (, seriesIndex, ), ;, this, ., seriesList, ., add, (, seriesIndex, ,, data, ), ;, }, fireDatasetChanged, (]
[., seriesList, ., remove, (, seriesIndex, ), ;, this, ., seriesList, ., add, (, seriesIndex, ,, data, ), ;, }]
[), ;, this, ., seriesList, ., add, (, seriesIndex, ,, data, ), ;, }, fireDatasetChanged, (, new, DatasetChangeInfo, (, )]
[;, }, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, boolean, equals, (, Object, obj, ), {, if]
[., add, (, seriesIndex, ,, data, ), ;, }, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, boolean]
[., seriesList, ., add, (, seriesIndex, ,, data, ), ;, }, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }]
[,, data, ), ;, }, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, boolean, equals, (, Object, obj]
[), ;, }, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, boolean, equals, (, Object, obj, ), {]
[;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;]
[), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, DefaultIntervalXYDataset, ), ), {, return, false, ;, }]
[==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, DefaultIntervalXYDataset, ), ), {, return, false]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, DefaultIntervalXYDataset, ), ), {, return, false, ;, }]
[;, }, if, (, !, (, obj, instanceof, DefaultIntervalXYDataset, ), ), {, return, false, ;, }, DefaultIntervalXYDataset, that, =, (]
[), {, return, false, ;, }, DefaultIntervalXYDataset, that, =, (, DefaultIntervalXYDataset, ), obj, ;, if, (, !, this, ., seriesKeys]
[), {, return, false, ;, }, DefaultIntervalXYDataset, that, =, (, DefaultIntervalXYDataset, ), obj, ;, if, (, !, this, ., seriesKeys]
[), ), {, return, false, ;, }, DefaultIntervalXYDataset, that, =, (, DefaultIntervalXYDataset, ), obj, ;, if, (, !, this, .]
[instanceof, DefaultIntervalXYDataset, ), ), {, return, false, ;, }, DefaultIntervalXYDataset, that, =, (, DefaultIntervalXYDataset, ), obj, ;, if, (, !]
[;, }, DefaultIntervalXYDataset, that, =, (, DefaultIntervalXYDataset, ), obj, ;, if, (, !, this, ., seriesKeys, ., equals, (, that]
[;, if, (, !, this, ., seriesKeys, ., equals, (, that, ., seriesKeys, ), ), {, return, false, ;, }]
[;, if, (, !, this, ., seriesKeys, ., equals, (, that, ., seriesKeys, ), ), {, return, false, ;, }]
[), {, return, false, ;, }, for, (, int, i, =, 0, ;, i, <, this, ., seriesList, ., size]
[), {, return, false, ;, }, for, (, int, i, =, 0, ;, i, <, this, ., seriesList, ., size]
[., equals, (, that, ., seriesKeys, ), ), {, return, false, ;, }, for, (, int, i, =, 0, ;]
[., seriesKeys, ., equals, (, that, ., seriesKeys, ), ), {, return, false, ;, }, for, (, int, i, =]
[), ), {, return, false, ;, }, for, (, int, i, =, 0, ;, i, <, this, ., seriesList, .]
[., seriesKeys, ), ), {, return, false, ;, }, for, (, int, i, =, 0, ;, i, <, this, .]
[;, }, for, (, int, i, =, 0, ;, i, <, this, ., seriesList, ., size, (, ), ;, i]
[;, i, <, this, ., seriesList, ., size, (, ), ;, i, ++, ), {, double, [, ], [, ]]
[;, i, ++, ), {, double, [, ], [, ], d1, =, (, double, [, ], [, ], ), this]
[<, this, ., seriesList, ., size, (, ), ;, i, ++, ), {, double, [, ], [, ], d1, =]
[;, i, ++, ), {, double, [, ], [, ], d1, =, (, double, [, ], [, ], ), this]
[., size, (, ), ;, i, ++, ), {, double, [, ], [, ], d1, =, (, double, [, ]]
[., seriesList, ., size, (, ), ;, i, ++, ), {, double, [, ], [, ], d1, =, (, double]
[), {, double, [, ], [, ], d1, =, (, double, [, ], [, ], ), this, ., seriesList, .]
[++, ), {, double, [, ], [, ], d1, =, (, double, [, ], [, ], ), this, ., seriesList]
[;, double, [, ], [, ], d2, =, (, double, [, ], [, ], ), that, ., seriesList, ., get]
[;, double, [, ], [, ], d2, =, (, double, [, ], [, ], ), that, ., seriesList, ., get]
[., get, (, i, ), ;, double, [, ], [, ], d2, =, (, double, [, ], [, ], )]
[., seriesList, ., get, (, i, ), ;, double, [, ], [, ], d2, =, (, double, [, ], []
[), ;, double, [, ], [, ], d2, =, (, double, [, ], [, ], ), that, ., seriesList, .]
[;, double, [, ], d1x, =, d1, [, 0, ], ;, double, [, ], d2x, =, d2, [, 0, ]]
[;, double, [, ], d1x, =, d1, [, 0, ], ;, double, [, ], d2x, =, d2, [, 0, ]]
[., get, (, i, ), ;, double, [, ], d1x, =, d1, [, 0, ], ;, double, [, ], d2x]
[., seriesList, ., get, (, i, ), ;, double, [, ], d1x, =, d1, [, 0, ], ;, double, []
[), ;, double, [, ], d1x, =, d1, [, 0, ], ;, double, [, ], d2x, =, d2, [, 0]
[;, double, [, ], d2x, =, d2, [, 0, ], ;, if, (, !, Arrays, ., equals, (, d1x, ,]
[[, 0, ], ;, double, [, ], d2x, =, d2, [, 0, ], ;, if, (, !, Arrays, ., equals]
[], ;, double, [, ], d2x, =, d2, [, 0, ], ;, if, (, !, Arrays, ., equals, (, d1x]
[;, if, (, !, Arrays, ., equals, (, d1x, ,, d2x, ), ), {, return, false, ;, }, double, []
[[, 0, ], ;, if, (, !, Arrays, ., equals, (, d1x, ,, d2x, ), ), {, return, false, ;]
[], ;, if, (, !, Arrays, ., equals, (, d1x, ,, d2x, ), ), {, return, false, ;, }, double]
[), {, return, false, ;, }, double, [, ], d1xs, =, d1, [, 1, ], ;, double, [, ], d2xs]
[), {, return, false, ;, }, double, [, ], d1xs, =, d1, [, 1, ], ;, double, [, ], d2xs]
[., equals, (, d1x, ,, d2x, ), ), {, return, false, ;, }, double, [, ], d1xs, =, d1, []
[,, d2x, ), ), {, return, false, ;, }, double, [, ], d1xs, =, d1, [, 1, ], ;, double]
[), ), {, return, false, ;, }, double, [, ], d1xs, =, d1, [, 1, ], ;, double, [, ]]
[;, }, double, [, ], d1xs, =, d1, [, 1, ], ;, double, [, ], d2xs, =, d2, [, 1]
[;, double, [, ], d2xs, =, d2, [, 1, ], ;, if, (, !, Arrays, ., equals, (, d1xs, ,]
[[, 1, ], ;, double, [, ], d2xs, =, d2, [, 1, ], ;, if, (, !, Arrays, ., equals]
[], ;, double, [, ], d2xs, =, d2, [, 1, ], ;, if, (, !, Arrays, ., equals, (, d1xs]
[;, if, (, !, Arrays, ., equals, (, d1xs, ,, d2xs, ), ), {, return, false, ;, }, double, []
[[, 1, ], ;, if, (, !, Arrays, ., equals, (, d1xs, ,, d2xs, ), ), {, return, false, ;]
[], ;, if, (, !, Arrays, ., equals, (, d1xs, ,, d2xs, ), ), {, return, false, ;, }, double]
[), {, return, false, ;, }, double, [, ], d1xe, =, d1, [, 2, ], ;, double, [, ], d2xe]
[), {, return, false, ;, }, double, [, ], d1xe, =, d1, [, 2, ], ;, double, [, ], d2xe]
[., equals, (, d1xs, ,, d2xs, ), ), {, return, false, ;, }, double, [, ], d1xe, =, d1, []
[,, d2xs, ), ), {, return, false, ;, }, double, [, ], d1xe, =, d1, [, 2, ], ;, double]
[), ), {, return, false, ;, }, double, [, ], d1xe, =, d1, [, 2, ], ;, double, [, ]]
[;, }, double, [, ], d1xe, =, d1, [, 2, ], ;, double, [, ], d2xe, =, d2, [, 2]
[;, double, [, ], d2xe, =, d2, [, 2, ], ;, if, (, !, Arrays, ., equals, (, d1xe, ,]
[[, 2, ], ;, double, [, ], d2xe, =, d2, [, 2, ], ;, if, (, !, Arrays, ., equals]
[], ;, double, [, ], d2xe, =, d2, [, 2, ], ;, if, (, !, Arrays, ., equals, (, d1xe]
[;, if, (, !, Arrays, ., equals, (, d1xe, ,, d2xe, ), ), {, return, false, ;, }, double, []
[[, 2, ], ;, if, (, !, Arrays, ., equals, (, d1xe, ,, d2xe, ), ), {, return, false, ;]
[], ;, if, (, !, Arrays, ., equals, (, d1xe, ,, d2xe, ), ), {, return, false, ;, }, double]
[), {, return, false, ;, }, double, [, ], d1y, =, d1, [, 3, ], ;, double, [, ], d2y]
[), {, return, false, ;, }, double, [, ], d1y, =, d1, [, 3, ], ;, double, [, ], d2y]
[., equals, (, d1xe, ,, d2xe, ), ), {, return, false, ;, }, double, [, ], d1y, =, d1, []
[,, d2xe, ), ), {, return, false, ;, }, double, [, ], d1y, =, d1, [, 3, ], ;, double]
[), ), {, return, false, ;, }, double, [, ], d1y, =, d1, [, 3, ], ;, double, [, ]]
[;, }, double, [, ], d1y, =, d1, [, 3, ], ;, double, [, ], d2y, =, d2, [, 3]
[;, double, [, ], d2y, =, d2, [, 3, ], ;, if, (, !, Arrays, ., equals, (, d1y, ,]
[[, 3, ], ;, double, [, ], d2y, =, d2, [, 3, ], ;, if, (, !, Arrays, ., equals]
[], ;, double, [, ], d2y, =, d2, [, 3, ], ;, if, (, !, Arrays, ., equals, (, d1y]
[;, if, (, !, Arrays, ., equals, (, d1y, ,, d2y, ), ), {, return, false, ;, }, double, []
[[, 3, ], ;, if, (, !, Arrays, ., equals, (, d1y, ,, d2y, ), ), {, return, false, ;]
[], ;, if, (, !, Arrays, ., equals, (, d1y, ,, d2y, ), ), {, return, false, ;, }, double]
[), {, return, false, ;, }, double, [, ], d1ys, =, d1, [, 4, ], ;, double, [, ], d2ys]
[), {, return, false, ;, }, double, [, ], d1ys, =, d1, [, 4, ], ;, double, [, ], d2ys]
[., equals, (, d1y, ,, d2y, ), ), {, return, false, ;, }, double, [, ], d1ys, =, d1, []
[,, d2y, ), ), {, return, false, ;, }, double, [, ], d1ys, =, d1, [, 4, ], ;, double]
[), ), {, return, false, ;, }, double, [, ], d1ys, =, d1, [, 4, ], ;, double, [, ]]
[;, }, double, [, ], d1ys, =, d1, [, 4, ], ;, double, [, ], d2ys, =, d2, [, 4]
[;, double, [, ], d2ys, =, d2, [, 4, ], ;, if, (, !, Arrays, ., equals, (, d1ys, ,]
[[, 4, ], ;, double, [, ], d2ys, =, d2, [, 4, ], ;, if, (, !, Arrays, ., equals]
[], ;, double, [, ], d2ys, =, d2, [, 4, ], ;, if, (, !, Arrays, ., equals, (, d1ys]
[;, if, (, !, Arrays, ., equals, (, d1ys, ,, d2ys, ), ), {, return, false, ;, }, double, []
[[, 4, ], ;, if, (, !, Arrays, ., equals, (, d1ys, ,, d2ys, ), ), {, return, false, ;]
[], ;, if, (, !, Arrays, ., equals, (, d1ys, ,, d2ys, ), ), {, return, false, ;, }, double]
[), {, return, false, ;, }, double, [, ], d1ye, =, d1, [, 5, ], ;, double, [, ], d2ye]
[), {, return, false, ;, }, double, [, ], d1ye, =, d1, [, 5, ], ;, double, [, ], d2ye]
[., equals, (, d1ys, ,, d2ys, ), ), {, return, false, ;, }, double, [, ], d1ye, =, d1, []
[,, d2ys, ), ), {, return, false, ;, }, double, [, ], d1ye, =, d1, [, 5, ], ;, double]
[), ), {, return, false, ;, }, double, [, ], d1ye, =, d1, [, 5, ], ;, double, [, ]]
[;, }, double, [, ], d1ye, =, d1, [, 5, ], ;, double, [, ], d2ye, =, d2, [, 5]
[;, double, [, ], d2ye, =, d2, [, 5, ], ;, if, (, !, Arrays, ., equals, (, d1ye, ,]
[[, 5, ], ;, double, [, ], d2ye, =, d2, [, 5, ], ;, if, (, !, Arrays, ., equals]
[], ;, double, [, ], d2ye, =, d2, [, 5, ], ;, if, (, !, Arrays, ., equals, (, d1ye]
[;, if, (, !, Arrays, ., equals, (, d1ye, ,, d2ye, ), ), {, return, false, ;, }, }, return]
[[, 5, ], ;, if, (, !, Arrays, ., equals, (, d1ye, ,, d2ye, ), ), {, return, false, ;]
[], ;, if, (, !, Arrays, ., equals, (, d1ye, ,, d2ye, ), ), {, return, false, ;, }, }]
[), {, return, false, ;, }, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, ;]
[), {, return, false, ;, }, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, ;]
[., equals, (, d1ye, ,, d2ye, ), ), {, return, false, ;, }, }, return, true, ;, }, public, int]
[,, d2ye, ), ), {, return, false, ;, }, }, return, true, ;, }, public, int, hashCode, (, ), {]
[), ), {, return, false, ;, }, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result]
[;, }, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, ;, result, =, this, .]
[;, }, public, int, hashCode, (, ), {, int, result, ;, result, =, this, ., seriesKeys, ., hashCode, (, )]
[=, this, ., seriesKeys, ., hashCode, (, ), ;, result, =, 29, *, result, +, this, ., seriesList, ., hashCode]
[;, result, =, 29, *, result, +, this, ., seriesList, ., hashCode, (, ), ;, return, result, ;, }, public]
[., hashCode, (, ), ;, result, =, 29, *, result, +, this, ., seriesList, ., hashCode, (, ), ;, return]
[., seriesKeys, ., hashCode, (, ), ;, result, =, 29, *, result, +, this, ., seriesList, ., hashCode, (, )]
[=, 29, *, result, +, this, ., seriesList, ., hashCode, (, ), ;, return, result, ;, }, public, Object, clone]
[;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, DefaultIntervalXYDataset, clone, =, (, DefaultIntervalXYDataset, ), super]
[+, this, ., seriesList, ., hashCode, (, ), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException]
[*, result, +, this, ., seriesList, ., hashCode, (, ), ;, return, result, ;, }, public, Object, clone, (, )]
[+, this, ., seriesList, ., hashCode, (, ), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException]
[;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, DefaultIntervalXYDataset, clone, =, (, DefaultIntervalXYDataset, ), super]
[., hashCode, (, ), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, DefaultIntervalXYDataset, clone, =]
[., seriesList, ., hashCode, (, ), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, DefaultIntervalXYDataset]
[;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, DefaultIntervalXYDataset, clone, =, (, DefaultIntervalXYDataset, ), super, ., clone, (]
[;, clone, ., seriesKeys, =, new, java, ., util, ., ArrayList, (, this, ., seriesKeys, ), ;, clone, ., seriesList]
[;, clone, ., seriesKeys, =, new, java, ., util, ., ArrayList, (, this, ., seriesKeys, ), ;, clone, ., seriesList]
[., clone, (, ), ;, clone, ., seriesKeys, =, new, java, ., util, ., ArrayList, (, this, ., seriesKeys, )]
[=, new, java, ., util, ., ArrayList, (, this, ., seriesKeys, ), ;, clone, ., seriesList, =, new, ArrayList, (]
[., seriesKeys, =, new, java, ., util, ., ArrayList, (, this, ., seriesKeys, ), ;, clone, ., seriesList, =, new]
[;, clone, ., seriesList, =, new, ArrayList, (, this, ., seriesList, ., size, (, ), ), ;, for, (, int]
[), ;, clone, ., seriesList, =, new, ArrayList, (, this, ., seriesList, ., size, (, ), ), ;, for, (]
[., seriesKeys, ), ;, clone, ., seriesList, =, new, ArrayList, (, this, ., seriesList, ., size, (, ), ), ;]
[=, new, ArrayList, (, this, ., seriesList, ., size, (, ), ), ;, for, (, int, i, =, 0, ;]
[., seriesList, =, new, ArrayList, (, this, ., seriesList, ., size, (, ), ), ;, for, (, int, i, =]
[;, for, (, int, i, =, 0, ;, i, <, this, ., seriesList, ., size, (, ), ;, i, ++]
[), ;, for, (, int, i, =, 0, ;, i, <, this, ., seriesList, ., size, (, ), ;, i]
[., size, (, ), ), ;, for, (, int, i, =, 0, ;, i, <, this, ., seriesList, ., size]
[., seriesList, ., size, (, ), ), ;, for, (, int, i, =, 0, ;, i, <, this, ., seriesList]
[;, i, <, this, ., seriesList, ., size, (, ), ;, i, ++, ), {, double, [, ], [, ]]
[;, i, ++, ), {, double, [, ], [, ], data, =, (, double, [, ], [, ], ), this]
[<, this, ., seriesList, ., size, (, ), ;, i, ++, ), {, double, [, ], [, ], data, =]
[;, i, ++, ), {, double, [, ], [, ], data, =, (, double, [, ], [, ], ), this]
[., size, (, ), ;, i, ++, ), {, double, [, ], [, ], data, =, (, double, [, ]]
[., seriesList, ., size, (, ), ;, i, ++, ), {, double, [, ], [, ], data, =, (, double]
[), {, double, [, ], [, ], data, =, (, double, [, ], [, ], ), this, ., seriesList, .]
[++, ), {, double, [, ], [, ], data, =, (, double, [, ], [, ], ), this, ., seriesList]
[;, double, [, ], x, =, data, [, 0, ], ;, double, [, ], xStart, =, data, [, 1, ]]
[;, double, [, ], x, =, data, [, 0, ], ;, double, [, ], xStart, =, data, [, 1, ]]
[., get, (, i, ), ;, double, [, ], x, =, data, [, 0, ], ;, double, [, ], xStart]
[., seriesList, ., get, (, i, ), ;, double, [, ], x, =, data, [, 0, ], ;, double, []
[), ;, double, [, ], x, =, data, [, 0, ], ;, double, [, ], xStart, =, data, [, 1]
[;, double, [, ], xStart, =, data, [, 1, ], ;, double, [, ], xEnd, =, data, [, 2, ]]
[[, 0, ], ;, double, [, ], xStart, =, data, [, 1, ], ;, double, [, ], xEnd, =, data]
[], ;, double, [, ], xStart, =, data, [, 1, ], ;, double, [, ], xEnd, =, data, [, 2]
[;, double, [, ], xEnd, =, data, [, 2, ], ;, double, [, ], y, =, data, [, 3, ]]
[[, 1, ], ;, double, [, ], xEnd, =, data, [, 2, ], ;, double, [, ], y, =, data]
[], ;, double, [, ], xEnd, =, data, [, 2, ], ;, double, [, ], y, =, data, [, 3]
[;, double, [, ], y, =, data, [, 3, ], ;, double, [, ], yStart, =, data, [, 4, ]]
[[, 2, ], ;, double, [, ], y, =, data, [, 3, ], ;, double, [, ], yStart, =, data]
[], ;, double, [, ], y, =, data, [, 3, ], ;, double, [, ], yStart, =, data, [, 4]
[;, double, [, ], yStart, =, data, [, 4, ], ;, double, [, ], yEnd, =, data, [, 5, ]]
[[, 3, ], ;, double, [, ], yStart, =, data, [, 4, ], ;, double, [, ], yEnd, =, data]
[], ;, double, [, ], yStart, =, data, [, 4, ], ;, double, [, ], yEnd, =, data, [, 5]
[;, double, [, ], yEnd, =, data, [, 5, ], ;, double, [, ], xx, =, new, double, [, x]
[[, 4, ], ;, double, [, ], yEnd, =, data, [, 5, ], ;, double, [, ], xx, =, new]
[], ;, double, [, ], yEnd, =, data, [, 5, ], ;, double, [, ], xx, =, new, double, []
[;, double, [, ], xx, =, new, double, [, x, ., length, ], ;, double, [, ], xxStart, =, new]
[[, 5, ], ;, double, [, ], xx, =, new, double, [, x, ., length, ], ;, double, [, ]]
[], ;, double, [, ], xx, =, new, double, [, x, ., length, ], ;, double, [, ], xxStart, =]
[;, double, [, ], xxStart, =, new, double, [, xStart, ., length, ], ;, double, [, ], xxEnd, =, new]
[], ;, double, [, ], xxStart, =, new, double, [, xStart, ., length, ], ;, double, [, ], xxEnd, =]
[., length, ], ;, double, [, ], xxStart, =, new, double, [, xStart, ., length, ], ;, double, [, ]]
[;, double, [, ], xxEnd, =, new, double, [, xEnd, ., length, ], ;, double, [, ], yy, =, new]
[], ;, double, [, ], xxEnd, =, new, double, [, xEnd, ., length, ], ;, double, [, ], yy, =]
[., length, ], ;, double, [, ], xxEnd, =, new, double, [, xEnd, ., length, ], ;, double, [, ]]
[;, double, [, ], yy, =, new, double, [, y, ., length, ], ;, double, [, ], yyStart, =, new]
[], ;, double, [, ], yy, =, new, double, [, y, ., length, ], ;, double, [, ], yyStart, =]
[., length, ], ;, double, [, ], yy, =, new, double, [, y, ., length, ], ;, double, [, ]]
[;, double, [, ], yyStart, =, new, double, [, yStart, ., length, ], ;, double, [, ], yyEnd, =, new]
[], ;, double, [, ], yyStart, =, new, double, [, yStart, ., length, ], ;, double, [, ], yyEnd, =]
[., length, ], ;, double, [, ], yyStart, =, new, double, [, yStart, ., length, ], ;, double, [, ]]
[;, double, [, ], yyEnd, =, new, double, [, yEnd, ., length, ], ;, System, ., arraycopy, (, x, ,]
[], ;, double, [, ], yyEnd, =, new, double, [, yEnd, ., length, ], ;, System, ., arraycopy, (, x]
[., length, ], ;, double, [, ], yyEnd, =, new, double, [, yEnd, ., length, ], ;, System, ., arraycopy]
[;, System, ., arraycopy, (, x, ,, 0, ,, xx, ,, 0, ,, x, ., length, ), ;, System, .]
[], ;, System, ., arraycopy, (, x, ,, 0, ,, xx, ,, 0, ,, x, ., length, ), ;, System]
[., length, ], ;, System, ., arraycopy, (, x, ,, 0, ,, xx, ,, 0, ,, x, ., length, )]
[;, System, ., arraycopy, (, xStart, ,, 0, ,, xxStart, ,, 0, ,, xStart, ., length, ), ;, System, .]
[., arraycopy, (, x, ,, 0, ,, xx, ,, 0, ,, x, ., length, ), ;, System, ., arraycopy, (]
[,, 0, ,, xx, ,, 0, ,, x, ., length, ), ;, System, ., arraycopy, (, xStart, ,, 0, ,]
[,, xx, ,, 0, ,, x, ., length, ), ;, System, ., arraycopy, (, xStart, ,, 0, ,, xxStart, ,]
[,, 0, ,, x, ., length, ), ;, System, ., arraycopy, (, xStart, ,, 0, ,, xxStart, ,, 0, ,]
[,, x, ., length, ), ;, System, ., arraycopy, (, xStart, ,, 0, ,, xxStart, ,, 0, ,, xStart, .]
[), ;, System, ., arraycopy, (, xStart, ,, 0, ,, xxStart, ,, 0, ,, xStart, ., length, ), ;, System]
[., length, ), ;, System, ., arraycopy, (, xStart, ,, 0, ,, xxStart, ,, 0, ,, xStart, ., length, )]
[;, System, ., arraycopy, (, xEnd, ,, 0, ,, xxEnd, ,, 0, ,, xEnd, ., length, ), ;, System, .]
[., arraycopy, (, xStart, ,, 0, ,, xxStart, ,, 0, ,, xStart, ., length, ), ;, System, ., arraycopy, (]
[,, 0, ,, xxStart, ,, 0, ,, xStart, ., length, ), ;, System, ., arraycopy, (, xEnd, ,, 0, ,]
[,, xxStart, ,, 0, ,, xStart, ., length, ), ;, System, ., arraycopy, (, xEnd, ,, 0, ,, xxEnd, ,]
[,, 0, ,, xStart, ., length, ), ;, System, ., arraycopy, (, xEnd, ,, 0, ,, xxEnd, ,, 0, ,]
[,, xStart, ., length, ), ;, System, ., arraycopy, (, xEnd, ,, 0, ,, xxEnd, ,, 0, ,, xEnd, .]
[), ;, System, ., arraycopy, (, xEnd, ,, 0, ,, xxEnd, ,, 0, ,, xEnd, ., length, ), ;, System]
[., length, ), ;, System, ., arraycopy, (, xEnd, ,, 0, ,, xxEnd, ,, 0, ,, xEnd, ., length, )]
[;, System, ., arraycopy, (, y, ,, 0, ,, yy, ,, 0, ,, y, ., length, ), ;, System, .]
[., arraycopy, (, xEnd, ,, 0, ,, xxEnd, ,, 0, ,, xEnd, ., length, ), ;, System, ., arraycopy, (]
[,, 0, ,, xxEnd, ,, 0, ,, xEnd, ., length, ), ;, System, ., arraycopy, (, y, ,, 0, ,]
[,, xxEnd, ,, 0, ,, xEnd, ., length, ), ;, System, ., arraycopy, (, y, ,, 0, ,, yy, ,]
[,, 0, ,, xEnd, ., length, ), ;, System, ., arraycopy, (, y, ,, 0, ,, yy, ,, 0, ,]
[,, xEnd, ., length, ), ;, System, ., arraycopy, (, y, ,, 0, ,, yy, ,, 0, ,, y, .]
[), ;, System, ., arraycopy, (, y, ,, 0, ,, yy, ,, 0, ,, y, ., length, ), ;, System]
[., length, ), ;, System, ., arraycopy, (, y, ,, 0, ,, yy, ,, 0, ,, y, ., length, )]
[;, System, ., arraycopy, (, yStart, ,, 0, ,, yyStart, ,, 0, ,, yStart, ., length, ), ;, System, .]
[., arraycopy, (, y, ,, 0, ,, yy, ,, 0, ,, y, ., length, ), ;, System, ., arraycopy, (]
[,, 0, ,, yy, ,, 0, ,, y, ., length, ), ;, System, ., arraycopy, (, yStart, ,, 0, ,]
[,, yy, ,, 0, ,, y, ., length, ), ;, System, ., arraycopy, (, yStart, ,, 0, ,, yyStart, ,]
[,, 0, ,, y, ., length, ), ;, System, ., arraycopy, (, yStart, ,, 0, ,, yyStart, ,, 0, ,]
[,, y, ., length, ), ;, System, ., arraycopy, (, yStart, ,, 0, ,, yyStart, ,, 0, ,, yStart, .]
[), ;, System, ., arraycopy, (, yStart, ,, 0, ,, yyStart, ,, 0, ,, yStart, ., length, ), ;, System]
[., length, ), ;, System, ., arraycopy, (, yStart, ,, 0, ,, yyStart, ,, 0, ,, yStart, ., length, )]
[;, System, ., arraycopy, (, yEnd, ,, 0, ,, yyEnd, ,, 0, ,, yEnd, ., length, ), ;, clone, .]
[., arraycopy, (, yStart, ,, 0, ,, yyStart, ,, 0, ,, yStart, ., length, ), ;, System, ., arraycopy, (]
[,, 0, ,, yyStart, ,, 0, ,, yStart, ., length, ), ;, System, ., arraycopy, (, yEnd, ,, 0, ,]
[,, yyStart, ,, 0, ,, yStart, ., length, ), ;, System, ., arraycopy, (, yEnd, ,, 0, ,, yyEnd, ,]
[,, 0, ,, yStart, ., length, ), ;, System, ., arraycopy, (, yEnd, ,, 0, ,, yyEnd, ,, 0, ,]
[,, yStart, ., length, ), ;, System, ., arraycopy, (, yEnd, ,, 0, ,, yyEnd, ,, 0, ,, yEnd, .]
[), ;, System, ., arraycopy, (, yEnd, ,, 0, ,, yyEnd, ,, 0, ,, yEnd, ., length, ), ;, clone]
[., length, ), ;, System, ., arraycopy, (, yEnd, ,, 0, ,, yyEnd, ,, 0, ,, yEnd, ., length, )]
[;, clone, ., seriesList, ., add, (, i, ,, new, double, [, ], [, ], {, xx, ,, xxStart, ,]
[., arraycopy, (, yEnd, ,, 0, ,, yyEnd, ,, 0, ,, yEnd, ., length, ), ;, clone, ., seriesList, .]
[,, 0, ,, yyEnd, ,, 0, ,, yEnd, ., length, ), ;, clone, ., seriesList, ., add, (, i, ,]
[,, yyEnd, ,, 0, ,, yEnd, ., length, ), ;, clone, ., seriesList, ., add, (, i, ,, new, double]
[,, 0, ,, yEnd, ., length, ), ;, clone, ., seriesList, ., add, (, i, ,, new, double, [, ]]
[,, yEnd, ., length, ), ;, clone, ., seriesList, ., add, (, i, ,, new, double, [, ], [, ]]
[), ;, clone, ., seriesList, ., add, (, i, ,, new, double, [, ], [, ], {, xx, ,, xxStart]
[., length, ), ;, clone, ., seriesList, ., add, (, i, ,, new, double, [, ], [, ], {, xx]
[;, }, return, clone, ;, }, }]
[., add, (, i, ,, new, double, [, ], [, ], {, xx, ,, xxStart, ,, xxEnd, ,, yy, ,]
[., seriesList, ., add, (, i, ,, new, double, [, ], [, ], {, xx, ,, xxStart, ,, xxEnd, ,]
[,, new, double, [, ], [, ], {, xx, ,, xxStart, ,, xxEnd, ,, yy, ,, yyStart, ,, yyEnd, }]
[), ;, }, return, clone, ;, }, }]
[), ;, }, return, clone, ;, }, }]
[,, xxStart, ,, xxEnd, ,, yy, ,, yyStart, ,, yyEnd, }, ), ;, }, return, clone, ;, }, }]
[,, xxEnd, ,, yy, ,, yyStart, ,, yyEnd, }, ), ;, }, return, clone, ;, }, }]
[,, yy, ,, yyStart, ,, yyEnd, }, ), ;, }, return, clone, ;, }, }]
[,, yyStart, ,, yyEnd, }, ), ;, }, return, clone, ;, }, }]
[,, yyEnd, }, ), ;, }, return, clone, ;, }, }]
[}, ), ;, }, return, clone, ;, }, }]
[;, }, }]
