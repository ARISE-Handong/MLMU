[;, static, final, String, SETTER_ERROR_MESSAGE, =, "setters are not supported in older versions of JS. ", +, "If you are targeting newer versions of JS, ", +, "set the appropriate language_in option.", ;, static, final, String, SUSPICIOUS_COMMENT_WARNING, =, "Non-JSDoc comment has annotations. ", +, "Did you mean to start it with '/**'?"]
[+, "set the appropriate language_in option.", ;, static, final, String, SETTER_ERROR_MESSAGE, =, "setters are not supported in older versions of JS. ", +, "If you are targeting newer versions of JS, ", +, "set the appropriate language_in option.", ;, static, final, String, SUSPICIOUS_COMMENT_WARNING, =, "Non-JSDoc comment has annotations. "]
[+, "If you are targeting newer versions of JS, ", +, "set the appropriate language_in option.", ;, static, final, String, SETTER_ERROR_MESSAGE, =, "setters are not supported in older versions of JS. ", +, "If you are targeting newer versions of JS, ", +, "set the appropriate language_in option.", ;, static, final, String, SUSPICIOUS_COMMENT_WARNING]
[+, "set the appropriate language_in option.", ;, static, final, String, SETTER_ERROR_MESSAGE, =, "setters are not supported in older versions of JS. ", +, "If you are targeting newer versions of JS, ", +, "set the appropriate language_in option.", ;, static, final, String, SUSPICIOUS_COMMENT_WARNING, =, "Non-JSDoc comment has annotations. "]
[;, static, final, String, SETTER_ERROR_MESSAGE, =, "setters are not supported in older versions of JS. ", +, "If you are targeting newer versions of JS, ", +, "set the appropriate language_in option.", ;, static, final, String, SUSPICIOUS_COMMENT_WARNING, =, "Non-JSDoc comment has annotations. ", +, "Did you mean to start it with '/**'?"]
[;, static, final, String, SUSPICIOUS_COMMENT_WARNING, =, "Non-JSDoc comment has annotations. ", +, "Did you mean to start it with '/**'?", ;, static, final, String, MISPLACED_TYPE_ANNOTATION, =, "Type annotations are not allowed here. Are you missing parentheses?", ;, private, final, String]
[+, "set the appropriate language_in option.", ;, static, final, String, SUSPICIOUS_COMMENT_WARNING, =, "Non-JSDoc comment has annotations. ", +, "Did you mean to start it with '/**'?", ;, static, final, String, MISPLACED_TYPE_ANNOTATION, =, "Type annotations are not allowed here. Are you missing parentheses?", ;, private]
[+, "If you are targeting newer versions of JS, ", +, "set the appropriate language_in option.", ;, static, final, String, SUSPICIOUS_COMMENT_WARNING, =, "Non-JSDoc comment has annotations. ", +, "Did you mean to start it with '/**'?", ;, static, final, String, MISPLACED_TYPE_ANNOTATION, =, "Type annotations are not allowed here. Are you missing parentheses?"]
[+, "set the appropriate language_in option.", ;, static, final, String, SUSPICIOUS_COMMENT_WARNING, =, "Non-JSDoc comment has annotations. ", +, "Did you mean to start it with '/**'?", ;, static, final, String, MISPLACED_TYPE_ANNOTATION, =, "Type annotations are not allowed here. Are you missing parentheses?", ;, private]
[;, static, final, String, SUSPICIOUS_COMMENT_WARNING, =, "Non-JSDoc comment has annotations. ", +, "Did you mean to start it with '/**'?", ;, static, final, String, MISPLACED_TYPE_ANNOTATION, =, "Type annotations are not allowed here. Are you missing parentheses?", ;, private, final, String]
[;, static, final, String, MISPLACED_TYPE_ANNOTATION, =, "Type annotations are not allowed here. Are you missing parentheses?", ;, private, final, String, sourceString, ;, private, final, StaticSourceFile, sourceFile, ;, private, final]
[+, "Did you mean to start it with '/**'?", ;, static, final, String, MISPLACED_TYPE_ANNOTATION, =, "Type annotations are not allowed here. Are you missing parentheses?", ;, private, final, String, sourceString, ;, private, final, StaticSourceFile, sourceFile, ;]
[;, static, final, String, MISPLACED_TYPE_ANNOTATION, =, "Type annotations are not allowed here. Are you missing parentheses?", ;, private, final, String, sourceString, ;, private, final, StaticSourceFile, sourceFile, ;, private, final]
[;, private, final, String, sourceString, ;, private, final, StaticSourceFile, sourceFile, ;, private, final, String, sourceName, ;, private, final, Config, config]
[;, private, static, final, ImmutableSet, <, String, >, ES5_RESERVED_KEYWORDS, =, ImmutableSet, ., of, (, "class", ,, "const", ,, "enum", ,]
[., of, (, "use strict", ), ;, private, static, final, ImmutableSet, <, String, >, ES5_RESERVED_KEYWORDS, =, ImmutableSet, ., of, (, "class"]
[), ;, private, static, final, ImmutableSet, <, String, >, ES5_RESERVED_KEYWORDS, =, ImmutableSet, ., of, (, "class", ,, "const", ,, "enum"]
[;, private, static, final, ImmutableSet, <, String, >, ES5_STRICT_RESERVED_KEYWORDS, =, ImmutableSet, ., of, (, "class", ,, "const", ,, "enum", ,]
[., of, (, "class", ,, "const", ,, "enum", ,, "export", ,, "extends", ,, "import", ,, "super", ), ;, private, static]
[,, "const", ,, "enum", ,, "export", ,, "extends", ,, "import", ,, "super", ), ;, private, static, final, ImmutableSet, <, String]
[,, "enum", ,, "export", ,, "extends", ,, "import", ,, "super", ), ;, private, static, final, ImmutableSet, <, String, >, ES5_STRICT_RESERVED_KEYWORDS]
[,, "export", ,, "extends", ,, "import", ,, "super", ), ;, private, static, final, ImmutableSet, <, String, >, ES5_STRICT_RESERVED_KEYWORDS, =, ImmutableSet]
[,, "extends", ,, "import", ,, "super", ), ;, private, static, final, ImmutableSet, <, String, >, ES5_STRICT_RESERVED_KEYWORDS, =, ImmutableSet, ., of]
[,, "import", ,, "super", ), ;, private, static, final, ImmutableSet, <, String, >, ES5_STRICT_RESERVED_KEYWORDS, =, ImmutableSet, ., of, (, "class"]
[,, "super", ), ;, private, static, final, ImmutableSet, <, String, >, ES5_STRICT_RESERVED_KEYWORDS, =, ImmutableSet, ., of, (, "class", ,, "const"]
[), ;, private, static, final, ImmutableSet, <, String, >, ES5_STRICT_RESERVED_KEYWORDS, =, ImmutableSet, ., of, (, "class", ,, "const", ,, "enum"]
[;, private, final, Set, <, String, >, reservedKeywords, ;, private, final, Set, <, Comment, >, parsedComments, =, Sets, ., newHashSet]
[., of, (, "class", ,, "const", ,, "enum", ,, "export", ,, "extends", ,, "import", ,, "super", ,, "implements", ,, "interface"]
[,, "const", ,, "enum", ,, "export", ,, "extends", ,, "import", ,, "super", ,, "implements", ,, "interface", ,, "let", ,, "package"]
[,, "enum", ,, "export", ,, "extends", ,, "import", ,, "super", ,, "implements", ,, "interface", ,, "let", ,, "package", ,, "private"]
[,, "export", ,, "extends", ,, "import", ,, "super", ,, "implements", ,, "interface", ,, "let", ,, "package", ,, "private", ,, "protected"]
[,, "extends", ,, "import", ,, "super", ,, "implements", ,, "interface", ,, "let", ,, "package", ,, "private", ,, "protected", ,, "public"]
[,, "import", ,, "super", ,, "implements", ,, "interface", ,, "let", ,, "package", ,, "private", ,, "protected", ,, "public", ,, "static"]
[,, "super", ,, "implements", ,, "interface", ,, "let", ,, "package", ,, "private", ,, "protected", ,, "public", ,, "static", ,, "yield"]
[,, "implements", ,, "interface", ,, "let", ,, "package", ,, "private", ,, "protected", ,, "public", ,, "static", ,, "yield", ), ;]
[,, "interface", ,, "let", ,, "package", ,, "private", ,, "protected", ,, "public", ,, "static", ,, "yield", ), ;, private, final]
[,, "let", ,, "package", ,, "private", ,, "protected", ,, "public", ,, "static", ,, "yield", ), ;, private, final, Set, <]
[,, "package", ,, "private", ,, "protected", ,, "public", ,, "static", ,, "yield", ), ;, private, final, Set, <, String, >]
[,, "private", ,, "protected", ,, "public", ,, "static", ,, "yield", ), ;, private, final, Set, <, String, >, reservedKeywords, ;]
[,, "protected", ,, "public", ,, "static", ,, "yield", ), ;, private, final, Set, <, String, >, reservedKeywords, ;, private, final]
[,, "public", ,, "static", ,, "yield", ), ;, private, final, Set, <, String, >, reservedKeywords, ;, private, final, Set, <]
[,, "static", ,, "yield", ), ;, private, final, Set, <, String, >, reservedKeywords, ;, private, final, Set, <, Comment, >]
[,, "yield", ), ;, private, final, Set, <, String, >, reservedKeywords, ;, private, final, Set, <, Comment, >, parsedComments, =]
[), ;, private, final, Set, <, String, >, reservedKeywords, ;, private, final, Set, <, Comment, >, parsedComments, =, Sets, .]
[;, Node, rootNodeJsDocHolder, =, new, Node, (, Token, ., SCRIPT, ), ;, Node, ., FileLevelJsDocBuilder, fileLevelJsDocBuilder, =, rootNodeJsDocHolder, ., getJsDocBuilderForNode]
[., newHashSet, (, ), ;, Node, rootNodeJsDocHolder, =, new, Node, (, Token, ., SCRIPT, ), ;, Node, ., FileLevelJsDocBuilder, fileLevelJsDocBuilder]
[;, Node, ., FileLevelJsDocBuilder, fileLevelJsDocBuilder, =, rootNodeJsDocHolder, ., getJsDocBuilderForNode, (, ), ;, JSDocInfo, fileOverviewInfo, =, null, ;, private, Node, templateNode]
[), ;, Node, ., FileLevelJsDocBuilder, fileLevelJsDocBuilder, =, rootNodeJsDocHolder, ., getJsDocBuilderForNode, (, ), ;, JSDocInfo, fileOverviewInfo, =, null, ;, private, Node]
[., SCRIPT, ), ;, Node, ., FileLevelJsDocBuilder, fileLevelJsDocBuilder, =, rootNodeJsDocHolder, ., getJsDocBuilderForNode, (, ), ;, JSDocInfo, fileOverviewInfo, =, null, ;]
[;, JSDocInfo, fileOverviewInfo, =, null, ;, private, Node, templateNode, ;, private, IRFactory, (, String, sourceString, ,, StaticSourceFile, sourceFile, ,, Config]
[., getJsDocBuilderForNode, (, ), ;, JSDocInfo, fileOverviewInfo, =, null, ;, private, Node, templateNode, ;, private, IRFactory, (, String, sourceString, ,]
[;, private, Node, templateNode, ;, private, IRFactory, (, String, sourceString, ,, StaticSourceFile, sourceFile, ,, Config, config, ,, ErrorReporter, errorReporter, )]
[=, sourceString, ;, this, ., sourceFile, =, sourceFile, ;, this, ., sourceName, =, sourceFile, ==, null, ?, null, :, sourceFile]
[., sourceString, =, sourceString, ;, this, ., sourceFile, =, sourceFile, ;, this, ., sourceName, =, sourceFile, ==, null, ?, null]
[;, this, ., sourceFile, =, sourceFile, ;, this, ., sourceName, =, sourceFile, ==, null, ?, null, :, sourceFile, ., getName]
[=, sourceFile, ;, this, ., sourceName, =, sourceFile, ==, null, ?, null, :, sourceFile, ., getName, (, ), ;, this]
[., sourceFile, =, sourceFile, ;, this, ., sourceName, =, sourceFile, ==, null, ?, null, :, sourceFile, ., getName, (, )]
[;, this, ., sourceName, =, sourceFile, ==, null, ?, null, :, sourceFile, ., getName, (, ), ;, this, ., config]
[=, sourceFile, ==, null, ?, null, :, sourceFile, ., getName, (, ), ;, this, ., config, =, config, ;, this]
[., sourceName, =, sourceFile, ==, null, ?, null, :, sourceFile, ., getName, (, ), ;, this, ., config, =, config]
[;, this, ., config, =, config, ;, this, ., errorReporter, =, errorReporter, ;, this, ., transformDispatcher, =, new, TransformDispatcher, (]
[?, null, :, sourceFile, ., getName, (, ), ;, this, ., config, =, config, ;, this, ., errorReporter, =, errorReporter]
[==, null, ?, null, :, sourceFile, ., getName, (, ), ;, this, ., config, =, config, ;, this, ., errorReporter]
[?, null, :, sourceFile, ., getName, (, ), ;, this, ., config, =, config, ;, this, ., errorReporter, =, errorReporter]
[:, sourceFile, ., getName, (, ), ;, this, ., config, =, config, ;, this, ., errorReporter, =, errorReporter, ;, this]
[;, this, ., config, =, config, ;, this, ., errorReporter, =, errorReporter, ;, this, ., transformDispatcher, =, new, TransformDispatcher, (]
[., getName, (, ), ;, this, ., config, =, config, ;, this, ., errorReporter, =, errorReporter, ;, this, ., transformDispatcher]
[=, config, ;, this, ., errorReporter, =, errorReporter, ;, this, ., transformDispatcher, =, new, TransformDispatcher, (, ), ;, this, .]
[., config, =, config, ;, this, ., errorReporter, =, errorReporter, ;, this, ., transformDispatcher, =, new, TransformDispatcher, (, ), ;]
[;, this, ., errorReporter, =, errorReporter, ;, this, ., transformDispatcher, =, new, TransformDispatcher, (, ), ;, this, ., templateNode, =]
[=, errorReporter, ;, this, ., transformDispatcher, =, new, TransformDispatcher, (, ), ;, this, ., templateNode, =, createTemplateNode, (, ), ;]
[., errorReporter, =, errorReporter, ;, this, ., transformDispatcher, =, new, TransformDispatcher, (, ), ;, this, ., templateNode, =, createTemplateNode, (]
[;, this, ., transformDispatcher, =, new, TransformDispatcher, (, ), ;, this, ., templateNode, =, createTemplateNode, (, ), ;, switch, (]
[=, new, TransformDispatcher, (, ), ;, this, ., templateNode, =, createTemplateNode, (, ), ;, switch, (, config, ., languageMode, )]
[., transformDispatcher, =, new, TransformDispatcher, (, ), ;, this, ., templateNode, =, createTemplateNode, (, ), ;, switch, (, config, .]
[;, this, ., templateNode, =, createTemplateNode, (, ), ;, switch, (, config, ., languageMode, ), {, case, ECMASCRIPT3, :, reservedKeywords]
[=, createTemplateNode, (, ), ;, switch, (, config, ., languageMode, ), {, case, ECMASCRIPT3, :, reservedKeywords, =, null, ;, break]
[., templateNode, =, createTemplateNode, (, ), ;, switch, (, config, ., languageMode, ), {, case, ECMASCRIPT3, :, reservedKeywords, =, null]
[;, switch, (, config, ., languageMode, ), {, case, ECMASCRIPT3, :, reservedKeywords, =, null, ;, break, ;, case, ECMASCRIPT5, :]
[), {, case, ECMASCRIPT3, :, reservedKeywords, =, null, ;, break, ;, case, ECMASCRIPT5, :, reservedKeywords, =, ES5_RESERVED_KEYWORDS, ;, break, ;]
[., languageMode, ), {, case, ECMASCRIPT3, :, reservedKeywords, =, null, ;, break, ;, case, ECMASCRIPT5, :, reservedKeywords, =, ES5_RESERVED_KEYWORDS, ;]
[:, reservedKeywords, =, null, ;, break, ;, case, ECMASCRIPT5, :, reservedKeywords, =, ES5_RESERVED_KEYWORDS, ;, break, ;, case, ECMASCRIPT5_STRICT, :, reservedKeywords]
[=, null, ;, break, ;, case, ECMASCRIPT5, :, reservedKeywords, =, ES5_RESERVED_KEYWORDS, ;, break, ;, case, ECMASCRIPT5_STRICT, :, reservedKeywords, =, ES5_STRICT_RESERVED_KEYWORDS]
[;, break, ;, case, ECMASCRIPT5, :, reservedKeywords, =, ES5_RESERVED_KEYWORDS, ;, break, ;, case, ECMASCRIPT5_STRICT, :, reservedKeywords, =, ES5_STRICT_RESERVED_KEYWORDS, ;, break]
[:, reservedKeywords, =, ES5_RESERVED_KEYWORDS, ;, break, ;, case, ECMASCRIPT5_STRICT, :, reservedKeywords, =, ES5_STRICT_RESERVED_KEYWORDS, ;, break, ;, default, :, throw, new]
[=, ES5_RESERVED_KEYWORDS, ;, break, ;, case, ECMASCRIPT5_STRICT, :, reservedKeywords, =, ES5_STRICT_RESERVED_KEYWORDS, ;, break, ;, default, :, throw, new, IllegalStateException, (]
[;, break, ;, case, ECMASCRIPT5_STRICT, :, reservedKeywords, =, ES5_STRICT_RESERVED_KEYWORDS, ;, break, ;, default, :, throw, new, IllegalStateException, (, "unknown language mode", )]
[:, reservedKeywords, =, ES5_STRICT_RESERVED_KEYWORDS, ;, break, ;, default, :, throw, new, IllegalStateException, (, "unknown language mode", ), ;, }, }, private, Node]
[=, ES5_STRICT_RESERVED_KEYWORDS, ;, break, ;, default, :, throw, new, IllegalStateException, (, "unknown language mode", ), ;, }, }, private, Node, createTemplateNode, (]
[;, break, ;, default, :, throw, new, IllegalStateException, (, "unknown language mode", ), ;, }, }, private, Node, createTemplateNode, (, ), {]
[;, }, }, private, Node, createTemplateNode, (, ), {, Node, templateNode, =, new, Node, (, Token, ., SCRIPT, ), ;]
[), ;, }, }, private, Node, createTemplateNode, (, ), {, Node, templateNode, =, new, Node, (, Token, ., SCRIPT, )]
[;, templateNode, ., setStaticSourceFile, (, sourceFile, ), ;, return, templateNode, ;, }, public, static, Node, transformTree, (, AstRoot, node, ,]
[), ;, templateNode, ., setStaticSourceFile, (, sourceFile, ), ;, return, templateNode, ;, }, public, static, Node, transformTree, (, AstRoot, node]
[., SCRIPT, ), ;, templateNode, ., setStaticSourceFile, (, sourceFile, ), ;, return, templateNode, ;, }, public, static, Node, transformTree, (]
[;, return, templateNode, ;, }, public, static, Node, transformTree, (, AstRoot, node, ,, StaticSourceFile, sourceFile, ,, String, sourceString, ,, Config]
[., setStaticSourceFile, (, sourceFile, ), ;, return, templateNode, ;, }, public, static, Node, transformTree, (, AstRoot, node, ,, StaticSourceFile, sourceFile]
[), ;, return, templateNode, ;, }, public, static, Node, transformTree, (, AstRoot, node, ,, StaticSourceFile, sourceFile, ,, String, sourceString, ,]
[;, }, public, static, Node, transformTree, (, AstRoot, node, ,, StaticSourceFile, sourceFile, ,, String, sourceString, ,, Config, config, ,, ErrorReporter]
[;, Node, irNode, =, irFactory, ., transform, (, node, ), ;, if, (, node, ., getComments, (, ), !=, null]
[,, sourceFile, ,, config, ,, errorReporter, ), ;, Node, irNode, =, irFactory, ., transform, (, node, ), ;, if, (]
[,, config, ,, errorReporter, ), ;, Node, irNode, =, irFactory, ., transform, (, node, ), ;, if, (, node, .]
[,, errorReporter, ), ;, Node, irNode, =, irFactory, ., transform, (, node, ), ;, if, (, node, ., getComments, (]
[), ;, Node, irNode, =, irFactory, ., transform, (, node, ), ;, if, (, node, ., getComments, (, ), !=]
[;, if, (, node, ., getComments, (, ), !=, null, ), {, for, (, Comment, comment, :, node, ., getComments]
[., transform, (, node, ), ;, if, (, node, ., getComments, (, ), !=, null, ), {, for, (, Comment]
[), ;, if, (, node, ., getComments, (, ), !=, null, ), {, for, (, Comment, comment, :, node, .]
[), {, for, (, Comment, comment, :, node, ., getComments, (, ), ), {, if, (, comment, ., getCommentType, (]
[!=, null, ), {, for, (, Comment, comment, :, node, ., getComments, (, ), ), {, if, (, comment, .]
[., getComments, (, ), !=, null, ), {, for, (, Comment, comment, :, node, ., getComments, (, ), ), {]
[), {, for, (, Comment, comment, :, node, ., getComments, (, ), ), {, if, (, comment, ., getCommentType, (]
[), {, if, (, comment, ., getCommentType, (, ), ==, CommentType, ., JSDOC, &&, !, irFactory, ., parsedComments, ., contains]
[., getComments, (, ), ), {, if, (, comment, ., getCommentType, (, ), ==, CommentType, ., JSDOC, &&, !, irFactory]
[), {, irFactory, ., handlePossibleFileOverviewJsDoc, (, comment, ,, irNode, ), ;, }, else, if, (, comment, ., getCommentType, (, )]
[&&, !, irFactory, ., parsedComments, ., contains, (, comment, ), ), {, irFactory, ., handlePossibleFileOverviewJsDoc, (, comment, ,, irNode, )]
[==, CommentType, ., JSDOC, &&, !, irFactory, ., parsedComments, ., contains, (, comment, ), ), {, irFactory, ., handlePossibleFileOverviewJsDoc, (]
[., getCommentType, (, ), ==, CommentType, ., JSDOC, &&, !, irFactory, ., parsedComments, ., contains, (, comment, ), ), {]
[&&, !, irFactory, ., parsedComments, ., contains, (, comment, ), ), {, irFactory, ., handlePossibleFileOverviewJsDoc, (, comment, ,, irNode, )]
[., JSDOC, &&, !, irFactory, ., parsedComments, ., contains, (, comment, ), ), {, irFactory, ., handlePossibleFileOverviewJsDoc, (, comment, ,]
[), {, irFactory, ., handlePossibleFileOverviewJsDoc, (, comment, ,, irNode, ), ;, }, else, if, (, comment, ., getCommentType, (, )]
[), {, irFactory, ., handlePossibleFileOverviewJsDoc, (, comment, ,, irNode, ), ;, }, else, if, (, comment, ., getCommentType, (, )]
[., contains, (, comment, ), ), {, irFactory, ., handlePossibleFileOverviewJsDoc, (, comment, ,, irNode, ), ;, }, else, if, (]
[., parsedComments, ., contains, (, comment, ), ), {, irFactory, ., handlePossibleFileOverviewJsDoc, (, comment, ,, irNode, ), ;, }, else]
[), ), {, irFactory, ., handlePossibleFileOverviewJsDoc, (, comment, ,, irNode, ), ;, }, else, if, (, comment, ., getCommentType, (]
[;, }, else, if, (, comment, ., getCommentType, (, ), ==, CommentType, ., BLOCK_COMMENT, ), {, irFactory, ., handleBlockComment, (]
[., handlePossibleFileOverviewJsDoc, (, comment, ,, irNode, ), ;, }, else, if, (, comment, ., getCommentType, (, ), ==, CommentType, .]
[,, irNode, ), ;, }, else, if, (, comment, ., getCommentType, (, ), ==, CommentType, ., BLOCK_COMMENT, ), {, irFactory]
[), ;, }, else, if, (, comment, ., getCommentType, (, ), ==, CommentType, ., BLOCK_COMMENT, ), {, irFactory, ., handleBlockComment]
[), {, irFactory, ., handleBlockComment, (, comment, ), ;, }, }, }, irFactory, ., setFileOverviewJsDoc, (, irNode, ), ;, return]
[==, CommentType, ., BLOCK_COMMENT, ), {, irFactory, ., handleBlockComment, (, comment, ), ;, }, }, }, irFactory, ., setFileOverviewJsDoc, (]
[., getCommentType, (, ), ==, CommentType, ., BLOCK_COMMENT, ), {, irFactory, ., handleBlockComment, (, comment, ), ;, }, }, }]
[), {, irFactory, ., handleBlockComment, (, comment, ), ;, }, }, }, irFactory, ., setFileOverviewJsDoc, (, irNode, ), ;, return]
[., BLOCK_COMMENT, ), {, irFactory, ., handleBlockComment, (, comment, ), ;, }, }, }, irFactory, ., setFileOverviewJsDoc, (, irNode, )]
[;, }, }, }, irFactory, ., setFileOverviewJsDoc, (, irNode, ), ;, return, irNode, ;, }, private, void, setFileOverviewJsDoc, (, Node]
[., handleBlockComment, (, comment, ), ;, }, }, }, irFactory, ., setFileOverviewJsDoc, (, irNode, ), ;, return, irNode, ;, }]
[), ;, }, }, }, irFactory, ., setFileOverviewJsDoc, (, irNode, ), ;, return, irNode, ;, }, private, void, setFileOverviewJsDoc, (]
[;, return, irNode, ;, }, private, void, setFileOverviewJsDoc, (, Node, irNode, ), {, JSDocInfo, rootNodeJsDoc, =, rootNodeJsDocHolder, ., getJSDocInfo, (]
[., setFileOverviewJsDoc, (, irNode, ), ;, return, irNode, ;, }, private, void, setFileOverviewJsDoc, (, Node, irNode, ), {, JSDocInfo, rootNodeJsDoc]
[), ;, return, irNode, ;, }, private, void, setFileOverviewJsDoc, (, Node, irNode, ), {, JSDocInfo, rootNodeJsDoc, =, rootNodeJsDocHolder, ., getJSDocInfo]
[;, }, private, void, setFileOverviewJsDoc, (, Node, irNode, ), {, JSDocInfo, rootNodeJsDoc, =, rootNodeJsDocHolder, ., getJSDocInfo, (, ), ;, if]
[;, if, (, rootNodeJsDoc, !=, null, ), {, irNode, ., setJSDocInfo, (, rootNodeJsDoc, ), ;, rootNodeJsDoc, ., setAssociatedNode, (, irNode]
[., getJSDocInfo, (, ), ;, if, (, rootNodeJsDoc, !=, null, ), {, irNode, ., setJSDocInfo, (, rootNodeJsDoc, ), ;, rootNodeJsDoc]
[), {, irNode, ., setJSDocInfo, (, rootNodeJsDoc, ), ;, rootNodeJsDoc, ., setAssociatedNode, (, irNode, ), ;, }, if, (, fileOverviewInfo]
[!=, null, ), {, irNode, ., setJSDocInfo, (, rootNodeJsDoc, ), ;, rootNodeJsDoc, ., setAssociatedNode, (, irNode, ), ;, }, if]
[), {, irNode, ., setJSDocInfo, (, rootNodeJsDoc, ), ;, rootNodeJsDoc, ., setAssociatedNode, (, irNode, ), ;, }, if, (, fileOverviewInfo]
[;, rootNodeJsDoc, ., setAssociatedNode, (, irNode, ), ;, }, if, (, fileOverviewInfo, !=, null, ), {, if, (, (, irNode]
[., setJSDocInfo, (, rootNodeJsDoc, ), ;, rootNodeJsDoc, ., setAssociatedNode, (, irNode, ), ;, }, if, (, fileOverviewInfo, !=, null, )]
[), ;, rootNodeJsDoc, ., setAssociatedNode, (, irNode, ), ;, }, if, (, fileOverviewInfo, !=, null, ), {, if, (, (]
[;, }, if, (, fileOverviewInfo, !=, null, ), {, if, (, (, irNode, ., getJSDocInfo, (, ), !=, null, )]
[., setAssociatedNode, (, irNode, ), ;, }, if, (, fileOverviewInfo, !=, null, ), {, if, (, (, irNode, ., getJSDocInfo]
[), ;, }, if, (, fileOverviewInfo, !=, null, ), {, if, (, (, irNode, ., getJSDocInfo, (, ), !=, null]
[), {, if, (, (, irNode, ., getJSDocInfo, (, ), !=, null, ), &&, (, irNode, ., getJSDocInfo, (, )]
[!=, null, ), {, if, (, (, irNode, ., getJSDocInfo, (, ), !=, null, ), &&, (, irNode, ., getJSDocInfo]
[), {, if, (, (, irNode, ., getJSDocInfo, (, ), !=, null, ), &&, (, irNode, ., getJSDocInfo, (, )]
[), {, fileOverviewInfo, ., setLicense, (, irNode, ., getJSDocInfo, (, ), ., getLicense, (, ), ), ;, }, irNode, .]
[&&, (, irNode, ., getJSDocInfo, (, ), ., getLicense, (, ), !=, null, ), ), {, fileOverviewInfo, ., setLicense, (]
[), &&, (, irNode, ., getJSDocInfo, (, ), ., getLicense, (, ), !=, null, ), ), {, fileOverviewInfo, ., setLicense]
[!=, null, ), &&, (, irNode, ., getJSDocInfo, (, ), ., getLicense, (, ), !=, null, ), ), {, fileOverviewInfo]
[., getJSDocInfo, (, ), !=, null, ), &&, (, irNode, ., getJSDocInfo, (, ), ., getLicense, (, ), !=, null]
[), &&, (, irNode, ., getJSDocInfo, (, ), ., getLicense, (, ), !=, null, ), ), {, fileOverviewInfo, ., setLicense]
[), {, fileOverviewInfo, ., setLicense, (, irNode, ., getJSDocInfo, (, ), ., getLicense, (, ), ), ;, }, irNode, .]
[), ), {, fileOverviewInfo, ., setLicense, (, irNode, ., getJSDocInfo, (, ), ., getLicense, (, ), ), ;, }, irNode]
[!=, null, ), ), {, fileOverviewInfo, ., setLicense, (, irNode, ., getJSDocInfo, (, ), ., getLicense, (, ), ), ;]
[., getLicense, (, ), !=, null, ), ), {, fileOverviewInfo, ., setLicense, (, irNode, ., getJSDocInfo, (, ), ., getLicense]
[., getJSDocInfo, (, ), ., getLicense, (, ), !=, null, ), ), {, fileOverviewInfo, ., setLicense, (, irNode, ., getJSDocInfo]
[), ), {, fileOverviewInfo, ., setLicense, (, irNode, ., getJSDocInfo, (, ), ., getLicense, (, ), ), ;, }, irNode]
[;, }, irNode, ., setJSDocInfo, (, fileOverviewInfo, ), ;, fileOverviewInfo, ., setAssociatedNode, (, irNode, ), ;, }, }, private, Node]
[., setLicense, (, irNode, ., getJSDocInfo, (, ), ., getLicense, (, ), ), ;, }, irNode, ., setJSDocInfo, (, fileOverviewInfo]
[), ;, }, irNode, ., setJSDocInfo, (, fileOverviewInfo, ), ;, fileOverviewInfo, ., setAssociatedNode, (, irNode, ), ;, }, }, private]
[., getLicense, (, ), ), ;, }, irNode, ., setJSDocInfo, (, fileOverviewInfo, ), ;, fileOverviewInfo, ., setAssociatedNode, (, irNode, )]
[., getJSDocInfo, (, ), ., getLicense, (, ), ), ;, }, irNode, ., setJSDocInfo, (, fileOverviewInfo, ), ;, fileOverviewInfo, .]
[;, fileOverviewInfo, ., setAssociatedNode, (, irNode, ), ;, }, }, private, Node, transformBlock, (, AstNode, node, ), {, Node, irNode]
[., setJSDocInfo, (, fileOverviewInfo, ), ;, fileOverviewInfo, ., setAssociatedNode, (, irNode, ), ;, }, }, private, Node, transformBlock, (, AstNode]
[), ;, fileOverviewInfo, ., setAssociatedNode, (, irNode, ), ;, }, }, private, Node, transformBlock, (, AstNode, node, ), {, Node]
[;, }, }, private, Node, transformBlock, (, AstNode, node, ), {, Node, irNode, =, transform, (, node, ), ;, if]
[., setAssociatedNode, (, irNode, ), ;, }, }, private, Node, transformBlock, (, AstNode, node, ), {, Node, irNode, =, transform]
[), ;, }, }, private, Node, transformBlock, (, AstNode, node, ), {, Node, irNode, =, transform, (, node, ), ;]
[;, if, (, !, irNode, ., isBlock, (, ), ), {, if, (, irNode, ., isEmpty, (, ), ), {]
[), ;, if, (, !, irNode, ., isBlock, (, ), ), {, if, (, irNode, ., isEmpty, (, ), )]
[), {, if, (, irNode, ., isEmpty, (, ), ), {, irNode, ., setType, (, Token, ., BLOCK, ), ;]
[), {, if, (, irNode, ., isEmpty, (, ), ), {, irNode, ., setType, (, Token, ., BLOCK, ), ;]
[., isBlock, (, ), ), {, if, (, irNode, ., isEmpty, (, ), ), {, irNode, ., setType, (, Token]
[), {, irNode, ., setType, (, Token, ., BLOCK, ), ;, irNode, ., setWasEmptyNode, (, true, ), ;, }, else]
[., isEmpty, (, ), ), {, irNode, ., setType, (, Token, ., BLOCK, ), ;, irNode, ., setWasEmptyNode, (, true]
[;, irNode, ., setWasEmptyNode, (, true, ), ;, }, else, {, Node, newBlock, =, newNode, (, Token, ., BLOCK, ,]
[., setType, (, Token, ., BLOCK, ), ;, irNode, ., setWasEmptyNode, (, true, ), ;, }, else, {, Node, newBlock]
[), ;, irNode, ., setWasEmptyNode, (, true, ), ;, }, else, {, Node, newBlock, =, newNode, (, Token, ., BLOCK]
[., BLOCK, ), ;, irNode, ., setWasEmptyNode, (, true, ), ;, }, else, {, Node, newBlock, =, newNode, (, Token]
[;, }, else, {, Node, newBlock, =, newNode, (, Token, ., BLOCK, ,, irNode, ), ;, newBlock, ., setLineno, (]
[., setWasEmptyNode, (, true, ), ;, }, else, {, Node, newBlock, =, newNode, (, Token, ., BLOCK, ,, irNode, )]
[), ;, }, else, {, Node, newBlock, =, newNode, (, Token, ., BLOCK, ,, irNode, ), ;, newBlock, ., setLineno]
[;, newBlock, ., setLineno, (, irNode, ., getLineno, (, ), ), ;, newBlock, ., setCharno, (, irNode, ., getCharno, (]
[,, irNode, ), ;, newBlock, ., setLineno, (, irNode, ., getLineno, (, ), ), ;, newBlock, ., setCharno, (, irNode]
[., BLOCK, ,, irNode, ), ;, newBlock, ., setLineno, (, irNode, ., getLineno, (, ), ), ;, newBlock, ., setCharno]
[), ;, newBlock, ., setLineno, (, irNode, ., getLineno, (, ), ), ;, newBlock, ., setCharno, (, irNode, ., getCharno]
[;, newBlock, ., setCharno, (, irNode, ., getCharno, (, ), ), ;, maybeSetLengthFrom, (, newBlock, ,, node, ), ;, irNode]
[., setLineno, (, irNode, ., getLineno, (, ), ), ;, newBlock, ., setCharno, (, irNode, ., getCharno, (, ), )]
[), ;, newBlock, ., setCharno, (, irNode, ., getCharno, (, ), ), ;, maybeSetLengthFrom, (, newBlock, ,, node, ), ;]
[., getLineno, (, ), ), ;, newBlock, ., setCharno, (, irNode, ., getCharno, (, ), ), ;, maybeSetLengthFrom, (, newBlock]
[;, maybeSetLengthFrom, (, newBlock, ,, node, ), ;, irNode, =, newBlock, ;, }, }, return, irNode, ;, }, private, void]
[., setCharno, (, irNode, ., getCharno, (, ), ), ;, maybeSetLengthFrom, (, newBlock, ,, node, ), ;, irNode, =, newBlock]
[), ;, maybeSetLengthFrom, (, newBlock, ,, node, ), ;, irNode, =, newBlock, ;, }, }, return, irNode, ;, }, private]
[., getCharno, (, ), ), ;, maybeSetLengthFrom, (, newBlock, ,, node, ), ;, irNode, =, newBlock, ;, }, }, return]
[;, irNode, =, newBlock, ;, }, }, return, irNode, ;, }, private, void, handleBlockComment, (, Comment, comment, ), {, String]
[,, node, ), ;, irNode, =, newBlock, ;, }, }, return, irNode, ;, }, private, void, handleBlockComment, (, Comment, comment]
[), ;, irNode, =, newBlock, ;, }, }, return, irNode, ;, }, private, void, handleBlockComment, (, Comment, comment, ), {]
[=, newBlock, ;, }, }, return, irNode, ;, }, private, void, handleBlockComment, (, Comment, comment, ), {, String, value, =]
[;, }, }, return, irNode, ;, }, private, void, handleBlockComment, (, Comment, comment, ), {, String, value, =, comment, .]
[;, }, private, void, handleBlockComment, (, Comment, comment, ), {, String, value, =, comment, ., getValue, (, ), ;, if]
[;, if, (, value, ., indexOf, (, "/* @", ), !=, -, 1, ||, value, ., indexOf, (, "\n * @", ), !=]
[., getValue, (, ), ;, if, (, value, ., indexOf, (, "/* @", ), !=, -, 1, ||, value, ., indexOf]
[), {, errorReporter, ., warning, (, SUSPICIOUS_COMMENT_WARNING, ,, sourceName, ,, comment, ., getLineno, (, ), ,, "", ,, 0, )]
[||, value, ., indexOf, (, "\n * @", ), !=, -, 1, ), {, errorReporter, ., warning, (, SUSPICIOUS_COMMENT_WARNING, ,, sourceName, ,]
[!=, -, 1, ||, value, ., indexOf, (, "\n * @", ), !=, -, 1, ), {, errorReporter, ., warning, (, SUSPICIOUS_COMMENT_WARNING]
[., indexOf, (, "/* @", ), !=, -, 1, ||, value, ., indexOf, (, "\n * @", ), !=, -, 1, ), {]
[), !=, -, 1, ||, value, ., indexOf, (, "\n * @", ), !=, -, 1, ), {, errorReporter, ., warning, (]
[||, value, ., indexOf, (, "\n * @", ), !=, -, 1, ), {, errorReporter, ., warning, (, SUSPICIOUS_COMMENT_WARNING, ,, sourceName, ,]
[||, value, ., indexOf, (, "\n * @", ), !=, -, 1, ), {, errorReporter, ., warning, (, SUSPICIOUS_COMMENT_WARNING, ,, sourceName, ,]
[), {, errorReporter, ., warning, (, SUSPICIOUS_COMMENT_WARNING, ,, sourceName, ,, comment, ., getLineno, (, ), ,, "", ,, 0, )]
[!=, -, 1, ), {, errorReporter, ., warning, (, SUSPICIOUS_COMMENT_WARNING, ,, sourceName, ,, comment, ., getLineno, (, ), ,, ""]
[., indexOf, (, "\n * @", ), !=, -, 1, ), {, errorReporter, ., warning, (, SUSPICIOUS_COMMENT_WARNING, ,, sourceName, ,, comment, .]
[), !=, -, 1, ), {, errorReporter, ., warning, (, SUSPICIOUS_COMMENT_WARNING, ,, sourceName, ,, comment, ., getLineno, (, ), ,]
[), {, errorReporter, ., warning, (, SUSPICIOUS_COMMENT_WARNING, ,, sourceName, ,, comment, ., getLineno, (, ), ,, "", ,, 0, )]
[), {, errorReporter, ., warning, (, SUSPICIOUS_COMMENT_WARNING, ,, sourceName, ,, comment, ., getLineno, (, ), ,, "", ,, 0, )]
[;, }, }, private, boolean, handlePossibleFileOverviewJsDoc, (, JsDocInfoParser, jsDocParser, ), {, if, (, jsDocParser, ., getFileOverviewJSDocInfo, (, ), !=, fileOverviewInfo]
[., warning, (, SUSPICIOUS_COMMENT_WARNING, ,, sourceName, ,, comment, ., getLineno, (, ), ,, "", ,, 0, ), ;, }, }]
[,, sourceName, ,, comment, ., getLineno, (, ), ,, "", ,, 0, ), ;, }, }, private, boolean, handlePossibleFileOverviewJsDoc, (]
[,, comment, ., getLineno, (, ), ,, "", ,, 0, ), ;, }, }, private, boolean, handlePossibleFileOverviewJsDoc, (, JsDocInfoParser, jsDocParser]
[,, "", ,, 0, ), ;, }, }, private, boolean, handlePossibleFileOverviewJsDoc, (, JsDocInfoParser, jsDocParser, ), {, if, (, jsDocParser, .]
[., getLineno, (, ), ,, "", ,, 0, ), ;, }, }, private, boolean, handlePossibleFileOverviewJsDoc, (, JsDocInfoParser, jsDocParser, ), {]
[,, 0, ), ;, }, }, private, boolean, handlePossibleFileOverviewJsDoc, (, JsDocInfoParser, jsDocParser, ), {, if, (, jsDocParser, ., getFileOverviewJSDocInfo, (]
[), ;, }, }, private, boolean, handlePossibleFileOverviewJsDoc, (, JsDocInfoParser, jsDocParser, ), {, if, (, jsDocParser, ., getFileOverviewJSDocInfo, (, ), !=]
[), {, fileOverviewInfo, =, jsDocParser, ., getFileOverviewJSDocInfo, (, ), ;, return, true, ;, }, return, false, ;, }, private, void]
[!=, fileOverviewInfo, ), {, fileOverviewInfo, =, jsDocParser, ., getFileOverviewJSDocInfo, (, ), ;, return, true, ;, }, return, false, ;, }]
[., getFileOverviewJSDocInfo, (, ), !=, fileOverviewInfo, ), {, fileOverviewInfo, =, jsDocParser, ., getFileOverviewJSDocInfo, (, ), ;, return, true, ;, }]
[), {, fileOverviewInfo, =, jsDocParser, ., getFileOverviewJSDocInfo, (, ), ;, return, true, ;, }, return, false, ;, }, private, void]
[=, jsDocParser, ., getFileOverviewJSDocInfo, (, ), ;, return, true, ;, }, return, false, ;, }, private, void, handlePossibleFileOverviewJsDoc, (, Comment]
[;, return, true, ;, }, return, false, ;, }, private, void, handlePossibleFileOverviewJsDoc, (, Comment, comment, ,, Node, irNode, ), {]
[., getFileOverviewJSDocInfo, (, ), ;, return, true, ;, }, return, false, ;, }, private, void, handlePossibleFileOverviewJsDoc, (, Comment, comment, ,]
[;, }, return, false, ;, }, private, void, handlePossibleFileOverviewJsDoc, (, Comment, comment, ,, Node, irNode, ), {, JsDocInfoParser, jsDocParser, =]
[;, }, private, void, handlePossibleFileOverviewJsDoc, (, Comment, comment, ,, Node, irNode, ), {, JsDocInfoParser, jsDocParser, =, createJsDocInfoParser, (, comment, ,]
[;, parsedComments, ., add, (, comment, ), ;, handlePossibleFileOverviewJsDoc, (, jsDocParser, ), ;, }, private, JSDocInfo, handleJsDoc, (, AstNode, node]
[,, irNode, ), ;, parsedComments, ., add, (, comment, ), ;, handlePossibleFileOverviewJsDoc, (, jsDocParser, ), ;, }, private, JSDocInfo, handleJsDoc]
[), ;, parsedComments, ., add, (, comment, ), ;, handlePossibleFileOverviewJsDoc, (, jsDocParser, ), ;, }, private, JSDocInfo, handleJsDoc, (, AstNode]
[;, handlePossibleFileOverviewJsDoc, (, jsDocParser, ), ;, }, private, JSDocInfo, handleJsDoc, (, AstNode, node, ,, Node, irNode, ), {, Comment, comment]
[., add, (, comment, ), ;, handlePossibleFileOverviewJsDoc, (, jsDocParser, ), ;, }, private, JSDocInfo, handleJsDoc, (, AstNode, node, ,, Node]
[), ;, handlePossibleFileOverviewJsDoc, (, jsDocParser, ), ;, }, private, JSDocInfo, handleJsDoc, (, AstNode, node, ,, Node, irNode, ), {, Comment]
[;, }, private, JSDocInfo, handleJsDoc, (, AstNode, node, ,, Node, irNode, ), {, Comment, comment, =, node, ., getJsDocNode, (]
[), ;, }, private, JSDocInfo, handleJsDoc, (, AstNode, node, ,, Node, irNode, ), {, Comment, comment, =, node, ., getJsDocNode]
[;, if, (, comment, !=, null, ), {, JsDocInfoParser, jsDocParser, =, createJsDocInfoParser, (, comment, ,, irNode, ), ;, parsedComments, .]
[., getJsDocNode, (, ), ;, if, (, comment, !=, null, ), {, JsDocInfoParser, jsDocParser, =, createJsDocInfoParser, (, comment, ,, irNode]
[), {, JsDocInfoParser, jsDocParser, =, createJsDocInfoParser, (, comment, ,, irNode, ), ;, parsedComments, ., add, (, comment, ), ;, if]
[!=, null, ), {, JsDocInfoParser, jsDocParser, =, createJsDocInfoParser, (, comment, ,, irNode, ), ;, parsedComments, ., add, (, comment, )]
[), {, JsDocInfoParser, jsDocParser, =, createJsDocInfoParser, (, comment, ,, irNode, ), ;, parsedComments, ., add, (, comment, ), ;, if]
[;, parsedComments, ., add, (, comment, ), ;, if, (, !, handlePossibleFileOverviewJsDoc, (, jsDocParser, ), ), {, JSDocInfo, info, =]
[,, irNode, ), ;, parsedComments, ., add, (, comment, ), ;, if, (, !, handlePossibleFileOverviewJsDoc, (, jsDocParser, ), ), {]
[), ;, parsedComments, ., add, (, comment, ), ;, if, (, !, handlePossibleFileOverviewJsDoc, (, jsDocParser, ), ), {, JSDocInfo, info]
[;, if, (, !, handlePossibleFileOverviewJsDoc, (, jsDocParser, ), ), {, JSDocInfo, info, =, jsDocParser, ., retrieveAndResetParsedJSDocInfo, (, ), ;, if]
[., add, (, comment, ), ;, if, (, !, handlePossibleFileOverviewJsDoc, (, jsDocParser, ), ), {, JSDocInfo, info, =, jsDocParser, .]
[), ;, if, (, !, handlePossibleFileOverviewJsDoc, (, jsDocParser, ), ), {, JSDocInfo, info, =, jsDocParser, ., retrieveAndResetParsedJSDocInfo, (, ), ;]
[), {, JSDocInfo, info, =, jsDocParser, ., retrieveAndResetParsedJSDocInfo, (, ), ;, if, (, info, !=, null, ), {, validateTypeAnnotations, (]
[), {, JSDocInfo, info, =, jsDocParser, ., retrieveAndResetParsedJSDocInfo, (, ), ;, if, (, info, !=, null, ), {, validateTypeAnnotations, (]
[), ), {, JSDocInfo, info, =, jsDocParser, ., retrieveAndResetParsedJSDocInfo, (, ), ;, if, (, info, !=, null, ), {, validateTypeAnnotations]
[;, if, (, info, !=, null, ), {, validateTypeAnnotations, (, info, ,, node, ,, irNode, ), ;, }, return, info]
[., retrieveAndResetParsedJSDocInfo, (, ), ;, if, (, info, !=, null, ), {, validateTypeAnnotations, (, info, ,, node, ,, irNode, )]
[), {, validateTypeAnnotations, (, info, ,, node, ,, irNode, ), ;, }, return, info, ;, }, }, return, null, ;]
[!=, null, ), {, validateTypeAnnotations, (, info, ,, node, ,, irNode, ), ;, }, return, info, ;, }, }, return]
[), {, validateTypeAnnotations, (, info, ,, node, ,, irNode, ), ;, }, return, info, ;, }, }, return, null, ;]
[;, }, return, info, ;, }, }, return, null, ;, }, private, void, validateTypeAnnotations, (, JSDocInfo, info, ,, AstNode, node]
[,, node, ,, irNode, ), ;, }, return, info, ;, }, }, return, null, ;, }, private, void, validateTypeAnnotations, (]
[,, irNode, ), ;, }, return, info, ;, }, }, return, null, ;, }, private, void, validateTypeAnnotations, (, JSDocInfo, info]
[), ;, }, return, info, ;, }, }, return, null, ;, }, private, void, validateTypeAnnotations, (, JSDocInfo, info, ,, AstNode]
[;, }, }, return, null, ;, }, private, void, validateTypeAnnotations, (, JSDocInfo, info, ,, AstNode, node, ,, Node, irNode, )]
[;, }, private, void, validateTypeAnnotations, (, JSDocInfo, info, ,, AstNode, node, ,, Node, irNode, ), {, if, (, info, .]
[), {, boolean, valid, =, false, ;, switch, (, node, ., getType, (, ), ), {, case, com, ., google]
[., hasType, (, ), ), {, boolean, valid, =, false, ;, switch, (, node, ., getType, (, ), ), {]
[;, switch, (, node, ., getType, (, ), ), {, case, com, ., google, ., javascript, ., rhino, ., head]
[), {, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., LP, :, valid, =, node]
[., getType, (, ), ), {, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., LP]
[:, valid, =, node, instanceof, ParenthesizedExpression, ;, break, ;, case, com, ., google, ., javascript, ., rhino, ., head, .]
[., LP, :, valid, =, node, instanceof, ParenthesizedExpression, ;, break, ;, case, com, ., google, ., javascript, ., rhino, .]
[., Token, ., LP, :, valid, =, node, instanceof, ParenthesizedExpression, ;, break, ;, case, com, ., google, ., javascript, .]
[., head, ., Token, ., LP, :, valid, =, node, instanceof, ParenthesizedExpression, ;, break, ;, case, com, ., google, .]
[., rhino, ., head, ., Token, ., LP, :, valid, =, node, instanceof, ParenthesizedExpression, ;, break, ;, case, com, .]
[., javascript, ., rhino, ., head, ., Token, ., LP, :, valid, =, node, instanceof, ParenthesizedExpression, ;, break, ;, case]
[., google, ., javascript, ., rhino, ., head, ., Token, ., LP, :, valid, =, node, instanceof, ParenthesizedExpression, ;, break]
[=, node, instanceof, ParenthesizedExpression, ;, break, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, .]
[;, break, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., VAR, :, valid, =]
[instanceof, ParenthesizedExpression, ;, break, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., VAR, :]
[:, valid, =, true, ;, break, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, .]
[., VAR, :, valid, =, true, ;, break, ;, case, com, ., google, ., javascript, ., rhino, ., head, .]
[., Token, ., VAR, :, valid, =, true, ;, break, ;, case, com, ., google, ., javascript, ., rhino, .]
[., head, ., Token, ., VAR, :, valid, =, true, ;, break, ;, case, com, ., google, ., javascript, .]
[., rhino, ., head, ., Token, ., VAR, :, valid, =, true, ;, break, ;, case, com, ., google, .]
[., javascript, ., rhino, ., head, ., Token, ., VAR, :, valid, =, true, ;, break, ;, case, com, .]
[., google, ., javascript, ., rhino, ., head, ., Token, ., VAR, :, valid, =, true, ;, break, ;, case]
[=, true, ;, break, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., FUNCTION, :]
[;, break, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., FUNCTION, :, FunctionNode, fnNode]
[:, FunctionNode, fnNode, =, (, FunctionNode, ), node, ;, valid, =, fnNode, ., getFunctionType, (, ), ==, FunctionNode, ., FUNCTION_STATEMENT]
[., FUNCTION, :, FunctionNode, fnNode, =, (, FunctionNode, ), node, ;, valid, =, fnNode, ., getFunctionType, (, ), ==, FunctionNode]
[., Token, ., FUNCTION, :, FunctionNode, fnNode, =, (, FunctionNode, ), node, ;, valid, =, fnNode, ., getFunctionType, (, )]
[., head, ., Token, ., FUNCTION, :, FunctionNode, fnNode, =, (, FunctionNode, ), node, ;, valid, =, fnNode, ., getFunctionType]
[., rhino, ., head, ., Token, ., FUNCTION, :, FunctionNode, fnNode, =, (, FunctionNode, ), node, ;, valid, =, fnNode]
[., javascript, ., rhino, ., head, ., Token, ., FUNCTION, :, FunctionNode, fnNode, =, (, FunctionNode, ), node, ;, valid]
[., google, ., javascript, ., rhino, ., head, ., Token, ., FUNCTION, :, FunctionNode, fnNode, =, (, FunctionNode, ), node]
[;, valid, =, fnNode, ., getFunctionType, (, ), ==, FunctionNode, ., FUNCTION_STATEMENT, ;, break, ;, case, com, ., google, .]
[;, valid, =, fnNode, ., getFunctionType, (, ), ==, FunctionNode, ., FUNCTION_STATEMENT, ;, break, ;, case, com, ., google, .]
[=, fnNode, ., getFunctionType, (, ), ==, FunctionNode, ., FUNCTION_STATEMENT, ;, break, ;, case, com, ., google, ., javascript, .]
[;, break, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., NAME, :, valid, =]
[==, FunctionNode, ., FUNCTION_STATEMENT, ;, break, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, .]
[., getFunctionType, (, ), ==, FunctionNode, ., FUNCTION_STATEMENT, ;, break, ;, case, com, ., google, ., javascript, ., rhino, .]
[;, break, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., NAME, :, valid, =]
[., FUNCTION_STATEMENT, ;, break, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., NAME, :]
[:, valid, =, node, ., getParent, (, ), instanceof, ObjectProperty, ||, node, ., getParent, (, ), instanceof, CatchClause, ||, node]
[., NAME, :, valid, =, node, ., getParent, (, ), instanceof, ObjectProperty, ||, node, ., getParent, (, ), instanceof, CatchClause]
[., Token, ., NAME, :, valid, =, node, ., getParent, (, ), instanceof, ObjectProperty, ||, node, ., getParent, (, )]
[., head, ., Token, ., NAME, :, valid, =, node, ., getParent, (, ), instanceof, ObjectProperty, ||, node, ., getParent]
[., rhino, ., head, ., Token, ., NAME, :, valid, =, node, ., getParent, (, ), instanceof, ObjectProperty, ||, node]
[., javascript, ., rhino, ., head, ., Token, ., NAME, :, valid, =, node, ., getParent, (, ), instanceof, ObjectProperty]
[., google, ., javascript, ., rhino, ., head, ., Token, ., NAME, :, valid, =, node, ., getParent, (, )]
[=, node, ., getParent, (, ), instanceof, ObjectProperty, ||, node, ., getParent, (, ), instanceof, CatchClause, ||, node, ., getParent]
[;, break, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., GET, :, case, com]
[||, node, ., getParent, (, ), instanceof, FunctionNode, ;, break, ;, case, com, ., google, ., javascript, ., rhino, .]
[||, node, ., getParent, (, ), instanceof, CatchClause, ||, node, ., getParent, (, ), instanceof, FunctionNode, ;, break, ;, case]
[instanceof, ObjectProperty, ||, node, ., getParent, (, ), instanceof, CatchClause, ||, node, ., getParent, (, ), instanceof, FunctionNode, ;, break]
[., getParent, (, ), instanceof, ObjectProperty, ||, node, ., getParent, (, ), instanceof, CatchClause, ||, node, ., getParent, (, )]
[||, node, ., getParent, (, ), instanceof, FunctionNode, ;, break, ;, case, com, ., google, ., javascript, ., rhino, .]
[instanceof, CatchClause, ||, node, ., getParent, (, ), instanceof, FunctionNode, ;, break, ;, case, com, ., google, ., javascript, .]
[., getParent, (, ), instanceof, CatchClause, ||, node, ., getParent, (, ), instanceof, FunctionNode, ;, break, ;, case, com, .]
[;, break, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., GET, :, case, com]
[instanceof, FunctionNode, ;, break, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., GET, :]
[., getParent, (, ), instanceof, FunctionNode, ;, break, ;, case, com, ., google, ., javascript, ., rhino, ., head, .]
[:, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., SET, :, case, com, ., google]
[., GET, :, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., SET, :, case, com]
[., Token, ., GET, :, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., SET, :]
[., head, ., Token, ., GET, :, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, .]
[., rhino, ., head, ., Token, ., GET, :, case, com, ., google, ., javascript, ., rhino, ., head, .]
[., javascript, ., rhino, ., head, ., Token, ., GET, :, case, com, ., google, ., javascript, ., rhino, .]
[., google, ., javascript, ., rhino, ., head, ., Token, ., GET, :, case, com, ., google, ., javascript, .]
[:, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., NUMBER, :, case, com, ., google]
[., SET, :, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., NUMBER, :, case, com]
[., Token, ., SET, :, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., NUMBER, :]
[., head, ., Token, ., SET, :, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, .]
[., rhino, ., head, ., Token, ., SET, :, case, com, ., google, ., javascript, ., rhino, ., head, .]
[., javascript, ., rhino, ., head, ., Token, ., SET, :, case, com, ., google, ., javascript, ., rhino, .]
[., google, ., javascript, ., rhino, ., head, ., Token, ., SET, :, case, com, ., google, ., javascript, .]
[:, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., STRING, :, valid, =, node, .]
[., NUMBER, :, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., STRING, :, valid, =]
[., Token, ., NUMBER, :, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., STRING, :]
[., head, ., Token, ., NUMBER, :, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, .]
[., rhino, ., head, ., Token, ., NUMBER, :, case, com, ., google, ., javascript, ., rhino, ., head, .]
[., javascript, ., rhino, ., head, ., Token, ., NUMBER, :, case, com, ., google, ., javascript, ., rhino, .]
[., google, ., javascript, ., rhino, ., head, ., Token, ., NUMBER, :, case, com, ., google, ., javascript, .]
[:, valid, =, node, ., getParent, (, ), instanceof, ObjectProperty, ;, break, ;, case, com, ., google, ., javascript, .]
[., STRING, :, valid, =, node, ., getParent, (, ), instanceof, ObjectProperty, ;, break, ;, case, com, ., google, .]
[., Token, ., STRING, :, valid, =, node, ., getParent, (, ), instanceof, ObjectProperty, ;, break, ;, case, com, .]
[., head, ., Token, ., STRING, :, valid, =, node, ., getParent, (, ), instanceof, ObjectProperty, ;, break, ;, case]
[., rhino, ., head, ., Token, ., STRING, :, valid, =, node, ., getParent, (, ), instanceof, ObjectProperty, ;, break]
[., javascript, ., rhino, ., head, ., Token, ., STRING, :, valid, =, node, ., getParent, (, ), instanceof, ObjectProperty]
[., google, ., javascript, ., rhino, ., head, ., Token, ., STRING, :, valid, =, node, ., getParent, (, )]
[=, node, ., getParent, (, ), instanceof, ObjectProperty, ;, break, ;, case, com, ., google, ., javascript, ., rhino, .]
[;, break, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN, :, if, (]
[instanceof, ObjectProperty, ;, break, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN, :]
[., getParent, (, ), instanceof, ObjectProperty, ;, break, ;, case, com, ., google, ., javascript, ., rhino, ., head, .]
[:, if, (, node, instanceof, Assignment, ), {, valid, =, isExprStmt, (, node, ., getParent, (, ), ), &&, isPropAccess]
[., ASSIGN, :, if, (, node, instanceof, Assignment, ), {, valid, =, isExprStmt, (, node, ., getParent, (, ), )]
[., Token, ., ASSIGN, :, if, (, node, instanceof, Assignment, ), {, valid, =, isExprStmt, (, node, ., getParent, (]
[., head, ., Token, ., ASSIGN, :, if, (, node, instanceof, Assignment, ), {, valid, =, isExprStmt, (, node, .]
[., rhino, ., head, ., Token, ., ASSIGN, :, if, (, node, instanceof, Assignment, ), {, valid, =, isExprStmt, (]
[., javascript, ., rhino, ., head, ., Token, ., ASSIGN, :, if, (, node, instanceof, Assignment, ), {, valid, =]
[., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN, :, if, (, node, instanceof, Assignment, ), {]
[), {, valid, =, isExprStmt, (, node, ., getParent, (, ), ), &&, isPropAccess, (, (, (, Assignment, ), node]
[instanceof, Assignment, ), {, valid, =, isExprStmt, (, node, ., getParent, (, ), ), &&, isPropAccess, (, (, (, Assignment]
[=, isExprStmt, (, node, ., getParent, (, ), ), &&, isPropAccess, (, (, (, Assignment, ), node, ), ., getLeft]
[;, }, break, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., GETPROP, :, case]
[&&, isPropAccess, (, (, (, Assignment, ), node, ), ., getLeft, (, ), ), ;, }, break, ;, case, com]
[), &&, isPropAccess, (, (, (, Assignment, ), node, ), ., getLeft, (, ), ), ;, }, break, ;, case]
[., getParent, (, ), ), &&, isPropAccess, (, (, (, Assignment, ), node, ), ., getLeft, (, ), ), ;]
[;, }, break, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., GETPROP, :, case]
[), ;, }, break, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., GETPROP, :]
[., getLeft, (, ), ), ;, }, break, ;, case, com, ., google, ., javascript, ., rhino, ., head, .]
[), ., getLeft, (, ), ), ;, }, break, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[), ., getLeft, (, ), ), ;, }, break, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[:, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., GETELEM, :, valid, =, isExprStmt, (]
[., GETPROP, :, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., GETELEM, :, valid, =]
[., Token, ., GETPROP, :, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., GETELEM, :]
[., head, ., Token, ., GETPROP, :, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, .]
[., rhino, ., head, ., Token, ., GETPROP, :, case, com, ., google, ., javascript, ., rhino, ., head, .]
[., javascript, ., rhino, ., head, ., Token, ., GETPROP, :, case, com, ., google, ., javascript, ., rhino, .]
[., google, ., javascript, ., rhino, ., head, ., Token, ., GETPROP, :, case, com, ., google, ., javascript, .]
[:, valid, =, isExprStmt, (, node, ., getParent, (, ), ), ;, break, ;, }, if, (, !, valid, )]
[., GETELEM, :, valid, =, isExprStmt, (, node, ., getParent, (, ), ), ;, break, ;, }, if, (, !]
[., Token, ., GETELEM, :, valid, =, isExprStmt, (, node, ., getParent, (, ), ), ;, break, ;, }, if]
[., head, ., Token, ., GETELEM, :, valid, =, isExprStmt, (, node, ., getParent, (, ), ), ;, break, ;]
[., rhino, ., head, ., Token, ., GETELEM, :, valid, =, isExprStmt, (, node, ., getParent, (, ), ), ;]
[., javascript, ., rhino, ., head, ., Token, ., GETELEM, :, valid, =, isExprStmt, (, node, ., getParent, (, )]
[., google, ., javascript, ., rhino, ., head, ., Token, ., GETELEM, :, valid, =, isExprStmt, (, node, ., getParent]
[=, isExprStmt, (, node, ., getParent, (, ), ), ;, break, ;, }, if, (, !, valid, ), {, errorReporter]
[;, break, ;, }, if, (, !, valid, ), {, errorReporter, ., warning, (, MISPLACED_TYPE_ANNOTATION, ,, sourceName, ,, node, .]
[), ;, break, ;, }, if, (, !, valid, ), {, errorReporter, ., warning, (, MISPLACED_TYPE_ANNOTATION, ,, sourceName, ,, node]
[., getParent, (, ), ), ;, break, ;, }, if, (, !, valid, ), {, errorReporter, ., warning, (, MISPLACED_TYPE_ANNOTATION]
[), {, errorReporter, ., warning, (, MISPLACED_TYPE_ANNOTATION, ,, sourceName, ,, node, ., getLineno, (, ), ,, "", ,, 0, )]
[), {, errorReporter, ., warning, (, MISPLACED_TYPE_ANNOTATION, ,, sourceName, ,, node, ., getLineno, (, ), ,, "", ,, 0, )]
[;, }, }, }, private, boolean, isPropAccess, (, AstNode, node, ), {, return, node, ., getType, (, ), ==, com]
[., warning, (, MISPLACED_TYPE_ANNOTATION, ,, sourceName, ,, node, ., getLineno, (, ), ,, "", ,, 0, ), ;, }, }]
[,, sourceName, ,, node, ., getLineno, (, ), ,, "", ,, 0, ), ;, }, }, }, private, boolean, isPropAccess]
[,, node, ., getLineno, (, ), ,, "", ,, 0, ), ;, }, }, }, private, boolean, isPropAccess, (, AstNode]
[,, "", ,, 0, ), ;, }, }, }, private, boolean, isPropAccess, (, AstNode, node, ), {, return, node, .]
[., getLineno, (, ), ,, "", ,, 0, ), ;, }, }, }, private, boolean, isPropAccess, (, AstNode, node, )]
[,, 0, ), ;, }, }, }, private, boolean, isPropAccess, (, AstNode, node, ), {, return, node, ., getType, (]
[), ;, }, }, }, private, boolean, isPropAccess, (, AstNode, node, ), {, return, node, ., getType, (, ), ==]
[;, }, private, boolean, isExprStmt, (, AstNode, node, ), {, return, node, ., getType, (, ), ==, com, ., google]
[||, node, ., getType, (, ), ==, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., GETELEM]
[==, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., GETPROP, ||, node, ., getType, (, )]
[., getType, (, ), ==, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., GETPROP, ||, node]
[||, node, ., getType, (, ), ==, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., GETELEM]
[., GETPROP, ||, node, ., getType, (, ), ==, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., GETPROP, ||, node, ., getType, (, ), ==, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., GETPROP, ||, node, ., getType, (, ), ==, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., GETPROP, ||, node, ., getType, (, ), ==, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., GETPROP, ||, node, ., getType, (, ), ==, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., GETPROP, ||, node, ., getType, (, ), ==, com]
[;, }, private, boolean, isExprStmt, (, AstNode, node, ), {, return, node, ., getType, (, ), ==, com, ., google]
[==, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., GETELEM, ;, }, private, boolean, isExprStmt, (]
[., getType, (, ), ==, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., GETELEM, ;, }]
[;, }, private, boolean, isExprStmt, (, AstNode, node, ), {, return, node, ., getType, (, ), ==, com, ., google]
[., GETELEM, ;, }, private, boolean, isExprStmt, (, AstNode, node, ), {, return, node, ., getType, (, ), ==, com]
[., Token, ., GETELEM, ;, }, private, boolean, isExprStmt, (, AstNode, node, ), {, return, node, ., getType, (, )]
[., head, ., Token, ., GETELEM, ;, }, private, boolean, isExprStmt, (, AstNode, node, ), {, return, node, ., getType]
[., rhino, ., head, ., Token, ., GETELEM, ;, }, private, boolean, isExprStmt, (, AstNode, node, ), {, return, node]
[., javascript, ., rhino, ., head, ., Token, ., GETELEM, ;, }, private, boolean, isExprStmt, (, AstNode, node, ), {]
[., google, ., javascript, ., rhino, ., head, ., Token, ., GETELEM, ;, }, private, boolean, isExprStmt, (, AstNode, node]
[;, }, private, Node, transform, (, AstNode, node, ), {, Node, irNode, =, justTransform, (, node, ), ;, JSDocInfo, jsDocInfo]
[||, node, ., getType, (, ), ==, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., EXPR_VOID]
[==, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., EXPR_RESULT, ||, node, ., getType, (, )]
[., getType, (, ), ==, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., EXPR_RESULT, ||, node]
[||, node, ., getType, (, ), ==, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., EXPR_VOID]
[., EXPR_RESULT, ||, node, ., getType, (, ), ==, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., EXPR_RESULT, ||, node, ., getType, (, ), ==, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., EXPR_RESULT, ||, node, ., getType, (, ), ==, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., EXPR_RESULT, ||, node, ., getType, (, ), ==, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., EXPR_RESULT, ||, node, ., getType, (, ), ==, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., EXPR_RESULT, ||, node, ., getType, (, ), ==, com]
[;, }, private, Node, transform, (, AstNode, node, ), {, Node, irNode, =, justTransform, (, node, ), ;, JSDocInfo, jsDocInfo]
[==, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., EXPR_VOID, ;, }, private, Node, transform, (]
[., getType, (, ), ==, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., EXPR_VOID, ;, }]
[;, }, private, Node, transform, (, AstNode, node, ), {, Node, irNode, =, justTransform, (, node, ), ;, JSDocInfo, jsDocInfo]
[., EXPR_VOID, ;, }, private, Node, transform, (, AstNode, node, ), {, Node, irNode, =, justTransform, (, node, ), ;]
[., Token, ., EXPR_VOID, ;, }, private, Node, transform, (, AstNode, node, ), {, Node, irNode, =, justTransform, (, node]
[., head, ., Token, ., EXPR_VOID, ;, }, private, Node, transform, (, AstNode, node, ), {, Node, irNode, =, justTransform]
[., rhino, ., head, ., Token, ., EXPR_VOID, ;, }, private, Node, transform, (, AstNode, node, ), {, Node, irNode]
[., javascript, ., rhino, ., head, ., Token, ., EXPR_VOID, ;, }, private, Node, transform, (, AstNode, node, ), {]
[., google, ., javascript, ., rhino, ., head, ., Token, ., EXPR_VOID, ;, }, private, Node, transform, (, AstNode, node]
[;, JSDocInfo, jsDocInfo, =, handleJsDoc, (, node, ,, irNode, ), ;, if, (, jsDocInfo, !=, null, ), {, irNode, =]
[), ;, JSDocInfo, jsDocInfo, =, handleJsDoc, (, node, ,, irNode, ), ;, if, (, jsDocInfo, !=, null, ), {, irNode]
[;, if, (, jsDocInfo, !=, null, ), {, irNode, =, maybeInjectCastNode, (, node, ,, jsDocInfo, ,, irNode, ), ;, irNode]
[,, irNode, ), ;, if, (, jsDocInfo, !=, null, ), {, irNode, =, maybeInjectCastNode, (, node, ,, jsDocInfo, ,, irNode]
[), ;, if, (, jsDocInfo, !=, null, ), {, irNode, =, maybeInjectCastNode, (, node, ,, jsDocInfo, ,, irNode, ), ;]
[), {, irNode, =, maybeInjectCastNode, (, node, ,, jsDocInfo, ,, irNode, ), ;, irNode, ., setJSDocInfo, (, jsDocInfo, ), ;]
[!=, null, ), {, irNode, =, maybeInjectCastNode, (, node, ,, jsDocInfo, ,, irNode, ), ;, irNode, ., setJSDocInfo, (, jsDocInfo]
[), {, irNode, =, maybeInjectCastNode, (, node, ,, jsDocInfo, ,, irNode, ), ;, irNode, ., setJSDocInfo, (, jsDocInfo, ), ;]
[=, maybeInjectCastNode, (, node, ,, jsDocInfo, ,, irNode, ), ;, irNode, ., setJSDocInfo, (, jsDocInfo, ), ;, }, setSourceInfo, (]
[;, irNode, ., setJSDocInfo, (, jsDocInfo, ), ;, }, setSourceInfo, (, irNode, ,, node, ), ;, return, irNode, ;, }]
[,, jsDocInfo, ,, irNode, ), ;, irNode, ., setJSDocInfo, (, jsDocInfo, ), ;, }, setSourceInfo, (, irNode, ,, node, )]
[,, irNode, ), ;, irNode, ., setJSDocInfo, (, jsDocInfo, ), ;, }, setSourceInfo, (, irNode, ,, node, ), ;, return]
[), ;, irNode, ., setJSDocInfo, (, jsDocInfo, ), ;, }, setSourceInfo, (, irNode, ,, node, ), ;, return, irNode, ;]
[;, }, setSourceInfo, (, irNode, ,, node, ), ;, return, irNode, ;, }, private, Node, maybeInjectCastNode, (, AstNode, node, ,]
[., setJSDocInfo, (, jsDocInfo, ), ;, }, setSourceInfo, (, irNode, ,, node, ), ;, return, irNode, ;, }, private, Node]
[), ;, }, setSourceInfo, (, irNode, ,, node, ), ;, return, irNode, ;, }, private, Node, maybeInjectCastNode, (, AstNode, node]
[;, return, irNode, ;, }, private, Node, maybeInjectCastNode, (, AstNode, node, ,, JSDocInfo, info, ,, Node, irNode, ), {, if]
[,, node, ), ;, return, irNode, ;, }, private, Node, maybeInjectCastNode, (, AstNode, node, ,, JSDocInfo, info, ,, Node, irNode]
[), ;, return, irNode, ;, }, private, Node, maybeInjectCastNode, (, AstNode, node, ,, JSDocInfo, info, ,, Node, irNode, ), {]
[;, }, private, Node, maybeInjectCastNode, (, AstNode, node, ,, JSDocInfo, info, ,, Node, irNode, ), {, if, (, node, .]
[), {, irNode, =, newNode, (, Token, ., CAST, ,, irNode, ), ;, }, return, irNode, ;, }, private, Node]
[&&, !, irNode, ., isObjectLit, (, ), ), {, irNode, =, newNode, (, Token, ., CAST, ,, irNode, ), ;]
[&&, info, ., hasType, (, ), &&, !, irNode, ., isObjectLit, (, ), ), {, irNode, =, newNode, (, Token]
[&&, node, instanceof, ParenthesizedExpression, &&, info, ., hasType, (, ), &&, !, irNode, ., isObjectLit, (, ), ), {, irNode]
[==, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., LP, &&, node, instanceof, ParenthesizedExpression, &&, info]
[., getType, (, ), ==, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., LP, &&, node]
[&&, node, instanceof, ParenthesizedExpression, &&, info, ., hasType, (, ), &&, !, irNode, ., isObjectLit, (, ), ), {, irNode]
[., LP, &&, node, instanceof, ParenthesizedExpression, &&, info, ., hasType, (, ), &&, !, irNode, ., isObjectLit, (, ), )]
[., Token, ., LP, &&, node, instanceof, ParenthesizedExpression, &&, info, ., hasType, (, ), &&, !, irNode, ., isObjectLit, (]
[., head, ., Token, ., LP, &&, node, instanceof, ParenthesizedExpression, &&, info, ., hasType, (, ), &&, !, irNode, .]
[., rhino, ., head, ., Token, ., LP, &&, node, instanceof, ParenthesizedExpression, &&, info, ., hasType, (, ), &&, !]
[., javascript, ., rhino, ., head, ., Token, ., LP, &&, node, instanceof, ParenthesizedExpression, &&, info, ., hasType, (, )]
[., google, ., javascript, ., rhino, ., head, ., Token, ., LP, &&, node, instanceof, ParenthesizedExpression, &&, info, ., hasType]
[&&, info, ., hasType, (, ), &&, !, irNode, ., isObjectLit, (, ), ), {, irNode, =, newNode, (, Token]
[instanceof, ParenthesizedExpression, &&, info, ., hasType, (, ), &&, !, irNode, ., isObjectLit, (, ), ), {, irNode, =, newNode]
[&&, !, irNode, ., isObjectLit, (, ), ), {, irNode, =, newNode, (, Token, ., CAST, ,, irNode, ), ;]
[., hasType, (, ), &&, !, irNode, ., isObjectLit, (, ), ), {, irNode, =, newNode, (, Token, ., CAST]
[), {, irNode, =, newNode, (, Token, ., CAST, ,, irNode, ), ;, }, return, irNode, ;, }, private, Node]
[), {, irNode, =, newNode, (, Token, ., CAST, ,, irNode, ), ;, }, return, irNode, ;, }, private, Node]
[., isObjectLit, (, ), ), {, irNode, =, newNode, (, Token, ., CAST, ,, irNode, ), ;, }, return, irNode]
[=, newNode, (, Token, ., CAST, ,, irNode, ), ;, }, return, irNode, ;, }, private, Node, transformNameAsString, (, Name]
[;, }, return, irNode, ;, }, private, Node, transformNameAsString, (, Name, node, ), {, Node, irNode, =, transformDispatcher, ., processName]
[,, irNode, ), ;, }, return, irNode, ;, }, private, Node, transformNameAsString, (, Name, node, ), {, Node, irNode, =]
[., CAST, ,, irNode, ), ;, }, return, irNode, ;, }, private, Node, transformNameAsString, (, Name, node, ), {, Node]
[), ;, }, return, irNode, ;, }, private, Node, transformNameAsString, (, Name, node, ), {, Node, irNode, =, transformDispatcher, .]
[;, }, private, Node, transformNameAsString, (, Name, node, ), {, Node, irNode, =, transformDispatcher, ., processName, (, node, ,, true]
[;, JSDocInfo, jsDocInfo, =, handleJsDoc, (, node, ,, irNode, ), ;, if, (, jsDocInfo, !=, null, ), {, irNode, .]
[., processName, (, node, ,, true, ), ;, JSDocInfo, jsDocInfo, =, handleJsDoc, (, node, ,, irNode, ), ;, if, (]
[,, true, ), ;, JSDocInfo, jsDocInfo, =, handleJsDoc, (, node, ,, irNode, ), ;, if, (, jsDocInfo, !=, null, )]
[), ;, JSDocInfo, jsDocInfo, =, handleJsDoc, (, node, ,, irNode, ), ;, if, (, jsDocInfo, !=, null, ), {, irNode]
[;, if, (, jsDocInfo, !=, null, ), {, irNode, ., setJSDocInfo, (, jsDocInfo, ), ;, }, setSourceInfo, (, irNode, ,]
[,, irNode, ), ;, if, (, jsDocInfo, !=, null, ), {, irNode, ., setJSDocInfo, (, jsDocInfo, ), ;, }, setSourceInfo]
[), ;, if, (, jsDocInfo, !=, null, ), {, irNode, ., setJSDocInfo, (, jsDocInfo, ), ;, }, setSourceInfo, (, irNode]
[), {, irNode, ., setJSDocInfo, (, jsDocInfo, ), ;, }, setSourceInfo, (, irNode, ,, node, ), ;, return, irNode, ;]
[!=, null, ), {, irNode, ., setJSDocInfo, (, jsDocInfo, ), ;, }, setSourceInfo, (, irNode, ,, node, ), ;, return]
[), {, irNode, ., setJSDocInfo, (, jsDocInfo, ), ;, }, setSourceInfo, (, irNode, ,, node, ), ;, return, irNode, ;]
[;, }, setSourceInfo, (, irNode, ,, node, ), ;, return, irNode, ;, }, private, Node, transformNumberAsString, (, NumberLiteral, literalNode, )]
[., setJSDocInfo, (, jsDocInfo, ), ;, }, setSourceInfo, (, irNode, ,, node, ), ;, return, irNode, ;, }, private, Node]
[), ;, }, setSourceInfo, (, irNode, ,, node, ), ;, return, irNode, ;, }, private, Node, transformNumberAsString, (, NumberLiteral, literalNode]
[;, return, irNode, ;, }, private, Node, transformNumberAsString, (, NumberLiteral, literalNode, ), {, Node, irNode, =, newStringNode, (, getStringValue, (]
[,, node, ), ;, return, irNode, ;, }, private, Node, transformNumberAsString, (, NumberLiteral, literalNode, ), {, Node, irNode, =, newStringNode]
[), ;, return, irNode, ;, }, private, Node, transformNumberAsString, (, NumberLiteral, literalNode, ), {, Node, irNode, =, newStringNode, (, getStringValue]
[;, }, private, Node, transformNumberAsString, (, NumberLiteral, literalNode, ), {, Node, irNode, =, newStringNode, (, getStringValue, (, literalNode, ., getNumber]
[;, JSDocInfo, jsDocInfo, =, handleJsDoc, (, literalNode, ,, irNode, ), ;, if, (, jsDocInfo, !=, null, ), {, irNode, .]
[), ;, JSDocInfo, jsDocInfo, =, handleJsDoc, (, literalNode, ,, irNode, ), ;, if, (, jsDocInfo, !=, null, ), {, irNode]
[), ), ;, JSDocInfo, jsDocInfo, =, handleJsDoc, (, literalNode, ,, irNode, ), ;, if, (, jsDocInfo, !=, null, ), {]
[., getNumber, (, ), ), ), ;, JSDocInfo, jsDocInfo, =, handleJsDoc, (, literalNode, ,, irNode, ), ;, if, (, jsDocInfo]
[;, if, (, jsDocInfo, !=, null, ), {, irNode, ., setJSDocInfo, (, jsDocInfo, ), ;, }, setSourceInfo, (, irNode, ,]
[,, irNode, ), ;, if, (, jsDocInfo, !=, null, ), {, irNode, ., setJSDocInfo, (, jsDocInfo, ), ;, }, setSourceInfo]
[), ;, if, (, jsDocInfo, !=, null, ), {, irNode, ., setJSDocInfo, (, jsDocInfo, ), ;, }, setSourceInfo, (, irNode]
[), {, irNode, ., setJSDocInfo, (, jsDocInfo, ), ;, }, setSourceInfo, (, irNode, ,, literalNode, ), ;, return, irNode, ;]
[!=, null, ), {, irNode, ., setJSDocInfo, (, jsDocInfo, ), ;, }, setSourceInfo, (, irNode, ,, literalNode, ), ;, return]
[), {, irNode, ., setJSDocInfo, (, jsDocInfo, ), ;, }, setSourceInfo, (, irNode, ,, literalNode, ), ;, return, irNode, ;]
[;, }, setSourceInfo, (, irNode, ,, literalNode, ), ;, return, irNode, ;, }, private, static, String, getStringValue, (, double, value]
[., setJSDocInfo, (, jsDocInfo, ), ;, }, setSourceInfo, (, irNode, ,, literalNode, ), ;, return, irNode, ;, }, private, static]
[), ;, }, setSourceInfo, (, irNode, ,, literalNode, ), ;, return, irNode, ;, }, private, static, String, getStringValue, (, double]
[;, return, irNode, ;, }, private, static, String, getStringValue, (, double, value, ), {, long, longValue, =, (, long, )]
[,, literalNode, ), ;, return, irNode, ;, }, private, static, String, getStringValue, (, double, value, ), {, long, longValue, =]
[), ;, return, irNode, ;, }, private, static, String, getStringValue, (, double, value, ), {, long, longValue, =, (, long]
[;, }, private, static, String, getStringValue, (, double, value, ), {, long, longValue, =, (, long, ), value, ;, if]
[;, if, (, longValue, ==, value, ), {, return, Long, ., toString, (, longValue, ), ;, }, else, {, return]
[;, if, (, longValue, ==, value, ), {, return, Long, ., toString, (, longValue, ), ;, }, else, {, return]
[), {, return, Long, ., toString, (, longValue, ), ;, }, else, {, return, Double, ., toString, (, value, )]
[==, value, ), {, return, Long, ., toString, (, longValue, ), ;, }, else, {, return, Double, ., toString, (]
[), {, return, Long, ., toString, (, longValue, ), ;, }, else, {, return, Double, ., toString, (, value, )]
[;, }, else, {, return, Double, ., toString, (, value, ), ;, }, }, private, void, setSourceInfo, (, Node, irNode]
[., toString, (, longValue, ), ;, }, else, {, return, Double, ., toString, (, value, ), ;, }, }, private]
[), ;, }, else, {, return, Double, ., toString, (, value, ), ;, }, }, private, void, setSourceInfo, (, Node]
[;, }, }, private, void, setSourceInfo, (, Node, irNode, ,, AstNode, node, ), {, if, (, irNode, ., getLineno, (]
[., toString, (, value, ), ;, }, }, private, void, setSourceInfo, (, Node, irNode, ,, AstNode, node, ), {, if]
[), ;, }, }, private, void, setSourceInfo, (, Node, irNode, ,, AstNode, node, ), {, if, (, irNode, ., getLineno]
[), {, int, lineno, =, node, ., getLineno, (, ), ;, irNode, ., setLineno, (, lineno, ), ;, int, charno]
[==, -, 1, ), {, int, lineno, =, node, ., getLineno, (, ), ;, irNode, ., setLineno, (, lineno, )]
[., getLineno, (, ), ==, -, 1, ), {, int, lineno, =, node, ., getLineno, (, ), ;, irNode, .]
[), {, int, lineno, =, node, ., getLineno, (, ), ;, irNode, ., setLineno, (, lineno, ), ;, int, charno]
[), {, int, lineno, =, node, ., getLineno, (, ), ;, irNode, ., setLineno, (, lineno, ), ;, int, charno]
[;, irNode, ., setLineno, (, lineno, ), ;, int, charno, =, position2charno, (, node, ., getAbsolutePosition, (, ), ), ;]
[., getLineno, (, ), ;, irNode, ., setLineno, (, lineno, ), ;, int, charno, =, position2charno, (, node, ., getAbsolutePosition]
[;, int, charno, =, position2charno, (, node, ., getAbsolutePosition, (, ), ), ;, irNode, ., setCharno, (, charno, ), ;]
[., setLineno, (, lineno, ), ;, int, charno, =, position2charno, (, node, ., getAbsolutePosition, (, ), ), ;, irNode, .]
[), ;, int, charno, =, position2charno, (, node, ., getAbsolutePosition, (, ), ), ;, irNode, ., setCharno, (, charno, )]
[;, irNode, ., setCharno, (, charno, ), ;, maybeSetLengthFrom, (, irNode, ,, node, ), ;, }, }, private, JsDocInfoParser, createJsDocInfoParser]
[), ;, irNode, ., setCharno, (, charno, ), ;, maybeSetLengthFrom, (, irNode, ,, node, ), ;, }, }, private, JsDocInfoParser]
[., getAbsolutePosition, (, ), ), ;, irNode, ., setCharno, (, charno, ), ;, maybeSetLengthFrom, (, irNode, ,, node, ), ;]
[;, maybeSetLengthFrom, (, irNode, ,, node, ), ;, }, }, private, JsDocInfoParser, createJsDocInfoParser, (, Comment, node, ,, Node, irNode, )]
[., setCharno, (, charno, ), ;, maybeSetLengthFrom, (, irNode, ,, node, ), ;, }, }, private, JsDocInfoParser, createJsDocInfoParser, (, Comment]
[), ;, maybeSetLengthFrom, (, irNode, ,, node, ), ;, }, }, private, JsDocInfoParser, createJsDocInfoParser, (, Comment, node, ,, Node, irNode]
[;, }, }, private, JsDocInfoParser, createJsDocInfoParser, (, Comment, node, ,, Node, irNode, ), {, String, comment, =, node, ., getValue]
[,, node, ), ;, }, }, private, JsDocInfoParser, createJsDocInfoParser, (, Comment, node, ,, Node, irNode, ), {, String, comment, =]
[), ;, }, }, private, JsDocInfoParser, createJsDocInfoParser, (, Comment, node, ,, Node, irNode, ), {, String, comment, =, node, .]
[;, int, lineno, =, node, ., getLineno, (, ), ;, int, position, =, node, ., getAbsolutePosition, (, ), ;, int]
[., getValue, (, ), ;, int, lineno, =, node, ., getLineno, (, ), ;, int, position, =, node, ., getAbsolutePosition]
[;, int, position, =, node, ., getAbsolutePosition, (, ), ;, int, numOpeningChars, =, 3, ;, JsDocInfoParser, jsdocParser, =, new, JsDocInfoParser]
[., getLineno, (, ), ;, int, position, =, node, ., getAbsolutePosition, (, ), ;, int, numOpeningChars, =, 3, ;, JsDocInfoParser]
[;, int, numOpeningChars, =, 3, ;, JsDocInfoParser, jsdocParser, =, new, JsDocInfoParser, (, new, JsDocTokenStream, (, comment, ., substring, (, numOpeningChars]
[., getAbsolutePosition, (, ), ;, int, numOpeningChars, =, 3, ;, JsDocInfoParser, jsdocParser, =, new, JsDocInfoParser, (, new, JsDocTokenStream, (, comment]
[;, JsDocInfoParser, jsdocParser, =, new, JsDocInfoParser, (, new, JsDocTokenStream, (, comment, ., substring, (, numOpeningChars, ), ,, lineno, ,, position2charno]
[;, jsdocParser, ., setFileLevelJsDocBuilder, (, fileLevelJsDocBuilder, ), ;, jsdocParser, ., setFileOverviewJSDocInfo, (, fileOverviewInfo, ), ;, jsdocParser, ., parse, (, )]
[,, node, ,, irNode, ,, config, ,, errorReporter, ), ;, jsdocParser, ., setFileLevelJsDocBuilder, (, fileLevelJsDocBuilder, ), ;, jsdocParser, ., setFileOverviewJSDocInfo]
[,, lineno, ,, position2charno, (, position, ), +, numOpeningChars, ), ,, node, ,, irNode, ,, config, ,, errorReporter, ), ;]
[., substring, (, numOpeningChars, ), ,, lineno, ,, position2charno, (, position, ), +, numOpeningChars, ), ,, node, ,, irNode, ,]
[), ,, lineno, ,, position2charno, (, position, ), +, numOpeningChars, ), ,, node, ,, irNode, ,, config, ,, errorReporter, )]
[,, position2charno, (, position, ), +, numOpeningChars, ), ,, node, ,, irNode, ,, config, ,, errorReporter, ), ;, jsdocParser, .]
[), ,, node, ,, irNode, ,, config, ,, errorReporter, ), ;, jsdocParser, ., setFileLevelJsDocBuilder, (, fileLevelJsDocBuilder, ), ;, jsdocParser, .]
[+, numOpeningChars, ), ,, node, ,, irNode, ,, config, ,, errorReporter, ), ;, jsdocParser, ., setFileLevelJsDocBuilder, (, fileLevelJsDocBuilder, ), ;]
[), +, numOpeningChars, ), ,, node, ,, irNode, ,, config, ,, errorReporter, ), ;, jsdocParser, ., setFileLevelJsDocBuilder, (, fileLevelJsDocBuilder, )]
[), ,, node, ,, irNode, ,, config, ,, errorReporter, ), ;, jsdocParser, ., setFileLevelJsDocBuilder, (, fileLevelJsDocBuilder, ), ;, jsdocParser, .]
[,, irNode, ,, config, ,, errorReporter, ), ;, jsdocParser, ., setFileLevelJsDocBuilder, (, fileLevelJsDocBuilder, ), ;, jsdocParser, ., setFileOverviewJSDocInfo, (, fileOverviewInfo]
[,, config, ,, errorReporter, ), ;, jsdocParser, ., setFileLevelJsDocBuilder, (, fileLevelJsDocBuilder, ), ;, jsdocParser, ., setFileOverviewJSDocInfo, (, fileOverviewInfo, ), ;]
[,, errorReporter, ), ;, jsdocParser, ., setFileLevelJsDocBuilder, (, fileLevelJsDocBuilder, ), ;, jsdocParser, ., setFileOverviewJSDocInfo, (, fileOverviewInfo, ), ;, jsdocParser, .]
[), ;, jsdocParser, ., setFileLevelJsDocBuilder, (, fileLevelJsDocBuilder, ), ;, jsdocParser, ., setFileOverviewJSDocInfo, (, fileOverviewInfo, ), ;, jsdocParser, ., parse, (]
[;, jsdocParser, ., setFileOverviewJSDocInfo, (, fileOverviewInfo, ), ;, jsdocParser, ., parse, (, ), ;, return, jsdocParser, ;, }, private, void]
[., setFileLevelJsDocBuilder, (, fileLevelJsDocBuilder, ), ;, jsdocParser, ., setFileOverviewJSDocInfo, (, fileOverviewInfo, ), ;, jsdocParser, ., parse, (, ), ;, return]
[), ;, jsdocParser, ., setFileOverviewJSDocInfo, (, fileOverviewInfo, ), ;, jsdocParser, ., parse, (, ), ;, return, jsdocParser, ;, }, private]
[;, jsdocParser, ., parse, (, ), ;, return, jsdocParser, ;, }, private, void, maybeSetLengthFrom, (, Node, node, ,, AstNode, source]
[., setFileOverviewJSDocInfo, (, fileOverviewInfo, ), ;, jsdocParser, ., parse, (, ), ;, return, jsdocParser, ;, }, private, void, maybeSetLengthFrom, (]
[), ;, jsdocParser, ., parse, (, ), ;, return, jsdocParser, ;, }, private, void, maybeSetLengthFrom, (, Node, node, ,, AstNode]
[;, return, jsdocParser, ;, }, private, void, maybeSetLengthFrom, (, Node, node, ,, AstNode, source, ), {, if, (, config, .]
[., parse, (, ), ;, return, jsdocParser, ;, }, private, void, maybeSetLengthFrom, (, Node, node, ,, AstNode, source, ), {]
[;, }, private, void, maybeSetLengthFrom, (, Node, node, ,, AstNode, source, ), {, if, (, config, ., isIdeMode, ), {]
[), {, node, ., setLength, (, source, ., getLength, (, ), ), ;, }, }, private, int, position2charno, (, int]
[., isIdeMode, ), {, node, ., setLength, (, source, ., getLength, (, ), ), ;, }, }, private, int, position2charno]
[;, }, }, private, int, position2charno, (, int, position, ), {, int, lineIndex, =, sourceString, ., lastIndexOf, (, '\n', ,]
[., setLength, (, source, ., getLength, (, ), ), ;, }, }, private, int, position2charno, (, int, position, ), {]
[), ;, }, }, private, int, position2charno, (, int, position, ), {, int, lineIndex, =, sourceString, ., lastIndexOf, (, '\n']
[., getLength, (, ), ), ;, }, }, private, int, position2charno, (, int, position, ), {, int, lineIndex, =, sourceString]
[;, if, (, lineIndex, ==, -, 1, ), {, return, position, ;, }, else, {, return, position, -, lineIndex, -]
[., lastIndexOf, (, '\n', ,, position, ), ;, if, (, lineIndex, ==, -, 1, ), {, return, position, ;, }]
[,, position, ), ;, if, (, lineIndex, ==, -, 1, ), {, return, position, ;, }, else, {, return, position]
[), ;, if, (, lineIndex, ==, -, 1, ), {, return, position, ;, }, else, {, return, position, -, lineIndex]
[), {, return, position, ;, }, else, {, return, position, -, lineIndex, -, 1, ;, }, }, private, Node, justTransform]
[==, -, 1, ), {, return, position, ;, }, else, {, return, position, -, lineIndex, -, 1, ;, }, }]
[), {, return, position, ;, }, else, {, return, position, -, lineIndex, -, 1, ;, }, }, private, Node, justTransform]
[), {, return, position, ;, }, else, {, return, position, -, lineIndex, -, 1, ;, }, }, private, Node, justTransform]
[;, }, else, {, return, position, -, lineIndex, -, 1, ;, }, }, private, Node, justTransform, (, AstNode, node, )]
[;, }, }, private, Node, justTransform, (, AstNode, node, ), {, return, transformDispatcher, ., process, (, node, ), ;, }]
[-, 1, ;, }, }, private, Node, justTransform, (, AstNode, node, ), {, return, transformDispatcher, ., process, (, node, )]
[-, lineIndex, -, 1, ;, }, }, private, Node, justTransform, (, AstNode, node, ), {, return, transformDispatcher, ., process, (]
[-, 1, ;, }, }, private, Node, justTransform, (, AstNode, node, ), {, return, transformDispatcher, ., process, (, node, )]
[;, }, }, private, Node, justTransform, (, AstNode, node, ), {, return, transformDispatcher, ., process, (, node, ), ;, }]
[;, }, private, class, TransformDispatcher, extends, TypeSafeDispatcher, <, Node, >, {, private, Node, processGeneric, (, com, ., google, ., javascript]
[., process, (, node, ), ;, }, private, class, TransformDispatcher, extends, TypeSafeDispatcher, <, Node, >, {, private, Node, processGeneric, (]
[), ;, }, private, class, TransformDispatcher, extends, TypeSafeDispatcher, <, Node, >, {, private, Node, processGeneric, (, com, ., google, .]
[;, for, (, com, ., google, ., javascript, ., rhino, ., head, ., Node, child, :, n, ), {, node]
[), ;, for, (, com, ., google, ., javascript, ., rhino, ., head, ., Node, child, :, n, ), {]
[), ), ;, for, (, com, ., google, ., javascript, ., rhino, ., head, ., Node, child, :, n, )]
[., getType, (, ), ), ), ;, for, (, com, ., google, ., javascript, ., rhino, ., head, ., Node]
[), {, node, ., addChildToBack, (, transform, (, (, AstNode, ), child, ), ), ;, }, return, node, ;, }]
[;, }, return, node, ;, }, private, Node, transformAsString, (, AstNode, n, ), {, Node, ret, ;, if, (, n]
[., addChildToBack, (, transform, (, (, AstNode, ), child, ), ), ;, }, return, node, ;, }, private, Node, transformAsString]
[), ;, }, return, node, ;, }, private, Node, transformAsString, (, AstNode, n, ), {, Node, ret, ;, if, (]
[), ), ;, }, return, node, ;, }, private, Node, transformAsString, (, AstNode, n, ), {, Node, ret, ;, if]
[), ), ;, }, return, node, ;, }, private, Node, transformAsString, (, AstNode, n, ), {, Node, ret, ;, if]
[;, }, private, Node, transformAsString, (, AstNode, n, ), {, Node, ret, ;, if, (, n, instanceof, Name, ), {]
[), {, ret, =, transformNameAsString, (, (, Name, ), n, ), ;, }, else, if, (, n, instanceof, NumberLiteral, )]
[instanceof, Name, ), {, ret, =, transformNameAsString, (, (, Name, ), n, ), ;, }, else, if, (, n, instanceof]
[=, transformNameAsString, (, (, Name, ), n, ), ;, }, else, if, (, n, instanceof, NumberLiteral, ), {, ret, =]
[;, }, else, if, (, n, instanceof, NumberLiteral, ), {, ret, =, transformNumberAsString, (, (, NumberLiteral, ), n, ), ;]
[), ;, }, else, if, (, n, instanceof, NumberLiteral, ), {, ret, =, transformNumberAsString, (, (, NumberLiteral, ), n, )]
[), ;, }, else, if, (, n, instanceof, NumberLiteral, ), {, ret, =, transformNumberAsString, (, (, NumberLiteral, ), n, )]
[), {, ret, =, transformNumberAsString, (, (, NumberLiteral, ), n, ), ;, ret, ., putBooleanProp, (, Node, ., QUOTED_PROP, ,]
[instanceof, NumberLiteral, ), {, ret, =, transformNumberAsString, (, (, NumberLiteral, ), n, ), ;, ret, ., putBooleanProp, (, Node, .]
[=, transformNumberAsString, (, (, NumberLiteral, ), n, ), ;, ret, ., putBooleanProp, (, Node, ., QUOTED_PROP, ,, true, ), ;]
[;, ret, ., putBooleanProp, (, Node, ., QUOTED_PROP, ,, true, ), ;, }, else, {, ret, =, transform, (, n]
[), ;, ret, ., putBooleanProp, (, Node, ., QUOTED_PROP, ,, true, ), ;, }, else, {, ret, =, transform, (]
[), ;, ret, ., putBooleanProp, (, Node, ., QUOTED_PROP, ,, true, ), ;, }, else, {, ret, =, transform, (]
[;, }, else, {, ret, =, transform, (, n, ), ;, ret, ., putBooleanProp, (, Node, ., QUOTED_PROP, ,, true]
[., putBooleanProp, (, Node, ., QUOTED_PROP, ,, true, ), ;, }, else, {, ret, =, transform, (, n, ), ;]
[,, true, ), ;, }, else, {, ret, =, transform, (, n, ), ;, ret, ., putBooleanProp, (, Node, .]
[., QUOTED_PROP, ,, true, ), ;, }, else, {, ret, =, transform, (, n, ), ;, ret, ., putBooleanProp, (]
[), ;, }, else, {, ret, =, transform, (, n, ), ;, ret, ., putBooleanProp, (, Node, ., QUOTED_PROP, ,]
[=, transform, (, n, ), ;, ret, ., putBooleanProp, (, Node, ., QUOTED_PROP, ,, true, ), ;, }, Preconditions, .]
[;, ret, ., putBooleanProp, (, Node, ., QUOTED_PROP, ,, true, ), ;, }, Preconditions, ., checkState, (, ret, ., isString]
[), ;, ret, ., putBooleanProp, (, Node, ., QUOTED_PROP, ,, true, ), ;, }, Preconditions, ., checkState, (, ret, .]
[;, }, Preconditions, ., checkState, (, ret, ., isString, (, ), ), ;, return, ret, ;, }, @, Override, Node]
[., putBooleanProp, (, Node, ., QUOTED_PROP, ,, true, ), ;, }, Preconditions, ., checkState, (, ret, ., isString, (, )]
[,, true, ), ;, }, Preconditions, ., checkState, (, ret, ., isString, (, ), ), ;, return, ret, ;, }]
[., QUOTED_PROP, ,, true, ), ;, }, Preconditions, ., checkState, (, ret, ., isString, (, ), ), ;, return, ret]
[), ;, }, Preconditions, ., checkState, (, ret, ., isString, (, ), ), ;, return, ret, ;, }, @, Override]
[;, return, ret, ;, }, @, Override, Node, processArrayLiteral, (, ArrayLiteral, literalNode, ), {, if, (, literalNode, ., isDestructuring, (]
[., checkState, (, ret, ., isString, (, ), ), ;, return, ret, ;, }, @, Override, Node, processArrayLiteral, (, ArrayLiteral]
[), ;, return, ret, ;, }, @, Override, Node, processArrayLiteral, (, ArrayLiteral, literalNode, ), {, if, (, literalNode, ., isDestructuring]
[., isString, (, ), ), ;, return, ret, ;, }, @, Override, Node, processArrayLiteral, (, ArrayLiteral, literalNode, ), {, if]
[;, }, @, Override, Node, processArrayLiteral, (, ArrayLiteral, literalNode, ), {, if, (, literalNode, ., isDestructuring, (, ), ), {]
[), {, reportDestructuringAssign, (, literalNode, ), ;, }, Node, node, =, newNode, (, Token, ., ARRAYLIT, ), ;, for, (]
[., isDestructuring, (, ), ), {, reportDestructuringAssign, (, literalNode, ), ;, }, Node, node, =, newNode, (, Token, ., ARRAYLIT]
[;, }, Node, node, =, newNode, (, Token, ., ARRAYLIT, ), ;, for, (, AstNode, child, :, literalNode, ., getElements]
[), ;, }, Node, node, =, newNode, (, Token, ., ARRAYLIT, ), ;, for, (, AstNode, child, :, literalNode, .]
[;, for, (, AstNode, child, :, literalNode, ., getElements, (, ), ), {, Node, c, =, transform, (, child, )]
[), ;, for, (, AstNode, child, :, literalNode, ., getElements, (, ), ), {, Node, c, =, transform, (, child]
[., ARRAYLIT, ), ;, for, (, AstNode, child, :, literalNode, ., getElements, (, ), ), {, Node, c, =, transform]
[), {, Node, c, =, transform, (, child, ), ;, node, ., addChildToBack, (, c, ), ;, }, return, node]
[., getElements, (, ), ), {, Node, c, =, transform, (, child, ), ;, node, ., addChildToBack, (, c, )]
[;, node, ., addChildToBack, (, c, ), ;, }, return, node, ;, }, @, Override, Node, processAssignment, (, Assignment, assignmentNode]
[), ;, node, ., addChildToBack, (, c, ), ;, }, return, node, ;, }, @, Override, Node, processAssignment, (, Assignment]
[;, }, return, node, ;, }, @, Override, Node, processAssignment, (, Assignment, assignmentNode, ), {, Node, assign, =, processInfixExpression, (]
[., addChildToBack, (, c, ), ;, }, return, node, ;, }, @, Override, Node, processAssignment, (, Assignment, assignmentNode, ), {]
[), ;, }, return, node, ;, }, @, Override, Node, processAssignment, (, Assignment, assignmentNode, ), {, Node, assign, =, processInfixExpression]
[;, }, @, Override, Node, processAssignment, (, Assignment, assignmentNode, ), {, Node, assign, =, processInfixExpression, (, assignmentNode, ), ;, Node]
[;, Node, target, =, assign, ., getFirstChild, (, ), ;, if, (, !, validAssignmentTarget, (, target, ), ), {, errorReporter]
[), ;, Node, target, =, assign, ., getFirstChild, (, ), ;, if, (, !, validAssignmentTarget, (, target, ), ), {]
[;, if, (, !, validAssignmentTarget, (, target, ), ), {, errorReporter, ., error, (, "invalid assignment target", ,, sourceName, ,, target, .]
[., getFirstChild, (, ), ;, if, (, !, validAssignmentTarget, (, target, ), ), {, errorReporter, ., error, (, "invalid assignment target", ,]
[), {, errorReporter, ., error, (, "invalid assignment target", ,, sourceName, ,, target, ., getLineno, (, ), ,, "", ,, 0, )]
[), {, errorReporter, ., error, (, "invalid assignment target", ,, sourceName, ,, target, ., getLineno, (, ), ,, "", ,, 0, )]
[), ), {, errorReporter, ., error, (, "invalid assignment target", ,, sourceName, ,, target, ., getLineno, (, ), ,, "", ,, 0]
[;, }, return, assign, ;, }, @, Override, Node, processAstRoot, (, AstRoot, rootNode, ), {, Node, node, =, newNode, (]
[., error, (, "invalid assignment target", ,, sourceName, ,, target, ., getLineno, (, ), ,, "", ,, 0, ), ;, }, return]
[,, sourceName, ,, target, ., getLineno, (, ), ,, "", ,, 0, ), ;, }, return, assign, ;, }, @]
[,, target, ., getLineno, (, ), ,, "", ,, 0, ), ;, }, return, assign, ;, }, @, Override, Node]
[,, "", ,, 0, ), ;, }, return, assign, ;, }, @, Override, Node, processAstRoot, (, AstRoot, rootNode, ), {]
[., getLineno, (, ), ,, "", ,, 0, ), ;, }, return, assign, ;, }, @, Override, Node, processAstRoot, (]
[,, 0, ), ;, }, return, assign, ;, }, @, Override, Node, processAstRoot, (, AstRoot, rootNode, ), {, Node, node]
[), ;, }, return, assign, ;, }, @, Override, Node, processAstRoot, (, AstRoot, rootNode, ), {, Node, node, =, newNode]
[;, }, @, Override, Node, processAstRoot, (, AstRoot, rootNode, ), {, Node, node, =, newNode, (, Token, ., SCRIPT, )]
[;, for, (, com, ., google, ., javascript, ., rhino, ., head, ., Node, child, :, rootNode, ), {, node]
[), ;, for, (, com, ., google, ., javascript, ., rhino, ., head, ., Node, child, :, rootNode, ), {]
[., SCRIPT, ), ;, for, (, com, ., google, ., javascript, ., rhino, ., head, ., Node, child, :, rootNode]
[), {, node, ., addChildToBack, (, transform, (, (, AstNode, ), child, ), ), ;, }, parseDirectives, (, node, )]
[;, }, parseDirectives, (, node, ), ;, return, node, ;, }, private, void, parseDirectives, (, Node, node, ), {, Set]
[., addChildToBack, (, transform, (, (, AstNode, ), child, ), ), ;, }, parseDirectives, (, node, ), ;, return, node]
[), ;, }, parseDirectives, (, node, ), ;, return, node, ;, }, private, void, parseDirectives, (, Node, node, ), {]
[), ), ;, }, parseDirectives, (, node, ), ;, return, node, ;, }, private, void, parseDirectives, (, Node, node, )]
[), ), ;, }, parseDirectives, (, node, ), ;, return, node, ;, }, private, void, parseDirectives, (, Node, node, )]
[;, return, node, ;, }, private, void, parseDirectives, (, Node, node, ), {, Set, <, String, >, directives, =, null]
[), ;, return, node, ;, }, private, void, parseDirectives, (, Node, node, ), {, Set, <, String, >, directives, =]
[;, }, private, void, parseDirectives, (, Node, node, ), {, Set, <, String, >, directives, =, null, ;, while, (]
[;, while, (, isDirective, (, node, ., getFirstChild, (, ), ), ), {, String, directive, =, node, ., removeFirstChild, (]
[), {, String, directive, =, node, ., removeFirstChild, (, ), ., getFirstChild, (, ), ., getString, (, ), ;, if]
[), ), {, String, directive, =, node, ., removeFirstChild, (, ), ., getFirstChild, (, ), ., getString, (, ), ;]
[., getFirstChild, (, ), ), ), {, String, directive, =, node, ., removeFirstChild, (, ), ., getFirstChild, (, ), .]
[;, if, (, directives, ==, null, ), {, directives, =, Sets, ., newHashSet, (, directive, ), ;, }, else, {]
[., getString, (, ), ;, if, (, directives, ==, null, ), {, directives, =, Sets, ., newHashSet, (, directive, )]
[., getFirstChild, (, ), ., getString, (, ), ;, if, (, directives, ==, null, ), {, directives, =, Sets, .]
[., removeFirstChild, (, ), ., getFirstChild, (, ), ., getString, (, ), ;, if, (, directives, ==, null, ), {]
[), {, directives, =, Sets, ., newHashSet, (, directive, ), ;, }, else, {, directives, ., add, (, directive, )]
[==, null, ), {, directives, =, Sets, ., newHashSet, (, directive, ), ;, }, else, {, directives, ., add, (]
[), {, directives, =, Sets, ., newHashSet, (, directive, ), ;, }, else, {, directives, ., add, (, directive, )]
[=, Sets, ., newHashSet, (, directive, ), ;, }, else, {, directives, ., add, (, directive, ), ;, }, }]
[;, }, else, {, directives, ., add, (, directive, ), ;, }, }, if, (, directives, !=, null, ), {]
[., newHashSet, (, directive, ), ;, }, else, {, directives, ., add, (, directive, ), ;, }, }, if, (]
[), ;, }, else, {, directives, ., add, (, directive, ), ;, }, }, if, (, directives, !=, null, )]
[;, }, }, if, (, directives, !=, null, ), {, node, ., setDirectives, (, directives, ), ;, }, }, private]
[., add, (, directive, ), ;, }, }, if, (, directives, !=, null, ), {, node, ., setDirectives, (, directives]
[), ;, }, }, if, (, directives, !=, null, ), {, node, ., setDirectives, (, directives, ), ;, }, }]
[), {, node, ., setDirectives, (, directives, ), ;, }, }, private, boolean, isDirective, (, Node, n, ), {, if]
[!=, null, ), {, node, ., setDirectives, (, directives, ), ;, }, }, private, boolean, isDirective, (, Node, n, )]
[), {, node, ., setDirectives, (, directives, ), ;, }, }, private, boolean, isDirective, (, Node, n, ), {, if]
[;, }, }, private, boolean, isDirective, (, Node, n, ), {, if, (, n, ==, null, ), return, false, ;]
[., setDirectives, (, directives, ), ;, }, }, private, boolean, isDirective, (, Node, n, ), {, if, (, n, ==]
[), ;, }, }, private, boolean, isDirective, (, Node, n, ), {, if, (, n, ==, null, ), return, false]
[), return, false, ;, int, nType, =, n, ., getType, (, ), ;, return, nType, ==, Token, ., EXPR_RESULT, &&]
[==, null, ), return, false, ;, int, nType, =, n, ., getType, (, ), ;, return, nType, ==, Token, .]
[), return, false, ;, int, nType, =, n, ., getType, (, ), ;, return, nType, ==, Token, ., EXPR_RESULT, &&]
[;, int, nType, =, n, ., getType, (, ), ;, return, nType, ==, Token, ., EXPR_RESULT, &&, n, ., getFirstChild]
[;, return, nType, ==, Token, ., EXPR_RESULT, &&, n, ., getFirstChild, (, ), ., isString, (, ), &&, ALLOWED_DIRECTIVES, .]
[., getType, (, ), ;, return, nType, ==, Token, ., EXPR_RESULT, &&, n, ., getFirstChild, (, ), ., isString, (]
[;, }, @, Override, Node, processBlock, (, Block, blockNode, ), {, return, processGeneric, (, blockNode, ), ;, }, @, Override]
[&&, ALLOWED_DIRECTIVES, ., contains, (, n, ., getFirstChild, (, ), ., getString, (, ), ), ;, }, @, Override, Node]
[&&, n, ., getFirstChild, (, ), ., isString, (, ), &&, ALLOWED_DIRECTIVES, ., contains, (, n, ., getFirstChild, (, )]
[==, Token, ., EXPR_RESULT, &&, n, ., getFirstChild, (, ), ., isString, (, ), &&, ALLOWED_DIRECTIVES, ., contains, (, n]
[&&, n, ., getFirstChild, (, ), ., isString, (, ), &&, ALLOWED_DIRECTIVES, ., contains, (, n, ., getFirstChild, (, )]
[., EXPR_RESULT, &&, n, ., getFirstChild, (, ), ., isString, (, ), &&, ALLOWED_DIRECTIVES, ., contains, (, n, ., getFirstChild]
[&&, ALLOWED_DIRECTIVES, ., contains, (, n, ., getFirstChild, (, ), ., getString, (, ), ), ;, }, @, Override, Node]
[., isString, (, ), &&, ALLOWED_DIRECTIVES, ., contains, (, n, ., getFirstChild, (, ), ., getString, (, ), ), ;]
[., getFirstChild, (, ), ., isString, (, ), &&, ALLOWED_DIRECTIVES, ., contains, (, n, ., getFirstChild, (, ), ., getString]
[;, }, @, Override, Node, processBlock, (, Block, blockNode, ), {, return, processGeneric, (, blockNode, ), ;, }, @, Override]
[., contains, (, n, ., getFirstChild, (, ), ., getString, (, ), ), ;, }, @, Override, Node, processBlock, (]
[), ;, }, @, Override, Node, processBlock, (, Block, blockNode, ), {, return, processGeneric, (, blockNode, ), ;, }, @]
[., getString, (, ), ), ;, }, @, Override, Node, processBlock, (, Block, blockNode, ), {, return, processGeneric, (, blockNode]
[., getFirstChild, (, ), ., getString, (, ), ), ;, }, @, Override, Node, processBlock, (, Block, blockNode, ), {]
[;, }, @, Override, Node, processBreakStatement, (, BreakStatement, statementNode, ), {, Node, node, =, newNode, (, Token, ., BREAK, )]
[), ;, }, @, Override, Node, processBreakStatement, (, BreakStatement, statementNode, ), {, Node, node, =, newNode, (, Token, ., BREAK]
[;, if, (, statementNode, ., getBreakLabel, (, ), !=, null, ), {, Node, labelName, =, transform, (, statementNode, ., getBreakLabel]
[), ;, if, (, statementNode, ., getBreakLabel, (, ), !=, null, ), {, Node, labelName, =, transform, (, statementNode, .]
[., BREAK, ), ;, if, (, statementNode, ., getBreakLabel, (, ), !=, null, ), {, Node, labelName, =, transform, (]
[), {, Node, labelName, =, transform, (, statementNode, ., getBreakLabel, (, ), ), ;, labelName, ., setType, (, Token, .]
[!=, null, ), {, Node, labelName, =, transform, (, statementNode, ., getBreakLabel, (, ), ), ;, labelName, ., setType, (]
[., getBreakLabel, (, ), !=, null, ), {, Node, labelName, =, transform, (, statementNode, ., getBreakLabel, (, ), ), ;]
[), {, Node, labelName, =, transform, (, statementNode, ., getBreakLabel, (, ), ), ;, labelName, ., setType, (, Token, .]
[;, labelName, ., setType, (, Token, ., LABEL_NAME, ), ;, node, ., addChildToBack, (, labelName, ), ;, }, return, node]
[), ;, labelName, ., setType, (, Token, ., LABEL_NAME, ), ;, node, ., addChildToBack, (, labelName, ), ;, }, return]
[., getBreakLabel, (, ), ), ;, labelName, ., setType, (, Token, ., LABEL_NAME, ), ;, node, ., addChildToBack, (, labelName]
[;, node, ., addChildToBack, (, labelName, ), ;, }, return, node, ;, }, @, Override, Node, processCatchClause, (, CatchClause, clauseNode]
[., setType, (, Token, ., LABEL_NAME, ), ;, node, ., addChildToBack, (, labelName, ), ;, }, return, node, ;, }]
[), ;, node, ., addChildToBack, (, labelName, ), ;, }, return, node, ;, }, @, Override, Node, processCatchClause, (, CatchClause]
[., LABEL_NAME, ), ;, node, ., addChildToBack, (, labelName, ), ;, }, return, node, ;, }, @, Override, Node, processCatchClause]
[;, }, return, node, ;, }, @, Override, Node, processCatchClause, (, CatchClause, clauseNode, ), {, AstNode, catchVar, =, clauseNode, .]
[., addChildToBack, (, labelName, ), ;, }, return, node, ;, }, @, Override, Node, processCatchClause, (, CatchClause, clauseNode, ), {]
[), ;, }, return, node, ;, }, @, Override, Node, processCatchClause, (, CatchClause, clauseNode, ), {, AstNode, catchVar, =, clauseNode]
[;, }, @, Override, Node, processCatchClause, (, CatchClause, clauseNode, ), {, AstNode, catchVar, =, clauseNode, ., getVarName, (, ), ;]
[;, Node, node, =, newNode, (, Token, ., CATCH, ,, transform, (, catchVar, ), ), ;, if, (, clauseNode, .]
[., getVarName, (, ), ;, Node, node, =, newNode, (, Token, ., CATCH, ,, transform, (, catchVar, ), ), ;]
[;, if, (, clauseNode, ., getCatchCondition, (, ), !=, null, ), {, errorReporter, ., error, (, "Catch clauses are not supported", ,, sourceName, ,]
[,, transform, (, catchVar, ), ), ;, if, (, clauseNode, ., getCatchCondition, (, ), !=, null, ), {, errorReporter, .]
[., CATCH, ,, transform, (, catchVar, ), ), ;, if, (, clauseNode, ., getCatchCondition, (, ), !=, null, ), {]
[), ;, if, (, clauseNode, ., getCatchCondition, (, ), !=, null, ), {, errorReporter, ., error, (, "Catch clauses are not supported", ,, sourceName]
[), ), ;, if, (, clauseNode, ., getCatchCondition, (, ), !=, null, ), {, errorReporter, ., error, (, "Catch clauses are not supported", ,]
[), {, errorReporter, ., error, (, "Catch clauses are not supported", ,, sourceName, ,, clauseNode, ., getCatchCondition, (, ), ., getLineno, (, ), ,]
[!=, null, ), {, errorReporter, ., error, (, "Catch clauses are not supported", ,, sourceName, ,, clauseNode, ., getCatchCondition, (, ), ., getLineno, (]
[., getCatchCondition, (, ), !=, null, ), {, errorReporter, ., error, (, "Catch clauses are not supported", ,, sourceName, ,, clauseNode, ., getCatchCondition, (]
[), {, errorReporter, ., error, (, "Catch clauses are not supported", ,, sourceName, ,, clauseNode, ., getCatchCondition, (, ), ., getLineno, (, ), ,]
[;, }, node, ., addChildToBack, (, transformBlock, (, clauseNode, ., getBody, (, ), ), ), ;, return, node, ;, }]
[., error, (, "Catch clauses are not supported", ,, sourceName, ,, clauseNode, ., getCatchCondition, (, ), ., getLineno, (, ), ,, "", ,, 0]
[,, sourceName, ,, clauseNode, ., getCatchCondition, (, ), ., getLineno, (, ), ,, "", ,, 0, ), ;, }, node]
[,, clauseNode, ., getCatchCondition, (, ), ., getLineno, (, ), ,, "", ,, 0, ), ;, }, node, ., addChildToBack]
[,, "", ,, 0, ), ;, }, node, ., addChildToBack, (, transformBlock, (, clauseNode, ., getBody, (, ), ), )]
[., getLineno, (, ), ,, "", ,, 0, ), ;, }, node, ., addChildToBack, (, transformBlock, (, clauseNode, ., getBody]
[., getCatchCondition, (, ), ., getLineno, (, ), ,, "", ,, 0, ), ;, }, node, ., addChildToBack, (, transformBlock]
[,, 0, ), ;, }, node, ., addChildToBack, (, transformBlock, (, clauseNode, ., getBody, (, ), ), ), ;, return]
[), ;, }, node, ., addChildToBack, (, transformBlock, (, clauseNode, ., getBody, (, ), ), ), ;, return, node, ;]
[;, return, node, ;, }, @, Override, Node, processConditionalExpression, (, ConditionalExpression, exprNode, ), {, return, newNode, (, Token, ., HOOK]
[., addChildToBack, (, transformBlock, (, clauseNode, ., getBody, (, ), ), ), ;, return, node, ;, }, @, Override, Node]
[), ;, return, node, ;, }, @, Override, Node, processConditionalExpression, (, ConditionalExpression, exprNode, ), {, return, newNode, (, Token, .]
[), ), ;, return, node, ;, }, @, Override, Node, processConditionalExpression, (, ConditionalExpression, exprNode, ), {, return, newNode, (, Token]
[., getBody, (, ), ), ), ;, return, node, ;, }, @, Override, Node, processConditionalExpression, (, ConditionalExpression, exprNode, ), {]
[;, }, @, Override, Node, processConditionalExpression, (, ConditionalExpression, exprNode, ), {, return, newNode, (, Token, ., HOOK, ,, transform, (]
[;, }, @, Override, Node, processContinueStatement, (, ContinueStatement, statementNode, ), {, Node, node, =, newNode, (, Token, ., CONTINUE, )]
[,, transform, (, exprNode, ., getTestExpression, (, ), ), ,, transform, (, exprNode, ., getTrueExpression, (, ), ), ,, transform]
[., HOOK, ,, transform, (, exprNode, ., getTestExpression, (, ), ), ,, transform, (, exprNode, ., getTrueExpression, (, ), )]
[,, transform, (, exprNode, ., getTrueExpression, (, ), ), ,, transform, (, exprNode, ., getFalseExpression, (, ), ), ), ;]
[), ,, transform, (, exprNode, ., getTrueExpression, (, ), ), ,, transform, (, exprNode, ., getFalseExpression, (, ), ), )]
[., getTestExpression, (, ), ), ,, transform, (, exprNode, ., getTrueExpression, (, ), ), ,, transform, (, exprNode, ., getFalseExpression]
[,, transform, (, exprNode, ., getFalseExpression, (, ), ), ), ;, }, @, Override, Node, processContinueStatement, (, ContinueStatement, statementNode, )]
[), ,, transform, (, exprNode, ., getFalseExpression, (, ), ), ), ;, }, @, Override, Node, processContinueStatement, (, ContinueStatement, statementNode]
[., getTrueExpression, (, ), ), ,, transform, (, exprNode, ., getFalseExpression, (, ), ), ), ;, }, @, Override, Node]
[), ;, }, @, Override, Node, processContinueStatement, (, ContinueStatement, statementNode, ), {, Node, node, =, newNode, (, Token, ., CONTINUE]
[), ), ;, }, @, Override, Node, processContinueStatement, (, ContinueStatement, statementNode, ), {, Node, node, =, newNode, (, Token, .]
[., getFalseExpression, (, ), ), ), ;, }, @, Override, Node, processContinueStatement, (, ContinueStatement, statementNode, ), {, Node, node, =]
[;, if, (, statementNode, ., getLabel, (, ), !=, null, ), {, Node, labelName, =, transform, (, statementNode, ., getLabel]
[), ;, if, (, statementNode, ., getLabel, (, ), !=, null, ), {, Node, labelName, =, transform, (, statementNode, .]
[., CONTINUE, ), ;, if, (, statementNode, ., getLabel, (, ), !=, null, ), {, Node, labelName, =, transform, (]
[), {, Node, labelName, =, transform, (, statementNode, ., getLabel, (, ), ), ;, labelName, ., setType, (, Token, .]
[!=, null, ), {, Node, labelName, =, transform, (, statementNode, ., getLabel, (, ), ), ;, labelName, ., setType, (]
[., getLabel, (, ), !=, null, ), {, Node, labelName, =, transform, (, statementNode, ., getLabel, (, ), ), ;]
[), {, Node, labelName, =, transform, (, statementNode, ., getLabel, (, ), ), ;, labelName, ., setType, (, Token, .]
[;, labelName, ., setType, (, Token, ., LABEL_NAME, ), ;, node, ., addChildToBack, (, labelName, ), ;, }, return, node]
[), ;, labelName, ., setType, (, Token, ., LABEL_NAME, ), ;, node, ., addChildToBack, (, labelName, ), ;, }, return]
[., getLabel, (, ), ), ;, labelName, ., setType, (, Token, ., LABEL_NAME, ), ;, node, ., addChildToBack, (, labelName]
[;, node, ., addChildToBack, (, labelName, ), ;, }, return, node, ;, }, @, Override, Node, processDoLoop, (, DoLoop, loopNode]
[., setType, (, Token, ., LABEL_NAME, ), ;, node, ., addChildToBack, (, labelName, ), ;, }, return, node, ;, }]
[), ;, node, ., addChildToBack, (, labelName, ), ;, }, return, node, ;, }, @, Override, Node, processDoLoop, (, DoLoop]
[., LABEL_NAME, ), ;, node, ., addChildToBack, (, labelName, ), ;, }, return, node, ;, }, @, Override, Node, processDoLoop]
[;, }, return, node, ;, }, @, Override, Node, processDoLoop, (, DoLoop, loopNode, ), {, return, newNode, (, Token, .]
[., addChildToBack, (, labelName, ), ;, }, return, node, ;, }, @, Override, Node, processDoLoop, (, DoLoop, loopNode, ), {]
[), ;, }, return, node, ;, }, @, Override, Node, processDoLoop, (, DoLoop, loopNode, ), {, return, newNode, (, Token]
[;, }, @, Override, Node, processDoLoop, (, DoLoop, loopNode, ), {, return, newNode, (, Token, ., DO, ,, transformBlock, (]
[;, }, @, Override, Node, processElementGet, (, ElementGet, getNode, ), {, return, newNode, (, Token, ., GETELEM, ,, transform, (]
[,, transformBlock, (, loopNode, ., getBody, (, ), ), ,, transform, (, loopNode, ., getCondition, (, ), ), ), ;]
[., DO, ,, transformBlock, (, loopNode, ., getBody, (, ), ), ,, transform, (, loopNode, ., getCondition, (, ), )]
[,, transform, (, loopNode, ., getCondition, (, ), ), ), ;, }, @, Override, Node, processElementGet, (, ElementGet, getNode, )]
[), ,, transform, (, loopNode, ., getCondition, (, ), ), ), ;, }, @, Override, Node, processElementGet, (, ElementGet, getNode]
[., getBody, (, ), ), ,, transform, (, loopNode, ., getCondition, (, ), ), ), ;, }, @, Override, Node]
[), ;, }, @, Override, Node, processElementGet, (, ElementGet, getNode, ), {, return, newNode, (, Token, ., GETELEM, ,, transform]
[), ), ;, }, @, Override, Node, processElementGet, (, ElementGet, getNode, ), {, return, newNode, (, Token, ., GETELEM, ,]
[., getCondition, (, ), ), ), ;, }, @, Override, Node, processElementGet, (, ElementGet, getNode, ), {, return, newNode, (]
[;, }, @, Override, Node, processEmptyExpression, (, EmptyExpression, exprNode, ), {, Node, node, =, newNode, (, Token, ., EMPTY, )]
[,, transform, (, getNode, ., getTarget, (, ), ), ,, transform, (, getNode, ., getElement, (, ), ), ), ;]
[., GETELEM, ,, transform, (, getNode, ., getTarget, (, ), ), ,, transform, (, getNode, ., getElement, (, ), )]
[,, transform, (, getNode, ., getElement, (, ), ), ), ;, }, @, Override, Node, processEmptyExpression, (, EmptyExpression, exprNode, )]
[), ,, transform, (, getNode, ., getElement, (, ), ), ), ;, }, @, Override, Node, processEmptyExpression, (, EmptyExpression, exprNode]
[., getTarget, (, ), ), ,, transform, (, getNode, ., getElement, (, ), ), ), ;, }, @, Override, Node]
[), ;, }, @, Override, Node, processEmptyExpression, (, EmptyExpression, exprNode, ), {, Node, node, =, newNode, (, Token, ., EMPTY]
[), ), ;, }, @, Override, Node, processEmptyExpression, (, EmptyExpression, exprNode, ), {, Node, node, =, newNode, (, Token, .]
[., getElement, (, ), ), ), ;, }, @, Override, Node, processEmptyExpression, (, EmptyExpression, exprNode, ), {, Node, node, =]
[;, return, node, ;, }, @, Override, Node, processEmptyStatement, (, EmptyStatement, exprNode, ), {, Node, node, =, newNode, (, Token]
[), ;, return, node, ;, }, @, Override, Node, processEmptyStatement, (, EmptyStatement, exprNode, ), {, Node, node, =, newNode, (]
[., EMPTY, ), ;, return, node, ;, }, @, Override, Node, processEmptyStatement, (, EmptyStatement, exprNode, ), {, Node, node, =]
[;, }, @, Override, Node, processEmptyStatement, (, EmptyStatement, exprNode, ), {, Node, node, =, newNode, (, Token, ., EMPTY, )]
[;, return, node, ;, }, @, Override, Node, processExpressionStatement, (, ExpressionStatement, statementNode, ), {, Node, node, =, newNode, (, transformTokenType]
[), ;, return, node, ;, }, @, Override, Node, processExpressionStatement, (, ExpressionStatement, statementNode, ), {, Node, node, =, newNode, (]
[., EMPTY, ), ;, return, node, ;, }, @, Override, Node, processExpressionStatement, (, ExpressionStatement, statementNode, ), {, Node, node, =]
[;, }, @, Override, Node, processExpressionStatement, (, ExpressionStatement, statementNode, ), {, Node, node, =, newNode, (, transformTokenType, (, statementNode, .]
[;, node, ., addChildToBack, (, transform, (, statementNode, ., getExpression, (, ), ), ), ;, return, node, ;, }, @]
[), ;, node, ., addChildToBack, (, transform, (, statementNode, ., getExpression, (, ), ), ), ;, return, node, ;, }]
[), ), ;, node, ., addChildToBack, (, transform, (, statementNode, ., getExpression, (, ), ), ), ;, return, node, ;]
[., getType, (, ), ), ), ;, node, ., addChildToBack, (, transform, (, statementNode, ., getExpression, (, ), ), )]
[;, return, node, ;, }, @, Override, Node, processForInLoop, (, ForInLoop, loopNode, ), {, if, (, loopNode, ., isForEach, (]
[., addChildToBack, (, transform, (, statementNode, ., getExpression, (, ), ), ), ;, return, node, ;, }, @, Override, Node]
[), ;, return, node, ;, }, @, Override, Node, processForInLoop, (, ForInLoop, loopNode, ), {, if, (, loopNode, ., isForEach]
[), ), ;, return, node, ;, }, @, Override, Node, processForInLoop, (, ForInLoop, loopNode, ), {, if, (, loopNode, .]
[., getExpression, (, ), ), ), ;, return, node, ;, }, @, Override, Node, processForInLoop, (, ForInLoop, loopNode, ), {]
[;, }, @, Override, Node, processForInLoop, (, ForInLoop, loopNode, ), {, if, (, loopNode, ., isForEach, (, ), ), {]
[), {, errorReporter, ., error, (, "unsupported language extension: for each", ,, sourceName, ,, loopNode, ., getLineno, (, ), ,, "", ,, 0, )]
[., isForEach, (, ), ), {, errorReporter, ., error, (, "unsupported language extension: for each", ,, sourceName, ,, loopNode, ., getLineno, (, ), ,]
[;, return, newNode, (, Token, ., EXPR_RESULT, ,, Node, ., newNumber, (, 0, ), ), ;, }, return, newNode, (]
[., error, (, "unsupported language extension: for each", ,, sourceName, ,, loopNode, ., getLineno, (, ), ,, "", ,, 0, ), ;, return, newNode]
[,, sourceName, ,, loopNode, ., getLineno, (, ), ,, "", ,, 0, ), ;, return, newNode, (, Token, ., EXPR_RESULT]
[,, loopNode, ., getLineno, (, ), ,, "", ,, 0, ), ;, return, newNode, (, Token, ., EXPR_RESULT, ,, Node]
[,, "", ,, 0, ), ;, return, newNode, (, Token, ., EXPR_RESULT, ,, Node, ., newNumber, (, 0, ), )]
[., getLineno, (, ), ,, "", ,, 0, ), ;, return, newNode, (, Token, ., EXPR_RESULT, ,, Node, ., newNumber]
[,, 0, ), ;, return, newNode, (, Token, ., EXPR_RESULT, ,, Node, ., newNumber, (, 0, ), ), ;, }]
[), ;, return, newNode, (, Token, ., EXPR_RESULT, ,, Node, ., newNumber, (, 0, ), ), ;, }, return, newNode]
[;, }, return, newNode, (, Token, ., FOR, ,, transform, (, loopNode, ., getIterator, (, ), ), ,, transform, (]
[,, Node, ., newNumber, (, 0, ), ), ;, }, return, newNode, (, Token, ., FOR, ,, transform, (, loopNode]
[., EXPR_RESULT, ,, Node, ., newNumber, (, 0, ), ), ;, }, return, newNode, (, Token, ., FOR, ,, transform]
[), ;, }, return, newNode, (, Token, ., FOR, ,, transform, (, loopNode, ., getIterator, (, ), ), ,, transform]
[., newNumber, (, 0, ), ), ;, }, return, newNode, (, Token, ., FOR, ,, transform, (, loopNode, ., getIterator]
[), ), ;, }, return, newNode, (, Token, ., FOR, ,, transform, (, loopNode, ., getIterator, (, ), ), ,]
[;, }, @, Override, Node, processForLoop, (, ForLoop, loopNode, ), {, Node, node, =, newNode, (, Token, ., FOR, ,]
[,, transform, (, loopNode, ., getIterator, (, ), ), ,, transform, (, loopNode, ., getIteratedObject, (, ), ), ,, transformBlock]
[., FOR, ,, transform, (, loopNode, ., getIterator, (, ), ), ,, transform, (, loopNode, ., getIteratedObject, (, ), )]
[,, transform, (, loopNode, ., getIteratedObject, (, ), ), ,, transformBlock, (, loopNode, ., getBody, (, ), ), ), ;]
[), ,, transform, (, loopNode, ., getIteratedObject, (, ), ), ,, transformBlock, (, loopNode, ., getBody, (, ), ), )]
[., getIterator, (, ), ), ,, transform, (, loopNode, ., getIteratedObject, (, ), ), ,, transformBlock, (, loopNode, ., getBody]
[,, transformBlock, (, loopNode, ., getBody, (, ), ), ), ;, }, @, Override, Node, processForLoop, (, ForLoop, loopNode, )]
[), ,, transformBlock, (, loopNode, ., getBody, (, ), ), ), ;, }, @, Override, Node, processForLoop, (, ForLoop, loopNode]
[., getIteratedObject, (, ), ), ,, transformBlock, (, loopNode, ., getBody, (, ), ), ), ;, }, @, Override, Node]
[), ;, }, @, Override, Node, processForLoop, (, ForLoop, loopNode, ), {, Node, node, =, newNode, (, Token, ., FOR]
[), ), ;, }, @, Override, Node, processForLoop, (, ForLoop, loopNode, ), {, Node, node, =, newNode, (, Token, .]
[., getBody, (, ), ), ), ;, }, @, Override, Node, processForLoop, (, ForLoop, loopNode, ), {, Node, node, =]
[;, node, ., addChildToBack, (, transformBlock, (, loopNode, ., getBody, (, ), ), ), ;, return, node, ;, }, @]
[,, transform, (, loopNode, ., getInitializer, (, ), ), ,, transform, (, loopNode, ., getCondition, (, ), ), ,, transform]
[., FOR, ,, transform, (, loopNode, ., getInitializer, (, ), ), ,, transform, (, loopNode, ., getCondition, (, ), )]
[,, transform, (, loopNode, ., getCondition, (, ), ), ,, transform, (, loopNode, ., getIncrement, (, ), ), ), ;]
[), ,, transform, (, loopNode, ., getCondition, (, ), ), ,, transform, (, loopNode, ., getIncrement, (, ), ), )]
[., getInitializer, (, ), ), ,, transform, (, loopNode, ., getCondition, (, ), ), ,, transform, (, loopNode, ., getIncrement]
[,, transform, (, loopNode, ., getIncrement, (, ), ), ), ;, node, ., addChildToBack, (, transformBlock, (, loopNode, ., getBody]
[), ,, transform, (, loopNode, ., getIncrement, (, ), ), ), ;, node, ., addChildToBack, (, transformBlock, (, loopNode, .]
[., getCondition, (, ), ), ,, transform, (, loopNode, ., getIncrement, (, ), ), ), ;, node, ., addChildToBack, (]
[), ;, node, ., addChildToBack, (, transformBlock, (, loopNode, ., getBody, (, ), ), ), ;, return, node, ;, }]
[), ), ;, node, ., addChildToBack, (, transformBlock, (, loopNode, ., getBody, (, ), ), ), ;, return, node, ;]
[., getIncrement, (, ), ), ), ;, node, ., addChildToBack, (, transformBlock, (, loopNode, ., getBody, (, ), ), )]
[;, return, node, ;, }, @, Override, Node, processFunctionCall, (, FunctionCall, callNode, ), {, Node, node, =, newNode, (, transformTokenType]
[., addChildToBack, (, transformBlock, (, loopNode, ., getBody, (, ), ), ), ;, return, node, ;, }, @, Override, Node]
[), ;, return, node, ;, }, @, Override, Node, processFunctionCall, (, FunctionCall, callNode, ), {, Node, node, =, newNode, (]
[), ), ;, return, node, ;, }, @, Override, Node, processFunctionCall, (, FunctionCall, callNode, ), {, Node, node, =, newNode]
[., getBody, (, ), ), ), ;, return, node, ;, }, @, Override, Node, processFunctionCall, (, FunctionCall, callNode, ), {]
[;, }, @, Override, Node, processFunctionCall, (, FunctionCall, callNode, ), {, Node, node, =, newNode, (, transformTokenType, (, callNode, .]
[;, for, (, AstNode, child, :, callNode, ., getArguments, (, ), ), {, node, ., addChildToBack, (, transform, (, child]
[,, transform, (, callNode, ., getTarget, (, ), ), ), ;, for, (, AstNode, child, :, callNode, ., getArguments, (]
[), ,, transform, (, callNode, ., getTarget, (, ), ), ), ;, for, (, AstNode, child, :, callNode, ., getArguments]
[., getType, (, ), ), ,, transform, (, callNode, ., getTarget, (, ), ), ), ;, for, (, AstNode, child]
[), ;, for, (, AstNode, child, :, callNode, ., getArguments, (, ), ), {, node, ., addChildToBack, (, transform, (]
[), ), ;, for, (, AstNode, child, :, callNode, ., getArguments, (, ), ), {, node, ., addChildToBack, (, transform]
[., getTarget, (, ), ), ), ;, for, (, AstNode, child, :, callNode, ., getArguments, (, ), ), {, node]
[), {, node, ., addChildToBack, (, transform, (, child, ), ), ;, }, node, ., setLineno, (, node, ., getFirstChild]
[., getArguments, (, ), ), {, node, ., addChildToBack, (, transform, (, child, ), ), ;, }, node, ., setLineno]
[;, }, node, ., setLineno, (, node, ., getFirstChild, (, ), ., getLineno, (, ), ), ;, node, ., setCharno]
[., addChildToBack, (, transform, (, child, ), ), ;, }, node, ., setLineno, (, node, ., getFirstChild, (, ), .]
[), ;, }, node, ., setLineno, (, node, ., getFirstChild, (, ), ., getLineno, (, ), ), ;, node, .]
[), ), ;, }, node, ., setLineno, (, node, ., getFirstChild, (, ), ., getLineno, (, ), ), ;, node]
[;, node, ., setCharno, (, node, ., getFirstChild, (, ), ., getCharno, (, ), ), ;, maybeSetLengthFrom, (, node, ,]
[., setLineno, (, node, ., getFirstChild, (, ), ., getLineno, (, ), ), ;, node, ., setCharno, (, node, .]
[), ;, node, ., setCharno, (, node, ., getFirstChild, (, ), ., getCharno, (, ), ), ;, maybeSetLengthFrom, (, node]
[., getLineno, (, ), ), ;, node, ., setCharno, (, node, ., getFirstChild, (, ), ., getCharno, (, ), )]
[., getFirstChild, (, ), ., getLineno, (, ), ), ;, node, ., setCharno, (, node, ., getFirstChild, (, ), .]
[;, maybeSetLengthFrom, (, node, ,, callNode, ), ;, return, node, ;, }, @, Override, Node, processFunctionNode, (, FunctionNode, functionNode, )]
[., setCharno, (, node, ., getFirstChild, (, ), ., getCharno, (, ), ), ;, maybeSetLengthFrom, (, node, ,, callNode, )]
[), ;, maybeSetLengthFrom, (, node, ,, callNode, ), ;, return, node, ;, }, @, Override, Node, processFunctionNode, (, FunctionNode, functionNode]
[., getCharno, (, ), ), ;, maybeSetLengthFrom, (, node, ,, callNode, ), ;, return, node, ;, }, @, Override, Node]
[., getFirstChild, (, ), ., getCharno, (, ), ), ;, maybeSetLengthFrom, (, node, ,, callNode, ), ;, return, node, ;]
[;, return, node, ;, }, @, Override, Node, processFunctionNode, (, FunctionNode, functionNode, ), {, Name, name, =, functionNode, ., getFunctionName]
[,, callNode, ), ;, return, node, ;, }, @, Override, Node, processFunctionNode, (, FunctionNode, functionNode, ), {, Name, name, =]
[), ;, return, node, ;, }, @, Override, Node, processFunctionNode, (, FunctionNode, functionNode, ), {, Name, name, =, functionNode, .]
[;, }, @, Override, Node, processFunctionNode, (, FunctionNode, functionNode, ), {, Name, name, =, functionNode, ., getFunctionName, (, ), ;]
[;, Boolean, isUnnamedFunction, =, false, ;, if, (, name, ==, null, ), {, int, functionType, =, functionNode, ., getFunctionType, (]
[., getFunctionName, (, ), ;, Boolean, isUnnamedFunction, =, false, ;, if, (, name, ==, null, ), {, int, functionType, =]
[;, if, (, name, ==, null, ), {, int, functionType, =, functionNode, ., getFunctionType, (, ), ;, if, (, functionType]
[), {, int, functionType, =, functionNode, ., getFunctionType, (, ), ;, if, (, functionType, !=, FunctionNode, ., FUNCTION_EXPRESSION, ), {]
[==, null, ), {, int, functionType, =, functionNode, ., getFunctionType, (, ), ;, if, (, functionType, !=, FunctionNode, ., FUNCTION_EXPRESSION]
[), {, int, functionType, =, functionNode, ., getFunctionType, (, ), ;, if, (, functionType, !=, FunctionNode, ., FUNCTION_EXPRESSION, ), {]
[;, if, (, functionType, !=, FunctionNode, ., FUNCTION_EXPRESSION, ), {, errorReporter, ., error, (, "unnamed function statement", ,, sourceName, ,, functionNode, .]
[., getFunctionType, (, ), ;, if, (, functionType, !=, FunctionNode, ., FUNCTION_EXPRESSION, ), {, errorReporter, ., error, (, "unnamed function statement", ,]
[), {, errorReporter, ., error, (, "unnamed function statement", ,, sourceName, ,, functionNode, ., getLineno, (, ), ,, "", ,, 0, )]
[!=, FunctionNode, ., FUNCTION_EXPRESSION, ), {, errorReporter, ., error, (, "unnamed function statement", ,, sourceName, ,, functionNode, ., getLineno, (, ), ,]
[), {, errorReporter, ., error, (, "unnamed function statement", ,, sourceName, ,, functionNode, ., getLineno, (, ), ,, "", ,, 0, )]
[., FUNCTION_EXPRESSION, ), {, errorReporter, ., error, (, "unnamed function statement", ,, sourceName, ,, functionNode, ., getLineno, (, ), ,, "", ,]
[;, return, newNode, (, Token, ., EXPR_RESULT, ,, Node, ., newNumber, (, 0, ), ), ;, }, name, =, new]
[., error, (, "unnamed function statement", ,, sourceName, ,, functionNode, ., getLineno, (, ), ,, "", ,, 0, ), ;, return, newNode]
[,, sourceName, ,, functionNode, ., getLineno, (, ), ,, "", ,, 0, ), ;, return, newNode, (, Token, ., EXPR_RESULT]
[,, functionNode, ., getLineno, (, ), ,, "", ,, 0, ), ;, return, newNode, (, Token, ., EXPR_RESULT, ,, Node]
[,, "", ,, 0, ), ;, return, newNode, (, Token, ., EXPR_RESULT, ,, Node, ., newNumber, (, 0, ), )]
[., getLineno, (, ), ,, "", ,, 0, ), ;, return, newNode, (, Token, ., EXPR_RESULT, ,, Node, ., newNumber]
[,, 0, ), ;, return, newNode, (, Token, ., EXPR_RESULT, ,, Node, ., newNumber, (, 0, ), ), ;, }]
[), ;, return, newNode, (, Token, ., EXPR_RESULT, ,, Node, ., newNumber, (, 0, ), ), ;, }, name, =]
[;, }, name, =, new, Name, (, ), ;, name, ., setIdentifier, (, "", ), ;, isUnnamedFunction, =, true, ;]
[,, Node, ., newNumber, (, 0, ), ), ;, }, name, =, new, Name, (, ), ;, name, ., setIdentifier]
[., EXPR_RESULT, ,, Node, ., newNumber, (, 0, ), ), ;, }, name, =, new, Name, (, ), ;, name]
[), ;, }, name, =, new, Name, (, ), ;, name, ., setIdentifier, (, "", ), ;, isUnnamedFunction, =, true]
[., newNumber, (, 0, ), ), ;, }, name, =, new, Name, (, ), ;, name, ., setIdentifier, (, ""]
[), ), ;, }, name, =, new, Name, (, ), ;, name, ., setIdentifier, (, "", ), ;, isUnnamedFunction, =]
[=, new, Name, (, ), ;, name, ., setIdentifier, (, "", ), ;, isUnnamedFunction, =, true, ;, }, Node, node]
[;, name, ., setIdentifier, (, "", ), ;, isUnnamedFunction, =, true, ;, }, Node, node, =, newNode, (, Token, .]
[;, isUnnamedFunction, =, true, ;, }, Node, node, =, newNode, (, Token, ., FUNCTION, ), ;, Node, newName, =, transform]
[., setIdentifier, (, "", ), ;, isUnnamedFunction, =, true, ;, }, Node, node, =, newNode, (, Token, ., FUNCTION, )]
[), ;, isUnnamedFunction, =, true, ;, }, Node, node, =, newNode, (, Token, ., FUNCTION, ), ;, Node, newName, =]
[=, true, ;, }, Node, node, =, newNode, (, Token, ., FUNCTION, ), ;, Node, newName, =, transform, (, name]
[;, }, Node, node, =, newNode, (, Token, ., FUNCTION, ), ;, Node, newName, =, transform, (, name, ), ;]
[;, Node, newName, =, transform, (, name, ), ;, if, (, isUnnamedFunction, ), {, newName, ., setLineno, (, functionNode, .]
[), ;, Node, newName, =, transform, (, name, ), ;, if, (, isUnnamedFunction, ), {, newName, ., setLineno, (, functionNode]
[., FUNCTION, ), ;, Node, newName, =, transform, (, name, ), ;, if, (, isUnnamedFunction, ), {, newName, ., setLineno]
[;, if, (, isUnnamedFunction, ), {, newName, ., setLineno, (, functionNode, ., getLineno, (, ), ), ;, int, lpColumn, =]
[), ;, if, (, isUnnamedFunction, ), {, newName, ., setLineno, (, functionNode, ., getLineno, (, ), ), ;, int, lpColumn]
[), {, newName, ., setLineno, (, functionNode, ., getLineno, (, ), ), ;, int, lpColumn, =, functionNode, ., getAbsolutePosition, (]
[;, int, lpColumn, =, functionNode, ., getAbsolutePosition, (, ), +, functionNode, ., getLp, (, ), ;, newName, ., setCharno, (]
[., setLineno, (, functionNode, ., getLineno, (, ), ), ;, int, lpColumn, =, functionNode, ., getAbsolutePosition, (, ), +, functionNode]
[), ;, int, lpColumn, =, functionNode, ., getAbsolutePosition, (, ), +, functionNode, ., getLp, (, ), ;, newName, ., setCharno]
[., getLineno, (, ), ), ;, int, lpColumn, =, functionNode, ., getAbsolutePosition, (, ), +, functionNode, ., getLp, (, )]
[;, newName, ., setCharno, (, position2charno, (, lpColumn, ), ), ;, maybeSetLengthFrom, (, newName, ,, name, ), ;, }, node]
[+, functionNode, ., getLp, (, ), ;, newName, ., setCharno, (, position2charno, (, lpColumn, ), ), ;, maybeSetLengthFrom, (, newName]
[., getAbsolutePosition, (, ), +, functionNode, ., getLp, (, ), ;, newName, ., setCharno, (, position2charno, (, lpColumn, ), )]
[;, newName, ., setCharno, (, position2charno, (, lpColumn, ), ), ;, maybeSetLengthFrom, (, newName, ,, name, ), ;, }, node]
[., getLp, (, ), ;, newName, ., setCharno, (, position2charno, (, lpColumn, ), ), ;, maybeSetLengthFrom, (, newName, ,, name]
[;, maybeSetLengthFrom, (, newName, ,, name, ), ;, }, node, ., addChildToBack, (, newName, ), ;, Node, lp, =, newNode]
[., setCharno, (, position2charno, (, lpColumn, ), ), ;, maybeSetLengthFrom, (, newName, ,, name, ), ;, }, node, ., addChildToBack]
[), ;, maybeSetLengthFrom, (, newName, ,, name, ), ;, }, node, ., addChildToBack, (, newName, ), ;, Node, lp, =]
[), ), ;, maybeSetLengthFrom, (, newName, ,, name, ), ;, }, node, ., addChildToBack, (, newName, ), ;, Node, lp]
[;, }, node, ., addChildToBack, (, newName, ), ;, Node, lp, =, newNode, (, Token, ., PARAM_LIST, ), ;, Name]
[,, name, ), ;, }, node, ., addChildToBack, (, newName, ), ;, Node, lp, =, newNode, (, Token, ., PARAM_LIST]
[), ;, }, node, ., addChildToBack, (, newName, ), ;, Node, lp, =, newNode, (, Token, ., PARAM_LIST, ), ;]
[;, Node, lp, =, newNode, (, Token, ., PARAM_LIST, ), ;, Name, fnName, =, functionNode, ., getFunctionName, (, ), ;]
[., addChildToBack, (, newName, ), ;, Node, lp, =, newNode, (, Token, ., PARAM_LIST, ), ;, Name, fnName, =, functionNode]
[), ;, Node, lp, =, newNode, (, Token, ., PARAM_LIST, ), ;, Name, fnName, =, functionNode, ., getFunctionName, (, )]
[;, Name, fnName, =, functionNode, ., getFunctionName, (, ), ;, if, (, fnName, !=, null, ), {, lp, ., setLineno]
[), ;, Name, fnName, =, functionNode, ., getFunctionName, (, ), ;, if, (, fnName, !=, null, ), {, lp, .]
[., PARAM_LIST, ), ;, Name, fnName, =, functionNode, ., getFunctionName, (, ), ;, if, (, fnName, !=, null, ), {]
[;, if, (, fnName, !=, null, ), {, lp, ., setLineno, (, fnName, ., getLineno, (, ), ), ;, }]
[., getFunctionName, (, ), ;, if, (, fnName, !=, null, ), {, lp, ., setLineno, (, fnName, ., getLineno, (]
[), {, lp, ., setLineno, (, fnName, ., getLineno, (, ), ), ;, }, else, {, lp, ., setLineno, (]
[!=, null, ), {, lp, ., setLineno, (, fnName, ., getLineno, (, ), ), ;, }, else, {, lp, .]
[), {, lp, ., setLineno, (, fnName, ., getLineno, (, ), ), ;, }, else, {, lp, ., setLineno, (]
[;, }, else, {, lp, ., setLineno, (, functionNode, ., getLineno, (, ), ), ;, }, int, lparenCharno, =, functionNode]
[., setLineno, (, fnName, ., getLineno, (, ), ), ;, }, else, {, lp, ., setLineno, (, functionNode, ., getLineno]
[), ;, }, else, {, lp, ., setLineno, (, functionNode, ., getLineno, (, ), ), ;, }, int, lparenCharno, =]
[., getLineno, (, ), ), ;, }, else, {, lp, ., setLineno, (, functionNode, ., getLineno, (, ), ), ;]
[;, }, int, lparenCharno, =, functionNode, ., getLp, (, ), +, functionNode, ., getAbsolutePosition, (, ), ;, lp, ., setCharno]
[., setLineno, (, functionNode, ., getLineno, (, ), ), ;, }, int, lparenCharno, =, functionNode, ., getLp, (, ), +]
[), ;, }, int, lparenCharno, =, functionNode, ., getLp, (, ), +, functionNode, ., getAbsolutePosition, (, ), ;, lp, .]
[., getLineno, (, ), ), ;, }, int, lparenCharno, =, functionNode, ., getLp, (, ), +, functionNode, ., getAbsolutePosition, (]
[;, lp, ., setCharno, (, position2charno, (, lparenCharno, ), ), ;, for, (, AstNode, param, :, functionNode, ., getParams, (]
[+, functionNode, ., getAbsolutePosition, (, ), ;, lp, ., setCharno, (, position2charno, (, lparenCharno, ), ), ;, for, (, AstNode]
[., getLp, (, ), +, functionNode, ., getAbsolutePosition, (, ), ;, lp, ., setCharno, (, position2charno, (, lparenCharno, ), )]
[;, lp, ., setCharno, (, position2charno, (, lparenCharno, ), ), ;, for, (, AstNode, param, :, functionNode, ., getParams, (]
[., getAbsolutePosition, (, ), ;, lp, ., setCharno, (, position2charno, (, lparenCharno, ), ), ;, for, (, AstNode, param, :]
[;, for, (, AstNode, param, :, functionNode, ., getParams, (, ), ), {, Node, paramNode, =, transform, (, param, )]
[., setCharno, (, position2charno, (, lparenCharno, ), ), ;, for, (, AstNode, param, :, functionNode, ., getParams, (, ), )]
[), ;, for, (, AstNode, param, :, functionNode, ., getParams, (, ), ), {, Node, paramNode, =, transform, (, param]
[), ), ;, for, (, AstNode, param, :, functionNode, ., getParams, (, ), ), {, Node, paramNode, =, transform, (]
[), {, Node, paramNode, =, transform, (, param, ), ;, if, (, paramNode, ., isName, (, ), ), {, lp]
[., getParams, (, ), ), {, Node, paramNode, =, transform, (, param, ), ;, if, (, paramNode, ., isName, (]
[;, if, (, paramNode, ., isName, (, ), ), {, lp, ., addChildToBack, (, paramNode, ), ;, }, else, {]
[), ;, if, (, paramNode, ., isName, (, ), ), {, lp, ., addChildToBack, (, paramNode, ), ;, }, else]
[), {, lp, ., addChildToBack, (, paramNode, ), ;, }, else, {, Preconditions, ., checkState, (, config, ., isIdeMode, ||]
[., isName, (, ), ), {, lp, ., addChildToBack, (, paramNode, ), ;, }, else, {, Preconditions, ., checkState, (]
[;, }, else, {, Preconditions, ., checkState, (, config, ., isIdeMode, ||, paramNode, ., isObjectLit, (, ), ||, paramNode, .]
[., addChildToBack, (, paramNode, ), ;, }, else, {, Preconditions, ., checkState, (, config, ., isIdeMode, ||, paramNode, ., isObjectLit]
[), ;, }, else, {, Preconditions, ., checkState, (, config, ., isIdeMode, ||, paramNode, ., isObjectLit, (, ), ||, paramNode]
[;, }, }, node, ., addChildToBack, (, lp, ), ;, Node, bodyNode, =, transform, (, functionNode, ., getBody, (, )]
[., checkState, (, config, ., isIdeMode, ||, paramNode, ., isObjectLit, (, ), ||, paramNode, ., isArrayLit, (, ), ), ;]
[), ;, }, }, node, ., addChildToBack, (, lp, ), ;, Node, bodyNode, =, transform, (, functionNode, ., getBody, (]
[||, paramNode, ., isArrayLit, (, ), ), ;, }, }, node, ., addChildToBack, (, lp, ), ;, Node, bodyNode, =]
[||, paramNode, ., isObjectLit, (, ), ||, paramNode, ., isArrayLit, (, ), ), ;, }, }, node, ., addChildToBack, (]
[., isIdeMode, ||, paramNode, ., isObjectLit, (, ), ||, paramNode, ., isArrayLit, (, ), ), ;, }, }, node, .]
[||, paramNode, ., isArrayLit, (, ), ), ;, }, }, node, ., addChildToBack, (, lp, ), ;, Node, bodyNode, =]
[., isObjectLit, (, ), ||, paramNode, ., isArrayLit, (, ), ), ;, }, }, node, ., addChildToBack, (, lp, )]
[), ;, }, }, node, ., addChildToBack, (, lp, ), ;, Node, bodyNode, =, transform, (, functionNode, ., getBody, (]
[., isArrayLit, (, ), ), ;, }, }, node, ., addChildToBack, (, lp, ), ;, Node, bodyNode, =, transform, (]
[;, Node, bodyNode, =, transform, (, functionNode, ., getBody, (, ), ), ;, if, (, !, bodyNode, ., isBlock, (]
[., addChildToBack, (, lp, ), ;, Node, bodyNode, =, transform, (, functionNode, ., getBody, (, ), ), ;, if, (]
[), ;, Node, bodyNode, =, transform, (, functionNode, ., getBody, (, ), ), ;, if, (, !, bodyNode, ., isBlock]
[;, if, (, !, bodyNode, ., isBlock, (, ), ), {, Preconditions, ., checkState, (, config, ., isIdeMode, ), ;]
[), ;, if, (, !, bodyNode, ., isBlock, (, ), ), {, Preconditions, ., checkState, (, config, ., isIdeMode, )]
[., getBody, (, ), ), ;, if, (, !, bodyNode, ., isBlock, (, ), ), {, Preconditions, ., checkState, (]
[), {, Preconditions, ., checkState, (, config, ., isIdeMode, ), ;, bodyNode, =, IR, ., block, (, ), ;, }]
[), {, Preconditions, ., checkState, (, config, ., isIdeMode, ), ;, bodyNode, =, IR, ., block, (, ), ;, }]
[., isBlock, (, ), ), {, Preconditions, ., checkState, (, config, ., isIdeMode, ), ;, bodyNode, =, IR, ., block]
[;, bodyNode, =, IR, ., block, (, ), ;, }, parseDirectives, (, bodyNode, ), ;, node, ., addChildToBack, (, bodyNode]
[., checkState, (, config, ., isIdeMode, ), ;, bodyNode, =, IR, ., block, (, ), ;, }, parseDirectives, (, bodyNode]
[), ;, bodyNode, =, IR, ., block, (, ), ;, }, parseDirectives, (, bodyNode, ), ;, node, ., addChildToBack, (]
[., isIdeMode, ), ;, bodyNode, =, IR, ., block, (, ), ;, }, parseDirectives, (, bodyNode, ), ;, node, .]
[=, IR, ., block, (, ), ;, }, parseDirectives, (, bodyNode, ), ;, node, ., addChildToBack, (, bodyNode, ), ;]
[;, }, parseDirectives, (, bodyNode, ), ;, node, ., addChildToBack, (, bodyNode, ), ;, return, node, ;, }, @, Override]
[., block, (, ), ;, }, parseDirectives, (, bodyNode, ), ;, node, ., addChildToBack, (, bodyNode, ), ;, return, node]
[;, node, ., addChildToBack, (, bodyNode, ), ;, return, node, ;, }, @, Override, Node, processIfStatement, (, IfStatement, statementNode, )]
[), ;, node, ., addChildToBack, (, bodyNode, ), ;, return, node, ;, }, @, Override, Node, processIfStatement, (, IfStatement, statementNode]
[;, return, node, ;, }, @, Override, Node, processIfStatement, (, IfStatement, statementNode, ), {, Node, node, =, newNode, (, Token]
[., addChildToBack, (, bodyNode, ), ;, return, node, ;, }, @, Override, Node, processIfStatement, (, IfStatement, statementNode, ), {, Node]
[), ;, return, node, ;, }, @, Override, Node, processIfStatement, (, IfStatement, statementNode, ), {, Node, node, =, newNode, (]
[;, }, @, Override, Node, processIfStatement, (, IfStatement, statementNode, ), {, Node, node, =, newNode, (, Token, ., IF, )]
[;, node, ., addChildToBack, (, transform, (, statementNode, ., getCondition, (, ), ), ), ;, node, ., addChildToBack, (, transformBlock]
[), ;, node, ., addChildToBack, (, transform, (, statementNode, ., getCondition, (, ), ), ), ;, node, ., addChildToBack, (]
[., IF, ), ;, node, ., addChildToBack, (, transform, (, statementNode, ., getCondition, (, ), ), ), ;, node, .]
[;, node, ., addChildToBack, (, transformBlock, (, statementNode, ., getThenPart, (, ), ), ), ;, if, (, statementNode, ., getElsePart]
[., addChildToBack, (, transform, (, statementNode, ., getCondition, (, ), ), ), ;, node, ., addChildToBack, (, transformBlock, (, statementNode]
[), ;, node, ., addChildToBack, (, transformBlock, (, statementNode, ., getThenPart, (, ), ), ), ;, if, (, statementNode, .]
[), ), ;, node, ., addChildToBack, (, transformBlock, (, statementNode, ., getThenPart, (, ), ), ), ;, if, (, statementNode]
[., getCondition, (, ), ), ), ;, node, ., addChildToBack, (, transformBlock, (, statementNode, ., getThenPart, (, ), ), )]
[;, if, (, statementNode, ., getElsePart, (, ), !=, null, ), {, node, ., addChildToBack, (, transformBlock, (, statementNode, .]
[., addChildToBack, (, transformBlock, (, statementNode, ., getThenPart, (, ), ), ), ;, if, (, statementNode, ., getElsePart, (, )]
[), ;, if, (, statementNode, ., getElsePart, (, ), !=, null, ), {, node, ., addChildToBack, (, transformBlock, (, statementNode]
[), ), ;, if, (, statementNode, ., getElsePart, (, ), !=, null, ), {, node, ., addChildToBack, (, transformBlock, (]
[., getThenPart, (, ), ), ), ;, if, (, statementNode, ., getElsePart, (, ), !=, null, ), {, node, .]
[), {, node, ., addChildToBack, (, transformBlock, (, statementNode, ., getElsePart, (, ), ), ), ;, }, return, node, ;]
[!=, null, ), {, node, ., addChildToBack, (, transformBlock, (, statementNode, ., getElsePart, (, ), ), ), ;, }, return]
[., getElsePart, (, ), !=, null, ), {, node, ., addChildToBack, (, transformBlock, (, statementNode, ., getElsePart, (, ), )]
[), {, node, ., addChildToBack, (, transformBlock, (, statementNode, ., getElsePart, (, ), ), ), ;, }, return, node, ;]
[;, }, return, node, ;, }, @, Override, Node, processInfixExpression, (, InfixExpression, exprNode, ), {, Node, n, =, newNode, (]
[., addChildToBack, (, transformBlock, (, statementNode, ., getElsePart, (, ), ), ), ;, }, return, node, ;, }, @, Override]
[), ;, }, return, node, ;, }, @, Override, Node, processInfixExpression, (, InfixExpression, exprNode, ), {, Node, n, =, newNode]
[), ), ;, }, return, node, ;, }, @, Override, Node, processInfixExpression, (, InfixExpression, exprNode, ), {, Node, n, =]
[., getElsePart, (, ), ), ), ;, }, return, node, ;, }, @, Override, Node, processInfixExpression, (, InfixExpression, exprNode, )]
[;, }, @, Override, Node, processInfixExpression, (, InfixExpression, exprNode, ), {, Node, n, =, newNode, (, transformTokenType, (, exprNode, .]
[;, n, ., setLineno, (, exprNode, ., getLineno, (, ), ), ;, n, ., setCharno, (, position2charno, (, exprNode, .]
[,, transform, (, exprNode, ., getLeft, (, ), ), ,, transform, (, exprNode, ., getRight, (, ), ), ), ;]
[), ,, transform, (, exprNode, ., getLeft, (, ), ), ,, transform, (, exprNode, ., getRight, (, ), ), )]
[., getType, (, ), ), ,, transform, (, exprNode, ., getLeft, (, ), ), ,, transform, (, exprNode, ., getRight]
[,, transform, (, exprNode, ., getRight, (, ), ), ), ;, n, ., setLineno, (, exprNode, ., getLineno, (, )]
[), ,, transform, (, exprNode, ., getRight, (, ), ), ), ;, n, ., setLineno, (, exprNode, ., getLineno, (]
[., getLeft, (, ), ), ,, transform, (, exprNode, ., getRight, (, ), ), ), ;, n, ., setLineno, (]
[), ;, n, ., setLineno, (, exprNode, ., getLineno, (, ), ), ;, n, ., setCharno, (, position2charno, (, exprNode]
[), ), ;, n, ., setLineno, (, exprNode, ., getLineno, (, ), ), ;, n, ., setCharno, (, position2charno, (]
[., getRight, (, ), ), ), ;, n, ., setLineno, (, exprNode, ., getLineno, (, ), ), ;, n, .]
[;, n, ., setCharno, (, position2charno, (, exprNode, ., getAbsolutePosition, (, ), ), ), ;, maybeSetLengthFrom, (, n, ,, exprNode]
[., setLineno, (, exprNode, ., getLineno, (, ), ), ;, n, ., setCharno, (, position2charno, (, exprNode, ., getAbsolutePosition, (]
[), ;, n, ., setCharno, (, position2charno, (, exprNode, ., getAbsolutePosition, (, ), ), ), ;, maybeSetLengthFrom, (, n, ,]
[., getLineno, (, ), ), ;, n, ., setCharno, (, position2charno, (, exprNode, ., getAbsolutePosition, (, ), ), ), ;]
[;, maybeSetLengthFrom, (, n, ,, exprNode, ), ;, return, n, ;, }, @, Override, Node, processKeywordLiteral, (, KeywordLiteral, literalNode, )]
[., setCharno, (, position2charno, (, exprNode, ., getAbsolutePosition, (, ), ), ), ;, maybeSetLengthFrom, (, n, ,, exprNode, ), ;]
[), ;, maybeSetLengthFrom, (, n, ,, exprNode, ), ;, return, n, ;, }, @, Override, Node, processKeywordLiteral, (, KeywordLiteral, literalNode]
[), ), ;, maybeSetLengthFrom, (, n, ,, exprNode, ), ;, return, n, ;, }, @, Override, Node, processKeywordLiteral, (, KeywordLiteral]
[., getAbsolutePosition, (, ), ), ), ;, maybeSetLengthFrom, (, n, ,, exprNode, ), ;, return, n, ;, }, @, Override]
[;, return, n, ;, }, @, Override, Node, processKeywordLiteral, (, KeywordLiteral, literalNode, ), {, return, newNode, (, transformTokenType, (, literalNode]
[,, exprNode, ), ;, return, n, ;, }, @, Override, Node, processKeywordLiteral, (, KeywordLiteral, literalNode, ), {, return, newNode, (]
[), ;, return, n, ;, }, @, Override, Node, processKeywordLiteral, (, KeywordLiteral, literalNode, ), {, return, newNode, (, transformTokenType, (]
[;, }, @, Override, Node, processKeywordLiteral, (, KeywordLiteral, literalNode, ), {, return, newNode, (, transformTokenType, (, literalNode, ., getType, (]
[;, }, @, Override, Node, processLabel, (, Label, labelNode, ), {, return, newStringNode, (, Token, ., LABEL_NAME, ,, labelNode, .]
[), ;, }, @, Override, Node, processLabel, (, Label, labelNode, ), {, return, newStringNode, (, Token, ., LABEL_NAME, ,, labelNode]
[), ), ;, }, @, Override, Node, processLabel, (, Label, labelNode, ), {, return, newStringNode, (, Token, ., LABEL_NAME, ,]
[., getType, (, ), ), ), ;, }, @, Override, Node, processLabel, (, Label, labelNode, ), {, return, newStringNode, (]
[;, }, @, Override, Node, processLabeledStatement, (, LabeledStatement, statementNode, ), {, Node, node, =, newNode, (, Token, ., LABEL, )]
[,, labelNode, ., getName, (, ), ), ;, }, @, Override, Node, processLabeledStatement, (, LabeledStatement, statementNode, ), {, Node, node]
[., LABEL_NAME, ,, labelNode, ., getName, (, ), ), ;, }, @, Override, Node, processLabeledStatement, (, LabeledStatement, statementNode, ), {]
[), ;, }, @, Override, Node, processLabeledStatement, (, LabeledStatement, statementNode, ), {, Node, node, =, newNode, (, Token, ., LABEL]
[., getName, (, ), ), ;, }, @, Override, Node, processLabeledStatement, (, LabeledStatement, statementNode, ), {, Node, node, =, newNode]
[;, Node, prev, =, null, ;, Node, cur, =, node, ;, for, (, Label, label, :, statementNode, ., getLabels, (]
[), ;, Node, prev, =, null, ;, Node, cur, =, node, ;, for, (, Label, label, :, statementNode, ., getLabels]
[., LABEL, ), ;, Node, prev, =, null, ;, Node, cur, =, node, ;, for, (, Label, label, :, statementNode]
[;, Node, cur, =, node, ;, for, (, Label, label, :, statementNode, ., getLabels, (, ), ), {, if, (]
[;, for, (, Label, label, :, statementNode, ., getLabels, (, ), ), {, if, (, prev, !=, null, ), {]
[), {, if, (, prev, !=, null, ), {, prev, ., addChildToBack, (, cur, ), ;, }, cur, ., addChildToBack]
[., getLabels, (, ), ), {, if, (, prev, !=, null, ), {, prev, ., addChildToBack, (, cur, ), ;]
[), {, prev, ., addChildToBack, (, cur, ), ;, }, cur, ., addChildToBack, (, transform, (, label, ), ), ;]
[!=, null, ), {, prev, ., addChildToBack, (, cur, ), ;, }, cur, ., addChildToBack, (, transform, (, label, )]
[), {, prev, ., addChildToBack, (, cur, ), ;, }, cur, ., addChildToBack, (, transform, (, label, ), ), ;]
[;, }, cur, ., addChildToBack, (, transform, (, label, ), ), ;, cur, ., setLineno, (, label, ., getLineno, (]
[., addChildToBack, (, cur, ), ;, }, cur, ., addChildToBack, (, transform, (, label, ), ), ;, cur, ., setLineno]
[), ;, }, cur, ., addChildToBack, (, transform, (, label, ), ), ;, cur, ., setLineno, (, label, ., getLineno]
[;, cur, ., setLineno, (, label, ., getLineno, (, ), ), ;, maybeSetLengthFrom, (, cur, ,, label, ), ;, int]
[., addChildToBack, (, transform, (, label, ), ), ;, cur, ., setLineno, (, label, ., getLineno, (, ), ), ;]
[), ;, cur, ., setLineno, (, label, ., getLineno, (, ), ), ;, maybeSetLengthFrom, (, cur, ,, label, ), ;]
[), ), ;, cur, ., setLineno, (, label, ., getLineno, (, ), ), ;, maybeSetLengthFrom, (, cur, ,, label, )]
[;, maybeSetLengthFrom, (, cur, ,, label, ), ;, int, clauseAbsolutePosition, =, position2charno, (, label, ., getAbsolutePosition, (, ), ), ;]
[., setLineno, (, label, ., getLineno, (, ), ), ;, maybeSetLengthFrom, (, cur, ,, label, ), ;, int, clauseAbsolutePosition, =]
[), ;, maybeSetLengthFrom, (, cur, ,, label, ), ;, int, clauseAbsolutePosition, =, position2charno, (, label, ., getAbsolutePosition, (, ), )]
[., getLineno, (, ), ), ;, maybeSetLengthFrom, (, cur, ,, label, ), ;, int, clauseAbsolutePosition, =, position2charno, (, label, .]
[;, int, clauseAbsolutePosition, =, position2charno, (, label, ., getAbsolutePosition, (, ), ), ;, cur, ., setCharno, (, clauseAbsolutePosition, ), ;]
[,, label, ), ;, int, clauseAbsolutePosition, =, position2charno, (, label, ., getAbsolutePosition, (, ), ), ;, cur, ., setCharno, (]
[), ;, int, clauseAbsolutePosition, =, position2charno, (, label, ., getAbsolutePosition, (, ), ), ;, cur, ., setCharno, (, clauseAbsolutePosition, )]
[;, cur, ., setCharno, (, clauseAbsolutePosition, ), ;, prev, =, cur, ;, cur, =, newNode, (, Token, ., LABEL, )]
[), ;, cur, ., setCharno, (, clauseAbsolutePosition, ), ;, prev, =, cur, ;, cur, =, newNode, (, Token, ., LABEL]
[., getAbsolutePosition, (, ), ), ;, cur, ., setCharno, (, clauseAbsolutePosition, ), ;, prev, =, cur, ;, cur, =, newNode]
[;, prev, =, cur, ;, cur, =, newNode, (, Token, ., LABEL, ), ;, }, prev, ., addChildToBack, (, transform]
[., setCharno, (, clauseAbsolutePosition, ), ;, prev, =, cur, ;, cur, =, newNode, (, Token, ., LABEL, ), ;, }]
[), ;, prev, =, cur, ;, cur, =, newNode, (, Token, ., LABEL, ), ;, }, prev, ., addChildToBack, (]
[=, cur, ;, cur, =, newNode, (, Token, ., LABEL, ), ;, }, prev, ., addChildToBack, (, transform, (, statementNode]
[;, cur, =, newNode, (, Token, ., LABEL, ), ;, }, prev, ., addChildToBack, (, transform, (, statementNode, ., getStatement]
[=, newNode, (, Token, ., LABEL, ), ;, }, prev, ., addChildToBack, (, transform, (, statementNode, ., getStatement, (, )]
[;, }, prev, ., addChildToBack, (, transform, (, statementNode, ., getStatement, (, ), ), ), ;, return, node, ;, }]
[), ;, }, prev, ., addChildToBack, (, transform, (, statementNode, ., getStatement, (, ), ), ), ;, return, node, ;]
[., LABEL, ), ;, }, prev, ., addChildToBack, (, transform, (, statementNode, ., getStatement, (, ), ), ), ;, return]
[;, return, node, ;, }, @, Override, Node, processName, (, Name, nameNode, ), {, return, processName, (, nameNode, ,, false]
[., addChildToBack, (, transform, (, statementNode, ., getStatement, (, ), ), ), ;, return, node, ;, }, @, Override, Node]
[), ;, return, node, ;, }, @, Override, Node, processName, (, Name, nameNode, ), {, return, processName, (, nameNode, ,]
[), ), ;, return, node, ;, }, @, Override, Node, processName, (, Name, nameNode, ), {, return, processName, (, nameNode]
[., getStatement, (, ), ), ), ;, return, node, ;, }, @, Override, Node, processName, (, Name, nameNode, ), {]
[;, }, @, Override, Node, processName, (, Name, nameNode, ), {, return, processName, (, nameNode, ,, false, ), ;, }]
[;, }, Node, processName, (, Name, nameNode, ,, boolean, asString, ), {, if, (, asString, ), {, return, newStringNode, (]
[,, false, ), ;, }, Node, processName, (, Name, nameNode, ,, boolean, asString, ), {, if, (, asString, ), {]
[), ;, }, Node, processName, (, Name, nameNode, ,, boolean, asString, ), {, if, (, asString, ), {, return, newStringNode]
[), {, return, newStringNode, (, Token, ., STRING, ,, nameNode, ., getIdentifier, (, ), ), ;, }, else, {, if]
[;, }, else, {, if, (, isReservedKeyword, (, nameNode, ., getIdentifier, (, ), ), ), {, errorReporter, ., error, (]
[,, nameNode, ., getIdentifier, (, ), ), ;, }, else, {, if, (, isReservedKeyword, (, nameNode, ., getIdentifier, (, )]
[., STRING, ,, nameNode, ., getIdentifier, (, ), ), ;, }, else, {, if, (, isReservedKeyword, (, nameNode, ., getIdentifier]
[), ;, }, else, {, if, (, isReservedKeyword, (, nameNode, ., getIdentifier, (, ), ), ), {, errorReporter, ., error]
[., getIdentifier, (, ), ), ;, }, else, {, if, (, isReservedKeyword, (, nameNode, ., getIdentifier, (, ), ), )]
[), {, errorReporter, ., error, (, "identifier is a reserved word", ,, sourceName, ,, nameNode, ., getLineno, (, ), ,, "", ,, 0, )]
[), ), {, errorReporter, ., error, (, "identifier is a reserved word", ,, sourceName, ,, nameNode, ., getLineno, (, ), ,, "", ,, 0]
[., getIdentifier, (, ), ), ), {, errorReporter, ., error, (, "identifier is a reserved word", ,, sourceName, ,, nameNode, ., getLineno, (, )]
[;, }, return, newStringNode, (, Token, ., NAME, ,, nameNode, ., getIdentifier, (, ), ), ;, }, }, private, boolean]
[., error, (, "identifier is a reserved word", ,, sourceName, ,, nameNode, ., getLineno, (, ), ,, "", ,, 0, ), ;, }, return]
[,, sourceName, ,, nameNode, ., getLineno, (, ), ,, "", ,, 0, ), ;, }, return, newStringNode, (, Token, .]
[,, nameNode, ., getLineno, (, ), ,, "", ,, 0, ), ;, }, return, newStringNode, (, Token, ., NAME, ,]
[,, "", ,, 0, ), ;, }, return, newStringNode, (, Token, ., NAME, ,, nameNode, ., getIdentifier, (, ), )]
[., getLineno, (, ), ,, "", ,, 0, ), ;, }, return, newStringNode, (, Token, ., NAME, ,, nameNode, .]
[,, 0, ), ;, }, return, newStringNode, (, Token, ., NAME, ,, nameNode, ., getIdentifier, (, ), ), ;, }]
[), ;, }, return, newStringNode, (, Token, ., NAME, ,, nameNode, ., getIdentifier, (, ), ), ;, }, }, private]
[;, }, }, private, boolean, isReservedKeyword, (, String, identifier, ), {, return, reservedKeywords, !=, null, &&, reservedKeywords, ., contains, (]
[,, nameNode, ., getIdentifier, (, ), ), ;, }, }, private, boolean, isReservedKeyword, (, String, identifier, ), {, return, reservedKeywords]
[., NAME, ,, nameNode, ., getIdentifier, (, ), ), ;, }, }, private, boolean, isReservedKeyword, (, String, identifier, ), {]
[), ;, }, }, private, boolean, isReservedKeyword, (, String, identifier, ), {, return, reservedKeywords, !=, null, &&, reservedKeywords, ., contains]
[., getIdentifier, (, ), ), ;, }, }, private, boolean, isReservedKeyword, (, String, identifier, ), {, return, reservedKeywords, !=, null]
[;, }, @, Override, Node, processNewExpression, (, NewExpression, exprNode, ), {, Node, node, =, newNode, (, transformTokenType, (, exprNode, .]
[&&, reservedKeywords, ., contains, (, identifier, ), ;, }, @, Override, Node, processNewExpression, (, NewExpression, exprNode, ), {, Node, node]
[!=, null, &&, reservedKeywords, ., contains, (, identifier, ), ;, }, @, Override, Node, processNewExpression, (, NewExpression, exprNode, ), {]
[&&, reservedKeywords, ., contains, (, identifier, ), ;, }, @, Override, Node, processNewExpression, (, NewExpression, exprNode, ), {, Node, node]
[;, }, @, Override, Node, processNewExpression, (, NewExpression, exprNode, ), {, Node, node, =, newNode, (, transformTokenType, (, exprNode, .]
[., contains, (, identifier, ), ;, }, @, Override, Node, processNewExpression, (, NewExpression, exprNode, ), {, Node, node, =, newNode]
[), ;, }, @, Override, Node, processNewExpression, (, NewExpression, exprNode, ), {, Node, node, =, newNode, (, transformTokenType, (, exprNode]
[;, for, (, AstNode, child, :, exprNode, ., getArguments, (, ), ), {, node, ., addChildToBack, (, transform, (, child]
[,, transform, (, exprNode, ., getTarget, (, ), ), ), ;, for, (, AstNode, child, :, exprNode, ., getArguments, (]
[), ,, transform, (, exprNode, ., getTarget, (, ), ), ), ;, for, (, AstNode, child, :, exprNode, ., getArguments]
[., getType, (, ), ), ,, transform, (, exprNode, ., getTarget, (, ), ), ), ;, for, (, AstNode, child]
[), ;, for, (, AstNode, child, :, exprNode, ., getArguments, (, ), ), {, node, ., addChildToBack, (, transform, (]
[), ), ;, for, (, AstNode, child, :, exprNode, ., getArguments, (, ), ), {, node, ., addChildToBack, (, transform]
[., getTarget, (, ), ), ), ;, for, (, AstNode, child, :, exprNode, ., getArguments, (, ), ), {, node]
[), {, node, ., addChildToBack, (, transform, (, child, ), ), ;, }, node, ., setLineno, (, exprNode, ., getLineno]
[., getArguments, (, ), ), {, node, ., addChildToBack, (, transform, (, child, ), ), ;, }, node, ., setLineno]
[;, }, node, ., setLineno, (, exprNode, ., getLineno, (, ), ), ;, node, ., setCharno, (, position2charno, (, exprNode]
[., addChildToBack, (, transform, (, child, ), ), ;, }, node, ., setLineno, (, exprNode, ., getLineno, (, ), )]
[), ;, }, node, ., setLineno, (, exprNode, ., getLineno, (, ), ), ;, node, ., setCharno, (, position2charno, (]
[), ), ;, }, node, ., setLineno, (, exprNode, ., getLineno, (, ), ), ;, node, ., setCharno, (, position2charno]
[;, node, ., setCharno, (, position2charno, (, exprNode, ., getAbsolutePosition, (, ), ), ), ;, maybeSetLengthFrom, (, node, ,, exprNode]
[., setLineno, (, exprNode, ., getLineno, (, ), ), ;, node, ., setCharno, (, position2charno, (, exprNode, ., getAbsolutePosition, (]
[), ;, node, ., setCharno, (, position2charno, (, exprNode, ., getAbsolutePosition, (, ), ), ), ;, maybeSetLengthFrom, (, node, ,]
[., getLineno, (, ), ), ;, node, ., setCharno, (, position2charno, (, exprNode, ., getAbsolutePosition, (, ), ), ), ;]
[;, maybeSetLengthFrom, (, node, ,, exprNode, ), ;, return, node, ;, }, @, Override, Node, processNumberLiteral, (, NumberLiteral, literalNode, )]
[., setCharno, (, position2charno, (, exprNode, ., getAbsolutePosition, (, ), ), ), ;, maybeSetLengthFrom, (, node, ,, exprNode, ), ;]
[), ;, maybeSetLengthFrom, (, node, ,, exprNode, ), ;, return, node, ;, }, @, Override, Node, processNumberLiteral, (, NumberLiteral, literalNode]
[), ), ;, maybeSetLengthFrom, (, node, ,, exprNode, ), ;, return, node, ;, }, @, Override, Node, processNumberLiteral, (, NumberLiteral]
[., getAbsolutePosition, (, ), ), ), ;, maybeSetLengthFrom, (, node, ,, exprNode, ), ;, return, node, ;, }, @, Override]
[;, return, node, ;, }, @, Override, Node, processNumberLiteral, (, NumberLiteral, literalNode, ), {, return, newNumberNode, (, literalNode, ., getNumber]
[,, exprNode, ), ;, return, node, ;, }, @, Override, Node, processNumberLiteral, (, NumberLiteral, literalNode, ), {, return, newNumberNode, (]
[), ;, return, node, ;, }, @, Override, Node, processNumberLiteral, (, NumberLiteral, literalNode, ), {, return, newNumberNode, (, literalNode, .]
[;, }, @, Override, Node, processNumberLiteral, (, NumberLiteral, literalNode, ), {, return, newNumberNode, (, literalNode, ., getNumber, (, ), )]
[;, }, @, Override, Node, processObjectLiteral, (, ObjectLiteral, literalNode, ), {, if, (, literalNode, ., isDestructuring, (, ), ), {]
[), ;, }, @, Override, Node, processObjectLiteral, (, ObjectLiteral, literalNode, ), {, if, (, literalNode, ., isDestructuring, (, ), )]
[., getNumber, (, ), ), ;, }, @, Override, Node, processObjectLiteral, (, ObjectLiteral, literalNode, ), {, if, (, literalNode, .]
[), {, reportDestructuringAssign, (, literalNode, ), ;, }, Node, node, =, newNode, (, Token, ., OBJECTLIT, ), ;, for, (]
[., isDestructuring, (, ), ), {, reportDestructuringAssign, (, literalNode, ), ;, }, Node, node, =, newNode, (, Token, ., OBJECTLIT]
[;, }, Node, node, =, newNode, (, Token, ., OBJECTLIT, ), ;, for, (, ObjectProperty, el, :, literalNode, ., getElements]
[), ;, }, Node, node, =, newNode, (, Token, ., OBJECTLIT, ), ;, for, (, ObjectProperty, el, :, literalNode, .]
[;, for, (, ObjectProperty, el, :, literalNode, ., getElements, (, ), ), {, if, (, config, ., languageMode, ==, LanguageMode]
[), ;, for, (, ObjectProperty, el, :, literalNode, ., getElements, (, ), ), {, if, (, config, ., languageMode, ==]
[., OBJECTLIT, ), ;, for, (, ObjectProperty, el, :, literalNode, ., getElements, (, ), ), {, if, (, config, .]
[), {, if, (, config, ., languageMode, ==, LanguageMode, ., ECMASCRIPT3, ), {, if, (, el, ., isGetter, (, )]
[., getElements, (, ), ), {, if, (, config, ., languageMode, ==, LanguageMode, ., ECMASCRIPT3, ), {, if, (, el]
[), {, if, (, el, ., isGetter, (, ), ), {, reportGetter, (, el, ), ;, continue, ;, }, else]
[==, LanguageMode, ., ECMASCRIPT3, ), {, if, (, el, ., isGetter, (, ), ), {, reportGetter, (, el, ), ;]
[., languageMode, ==, LanguageMode, ., ECMASCRIPT3, ), {, if, (, el, ., isGetter, (, ), ), {, reportGetter, (, el]
[), {, if, (, el, ., isGetter, (, ), ), {, reportGetter, (, el, ), ;, continue, ;, }, else]
[., ECMASCRIPT3, ), {, if, (, el, ., isGetter, (, ), ), {, reportGetter, (, el, ), ;, continue, ;]
[), {, reportGetter, (, el, ), ;, continue, ;, }, else, if, (, el, ., isSetter, (, ), ), {]
[., isGetter, (, ), ), {, reportGetter, (, el, ), ;, continue, ;, }, else, if, (, el, ., isSetter]
[;, continue, ;, }, else, if, (, el, ., isSetter, (, ), ), {, reportSetter, (, el, ), ;, continue]
[), ;, continue, ;, }, else, if, (, el, ., isSetter, (, ), ), {, reportSetter, (, el, ), ;]
[), {, reportSetter, (, el, ), ;, continue, ;, }, }, Node, key, =, transformAsString, (, el, ., getLeft, (]
[., isSetter, (, ), ), {, reportSetter, (, el, ), ;, continue, ;, }, }, Node, key, =, transformAsString, (]
[;, continue, ;, }, }, Node, key, =, transformAsString, (, el, ., getLeft, (, ), ), ;, key, ., setType]
[), ;, continue, ;, }, }, Node, key, =, transformAsString, (, el, ., getLeft, (, ), ), ;, key, .]
[;, key, ., setType, (, Token, ., STRING_KEY, ), ;, Node, value, =, transform, (, el, ., getRight, (, )]
[), ;, key, ., setType, (, Token, ., STRING_KEY, ), ;, Node, value, =, transform, (, el, ., getRight, (]
[., getLeft, (, ), ), ;, key, ., setType, (, Token, ., STRING_KEY, ), ;, Node, value, =, transform, (]
[;, Node, value, =, transform, (, el, ., getRight, (, ), ), ;, if, (, el, ., isGetter, (, )]
[., setType, (, Token, ., STRING_KEY, ), ;, Node, value, =, transform, (, el, ., getRight, (, ), ), ;]
[), ;, Node, value, =, transform, (, el, ., getRight, (, ), ), ;, if, (, el, ., isGetter, (]
[., STRING_KEY, ), ;, Node, value, =, transform, (, el, ., getRight, (, ), ), ;, if, (, el, .]
[;, if, (, el, ., isGetter, (, ), ), {, key, ., setType, (, Token, ., GETTER_DEF, ), ;, Preconditions]
[), ;, if, (, el, ., isGetter, (, ), ), {, key, ., setType, (, Token, ., GETTER_DEF, ), ;]
[., getRight, (, ), ), ;, if, (, el, ., isGetter, (, ), ), {, key, ., setType, (, Token]
[), {, key, ., setType, (, Token, ., GETTER_DEF, ), ;, Preconditions, ., checkState, (, value, ., isFunction, (, )]
[., isGetter, (, ), ), {, key, ., setType, (, Token, ., GETTER_DEF, ), ;, Preconditions, ., checkState, (, value]
[;, Preconditions, ., checkState, (, value, ., isFunction, (, ), ), ;, if, (, getFnParamNode, (, value, ), ., hasChildren]
[., setType, (, Token, ., GETTER_DEF, ), ;, Preconditions, ., checkState, (, value, ., isFunction, (, ), ), ;, if]
[), ;, Preconditions, ., checkState, (, value, ., isFunction, (, ), ), ;, if, (, getFnParamNode, (, value, ), .]
[., GETTER_DEF, ), ;, Preconditions, ., checkState, (, value, ., isFunction, (, ), ), ;, if, (, getFnParamNode, (, value]
[;, if, (, getFnParamNode, (, value, ), ., hasChildren, (, ), ), {, reportGetterParam, (, el, ., getLeft, (, )]
[., checkState, (, value, ., isFunction, (, ), ), ;, if, (, getFnParamNode, (, value, ), ., hasChildren, (, )]
[), ;, if, (, getFnParamNode, (, value, ), ., hasChildren, (, ), ), {, reportGetterParam, (, el, ., getLeft, (]
[., isFunction, (, ), ), ;, if, (, getFnParamNode, (, value, ), ., hasChildren, (, ), ), {, reportGetterParam, (]
[), {, reportGetterParam, (, el, ., getLeft, (, ), ), ;, }, }, else, if, (, el, ., isSetter, (]
[., hasChildren, (, ), ), {, reportGetterParam, (, el, ., getLeft, (, ), ), ;, }, }, else, if, (]
[), ., hasChildren, (, ), ), {, reportGetterParam, (, el, ., getLeft, (, ), ), ;, }, }, else, if]
[;, }, }, else, if, (, el, ., isSetter, (, ), ), {, key, ., setType, (, Token, ., SETTER_DEF]
[), ;, }, }, else, if, (, el, ., isSetter, (, ), ), {, key, ., setType, (, Token, .]
[., getLeft, (, ), ), ;, }, }, else, if, (, el, ., isSetter, (, ), ), {, key, .]
[), {, key, ., setType, (, Token, ., SETTER_DEF, ), ;, Preconditions, ., checkState, (, value, ., isFunction, (, )]
[., isSetter, (, ), ), {, key, ., setType, (, Token, ., SETTER_DEF, ), ;, Preconditions, ., checkState, (, value]
[;, Preconditions, ., checkState, (, value, ., isFunction, (, ), ), ;, if, (, !, getFnParamNode, (, value, ), .]
[., setType, (, Token, ., SETTER_DEF, ), ;, Preconditions, ., checkState, (, value, ., isFunction, (, ), ), ;, if]
[), ;, Preconditions, ., checkState, (, value, ., isFunction, (, ), ), ;, if, (, !, getFnParamNode, (, value, )]
[., SETTER_DEF, ), ;, Preconditions, ., checkState, (, value, ., isFunction, (, ), ), ;, if, (, !, getFnParamNode, (]
[;, if, (, !, getFnParamNode, (, value, ), ., hasOneChild, (, ), ), {, reportSetterParam, (, el, ., getLeft, (]
[., checkState, (, value, ., isFunction, (, ), ), ;, if, (, !, getFnParamNode, (, value, ), ., hasOneChild, (]
[), ;, if, (, !, getFnParamNode, (, value, ), ., hasOneChild, (, ), ), {, reportSetterParam, (, el, ., getLeft]
[., isFunction, (, ), ), ;, if, (, !, getFnParamNode, (, value, ), ., hasOneChild, (, ), ), {, reportSetterParam]
[), {, reportSetterParam, (, el, ., getLeft, (, ), ), ;, }, }, key, ., addChildToFront, (, value, ), ;]
[), {, reportSetterParam, (, el, ., getLeft, (, ), ), ;, }, }, key, ., addChildToFront, (, value, ), ;]
[., hasOneChild, (, ), ), {, reportSetterParam, (, el, ., getLeft, (, ), ), ;, }, }, key, ., addChildToFront]
[), ., hasOneChild, (, ), ), {, reportSetterParam, (, el, ., getLeft, (, ), ), ;, }, }, key, .]
[;, }, }, key, ., addChildToFront, (, value, ), ;, node, ., addChildToBack, (, key, ), ;, }, return, node]
[), ;, }, }, key, ., addChildToFront, (, value, ), ;, node, ., addChildToBack, (, key, ), ;, }, return]
[., getLeft, (, ), ), ;, }, }, key, ., addChildToFront, (, value, ), ;, node, ., addChildToBack, (, key]
[;, node, ., addChildToBack, (, key, ), ;, }, return, node, ;, }, Node, getFnParamNode, (, Node, fnNode, ), {]
[., addChildToFront, (, value, ), ;, node, ., addChildToBack, (, key, ), ;, }, return, node, ;, }, Node, getFnParamNode]
[), ;, node, ., addChildToBack, (, key, ), ;, }, return, node, ;, }, Node, getFnParamNode, (, Node, fnNode, )]
[;, }, return, node, ;, }, Node, getFnParamNode, (, Node, fnNode, ), {, Preconditions, ., checkArgument, (, fnNode, ., isFunction]
[., addChildToBack, (, key, ), ;, }, return, node, ;, }, Node, getFnParamNode, (, Node, fnNode, ), {, Preconditions, .]
[), ;, }, return, node, ;, }, Node, getFnParamNode, (, Node, fnNode, ), {, Preconditions, ., checkArgument, (, fnNode, .]
[;, }, Node, getFnParamNode, (, Node, fnNode, ), {, Preconditions, ., checkArgument, (, fnNode, ., isFunction, (, ), ), ;]
[;, return, fnNode, ., getFirstChild, (, ), ., getNext, (, ), ;, }, @, Override, Node, processObjectProperty, (, ObjectProperty, propertyNode]
[., checkArgument, (, fnNode, ., isFunction, (, ), ), ;, return, fnNode, ., getFirstChild, (, ), ., getNext, (, )]
[), ;, return, fnNode, ., getFirstChild, (, ), ., getNext, (, ), ;, }, @, Override, Node, processObjectProperty, (, ObjectProperty]
[., isFunction, (, ), ), ;, return, fnNode, ., getFirstChild, (, ), ., getNext, (, ), ;, }, @, Override]
[;, }, @, Override, Node, processObjectProperty, (, ObjectProperty, propertyNode, ), {, return, processInfixExpression, (, propertyNode, ), ;, }, @, Override]
[., getNext, (, ), ;, }, @, Override, Node, processObjectProperty, (, ObjectProperty, propertyNode, ), {, return, processInfixExpression, (, propertyNode, )]
[., getFirstChild, (, ), ., getNext, (, ), ;, }, @, Override, Node, processObjectProperty, (, ObjectProperty, propertyNode, ), {, return]
[;, }, @, Override, Node, processParenthesizedExpression, (, ParenthesizedExpression, exprNode, ), {, Node, node, =, transform, (, exprNode, ., getExpression, (]
[), ;, }, @, Override, Node, processParenthesizedExpression, (, ParenthesizedExpression, exprNode, ), {, Node, node, =, transform, (, exprNode, ., getExpression]
[;, return, node, ;, }, @, Override, Node, processPropertyGet, (, PropertyGet, getNode, ), {, Node, leftChild, =, transform, (, getNode]
[), ;, return, node, ;, }, @, Override, Node, processPropertyGet, (, PropertyGet, getNode, ), {, Node, leftChild, =, transform, (]
[., getExpression, (, ), ), ;, return, node, ;, }, @, Override, Node, processPropertyGet, (, PropertyGet, getNode, ), {, Node]
[;, }, @, Override, Node, processPropertyGet, (, PropertyGet, getNode, ), {, Node, leftChild, =, transform, (, getNode, ., getTarget, (]
[;, Node, newNode, =, newNode, (, Token, ., GETPROP, ,, leftChild, ,, transformAsString, (, getNode, ., getProperty, (, ), )]
[), ;, Node, newNode, =, newNode, (, Token, ., GETPROP, ,, leftChild, ,, transformAsString, (, getNode, ., getProperty, (, )]
[., getTarget, (, ), ), ;, Node, newNode, =, newNode, (, Token, ., GETPROP, ,, leftChild, ,, transformAsString, (, getNode]
[;, newNode, ., setLineno, (, leftChild, ., getLineno, (, ), ), ;, newNode, ., setCharno, (, leftChild, ., getCharno, (]
[,, leftChild, ,, transformAsString, (, getNode, ., getProperty, (, ), ), ), ;, newNode, ., setLineno, (, leftChild, ., getLineno]
[., GETPROP, ,, leftChild, ,, transformAsString, (, getNode, ., getProperty, (, ), ), ), ;, newNode, ., setLineno, (, leftChild]
[,, transformAsString, (, getNode, ., getProperty, (, ), ), ), ;, newNode, ., setLineno, (, leftChild, ., getLineno, (, )]
[), ;, newNode, ., setLineno, (, leftChild, ., getLineno, (, ), ), ;, newNode, ., setCharno, (, leftChild, ., getCharno]
[), ), ;, newNode, ., setLineno, (, leftChild, ., getLineno, (, ), ), ;, newNode, ., setCharno, (, leftChild, .]
[., getProperty, (, ), ), ), ;, newNode, ., setLineno, (, leftChild, ., getLineno, (, ), ), ;, newNode, .]
[;, newNode, ., setCharno, (, leftChild, ., getCharno, (, ), ), ;, maybeSetLengthFrom, (, newNode, ,, getNode, ), ;, return]
[., setLineno, (, leftChild, ., getLineno, (, ), ), ;, newNode, ., setCharno, (, leftChild, ., getCharno, (, ), )]
[), ;, newNode, ., setCharno, (, leftChild, ., getCharno, (, ), ), ;, maybeSetLengthFrom, (, newNode, ,, getNode, ), ;]
[., getLineno, (, ), ), ;, newNode, ., setCharno, (, leftChild, ., getCharno, (, ), ), ;, maybeSetLengthFrom, (, newNode]
[;, maybeSetLengthFrom, (, newNode, ,, getNode, ), ;, return, newNode, ;, }, @, Override, Node, processRegExpLiteral, (, RegExpLiteral, literalNode, )]
[., setCharno, (, leftChild, ., getCharno, (, ), ), ;, maybeSetLengthFrom, (, newNode, ,, getNode, ), ;, return, newNode, ;]
[), ;, maybeSetLengthFrom, (, newNode, ,, getNode, ), ;, return, newNode, ;, }, @, Override, Node, processRegExpLiteral, (, RegExpLiteral, literalNode]
[., getCharno, (, ), ), ;, maybeSetLengthFrom, (, newNode, ,, getNode, ), ;, return, newNode, ;, }, @, Override, Node]
[;, return, newNode, ;, }, @, Override, Node, processRegExpLiteral, (, RegExpLiteral, literalNode, ), {, Node, literalStringNode, =, newStringNode, (, literalNode]
[,, getNode, ), ;, return, newNode, ;, }, @, Override, Node, processRegExpLiteral, (, RegExpLiteral, literalNode, ), {, Node, literalStringNode, =]
[), ;, return, newNode, ;, }, @, Override, Node, processRegExpLiteral, (, RegExpLiteral, literalNode, ), {, Node, literalStringNode, =, newStringNode, (]
[;, }, @, Override, Node, processRegExpLiteral, (, RegExpLiteral, literalNode, ), {, Node, literalStringNode, =, newStringNode, (, literalNode, ., getValue, (]
[;, literalStringNode, ., setLineno, (, literalNode, ., getLineno, (, ), ), ;, maybeSetLengthFrom, (, literalStringNode, ,, literalNode, ), ;, Node]
[), ;, literalStringNode, ., setLineno, (, literalNode, ., getLineno, (, ), ), ;, maybeSetLengthFrom, (, literalStringNode, ,, literalNode, ), ;]
[., getValue, (, ), ), ;, literalStringNode, ., setLineno, (, literalNode, ., getLineno, (, ), ), ;, maybeSetLengthFrom, (, literalStringNode]
[;, maybeSetLengthFrom, (, literalStringNode, ,, literalNode, ), ;, Node, node, =, newNode, (, Token, ., REGEXP, ,, literalStringNode, ), ;]
[., setLineno, (, literalNode, ., getLineno, (, ), ), ;, maybeSetLengthFrom, (, literalStringNode, ,, literalNode, ), ;, Node, node, =]
[), ;, maybeSetLengthFrom, (, literalStringNode, ,, literalNode, ), ;, Node, node, =, newNode, (, Token, ., REGEXP, ,, literalStringNode, )]
[., getLineno, (, ), ), ;, maybeSetLengthFrom, (, literalStringNode, ,, literalNode, ), ;, Node, node, =, newNode, (, Token, .]
[;, Node, node, =, newNode, (, Token, ., REGEXP, ,, literalStringNode, ), ;, String, flags, =, literalNode, ., getFlags, (]
[,, literalNode, ), ;, Node, node, =, newNode, (, Token, ., REGEXP, ,, literalStringNode, ), ;, String, flags, =, literalNode]
[), ;, Node, node, =, newNode, (, Token, ., REGEXP, ,, literalStringNode, ), ;, String, flags, =, literalNode, ., getFlags]
[;, String, flags, =, literalNode, ., getFlags, (, ), ;, if, (, flags, !=, null, &&, !, flags, ., isEmpty]
[,, literalStringNode, ), ;, String, flags, =, literalNode, ., getFlags, (, ), ;, if, (, flags, !=, null, &&, !]
[., REGEXP, ,, literalStringNode, ), ;, String, flags, =, literalNode, ., getFlags, (, ), ;, if, (, flags, !=, null]
[), ;, String, flags, =, literalNode, ., getFlags, (, ), ;, if, (, flags, !=, null, &&, !, flags, .]
[;, if, (, flags, !=, null, &&, !, flags, ., isEmpty, (, ), ), {, Node, flagsNode, =, newStringNode, (]
[., getFlags, (, ), ;, if, (, flags, !=, null, &&, !, flags, ., isEmpty, (, ), ), {, Node]
[), {, Node, flagsNode, =, newStringNode, (, flags, ), ;, flagsNode, ., setLineno, (, literalNode, ., getLineno, (, ), )]
[&&, !, flags, ., isEmpty, (, ), ), {, Node, flagsNode, =, newStringNode, (, flags, ), ;, flagsNode, ., setLineno]
[!=, null, &&, !, flags, ., isEmpty, (, ), ), {, Node, flagsNode, =, newStringNode, (, flags, ), ;, flagsNode]
[&&, !, flags, ., isEmpty, (, ), ), {, Node, flagsNode, =, newStringNode, (, flags, ), ;, flagsNode, ., setLineno]
[), {, Node, flagsNode, =, newStringNode, (, flags, ), ;, flagsNode, ., setLineno, (, literalNode, ., getLineno, (, ), )]
[), {, Node, flagsNode, =, newStringNode, (, flags, ), ;, flagsNode, ., setLineno, (, literalNode, ., getLineno, (, ), )]
[., isEmpty, (, ), ), {, Node, flagsNode, =, newStringNode, (, flags, ), ;, flagsNode, ., setLineno, (, literalNode, .]
[;, flagsNode, ., setLineno, (, literalNode, ., getLineno, (, ), ), ;, maybeSetLengthFrom, (, flagsNode, ,, literalNode, ), ;, node]
[), ;, flagsNode, ., setLineno, (, literalNode, ., getLineno, (, ), ), ;, maybeSetLengthFrom, (, flagsNode, ,, literalNode, ), ;]
[;, maybeSetLengthFrom, (, flagsNode, ,, literalNode, ), ;, node, ., addChildToBack, (, flagsNode, ), ;, }, return, node, ;, }]
[., setLineno, (, literalNode, ., getLineno, (, ), ), ;, maybeSetLengthFrom, (, flagsNode, ,, literalNode, ), ;, node, ., addChildToBack]
[), ;, maybeSetLengthFrom, (, flagsNode, ,, literalNode, ), ;, node, ., addChildToBack, (, flagsNode, ), ;, }, return, node, ;]
[., getLineno, (, ), ), ;, maybeSetLengthFrom, (, flagsNode, ,, literalNode, ), ;, node, ., addChildToBack, (, flagsNode, ), ;]
[;, node, ., addChildToBack, (, flagsNode, ), ;, }, return, node, ;, }, @, Override, Node, processReturnStatement, (, ReturnStatement, statementNode]
[,, literalNode, ), ;, node, ., addChildToBack, (, flagsNode, ), ;, }, return, node, ;, }, @, Override, Node, processReturnStatement]
[), ;, node, ., addChildToBack, (, flagsNode, ), ;, }, return, node, ;, }, @, Override, Node, processReturnStatement, (, ReturnStatement]
[;, }, return, node, ;, }, @, Override, Node, processReturnStatement, (, ReturnStatement, statementNode, ), {, Node, node, =, newNode, (]
[., addChildToBack, (, flagsNode, ), ;, }, return, node, ;, }, @, Override, Node, processReturnStatement, (, ReturnStatement, statementNode, ), {]
[), ;, }, return, node, ;, }, @, Override, Node, processReturnStatement, (, ReturnStatement, statementNode, ), {, Node, node, =, newNode]
[;, }, @, Override, Node, processReturnStatement, (, ReturnStatement, statementNode, ), {, Node, node, =, newNode, (, Token, ., RETURN, )]
[;, if, (, statementNode, ., getReturnValue, (, ), !=, null, ), {, node, ., addChildToBack, (, transform, (, statementNode, .]
[), ;, if, (, statementNode, ., getReturnValue, (, ), !=, null, ), {, node, ., addChildToBack, (, transform, (, statementNode]
[., RETURN, ), ;, if, (, statementNode, ., getReturnValue, (, ), !=, null, ), {, node, ., addChildToBack, (, transform]
[), {, node, ., addChildToBack, (, transform, (, statementNode, ., getReturnValue, (, ), ), ), ;, }, return, node, ;]
[!=, null, ), {, node, ., addChildToBack, (, transform, (, statementNode, ., getReturnValue, (, ), ), ), ;, }, return]
[., getReturnValue, (, ), !=, null, ), {, node, ., addChildToBack, (, transform, (, statementNode, ., getReturnValue, (, ), )]
[), {, node, ., addChildToBack, (, transform, (, statementNode, ., getReturnValue, (, ), ), ), ;, }, return, node, ;]
[;, }, return, node, ;, }, @, Override, Node, processScope, (, Scope, scopeNode, ), {, return, processGeneric, (, scopeNode, )]
[., addChildToBack, (, transform, (, statementNode, ., getReturnValue, (, ), ), ), ;, }, return, node, ;, }, @, Override]
[), ;, }, return, node, ;, }, @, Override, Node, processScope, (, Scope, scopeNode, ), {, return, processGeneric, (, scopeNode]
[), ), ;, }, return, node, ;, }, @, Override, Node, processScope, (, Scope, scopeNode, ), {, return, processGeneric, (]
[., getReturnValue, (, ), ), ), ;, }, return, node, ;, }, @, Override, Node, processScope, (, Scope, scopeNode, )]
[;, }, @, Override, Node, processScope, (, Scope, scopeNode, ), {, return, processGeneric, (, scopeNode, ), ;, }, @, Override]
[;, }, @, Override, Node, processStringLiteral, (, StringLiteral, literalNode, ), {, String, value, =, literalNode, ., getValue, (, ), ;]
[), ;, }, @, Override, Node, processStringLiteral, (, StringLiteral, literalNode, ), {, String, value, =, literalNode, ., getValue, (, )]
[;, Node, n, =, newStringNode, (, value, ), ;, if, (, value, ., indexOf, (, '\u000B', ), !=, -, 1]
[., getValue, (, ), ;, Node, n, =, newStringNode, (, value, ), ;, if, (, value, ., indexOf, (, '\u000B']
[;, if, (, value, ., indexOf, (, '\u000B', ), !=, -, 1, ), {, int, start, =, literalNode, ., getAbsolutePosition]
[), ;, if, (, value, ., indexOf, (, '\u000B', ), !=, -, 1, ), {, int, start, =, literalNode, .]
[), {, int, start, =, literalNode, ., getAbsolutePosition, (, ), ;, int, end, =, start, +, literalNode, ., getLength, (]
[!=, -, 1, ), {, int, start, =, literalNode, ., getAbsolutePosition, (, ), ;, int, end, =, start, +, literalNode]
[., indexOf, (, '\u000B', ), !=, -, 1, ), {, int, start, =, literalNode, ., getAbsolutePosition, (, ), ;, int]
[), !=, -, 1, ), {, int, start, =, literalNode, ., getAbsolutePosition, (, ), ;, int, end, =, start, +]
[), {, int, start, =, literalNode, ., getAbsolutePosition, (, ), ;, int, end, =, start, +, literalNode, ., getLength, (]
[), {, int, start, =, literalNode, ., getAbsolutePosition, (, ), ;, int, end, =, start, +, literalNode, ., getLength, (]
[;, int, end, =, start, +, literalNode, ., getLength, (, ), ;, if, (, start, <, sourceString, ., length, (]
[., getAbsolutePosition, (, ), ;, int, end, =, start, +, literalNode, ., getLength, (, ), ;, if, (, start, <]
[;, if, (, start, <, sourceString, ., length, (, ), &&, (, sourceString, ., substring, (, start, ,, Math, .]
[+, literalNode, ., getLength, (, ), ;, if, (, start, <, sourceString, ., length, (, ), &&, (, sourceString, .]
[;, if, (, start, <, sourceString, ., length, (, ), &&, (, sourceString, ., substring, (, start, ,, Math, .]
[., getLength, (, ), ;, if, (, start, <, sourceString, ., length, (, ), &&, (, sourceString, ., substring, (]
[), {, n, ., putBooleanProp, (, Node, ., SLASH_V, ,, true, ), ;, }, }, return, n, ;, }, @]
[&&, (, sourceString, ., substring, (, start, ,, Math, ., min, (, sourceString, ., length, (, ), ,, end, )]
[<, sourceString, ., length, (, ), &&, (, sourceString, ., substring, (, start, ,, Math, ., min, (, sourceString, .]
[&&, (, sourceString, ., substring, (, start, ,, Math, ., min, (, sourceString, ., length, (, ), ,, end, )]
[., length, (, ), &&, (, sourceString, ., substring, (, start, ,, Math, ., min, (, sourceString, ., length, (]
[), {, n, ., putBooleanProp, (, Node, ., SLASH_V, ,, true, ), ;, }, }, return, n, ;, }, @]
[), ), {, n, ., putBooleanProp, (, Node, ., SLASH_V, ,, true, ), ;, }, }, return, n, ;, }]
[!=, -, 1, ), ), {, n, ., putBooleanProp, (, Node, ., SLASH_V, ,, true, ), ;, }, }, return]
[., indexOf, (, "\\v", ), !=, -, 1, ), ), {, n, ., putBooleanProp, (, Node, ., SLASH_V, ,, true]
[., substring, (, start, ,, Math, ., min, (, sourceString, ., length, (, ), ,, end, ), ), ., indexOf]
[,, Math, ., min, (, sourceString, ., length, (, ), ,, end, ), ), ., indexOf, (, "\\v", ), !=]
[), ., indexOf, (, "\\v", ), !=, -, 1, ), ), {, n, ., putBooleanProp, (, Node, ., SLASH_V, ,]
[., min, (, sourceString, ., length, (, ), ,, end, ), ), ., indexOf, (, "\\v", ), !=, -, 1]
[,, end, ), ), ., indexOf, (, "\\v", ), !=, -, 1, ), ), {, n, ., putBooleanProp, (, Node]
[., length, (, ), ,, end, ), ), ., indexOf, (, "\\v", ), !=, -, 1, ), ), {, n]
[), ), ., indexOf, (, "\\v", ), !=, -, 1, ), ), {, n, ., putBooleanProp, (, Node, ., SLASH_V]
[), !=, -, 1, ), ), {, n, ., putBooleanProp, (, Node, ., SLASH_V, ,, true, ), ;, }, }]
[), ), {, n, ., putBooleanProp, (, Node, ., SLASH_V, ,, true, ), ;, }, }, return, n, ;, }]
[), ), {, n, ., putBooleanProp, (, Node, ., SLASH_V, ,, true, ), ;, }, }, return, n, ;, }]
[;, }, }, return, n, ;, }, @, Override, Node, processSwitchCase, (, SwitchCase, caseNode, ), {, Node, node, ;, if]
[., putBooleanProp, (, Node, ., SLASH_V, ,, true, ), ;, }, }, return, n, ;, }, @, Override, Node, processSwitchCase]
[,, true, ), ;, }, }, return, n, ;, }, @, Override, Node, processSwitchCase, (, SwitchCase, caseNode, ), {, Node]
[., SLASH_V, ,, true, ), ;, }, }, return, n, ;, }, @, Override, Node, processSwitchCase, (, SwitchCase, caseNode, )]
[), ;, }, }, return, n, ;, }, @, Override, Node, processSwitchCase, (, SwitchCase, caseNode, ), {, Node, node, ;]
[;, }, @, Override, Node, processSwitchCase, (, SwitchCase, caseNode, ), {, Node, node, ;, if, (, caseNode, ., isDefault, (]
[), {, node, =, newNode, (, Token, ., DEFAULT_CASE, ), ;, }, else, {, AstNode, expr, =, caseNode, ., getExpression]
[., isDefault, (, ), ), {, node, =, newNode, (, Token, ., DEFAULT_CASE, ), ;, }, else, {, AstNode, expr]
[=, newNode, (, Token, ., DEFAULT_CASE, ), ;, }, else, {, AstNode, expr, =, caseNode, ., getExpression, (, ), ;]
[;, }, else, {, AstNode, expr, =, caseNode, ., getExpression, (, ), ;, node, =, newNode, (, Token, ., CASE]
[), ;, }, else, {, AstNode, expr, =, caseNode, ., getExpression, (, ), ;, node, =, newNode, (, Token, .]
[., DEFAULT_CASE, ), ;, }, else, {, AstNode, expr, =, caseNode, ., getExpression, (, ), ;, node, =, newNode, (]
[;, node, =, newNode, (, Token, ., CASE, ,, transform, (, expr, ), ), ;, }, Node, block, =, newNode]
[., getExpression, (, ), ;, node, =, newNode, (, Token, ., CASE, ,, transform, (, expr, ), ), ;, }]
[=, newNode, (, Token, ., CASE, ,, transform, (, expr, ), ), ;, }, Node, block, =, newNode, (, Token]
[;, }, Node, block, =, newNode, (, Token, ., BLOCK, ), ;, block, ., putBooleanProp, (, Node, ., SYNTHETIC_BLOCK_PROP, ,]
[,, transform, (, expr, ), ), ;, }, Node, block, =, newNode, (, Token, ., BLOCK, ), ;, block, .]
[., CASE, ,, transform, (, expr, ), ), ;, }, Node, block, =, newNode, (, Token, ., BLOCK, ), ;]
[), ;, }, Node, block, =, newNode, (, Token, ., BLOCK, ), ;, block, ., putBooleanProp, (, Node, ., SYNTHETIC_BLOCK_PROP]
[), ), ;, }, Node, block, =, newNode, (, Token, ., BLOCK, ), ;, block, ., putBooleanProp, (, Node, .]
[;, block, ., putBooleanProp, (, Node, ., SYNTHETIC_BLOCK_PROP, ,, true, ), ;, block, ., setLineno, (, caseNode, ., getLineno, (]
[), ;, block, ., putBooleanProp, (, Node, ., SYNTHETIC_BLOCK_PROP, ,, true, ), ;, block, ., setLineno, (, caseNode, ., getLineno]
[., BLOCK, ), ;, block, ., putBooleanProp, (, Node, ., SYNTHETIC_BLOCK_PROP, ,, true, ), ;, block, ., setLineno, (, caseNode]
[;, block, ., setLineno, (, caseNode, ., getLineno, (, ), ), ;, block, ., setCharno, (, position2charno, (, caseNode, .]
[., putBooleanProp, (, Node, ., SYNTHETIC_BLOCK_PROP, ,, true, ), ;, block, ., setLineno, (, caseNode, ., getLineno, (, ), )]
[,, true, ), ;, block, ., setLineno, (, caseNode, ., getLineno, (, ), ), ;, block, ., setCharno, (, position2charno]
[., SYNTHETIC_BLOCK_PROP, ,, true, ), ;, block, ., setLineno, (, caseNode, ., getLineno, (, ), ), ;, block, ., setCharno]
[), ;, block, ., setLineno, (, caseNode, ., getLineno, (, ), ), ;, block, ., setCharno, (, position2charno, (, caseNode]
[;, block, ., setCharno, (, position2charno, (, caseNode, ., getAbsolutePosition, (, ), ), ), ;, maybeSetLengthFrom, (, block, ,, caseNode]
[., setLineno, (, caseNode, ., getLineno, (, ), ), ;, block, ., setCharno, (, position2charno, (, caseNode, ., getAbsolutePosition, (]
[), ;, block, ., setCharno, (, position2charno, (, caseNode, ., getAbsolutePosition, (, ), ), ), ;, maybeSetLengthFrom, (, block, ,]
[., getLineno, (, ), ), ;, block, ., setCharno, (, position2charno, (, caseNode, ., getAbsolutePosition, (, ), ), ), ;]
[;, maybeSetLengthFrom, (, block, ,, caseNode, ), ;, if, (, caseNode, ., getStatements, (, ), !=, null, ), {, for]
[., setCharno, (, position2charno, (, caseNode, ., getAbsolutePosition, (, ), ), ), ;, maybeSetLengthFrom, (, block, ,, caseNode, ), ;]
[), ;, maybeSetLengthFrom, (, block, ,, caseNode, ), ;, if, (, caseNode, ., getStatements, (, ), !=, null, ), {]
[), ), ;, maybeSetLengthFrom, (, block, ,, caseNode, ), ;, if, (, caseNode, ., getStatements, (, ), !=, null, )]
[., getAbsolutePosition, (, ), ), ), ;, maybeSetLengthFrom, (, block, ,, caseNode, ), ;, if, (, caseNode, ., getStatements, (]
[;, if, (, caseNode, ., getStatements, (, ), !=, null, ), {, for, (, AstNode, child, :, caseNode, ., getStatements]
[,, caseNode, ), ;, if, (, caseNode, ., getStatements, (, ), !=, null, ), {, for, (, AstNode, child, :]
[), ;, if, (, caseNode, ., getStatements, (, ), !=, null, ), {, for, (, AstNode, child, :, caseNode, .]
[), {, for, (, AstNode, child, :, caseNode, ., getStatements, (, ), ), {, block, ., addChildToBack, (, transform, (]
[!=, null, ), {, for, (, AstNode, child, :, caseNode, ., getStatements, (, ), ), {, block, ., addChildToBack, (]
[., getStatements, (, ), !=, null, ), {, for, (, AstNode, child, :, caseNode, ., getStatements, (, ), ), {]
[), {, for, (, AstNode, child, :, caseNode, ., getStatements, (, ), ), {, block, ., addChildToBack, (, transform, (]
[), {, block, ., addChildToBack, (, transform, (, child, ), ), ;, }, }, node, ., addChildToBack, (, block, )]
[., getStatements, (, ), ), {, block, ., addChildToBack, (, transform, (, child, ), ), ;, }, }, node, .]
[;, }, }, node, ., addChildToBack, (, block, ), ;, return, node, ;, }, @, Override, Node, processSwitchStatement, (, SwitchStatement]
[., addChildToBack, (, transform, (, child, ), ), ;, }, }, node, ., addChildToBack, (, block, ), ;, return, node]
[), ;, }, }, node, ., addChildToBack, (, block, ), ;, return, node, ;, }, @, Override, Node, processSwitchStatement, (]
[), ), ;, }, }, node, ., addChildToBack, (, block, ), ;, return, node, ;, }, @, Override, Node, processSwitchStatement]
[;, return, node, ;, }, @, Override, Node, processSwitchStatement, (, SwitchStatement, statementNode, ), {, Node, node, =, newNode, (, Token]
[., addChildToBack, (, block, ), ;, return, node, ;, }, @, Override, Node, processSwitchStatement, (, SwitchStatement, statementNode, ), {, Node]
[), ;, return, node, ;, }, @, Override, Node, processSwitchStatement, (, SwitchStatement, statementNode, ), {, Node, node, =, newNode, (]
[;, }, @, Override, Node, processSwitchStatement, (, SwitchStatement, statementNode, ), {, Node, node, =, newNode, (, Token, ., SWITCH, ,]
[;, for, (, AstNode, child, :, statementNode, ., getCases, (, ), ), {, node, ., addChildToBack, (, transform, (, child]
[,, transform, (, statementNode, ., getExpression, (, ), ), ), ;, for, (, AstNode, child, :, statementNode, ., getCases, (]
[., SWITCH, ,, transform, (, statementNode, ., getExpression, (, ), ), ), ;, for, (, AstNode, child, :, statementNode, .]
[), ;, for, (, AstNode, child, :, statementNode, ., getCases, (, ), ), {, node, ., addChildToBack, (, transform, (]
[), ), ;, for, (, AstNode, child, :, statementNode, ., getCases, (, ), ), {, node, ., addChildToBack, (, transform]
[., getExpression, (, ), ), ), ;, for, (, AstNode, child, :, statementNode, ., getCases, (, ), ), {, node]
[), {, node, ., addChildToBack, (, transform, (, child, ), ), ;, }, return, node, ;, }, @, Override, Node]
[., getCases, (, ), ), {, node, ., addChildToBack, (, transform, (, child, ), ), ;, }, return, node, ;]
[;, }, return, node, ;, }, @, Override, Node, processThrowStatement, (, ThrowStatement, statementNode, ), {, return, newNode, (, Token, .]
[., addChildToBack, (, transform, (, child, ), ), ;, }, return, node, ;, }, @, Override, Node, processThrowStatement, (, ThrowStatement]
[), ;, }, return, node, ;, }, @, Override, Node, processThrowStatement, (, ThrowStatement, statementNode, ), {, return, newNode, (, Token]
[), ), ;, }, return, node, ;, }, @, Override, Node, processThrowStatement, (, ThrowStatement, statementNode, ), {, return, newNode, (]
[;, }, @, Override, Node, processThrowStatement, (, ThrowStatement, statementNode, ), {, return, newNode, (, Token, ., THROW, ,, transform, (]
[;, }, @, Override, Node, processTryStatement, (, TryStatement, statementNode, ), {, Node, node, =, newNode, (, Token, ., TRY, ,]
[,, transform, (, statementNode, ., getExpression, (, ), ), ), ;, }, @, Override, Node, processTryStatement, (, TryStatement, statementNode, )]
[., THROW, ,, transform, (, statementNode, ., getExpression, (, ), ), ), ;, }, @, Override, Node, processTryStatement, (, TryStatement]
[), ;, }, @, Override, Node, processTryStatement, (, TryStatement, statementNode, ), {, Node, node, =, newNode, (, Token, ., TRY]
[), ), ;, }, @, Override, Node, processTryStatement, (, TryStatement, statementNode, ), {, Node, node, =, newNode, (, Token, .]
[., getExpression, (, ), ), ), ;, }, @, Override, Node, processTryStatement, (, TryStatement, statementNode, ), {, Node, node, =]
[;, Node, block, =, newNode, (, Token, ., BLOCK, ), ;, boolean, lineSet, =, false, ;, for, (, CatchClause, cc]
[,, transformBlock, (, statementNode, ., getTryBlock, (, ), ), ), ;, Node, block, =, newNode, (, Token, ., BLOCK, )]
[., TRY, ,, transformBlock, (, statementNode, ., getTryBlock, (, ), ), ), ;, Node, block, =, newNode, (, Token, .]
[), ;, Node, block, =, newNode, (, Token, ., BLOCK, ), ;, boolean, lineSet, =, false, ;, for, (, CatchClause]
[), ), ;, Node, block, =, newNode, (, Token, ., BLOCK, ), ;, boolean, lineSet, =, false, ;, for, (]
[., getTryBlock, (, ), ), ), ;, Node, block, =, newNode, (, Token, ., BLOCK, ), ;, boolean, lineSet, =]
[;, boolean, lineSet, =, false, ;, for, (, CatchClause, cc, :, statementNode, ., getCatchClauses, (, ), ), {, if, (]
[), ;, boolean, lineSet, =, false, ;, for, (, CatchClause, cc, :, statementNode, ., getCatchClauses, (, ), ), {, if]
[., BLOCK, ), ;, boolean, lineSet, =, false, ;, for, (, CatchClause, cc, :, statementNode, ., getCatchClauses, (, ), )]
[;, for, (, CatchClause, cc, :, statementNode, ., getCatchClauses, (, ), ), {, if, (, lineSet, ==, false, ), {]
[), {, if, (, lineSet, ==, false, ), {, block, ., setLineno, (, cc, ., getLineno, (, ), ), ;]
[., getCatchClauses, (, ), ), {, if, (, lineSet, ==, false, ), {, block, ., setLineno, (, cc, ., getLineno]
[), {, block, ., setLineno, (, cc, ., getLineno, (, ), ), ;, maybeSetLengthFrom, (, block, ,, cc, ), ;]
[==, false, ), {, block, ., setLineno, (, cc, ., getLineno, (, ), ), ;, maybeSetLengthFrom, (, block, ,, cc]
[), {, block, ., setLineno, (, cc, ., getLineno, (, ), ), ;, maybeSetLengthFrom, (, block, ,, cc, ), ;]
[;, maybeSetLengthFrom, (, block, ,, cc, ), ;, lineSet, =, true, ;, }, block, ., addChildToBack, (, transform, (, cc]
[., setLineno, (, cc, ., getLineno, (, ), ), ;, maybeSetLengthFrom, (, block, ,, cc, ), ;, lineSet, =, true]
[), ;, maybeSetLengthFrom, (, block, ,, cc, ), ;, lineSet, =, true, ;, }, block, ., addChildToBack, (, transform, (]
[., getLineno, (, ), ), ;, maybeSetLengthFrom, (, block, ,, cc, ), ;, lineSet, =, true, ;, }, block, .]
[;, lineSet, =, true, ;, }, block, ., addChildToBack, (, transform, (, cc, ), ), ;, }, node, ., addChildToBack]
[,, cc, ), ;, lineSet, =, true, ;, }, block, ., addChildToBack, (, transform, (, cc, ), ), ;, }]
[), ;, lineSet, =, true, ;, }, block, ., addChildToBack, (, transform, (, cc, ), ), ;, }, node, .]
[=, true, ;, }, block, ., addChildToBack, (, transform, (, cc, ), ), ;, }, node, ., addChildToBack, (, block]
[;, }, block, ., addChildToBack, (, transform, (, cc, ), ), ;, }, node, ., addChildToBack, (, block, ), ;]
[;, }, node, ., addChildToBack, (, block, ), ;, AstNode, finallyBlock, =, statementNode, ., getFinallyBlock, (, ), ;, if, (]
[., addChildToBack, (, transform, (, cc, ), ), ;, }, node, ., addChildToBack, (, block, ), ;, AstNode, finallyBlock, =]
[), ;, }, node, ., addChildToBack, (, block, ), ;, AstNode, finallyBlock, =, statementNode, ., getFinallyBlock, (, ), ;, if]
[), ), ;, }, node, ., addChildToBack, (, block, ), ;, AstNode, finallyBlock, =, statementNode, ., getFinallyBlock, (, ), ;]
[;, AstNode, finallyBlock, =, statementNode, ., getFinallyBlock, (, ), ;, if, (, finallyBlock, !=, null, ), {, node, ., addChildToBack]
[., addChildToBack, (, block, ), ;, AstNode, finallyBlock, =, statementNode, ., getFinallyBlock, (, ), ;, if, (, finallyBlock, !=, null]
[), ;, AstNode, finallyBlock, =, statementNode, ., getFinallyBlock, (, ), ;, if, (, finallyBlock, !=, null, ), {, node, .]
[;, if, (, finallyBlock, !=, null, ), {, node, ., addChildToBack, (, transformBlock, (, finallyBlock, ), ), ;, }, if]
[., getFinallyBlock, (, ), ;, if, (, finallyBlock, !=, null, ), {, node, ., addChildToBack, (, transformBlock, (, finallyBlock, )]
[), {, node, ., addChildToBack, (, transformBlock, (, finallyBlock, ), ), ;, }, if, (, (, lineSet, ==, false, )]
[!=, null, ), {, node, ., addChildToBack, (, transformBlock, (, finallyBlock, ), ), ;, }, if, (, (, lineSet, ==]
[), {, node, ., addChildToBack, (, transformBlock, (, finallyBlock, ), ), ;, }, if, (, (, lineSet, ==, false, )]
[;, }, if, (, (, lineSet, ==, false, ), &&, (, finallyBlock, !=, null, ), ), {, block, ., setLineno]
[., addChildToBack, (, transformBlock, (, finallyBlock, ), ), ;, }, if, (, (, lineSet, ==, false, ), &&, (, finallyBlock]
[), ;, }, if, (, (, lineSet, ==, false, ), &&, (, finallyBlock, !=, null, ), ), {, block, .]
[), ), ;, }, if, (, (, lineSet, ==, false, ), &&, (, finallyBlock, !=, null, ), ), {, block]
[), {, block, ., setLineno, (, finallyBlock, ., getLineno, (, ), ), ;, maybeSetLengthFrom, (, block, ,, finallyBlock, ), ;]
[&&, (, finallyBlock, !=, null, ), ), {, block, ., setLineno, (, finallyBlock, ., getLineno, (, ), ), ;, maybeSetLengthFrom]
[), &&, (, finallyBlock, !=, null, ), ), {, block, ., setLineno, (, finallyBlock, ., getLineno, (, ), ), ;]
[==, false, ), &&, (, finallyBlock, !=, null, ), ), {, block, ., setLineno, (, finallyBlock, ., getLineno, (, )]
[), &&, (, finallyBlock, !=, null, ), ), {, block, ., setLineno, (, finallyBlock, ., getLineno, (, ), ), ;]
[), {, block, ., setLineno, (, finallyBlock, ., getLineno, (, ), ), ;, maybeSetLengthFrom, (, block, ,, finallyBlock, ), ;]
[), ), {, block, ., setLineno, (, finallyBlock, ., getLineno, (, ), ), ;, maybeSetLengthFrom, (, block, ,, finallyBlock, )]
[!=, null, ), ), {, block, ., setLineno, (, finallyBlock, ., getLineno, (, ), ), ;, maybeSetLengthFrom, (, block, ,]
[), ), {, block, ., setLineno, (, finallyBlock, ., getLineno, (, ), ), ;, maybeSetLengthFrom, (, block, ,, finallyBlock, )]
[;, maybeSetLengthFrom, (, block, ,, finallyBlock, ), ;, }, return, node, ;, }, @, Override, Node, processUnaryExpression, (, UnaryExpression, exprNode]
[., setLineno, (, finallyBlock, ., getLineno, (, ), ), ;, maybeSetLengthFrom, (, block, ,, finallyBlock, ), ;, }, return, node]
[), ;, maybeSetLengthFrom, (, block, ,, finallyBlock, ), ;, }, return, node, ;, }, @, Override, Node, processUnaryExpression, (, UnaryExpression]
[., getLineno, (, ), ), ;, maybeSetLengthFrom, (, block, ,, finallyBlock, ), ;, }, return, node, ;, }, @, Override]
[;, }, return, node, ;, }, @, Override, Node, processUnaryExpression, (, UnaryExpression, exprNode, ), {, int, type, =, transformTokenType, (]
[,, finallyBlock, ), ;, }, return, node, ;, }, @, Override, Node, processUnaryExpression, (, UnaryExpression, exprNode, ), {, int, type]
[), ;, }, return, node, ;, }, @, Override, Node, processUnaryExpression, (, UnaryExpression, exprNode, ), {, int, type, =, transformTokenType]
[;, }, @, Override, Node, processUnaryExpression, (, UnaryExpression, exprNode, ), {, int, type, =, transformTokenType, (, exprNode, ., getType, (]
[;, Node, operand, =, transform, (, exprNode, ., getOperand, (, ), ), ;, if, (, type, ==, Token, ., NEG]
[), ;, Node, operand, =, transform, (, exprNode, ., getOperand, (, ), ), ;, if, (, type, ==, Token, .]
[., getType, (, ), ), ;, Node, operand, =, transform, (, exprNode, ., getOperand, (, ), ), ;, if, (]
[;, if, (, type, ==, Token, ., NEG, &&, operand, ., isNumber, (, ), ), {, operand, ., setDouble, (]
[), ;, if, (, type, ==, Token, ., NEG, &&, operand, ., isNumber, (, ), ), {, operand, ., setDouble]
[., getOperand, (, ), ), ;, if, (, type, ==, Token, ., NEG, &&, operand, ., isNumber, (, ), )]
[), {, operand, ., setDouble, (, -, operand, ., getDouble, (, ), ), ;, return, operand, ;, }, else, {]
[&&, operand, ., isNumber, (, ), ), {, operand, ., setDouble, (, -, operand, ., getDouble, (, ), ), ;]
[==, Token, ., NEG, &&, operand, ., isNumber, (, ), ), {, operand, ., setDouble, (, -, operand, ., getDouble]
[&&, operand, ., isNumber, (, ), ), {, operand, ., setDouble, (, -, operand, ., getDouble, (, ), ), ;]
[., NEG, &&, operand, ., isNumber, (, ), ), {, operand, ., setDouble, (, -, operand, ., getDouble, (, )]
[), {, operand, ., setDouble, (, -, operand, ., getDouble, (, ), ), ;, return, operand, ;, }, else, {]
[., isNumber, (, ), ), {, operand, ., setDouble, (, -, operand, ., getDouble, (, ), ), ;, return, operand]
[;, return, operand, ;, }, else, {, if, (, type, ==, Token, ., DELPROP, &&, !, (, operand, ., isGetProp]
[., setDouble, (, -, operand, ., getDouble, (, ), ), ;, return, operand, ;, }, else, {, if, (, type]
[), ;, return, operand, ;, }, else, {, if, (, type, ==, Token, ., DELPROP, &&, !, (, operand, .]
[), ;, return, operand, ;, }, else, {, if, (, type, ==, Token, ., DELPROP, &&, !, (, operand, .]
[., getDouble, (, ), ), ;, return, operand, ;, }, else, {, if, (, type, ==, Token, ., DELPROP, &&]
[;, }, else, {, if, (, type, ==, Token, ., DELPROP, &&, !, (, operand, ., isGetProp, (, ), ||]
[), {, String, msg, =, "Invalid delete operand. Only properties can be deleted.", ;, errorReporter, ., error, (, msg, ,, sourceName, ,, operand, ., getLineno, (, )]
[&&, !, (, operand, ., isGetProp, (, ), ||, operand, ., isGetElem, (, ), ||, operand, ., isName, (, )]
[==, Token, ., DELPROP, &&, !, (, operand, ., isGetProp, (, ), ||, operand, ., isGetElem, (, ), ||, operand]
[&&, !, (, operand, ., isGetProp, (, ), ||, operand, ., isGetElem, (, ), ||, operand, ., isName, (, )]
[., DELPROP, &&, !, (, operand, ., isGetProp, (, ), ||, operand, ., isGetElem, (, ), ||, operand, ., isName]
[), {, String, msg, =, "Invalid delete operand. Only properties can be deleted.", ;, errorReporter, ., error, (, msg, ,, sourceName, ,, operand, ., getLineno, (, )]
[), {, String, msg, =, "Invalid delete operand. Only properties can be deleted.", ;, errorReporter, ., error, (, msg, ,, sourceName, ,, operand, ., getLineno, (, )]
[), ), {, String, msg, =, "Invalid delete operand. Only properties can be deleted.", ;, errorReporter, ., error, (, msg, ,, sourceName, ,, operand, ., getLineno, (]
[||, operand, ., isName, (, ), ), ), {, String, msg, =, "Invalid delete operand. Only properties can be deleted.", ;, errorReporter, ., error, (, msg, ,]
[||, operand, ., isGetElem, (, ), ||, operand, ., isName, (, ), ), ), {, String, msg, =, "Invalid delete operand. Only properties can be deleted.", ;]
[., isGetProp, (, ), ||, operand, ., isGetElem, (, ), ||, operand, ., isName, (, ), ), ), {, String]
[||, operand, ., isName, (, ), ), ), {, String, msg, =, "Invalid delete operand. Only properties can be deleted.", ;, errorReporter, ., error, (, msg, ,]
[., isGetElem, (, ), ||, operand, ., isName, (, ), ), ), {, String, msg, =, "Invalid delete operand. Only properties can be deleted.", ;, errorReporter, .]
[), ), {, String, msg, =, "Invalid delete operand. Only properties can be deleted.", ;, errorReporter, ., error, (, msg, ,, sourceName, ,, operand, ., getLineno, (]
[., isName, (, ), ), ), {, String, msg, =, "Invalid delete operand. Only properties can be deleted.", ;, errorReporter, ., error, (, msg, ,, sourceName, ,]
[;, errorReporter, ., error, (, msg, ,, sourceName, ,, operand, ., getLineno, (, ), ,, "", ,, 0, ), ;]
[;, }, else, if, (, type, ==, Token, ., INC, ||, type, ==, Token, ., DEC, ), {, if, (]
[., error, (, msg, ,, sourceName, ,, operand, ., getLineno, (, ), ,, "", ,, 0, ), ;, }, else]
[,, sourceName, ,, operand, ., getLineno, (, ), ,, "", ,, 0, ), ;, }, else, if, (, type, ==]
[,, operand, ., getLineno, (, ), ,, "", ,, 0, ), ;, }, else, if, (, type, ==, Token, .]
[,, "", ,, 0, ), ;, }, else, if, (, type, ==, Token, ., INC, ||, type, ==, Token, .]
[., getLineno, (, ), ,, "", ,, 0, ), ;, }, else, if, (, type, ==, Token, ., INC, ||]
[,, 0, ), ;, }, else, if, (, type, ==, Token, ., INC, ||, type, ==, Token, ., DEC, )]
[), ;, }, else, if, (, type, ==, Token, ., INC, ||, type, ==, Token, ., DEC, ), {, if]
[), {, if, (, !, validAssignmentTarget, (, operand, ), ), {, String, msg, =, (, type, ==, Token, ., INC]
[||, type, ==, Token, ., DEC, ), {, if, (, !, validAssignmentTarget, (, operand, ), ), {, String, msg, =]
[==, Token, ., INC, ||, type, ==, Token, ., DEC, ), {, if, (, !, validAssignmentTarget, (, operand, ), )]
[||, type, ==, Token, ., DEC, ), {, if, (, !, validAssignmentTarget, (, operand, ), ), {, String, msg, =]
[., INC, ||, type, ==, Token, ., DEC, ), {, if, (, !, validAssignmentTarget, (, operand, ), ), {, String]
[), {, if, (, !, validAssignmentTarget, (, operand, ), ), {, String, msg, =, (, type, ==, Token, ., INC]
[==, Token, ., DEC, ), {, if, (, !, validAssignmentTarget, (, operand, ), ), {, String, msg, =, (, type]
[), {, if, (, !, validAssignmentTarget, (, operand, ), ), {, String, msg, =, (, type, ==, Token, ., INC]
[., DEC, ), {, if, (, !, validAssignmentTarget, (, operand, ), ), {, String, msg, =, (, type, ==, Token]
[), {, String, msg, =, (, type, ==, Token, ., INC, ), ?, "invalid increment target", :, "invalid decrement target", ;, errorReporter, ., error]
[), {, String, msg, =, (, type, ==, Token, ., INC, ), ?, "invalid increment target", :, "invalid decrement target", ;, errorReporter, ., error]
[), ), {, String, msg, =, (, type, ==, Token, ., INC, ), ?, "invalid increment target", :, "invalid decrement target", ;, errorReporter, .]
[;, errorReporter, ., error, (, msg, ,, sourceName, ,, operand, ., getLineno, (, ), ,, "", ,, 0, ), ;]
[?, "invalid increment target", :, "invalid decrement target", ;, errorReporter, ., error, (, msg, ,, sourceName, ,, operand, ., getLineno, (, ), ,, ""]
[), ?, "invalid increment target", :, "invalid decrement target", ;, errorReporter, ., error, (, msg, ,, sourceName, ,, operand, ., getLineno, (, ), ,]
[==, Token, ., INC, ), ?, "invalid increment target", :, "invalid decrement target", ;, errorReporter, ., error, (, msg, ,, sourceName, ,, operand, .]
[), ?, "invalid increment target", :, "invalid decrement target", ;, errorReporter, ., error, (, msg, ,, sourceName, ,, operand, ., getLineno, (, ), ,]
[., INC, ), ?, "invalid increment target", :, "invalid decrement target", ;, errorReporter, ., error, (, msg, ,, sourceName, ,, operand, ., getLineno, (]
[:, "invalid decrement target", ;, errorReporter, ., error, (, msg, ,, sourceName, ,, operand, ., getLineno, (, ), ,, "", ,, 0]
[;, errorReporter, ., error, (, msg, ,, sourceName, ,, operand, ., getLineno, (, ), ,, "", ,, 0, ), ;]
[;, }, }, Node, node, =, newNode, (, type, ,, operand, ), ;, if, (, exprNode, ., isPostfix, (, )]
[., error, (, msg, ,, sourceName, ,, operand, ., getLineno, (, ), ,, "", ,, 0, ), ;, }, }]
[,, sourceName, ,, operand, ., getLineno, (, ), ,, "", ,, 0, ), ;, }, }, Node, node, =, newNode]
[,, operand, ., getLineno, (, ), ,, "", ,, 0, ), ;, }, }, Node, node, =, newNode, (, type]
[,, "", ,, 0, ), ;, }, }, Node, node, =, newNode, (, type, ,, operand, ), ;, if, (]
[., getLineno, (, ), ,, "", ,, 0, ), ;, }, }, Node, node, =, newNode, (, type, ,, operand]
[,, 0, ), ;, }, }, Node, node, =, newNode, (, type, ,, operand, ), ;, if, (, exprNode, .]
[), ;, }, }, Node, node, =, newNode, (, type, ,, operand, ), ;, if, (, exprNode, ., isPostfix, (]
[;, if, (, exprNode, ., isPostfix, (, ), ), {, node, ., putBooleanProp, (, Node, ., INCRDECR_PROP, ,, true, )]
[,, operand, ), ;, if, (, exprNode, ., isPostfix, (, ), ), {, node, ., putBooleanProp, (, Node, ., INCRDECR_PROP]
[), ;, if, (, exprNode, ., isPostfix, (, ), ), {, node, ., putBooleanProp, (, Node, ., INCRDECR_PROP, ,, true]
[), {, node, ., putBooleanProp, (, Node, ., INCRDECR_PROP, ,, true, ), ;, }, return, node, ;, }, }, private]
[., isPostfix, (, ), ), {, node, ., putBooleanProp, (, Node, ., INCRDECR_PROP, ,, true, ), ;, }, return, node]
[;, }, return, node, ;, }, }, private, boolean, validAssignmentTarget, (, Node, target, ), {, switch, (, target, ., getType]
[., putBooleanProp, (, Node, ., INCRDECR_PROP, ,, true, ), ;, }, return, node, ;, }, }, private, boolean, validAssignmentTarget, (]
[,, true, ), ;, }, return, node, ;, }, }, private, boolean, validAssignmentTarget, (, Node, target, ), {, switch, (]
[., INCRDECR_PROP, ,, true, ), ;, }, return, node, ;, }, }, private, boolean, validAssignmentTarget, (, Node, target, ), {]
[), ;, }, return, node, ;, }, }, private, boolean, validAssignmentTarget, (, Node, target, ), {, switch, (, target, .]
[;, }, }, private, boolean, validAssignmentTarget, (, Node, target, ), {, switch, (, target, ., getType, (, ), ), {]
[), {, case, Token, ., NAME, :, case, Token, ., GETPROP, :, case, Token, ., GETELEM, :, return, true, ;]
[., getType, (, ), ), {, case, Token, ., NAME, :, case, Token, ., GETPROP, :, case, Token, ., GETELEM]
[:, case, Token, ., GETPROP, :, case, Token, ., GETELEM, :, return, true, ;, }, return, false, ;, }, @]
[., NAME, :, case, Token, ., GETPROP, :, case, Token, ., GETELEM, :, return, true, ;, }, return, false, ;]
[:, case, Token, ., GETELEM, :, return, true, ;, }, return, false, ;, }, @, Override, Node, processVariableDeclaration, (, VariableDeclaration]
[., GETPROP, :, case, Token, ., GETELEM, :, return, true, ;, }, return, false, ;, }, @, Override, Node, processVariableDeclaration]
[:, return, true, ;, }, return, false, ;, }, @, Override, Node, processVariableDeclaration, (, VariableDeclaration, declarationNode, ), {, if, (]
[., GETELEM, :, return, true, ;, }, return, false, ;, }, @, Override, Node, processVariableDeclaration, (, VariableDeclaration, declarationNode, ), {]
[;, }, return, false, ;, }, @, Override, Node, processVariableDeclaration, (, VariableDeclaration, declarationNode, ), {, if, (, !, config, .]
[;, }, @, Override, Node, processVariableDeclaration, (, VariableDeclaration, declarationNode, ), {, if, (, !, config, ., acceptConstKeyword, &&, declarationNode, .]
[), {, processIllegalToken, (, declarationNode, ), ;, }, Node, node, =, newNode, (, Token, ., VAR, ), ;, for, (]
[&&, declarationNode, ., getType, (, ), ==, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., CONST]
[&&, declarationNode, ., getType, (, ), ==, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., CONST]
[., acceptConstKeyword, &&, declarationNode, ., getType, (, ), ==, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[), {, processIllegalToken, (, declarationNode, ), ;, }, Node, node, =, newNode, (, Token, ., VAR, ), ;, for, (]
[==, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., CONST, ), {, processIllegalToken, (, declarationNode, )]
[., getType, (, ), ==, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., CONST, ), {]
[), {, processIllegalToken, (, declarationNode, ), ;, }, Node, node, =, newNode, (, Token, ., VAR, ), ;, for, (]
[., CONST, ), {, processIllegalToken, (, declarationNode, ), ;, }, Node, node, =, newNode, (, Token, ., VAR, ), ;]
[., Token, ., CONST, ), {, processIllegalToken, (, declarationNode, ), ;, }, Node, node, =, newNode, (, Token, ., VAR]
[., head, ., Token, ., CONST, ), {, processIllegalToken, (, declarationNode, ), ;, }, Node, node, =, newNode, (, Token]
[., rhino, ., head, ., Token, ., CONST, ), {, processIllegalToken, (, declarationNode, ), ;, }, Node, node, =, newNode]
[., javascript, ., rhino, ., head, ., Token, ., CONST, ), {, processIllegalToken, (, declarationNode, ), ;, }, Node, node]
[., google, ., javascript, ., rhino, ., head, ., Token, ., CONST, ), {, processIllegalToken, (, declarationNode, ), ;, }]
[;, }, Node, node, =, newNode, (, Token, ., VAR, ), ;, for, (, VariableInitializer, child, :, declarationNode, ., getVariables]
[), ;, }, Node, node, =, newNode, (, Token, ., VAR, ), ;, for, (, VariableInitializer, child, :, declarationNode, .]
[;, for, (, VariableInitializer, child, :, declarationNode, ., getVariables, (, ), ), {, node, ., addChildToBack, (, transform, (, child]
[), ;, for, (, VariableInitializer, child, :, declarationNode, ., getVariables, (, ), ), {, node, ., addChildToBack, (, transform, (]
[., VAR, ), ;, for, (, VariableInitializer, child, :, declarationNode, ., getVariables, (, ), ), {, node, ., addChildToBack, (]
[), {, node, ., addChildToBack, (, transform, (, child, ), ), ;, }, return, node, ;, }, @, Override, Node]
[., getVariables, (, ), ), {, node, ., addChildToBack, (, transform, (, child, ), ), ;, }, return, node, ;]
[;, }, return, node, ;, }, @, Override, Node, processVariableInitializer, (, VariableInitializer, initializerNode, ), {, Node, node, =, transform, (]
[., addChildToBack, (, transform, (, child, ), ), ;, }, return, node, ;, }, @, Override, Node, processVariableInitializer, (, VariableInitializer]
[), ;, }, return, node, ;, }, @, Override, Node, processVariableInitializer, (, VariableInitializer, initializerNode, ), {, Node, node, =, transform]
[), ), ;, }, return, node, ;, }, @, Override, Node, processVariableInitializer, (, VariableInitializer, initializerNode, ), {, Node, node, =]
[;, }, @, Override, Node, processVariableInitializer, (, VariableInitializer, initializerNode, ), {, Node, node, =, transform, (, initializerNode, ., getTarget, (]
[;, if, (, initializerNode, ., getInitializer, (, ), !=, null, ), {, Node, initalizer, =, transform, (, initializerNode, ., getInitializer]
[), ;, if, (, initializerNode, ., getInitializer, (, ), !=, null, ), {, Node, initalizer, =, transform, (, initializerNode, .]
[., getTarget, (, ), ), ;, if, (, initializerNode, ., getInitializer, (, ), !=, null, ), {, Node, initalizer, =]
[), {, Node, initalizer, =, transform, (, initializerNode, ., getInitializer, (, ), ), ;, node, ., addChildToBack, (, initalizer, )]
[!=, null, ), {, Node, initalizer, =, transform, (, initializerNode, ., getInitializer, (, ), ), ;, node, ., addChildToBack, (]
[., getInitializer, (, ), !=, null, ), {, Node, initalizer, =, transform, (, initializerNode, ., getInitializer, (, ), ), ;]
[), {, Node, initalizer, =, transform, (, initializerNode, ., getInitializer, (, ), ), ;, node, ., addChildToBack, (, initalizer, )]
[;, node, ., addChildToBack, (, initalizer, ), ;, }, return, node, ;, }, @, Override, Node, processWhileLoop, (, WhileLoop, loopNode]
[), ;, node, ., addChildToBack, (, initalizer, ), ;, }, return, node, ;, }, @, Override, Node, processWhileLoop, (, WhileLoop]
[., getInitializer, (, ), ), ;, node, ., addChildToBack, (, initalizer, ), ;, }, return, node, ;, }, @, Override]
[;, }, return, node, ;, }, @, Override, Node, processWhileLoop, (, WhileLoop, loopNode, ), {, return, newNode, (, Token, .]
[., addChildToBack, (, initalizer, ), ;, }, return, node, ;, }, @, Override, Node, processWhileLoop, (, WhileLoop, loopNode, ), {]
[), ;, }, return, node, ;, }, @, Override, Node, processWhileLoop, (, WhileLoop, loopNode, ), {, return, newNode, (, Token]
[;, }, @, Override, Node, processWhileLoop, (, WhileLoop, loopNode, ), {, return, newNode, (, Token, ., WHILE, ,, transform, (]
[;, }, @, Override, Node, processWithStatement, (, WithStatement, statementNode, ), {, return, newNode, (, Token, ., WITH, ,, transform, (]
[,, transform, (, loopNode, ., getCondition, (, ), ), ,, transformBlock, (, loopNode, ., getBody, (, ), ), ), ;]
[., WHILE, ,, transform, (, loopNode, ., getCondition, (, ), ), ,, transformBlock, (, loopNode, ., getBody, (, ), )]
[,, transformBlock, (, loopNode, ., getBody, (, ), ), ), ;, }, @, Override, Node, processWithStatement, (, WithStatement, statementNode, )]
[), ,, transformBlock, (, loopNode, ., getBody, (, ), ), ), ;, }, @, Override, Node, processWithStatement, (, WithStatement, statementNode]
[., getCondition, (, ), ), ,, transformBlock, (, loopNode, ., getBody, (, ), ), ), ;, }, @, Override, Node]
[), ;, }, @, Override, Node, processWithStatement, (, WithStatement, statementNode, ), {, return, newNode, (, Token, ., WITH, ,, transform]
[), ), ;, }, @, Override, Node, processWithStatement, (, WithStatement, statementNode, ), {, return, newNode, (, Token, ., WITH, ,]
[., getBody, (, ), ), ), ;, }, @, Override, Node, processWithStatement, (, WithStatement, statementNode, ), {, return, newNode, (]
[;, }, @, Override, Node, processIllegalToken, (, AstNode, node, ), {, errorReporter, ., error, (, "Unsupported syntax: ", +, com, ., google]
[,, transform, (, statementNode, ., getExpression, (, ), ), ,, transformBlock, (, statementNode, ., getStatement, (, ), ), ), ;]
[., WITH, ,, transform, (, statementNode, ., getExpression, (, ), ), ,, transformBlock, (, statementNode, ., getStatement, (, ), )]
[,, transformBlock, (, statementNode, ., getStatement, (, ), ), ), ;, }, @, Override, Node, processIllegalToken, (, AstNode, node, )]
[), ,, transformBlock, (, statementNode, ., getStatement, (, ), ), ), ;, }, @, Override, Node, processIllegalToken, (, AstNode, node]
[., getExpression, (, ), ), ,, transformBlock, (, statementNode, ., getStatement, (, ), ), ), ;, }, @, Override, Node]
[), ;, }, @, Override, Node, processIllegalToken, (, AstNode, node, ), {, errorReporter, ., error, (, "Unsupported syntax: ", +, com, .]
[), ), ;, }, @, Override, Node, processIllegalToken, (, AstNode, node, ), {, errorReporter, ., error, (, "Unsupported syntax: ", +, com]
[., getStatement, (, ), ), ), ;, }, @, Override, Node, processIllegalToken, (, AstNode, node, ), {, errorReporter, ., error]
[;, return, newNode, (, Token, ., EMPTY, ), ;, }, void, reportDestructuringAssign, (, AstNode, node, ), {, errorReporter, ., error]
[., error, (, "Unsupported syntax: ", +, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., typeToName, (, node]
[,, sourceName, ,, node, ., getLineno, (, ), ,, "", ,, 0, ), ;, return, newNode, (, Token, ., EMPTY]
[+, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., typeToName, (, node, ., getType, (, )]
[,, sourceName, ,, node, ., getLineno, (, ), ,, "", ,, 0, ), ;, return, newNode, (, Token, ., EMPTY]
[., typeToName, (, node, ., getType, (, ), ), ,, sourceName, ,, node, ., getLineno, (, ), ,, "", ,]
[., Token, ., typeToName, (, node, ., getType, (, ), ), ,, sourceName, ,, node, ., getLineno, (, ), ,]
[., head, ., Token, ., typeToName, (, node, ., getType, (, ), ), ,, sourceName, ,, node, ., getLineno, (]
[., rhino, ., head, ., Token, ., typeToName, (, node, ., getType, (, ), ), ,, sourceName, ,, node, .]
[., javascript, ., rhino, ., head, ., Token, ., typeToName, (, node, ., getType, (, ), ), ,, sourceName, ,]
[., google, ., javascript, ., rhino, ., head, ., Token, ., typeToName, (, node, ., getType, (, ), ), ,]
[), ,, sourceName, ,, node, ., getLineno, (, ), ,, "", ,, 0, ), ;, return, newNode, (, Token, .]
[., getType, (, ), ), ,, sourceName, ,, node, ., getLineno, (, ), ,, "", ,, 0, ), ;, return]
[,, node, ., getLineno, (, ), ,, "", ,, 0, ), ;, return, newNode, (, Token, ., EMPTY, ), ;]
[,, "", ,, 0, ), ;, return, newNode, (, Token, ., EMPTY, ), ;, }, void, reportDestructuringAssign, (, AstNode, node]
[., getLineno, (, ), ,, "", ,, 0, ), ;, return, newNode, (, Token, ., EMPTY, ), ;, }, void]
[,, 0, ), ;, return, newNode, (, Token, ., EMPTY, ), ;, }, void, reportDestructuringAssign, (, AstNode, node, ), {]
[), ;, return, newNode, (, Token, ., EMPTY, ), ;, }, void, reportDestructuringAssign, (, AstNode, node, ), {, errorReporter, .]
[;, }, void, reportDestructuringAssign, (, AstNode, node, ), {, errorReporter, ., error, (, "destructuring assignment forbidden", ,, sourceName, ,, node, ., getLineno]
[), ;, }, void, reportDestructuringAssign, (, AstNode, node, ), {, errorReporter, ., error, (, "destructuring assignment forbidden", ,, sourceName, ,, node, .]
[., EMPTY, ), ;, }, void, reportDestructuringAssign, (, AstNode, node, ), {, errorReporter, ., error, (, "destructuring assignment forbidden", ,, sourceName, ,]
[;, }, void, reportGetter, (, AstNode, node, ), {, errorReporter, ., error, (, GETTER_ERROR_MESSAGE, ,, sourceName, ,, node, ., getLineno]
[., error, (, "destructuring assignment forbidden", ,, sourceName, ,, node, ., getLineno, (, ), ,, "", ,, 0, ), ;, }, void]
[,, sourceName, ,, node, ., getLineno, (, ), ,, "", ,, 0, ), ;, }, void, reportGetter, (, AstNode, node]
[,, node, ., getLineno, (, ), ,, "", ,, 0, ), ;, }, void, reportGetter, (, AstNode, node, ), {]
[,, "", ,, 0, ), ;, }, void, reportGetter, (, AstNode, node, ), {, errorReporter, ., error, (, GETTER_ERROR_MESSAGE, ,]
[., getLineno, (, ), ,, "", ,, 0, ), ;, }, void, reportGetter, (, AstNode, node, ), {, errorReporter, .]
[,, 0, ), ;, }, void, reportGetter, (, AstNode, node, ), {, errorReporter, ., error, (, GETTER_ERROR_MESSAGE, ,, sourceName, ,]
[), ;, }, void, reportGetter, (, AstNode, node, ), {, errorReporter, ., error, (, GETTER_ERROR_MESSAGE, ,, sourceName, ,, node, .]
[;, }, void, reportSetter, (, AstNode, node, ), {, errorReporter, ., error, (, SETTER_ERROR_MESSAGE, ,, sourceName, ,, node, ., getLineno]
[., error, (, GETTER_ERROR_MESSAGE, ,, sourceName, ,, node, ., getLineno, (, ), ,, "", ,, 0, ), ;, }, void]
[,, sourceName, ,, node, ., getLineno, (, ), ,, "", ,, 0, ), ;, }, void, reportSetter, (, AstNode, node]
[,, node, ., getLineno, (, ), ,, "", ,, 0, ), ;, }, void, reportSetter, (, AstNode, node, ), {]
[,, "", ,, 0, ), ;, }, void, reportSetter, (, AstNode, node, ), {, errorReporter, ., error, (, SETTER_ERROR_MESSAGE, ,]
[., getLineno, (, ), ,, "", ,, 0, ), ;, }, void, reportSetter, (, AstNode, node, ), {, errorReporter, .]
[,, 0, ), ;, }, void, reportSetter, (, AstNode, node, ), {, errorReporter, ., error, (, SETTER_ERROR_MESSAGE, ,, sourceName, ,]
[), ;, }, void, reportSetter, (, AstNode, node, ), {, errorReporter, ., error, (, SETTER_ERROR_MESSAGE, ,, sourceName, ,, node, .]
[;, }, void, reportGetterParam, (, AstNode, node, ), {, errorReporter, ., error, (, "getters may not have parameters", ,, sourceName, ,, node, ., getLineno]
[., error, (, SETTER_ERROR_MESSAGE, ,, sourceName, ,, node, ., getLineno, (, ), ,, "", ,, 0, ), ;, }, void]
[,, sourceName, ,, node, ., getLineno, (, ), ,, "", ,, 0, ), ;, }, void, reportGetterParam, (, AstNode, node]
[,, node, ., getLineno, (, ), ,, "", ,, 0, ), ;, }, void, reportGetterParam, (, AstNode, node, ), {]
[,, "", ,, 0, ), ;, }, void, reportGetterParam, (, AstNode, node, ), {, errorReporter, ., error, (, "getters may not have parameters", ,]
[., getLineno, (, ), ,, "", ,, 0, ), ;, }, void, reportGetterParam, (, AstNode, node, ), {, errorReporter, .]
[,, 0, ), ;, }, void, reportGetterParam, (, AstNode, node, ), {, errorReporter, ., error, (, "getters may not have parameters", ,, sourceName, ,]
[), ;, }, void, reportGetterParam, (, AstNode, node, ), {, errorReporter, ., error, (, "getters may not have parameters", ,, sourceName, ,, node, .]
[;, }, void, reportSetterParam, (, AstNode, node, ), {, errorReporter, ., error, (, "setters must have exactly one parameter", ,, sourceName, ,, node, ., getLineno]
[., error, (, "getters may not have parameters", ,, sourceName, ,, node, ., getLineno, (, ), ,, "", ,, 0, ), ;, }, void]
[,, sourceName, ,, node, ., getLineno, (, ), ,, "", ,, 0, ), ;, }, void, reportSetterParam, (, AstNode, node]
[,, node, ., getLineno, (, ), ,, "", ,, 0, ), ;, }, void, reportSetterParam, (, AstNode, node, ), {]
[,, "", ,, 0, ), ;, }, void, reportSetterParam, (, AstNode, node, ), {, errorReporter, ., error, (, "setters must have exactly one parameter", ,]
[., getLineno, (, ), ,, "", ,, 0, ), ;, }, void, reportSetterParam, (, AstNode, node, ), {, errorReporter, .]
[,, 0, ), ;, }, void, reportSetterParam, (, AstNode, node, ), {, errorReporter, ., error, (, "setters must have exactly one parameter", ,, sourceName, ,]
[), ;, }, void, reportSetterParam, (, AstNode, node, ), {, errorReporter, ., error, (, "setters must have exactly one parameter", ,, sourceName, ,, node, .]
[;, }, }, private, static, int, transformTokenType, (, int, token, ), {, switch, (, token, ), {, case, com, .]
[., error, (, "setters must have exactly one parameter", ,, sourceName, ,, node, ., getLineno, (, ), ,, "", ,, 0, ), ;, }, }]
[,, sourceName, ,, node, ., getLineno, (, ), ,, "", ,, 0, ), ;, }, }, private, static, int, transformTokenType]
[,, node, ., getLineno, (, ), ,, "", ,, 0, ), ;, }, }, private, static, int, transformTokenType, (, int]
[,, "", ,, 0, ), ;, }, }, private, static, int, transformTokenType, (, int, token, ), {, switch, (, token]
[., getLineno, (, ), ,, "", ,, 0, ), ;, }, }, private, static, int, transformTokenType, (, int, token, )]
[,, 0, ), ;, }, }, private, static, int, transformTokenType, (, int, token, ), {, switch, (, token, ), {]
[), ;, }, }, private, static, int, transformTokenType, (, int, token, ), {, switch, (, token, ), {, case, com]
[), {, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., RETURN, :, return, Token, .]
[:, return, Token, ., RETURN, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., BITOR]
[., RETURN, :, return, Token, ., RETURN, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., RETURN, :, return, Token, ., RETURN, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., RETURN, :, return, Token, ., RETURN, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., RETURN, :, return, Token, ., RETURN, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., RETURN, :, return, Token, ., RETURN, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., RETURN, :, return, Token, ., RETURN, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., BITOR, :, return, Token, ., BITOR]
[., RETURN, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., BITOR, :, return, Token]
[:, return, Token, ., BITOR, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., BITXOR]
[., BITOR, :, return, Token, ., BITOR, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., BITOR, :, return, Token, ., BITOR, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., BITOR, :, return, Token, ., BITOR, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., BITOR, :, return, Token, ., BITOR, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., BITOR, :, return, Token, ., BITOR, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., BITOR, :, return, Token, ., BITOR, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., BITXOR, :, return, Token, ., BITXOR]
[., BITOR, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., BITXOR, :, return, Token]
[:, return, Token, ., BITXOR, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., BITAND]
[., BITXOR, :, return, Token, ., BITXOR, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., BITXOR, :, return, Token, ., BITXOR, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., BITXOR, :, return, Token, ., BITXOR, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., BITXOR, :, return, Token, ., BITXOR, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., BITXOR, :, return, Token, ., BITXOR, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., BITXOR, :, return, Token, ., BITXOR, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., BITAND, :, return, Token, ., BITAND]
[., BITXOR, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., BITAND, :, return, Token]
[:, return, Token, ., BITAND, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., EQ]
[., BITAND, :, return, Token, ., BITAND, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., BITAND, :, return, Token, ., BITAND, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., BITAND, :, return, Token, ., BITAND, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., BITAND, :, return, Token, ., BITAND, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., BITAND, :, return, Token, ., BITAND, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., BITAND, :, return, Token, ., BITAND, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., EQ, :, return, Token, ., EQ]
[., BITAND, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., EQ, :, return, Token]
[:, return, Token, ., EQ, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., NE]
[., EQ, :, return, Token, ., EQ, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., EQ, :, return, Token, ., EQ, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., EQ, :, return, Token, ., EQ, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., EQ, :, return, Token, ., EQ, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., EQ, :, return, Token, ., EQ, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., EQ, :, return, Token, ., EQ, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., NE, :, return, Token, ., NE]
[., EQ, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., NE, :, return, Token]
[:, return, Token, ., NE, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., LT]
[., NE, :, return, Token, ., NE, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., NE, :, return, Token, ., NE, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., NE, :, return, Token, ., NE, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., NE, :, return, Token, ., NE, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., NE, :, return, Token, ., NE, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., NE, :, return, Token, ., NE, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., LT, :, return, Token, ., LT]
[., NE, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., LT, :, return, Token]
[:, return, Token, ., LT, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., LE]
[., LT, :, return, Token, ., LT, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., LT, :, return, Token, ., LT, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., LT, :, return, Token, ., LT, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., LT, :, return, Token, ., LT, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., LT, :, return, Token, ., LT, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., LT, :, return, Token, ., LT, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., LE, :, return, Token, ., LE]
[., LT, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., LE, :, return, Token]
[:, return, Token, ., LE, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., GT]
[., LE, :, return, Token, ., LE, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., LE, :, return, Token, ., LE, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., LE, :, return, Token, ., LE, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., LE, :, return, Token, ., LE, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., LE, :, return, Token, ., LE, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., LE, :, return, Token, ., LE, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., GT, :, return, Token, ., GT]
[., LE, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., GT, :, return, Token]
[:, return, Token, ., GT, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., GE]
[., GT, :, return, Token, ., GT, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., GT, :, return, Token, ., GT, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., GT, :, return, Token, ., GT, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., GT, :, return, Token, ., GT, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., GT, :, return, Token, ., GT, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., GT, :, return, Token, ., GT, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., GE, :, return, Token, ., GE]
[., GT, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., GE, :, return, Token]
[:, return, Token, ., GE, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., LSH]
[., GE, :, return, Token, ., GE, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., GE, :, return, Token, ., GE, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., GE, :, return, Token, ., GE, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., GE, :, return, Token, ., GE, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., GE, :, return, Token, ., GE, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., GE, :, return, Token, ., GE, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., LSH, :, return, Token, ., LSH]
[., GE, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., LSH, :, return, Token]
[:, return, Token, ., LSH, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., RSH]
[., LSH, :, return, Token, ., LSH, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., LSH, :, return, Token, ., LSH, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., LSH, :, return, Token, ., LSH, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., LSH, :, return, Token, ., LSH, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., LSH, :, return, Token, ., LSH, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., LSH, :, return, Token, ., LSH, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., RSH, :, return, Token, ., RSH]
[., LSH, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., RSH, :, return, Token]
[:, return, Token, ., RSH, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., URSH]
[., RSH, :, return, Token, ., RSH, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., RSH, :, return, Token, ., RSH, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., RSH, :, return, Token, ., RSH, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., RSH, :, return, Token, ., RSH, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., RSH, :, return, Token, ., RSH, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., RSH, :, return, Token, ., RSH, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., URSH, :, return, Token, ., URSH]
[., RSH, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., URSH, :, return, Token]
[:, return, Token, ., URSH, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ADD]
[., URSH, :, return, Token, ., URSH, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., URSH, :, return, Token, ., URSH, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., URSH, :, return, Token, ., URSH, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., URSH, :, return, Token, ., URSH, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., URSH, :, return, Token, ., URSH, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., URSH, :, return, Token, ., URSH, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ADD, :, return, Token, ., ADD]
[., URSH, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ADD, :, return, Token]
[:, return, Token, ., ADD, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., SUB]
[., ADD, :, return, Token, ., ADD, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., ADD, :, return, Token, ., ADD, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., ADD, :, return, Token, ., ADD, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., ADD, :, return, Token, ., ADD, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., ADD, :, return, Token, ., ADD, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., ADD, :, return, Token, ., ADD, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., SUB, :, return, Token, ., SUB]
[., ADD, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., SUB, :, return, Token]
[:, return, Token, ., SUB, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., MUL]
[., SUB, :, return, Token, ., SUB, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., SUB, :, return, Token, ., SUB, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., SUB, :, return, Token, ., SUB, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., SUB, :, return, Token, ., SUB, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., SUB, :, return, Token, ., SUB, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., SUB, :, return, Token, ., SUB, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., MUL, :, return, Token, ., MUL]
[., SUB, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., MUL, :, return, Token]
[:, return, Token, ., MUL, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., DIV]
[., MUL, :, return, Token, ., MUL, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., MUL, :, return, Token, ., MUL, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., MUL, :, return, Token, ., MUL, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., MUL, :, return, Token, ., MUL, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., MUL, :, return, Token, ., MUL, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., MUL, :, return, Token, ., MUL, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., DIV, :, return, Token, ., DIV]
[., MUL, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., DIV, :, return, Token]
[:, return, Token, ., DIV, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., MOD]
[., DIV, :, return, Token, ., DIV, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., DIV, :, return, Token, ., DIV, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., DIV, :, return, Token, ., DIV, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., DIV, :, return, Token, ., DIV, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., DIV, :, return, Token, ., DIV, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., DIV, :, return, Token, ., DIV, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., MOD, :, return, Token, ., MOD]
[., DIV, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., MOD, :, return, Token]
[:, return, Token, ., MOD, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., NOT]
[., MOD, :, return, Token, ., MOD, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., MOD, :, return, Token, ., MOD, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., MOD, :, return, Token, ., MOD, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., MOD, :, return, Token, ., MOD, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., MOD, :, return, Token, ., MOD, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., MOD, :, return, Token, ., MOD, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., NOT, :, return, Token, ., NOT]
[., MOD, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., NOT, :, return, Token]
[:, return, Token, ., NOT, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., BITNOT]
[., NOT, :, return, Token, ., NOT, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., NOT, :, return, Token, ., NOT, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., NOT, :, return, Token, ., NOT, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., NOT, :, return, Token, ., NOT, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., NOT, :, return, Token, ., NOT, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., NOT, :, return, Token, ., NOT, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., BITNOT, :, return, Token, ., BITNOT]
[., NOT, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., BITNOT, :, return, Token]
[:, return, Token, ., BITNOT, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., POS]
[., BITNOT, :, return, Token, ., BITNOT, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., BITNOT, :, return, Token, ., BITNOT, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., BITNOT, :, return, Token, ., BITNOT, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., BITNOT, :, return, Token, ., BITNOT, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., BITNOT, :, return, Token, ., BITNOT, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., BITNOT, :, return, Token, ., BITNOT, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., POS, :, return, Token, ., POS]
[., BITNOT, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., POS, :, return, Token]
[:, return, Token, ., POS, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., NEG]
[., POS, :, return, Token, ., POS, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., POS, :, return, Token, ., POS, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., POS, :, return, Token, ., POS, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., POS, :, return, Token, ., POS, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., POS, :, return, Token, ., POS, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., POS, :, return, Token, ., POS, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., NEG, :, return, Token, ., NEG]
[., POS, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., NEG, :, return, Token]
[:, return, Token, ., NEG, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., NEW]
[., NEG, :, return, Token, ., NEG, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., NEG, :, return, Token, ., NEG, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., NEG, :, return, Token, ., NEG, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., NEG, :, return, Token, ., NEG, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., NEG, :, return, Token, ., NEG, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., NEG, :, return, Token, ., NEG, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., NEW, :, return, Token, ., NEW]
[., NEG, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., NEW, :, return, Token]
[:, return, Token, ., NEW, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., DELPROP]
[., NEW, :, return, Token, ., NEW, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., NEW, :, return, Token, ., NEW, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., NEW, :, return, Token, ., NEW, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., NEW, :, return, Token, ., NEW, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., NEW, :, return, Token, ., NEW, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., NEW, :, return, Token, ., NEW, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., DELPROP, :, return, Token, ., DELPROP]
[., NEW, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., DELPROP, :, return, Token]
[:, return, Token, ., DELPROP, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., TYPEOF]
[., DELPROP, :, return, Token, ., DELPROP, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., DELPROP, :, return, Token, ., DELPROP, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., DELPROP, :, return, Token, ., DELPROP, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., DELPROP, :, return, Token, ., DELPROP, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., DELPROP, :, return, Token, ., DELPROP, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., DELPROP, :, return, Token, ., DELPROP, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., TYPEOF, :, return, Token, ., TYPEOF]
[., DELPROP, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., TYPEOF, :, return, Token]
[:, return, Token, ., TYPEOF, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., GETPROP]
[., TYPEOF, :, return, Token, ., TYPEOF, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., TYPEOF, :, return, Token, ., TYPEOF, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., TYPEOF, :, return, Token, ., TYPEOF, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., TYPEOF, :, return, Token, ., TYPEOF, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., TYPEOF, :, return, Token, ., TYPEOF, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., TYPEOF, :, return, Token, ., TYPEOF, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., GETPROP, :, return, Token, ., GETPROP]
[., TYPEOF, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., GETPROP, :, return, Token]
[:, return, Token, ., GETPROP, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., GETELEM]
[., GETPROP, :, return, Token, ., GETPROP, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., GETPROP, :, return, Token, ., GETPROP, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., GETPROP, :, return, Token, ., GETPROP, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., GETPROP, :, return, Token, ., GETPROP, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., GETPROP, :, return, Token, ., GETPROP, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., GETPROP, :, return, Token, ., GETPROP, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., GETELEM, :, return, Token, ., GETELEM]
[., GETPROP, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., GETELEM, :, return, Token]
[:, return, Token, ., GETELEM, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., CALL]
[., GETELEM, :, return, Token, ., GETELEM, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., GETELEM, :, return, Token, ., GETELEM, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., GETELEM, :, return, Token, ., GETELEM, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., GETELEM, :, return, Token, ., GETELEM, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., GETELEM, :, return, Token, ., GETELEM, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., GETELEM, :, return, Token, ., GETELEM, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., CALL, :, return, Token, ., CALL]
[., GETELEM, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., CALL, :, return, Token]
[:, return, Token, ., CALL, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., NAME]
[., CALL, :, return, Token, ., CALL, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., CALL, :, return, Token, ., CALL, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., CALL, :, return, Token, ., CALL, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., CALL, :, return, Token, ., CALL, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., CALL, :, return, Token, ., CALL, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., CALL, :, return, Token, ., CALL, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., NAME, :, return, Token, ., NAME]
[., CALL, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., NAME, :, return, Token]
[:, return, Token, ., NAME, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., NUMBER]
[., NAME, :, return, Token, ., NAME, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., NAME, :, return, Token, ., NAME, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., NAME, :, return, Token, ., NAME, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., NAME, :, return, Token, ., NAME, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., NAME, :, return, Token, ., NAME, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., NAME, :, return, Token, ., NAME, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., NUMBER, :, return, Token, ., NUMBER]
[., NAME, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., NUMBER, :, return, Token]
[:, return, Token, ., NUMBER, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., STRING]
[., NUMBER, :, return, Token, ., NUMBER, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., NUMBER, :, return, Token, ., NUMBER, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., NUMBER, :, return, Token, ., NUMBER, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., NUMBER, :, return, Token, ., NUMBER, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., NUMBER, :, return, Token, ., NUMBER, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., NUMBER, :, return, Token, ., NUMBER, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., STRING, :, return, Token, ., STRING]
[., NUMBER, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., STRING, :, return, Token]
[:, return, Token, ., STRING, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., NULL]
[., STRING, :, return, Token, ., STRING, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., STRING, :, return, Token, ., STRING, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., STRING, :, return, Token, ., STRING, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., STRING, :, return, Token, ., STRING, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., STRING, :, return, Token, ., STRING, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., STRING, :, return, Token, ., STRING, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., NULL, :, return, Token, ., NULL]
[., STRING, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., NULL, :, return, Token]
[:, return, Token, ., NULL, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., THIS]
[., NULL, :, return, Token, ., NULL, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., NULL, :, return, Token, ., NULL, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., NULL, :, return, Token, ., NULL, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., NULL, :, return, Token, ., NULL, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., NULL, :, return, Token, ., NULL, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., NULL, :, return, Token, ., NULL, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., THIS, :, return, Token, ., THIS]
[., NULL, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., THIS, :, return, Token]
[:, return, Token, ., THIS, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., FALSE]
[., THIS, :, return, Token, ., THIS, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., THIS, :, return, Token, ., THIS, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., THIS, :, return, Token, ., THIS, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., THIS, :, return, Token, ., THIS, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., THIS, :, return, Token, ., THIS, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., THIS, :, return, Token, ., THIS, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., FALSE, :, return, Token, ., FALSE]
[., THIS, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., FALSE, :, return, Token]
[:, return, Token, ., FALSE, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., TRUE]
[., FALSE, :, return, Token, ., FALSE, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., FALSE, :, return, Token, ., FALSE, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., FALSE, :, return, Token, ., FALSE, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., FALSE, :, return, Token, ., FALSE, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., FALSE, :, return, Token, ., FALSE, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., FALSE, :, return, Token, ., FALSE, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., TRUE, :, return, Token, ., TRUE]
[., FALSE, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., TRUE, :, return, Token]
[:, return, Token, ., TRUE, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., SHEQ]
[., TRUE, :, return, Token, ., TRUE, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., TRUE, :, return, Token, ., TRUE, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., TRUE, :, return, Token, ., TRUE, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., TRUE, :, return, Token, ., TRUE, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., TRUE, :, return, Token, ., TRUE, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., TRUE, :, return, Token, ., TRUE, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., SHEQ, :, return, Token, ., SHEQ]
[., TRUE, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., SHEQ, :, return, Token]
[:, return, Token, ., SHEQ, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., SHNE]
[., SHEQ, :, return, Token, ., SHEQ, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., SHEQ, :, return, Token, ., SHEQ, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., SHEQ, :, return, Token, ., SHEQ, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., SHEQ, :, return, Token, ., SHEQ, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., SHEQ, :, return, Token, ., SHEQ, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., SHEQ, :, return, Token, ., SHEQ, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., SHNE, :, return, Token, ., SHNE]
[., SHEQ, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., SHNE, :, return, Token]
[:, return, Token, ., SHNE, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., REGEXP]
[., SHNE, :, return, Token, ., SHNE, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., SHNE, :, return, Token, ., SHNE, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., SHNE, :, return, Token, ., SHNE, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., SHNE, :, return, Token, ., SHNE, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., SHNE, :, return, Token, ., SHNE, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., SHNE, :, return, Token, ., SHNE, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., REGEXP, :, return, Token, ., REGEXP]
[., SHNE, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., REGEXP, :, return, Token]
[:, return, Token, ., REGEXP, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., THROW]
[., REGEXP, :, return, Token, ., REGEXP, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., REGEXP, :, return, Token, ., REGEXP, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., REGEXP, :, return, Token, ., REGEXP, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., REGEXP, :, return, Token, ., REGEXP, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., REGEXP, :, return, Token, ., REGEXP, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., REGEXP, :, return, Token, ., REGEXP, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., THROW, :, return, Token, ., THROW]
[., REGEXP, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., THROW, :, return, Token]
[:, return, Token, ., THROW, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., IN]
[., THROW, :, return, Token, ., THROW, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., THROW, :, return, Token, ., THROW, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., THROW, :, return, Token, ., THROW, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., THROW, :, return, Token, ., THROW, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., THROW, :, return, Token, ., THROW, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., THROW, :, return, Token, ., THROW, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., IN, :, return, Token, ., IN]
[., THROW, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., IN, :, return, Token]
[:, return, Token, ., IN, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., INSTANCEOF]
[., IN, :, return, Token, ., IN, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., IN, :, return, Token, ., IN, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., IN, :, return, Token, ., IN, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., IN, :, return, Token, ., IN, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., IN, :, return, Token, ., IN, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., IN, :, return, Token, ., IN, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., INSTANCEOF, :, return, Token, ., INSTANCEOF]
[., IN, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., INSTANCEOF, :, return, Token]
[:, return, Token, ., INSTANCEOF, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ARRAYLIT]
[., INSTANCEOF, :, return, Token, ., INSTANCEOF, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., INSTANCEOF, :, return, Token, ., INSTANCEOF, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., INSTANCEOF, :, return, Token, ., INSTANCEOF, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., INSTANCEOF, :, return, Token, ., INSTANCEOF, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., INSTANCEOF, :, return, Token, ., INSTANCEOF, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., INSTANCEOF, :, return, Token, ., INSTANCEOF, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ARRAYLIT, :, return, Token, ., ARRAYLIT]
[., INSTANCEOF, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ARRAYLIT, :, return, Token]
[:, return, Token, ., ARRAYLIT, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., OBJECTLIT]
[., ARRAYLIT, :, return, Token, ., ARRAYLIT, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., ARRAYLIT, :, return, Token, ., ARRAYLIT, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., ARRAYLIT, :, return, Token, ., ARRAYLIT, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., ARRAYLIT, :, return, Token, ., ARRAYLIT, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., ARRAYLIT, :, return, Token, ., ARRAYLIT, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., ARRAYLIT, :, return, Token, ., ARRAYLIT, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., OBJECTLIT, :, return, Token, ., OBJECTLIT]
[., ARRAYLIT, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., OBJECTLIT, :, return, Token]
[:, return, Token, ., OBJECTLIT, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., TRY]
[., OBJECTLIT, :, return, Token, ., OBJECTLIT, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., OBJECTLIT, :, return, Token, ., OBJECTLIT, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., OBJECTLIT, :, return, Token, ., OBJECTLIT, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., OBJECTLIT, :, return, Token, ., OBJECTLIT, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., OBJECTLIT, :, return, Token, ., OBJECTLIT, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., OBJECTLIT, :, return, Token, ., OBJECTLIT, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., TRY, :, return, Token, ., TRY]
[., OBJECTLIT, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., TRY, :, return, Token]
[:, return, Token, ., TRY, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., LP]
[., TRY, :, return, Token, ., TRY, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., TRY, :, return, Token, ., TRY, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., TRY, :, return, Token, ., TRY, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., TRY, :, return, Token, ., TRY, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., TRY, :, return, Token, ., TRY, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., TRY, :, return, Token, ., TRY, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., LP, :, return, Token, ., PARAM_LIST]
[., TRY, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., LP, :, return, Token]
[:, return, Token, ., PARAM_LIST, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., COMMA]
[., LP, :, return, Token, ., PARAM_LIST, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., LP, :, return, Token, ., PARAM_LIST, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., LP, :, return, Token, ., PARAM_LIST, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., LP, :, return, Token, ., PARAM_LIST, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., LP, :, return, Token, ., PARAM_LIST, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., LP, :, return, Token, ., PARAM_LIST, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., COMMA, :, return, Token, ., COMMA]
[., PARAM_LIST, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., COMMA, :, return, Token]
[:, return, Token, ., COMMA, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN]
[., COMMA, :, return, Token, ., COMMA, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., COMMA, :, return, Token, ., COMMA, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., COMMA, :, return, Token, ., COMMA, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., COMMA, :, return, Token, ., COMMA, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., COMMA, :, return, Token, ., COMMA, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., COMMA, :, return, Token, ., COMMA, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN, :, return, Token, ., ASSIGN]
[., COMMA, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN, :, return, Token]
[:, return, Token, ., ASSIGN, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_BITOR]
[., ASSIGN, :, return, Token, ., ASSIGN, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., ASSIGN, :, return, Token, ., ASSIGN, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., ASSIGN, :, return, Token, ., ASSIGN, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., ASSIGN, :, return, Token, ., ASSIGN, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., ASSIGN, :, return, Token, ., ASSIGN, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN, :, return, Token, ., ASSIGN, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_BITOR, :, return, Token, ., ASSIGN_BITOR]
[., ASSIGN, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_BITOR, :, return, Token]
[:, return, Token, ., ASSIGN_BITOR, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_BITXOR]
[., ASSIGN_BITOR, :, return, Token, ., ASSIGN_BITOR, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., ASSIGN_BITOR, :, return, Token, ., ASSIGN_BITOR, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., ASSIGN_BITOR, :, return, Token, ., ASSIGN_BITOR, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., ASSIGN_BITOR, :, return, Token, ., ASSIGN_BITOR, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., ASSIGN_BITOR, :, return, Token, ., ASSIGN_BITOR, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_BITOR, :, return, Token, ., ASSIGN_BITOR, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_BITXOR, :, return, Token, ., ASSIGN_BITXOR]
[., ASSIGN_BITOR, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_BITXOR, :, return, Token]
[:, return, Token, ., ASSIGN_BITXOR, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_BITAND]
[., ASSIGN_BITXOR, :, return, Token, ., ASSIGN_BITXOR, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., ASSIGN_BITXOR, :, return, Token, ., ASSIGN_BITXOR, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., ASSIGN_BITXOR, :, return, Token, ., ASSIGN_BITXOR, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., ASSIGN_BITXOR, :, return, Token, ., ASSIGN_BITXOR, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., ASSIGN_BITXOR, :, return, Token, ., ASSIGN_BITXOR, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_BITXOR, :, return, Token, ., ASSIGN_BITXOR, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_BITAND, :, return, Token, ., ASSIGN_BITAND]
[., ASSIGN_BITXOR, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_BITAND, :, return, Token]
[:, return, Token, ., ASSIGN_BITAND, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_LSH]
[., ASSIGN_BITAND, :, return, Token, ., ASSIGN_BITAND, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., ASSIGN_BITAND, :, return, Token, ., ASSIGN_BITAND, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., ASSIGN_BITAND, :, return, Token, ., ASSIGN_BITAND, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., ASSIGN_BITAND, :, return, Token, ., ASSIGN_BITAND, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., ASSIGN_BITAND, :, return, Token, ., ASSIGN_BITAND, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_BITAND, :, return, Token, ., ASSIGN_BITAND, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_LSH, :, return, Token, ., ASSIGN_LSH]
[., ASSIGN_BITAND, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_LSH, :, return, Token]
[:, return, Token, ., ASSIGN_LSH, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_RSH]
[., ASSIGN_LSH, :, return, Token, ., ASSIGN_LSH, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., ASSIGN_LSH, :, return, Token, ., ASSIGN_LSH, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., ASSIGN_LSH, :, return, Token, ., ASSIGN_LSH, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., ASSIGN_LSH, :, return, Token, ., ASSIGN_LSH, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., ASSIGN_LSH, :, return, Token, ., ASSIGN_LSH, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_LSH, :, return, Token, ., ASSIGN_LSH, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_RSH, :, return, Token, ., ASSIGN_RSH]
[., ASSIGN_LSH, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_RSH, :, return, Token]
[:, return, Token, ., ASSIGN_RSH, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_URSH]
[., ASSIGN_RSH, :, return, Token, ., ASSIGN_RSH, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., ASSIGN_RSH, :, return, Token, ., ASSIGN_RSH, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., ASSIGN_RSH, :, return, Token, ., ASSIGN_RSH, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., ASSIGN_RSH, :, return, Token, ., ASSIGN_RSH, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., ASSIGN_RSH, :, return, Token, ., ASSIGN_RSH, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_RSH, :, return, Token, ., ASSIGN_RSH, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_URSH, :, return, Token, ., ASSIGN_URSH]
[., ASSIGN_RSH, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_URSH, :, return, Token]
[:, return, Token, ., ASSIGN_URSH, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_ADD]
[., ASSIGN_URSH, :, return, Token, ., ASSIGN_URSH, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., ASSIGN_URSH, :, return, Token, ., ASSIGN_URSH, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., ASSIGN_URSH, :, return, Token, ., ASSIGN_URSH, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., ASSIGN_URSH, :, return, Token, ., ASSIGN_URSH, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., ASSIGN_URSH, :, return, Token, ., ASSIGN_URSH, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_URSH, :, return, Token, ., ASSIGN_URSH, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_ADD, :, return, Token, ., ASSIGN_ADD]
[., ASSIGN_URSH, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_ADD, :, return, Token]
[:, return, Token, ., ASSIGN_ADD, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_SUB]
[., ASSIGN_ADD, :, return, Token, ., ASSIGN_ADD, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., ASSIGN_ADD, :, return, Token, ., ASSIGN_ADD, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., ASSIGN_ADD, :, return, Token, ., ASSIGN_ADD, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., ASSIGN_ADD, :, return, Token, ., ASSIGN_ADD, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., ASSIGN_ADD, :, return, Token, ., ASSIGN_ADD, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_ADD, :, return, Token, ., ASSIGN_ADD, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_SUB, :, return, Token, ., ASSIGN_SUB]
[., ASSIGN_ADD, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_SUB, :, return, Token]
[:, return, Token, ., ASSIGN_SUB, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_MUL]
[., ASSIGN_SUB, :, return, Token, ., ASSIGN_SUB, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., ASSIGN_SUB, :, return, Token, ., ASSIGN_SUB, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., ASSIGN_SUB, :, return, Token, ., ASSIGN_SUB, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., ASSIGN_SUB, :, return, Token, ., ASSIGN_SUB, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., ASSIGN_SUB, :, return, Token, ., ASSIGN_SUB, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_SUB, :, return, Token, ., ASSIGN_SUB, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_MUL, :, return, Token, ., ASSIGN_MUL]
[., ASSIGN_SUB, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_MUL, :, return, Token]
[:, return, Token, ., ASSIGN_MUL, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_DIV]
[., ASSIGN_MUL, :, return, Token, ., ASSIGN_MUL, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., ASSIGN_MUL, :, return, Token, ., ASSIGN_MUL, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., ASSIGN_MUL, :, return, Token, ., ASSIGN_MUL, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., ASSIGN_MUL, :, return, Token, ., ASSIGN_MUL, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., ASSIGN_MUL, :, return, Token, ., ASSIGN_MUL, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_MUL, :, return, Token, ., ASSIGN_MUL, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_DIV, :, return, Token, ., ASSIGN_DIV]
[., ASSIGN_MUL, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_DIV, :, return, Token]
[:, return, Token, ., ASSIGN_DIV, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_MOD]
[., ASSIGN_DIV, :, return, Token, ., ASSIGN_DIV, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., ASSIGN_DIV, :, return, Token, ., ASSIGN_DIV, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., ASSIGN_DIV, :, return, Token, ., ASSIGN_DIV, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., ASSIGN_DIV, :, return, Token, ., ASSIGN_DIV, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., ASSIGN_DIV, :, return, Token, ., ASSIGN_DIV, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_DIV, :, return, Token, ., ASSIGN_DIV, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_MOD, :, return, Token, ., ASSIGN_MOD]
[., ASSIGN_DIV, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_MOD, :, return, Token]
[:, return, Token, ., ASSIGN_MOD, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., HOOK]
[., ASSIGN_MOD, :, return, Token, ., ASSIGN_MOD, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., ASSIGN_MOD, :, return, Token, ., ASSIGN_MOD, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., ASSIGN_MOD, :, return, Token, ., ASSIGN_MOD, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., ASSIGN_MOD, :, return, Token, ., ASSIGN_MOD, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., ASSIGN_MOD, :, return, Token, ., ASSIGN_MOD, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_MOD, :, return, Token, ., ASSIGN_MOD, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., HOOK, :, return, Token, ., HOOK]
[., ASSIGN_MOD, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., HOOK, :, return, Token]
[:, return, Token, ., HOOK, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., OR]
[., HOOK, :, return, Token, ., HOOK, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., HOOK, :, return, Token, ., HOOK, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., HOOK, :, return, Token, ., HOOK, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., HOOK, :, return, Token, ., HOOK, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., HOOK, :, return, Token, ., HOOK, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., HOOK, :, return, Token, ., HOOK, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., OR, :, return, Token, ., OR]
[., HOOK, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., OR, :, return, Token]
[:, return, Token, ., OR, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., AND]
[., OR, :, return, Token, ., OR, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., OR, :, return, Token, ., OR, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., OR, :, return, Token, ., OR, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., OR, :, return, Token, ., OR, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., OR, :, return, Token, ., OR, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., OR, :, return, Token, ., OR, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., AND, :, return, Token, ., AND]
[., OR, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., AND, :, return, Token]
[:, return, Token, ., AND, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., INC]
[., AND, :, return, Token, ., AND, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., AND, :, return, Token, ., AND, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., AND, :, return, Token, ., AND, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., AND, :, return, Token, ., AND, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., AND, :, return, Token, ., AND, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., AND, :, return, Token, ., AND, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., INC, :, return, Token, ., INC]
[., AND, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., INC, :, return, Token]
[:, return, Token, ., INC, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., DEC]
[., INC, :, return, Token, ., INC, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., INC, :, return, Token, ., INC, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., INC, :, return, Token, ., INC, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., INC, :, return, Token, ., INC, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., INC, :, return, Token, ., INC, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., INC, :, return, Token, ., INC, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., DEC, :, return, Token, ., DEC]
[., INC, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., DEC, :, return, Token]
[:, return, Token, ., DEC, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., FUNCTION]
[., DEC, :, return, Token, ., DEC, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., DEC, :, return, Token, ., DEC, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., DEC, :, return, Token, ., DEC, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., DEC, :, return, Token, ., DEC, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., DEC, :, return, Token, ., DEC, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., DEC, :, return, Token, ., DEC, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., FUNCTION, :, return, Token, ., FUNCTION]
[., DEC, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., FUNCTION, :, return, Token]
[:, return, Token, ., FUNCTION, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., IF]
[., FUNCTION, :, return, Token, ., FUNCTION, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., FUNCTION, :, return, Token, ., FUNCTION, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., FUNCTION, :, return, Token, ., FUNCTION, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., FUNCTION, :, return, Token, ., FUNCTION, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., FUNCTION, :, return, Token, ., FUNCTION, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., FUNCTION, :, return, Token, ., FUNCTION, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., IF, :, return, Token, ., IF]
[., FUNCTION, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., IF, :, return, Token]
[:, return, Token, ., IF, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., SWITCH]
[., IF, :, return, Token, ., IF, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., IF, :, return, Token, ., IF, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., IF, :, return, Token, ., IF, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., IF, :, return, Token, ., IF, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., IF, :, return, Token, ., IF, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., IF, :, return, Token, ., IF, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., SWITCH, :, return, Token, ., SWITCH]
[., IF, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., SWITCH, :, return, Token]
[:, return, Token, ., SWITCH, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., CASE]
[., SWITCH, :, return, Token, ., SWITCH, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., SWITCH, :, return, Token, ., SWITCH, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., SWITCH, :, return, Token, ., SWITCH, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., SWITCH, :, return, Token, ., SWITCH, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., SWITCH, :, return, Token, ., SWITCH, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., SWITCH, :, return, Token, ., SWITCH, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., CASE, :, return, Token, ., CASE]
[., SWITCH, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., CASE, :, return, Token]
[:, return, Token, ., CASE, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., DEFAULT]
[., CASE, :, return, Token, ., CASE, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., CASE, :, return, Token, ., CASE, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., CASE, :, return, Token, ., CASE, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., CASE, :, return, Token, ., CASE, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., CASE, :, return, Token, ., CASE, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., CASE, :, return, Token, ., CASE, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., DEFAULT, :, return, Token, ., DEFAULT_CASE]
[., CASE, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., DEFAULT, :, return, Token]
[:, return, Token, ., DEFAULT_CASE, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., WHILE]
[., DEFAULT, :, return, Token, ., DEFAULT_CASE, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., DEFAULT, :, return, Token, ., DEFAULT_CASE, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., DEFAULT, :, return, Token, ., DEFAULT_CASE, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., DEFAULT, :, return, Token, ., DEFAULT_CASE, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., DEFAULT, :, return, Token, ., DEFAULT_CASE, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., DEFAULT, :, return, Token, ., DEFAULT_CASE, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., WHILE, :, return, Token, ., WHILE]
[., DEFAULT_CASE, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., WHILE, :, return, Token]
[:, return, Token, ., WHILE, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., DO]
[., WHILE, :, return, Token, ., WHILE, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., WHILE, :, return, Token, ., WHILE, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., WHILE, :, return, Token, ., WHILE, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., WHILE, :, return, Token, ., WHILE, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., WHILE, :, return, Token, ., WHILE, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., WHILE, :, return, Token, ., WHILE, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., DO, :, return, Token, ., DO]
[., WHILE, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., DO, :, return, Token]
[:, return, Token, ., DO, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., FOR]
[., DO, :, return, Token, ., DO, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., DO, :, return, Token, ., DO, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., DO, :, return, Token, ., DO, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., DO, :, return, Token, ., DO, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., DO, :, return, Token, ., DO, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., DO, :, return, Token, ., DO, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., FOR, :, return, Token, ., FOR]
[., DO, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., FOR, :, return, Token]
[:, return, Token, ., FOR, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., BREAK]
[., FOR, :, return, Token, ., FOR, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., FOR, :, return, Token, ., FOR, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., FOR, :, return, Token, ., FOR, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., FOR, :, return, Token, ., FOR, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., FOR, :, return, Token, ., FOR, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., FOR, :, return, Token, ., FOR, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., BREAK, :, return, Token, ., BREAK]
[., FOR, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., BREAK, :, return, Token]
[:, return, Token, ., BREAK, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., CONTINUE]
[., BREAK, :, return, Token, ., BREAK, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., BREAK, :, return, Token, ., BREAK, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., BREAK, :, return, Token, ., BREAK, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., BREAK, :, return, Token, ., BREAK, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., BREAK, :, return, Token, ., BREAK, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., BREAK, :, return, Token, ., BREAK, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., CONTINUE, :, return, Token, ., CONTINUE]
[., BREAK, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., CONTINUE, :, return, Token]
[:, return, Token, ., CONTINUE, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., VAR]
[., CONTINUE, :, return, Token, ., CONTINUE, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., CONTINUE, :, return, Token, ., CONTINUE, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., CONTINUE, :, return, Token, ., CONTINUE, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., CONTINUE, :, return, Token, ., CONTINUE, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., CONTINUE, :, return, Token, ., CONTINUE, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., CONTINUE, :, return, Token, ., CONTINUE, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., VAR, :, return, Token, ., VAR]
[., CONTINUE, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., VAR, :, return, Token]
[:, return, Token, ., VAR, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., WITH]
[., VAR, :, return, Token, ., VAR, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., VAR, :, return, Token, ., VAR, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., VAR, :, return, Token, ., VAR, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., VAR, :, return, Token, ., VAR, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., VAR, :, return, Token, ., VAR, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., VAR, :, return, Token, ., VAR, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., WITH, :, return, Token, ., WITH]
[., VAR, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., WITH, :, return, Token]
[:, return, Token, ., WITH, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., CATCH]
[., WITH, :, return, Token, ., WITH, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., WITH, :, return, Token, ., WITH, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., WITH, :, return, Token, ., WITH, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., WITH, :, return, Token, ., WITH, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., WITH, :, return, Token, ., WITH, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., WITH, :, return, Token, ., WITH, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., CATCH, :, return, Token, ., CATCH]
[., WITH, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., CATCH, :, return, Token]
[:, return, Token, ., CATCH, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., VOID]
[., CATCH, :, return, Token, ., CATCH, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., CATCH, :, return, Token, ., CATCH, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., CATCH, :, return, Token, ., CATCH, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., CATCH, :, return, Token, ., CATCH, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., CATCH, :, return, Token, ., CATCH, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., CATCH, :, return, Token, ., CATCH, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., VOID, :, return, Token, ., VOID]
[., CATCH, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., VOID, :, return, Token]
[:, return, Token, ., VOID, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., EMPTY]
[., VOID, :, return, Token, ., VOID, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., VOID, :, return, Token, ., VOID, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., VOID, :, return, Token, ., VOID, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., VOID, :, return, Token, ., VOID, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., VOID, :, return, Token, ., VOID, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., VOID, :, return, Token, ., VOID, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., EMPTY, :, return, Token, ., EMPTY]
[., VOID, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., EMPTY, :, return, Token]
[:, return, Token, ., EMPTY, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., BLOCK]
[., EMPTY, :, return, Token, ., EMPTY, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., EMPTY, :, return, Token, ., EMPTY, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., EMPTY, :, return, Token, ., EMPTY, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., EMPTY, :, return, Token, ., EMPTY, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., EMPTY, :, return, Token, ., EMPTY, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., EMPTY, :, return, Token, ., EMPTY, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., BLOCK, :, return, Token, ., BLOCK]
[., EMPTY, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., BLOCK, :, return, Token]
[:, return, Token, ., BLOCK, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., LABEL]
[., BLOCK, :, return, Token, ., BLOCK, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., BLOCK, :, return, Token, ., BLOCK, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., BLOCK, :, return, Token, ., BLOCK, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., BLOCK, :, return, Token, ., BLOCK, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., BLOCK, :, return, Token, ., BLOCK, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., BLOCK, :, return, Token, ., BLOCK, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., LABEL, :, return, Token, ., LABEL]
[., BLOCK, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., LABEL, :, return, Token]
[:, return, Token, ., LABEL, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., EXPR_VOID]
[., LABEL, :, return, Token, ., LABEL, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., LABEL, :, return, Token, ., LABEL, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., LABEL, :, return, Token, ., LABEL, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., LABEL, :, return, Token, ., LABEL, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., LABEL, :, return, Token, ., LABEL, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., LABEL, :, return, Token, ., LABEL, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., EXPR_VOID, :, case, com, ., google]
[., LABEL, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., EXPR_VOID, :, case, com]
[:, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., EXPR_RESULT, :, return, Token, ., EXPR_RESULT]
[., EXPR_VOID, :, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., EXPR_RESULT, :, return, Token]
[., Token, ., EXPR_VOID, :, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., EXPR_RESULT, :]
[., head, ., Token, ., EXPR_VOID, :, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, .]
[., rhino, ., head, ., Token, ., EXPR_VOID, :, case, com, ., google, ., javascript, ., rhino, ., head, .]
[., javascript, ., rhino, ., head, ., Token, ., EXPR_VOID, :, case, com, ., google, ., javascript, ., rhino, .]
[., google, ., javascript, ., rhino, ., head, ., Token, ., EXPR_VOID, :, case, com, ., google, ., javascript, .]
[:, return, Token, ., EXPR_RESULT, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., SCRIPT]
[., EXPR_RESULT, :, return, Token, ., EXPR_RESULT, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., EXPR_RESULT, :, return, Token, ., EXPR_RESULT, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., EXPR_RESULT, :, return, Token, ., EXPR_RESULT, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., EXPR_RESULT, :, return, Token, ., EXPR_RESULT, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., EXPR_RESULT, :, return, Token, ., EXPR_RESULT, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., EXPR_RESULT, :, return, Token, ., EXPR_RESULT, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., SCRIPT, :, return, Token, ., SCRIPT]
[., EXPR_RESULT, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., SCRIPT, :, return, Token]
[:, return, Token, ., SCRIPT, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., GET]
[., SCRIPT, :, return, Token, ., SCRIPT, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., SCRIPT, :, return, Token, ., SCRIPT, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., SCRIPT, :, return, Token, ., SCRIPT, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., SCRIPT, :, return, Token, ., SCRIPT, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., SCRIPT, :, return, Token, ., SCRIPT, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., SCRIPT, :, return, Token, ., SCRIPT, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., GET, :, return, Token, ., GETTER_DEF]
[., SCRIPT, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., GET, :, return, Token]
[:, return, Token, ., GETTER_DEF, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., SET]
[., GET, :, return, Token, ., GETTER_DEF, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., GET, :, return, Token, ., GETTER_DEF, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., GET, :, return, Token, ., GETTER_DEF, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., GET, :, return, Token, ., GETTER_DEF, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., GET, :, return, Token, ., GETTER_DEF, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., GET, :, return, Token, ., GETTER_DEF, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., SET, :, return, Token, ., SETTER_DEF]
[., GETTER_DEF, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., SET, :, return, Token]
[:, return, Token, ., SETTER_DEF, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., CONST]
[., SET, :, return, Token, ., SETTER_DEF, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., SET, :, return, Token, ., SETTER_DEF, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., SET, :, return, Token, ., SETTER_DEF, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., SET, :, return, Token, ., SETTER_DEF, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., SET, :, return, Token, ., SETTER_DEF, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., SET, :, return, Token, ., SETTER_DEF, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., CONST, :, return, Token, ., CONST]
[., SETTER_DEF, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., CONST, :, return, Token]
[:, return, Token, ., CONST, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., DEBUGGER]
[., CONST, :, return, Token, ., CONST, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token]
[., Token, ., CONST, :, return, Token, ., CONST, ;, case, com, ., google, ., javascript, ., rhino, ., head]
[., head, ., Token, ., CONST, :, return, Token, ., CONST, ;, case, com, ., google, ., javascript, ., rhino]
[., rhino, ., head, ., Token, ., CONST, :, return, Token, ., CONST, ;, case, com, ., google, ., javascript]
[., javascript, ., rhino, ., head, ., Token, ., CONST, :, return, Token, ., CONST, ;, case, com, ., google]
[., google, ., javascript, ., rhino, ., head, ., Token, ., CONST, :, return, Token, ., CONST, ;, case, com]
[;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., DEBUGGER, :, return, Token, ., DEBUGGER]
[., CONST, ;, case, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., DEBUGGER, :, return, Token]
[:, return, Token, ., DEBUGGER, ;, }, throw, new, IllegalStateException, (, String, ., valueOf, (, token, ), ), ;, }]
[., DEBUGGER, :, return, Token, ., DEBUGGER, ;, }, throw, new, IllegalStateException, (, String, ., valueOf, (, token, ), )]
[., Token, ., DEBUGGER, :, return, Token, ., DEBUGGER, ;, }, throw, new, IllegalStateException, (, String, ., valueOf, (, token]
[., head, ., Token, ., DEBUGGER, :, return, Token, ., DEBUGGER, ;, }, throw, new, IllegalStateException, (, String, ., valueOf]
[., rhino, ., head, ., Token, ., DEBUGGER, :, return, Token, ., DEBUGGER, ;, }, throw, new, IllegalStateException, (, String]
[., javascript, ., rhino, ., head, ., Token, ., DEBUGGER, :, return, Token, ., DEBUGGER, ;, }, throw, new, IllegalStateException]
[., google, ., javascript, ., rhino, ., head, ., Token, ., DEBUGGER, :, return, Token, ., DEBUGGER, ;, }, throw]
[;, }, throw, new, IllegalStateException, (, String, ., valueOf, (, token, ), ), ;, }, private, Node, newNode, (, int]
[., DEBUGGER, ;, }, throw, new, IllegalStateException, (, String, ., valueOf, (, token, ), ), ;, }, private, Node, newNode]
[;, }, private, Node, newNode, (, int, type, ), {, return, new, Node, (, type, ), ., clonePropsFrom, (, templateNode]
[), ;, }, private, Node, newNode, (, int, type, ), {, return, new, Node, (, type, ), ., clonePropsFrom, (]
[., valueOf, (, token, ), ), ;, }, private, Node, newNode, (, int, type, ), {, return, new, Node, (]
[), ), ;, }, private, Node, newNode, (, int, type, ), {, return, new, Node, (, type, ), ., clonePropsFrom]
[;, }, private, Node, newNode, (, int, type, ,, Node, child1, ), {, return, new, Node, (, type, ,, child1]
[., clonePropsFrom, (, templateNode, ), ;, }, private, Node, newNode, (, int, type, ,, Node, child1, ), {, return, new]
[), ., clonePropsFrom, (, templateNode, ), ;, }, private, Node, newNode, (, int, type, ,, Node, child1, ), {, return]
[), ;, }, private, Node, newNode, (, int, type, ,, Node, child1, ), {, return, new, Node, (, type, ,]
[;, }, private, Node, newNode, (, int, type, ,, Node, child1, ,, Node, child2, ), {, return, new, Node, (]
[., clonePropsFrom, (, templateNode, ), ;, }, private, Node, newNode, (, int, type, ,, Node, child1, ,, Node, child2, )]
[,, child1, ), ., clonePropsFrom, (, templateNode, ), ;, }, private, Node, newNode, (, int, type, ,, Node, child1, ,]
[), ., clonePropsFrom, (, templateNode, ), ;, }, private, Node, newNode, (, int, type, ,, Node, child1, ,, Node, child2]
[), ;, }, private, Node, newNode, (, int, type, ,, Node, child1, ,, Node, child2, ), {, return, new, Node]
[;, }, private, Node, newNode, (, int, type, ,, Node, child1, ,, Node, child2, ,, Node, child3, ), {, return]
[., clonePropsFrom, (, templateNode, ), ;, }, private, Node, newNode, (, int, type, ,, Node, child1, ,, Node, child2, ,]
[,, child1, ,, child2, ), ., clonePropsFrom, (, templateNode, ), ;, }, private, Node, newNode, (, int, type, ,, Node]
[,, child2, ), ., clonePropsFrom, (, templateNode, ), ;, }, private, Node, newNode, (, int, type, ,, Node, child1, ,]
[), ., clonePropsFrom, (, templateNode, ), ;, }, private, Node, newNode, (, int, type, ,, Node, child1, ,, Node, child2]
[), ;, }, private, Node, newNode, (, int, type, ,, Node, child1, ,, Node, child2, ,, Node, child3, ), {]
[;, }, private, Node, newStringNode, (, String, value, ), {, return, IR, ., string, (, value, ), ., clonePropsFrom, (]
[., clonePropsFrom, (, templateNode, ), ;, }, private, Node, newStringNode, (, String, value, ), {, return, IR, ., string, (]
[,, child1, ,, child2, ,, child3, ), ., clonePropsFrom, (, templateNode, ), ;, }, private, Node, newStringNode, (, String, value]
[,, child2, ,, child3, ), ., clonePropsFrom, (, templateNode, ), ;, }, private, Node, newStringNode, (, String, value, ), {]
[,, child3, ), ., clonePropsFrom, (, templateNode, ), ;, }, private, Node, newStringNode, (, String, value, ), {, return, IR]
[), ., clonePropsFrom, (, templateNode, ), ;, }, private, Node, newStringNode, (, String, value, ), {, return, IR, ., string]
[), ;, }, private, Node, newStringNode, (, String, value, ), {, return, IR, ., string, (, value, ), ., clonePropsFrom]
[;, }, private, Node, newStringNode, (, int, type, ,, String, value, ), {, return, Node, ., newString, (, type, ,]
[., clonePropsFrom, (, templateNode, ), ;, }, private, Node, newStringNode, (, int, type, ,, String, value, ), {, return, Node]
[., string, (, value, ), ., clonePropsFrom, (, templateNode, ), ;, }, private, Node, newStringNode, (, int, type, ,, String]
[), ., clonePropsFrom, (, templateNode, ), ;, }, private, Node, newStringNode, (, int, type, ,, String, value, ), {, return]
[), ;, }, private, Node, newStringNode, (, int, type, ,, String, value, ), {, return, Node, ., newString, (, type]
[;, }, private, Node, newNumberNode, (, Double, value, ), {, return, IR, ., number, (, value, ), ., clonePropsFrom, (]
[., clonePropsFrom, (, templateNode, ), ;, }, private, Node, newNumberNode, (, Double, value, ), {, return, IR, ., number, (]
[., newString, (, type, ,, value, ), ., clonePropsFrom, (, templateNode, ), ;, }, private, Node, newNumberNode, (, Double, value]
[,, value, ), ., clonePropsFrom, (, templateNode, ), ;, }, private, Node, newNumberNode, (, Double, value, ), {, return, IR]
[), ., clonePropsFrom, (, templateNode, ), ;, }, private, Node, newNumberNode, (, Double, value, ), {, return, IR, ., number]
[), ;, }, private, Node, newNumberNode, (, Double, value, ), {, return, IR, ., number, (, value, ), ., clonePropsFrom]
[;, }, }]
[., clonePropsFrom, (, templateNode, ), ;, }, }]
[., number, (, value, ), ., clonePropsFrom, (, templateNode, ), ;, }, }]
[), ., clonePropsFrom, (, templateNode, ), ;, }, }]
[), ;, }, }]
