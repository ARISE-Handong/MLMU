[;, private, final, Class, <, ?, >, declaringClass, ;, private, final, String, methodName, ;, private, final, Class, <, ?, >]
[=, method, ., getDeclaringClass, (, ), ;, methodName, =, method, ., getName, (, ), ;, parameterTypes, =, method, ., getParameterTypes]
[;, methodName, =, method, ., getName, (, ), ;, parameterTypes, =, method, ., getParameterTypes, (, ), ;, returnType, =, method]
[., getDeclaringClass, (, ), ;, methodName, =, method, ., getName, (, ), ;, parameterTypes, =, method, ., getParameterTypes, (, )]
[=, method, ., getName, (, ), ;, parameterTypes, =, method, ., getParameterTypes, (, ), ;, returnType, =, method, ., getReturnType]
[;, parameterTypes, =, method, ., getParameterTypes, (, ), ;, returnType, =, method, ., getReturnType, (, ), ;, exceptionTypes, =, method]
[., getName, (, ), ;, parameterTypes, =, method, ., getParameterTypes, (, ), ;, returnType, =, method, ., getReturnType, (, )]
[=, method, ., getParameterTypes, (, ), ;, returnType, =, method, ., getReturnType, (, ), ;, exceptionTypes, =, method, ., getExceptionTypes]
[;, returnType, =, method, ., getReturnType, (, ), ;, exceptionTypes, =, method, ., getExceptionTypes, (, ), ;, isVarArgs, =, method]
[., getParameterTypes, (, ), ;, returnType, =, method, ., getReturnType, (, ), ;, exceptionTypes, =, method, ., getExceptionTypes, (, )]
[=, method, ., getReturnType, (, ), ;, exceptionTypes, =, method, ., getExceptionTypes, (, ), ;, isVarArgs, =, method, ., isVarArgs]
[;, exceptionTypes, =, method, ., getExceptionTypes, (, ), ;, isVarArgs, =, method, ., isVarArgs, (, ), ;, isAbstract, =, (]
[., getReturnType, (, ), ;, exceptionTypes, =, method, ., getExceptionTypes, (, ), ;, isVarArgs, =, method, ., isVarArgs, (, )]
[=, method, ., getExceptionTypes, (, ), ;, isVarArgs, =, method, ., isVarArgs, (, ), ;, isAbstract, =, (, method, .]
[;, isVarArgs, =, method, ., isVarArgs, (, ), ;, isAbstract, =, (, method, ., getModifiers, (, ), &, Modifier, .]
[., getExceptionTypes, (, ), ;, isVarArgs, =, method, ., isVarArgs, (, ), ;, isAbstract, =, (, method, ., getModifiers, (]
[=, method, ., isVarArgs, (, ), ;, isAbstract, =, (, method, ., getModifiers, (, ), &, Modifier, ., ABSTRACT, )]
[;, isAbstract, =, (, method, ., getModifiers, (, ), &, Modifier, ., ABSTRACT, ), !=, 0, ;, }, public, String]
[., isVarArgs, (, ), ;, isAbstract, =, (, method, ., getModifiers, (, ), &, Modifier, ., ABSTRACT, ), !=, 0]
[=, (, method, ., getModifiers, (, ), &, Modifier, ., ABSTRACT, ), !=, 0, ;, }, public, String, getName, (]
[;, }, public, String, getName, (, ), {, return, methodName, ;, }, public, Class, <, ?, >, getReturnType, (, )]
[!=, 0, ;, }, public, String, getName, (, ), {, return, methodName, ;, }, public, Class, <, ?, >, getReturnType]
[), !=, 0, ;, }, public, String, getName, (, ), {, return, methodName, ;, }, public, Class, <, ?, >]
[&, Modifier, ., ABSTRACT, ), !=, 0, ;, }, public, String, getName, (, ), {, return, methodName, ;, }, public]
[., getModifiers, (, ), &, Modifier, ., ABSTRACT, ), !=, 0, ;, }, public, String, getName, (, ), {, return]
[), !=, 0, ;, }, public, String, getName, (, ), {, return, methodName, ;, }, public, Class, <, ?, >]
[., ABSTRACT, ), !=, 0, ;, }, public, String, getName, (, ), {, return, methodName, ;, }, public, Class, <]
[;, }, public, String, getName, (, ), {, return, methodName, ;, }, public, Class, <, ?, >, getReturnType, (, )]
[;, }, public, Class, <, ?, >, getReturnType, (, ), {, return, returnType, ;, }, public, Class, <, ?, >]
[;, }, public, Class, <, ?, >, [, ], getParameterTypes, (, ), {, return, parameterTypes, ;, }, public, Class, <]
[;, }, public, Class, <, ?, >, [, ], getExceptionTypes, (, ), {, return, exceptionTypes, ;, }, public, boolean, isVarArgs]
[;, }, public, boolean, isVarArgs, (, ), {, return, isVarArgs, ;, }, public, boolean, isAbstract, (, ), {, return, isAbstract]
[;, }, public, boolean, isAbstract, (, ), {, return, isAbstract, ;, }, public, Method, getJavaMethod, (, ), {, try, {]
[;, }, public, Method, getJavaMethod, (, ), {, try, {, return, declaringClass, ., getDeclaredMethod, (, methodName, ,, parameterTypes, ), ;]
[;, }, catch, (, SecurityException, e, ), {, String, message, =, String, ., format, (, "The method %1$s.%2$s is probably private or protected and cannot be mocked.\n", +, "Please report this as a defect with an example of how to reproduce it.", ,, declaringClass]
[., getDeclaredMethod, (, methodName, ,, parameterTypes, ), ;, }, catch, (, SecurityException, e, ), {, String, message, =, String, .]
[,, parameterTypes, ), ;, }, catch, (, SecurityException, e, ), {, String, message, =, String, ., format, (, "The method %1$s.%2$s is probably private or protected and cannot be mocked.\n", +]
[), ;, }, catch, (, SecurityException, e, ), {, String, message, =, String, ., format, (, "The method %1$s.%2$s is probably private or protected and cannot be mocked.\n", +, "Please report this as a defect with an example of how to reproduce it.", ,]
[;, throw, new, MockitoException, (, message, ,, e, ), ;, }, catch, (, NoSuchMethodException, e, ), {, String, message, =]
[., format, (, "The method %1$s.%2$s is probably private or protected and cannot be mocked.\n", +, "Please report this as a defect with an example of how to reproduce it.", ,, declaringClass, ,, methodName, ), ;, throw, new, MockitoException, (, message, ,, e, )]
[,, declaringClass, ,, methodName, ), ;, throw, new, MockitoException, (, message, ,, e, ), ;, }, catch, (, NoSuchMethodException, e]
[+, "Please report this as a defect with an example of how to reproduce it.", ,, declaringClass, ,, methodName, ), ;, throw, new, MockitoException, (, message, ,, e, ), ;, }, catch, (]
[,, declaringClass, ,, methodName, ), ;, throw, new, MockitoException, (, message, ,, e, ), ;, }, catch, (, NoSuchMethodException, e]
[,, methodName, ), ;, throw, new, MockitoException, (, message, ,, e, ), ;, }, catch, (, NoSuchMethodException, e, ), {]
[), ;, throw, new, MockitoException, (, message, ,, e, ), ;, }, catch, (, NoSuchMethodException, e, ), {, String, message]
[;, }, catch, (, NoSuchMethodException, e, ), {, String, message, =, String, ., format, (, "The method %1$s.%2$s does not exists and you should not get to this point.\n", +, "Please report this as a defect with an example of how to reproduce it.", ,, declaringClass]
[,, e, ), ;, }, catch, (, NoSuchMethodException, e, ), {, String, message, =, String, ., format, (, "The method %1$s.%2$s does not exists and you should not get to this point.\n", +]
[), ;, }, catch, (, NoSuchMethodException, e, ), {, String, message, =, String, ., format, (, "The method %1$s.%2$s does not exists and you should not get to this point.\n", +, "Please report this as a defect with an example of how to reproduce it.", ,]
[;, throw, new, MockitoException, (, message, ,, e, ), ;, }, }, @, Override, public, int, hashCode, (, ), {]
[., format, (, "The method %1$s.%2$s does not exists and you should not get to this point.\n", +, "Please report this as a defect with an example of how to reproduce it.", ,, declaringClass, ,, methodName, ), ;, throw, new, MockitoException, (, message, ,, e, )]
[,, declaringClass, ,, methodName, ), ;, throw, new, MockitoException, (, message, ,, e, ), ;, }, }, @, Override, public]
[+, "Please report this as a defect with an example of how to reproduce it.", ,, declaringClass, ,, methodName, ), ;, throw, new, MockitoException, (, message, ,, e, ), ;, }, }, @]
[,, declaringClass, ,, methodName, ), ;, throw, new, MockitoException, (, message, ,, e, ), ;, }, }, @, Override, public]
[,, methodName, ), ;, throw, new, MockitoException, (, message, ,, e, ), ;, }, }, @, Override, public, int, hashCode]
[), ;, throw, new, MockitoException, (, message, ,, e, ), ;, }, }, @, Override, public, int, hashCode, (, )]
[;, }, }, @, Override, public, int, hashCode, (, ), {, return, 1, ;, }, @, Override, public, boolean, equals]
[,, e, ), ;, }, }, @, Override, public, int, hashCode, (, ), {, return, 1, ;, }, @, Override]
[), ;, }, }, @, Override, public, int, hashCode, (, ), {, return, 1, ;, }, @, Override, public, boolean]
[;, }, @, Override, public, boolean, equals, (, Object, obj, ), {, if, (, this, ==, obj, ), return, true]
[), return, true, ;, if, (, obj, ==, null, ), return, false, ;, if, (, getClass, (, ), !=, obj]
[==, obj, ), return, true, ;, if, (, obj, ==, null, ), return, false, ;, if, (, getClass, (, )]
[), return, true, ;, if, (, obj, ==, null, ), return, false, ;, if, (, getClass, (, ), !=, obj]
[;, if, (, obj, ==, null, ), return, false, ;, if, (, getClass, (, ), !=, obj, ., getClass, (]
[), return, false, ;, if, (, getClass, (, ), !=, obj, ., getClass, (, ), ), return, false, ;, SerializableMethod]
[==, null, ), return, false, ;, if, (, getClass, (, ), !=, obj, ., getClass, (, ), ), return, false]
[), return, false, ;, if, (, getClass, (, ), !=, obj, ., getClass, (, ), ), return, false, ;, SerializableMethod]
[;, if, (, getClass, (, ), !=, obj, ., getClass, (, ), ), return, false, ;, SerializableMethod, other, =, (]
[), return, false, ;, SerializableMethod, other, =, (, SerializableMethod, ), obj, ;, if, (, declaringClass, ==, null, ), {, if]
[!=, obj, ., getClass, (, ), ), return, false, ;, SerializableMethod, other, =, (, SerializableMethod, ), obj, ;, if, (]
[), return, false, ;, SerializableMethod, other, =, (, SerializableMethod, ), obj, ;, if, (, declaringClass, ==, null, ), {, if]
[., getClass, (, ), ), return, false, ;, SerializableMethod, other, =, (, SerializableMethod, ), obj, ;, if, (, declaringClass, ==]
[;, SerializableMethod, other, =, (, SerializableMethod, ), obj, ;, if, (, declaringClass, ==, null, ), {, if, (, other, .]
[;, if, (, declaringClass, ==, null, ), {, if, (, other, ., declaringClass, !=, null, ), return, false, ;, }]
[;, if, (, declaringClass, ==, null, ), {, if, (, other, ., declaringClass, !=, null, ), return, false, ;, }]
[), {, if, (, other, ., declaringClass, !=, null, ), return, false, ;, }, else, if, (, !, declaringClass, .]
[==, null, ), {, if, (, other, ., declaringClass, !=, null, ), return, false, ;, }, else, if, (, !]
[), {, if, (, other, ., declaringClass, !=, null, ), return, false, ;, }, else, if, (, !, declaringClass, .]
[), return, false, ;, }, else, if, (, !, declaringClass, ., equals, (, other, ., declaringClass, ), ), return, false]
[!=, null, ), return, false, ;, }, else, if, (, !, declaringClass, ., equals, (, other, ., declaringClass, ), )]
[., declaringClass, !=, null, ), return, false, ;, }, else, if, (, !, declaringClass, ., equals, (, other, ., declaringClass]
[), return, false, ;, }, else, if, (, !, declaringClass, ., equals, (, other, ., declaringClass, ), ), return, false]
[;, }, else, if, (, !, declaringClass, ., equals, (, other, ., declaringClass, ), ), return, false, ;, if, (]
[), return, false, ;, if, (, methodName, ==, null, ), {, if, (, other, ., methodName, !=, null, ), return]
[), return, false, ;, if, (, methodName, ==, null, ), {, if, (, other, ., methodName, !=, null, ), return]
[., equals, (, other, ., declaringClass, ), ), return, false, ;, if, (, methodName, ==, null, ), {, if, (]
[), ), return, false, ;, if, (, methodName, ==, null, ), {, if, (, other, ., methodName, !=, null, )]
[., declaringClass, ), ), return, false, ;, if, (, methodName, ==, null, ), {, if, (, other, ., methodName, !=]
[;, if, (, methodName, ==, null, ), {, if, (, other, ., methodName, !=, null, ), return, false, ;, }]
[), {, if, (, other, ., methodName, !=, null, ), return, false, ;, }, else, if, (, !, methodName, .]
[==, null, ), {, if, (, other, ., methodName, !=, null, ), return, false, ;, }, else, if, (, !]
[), {, if, (, other, ., methodName, !=, null, ), return, false, ;, }, else, if, (, !, methodName, .]
[), return, false, ;, }, else, if, (, !, methodName, ., equals, (, other, ., methodName, ), ), return, false]
[!=, null, ), return, false, ;, }, else, if, (, !, methodName, ., equals, (, other, ., methodName, ), )]
[., methodName, !=, null, ), return, false, ;, }, else, if, (, !, methodName, ., equals, (, other, ., methodName]
[), return, false, ;, }, else, if, (, !, methodName, ., equals, (, other, ., methodName, ), ), return, false]
[;, }, else, if, (, !, methodName, ., equals, (, other, ., methodName, ), ), return, false, ;, if, (]
[), return, false, ;, if, (, !, Arrays, ., equals, (, parameterTypes, ,, other, ., parameterTypes, ), ), return, false]
[), return, false, ;, if, (, !, Arrays, ., equals, (, parameterTypes, ,, other, ., parameterTypes, ), ), return, false]
[., equals, (, other, ., methodName, ), ), return, false, ;, if, (, !, Arrays, ., equals, (, parameterTypes, ,]
[), ), return, false, ;, if, (, !, Arrays, ., equals, (, parameterTypes, ,, other, ., parameterTypes, ), ), return]
[., methodName, ), ), return, false, ;, if, (, !, Arrays, ., equals, (, parameterTypes, ,, other, ., parameterTypes, )]
[;, if, (, !, Arrays, ., equals, (, parameterTypes, ,, other, ., parameterTypes, ), ), return, false, ;, if, (]
[), return, false, ;, if, (, returnType, ==, null, ), {, if, (, other, ., returnType, !=, null, ), return]
[), return, false, ;, if, (, returnType, ==, null, ), {, if, (, other, ., returnType, !=, null, ), return]
[., equals, (, parameterTypes, ,, other, ., parameterTypes, ), ), return, false, ;, if, (, returnType, ==, null, ), {]
[,, other, ., parameterTypes, ), ), return, false, ;, if, (, returnType, ==, null, ), {, if, (, other, .]
[), ), return, false, ;, if, (, returnType, ==, null, ), {, if, (, other, ., returnType, !=, null, )]
[., parameterTypes, ), ), return, false, ;, if, (, returnType, ==, null, ), {, if, (, other, ., returnType, !=]
[;, if, (, returnType, ==, null, ), {, if, (, other, ., returnType, !=, null, ), return, false, ;, }]
[), {, if, (, other, ., returnType, !=, null, ), return, false, ;, }, else, if, (, !, returnType, .]
[==, null, ), {, if, (, other, ., returnType, !=, null, ), return, false, ;, }, else, if, (, !]
[), {, if, (, other, ., returnType, !=, null, ), return, false, ;, }, else, if, (, !, returnType, .]
[), return, false, ;, }, else, if, (, !, returnType, ., equals, (, other, ., returnType, ), ), return, false]
[!=, null, ), return, false, ;, }, else, if, (, !, returnType, ., equals, (, other, ., returnType, ), )]
[., returnType, !=, null, ), return, false, ;, }, else, if, (, !, returnType, ., equals, (, other, ., returnType]
[), return, false, ;, }, else, if, (, !, returnType, ., equals, (, other, ., returnType, ), ), return, false]
[;, }, else, if, (, !, returnType, ., equals, (, other, ., returnType, ), ), return, false, ;, return, true]
[), return, false, ;, return, true, ;, }, }]
[), return, false, ;, return, true, ;, }, }]
[., equals, (, other, ., returnType, ), ), return, false, ;, return, true, ;, }, }]
[), ), return, false, ;, return, true, ;, }, }]
[., returnType, ), ), return, false, ;, return, true, ;, }, }]
[;, return, true, ;, }, }]
[;, }, }]
