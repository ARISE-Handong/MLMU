[;, private, static, final, double, [, ], STATIC_C, =, {, 1.0, /, 5.0, ,, 3.0, /, 10.0, ,, 4.0, /]
[;, private, static, final, double, [, ], [, ], STATIC_A, =, {, {, 1.0, /, 5.0, }, ,, {, 3.0]
[,, 3.0, /, 10.0, ,, 4.0, /, 5.0, ,, 8.0, /, 9.0, ,, 1.0, ,, 1.0, }, ;, private, static]
[/, 5.0, ,, 3.0, /, 10.0, ,, 4.0, /, 5.0, ,, 8.0, /, 9.0, ,, 1.0, ,, 1.0, }, ;]
[,, 3.0, /, 10.0, ,, 4.0, /, 5.0, ,, 8.0, /, 9.0, ,, 1.0, ,, 1.0, }, ;, private, static]
[,, 4.0, /, 5.0, ,, 8.0, /, 9.0, ,, 1.0, ,, 1.0, }, ;, private, static, final, double, [, ]]
[/, 10.0, ,, 4.0, /, 5.0, ,, 8.0, /, 9.0, ,, 1.0, ,, 1.0, }, ;, private, static, final, double]
[,, 4.0, /, 5.0, ,, 8.0, /, 9.0, ,, 1.0, ,, 1.0, }, ;, private, static, final, double, [, ]]
[,, 8.0, /, 9.0, ,, 1.0, ,, 1.0, }, ;, private, static, final, double, [, ], [, ], STATIC_A, =]
[/, 5.0, ,, 8.0, /, 9.0, ,, 1.0, ,, 1.0, }, ;, private, static, final, double, [, ], [, ]]
[,, 8.0, /, 9.0, ,, 1.0, ,, 1.0, }, ;, private, static, final, double, [, ], [, ], STATIC_A, =]
[,, 1.0, ,, 1.0, }, ;, private, static, final, double, [, ], [, ], STATIC_A, =, {, {, 1.0, /]
[/, 9.0, ,, 1.0, ,, 1.0, }, ;, private, static, final, double, [, ], [, ], STATIC_A, =, {, {]
[,, 1.0, ,, 1.0, }, ;, private, static, final, double, [, ], [, ], STATIC_A, =, {, {, 1.0, /]
[,, 1.0, }, ;, private, static, final, double, [, ], [, ], STATIC_A, =, {, {, 1.0, /, 5.0, }]
[}, ;, private, static, final, double, [, ], [, ], STATIC_A, =, {, {, 1.0, /, 5.0, }, ,, {]
[;, private, static, final, double, [, ], STATIC_B, =, {, 35.0, /, 384.0, ,, 0.0, ,, 500.0, /, 1113.0, ,]
[,, {, 3.0, /, 40.0, ,, 9.0, /, 40.0, }, ,, {, 44.0, /, 45.0, ,, -, 56.0, /, 15.0]
[}, ,, {, 3.0, /, 40.0, ,, 9.0, /, 40.0, }, ,, {, 44.0, /, 45.0, ,, -, 56.0, /]
[/, 5.0, }, ,, {, 3.0, /, 40.0, ,, 9.0, /, 40.0, }, ,, {, 44.0, /, 45.0, ,, -]
[}, ,, {, 3.0, /, 40.0, ,, 9.0, /, 40.0, }, ,, {, 44.0, /, 45.0, ,, -, 56.0, /]
[,, {, 44.0, /, 45.0, ,, -, 56.0, /, 15.0, ,, 32.0, /, 9.0, }, ,, {, 19372.0, /, 6561.0]
[,, 9.0, /, 40.0, }, ,, {, 44.0, /, 45.0, ,, -, 56.0, /, 15.0, ,, 32.0, /, 9.0, }]
[/, 40.0, ,, 9.0, /, 40.0, }, ,, {, 44.0, /, 45.0, ,, -, 56.0, /, 15.0, ,, 32.0, /]
[,, 9.0, /, 40.0, }, ,, {, 44.0, /, 45.0, ,, -, 56.0, /, 15.0, ,, 32.0, /, 9.0, }]
[}, ,, {, 44.0, /, 45.0, ,, -, 56.0, /, 15.0, ,, 32.0, /, 9.0, }, ,, {, 19372.0, /]
[/, 40.0, }, ,, {, 44.0, /, 45.0, ,, -, 56.0, /, 15.0, ,, 32.0, /, 9.0, }, ,, {]
[}, ,, {, 44.0, /, 45.0, ,, -, 56.0, /, 15.0, ,, 32.0, /, 9.0, }, ,, {, 19372.0, /]
[,, {, 19372.0, /, 6561.0, ,, -, 25360.0, /, 2187.0, ,, 64448.0, /, 6561.0, ,, -, 212.0, /, 729.0, }]
[,, -, 56.0, /, 15.0, ,, 32.0, /, 9.0, }, ,, {, 19372.0, /, 6561.0, ,, -, 25360.0, /, 2187.0]
[/, 45.0, ,, -, 56.0, /, 15.0, ,, 32.0, /, 9.0, }, ,, {, 19372.0, /, 6561.0, ,, -, 25360.0]
[,, -, 56.0, /, 15.0, ,, 32.0, /, 9.0, }, ,, {, 19372.0, /, 6561.0, ,, -, 25360.0, /, 2187.0]
[,, 32.0, /, 9.0, }, ,, {, 19372.0, /, 6561.0, ,, -, 25360.0, /, 2187.0, ,, 64448.0, /, 6561.0, ,]
[/, 15.0, ,, 32.0, /, 9.0, }, ,, {, 19372.0, /, 6561.0, ,, -, 25360.0, /, 2187.0, ,, 64448.0, /]
[/, 15.0, ,, 32.0, /, 9.0, }, ,, {, 19372.0, /, 6561.0, ,, -, 25360.0, /, 2187.0, ,, 64448.0, /]
[,, 32.0, /, 9.0, }, ,, {, 19372.0, /, 6561.0, ,, -, 25360.0, /, 2187.0, ,, 64448.0, /, 6561.0, ,]
[}, ,, {, 19372.0, /, 6561.0, ,, -, 25360.0, /, 2187.0, ,, 64448.0, /, 6561.0, ,, -, 212.0, /, 729.0]
[/, 9.0, }, ,, {, 19372.0, /, 6561.0, ,, -, 25360.0, /, 2187.0, ,, 64448.0, /, 6561.0, ,, -, 212.0]
[}, ,, {, 19372.0, /, 6561.0, ,, -, 25360.0, /, 2187.0, ,, 64448.0, /, 6561.0, ,, -, 212.0, /, 729.0]
[,, {, 9017.0, /, 3168.0, ,, -, 355.0, /, 33.0, ,, 46732.0, /, 5247.0, ,, 49.0, /, 176.0, ,, -]
[,, -, 25360.0, /, 2187.0, ,, 64448.0, /, 6561.0, ,, -, 212.0, /, 729.0, }, ,, {, 9017.0, /, 3168.0]
[/, 6561.0, ,, -, 25360.0, /, 2187.0, ,, 64448.0, /, 6561.0, ,, -, 212.0, /, 729.0, }, ,, {, 9017.0]
[,, -, 25360.0, /, 2187.0, ,, 64448.0, /, 6561.0, ,, -, 212.0, /, 729.0, }, ,, {, 9017.0, /, 3168.0]
[,, 64448.0, /, 6561.0, ,, -, 212.0, /, 729.0, }, ,, {, 9017.0, /, 3168.0, ,, -, 355.0, /, 33.0]
[/, 2187.0, ,, 64448.0, /, 6561.0, ,, -, 212.0, /, 729.0, }, ,, {, 9017.0, /, 3168.0, ,, -, 355.0]
[/, 2187.0, ,, 64448.0, /, 6561.0, ,, -, 212.0, /, 729.0, }, ,, {, 9017.0, /, 3168.0, ,, -, 355.0]
[,, 64448.0, /, 6561.0, ,, -, 212.0, /, 729.0, }, ,, {, 9017.0, /, 3168.0, ,, -, 355.0, /, 33.0]
[,, -, 212.0, /, 729.0, }, ,, {, 9017.0, /, 3168.0, ,, -, 355.0, /, 33.0, ,, 46732.0, /, 5247.0]
[/, 6561.0, ,, -, 212.0, /, 729.0, }, ,, {, 9017.0, /, 3168.0, ,, -, 355.0, /, 33.0, ,, 46732.0]
[,, -, 212.0, /, 729.0, }, ,, {, 9017.0, /, 3168.0, ,, -, 355.0, /, 33.0, ,, 46732.0, /, 5247.0]
[}, ,, {, 9017.0, /, 3168.0, ,, -, 355.0, /, 33.0, ,, 46732.0, /, 5247.0, ,, 49.0, /, 176.0, ,]
[/, 729.0, }, ,, {, 9017.0, /, 3168.0, ,, -, 355.0, /, 33.0, ,, 46732.0, /, 5247.0, ,, 49.0, /]
[/, 729.0, }, ,, {, 9017.0, /, 3168.0, ,, -, 355.0, /, 33.0, ,, 46732.0, /, 5247.0, ,, 49.0, /]
[}, ,, {, 9017.0, /, 3168.0, ,, -, 355.0, /, 33.0, ,, 46732.0, /, 5247.0, ,, 49.0, /, 176.0, ,]
[,, {, 35.0, /, 384.0, ,, 0.0, ,, 500.0, /, 1113.0, ,, 125.0, /, 192.0, ,, -, 2187.0, /, 6784.0]
[,, -, 355.0, /, 33.0, ,, 46732.0, /, 5247.0, ,, 49.0, /, 176.0, ,, -, 5103.0, /, 18656.0, }, ,]
[/, 3168.0, ,, -, 355.0, /, 33.0, ,, 46732.0, /, 5247.0, ,, 49.0, /, 176.0, ,, -, 5103.0, /, 18656.0]
[,, -, 355.0, /, 33.0, ,, 46732.0, /, 5247.0, ,, 49.0, /, 176.0, ,, -, 5103.0, /, 18656.0, }, ,]
[,, 46732.0, /, 5247.0, ,, 49.0, /, 176.0, ,, -, 5103.0, /, 18656.0, }, ,, {, 35.0, /, 384.0, ,]
[/, 33.0, ,, 46732.0, /, 5247.0, ,, 49.0, /, 176.0, ,, -, 5103.0, /, 18656.0, }, ,, {, 35.0, /]
[/, 33.0, ,, 46732.0, /, 5247.0, ,, 49.0, /, 176.0, ,, -, 5103.0, /, 18656.0, }, ,, {, 35.0, /]
[,, 46732.0, /, 5247.0, ,, 49.0, /, 176.0, ,, -, 5103.0, /, 18656.0, }, ,, {, 35.0, /, 384.0, ,]
[,, 49.0, /, 176.0, ,, -, 5103.0, /, 18656.0, }, ,, {, 35.0, /, 384.0, ,, 0.0, ,, 500.0, /]
[/, 5247.0, ,, 49.0, /, 176.0, ,, -, 5103.0, /, 18656.0, }, ,, {, 35.0, /, 384.0, ,, 0.0, ,]
[,, 49.0, /, 176.0, ,, -, 5103.0, /, 18656.0, }, ,, {, 35.0, /, 384.0, ,, 0.0, ,, 500.0, /]
[,, -, 5103.0, /, 18656.0, }, ,, {, 35.0, /, 384.0, ,, 0.0, ,, 500.0, /, 1113.0, ,, 125.0, /]
[/, 176.0, ,, -, 5103.0, /, 18656.0, }, ,, {, 35.0, /, 384.0, ,, 0.0, ,, 500.0, /, 1113.0, ,]
[,, -, 5103.0, /, 18656.0, }, ,, {, 35.0, /, 384.0, ,, 0.0, ,, 500.0, /, 1113.0, ,, 125.0, /]
[}, ,, {, 35.0, /, 384.0, ,, 0.0, ,, 500.0, /, 1113.0, ,, 125.0, /, 192.0, ,, -, 2187.0, /]
[/, 18656.0, }, ,, {, 35.0, /, 384.0, ,, 0.0, ,, 500.0, /, 1113.0, ,, 125.0, /, 192.0, ,, -]
[/, 18656.0, }, ,, {, 35.0, /, 384.0, ,, 0.0, ,, 500.0, /, 1113.0, ,, 125.0, /, 192.0, ,, -]
[}, ,, {, 35.0, /, 384.0, ,, 0.0, ,, 500.0, /, 1113.0, ,, 125.0, /, 192.0, ,, -, 2187.0, /]
[}, ;, private, static, final, double, [, ], STATIC_B, =, {, 35.0, /, 384.0, ,, 0.0, ,, 500.0, /, 1113.0]
[,, 0.0, ,, 500.0, /, 1113.0, ,, 125.0, /, 192.0, ,, -, 2187.0, /, 6784.0, ,, 11.0, /, 84.0, }]
[/, 384.0, ,, 0.0, ,, 500.0, /, 1113.0, ,, 125.0, /, 192.0, ,, -, 2187.0, /, 6784.0, ,, 11.0, /]
[,, 0.0, ,, 500.0, /, 1113.0, ,, 125.0, /, 192.0, ,, -, 2187.0, /, 6784.0, ,, 11.0, /, 84.0, }]
[,, 500.0, /, 1113.0, ,, 125.0, /, 192.0, ,, -, 2187.0, /, 6784.0, ,, 11.0, /, 84.0, }, }, ;]
[,, 125.0, /, 192.0, ,, -, 2187.0, /, 6784.0, ,, 11.0, /, 84.0, }, }, ;, private, static, final, double]
[/, 1113.0, ,, 125.0, /, 192.0, ,, -, 2187.0, /, 6784.0, ,, 11.0, /, 84.0, }, }, ;, private, static]
[,, 125.0, /, 192.0, ,, -, 2187.0, /, 6784.0, ,, 11.0, /, 84.0, }, }, ;, private, static, final, double]
[,, -, 2187.0, /, 6784.0, ,, 11.0, /, 84.0, }, }, ;, private, static, final, double, [, ], STATIC_B, =]
[/, 192.0, ,, -, 2187.0, /, 6784.0, ,, 11.0, /, 84.0, }, }, ;, private, static, final, double, [, ]]
[,, -, 2187.0, /, 6784.0, ,, 11.0, /, 84.0, }, }, ;, private, static, final, double, [, ], STATIC_B, =]
[,, 11.0, /, 84.0, }, }, ;, private, static, final, double, [, ], STATIC_B, =, {, 35.0, /, 384.0, ,]
[/, 6784.0, ,, 11.0, /, 84.0, }, }, ;, private, static, final, double, [, ], STATIC_B, =, {, 35.0, /]
[/, 6784.0, ,, 11.0, /, 84.0, }, }, ;, private, static, final, double, [, ], STATIC_B, =, {, 35.0, /]
[,, 11.0, /, 84.0, }, }, ;, private, static, final, double, [, ], STATIC_B, =, {, 35.0, /, 384.0, ,]
[}, }, ;, private, static, final, double, [, ], STATIC_B, =, {, 35.0, /, 384.0, ,, 0.0, ,, 500.0, /]
[/, 84.0, }, }, ;, private, static, final, double, [, ], STATIC_B, =, {, 35.0, /, 384.0, ,, 0.0, ,]
[}, }, ;, private, static, final, double, [, ], STATIC_B, =, {, 35.0, /, 384.0, ,, 0.0, ,, 500.0, /]
[;, private, static, final, double, E1, =, 71.0, /, 57600.0, ;, private, static, final, double, E3, =, -, 71.0, /]
[,, 0.0, ,, 500.0, /, 1113.0, ,, 125.0, /, 192.0, ,, -, 2187.0, /, 6784.0, ,, 11.0, /, 84.0, ,]
[/, 384.0, ,, 0.0, ,, 500.0, /, 1113.0, ,, 125.0, /, 192.0, ,, -, 2187.0, /, 6784.0, ,, 11.0, /]
[,, 0.0, ,, 500.0, /, 1113.0, ,, 125.0, /, 192.0, ,, -, 2187.0, /, 6784.0, ,, 11.0, /, 84.0, ,]
[,, 500.0, /, 1113.0, ,, 125.0, /, 192.0, ,, -, 2187.0, /, 6784.0, ,, 11.0, /, 84.0, ,, 0.0, }]
[,, 125.0, /, 192.0, ,, -, 2187.0, /, 6784.0, ,, 11.0, /, 84.0, ,, 0.0, }, ;, private, static, final]
[/, 1113.0, ,, 125.0, /, 192.0, ,, -, 2187.0, /, 6784.0, ,, 11.0, /, 84.0, ,, 0.0, }, ;, private]
[,, 125.0, /, 192.0, ,, -, 2187.0, /, 6784.0, ,, 11.0, /, 84.0, ,, 0.0, }, ;, private, static, final]
[,, -, 2187.0, /, 6784.0, ,, 11.0, /, 84.0, ,, 0.0, }, ;, private, static, final, double, E1, =, 71.0]
[/, 192.0, ,, -, 2187.0, /, 6784.0, ,, 11.0, /, 84.0, ,, 0.0, }, ;, private, static, final, double, E1]
[,, -, 2187.0, /, 6784.0, ,, 11.0, /, 84.0, ,, 0.0, }, ;, private, static, final, double, E1, =, 71.0]
[,, 11.0, /, 84.0, ,, 0.0, }, ;, private, static, final, double, E1, =, 71.0, /, 57600.0, ;, private, static]
[/, 6784.0, ,, 11.0, /, 84.0, ,, 0.0, }, ;, private, static, final, double, E1, =, 71.0, /, 57600.0, ;]
[/, 6784.0, ,, 11.0, /, 84.0, ,, 0.0, }, ;, private, static, final, double, E1, =, 71.0, /, 57600.0, ;]
[,, 11.0, /, 84.0, ,, 0.0, }, ;, private, static, final, double, E1, =, 71.0, /, 57600.0, ;, private, static]
[,, 0.0, }, ;, private, static, final, double, E1, =, 71.0, /, 57600.0, ;, private, static, final, double, E3, =]
[/, 84.0, ,, 0.0, }, ;, private, static, final, double, E1, =, 71.0, /, 57600.0, ;, private, static, final, double]
[,, 0.0, }, ;, private, static, final, double, E1, =, 71.0, /, 57600.0, ;, private, static, final, double, E3, =]
[}, ;, private, static, final, double, E1, =, 71.0, /, 57600.0, ;, private, static, final, double, E3, =, -, 71.0]
[;, private, static, final, double, E3, =, -, 71.0, /, 16695.0, ;, private, static, final, double, E4, =, 71.0, /]
[/, 57600.0, ;, private, static, final, double, E3, =, -, 71.0, /, 16695.0, ;, private, static, final, double, E4, =]
[;, private, static, final, double, E3, =, -, 71.0, /, 16695.0, ;, private, static, final, double, E4, =, 71.0, /]
[;, private, static, final, double, E4, =, 71.0, /, 1920.0, ;, private, static, final, double, E5, =, -, 17253.0, /]
[/, 16695.0, ;, private, static, final, double, E4, =, 71.0, /, 1920.0, ;, private, static, final, double, E5, =, -]
[/, 16695.0, ;, private, static, final, double, E4, =, 71.0, /, 1920.0, ;, private, static, final, double, E5, =, -]
[;, private, static, final, double, E4, =, 71.0, /, 1920.0, ;, private, static, final, double, E5, =, -, 17253.0, /]
[;, private, static, final, double, E5, =, -, 17253.0, /, 339200.0, ;, private, static, final, double, E6, =, 22.0, /]
[/, 1920.0, ;, private, static, final, double, E5, =, -, 17253.0, /, 339200.0, ;, private, static, final, double, E6, =]
[;, private, static, final, double, E5, =, -, 17253.0, /, 339200.0, ;, private, static, final, double, E6, =, 22.0, /]
[;, private, static, final, double, E6, =, 22.0, /, 525.0, ;, private, static, final, double, E7, =, -, 1.0, /]
[/, 339200.0, ;, private, static, final, double, E6, =, 22.0, /, 525.0, ;, private, static, final, double, E7, =, -]
[/, 339200.0, ;, private, static, final, double, E6, =, 22.0, /, 525.0, ;, private, static, final, double, E7, =, -]
[;, private, static, final, double, E6, =, 22.0, /, 525.0, ;, private, static, final, double, E7, =, -, 1.0, /]
[;, private, static, final, double, E7, =, -, 1.0, /, 40.0, ;, public, DormandPrince54Integrator, (, final, double, minStep, ,, final]
[/, 525.0, ;, private, static, final, double, E7, =, -, 1.0, /, 40.0, ;, public, DormandPrince54Integrator, (, final, double, minStep]
[;, private, static, final, double, E7, =, -, 1.0, /, 40.0, ;, public, DormandPrince54Integrator, (, final, double, minStep, ,, final]
[;, public, DormandPrince54Integrator, (, final, double, minStep, ,, final, double, maxStep, ,, final, double, scalAbsoluteTolerance, ,, final, double, scalRelativeTolerance, )]
[/, 40.0, ;, public, DormandPrince54Integrator, (, final, double, minStep, ,, final, double, maxStep, ,, final, double, scalAbsoluteTolerance, ,, final, double]
[/, 40.0, ;, public, DormandPrince54Integrator, (, final, double, minStep, ,, final, double, maxStep, ,, final, double, scalAbsoluteTolerance, ,, final, double]
[;, public, DormandPrince54Integrator, (, final, double, minStep, ,, final, double, maxStep, ,, final, double, scalAbsoluteTolerance, ,, final, double, scalRelativeTolerance, )]
[,, true, ,, STATIC_C, ,, STATIC_A, ,, STATIC_B, ,, new, DormandPrince54StepInterpolator, (, ), ,, minStep, ,, maxStep, ,, scalAbsoluteTolerance, ,]
[,, STATIC_C, ,, STATIC_A, ,, STATIC_B, ,, new, DormandPrince54StepInterpolator, (, ), ,, minStep, ,, maxStep, ,, scalAbsoluteTolerance, ,, scalRelativeTolerance, )]
[,, STATIC_A, ,, STATIC_B, ,, new, DormandPrince54StepInterpolator, (, ), ,, minStep, ,, maxStep, ,, scalAbsoluteTolerance, ,, scalRelativeTolerance, ), ;, }]
[,, STATIC_B, ,, new, DormandPrince54StepInterpolator, (, ), ,, minStep, ,, maxStep, ,, scalAbsoluteTolerance, ,, scalRelativeTolerance, ), ;, }, public, DormandPrince54Integrator]
[,, new, DormandPrince54StepInterpolator, (, ), ,, minStep, ,, maxStep, ,, scalAbsoluteTolerance, ,, scalRelativeTolerance, ), ;, }, public, DormandPrince54Integrator, (, final]
[,, minStep, ,, maxStep, ,, scalAbsoluteTolerance, ,, scalRelativeTolerance, ), ;, }, public, DormandPrince54Integrator, (, final, double, minStep, ,, final, double]
[,, maxStep, ,, scalAbsoluteTolerance, ,, scalRelativeTolerance, ), ;, }, public, DormandPrince54Integrator, (, final, double, minStep, ,, final, double, maxStep, ,]
[,, scalAbsoluteTolerance, ,, scalRelativeTolerance, ), ;, }, public, DormandPrince54Integrator, (, final, double, minStep, ,, final, double, maxStep, ,, final, double]
[,, scalRelativeTolerance, ), ;, }, public, DormandPrince54Integrator, (, final, double, minStep, ,, final, double, maxStep, ,, final, double, [, ]]
[), ;, }, public, DormandPrince54Integrator, (, final, double, minStep, ,, final, double, maxStep, ,, final, double, [, ], vecAbsoluteTolerance, ,]
[,, true, ,, STATIC_C, ,, STATIC_A, ,, STATIC_B, ,, new, DormandPrince54StepInterpolator, (, ), ,, minStep, ,, maxStep, ,, vecAbsoluteTolerance, ,]
[,, STATIC_C, ,, STATIC_A, ,, STATIC_B, ,, new, DormandPrince54StepInterpolator, (, ), ,, minStep, ,, maxStep, ,, vecAbsoluteTolerance, ,, vecRelativeTolerance, )]
[,, STATIC_A, ,, STATIC_B, ,, new, DormandPrince54StepInterpolator, (, ), ,, minStep, ,, maxStep, ,, vecAbsoluteTolerance, ,, vecRelativeTolerance, ), ;, }]
[,, STATIC_B, ,, new, DormandPrince54StepInterpolator, (, ), ,, minStep, ,, maxStep, ,, vecAbsoluteTolerance, ,, vecRelativeTolerance, ), ;, }, @, Override]
[,, new, DormandPrince54StepInterpolator, (, ), ,, minStep, ,, maxStep, ,, vecAbsoluteTolerance, ,, vecRelativeTolerance, ), ;, }, @, Override, public, int]
[,, minStep, ,, maxStep, ,, vecAbsoluteTolerance, ,, vecRelativeTolerance, ), ;, }, @, Override, public, int, getOrder, (, ), {, return]
[,, maxStep, ,, vecAbsoluteTolerance, ,, vecRelativeTolerance, ), ;, }, @, Override, public, int, getOrder, (, ), {, return, 5, ;]
[,, vecAbsoluteTolerance, ,, vecRelativeTolerance, ), ;, }, @, Override, public, int, getOrder, (, ), {, return, 5, ;, }, @]
[,, vecRelativeTolerance, ), ;, }, @, Override, public, int, getOrder, (, ), {, return, 5, ;, }, @, Override, protected]
[), ;, }, @, Override, public, int, getOrder, (, ), {, return, 5, ;, }, @, Override, protected, double, estimateError]
[;, }, @, Override, protected, double, estimateError, (, final, double, [, ], [, ], yDotK, ,, final, double, [, ]]
[;, for, (, int, j, =, 0, ;, j, <, mainSetDimension, ;, ++, j, ), {, final, double, errSum, =]
[;, j, <, mainSetDimension, ;, ++, j, ), {, final, double, errSum, =, E1, *, yDotK, [, 0, ], []
[;, ++, j, ), {, final, double, errSum, =, E1, *, yDotK, [, 0, ], [, j, ], +, E3]
[<, mainSetDimension, ;, ++, j, ), {, final, double, errSum, =, E1, *, yDotK, [, 0, ], [, j, ]]
[;, ++, j, ), {, final, double, errSum, =, E1, *, yDotK, [, 0, ], [, j, ], +, E3]
[), {, final, double, errSum, =, E1, *, yDotK, [, 0, ], [, j, ], +, E3, *, yDotK, []
[), {, final, double, errSum, =, E1, *, yDotK, [, 0, ], [, j, ], +, E3, *, yDotK, []
[;, final, double, yScale, =, FastMath, ., max, (, FastMath, ., abs, (, y0, [, j, ], ), ,, FastMath]
[+, E7, *, yDotK, [, 6, ], [, j, ], ;, final, double, yScale, =, FastMath, ., max, (, FastMath]
[+, E6, *, yDotK, [, 5, ], [, j, ], +, E7, *, yDotK, [, 6, ], [, j, ]]
[+, E5, *, yDotK, [, 4, ], [, j, ], +, E6, *, yDotK, [, 5, ], [, j, ]]
[+, E4, *, yDotK, [, 3, ], [, j, ], +, E5, *, yDotK, [, 4, ], [, j, ]]
[+, E3, *, yDotK, [, 2, ], [, j, ], +, E4, *, yDotK, [, 3, ], [, j, ]]
[*, yDotK, [, 0, ], [, j, ], +, E3, *, yDotK, [, 2, ], [, j, ], +, E4]
[+, E3, *, yDotK, [, 2, ], [, j, ], +, E4, *, yDotK, [, 3, ], [, j, ]]
[[, j, ], +, E3, *, yDotK, [, 2, ], [, j, ], +, E4, *, yDotK, [, 3, ]]
[[, 0, ], [, j, ], +, E3, *, yDotK, [, 2, ], [, j, ], +, E4, *, yDotK]
[], [, j, ], +, E3, *, yDotK, [, 2, ], [, j, ], +, E4, *, yDotK, [, 3]
[], +, E3, *, yDotK, [, 2, ], [, j, ], +, E4, *, yDotK, [, 3, ], [, j]
[+, E4, *, yDotK, [, 3, ], [, j, ], +, E5, *, yDotK, [, 4, ], [, j, ]]
[*, yDotK, [, 2, ], [, j, ], +, E4, *, yDotK, [, 3, ], [, j, ], +, E5]
[+, E4, *, yDotK, [, 3, ], [, j, ], +, E5, *, yDotK, [, 4, ], [, j, ]]
[[, j, ], +, E4, *, yDotK, [, 3, ], [, j, ], +, E5, *, yDotK, [, 4, ]]
[[, 2, ], [, j, ], +, E4, *, yDotK, [, 3, ], [, j, ], +, E5, *, yDotK]
[], [, j, ], +, E4, *, yDotK, [, 3, ], [, j, ], +, E5, *, yDotK, [, 4]
[], +, E4, *, yDotK, [, 3, ], [, j, ], +, E5, *, yDotK, [, 4, ], [, j]
[+, E5, *, yDotK, [, 4, ], [, j, ], +, E6, *, yDotK, [, 5, ], [, j, ]]
[*, yDotK, [, 3, ], [, j, ], +, E5, *, yDotK, [, 4, ], [, j, ], +, E6]
[+, E5, *, yDotK, [, 4, ], [, j, ], +, E6, *, yDotK, [, 5, ], [, j, ]]
[[, j, ], +, E5, *, yDotK, [, 4, ], [, j, ], +, E6, *, yDotK, [, 5, ]]
[[, 3, ], [, j, ], +, E5, *, yDotK, [, 4, ], [, j, ], +, E6, *, yDotK]
[], [, j, ], +, E5, *, yDotK, [, 4, ], [, j, ], +, E6, *, yDotK, [, 5]
[], +, E5, *, yDotK, [, 4, ], [, j, ], +, E6, *, yDotK, [, 5, ], [, j]
[+, E6, *, yDotK, [, 5, ], [, j, ], +, E7, *, yDotK, [, 6, ], [, j, ]]
[*, yDotK, [, 4, ], [, j, ], +, E6, *, yDotK, [, 5, ], [, j, ], +, E7]
[+, E6, *, yDotK, [, 5, ], [, j, ], +, E7, *, yDotK, [, 6, ], [, j, ]]
[[, j, ], +, E6, *, yDotK, [, 5, ], [, j, ], +, E7, *, yDotK, [, 6, ]]
[[, 4, ], [, j, ], +, E6, *, yDotK, [, 5, ], [, j, ], +, E7, *, yDotK]
[], [, j, ], +, E6, *, yDotK, [, 5, ], [, j, ], +, E7, *, yDotK, [, 6]
[], +, E6, *, yDotK, [, 5, ], [, j, ], +, E7, *, yDotK, [, 6, ], [, j]
[+, E7, *, yDotK, [, 6, ], [, j, ], ;, final, double, yScale, =, FastMath, ., max, (, FastMath]
[*, yDotK, [, 5, ], [, j, ], +, E7, *, yDotK, [, 6, ], [, j, ], ;, final]
[+, E7, *, yDotK, [, 6, ], [, j, ], ;, final, double, yScale, =, FastMath, ., max, (, FastMath]
[[, j, ], +, E7, *, yDotK, [, 6, ], [, j, ], ;, final, double, yScale, =, FastMath, .]
[[, 5, ], [, j, ], +, E7, *, yDotK, [, 6, ], [, j, ], ;, final, double, yScale]
[], [, j, ], +, E7, *, yDotK, [, 6, ], [, j, ], ;, final, double, yScale, =, FastMath]
[], +, E7, *, yDotK, [, 6, ], [, j, ], ;, final, double, yScale, =, FastMath, ., max, (]
[;, final, double, yScale, =, FastMath, ., max, (, FastMath, ., abs, (, y0, [, j, ], ), ,, FastMath]
[*, yDotK, [, 6, ], [, j, ], ;, final, double, yScale, =, FastMath, ., max, (, FastMath, ., abs]
[;, final, double, yScale, =, FastMath, ., max, (, FastMath, ., abs, (, y0, [, j, ], ), ,, FastMath]
[[, j, ], ;, final, double, yScale, =, FastMath, ., max, (, FastMath, ., abs, (, y0, [, j, ]]
[[, 6, ], [, j, ], ;, final, double, yScale, =, FastMath, ., max, (, FastMath, ., abs, (, y0]
[], [, j, ], ;, final, double, yScale, =, FastMath, ., max, (, FastMath, ., abs, (, y0, [, j]
[], ;, final, double, yScale, =, FastMath, ., max, (, FastMath, ., abs, (, y0, [, j, ], ), ,]
[;, final, double, tol, =, (, vecAbsoluteTolerance, ==, null, ), ?, (, scalAbsoluteTolerance, +, scalRelativeTolerance, *, yScale, ), :, (]
[., max, (, FastMath, ., abs, (, y0, [, j, ], ), ,, FastMath, ., abs, (, y1, [, j]
[,, FastMath, ., abs, (, y1, [, j, ], ), ), ;, final, double, tol, =, (, vecAbsoluteTolerance, ==, null]
[., abs, (, y0, [, j, ], ), ,, FastMath, ., abs, (, y1, [, j, ], ), ), ;]
[), ,, FastMath, ., abs, (, y1, [, j, ], ), ), ;, final, double, tol, =, (, vecAbsoluteTolerance, ==]
[[, j, ], ), ,, FastMath, ., abs, (, y1, [, j, ], ), ), ;, final, double, tol, =]
[], ), ,, FastMath, ., abs, (, y1, [, j, ], ), ), ;, final, double, tol, =, (, vecAbsoluteTolerance]
[), ;, final, double, tol, =, (, vecAbsoluteTolerance, ==, null, ), ?, (, scalAbsoluteTolerance, +, scalRelativeTolerance, *, yScale, ), :]
[., abs, (, y1, [, j, ], ), ), ;, final, double, tol, =, (, vecAbsoluteTolerance, ==, null, ), ?]
[), ), ;, final, double, tol, =, (, vecAbsoluteTolerance, ==, null, ), ?, (, scalAbsoluteTolerance, +, scalRelativeTolerance, *, yScale, )]
[[, j, ], ), ), ;, final, double, tol, =, (, vecAbsoluteTolerance, ==, null, ), ?, (, scalAbsoluteTolerance, +, scalRelativeTolerance]
[], ), ), ;, final, double, tol, =, (, vecAbsoluteTolerance, ==, null, ), ?, (, scalAbsoluteTolerance, +, scalRelativeTolerance, *, yScale]
[;, final, double, ratio, =, h, *, errSum, /, tol, ;, error, +=, ratio, *, ratio, ;, }, return, FastMath]
[?, (, scalAbsoluteTolerance, +, scalRelativeTolerance, *, yScale, ), :, (, vecAbsoluteTolerance, [, j, ], +, vecRelativeTolerance, [, j, ], *]
[), ?, (, scalAbsoluteTolerance, +, scalRelativeTolerance, *, yScale, ), :, (, vecAbsoluteTolerance, [, j, ], +, vecRelativeTolerance, [, j, ]]
[==, null, ), ?, (, scalAbsoluteTolerance, +, scalRelativeTolerance, *, yScale, ), :, (, vecAbsoluteTolerance, [, j, ], +, vecRelativeTolerance, []
[), ?, (, scalAbsoluteTolerance, +, scalRelativeTolerance, *, yScale, ), :, (, vecAbsoluteTolerance, [, j, ], +, vecRelativeTolerance, [, j, ]]
[:, (, vecAbsoluteTolerance, [, j, ], +, vecRelativeTolerance, [, j, ], *, yScale, ), ;, final, double, ratio, =, h]
[), :, (, vecAbsoluteTolerance, [, j, ], +, vecRelativeTolerance, [, j, ], *, yScale, ), ;, final, double, ratio, =]
[+, scalRelativeTolerance, *, yScale, ), :, (, vecAbsoluteTolerance, [, j, ], +, vecRelativeTolerance, [, j, ], *, yScale, ), ;]
[), :, (, vecAbsoluteTolerance, [, j, ], +, vecRelativeTolerance, [, j, ], *, yScale, ), ;, final, double, ratio, =]
[*, yScale, ), :, (, vecAbsoluteTolerance, [, j, ], +, vecRelativeTolerance, [, j, ], *, yScale, ), ;, final, double]
[), :, (, vecAbsoluteTolerance, [, j, ], +, vecRelativeTolerance, [, j, ], *, yScale, ), ;, final, double, ratio, =]
[;, final, double, ratio, =, h, *, errSum, /, tol, ;, error, +=, ratio, *, ratio, ;, }, return, FastMath]
[), ;, final, double, ratio, =, h, *, errSum, /, tol, ;, error, +=, ratio, *, ratio, ;, }, return]
[+, vecRelativeTolerance, [, j, ], *, yScale, ), ;, final, double, ratio, =, h, *, errSum, /, tol, ;, error]
[[, j, ], +, vecRelativeTolerance, [, j, ], *, yScale, ), ;, final, double, ratio, =, h, *, errSum, /]
[], +, vecRelativeTolerance, [, j, ], *, yScale, ), ;, final, double, ratio, =, h, *, errSum, /, tol, ;]
[), ;, final, double, ratio, =, h, *, errSum, /, tol, ;, error, +=, ratio, *, ratio, ;, }, return]
[*, yScale, ), ;, final, double, ratio, =, h, *, errSum, /, tol, ;, error, +=, ratio, *, ratio, ;]
[[, j, ], *, yScale, ), ;, final, double, ratio, =, h, *, errSum, /, tol, ;, error, +=, ratio]
[], *, yScale, ), ;, final, double, ratio, =, h, *, errSum, /, tol, ;, error, +=, ratio, *, ratio]
[), ;, final, double, ratio, =, h, *, errSum, /, tol, ;, error, +=, ratio, *, ratio, ;, }, return]
[;, error, +=, ratio, *, ratio, ;, }, return, FastMath, ., sqrt, (, error, /, mainSetDimension, ), ;, }, }]
[/, tol, ;, error, +=, ratio, *, ratio, ;, }, return, FastMath, ., sqrt, (, error, /, mainSetDimension, ), ;]
[*, errSum, /, tol, ;, error, +=, ratio, *, ratio, ;, }, return, FastMath, ., sqrt, (, error, /, mainSetDimension]
[/, tol, ;, error, +=, ratio, *, ratio, ;, }, return, FastMath, ., sqrt, (, error, /, mainSetDimension, ), ;]
[;, error, +=, ratio, *, ratio, ;, }, return, FastMath, ., sqrt, (, error, /, mainSetDimension, ), ;, }, }]
[+=, ratio, *, ratio, ;, }, return, FastMath, ., sqrt, (, error, /, mainSetDimension, ), ;, }, }]
[;, }, return, FastMath, ., sqrt, (, error, /, mainSetDimension, ), ;, }, }]
[*, ratio, ;, }, return, FastMath, ., sqrt, (, error, /, mainSetDimension, ), ;, }, }]
[;, }, return, FastMath, ., sqrt, (, error, /, mainSetDimension, ), ;, }, }]
[;, }, }]
[., sqrt, (, error, /, mainSetDimension, ), ;, }, }]
[), ;, }, }]
[/, mainSetDimension, ), ;, }, }]
[), ;, }, }]
