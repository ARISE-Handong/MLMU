[;, private, enum, Kind, {, ORDINARY, ,, CONSTRUCTOR, ,, INTERFACE, }, private, enum, PropAccess, {, ANY, ,, STRUCT, ,, DICT]
[;, private, List, <, ObjectType, >, extendedInterfaces, =, ImmutableList, ., of, (, ), ;, private, List, <, FunctionType, >, subTypes]
[., of, (, ), ;, private, List, <, ObjectType, >, extendedInterfaces, =, ImmutableList, ., of, (, ), ;, private, List]
[;, private, List, <, FunctionType, >, subTypes, ;, FunctionType, (, JSTypeRegistry, registry, ,, String, name, ,, Node, source, ,, ArrowType]
[., of, (, ), ;, private, List, <, FunctionType, >, subTypes, ;, FunctionType, (, JSTypeRegistry, registry, ,, String, name, ,]
[,, name, ,, registry, ., getNativeObjectType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ,, nativeType, ,, templateKeys, ,, null, ), ;, setPrettyPrint]
[,, registry, ., getNativeObjectType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ,, nativeType, ,, templateKeys, ,, null, ), ;, setPrettyPrint, (, true]
[,, nativeType, ,, templateKeys, ,, null, ), ;, setPrettyPrint, (, true, ), ;, Preconditions, ., checkArgument, (, source, ==, null]
[., getNativeObjectType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ,, nativeType, ,, templateKeys, ,, null, ), ;, setPrettyPrint, (, true, ), ;]
[), ,, nativeType, ,, templateKeys, ,, null, ), ;, setPrettyPrint, (, true, ), ;, Preconditions, ., checkArgument, (, source, ==]
[., FUNCTION_INSTANCE_TYPE, ), ,, nativeType, ,, templateKeys, ,, null, ), ;, setPrettyPrint, (, true, ), ;, Preconditions, ., checkArgument, (]
[,, templateKeys, ,, null, ), ;, setPrettyPrint, (, true, ), ;, Preconditions, ., checkArgument, (, source, ==, null, ||, Token]
[,, null, ), ;, setPrettyPrint, (, true, ), ;, Preconditions, ., checkArgument, (, source, ==, null, ||, Token, ., FUNCTION]
[), ;, setPrettyPrint, (, true, ), ;, Preconditions, ., checkArgument, (, source, ==, null, ||, Token, ., FUNCTION, ==, source]
[;, Preconditions, ., checkArgument, (, source, ==, null, ||, Token, ., FUNCTION, ==, source, ., getType, (, ), ), ;]
[), ;, Preconditions, ., checkArgument, (, source, ==, null, ||, Token, ., FUNCTION, ==, source, ., getType, (, ), )]
[;, Preconditions, ., checkNotNull, (, arrowType, ), ;, this, ., source, =, source, ;, if, (, isConstructor, ), {, this]
[., checkArgument, (, source, ==, null, ||, Token, ., FUNCTION, ==, source, ., getType, (, ), ), ;, Preconditions, .]
[), ;, Preconditions, ., checkNotNull, (, arrowType, ), ;, this, ., source, =, source, ;, if, (, isConstructor, ), {]
[||, Token, ., FUNCTION, ==, source, ., getType, (, ), ), ;, Preconditions, ., checkNotNull, (, arrowType, ), ;, this]
[==, null, ||, Token, ., FUNCTION, ==, source, ., getType, (, ), ), ;, Preconditions, ., checkNotNull, (, arrowType, )]
[||, Token, ., FUNCTION, ==, source, ., getType, (, ), ), ;, Preconditions, ., checkNotNull, (, arrowType, ), ;, this]
[), ;, Preconditions, ., checkNotNull, (, arrowType, ), ;, this, ., source, =, source, ;, if, (, isConstructor, ), {]
[==, source, ., getType, (, ), ), ;, Preconditions, ., checkNotNull, (, arrowType, ), ;, this, ., source, =, source]
[., FUNCTION, ==, source, ., getType, (, ), ), ;, Preconditions, ., checkNotNull, (, arrowType, ), ;, this, ., source]
[), ;, Preconditions, ., checkNotNull, (, arrowType, ), ;, this, ., source, =, source, ;, if, (, isConstructor, ), {]
[., getType, (, ), ), ;, Preconditions, ., checkNotNull, (, arrowType, ), ;, this, ., source, =, source, ;, if]
[;, this, ., source, =, source, ;, if, (, isConstructor, ), {, this, ., kind, =, Kind, ., CONSTRUCTOR, ;]
[., checkNotNull, (, arrowType, ), ;, this, ., source, =, source, ;, if, (, isConstructor, ), {, this, ., kind]
[), ;, this, ., source, =, source, ;, if, (, isConstructor, ), {, this, ., kind, =, Kind, ., CONSTRUCTOR]
[=, source, ;, if, (, isConstructor, ), {, this, ., kind, =, Kind, ., CONSTRUCTOR, ;, this, ., propAccess, =]
[., source, =, source, ;, if, (, isConstructor, ), {, this, ., kind, =, Kind, ., CONSTRUCTOR, ;, this, .]
[;, if, (, isConstructor, ), {, this, ., kind, =, Kind, ., CONSTRUCTOR, ;, this, ., propAccess, =, PropAccess, .]
[), {, this, ., kind, =, Kind, ., CONSTRUCTOR, ;, this, ., propAccess, =, PropAccess, ., ANY, ;, this, .]
[=, Kind, ., CONSTRUCTOR, ;, this, ., propAccess, =, PropAccess, ., ANY, ;, this, ., typeOfThis, =, typeOfThis, !=, null]
[., kind, =, Kind, ., CONSTRUCTOR, ;, this, ., propAccess, =, PropAccess, ., ANY, ;, this, ., typeOfThis, =, typeOfThis]
[;, this, ., propAccess, =, PropAccess, ., ANY, ;, this, ., typeOfThis, =, typeOfThis, !=, null, ?, typeOfThis, :, new]
[., CONSTRUCTOR, ;, this, ., propAccess, =, PropAccess, ., ANY, ;, this, ., typeOfThis, =, typeOfThis, !=, null, ?, typeOfThis]
[=, PropAccess, ., ANY, ;, this, ., typeOfThis, =, typeOfThis, !=, null, ?, typeOfThis, :, new, InstanceObjectType, (, registry, ,]
[., propAccess, =, PropAccess, ., ANY, ;, this, ., typeOfThis, =, typeOfThis, !=, null, ?, typeOfThis, :, new, InstanceObjectType, (]
[;, this, ., typeOfThis, =, typeOfThis, !=, null, ?, typeOfThis, :, new, InstanceObjectType, (, registry, ,, this, ,, nativeType, ,]
[., ANY, ;, this, ., typeOfThis, =, typeOfThis, !=, null, ?, typeOfThis, :, new, InstanceObjectType, (, registry, ,, this, ,]
[=, typeOfThis, !=, null, ?, typeOfThis, :, new, InstanceObjectType, (, registry, ,, this, ,, nativeType, ,, null, ), ;, }]
[., typeOfThis, =, typeOfThis, !=, null, ?, typeOfThis, :, new, InstanceObjectType, (, registry, ,, this, ,, nativeType, ,, null, )]
[;, }, else, {, this, ., kind, =, Kind, ., ORDINARY, ;, this, ., typeOfThis, =, typeOfThis, !=, null, ?]
[?, typeOfThis, :, new, InstanceObjectType, (, registry, ,, this, ,, nativeType, ,, null, ), ;, }, else, {, this, .]
[!=, null, ?, typeOfThis, :, new, InstanceObjectType, (, registry, ,, this, ,, nativeType, ,, null, ), ;, }, else, {]
[?, typeOfThis, :, new, InstanceObjectType, (, registry, ,, this, ,, nativeType, ,, null, ), ;, }, else, {, this, .]
[:, new, InstanceObjectType, (, registry, ,, this, ,, nativeType, ,, null, ), ;, }, else, {, this, ., kind, =]
[;, }, else, {, this, ., kind, =, Kind, ., ORDINARY, ;, this, ., typeOfThis, =, typeOfThis, !=, null, ?]
[,, this, ,, nativeType, ,, null, ), ;, }, else, {, this, ., kind, =, Kind, ., ORDINARY, ;, this]
[,, nativeType, ,, null, ), ;, }, else, {, this, ., kind, =, Kind, ., ORDINARY, ;, this, ., typeOfThis]
[,, null, ), ;, }, else, {, this, ., kind, =, Kind, ., ORDINARY, ;, this, ., typeOfThis, =, typeOfThis]
[), ;, }, else, {, this, ., kind, =, Kind, ., ORDINARY, ;, this, ., typeOfThis, =, typeOfThis, !=, null]
[=, Kind, ., ORDINARY, ;, this, ., typeOfThis, =, typeOfThis, !=, null, ?, typeOfThis, :, registry, ., getNativeObjectType, (, JSTypeNative]
[., kind, =, Kind, ., ORDINARY, ;, this, ., typeOfThis, =, typeOfThis, !=, null, ?, typeOfThis, :, registry, ., getNativeObjectType]
[;, this, ., typeOfThis, =, typeOfThis, !=, null, ?, typeOfThis, :, registry, ., getNativeObjectType, (, JSTypeNative, ., UNKNOWN_TYPE, ), ;]
[., ORDINARY, ;, this, ., typeOfThis, =, typeOfThis, !=, null, ?, typeOfThis, :, registry, ., getNativeObjectType, (, JSTypeNative, ., UNKNOWN_TYPE]
[=, typeOfThis, !=, null, ?, typeOfThis, :, registry, ., getNativeObjectType, (, JSTypeNative, ., UNKNOWN_TYPE, ), ;, }, this, ., call]
[., typeOfThis, =, typeOfThis, !=, null, ?, typeOfThis, :, registry, ., getNativeObjectType, (, JSTypeNative, ., UNKNOWN_TYPE, ), ;, }, this]
[;, }, this, ., call, =, arrowType, ;, }, private, FunctionType, (, JSTypeRegistry, registry, ,, String, name, ,, Node, source]
[?, typeOfThis, :, registry, ., getNativeObjectType, (, JSTypeNative, ., UNKNOWN_TYPE, ), ;, }, this, ., call, =, arrowType, ;, }]
[!=, null, ?, typeOfThis, :, registry, ., getNativeObjectType, (, JSTypeNative, ., UNKNOWN_TYPE, ), ;, }, this, ., call, =, arrowType]
[?, typeOfThis, :, registry, ., getNativeObjectType, (, JSTypeNative, ., UNKNOWN_TYPE, ), ;, }, this, ., call, =, arrowType, ;, }]
[:, registry, ., getNativeObjectType, (, JSTypeNative, ., UNKNOWN_TYPE, ), ;, }, this, ., call, =, arrowType, ;, }, private, FunctionType]
[;, }, this, ., call, =, arrowType, ;, }, private, FunctionType, (, JSTypeRegistry, registry, ,, String, name, ,, Node, source]
[., getNativeObjectType, (, JSTypeNative, ., UNKNOWN_TYPE, ), ;, }, this, ., call, =, arrowType, ;, }, private, FunctionType, (, JSTypeRegistry]
[), ;, }, this, ., call, =, arrowType, ;, }, private, FunctionType, (, JSTypeRegistry, registry, ,, String, name, ,, Node]
[., UNKNOWN_TYPE, ), ;, }, this, ., call, =, arrowType, ;, }, private, FunctionType, (, JSTypeRegistry, registry, ,, String, name]
[=, arrowType, ;, }, private, FunctionType, (, JSTypeRegistry, registry, ,, String, name, ,, Node, source, ), {, super, (, registry]
[., call, =, arrowType, ;, }, private, FunctionType, (, JSTypeRegistry, registry, ,, String, name, ,, Node, source, ), {, super]
[;, }, private, FunctionType, (, JSTypeRegistry, registry, ,, String, name, ,, Node, source, ), {, super, (, registry, ,, name]
[,, name, ,, registry, ., getNativeObjectType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ), ;, setPrettyPrint, (, true, ), ;, Preconditions, .]
[,, registry, ., getNativeObjectType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ), ;, setPrettyPrint, (, true, ), ;, Preconditions, ., checkArgument, (]
[), ;, setPrettyPrint, (, true, ), ;, Preconditions, ., checkArgument, (, source, ==, null, ||, Token, ., FUNCTION, ==, source]
[., getNativeObjectType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ), ;, setPrettyPrint, (, true, ), ;, Preconditions, ., checkArgument, (, source, ==]
[), ), ;, setPrettyPrint, (, true, ), ;, Preconditions, ., checkArgument, (, source, ==, null, ||, Token, ., FUNCTION, ==]
[., FUNCTION_INSTANCE_TYPE, ), ), ;, setPrettyPrint, (, true, ), ;, Preconditions, ., checkArgument, (, source, ==, null, ||, Token, .]
[;, Preconditions, ., checkArgument, (, source, ==, null, ||, Token, ., FUNCTION, ==, source, ., getType, (, ), ), ;]
[), ;, Preconditions, ., checkArgument, (, source, ==, null, ||, Token, ., FUNCTION, ==, source, ., getType, (, ), )]
[;, Preconditions, ., checkArgument, (, name, !=, null, ), ;, this, ., source, =, source, ;, this, ., call, =]
[., checkArgument, (, source, ==, null, ||, Token, ., FUNCTION, ==, source, ., getType, (, ), ), ;, Preconditions, .]
[), ;, Preconditions, ., checkArgument, (, name, !=, null, ), ;, this, ., source, =, source, ;, this, ., call]
[||, Token, ., FUNCTION, ==, source, ., getType, (, ), ), ;, Preconditions, ., checkArgument, (, name, !=, null, )]
[==, null, ||, Token, ., FUNCTION, ==, source, ., getType, (, ), ), ;, Preconditions, ., checkArgument, (, name, !=]
[||, Token, ., FUNCTION, ==, source, ., getType, (, ), ), ;, Preconditions, ., checkArgument, (, name, !=, null, )]
[), ;, Preconditions, ., checkArgument, (, name, !=, null, ), ;, this, ., source, =, source, ;, this, ., call]
[==, source, ., getType, (, ), ), ;, Preconditions, ., checkArgument, (, name, !=, null, ), ;, this, ., source]
[., FUNCTION, ==, source, ., getType, (, ), ), ;, Preconditions, ., checkArgument, (, name, !=, null, ), ;, this]
[), ;, Preconditions, ., checkArgument, (, name, !=, null, ), ;, this, ., source, =, source, ;, this, ., call]
[., getType, (, ), ), ;, Preconditions, ., checkArgument, (, name, !=, null, ), ;, this, ., source, =, source]
[;, this, ., source, =, source, ;, this, ., call, =, new, ArrowType, (, registry, ,, new, Node, (, Token]
[., checkArgument, (, name, !=, null, ), ;, this, ., source, =, source, ;, this, ., call, =, new, ArrowType]
[), ;, this, ., source, =, source, ;, this, ., call, =, new, ArrowType, (, registry, ,, new, Node, (]
[!=, null, ), ;, this, ., source, =, source, ;, this, ., call, =, new, ArrowType, (, registry, ,, new]
[), ;, this, ., source, =, source, ;, this, ., call, =, new, ArrowType, (, registry, ,, new, Node, (]
[=, source, ;, this, ., call, =, new, ArrowType, (, registry, ,, new, Node, (, Token, ., PARAM_LIST, ), ,]
[., source, =, source, ;, this, ., call, =, new, ArrowType, (, registry, ,, new, Node, (, Token, ., PARAM_LIST]
[;, this, ., call, =, new, ArrowType, (, registry, ,, new, Node, (, Token, ., PARAM_LIST, ), ,, null, )]
[=, new, ArrowType, (, registry, ,, new, Node, (, Token, ., PARAM_LIST, ), ,, null, ), ;, this, ., kind]
[., call, =, new, ArrowType, (, registry, ,, new, Node, (, Token, ., PARAM_LIST, ), ,, null, ), ;, this]
[;, this, ., kind, =, Kind, ., INTERFACE, ;, this, ., typeOfThis, =, new, InstanceObjectType, (, registry, ,, this, )]
[,, new, Node, (, Token, ., PARAM_LIST, ), ,, null, ), ;, this, ., kind, =, Kind, ., INTERFACE, ;]
[,, null, ), ;, this, ., kind, =, Kind, ., INTERFACE, ;, this, ., typeOfThis, =, new, InstanceObjectType, (, registry]
[), ,, null, ), ;, this, ., kind, =, Kind, ., INTERFACE, ;, this, ., typeOfThis, =, new, InstanceObjectType, (]
[., PARAM_LIST, ), ,, null, ), ;, this, ., kind, =, Kind, ., INTERFACE, ;, this, ., typeOfThis, =, new]
[), ;, this, ., kind, =, Kind, ., INTERFACE, ;, this, ., typeOfThis, =, new, InstanceObjectType, (, registry, ,, this]
[=, Kind, ., INTERFACE, ;, this, ., typeOfThis, =, new, InstanceObjectType, (, registry, ,, this, ), ;, }, static, FunctionType]
[., kind, =, Kind, ., INTERFACE, ;, this, ., typeOfThis, =, new, InstanceObjectType, (, registry, ,, this, ), ;, }]
[;, this, ., typeOfThis, =, new, InstanceObjectType, (, registry, ,, this, ), ;, }, static, FunctionType, forInterface, (, JSTypeRegistry, registry]
[., INTERFACE, ;, this, ., typeOfThis, =, new, InstanceObjectType, (, registry, ,, this, ), ;, }, static, FunctionType, forInterface, (]
[=, new, InstanceObjectType, (, registry, ,, this, ), ;, }, static, FunctionType, forInterface, (, JSTypeRegistry, registry, ,, String, name, ,]
[., typeOfThis, =, new, InstanceObjectType, (, registry, ,, this, ), ;, }, static, FunctionType, forInterface, (, JSTypeRegistry, registry, ,, String]
[;, }, static, FunctionType, forInterface, (, JSTypeRegistry, registry, ,, String, name, ,, Node, source, ), {, return, new, FunctionType, (]
[,, this, ), ;, }, static, FunctionType, forInterface, (, JSTypeRegistry, registry, ,, String, name, ,, Node, source, ), {, return]
[), ;, }, static, FunctionType, forInterface, (, JSTypeRegistry, registry, ,, String, name, ,, Node, source, ), {, return, new, FunctionType]
[;, }, @, Override, public, boolean, isInstanceType, (, ), {, return, this, ==, registry, ., getNativeType, (, U2U_CONSTRUCTOR_TYPE, ), ;]
[,, name, ,, source, ), ;, }, @, Override, public, boolean, isInstanceType, (, ), {, return, this, ==, registry, .]
[,, source, ), ;, }, @, Override, public, boolean, isInstanceType, (, ), {, return, this, ==, registry, ., getNativeType, (]
[), ;, }, @, Override, public, boolean, isInstanceType, (, ), {, return, this, ==, registry, ., getNativeType, (, U2U_CONSTRUCTOR_TYPE, )]
[;, }, @, Override, public, boolean, isConstructor, (, ), {, return, kind, ==, Kind, ., CONSTRUCTOR, ;, }, @, Override]
[==, registry, ., getNativeType, (, U2U_CONSTRUCTOR_TYPE, ), ;, }, @, Override, public, boolean, isConstructor, (, ), {, return, kind, ==]
[;, }, @, Override, public, boolean, isConstructor, (, ), {, return, kind, ==, Kind, ., CONSTRUCTOR, ;, }, @, Override]
[., getNativeType, (, U2U_CONSTRUCTOR_TYPE, ), ;, }, @, Override, public, boolean, isConstructor, (, ), {, return, kind, ==, Kind, .]
[), ;, }, @, Override, public, boolean, isConstructor, (, ), {, return, kind, ==, Kind, ., CONSTRUCTOR, ;, }, @]
[;, }, @, Override, public, boolean, isInterface, (, ), {, return, kind, ==, Kind, ., INTERFACE, ;, }, @, Override]
[==, Kind, ., CONSTRUCTOR, ;, }, @, Override, public, boolean, isInterface, (, ), {, return, kind, ==, Kind, ., INTERFACE]
[;, }, @, Override, public, boolean, isInterface, (, ), {, return, kind, ==, Kind, ., INTERFACE, ;, }, @, Override]
[., CONSTRUCTOR, ;, }, @, Override, public, boolean, isInterface, (, ), {, return, kind, ==, Kind, ., INTERFACE, ;, }]
[;, }, @, Override, public, boolean, isOrdinaryFunction, (, ), {, return, kind, ==, Kind, ., ORDINARY, ;, }, public, boolean]
[==, Kind, ., INTERFACE, ;, }, @, Override, public, boolean, isOrdinaryFunction, (, ), {, return, kind, ==, Kind, ., ORDINARY]
[;, }, @, Override, public, boolean, isOrdinaryFunction, (, ), {, return, kind, ==, Kind, ., ORDINARY, ;, }, public, boolean]
[., INTERFACE, ;, }, @, Override, public, boolean, isOrdinaryFunction, (, ), {, return, kind, ==, Kind, ., ORDINARY, ;, }]
[;, }, public, boolean, makesStructs, (, ), {, if, (, !, isConstructor, (, ), ), {, return, false, ;, }]
[==, Kind, ., ORDINARY, ;, }, public, boolean, makesStructs, (, ), {, if, (, !, isConstructor, (, ), ), {]
[;, }, public, boolean, makesStructs, (, ), {, if, (, !, isConstructor, (, ), ), {, return, false, ;, }]
[., ORDINARY, ;, }, public, boolean, makesStructs, (, ), {, if, (, !, isConstructor, (, ), ), {, return, false]
[), {, return, false, ;, }, if, (, propAccess, ==, PropAccess, ., STRUCT, ), {, return, true, ;, }, FunctionType]
[), {, return, false, ;, }, if, (, propAccess, ==, PropAccess, ., STRUCT, ), {, return, true, ;, }, FunctionType]
[;, }, if, (, propAccess, ==, PropAccess, ., STRUCT, ), {, return, true, ;, }, FunctionType, superc, =, getSuperClassConstructor, (]
[), {, return, true, ;, }, FunctionType, superc, =, getSuperClassConstructor, (, ), ;, if, (, superc, !=, null, &&, superc]
[==, PropAccess, ., STRUCT, ), {, return, true, ;, }, FunctionType, superc, =, getSuperClassConstructor, (, ), ;, if, (, superc]
[), {, return, true, ;, }, FunctionType, superc, =, getSuperClassConstructor, (, ), ;, if, (, superc, !=, null, &&, superc]
[., STRUCT, ), {, return, true, ;, }, FunctionType, superc, =, getSuperClassConstructor, (, ), ;, if, (, superc, !=, null]
[;, }, FunctionType, superc, =, getSuperClassConstructor, (, ), ;, if, (, superc, !=, null, &&, superc, ., makesStructs, (, )]
[;, if, (, superc, !=, null, &&, superc, ., makesStructs, (, ), ), {, setStruct, (, ), ;, return, true]
[), {, setStruct, (, ), ;, return, true, ;, }, return, false, ;, }, public, boolean, makesDicts, (, ), {]
[&&, superc, ., makesStructs, (, ), ), {, setStruct, (, ), ;, return, true, ;, }, return, false, ;, }]
[!=, null, &&, superc, ., makesStructs, (, ), ), {, setStruct, (, ), ;, return, true, ;, }, return, false]
[&&, superc, ., makesStructs, (, ), ), {, setStruct, (, ), ;, return, true, ;, }, return, false, ;, }]
[), {, setStruct, (, ), ;, return, true, ;, }, return, false, ;, }, public, boolean, makesDicts, (, ), {]
[., makesStructs, (, ), ), {, setStruct, (, ), ;, return, true, ;, }, return, false, ;, }, public, boolean]
[;, return, true, ;, }, return, false, ;, }, public, boolean, makesDicts, (, ), {, if, (, !, isConstructor, (]
[;, }, return, false, ;, }, public, boolean, makesDicts, (, ), {, if, (, !, isConstructor, (, ), ), {]
[;, }, public, boolean, makesDicts, (, ), {, if, (, !, isConstructor, (, ), ), {, return, false, ;, }]
[), {, return, false, ;, }, if, (, propAccess, ==, PropAccess, ., DICT, ), {, return, true, ;, }, FunctionType]
[), {, return, false, ;, }, if, (, propAccess, ==, PropAccess, ., DICT, ), {, return, true, ;, }, FunctionType]
[;, }, if, (, propAccess, ==, PropAccess, ., DICT, ), {, return, true, ;, }, FunctionType, superc, =, getSuperClassConstructor, (]
[), {, return, true, ;, }, FunctionType, superc, =, getSuperClassConstructor, (, ), ;, if, (, superc, !=, null, &&, superc]
[==, PropAccess, ., DICT, ), {, return, true, ;, }, FunctionType, superc, =, getSuperClassConstructor, (, ), ;, if, (, superc]
[), {, return, true, ;, }, FunctionType, superc, =, getSuperClassConstructor, (, ), ;, if, (, superc, !=, null, &&, superc]
[., DICT, ), {, return, true, ;, }, FunctionType, superc, =, getSuperClassConstructor, (, ), ;, if, (, superc, !=, null]
[;, }, FunctionType, superc, =, getSuperClassConstructor, (, ), ;, if, (, superc, !=, null, &&, superc, ., makesDicts, (, )]
[;, if, (, superc, !=, null, &&, superc, ., makesDicts, (, ), ), {, setDict, (, ), ;, return, true]
[), {, setDict, (, ), ;, return, true, ;, }, return, false, ;, }, public, void, setStruct, (, ), {]
[&&, superc, ., makesDicts, (, ), ), {, setDict, (, ), ;, return, true, ;, }, return, false, ;, }]
[!=, null, &&, superc, ., makesDicts, (, ), ), {, setDict, (, ), ;, return, true, ;, }, return, false]
[&&, superc, ., makesDicts, (, ), ), {, setDict, (, ), ;, return, true, ;, }, return, false, ;, }]
[), {, setDict, (, ), ;, return, true, ;, }, return, false, ;, }, public, void, setStruct, (, ), {]
[., makesDicts, (, ), ), {, setDict, (, ), ;, return, true, ;, }, return, false, ;, }, public, void]
[;, return, true, ;, }, return, false, ;, }, public, void, setStruct, (, ), {, propAccess, =, PropAccess, ., STRUCT]
[;, }, return, false, ;, }, public, void, setStruct, (, ), {, propAccess, =, PropAccess, ., STRUCT, ;, }, public]
[;, }, public, void, setStruct, (, ), {, propAccess, =, PropAccess, ., STRUCT, ;, }, public, void, setDict, (, )]
[=, PropAccess, ., STRUCT, ;, }, public, void, setDict, (, ), {, propAccess, =, PropAccess, ., DICT, ;, }, @]
[;, }, public, void, setDict, (, ), {, propAccess, =, PropAccess, ., DICT, ;, }, @, Override, public, FunctionType, toMaybeFunctionType]
[., STRUCT, ;, }, public, void, setDict, (, ), {, propAccess, =, PropAccess, ., DICT, ;, }, @, Override, public]
[=, PropAccess, ., DICT, ;, }, @, Override, public, FunctionType, toMaybeFunctionType, (, ), {, return, this, ;, }, @, Override]
[;, }, @, Override, public, FunctionType, toMaybeFunctionType, (, ), {, return, this, ;, }, @, Override, public, boolean, canBeCalled, (]
[., DICT, ;, }, @, Override, public, FunctionType, toMaybeFunctionType, (, ), {, return, this, ;, }, @, Override, public, boolean]
[;, }, @, Override, public, boolean, canBeCalled, (, ), {, return, true, ;, }, public, boolean, hasImplementedInterfaces, (, ), {]
[;, }, public, boolean, hasImplementedInterfaces, (, ), {, if, (, !, implementedInterfaces, ., isEmpty, (, ), ), {, return, true]
[), {, return, true, ;, }, FunctionType, superCtor, =, isConstructor, (, ), ?, getSuperClassConstructor, (, ), :, null, ;, if]
[), {, return, true, ;, }, FunctionType, superCtor, =, isConstructor, (, ), ?, getSuperClassConstructor, (, ), :, null, ;, if]
[., isEmpty, (, ), ), {, return, true, ;, }, FunctionType, superCtor, =, isConstructor, (, ), ?, getSuperClassConstructor, (, )]
[;, }, FunctionType, superCtor, =, isConstructor, (, ), ?, getSuperClassConstructor, (, ), :, null, ;, if, (, superCtor, !=, null]
[;, if, (, superCtor, !=, null, ), {, return, superCtor, ., hasImplementedInterfaces, (, ), ;, }, return, false, ;, }]
[?, getSuperClassConstructor, (, ), :, null, ;, if, (, superCtor, !=, null, ), {, return, superCtor, ., hasImplementedInterfaces, (, )]
[:, null, ;, if, (, superCtor, !=, null, ), {, return, superCtor, ., hasImplementedInterfaces, (, ), ;, }, return, false]
[;, if, (, superCtor, !=, null, ), {, return, superCtor, ., hasImplementedInterfaces, (, ), ;, }, return, false, ;, }]
[), {, return, superCtor, ., hasImplementedInterfaces, (, ), ;, }, return, false, ;, }, public, Iterable, <, Node, >, getParameters]
[!=, null, ), {, return, superCtor, ., hasImplementedInterfaces, (, ), ;, }, return, false, ;, }, public, Iterable, <, Node]
[), {, return, superCtor, ., hasImplementedInterfaces, (, ), ;, }, return, false, ;, }, public, Iterable, <, Node, >, getParameters]
[;, }, return, false, ;, }, public, Iterable, <, Node, >, getParameters, (, ), {, Node, n, =, getParametersNode, (]
[., hasImplementedInterfaces, (, ), ;, }, return, false, ;, }, public, Iterable, <, Node, >, getParameters, (, ), {, Node]
[;, }, public, Iterable, <, Node, >, getParameters, (, ), {, Node, n, =, getParametersNode, (, ), ;, if, (]
[;, if, (, n, !=, null, ), {, return, n, ., children, (, ), ;, }, else, {, return, Collections]
[), {, return, n, ., children, (, ), ;, }, else, {, return, Collections, ., emptySet, (, ), ;, }]
[!=, null, ), {, return, n, ., children, (, ), ;, }, else, {, return, Collections, ., emptySet, (, )]
[), {, return, n, ., children, (, ), ;, }, else, {, return, Collections, ., emptySet, (, ), ;, }]
[;, }, else, {, return, Collections, ., emptySet, (, ), ;, }, }, public, Node, getParametersNode, (, ), {, return]
[., children, (, ), ;, }, else, {, return, Collections, ., emptySet, (, ), ;, }, }, public, Node, getParametersNode]
[;, }, }, public, Node, getParametersNode, (, ), {, return, call, ., parameters, ;, }, public, int, getMinArguments, (, )]
[., emptySet, (, ), ;, }, }, public, Node, getParametersNode, (, ), {, return, call, ., parameters, ;, }, public]
[;, }, public, int, getMinArguments, (, ), {, int, i, =, 0, ;, int, min, =, 0, ;, for, (]
[., parameters, ;, }, public, int, getMinArguments, (, ), {, int, i, =, 0, ;, int, min, =, 0, ;]
[;, int, min, =, 0, ;, for, (, Node, n, :, getParameters, (, ), ), {, i, ++, ;, if]
[;, for, (, Node, n, :, getParameters, (, ), ), {, i, ++, ;, if, (, !, n, ., isOptionalArg]
[), {, i, ++, ;, if, (, !, n, ., isOptionalArg, (, ), &&, !, n, ., isVarArgs, (, )]
[;, if, (, !, n, ., isOptionalArg, (, ), &&, !, n, ., isVarArgs, (, ), ), {, min, =]
[++, ;, if, (, !, n, ., isOptionalArg, (, ), &&, !, n, ., isVarArgs, (, ), ), {, min]
[), {, min, =, i, ;, }, }, return, min, ;, }, public, int, getMaxArguments, (, ), {, Node, params]
[&&, !, n, ., isVarArgs, (, ), ), {, min, =, i, ;, }, }, return, min, ;, }, public]
[&&, !, n, ., isVarArgs, (, ), ), {, min, =, i, ;, }, }, return, min, ;, }, public]
[., isOptionalArg, (, ), &&, !, n, ., isVarArgs, (, ), ), {, min, =, i, ;, }, }, return]
[), {, min, =, i, ;, }, }, return, min, ;, }, public, int, getMaxArguments, (, ), {, Node, params]
[), {, min, =, i, ;, }, }, return, min, ;, }, public, int, getMaxArguments, (, ), {, Node, params]
[., isVarArgs, (, ), ), {, min, =, i, ;, }, }, return, min, ;, }, public, int, getMaxArguments, (]
[=, i, ;, }, }, return, min, ;, }, public, int, getMaxArguments, (, ), {, Node, params, =, getParametersNode, (]
[;, }, }, return, min, ;, }, public, int, getMaxArguments, (, ), {, Node, params, =, getParametersNode, (, ), ;]
[;, }, public, int, getMaxArguments, (, ), {, Node, params, =, getParametersNode, (, ), ;, if, (, params, !=, null]
[;, if, (, params, !=, null, ), {, Node, lastParam, =, params, ., getLastChild, (, ), ;, if, (, lastParam]
[), {, Node, lastParam, =, params, ., getLastChild, (, ), ;, if, (, lastParam, ==, null, ||, !, lastParam, .]
[!=, null, ), {, Node, lastParam, =, params, ., getLastChild, (, ), ;, if, (, lastParam, ==, null, ||, !]
[), {, Node, lastParam, =, params, ., getLastChild, (, ), ;, if, (, lastParam, ==, null, ||, !, lastParam, .]
[;, if, (, lastParam, ==, null, ||, !, lastParam, ., isVarArgs, (, ), ), {, return, params, ., getChildCount, (]
[., getLastChild, (, ), ;, if, (, lastParam, ==, null, ||, !, lastParam, ., isVarArgs, (, ), ), {, return]
[), {, return, params, ., getChildCount, (, ), ;, }, }, return, Integer, ., MAX_VALUE, ;, }, public, JSType, getReturnType]
[||, !, lastParam, ., isVarArgs, (, ), ), {, return, params, ., getChildCount, (, ), ;, }, }, return, Integer]
[==, null, ||, !, lastParam, ., isVarArgs, (, ), ), {, return, params, ., getChildCount, (, ), ;, }, }]
[||, !, lastParam, ., isVarArgs, (, ), ), {, return, params, ., getChildCount, (, ), ;, }, }, return, Integer]
[), {, return, params, ., getChildCount, (, ), ;, }, }, return, Integer, ., MAX_VALUE, ;, }, public, JSType, getReturnType]
[), {, return, params, ., getChildCount, (, ), ;, }, }, return, Integer, ., MAX_VALUE, ;, }, public, JSType, getReturnType]
[., isVarArgs, (, ), ), {, return, params, ., getChildCount, (, ), ;, }, }, return, Integer, ., MAX_VALUE, ;]
[;, }, }, return, Integer, ., MAX_VALUE, ;, }, public, JSType, getReturnType, (, ), {, return, call, ., returnType, ;]
[., getChildCount, (, ), ;, }, }, return, Integer, ., MAX_VALUE, ;, }, public, JSType, getReturnType, (, ), {, return]
[;, }, public, JSType, getReturnType, (, ), {, return, call, ., returnType, ;, }, public, boolean, isReturnTypeInferred, (, ), {]
[., MAX_VALUE, ;, }, public, JSType, getReturnType, (, ), {, return, call, ., returnType, ;, }, public, boolean, isReturnTypeInferred, (]
[;, }, public, boolean, isReturnTypeInferred, (, ), {, return, call, ., returnTypeInferred, ;, }, ArrowType, getInternalArrowType, (, ), {, return]
[., returnType, ;, }, public, boolean, isReturnTypeInferred, (, ), {, return, call, ., returnTypeInferred, ;, }, ArrowType, getInternalArrowType, (, )]
[;, }, ArrowType, getInternalArrowType, (, ), {, return, call, ;, }, @, Override, public, Property, getSlot, (, String, name, )]
[., returnTypeInferred, ;, }, ArrowType, getInternalArrowType, (, ), {, return, call, ;, }, @, Override, public, Property, getSlot, (, String]
[;, }, @, Override, public, Property, getSlot, (, String, name, ), {, if, (, "prototype", ., equals, (, name, )]
[), {, getPrototype, (, ), ;, return, prototypeSlot, ;, }, else, {, return, super, ., getSlot, (, name, ), ;]
[., equals, (, name, ), ), {, getPrototype, (, ), ;, return, prototypeSlot, ;, }, else, {, return, super, .]
[), ), {, getPrototype, (, ), ;, return, prototypeSlot, ;, }, else, {, return, super, ., getSlot, (, name, )]
[;, return, prototypeSlot, ;, }, else, {, return, super, ., getSlot, (, name, ), ;, }, }, @, Override, public]
[;, }, else, {, return, super, ., getSlot, (, name, ), ;, }, }, @, Override, public, Set, <, String]
[;, }, }, @, Override, public, Set, <, String, >, getOwnPropertyNames, (, ), {, if, (, prototypeSlot, ==, null, )]
[., getSlot, (, name, ), ;, }, }, @, Override, public, Set, <, String, >, getOwnPropertyNames, (, ), {, if]
[), ;, }, }, @, Override, public, Set, <, String, >, getOwnPropertyNames, (, ), {, if, (, prototypeSlot, ==, null]
[), {, return, super, ., getOwnPropertyNames, (, ), ;, }, else, {, Set, <, String, >, names, =, Sets, .]
[==, null, ), {, return, super, ., getOwnPropertyNames, (, ), ;, }, else, {, Set, <, String, >, names, =]
[), {, return, super, ., getOwnPropertyNames, (, ), ;, }, else, {, Set, <, String, >, names, =, Sets, .]
[;, }, else, {, Set, <, String, >, names, =, Sets, ., newHashSet, (, "prototype", ), ;, names, ., addAll]
[., getOwnPropertyNames, (, ), ;, }, else, {, Set, <, String, >, names, =, Sets, ., newHashSet, (, "prototype", )]
[;, names, ., addAll, (, super, ., getOwnPropertyNames, (, ), ), ;, return, names, ;, }, }, public, ObjectType, getPrototype]
[., newHashSet, (, "prototype", ), ;, names, ., addAll, (, super, ., getOwnPropertyNames, (, ), ), ;, return, names, ;]
[), ;, names, ., addAll, (, super, ., getOwnPropertyNames, (, ), ), ;, return, names, ;, }, }, public, ObjectType]
[;, return, names, ;, }, }, public, ObjectType, getPrototype, (, ), {, if, (, prototypeSlot, ==, null, ), {, String]
[., addAll, (, super, ., getOwnPropertyNames, (, ), ), ;, return, names, ;, }, }, public, ObjectType, getPrototype, (, )]
[), ;, return, names, ;, }, }, public, ObjectType, getPrototype, (, ), {, if, (, prototypeSlot, ==, null, ), {]
[., getOwnPropertyNames, (, ), ), ;, return, names, ;, }, }, public, ObjectType, getPrototype, (, ), {, if, (, prototypeSlot]
[;, }, }, public, ObjectType, getPrototype, (, ), {, if, (, prototypeSlot, ==, null, ), {, String, refName, =, getReferenceName]
[), {, String, refName, =, getReferenceName, (, ), ;, if, (, refName, ==, null, ), {, setPrototypeNoCheck, (, registry, .]
[==, null, ), {, String, refName, =, getReferenceName, (, ), ;, if, (, refName, ==, null, ), {, setPrototypeNoCheck, (]
[), {, String, refName, =, getReferenceName, (, ), ;, if, (, refName, ==, null, ), {, setPrototypeNoCheck, (, registry, .]
[;, if, (, refName, ==, null, ), {, setPrototypeNoCheck, (, registry, ., getNativeObjectType, (, JSTypeNative, ., UNKNOWN_TYPE, ), ,, null]
[), {, setPrototypeNoCheck, (, registry, ., getNativeObjectType, (, JSTypeNative, ., UNKNOWN_TYPE, ), ,, null, ), ;, }, else, {, setPrototype]
[==, null, ), {, setPrototypeNoCheck, (, registry, ., getNativeObjectType, (, JSTypeNative, ., UNKNOWN_TYPE, ), ,, null, ), ;, }, else]
[), {, setPrototypeNoCheck, (, registry, ., getNativeObjectType, (, JSTypeNative, ., UNKNOWN_TYPE, ), ,, null, ), ;, }, else, {, setPrototype]
[;, }, else, {, setPrototype, (, new, PrototypeObjectType, (, registry, ,, getReferenceName, (, ), +, ".prototype", ,, registry, ., getNativeObjectType]
[,, null, ), ;, }, else, {, setPrototype, (, new, PrototypeObjectType, (, registry, ,, getReferenceName, (, ), +, ".prototype", ,]
[., getNativeObjectType, (, JSTypeNative, ., UNKNOWN_TYPE, ), ,, null, ), ;, }, else, {, setPrototype, (, new, PrototypeObjectType, (, registry]
[), ,, null, ), ;, }, else, {, setPrototype, (, new, PrototypeObjectType, (, registry, ,, getReferenceName, (, ), +, ".prototype"]
[., UNKNOWN_TYPE, ), ,, null, ), ;, }, else, {, setPrototype, (, new, PrototypeObjectType, (, registry, ,, getReferenceName, (, )]
[), ;, }, else, {, setPrototype, (, new, PrototypeObjectType, (, registry, ,, getReferenceName, (, ), +, ".prototype", ,, registry, .]
[;, }, }, return, (, ObjectType, ), prototypeSlot, ., getType, (, ), ;, }, public, void, setPrototypeBasedOn, (, ObjectType, baseType]
[,, null, ), ;, }, }, return, (, ObjectType, ), prototypeSlot, ., getType, (, ), ;, }, public, void, setPrototypeBasedOn]
[,, getReferenceName, (, ), +, ".prototype", ,, registry, ., getNativeObjectType, (, OBJECT_TYPE, ), ,, isNativeObjectType, (, ), ,, null, ,]
[,, registry, ., getNativeObjectType, (, OBJECT_TYPE, ), ,, isNativeObjectType, (, ), ,, null, ,, null, ), ,, null, ), ;]
[+, ".prototype", ,, registry, ., getNativeObjectType, (, OBJECT_TYPE, ), ,, isNativeObjectType, (, ), ,, null, ,, null, ), ,, null]
[,, registry, ., getNativeObjectType, (, OBJECT_TYPE, ), ,, isNativeObjectType, (, ), ,, null, ,, null, ), ,, null, ), ;]
[,, isNativeObjectType, (, ), ,, null, ,, null, ), ,, null, ), ;, }, }, return, (, ObjectType, ), prototypeSlot]
[., getNativeObjectType, (, OBJECT_TYPE, ), ,, isNativeObjectType, (, ), ,, null, ,, null, ), ,, null, ), ;, }, }]
[), ,, isNativeObjectType, (, ), ,, null, ,, null, ), ,, null, ), ;, }, }, return, (, ObjectType, )]
[,, null, ,, null, ), ,, null, ), ;, }, }, return, (, ObjectType, ), prototypeSlot, ., getType, (, )]
[,, null, ), ,, null, ), ;, }, }, return, (, ObjectType, ), prototypeSlot, ., getType, (, ), ;, }]
[), ,, null, ), ;, }, }, return, (, ObjectType, ), prototypeSlot, ., getType, (, ), ;, }, public, void]
[), ;, }, }, return, (, ObjectType, ), prototypeSlot, ., getType, (, ), ;, }, public, void, setPrototypeBasedOn, (, ObjectType]
[;, }, public, void, setPrototypeBasedOn, (, ObjectType, baseType, ), {, setPrototypeBasedOn, (, baseType, ,, null, ), ;, }, void, setPrototypeBasedOn]
[;, }, public, void, setPrototypeBasedOn, (, ObjectType, baseType, ), {, setPrototypeBasedOn, (, baseType, ,, null, ), ;, }, void, setPrototypeBasedOn]
[., getType, (, ), ;, }, public, void, setPrototypeBasedOn, (, ObjectType, baseType, ), {, setPrototypeBasedOn, (, baseType, ,, null, )]
[;, }, void, setPrototypeBasedOn, (, ObjectType, baseType, ,, Node, propertyNode, ), {, if, (, baseType, ., hasReferenceName, (, ), ||]
[,, null, ), ;, }, void, setPrototypeBasedOn, (, ObjectType, baseType, ,, Node, propertyNode, ), {, if, (, baseType, ., hasReferenceName]
[), ;, }, void, setPrototypeBasedOn, (, ObjectType, baseType, ,, Node, propertyNode, ), {, if, (, baseType, ., hasReferenceName, (, )]
[), {, baseType, =, new, PrototypeObjectType, (, registry, ,, getReferenceName, (, ), +, ".prototype", ,, baseType, ), ;, }, setPrototype]
[||, baseType, ., isFunctionPrototypeType, (, ), ), {, baseType, =, new, PrototypeObjectType, (, registry, ,, getReferenceName, (, ), +, ".prototype"]
[||, isNativeObjectType, (, ), ||, baseType, ., isFunctionPrototypeType, (, ), ), {, baseType, =, new, PrototypeObjectType, (, registry, ,, getReferenceName]
[., hasReferenceName, (, ), ||, isNativeObjectType, (, ), ||, baseType, ., isFunctionPrototypeType, (, ), ), {, baseType, =, new, PrototypeObjectType]
[||, baseType, ., isFunctionPrototypeType, (, ), ), {, baseType, =, new, PrototypeObjectType, (, registry, ,, getReferenceName, (, ), +, ".prototype"]
[), {, baseType, =, new, PrototypeObjectType, (, registry, ,, getReferenceName, (, ), +, ".prototype", ,, baseType, ), ;, }, setPrototype]
[., isFunctionPrototypeType, (, ), ), {, baseType, =, new, PrototypeObjectType, (, registry, ,, getReferenceName, (, ), +, ".prototype", ,, baseType]
[=, new, PrototypeObjectType, (, registry, ,, getReferenceName, (, ), +, ".prototype", ,, baseType, ), ;, }, setPrototype, (, baseType, ,]
[;, }, setPrototype, (, baseType, ,, propertyNode, ), ;, }, boolean, setPrototype, (, ObjectType, prototype, ,, Node, propertyNode, ), {]
[,, getReferenceName, (, ), +, ".prototype", ,, baseType, ), ;, }, setPrototype, (, baseType, ,, propertyNode, ), ;, }, boolean]
[,, baseType, ), ;, }, setPrototype, (, baseType, ,, propertyNode, ), ;, }, boolean, setPrototype, (, ObjectType, prototype, ,, Node]
[+, ".prototype", ,, baseType, ), ;, }, setPrototype, (, baseType, ,, propertyNode, ), ;, }, boolean, setPrototype, (, ObjectType, prototype]
[,, baseType, ), ;, }, setPrototype, (, baseType, ,, propertyNode, ), ;, }, boolean, setPrototype, (, ObjectType, prototype, ,, Node]
[), ;, }, setPrototype, (, baseType, ,, propertyNode, ), ;, }, boolean, setPrototype, (, ObjectType, prototype, ,, Node, propertyNode, )]
[;, }, boolean, setPrototype, (, ObjectType, prototype, ,, Node, propertyNode, ), {, if, (, prototype, ==, null, ), {, return]
[,, propertyNode, ), ;, }, boolean, setPrototype, (, ObjectType, prototype, ,, Node, propertyNode, ), {, if, (, prototype, ==, null]
[), ;, }, boolean, setPrototype, (, ObjectType, prototype, ,, Node, propertyNode, ), {, if, (, prototype, ==, null, ), {]
[), {, return, false, ;, }, if, (, isConstructor, (, ), &&, prototype, ==, getInstanceType, (, ), ), {, return]
[==, null, ), {, return, false, ;, }, if, (, isConstructor, (, ), &&, prototype, ==, getInstanceType, (, ), )]
[), {, return, false, ;, }, if, (, isConstructor, (, ), &&, prototype, ==, getInstanceType, (, ), ), {, return]
[;, }, if, (, isConstructor, (, ), &&, prototype, ==, getInstanceType, (, ), ), {, return, false, ;, }, return]
[), {, return, false, ;, }, return, setPrototypeNoCheck, (, prototype, ,, propertyNode, ), ;, }, private, boolean, setPrototypeNoCheck, (, ObjectType]
[&&, prototype, ==, getInstanceType, (, ), ), {, return, false, ;, }, return, setPrototypeNoCheck, (, prototype, ,, propertyNode, ), ;]
[), {, return, false, ;, }, return, setPrototypeNoCheck, (, prototype, ,, propertyNode, ), ;, }, private, boolean, setPrototypeNoCheck, (, ObjectType]
[==, getInstanceType, (, ), ), {, return, false, ;, }, return, setPrototypeNoCheck, (, prototype, ,, propertyNode, ), ;, }, private]
[), {, return, false, ;, }, return, setPrototypeNoCheck, (, prototype, ,, propertyNode, ), ;, }, private, boolean, setPrototypeNoCheck, (, ObjectType]
[;, }, return, setPrototypeNoCheck, (, prototype, ,, propertyNode, ), ;, }, private, boolean, setPrototypeNoCheck, (, ObjectType, prototype, ,, Node, propertyNode]
[;, }, private, boolean, setPrototypeNoCheck, (, ObjectType, prototype, ,, Node, propertyNode, ), {, ObjectType, oldPrototype, =, prototypeSlot, ==, null, ?]
[,, propertyNode, ), ;, }, private, boolean, setPrototypeNoCheck, (, ObjectType, prototype, ,, Node, propertyNode, ), {, ObjectType, oldPrototype, =, prototypeSlot]
[), ;, }, private, boolean, setPrototypeNoCheck, (, ObjectType, prototype, ,, Node, propertyNode, ), {, ObjectType, oldPrototype, =, prototypeSlot, ==, null]
[;, boolean, replacedPrototype, =, oldPrototype, !=, null, ;, this, ., prototypeSlot, =, new, Property, (, "prototype", ,, prototype, ,, true]
[?, null, :, (, ObjectType, ), prototypeSlot, ., getType, (, ), ;, boolean, replacedPrototype, =, oldPrototype, !=, null, ;, this]
[==, null, ?, null, :, (, ObjectType, ), prototypeSlot, ., getType, (, ), ;, boolean, replacedPrototype, =, oldPrototype, !=, null]
[?, null, :, (, ObjectType, ), prototypeSlot, ., getType, (, ), ;, boolean, replacedPrototype, =, oldPrototype, !=, null, ;, this]
[:, (, ObjectType, ), prototypeSlot, ., getType, (, ), ;, boolean, replacedPrototype, =, oldPrototype, !=, null, ;, this, ., prototypeSlot]
[;, boolean, replacedPrototype, =, oldPrototype, !=, null, ;, this, ., prototypeSlot, =, new, Property, (, "prototype", ,, prototype, ,, true]
[;, boolean, replacedPrototype, =, oldPrototype, !=, null, ;, this, ., prototypeSlot, =, new, Property, (, "prototype", ,, prototype, ,, true]
[., getType, (, ), ;, boolean, replacedPrototype, =, oldPrototype, !=, null, ;, this, ., prototypeSlot, =, new, Property, (, "prototype"]
[;, this, ., prototypeSlot, =, new, Property, (, "prototype", ,, prototype, ,, true, ,, propertyNode, ==, null, ?, source, :]
[!=, null, ;, this, ., prototypeSlot, =, new, Property, (, "prototype", ,, prototype, ,, true, ,, propertyNode, ==, null, ?]
[;, this, ., prototypeSlot, =, new, Property, (, "prototype", ,, prototype, ,, true, ,, propertyNode, ==, null, ?, source, :]
[=, new, Property, (, "prototype", ,, prototype, ,, true, ,, propertyNode, ==, null, ?, source, :, propertyNode, ), ;, prototype]
[., prototypeSlot, =, new, Property, (, "prototype", ,, prototype, ,, true, ,, propertyNode, ==, null, ?, source, :, propertyNode, )]
[;, prototype, ., setOwnerFunction, (, this, ), ;, if, (, oldPrototype, !=, null, ), {, oldPrototype, ., setOwnerFunction, (, null]
[,, prototype, ,, true, ,, propertyNode, ==, null, ?, source, :, propertyNode, ), ;, prototype, ., setOwnerFunction, (, this, )]
[,, true, ,, propertyNode, ==, null, ?, source, :, propertyNode, ), ;, prototype, ., setOwnerFunction, (, this, ), ;, if]
[,, propertyNode, ==, null, ?, source, :, propertyNode, ), ;, prototype, ., setOwnerFunction, (, this, ), ;, if, (, oldPrototype]
[), ;, prototype, ., setOwnerFunction, (, this, ), ;, if, (, oldPrototype, !=, null, ), {, oldPrototype, ., setOwnerFunction, (]
[?, source, :, propertyNode, ), ;, prototype, ., setOwnerFunction, (, this, ), ;, if, (, oldPrototype, !=, null, ), {]
[==, null, ?, source, :, propertyNode, ), ;, prototype, ., setOwnerFunction, (, this, ), ;, if, (, oldPrototype, !=, null]
[?, source, :, propertyNode, ), ;, prototype, ., setOwnerFunction, (, this, ), ;, if, (, oldPrototype, !=, null, ), {]
[:, propertyNode, ), ;, prototype, ., setOwnerFunction, (, this, ), ;, if, (, oldPrototype, !=, null, ), {, oldPrototype, .]
[), ;, prototype, ., setOwnerFunction, (, this, ), ;, if, (, oldPrototype, !=, null, ), {, oldPrototype, ., setOwnerFunction, (]
[;, if, (, oldPrototype, !=, null, ), {, oldPrototype, ., setOwnerFunction, (, null, ), ;, }, if, (, isConstructor, (]
[., setOwnerFunction, (, this, ), ;, if, (, oldPrototype, !=, null, ), {, oldPrototype, ., setOwnerFunction, (, null, ), ;]
[), ;, if, (, oldPrototype, !=, null, ), {, oldPrototype, ., setOwnerFunction, (, null, ), ;, }, if, (, isConstructor]
[), {, oldPrototype, ., setOwnerFunction, (, null, ), ;, }, if, (, isConstructor, (, ), ||, isInterface, (, ), )]
[!=, null, ), {, oldPrototype, ., setOwnerFunction, (, null, ), ;, }, if, (, isConstructor, (, ), ||, isInterface, (]
[), {, oldPrototype, ., setOwnerFunction, (, null, ), ;, }, if, (, isConstructor, (, ), ||, isInterface, (, ), )]
[;, }, if, (, isConstructor, (, ), ||, isInterface, (, ), ), {, FunctionType, superClass, =, getSuperClassConstructor, (, ), ;]
[., setOwnerFunction, (, null, ), ;, }, if, (, isConstructor, (, ), ||, isInterface, (, ), ), {, FunctionType, superClass]
[), ;, }, if, (, isConstructor, (, ), ||, isInterface, (, ), ), {, FunctionType, superClass, =, getSuperClassConstructor, (, )]
[), {, FunctionType, superClass, =, getSuperClassConstructor, (, ), ;, if, (, superClass, !=, null, ), {, superClass, ., addSubType, (]
[||, isInterface, (, ), ), {, FunctionType, superClass, =, getSuperClassConstructor, (, ), ;, if, (, superClass, !=, null, ), {]
[), {, FunctionType, superClass, =, getSuperClassConstructor, (, ), ;, if, (, superClass, !=, null, ), {, superClass, ., addSubType, (]
[;, if, (, superClass, !=, null, ), {, superClass, ., addSubType, (, this, ), ;, }, if, (, isInterface, (]
[), {, superClass, ., addSubType, (, this, ), ;, }, if, (, isInterface, (, ), ), {, for, (, ObjectType]
[!=, null, ), {, superClass, ., addSubType, (, this, ), ;, }, if, (, isInterface, (, ), ), {, for]
[), {, superClass, ., addSubType, (, this, ), ;, }, if, (, isInterface, (, ), ), {, for, (, ObjectType]
[;, }, if, (, isInterface, (, ), ), {, for, (, ObjectType, interfaceType, :, getExtendedInterfaces, (, ), ), {, if]
[., addSubType, (, this, ), ;, }, if, (, isInterface, (, ), ), {, for, (, ObjectType, interfaceType, :, getExtendedInterfaces]
[), ;, }, if, (, isInterface, (, ), ), {, for, (, ObjectType, interfaceType, :, getExtendedInterfaces, (, ), ), {]
[), {, for, (, ObjectType, interfaceType, :, getExtendedInterfaces, (, ), ), {, if, (, interfaceType, ., getConstructor, (, ), !=]
[), {, if, (, interfaceType, ., getConstructor, (, ), !=, null, ), {, interfaceType, ., getConstructor, (, ), ., addSubType]
[), {, interfaceType, ., getConstructor, (, ), ., addSubType, (, this, ), ;, }, }, }, }, if, (, replacedPrototype]
[!=, null, ), {, interfaceType, ., getConstructor, (, ), ., addSubType, (, this, ), ;, }, }, }, }, if]
[., getConstructor, (, ), !=, null, ), {, interfaceType, ., getConstructor, (, ), ., addSubType, (, this, ), ;, }]
[), {, interfaceType, ., getConstructor, (, ), ., addSubType, (, this, ), ;, }, }, }, }, if, (, replacedPrototype]
[;, }, }, }, }, if, (, replacedPrototype, ), {, clearCachedValues, (, ), ;, }, return, true, ;, }, public]
[., addSubType, (, this, ), ;, }, }, }, }, if, (, replacedPrototype, ), {, clearCachedValues, (, ), ;, }]
[., getConstructor, (, ), ., addSubType, (, this, ), ;, }, }, }, }, if, (, replacedPrototype, ), {, clearCachedValues]
[), ;, }, }, }, }, if, (, replacedPrototype, ), {, clearCachedValues, (, ), ;, }, return, true, ;, }]
[), {, clearCachedValues, (, ), ;, }, return, true, ;, }, public, Iterable, <, ObjectType, >, getAllImplementedInterfaces, (, ), {]
[;, }, return, true, ;, }, public, Iterable, <, ObjectType, >, getAllImplementedInterfaces, (, ), {, Set, <, ObjectType, >, interfaces]
[;, }, public, Iterable, <, ObjectType, >, getAllImplementedInterfaces, (, ), {, Set, <, ObjectType, >, interfaces, =, Sets, ., newLinkedHashSet]
[;, for, (, ObjectType, type, :, getImplementedInterfaces, (, ), ), {, addRelatedInterfaces, (, type, ,, interfaces, ), ;, }, return]
[., newLinkedHashSet, (, ), ;, for, (, ObjectType, type, :, getImplementedInterfaces, (, ), ), {, addRelatedInterfaces, (, type, ,, interfaces]
[), {, addRelatedInterfaces, (, type, ,, interfaces, ), ;, }, return, interfaces, ;, }, private, void, addRelatedInterfaces, (, ObjectType, instance]
[;, }, return, interfaces, ;, }, private, void, addRelatedInterfaces, (, ObjectType, instance, ,, Set, <, ObjectType, >, set, ), {]
[,, interfaces, ), ;, }, return, interfaces, ;, }, private, void, addRelatedInterfaces, (, ObjectType, instance, ,, Set, <, ObjectType, >]
[), ;, }, return, interfaces, ;, }, private, void, addRelatedInterfaces, (, ObjectType, instance, ,, Set, <, ObjectType, >, set, )]
[;, }, private, void, addRelatedInterfaces, (, ObjectType, instance, ,, Set, <, ObjectType, >, set, ), {, FunctionType, constructor, =, instance]
[;, if, (, constructor, !=, null, ), {, if, (, !, constructor, ., isInterface, (, ), ), {, return, ;]
[., getConstructor, (, ), ;, if, (, constructor, !=, null, ), {, if, (, !, constructor, ., isInterface, (, )]
[), {, if, (, !, constructor, ., isInterface, (, ), ), {, return, ;, }, set, ., add, (, instance]
[!=, null, ), {, if, (, !, constructor, ., isInterface, (, ), ), {, return, ;, }, set, ., add]
[), {, if, (, !, constructor, ., isInterface, (, ), ), {, return, ;, }, set, ., add, (, instance]
[), {, return, ;, }, set, ., add, (, instance, ), ;, for, (, ObjectType, interfaceType, :, instance, ., getCtorExtendedInterfaces]
[), {, return, ;, }, set, ., add, (, instance, ), ;, for, (, ObjectType, interfaceType, :, instance, ., getCtorExtendedInterfaces]
[., isInterface, (, ), ), {, return, ;, }, set, ., add, (, instance, ), ;, for, (, ObjectType, interfaceType]
[;, for, (, ObjectType, interfaceType, :, instance, ., getCtorExtendedInterfaces, (, ), ), {, addRelatedInterfaces, (, interfaceType, ,, set, ), ;]
[., add, (, instance, ), ;, for, (, ObjectType, interfaceType, :, instance, ., getCtorExtendedInterfaces, (, ), ), {, addRelatedInterfaces, (]
[), ;, for, (, ObjectType, interfaceType, :, instance, ., getCtorExtendedInterfaces, (, ), ), {, addRelatedInterfaces, (, interfaceType, ,, set, )]
[), {, addRelatedInterfaces, (, interfaceType, ,, set, ), ;, }, }, }, public, Iterable, <, ObjectType, >, getImplementedInterfaces, (, )]
[., getCtorExtendedInterfaces, (, ), ), {, addRelatedInterfaces, (, interfaceType, ,, set, ), ;, }, }, }, public, Iterable, <, ObjectType]
[;, }, }, }, public, Iterable, <, ObjectType, >, getImplementedInterfaces, (, ), {, FunctionType, superCtor, =, isConstructor, (, ), ?]
[,, set, ), ;, }, }, }, public, Iterable, <, ObjectType, >, getImplementedInterfaces, (, ), {, FunctionType, superCtor, =, isConstructor]
[), ;, }, }, }, public, Iterable, <, ObjectType, >, getImplementedInterfaces, (, ), {, FunctionType, superCtor, =, isConstructor, (, )]
[;, if, (, superCtor, ==, null, ), {, return, implementedInterfaces, ;, }, else, {, return, Iterables, ., concat, (, implementedInterfaces]
[?, getSuperClassConstructor, (, ), :, null, ;, if, (, superCtor, ==, null, ), {, return, implementedInterfaces, ;, }, else, {]
[:, null, ;, if, (, superCtor, ==, null, ), {, return, implementedInterfaces, ;, }, else, {, return, Iterables, ., concat]
[;, if, (, superCtor, ==, null, ), {, return, implementedInterfaces, ;, }, else, {, return, Iterables, ., concat, (, implementedInterfaces]
[), {, return, implementedInterfaces, ;, }, else, {, return, Iterables, ., concat, (, implementedInterfaces, ,, superCtor, ., getImplementedInterfaces, (, )]
[==, null, ), {, return, implementedInterfaces, ;, }, else, {, return, Iterables, ., concat, (, implementedInterfaces, ,, superCtor, ., getImplementedInterfaces]
[), {, return, implementedInterfaces, ;, }, else, {, return, Iterables, ., concat, (, implementedInterfaces, ,, superCtor, ., getImplementedInterfaces, (, )]
[;, }, else, {, return, Iterables, ., concat, (, implementedInterfaces, ,, superCtor, ., getImplementedInterfaces, (, ), ), ;, }, }]
[;, }, }, public, Iterable, <, ObjectType, >, getOwnImplementedInterfaces, (, ), {, return, implementedInterfaces, ;, }, public, void, setImplementedInterfaces, (]
[., concat, (, implementedInterfaces, ,, superCtor, ., getImplementedInterfaces, (, ), ), ;, }, }, public, Iterable, <, ObjectType, >, getOwnImplementedInterfaces]
[,, superCtor, ., getImplementedInterfaces, (, ), ), ;, }, }, public, Iterable, <, ObjectType, >, getOwnImplementedInterfaces, (, ), {, return]
[), ;, }, }, public, Iterable, <, ObjectType, >, getOwnImplementedInterfaces, (, ), {, return, implementedInterfaces, ;, }, public, void, setImplementedInterfaces]
[., getImplementedInterfaces, (, ), ), ;, }, }, public, Iterable, <, ObjectType, >, getOwnImplementedInterfaces, (, ), {, return, implementedInterfaces, ;]
[;, }, public, void, setImplementedInterfaces, (, List, <, ObjectType, >, implementedInterfaces, ), {, if, (, isConstructor, (, ), ), {]
[), {, for, (, ObjectType, type, :, implementedInterfaces, ), {, registry, ., registerTypeImplementingInterface, (, this, ,, type, ), ;, }]
[), {, registry, ., registerTypeImplementingInterface, (, this, ,, type, ), ;, }, this, ., implementedInterfaces, =, ImmutableList, ., copyOf, (]
[;, }, this, ., implementedInterfaces, =, ImmutableList, ., copyOf, (, implementedInterfaces, ), ;, }, else, {, throw, new, UnsupportedOperationException, (]
[., registerTypeImplementingInterface, (, this, ,, type, ), ;, }, this, ., implementedInterfaces, =, ImmutableList, ., copyOf, (, implementedInterfaces, ), ;]
[,, type, ), ;, }, this, ., implementedInterfaces, =, ImmutableList, ., copyOf, (, implementedInterfaces, ), ;, }, else, {, throw]
[), ;, }, this, ., implementedInterfaces, =, ImmutableList, ., copyOf, (, implementedInterfaces, ), ;, }, else, {, throw, new, UnsupportedOperationException]
[=, ImmutableList, ., copyOf, (, implementedInterfaces, ), ;, }, else, {, throw, new, UnsupportedOperationException, (, ), ;, }, }, public]
[., implementedInterfaces, =, ImmutableList, ., copyOf, (, implementedInterfaces, ), ;, }, else, {, throw, new, UnsupportedOperationException, (, ), ;, }]
[;, }, else, {, throw, new, UnsupportedOperationException, (, ), ;, }, }, public, Iterable, <, ObjectType, >, getAllExtendedInterfaces, (, )]
[., copyOf, (, implementedInterfaces, ), ;, }, else, {, throw, new, UnsupportedOperationException, (, ), ;, }, }, public, Iterable, <]
[), ;, }, else, {, throw, new, UnsupportedOperationException, (, ), ;, }, }, public, Iterable, <, ObjectType, >, getAllExtendedInterfaces, (]
[;, }, }, public, Iterable, <, ObjectType, >, getAllExtendedInterfaces, (, ), {, Set, <, ObjectType, >, extendedInterfaces, =, Sets, .]
[;, for, (, ObjectType, interfaceType, :, getExtendedInterfaces, (, ), ), {, addRelatedExtendedInterfaces, (, interfaceType, ,, extendedInterfaces, ), ;, }, return]
[., newLinkedHashSet, (, ), ;, for, (, ObjectType, interfaceType, :, getExtendedInterfaces, (, ), ), {, addRelatedExtendedInterfaces, (, interfaceType, ,, extendedInterfaces]
[), {, addRelatedExtendedInterfaces, (, interfaceType, ,, extendedInterfaces, ), ;, }, return, extendedInterfaces, ;, }, private, void, addRelatedExtendedInterfaces, (, ObjectType, instance]
[;, }, return, extendedInterfaces, ;, }, private, void, addRelatedExtendedInterfaces, (, ObjectType, instance, ,, Set, <, ObjectType, >, set, ), {]
[,, extendedInterfaces, ), ;, }, return, extendedInterfaces, ;, }, private, void, addRelatedExtendedInterfaces, (, ObjectType, instance, ,, Set, <, ObjectType, >]
[), ;, }, return, extendedInterfaces, ;, }, private, void, addRelatedExtendedInterfaces, (, ObjectType, instance, ,, Set, <, ObjectType, >, set, )]
[;, }, private, void, addRelatedExtendedInterfaces, (, ObjectType, instance, ,, Set, <, ObjectType, >, set, ), {, FunctionType, constructor, =, instance]
[;, if, (, constructor, !=, null, ), {, set, ., add, (, instance, ), ;, for, (, ObjectType, interfaceType, :]
[., getConstructor, (, ), ;, if, (, constructor, !=, null, ), {, set, ., add, (, instance, ), ;, for]
[), {, set, ., add, (, instance, ), ;, for, (, ObjectType, interfaceType, :, constructor, ., getExtendedInterfaces, (, ), )]
[!=, null, ), {, set, ., add, (, instance, ), ;, for, (, ObjectType, interfaceType, :, constructor, ., getExtendedInterfaces, (]
[), {, set, ., add, (, instance, ), ;, for, (, ObjectType, interfaceType, :, constructor, ., getExtendedInterfaces, (, ), )]
[;, for, (, ObjectType, interfaceType, :, constructor, ., getExtendedInterfaces, (, ), ), {, addRelatedExtendedInterfaces, (, interfaceType, ,, set, ), ;]
[., add, (, instance, ), ;, for, (, ObjectType, interfaceType, :, constructor, ., getExtendedInterfaces, (, ), ), {, addRelatedExtendedInterfaces, (]
[), ;, for, (, ObjectType, interfaceType, :, constructor, ., getExtendedInterfaces, (, ), ), {, addRelatedExtendedInterfaces, (, interfaceType, ,, set, )]
[), {, addRelatedExtendedInterfaces, (, interfaceType, ,, set, ), ;, }, }, }, public, Iterable, <, ObjectType, >, getExtendedInterfaces, (, )]
[., getExtendedInterfaces, (, ), ), {, addRelatedExtendedInterfaces, (, interfaceType, ,, set, ), ;, }, }, }, public, Iterable, <, ObjectType]
[;, }, }, }, public, Iterable, <, ObjectType, >, getExtendedInterfaces, (, ), {, return, extendedInterfaces, ;, }, public, int, getExtendedInterfacesCount]
[,, set, ), ;, }, }, }, public, Iterable, <, ObjectType, >, getExtendedInterfaces, (, ), {, return, extendedInterfaces, ;, }]
[), ;, }, }, }, public, Iterable, <, ObjectType, >, getExtendedInterfaces, (, ), {, return, extendedInterfaces, ;, }, public, int]
[;, }, public, int, getExtendedInterfacesCount, (, ), {, return, extendedInterfaces, ., size, (, ), ;, }, public, void, setExtendedInterfaces, (]
[;, }, public, void, setExtendedInterfaces, (, List, <, ObjectType, >, extendedInterfaces, ), throws, UnsupportedOperationException, {, if, (, isInterface, (, )]
[., size, (, ), ;, }, public, void, setExtendedInterfaces, (, List, <, ObjectType, >, extendedInterfaces, ), throws, UnsupportedOperationException, {, if]
[), {, this, ., extendedInterfaces, =, ImmutableList, ., copyOf, (, extendedInterfaces, ), ;, }, else, {, throw, new, UnsupportedOperationException, (]
[=, ImmutableList, ., copyOf, (, extendedInterfaces, ), ;, }, else, {, throw, new, UnsupportedOperationException, (, ), ;, }, }, @]
[., extendedInterfaces, =, ImmutableList, ., copyOf, (, extendedInterfaces, ), ;, }, else, {, throw, new, UnsupportedOperationException, (, ), ;, }]
[;, }, else, {, throw, new, UnsupportedOperationException, (, ), ;, }, }, @, Override, public, JSType, getPropertyType, (, String, name]
[., copyOf, (, extendedInterfaces, ), ;, }, else, {, throw, new, UnsupportedOperationException, (, ), ;, }, }, @, Override, public]
[), ;, }, else, {, throw, new, UnsupportedOperationException, (, ), ;, }, }, @, Override, public, JSType, getPropertyType, (, String]
[;, }, }, @, Override, public, JSType, getPropertyType, (, String, name, ), {, if, (, !, hasOwnProperty, (, name, )]
[), {, boolean, isCall, =, "call", ., equals, (, name, ), ;, boolean, isBind, =, "bind", ., equals, (, name]
[), {, boolean, isCall, =, "call", ., equals, (, name, ), ;, boolean, isBind, =, "bind", ., equals, (, name]
[), ), {, boolean, isCall, =, "call", ., equals, (, name, ), ;, boolean, isBind, =, "bind", ., equals, (]
[;, boolean, isBind, =, "bind", ., equals, (, name, ), ;, if, (, isCall, ||, isBind, ), {, defineDeclaredProperty, (]
[., equals, (, name, ), ;, boolean, isBind, =, "bind", ., equals, (, name, ), ;, if, (, isCall, ||]
[), ;, boolean, isBind, =, "bind", ., equals, (, name, ), ;, if, (, isCall, ||, isBind, ), {, defineDeclaredProperty]
[;, if, (, isCall, ||, isBind, ), {, defineDeclaredProperty, (, name, ,, getCallOrBindSignature, (, isCall, ), ,, source, ), ;]
[., equals, (, name, ), ;, if, (, isCall, ||, isBind, ), {, defineDeclaredProperty, (, name, ,, getCallOrBindSignature, (, isCall]
[), ;, if, (, isCall, ||, isBind, ), {, defineDeclaredProperty, (, name, ,, getCallOrBindSignature, (, isCall, ), ,, source, )]
[), {, defineDeclaredProperty, (, name, ,, getCallOrBindSignature, (, isCall, ), ,, source, ), ;, }, else, if, (, "apply", .]
[||, isBind, ), {, defineDeclaredProperty, (, name, ,, getCallOrBindSignature, (, isCall, ), ,, source, ), ;, }, else, if, (]
[), {, defineDeclaredProperty, (, name, ,, getCallOrBindSignature, (, isCall, ), ,, source, ), ;, }, else, if, (, "apply", .]
[;, }, else, if, (, "apply", ., equals, (, name, ), ), {, FunctionParamBuilder, builder, =, new, FunctionParamBuilder, (, registry]
[,, getCallOrBindSignature, (, isCall, ), ,, source, ), ;, }, else, if, (, "apply", ., equals, (, name, ), )]
[,, source, ), ;, }, else, if, (, "apply", ., equals, (, name, ), ), {, FunctionParamBuilder, builder, =, new]
[), ,, source, ), ;, }, else, if, (, "apply", ., equals, (, name, ), ), {, FunctionParamBuilder, builder, =]
[), ;, }, else, if, (, "apply", ., equals, (, name, ), ), {, FunctionParamBuilder, builder, =, new, FunctionParamBuilder, (]
[), {, FunctionParamBuilder, builder, =, new, FunctionParamBuilder, (, registry, ), ;, builder, ., addOptionalParams, (, registry, ., createNullableType, (, getTypeOfThis]
[., equals, (, name, ), ), {, FunctionParamBuilder, builder, =, new, FunctionParamBuilder, (, registry, ), ;, builder, ., addOptionalParams, (]
[), ), {, FunctionParamBuilder, builder, =, new, FunctionParamBuilder, (, registry, ), ;, builder, ., addOptionalParams, (, registry, ., createNullableType, (]
[;, builder, ., addOptionalParams, (, registry, ., createNullableType, (, getTypeOfThis, (, ), ), ,, registry, ., createNullableType, (, registry, .]
[), ;, builder, ., addOptionalParams, (, registry, ., createNullableType, (, getTypeOfThis, (, ), ), ,, registry, ., createNullableType, (, registry]
[;, defineDeclaredProperty, (, name, ,, new, FunctionBuilder, (, registry, ), ., withParams, (, builder, ), ., withReturnType, (, getReturnType, (]
[., addOptionalParams, (, registry, ., createNullableType, (, getTypeOfThis, (, ), ), ,, registry, ., createNullableType, (, registry, ., getNativeType, (]
[,, registry, ., createNullableType, (, registry, ., getNativeType, (, JSTypeNative, ., OBJECT_TYPE, ), ), ), ;, defineDeclaredProperty, (, name, ,]
[., createNullableType, (, getTypeOfThis, (, ), ), ,, registry, ., createNullableType, (, registry, ., getNativeType, (, JSTypeNative, ., OBJECT_TYPE, )]
[), ,, registry, ., createNullableType, (, registry, ., getNativeType, (, JSTypeNative, ., OBJECT_TYPE, ), ), ), ;, defineDeclaredProperty, (, name]
[), ;, defineDeclaredProperty, (, name, ,, new, FunctionBuilder, (, registry, ), ., withParams, (, builder, ), ., withReturnType, (, getReturnType]
[., createNullableType, (, registry, ., getNativeType, (, JSTypeNative, ., OBJECT_TYPE, ), ), ), ;, defineDeclaredProperty, (, name, ,, new, FunctionBuilder]
[), ), ;, defineDeclaredProperty, (, name, ,, new, FunctionBuilder, (, registry, ), ., withParams, (, builder, ), ., withReturnType, (]
[., getNativeType, (, JSTypeNative, ., OBJECT_TYPE, ), ), ), ;, defineDeclaredProperty, (, name, ,, new, FunctionBuilder, (, registry, ), .]
[), ), ), ;, defineDeclaredProperty, (, name, ,, new, FunctionBuilder, (, registry, ), ., withParams, (, builder, ), ., withReturnType]
[., OBJECT_TYPE, ), ), ), ;, defineDeclaredProperty, (, name, ,, new, FunctionBuilder, (, registry, ), ., withParams, (, builder, )]
[;, }, }, return, super, ., getPropertyType, (, name, ), ;, }, public, FunctionType, getBindReturnType, (, int, argsToBind, ), {]
[,, new, FunctionBuilder, (, registry, ), ., withParams, (, builder, ), ., withReturnType, (, getReturnType, (, ), ), ., withTemplateKeys]
[,, source, ), ;, }, }, return, super, ., getPropertyType, (, name, ), ;, }, public, FunctionType, getBindReturnType, (, int]
[., build, (, ), ,, source, ), ;, }, }, return, super, ., getPropertyType, (, name, ), ;, }, public]
[., withTemplateKeys, (, getTemplateKeys, (, ), ), ., build, (, ), ,, source, ), ;, }, }, return, super, .]
[., withReturnType, (, getReturnType, (, ), ), ., withTemplateKeys, (, getTemplateKeys, (, ), ), ., build, (, ), ,, source]
[., withParams, (, builder, ), ., withReturnType, (, getReturnType, (, ), ), ., withTemplateKeys, (, getTemplateKeys, (, ), ), .]
[), ., withParams, (, builder, ), ., withReturnType, (, getReturnType, (, ), ), ., withTemplateKeys, (, getTemplateKeys, (, ), )]
[), ., withReturnType, (, getReturnType, (, ), ), ., withTemplateKeys, (, getTemplateKeys, (, ), ), ., build, (, ), ,]
[), ., withTemplateKeys, (, getTemplateKeys, (, ), ), ., build, (, ), ,, source, ), ;, }, }, return, super]
[), ., build, (, ), ,, source, ), ;, }, }, return, super, ., getPropertyType, (, name, ), ;, }]
[), ;, }, }, return, super, ., getPropertyType, (, name, ), ;, }, public, FunctionType, getBindReturnType, (, int, argsToBind, )]
[;, }, public, FunctionType, getBindReturnType, (, int, argsToBind, ), {, FunctionBuilder, builder, =, new, FunctionBuilder, (, registry, ), ., withReturnType]
[., getPropertyType, (, name, ), ;, }, public, FunctionType, getBindReturnType, (, int, argsToBind, ), {, FunctionBuilder, builder, =, new, FunctionBuilder]
[), ;, }, public, FunctionType, getBindReturnType, (, int, argsToBind, ), {, FunctionBuilder, builder, =, new, FunctionBuilder, (, registry, ), .]
[;, if, (, argsToBind, >=, 0, ), {, Node, origParams, =, getParametersNode, (, ), ;, if, (, origParams, !=, null]
[., withTemplateKeys, (, getTemplateKeys, (, ), ), ;, if, (, argsToBind, >=, 0, ), {, Node, origParams, =, getParametersNode, (]
[., withReturnType, (, getReturnType, (, ), ), ., withTemplateKeys, (, getTemplateKeys, (, ), ), ;, if, (, argsToBind, >=, 0]
[), ., withReturnType, (, getReturnType, (, ), ), ., withTemplateKeys, (, getTemplateKeys, (, ), ), ;, if, (, argsToBind, >=]
[), ., withTemplateKeys, (, getTemplateKeys, (, ), ), ;, if, (, argsToBind, >=, 0, ), {, Node, origParams, =, getParametersNode]
[), ;, if, (, argsToBind, >=, 0, ), {, Node, origParams, =, getParametersNode, (, ), ;, if, (, origParams, !=]
[), {, Node, origParams, =, getParametersNode, (, ), ;, if, (, origParams, !=, null, ), {, Node, params, =, origParams]
[>=, 0, ), {, Node, origParams, =, getParametersNode, (, ), ;, if, (, origParams, !=, null, ), {, Node, params]
[), {, Node, origParams, =, getParametersNode, (, ), ;, if, (, origParams, !=, null, ), {, Node, params, =, origParams]
[;, if, (, origParams, !=, null, ), {, Node, params, =, origParams, ., cloneTree, (, ), ;, for, (, int]
[), {, Node, params, =, origParams, ., cloneTree, (, ), ;, for, (, int, i, =, 1, ;, i, <]
[!=, null, ), {, Node, params, =, origParams, ., cloneTree, (, ), ;, for, (, int, i, =, 1, ;]
[), {, Node, params, =, origParams, ., cloneTree, (, ), ;, for, (, int, i, =, 1, ;, i, <]
[;, for, (, int, i, =, 1, ;, i, <, argsToBind, &&, params, ., getFirstChild, (, ), !=, null, ;]
[., cloneTree, (, ), ;, for, (, int, i, =, 1, ;, i, <, argsToBind, &&, params, ., getFirstChild, (]
[;, i, <, argsToBind, &&, params, ., getFirstChild, (, ), !=, null, ;, i, ++, ), {, if, (, params]
[;, i, ++, ), {, if, (, params, ., getFirstChild, (, ), ., isVarArgs, (, ), ), {, break, ;]
[&&, params, ., getFirstChild, (, ), !=, null, ;, i, ++, ), {, if, (, params, ., getFirstChild, (, )]
[<, argsToBind, &&, params, ., getFirstChild, (, ), !=, null, ;, i, ++, ), {, if, (, params, ., getFirstChild]
[&&, params, ., getFirstChild, (, ), !=, null, ;, i, ++, ), {, if, (, params, ., getFirstChild, (, )]
[;, i, ++, ), {, if, (, params, ., getFirstChild, (, ), ., isVarArgs, (, ), ), {, break, ;]
[!=, null, ;, i, ++, ), {, if, (, params, ., getFirstChild, (, ), ., isVarArgs, (, ), ), {]
[., getFirstChild, (, ), !=, null, ;, i, ++, ), {, if, (, params, ., getFirstChild, (, ), ., isVarArgs]
[;, i, ++, ), {, if, (, params, ., getFirstChild, (, ), ., isVarArgs, (, ), ), {, break, ;]
[), {, if, (, params, ., getFirstChild, (, ), ., isVarArgs, (, ), ), {, break, ;, }, params, .]
[++, ), {, if, (, params, ., getFirstChild, (, ), ., isVarArgs, (, ), ), {, break, ;, }, params]
[), {, break, ;, }, params, ., removeFirstChild, (, ), ;, }, builder, ., withParamsNode, (, params, ), ;, }]
[., isVarArgs, (, ), ), {, break, ;, }, params, ., removeFirstChild, (, ), ;, }, builder, ., withParamsNode, (]
[., getFirstChild, (, ), ., isVarArgs, (, ), ), {, break, ;, }, params, ., removeFirstChild, (, ), ;, }]
[;, }, builder, ., withParamsNode, (, params, ), ;, }, }, return, builder, ., build, (, ), ;, }, private]
[., removeFirstChild, (, ), ;, }, builder, ., withParamsNode, (, params, ), ;, }, }, return, builder, ., build, (]
[;, }, }, return, builder, ., build, (, ), ;, }, private, FunctionType, getCallOrBindSignature, (, boolean, isCall, ), {, boolean]
[., withParamsNode, (, params, ), ;, }, }, return, builder, ., build, (, ), ;, }, private, FunctionType, getCallOrBindSignature, (]
[), ;, }, }, return, builder, ., build, (, ), ;, }, private, FunctionType, getCallOrBindSignature, (, boolean, isCall, ), {]
[;, }, private, FunctionType, getCallOrBindSignature, (, boolean, isCall, ), {, boolean, isBind, =, !, isCall, ;, FunctionBuilder, builder, =, new]
[., build, (, ), ;, }, private, FunctionType, getCallOrBindSignature, (, boolean, isCall, ), {, boolean, isBind, =, !, isCall, ;]
[;, FunctionBuilder, builder, =, new, FunctionBuilder, (, registry, ), ., withReturnType, (, isCall, ?, getReturnType, (, ), :, getBindReturnType, (]
[;, FunctionBuilder, builder, =, new, FunctionBuilder, (, registry, ), ., withReturnType, (, isCall, ?, getReturnType, (, ), :, getBindReturnType, (]
[;, Node, origParams, =, getParametersNode, (, ), ;, if, (, origParams, !=, null, ), {, Node, params, =, origParams, .]
[., withTemplateKeys, (, getTemplateKeys, (, ), ), ;, Node, origParams, =, getParametersNode, (, ), ;, if, (, origParams, !=, null]
[., withReturnType, (, isCall, ?, getReturnType, (, ), :, getBindReturnType, (, -, 1, ), ), ., withTemplateKeys, (, getTemplateKeys, (]
[), ., withReturnType, (, isCall, ?, getReturnType, (, ), :, getBindReturnType, (, -, 1, ), ), ., withTemplateKeys, (, getTemplateKeys]
[), ., withTemplateKeys, (, getTemplateKeys, (, ), ), ;, Node, origParams, =, getParametersNode, (, ), ;, if, (, origParams, !=]
[?, getReturnType, (, ), :, getBindReturnType, (, -, 1, ), ), ., withTemplateKeys, (, getTemplateKeys, (, ), ), ;, Node]
[:, getBindReturnType, (, -, 1, ), ), ., withTemplateKeys, (, getTemplateKeys, (, ), ), ;, Node, origParams, =, getParametersNode, (]
[), ., withTemplateKeys, (, getTemplateKeys, (, ), ), ;, Node, origParams, =, getParametersNode, (, ), ;, if, (, origParams, !=]
[), ), ., withTemplateKeys, (, getTemplateKeys, (, ), ), ;, Node, origParams, =, getParametersNode, (, ), ;, if, (, origParams]
[), ), ., withTemplateKeys, (, getTemplateKeys, (, ), ), ;, Node, origParams, =, getParametersNode, (, ), ;, if, (, origParams]
[), ;, Node, origParams, =, getParametersNode, (, ), ;, if, (, origParams, !=, null, ), {, Node, params, =, origParams]
[;, if, (, origParams, !=, null, ), {, Node, params, =, origParams, ., cloneTree, (, ), ;, Node, thisTypeNode, =]
[), {, Node, params, =, origParams, ., cloneTree, (, ), ;, Node, thisTypeNode, =, Node, ., newString, (, Token, .]
[!=, null, ), {, Node, params, =, origParams, ., cloneTree, (, ), ;, Node, thisTypeNode, =, Node, ., newString, (]
[), {, Node, params, =, origParams, ., cloneTree, (, ), ;, Node, thisTypeNode, =, Node, ., newString, (, Token, .]
[;, Node, thisTypeNode, =, Node, ., newString, (, Token, ., NAME, ,, "thisType", ), ;, thisTypeNode, ., setJSType, (, registry]
[., cloneTree, (, ), ;, Node, thisTypeNode, =, Node, ., newString, (, Token, ., NAME, ,, "thisType", ), ;, thisTypeNode]
[;, thisTypeNode, ., setJSType, (, registry, ., createOptionalNullableType, (, getTypeOfThis, (, ), ), ), ;, params, ., addChildToFront, (, thisTypeNode]
[., newString, (, Token, ., NAME, ,, "thisType", ), ;, thisTypeNode, ., setJSType, (, registry, ., createOptionalNullableType, (, getTypeOfThis, (]
[,, "thisType", ), ;, thisTypeNode, ., setJSType, (, registry, ., createOptionalNullableType, (, getTypeOfThis, (, ), ), ), ;, params, .]
[., NAME, ,, "thisType", ), ;, thisTypeNode, ., setJSType, (, registry, ., createOptionalNullableType, (, getTypeOfThis, (, ), ), ), ;]
[), ;, thisTypeNode, ., setJSType, (, registry, ., createOptionalNullableType, (, getTypeOfThis, (, ), ), ), ;, params, ., addChildToFront, (]
[;, params, ., addChildToFront, (, thisTypeNode, ), ;, if, (, isBind, ), {, for, (, Node, current, =, thisTypeNode, .]
[., setJSType, (, registry, ., createOptionalNullableType, (, getTypeOfThis, (, ), ), ), ;, params, ., addChildToFront, (, thisTypeNode, ), ;]
[), ;, params, ., addChildToFront, (, thisTypeNode, ), ;, if, (, isBind, ), {, for, (, Node, current, =, thisTypeNode]
[., createOptionalNullableType, (, getTypeOfThis, (, ), ), ), ;, params, ., addChildToFront, (, thisTypeNode, ), ;, if, (, isBind, )]
[), ), ;, params, ., addChildToFront, (, thisTypeNode, ), ;, if, (, isBind, ), {, for, (, Node, current, =]
[;, if, (, isBind, ), {, for, (, Node, current, =, thisTypeNode, ., getNext, (, ), ;, current, !=, null]
[., addChildToFront, (, thisTypeNode, ), ;, if, (, isBind, ), {, for, (, Node, current, =, thisTypeNode, ., getNext, (]
[), ;, if, (, isBind, ), {, for, (, Node, current, =, thisTypeNode, ., getNext, (, ), ;, current, !=]
[), {, for, (, Node, current, =, thisTypeNode, ., getNext, (, ), ;, current, !=, null, ;, current, =, current]
[;, current, !=, null, ;, current, =, current, ., getNext, (, ), ), {, current, ., setOptionalArg, (, true, )]
[., getNext, (, ), ;, current, !=, null, ;, current, =, current, ., getNext, (, ), ), {, current, .]
[;, current, =, current, ., getNext, (, ), ), {, current, ., setOptionalArg, (, true, ), ;, }, }, else]
[!=, null, ;, current, =, current, ., getNext, (, ), ), {, current, ., setOptionalArg, (, true, ), ;, }]
[;, current, =, current, ., getNext, (, ), ), {, current, ., setOptionalArg, (, true, ), ;, }, }, else]
[=, current, ., getNext, (, ), ), {, current, ., setOptionalArg, (, true, ), ;, }, }, else, if, (]
[), {, current, ., setOptionalArg, (, true, ), ;, }, }, else, if, (, isCall, ), {, Node, firstArg, =]
[., getNext, (, ), ), {, current, ., setOptionalArg, (, true, ), ;, }, }, else, if, (, isCall, )]
[;, }, }, else, if, (, isCall, ), {, Node, firstArg, =, thisTypeNode, ., getNext, (, ), ;, if, (]
[., setOptionalArg, (, true, ), ;, }, }, else, if, (, isCall, ), {, Node, firstArg, =, thisTypeNode, ., getNext]
[), ;, }, }, else, if, (, isCall, ), {, Node, firstArg, =, thisTypeNode, ., getNext, (, ), ;, if]
[), {, Node, firstArg, =, thisTypeNode, ., getNext, (, ), ;, if, (, firstArg, ==, null, ||, firstArg, ., isOptionalArg]
[;, if, (, firstArg, ==, null, ||, firstArg, ., isOptionalArg, (, ), ||, firstArg, ., isVarArgs, (, ), ), {]
[., getNext, (, ), ;, if, (, firstArg, ==, null, ||, firstArg, ., isOptionalArg, (, ), ||, firstArg, ., isVarArgs]
[), {, thisTypeNode, ., setOptionalArg, (, true, ), ;, }, }, builder, ., withParamsNode, (, params, ), ;, }, return]
[||, firstArg, ., isVarArgs, (, ), ), {, thisTypeNode, ., setOptionalArg, (, true, ), ;, }, }, builder, ., withParamsNode]
[||, firstArg, ., isOptionalArg, (, ), ||, firstArg, ., isVarArgs, (, ), ), {, thisTypeNode, ., setOptionalArg, (, true, )]
[==, null, ||, firstArg, ., isOptionalArg, (, ), ||, firstArg, ., isVarArgs, (, ), ), {, thisTypeNode, ., setOptionalArg, (]
[||, firstArg, ., isOptionalArg, (, ), ||, firstArg, ., isVarArgs, (, ), ), {, thisTypeNode, ., setOptionalArg, (, true, )]
[||, firstArg, ., isVarArgs, (, ), ), {, thisTypeNode, ., setOptionalArg, (, true, ), ;, }, }, builder, ., withParamsNode]
[., isOptionalArg, (, ), ||, firstArg, ., isVarArgs, (, ), ), {, thisTypeNode, ., setOptionalArg, (, true, ), ;, }]
[), {, thisTypeNode, ., setOptionalArg, (, true, ), ;, }, }, builder, ., withParamsNode, (, params, ), ;, }, return]
[., isVarArgs, (, ), ), {, thisTypeNode, ., setOptionalArg, (, true, ), ;, }, }, builder, ., withParamsNode, (, params]
[;, }, }, builder, ., withParamsNode, (, params, ), ;, }, return, builder, ., build, (, ), ;, }, @]
[., setOptionalArg, (, true, ), ;, }, }, builder, ., withParamsNode, (, params, ), ;, }, return, builder, ., build]
[), ;, }, }, builder, ., withParamsNode, (, params, ), ;, }, return, builder, ., build, (, ), ;, }]
[;, }, return, builder, ., build, (, ), ;, }, @, Override, boolean, defineProperty, (, String, name, ,, JSType, type]
[., withParamsNode, (, params, ), ;, }, return, builder, ., build, (, ), ;, }, @, Override, boolean, defineProperty, (]
[), ;, }, return, builder, ., build, (, ), ;, }, @, Override, boolean, defineProperty, (, String, name, ,, JSType]
[;, }, @, Override, boolean, defineProperty, (, String, name, ,, JSType, type, ,, boolean, inferred, ,, Node, propertyNode, ), {]
[., build, (, ), ;, }, @, Override, boolean, defineProperty, (, String, name, ,, JSType, type, ,, boolean, inferred, ,]
[), {, ObjectType, objType, =, type, ., toObjectType, (, ), ;, if, (, objType, !=, null, ), {, if, (]
[., equals, (, name, ), ), {, ObjectType, objType, =, type, ., toObjectType, (, ), ;, if, (, objType, !=]
[), ), {, ObjectType, objType, =, type, ., toObjectType, (, ), ;, if, (, objType, !=, null, ), {, if]
[;, if, (, objType, !=, null, ), {, if, (, prototypeSlot, !=, null, &&, objType, ., isEquivalentTo, (, prototypeSlot, .]
[., toObjectType, (, ), ;, if, (, objType, !=, null, ), {, if, (, prototypeSlot, !=, null, &&, objType, .]
[), {, if, (, prototypeSlot, !=, null, &&, objType, ., isEquivalentTo, (, prototypeSlot, ., getType, (, ), ), ), {]
[!=, null, ), {, if, (, prototypeSlot, !=, null, &&, objType, ., isEquivalentTo, (, prototypeSlot, ., getType, (, ), )]
[), {, if, (, prototypeSlot, !=, null, &&, objType, ., isEquivalentTo, (, prototypeSlot, ., getType, (, ), ), ), {]
[), {, return, true, ;, }, setPrototypeBasedOn, (, objType, ,, propertyNode, ), ;, return, true, ;, }, else, {, return]
[&&, objType, ., isEquivalentTo, (, prototypeSlot, ., getType, (, ), ), ), {, return, true, ;, }, setPrototypeBasedOn, (, objType]
[!=, null, &&, objType, ., isEquivalentTo, (, prototypeSlot, ., getType, (, ), ), ), {, return, true, ;, }, setPrototypeBasedOn]
[&&, objType, ., isEquivalentTo, (, prototypeSlot, ., getType, (, ), ), ), {, return, true, ;, }, setPrototypeBasedOn, (, objType]
[), {, return, true, ;, }, setPrototypeBasedOn, (, objType, ,, propertyNode, ), ;, return, true, ;, }, else, {, return]
[., isEquivalentTo, (, prototypeSlot, ., getType, (, ), ), ), {, return, true, ;, }, setPrototypeBasedOn, (, objType, ,, propertyNode]
[), ), {, return, true, ;, }, setPrototypeBasedOn, (, objType, ,, propertyNode, ), ;, return, true, ;, }, else, {]
[., getType, (, ), ), ), {, return, true, ;, }, setPrototypeBasedOn, (, objType, ,, propertyNode, ), ;, return, true]
[;, }, setPrototypeBasedOn, (, objType, ,, propertyNode, ), ;, return, true, ;, }, else, {, return, false, ;, }, }]
[;, return, true, ;, }, else, {, return, false, ;, }, }, return, super, ., defineProperty, (, name, ,, type]
[,, propertyNode, ), ;, return, true, ;, }, else, {, return, false, ;, }, }, return, super, ., defineProperty, (]
[), ;, return, true, ;, }, else, {, return, false, ;, }, }, return, super, ., defineProperty, (, name, ,]
[;, }, else, {, return, false, ;, }, }, return, super, ., defineProperty, (, name, ,, type, ,, inferred, ,]
[;, }, }, return, super, ., defineProperty, (, name, ,, type, ,, inferred, ,, propertyNode, ), ;, }, FunctionType, supAndInfHelper]
[;, }, FunctionType, supAndInfHelper, (, FunctionType, that, ,, boolean, leastSuper, ), {, Preconditions, ., checkNotNull, (, that, ), ;, if]
[., defineProperty, (, name, ,, type, ,, inferred, ,, propertyNode, ), ;, }, FunctionType, supAndInfHelper, (, FunctionType, that, ,, boolean]
[,, type, ,, inferred, ,, propertyNode, ), ;, }, FunctionType, supAndInfHelper, (, FunctionType, that, ,, boolean, leastSuper, ), {, Preconditions]
[,, inferred, ,, propertyNode, ), ;, }, FunctionType, supAndInfHelper, (, FunctionType, that, ,, boolean, leastSuper, ), {, Preconditions, ., checkNotNull]
[,, propertyNode, ), ;, }, FunctionType, supAndInfHelper, (, FunctionType, that, ,, boolean, leastSuper, ), {, Preconditions, ., checkNotNull, (, that]
[), ;, }, FunctionType, supAndInfHelper, (, FunctionType, that, ,, boolean, leastSuper, ), {, Preconditions, ., checkNotNull, (, that, ), ;]
[;, if, (, isEquivalentTo, (, that, ), ), {, return, this, ;, }, if, (, isOrdinaryFunction, (, ), &&, that]
[., checkNotNull, (, that, ), ;, if, (, isEquivalentTo, (, that, ), ), {, return, this, ;, }, if, (]
[), ;, if, (, isEquivalentTo, (, that, ), ), {, return, this, ;, }, if, (, isOrdinaryFunction, (, ), &&]
[), {, return, this, ;, }, if, (, isOrdinaryFunction, (, ), &&, that, ., isOrdinaryFunction, (, ), &&, !, this]
[), ), {, return, this, ;, }, if, (, isOrdinaryFunction, (, ), &&, that, ., isOrdinaryFunction, (, ), &&, !]
[;, }, if, (, isOrdinaryFunction, (, ), &&, that, ., isOrdinaryFunction, (, ), &&, !, this, ., call, ., hasUnknownParamsOrReturn]
[), {, boolean, isSubtypeOfThat, =, isSubtype, (, that, ), ;, boolean, isSubtypeOfThis, =, that, ., isSubtype, (, this, ), ;]
[&&, !, that, ., call, ., hasUnknownParamsOrReturn, (, ), ), {, boolean, isSubtypeOfThat, =, isSubtype, (, that, ), ;, boolean]
[&&, !, this, ., call, ., hasUnknownParamsOrReturn, (, ), &&, !, that, ., call, ., hasUnknownParamsOrReturn, (, ), ), {]
[&&, that, ., isOrdinaryFunction, (, ), &&, !, this, ., call, ., hasUnknownParamsOrReturn, (, ), &&, !, that, ., call]
[&&, !, this, ., call, ., hasUnknownParamsOrReturn, (, ), &&, !, that, ., call, ., hasUnknownParamsOrReturn, (, ), ), {]
[., isOrdinaryFunction, (, ), &&, !, this, ., call, ., hasUnknownParamsOrReturn, (, ), &&, !, that, ., call, ., hasUnknownParamsOrReturn]
[&&, !, that, ., call, ., hasUnknownParamsOrReturn, (, ), ), {, boolean, isSubtypeOfThat, =, isSubtype, (, that, ), ;, boolean]
[&&, !, that, ., call, ., hasUnknownParamsOrReturn, (, ), ), {, boolean, isSubtypeOfThat, =, isSubtype, (, that, ), ;, boolean]
[., hasUnknownParamsOrReturn, (, ), &&, !, that, ., call, ., hasUnknownParamsOrReturn, (, ), ), {, boolean, isSubtypeOfThat, =, isSubtype, (]
[., call, ., hasUnknownParamsOrReturn, (, ), &&, !, that, ., call, ., hasUnknownParamsOrReturn, (, ), ), {, boolean, isSubtypeOfThat, =]
[), {, boolean, isSubtypeOfThat, =, isSubtype, (, that, ), ;, boolean, isSubtypeOfThis, =, that, ., isSubtype, (, this, ), ;]
[), {, boolean, isSubtypeOfThat, =, isSubtype, (, that, ), ;, boolean, isSubtypeOfThis, =, that, ., isSubtype, (, this, ), ;]
[., hasUnknownParamsOrReturn, (, ), ), {, boolean, isSubtypeOfThat, =, isSubtype, (, that, ), ;, boolean, isSubtypeOfThis, =, that, ., isSubtype]
[., call, ., hasUnknownParamsOrReturn, (, ), ), {, boolean, isSubtypeOfThat, =, isSubtype, (, that, ), ;, boolean, isSubtypeOfThis, =, that]
[;, boolean, isSubtypeOfThis, =, that, ., isSubtype, (, this, ), ;, if, (, isSubtypeOfThat, &&, !, isSubtypeOfThis, ), {, return]
[), ;, boolean, isSubtypeOfThis, =, that, ., isSubtype, (, this, ), ;, if, (, isSubtypeOfThat, &&, !, isSubtypeOfThis, ), {]
[;, if, (, isSubtypeOfThat, &&, !, isSubtypeOfThis, ), {, return, leastSuper, ?, that, :, this, ;, }, else, if, (]
[., isSubtype, (, this, ), ;, if, (, isSubtypeOfThat, &&, !, isSubtypeOfThis, ), {, return, leastSuper, ?, that, :, this]
[), ;, if, (, isSubtypeOfThat, &&, !, isSubtypeOfThis, ), {, return, leastSuper, ?, that, :, this, ;, }, else, if]
[), {, return, leastSuper, ?, that, :, this, ;, }, else, if, (, isSubtypeOfThis, &&, !, isSubtypeOfThat, ), {, return]
[&&, !, isSubtypeOfThis, ), {, return, leastSuper, ?, that, :, this, ;, }, else, if, (, isSubtypeOfThis, &&, !, isSubtypeOfThat]
[), {, return, leastSuper, ?, that, :, this, ;, }, else, if, (, isSubtypeOfThis, &&, !, isSubtypeOfThat, ), {, return]
[), {, return, leastSuper, ?, that, :, this, ;, }, else, if, (, isSubtypeOfThis, &&, !, isSubtypeOfThat, ), {, return]
[;, }, else, if, (, isSubtypeOfThis, &&, !, isSubtypeOfThat, ), {, return, leastSuper, ?, this, :, that, ;, }, FunctionType]
[?, that, :, this, ;, }, else, if, (, isSubtypeOfThis, &&, !, isSubtypeOfThat, ), {, return, leastSuper, ?, this, :]
[:, this, ;, }, else, if, (, isSubtypeOfThis, &&, !, isSubtypeOfThat, ), {, return, leastSuper, ?, this, :, that, ;]
[;, }, else, if, (, isSubtypeOfThis, &&, !, isSubtypeOfThat, ), {, return, leastSuper, ?, this, :, that, ;, }, FunctionType]
[), {, return, leastSuper, ?, this, :, that, ;, }, FunctionType, merged, =, tryMergeFunctionPiecewise, (, that, ,, leastSuper, ), ;]
[&&, !, isSubtypeOfThat, ), {, return, leastSuper, ?, this, :, that, ;, }, FunctionType, merged, =, tryMergeFunctionPiecewise, (, that, ,]
[), {, return, leastSuper, ?, this, :, that, ;, }, FunctionType, merged, =, tryMergeFunctionPiecewise, (, that, ,, leastSuper, ), ;]
[), {, return, leastSuper, ?, this, :, that, ;, }, FunctionType, merged, =, tryMergeFunctionPiecewise, (, that, ,, leastSuper, ), ;]
[;, }, FunctionType, merged, =, tryMergeFunctionPiecewise, (, that, ,, leastSuper, ), ;, if, (, merged, !=, null, ), {, return]
[?, this, :, that, ;, }, FunctionType, merged, =, tryMergeFunctionPiecewise, (, that, ,, leastSuper, ), ;, if, (, merged, !=]
[:, that, ;, }, FunctionType, merged, =, tryMergeFunctionPiecewise, (, that, ,, leastSuper, ), ;, if, (, merged, !=, null, )]
[;, }, FunctionType, merged, =, tryMergeFunctionPiecewise, (, that, ,, leastSuper, ), ;, if, (, merged, !=, null, ), {, return]
[;, if, (, merged, !=, null, ), {, return, merged, ;, }, }, JSType, functionInstance, =, registry, ., getNativeType, (]
[,, leastSuper, ), ;, if, (, merged, !=, null, ), {, return, merged, ;, }, }, JSType, functionInstance, =, registry]
[), ;, if, (, merged, !=, null, ), {, return, merged, ;, }, }, JSType, functionInstance, =, registry, ., getNativeType]
[), {, return, merged, ;, }, }, JSType, functionInstance, =, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ;, if]
[!=, null, ), {, return, merged, ;, }, }, JSType, functionInstance, =, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, )]
[), {, return, merged, ;, }, }, JSType, functionInstance, =, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ;, if]
[;, }, }, JSType, functionInstance, =, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ;, if, (, functionInstance, ., isEquivalentTo]
[;, if, (, functionInstance, ., isEquivalentTo, (, that, ), ), {, return, leastSuper, ?, that, :, this, ;, }, else]
[., getNativeType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ;, if, (, functionInstance, ., isEquivalentTo, (, that, ), ), {, return, leastSuper]
[), ;, if, (, functionInstance, ., isEquivalentTo, (, that, ), ), {, return, leastSuper, ?, that, :, this, ;, }]
[., FUNCTION_INSTANCE_TYPE, ), ;, if, (, functionInstance, ., isEquivalentTo, (, that, ), ), {, return, leastSuper, ?, that, :, this]
[), {, return, leastSuper, ?, that, :, this, ;, }, else, if, (, functionInstance, ., isEquivalentTo, (, this, ), )]
[., isEquivalentTo, (, that, ), ), {, return, leastSuper, ?, that, :, this, ;, }, else, if, (, functionInstance, .]
[), ), {, return, leastSuper, ?, that, :, this, ;, }, else, if, (, functionInstance, ., isEquivalentTo, (, this, )]
[;, }, else, if, (, functionInstance, ., isEquivalentTo, (, this, ), ), {, return, leastSuper, ?, this, :, that, ;]
[?, that, :, this, ;, }, else, if, (, functionInstance, ., isEquivalentTo, (, this, ), ), {, return, leastSuper, ?]
[:, this, ;, }, else, if, (, functionInstance, ., isEquivalentTo, (, this, ), ), {, return, leastSuper, ?, this, :]
[;, }, else, if, (, functionInstance, ., isEquivalentTo, (, this, ), ), {, return, leastSuper, ?, this, :, that, ;]
[), {, return, leastSuper, ?, this, :, that, ;, }, FunctionType, greatestFn, =, registry, ., getNativeFunctionType, (, JSTypeNative, ., U2U_CONSTRUCTOR_TYPE]
[., isEquivalentTo, (, this, ), ), {, return, leastSuper, ?, this, :, that, ;, }, FunctionType, greatestFn, =, registry, .]
[), ), {, return, leastSuper, ?, this, :, that, ;, }, FunctionType, greatestFn, =, registry, ., getNativeFunctionType, (, JSTypeNative, .]
[;, }, FunctionType, greatestFn, =, registry, ., getNativeFunctionType, (, JSTypeNative, ., U2U_CONSTRUCTOR_TYPE, ), ;, FunctionType, leastFn, =, registry, ., getNativeFunctionType]
[?, this, :, that, ;, }, FunctionType, greatestFn, =, registry, ., getNativeFunctionType, (, JSTypeNative, ., U2U_CONSTRUCTOR_TYPE, ), ;, FunctionType, leastFn]
[:, that, ;, }, FunctionType, greatestFn, =, registry, ., getNativeFunctionType, (, JSTypeNative, ., U2U_CONSTRUCTOR_TYPE, ), ;, FunctionType, leastFn, =, registry]
[;, }, FunctionType, greatestFn, =, registry, ., getNativeFunctionType, (, JSTypeNative, ., U2U_CONSTRUCTOR_TYPE, ), ;, FunctionType, leastFn, =, registry, ., getNativeFunctionType]
[;, FunctionType, leastFn, =, registry, ., getNativeFunctionType, (, JSTypeNative, ., LEAST_FUNCTION_TYPE, ), ;, return, leastSuper, ?, greatestFn, :, leastFn, ;]
[., getNativeFunctionType, (, JSTypeNative, ., U2U_CONSTRUCTOR_TYPE, ), ;, FunctionType, leastFn, =, registry, ., getNativeFunctionType, (, JSTypeNative, ., LEAST_FUNCTION_TYPE, ), ;]
[), ;, FunctionType, leastFn, =, registry, ., getNativeFunctionType, (, JSTypeNative, ., LEAST_FUNCTION_TYPE, ), ;, return, leastSuper, ?, greatestFn, :, leastFn]
[., U2U_CONSTRUCTOR_TYPE, ), ;, FunctionType, leastFn, =, registry, ., getNativeFunctionType, (, JSTypeNative, ., LEAST_FUNCTION_TYPE, ), ;, return, leastSuper, ?, greatestFn]
[;, return, leastSuper, ?, greatestFn, :, leastFn, ;, }, private, FunctionType, tryMergeFunctionPiecewise, (, FunctionType, other, ,, boolean, leastSuper, ), {]
[., getNativeFunctionType, (, JSTypeNative, ., LEAST_FUNCTION_TYPE, ), ;, return, leastSuper, ?, greatestFn, :, leastFn, ;, }, private, FunctionType, tryMergeFunctionPiecewise, (]
[), ;, return, leastSuper, ?, greatestFn, :, leastFn, ;, }, private, FunctionType, tryMergeFunctionPiecewise, (, FunctionType, other, ,, boolean, leastSuper, )]
[., LEAST_FUNCTION_TYPE, ), ;, return, leastSuper, ?, greatestFn, :, leastFn, ;, }, private, FunctionType, tryMergeFunctionPiecewise, (, FunctionType, other, ,, boolean]
[;, }, private, FunctionType, tryMergeFunctionPiecewise, (, FunctionType, other, ,, boolean, leastSuper, ), {, Node, newParamsNode, =, null, ;, if, (]
[?, greatestFn, :, leastFn, ;, }, private, FunctionType, tryMergeFunctionPiecewise, (, FunctionType, other, ,, boolean, leastSuper, ), {, Node, newParamsNode, =]
[:, leastFn, ;, }, private, FunctionType, tryMergeFunctionPiecewise, (, FunctionType, other, ,, boolean, leastSuper, ), {, Node, newParamsNode, =, null, ;]
[;, }, private, FunctionType, tryMergeFunctionPiecewise, (, FunctionType, other, ,, boolean, leastSuper, ), {, Node, newParamsNode, =, null, ;, if, (]
[;, if, (, call, ., hasEqualParameters, (, other, ., call, ,, EquivalenceMethod, ., IDENTITY, ), ), {, newParamsNode, =, call]
[), {, newParamsNode, =, call, ., parameters, ;, }, else, {, return, null, ;, }, JSType, newReturnType, =, leastSuper, ?]
[., hasEqualParameters, (, other, ., call, ,, EquivalenceMethod, ., IDENTITY, ), ), {, newParamsNode, =, call, ., parameters, ;, }]
[,, EquivalenceMethod, ., IDENTITY, ), ), {, newParamsNode, =, call, ., parameters, ;, }, else, {, return, null, ;, }]
[., call, ,, EquivalenceMethod, ., IDENTITY, ), ), {, newParamsNode, =, call, ., parameters, ;, }, else, {, return, null]
[), ), {, newParamsNode, =, call, ., parameters, ;, }, else, {, return, null, ;, }, JSType, newReturnType, =, leastSuper]
[., IDENTITY, ), ), {, newParamsNode, =, call, ., parameters, ;, }, else, {, return, null, ;, }, JSType, newReturnType]
[=, call, ., parameters, ;, }, else, {, return, null, ;, }, JSType, newReturnType, =, leastSuper, ?, call, ., returnType]
[;, }, else, {, return, null, ;, }, JSType, newReturnType, =, leastSuper, ?, call, ., returnType, ., getLeastSupertype, (, other]
[., parameters, ;, }, else, {, return, null, ;, }, JSType, newReturnType, =, leastSuper, ?, call, ., returnType, ., getLeastSupertype]
[;, }, JSType, newReturnType, =, leastSuper, ?, call, ., returnType, ., getLeastSupertype, (, other, ., call, ., returnType, ), :]
[;, JSType, newTypeOfThis, =, null, ;, if, (, isEquivalent, (, typeOfThis, ,, other, ., typeOfThis, ), ), {, newTypeOfThis, =]
[?, call, ., returnType, ., getLeastSupertype, (, other, ., call, ., returnType, ), :, call, ., returnType, ., getGreatestSubtype, (]
[:, call, ., returnType, ., getGreatestSubtype, (, other, ., call, ., returnType, ), ;, JSType, newTypeOfThis, =, null, ;, if]
[., getLeastSupertype, (, other, ., call, ., returnType, ), :, call, ., returnType, ., getGreatestSubtype, (, other, ., call, .]
[., returnType, ., getLeastSupertype, (, other, ., call, ., returnType, ), :, call, ., returnType, ., getGreatestSubtype, (, other, .]
[), :, call, ., returnType, ., getGreatestSubtype, (, other, ., call, ., returnType, ), ;, JSType, newTypeOfThis, =, null, ;]
[., returnType, ), :, call, ., returnType, ., getGreatestSubtype, (, other, ., call, ., returnType, ), ;, JSType, newTypeOfThis, =]
[., call, ., returnType, ), :, call, ., returnType, ., getGreatestSubtype, (, other, ., call, ., returnType, ), ;, JSType]
[;, JSType, newTypeOfThis, =, null, ;, if, (, isEquivalent, (, typeOfThis, ,, other, ., typeOfThis, ), ), {, newTypeOfThis, =]
[., getGreatestSubtype, (, other, ., call, ., returnType, ), ;, JSType, newTypeOfThis, =, null, ;, if, (, isEquivalent, (, typeOfThis]
[., returnType, ., getGreatestSubtype, (, other, ., call, ., returnType, ), ;, JSType, newTypeOfThis, =, null, ;, if, (, isEquivalent]
[), ;, JSType, newTypeOfThis, =, null, ;, if, (, isEquivalent, (, typeOfThis, ,, other, ., typeOfThis, ), ), {, newTypeOfThis]
[., returnType, ), ;, JSType, newTypeOfThis, =, null, ;, if, (, isEquivalent, (, typeOfThis, ,, other, ., typeOfThis, ), )]
[., call, ., returnType, ), ;, JSType, newTypeOfThis, =, null, ;, if, (, isEquivalent, (, typeOfThis, ,, other, ., typeOfThis]
[;, if, (, isEquivalent, (, typeOfThis, ,, other, ., typeOfThis, ), ), {, newTypeOfThis, =, typeOfThis, ;, }, else, {]
[), {, newTypeOfThis, =, typeOfThis, ;, }, else, {, JSType, maybeNewTypeOfThis, =, leastSuper, ?, typeOfThis, ., getLeastSupertype, (, other, .]
[,, other, ., typeOfThis, ), ), {, newTypeOfThis, =, typeOfThis, ;, }, else, {, JSType, maybeNewTypeOfThis, =, leastSuper, ?, typeOfThis]
[), ), {, newTypeOfThis, =, typeOfThis, ;, }, else, {, JSType, maybeNewTypeOfThis, =, leastSuper, ?, typeOfThis, ., getLeastSupertype, (, other]
[., typeOfThis, ), ), {, newTypeOfThis, =, typeOfThis, ;, }, else, {, JSType, maybeNewTypeOfThis, =, leastSuper, ?, typeOfThis, ., getLeastSupertype]
[=, typeOfThis, ;, }, else, {, JSType, maybeNewTypeOfThis, =, leastSuper, ?, typeOfThis, ., getLeastSupertype, (, other, ., typeOfThis, ), :]
[;, }, else, {, JSType, maybeNewTypeOfThis, =, leastSuper, ?, typeOfThis, ., getLeastSupertype, (, other, ., typeOfThis, ), :, typeOfThis, .]
[;, newTypeOfThis, =, maybeNewTypeOfThis, ;, }, boolean, newReturnTypeInferred, =, call, ., returnTypeInferred, ||, other, ., call, ., returnTypeInferred, ;, return]
[?, typeOfThis, ., getLeastSupertype, (, other, ., typeOfThis, ), :, typeOfThis, ., getGreatestSubtype, (, other, ., typeOfThis, ), ;, newTypeOfThis]
[:, typeOfThis, ., getGreatestSubtype, (, other, ., typeOfThis, ), ;, newTypeOfThis, =, maybeNewTypeOfThis, ;, }, boolean, newReturnTypeInferred, =, call, .]
[., getLeastSupertype, (, other, ., typeOfThis, ), :, typeOfThis, ., getGreatestSubtype, (, other, ., typeOfThis, ), ;, newTypeOfThis, =, maybeNewTypeOfThis]
[), :, typeOfThis, ., getGreatestSubtype, (, other, ., typeOfThis, ), ;, newTypeOfThis, =, maybeNewTypeOfThis, ;, }, boolean, newReturnTypeInferred, =, call]
[., typeOfThis, ), :, typeOfThis, ., getGreatestSubtype, (, other, ., typeOfThis, ), ;, newTypeOfThis, =, maybeNewTypeOfThis, ;, }, boolean, newReturnTypeInferred]
[;, newTypeOfThis, =, maybeNewTypeOfThis, ;, }, boolean, newReturnTypeInferred, =, call, ., returnTypeInferred, ||, other, ., call, ., returnTypeInferred, ;, return]
[., getGreatestSubtype, (, other, ., typeOfThis, ), ;, newTypeOfThis, =, maybeNewTypeOfThis, ;, }, boolean, newReturnTypeInferred, =, call, ., returnTypeInferred, ||]
[), ;, newTypeOfThis, =, maybeNewTypeOfThis, ;, }, boolean, newReturnTypeInferred, =, call, ., returnTypeInferred, ||, other, ., call, ., returnTypeInferred, ;]
[., typeOfThis, ), ;, newTypeOfThis, =, maybeNewTypeOfThis, ;, }, boolean, newReturnTypeInferred, =, call, ., returnTypeInferred, ||, other, ., call, .]
[=, maybeNewTypeOfThis, ;, }, boolean, newReturnTypeInferred, =, call, ., returnTypeInferred, ||, other, ., call, ., returnTypeInferred, ;, return, new, FunctionType]
[;, }, boolean, newReturnTypeInferred, =, call, ., returnTypeInferred, ||, other, ., call, ., returnTypeInferred, ;, return, new, FunctionType, (, registry]
[;, return, new, FunctionType, (, registry, ,, null, ,, null, ,, new, ArrowType, (, registry, ,, newParamsNode, ,, newReturnType, ,]
[||, other, ., call, ., returnTypeInferred, ;, return, new, FunctionType, (, registry, ,, null, ,, null, ,, new, ArrowType, (]
[., returnTypeInferred, ||, other, ., call, ., returnTypeInferred, ;, return, new, FunctionType, (, registry, ,, null, ,, null, ,, new]
[;, return, new, FunctionType, (, registry, ,, null, ,, null, ,, new, ArrowType, (, registry, ,, newParamsNode, ,, newReturnType, ,]
[., returnTypeInferred, ;, return, new, FunctionType, (, registry, ,, null, ,, null, ,, new, ArrowType, (, registry, ,, newParamsNode, ,]
[., call, ., returnTypeInferred, ;, return, new, FunctionType, (, registry, ,, null, ,, null, ,, new, ArrowType, (, registry, ,]
[;, }, public, FunctionType, getSuperClassConstructor, (, ), {, Preconditions, ., checkArgument, (, isConstructor, (, ), ||, isInterface, (, ), )]
[,, null, ,, null, ,, new, ArrowType, (, registry, ,, newParamsNode, ,, newReturnType, ,, newReturnTypeInferred, ), ,, newTypeOfThis, ,, null]
[,, null, ,, new, ArrowType, (, registry, ,, newParamsNode, ,, newReturnType, ,, newReturnTypeInferred, ), ,, newTypeOfThis, ,, null, ,, false]
[,, new, ArrowType, (, registry, ,, newParamsNode, ,, newReturnType, ,, newReturnTypeInferred, ), ,, newTypeOfThis, ,, null, ,, false, ,, false]
[,, newTypeOfThis, ,, null, ,, false, ,, false, ), ;, }, public, FunctionType, getSuperClassConstructor, (, ), {, Preconditions, ., checkArgument]
[,, newParamsNode, ,, newReturnType, ,, newReturnTypeInferred, ), ,, newTypeOfThis, ,, null, ,, false, ,, false, ), ;, }, public, FunctionType]
[,, newReturnType, ,, newReturnTypeInferred, ), ,, newTypeOfThis, ,, null, ,, false, ,, false, ), ;, }, public, FunctionType, getSuperClassConstructor, (]
[,, newReturnTypeInferred, ), ,, newTypeOfThis, ,, null, ,, false, ,, false, ), ;, }, public, FunctionType, getSuperClassConstructor, (, ), {]
[), ,, newTypeOfThis, ,, null, ,, false, ,, false, ), ;, }, public, FunctionType, getSuperClassConstructor, (, ), {, Preconditions, .]
[,, null, ,, false, ,, false, ), ;, }, public, FunctionType, getSuperClassConstructor, (, ), {, Preconditions, ., checkArgument, (, isConstructor]
[,, false, ,, false, ), ;, }, public, FunctionType, getSuperClassConstructor, (, ), {, Preconditions, ., checkArgument, (, isConstructor, (, )]
[,, false, ), ;, }, public, FunctionType, getSuperClassConstructor, (, ), {, Preconditions, ., checkArgument, (, isConstructor, (, ), ||, isInterface]
[), ;, }, public, FunctionType, getSuperClassConstructor, (, ), {, Preconditions, ., checkArgument, (, isConstructor, (, ), ||, isInterface, (, )]
[;, ObjectType, maybeSuperInstanceType, =, getPrototype, (, ), ., getImplicitPrototype, (, ), ;, if, (, maybeSuperInstanceType, ==, null, ), {, return]
[., checkArgument, (, isConstructor, (, ), ||, isInterface, (, ), ), ;, ObjectType, maybeSuperInstanceType, =, getPrototype, (, ), ., getImplicitPrototype]
[), ;, ObjectType, maybeSuperInstanceType, =, getPrototype, (, ), ., getImplicitPrototype, (, ), ;, if, (, maybeSuperInstanceType, ==, null, ), {]
[||, isInterface, (, ), ), ;, ObjectType, maybeSuperInstanceType, =, getPrototype, (, ), ., getImplicitPrototype, (, ), ;, if, (, maybeSuperInstanceType]
[), ;, ObjectType, maybeSuperInstanceType, =, getPrototype, (, ), ., getImplicitPrototype, (, ), ;, if, (, maybeSuperInstanceType, ==, null, ), {]
[;, if, (, maybeSuperInstanceType, ==, null, ), {, return, null, ;, }, return, maybeSuperInstanceType, ., getConstructor, (, ), ;, }]
[., getImplicitPrototype, (, ), ;, if, (, maybeSuperInstanceType, ==, null, ), {, return, null, ;, }, return, maybeSuperInstanceType, ., getConstructor]
[), {, return, null, ;, }, return, maybeSuperInstanceType, ., getConstructor, (, ), ;, }, public, static, ObjectType, getTopDefiningInterface, (, ObjectType]
[==, null, ), {, return, null, ;, }, return, maybeSuperInstanceType, ., getConstructor, (, ), ;, }, public, static, ObjectType, getTopDefiningInterface]
[), {, return, null, ;, }, return, maybeSuperInstanceType, ., getConstructor, (, ), ;, }, public, static, ObjectType, getTopDefiningInterface, (, ObjectType]
[;, }, return, maybeSuperInstanceType, ., getConstructor, (, ), ;, }, public, static, ObjectType, getTopDefiningInterface, (, ObjectType, type, ,, String, propertyName]
[;, }, public, static, ObjectType, getTopDefiningInterface, (, ObjectType, type, ,, String, propertyName, ), {, ObjectType, foundType, =, null, ;, if]
[., getConstructor, (, ), ;, }, public, static, ObjectType, getTopDefiningInterface, (, ObjectType, type, ,, String, propertyName, ), {, ObjectType, foundType]
[;, if, (, type, ., hasProperty, (, propertyName, ), ), {, foundType, =, type, ;, }, for, (, ObjectType, interfaceType]
[), {, foundType, =, type, ;, }, for, (, ObjectType, interfaceType, :, type, ., getCtorExtendedInterfaces, (, ), ), {, if]
[., hasProperty, (, propertyName, ), ), {, foundType, =, type, ;, }, for, (, ObjectType, interfaceType, :, type, ., getCtorExtendedInterfaces]
[), ), {, foundType, =, type, ;, }, for, (, ObjectType, interfaceType, :, type, ., getCtorExtendedInterfaces, (, ), ), {]
[=, type, ;, }, for, (, ObjectType, interfaceType, :, type, ., getCtorExtendedInterfaces, (, ), ), {, if, (, interfaceType, .]
[;, }, for, (, ObjectType, interfaceType, :, type, ., getCtorExtendedInterfaces, (, ), ), {, if, (, interfaceType, ., hasProperty, (]
[), {, if, (, interfaceType, ., hasProperty, (, propertyName, ), ), {, foundType, =, getTopDefiningInterface, (, interfaceType, ,, propertyName, )]
[., getCtorExtendedInterfaces, (, ), ), {, if, (, interfaceType, ., hasProperty, (, propertyName, ), ), {, foundType, =, getTopDefiningInterface, (]
[), {, foundType, =, getTopDefiningInterface, (, interfaceType, ,, propertyName, ), ;, }, }, return, foundType, ;, }, public, ObjectType, getTopMostDefiningType]
[., hasProperty, (, propertyName, ), ), {, foundType, =, getTopDefiningInterface, (, interfaceType, ,, propertyName, ), ;, }, }, return, foundType]
[), ), {, foundType, =, getTopDefiningInterface, (, interfaceType, ,, propertyName, ), ;, }, }, return, foundType, ;, }, public, ObjectType]
[=, getTopDefiningInterface, (, interfaceType, ,, propertyName, ), ;, }, }, return, foundType, ;, }, public, ObjectType, getTopMostDefiningType, (, String, propertyName]
[;, }, }, return, foundType, ;, }, public, ObjectType, getTopMostDefiningType, (, String, propertyName, ), {, Preconditions, ., checkState, (, isConstructor]
[,, propertyName, ), ;, }, }, return, foundType, ;, }, public, ObjectType, getTopMostDefiningType, (, String, propertyName, ), {, Preconditions, .]
[), ;, }, }, return, foundType, ;, }, public, ObjectType, getTopMostDefiningType, (, String, propertyName, ), {, Preconditions, ., checkState, (]
[;, }, public, ObjectType, getTopMostDefiningType, (, String, propertyName, ), {, Preconditions, ., checkState, (, isConstructor, (, ), ||, isInterface, (]
[;, Preconditions, ., checkArgument, (, getInstanceType, (, ), ., hasProperty, (, propertyName, ), ), ;, FunctionType, ctor, =, this, ;]
[., checkState, (, isConstructor, (, ), ||, isInterface, (, ), ), ;, Preconditions, ., checkArgument, (, getInstanceType, (, ), .]
[), ;, Preconditions, ., checkArgument, (, getInstanceType, (, ), ., hasProperty, (, propertyName, ), ), ;, FunctionType, ctor, =, this]
[||, isInterface, (, ), ), ;, Preconditions, ., checkArgument, (, getInstanceType, (, ), ., hasProperty, (, propertyName, ), ), ;]
[), ;, Preconditions, ., checkArgument, (, getInstanceType, (, ), ., hasProperty, (, propertyName, ), ), ;, FunctionType, ctor, =, this]
[;, FunctionType, ctor, =, this, ;, if, (, isInterface, (, ), ), {, return, getTopDefiningInterface, (, getInstanceType, (, ), ,]
[., checkArgument, (, getInstanceType, (, ), ., hasProperty, (, propertyName, ), ), ;, FunctionType, ctor, =, this, ;, if, (]
[), ;, FunctionType, ctor, =, this, ;, if, (, isInterface, (, ), ), {, return, getTopDefiningInterface, (, getInstanceType, (, )]
[., hasProperty, (, propertyName, ), ), ;, FunctionType, ctor, =, this, ;, if, (, isInterface, (, ), ), {, return]
[), ), ;, FunctionType, ctor, =, this, ;, if, (, isInterface, (, ), ), {, return, getTopDefiningInterface, (, getInstanceType, (]
[;, if, (, isInterface, (, ), ), {, return, getTopDefiningInterface, (, getInstanceType, (, ), ,, propertyName, ), ;, }, ObjectType]
[), {, return, getTopDefiningInterface, (, getInstanceType, (, ), ,, propertyName, ), ;, }, ObjectType, topInstanceType, =, null, ;, do, {]
[;, }, ObjectType, topInstanceType, =, null, ;, do, {, topInstanceType, =, ctor, ., getInstanceType, (, ), ;, ctor, =, ctor]
[,, propertyName, ), ;, }, ObjectType, topInstanceType, =, null, ;, do, {, topInstanceType, =, ctor, ., getInstanceType, (, ), ;]
[), ;, }, ObjectType, topInstanceType, =, null, ;, do, {, topInstanceType, =, ctor, ., getInstanceType, (, ), ;, ctor, =]
[;, do, {, topInstanceType, =, ctor, ., getInstanceType, (, ), ;, ctor, =, ctor, ., getSuperClassConstructor, (, ), ;, }]
[=, ctor, ., getInstanceType, (, ), ;, ctor, =, ctor, ., getSuperClassConstructor, (, ), ;, }, while, (, ctor, !=]
[;, ctor, =, ctor, ., getSuperClassConstructor, (, ), ;, }, while, (, ctor, !=, null, &&, ctor, ., getPrototype, (]
[., getInstanceType, (, ), ;, ctor, =, ctor, ., getSuperClassConstructor, (, ), ;, }, while, (, ctor, !=, null, &&]
[=, ctor, ., getSuperClassConstructor, (, ), ;, }, while, (, ctor, !=, null, &&, ctor, ., getPrototype, (, ), .]
[;, }, while, (, ctor, !=, null, &&, ctor, ., getPrototype, (, ), ., hasProperty, (, propertyName, ), ), ;]
[., getSuperClassConstructor, (, ), ;, }, while, (, ctor, !=, null, &&, ctor, ., getPrototype, (, ), ., hasProperty, (]
[), ;, return, topInstanceType, ;, }, boolean, checkFunctionEquivalenceHelper, (, FunctionType, that, ,, EquivalenceMethod, eqMethod, ), {, if, (, isConstructor, (]
[&&, ctor, ., getPrototype, (, ), ., hasProperty, (, propertyName, ), ), ;, return, topInstanceType, ;, }, boolean, checkFunctionEquivalenceHelper, (]
[!=, null, &&, ctor, ., getPrototype, (, ), ., hasProperty, (, propertyName, ), ), ;, return, topInstanceType, ;, }, boolean]
[&&, ctor, ., getPrototype, (, ), ., hasProperty, (, propertyName, ), ), ;, return, topInstanceType, ;, }, boolean, checkFunctionEquivalenceHelper, (]
[), ;, return, topInstanceType, ;, }, boolean, checkFunctionEquivalenceHelper, (, FunctionType, that, ,, EquivalenceMethod, eqMethod, ), {, if, (, isConstructor, (]
[., hasProperty, (, propertyName, ), ), ;, return, topInstanceType, ;, }, boolean, checkFunctionEquivalenceHelper, (, FunctionType, that, ,, EquivalenceMethod, eqMethod, )]
[., getPrototype, (, ), ., hasProperty, (, propertyName, ), ), ;, return, topInstanceType, ;, }, boolean, checkFunctionEquivalenceHelper, (, FunctionType, that]
[), ), ;, return, topInstanceType, ;, }, boolean, checkFunctionEquivalenceHelper, (, FunctionType, that, ,, EquivalenceMethod, eqMethod, ), {, if, (, isConstructor]
[;, }, boolean, checkFunctionEquivalenceHelper, (, FunctionType, that, ,, EquivalenceMethod, eqMethod, ), {, if, (, isConstructor, (, ), ), {, if]
[), {, if, (, that, ., isConstructor, (, ), ), {, return, this, ==, that, ;, }, return, false, ;]
[), {, return, this, ==, that, ;, }, return, false, ;, }, if, (, isInterface, (, ), ), {, if]
[., isConstructor, (, ), ), {, return, this, ==, that, ;, }, return, false, ;, }, if, (, isInterface, (]
[;, }, return, false, ;, }, if, (, isInterface, (, ), ), {, if, (, that, ., isInterface, (, )]
[==, that, ;, }, return, false, ;, }, if, (, isInterface, (, ), ), {, if, (, that, ., isInterface]
[;, }, return, false, ;, }, if, (, isInterface, (, ), ), {, if, (, that, ., isInterface, (, )]
[;, }, if, (, isInterface, (, ), ), {, if, (, that, ., isInterface, (, ), ), {, return, getReferenceName]
[), {, if, (, that, ., isInterface, (, ), ), {, return, getReferenceName, (, ), ., equals, (, that, .]
[), {, return, getReferenceName, (, ), ., equals, (, that, ., getReferenceName, (, ), ), ;, }, return, false, ;]
[., isInterface, (, ), ), {, return, getReferenceName, (, ), ., equals, (, that, ., getReferenceName, (, ), ), ;]
[;, }, return, false, ;, }, if, (, that, ., isInterface, (, ), ), {, return, false, ;, }, return]
[., equals, (, that, ., getReferenceName, (, ), ), ;, }, return, false, ;, }, if, (, that, ., isInterface]
[), ;, }, return, false, ;, }, if, (, that, ., isInterface, (, ), ), {, return, false, ;, }]
[., getReferenceName, (, ), ), ;, }, return, false, ;, }, if, (, that, ., isInterface, (, ), ), {]
[;, }, if, (, that, ., isInterface, (, ), ), {, return, false, ;, }, return, typeOfThis, ., checkEquivalenceHelper, (]
[), {, return, false, ;, }, return, typeOfThis, ., checkEquivalenceHelper, (, that, ., typeOfThis, ,, eqMethod, ), &&, call, .]
[., isInterface, (, ), ), {, return, false, ;, }, return, typeOfThis, ., checkEquivalenceHelper, (, that, ., typeOfThis, ,, eqMethod]
[;, }, return, typeOfThis, ., checkEquivalenceHelper, (, that, ., typeOfThis, ,, eqMethod, ), &&, call, ., checkArrowEquivalenceHelper, (, that, .]
[;, }, @, Override, public, int, hashCode, (, ), {, return, isInterface, (, ), ?, getReferenceName, (, ), ., hashCode]
[&&, call, ., checkArrowEquivalenceHelper, (, that, ., call, ,, eqMethod, ), ;, }, @, Override, public, int, hashCode, (, )]
[., checkEquivalenceHelper, (, that, ., typeOfThis, ,, eqMethod, ), &&, call, ., checkArrowEquivalenceHelper, (, that, ., call, ,, eqMethod, )]
[,, eqMethod, ), &&, call, ., checkArrowEquivalenceHelper, (, that, ., call, ,, eqMethod, ), ;, }, @, Override, public, int]
[., typeOfThis, ,, eqMethod, ), &&, call, ., checkArrowEquivalenceHelper, (, that, ., call, ,, eqMethod, ), ;, }, @, Override]
[), &&, call, ., checkArrowEquivalenceHelper, (, that, ., call, ,, eqMethod, ), ;, }, @, Override, public, int, hashCode, (]
[;, }, @, Override, public, int, hashCode, (, ), {, return, isInterface, (, ), ?, getReferenceName, (, ), ., hashCode]
[., checkArrowEquivalenceHelper, (, that, ., call, ,, eqMethod, ), ;, }, @, Override, public, int, hashCode, (, ), {, return]
[,, eqMethod, ), ;, }, @, Override, public, int, hashCode, (, ), {, return, isInterface, (, ), ?, getReferenceName, (]
[., call, ,, eqMethod, ), ;, }, @, Override, public, int, hashCode, (, ), {, return, isInterface, (, ), ?]
[), ;, }, @, Override, public, int, hashCode, (, ), {, return, isInterface, (, ), ?, getReferenceName, (, ), .]
[;, }, public, boolean, hasEqualCallType, (, FunctionType, otherType, ), {, return, this, ., call, ., checkArrowEquivalenceHelper, (, otherType, ., call]
[?, getReferenceName, (, ), ., hashCode, (, ), :, call, ., hashCode, (, ), ;, }, public, boolean, hasEqualCallType, (]
[:, call, ., hashCode, (, ), ;, }, public, boolean, hasEqualCallType, (, FunctionType, otherType, ), {, return, this, ., call]
[., hashCode, (, ), :, call, ., hashCode, (, ), ;, }, public, boolean, hasEqualCallType, (, FunctionType, otherType, ), {]
[;, }, public, boolean, hasEqualCallType, (, FunctionType, otherType, ), {, return, this, ., call, ., checkArrowEquivalenceHelper, (, otherType, ., call]
[., hashCode, (, ), ;, }, public, boolean, hasEqualCallType, (, FunctionType, otherType, ), {, return, this, ., call, ., checkArrowEquivalenceHelper]
[;, }, @, Override, String, toStringHelper, (, boolean, forAnnotations, ), {, if, (, !, isPrettyPrint, (, ), ||, this, ==]
[., checkArrowEquivalenceHelper, (, otherType, ., call, ,, EquivalenceMethod, ., IDENTITY, ), ;, }, @, Override, String, toStringHelper, (, boolean, forAnnotations]
[., call, ., checkArrowEquivalenceHelper, (, otherType, ., call, ,, EquivalenceMethod, ., IDENTITY, ), ;, }, @, Override, String, toStringHelper, (]
[,, EquivalenceMethod, ., IDENTITY, ), ;, }, @, Override, String, toStringHelper, (, boolean, forAnnotations, ), {, if, (, !, isPrettyPrint]
[., call, ,, EquivalenceMethod, ., IDENTITY, ), ;, }, @, Override, String, toStringHelper, (, boolean, forAnnotations, ), {, if, (]
[), ;, }, @, Override, String, toStringHelper, (, boolean, forAnnotations, ), {, if, (, !, isPrettyPrint, (, ), ||, this]
[., IDENTITY, ), ;, }, @, Override, String, toStringHelper, (, boolean, forAnnotations, ), {, if, (, !, isPrettyPrint, (, )]
[), {, return, "Function", ;, }, setPrettyPrint, (, false, ), ;, StringBuilder, b, =, new, StringBuilder, (, 32, ), ;]
[||, this, ==, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ), {, return, "Function", ;, }, setPrettyPrint, (, false]
[||, this, ==, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ), {, return, "Function", ;, }, setPrettyPrint, (, false]
[), {, return, "Function", ;, }, setPrettyPrint, (, false, ), ;, StringBuilder, b, =, new, StringBuilder, (, 32, ), ;]
[==, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ), {, return, "Function", ;, }, setPrettyPrint, (, false, ), ;]
[), {, return, "Function", ;, }, setPrettyPrint, (, false, ), ;, StringBuilder, b, =, new, StringBuilder, (, 32, ), ;]
[., getNativeType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ), {, return, "Function", ;, }, setPrettyPrint, (, false, ), ;, StringBuilder, b]
[), ), {, return, "Function", ;, }, setPrettyPrint, (, false, ), ;, StringBuilder, b, =, new, StringBuilder, (, 32, )]
[., FUNCTION_INSTANCE_TYPE, ), ), {, return, "Function", ;, }, setPrettyPrint, (, false, ), ;, StringBuilder, b, =, new, StringBuilder, (]
[;, }, setPrettyPrint, (, false, ), ;, StringBuilder, b, =, new, StringBuilder, (, 32, ), ;, b, ., append, (]
[;, StringBuilder, b, =, new, StringBuilder, (, 32, ), ;, b, ., append, (, "function (", ), ;, int, paramNum, =]
[), ;, StringBuilder, b, =, new, StringBuilder, (, 32, ), ;, b, ., append, (, "function (", ), ;, int, paramNum]
[;, b, ., append, (, "function (", ), ;, int, paramNum, =, call, ., parameters, ., getChildCount, (, ), ;, boolean]
[), ;, b, ., append, (, "function (", ), ;, int, paramNum, =, call, ., parameters, ., getChildCount, (, ), ;]
[;, int, paramNum, =, call, ., parameters, ., getChildCount, (, ), ;, boolean, hasKnownTypeOfThis, =, !, (, typeOfThis, instanceof, UnknownType]
[., append, (, "function (", ), ;, int, paramNum, =, call, ., parameters, ., getChildCount, (, ), ;, boolean, hasKnownTypeOfThis, =]
[), ;, int, paramNum, =, call, ., parameters, ., getChildCount, (, ), ;, boolean, hasKnownTypeOfThis, =, !, (, typeOfThis, instanceof]
[;, boolean, hasKnownTypeOfThis, =, !, (, typeOfThis, instanceof, UnknownType, ), ;, if, (, hasKnownTypeOfThis, ), {, if, (, isConstructor, (]
[., getChildCount, (, ), ;, boolean, hasKnownTypeOfThis, =, !, (, typeOfThis, instanceof, UnknownType, ), ;, if, (, hasKnownTypeOfThis, ), {]
[., parameters, ., getChildCount, (, ), ;, boolean, hasKnownTypeOfThis, =, !, (, typeOfThis, instanceof, UnknownType, ), ;, if, (, hasKnownTypeOfThis]
[;, if, (, hasKnownTypeOfThis, ), {, if, (, isConstructor, (, ), ), {, b, ., append, (, "new:", ), ;]
[;, if, (, hasKnownTypeOfThis, ), {, if, (, isConstructor, (, ), ), {, b, ., append, (, "new:", ), ;]
[), ;, if, (, hasKnownTypeOfThis, ), {, if, (, isConstructor, (, ), ), {, b, ., append, (, "new:", )]
[instanceof, UnknownType, ), ;, if, (, hasKnownTypeOfThis, ), {, if, (, isConstructor, (, ), ), {, b, ., append, (]
[), {, if, (, isConstructor, (, ), ), {, b, ., append, (, "new:", ), ;, }, else, {, b]
[), {, b, ., append, (, "new:", ), ;, }, else, {, b, ., append, (, "this:", ), ;, }]
[;, }, else, {, b, ., append, (, "this:", ), ;, }, b, ., append, (, typeOfThis, ., toStringHelper, (]
[., append, (, "new:", ), ;, }, else, {, b, ., append, (, "this:", ), ;, }, b, ., append]
[), ;, }, else, {, b, ., append, (, "this:", ), ;, }, b, ., append, (, typeOfThis, ., toStringHelper]
[;, }, b, ., append, (, typeOfThis, ., toStringHelper, (, forAnnotations, ), ), ;, }, if, (, paramNum, >, 0]
[., append, (, "this:", ), ;, }, b, ., append, (, typeOfThis, ., toStringHelper, (, forAnnotations, ), ), ;, }]
[), ;, }, b, ., append, (, typeOfThis, ., toStringHelper, (, forAnnotations, ), ), ;, }, if, (, paramNum, >]
[;, }, if, (, paramNum, >, 0, ), {, if, (, hasKnownTypeOfThis, ), {, b, ., append, (, ", ", )]
[., append, (, typeOfThis, ., toStringHelper, (, forAnnotations, ), ), ;, }, if, (, paramNum, >, 0, ), {, if]
[), ;, }, if, (, paramNum, >, 0, ), {, if, (, hasKnownTypeOfThis, ), {, b, ., append, (, ", "]
[., toStringHelper, (, forAnnotations, ), ), ;, }, if, (, paramNum, >, 0, ), {, if, (, hasKnownTypeOfThis, ), {]
[), ), ;, }, if, (, paramNum, >, 0, ), {, if, (, hasKnownTypeOfThis, ), {, b, ., append, (]
[), {, if, (, hasKnownTypeOfThis, ), {, b, ., append, (, ", ", ), ;, }, Node, p, =, call, .]
[>, 0, ), {, if, (, hasKnownTypeOfThis, ), {, b, ., append, (, ", ", ), ;, }, Node, p, =]
[), {, if, (, hasKnownTypeOfThis, ), {, b, ., append, (, ", ", ), ;, }, Node, p, =, call, .]
[), {, b, ., append, (, ", ", ), ;, }, Node, p, =, call, ., parameters, ., getFirstChild, (, )]
[;, }, Node, p, =, call, ., parameters, ., getFirstChild, (, ), ;, appendArgString, (, b, ,, p, ,, forAnnotations]
[., append, (, ", ", ), ;, }, Node, p, =, call, ., parameters, ., getFirstChild, (, ), ;, appendArgString, (]
[), ;, }, Node, p, =, call, ., parameters, ., getFirstChild, (, ), ;, appendArgString, (, b, ,, p, ,]
[;, appendArgString, (, b, ,, p, ,, forAnnotations, ), ;, p, =, p, ., getNext, (, ), ;, while, (]
[., getFirstChild, (, ), ;, appendArgString, (, b, ,, p, ,, forAnnotations, ), ;, p, =, p, ., getNext, (]
[., parameters, ., getFirstChild, (, ), ;, appendArgString, (, b, ,, p, ,, forAnnotations, ), ;, p, =, p, .]
[;, p, =, p, ., getNext, (, ), ;, while, (, p, !=, null, ), {, b, ., append, (]
[,, p, ,, forAnnotations, ), ;, p, =, p, ., getNext, (, ), ;, while, (, p, !=, null, )]
[,, forAnnotations, ), ;, p, =, p, ., getNext, (, ), ;, while, (, p, !=, null, ), {, b]
[), ;, p, =, p, ., getNext, (, ), ;, while, (, p, !=, null, ), {, b, ., append]
[=, p, ., getNext, (, ), ;, while, (, p, !=, null, ), {, b, ., append, (, ", ", )]
[;, while, (, p, !=, null, ), {, b, ., append, (, ", ", ), ;, appendArgString, (, b, ,, p]
[., getNext, (, ), ;, while, (, p, !=, null, ), {, b, ., append, (, ", ", ), ;, appendArgString]
[), {, b, ., append, (, ", ", ), ;, appendArgString, (, b, ,, p, ,, forAnnotations, ), ;, p, =]
[!=, null, ), {, b, ., append, (, ", ", ), ;, appendArgString, (, b, ,, p, ,, forAnnotations, ), ;]
[), {, b, ., append, (, ", ", ), ;, appendArgString, (, b, ,, p, ,, forAnnotations, ), ;, p, =]
[;, appendArgString, (, b, ,, p, ,, forAnnotations, ), ;, p, =, p, ., getNext, (, ), ;, }, }]
[., append, (, ", ", ), ;, appendArgString, (, b, ,, p, ,, forAnnotations, ), ;, p, =, p, ., getNext]
[), ;, appendArgString, (, b, ,, p, ,, forAnnotations, ), ;, p, =, p, ., getNext, (, ), ;, }]
[;, p, =, p, ., getNext, (, ), ;, }, }, b, ., append, (, "): ", ), ;, b, .]
[,, p, ,, forAnnotations, ), ;, p, =, p, ., getNext, (, ), ;, }, }, b, ., append, (]
[,, forAnnotations, ), ;, p, =, p, ., getNext, (, ), ;, }, }, b, ., append, (, "): ", )]
[), ;, p, =, p, ., getNext, (, ), ;, }, }, b, ., append, (, "): ", ), ;, b]
[=, p, ., getNext, (, ), ;, }, }, b, ., append, (, "): ", ), ;, b, ., append, (]
[;, }, }, b, ., append, (, "): ", ), ;, b, ., append, (, call, ., returnType, ., toStringHelper, (]
[., getNext, (, ), ;, }, }, b, ., append, (, "): ", ), ;, b, ., append, (, call, .]
[;, b, ., append, (, call, ., returnType, ., toStringHelper, (, forAnnotations, ), ), ;, setPrettyPrint, (, true, ), ;]
[., append, (, "): ", ), ;, b, ., append, (, call, ., returnType, ., toStringHelper, (, forAnnotations, ), ), ;]
[), ;, b, ., append, (, call, ., returnType, ., toStringHelper, (, forAnnotations, ), ), ;, setPrettyPrint, (, true, )]
[;, setPrettyPrint, (, true, ), ;, return, b, ., toString, (, ), ;, }, private, void, appendArgString, (, StringBuilder, b]
[., append, (, call, ., returnType, ., toStringHelper, (, forAnnotations, ), ), ;, setPrettyPrint, (, true, ), ;, return, b]
[), ;, setPrettyPrint, (, true, ), ;, return, b, ., toString, (, ), ;, }, private, void, appendArgString, (, StringBuilder]
[., toStringHelper, (, forAnnotations, ), ), ;, setPrettyPrint, (, true, ), ;, return, b, ., toString, (, ), ;, }]
[., returnType, ., toStringHelper, (, forAnnotations, ), ), ;, setPrettyPrint, (, true, ), ;, return, b, ., toString, (, )]
[), ), ;, setPrettyPrint, (, true, ), ;, return, b, ., toString, (, ), ;, }, private, void, appendArgString, (]
[;, return, b, ., toString, (, ), ;, }, private, void, appendArgString, (, StringBuilder, b, ,, Node, p, ,, boolean]
[), ;, return, b, ., toString, (, ), ;, }, private, void, appendArgString, (, StringBuilder, b, ,, Node, p, ,]
[;, }, private, void, appendArgString, (, StringBuilder, b, ,, Node, p, ,, boolean, forAnnotations, ), {, if, (, p, .]
[., toString, (, ), ;, }, private, void, appendArgString, (, StringBuilder, b, ,, Node, p, ,, boolean, forAnnotations, ), {]
[), {, appendVarArgsString, (, b, ,, p, ., getJSType, (, ), ,, forAnnotations, ), ;, }, else, if, (, p]
[., isVarArgs, (, ), ), {, appendVarArgsString, (, b, ,, p, ., getJSType, (, ), ,, forAnnotations, ), ;, }]
[;, }, else, if, (, p, ., isOptionalArg, (, ), ), {, appendOptionalArgString, (, b, ,, p, ., getJSType, (]
[,, p, ., getJSType, (, ), ,, forAnnotations, ), ;, }, else, if, (, p, ., isOptionalArg, (, ), )]
[,, forAnnotations, ), ;, }, else, if, (, p, ., isOptionalArg, (, ), ), {, appendOptionalArgString, (, b, ,, p]
[., getJSType, (, ), ,, forAnnotations, ), ;, }, else, if, (, p, ., isOptionalArg, (, ), ), {, appendOptionalArgString]
[), ;, }, else, if, (, p, ., isOptionalArg, (, ), ), {, appendOptionalArgString, (, b, ,, p, ., getJSType]
[), {, appendOptionalArgString, (, b, ,, p, ., getJSType, (, ), ,, forAnnotations, ), ;, }, else, {, b, .]
[., isOptionalArg, (, ), ), {, appendOptionalArgString, (, b, ,, p, ., getJSType, (, ), ,, forAnnotations, ), ;, }]
[;, }, else, {, b, ., append, (, p, ., getJSType, (, ), ., toStringHelper, (, forAnnotations, ), ), ;]
[,, p, ., getJSType, (, ), ,, forAnnotations, ), ;, }, else, {, b, ., append, (, p, ., getJSType]
[,, forAnnotations, ), ;, }, else, {, b, ., append, (, p, ., getJSType, (, ), ., toStringHelper, (, forAnnotations]
[., getJSType, (, ), ,, forAnnotations, ), ;, }, else, {, b, ., append, (, p, ., getJSType, (, )]
[), ;, }, else, {, b, ., append, (, p, ., getJSType, (, ), ., toStringHelper, (, forAnnotations, ), )]
[;, }, }, private, void, appendVarArgsString, (, StringBuilder, builder, ,, JSType, paramType, ,, boolean, forAnnotations, ), {, if, (, paramType]
[., append, (, p, ., getJSType, (, ), ., toStringHelper, (, forAnnotations, ), ), ;, }, }, private, void, appendVarArgsString]
[), ;, }, }, private, void, appendVarArgsString, (, StringBuilder, builder, ,, JSType, paramType, ,, boolean, forAnnotations, ), {, if, (]
[., toStringHelper, (, forAnnotations, ), ), ;, }, }, private, void, appendVarArgsString, (, StringBuilder, builder, ,, JSType, paramType, ,, boolean]
[., getJSType, (, ), ., toStringHelper, (, forAnnotations, ), ), ;, }, }, private, void, appendVarArgsString, (, StringBuilder, builder, ,]
[), ), ;, }, }, private, void, appendVarArgsString, (, StringBuilder, builder, ,, JSType, paramType, ,, boolean, forAnnotations, ), {, if]
[), {, paramType, =, paramType, ., toMaybeUnionType, (, ), ., getRestrictedUnion, (, registry, ., getNativeType, (, JSTypeNative, ., VOID_TYPE, )]
[., isUnionType, (, ), ), {, paramType, =, paramType, ., toMaybeUnionType, (, ), ., getRestrictedUnion, (, registry, ., getNativeType, (]
[=, paramType, ., toMaybeUnionType, (, ), ., getRestrictedUnion, (, registry, ., getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ), ;, }]
[;, }, builder, ., append, (, "...[", ), ., append, (, paramType, ., toStringHelper, (, forAnnotations, ), ), ., append]
[., getRestrictedUnion, (, registry, ., getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ), ;, }, builder, ., append, (, "...[", )]
[., toMaybeUnionType, (, ), ., getRestrictedUnion, (, registry, ., getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ), ;, }, builder, .]
[), ;, }, builder, ., append, (, "...[", ), ., append, (, paramType, ., toStringHelper, (, forAnnotations, ), ), .]
[., getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ), ;, }, builder, ., append, (, "...[", ), ., append, (, paramType]
[), ), ;, }, builder, ., append, (, "...[", ), ., append, (, paramType, ., toStringHelper, (, forAnnotations, ), )]
[., VOID_TYPE, ), ), ;, }, builder, ., append, (, "...[", ), ., append, (, paramType, ., toStringHelper, (, forAnnotations]
[;, }, private, void, appendOptionalArgString, (, StringBuilder, builder, ,, JSType, paramType, ,, boolean, forAnnotations, ), {, if, (, paramType, .]
[., append, (, "]", ), ;, }, private, void, appendOptionalArgString, (, StringBuilder, builder, ,, JSType, paramType, ,, boolean, forAnnotations, )]
[., append, (, paramType, ., toStringHelper, (, forAnnotations, ), ), ., append, (, "]", ), ;, }, private, void, appendOptionalArgString]
[., append, (, "...[", ), ., append, (, paramType, ., toStringHelper, (, forAnnotations, ), ), ., append, (, "]", )]
[), ., append, (, paramType, ., toStringHelper, (, forAnnotations, ), ), ., append, (, "]", ), ;, }, private, void]
[), ., append, (, "]", ), ;, }, private, void, appendOptionalArgString, (, StringBuilder, builder, ,, JSType, paramType, ,, boolean, forAnnotations]
[., toStringHelper, (, forAnnotations, ), ), ., append, (, "]", ), ;, }, private, void, appendOptionalArgString, (, StringBuilder, builder, ,]
[), ), ., append, (, "]", ), ;, }, private, void, appendOptionalArgString, (, StringBuilder, builder, ,, JSType, paramType, ,, boolean]
[), ;, }, private, void, appendOptionalArgString, (, StringBuilder, builder, ,, JSType, paramType, ,, boolean, forAnnotations, ), {, if, (, paramType]
[), {, paramType, =, paramType, ., toMaybeUnionType, (, ), ., getRestrictedUnion, (, registry, ., getNativeType, (, JSTypeNative, ., VOID_TYPE, )]
[., isUnionType, (, ), ), {, paramType, =, paramType, ., toMaybeUnionType, (, ), ., getRestrictedUnion, (, registry, ., getNativeType, (]
[=, paramType, ., toMaybeUnionType, (, ), ., getRestrictedUnion, (, registry, ., getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ), ;, }]
[;, }, builder, ., append, (, paramType, ., toStringHelper, (, forAnnotations, ), ), ., append, (, "=", ), ;, }]
[., getRestrictedUnion, (, registry, ., getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ), ;, }, builder, ., append, (, paramType, .]
[., toMaybeUnionType, (, ), ., getRestrictedUnion, (, registry, ., getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ), ;, }, builder, .]
[), ;, }, builder, ., append, (, paramType, ., toStringHelper, (, forAnnotations, ), ), ., append, (, "=", ), ;]
[., getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ), ;, }, builder, ., append, (, paramType, ., toStringHelper, (, forAnnotations, )]
[), ), ;, }, builder, ., append, (, paramType, ., toStringHelper, (, forAnnotations, ), ), ., append, (, "=", )]
[., VOID_TYPE, ), ), ;, }, builder, ., append, (, paramType, ., toStringHelper, (, forAnnotations, ), ), ., append, (]
[;, }, @, Override, public, boolean, isSubtype, (, JSType, that, ), {, if, (, JSType, ., isSubtypeHelper, (, this, ,]
[., append, (, "=", ), ;, }, @, Override, public, boolean, isSubtype, (, JSType, that, ), {, if, (, JSType]
[., append, (, paramType, ., toStringHelper, (, forAnnotations, ), ), ., append, (, "=", ), ;, }, @, Override, public]
[), ., append, (, "=", ), ;, }, @, Override, public, boolean, isSubtype, (, JSType, that, ), {, if, (]
[., toStringHelper, (, forAnnotations, ), ), ., append, (, "=", ), ;, }, @, Override, public, boolean, isSubtype, (, JSType]
[), ), ., append, (, "=", ), ;, }, @, Override, public, boolean, isSubtype, (, JSType, that, ), {, if]
[), ;, }, @, Override, public, boolean, isSubtype, (, JSType, that, ), {, if, (, JSType, ., isSubtypeHelper, (, this]
[), {, return, true, ;, }, if, (, that, ., isFunctionType, (, ), ), {, FunctionType, other, =, that, .]
[., isSubtypeHelper, (, this, ,, that, ), ), {, return, true, ;, }, if, (, that, ., isFunctionType, (, )]
[,, that, ), ), {, return, true, ;, }, if, (, that, ., isFunctionType, (, ), ), {, FunctionType, other]
[), ), {, return, true, ;, }, if, (, that, ., isFunctionType, (, ), ), {, FunctionType, other, =, that]
[;, }, if, (, that, ., isFunctionType, (, ), ), {, FunctionType, other, =, that, ., toMaybeFunctionType, (, ), ;]
[), {, FunctionType, other, =, that, ., toMaybeFunctionType, (, ), ;, if, (, other, ., isInterface, (, ), ), {]
[., isFunctionType, (, ), ), {, FunctionType, other, =, that, ., toMaybeFunctionType, (, ), ;, if, (, other, ., isInterface]
[;, if, (, other, ., isInterface, (, ), ), {, return, true, ;, }, if, (, isInterface, (, ), )]
[., toMaybeFunctionType, (, ), ;, if, (, other, ., isInterface, (, ), ), {, return, true, ;, }, if, (]
[), {, return, true, ;, }, if, (, isInterface, (, ), ), {, return, false, ;, }, boolean, treatThisTypesAsCovariant, =]
[., isInterface, (, ), ), {, return, true, ;, }, if, (, isInterface, (, ), ), {, return, false, ;]
[;, }, if, (, isInterface, (, ), ), {, return, false, ;, }, boolean, treatThisTypesAsCovariant, =, (, other, ., typeOfThis]
[), {, return, false, ;, }, boolean, treatThisTypesAsCovariant, =, (, other, ., typeOfThis, ., toObjectType, (, ), !=, null, &&]
[;, }, boolean, treatThisTypesAsCovariant, =, (, other, ., typeOfThis, ., toObjectType, (, ), !=, null, &&, other, ., typeOfThis, .]
[;, return, treatThisTypesAsCovariant, &&, this, ., call, ., isSubtype, (, other, ., call, ), ;, }, return, getNativeType, (, JSTypeNative]
[||, this, ., typeOfThis, ., isSubtype, (, other, ., typeOfThis, ), ;, return, treatThisTypesAsCovariant, &&, this, ., call, ., isSubtype]
[||, other, ., typeOfThis, ., isSubtype, (, this, ., typeOfThis, ), ||, this, ., typeOfThis, ., isSubtype, (, other, .]
[), ||, other, ., typeOfThis, ., isSubtype, (, this, ., typeOfThis, ), ||, this, ., typeOfThis, ., isSubtype, (, other]
[&&, other, ., typeOfThis, ., toObjectType, (, ), ., getConstructor, (, ), ., isInterface, (, ), ), ||, other, .]
[&&, other, ., typeOfThis, ., toObjectType, (, ), ., getConstructor, (, ), !=, null, &&, other, ., typeOfThis, ., toObjectType]
[!=, null, &&, other, ., typeOfThis, ., toObjectType, (, ), ., getConstructor, (, ), !=, null, &&, other, ., typeOfThis]
[., toObjectType, (, ), !=, null, &&, other, ., typeOfThis, ., toObjectType, (, ), ., getConstructor, (, ), !=, null]
[., typeOfThis, ., toObjectType, (, ), !=, null, &&, other, ., typeOfThis, ., toObjectType, (, ), ., getConstructor, (, )]
[&&, other, ., typeOfThis, ., toObjectType, (, ), ., getConstructor, (, ), !=, null, &&, other, ., typeOfThis, ., toObjectType]
[&&, other, ., typeOfThis, ., toObjectType, (, ), ., getConstructor, (, ), ., isInterface, (, ), ), ||, other, .]
[!=, null, &&, other, ., typeOfThis, ., toObjectType, (, ), ., getConstructor, (, ), ., isInterface, (, ), ), ||]
[., getConstructor, (, ), !=, null, &&, other, ., typeOfThis, ., toObjectType, (, ), ., getConstructor, (, ), ., isInterface]
[., toObjectType, (, ), ., getConstructor, (, ), !=, null, &&, other, ., typeOfThis, ., toObjectType, (, ), ., getConstructor]
[., typeOfThis, ., toObjectType, (, ), ., getConstructor, (, ), !=, null, &&, other, ., typeOfThis, ., toObjectType, (, )]
[&&, other, ., typeOfThis, ., toObjectType, (, ), ., getConstructor, (, ), ., isInterface, (, ), ), ||, other, .]
[), ||, other, ., typeOfThis, ., isSubtype, (, this, ., typeOfThis, ), ||, this, ., typeOfThis, ., isSubtype, (, other]
[., isInterface, (, ), ), ||, other, ., typeOfThis, ., isSubtype, (, this, ., typeOfThis, ), ||, this, ., typeOfThis]
[., getConstructor, (, ), ., isInterface, (, ), ), ||, other, ., typeOfThis, ., isSubtype, (, this, ., typeOfThis, )]
[., toObjectType, (, ), ., getConstructor, (, ), ., isInterface, (, ), ), ||, other, ., typeOfThis, ., isSubtype, (]
[., typeOfThis, ., toObjectType, (, ), ., getConstructor, (, ), ., isInterface, (, ), ), ||, other, ., typeOfThis, .]
[||, this, ., typeOfThis, ., isSubtype, (, other, ., typeOfThis, ), ;, return, treatThisTypesAsCovariant, &&, this, ., call, ., isSubtype]
[., isSubtype, (, this, ., typeOfThis, ), ||, this, ., typeOfThis, ., isSubtype, (, other, ., typeOfThis, ), ;, return]
[., typeOfThis, ., isSubtype, (, this, ., typeOfThis, ), ||, this, ., typeOfThis, ., isSubtype, (, other, ., typeOfThis, )]
[), ||, this, ., typeOfThis, ., isSubtype, (, other, ., typeOfThis, ), ;, return, treatThisTypesAsCovariant, &&, this, ., call, .]
[., typeOfThis, ), ||, this, ., typeOfThis, ., isSubtype, (, other, ., typeOfThis, ), ;, return, treatThisTypesAsCovariant, &&, this, .]
[;, return, treatThisTypesAsCovariant, &&, this, ., call, ., isSubtype, (, other, ., call, ), ;, }, return, getNativeType, (, JSTypeNative]
[., isSubtype, (, other, ., typeOfThis, ), ;, return, treatThisTypesAsCovariant, &&, this, ., call, ., isSubtype, (, other, ., call]
[., typeOfThis, ., isSubtype, (, other, ., typeOfThis, ), ;, return, treatThisTypesAsCovariant, &&, this, ., call, ., isSubtype, (, other]
[), ;, return, treatThisTypesAsCovariant, &&, this, ., call, ., isSubtype, (, other, ., call, ), ;, }, return, getNativeType, (]
[., typeOfThis, ), ;, return, treatThisTypesAsCovariant, &&, this, ., call, ., isSubtype, (, other, ., call, ), ;, }, return]
[;, }, return, getNativeType, (, JSTypeNative, ., FUNCTION_PROTOTYPE, ), ., isSubtype, (, that, ), ;, }, @, Override, public, <]
[&&, this, ., call, ., isSubtype, (, other, ., call, ), ;, }, return, getNativeType, (, JSTypeNative, ., FUNCTION_PROTOTYPE, )]
[;, }, return, getNativeType, (, JSTypeNative, ., FUNCTION_PROTOTYPE, ), ., isSubtype, (, that, ), ;, }, @, Override, public, <]
[., isSubtype, (, other, ., call, ), ;, }, return, getNativeType, (, JSTypeNative, ., FUNCTION_PROTOTYPE, ), ., isSubtype, (, that]
[., call, ., isSubtype, (, other, ., call, ), ;, }, return, getNativeType, (, JSTypeNative, ., FUNCTION_PROTOTYPE, ), ., isSubtype]
[), ;, }, return, getNativeType, (, JSTypeNative, ., FUNCTION_PROTOTYPE, ), ., isSubtype, (, that, ), ;, }, @, Override, public]
[., call, ), ;, }, return, getNativeType, (, JSTypeNative, ., FUNCTION_PROTOTYPE, ), ., isSubtype, (, that, ), ;, }, @]
[;, }, @, Override, public, <, T, >, T, visit, (, Visitor, <, T, >, visitor, ), {, return, visitor]
[., isSubtype, (, that, ), ;, }, @, Override, public, <, T, >, T, visit, (, Visitor, <, T, >]
[), ., isSubtype, (, that, ), ;, }, @, Override, public, <, T, >, T, visit, (, Visitor, <, T]
[., FUNCTION_PROTOTYPE, ), ., isSubtype, (, that, ), ;, }, @, Override, public, <, T, >, T, visit, (, Visitor]
[), ;, }, @, Override, public, <, T, >, T, visit, (, Visitor, <, T, >, visitor, ), {, return]
[;, }, @, Override, <, T, >, T, visit, (, RelationshipVisitor, <, T, >, visitor, ,, JSType, that, ), {]
[., caseFunctionType, (, this, ), ;, }, @, Override, <, T, >, T, visit, (, RelationshipVisitor, <, T, >, visitor]
[), ;, }, @, Override, <, T, >, T, visit, (, RelationshipVisitor, <, T, >, visitor, ,, JSType, that, )]
[;, }, public, ObjectType, getInstanceType, (, ), {, Preconditions, ., checkState, (, hasInstanceType, (, ), ), ;, return, typeOfThis, .]
[., caseFunctionType, (, this, ,, that, ), ;, }, public, ObjectType, getInstanceType, (, ), {, Preconditions, ., checkState, (, hasInstanceType]
[,, that, ), ;, }, public, ObjectType, getInstanceType, (, ), {, Preconditions, ., checkState, (, hasInstanceType, (, ), ), ;]
[), ;, }, public, ObjectType, getInstanceType, (, ), {, Preconditions, ., checkState, (, hasInstanceType, (, ), ), ;, return, typeOfThis]
[;, return, typeOfThis, ., toObjectType, (, ), ;, }, void, setInstanceType, (, ObjectType, instanceType, ), {, typeOfThis, =, instanceType, ;]
[., checkState, (, hasInstanceType, (, ), ), ;, return, typeOfThis, ., toObjectType, (, ), ;, }, void, setInstanceType, (, ObjectType]
[), ;, return, typeOfThis, ., toObjectType, (, ), ;, }, void, setInstanceType, (, ObjectType, instanceType, ), {, typeOfThis, =, instanceType]
[;, }, void, setInstanceType, (, ObjectType, instanceType, ), {, typeOfThis, =, instanceType, ;, }, public, boolean, hasInstanceType, (, ), {]
[., toObjectType, (, ), ;, }, void, setInstanceType, (, ObjectType, instanceType, ), {, typeOfThis, =, instanceType, ;, }, public, boolean]
[=, instanceType, ;, }, public, boolean, hasInstanceType, (, ), {, return, isConstructor, (, ), ||, isInterface, (, ), ;, }]
[;, }, public, boolean, hasInstanceType, (, ), {, return, isConstructor, (, ), ||, isInterface, (, ), ;, }, @, Override]
[;, }, @, Override, public, JSType, getTypeOfThis, (, ), {, return, typeOfThis, ., isEmptyType, (, ), ?, registry, ., getNativeObjectType]
[||, isInterface, (, ), ;, }, @, Override, public, JSType, getTypeOfThis, (, ), {, return, typeOfThis, ., isEmptyType, (, )]
[;, }, @, Override, public, JSType, getTypeOfThis, (, ), {, return, typeOfThis, ., isEmptyType, (, ), ?, registry, ., getNativeObjectType]
[;, }, public, Node, getSource, (, ), {, return, source, ;, }, public, void, setSource, (, Node, source, ), {]
[?, registry, ., getNativeObjectType, (, JSTypeNative, ., UNKNOWN_TYPE, ), :, typeOfThis, ;, }, public, Node, getSource, (, ), {, return]
[., isEmptyType, (, ), ?, registry, ., getNativeObjectType, (, JSTypeNative, ., UNKNOWN_TYPE, ), :, typeOfThis, ;, }, public, Node, getSource]
[:, typeOfThis, ;, }, public, Node, getSource, (, ), {, return, source, ;, }, public, void, setSource, (, Node, source]
[., getNativeObjectType, (, JSTypeNative, ., UNKNOWN_TYPE, ), :, typeOfThis, ;, }, public, Node, getSource, (, ), {, return, source, ;]
[), :, typeOfThis, ;, }, public, Node, getSource, (, ), {, return, source, ;, }, public, void, setSource, (, Node]
[., UNKNOWN_TYPE, ), :, typeOfThis, ;, }, public, Node, getSource, (, ), {, return, source, ;, }, public, void, setSource]
[;, }, public, Node, getSource, (, ), {, return, source, ;, }, public, void, setSource, (, Node, source, ), {]
[;, }, public, void, setSource, (, Node, source, ), {, if, (, prototypeSlot, !=, null, ), {, if, (, source]
[), {, if, (, source, ==, null, ||, prototypeSlot, ., getNode, (, ), ==, null, ), {, prototypeSlot, =, new]
[!=, null, ), {, if, (, source, ==, null, ||, prototypeSlot, ., getNode, (, ), ==, null, ), {, prototypeSlot]
[), {, if, (, source, ==, null, ||, prototypeSlot, ., getNode, (, ), ==, null, ), {, prototypeSlot, =, new]
[), {, prototypeSlot, =, new, Property, (, prototypeSlot, ., getName, (, ), ,, prototypeSlot, ., getType, (, ), ,, prototypeSlot]
[||, prototypeSlot, ., getNode, (, ), ==, null, ), {, prototypeSlot, =, new, Property, (, prototypeSlot, ., getName, (, )]
[==, null, ||, prototypeSlot, ., getNode, (, ), ==, null, ), {, prototypeSlot, =, new, Property, (, prototypeSlot, ., getName]
[||, prototypeSlot, ., getNode, (, ), ==, null, ), {, prototypeSlot, =, new, Property, (, prototypeSlot, ., getName, (, )]
[), {, prototypeSlot, =, new, Property, (, prototypeSlot, ., getName, (, ), ,, prototypeSlot, ., getType, (, ), ,, prototypeSlot]
[==, null, ), {, prototypeSlot, =, new, Property, (, prototypeSlot, ., getName, (, ), ,, prototypeSlot, ., getType, (, )]
[., getNode, (, ), ==, null, ), {, prototypeSlot, =, new, Property, (, prototypeSlot, ., getName, (, ), ,, prototypeSlot]
[), {, prototypeSlot, =, new, Property, (, prototypeSlot, ., getName, (, ), ,, prototypeSlot, ., getType, (, ), ,, prototypeSlot]
[=, new, Property, (, prototypeSlot, ., getName, (, ), ,, prototypeSlot, ., getType, (, ), ,, prototypeSlot, ., isTypeInferred, (]
[;, }, }, this, ., source, =, source, ;, }, private, void, addSubType, (, FunctionType, subType, ), {, if, (]
[,, prototypeSlot, ., getType, (, ), ,, prototypeSlot, ., isTypeInferred, (, ), ,, source, ), ;, }, }, this, .]
[., getName, (, ), ,, prototypeSlot, ., getType, (, ), ,, prototypeSlot, ., isTypeInferred, (, ), ,, source, ), ;]
[,, prototypeSlot, ., isTypeInferred, (, ), ,, source, ), ;, }, }, this, ., source, =, source, ;, }, private]
[., getType, (, ), ,, prototypeSlot, ., isTypeInferred, (, ), ,, source, ), ;, }, }, this, ., source, =]
[,, source, ), ;, }, }, this, ., source, =, source, ;, }, private, void, addSubType, (, FunctionType, subType, )]
[., isTypeInferred, (, ), ,, source, ), ;, }, }, this, ., source, =, source, ;, }, private, void, addSubType]
[), ;, }, }, this, ., source, =, source, ;, }, private, void, addSubType, (, FunctionType, subType, ), {, if]
[=, source, ;, }, private, void, addSubType, (, FunctionType, subType, ), {, if, (, subTypes, ==, null, ), {, subTypes]
[., source, =, source, ;, }, private, void, addSubType, (, FunctionType, subType, ), {, if, (, subTypes, ==, null, )]
[;, }, private, void, addSubType, (, FunctionType, subType, ), {, if, (, subTypes, ==, null, ), {, subTypes, =, Lists]
[), {, subTypes, =, Lists, ., newArrayList, (, ), ;, }, subTypes, ., add, (, subType, ), ;, }, @]
[==, null, ), {, subTypes, =, Lists, ., newArrayList, (, ), ;, }, subTypes, ., add, (, subType, ), ;]
[), {, subTypes, =, Lists, ., newArrayList, (, ), ;, }, subTypes, ., add, (, subType, ), ;, }, @]
[=, Lists, ., newArrayList, (, ), ;, }, subTypes, ., add, (, subType, ), ;, }, @, Override, public, void]
[;, }, subTypes, ., add, (, subType, ), ;, }, @, Override, public, void, clearCachedValues, (, ), {, super, .]
[., newArrayList, (, ), ;, }, subTypes, ., add, (, subType, ), ;, }, @, Override, public, void, clearCachedValues, (]
[;, }, @, Override, public, void, clearCachedValues, (, ), {, super, ., clearCachedValues, (, ), ;, if, (, subTypes, !=]
[., add, (, subType, ), ;, }, @, Override, public, void, clearCachedValues, (, ), {, super, ., clearCachedValues, (, )]
[), ;, }, @, Override, public, void, clearCachedValues, (, ), {, super, ., clearCachedValues, (, ), ;, if, (, subTypes]
[;, if, (, subTypes, !=, null, ), {, for, (, FunctionType, subType, :, subTypes, ), {, subType, ., clearCachedValues, (]
[., clearCachedValues, (, ), ;, if, (, subTypes, !=, null, ), {, for, (, FunctionType, subType, :, subTypes, ), {]
[), {, for, (, FunctionType, subType, :, subTypes, ), {, subType, ., clearCachedValues, (, ), ;, }, }, if, (]
[!=, null, ), {, for, (, FunctionType, subType, :, subTypes, ), {, subType, ., clearCachedValues, (, ), ;, }, }]
[), {, for, (, FunctionType, subType, :, subTypes, ), {, subType, ., clearCachedValues, (, ), ;, }, }, if, (]
[), {, subType, ., clearCachedValues, (, ), ;, }, }, if, (, !, isNativeObjectType, (, ), ), {, if, (]
[;, }, }, if, (, !, isNativeObjectType, (, ), ), {, if, (, hasInstanceType, (, ), ), {, getInstanceType, (]
[., clearCachedValues, (, ), ;, }, }, if, (, !, isNativeObjectType, (, ), ), {, if, (, hasInstanceType, (, )]
[), {, if, (, hasInstanceType, (, ), ), {, getInstanceType, (, ), ., clearCachedValues, (, ), ;, }, if, (]
[), {, if, (, hasInstanceType, (, ), ), {, getInstanceType, (, ), ., clearCachedValues, (, ), ;, }, if, (]
[), {, getInstanceType, (, ), ., clearCachedValues, (, ), ;, }, if, (, prototypeSlot, !=, null, ), {, (, (]
[;, }, if, (, prototypeSlot, !=, null, ), {, (, (, ObjectType, ), prototypeSlot, ., getType, (, ), ), .]
[., clearCachedValues, (, ), ;, }, if, (, prototypeSlot, !=, null, ), {, (, (, ObjectType, ), prototypeSlot, ., getType]
[), {, (, (, ObjectType, ), prototypeSlot, ., getType, (, ), ), ., clearCachedValues, (, ), ;, }, }, }]
[!=, null, ), {, (, (, ObjectType, ), prototypeSlot, ., getType, (, ), ), ., clearCachedValues, (, ), ;, }]
[), {, (, (, ObjectType, ), prototypeSlot, ., getType, (, ), ), ., clearCachedValues, (, ), ;, }, }, }]
[;, }, }, }, public, List, <, FunctionType, >, getSubTypes, (, ), {, return, subTypes, ;, }, @, Override, public]
[., clearCachedValues, (, ), ;, }, }, }, public, List, <, FunctionType, >, getSubTypes, (, ), {, return, subTypes, ;]
[), ., clearCachedValues, (, ), ;, }, }, }, public, List, <, FunctionType, >, getSubTypes, (, ), {, return, subTypes]
[), ., clearCachedValues, (, ), ;, }, }, }, public, List, <, FunctionType, >, getSubTypes, (, ), {, return, subTypes]
[., getType, (, ), ), ., clearCachedValues, (, ), ;, }, }, }, public, List, <, FunctionType, >, getSubTypes, (]
[;, }, @, Override, public, boolean, hasCachedValues, (, ), {, return, prototypeSlot, !=, null, ||, super, ., hasCachedValues, (, )]
[;, }, @, Override, JSType, resolveInternal, (, ErrorReporter, t, ,, StaticScope, <, JSType, >, scope, ), {, setResolvedTypeInternal, (, this]
[||, super, ., hasCachedValues, (, ), ;, }, @, Override, JSType, resolveInternal, (, ErrorReporter, t, ,, StaticScope, <, JSType, >]
[!=, null, ||, super, ., hasCachedValues, (, ), ;, }, @, Override, JSType, resolveInternal, (, ErrorReporter, t, ,, StaticScope, <]
[||, super, ., hasCachedValues, (, ), ;, }, @, Override, JSType, resolveInternal, (, ErrorReporter, t, ,, StaticScope, <, JSType, >]
[;, }, @, Override, JSType, resolveInternal, (, ErrorReporter, t, ,, StaticScope, <, JSType, >, scope, ), {, setResolvedTypeInternal, (, this]
[., hasCachedValues, (, ), ;, }, @, Override, JSType, resolveInternal, (, ErrorReporter, t, ,, StaticScope, <, JSType, >, scope, )]
[;, call, =, (, ArrowType, ), safeResolve, (, call, ,, t, ,, scope, ), ;, if, (, prototypeSlot, !=, null]
[), ;, call, =, (, ArrowType, ), safeResolve, (, call, ,, t, ,, scope, ), ;, if, (, prototypeSlot, !=]
[=, (, ArrowType, ), safeResolve, (, call, ,, t, ,, scope, ), ;, if, (, prototypeSlot, !=, null, ), {]
[;, if, (, prototypeSlot, !=, null, ), {, prototypeSlot, ., setType, (, safeResolve, (, prototypeSlot, ., getType, (, ), ,]
[;, if, (, prototypeSlot, !=, null, ), {, prototypeSlot, ., setType, (, safeResolve, (, prototypeSlot, ., getType, (, ), ,]
[,, t, ,, scope, ), ;, if, (, prototypeSlot, !=, null, ), {, prototypeSlot, ., setType, (, safeResolve, (, prototypeSlot]
[,, scope, ), ;, if, (, prototypeSlot, !=, null, ), {, prototypeSlot, ., setType, (, safeResolve, (, prototypeSlot, ., getType]
[), ;, if, (, prototypeSlot, !=, null, ), {, prototypeSlot, ., setType, (, safeResolve, (, prototypeSlot, ., getType, (, )]
[), {, prototypeSlot, ., setType, (, safeResolve, (, prototypeSlot, ., getType, (, ), ,, t, ,, scope, ), ), ;]
[!=, null, ), {, prototypeSlot, ., setType, (, safeResolve, (, prototypeSlot, ., getType, (, ), ,, t, ,, scope, )]
[), {, prototypeSlot, ., setType, (, safeResolve, (, prototypeSlot, ., getType, (, ), ,, t, ,, scope, ), ), ;]
[;, }, JSType, maybeTypeOfThis, =, safeResolve, (, typeOfThis, ,, t, ,, scope, ), ;, if, (, maybeTypeOfThis, !=, null, )]
[., setType, (, safeResolve, (, prototypeSlot, ., getType, (, ), ,, t, ,, scope, ), ), ;, }, JSType, maybeTypeOfThis]
[), ;, }, JSType, maybeTypeOfThis, =, safeResolve, (, typeOfThis, ,, t, ,, scope, ), ;, if, (, maybeTypeOfThis, !=, null]
[,, t, ,, scope, ), ), ;, }, JSType, maybeTypeOfThis, =, safeResolve, (, typeOfThis, ,, t, ,, scope, ), ;]
[., getType, (, ), ,, t, ,, scope, ), ), ;, }, JSType, maybeTypeOfThis, =, safeResolve, (, typeOfThis, ,, t]
[,, scope, ), ), ;, }, JSType, maybeTypeOfThis, =, safeResolve, (, typeOfThis, ,, t, ,, scope, ), ;, if, (]
[), ), ;, }, JSType, maybeTypeOfThis, =, safeResolve, (, typeOfThis, ,, t, ,, scope, ), ;, if, (, maybeTypeOfThis, !=]
[;, if, (, maybeTypeOfThis, !=, null, ), {, maybeTypeOfThis, =, maybeTypeOfThis, ., restrictByNotNullOrUndefined, (, ), ;, }, if, (, maybeTypeOfThis]
[,, t, ,, scope, ), ;, if, (, maybeTypeOfThis, !=, null, ), {, maybeTypeOfThis, =, maybeTypeOfThis, ., restrictByNotNullOrUndefined, (, )]
[,, scope, ), ;, if, (, maybeTypeOfThis, !=, null, ), {, maybeTypeOfThis, =, maybeTypeOfThis, ., restrictByNotNullOrUndefined, (, ), ;, }]
[), ;, if, (, maybeTypeOfThis, !=, null, ), {, maybeTypeOfThis, =, maybeTypeOfThis, ., restrictByNotNullOrUndefined, (, ), ;, }, if, (]
[), {, maybeTypeOfThis, =, maybeTypeOfThis, ., restrictByNotNullOrUndefined, (, ), ;, }, if, (, maybeTypeOfThis, instanceof, ObjectType, ), {, typeOfThis, =]
[!=, null, ), {, maybeTypeOfThis, =, maybeTypeOfThis, ., restrictByNotNullOrUndefined, (, ), ;, }, if, (, maybeTypeOfThis, instanceof, ObjectType, ), {]
[), {, maybeTypeOfThis, =, maybeTypeOfThis, ., restrictByNotNullOrUndefined, (, ), ;, }, if, (, maybeTypeOfThis, instanceof, ObjectType, ), {, typeOfThis, =]
[=, maybeTypeOfThis, ., restrictByNotNullOrUndefined, (, ), ;, }, if, (, maybeTypeOfThis, instanceof, ObjectType, ), {, typeOfThis, =, maybeTypeOfThis, ;, }]
[;, }, if, (, maybeTypeOfThis, instanceof, ObjectType, ), {, typeOfThis, =, maybeTypeOfThis, ;, }, boolean, changed, =, false, ;, ImmutableList]
[., restrictByNotNullOrUndefined, (, ), ;, }, if, (, maybeTypeOfThis, instanceof, ObjectType, ), {, typeOfThis, =, maybeTypeOfThis, ;, }, boolean, changed]
[), {, typeOfThis, =, maybeTypeOfThis, ;, }, boolean, changed, =, false, ;, ImmutableList, ., Builder, <, ObjectType, >, resolvedInterfaces, =]
[instanceof, ObjectType, ), {, typeOfThis, =, maybeTypeOfThis, ;, }, boolean, changed, =, false, ;, ImmutableList, ., Builder, <, ObjectType, >]
[=, maybeTypeOfThis, ;, }, boolean, changed, =, false, ;, ImmutableList, ., Builder, <, ObjectType, >, resolvedInterfaces, =, ImmutableList, ., builder]
[;, }, boolean, changed, =, false, ;, ImmutableList, ., Builder, <, ObjectType, >, resolvedInterfaces, =, ImmutableList, ., builder, (, )]
[;, ImmutableList, ., Builder, <, ObjectType, >, resolvedInterfaces, =, ImmutableList, ., builder, (, ), ;, for, (, ObjectType, iface, :]
[;, for, (, ObjectType, iface, :, implementedInterfaces, ), {, ObjectType, resolvedIface, =, (, ObjectType, ), iface, ., resolve, (, t]
[., builder, (, ), ;, for, (, ObjectType, iface, :, implementedInterfaces, ), {, ObjectType, resolvedIface, =, (, ObjectType, ), iface]
[), {, ObjectType, resolvedIface, =, (, ObjectType, ), iface, ., resolve, (, t, ,, scope, ), ;, resolvedInterfaces, ., add]
[;, resolvedInterfaces, ., add, (, resolvedIface, ), ;, changed, |=, (, resolvedIface, !=, iface, ), ;, }, if, (, changed]
[;, resolvedInterfaces, ., add, (, resolvedIface, ), ;, changed, |=, (, resolvedIface, !=, iface, ), ;, }, if, (, changed]
[., resolve, (, t, ,, scope, ), ;, resolvedInterfaces, ., add, (, resolvedIface, ), ;, changed, |=, (, resolvedIface, !=]
[,, scope, ), ;, resolvedInterfaces, ., add, (, resolvedIface, ), ;, changed, |=, (, resolvedIface, !=, iface, ), ;, }]
[), ;, resolvedInterfaces, ., add, (, resolvedIface, ), ;, changed, |=, (, resolvedIface, !=, iface, ), ;, }, if, (]
[;, changed, |=, (, resolvedIface, !=, iface, ), ;, }, if, (, changed, ), {, implementedInterfaces, =, resolvedInterfaces, ., build]
[., add, (, resolvedIface, ), ;, changed, |=, (, resolvedIface, !=, iface, ), ;, }, if, (, changed, ), {]
[), ;, changed, |=, (, resolvedIface, !=, iface, ), ;, }, if, (, changed, ), {, implementedInterfaces, =, resolvedInterfaces, .]
[|=, (, resolvedIface, !=, iface, ), ;, }, if, (, changed, ), {, implementedInterfaces, =, resolvedInterfaces, ., build, (, )]
[;, }, if, (, changed, ), {, implementedInterfaces, =, resolvedInterfaces, ., build, (, ), ;, }, if, (, subTypes, !=]
[), ;, }, if, (, changed, ), {, implementedInterfaces, =, resolvedInterfaces, ., build, (, ), ;, }, if, (, subTypes]
[!=, iface, ), ;, }, if, (, changed, ), {, implementedInterfaces, =, resolvedInterfaces, ., build, (, ), ;, }, if]
[), ;, }, if, (, changed, ), {, implementedInterfaces, =, resolvedInterfaces, ., build, (, ), ;, }, if, (, subTypes]
[), {, implementedInterfaces, =, resolvedInterfaces, ., build, (, ), ;, }, if, (, subTypes, !=, null, ), {, for, (]
[=, resolvedInterfaces, ., build, (, ), ;, }, if, (, subTypes, !=, null, ), {, for, (, int, i, =]
[;, }, if, (, subTypes, !=, null, ), {, for, (, int, i, =, 0, ;, i, <, subTypes, .]
[., build, (, ), ;, }, if, (, subTypes, !=, null, ), {, for, (, int, i, =, 0, ;]
[), {, for, (, int, i, =, 0, ;, i, <, subTypes, ., size, (, ), ;, i, ++, )]
[!=, null, ), {, for, (, int, i, =, 0, ;, i, <, subTypes, ., size, (, ), ;, i]
[), {, for, (, int, i, =, 0, ;, i, <, subTypes, ., size, (, ), ;, i, ++, )]
[;, i, <, subTypes, ., size, (, ), ;, i, ++, ), {, subTypes, ., set, (, i, ,, JSType]
[;, i, ++, ), {, subTypes, ., set, (, i, ,, JSType, ., toMaybeFunctionType, (, subTypes, ., get, (, i]
[<, subTypes, ., size, (, ), ;, i, ++, ), {, subTypes, ., set, (, i, ,, JSType, ., toMaybeFunctionType]
[;, i, ++, ), {, subTypes, ., set, (, i, ,, JSType, ., toMaybeFunctionType, (, subTypes, ., get, (, i]
[., size, (, ), ;, i, ++, ), {, subTypes, ., set, (, i, ,, JSType, ., toMaybeFunctionType, (, subTypes]
[), {, subTypes, ., set, (, i, ,, JSType, ., toMaybeFunctionType, (, subTypes, ., get, (, i, ), ., resolve]
[++, ), {, subTypes, ., set, (, i, ,, JSType, ., toMaybeFunctionType, (, subTypes, ., get, (, i, ), .]
[;, }, }, return, super, ., resolveInternal, (, t, ,, scope, ), ;, }, @, Override, public, String, toDebugHashCodeString, (]
[., set, (, i, ,, JSType, ., toMaybeFunctionType, (, subTypes, ., get, (, i, ), ., resolve, (, t, ,]
[,, JSType, ., toMaybeFunctionType, (, subTypes, ., get, (, i, ), ., resolve, (, t, ,, scope, ), ), )]
[), ;, }, }, return, super, ., resolveInternal, (, t, ,, scope, ), ;, }, @, Override, public, String, toDebugHashCodeString]
[., toMaybeFunctionType, (, subTypes, ., get, (, i, ), ., resolve, (, t, ,, scope, ), ), ), ;, }]
[), ), ;, }, }, return, super, ., resolveInternal, (, t, ,, scope, ), ;, }, @, Override, public, String]
[., resolve, (, t, ,, scope, ), ), ), ;, }, }, return, super, ., resolveInternal, (, t, ,, scope]
[., get, (, i, ), ., resolve, (, t, ,, scope, ), ), ), ;, }, }, return, super, .]
[), ., resolve, (, t, ,, scope, ), ), ), ;, }, }, return, super, ., resolveInternal, (, t, ,]
[,, scope, ), ), ), ;, }, }, return, super, ., resolveInternal, (, t, ,, scope, ), ;, }, @]
[), ), ), ;, }, }, return, super, ., resolveInternal, (, t, ,, scope, ), ;, }, @, Override, public]
[;, }, @, Override, public, String, toDebugHashCodeString, (, ), {, if, (, this, ==, registry, ., getNativeType, (, JSTypeNative, .]
[., resolveInternal, (, t, ,, scope, ), ;, }, @, Override, public, String, toDebugHashCodeString, (, ), {, if, (, this]
[,, scope, ), ;, }, @, Override, public, String, toDebugHashCodeString, (, ), {, if, (, this, ==, registry, ., getNativeType]
[), ;, }, @, Override, public, String, toDebugHashCodeString, (, ), {, if, (, this, ==, registry, ., getNativeType, (, JSTypeNative]
[), {, return, super, ., toDebugHashCodeString, (, ), ;, }, StringBuilder, b, =, new, StringBuilder, (, 32, ), ;, b]
[==, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ), {, return, super, ., toDebugHashCodeString, (, ), ;, }, StringBuilder]
[), {, return, super, ., toDebugHashCodeString, (, ), ;, }, StringBuilder, b, =, new, StringBuilder, (, 32, ), ;, b]
[., getNativeType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ), {, return, super, ., toDebugHashCodeString, (, ), ;, }, StringBuilder, b, =]
[), ), {, return, super, ., toDebugHashCodeString, (, ), ;, }, StringBuilder, b, =, new, StringBuilder, (, 32, ), ;]
[., FUNCTION_INSTANCE_TYPE, ), ), {, return, super, ., toDebugHashCodeString, (, ), ;, }, StringBuilder, b, =, new, StringBuilder, (, 32]
[;, }, StringBuilder, b, =, new, StringBuilder, (, 32, ), ;, b, ., append, (, "function (", ), ;, int, paramNum]
[., toDebugHashCodeString, (, ), ;, }, StringBuilder, b, =, new, StringBuilder, (, 32, ), ;, b, ., append, (, "function ("]
[;, b, ., append, (, "function (", ), ;, int, paramNum, =, call, ., parameters, ., getChildCount, (, ), ;, boolean]
[), ;, b, ., append, (, "function (", ), ;, int, paramNum, =, call, ., parameters, ., getChildCount, (, ), ;]
[;, int, paramNum, =, call, ., parameters, ., getChildCount, (, ), ;, boolean, hasKnownTypeOfThis, =, !, typeOfThis, ., isUnknownType, (]
[., append, (, "function (", ), ;, int, paramNum, =, call, ., parameters, ., getChildCount, (, ), ;, boolean, hasKnownTypeOfThis, =]
[), ;, int, paramNum, =, call, ., parameters, ., getChildCount, (, ), ;, boolean, hasKnownTypeOfThis, =, !, typeOfThis, ., isUnknownType]
[;, boolean, hasKnownTypeOfThis, =, !, typeOfThis, ., isUnknownType, (, ), ;, if, (, hasKnownTypeOfThis, ), {, b, ., append, (]
[., getChildCount, (, ), ;, boolean, hasKnownTypeOfThis, =, !, typeOfThis, ., isUnknownType, (, ), ;, if, (, hasKnownTypeOfThis, ), {]
[., parameters, ., getChildCount, (, ), ;, boolean, hasKnownTypeOfThis, =, !, typeOfThis, ., isUnknownType, (, ), ;, if, (, hasKnownTypeOfThis]
[;, if, (, hasKnownTypeOfThis, ), {, b, ., append, (, "this:", ), ;, b, ., append, (, getDebugHashCodeStringOf, (, typeOfThis]
[;, if, (, hasKnownTypeOfThis, ), {, b, ., append, (, "this:", ), ;, b, ., append, (, getDebugHashCodeStringOf, (, typeOfThis]
[., isUnknownType, (, ), ;, if, (, hasKnownTypeOfThis, ), {, b, ., append, (, "this:", ), ;, b, ., append]
[), {, b, ., append, (, "this:", ), ;, b, ., append, (, getDebugHashCodeStringOf, (, typeOfThis, ), ), ;, }]
[;, b, ., append, (, getDebugHashCodeStringOf, (, typeOfThis, ), ), ;, }, if, (, paramNum, >, 0, ), {, if]
[., append, (, "this:", ), ;, b, ., append, (, getDebugHashCodeStringOf, (, typeOfThis, ), ), ;, }, if, (, paramNum]
[), ;, b, ., append, (, getDebugHashCodeStringOf, (, typeOfThis, ), ), ;, }, if, (, paramNum, >, 0, ), {]
[;, }, if, (, paramNum, >, 0, ), {, if, (, hasKnownTypeOfThis, ), {, b, ., append, (, ", ", )]
[., append, (, getDebugHashCodeStringOf, (, typeOfThis, ), ), ;, }, if, (, paramNum, >, 0, ), {, if, (, hasKnownTypeOfThis]
[), ;, }, if, (, paramNum, >, 0, ), {, if, (, hasKnownTypeOfThis, ), {, b, ., append, (, ", "]
[), ), ;, }, if, (, paramNum, >, 0, ), {, if, (, hasKnownTypeOfThis, ), {, b, ., append, (]
[), {, if, (, hasKnownTypeOfThis, ), {, b, ., append, (, ", ", ), ;, }, Node, p, =, call, .]
[>, 0, ), {, if, (, hasKnownTypeOfThis, ), {, b, ., append, (, ", ", ), ;, }, Node, p, =]
[), {, if, (, hasKnownTypeOfThis, ), {, b, ., append, (, ", ", ), ;, }, Node, p, =, call, .]
[), {, b, ., append, (, ", ", ), ;, }, Node, p, =, call, ., parameters, ., getFirstChild, (, )]
[;, }, Node, p, =, call, ., parameters, ., getFirstChild, (, ), ;, b, ., append, (, getDebugHashCodeStringOf, (, p]
[., append, (, ", ", ), ;, }, Node, p, =, call, ., parameters, ., getFirstChild, (, ), ;, b, .]
[), ;, }, Node, p, =, call, ., parameters, ., getFirstChild, (, ), ;, b, ., append, (, getDebugHashCodeStringOf, (]
[;, b, ., append, (, getDebugHashCodeStringOf, (, p, ., getJSType, (, ), ), ), ;, p, =, p, ., getNext]
[., getFirstChild, (, ), ;, b, ., append, (, getDebugHashCodeStringOf, (, p, ., getJSType, (, ), ), ), ;, p]
[., parameters, ., getFirstChild, (, ), ;, b, ., append, (, getDebugHashCodeStringOf, (, p, ., getJSType, (, ), ), )]
[;, p, =, p, ., getNext, (, ), ;, while, (, p, !=, null, ), {, b, ., append, (]
[., append, (, getDebugHashCodeStringOf, (, p, ., getJSType, (, ), ), ), ;, p, =, p, ., getNext, (, )]
[), ;, p, =, p, ., getNext, (, ), ;, while, (, p, !=, null, ), {, b, ., append]
[), ), ;, p, =, p, ., getNext, (, ), ;, while, (, p, !=, null, ), {, b, .]
[., getJSType, (, ), ), ), ;, p, =, p, ., getNext, (, ), ;, while, (, p, !=, null]
[=, p, ., getNext, (, ), ;, while, (, p, !=, null, ), {, b, ., append, (, ", ", )]
[;, while, (, p, !=, null, ), {, b, ., append, (, ", ", ), ;, b, ., append, (, getDebugHashCodeStringOf]
[., getNext, (, ), ;, while, (, p, !=, null, ), {, b, ., append, (, ", ", ), ;, b]
[), {, b, ., append, (, ", ", ), ;, b, ., append, (, getDebugHashCodeStringOf, (, p, ., getJSType, (, )]
[!=, null, ), {, b, ., append, (, ", ", ), ;, b, ., append, (, getDebugHashCodeStringOf, (, p, ., getJSType]
[), {, b, ., append, (, ", ", ), ;, b, ., append, (, getDebugHashCodeStringOf, (, p, ., getJSType, (, )]
[;, b, ., append, (, getDebugHashCodeStringOf, (, p, ., getJSType, (, ), ), ), ;, p, =, p, ., getNext]
[., append, (, ", ", ), ;, b, ., append, (, getDebugHashCodeStringOf, (, p, ., getJSType, (, ), ), ), ;]
[), ;, b, ., append, (, getDebugHashCodeStringOf, (, p, ., getJSType, (, ), ), ), ;, p, =, p, .]
[;, p, =, p, ., getNext, (, ), ;, }, }, b, ., append, (, ")", ), ;, b, .]
[., append, (, getDebugHashCodeStringOf, (, p, ., getJSType, (, ), ), ), ;, p, =, p, ., getNext, (, )]
[), ;, p, =, p, ., getNext, (, ), ;, }, }, b, ., append, (, ")", ), ;, b]
[), ), ;, p, =, p, ., getNext, (, ), ;, }, }, b, ., append, (, ")", ), ;]
[., getJSType, (, ), ), ), ;, p, =, p, ., getNext, (, ), ;, }, }, b, ., append]
[=, p, ., getNext, (, ), ;, }, }, b, ., append, (, ")", ), ;, b, ., append, (]
[;, }, }, b, ., append, (, ")", ), ;, b, ., append, (, ": ", ), ;, b, ., append]
[., getNext, (, ), ;, }, }, b, ., append, (, ")", ), ;, b, ., append, (, ": ", )]
[;, b, ., append, (, ": ", ), ;, b, ., append, (, getDebugHashCodeStringOf, (, call, ., returnType, ), ), ;]
[., append, (, ")", ), ;, b, ., append, (, ": ", ), ;, b, ., append, (, getDebugHashCodeStringOf, (, call]
[), ;, b, ., append, (, ": ", ), ;, b, ., append, (, getDebugHashCodeStringOf, (, call, ., returnType, ), )]
[;, b, ., append, (, getDebugHashCodeStringOf, (, call, ., returnType, ), ), ;, return, b, ., toString, (, ), ;]
[., append, (, ": ", ), ;, b, ., append, (, getDebugHashCodeStringOf, (, call, ., returnType, ), ), ;, return, b]
[), ;, b, ., append, (, getDebugHashCodeStringOf, (, call, ., returnType, ), ), ;, return, b, ., toString, (, )]
[;, return, b, ., toString, (, ), ;, }, private, String, getDebugHashCodeStringOf, (, JSType, type, ), {, if, (, type]
[., append, (, getDebugHashCodeStringOf, (, call, ., returnType, ), ), ;, return, b, ., toString, (, ), ;, }, private]
[), ;, return, b, ., toString, (, ), ;, }, private, String, getDebugHashCodeStringOf, (, JSType, type, ), {, if, (]
[), ), ;, return, b, ., toString, (, ), ;, }, private, String, getDebugHashCodeStringOf, (, JSType, type, ), {, if]
[., returnType, ), ), ;, return, b, ., toString, (, ), ;, }, private, String, getDebugHashCodeStringOf, (, JSType, type, )]
[;, }, private, String, getDebugHashCodeStringOf, (, JSType, type, ), {, if, (, type, ==, this, ), {, return, "me", ;]
[., toString, (, ), ;, }, private, String, getDebugHashCodeStringOf, (, JSType, type, ), {, if, (, type, ==, this, )]
[), {, return, "me", ;, }, else, {, return, type, ., toDebugHashCodeString, (, ), ;, }, }, public, FunctionType, cloneWithoutArrowType]
[==, this, ), {, return, "me", ;, }, else, {, return, type, ., toDebugHashCodeString, (, ), ;, }, }, public]
[), {, return, "me", ;, }, else, {, return, type, ., toDebugHashCodeString, (, ), ;, }, }, public, FunctionType, cloneWithoutArrowType]
[;, }, else, {, return, type, ., toDebugHashCodeString, (, ), ;, }, }, public, FunctionType, cloneWithoutArrowType, (, ), {, FunctionType]
[;, }, }, public, FunctionType, cloneWithoutArrowType, (, ), {, FunctionType, result, =, new, FunctionType, (, registry, ,, getReferenceName, (, )]
[., toDebugHashCodeString, (, ), ;, }, }, public, FunctionType, cloneWithoutArrowType, (, ), {, FunctionType, result, =, new, FunctionType, (, registry]
[;, result, ., setPrototypeBasedOn, (, getInstanceType, (, ), ), ;, return, result, ;, }, @, Override, public, boolean, hasAnyTemplateTypesInternal, (]
[,, getReferenceName, (, ), ,, source, ,, registry, ., createArrowType, (, null, ,, null, ), ,, getInstanceType, (, ), ,]
[,, source, ,, registry, ., createArrowType, (, null, ,, null, ), ,, getInstanceType, (, ), ,, null, ,, true, ,]
[,, registry, ., createArrowType, (, null, ,, null, ), ,, getInstanceType, (, ), ,, null, ,, true, ,, false, )]
[,, getInstanceType, (, ), ,, null, ,, true, ,, false, ), ;, result, ., setPrototypeBasedOn, (, getInstanceType, (, ), )]
[., createArrowType, (, null, ,, null, ), ,, getInstanceType, (, ), ,, null, ,, true, ,, false, ), ;, result]
[,, null, ), ,, getInstanceType, (, ), ,, null, ,, true, ,, false, ), ;, result, ., setPrototypeBasedOn, (, getInstanceType]
[), ,, getInstanceType, (, ), ,, null, ,, true, ,, false, ), ;, result, ., setPrototypeBasedOn, (, getInstanceType, (, )]
[,, null, ,, true, ,, false, ), ;, result, ., setPrototypeBasedOn, (, getInstanceType, (, ), ), ;, return, result, ;]
[,, true, ,, false, ), ;, result, ., setPrototypeBasedOn, (, getInstanceType, (, ), ), ;, return, result, ;, }, @]
[,, false, ), ;, result, ., setPrototypeBasedOn, (, getInstanceType, (, ), ), ;, return, result, ;, }, @, Override, public]
[), ;, result, ., setPrototypeBasedOn, (, getInstanceType, (, ), ), ;, return, result, ;, }, @, Override, public, boolean, hasAnyTemplateTypesInternal]
[;, return, result, ;, }, @, Override, public, boolean, hasAnyTemplateTypesInternal, (, ), {, return, !, getTemplateKeys, (, ), ., isEmpty]
[., setPrototypeBasedOn, (, getInstanceType, (, ), ), ;, return, result, ;, }, @, Override, public, boolean, hasAnyTemplateTypesInternal, (, ), {]
[), ;, return, result, ;, }, @, Override, public, boolean, hasAnyTemplateTypesInternal, (, ), {, return, !, getTemplateKeys, (, ), .]
[;, }, @, Override, public, boolean, hasAnyTemplateTypesInternal, (, ), {, return, !, getTemplateKeys, (, ), ., isEmpty, (, ), ||]
[;, }, }]
[||, call, ., hasAnyTemplateTypes, (, ), ;, }, }]
[||, typeOfThis, ., hasAnyTemplateTypes, (, ), ||, call, ., hasAnyTemplateTypes, (, ), ;, }, }]
[||, typeOfThis, ., hasAnyTemplateTypes, (, ), ||, call, ., hasAnyTemplateTypes, (, ), ;, }, }]
[., isEmpty, (, ), ||, typeOfThis, ., hasAnyTemplateTypes, (, ), ||, call, ., hasAnyTemplateTypes, (, ), ;, }, }]
[||, call, ., hasAnyTemplateTypes, (, ), ;, }, }]
[., hasAnyTemplateTypes, (, ), ||, call, ., hasAnyTemplateTypes, (, ), ;, }, }]
[;, }, }]
[., hasAnyTemplateTypes, (, ), ;, }, }]
