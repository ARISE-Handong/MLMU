[;, static, final, DiagnosticType, OBJECTLIT_EXPECTED, =, DiagnosticType, ., warning, (, "JSC_REFLECT_OBJECTLIT_EXPECTED", ,, "Object literal expected as second argument", ), ;, private, final, Set, <, String]
[;, private, final, Set, <, String, >, indirectlyDeclaredProperties, ;, public, ClosureCodingConvention, (, ), {, this, (, CodingConventions, ., getDefault, (]
[., warning, (, "JSC_REFLECT_OBJECTLIT_EXPECTED", ,, "Object literal expected as second argument", ), ;, private, final, Set, <, String, >, indirectlyDeclaredProperties, ;, public, ClosureCodingConvention, (, )]
[,, "Object literal expected as second argument", ), ;, private, final, Set, <, String, >, indirectlyDeclaredProperties, ;, public, ClosureCodingConvention, (, ), {, this, (, CodingConventions]
[), ;, private, final, Set, <, String, >, indirectlyDeclaredProperties, ;, public, ClosureCodingConvention, (, ), {, this, (, CodingConventions, ., getDefault]
[), ;, }, public, ClosureCodingConvention, (, CodingConvention, wrapped, ), {, super, (, wrapped, ), ;, Set, <, String, >, props]
[., getDefault, (, ), ), ;, }, public, ClosureCodingConvention, (, CodingConvention, wrapped, ), {, super, (, wrapped, ), ;, Set]
[), ;, Set, <, String, >, props, =, Sets, ., newHashSet, (, "superClass_", ,, "instance_", ,, "getInstance", ), ;, props]
[;, props, ., addAll, (, wrapped, ., getIndirectlyDeclaredProperties, (, ), ), ;, indirectlyDeclaredProperties, =, ImmutableSet, ., copyOf, (, props, )]
[., newHashSet, (, "superClass_", ,, "instance_", ,, "getInstance", ), ;, props, ., addAll, (, wrapped, ., getIndirectlyDeclaredProperties, (, ), )]
[,, "instance_", ,, "getInstance", ), ;, props, ., addAll, (, wrapped, ., getIndirectlyDeclaredProperties, (, ), ), ;, indirectlyDeclaredProperties, =, ImmutableSet]
[,, "getInstance", ), ;, props, ., addAll, (, wrapped, ., getIndirectlyDeclaredProperties, (, ), ), ;, indirectlyDeclaredProperties, =, ImmutableSet, ., copyOf]
[), ;, props, ., addAll, (, wrapped, ., getIndirectlyDeclaredProperties, (, ), ), ;, indirectlyDeclaredProperties, =, ImmutableSet, ., copyOf, (, props]
[;, indirectlyDeclaredProperties, =, ImmutableSet, ., copyOf, (, props, ), ;, }, @, Override, public, void, applySubclassRelationship, (, FunctionType, parentCtor, ,]
[., addAll, (, wrapped, ., getIndirectlyDeclaredProperties, (, ), ), ;, indirectlyDeclaredProperties, =, ImmutableSet, ., copyOf, (, props, ), ;, }]
[), ;, indirectlyDeclaredProperties, =, ImmutableSet, ., copyOf, (, props, ), ;, }, @, Override, public, void, applySubclassRelationship, (, FunctionType, parentCtor]
[., getIndirectlyDeclaredProperties, (, ), ), ;, indirectlyDeclaredProperties, =, ImmutableSet, ., copyOf, (, props, ), ;, }, @, Override, public, void]
[=, ImmutableSet, ., copyOf, (, props, ), ;, }, @, Override, public, void, applySubclassRelationship, (, FunctionType, parentCtor, ,, FunctionType, childCtor]
[;, }, @, Override, public, void, applySubclassRelationship, (, FunctionType, parentCtor, ,, FunctionType, childCtor, ,, SubclassType, type, ), {, super, .]
[., copyOf, (, props, ), ;, }, @, Override, public, void, applySubclassRelationship, (, FunctionType, parentCtor, ,, FunctionType, childCtor, ,, SubclassType]
[), ;, }, @, Override, public, void, applySubclassRelationship, (, FunctionType, parentCtor, ,, FunctionType, childCtor, ,, SubclassType, type, ), {, super]
[;, if, (, type, ==, SubclassType, ., INHERITS, ), {, childCtor, ., defineDeclaredProperty, (, "superClass_", ,, parentCtor, ., getPrototype, (]
[., applySubclassRelationship, (, parentCtor, ,, childCtor, ,, type, ), ;, if, (, type, ==, SubclassType, ., INHERITS, ), {, childCtor]
[,, childCtor, ,, type, ), ;, if, (, type, ==, SubclassType, ., INHERITS, ), {, childCtor, ., defineDeclaredProperty, (, "superClass_"]
[,, type, ), ;, if, (, type, ==, SubclassType, ., INHERITS, ), {, childCtor, ., defineDeclaredProperty, (, "superClass_", ,, parentCtor]
[), ;, if, (, type, ==, SubclassType, ., INHERITS, ), {, childCtor, ., defineDeclaredProperty, (, "superClass_", ,, parentCtor, ., getPrototype]
[), {, childCtor, ., defineDeclaredProperty, (, "superClass_", ,, parentCtor, ., getPrototype, (, ), ,, childCtor, ., getSource, (, ), )]
[==, SubclassType, ., INHERITS, ), {, childCtor, ., defineDeclaredProperty, (, "superClass_", ,, parentCtor, ., getPrototype, (, ), ,, childCtor, .]
[), {, childCtor, ., defineDeclaredProperty, (, "superClass_", ,, parentCtor, ., getPrototype, (, ), ,, childCtor, ., getSource, (, ), )]
[., INHERITS, ), {, childCtor, ., defineDeclaredProperty, (, "superClass_", ,, parentCtor, ., getPrototype, (, ), ,, childCtor, ., getSource, (]
[;, childCtor, ., getPrototype, (, ), ., defineDeclaredProperty, (, "constructor", ,, childCtor, ., cloneWithoutArrowType, (, ), ,, childCtor, ., getSource]
[., defineDeclaredProperty, (, "superClass_", ,, parentCtor, ., getPrototype, (, ), ,, childCtor, ., getSource, (, ), ), ;, childCtor, .]
[,, parentCtor, ., getPrototype, (, ), ,, childCtor, ., getSource, (, ), ), ;, childCtor, ., getPrototype, (, ), .]
[,, childCtor, ., getSource, (, ), ), ;, childCtor, ., getPrototype, (, ), ., defineDeclaredProperty, (, "constructor", ,, childCtor, .]
[., getPrototype, (, ), ,, childCtor, ., getSource, (, ), ), ;, childCtor, ., getPrototype, (, ), ., defineDeclaredProperty, (]
[), ;, childCtor, ., getPrototype, (, ), ., defineDeclaredProperty, (, "constructor", ,, childCtor, ., cloneWithoutArrowType, (, ), ,, childCtor, .]
[., getSource, (, ), ), ;, childCtor, ., getPrototype, (, ), ., defineDeclaredProperty, (, "constructor", ,, childCtor, ., cloneWithoutArrowType, (]
[;, }, }, @, Override, public, SubclassRelationship, getClassesDefinedByCall, (, Node, callNode, ), {, SubclassRelationship, relationship, =, super, ., getClassesDefinedByCall, (]
[., defineDeclaredProperty, (, "constructor", ,, childCtor, ., cloneWithoutArrowType, (, ), ,, childCtor, ., getSource, (, ), ), ;, }, }]
[., getPrototype, (, ), ., defineDeclaredProperty, (, "constructor", ,, childCtor, ., cloneWithoutArrowType, (, ), ,, childCtor, ., getSource, (, )]
[,, childCtor, ., cloneWithoutArrowType, (, ), ,, childCtor, ., getSource, (, ), ), ;, }, }, @, Override, public, SubclassRelationship]
[,, childCtor, ., getSource, (, ), ), ;, }, }, @, Override, public, SubclassRelationship, getClassesDefinedByCall, (, Node, callNode, ), {]
[., cloneWithoutArrowType, (, ), ,, childCtor, ., getSource, (, ), ), ;, }, }, @, Override, public, SubclassRelationship, getClassesDefinedByCall, (]
[), ;, }, }, @, Override, public, SubclassRelationship, getClassesDefinedByCall, (, Node, callNode, ), {, SubclassRelationship, relationship, =, super, ., getClassesDefinedByCall]
[., getSource, (, ), ), ;, }, }, @, Override, public, SubclassRelationship, getClassesDefinedByCall, (, Node, callNode, ), {, SubclassRelationship, relationship]
[;, if, (, relationship, !=, null, ), return, relationship, ;, Node, callName, =, callNode, ., getFirstChild, (, ), ;, SubclassType]
[., getClassesDefinedByCall, (, callNode, ), ;, if, (, relationship, !=, null, ), return, relationship, ;, Node, callName, =, callNode, .]
[), ;, if, (, relationship, !=, null, ), return, relationship, ;, Node, callName, =, callNode, ., getFirstChild, (, ), ;]
[), return, relationship, ;, Node, callName, =, callNode, ., getFirstChild, (, ), ;, SubclassType, type, =, typeofClassDefiningName, (, callName, )]
[!=, null, ), return, relationship, ;, Node, callName, =, callNode, ., getFirstChild, (, ), ;, SubclassType, type, =, typeofClassDefiningName, (]
[), return, relationship, ;, Node, callName, =, callNode, ., getFirstChild, (, ), ;, SubclassType, type, =, typeofClassDefiningName, (, callName, )]
[;, Node, callName, =, callNode, ., getFirstChild, (, ), ;, SubclassType, type, =, typeofClassDefiningName, (, callName, ), ;, if, (]
[;, SubclassType, type, =, typeofClassDefiningName, (, callName, ), ;, if, (, type, !=, null, ), {, Node, subclass, =, null]
[., getFirstChild, (, ), ;, SubclassType, type, =, typeofClassDefiningName, (, callName, ), ;, if, (, type, !=, null, ), {]
[;, if, (, type, !=, null, ), {, Node, subclass, =, null, ;, Node, superclass, =, callNode, ., getLastChild, (]
[), ;, if, (, type, !=, null, ), {, Node, subclass, =, null, ;, Node, superclass, =, callNode, ., getLastChild]
[), {, Node, subclass, =, null, ;, Node, superclass, =, callNode, ., getLastChild, (, ), ;, boolean, isDeprecatedCall, =, callNode]
[!=, null, ), {, Node, subclass, =, null, ;, Node, superclass, =, callNode, ., getLastChild, (, ), ;, boolean, isDeprecatedCall]
[), {, Node, subclass, =, null, ;, Node, superclass, =, callNode, ., getLastChild, (, ), ;, boolean, isDeprecatedCall, =, callNode]
[;, Node, superclass, =, callNode, ., getLastChild, (, ), ;, boolean, isDeprecatedCall, =, callNode, ., getChildCount, (, ), ==, 2]
[;, boolean, isDeprecatedCall, =, callNode, ., getChildCount, (, ), ==, 2, &&, callName, ., isGetProp, (, ), ;, if, (]
[., getLastChild, (, ), ;, boolean, isDeprecatedCall, =, callNode, ., getChildCount, (, ), ==, 2, &&, callName, ., isGetProp, (]
[;, if, (, isDeprecatedCall, ), {, subclass, =, callName, ., getFirstChild, (, ), ;, }, else, if, (, callNode, .]
[&&, callName, ., isGetProp, (, ), ;, if, (, isDeprecatedCall, ), {, subclass, =, callName, ., getFirstChild, (, ), ;]
[==, 2, &&, callName, ., isGetProp, (, ), ;, if, (, isDeprecatedCall, ), {, subclass, =, callName, ., getFirstChild, (]
[., getChildCount, (, ), ==, 2, &&, callName, ., isGetProp, (, ), ;, if, (, isDeprecatedCall, ), {, subclass, =]
[&&, callName, ., isGetProp, (, ), ;, if, (, isDeprecatedCall, ), {, subclass, =, callName, ., getFirstChild, (, ), ;]
[;, if, (, isDeprecatedCall, ), {, subclass, =, callName, ., getFirstChild, (, ), ;, }, else, if, (, callNode, .]
[., isGetProp, (, ), ;, if, (, isDeprecatedCall, ), {, subclass, =, callName, ., getFirstChild, (, ), ;, }, else]
[), {, subclass, =, callName, ., getFirstChild, (, ), ;, }, else, if, (, callNode, ., getChildCount, (, ), ==]
[=, callName, ., getFirstChild, (, ), ;, }, else, if, (, callNode, ., getChildCount, (, ), ==, 3, ), {]
[;, }, else, if, (, callNode, ., getChildCount, (, ), ==, 3, ), {, subclass, =, callName, ., getNext, (]
[., getFirstChild, (, ), ;, }, else, if, (, callNode, ., getChildCount, (, ), ==, 3, ), {, subclass, =]
[), {, subclass, =, callName, ., getNext, (, ), ;, }, else, {, return, null, ;, }, if, (, type]
[==, 3, ), {, subclass, =, callName, ., getNext, (, ), ;, }, else, {, return, null, ;, }, if]
[., getChildCount, (, ), ==, 3, ), {, subclass, =, callName, ., getNext, (, ), ;, }, else, {, return]
[), {, subclass, =, callName, ., getNext, (, ), ;, }, else, {, return, null, ;, }, if, (, type]
[=, callName, ., getNext, (, ), ;, }, else, {, return, null, ;, }, if, (, type, ==, SubclassType, .]
[;, }, else, {, return, null, ;, }, if, (, type, ==, SubclassType, ., MIXIN, ), {, if, (, !]
[., getNext, (, ), ;, }, else, {, return, null, ;, }, if, (, type, ==, SubclassType, ., MIXIN, )]
[;, }, if, (, type, ==, SubclassType, ., MIXIN, ), {, if, (, !, endsWithPrototype, (, superclass, ), ), {]
[), {, if, (, !, endsWithPrototype, (, superclass, ), ), {, return, null, ;, }, if, (, !, isDeprecatedCall, )]
[==, SubclassType, ., MIXIN, ), {, if, (, !, endsWithPrototype, (, superclass, ), ), {, return, null, ;, }, if]
[), {, if, (, !, endsWithPrototype, (, superclass, ), ), {, return, null, ;, }, if, (, !, isDeprecatedCall, )]
[., MIXIN, ), {, if, (, !, endsWithPrototype, (, superclass, ), ), {, return, null, ;, }, if, (, !]
[), {, return, null, ;, }, if, (, !, isDeprecatedCall, ), {, if, (, !, endsWithPrototype, (, subclass, ), )]
[), {, return, null, ;, }, if, (, !, isDeprecatedCall, ), {, if, (, !, endsWithPrototype, (, subclass, ), )]
[), ), {, return, null, ;, }, if, (, !, isDeprecatedCall, ), {, if, (, !, endsWithPrototype, (, subclass, )]
[;, }, if, (, !, isDeprecatedCall, ), {, if, (, !, endsWithPrototype, (, subclass, ), ), {, return, null, ;]
[), {, if, (, !, endsWithPrototype, (, subclass, ), ), {, return, null, ;, }, subclass, =, subclass, ., getFirstChild]
[), {, if, (, !, endsWithPrototype, (, subclass, ), ), {, return, null, ;, }, subclass, =, subclass, ., getFirstChild]
[), {, return, null, ;, }, subclass, =, subclass, ., getFirstChild, (, ), ;, }, superclass, =, superclass, ., getFirstChild]
[), {, return, null, ;, }, subclass, =, subclass, ., getFirstChild, (, ), ;, }, superclass, =, superclass, ., getFirstChild]
[), ), {, return, null, ;, }, subclass, =, subclass, ., getFirstChild, (, ), ;, }, superclass, =, superclass, .]
[;, }, subclass, =, subclass, ., getFirstChild, (, ), ;, }, superclass, =, superclass, ., getFirstChild, (, ), ;, }]
[=, subclass, ., getFirstChild, (, ), ;, }, superclass, =, superclass, ., getFirstChild, (, ), ;, }, if, (, subclass]
[;, }, superclass, =, superclass, ., getFirstChild, (, ), ;, }, if, (, subclass, !=, null, &&, subclass, ., isUnscopedQualifiedName]
[., getFirstChild, (, ), ;, }, superclass, =, superclass, ., getFirstChild, (, ), ;, }, if, (, subclass, !=, null]
[=, superclass, ., getFirstChild, (, ), ;, }, if, (, subclass, !=, null, &&, subclass, ., isUnscopedQualifiedName, (, ), &&]
[;, }, if, (, subclass, !=, null, &&, subclass, ., isUnscopedQualifiedName, (, ), &&, superclass, ., isUnscopedQualifiedName, (, ), )]
[., getFirstChild, (, ), ;, }, if, (, subclass, !=, null, &&, subclass, ., isUnscopedQualifiedName, (, ), &&, superclass, .]
[), {, return, new, SubclassRelationship, (, type, ,, subclass, ,, superclass, ), ;, }, }, return, null, ;, }, private]
[&&, superclass, ., isUnscopedQualifiedName, (, ), ), {, return, new, SubclassRelationship, (, type, ,, subclass, ,, superclass, ), ;, }]
[&&, subclass, ., isUnscopedQualifiedName, (, ), &&, superclass, ., isUnscopedQualifiedName, (, ), ), {, return, new, SubclassRelationship, (, type, ,]
[!=, null, &&, subclass, ., isUnscopedQualifiedName, (, ), &&, superclass, ., isUnscopedQualifiedName, (, ), ), {, return, new, SubclassRelationship, (]
[&&, subclass, ., isUnscopedQualifiedName, (, ), &&, superclass, ., isUnscopedQualifiedName, (, ), ), {, return, new, SubclassRelationship, (, type, ,]
[&&, superclass, ., isUnscopedQualifiedName, (, ), ), {, return, new, SubclassRelationship, (, type, ,, subclass, ,, superclass, ), ;, }]
[., isUnscopedQualifiedName, (, ), &&, superclass, ., isUnscopedQualifiedName, (, ), ), {, return, new, SubclassRelationship, (, type, ,, subclass, ,]
[), {, return, new, SubclassRelationship, (, type, ,, subclass, ,, superclass, ), ;, }, }, return, null, ;, }, private]
[., isUnscopedQualifiedName, (, ), ), {, return, new, SubclassRelationship, (, type, ,, subclass, ,, superclass, ), ;, }, }, return]
[;, }, }, return, null, ;, }, private, SubclassType, typeofClassDefiningName, (, Node, callName, ), {, String, methodName, =, null, ;]
[,, subclass, ,, superclass, ), ;, }, }, return, null, ;, }, private, SubclassType, typeofClassDefiningName, (, Node, callName, ), {]
[,, superclass, ), ;, }, }, return, null, ;, }, private, SubclassType, typeofClassDefiningName, (, Node, callName, ), {, String, methodName]
[), ;, }, }, return, null, ;, }, private, SubclassType, typeofClassDefiningName, (, Node, callName, ), {, String, methodName, =, null]
[;, }, private, SubclassType, typeofClassDefiningName, (, Node, callName, ), {, String, methodName, =, null, ;, if, (, callName, ., isGetProp]
[;, if, (, callName, ., isGetProp, (, ), ), {, methodName, =, callName, ., getLastChild, (, ), ., getString, (]
[), {, methodName, =, callName, ., getLastChild, (, ), ., getString, (, ), ;, }, else, if, (, callName, .]
[., isGetProp, (, ), ), {, methodName, =, callName, ., getLastChild, (, ), ., getString, (, ), ;, }, else]
[=, callName, ., getLastChild, (, ), ., getString, (, ), ;, }, else, if, (, callName, ., isName, (, )]
[;, }, else, if, (, callName, ., isName, (, ), ), {, String, name, =, callName, ., getString, (, )]
[., getString, (, ), ;, }, else, if, (, callName, ., isName, (, ), ), {, String, name, =, callName]
[., getLastChild, (, ), ., getString, (, ), ;, }, else, if, (, callName, ., isName, (, ), ), {]
[), {, String, name, =, callName, ., getString, (, ), ;, int, dollarIndex, =, name, ., lastIndexOf, (, '$', )]
[., isName, (, ), ), {, String, name, =, callName, ., getString, (, ), ;, int, dollarIndex, =, name, .]
[;, int, dollarIndex, =, name, ., lastIndexOf, (, '$', ), ;, if, (, dollarIndex, !=, -, 1, ), {, methodName]
[., getString, (, ), ;, int, dollarIndex, =, name, ., lastIndexOf, (, '$', ), ;, if, (, dollarIndex, !=, -]
[;, if, (, dollarIndex, !=, -, 1, ), {, methodName, =, name, ., substring, (, dollarIndex, +, 1, ), ;]
[., lastIndexOf, (, '$', ), ;, if, (, dollarIndex, !=, -, 1, ), {, methodName, =, name, ., substring, (]
[), ;, if, (, dollarIndex, !=, -, 1, ), {, methodName, =, name, ., substring, (, dollarIndex, +, 1, )]
[), {, methodName, =, name, ., substring, (, dollarIndex, +, 1, ), ;, }, }, if, (, methodName, !=, null]
[!=, -, 1, ), {, methodName, =, name, ., substring, (, dollarIndex, +, 1, ), ;, }, }, if, (]
[), {, methodName, =, name, ., substring, (, dollarIndex, +, 1, ), ;, }, }, if, (, methodName, !=, null]
[), {, methodName, =, name, ., substring, (, dollarIndex, +, 1, ), ;, }, }, if, (, methodName, !=, null]
[=, name, ., substring, (, dollarIndex, +, 1, ), ;, }, }, if, (, methodName, !=, null, ), {, if]
[;, }, }, if, (, methodName, !=, null, ), {, if, (, methodName, ., equals, (, "inherits", ), ), {]
[., substring, (, dollarIndex, +, 1, ), ;, }, }, if, (, methodName, !=, null, ), {, if, (, methodName]
[), ;, }, }, if, (, methodName, !=, null, ), {, if, (, methodName, ., equals, (, "inherits", ), )]
[+, 1, ), ;, }, }, if, (, methodName, !=, null, ), {, if, (, methodName, ., equals, (, "inherits"]
[), ;, }, }, if, (, methodName, !=, null, ), {, if, (, methodName, ., equals, (, "inherits", ), )]
[), {, if, (, methodName, ., equals, (, "inherits", ), ), {, return, SubclassType, ., INHERITS, ;, }, else, if]
[!=, null, ), {, if, (, methodName, ., equals, (, "inherits", ), ), {, return, SubclassType, ., INHERITS, ;, }]
[), {, if, (, methodName, ., equals, (, "inherits", ), ), {, return, SubclassType, ., INHERITS, ;, }, else, if]
[), {, return, SubclassType, ., INHERITS, ;, }, else, if, (, methodName, ., equals, (, "mixin", ), ), {, return]
[., equals, (, "inherits", ), ), {, return, SubclassType, ., INHERITS, ;, }, else, if, (, methodName, ., equals, (]
[), ), {, return, SubclassType, ., INHERITS, ;, }, else, if, (, methodName, ., equals, (, "mixin", ), ), {]
[;, }, else, if, (, methodName, ., equals, (, "mixin", ), ), {, return, SubclassType, ., MIXIN, ;, }, }]
[., INHERITS, ;, }, else, if, (, methodName, ., equals, (, "mixin", ), ), {, return, SubclassType, ., MIXIN, ;]
[), {, return, SubclassType, ., MIXIN, ;, }, }, return, null, ;, }, @, Override, public, boolean, isSuperClassReference, (, String]
[., equals, (, "mixin", ), ), {, return, SubclassType, ., MIXIN, ;, }, }, return, null, ;, }, @, Override]
[), ), {, return, SubclassType, ., MIXIN, ;, }, }, return, null, ;, }, @, Override, public, boolean, isSuperClassReference, (]
[;, }, }, return, null, ;, }, @, Override, public, boolean, isSuperClassReference, (, String, propertyName, ), {, return, "superClass_", .]
[., MIXIN, ;, }, }, return, null, ;, }, @, Override, public, boolean, isSuperClassReference, (, String, propertyName, ), {, return]
[;, }, @, Override, public, boolean, isSuperClassReference, (, String, propertyName, ), {, return, "superClass_", ., equals, (, propertyName, ), ||]
[;, }, private, boolean, endsWithPrototype, (, Node, qualifiedName, ), {, return, qualifiedName, ., isGetProp, (, ), &&, qualifiedName, ., getLastChild]
[||, super, ., isSuperClassReference, (, propertyName, ), ;, }, private, boolean, endsWithPrototype, (, Node, qualifiedName, ), {, return, qualifiedName, .]
[., equals, (, propertyName, ), ||, super, ., isSuperClassReference, (, propertyName, ), ;, }, private, boolean, endsWithPrototype, (, Node, qualifiedName]
[), ||, super, ., isSuperClassReference, (, propertyName, ), ;, }, private, boolean, endsWithPrototype, (, Node, qualifiedName, ), {, return, qualifiedName]
[;, }, private, boolean, endsWithPrototype, (, Node, qualifiedName, ), {, return, qualifiedName, ., isGetProp, (, ), &&, qualifiedName, ., getLastChild]
[., isSuperClassReference, (, propertyName, ), ;, }, private, boolean, endsWithPrototype, (, Node, qualifiedName, ), {, return, qualifiedName, ., isGetProp, (]
[), ;, }, private, boolean, endsWithPrototype, (, Node, qualifiedName, ), {, return, qualifiedName, ., isGetProp, (, ), &&, qualifiedName, .]
[;, }, @, Override, public, String, extractClassNameIfProvide, (, Node, node, ,, Node, parent, ), {, return, extractClassNameIfGoog, (, node, ,]
[&&, qualifiedName, ., getLastChild, (, ), ., getString, (, ), ., equals, (, "prototype", ), ;, }, @, Override, public]
[., isGetProp, (, ), &&, qualifiedName, ., getLastChild, (, ), ., getString, (, ), ., equals, (, "prototype", ), ;]
[;, }, @, Override, public, String, extractClassNameIfProvide, (, Node, node, ,, Node, parent, ), {, return, extractClassNameIfGoog, (, node, ,]
[., equals, (, "prototype", ), ;, }, @, Override, public, String, extractClassNameIfProvide, (, Node, node, ,, Node, parent, ), {]
[., getString, (, ), ., equals, (, "prototype", ), ;, }, @, Override, public, String, extractClassNameIfProvide, (, Node, node, ,]
[., getLastChild, (, ), ., getString, (, ), ., equals, (, "prototype", ), ;, }, @, Override, public, String, extractClassNameIfProvide]
[), ;, }, @, Override, public, String, extractClassNameIfProvide, (, Node, node, ,, Node, parent, ), {, return, extractClassNameIfGoog, (, node]
[;, }, @, Override, public, String, extractClassNameIfRequire, (, Node, node, ,, Node, parent, ), {, return, extractClassNameIfGoog, (, node, ,]
[,, parent, ,, "goog.provide", ), ;, }, @, Override, public, String, extractClassNameIfRequire, (, Node, node, ,, Node, parent, ), {]
[,, "goog.provide", ), ;, }, @, Override, public, String, extractClassNameIfRequire, (, Node, node, ,, Node, parent, ), {, return, extractClassNameIfGoog]
[), ;, }, @, Override, public, String, extractClassNameIfRequire, (, Node, node, ,, Node, parent, ), {, return, extractClassNameIfGoog, (, node]
[;, }, private, static, String, extractClassNameIfGoog, (, Node, node, ,, Node, parent, ,, String, functionName, ), {, String, className, =]
[,, parent, ,, "goog.require", ), ;, }, private, static, String, extractClassNameIfGoog, (, Node, node, ,, Node, parent, ,, String, functionName]
[,, "goog.require", ), ;, }, private, static, String, extractClassNameIfGoog, (, Node, node, ,, Node, parent, ,, String, functionName, ), {]
[), ;, }, private, static, String, extractClassNameIfGoog, (, Node, node, ,, Node, parent, ,, String, functionName, ), {, String, className]
[;, if, (, NodeUtil, ., isExprCall, (, parent, ), ), {, Node, callee, =, node, ., getFirstChild, (, ), ;]
[), {, Node, callee, =, node, ., getFirstChild, (, ), ;, if, (, callee, !=, null, &&, callee, ., isGetProp]
[., isExprCall, (, parent, ), ), {, Node, callee, =, node, ., getFirstChild, (, ), ;, if, (, callee, !=]
[), ), {, Node, callee, =, node, ., getFirstChild, (, ), ;, if, (, callee, !=, null, &&, callee, .]
[;, if, (, callee, !=, null, &&, callee, ., isGetProp, (, ), ), {, String, qualifiedName, =, callee, ., getQualifiedName]
[., getFirstChild, (, ), ;, if, (, callee, !=, null, &&, callee, ., isGetProp, (, ), ), {, String, qualifiedName]
[), {, String, qualifiedName, =, callee, ., getQualifiedName, (, ), ;, if, (, functionName, ., equals, (, qualifiedName, ), )]
[&&, callee, ., isGetProp, (, ), ), {, String, qualifiedName, =, callee, ., getQualifiedName, (, ), ;, if, (, functionName]
[!=, null, &&, callee, ., isGetProp, (, ), ), {, String, qualifiedName, =, callee, ., getQualifiedName, (, ), ;, if]
[&&, callee, ., isGetProp, (, ), ), {, String, qualifiedName, =, callee, ., getQualifiedName, (, ), ;, if, (, functionName]
[), {, String, qualifiedName, =, callee, ., getQualifiedName, (, ), ;, if, (, functionName, ., equals, (, qualifiedName, ), )]
[., isGetProp, (, ), ), {, String, qualifiedName, =, callee, ., getQualifiedName, (, ), ;, if, (, functionName, ., equals]
[;, if, (, functionName, ., equals, (, qualifiedName, ), ), {, Node, target, =, callee, ., getNext, (, ), ;]
[., getQualifiedName, (, ), ;, if, (, functionName, ., equals, (, qualifiedName, ), ), {, Node, target, =, callee, .]
[), {, Node, target, =, callee, ., getNext, (, ), ;, if, (, target, !=, null, &&, target, ., isString]
[., equals, (, qualifiedName, ), ), {, Node, target, =, callee, ., getNext, (, ), ;, if, (, target, !=]
[), ), {, Node, target, =, callee, ., getNext, (, ), ;, if, (, target, !=, null, &&, target, .]
[;, if, (, target, !=, null, &&, target, ., isString, (, ), ), {, className, =, target, ., getString, (]
[., getNext, (, ), ;, if, (, target, !=, null, &&, target, ., isString, (, ), ), {, className, =]
[), {, className, =, target, ., getString, (, ), ;, }, }, }, }, return, className, ;, }, @, Override]
[&&, target, ., isString, (, ), ), {, className, =, target, ., getString, (, ), ;, }, }, }, }]
[!=, null, &&, target, ., isString, (, ), ), {, className, =, target, ., getString, (, ), ;, }, }]
[&&, target, ., isString, (, ), ), {, className, =, target, ., getString, (, ), ;, }, }, }, }]
[), {, className, =, target, ., getString, (, ), ;, }, }, }, }, return, className, ;, }, @, Override]
[., isString, (, ), ), {, className, =, target, ., getString, (, ), ;, }, }, }, }, return, className]
[=, target, ., getString, (, ), ;, }, }, }, }, return, className, ;, }, @, Override, public, String, getExportPropertyFunction]
[;, }, }, }, }, return, className, ;, }, @, Override, public, String, getExportPropertyFunction, (, ), {, return, "goog.exportProperty", ;]
[., getString, (, ), ;, }, }, }, }, return, className, ;, }, @, Override, public, String, getExportPropertyFunction, (, )]
[;, }, @, Override, public, String, getExportPropertyFunction, (, ), {, return, "goog.exportProperty", ;, }, @, Override, public, String, getExportSymbolFunction, (]
[;, }, @, Override, public, String, getExportSymbolFunction, (, ), {, return, "goog.exportSymbol", ;, }, @, Override, public, List, <, String]
[;, }, @, Override, public, List, <, String, >, identifyTypeDeclarationCall, (, Node, n, ), {, Node, callName, =, n, .]
[;, if, (, "goog.addDependency", ., equals, (, callName, ., getQualifiedName, (, ), ), &&, n, ., getChildCount, (, ), >=]
[., getFirstChild, (, ), ;, if, (, "goog.addDependency", ., equals, (, callName, ., getQualifiedName, (, ), ), &&, n, .]
[), {, Node, typeArray, =, callName, ., getNext, (, ), ., getNext, (, ), ;, if, (, typeArray, ., isArrayLit]
[&&, n, ., getChildCount, (, ), >=, 3, ), {, Node, typeArray, =, callName, ., getNext, (, ), ., getNext]
[., equals, (, callName, ., getQualifiedName, (, ), ), &&, n, ., getChildCount, (, ), >=, 3, ), {, Node]
[), &&, n, ., getChildCount, (, ), >=, 3, ), {, Node, typeArray, =, callName, ., getNext, (, ), .]
[., getQualifiedName, (, ), ), &&, n, ., getChildCount, (, ), >=, 3, ), {, Node, typeArray, =, callName, .]
[), {, Node, typeArray, =, callName, ., getNext, (, ), ., getNext, (, ), ;, if, (, typeArray, ., isArrayLit]
[>=, 3, ), {, Node, typeArray, =, callName, ., getNext, (, ), ., getNext, (, ), ;, if, (, typeArray]
[., getChildCount, (, ), >=, 3, ), {, Node, typeArray, =, callName, ., getNext, (, ), ., getNext, (, )]
[), {, Node, typeArray, =, callName, ., getNext, (, ), ., getNext, (, ), ;, if, (, typeArray, ., isArrayLit]
[;, if, (, typeArray, ., isArrayLit, (, ), ), {, List, <, String, >, typeNames, =, Lists, ., newArrayList, (]
[., getNext, (, ), ;, if, (, typeArray, ., isArrayLit, (, ), ), {, List, <, String, >, typeNames, =]
[., getNext, (, ), ., getNext, (, ), ;, if, (, typeArray, ., isArrayLit, (, ), ), {, List, <]
[), {, List, <, String, >, typeNames, =, Lists, ., newArrayList, (, ), ;, for, (, Node, name, =, typeArray]
[., isArrayLit, (, ), ), {, List, <, String, >, typeNames, =, Lists, ., newArrayList, (, ), ;, for, (]
[;, for, (, Node, name, =, typeArray, ., getFirstChild, (, ), ;, name, !=, null, ;, name, =, name, .]
[., newArrayList, (, ), ;, for, (, Node, name, =, typeArray, ., getFirstChild, (, ), ;, name, !=, null, ;]
[;, name, !=, null, ;, name, =, name, ., getNext, (, ), ), {, if, (, name, ., isString, (]
[., getFirstChild, (, ), ;, name, !=, null, ;, name, =, name, ., getNext, (, ), ), {, if, (]
[;, name, =, name, ., getNext, (, ), ), {, if, (, name, ., isString, (, ), ), {, typeNames]
[!=, null, ;, name, =, name, ., getNext, (, ), ), {, if, (, name, ., isString, (, ), )]
[;, name, =, name, ., getNext, (, ), ), {, if, (, name, ., isString, (, ), ), {, typeNames]
[=, name, ., getNext, (, ), ), {, if, (, name, ., isString, (, ), ), {, typeNames, ., add]
[), {, if, (, name, ., isString, (, ), ), {, typeNames, ., add, (, name, ., getString, (, )]
[., getNext, (, ), ), {, if, (, name, ., isString, (, ), ), {, typeNames, ., add, (, name]
[), {, typeNames, ., add, (, name, ., getString, (, ), ), ;, }, }, return, typeNames, ;, }, }]
[., isString, (, ), ), {, typeNames, ., add, (, name, ., getString, (, ), ), ;, }, }, return]
[;, }, }, return, typeNames, ;, }, }, return, super, ., identifyTypeDeclarationCall, (, n, ), ;, }, @, Override, public]
[., add, (, name, ., getString, (, ), ), ;, }, }, return, typeNames, ;, }, }, return, super, .]
[), ;, }, }, return, typeNames, ;, }, }, return, super, ., identifyTypeDeclarationCall, (, n, ), ;, }, @, Override]
[., getString, (, ), ), ;, }, }, return, typeNames, ;, }, }, return, super, ., identifyTypeDeclarationCall, (, n, )]
[;, }, }, return, super, ., identifyTypeDeclarationCall, (, n, ), ;, }, @, Override, public, String, getAbstractMethodName, (, ), {]
[;, }, @, Override, public, String, getAbstractMethodName, (, ), {, return, "goog.abstractMethod", ;, }, @, Override, public, String, getSingletonGetterClassName, (]
[., identifyTypeDeclarationCall, (, n, ), ;, }, @, Override, public, String, getAbstractMethodName, (, ), {, return, "goog.abstractMethod", ;, }, @]
[), ;, }, @, Override, public, String, getAbstractMethodName, (, ), {, return, "goog.abstractMethod", ;, }, @, Override, public, String, getSingletonGetterClassName]
[;, }, @, Override, public, String, getSingletonGetterClassName, (, Node, callNode, ), {, Node, callArg, =, callNode, ., getFirstChild, (, )]
[;, String, callName, =, callArg, ., getQualifiedName, (, ), ;, if, (, !, (, "goog.addSingletonGetter", ., equals, (, callName, )]
[., getFirstChild, (, ), ;, String, callName, =, callArg, ., getQualifiedName, (, ), ;, if, (, !, (, "goog.addSingletonGetter", .]
[;, if, (, !, (, "goog.addSingletonGetter", ., equals, (, callName, ), ||, "goog$addSingletonGetter", ., equals, (, callName, ), ), ||]
[., getQualifiedName, (, ), ;, if, (, !, (, "goog.addSingletonGetter", ., equals, (, callName, ), ||, "goog$addSingletonGetter", ., equals, (]
[), {, return, super, ., getSingletonGetterClassName, (, callNode, ), ;, }, return, callArg, ., getNext, (, ), ., getQualifiedName, (]
[||, callNode, ., getChildCount, (, ), !=, 2, ), {, return, super, ., getSingletonGetterClassName, (, callNode, ), ;, }, return]
[||, callNode, ., getChildCount, (, ), !=, 2, ), {, return, super, ., getSingletonGetterClassName, (, callNode, ), ;, }, return]
[), ||, callNode, ., getChildCount, (, ), !=, 2, ), {, return, super, ., getSingletonGetterClassName, (, callNode, ), ;, }]
[||, "goog$addSingletonGetter", ., equals, (, callName, ), ), ||, callNode, ., getChildCount, (, ), !=, 2, ), {, return, super]
[., equals, (, callName, ), ||, "goog$addSingletonGetter", ., equals, (, callName, ), ), ||, callNode, ., getChildCount, (, ), !=]
[), ||, "goog$addSingletonGetter", ., equals, (, callName, ), ), ||, callNode, ., getChildCount, (, ), !=, 2, ), {, return]
[), ||, callNode, ., getChildCount, (, ), !=, 2, ), {, return, super, ., getSingletonGetterClassName, (, callNode, ), ;, }]
[., equals, (, callName, ), ), ||, callNode, ., getChildCount, (, ), !=, 2, ), {, return, super, ., getSingletonGetterClassName]
[), ), ||, callNode, ., getChildCount, (, ), !=, 2, ), {, return, super, ., getSingletonGetterClassName, (, callNode, ), ;]
[), {, return, super, ., getSingletonGetterClassName, (, callNode, ), ;, }, return, callArg, ., getNext, (, ), ., getQualifiedName, (]
[!=, 2, ), {, return, super, ., getSingletonGetterClassName, (, callNode, ), ;, }, return, callArg, ., getNext, (, ), .]
[., getChildCount, (, ), !=, 2, ), {, return, super, ., getSingletonGetterClassName, (, callNode, ), ;, }, return, callArg, .]
[), {, return, super, ., getSingletonGetterClassName, (, callNode, ), ;, }, return, callArg, ., getNext, (, ), ., getQualifiedName, (]
[;, }, return, callArg, ., getNext, (, ), ., getQualifiedName, (, ), ;, }, @, Override, public, void, applySingletonGetter, (]
[., getSingletonGetterClassName, (, callNode, ), ;, }, return, callArg, ., getNext, (, ), ., getQualifiedName, (, ), ;, }, @]
[), ;, }, return, callArg, ., getNext, (, ), ., getQualifiedName, (, ), ;, }, @, Override, public, void, applySingletonGetter]
[;, }, @, Override, public, void, applySingletonGetter, (, FunctionType, functionType, ,, FunctionType, getterType, ,, ObjectType, objectType, ), {, super, .]
[., getQualifiedName, (, ), ;, }, @, Override, public, void, applySingletonGetter, (, FunctionType, functionType, ,, FunctionType, getterType, ,, ObjectType, objectType]
[., getNext, (, ), ., getQualifiedName, (, ), ;, }, @, Override, public, void, applySingletonGetter, (, FunctionType, functionType, ,, FunctionType]
[;, functionType, ., defineDeclaredProperty, (, "getInstance", ,, getterType, ,, functionType, ., getSource, (, ), ), ;, functionType, ., defineDeclaredProperty, (]
[., applySingletonGetter, (, functionType, ,, getterType, ,, objectType, ), ;, functionType, ., defineDeclaredProperty, (, "getInstance", ,, getterType, ,, functionType, .]
[,, getterType, ,, objectType, ), ;, functionType, ., defineDeclaredProperty, (, "getInstance", ,, getterType, ,, functionType, ., getSource, (, ), )]
[,, objectType, ), ;, functionType, ., defineDeclaredProperty, (, "getInstance", ,, getterType, ,, functionType, ., getSource, (, ), ), ;, functionType]
[), ;, functionType, ., defineDeclaredProperty, (, "getInstance", ,, getterType, ,, functionType, ., getSource, (, ), ), ;, functionType, ., defineDeclaredProperty]
[;, functionType, ., defineDeclaredProperty, (, "instance_", ,, objectType, ,, functionType, ., getSource, (, ), ), ;, }, @, Override, public]
[., defineDeclaredProperty, (, "getInstance", ,, getterType, ,, functionType, ., getSource, (, ), ), ;, functionType, ., defineDeclaredProperty, (, "instance_", ,]
[,, getterType, ,, functionType, ., getSource, (, ), ), ;, functionType, ., defineDeclaredProperty, (, "instance_", ,, objectType, ,, functionType, .]
[,, functionType, ., getSource, (, ), ), ;, functionType, ., defineDeclaredProperty, (, "instance_", ,, objectType, ,, functionType, ., getSource, (]
[), ;, functionType, ., defineDeclaredProperty, (, "instance_", ,, objectType, ,, functionType, ., getSource, (, ), ), ;, }, @, Override]
[., getSource, (, ), ), ;, functionType, ., defineDeclaredProperty, (, "instance_", ,, objectType, ,, functionType, ., getSource, (, ), )]
[;, }, @, Override, public, String, getGlobalObject, (, ), {, return, "goog.global", ;, }, private, final, Set, <, String, >]
[., defineDeclaredProperty, (, "instance_", ,, objectType, ,, functionType, ., getSource, (, ), ), ;, }, @, Override, public, String, getGlobalObject]
[,, objectType, ,, functionType, ., getSource, (, ), ), ;, }, @, Override, public, String, getGlobalObject, (, ), {, return]
[,, functionType, ., getSource, (, ), ), ;, }, @, Override, public, String, getGlobalObject, (, ), {, return, "goog.global", ;]
[), ;, }, @, Override, public, String, getGlobalObject, (, ), {, return, "goog.global", ;, }, private, final, Set, <, String]
[., getSource, (, ), ), ;, }, @, Override, public, String, getGlobalObject, (, ), {, return, "goog.global", ;, }, private]
[;, }, private, final, Set, <, String, >, propertyTestFunctions, =, ImmutableSet, ., of, (, "goog.isDef", ,, "goog.isNull", ,, "goog.isDefAndNotNull", ,]
[;, @, Override, public, boolean, isPropertyTestFunction, (, Node, call, ), {, Preconditions, ., checkArgument, (, call, ., isCall, (, )]
[., of, (, "goog.isDef", ,, "goog.isNull", ,, "goog.isDefAndNotNull", ,, "goog.isString", ,, "goog.isNumber", ,, "goog.isBoolean", ,, "goog.isFunction", ,, "goog.isArray", ,, "goog.isObject"]
[,, "goog.isNull", ,, "goog.isDefAndNotNull", ,, "goog.isString", ,, "goog.isNumber", ,, "goog.isBoolean", ,, "goog.isFunction", ,, "goog.isArray", ,, "goog.isObject", ), ;, @, Override]
[,, "goog.isDefAndNotNull", ,, "goog.isString", ,, "goog.isNumber", ,, "goog.isBoolean", ,, "goog.isFunction", ,, "goog.isArray", ,, "goog.isObject", ), ;, @, Override, public, boolean]
[,, "goog.isString", ,, "goog.isNumber", ,, "goog.isBoolean", ,, "goog.isFunction", ,, "goog.isArray", ,, "goog.isObject", ), ;, @, Override, public, boolean, isPropertyTestFunction, (]
[,, "goog.isNumber", ,, "goog.isBoolean", ,, "goog.isFunction", ,, "goog.isArray", ,, "goog.isObject", ), ;, @, Override, public, boolean, isPropertyTestFunction, (, Node, call]
[,, "goog.isBoolean", ,, "goog.isFunction", ,, "goog.isArray", ,, "goog.isObject", ), ;, @, Override, public, boolean, isPropertyTestFunction, (, Node, call, ), {]
[,, "goog.isFunction", ,, "goog.isArray", ,, "goog.isObject", ), ;, @, Override, public, boolean, isPropertyTestFunction, (, Node, call, ), {, Preconditions, .]
[,, "goog.isArray", ,, "goog.isObject", ), ;, @, Override, public, boolean, isPropertyTestFunction, (, Node, call, ), {, Preconditions, ., checkArgument, (]
[,, "goog.isObject", ), ;, @, Override, public, boolean, isPropertyTestFunction, (, Node, call, ), {, Preconditions, ., checkArgument, (, call, .]
[), ;, @, Override, public, boolean, isPropertyTestFunction, (, Node, call, ), {, Preconditions, ., checkArgument, (, call, ., isCall, (]
[;, return, propertyTestFunctions, ., contains, (, call, ., getFirstChild, (, ), ., getQualifiedName, (, ), ), ||, super, ., isPropertyTestFunction]
[., checkArgument, (, call, ., isCall, (, ), ), ;, return, propertyTestFunctions, ., contains, (, call, ., getFirstChild, (, )]
[), ;, return, propertyTestFunctions, ., contains, (, call, ., getFirstChild, (, ), ., getQualifiedName, (, ), ), ||, super, .]
[., isCall, (, ), ), ;, return, propertyTestFunctions, ., contains, (, call, ., getFirstChild, (, ), ., getQualifiedName, (, )]
[;, }, @, Override, public, ObjectLiteralCast, getObjectLiteralCast, (, Node, callNode, ), {, Preconditions, ., checkArgument, (, callNode, ., isCall, (]
[||, super, ., isPropertyTestFunction, (, call, ), ;, }, @, Override, public, ObjectLiteralCast, getObjectLiteralCast, (, Node, callNode, ), {, Preconditions]
[., contains, (, call, ., getFirstChild, (, ), ., getQualifiedName, (, ), ), ||, super, ., isPropertyTestFunction, (, call, )]
[), ||, super, ., isPropertyTestFunction, (, call, ), ;, }, @, Override, public, ObjectLiteralCast, getObjectLiteralCast, (, Node, callNode, ), {]
[., getQualifiedName, (, ), ), ||, super, ., isPropertyTestFunction, (, call, ), ;, }, @, Override, public, ObjectLiteralCast, getObjectLiteralCast, (]
[., getFirstChild, (, ), ., getQualifiedName, (, ), ), ||, super, ., isPropertyTestFunction, (, call, ), ;, }, @, Override]
[;, }, @, Override, public, ObjectLiteralCast, getObjectLiteralCast, (, Node, callNode, ), {, Preconditions, ., checkArgument, (, callNode, ., isCall, (]
[., isPropertyTestFunction, (, call, ), ;, }, @, Override, public, ObjectLiteralCast, getObjectLiteralCast, (, Node, callNode, ), {, Preconditions, ., checkArgument]
[), ;, }, @, Override, public, ObjectLiteralCast, getObjectLiteralCast, (, Node, callNode, ), {, Preconditions, ., checkArgument, (, callNode, ., isCall]
[;, ObjectLiteralCast, proxyCast, =, super, ., getObjectLiteralCast, (, callNode, ), ;, if, (, proxyCast, !=, null, ), {, return, proxyCast]
[., checkArgument, (, callNode, ., isCall, (, ), ), ;, ObjectLiteralCast, proxyCast, =, super, ., getObjectLiteralCast, (, callNode, ), ;]
[), ;, ObjectLiteralCast, proxyCast, =, super, ., getObjectLiteralCast, (, callNode, ), ;, if, (, proxyCast, !=, null, ), {, return]
[., isCall, (, ), ), ;, ObjectLiteralCast, proxyCast, =, super, ., getObjectLiteralCast, (, callNode, ), ;, if, (, proxyCast, !=]
[;, if, (, proxyCast, !=, null, ), {, return, proxyCast, ;, }, Node, callName, =, callNode, ., getFirstChild, (, )]
[., getObjectLiteralCast, (, callNode, ), ;, if, (, proxyCast, !=, null, ), {, return, proxyCast, ;, }, Node, callName, =]
[), ;, if, (, proxyCast, !=, null, ), {, return, proxyCast, ;, }, Node, callName, =, callNode, ., getFirstChild, (]
[), {, return, proxyCast, ;, }, Node, callName, =, callNode, ., getFirstChild, (, ), ;, if, (, !, "goog.reflect.object", .]
[!=, null, ), {, return, proxyCast, ;, }, Node, callName, =, callNode, ., getFirstChild, (, ), ;, if, (, !]
[), {, return, proxyCast, ;, }, Node, callName, =, callNode, ., getFirstChild, (, ), ;, if, (, !, "goog.reflect.object", .]
[;, }, Node, callName, =, callNode, ., getFirstChild, (, ), ;, if, (, !, "goog.reflect.object", ., equals, (, callName, .]
[;, if, (, !, "goog.reflect.object", ., equals, (, callName, ., getQualifiedName, (, ), ), ||, callNode, ., getChildCount, (, )]
[., getFirstChild, (, ), ;, if, (, !, "goog.reflect.object", ., equals, (, callName, ., getQualifiedName, (, ), ), ||, callNode]
[), {, return, null, ;, }, Node, typeNode, =, callName, ., getNext, (, ), ;, if, (, !, typeNode, .]
[||, callNode, ., getChildCount, (, ), !=, 3, ), {, return, null, ;, }, Node, typeNode, =, callName, ., getNext]
[||, callNode, ., getChildCount, (, ), !=, 3, ), {, return, null, ;, }, Node, typeNode, =, callName, ., getNext]
[., equals, (, callName, ., getQualifiedName, (, ), ), ||, callNode, ., getChildCount, (, ), !=, 3, ), {, return]
[), ||, callNode, ., getChildCount, (, ), !=, 3, ), {, return, null, ;, }, Node, typeNode, =, callName, .]
[., getQualifiedName, (, ), ), ||, callNode, ., getChildCount, (, ), !=, 3, ), {, return, null, ;, }, Node]
[), {, return, null, ;, }, Node, typeNode, =, callName, ., getNext, (, ), ;, if, (, !, typeNode, .]
[!=, 3, ), {, return, null, ;, }, Node, typeNode, =, callName, ., getNext, (, ), ;, if, (, !]
[., getChildCount, (, ), !=, 3, ), {, return, null, ;, }, Node, typeNode, =, callName, ., getNext, (, )]
[), {, return, null, ;, }, Node, typeNode, =, callName, ., getNext, (, ), ;, if, (, !, typeNode, .]
[;, }, Node, typeNode, =, callName, ., getNext, (, ), ;, if, (, !, typeNode, ., isQualifiedName, (, ), )]
[;, if, (, !, typeNode, ., isQualifiedName, (, ), ), {, return, null, ;, }, Node, objectNode, =, typeNode, .]
[., getNext, (, ), ;, if, (, !, typeNode, ., isQualifiedName, (, ), ), {, return, null, ;, }, Node]
[), {, return, null, ;, }, Node, objectNode, =, typeNode, ., getNext, (, ), ;, if, (, !, objectNode, .]
[), {, return, null, ;, }, Node, objectNode, =, typeNode, ., getNext, (, ), ;, if, (, !, objectNode, .]
[., isQualifiedName, (, ), ), {, return, null, ;, }, Node, objectNode, =, typeNode, ., getNext, (, ), ;, if]
[;, }, Node, objectNode, =, typeNode, ., getNext, (, ), ;, if, (, !, objectNode, ., isObjectLit, (, ), )]
[;, if, (, !, objectNode, ., isObjectLit, (, ), ), {, return, new, ObjectLiteralCast, (, null, ,, null, ,, OBJECTLIT_EXPECTED]
[., getNext, (, ), ;, if, (, !, objectNode, ., isObjectLit, (, ), ), {, return, new, ObjectLiteralCast, (, null]
[), {, return, new, ObjectLiteralCast, (, null, ,, null, ,, OBJECTLIT_EXPECTED, ), ;, }, return, new, ObjectLiteralCast, (, typeNode, .]
[), {, return, new, ObjectLiteralCast, (, null, ,, null, ,, OBJECTLIT_EXPECTED, ), ;, }, return, new, ObjectLiteralCast, (, typeNode, .]
[., isObjectLit, (, ), ), {, return, new, ObjectLiteralCast, (, null, ,, null, ,, OBJECTLIT_EXPECTED, ), ;, }, return, new]
[;, }, return, new, ObjectLiteralCast, (, typeNode, ., getQualifiedName, (, ), ,, typeNode, ., getNext, (, ), ,, null, )]
[,, null, ,, OBJECTLIT_EXPECTED, ), ;, }, return, new, ObjectLiteralCast, (, typeNode, ., getQualifiedName, (, ), ,, typeNode, ., getNext]
[,, OBJECTLIT_EXPECTED, ), ;, }, return, new, ObjectLiteralCast, (, typeNode, ., getQualifiedName, (, ), ,, typeNode, ., getNext, (, )]
[), ;, }, return, new, ObjectLiteralCast, (, typeNode, ., getQualifiedName, (, ), ,, typeNode, ., getNext, (, ), ,, null]
[;, }, @, Override, public, boolean, isOptionalParameter, (, Node, parameter, ), {, return, false, ;, }, @, Override, public, boolean]
[,, typeNode, ., getNext, (, ), ,, null, ), ;, }, @, Override, public, boolean, isOptionalParameter, (, Node, parameter, )]
[., getQualifiedName, (, ), ,, typeNode, ., getNext, (, ), ,, null, ), ;, }, @, Override, public, boolean, isOptionalParameter]
[,, null, ), ;, }, @, Override, public, boolean, isOptionalParameter, (, Node, parameter, ), {, return, false, ;, }, @]
[., getNext, (, ), ,, null, ), ;, }, @, Override, public, boolean, isOptionalParameter, (, Node, parameter, ), {, return]
[), ;, }, @, Override, public, boolean, isOptionalParameter, (, Node, parameter, ), {, return, false, ;, }, @, Override, public]
[;, }, @, Override, public, boolean, isVarArgsParameter, (, Node, parameter, ), {, return, false, ;, }, @, Override, public, boolean]
[;, }, @, Override, public, boolean, isPrivate, (, String, name, ), {, return, false, ;, }, @, Override, public, Collection]
[;, }, @, Override, public, Collection, <, AssertionFunctionSpec, >, getAssertionFunctions, (, ), {, return, ImmutableList, ., <, AssertionFunctionSpec, >, of]
[;, }, @, Override, public, Bind, describeFunctionBind, (, Node, n, ,, boolean, useTypeInfo, ), {, Bind, result, =, super, .]
[., <, AssertionFunctionSpec, >, of, (, new, AssertionFunctionSpec, (, "goog.asserts.assert", ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertNumber", ,, JSTypeNative, ., NUMBER_TYPE]
[,, new, AssertionFunctionSpec, (, "goog.asserts.assertNumber", ,, JSTypeNative, ., NUMBER_TYPE, ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertString", ,, JSTypeNative, ., STRING_TYPE, )]
[), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertNumber", ,, JSTypeNative, ., NUMBER_TYPE, ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertString", ,, JSTypeNative, ., STRING_TYPE]
[,, new, AssertionFunctionSpec, (, "goog.asserts.assertString", ,, JSTypeNative, ., STRING_TYPE, ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertFunction", ,, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, )]
[,, JSTypeNative, ., NUMBER_TYPE, ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertString", ,, JSTypeNative, ., STRING_TYPE, ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertFunction"]
[), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertString", ,, JSTypeNative, ., STRING_TYPE, ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertFunction", ,, JSTypeNative, ., FUNCTION_INSTANCE_TYPE]
[., NUMBER_TYPE, ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertString", ,, JSTypeNative, ., STRING_TYPE, ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertFunction", ,, JSTypeNative]
[,, new, AssertionFunctionSpec, (, "goog.asserts.assertFunction", ,, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertObject", ,, JSTypeNative, ., OBJECT_TYPE, )]
[,, JSTypeNative, ., STRING_TYPE, ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertFunction", ,, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertObject"]
[), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertFunction", ,, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertObject", ,, JSTypeNative, ., OBJECT_TYPE]
[., STRING_TYPE, ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertFunction", ,, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertObject", ,, JSTypeNative]
[,, new, AssertionFunctionSpec, (, "goog.asserts.assertObject", ,, JSTypeNative, ., OBJECT_TYPE, ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertArray", ,, JSTypeNative, ., ARRAY_TYPE, )]
[,, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertObject", ,, JSTypeNative, ., OBJECT_TYPE, ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertArray"]
[), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertObject", ,, JSTypeNative, ., OBJECT_TYPE, ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertArray", ,, JSTypeNative, ., ARRAY_TYPE]
[., FUNCTION_INSTANCE_TYPE, ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertObject", ,, JSTypeNative, ., OBJECT_TYPE, ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertArray", ,, JSTypeNative]
[,, new, AssertionFunctionSpec, (, "goog.asserts.assertArray", ,, JSTypeNative, ., ARRAY_TYPE, ), ,, new, AssertInstanceofSpec, (, "goog.asserts.assertInstanceof", ), ), ;, }, @]
[,, JSTypeNative, ., OBJECT_TYPE, ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertArray", ,, JSTypeNative, ., ARRAY_TYPE, ), ,, new, AssertInstanceofSpec, (, "goog.asserts.assertInstanceof"]
[), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertArray", ,, JSTypeNative, ., ARRAY_TYPE, ), ,, new, AssertInstanceofSpec, (, "goog.asserts.assertInstanceof", ), ), ;, }]
[., OBJECT_TYPE, ), ,, new, AssertionFunctionSpec, (, "goog.asserts.assertArray", ,, JSTypeNative, ., ARRAY_TYPE, ), ,, new, AssertInstanceofSpec, (, "goog.asserts.assertInstanceof", ), )]
[,, new, AssertInstanceofSpec, (, "goog.asserts.assertInstanceof", ), ), ;, }, @, Override, public, Bind, describeFunctionBind, (, Node, n, ,, boolean, useTypeInfo]
[,, JSTypeNative, ., ARRAY_TYPE, ), ,, new, AssertInstanceofSpec, (, "goog.asserts.assertInstanceof", ), ), ;, }, @, Override, public, Bind, describeFunctionBind, (]
[), ,, new, AssertInstanceofSpec, (, "goog.asserts.assertInstanceof", ), ), ;, }, @, Override, public, Bind, describeFunctionBind, (, Node, n, ,, boolean]
[., ARRAY_TYPE, ), ,, new, AssertInstanceofSpec, (, "goog.asserts.assertInstanceof", ), ), ;, }, @, Override, public, Bind, describeFunctionBind, (, Node, n]
[), ;, }, @, Override, public, Bind, describeFunctionBind, (, Node, n, ,, boolean, useTypeInfo, ), {, Bind, result, =, super]
[), ), ;, }, @, Override, public, Bind, describeFunctionBind, (, Node, n, ,, boolean, useTypeInfo, ), {, Bind, result, =]
[;, if, (, result, !=, null, ), {, return, result, ;, }, if, (, !, n, ., isCall, (, )]
[., describeFunctionBind, (, n, ,, useTypeInfo, ), ;, if, (, result, !=, null, ), {, return, result, ;, }, if]
[,, useTypeInfo, ), ;, if, (, result, !=, null, ), {, return, result, ;, }, if, (, !, n, .]
[), ;, if, (, result, !=, null, ), {, return, result, ;, }, if, (, !, n, ., isCall, (]
[), {, return, result, ;, }, if, (, !, n, ., isCall, (, ), ), {, return, null, ;, }]
[!=, null, ), {, return, result, ;, }, if, (, !, n, ., isCall, (, ), ), {, return, null]
[), {, return, result, ;, }, if, (, !, n, ., isCall, (, ), ), {, return, null, ;, }]
[;, }, if, (, !, n, ., isCall, (, ), ), {, return, null, ;, }, Node, callTarget, =, n]
[), {, return, null, ;, }, Node, callTarget, =, n, ., getFirstChild, (, ), ;, String, name, =, callTarget, .]
[), {, return, null, ;, }, Node, callTarget, =, n, ., getFirstChild, (, ), ;, String, name, =, callTarget, .]
[., isCall, (, ), ), {, return, null, ;, }, Node, callTarget, =, n, ., getFirstChild, (, ), ;, String]
[;, }, Node, callTarget, =, n, ., getFirstChild, (, ), ;, String, name, =, callTarget, ., getQualifiedName, (, ), ;]
[;, String, name, =, callTarget, ., getQualifiedName, (, ), ;, if, (, name, !=, null, ), {, if, (, name]
[., getFirstChild, (, ), ;, String, name, =, callTarget, ., getQualifiedName, (, ), ;, if, (, name, !=, null, )]
[;, if, (, name, !=, null, ), {, if, (, name, ., equals, (, "goog.bind", ), ||, name, ., equals]
[., getQualifiedName, (, ), ;, if, (, name, !=, null, ), {, if, (, name, ., equals, (, "goog.bind", )]
[), {, if, (, name, ., equals, (, "goog.bind", ), ||, name, ., equals, (, "goog$bind", ), ), {, Node]
[!=, null, ), {, if, (, name, ., equals, (, "goog.bind", ), ||, name, ., equals, (, "goog$bind", ), )]
[), {, if, (, name, ., equals, (, "goog.bind", ), ||, name, ., equals, (, "goog$bind", ), ), {, Node]
[), {, Node, fn, =, callTarget, ., getNext, (, ), ;, if, (, fn, ==, null, ), {, return, null]
[||, name, ., equals, (, "goog$bind", ), ), {, Node, fn, =, callTarget, ., getNext, (, ), ;, if, (]
[., equals, (, "goog.bind", ), ||, name, ., equals, (, "goog$bind", ), ), {, Node, fn, =, callTarget, ., getNext]
[), ||, name, ., equals, (, "goog$bind", ), ), {, Node, fn, =, callTarget, ., getNext, (, ), ;, if]
[), {, Node, fn, =, callTarget, ., getNext, (, ), ;, if, (, fn, ==, null, ), {, return, null]
[., equals, (, "goog$bind", ), ), {, Node, fn, =, callTarget, ., getNext, (, ), ;, if, (, fn, ==]
[), ), {, Node, fn, =, callTarget, ., getNext, (, ), ;, if, (, fn, ==, null, ), {, return]
[;, if, (, fn, ==, null, ), {, return, null, ;, }, Node, thisValue, =, safeNext, (, fn, ), ;]
[., getNext, (, ), ;, if, (, fn, ==, null, ), {, return, null, ;, }, Node, thisValue, =, safeNext]
[), {, return, null, ;, }, Node, thisValue, =, safeNext, (, fn, ), ;, Node, parameters, =, safeNext, (, thisValue]
[==, null, ), {, return, null, ;, }, Node, thisValue, =, safeNext, (, fn, ), ;, Node, parameters, =, safeNext]
[), {, return, null, ;, }, Node, thisValue, =, safeNext, (, fn, ), ;, Node, parameters, =, safeNext, (, thisValue]
[;, }, Node, thisValue, =, safeNext, (, fn, ), ;, Node, parameters, =, safeNext, (, thisValue, ), ;, return, new]
[;, Node, parameters, =, safeNext, (, thisValue, ), ;, return, new, Bind, (, fn, ,, thisValue, ,, parameters, ), ;]
[), ;, Node, parameters, =, safeNext, (, thisValue, ), ;, return, new, Bind, (, fn, ,, thisValue, ,, parameters, )]
[;, return, new, Bind, (, fn, ,, thisValue, ,, parameters, ), ;, }, if, (, name, ., equals, (, "goog.partial"]
[), ;, return, new, Bind, (, fn, ,, thisValue, ,, parameters, ), ;, }, if, (, name, ., equals, (]
[;, }, if, (, name, ., equals, (, "goog.partial", ), ||, name, ., equals, (, "goog$partial", ), ), {, Node]
[,, thisValue, ,, parameters, ), ;, }, if, (, name, ., equals, (, "goog.partial", ), ||, name, ., equals, (]
[,, parameters, ), ;, }, if, (, name, ., equals, (, "goog.partial", ), ||, name, ., equals, (, "goog$partial", )]
[), ;, }, if, (, name, ., equals, (, "goog.partial", ), ||, name, ., equals, (, "goog$partial", ), ), {]
[), {, Node, fn, =, callTarget, ., getNext, (, ), ;, if, (, fn, ==, null, ), {, return, null]
[||, name, ., equals, (, "goog$partial", ), ), {, Node, fn, =, callTarget, ., getNext, (, ), ;, if, (]
[., equals, (, "goog.partial", ), ||, name, ., equals, (, "goog$partial", ), ), {, Node, fn, =, callTarget, ., getNext]
[), ||, name, ., equals, (, "goog$partial", ), ), {, Node, fn, =, callTarget, ., getNext, (, ), ;, if]
[), {, Node, fn, =, callTarget, ., getNext, (, ), ;, if, (, fn, ==, null, ), {, return, null]
[., equals, (, "goog$partial", ), ), {, Node, fn, =, callTarget, ., getNext, (, ), ;, if, (, fn, ==]
[), ), {, Node, fn, =, callTarget, ., getNext, (, ), ;, if, (, fn, ==, null, ), {, return]
[;, if, (, fn, ==, null, ), {, return, null, ;, }, Node, thisValue, =, null, ;, Node, parameters, =]
[., getNext, (, ), ;, if, (, fn, ==, null, ), {, return, null, ;, }, Node, thisValue, =, null]
[), {, return, null, ;, }, Node, thisValue, =, null, ;, Node, parameters, =, safeNext, (, fn, ), ;, return]
[==, null, ), {, return, null, ;, }, Node, thisValue, =, null, ;, Node, parameters, =, safeNext, (, fn, )]
[), {, return, null, ;, }, Node, thisValue, =, null, ;, Node, parameters, =, safeNext, (, fn, ), ;, return]
[;, }, Node, thisValue, =, null, ;, Node, parameters, =, safeNext, (, fn, ), ;, return, new, Bind, (, fn]
[;, Node, parameters, =, safeNext, (, fn, ), ;, return, new, Bind, (, fn, ,, thisValue, ,, parameters, ), ;]
[;, return, new, Bind, (, fn, ,, thisValue, ,, parameters, ), ;, }, }, return, null, ;, }, @, Override]
[), ;, return, new, Bind, (, fn, ,, thisValue, ,, parameters, ), ;, }, }, return, null, ;, }, @]
[;, }, }, return, null, ;, }, @, Override, public, Collection, <, String, >, getIndirectlyDeclaredProperties, (, ), {, return, indirectlyDeclaredProperties]
[,, thisValue, ,, parameters, ), ;, }, }, return, null, ;, }, @, Override, public, Collection, <, String, >, getIndirectlyDeclaredProperties]
[,, parameters, ), ;, }, }, return, null, ;, }, @, Override, public, Collection, <, String, >, getIndirectlyDeclaredProperties, (, )]
[), ;, }, }, return, null, ;, }, @, Override, public, Collection, <, String, >, getIndirectlyDeclaredProperties, (, ), {, return]
[;, }, @, Override, public, Collection, <, String, >, getIndirectlyDeclaredProperties, (, ), {, return, indirectlyDeclaredProperties, ;, }, private, Node, safeNext]
[;, }, private, Node, safeNext, (, Node, n, ), {, if, (, n, !=, null, ), {, return, n, .]
[), {, return, n, ., getNext, (, ), ;, }, return, null, ;, }, public, static, class, AssertInstanceofSpec, extends, AssertionFunctionSpec]
[!=, null, ), {, return, n, ., getNext, (, ), ;, }, return, null, ;, }, public, static, class, AssertInstanceofSpec]
[), {, return, n, ., getNext, (, ), ;, }, return, null, ;, }, public, static, class, AssertInstanceofSpec, extends, AssertionFunctionSpec]
[;, }, return, null, ;, }, public, static, class, AssertInstanceofSpec, extends, AssertionFunctionSpec, {, public, AssertInstanceofSpec, (, String, functionName, ), {]
[., getNext, (, ), ;, }, return, null, ;, }, public, static, class, AssertInstanceofSpec, extends, AssertionFunctionSpec, {, public, AssertInstanceofSpec, (]
[;, }, public, static, class, AssertInstanceofSpec, extends, AssertionFunctionSpec, {, public, AssertInstanceofSpec, (, String, functionName, ), {, super, (, functionName, ,]
[,, JSTypeNative, ., OBJECT_TYPE, ), ;, }, @, Override, public, JSType, getAssertedType, (, Node, call, ,, JSTypeRegistry, registry, ), {]
[), ;, }, @, Override, public, JSType, getAssertedType, (, Node, call, ,, JSTypeRegistry, registry, ), {, if, (, call, .]
[., OBJECT_TYPE, ), ;, }, @, Override, public, JSType, getAssertedType, (, Node, call, ,, JSTypeRegistry, registry, ), {, if, (]
[), {, Node, constructor, =, call, ., getFirstChild, (, ), ., getNext, (, ), ., getNext, (, ), ;, if]
[>, 2, ), {, Node, constructor, =, call, ., getFirstChild, (, ), ., getNext, (, ), ., getNext, (, )]
[., getChildCount, (, ), >, 2, ), {, Node, constructor, =, call, ., getFirstChild, (, ), ., getNext, (, )]
[), {, Node, constructor, =, call, ., getFirstChild, (, ), ., getNext, (, ), ., getNext, (, ), ;, if]
[;, if, (, constructor, !=, null, ), {, JSType, ownerType, =, constructor, ., getJSType, (, ), ;, if, (, ownerType]
[., getNext, (, ), ;, if, (, constructor, !=, null, ), {, JSType, ownerType, =, constructor, ., getJSType, (, )]
[., getNext, (, ), ., getNext, (, ), ;, if, (, constructor, !=, null, ), {, JSType, ownerType, =, constructor]
[., getFirstChild, (, ), ., getNext, (, ), ., getNext, (, ), ;, if, (, constructor, !=, null, ), {]
[), {, JSType, ownerType, =, constructor, ., getJSType, (, ), ;, if, (, ownerType, !=, null, &&, ownerType, ., isFunctionType]
[!=, null, ), {, JSType, ownerType, =, constructor, ., getJSType, (, ), ;, if, (, ownerType, !=, null, &&, ownerType]
[), {, JSType, ownerType, =, constructor, ., getJSType, (, ), ;, if, (, ownerType, !=, null, &&, ownerType, ., isFunctionType]
[;, if, (, ownerType, !=, null, &&, ownerType, ., isFunctionType, (, ), &&, ownerType, ., isConstructor, (, ), ), {]
[., getJSType, (, ), ;, if, (, ownerType, !=, null, &&, ownerType, ., isFunctionType, (, ), &&, ownerType, ., isConstructor]
[), {, FunctionType, functionType, =, (, (, FunctionType, ), ownerType, ), ;, return, functionType, ., getInstanceType, (, ), ;, }]
[&&, ownerType, ., isConstructor, (, ), ), {, FunctionType, functionType, =, (, (, FunctionType, ), ownerType, ), ;, return, functionType]
[&&, ownerType, ., isFunctionType, (, ), &&, ownerType, ., isConstructor, (, ), ), {, FunctionType, functionType, =, (, (, FunctionType]
[!=, null, &&, ownerType, ., isFunctionType, (, ), &&, ownerType, ., isConstructor, (, ), ), {, FunctionType, functionType, =, (]
[&&, ownerType, ., isFunctionType, (, ), &&, ownerType, ., isConstructor, (, ), ), {, FunctionType, functionType, =, (, (, FunctionType]
[&&, ownerType, ., isConstructor, (, ), ), {, FunctionType, functionType, =, (, (, FunctionType, ), ownerType, ), ;, return, functionType]
[., isFunctionType, (, ), &&, ownerType, ., isConstructor, (, ), ), {, FunctionType, functionType, =, (, (, FunctionType, ), ownerType]
[), {, FunctionType, functionType, =, (, (, FunctionType, ), ownerType, ), ;, return, functionType, ., getInstanceType, (, ), ;, }]
[., isConstructor, (, ), ), {, FunctionType, functionType, =, (, (, FunctionType, ), ownerType, ), ;, return, functionType, ., getInstanceType]
[;, return, functionType, ., getInstanceType, (, ), ;, }, }, }, return, super, ., getAssertedType, (, call, ,, registry, )]
[), ;, return, functionType, ., getInstanceType, (, ), ;, }, }, }, return, super, ., getAssertedType, (, call, ,, registry]
[), ;, return, functionType, ., getInstanceType, (, ), ;, }, }, }, return, super, ., getAssertedType, (, call, ,, registry]
[;, }, }, }, return, super, ., getAssertedType, (, call, ,, registry, ), ;, }, }, }]
[., getInstanceType, (, ), ;, }, }, }, return, super, ., getAssertedType, (, call, ,, registry, ), ;, }, }]
[;, }, }, }]
[., getAssertedType, (, call, ,, registry, ), ;, }, }, }]
[,, registry, ), ;, }, }, }]
[), ;, }, }, }]
