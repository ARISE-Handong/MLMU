[., time, ., DurationFieldType, ;, public, final, class, UnsupportedDurationField, extends, DurationField, implements, Serializable, {, private, static, final, long, serialVersionUID, =]
[time, ., DurationFieldType, ;, public, final, class, UnsupportedDurationField, extends, DurationField, implements, Serializable, {, private, static, final, long, serialVersionUID, =, -]
[,, UnsupportedDurationField, >, cCache, ;, public, static, synchronized, UnsupportedDurationField, getInstance, (, DurationFieldType, type, ), {, UnsupportedDurationField, field, ;, if, (]
[,, UnsupportedDurationField, >, cCache, ;, public, static, synchronized, UnsupportedDurationField, getInstance, (, DurationFieldType, type, ), {, UnsupportedDurationField, field, ;, if, (]
[>, cCache, ;, public, static, synchronized, UnsupportedDurationField, getInstance, (, DurationFieldType, type, ), {, UnsupportedDurationField, field, ;, if, (, cCache, ==]
[public, static, synchronized, UnsupportedDurationField, getInstance, (, DurationFieldType, type, ), {, UnsupportedDurationField, field, ;, if, (, cCache, ==, null, ), {]
[synchronized, UnsupportedDurationField, getInstance, (, DurationFieldType, type, ), {, UnsupportedDurationField, field, ;, if, (, cCache, ==, null, ), {, cCache, =]
[UnsupportedDurationField, field, ;, if, (, cCache, ==, null, ), {, cCache, =, new, HashMap, <, DurationFieldType, ,, UnsupportedDurationField, >, (]
[if, (, cCache, ==, null, ), {, cCache, =, new, HashMap, <, DurationFieldType, ,, UnsupportedDurationField, >, (, 7, ), ;]
[cCache, ==, null, ), {, cCache, =, new, HashMap, <, DurationFieldType, ,, UnsupportedDurationField, >, (, 7, ), ;, field, =]
[cCache, =, new, HashMap, <, DurationFieldType, ,, UnsupportedDurationField, >, (, 7, ), ;, field, =, null, ;, }, else, {]
[new, HashMap, <, DurationFieldType, ,, UnsupportedDurationField, >, (, 7, ), ;, field, =, null, ;, }, else, {, field, =]
[new, HashMap, <, DurationFieldType, ,, UnsupportedDurationField, >, (, 7, ), ;, field, =, null, ;, }, else, {, field, =]
[,, UnsupportedDurationField, >, (, 7, ), ;, field, =, null, ;, }, else, {, field, =, cCache, ., get, (]
[;, field, =, null, ;, }, else, {, field, =, cCache, ., get, (, type, ), ;, }, if, (]
[;, field, =, null, ;, }, else, {, field, =, cCache, ., get, (, type, ), ;, }, if, (]
[=, null, ;, }, else, {, field, =, cCache, ., get, (, type, ), ;, }, if, (, field, ==]
[}, else, {, field, =, cCache, ., get, (, type, ), ;, }, if, (, field, ==, null, ), {]
[{, field, =, cCache, ., get, (, type, ), ;, }, if, (, field, ==, null, ), {, field, =]
[cCache, ., get, (, type, ), ;, }, if, (, field, ==, null, ), {, field, =, new, UnsupportedDurationField, (]
[(, type, ), ;, }, if, (, field, ==, null, ), {, field, =, new, UnsupportedDurationField, (, type, ), ;]
[(, type, ), ;, }, if, (, field, ==, null, ), {, field, =, new, UnsupportedDurationField, (, type, ), ;]
[}, if, (, field, ==, null, ), {, field, =, new, UnsupportedDurationField, (, type, ), ;, cCache, ., put, (]
[(, field, ==, null, ), {, field, =, new, UnsupportedDurationField, (, type, ), ;, cCache, ., put, (, type, ,]
[{, field, =, new, UnsupportedDurationField, (, type, ), ;, cCache, ., put, (, type, ,, field, ), ;, }, return]
[field, ), ;, }, return, field, ;, }, private, final, DurationFieldType, iType, ;, private, UnsupportedDurationField, (, DurationFieldType, type, ), {]
[;, }, return, field, ;, }, private, final, DurationFieldType, iType, ;, private, UnsupportedDurationField, (, DurationFieldType, type, ), {, iType, =]
[private, UnsupportedDurationField, (, DurationFieldType, type, ), {, iType, =, type, ;, }, public, final, DurationFieldType, getType, (, ), {, return]
[;, }, public, final, DurationFieldType, getType, (, ), {, return, iType, ;, }, public, String, getName, (, ), {, return]
[;, }, public, final, DurationFieldType, getType, (, ), {, return, iType, ;, }, public, String, getName, (, ), {, return]
[String, getName, (, ), {, return, iType, ., getName, (, ), ;, }, public, boolean, isSupported, (, ), {, return]
[), ;, }, public, boolean, isSupported, (, ), {, return, false, ;, }, public, boolean, isPrecise, (, ), {, return]
[}, public, boolean, isPrecise, (, ), {, return, true, ;, }, public, int, getValue, (, long, duration, ), {, throw]
[(, long, duration, ), {, throw, unsupported, (, ), ;, }, public, long, getValueAsLong, (, long, duration, ), {, throw]
[), {, throw, unsupported, (, ), ;, }, public, int, getValue, (, long, duration, ,, long, instant, ), {, throw]
[), {, throw, unsupported, (, ), ;, }, public, long, getValueAsLong, (, long, duration, ,, long, instant, ), {, throw]
[,, long, instant, ), {, throw, unsupported, (, ), ;, }, public, long, getMillis, (, int, value, ), {, throw]
[(, int, value, ), {, throw, unsupported, (, ), ;, }, public, long, getMillis, (, long, value, ), {, throw]
[), {, throw, unsupported, (, ), ;, }, public, long, getMillis, (, int, value, ,, long, instant, ), {, throw]
[), {, throw, unsupported, (, ), ;, }, public, long, getMillis, (, long, value, ,, long, instant, ), {, throw]
[), {, throw, unsupported, (, ), ;, }, public, long, add, (, long, instant, ,, int, value, ), {, throw]
[), {, throw, unsupported, (, ), ;, }, public, long, add, (, long, instant, ,, long, value, ), {, throw]
[), {, throw, unsupported, (, ), ;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, throw]
[), {, throw, unsupported, (, ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, throw]
[long, minuendInstant, ,, long, subtrahendInstant, ), {, throw, unsupported, (, ), ;, }, public, long, getUnitMillis, (, ), {, return]
[public, long, getUnitMillis, (, ), {, return, 0, ;, }, public, int, compareTo, (, DurationField, durationField, ), {, if, (]
[public, long, getUnitMillis, (, ), {, return, 0, ;, }, public, int, compareTo, (, DurationField, durationField, ), {, if, (]
[;, }, public, int, compareTo, (, DurationField, durationField, ), {, if, (, durationField, ., isSupported, (, ), ), {, return]
[compareTo, (, DurationField, durationField, ), {, if, (, durationField, ., isSupported, (, ), ), {, return, 1, ;, }, return]
[), {, return, 1, ;, }, return, 0, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[), {, return, 1, ;, }, return, 0, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[return, 1, ;, }, return, 0, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, this, ==]
[return, 0, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, this, ==, obj, ), {, return]
[equals, (, Object, obj, ), {, if, (, this, ==, obj, ), {, return, true, ;, }, else, if, (]
[equals, (, Object, obj, ), {, if, (, this, ==, obj, ), {, return, true, ;, }, else, if, (]
[this, ==, obj, ), {, return, true, ;, }, else, if, (, obj, instanceof, UnsupportedDurationField, ), {, UnsupportedDurationField, other, =]
[), {, return, true, ;, }, else, if, (, obj, instanceof, UnsupportedDurationField, ), {, UnsupportedDurationField, other, =, (, UnsupportedDurationField, )]
[;, }, else, if, (, obj, instanceof, UnsupportedDurationField, ), {, UnsupportedDurationField, other, =, (, UnsupportedDurationField, ), obj, ;, if, (]
[;, }, else, if, (, obj, instanceof, UnsupportedDurationField, ), {, UnsupportedDurationField, other, =, (, UnsupportedDurationField, ), obj, ;, if, (]
[;, }, else, if, (, obj, instanceof, UnsupportedDurationField, ), {, UnsupportedDurationField, other, =, (, UnsupportedDurationField, ), obj, ;, if, (]
[instanceof, UnsupportedDurationField, ), {, UnsupportedDurationField, other, =, (, UnsupportedDurationField, ), obj, ;, if, (, other, ., getName, (, ), ==]
[UnsupportedDurationField, other, =, (, UnsupportedDurationField, ), obj, ;, if, (, other, ., getName, (, ), ==, null, ), {, return]
[other, =, (, UnsupportedDurationField, ), obj, ;, if, (, other, ., getName, (, ), ==, null, ), {, return, (]
[other, =, (, UnsupportedDurationField, ), obj, ;, if, (, other, ., getName, (, ), ==, null, ), {, return, (]
[), obj, ;, if, (, other, ., getName, (, ), ==, null, ), {, return, (, getName, (, ), ==]
[other, ., getName, (, ), ==, null, ), {, return, (, getName, (, ), ==, null, ), ;, }, return]
[., getName, (, ), ==, null, ), {, return, (, getName, (, ), ==, null, ), ;, }, return, (]
[., getName, (, ), ==, null, ), {, return, (, getName, (, ), ==, null, ), ;, }, return, (]
[., getName, (, ), ==, null, ), {, return, (, getName, (, ), ==, null, ), ;, }, return, (]
[return, (, getName, (, ), ==, null, ), ;, }, return, (, other, ., getName, (, ), ., equals, (]
[;, }, return, (, other, ., getName, (, ), ., equals, (, getName, (, ), ), ), ;, }, return]
[equals, (, getName, (, ), ), ), ;, }, return, false, ;, }, public, int, hashCode, (, ), {, return]
[equals, (, getName, (, ), ), ), ;, }, return, false, ;, }, public, int, hashCode, (, ), {, return]
[(, ), {, return, getName, (, ), ., hashCode, (, ), ;, }, public, String, toString, (, ), {, return]
[(, ), {, return, getName, (, ), ., hashCode, (, ), ;, }, public, String, toString, (, ), {, return]
[(, ), {, return, getName, (, ), ., hashCode, (, ), ;, }, public, String, toString, (, ), {, return]
[{, return, getName, (, ), ., hashCode, (, ), ;, }, public, String, toString, (, ), {, return, "UnsupportedDurationField[", +]
[), ., hashCode, (, ), ;, }, public, String, toString, (, ), {, return, "UnsupportedDurationField[", +, getName, (, ), +]
[(, ), {, return, "UnsupportedDurationField[", +, getName, (, ), +, ']', ;, }, private, Object, readResolve, (, ), {, return]
[{, return, "UnsupportedDurationField[", +, getName, (, ), +, ']', ;, }, private, Object, readResolve, (, ), {, return, getInstance, (]
[private, Object, readResolve, (, ), {, return, getInstance, (, iType, ), ;, }, private, UnsupportedOperationException, unsupported, (, ), {, return]
[(, ), {, return, getInstance, (, iType, ), ;, }, private, UnsupportedOperationException, unsupported, (, ), {, return, new, UnsupportedOperationException, (]
[(, ), {, return, getInstance, (, iType, ), ;, }, private, UnsupportedOperationException, unsupported, (, ), {, return, new, UnsupportedOperationException, (]
[{, return, getInstance, (, iType, ), ;, }, private, UnsupportedOperationException, unsupported, (, ), {, return, new, UnsupportedOperationException, (, iType, +]
