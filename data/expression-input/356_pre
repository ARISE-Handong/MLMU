[;, @, Deprecated, public, final, class, DateMidnight, extends, BaseDateTime, implements, ReadableDateTime, ,, Serializable, {, private, static, final, long, serialVersionUID, =]
[ReadableDateTime, ,, Serializable, {, private, static, final, long, serialVersionUID, =, 156371964018738L, ;, public, static, DateMidnight, now, (, ), {, return]
[), {, return, new, DateMidnight, (, ), ;, }, public, static, DateMidnight, now, (, DateTimeZone, zone, ), {, if, (]
[), {, return, new, DateMidnight, (, ), ;, }, public, static, DateMidnight, now, (, DateTimeZone, zone, ), {, if, (]
[return, new, DateMidnight, (, ), ;, }, public, static, DateMidnight, now, (, DateTimeZone, zone, ), {, if, (, zone, ==]
[), ;, }, public, static, DateMidnight, now, (, DateTimeZone, zone, ), {, if, (, zone, ==, null, ), {, throw]
[public, static, DateMidnight, now, (, DateTimeZone, zone, ), {, if, (, zone, ==, null, ), {, throw, new, NullPointerException, (]
[DateTimeZone, zone, ), {, if, (, zone, ==, null, ), {, throw, new, NullPointerException, (, "Zone must not be null", ), ;, }, return]
[{, if, (, zone, ==, null, ), {, throw, new, NullPointerException, (, "Zone must not be null", ), ;, }, return, new, DateMidnight, (]
[}, return, new, DateMidnight, (, zone, ), ;, }, public, static, DateMidnight, now, (, Chronology, chronology, ), {, if, (]
[}, return, new, DateMidnight, (, zone, ), ;, }, public, static, DateMidnight, now, (, Chronology, chronology, ), {, if, (]
[new, DateMidnight, (, zone, ), ;, }, public, static, DateMidnight, now, (, Chronology, chronology, ), {, if, (, chronology, ==]
[), ;, }, public, static, DateMidnight, now, (, Chronology, chronology, ), {, if, (, chronology, ==, null, ), {, throw]
[public, static, DateMidnight, now, (, Chronology, chronology, ), {, if, (, chronology, ==, null, ), {, throw, new, NullPointerException, (]
[Chronology, chronology, ), {, if, (, chronology, ==, null, ), {, throw, new, NullPointerException, (, "Chronology must not be null", ), ;, }, return]
[{, if, (, chronology, ==, null, ), {, throw, new, NullPointerException, (, "Chronology must not be null", ), ;, }, return, new, DateMidnight, (]
[return, new, DateMidnight, (, chronology, ), ;, }, @, FromString, public, static, DateMidnight, parse, (, String, str, ), {, return]
[DateMidnight, (, chronology, ), ;, }, @, FromString, public, static, DateMidnight, parse, (, String, str, ), {, return, parse, (]
[chronology, ), ;, }, @, FromString, public, static, DateMidnight, parse, (, String, str, ), {, return, parse, (, str, ,]
[chronology, ), ;, }, @, FromString, public, static, DateMidnight, parse, (, String, str, ), {, return, parse, (, str, ,]
[chronology, ), ;, }, @, FromString, public, static, DateMidnight, parse, (, String, str, ), {, return, parse, (, str, ,]
[., withOffsetParsed, (, ), ), ;, }, public, static, DateMidnight, parse, (, String, str, ,, DateTimeFormatter, formatter, ), {, return]
[., withOffsetParsed, (, ), ), ;, }, public, static, DateMidnight, parse, (, String, str, ,, DateTimeFormatter, formatter, ), {, return]
[., withOffsetParsed, (, ), ), ;, }, public, static, DateMidnight, parse, (, String, str, ,, DateTimeFormatter, formatter, ), {, return]
[), ;, }, public, static, DateMidnight, parse, (, String, str, ,, DateTimeFormatter, formatter, ), {, return, formatter, ., parseDateTime, (]
[}, public, DateMidnight, (, ), {, super, (, ), ;, }, public, DateMidnight, (, DateTimeZone, zone, ), {, super, (]
[(, DateTimeZone, zone, ), {, super, (, zone, ), ;, }, public, DateMidnight, (, Chronology, chronology, ), {, super, (]
[(, Chronology, chronology, ), {, super, (, chronology, ), ;, }, public, DateMidnight, (, long, instant, ), {, super, (]
[), {, super, (, instant, ), ;, }, public, DateMidnight, (, long, instant, ,, DateTimeZone, zone, ), {, super, (]
[super, (, instant, ), ;, }, public, DateMidnight, (, long, instant, ,, DateTimeZone, zone, ), {, super, (, instant, ,]
[super, (, instant, ,, zone, ), ;, }, public, DateMidnight, (, long, instant, ,, Chronology, chronology, ), {, super, (]
[instant, ,, zone, ), ;, }, public, DateMidnight, (, long, instant, ,, Chronology, chronology, ), {, super, (, instant, ,]
[chronology, ), {, super, (, instant, ,, chronology, ), ;, }, public, DateMidnight, (, Object, instant, ), {, super, (]
[{, super, (, instant, ,, chronology, ), ;, }, public, DateMidnight, (, Object, instant, ), {, super, (, instant, ,]
[instant, ,, chronology, ), ;, }, public, DateMidnight, (, Object, instant, ), {, super, (, instant, ,, (, Chronology, )]
[,, (, Chronology, ), null, ), ;, }, public, DateMidnight, (, Object, instant, ,, DateTimeZone, zone, ), {, super, (]
[Chronology, ), null, ), ;, }, public, DateMidnight, (, Object, instant, ,, DateTimeZone, zone, ), {, super, (, instant, ,]
[super, (, instant, ,, zone, ), ;, }, public, DateMidnight, (, Object, instant, ,, Chronology, chronology, ), {, super, (]
[instant, ,, zone, ), ;, }, public, DateMidnight, (, Object, instant, ,, Chronology, chronology, ), {, super, (, instant, ,]
[instant, ,, zone, ), ;, }, public, DateMidnight, (, Object, instant, ,, Chronology, chronology, ), {, super, (, instant, ,]
[;, }, public, DateMidnight, (, Object, instant, ,, Chronology, chronology, ), {, super, (, instant, ,, DateTimeUtils, ., getChronology, (]
[chronology, ), ), ;, }, public, DateMidnight, (, int, year, ,, int, monthOfYear, ,, int, dayOfMonth, ), {, super, (]
[), ;, }, public, DateMidnight, (, int, year, ,, int, monthOfYear, ,, int, dayOfMonth, ), {, super, (, year, ,]
[}, public, DateMidnight, (, int, year, ,, int, monthOfYear, ,, int, dayOfMonth, ), {, super, (, year, ,, monthOfYear, ,]
[DateMidnight, (, int, year, ,, int, monthOfYear, ,, int, dayOfMonth, ), {, super, (, year, ,, monthOfYear, ,, dayOfMonth, ,]
[int, year, ,, int, monthOfYear, ,, int, dayOfMonth, ), {, super, (, year, ,, monthOfYear, ,, dayOfMonth, ,, 0, ,]
[,, int, monthOfYear, ,, int, dayOfMonth, ), {, super, (, year, ,, monthOfYear, ,, dayOfMonth, ,, 0, ,, 0, ,]
[monthOfYear, ,, int, dayOfMonth, ), {, super, (, year, ,, monthOfYear, ,, dayOfMonth, ,, 0, ,, 0, ,, 0, ,]
[;, }, public, DateMidnight, (, int, year, ,, int, monthOfYear, ,, int, dayOfMonth, ,, DateTimeZone, zone, ), {, super, (]
[public, DateMidnight, (, int, year, ,, int, monthOfYear, ,, int, dayOfMonth, ,, DateTimeZone, zone, ), {, super, (, year, ,]
[(, int, year, ,, int, monthOfYear, ,, int, dayOfMonth, ,, DateTimeZone, zone, ), {, super, (, year, ,, monthOfYear, ,]
[year, ,, int, monthOfYear, ,, int, dayOfMonth, ,, DateTimeZone, zone, ), {, super, (, year, ,, monthOfYear, ,, dayOfMonth, ,]
[int, monthOfYear, ,, int, dayOfMonth, ,, DateTimeZone, zone, ), {, super, (, year, ,, monthOfYear, ,, dayOfMonth, ,, 0, ,]
[,, int, dayOfMonth, ,, DateTimeZone, zone, ), {, super, (, year, ,, monthOfYear, ,, dayOfMonth, ,, 0, ,, 0, ,]
[dayOfMonth, ,, DateTimeZone, zone, ), {, super, (, year, ,, monthOfYear, ,, dayOfMonth, ,, 0, ,, 0, ,, 0, ,]
[DateTimeZone, zone, ), {, super, (, year, ,, monthOfYear, ,, dayOfMonth, ,, 0, ,, 0, ,, 0, ,, 0, ,]
[;, }, public, DateMidnight, (, int, year, ,, int, monthOfYear, ,, int, dayOfMonth, ,, Chronology, chronology, ), {, super, (]
[public, DateMidnight, (, int, year, ,, int, monthOfYear, ,, int, dayOfMonth, ,, Chronology, chronology, ), {, super, (, year, ,]
[(, int, year, ,, int, monthOfYear, ,, int, dayOfMonth, ,, Chronology, chronology, ), {, super, (, year, ,, monthOfYear, ,]
[year, ,, int, monthOfYear, ,, int, dayOfMonth, ,, Chronology, chronology, ), {, super, (, year, ,, monthOfYear, ,, dayOfMonth, ,]
[int, monthOfYear, ,, int, dayOfMonth, ,, Chronology, chronology, ), {, super, (, year, ,, monthOfYear, ,, dayOfMonth, ,, 0, ,]
[,, int, dayOfMonth, ,, Chronology, chronology, ), {, super, (, year, ,, monthOfYear, ,, dayOfMonth, ,, 0, ,, 0, ,]
[dayOfMonth, ,, Chronology, chronology, ), {, super, (, year, ,, monthOfYear, ,, dayOfMonth, ,, 0, ,, 0, ,, 0, ,]
[Chronology, chronology, ), {, super, (, year, ,, monthOfYear, ,, dayOfMonth, ,, 0, ,, 0, ,, 0, ,, 0, ,]
[0, ,, 0, ,, chronology, ), ;, }, protected, long, checkInstant, (, long, instant, ,, Chronology, chronology, ), {, return]
[0, ,, 0, ,, chronology, ), ;, }, protected, long, checkInstant, (, long, instant, ,, Chronology, chronology, ), {, return]
[0, ,, 0, ,, chronology, ), ;, }, protected, long, checkInstant, (, long, instant, ,, Chronology, chronology, ), {, return]
[protected, long, checkInstant, (, long, instant, ,, Chronology, chronology, ), {, return, chronology, ., dayOfMonth, (, ), ., roundFloor, (]
[(, ), ., roundFloor, (, instant, ), ;, }, public, DateMidnight, withMillis, (, long, newMillis, ), {, Chronology, chrono, =]
[(, instant, ), ;, }, public, DateMidnight, withMillis, (, long, newMillis, ), {, Chronology, chrono, =, getChronology, (, ), ;]
[), ;, }, public, DateMidnight, withMillis, (, long, newMillis, ), {, Chronology, chrono, =, getChronology, (, ), ;, newMillis, =]
[}, public, DateMidnight, withMillis, (, long, newMillis, ), {, Chronology, chrono, =, getChronology, (, ), ;, newMillis, =, checkInstant, (]
[DateMidnight, withMillis, (, long, newMillis, ), {, Chronology, chrono, =, getChronology, (, ), ;, newMillis, =, checkInstant, (, newMillis, ,]
[newMillis, ), {, Chronology, chrono, =, getChronology, (, ), ;, newMillis, =, checkInstant, (, newMillis, ,, chrono, ), ;, return]
[), {, Chronology, chrono, =, getChronology, (, ), ;, newMillis, =, checkInstant, (, newMillis, ,, chrono, ), ;, return, (]
[), {, Chronology, chrono, =, getChronology, (, ), ;, newMillis, =, checkInstant, (, newMillis, ,, chrono, ), ;, return, (]
[), {, Chronology, chrono, =, getChronology, (, ), ;, newMillis, =, checkInstant, (, newMillis, ,, chrono, ), ;, return, (]
[Chronology, chrono, =, getChronology, (, ), ;, newMillis, =, checkInstant, (, newMillis, ,, chrono, ), ;, return, (, newMillis, ==]
[(, ), ;, newMillis, =, checkInstant, (, newMillis, ,, chrono, ), ;, return, (, newMillis, ==, getMillis, (, ), ?]
[;, newMillis, =, checkInstant, (, newMillis, ,, chrono, ), ;, return, (, newMillis, ==, getMillis, (, ), ?, this, :]
[checkInstant, (, newMillis, ,, chrono, ), ;, return, (, newMillis, ==, getMillis, (, ), ?, this, :, new, DateMidnight, (]
[newMillis, ,, chrono, ), ;, return, (, newMillis, ==, getMillis, (, ), ?, this, :, new, DateMidnight, (, newMillis, ,]
[:, new, DateMidnight, (, newMillis, ,, chrono, ), ), ;, }, public, DateMidnight, withChronology, (, Chronology, newChronology, ), {, return]
[new, DateMidnight, (, newMillis, ,, chrono, ), ), ;, }, public, DateMidnight, withChronology, (, Chronology, newChronology, ), {, return, (]
[new, DateMidnight, (, newMillis, ,, chrono, ), ), ;, }, public, DateMidnight, withChronology, (, Chronology, newChronology, ), {, return, (]
[new, DateMidnight, (, newMillis, ,, chrono, ), ), ;, }, public, DateMidnight, withChronology, (, Chronology, newChronology, ), {, return, (]
[(, newMillis, ,, chrono, ), ), ;, }, public, DateMidnight, withChronology, (, Chronology, newChronology, ), {, return, (, newChronology, ==]
[), ), ;, }, public, DateMidnight, withChronology, (, Chronology, newChronology, ), {, return, (, newChronology, ==, getChronology, (, ), ?]
[;, }, public, DateMidnight, withChronology, (, Chronology, newChronology, ), {, return, (, newChronology, ==, getChronology, (, ), ?, this, :]
[DateMidnight, withChronology, (, Chronology, newChronology, ), {, return, (, newChronology, ==, getChronology, (, ), ?, this, :, new, DateMidnight, (]
[newChronology, ), {, return, (, newChronology, ==, getChronology, (, ), ?, this, :, new, DateMidnight, (, getMillis, (, ), ,]
[new, DateMidnight, (, getMillis, (, ), ,, newChronology, ), ), ;, }, public, DateMidnight, withZoneRetainFields, (, DateTimeZone, newZone, ), {]
[(, getMillis, (, ), ,, newChronology, ), ), ;, }, public, DateMidnight, withZoneRetainFields, (, DateTimeZone, newZone, ), {, newZone, =]
[(, getMillis, (, ), ,, newChronology, ), ), ;, }, public, DateMidnight, withZoneRetainFields, (, DateTimeZone, newZone, ), {, newZone, =]
[,, newChronology, ), ), ;, }, public, DateMidnight, withZoneRetainFields, (, DateTimeZone, newZone, ), {, newZone, =, DateTimeUtils, ., getZone, (]
[public, DateMidnight, withZoneRetainFields, (, DateTimeZone, newZone, ), {, newZone, =, DateTimeUtils, ., getZone, (, newZone, ), ;, DateTimeZone, originalZone, =]
[public, DateMidnight, withZoneRetainFields, (, DateTimeZone, newZone, ), {, newZone, =, DateTimeUtils, ., getZone, (, newZone, ), ;, DateTimeZone, originalZone, =]
[DateTimeZone, newZone, ), {, newZone, =, DateTimeUtils, ., getZone, (, newZone, ), ;, DateTimeZone, originalZone, =, DateTimeUtils, ., getZone, (]
[., getZone, (, newZone, ), ;, DateTimeZone, originalZone, =, DateTimeUtils, ., getZone, (, getZone, (, ), ), ;, if, (]
[., getZone, (, newZone, ), ;, DateTimeZone, originalZone, =, DateTimeUtils, ., getZone, (, getZone, (, ), ), ;, if, (]
[(, newZone, ), ;, DateTimeZone, originalZone, =, DateTimeUtils, ., getZone, (, getZone, (, ), ), ;, if, (, newZone, ==]
[DateTimeZone, originalZone, =, DateTimeUtils, ., getZone, (, getZone, (, ), ), ;, if, (, newZone, ==, originalZone, ), {, return]
[(, getZone, (, ), ), ;, if, (, newZone, ==, originalZone, ), {, return, this, ;, }, long, millis, =]
[(, getZone, (, ), ), ;, if, (, newZone, ==, originalZone, ), {, return, this, ;, }, long, millis, =]
[), ;, if, (, newZone, ==, originalZone, ), {, return, this, ;, }, long, millis, =, originalZone, ., getMillisKeepLocal, (]
[if, (, newZone, ==, originalZone, ), {, return, this, ;, }, long, millis, =, originalZone, ., getMillisKeepLocal, (, newZone, ,]
[{, return, this, ;, }, long, millis, =, originalZone, ., getMillisKeepLocal, (, newZone, ,, getMillis, (, ), ), ;, return]
[;, }, long, millis, =, originalZone, ., getMillisKeepLocal, (, newZone, ,, getMillis, (, ), ), ;, return, new, DateMidnight, (]
[long, millis, =, originalZone, ., getMillisKeepLocal, (, newZone, ,, getMillis, (, ), ), ;, return, new, DateMidnight, (, millis, ,]
[long, millis, =, originalZone, ., getMillisKeepLocal, (, newZone, ,, getMillis, (, ), ), ;, return, new, DateMidnight, (, millis, ,]
[(, newZone, ,, getMillis, (, ), ), ;, return, new, DateMidnight, (, millis, ,, getChronology, (, ), ., withZone, (]
[(, ), ., withZone, (, newZone, ), ), ;, }, public, DateMidnight, withFields, (, ReadablePartial, partial, ), {, if, (]
[(, ), ., withZone, (, newZone, ), ), ;, }, public, DateMidnight, withFields, (, ReadablePartial, partial, ), {, if, (]
[., withZone, (, newZone, ), ), ;, }, public, DateMidnight, withFields, (, ReadablePartial, partial, ), {, if, (, partial, ==]
[), ), ;, }, public, DateMidnight, withFields, (, ReadablePartial, partial, ), {, if, (, partial, ==, null, ), {, return]
[public, DateMidnight, withFields, (, ReadablePartial, partial, ), {, if, (, partial, ==, null, ), {, return, this, ;, }, return]
[withFields, (, ReadablePartial, partial, ), {, if, (, partial, ==, null, ), {, return, this, ;, }, return, withMillis, (]
[withFields, (, ReadablePartial, partial, ), {, if, (, partial, ==, null, ), {, return, this, ;, }, return, withMillis, (]
[if, (, partial, ==, null, ), {, return, this, ;, }, return, withMillis, (, getChronology, (, ), ., set, (]
[partial, ==, null, ), {, return, this, ;, }, return, withMillis, (, getChronology, (, ), ., set, (, partial, ,]
[getMillis, (, ), ), ), ;, }, public, DateMidnight, withField, (, DateTimeFieldType, fieldType, ,, int, value, ), {, if, (]
[getMillis, (, ), ), ), ;, }, public, DateMidnight, withField, (, DateTimeFieldType, fieldType, ,, int, value, ), {, if, (]
[), ), ), ;, }, public, DateMidnight, withField, (, DateTimeFieldType, fieldType, ,, int, value, ), {, if, (, fieldType, ==]
[}, public, DateMidnight, withField, (, DateTimeFieldType, fieldType, ,, int, value, ), {, if, (, fieldType, ==, null, ), {, throw]
[withField, (, DateTimeFieldType, fieldType, ,, int, value, ), {, if, (, fieldType, ==, null, ), {, throw, new, IllegalArgumentException, (]
[), {, if, (, fieldType, ==, null, ), {, throw, new, IllegalArgumentException, (, "Field must not be null", ), ;, }, long, instant, =]
[), {, if, (, fieldType, ==, null, ), {, throw, new, IllegalArgumentException, (, "Field must not be null", ), ;, }, long, instant, =]
[), {, if, (, fieldType, ==, null, ), {, throw, new, IllegalArgumentException, (, "Field must not be null", ), ;, }, long, instant, =]
[fieldType, ==, null, ), {, throw, new, IllegalArgumentException, (, "Field must not be null", ), ;, }, long, instant, =, fieldType, ., getField, (]
[IllegalArgumentException, (, "Field must not be null", ), ;, }, long, instant, =, fieldType, ., getField, (, getChronology, (, ), ), ., set, (]
[;, }, long, instant, =, fieldType, ., getField, (, getChronology, (, ), ), ., set, (, getMillis, (, ), ,]
[=, fieldType, ., getField, (, getChronology, (, ), ), ., set, (, getMillis, (, ), ,, value, ), ;, return]
[., getField, (, getChronology, (, ), ), ., set, (, getMillis, (, ), ,, value, ), ;, return, withMillis, (]
[return, withMillis, (, instant, ), ;, }, public, DateMidnight, withFieldAdded, (, DurationFieldType, fieldType, ,, int, amount, ), {, if, (]
[return, withMillis, (, instant, ), ;, }, public, DateMidnight, withFieldAdded, (, DurationFieldType, fieldType, ,, int, amount, ), {, if, (]
[(, instant, ), ;, }, public, DateMidnight, withFieldAdded, (, DurationFieldType, fieldType, ,, int, amount, ), {, if, (, fieldType, ==]
[}, public, DateMidnight, withFieldAdded, (, DurationFieldType, fieldType, ,, int, amount, ), {, if, (, fieldType, ==, null, ), {, throw]
[withFieldAdded, (, DurationFieldType, fieldType, ,, int, amount, ), {, if, (, fieldType, ==, null, ), {, throw, new, IllegalArgumentException, (]
[amount, ), {, if, (, fieldType, ==, null, ), {, throw, new, IllegalArgumentException, (, "Field must not be null", ), ;, }, if, (]
[amount, ), {, if, (, fieldType, ==, null, ), {, throw, new, IllegalArgumentException, (, "Field must not be null", ), ;, }, if, (]
[{, if, (, fieldType, ==, null, ), {, throw, new, IllegalArgumentException, (, "Field must not be null", ), ;, }, if, (, amount, ==]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Field must not be null", ), ;, }, if, (, amount, ==, 0, ), {, return]
[IllegalArgumentException, (, "Field must not be null", ), ;, }, if, (, amount, ==, 0, ), {, return, this, ;, }, long, instant, =]
[IllegalArgumentException, (, "Field must not be null", ), ;, }, if, (, amount, ==, 0, ), {, return, this, ;, }, long, instant, =]
[IllegalArgumentException, (, "Field must not be null", ), ;, }, if, (, amount, ==, 0, ), {, return, this, ;, }, long, instant, =]
[;, }, if, (, amount, ==, 0, ), {, return, this, ;, }, long, instant, =, fieldType, ., getField, (]
[), {, return, this, ;, }, long, instant, =, fieldType, ., getField, (, getChronology, (, ), ), ., add, (]
[;, }, long, instant, =, fieldType, ., getField, (, getChronology, (, ), ), ., add, (, getMillis, (, ), ,]
[=, fieldType, ., getField, (, getChronology, (, ), ), ., add, (, getMillis, (, ), ,, amount, ), ;, return]
[., getField, (, getChronology, (, ), ), ., add, (, getMillis, (, ), ,, amount, ), ;, return, withMillis, (]
[return, withMillis, (, instant, ), ;, }, public, DateMidnight, withDurationAdded, (, long, durationToAdd, ,, int, scalar, ), {, if, (]
[return, withMillis, (, instant, ), ;, }, public, DateMidnight, withDurationAdded, (, long, durationToAdd, ,, int, scalar, ), {, if, (]
[return, withMillis, (, instant, ), ;, }, public, DateMidnight, withDurationAdded, (, long, durationToAdd, ,, int, scalar, ), {, if, (]
[(, instant, ), ;, }, public, DateMidnight, withDurationAdded, (, long, durationToAdd, ,, int, scalar, ), {, if, (, durationToAdd, ==]
[), ;, }, public, DateMidnight, withDurationAdded, (, long, durationToAdd, ,, int, scalar, ), {, if, (, durationToAdd, ==, 0, ||]
[), ;, }, public, DateMidnight, withDurationAdded, (, long, durationToAdd, ,, int, scalar, ), {, if, (, durationToAdd, ==, 0, ||]
[}, public, DateMidnight, withDurationAdded, (, long, durationToAdd, ,, int, scalar, ), {, if, (, durationToAdd, ==, 0, ||, scalar, ==]
[(, long, durationToAdd, ,, int, scalar, ), {, if, (, durationToAdd, ==, 0, ||, scalar, ==, 0, ), {, return]
[), {, if, (, durationToAdd, ==, 0, ||, scalar, ==, 0, ), {, return, this, ;, }, long, instant, =]
[), {, if, (, durationToAdd, ==, 0, ||, scalar, ==, 0, ), {, return, this, ;, }, long, instant, =]
[0, ||, scalar, ==, 0, ), {, return, this, ;, }, long, instant, =, getChronology, (, ), ., add, (]
[0, ), {, return, this, ;, }, long, instant, =, getChronology, (, ), ., add, (, getMillis, (, ), ,]
[{, return, this, ;, }, long, instant, =, getChronology, (, ), ., add, (, getMillis, (, ), ,, durationToAdd, ,]
[}, long, instant, =, getChronology, (, ), ., add, (, getMillis, (, ), ,, durationToAdd, ,, scalar, ), ;, return]
[instant, =, getChronology, (, ), ., add, (, getMillis, (, ), ,, durationToAdd, ,, scalar, ), ;, return, withMillis, (]
[return, withMillis, (, instant, ), ;, }, public, DateMidnight, withDurationAdded, (, ReadableDuration, durationToAdd, ,, int, scalar, ), {, if, (]
[return, withMillis, (, instant, ), ;, }, public, DateMidnight, withDurationAdded, (, ReadableDuration, durationToAdd, ,, int, scalar, ), {, if, (]
[return, withMillis, (, instant, ), ;, }, public, DateMidnight, withDurationAdded, (, ReadableDuration, durationToAdd, ,, int, scalar, ), {, if, (]
[(, instant, ), ;, }, public, DateMidnight, withDurationAdded, (, ReadableDuration, durationToAdd, ,, int, scalar, ), {, if, (, durationToAdd, ==]
[), ;, }, public, DateMidnight, withDurationAdded, (, ReadableDuration, durationToAdd, ,, int, scalar, ), {, if, (, durationToAdd, ==, null, ||]
[), ;, }, public, DateMidnight, withDurationAdded, (, ReadableDuration, durationToAdd, ,, int, scalar, ), {, if, (, durationToAdd, ==, null, ||]
[}, public, DateMidnight, withDurationAdded, (, ReadableDuration, durationToAdd, ,, int, scalar, ), {, if, (, durationToAdd, ==, null, ||, scalar, ==]
[(, ReadableDuration, durationToAdd, ,, int, scalar, ), {, if, (, durationToAdd, ==, null, ||, scalar, ==, 0, ), {, return]
[int, scalar, ), {, if, (, durationToAdd, ==, null, ||, scalar, ==, 0, ), {, return, this, ;, }, return]
[), {, if, (, durationToAdd, ==, null, ||, scalar, ==, 0, ), {, return, this, ;, }, return, withDurationAdded, (]
[), {, if, (, durationToAdd, ==, null, ||, scalar, ==, 0, ), {, return, this, ;, }, return, withDurationAdded, (]
[null, ||, scalar, ==, 0, ), {, return, this, ;, }, return, withDurationAdded, (, durationToAdd, ., getMillis, (, ), ,]
[(, ), ,, scalar, ), ;, }, public, DateMidnight, withPeriodAdded, (, ReadablePeriod, period, ,, int, scalar, ), {, if, (]
[(, ), ,, scalar, ), ;, }, public, DateMidnight, withPeriodAdded, (, ReadablePeriod, period, ,, int, scalar, ), {, if, (]
[(, ), ,, scalar, ), ;, }, public, DateMidnight, withPeriodAdded, (, ReadablePeriod, period, ,, int, scalar, ), {, if, (]
[,, scalar, ), ;, }, public, DateMidnight, withPeriodAdded, (, ReadablePeriod, period, ,, int, scalar, ), {, if, (, period, ==]
[), ;, }, public, DateMidnight, withPeriodAdded, (, ReadablePeriod, period, ,, int, scalar, ), {, if, (, period, ==, null, ||]
[), ;, }, public, DateMidnight, withPeriodAdded, (, ReadablePeriod, period, ,, int, scalar, ), {, if, (, period, ==, null, ||]
[}, public, DateMidnight, withPeriodAdded, (, ReadablePeriod, period, ,, int, scalar, ), {, if, (, period, ==, null, ||, scalar, ==]
[(, ReadablePeriod, period, ,, int, scalar, ), {, if, (, period, ==, null, ||, scalar, ==, 0, ), {, return]
[), {, if, (, period, ==, null, ||, scalar, ==, 0, ), {, return, this, ;, }, long, instant, =]
[), {, if, (, period, ==, null, ||, scalar, ==, 0, ), {, return, this, ;, }, long, instant, =]
[null, ||, scalar, ==, 0, ), {, return, this, ;, }, long, instant, =, getChronology, (, ), ., add, (]
[scalar, ==, 0, ), {, return, this, ;, }, long, instant, =, getChronology, (, ), ., add, (, period, ,]
[{, return, this, ;, }, long, instant, =, getChronology, (, ), ., add, (, period, ,, getMillis, (, ), ,]
[}, long, instant, =, getChronology, (, ), ., add, (, period, ,, getMillis, (, ), ,, scalar, ), ;, return]
[instant, =, getChronology, (, ), ., add, (, period, ,, getMillis, (, ), ,, scalar, ), ;, return, withMillis, (]
[,, scalar, ), ;, return, withMillis, (, instant, ), ;, }, public, DateMidnight, plus, (, long, duration, ), {, return]
[), ;, return, withMillis, (, instant, ), ;, }, public, DateMidnight, plus, (, long, duration, ), {, return, withDurationAdded, (]
[return, withMillis, (, instant, ), ;, }, public, DateMidnight, plus, (, long, duration, ), {, return, withDurationAdded, (, duration, ,]
[), {, return, withDurationAdded, (, duration, ,, 1, ), ;, }, public, DateMidnight, plus, (, ReadableDuration, duration, ), {, return]
[return, withDurationAdded, (, duration, ,, 1, ), ;, }, public, DateMidnight, plus, (, ReadableDuration, duration, ), {, return, withDurationAdded, (]
[(, duration, ,, 1, ), ;, }, public, DateMidnight, plus, (, ReadableDuration, duration, ), {, return, withDurationAdded, (, duration, ,]
[), {, return, withDurationAdded, (, duration, ,, 1, ), ;, }, public, DateMidnight, plus, (, ReadablePeriod, period, ), {, return]
[return, withDurationAdded, (, duration, ,, 1, ), ;, }, public, DateMidnight, plus, (, ReadablePeriod, period, ), {, return, withPeriodAdded, (]
[(, duration, ,, 1, ), ;, }, public, DateMidnight, plus, (, ReadablePeriod, period, ), {, return, withPeriodAdded, (, period, ,]
[{, return, withPeriodAdded, (, period, ,, 1, ), ;, }, public, DateMidnight, plusYears, (, int, years, ), {, if, (]
[{, return, withPeriodAdded, (, period, ,, 1, ), ;, }, public, DateMidnight, plusYears, (, int, years, ), {, if, (]
[withPeriodAdded, (, period, ,, 1, ), ;, }, public, DateMidnight, plusYears, (, int, years, ), {, if, (, years, ==]
[1, ), ;, }, public, DateMidnight, plusYears, (, int, years, ), {, if, (, years, ==, 0, ), {, return]
[plusYears, (, int, years, ), {, if, (, years, ==, 0, ), {, return, this, ;, }, long, instant, =]
[plusYears, (, int, years, ), {, if, (, years, ==, 0, ), {, return, this, ;, }, long, instant, =]
[plusYears, (, int, years, ), {, if, (, years, ==, 0, ), {, return, this, ;, }, long, instant, =]
[0, ), {, return, this, ;, }, long, instant, =, getChronology, (, ), ., years, (, ), ., add, (]
[this, ;, }, long, instant, =, getChronology, (, ), ., years, (, ), ., add, (, getMillis, (, ), ,]
[instant, =, getChronology, (, ), ., years, (, ), ., add, (, getMillis, (, ), ,, years, ), ;, return]
[getChronology, (, ), ., years, (, ), ., add, (, getMillis, (, ), ,, years, ), ;, return, withMillis, (]
[years, ), ;, return, withMillis, (, instant, ), ;, }, public, DateMidnight, plusMonths, (, int, months, ), {, if, (]
[years, ), ;, return, withMillis, (, instant, ), ;, }, public, DateMidnight, plusMonths, (, int, months, ), {, if, (]
[;, return, withMillis, (, instant, ), ;, }, public, DateMidnight, plusMonths, (, int, months, ), {, if, (, months, ==]
[instant, ), ;, }, public, DateMidnight, plusMonths, (, int, months, ), {, if, (, months, ==, 0, ), {, return]
[plusMonths, (, int, months, ), {, if, (, months, ==, 0, ), {, return, this, ;, }, long, instant, =]
[plusMonths, (, int, months, ), {, if, (, months, ==, 0, ), {, return, this, ;, }, long, instant, =]
[plusMonths, (, int, months, ), {, if, (, months, ==, 0, ), {, return, this, ;, }, long, instant, =]
[0, ), {, return, this, ;, }, long, instant, =, getChronology, (, ), ., months, (, ), ., add, (]
[this, ;, }, long, instant, =, getChronology, (, ), ., months, (, ), ., add, (, getMillis, (, ), ,]
[instant, =, getChronology, (, ), ., months, (, ), ., add, (, getMillis, (, ), ,, months, ), ;, return]
[getChronology, (, ), ., months, (, ), ., add, (, getMillis, (, ), ,, months, ), ;, return, withMillis, (]
[months, ), ;, return, withMillis, (, instant, ), ;, }, public, DateMidnight, plusWeeks, (, int, weeks, ), {, if, (]
[months, ), ;, return, withMillis, (, instant, ), ;, }, public, DateMidnight, plusWeeks, (, int, weeks, ), {, if, (]
[;, return, withMillis, (, instant, ), ;, }, public, DateMidnight, plusWeeks, (, int, weeks, ), {, if, (, weeks, ==]
[instant, ), ;, }, public, DateMidnight, plusWeeks, (, int, weeks, ), {, if, (, weeks, ==, 0, ), {, return]
[plusWeeks, (, int, weeks, ), {, if, (, weeks, ==, 0, ), {, return, this, ;, }, long, instant, =]
[plusWeeks, (, int, weeks, ), {, if, (, weeks, ==, 0, ), {, return, this, ;, }, long, instant, =]
[plusWeeks, (, int, weeks, ), {, if, (, weeks, ==, 0, ), {, return, this, ;, }, long, instant, =]
[0, ), {, return, this, ;, }, long, instant, =, getChronology, (, ), ., weeks, (, ), ., add, (]
[this, ;, }, long, instant, =, getChronology, (, ), ., weeks, (, ), ., add, (, getMillis, (, ), ,]
[instant, =, getChronology, (, ), ., weeks, (, ), ., add, (, getMillis, (, ), ,, weeks, ), ;, return]
[getChronology, (, ), ., weeks, (, ), ., add, (, getMillis, (, ), ,, weeks, ), ;, return, withMillis, (]
[weeks, ), ;, return, withMillis, (, instant, ), ;, }, public, DateMidnight, plusDays, (, int, days, ), {, if, (]
[weeks, ), ;, return, withMillis, (, instant, ), ;, }, public, DateMidnight, plusDays, (, int, days, ), {, if, (]
[;, return, withMillis, (, instant, ), ;, }, public, DateMidnight, plusDays, (, int, days, ), {, if, (, days, ==]
[instant, ), ;, }, public, DateMidnight, plusDays, (, int, days, ), {, if, (, days, ==, 0, ), {, return]
[plusDays, (, int, days, ), {, if, (, days, ==, 0, ), {, return, this, ;, }, long, instant, =]
[plusDays, (, int, days, ), {, if, (, days, ==, 0, ), {, return, this, ;, }, long, instant, =]
[plusDays, (, int, days, ), {, if, (, days, ==, 0, ), {, return, this, ;, }, long, instant, =]
[0, ), {, return, this, ;, }, long, instant, =, getChronology, (, ), ., days, (, ), ., add, (]
[this, ;, }, long, instant, =, getChronology, (, ), ., days, (, ), ., add, (, getMillis, (, ), ,]
[instant, =, getChronology, (, ), ., days, (, ), ., add, (, getMillis, (, ), ,, days, ), ;, return]
[getChronology, (, ), ., days, (, ), ., add, (, getMillis, (, ), ,, days, ), ;, return, withMillis, (]
[,, days, ), ;, return, withMillis, (, instant, ), ;, }, public, DateMidnight, minus, (, long, duration, ), {, return]
[), ;, return, withMillis, (, instant, ), ;, }, public, DateMidnight, minus, (, long, duration, ), {, return, withDurationAdded, (]
[return, withMillis, (, instant, ), ;, }, public, DateMidnight, minus, (, long, duration, ), {, return, withDurationAdded, (, duration, ,]
[withMillis, (, instant, ), ;, }, public, DateMidnight, minus, (, long, duration, ), {, return, withDurationAdded, (, duration, ,, -]
[{, return, withDurationAdded, (, duration, ,, -, 1, ), ;, }, public, DateMidnight, minus, (, ReadableDuration, duration, ), {, return]
[withDurationAdded, (, duration, ,, -, 1, ), ;, }, public, DateMidnight, minus, (, ReadableDuration, duration, ), {, return, withDurationAdded, (]
[duration, ,, -, 1, ), ;, }, public, DateMidnight, minus, (, ReadableDuration, duration, ), {, return, withDurationAdded, (, duration, ,]
[,, -, 1, ), ;, }, public, DateMidnight, minus, (, ReadableDuration, duration, ), {, return, withDurationAdded, (, duration, ,, -]
[{, return, withDurationAdded, (, duration, ,, -, 1, ), ;, }, public, DateMidnight, minus, (, ReadablePeriod, period, ), {, return]
[withDurationAdded, (, duration, ,, -, 1, ), ;, }, public, DateMidnight, minus, (, ReadablePeriod, period, ), {, return, withPeriodAdded, (]
[duration, ,, -, 1, ), ;, }, public, DateMidnight, minus, (, ReadablePeriod, period, ), {, return, withPeriodAdded, (, period, ,]
[,, -, 1, ), ;, }, public, DateMidnight, minus, (, ReadablePeriod, period, ), {, return, withPeriodAdded, (, period, ,, -]
[return, withPeriodAdded, (, period, ,, -, 1, ), ;, }, public, DateMidnight, minusYears, (, int, years, ), {, if, (]
[return, withPeriodAdded, (, period, ,, -, 1, ), ;, }, public, DateMidnight, minusYears, (, int, years, ), {, if, (]
[(, period, ,, -, 1, ), ;, }, public, DateMidnight, minusYears, (, int, years, ), {, if, (, years, ==]
[1, ), ;, }, public, DateMidnight, minusYears, (, int, years, ), {, if, (, years, ==, 0, ), {, return]
[minusYears, (, int, years, ), {, if, (, years, ==, 0, ), {, return, this, ;, }, long, instant, =]
[minusYears, (, int, years, ), {, if, (, years, ==, 0, ), {, return, this, ;, }, long, instant, =]
[minusYears, (, int, years, ), {, if, (, years, ==, 0, ), {, return, this, ;, }, long, instant, =]
[0, ), {, return, this, ;, }, long, instant, =, getChronology, (, ), ., years, (, ), ., subtract, (]
[this, ;, }, long, instant, =, getChronology, (, ), ., years, (, ), ., subtract, (, getMillis, (, ), ,]
[instant, =, getChronology, (, ), ., years, (, ), ., subtract, (, getMillis, (, ), ,, years, ), ;, return]
[getChronology, (, ), ., years, (, ), ., subtract, (, getMillis, (, ), ,, years, ), ;, return, withMillis, (]
[years, ), ;, return, withMillis, (, instant, ), ;, }, public, DateMidnight, minusMonths, (, int, months, ), {, if, (]
[years, ), ;, return, withMillis, (, instant, ), ;, }, public, DateMidnight, minusMonths, (, int, months, ), {, if, (]
[;, return, withMillis, (, instant, ), ;, }, public, DateMidnight, minusMonths, (, int, months, ), {, if, (, months, ==]
[instant, ), ;, }, public, DateMidnight, minusMonths, (, int, months, ), {, if, (, months, ==, 0, ), {, return]
[minusMonths, (, int, months, ), {, if, (, months, ==, 0, ), {, return, this, ;, }, long, instant, =]
[minusMonths, (, int, months, ), {, if, (, months, ==, 0, ), {, return, this, ;, }, long, instant, =]
[minusMonths, (, int, months, ), {, if, (, months, ==, 0, ), {, return, this, ;, }, long, instant, =]
[0, ), {, return, this, ;, }, long, instant, =, getChronology, (, ), ., months, (, ), ., subtract, (]
[this, ;, }, long, instant, =, getChronology, (, ), ., months, (, ), ., subtract, (, getMillis, (, ), ,]
[instant, =, getChronology, (, ), ., months, (, ), ., subtract, (, getMillis, (, ), ,, months, ), ;, return]
[getChronology, (, ), ., months, (, ), ., subtract, (, getMillis, (, ), ,, months, ), ;, return, withMillis, (]
[months, ), ;, return, withMillis, (, instant, ), ;, }, public, DateMidnight, minusWeeks, (, int, weeks, ), {, if, (]
[months, ), ;, return, withMillis, (, instant, ), ;, }, public, DateMidnight, minusWeeks, (, int, weeks, ), {, if, (]
[;, return, withMillis, (, instant, ), ;, }, public, DateMidnight, minusWeeks, (, int, weeks, ), {, if, (, weeks, ==]
[instant, ), ;, }, public, DateMidnight, minusWeeks, (, int, weeks, ), {, if, (, weeks, ==, 0, ), {, return]
[minusWeeks, (, int, weeks, ), {, if, (, weeks, ==, 0, ), {, return, this, ;, }, long, instant, =]
[minusWeeks, (, int, weeks, ), {, if, (, weeks, ==, 0, ), {, return, this, ;, }, long, instant, =]
[minusWeeks, (, int, weeks, ), {, if, (, weeks, ==, 0, ), {, return, this, ;, }, long, instant, =]
[0, ), {, return, this, ;, }, long, instant, =, getChronology, (, ), ., weeks, (, ), ., subtract, (]
[this, ;, }, long, instant, =, getChronology, (, ), ., weeks, (, ), ., subtract, (, getMillis, (, ), ,]
[instant, =, getChronology, (, ), ., weeks, (, ), ., subtract, (, getMillis, (, ), ,, weeks, ), ;, return]
[getChronology, (, ), ., weeks, (, ), ., subtract, (, getMillis, (, ), ,, weeks, ), ;, return, withMillis, (]
[weeks, ), ;, return, withMillis, (, instant, ), ;, }, public, DateMidnight, minusDays, (, int, days, ), {, if, (]
[weeks, ), ;, return, withMillis, (, instant, ), ;, }, public, DateMidnight, minusDays, (, int, days, ), {, if, (]
[;, return, withMillis, (, instant, ), ;, }, public, DateMidnight, minusDays, (, int, days, ), {, if, (, days, ==]
[instant, ), ;, }, public, DateMidnight, minusDays, (, int, days, ), {, if, (, days, ==, 0, ), {, return]
[minusDays, (, int, days, ), {, if, (, days, ==, 0, ), {, return, this, ;, }, long, instant, =]
[minusDays, (, int, days, ), {, if, (, days, ==, 0, ), {, return, this, ;, }, long, instant, =]
[minusDays, (, int, days, ), {, if, (, days, ==, 0, ), {, return, this, ;, }, long, instant, =]
[0, ), {, return, this, ;, }, long, instant, =, getChronology, (, ), ., days, (, ), ., subtract, (]
[this, ;, }, long, instant, =, getChronology, (, ), ., days, (, ), ., subtract, (, getMillis, (, ), ,]
[instant, =, getChronology, (, ), ., days, (, ), ., subtract, (, getMillis, (, ), ,, days, ), ;, return]
[getChronology, (, ), ., days, (, ), ., subtract, (, getMillis, (, ), ,, days, ), ;, return, withMillis, (]
[days, ), ;, return, withMillis, (, instant, ), ;, }, public, Property, property, (, DateTimeFieldType, type, ), {, if, (]
[days, ), ;, return, withMillis, (, instant, ), ;, }, public, Property, property, (, DateTimeFieldType, type, ), {, if, (]
[;, return, withMillis, (, instant, ), ;, }, public, Property, property, (, DateTimeFieldType, type, ), {, if, (, type, ==]
[instant, ), ;, }, public, Property, property, (, DateTimeFieldType, type, ), {, if, (, type, ==, null, ), {, throw]
[}, public, Property, property, (, DateTimeFieldType, type, ), {, if, (, type, ==, null, ), {, throw, new, IllegalArgumentException, (]
[), {, if, (, type, ==, null, ), {, throw, new, IllegalArgumentException, (, "The DateTimeFieldType must not be null", ), ;, }, DateTimeField, field, =]
[), {, if, (, type, ==, null, ), {, throw, new, IllegalArgumentException, (, "The DateTimeFieldType must not be null", ), ;, }, DateTimeField, field, =]
[type, ==, null, ), {, throw, new, IllegalArgumentException, (, "The DateTimeFieldType must not be null", ), ;, }, DateTimeField, field, =, type, ., getField, (]
[IllegalArgumentException, (, "The DateTimeFieldType must not be null", ), ;, }, DateTimeField, field, =, type, ., getField, (, getChronology, (, ), ), ;, if, (]
[IllegalArgumentException, (, "The DateTimeFieldType must not be null", ), ;, }, DateTimeField, field, =, type, ., getField, (, getChronology, (, ), ), ;, if, (]
[IllegalArgumentException, (, "The DateTimeFieldType must not be null", ), ;, }, DateTimeField, field, =, type, ., getField, (, getChronology, (, ), ), ;, if, (]
[DateTimeField, field, =, type, ., getField, (, getChronology, (, ), ), ;, if, (, field, ., isSupported, (, ), ==]
[., getField, (, getChronology, (, ), ), ;, if, (, field, ., isSupported, (, ), ==, false, ), {, throw]
[getChronology, (, ), ), ;, if, (, field, ., isSupported, (, ), ==, false, ), {, throw, new, IllegalArgumentException, (]
[getChronology, (, ), ), ;, if, (, field, ., isSupported, (, ), ==, false, ), {, throw, new, IllegalArgumentException, (]
[getChronology, (, ), ), ;, if, (, field, ., isSupported, (, ), ==, false, ), {, throw, new, IllegalArgumentException, (]
[), ), ;, if, (, field, ., isSupported, (, ), ==, false, ), {, throw, new, IllegalArgumentException, (, "Field '", +]
[;, if, (, field, ., isSupported, (, ), ==, false, ), {, throw, new, IllegalArgumentException, (, "Field '", +, type, +]
[isSupported, (, ), ==, false, ), {, throw, new, IllegalArgumentException, (, "Field '", +, type, +, "' is not supported", ), ;, }, return]
[==, false, ), {, throw, new, IllegalArgumentException, (, "Field '", +, type, +, "' is not supported", ), ;, }, return, new, Property, (]
[), {, throw, new, IllegalArgumentException, (, "Field '", +, type, +, "' is not supported", ), ;, }, return, new, Property, (, this, ,]
[}, return, new, Property, (, this, ,, field, ), ;, }, @, Deprecated, public, YearMonthDay, toYearMonthDay, (, ), {, return]
[Property, (, this, ,, field, ), ;, }, @, Deprecated, public, YearMonthDay, toYearMonthDay, (, ), {, return, new, YearMonthDay, (]
[field, ), ;, }, @, Deprecated, public, YearMonthDay, toYearMonthDay, (, ), {, return, new, YearMonthDay, (, getMillis, (, ), ,]
[new, YearMonthDay, (, getMillis, (, ), ,, getChronology, (, ), ), ;, }, public, LocalDate, toLocalDate, (, ), {, return]
[getMillis, (, ), ,, getChronology, (, ), ), ;, }, public, LocalDate, toLocalDate, (, ), {, return, new, LocalDate, (]
[getChronology, (, ), ), ;, }, public, LocalDate, toLocalDate, (, ), {, return, new, LocalDate, (, getMillis, (, ), ,]
[(, getMillis, (, ), ,, getChronology, (, ), ), ;, }, public, Interval, toInterval, (, ), {, Chronology, chrono, =]
[), ), ;, }, public, Interval, toInterval, (, ), {, Chronology, chrono, =, getChronology, (, ), ;, long, start, =]
[(, ), {, Chronology, chrono, =, getChronology, (, ), ;, long, start, =, getMillis, (, ), ;, long, end, =]
[(, ), {, Chronology, chrono, =, getChronology, (, ), ;, long, start, =, getMillis, (, ), ;, long, end, =]
[(, ), {, Chronology, chrono, =, getChronology, (, ), ;, long, start, =, getMillis, (, ), ;, long, end, =]
[(, ), {, Chronology, chrono, =, getChronology, (, ), ;, long, start, =, getMillis, (, ), ;, long, end, =]
[), ;, long, start, =, getMillis, (, ), ;, long, end, =, DurationFieldType, ., days, (, ), ., getField, (]
[getMillis, (, ), ;, long, end, =, DurationFieldType, ., days, (, ), ., getField, (, chrono, ), ., add, (]
[), ;, long, end, =, DurationFieldType, ., days, (, ), ., getField, (, chrono, ), ., add, (, start, ,]
[=, DurationFieldType, ., days, (, ), ., getField, (, chrono, ), ., add, (, start, ,, 1, ), ;, return]
[days, (, ), ., getField, (, chrono, ), ., add, (, start, ,, 1, ), ;, return, new, Interval, (]
[), ., getField, (, chrono, ), ., add, (, start, ,, 1, ), ;, return, new, Interval, (, start, ,]
[getField, (, chrono, ), ., add, (, start, ,, 1, ), ;, return, new, Interval, (, start, ,, end, ,]
[new, Interval, (, start, ,, end, ,, chrono, ), ;, }, public, DateMidnight, withEra, (, int, era, ), {, return]
[(, start, ,, end, ,, chrono, ), ;, }, public, DateMidnight, withEra, (, int, era, ), {, return, withMillis, (]
[(, start, ,, end, ,, chrono, ), ;, }, public, DateMidnight, withEra, (, int, era, ), {, return, withMillis, (]
[(, start, ,, end, ,, chrono, ), ;, }, public, DateMidnight, withEra, (, int, era, ), {, return, withMillis, (]
[DateMidnight, withEra, (, int, era, ), {, return, withMillis, (, getChronology, (, ), ., era, (, ), ., set, (]
[era, ), {, return, withMillis, (, getChronology, (, ), ., era, (, ), ., set, (, getMillis, (, ), ,]
[set, (, getMillis, (, ), ,, era, ), ), ;, }, public, DateMidnight, withCenturyOfEra, (, int, centuryOfEra, ), {, return]
[getMillis, (, ), ,, era, ), ), ;, }, public, DateMidnight, withCenturyOfEra, (, int, centuryOfEra, ), {, return, withMillis, (]
[getMillis, (, ), ,, era, ), ), ;, }, public, DateMidnight, withCenturyOfEra, (, int, centuryOfEra, ), {, return, withMillis, (]
[getMillis, (, ), ,, era, ), ), ;, }, public, DateMidnight, withCenturyOfEra, (, int, centuryOfEra, ), {, return, withMillis, (]
[DateMidnight, withCenturyOfEra, (, int, centuryOfEra, ), {, return, withMillis, (, getChronology, (, ), ., centuryOfEra, (, ), ., set, (]
[centuryOfEra, ), {, return, withMillis, (, getChronology, (, ), ., centuryOfEra, (, ), ., set, (, getMillis, (, ), ,]
[set, (, getMillis, (, ), ,, centuryOfEra, ), ), ;, }, public, DateMidnight, withYearOfEra, (, int, yearOfEra, ), {, return]
[getMillis, (, ), ,, centuryOfEra, ), ), ;, }, public, DateMidnight, withYearOfEra, (, int, yearOfEra, ), {, return, withMillis, (]
[getMillis, (, ), ,, centuryOfEra, ), ), ;, }, public, DateMidnight, withYearOfEra, (, int, yearOfEra, ), {, return, withMillis, (]
[getMillis, (, ), ,, centuryOfEra, ), ), ;, }, public, DateMidnight, withYearOfEra, (, int, yearOfEra, ), {, return, withMillis, (]
[DateMidnight, withYearOfEra, (, int, yearOfEra, ), {, return, withMillis, (, getChronology, (, ), ., yearOfEra, (, ), ., set, (]
[yearOfEra, ), {, return, withMillis, (, getChronology, (, ), ., yearOfEra, (, ), ., set, (, getMillis, (, ), ,]
[set, (, getMillis, (, ), ,, yearOfEra, ), ), ;, }, public, DateMidnight, withYearOfCentury, (, int, yearOfCentury, ), {, return]
[getMillis, (, ), ,, yearOfEra, ), ), ;, }, public, DateMidnight, withYearOfCentury, (, int, yearOfCentury, ), {, return, withMillis, (]
[getMillis, (, ), ,, yearOfEra, ), ), ;, }, public, DateMidnight, withYearOfCentury, (, int, yearOfCentury, ), {, return, withMillis, (]
[getMillis, (, ), ,, yearOfEra, ), ), ;, }, public, DateMidnight, withYearOfCentury, (, int, yearOfCentury, ), {, return, withMillis, (]
[DateMidnight, withYearOfCentury, (, int, yearOfCentury, ), {, return, withMillis, (, getChronology, (, ), ., yearOfCentury, (, ), ., set, (]
[yearOfCentury, ), {, return, withMillis, (, getChronology, (, ), ., yearOfCentury, (, ), ., set, (, getMillis, (, ), ,]
[set, (, getMillis, (, ), ,, yearOfCentury, ), ), ;, }, public, DateMidnight, withYear, (, int, year, ), {, return]
[getMillis, (, ), ,, yearOfCentury, ), ), ;, }, public, DateMidnight, withYear, (, int, year, ), {, return, withMillis, (]
[getMillis, (, ), ,, yearOfCentury, ), ), ;, }, public, DateMidnight, withYear, (, int, year, ), {, return, withMillis, (]
[getMillis, (, ), ,, yearOfCentury, ), ), ;, }, public, DateMidnight, withYear, (, int, year, ), {, return, withMillis, (]
[DateMidnight, withYear, (, int, year, ), {, return, withMillis, (, getChronology, (, ), ., year, (, ), ., set, (]
[year, ), {, return, withMillis, (, getChronology, (, ), ., year, (, ), ., set, (, getMillis, (, ), ,]
[set, (, getMillis, (, ), ,, year, ), ), ;, }, public, DateMidnight, withWeekyear, (, int, weekyear, ), {, return]
[getMillis, (, ), ,, year, ), ), ;, }, public, DateMidnight, withWeekyear, (, int, weekyear, ), {, return, withMillis, (]
[getMillis, (, ), ,, year, ), ), ;, }, public, DateMidnight, withWeekyear, (, int, weekyear, ), {, return, withMillis, (]
[getMillis, (, ), ,, year, ), ), ;, }, public, DateMidnight, withWeekyear, (, int, weekyear, ), {, return, withMillis, (]
[DateMidnight, withWeekyear, (, int, weekyear, ), {, return, withMillis, (, getChronology, (, ), ., weekyear, (, ), ., set, (]
[weekyear, ), {, return, withMillis, (, getChronology, (, ), ., weekyear, (, ), ., set, (, getMillis, (, ), ,]
[set, (, getMillis, (, ), ,, weekyear, ), ), ;, }, public, DateMidnight, withMonthOfYear, (, int, monthOfYear, ), {, return]
[getMillis, (, ), ,, weekyear, ), ), ;, }, public, DateMidnight, withMonthOfYear, (, int, monthOfYear, ), {, return, withMillis, (]
[getMillis, (, ), ,, weekyear, ), ), ;, }, public, DateMidnight, withMonthOfYear, (, int, monthOfYear, ), {, return, withMillis, (]
[getMillis, (, ), ,, weekyear, ), ), ;, }, public, DateMidnight, withMonthOfYear, (, int, monthOfYear, ), {, return, withMillis, (]
[DateMidnight, withMonthOfYear, (, int, monthOfYear, ), {, return, withMillis, (, getChronology, (, ), ., monthOfYear, (, ), ., set, (]
[monthOfYear, ), {, return, withMillis, (, getChronology, (, ), ., monthOfYear, (, ), ., set, (, getMillis, (, ), ,]
[set, (, getMillis, (, ), ,, monthOfYear, ), ), ;, }, public, DateMidnight, withWeekOfWeekyear, (, int, weekOfWeekyear, ), {, return]
[getMillis, (, ), ,, monthOfYear, ), ), ;, }, public, DateMidnight, withWeekOfWeekyear, (, int, weekOfWeekyear, ), {, return, withMillis, (]
[getMillis, (, ), ,, monthOfYear, ), ), ;, }, public, DateMidnight, withWeekOfWeekyear, (, int, weekOfWeekyear, ), {, return, withMillis, (]
[getMillis, (, ), ,, monthOfYear, ), ), ;, }, public, DateMidnight, withWeekOfWeekyear, (, int, weekOfWeekyear, ), {, return, withMillis, (]
[DateMidnight, withWeekOfWeekyear, (, int, weekOfWeekyear, ), {, return, withMillis, (, getChronology, (, ), ., weekOfWeekyear, (, ), ., set, (]
[weekOfWeekyear, ), {, return, withMillis, (, getChronology, (, ), ., weekOfWeekyear, (, ), ., set, (, getMillis, (, ), ,]
[set, (, getMillis, (, ), ,, weekOfWeekyear, ), ), ;, }, public, DateMidnight, withDayOfYear, (, int, dayOfYear, ), {, return]
[getMillis, (, ), ,, weekOfWeekyear, ), ), ;, }, public, DateMidnight, withDayOfYear, (, int, dayOfYear, ), {, return, withMillis, (]
[getMillis, (, ), ,, weekOfWeekyear, ), ), ;, }, public, DateMidnight, withDayOfYear, (, int, dayOfYear, ), {, return, withMillis, (]
[getMillis, (, ), ,, weekOfWeekyear, ), ), ;, }, public, DateMidnight, withDayOfYear, (, int, dayOfYear, ), {, return, withMillis, (]
[DateMidnight, withDayOfYear, (, int, dayOfYear, ), {, return, withMillis, (, getChronology, (, ), ., dayOfYear, (, ), ., set, (]
[dayOfYear, ), {, return, withMillis, (, getChronology, (, ), ., dayOfYear, (, ), ., set, (, getMillis, (, ), ,]
[set, (, getMillis, (, ), ,, dayOfYear, ), ), ;, }, public, DateMidnight, withDayOfMonth, (, int, dayOfMonth, ), {, return]
[getMillis, (, ), ,, dayOfYear, ), ), ;, }, public, DateMidnight, withDayOfMonth, (, int, dayOfMonth, ), {, return, withMillis, (]
[getMillis, (, ), ,, dayOfYear, ), ), ;, }, public, DateMidnight, withDayOfMonth, (, int, dayOfMonth, ), {, return, withMillis, (]
[getMillis, (, ), ,, dayOfYear, ), ), ;, }, public, DateMidnight, withDayOfMonth, (, int, dayOfMonth, ), {, return, withMillis, (]
[DateMidnight, withDayOfMonth, (, int, dayOfMonth, ), {, return, withMillis, (, getChronology, (, ), ., dayOfMonth, (, ), ., set, (]
[dayOfMonth, ), {, return, withMillis, (, getChronology, (, ), ., dayOfMonth, (, ), ., set, (, getMillis, (, ), ,]
[set, (, getMillis, (, ), ,, dayOfMonth, ), ), ;, }, public, DateMidnight, withDayOfWeek, (, int, dayOfWeek, ), {, return]
[getMillis, (, ), ,, dayOfMonth, ), ), ;, }, public, DateMidnight, withDayOfWeek, (, int, dayOfWeek, ), {, return, withMillis, (]
[getMillis, (, ), ,, dayOfMonth, ), ), ;, }, public, DateMidnight, withDayOfWeek, (, int, dayOfWeek, ), {, return, withMillis, (]
[getMillis, (, ), ,, dayOfMonth, ), ), ;, }, public, DateMidnight, withDayOfWeek, (, int, dayOfWeek, ), {, return, withMillis, (]
[DateMidnight, withDayOfWeek, (, int, dayOfWeek, ), {, return, withMillis, (, getChronology, (, ), ., dayOfWeek, (, ), ., set, (]
[dayOfWeek, ), {, return, withMillis, (, getChronology, (, ), ., dayOfWeek, (, ), ., set, (, getMillis, (, ), ,]
[), ., set, (, getMillis, (, ), ,, dayOfWeek, ), ), ;, }, public, Property, era, (, ), {, return]
[(, getMillis, (, ), ,, dayOfWeek, ), ), ;, }, public, Property, era, (, ), {, return, new, Property, (]
[(, ), ,, dayOfWeek, ), ), ;, }, public, Property, era, (, ), {, return, new, Property, (, this, ,]
[(, ), ,, dayOfWeek, ), ), ;, }, public, Property, era, (, ), {, return, new, Property, (, this, ,]
[(, this, ,, getChronology, (, ), ., era, (, ), ), ;, }, public, Property, centuryOfEra, (, ), {, return]
[getChronology, (, ), ., era, (, ), ), ;, }, public, Property, centuryOfEra, (, ), {, return, new, Property, (]
[), ., era, (, ), ), ;, }, public, Property, centuryOfEra, (, ), {, return, new, Property, (, this, ,]
[), ., era, (, ), ), ;, }, public, Property, centuryOfEra, (, ), {, return, new, Property, (, this, ,]
[(, this, ,, getChronology, (, ), ., centuryOfEra, (, ), ), ;, }, public, Property, yearOfCentury, (, ), {, return]
[getChronology, (, ), ., centuryOfEra, (, ), ), ;, }, public, Property, yearOfCentury, (, ), {, return, new, Property, (]
[), ., centuryOfEra, (, ), ), ;, }, public, Property, yearOfCentury, (, ), {, return, new, Property, (, this, ,]
[), ., centuryOfEra, (, ), ), ;, }, public, Property, yearOfCentury, (, ), {, return, new, Property, (, this, ,]
[(, this, ,, getChronology, (, ), ., yearOfCentury, (, ), ), ;, }, public, Property, yearOfEra, (, ), {, return]
[getChronology, (, ), ., yearOfCentury, (, ), ), ;, }, public, Property, yearOfEra, (, ), {, return, new, Property, (]
[), ., yearOfCentury, (, ), ), ;, }, public, Property, yearOfEra, (, ), {, return, new, Property, (, this, ,]
[), ., yearOfCentury, (, ), ), ;, }, public, Property, yearOfEra, (, ), {, return, new, Property, (, this, ,]
[(, this, ,, getChronology, (, ), ., yearOfEra, (, ), ), ;, }, public, Property, year, (, ), {, return]
[getChronology, (, ), ., yearOfEra, (, ), ), ;, }, public, Property, year, (, ), {, return, new, Property, (]
[), ., yearOfEra, (, ), ), ;, }, public, Property, year, (, ), {, return, new, Property, (, this, ,]
[), ., yearOfEra, (, ), ), ;, }, public, Property, year, (, ), {, return, new, Property, (, this, ,]
[(, this, ,, getChronology, (, ), ., year, (, ), ), ;, }, public, Property, weekyear, (, ), {, return]
[getChronology, (, ), ., year, (, ), ), ;, }, public, Property, weekyear, (, ), {, return, new, Property, (]
[), ., year, (, ), ), ;, }, public, Property, weekyear, (, ), {, return, new, Property, (, this, ,]
[), ., year, (, ), ), ;, }, public, Property, weekyear, (, ), {, return, new, Property, (, this, ,]
[(, this, ,, getChronology, (, ), ., weekyear, (, ), ), ;, }, public, Property, monthOfYear, (, ), {, return]
[getChronology, (, ), ., weekyear, (, ), ), ;, }, public, Property, monthOfYear, (, ), {, return, new, Property, (]
[), ., weekyear, (, ), ), ;, }, public, Property, monthOfYear, (, ), {, return, new, Property, (, this, ,]
[), ., weekyear, (, ), ), ;, }, public, Property, monthOfYear, (, ), {, return, new, Property, (, this, ,]
[(, this, ,, getChronology, (, ), ., monthOfYear, (, ), ), ;, }, public, Property, weekOfWeekyear, (, ), {, return]
[getChronology, (, ), ., monthOfYear, (, ), ), ;, }, public, Property, weekOfWeekyear, (, ), {, return, new, Property, (]
[), ., monthOfYear, (, ), ), ;, }, public, Property, weekOfWeekyear, (, ), {, return, new, Property, (, this, ,]
[), ., monthOfYear, (, ), ), ;, }, public, Property, weekOfWeekyear, (, ), {, return, new, Property, (, this, ,]
[(, this, ,, getChronology, (, ), ., weekOfWeekyear, (, ), ), ;, }, public, Property, dayOfYear, (, ), {, return]
[getChronology, (, ), ., weekOfWeekyear, (, ), ), ;, }, public, Property, dayOfYear, (, ), {, return, new, Property, (]
[), ., weekOfWeekyear, (, ), ), ;, }, public, Property, dayOfYear, (, ), {, return, new, Property, (, this, ,]
[), ., weekOfWeekyear, (, ), ), ;, }, public, Property, dayOfYear, (, ), {, return, new, Property, (, this, ,]
[(, this, ,, getChronology, (, ), ., dayOfYear, (, ), ), ;, }, public, Property, dayOfMonth, (, ), {, return]
[getChronology, (, ), ., dayOfYear, (, ), ), ;, }, public, Property, dayOfMonth, (, ), {, return, new, Property, (]
[), ., dayOfYear, (, ), ), ;, }, public, Property, dayOfMonth, (, ), {, return, new, Property, (, this, ,]
[), ., dayOfYear, (, ), ), ;, }, public, Property, dayOfMonth, (, ), {, return, new, Property, (, this, ,]
[(, this, ,, getChronology, (, ), ., dayOfMonth, (, ), ), ;, }, public, Property, dayOfWeek, (, ), {, return]
[getChronology, (, ), ., dayOfMonth, (, ), ), ;, }, public, Property, dayOfWeek, (, ), {, return, new, Property, (]
[), ., dayOfMonth, (, ), ), ;, }, public, Property, dayOfWeek, (, ), {, return, new, Property, (, this, ,]
[), ., dayOfMonth, (, ), ), ;, }, public, Property, dayOfWeek, (, ), {, return, new, Property, (, this, ,]
[dayOfWeek, (, ), ), ;, }, public, static, final, class, Property, extends, AbstractReadableInstantFieldProperty, {, private, static, final, long, serialVersionUID, =]
[DateMidnight, iInstant, ;, private, DateTimeField, iField, ;, Property, (, DateMidnight, instant, ,, DateTimeField, field, ), {, super, (, ), ;]
[;, private, DateTimeField, iField, ;, Property, (, DateMidnight, instant, ,, DateTimeField, field, ), {, super, (, ), ;, iInstant, =]
[DateTimeField, iField, ;, Property, (, DateMidnight, instant, ,, DateTimeField, field, ), {, super, (, ), ;, iInstant, =, instant, ;]
[;, Property, (, DateMidnight, instant, ,, DateTimeField, field, ), {, super, (, ), ;, iInstant, =, instant, ;, iField, =]
[;, iInstant, =, instant, ;, iField, =, field, ;, }, private, void, writeObject, (, ObjectOutputStream, oos, ), throws, IOException, {]
[;, iInstant, =, instant, ;, iField, =, field, ;, }, private, void, writeObject, (, ObjectOutputStream, oos, ), throws, IOException, {]
[;, iField, =, field, ;, }, private, void, writeObject, (, ObjectOutputStream, oos, ), throws, IOException, {, oos, ., writeObject, (]
[field, ;, }, private, void, writeObject, (, ObjectOutputStream, oos, ), throws, IOException, {, oos, ., writeObject, (, iInstant, ), ;]
[field, ;, }, private, void, writeObject, (, ObjectOutputStream, oos, ), throws, IOException, {, oos, ., writeObject, (, iInstant, ), ;]
[void, writeObject, (, ObjectOutputStream, oos, ), throws, IOException, {, oos, ., writeObject, (, iInstant, ), ;, oos, ., writeObject, (]
[void, writeObject, (, ObjectOutputStream, oos, ), throws, IOException, {, oos, ., writeObject, (, iInstant, ), ;, oos, ., writeObject, (]
[iField, ., getType, (, ), ), ;, }, private, void, readObject, (, ObjectInputStream, oos, ), throws, IOException, ,, ClassNotFoundException, {]
[getType, (, ), ), ;, }, private, void, readObject, (, ObjectInputStream, oos, ), throws, IOException, ,, ClassNotFoundException, {, iInstant, =]
[), ;, }, private, void, readObject, (, ObjectInputStream, oos, ), throws, IOException, ,, ClassNotFoundException, {, iInstant, =, (, DateMidnight, )]
[), ;, }, private, void, readObject, (, ObjectInputStream, oos, ), throws, IOException, ,, ClassNotFoundException, {, iInstant, =, (, DateMidnight, )]
[), throws, IOException, ,, ClassNotFoundException, {, iInstant, =, (, DateMidnight, ), oos, ., readObject, (, ), ;, DateTimeFieldType, type, =]
[,, ClassNotFoundException, {, iInstant, =, (, DateMidnight, ), oos, ., readObject, (, ), ;, DateTimeFieldType, type, =, (, DateTimeFieldType, )]
[,, ClassNotFoundException, {, iInstant, =, (, DateMidnight, ), oos, ., readObject, (, ), ;, DateTimeFieldType, type, =, (, DateTimeFieldType, )]
[DateMidnight, ), oos, ., readObject, (, ), ;, DateTimeFieldType, type, =, (, DateTimeFieldType, ), oos, ., readObject, (, ), ;]
[oos, ., readObject, (, ), ;, DateTimeFieldType, type, =, (, DateTimeFieldType, ), oos, ., readObject, (, ), ;, iField, =]
[oos, ., readObject, (, ), ;, DateTimeFieldType, type, =, (, DateTimeFieldType, ), oos, ., readObject, (, ), ;, iField, =]
[), ;, DateTimeFieldType, type, =, (, DateTimeFieldType, ), oos, ., readObject, (, ), ;, iField, =, type, ., getField, (]
[), ;, DateTimeFieldType, type, =, (, DateTimeFieldType, ), oos, ., readObject, (, ), ;, iField, =, type, ., getField, (]
[=, type, ., getField, (, iInstant, ., getChronology, (, ), ), ;, }, public, DateTimeField, getField, (, ), {, return]
[), ;, }, public, DateTimeField, getField, (, ), {, return, iField, ;, }, protected, long, getMillis, (, ), {, return]
[), ;, }, public, DateTimeField, getField, (, ), {, return, iField, ;, }, protected, long, getMillis, (, ), {, return]
[long, getMillis, (, ), {, return, iInstant, ., getMillis, (, ), ;, }, protected, Chronology, getChronology, (, ), {, return]
[long, getMillis, (, ), {, return, iInstant, ., getMillis, (, ), ;, }, protected, Chronology, getChronology, (, ), {, return]
[Chronology, getChronology, (, ), {, return, iInstant, ., getChronology, (, ), ;, }, public, DateMidnight, getDateMidnight, (, ), {, return]
[}, public, DateMidnight, getDateMidnight, (, ), {, return, iInstant, ;, }, public, DateMidnight, addToCopy, (, int, value, ), {, return]
[}, public, DateMidnight, getDateMidnight, (, ), {, return, iInstant, ;, }, public, DateMidnight, addToCopy, (, int, value, ), {, return]
[(, ), {, return, iInstant, ;, }, public, DateMidnight, addToCopy, (, int, value, ), {, return, iInstant, ., withMillis, (]
[(, ), {, return, iInstant, ;, }, public, DateMidnight, addToCopy, (, int, value, ), {, return, iInstant, ., withMillis, (]
[iInstant, ;, }, public, DateMidnight, addToCopy, (, int, value, ), {, return, iInstant, ., withMillis, (, iField, ., add, (]
[iInstant, ;, }, public, DateMidnight, addToCopy, (, int, value, ), {, return, iInstant, ., withMillis, (, iField, ., add, (]
[(, int, value, ), {, return, iInstant, ., withMillis, (, iField, ., add, (, iInstant, ., getMillis, (, ), ,]
[iInstant, ., getMillis, (, ), ,, value, ), ), ;, }, public, DateMidnight, addToCopy, (, long, value, ), {, return]
[iInstant, ., getMillis, (, ), ,, value, ), ), ;, }, public, DateMidnight, addToCopy, (, long, value, ), {, return]
[), ,, value, ), ), ;, }, public, DateMidnight, addToCopy, (, long, value, ), {, return, iInstant, ., withMillis, (]
[), ,, value, ), ), ;, }, public, DateMidnight, addToCopy, (, long, value, ), {, return, iInstant, ., withMillis, (]
[), ;, }, public, DateMidnight, addToCopy, (, long, value, ), {, return, iInstant, ., withMillis, (, iField, ., add, (]
[), ;, }, public, DateMidnight, addToCopy, (, long, value, ), {, return, iInstant, ., withMillis, (, iField, ., add, (]
[(, long, value, ), {, return, iInstant, ., withMillis, (, iField, ., add, (, iInstant, ., getMillis, (, ), ,]
[iInstant, ., getMillis, (, ), ,, value, ), ), ;, }, public, DateMidnight, addWrapFieldToCopy, (, int, value, ), {, return]
[iInstant, ., getMillis, (, ), ,, value, ), ), ;, }, public, DateMidnight, addWrapFieldToCopy, (, int, value, ), {, return]
[), ,, value, ), ), ;, }, public, DateMidnight, addWrapFieldToCopy, (, int, value, ), {, return, iInstant, ., withMillis, (]
[), ,, value, ), ), ;, }, public, DateMidnight, addWrapFieldToCopy, (, int, value, ), {, return, iInstant, ., withMillis, (]
[), ;, }, public, DateMidnight, addWrapFieldToCopy, (, int, value, ), {, return, iInstant, ., withMillis, (, iField, ., addWrapField, (]
[), ;, }, public, DateMidnight, addWrapFieldToCopy, (, int, value, ), {, return, iInstant, ., withMillis, (, iField, ., addWrapField, (]
[(, int, value, ), {, return, iInstant, ., withMillis, (, iField, ., addWrapField, (, iInstant, ., getMillis, (, ), ,]
[iInstant, ., getMillis, (, ), ,, value, ), ), ;, }, public, DateMidnight, setCopy, (, int, value, ), {, return]
[iInstant, ., getMillis, (, ), ,, value, ), ), ;, }, public, DateMidnight, setCopy, (, int, value, ), {, return]
[), ,, value, ), ), ;, }, public, DateMidnight, setCopy, (, int, value, ), {, return, iInstant, ., withMillis, (]
[), ,, value, ), ), ;, }, public, DateMidnight, setCopy, (, int, value, ), {, return, iInstant, ., withMillis, (]
[), ;, }, public, DateMidnight, setCopy, (, int, value, ), {, return, iInstant, ., withMillis, (, iField, ., set, (]
[), ;, }, public, DateMidnight, setCopy, (, int, value, ), {, return, iInstant, ., withMillis, (, iField, ., set, (]
[(, int, value, ), {, return, iInstant, ., withMillis, (, iField, ., set, (, iInstant, ., getMillis, (, ), ,]
[(, ), ,, value, ), ), ;, }, public, DateMidnight, setCopy, (, String, text, ,, Locale, locale, ), {, return]
[(, ), ,, value, ), ), ;, }, public, DateMidnight, setCopy, (, String, text, ,, Locale, locale, ), {, return]
[), ), ;, }, public, DateMidnight, setCopy, (, String, text, ,, Locale, locale, ), {, return, iInstant, ., withMillis, (]
[), ), ;, }, public, DateMidnight, setCopy, (, String, text, ,, Locale, locale, ), {, return, iInstant, ., withMillis, (]
[public, DateMidnight, setCopy, (, String, text, ,, Locale, locale, ), {, return, iInstant, ., withMillis, (, iField, ., set, (]
[public, DateMidnight, setCopy, (, String, text, ,, Locale, locale, ), {, return, iInstant, ., withMillis, (, iField, ., set, (]
[,, Locale, locale, ), {, return, iInstant, ., withMillis, (, iField, ., set, (, iInstant, ., getMillis, (, ), ,]
[locale, ), {, return, iInstant, ., withMillis, (, iField, ., set, (, iInstant, ., getMillis, (, ), ,, text, ,]
[getMillis, (, ), ,, text, ,, locale, ), ), ;, }, public, DateMidnight, setCopy, (, String, text, ), {, return]
[), ,, text, ,, locale, ), ), ;, }, public, DateMidnight, setCopy, (, String, text, ), {, return, setCopy, (]
[text, ,, locale, ), ), ;, }, public, DateMidnight, setCopy, (, String, text, ), {, return, setCopy, (, text, ,]
[String, text, ), {, return, setCopy, (, text, ,, null, ), ;, }, public, DateMidnight, withMaximumValue, (, ), {, return]
[), {, return, setCopy, (, text, ,, null, ), ;, }, public, DateMidnight, withMaximumValue, (, ), {, return, setCopy, (]
[withMaximumValue, (, ), {, return, setCopy, (, getMaximumValue, (, ), ), ;, }, public, DateMidnight, withMinimumValue, (, ), {, return]
[), {, return, setCopy, (, getMaximumValue, (, ), ), ;, }, public, DateMidnight, withMinimumValue, (, ), {, return, setCopy, (]
[withMinimumValue, (, ), {, return, setCopy, (, getMinimumValue, (, ), ), ;, }, public, DateMidnight, roundFloorCopy, (, ), {, return]
[withMinimumValue, (, ), {, return, setCopy, (, getMinimumValue, (, ), ), ;, }, public, DateMidnight, roundFloorCopy, (, ), {, return]
[return, setCopy, (, getMinimumValue, (, ), ), ;, }, public, DateMidnight, roundFloorCopy, (, ), {, return, iInstant, ., withMillis, (]
[return, setCopy, (, getMinimumValue, (, ), ), ;, }, public, DateMidnight, roundFloorCopy, (, ), {, return, iInstant, ., withMillis, (]
[(, ), ), ;, }, public, DateMidnight, roundFloorCopy, (, ), {, return, iInstant, ., withMillis, (, iField, ., roundFloor, (]
[(, ), ), ;, }, public, DateMidnight, roundFloorCopy, (, ), {, return, iInstant, ., withMillis, (, iField, ., roundFloor, (]
[iField, ., roundFloor, (, iInstant, ., getMillis, (, ), ), ), ;, }, public, DateMidnight, roundCeilingCopy, (, ), {, return]
[iField, ., roundFloor, (, iInstant, ., getMillis, (, ), ), ), ;, }, public, DateMidnight, roundCeilingCopy, (, ), {, return]
[iInstant, ., getMillis, (, ), ), ), ;, }, public, DateMidnight, roundCeilingCopy, (, ), {, return, iInstant, ., withMillis, (]
[iInstant, ., getMillis, (, ), ), ), ;, }, public, DateMidnight, roundCeilingCopy, (, ), {, return, iInstant, ., withMillis, (]
[), ), ), ;, }, public, DateMidnight, roundCeilingCopy, (, ), {, return, iInstant, ., withMillis, (, iField, ., roundCeiling, (]
[), ), ), ;, }, public, DateMidnight, roundCeilingCopy, (, ), {, return, iInstant, ., withMillis, (, iField, ., roundCeiling, (]
[iField, ., roundCeiling, (, iInstant, ., getMillis, (, ), ), ), ;, }, public, DateMidnight, roundHalfFloorCopy, (, ), {, return]
[iField, ., roundCeiling, (, iInstant, ., getMillis, (, ), ), ), ;, }, public, DateMidnight, roundHalfFloorCopy, (, ), {, return]
[iInstant, ., getMillis, (, ), ), ), ;, }, public, DateMidnight, roundHalfFloorCopy, (, ), {, return, iInstant, ., withMillis, (]
[iInstant, ., getMillis, (, ), ), ), ;, }, public, DateMidnight, roundHalfFloorCopy, (, ), {, return, iInstant, ., withMillis, (]
[), ), ), ;, }, public, DateMidnight, roundHalfFloorCopy, (, ), {, return, iInstant, ., withMillis, (, iField, ., roundHalfFloor, (]
[), ), ), ;, }, public, DateMidnight, roundHalfFloorCopy, (, ), {, return, iInstant, ., withMillis, (, iField, ., roundHalfFloor, (]
[iField, ., roundHalfFloor, (, iInstant, ., getMillis, (, ), ), ), ;, }, public, DateMidnight, roundHalfCeilingCopy, (, ), {, return]
[iField, ., roundHalfFloor, (, iInstant, ., getMillis, (, ), ), ), ;, }, public, DateMidnight, roundHalfCeilingCopy, (, ), {, return]
[iInstant, ., getMillis, (, ), ), ), ;, }, public, DateMidnight, roundHalfCeilingCopy, (, ), {, return, iInstant, ., withMillis, (]
[iInstant, ., getMillis, (, ), ), ), ;, }, public, DateMidnight, roundHalfCeilingCopy, (, ), {, return, iInstant, ., withMillis, (]
[), ), ), ;, }, public, DateMidnight, roundHalfCeilingCopy, (, ), {, return, iInstant, ., withMillis, (, iField, ., roundHalfCeiling, (]
[), ), ), ;, }, public, DateMidnight, roundHalfCeilingCopy, (, ), {, return, iInstant, ., withMillis, (, iField, ., roundHalfCeiling, (]
[iField, ., roundHalfCeiling, (, iInstant, ., getMillis, (, ), ), ), ;, }, public, DateMidnight, roundHalfEvenCopy, (, ), {, return]
[iField, ., roundHalfCeiling, (, iInstant, ., getMillis, (, ), ), ), ;, }, public, DateMidnight, roundHalfEvenCopy, (, ), {, return]
[iInstant, ., getMillis, (, ), ), ), ;, }, public, DateMidnight, roundHalfEvenCopy, (, ), {, return, iInstant, ., withMillis, (]
[iInstant, ., getMillis, (, ), ), ), ;, }, public, DateMidnight, roundHalfEvenCopy, (, ), {, return, iInstant, ., withMillis, (]
[), ), ), ;, }, public, DateMidnight, roundHalfEvenCopy, (, ), {, return, iInstant, ., withMillis, (, iField, ., roundHalfEven, (]
[), ), ), ;, }, public, DateMidnight, roundHalfEvenCopy, (, ), {, return, iInstant, ., withMillis, (, iField, ., roundHalfEven, (]
