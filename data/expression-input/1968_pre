[private, final, double, start, ;, public, SearchInterval, (, double, lo, ,, double, hi, ,, double, init, ), {, if, (]
[private, final, double, start, ;, public, SearchInterval, (, double, lo, ,, double, hi, ,, double, init, ), {, if, (]
[double, start, ;, public, SearchInterval, (, double, lo, ,, double, hi, ,, double, init, ), {, if, (, lo, >=]
[SearchInterval, (, double, lo, ,, double, hi, ,, double, init, ), {, if, (, lo, >=, hi, ), {, throw]
[lo, ,, double, hi, ,, double, init, ), {, if, (, lo, >=, hi, ), {, throw, new, NumberIsTooLargeException, (]
[double, hi, ,, double, init, ), {, if, (, lo, >=, hi, ), {, throw, new, NumberIsTooLargeException, (, lo, ,]
[,, double, init, ), {, if, (, lo, >=, hi, ), {, throw, new, NumberIsTooLargeException, (, lo, ,, hi, ,]
[(, lo, >=, hi, ), {, throw, new, NumberIsTooLargeException, (, lo, ,, hi, ,, false, ), ;, }, if, (]
[(, lo, >=, hi, ), {, throw, new, NumberIsTooLargeException, (, lo, ,, hi, ,, false, ), ;, }, if, (]
[(, lo, >=, hi, ), {, throw, new, NumberIsTooLargeException, (, lo, ,, hi, ,, false, ), ;, }, if, (]
[>=, hi, ), {, throw, new, NumberIsTooLargeException, (, lo, ,, hi, ,, false, ), ;, }, if, (, init, <]
[), {, throw, new, NumberIsTooLargeException, (, lo, ,, hi, ,, false, ), ;, }, if, (, init, <, lo, ||]
[), {, throw, new, NumberIsTooLargeException, (, lo, ,, hi, ,, false, ), ;, }, if, (, init, <, lo, ||]
[throw, new, NumberIsTooLargeException, (, lo, ,, hi, ,, false, ), ;, }, if, (, init, <, lo, ||, init, >]
[lo, ,, hi, ,, false, ), ;, }, if, (, init, <, lo, ||, init, >, hi, ), {, throw]
[,, false, ), ;, }, if, (, init, <, lo, ||, init, >, hi, ), {, throw, new, OutOfRangeException, (]
[), ;, }, if, (, init, <, lo, ||, init, >, hi, ), {, throw, new, OutOfRangeException, (, init, ,]
[}, if, (, init, <, lo, ||, init, >, hi, ), {, throw, new, OutOfRangeException, (, init, ,, lo, ,]
[<, lo, ||, init, >, hi, ), {, throw, new, OutOfRangeException, (, init, ,, lo, ,, hi, ), ;, }]
[||, init, >, hi, ), {, throw, new, OutOfRangeException, (, init, ,, lo, ,, hi, ), ;, }, lower, =]
[>, hi, ), {, throw, new, OutOfRangeException, (, init, ,, lo, ,, hi, ), ;, }, lower, =, lo, ;]
[), {, throw, new, OutOfRangeException, (, init, ,, lo, ,, hi, ), ;, }, lower, =, lo, ;, upper, =]
[throw, new, OutOfRangeException, (, init, ,, lo, ,, hi, ), ;, }, lower, =, lo, ;, upper, =, hi, ;]
[OutOfRangeException, (, init, ,, lo, ,, hi, ), ;, }, lower, =, lo, ;, upper, =, hi, ;, start, =]
[=, hi, ;, start, =, init, ;, }, public, SearchInterval, (, double, lo, ,, double, hi, ), {, this, (]
[;, start, =, init, ;, }, public, SearchInterval, (, double, lo, ,, double, hi, ), {, this, (, lo, ,]
[=, init, ;, }, public, SearchInterval, (, double, lo, ,, double, hi, ), {, this, (, lo, ,, hi, ,]
[=, init, ;, }, public, SearchInterval, (, double, lo, ,, double, hi, ), {, this, (, lo, ,, hi, ,]
[;, }, public, SearchInterval, (, double, lo, ,, double, hi, ), {, this, (, lo, ,, hi, ,, 0.5, *]
[}, public, SearchInterval, (, double, lo, ,, double, hi, ), {, this, (, lo, ,, hi, ,, 0.5, *, (]
[}, public, SearchInterval, (, double, lo, ,, double, hi, ), {, this, (, lo, ,, hi, ,, 0.5, *, (]
[SearchInterval, (, double, lo, ,, double, hi, ), {, this, (, lo, ,, hi, ,, 0.5, *, (, lo, +]
[,, hi, ,, 0.5, *, (, lo, +, hi, ), ), ;, }, public, double, getMin, (, ), {, return]
[), ;, }, public, double, getMin, (, ), {, return, lower, ;, }, public, double, getMax, (, ), {, return]
[lower, ;, }, public, double, getMax, (, ), {, return, upper, ;, }, public, double, getStartValue, (, ), {, return]
