[;, private, final, long, iUnitMillis, ;, public, PreciseDurationField, (, DurationFieldType, type, ,, long, unitMillis, ), {, super, (, type, )]
[;, private, final, long, iUnitMillis, ;, public, PreciseDurationField, (, DurationFieldType, type, ,, long, unitMillis, ), {, super, (, type, )]
[), ;, iUnitMillis, =, unitMillis, ;, }, public, final, boolean, isPrecise, (, ), {, return, true, ;, }, public, final]
[=, unitMillis, ;, }, public, final, boolean, isPrecise, (, ), {, return, true, ;, }, public, final, long, getUnitMillis, (]
[;, }, public, final, boolean, isPrecise, (, ), {, return, true, ;, }, public, final, long, getUnitMillis, (, ), {]
[;, }, public, final, long, getUnitMillis, (, ), {, return, iUnitMillis, ;, }, public, long, getValueAsLong, (, long, duration, ,]
[;, }, public, long, getValueAsLong, (, long, duration, ,, long, instant, ), {, return, duration, /, iUnitMillis, ;, }, public]
[;, }, public, long, getMillis, (, int, value, ,, long, instant, ), {, return, value, *, iUnitMillis, ;, }, public]
[/, iUnitMillis, ;, }, public, long, getMillis, (, int, value, ,, long, instant, ), {, return, value, *, iUnitMillis, ;]
[;, }, public, long, getMillis, (, int, value, ,, long, instant, ), {, return, value, *, iUnitMillis, ;, }, public]
[;, }, public, long, getMillis, (, long, value, ,, long, instant, ), {, return, FieldUtils, ., safeMultiply, (, value, ,]
[*, iUnitMillis, ;, }, public, long, getMillis, (, long, value, ,, long, instant, ), {, return, FieldUtils, ., safeMultiply, (]
[;, }, public, long, getMillis, (, long, value, ,, long, instant, ), {, return, FieldUtils, ., safeMultiply, (, value, ,]
[;, }, public, long, add, (, long, instant, ,, int, value, ), {, long, addition, =, value, *, iUnitMillis, ;]
[., safeMultiply, (, value, ,, iUnitMillis, ), ;, }, public, long, add, (, long, instant, ,, int, value, ), {]
[,, iUnitMillis, ), ;, }, public, long, add, (, long, instant, ,, int, value, ), {, long, addition, =, value]
[), ;, }, public, long, add, (, long, instant, ,, int, value, ), {, long, addition, =, value, *, iUnitMillis]
[;, return, FieldUtils, ., safeAdd, (, instant, ,, addition, ), ;, }, public, long, add, (, long, instant, ,, long]
[*, iUnitMillis, ;, return, FieldUtils, ., safeAdd, (, instant, ,, addition, ), ;, }, public, long, add, (, long, instant]
[;, return, FieldUtils, ., safeAdd, (, instant, ,, addition, ), ;, }, public, long, add, (, long, instant, ,, long]
[;, }, public, long, add, (, long, instant, ,, long, value, ), {, long, addition, =, FieldUtils, ., safeMultiply, (]
[., safeAdd, (, instant, ,, addition, ), ;, }, public, long, add, (, long, instant, ,, long, value, ), {]
[,, addition, ), ;, }, public, long, add, (, long, instant, ,, long, value, ), {, long, addition, =, FieldUtils]
[), ;, }, public, long, add, (, long, instant, ,, long, value, ), {, long, addition, =, FieldUtils, ., safeMultiply]
[;, return, FieldUtils, ., safeAdd, (, instant, ,, addition, ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long]
[., safeMultiply, (, value, ,, iUnitMillis, ), ;, return, FieldUtils, ., safeAdd, (, instant, ,, addition, ), ;, }, public]
[,, iUnitMillis, ), ;, return, FieldUtils, ., safeAdd, (, instant, ,, addition, ), ;, }, public, long, getDifferenceAsLong, (, long]
[), ;, return, FieldUtils, ., safeAdd, (, instant, ,, addition, ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,]
[;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, long, difference, =, FieldUtils, ., safeSubtract, (]
[., safeAdd, (, instant, ,, addition, ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {]
[,, addition, ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, long, difference, =, FieldUtils]
[), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, long, difference, =, FieldUtils, ., safeSubtract]
[;, return, difference, /, iUnitMillis, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, this, ==, obj]
[., safeSubtract, (, minuendInstant, ,, subtrahendInstant, ), ;, return, difference, /, iUnitMillis, ;, }, public, boolean, equals, (, Object, obj]
[,, subtrahendInstant, ), ;, return, difference, /, iUnitMillis, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[), ;, return, difference, /, iUnitMillis, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, this, ==]
[;, }, public, boolean, equals, (, Object, obj, ), {, if, (, this, ==, obj, ), {, return, true, ;]
[/, iUnitMillis, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, this, ==, obj, ), {, return]
[;, }, public, boolean, equals, (, Object, obj, ), {, if, (, this, ==, obj, ), {, return, true, ;]
[), {, return, true, ;, }, else, if, (, obj, instanceof, PreciseDurationField, ), {, PreciseDurationField, other, =, (, PreciseDurationField, )]
[==, obj, ), {, return, true, ;, }, else, if, (, obj, instanceof, PreciseDurationField, ), {, PreciseDurationField, other, =, (]
[), {, return, true, ;, }, else, if, (, obj, instanceof, PreciseDurationField, ), {, PreciseDurationField, other, =, (, PreciseDurationField, )]
[;, }, else, if, (, obj, instanceof, PreciseDurationField, ), {, PreciseDurationField, other, =, (, PreciseDurationField, ), obj, ;, return, (]
[), {, PreciseDurationField, other, =, (, PreciseDurationField, ), obj, ;, return, (, getType, (, ), ==, other, ., getType, (]
[instanceof, PreciseDurationField, ), {, PreciseDurationField, other, =, (, PreciseDurationField, ), obj, ;, return, (, getType, (, ), ==, other, .]
[;, return, (, getType, (, ), ==, other, ., getType, (, ), ), &&, (, iUnitMillis, ==, other, ., iUnitMillis]
[;, return, (, getType, (, ), ==, other, ., getType, (, ), ), &&, (, iUnitMillis, ==, other, ., iUnitMillis]
[;, }, return, false, ;, }, public, int, hashCode, (, ), {, long, millis, =, iUnitMillis, ;, int, hash, =]
[&&, (, iUnitMillis, ==, other, ., iUnitMillis, ), ;, }, return, false, ;, }, public, int, hashCode, (, ), {]
[), &&, (, iUnitMillis, ==, other, ., iUnitMillis, ), ;, }, return, false, ;, }, public, int, hashCode, (, )]
[==, other, ., getType, (, ), ), &&, (, iUnitMillis, ==, other, ., iUnitMillis, ), ;, }, return, false, ;]
[), &&, (, iUnitMillis, ==, other, ., iUnitMillis, ), ;, }, return, false, ;, }, public, int, hashCode, (, )]
[., getType, (, ), ), &&, (, iUnitMillis, ==, other, ., iUnitMillis, ), ;, }, return, false, ;, }, public]
[;, }, return, false, ;, }, public, int, hashCode, (, ), {, long, millis, =, iUnitMillis, ;, int, hash, =]
[), ;, }, return, false, ;, }, public, int, hashCode, (, ), {, long, millis, =, iUnitMillis, ;, int, hash]
[==, other, ., iUnitMillis, ), ;, }, return, false, ;, }, public, int, hashCode, (, ), {, long, millis, =]
[), ;, }, return, false, ;, }, public, int, hashCode, (, ), {, long, millis, =, iUnitMillis, ;, int, hash]
[., iUnitMillis, ), ;, }, return, false, ;, }, public, int, hashCode, (, ), {, long, millis, =, iUnitMillis, ;]
[;, }, public, int, hashCode, (, ), {, long, millis, =, iUnitMillis, ;, int, hash, =, (, int, ), (]
[;, int, hash, =, (, int, ), (, millis, ^, (, millis, >, >, >, 32, ), ), ;, hash]
[;, hash, +=, getType, (, ), ., hashCode, (, ), ;, return, hash, ;, }, }]
[;, hash, +=, getType, (, ), ., hashCode, (, ), ;, return, hash, ;, }, }]
[), ;, hash, +=, getType, (, ), ., hashCode, (, ), ;, return, hash, ;, }, }]
[^, (, millis, >, >, >, 32, ), ), ;, hash, +=, getType, (, ), ., hashCode, (, ), ;]
[), ;, hash, +=, getType, (, ), ., hashCode, (, ), ;, return, hash, ;, }, }]
[), ), ;, hash, +=, getType, (, ), ., hashCode, (, ), ;, return, hash, ;, }, }]
[>, >, >, 32, ), ), ;, hash, +=, getType, (, ), ., hashCode, (, ), ;, return, hash, ;]
[), ), ;, hash, +=, getType, (, ), ., hashCode, (, ), ;, return, hash, ;, }, }]
[+=, getType, (, ), ., hashCode, (, ), ;, return, hash, ;, }, }]
[;, return, hash, ;, }, }]
[., hashCode, (, ), ;, return, hash, ;, }, }]
[;, }, }]
