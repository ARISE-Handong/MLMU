[;, public, static, final, int, DEFAULT_BRIGHTNESS_EXPONENT, =, 2, ;, private, final, int, microsphereElements, ;, private, final, int, brightnessExponent, ;, public]
[;, private, final, int, microsphereElements, ;, private, final, int, brightnessExponent, ;, public, MicrosphereInterpolator, (, ), {, this, (, DEFAULT_MICROSPHERE_ELEMENTS, ,]
[,, DEFAULT_BRIGHTNESS_EXPONENT, ), ;, }, public, MicrosphereInterpolator, (, final, int, elements, ,, final, int, exponent, ), throws, NotPositiveException, ,, NotStrictlyPositiveException]
[), ;, }, public, MicrosphereInterpolator, (, final, int, elements, ,, final, int, exponent, ), throws, NotPositiveException, ,, NotStrictlyPositiveException, {, if]
[), {, throw, new, NotPositiveException, (, exponent, ), ;, }, if, (, elements, <=, 0, ), {, throw, new, NotStrictlyPositiveException]
[<, 0, ), {, throw, new, NotPositiveException, (, exponent, ), ;, }, if, (, elements, <=, 0, ), {, throw]
[), {, throw, new, NotPositiveException, (, exponent, ), ;, }, if, (, elements, <=, 0, ), {, throw, new, NotStrictlyPositiveException]
[;, }, if, (, elements, <=, 0, ), {, throw, new, NotStrictlyPositiveException, (, elements, ), ;, }, microsphereElements, =, elements]
[), ;, }, if, (, elements, <=, 0, ), {, throw, new, NotStrictlyPositiveException, (, elements, ), ;, }, microsphereElements, =]
[), {, throw, new, NotStrictlyPositiveException, (, elements, ), ;, }, microsphereElements, =, elements, ;, brightnessExponent, =, exponent, ;, }, public]
[<=, 0, ), {, throw, new, NotStrictlyPositiveException, (, elements, ), ;, }, microsphereElements, =, elements, ;, brightnessExponent, =, exponent, ;]
[), {, throw, new, NotStrictlyPositiveException, (, elements, ), ;, }, microsphereElements, =, elements, ;, brightnessExponent, =, exponent, ;, }, public]
[;, }, microsphereElements, =, elements, ;, brightnessExponent, =, exponent, ;, }, public, MultivariateFunction, interpolate, (, final, double, [, ], []
[), ;, }, microsphereElements, =, elements, ;, brightnessExponent, =, exponent, ;, }, public, MultivariateFunction, interpolate, (, final, double, [, ]]
[=, elements, ;, brightnessExponent, =, exponent, ;, }, public, MultivariateFunction, interpolate, (, final, double, [, ], [, ], xval, ,]
[;, brightnessExponent, =, exponent, ;, }, public, MultivariateFunction, interpolate, (, final, double, [, ], [, ], xval, ,, final, double]
[=, exponent, ;, }, public, MultivariateFunction, interpolate, (, final, double, [, ], [, ], xval, ,, final, double, [, ]]
[;, }, public, MultivariateFunction, interpolate, (, final, double, [, ], [, ], xval, ,, final, double, [, ], yval, )]
[;, return, new, MicrosphereInterpolatingFunction, (, xval, ,, yval, ,, brightnessExponent, ,, microsphereElements, ,, rand, ), ;, }, }]
[), ;, return, new, MicrosphereInterpolatingFunction, (, xval, ,, yval, ,, brightnessExponent, ,, microsphereElements, ,, rand, ), ;, }, }]
[., length, ), ;, return, new, MicrosphereInterpolatingFunction, (, xval, ,, yval, ,, brightnessExponent, ,, microsphereElements, ,, rand, ), ;, }]
[[, 0, ], ., length, ), ;, return, new, MicrosphereInterpolatingFunction, (, xval, ,, yval, ,, brightnessExponent, ,, microsphereElements, ,, rand]
[], ., length, ), ;, return, new, MicrosphereInterpolatingFunction, (, xval, ,, yval, ,, brightnessExponent, ,, microsphereElements, ,, rand, ), ;]
[;, }, }]
[,, yval, ,, brightnessExponent, ,, microsphereElements, ,, rand, ), ;, }, }]
[,, brightnessExponent, ,, microsphereElements, ,, rand, ), ;, }, }]
[,, microsphereElements, ,, rand, ), ;, }, }]
[,, rand, ), ;, }, }]
[), ;, }, }]
