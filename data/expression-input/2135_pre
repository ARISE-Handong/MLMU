[BigReal, implements, FieldElement, <, BigReal, >, ,, Comparable, <, BigReal, >, ,, Serializable, {, public, static, final, BigReal, ZERO, =]
[<, BigReal, >, ,, Comparable, <, BigReal, >, ,, Serializable, {, public, static, final, BigReal, ZERO, =, new, BigReal, (]
[<, BigReal, >, ,, Comparable, <, BigReal, >, ,, Serializable, {, public, static, final, BigReal, ZERO, =, new, BigReal, (]
[public, static, final, BigReal, ZERO, =, new, BigReal, (, BigDecimal, ., ZERO, ), ;, public, static, final, BigReal, ONE, =]
[BigReal, ZERO, =, new, BigReal, (, BigDecimal, ., ZERO, ), ;, public, static, final, BigReal, ONE, =, new, BigReal, (]
[BigReal, ZERO, =, new, BigReal, (, BigDecimal, ., ZERO, ), ;, public, static, final, BigReal, ONE, =, new, BigReal, (]
[public, static, final, BigReal, ONE, =, new, BigReal, (, BigDecimal, ., ONE, ), ;, private, static, final, long, serialVersionUID, =]
[ONE, ), ;, private, static, final, long, serialVersionUID, =, 4984534880991310382L, ;, private, final, BigDecimal, d, ;, private, RoundingMode, roundingMode, =]
[ONE, ), ;, private, static, final, long, serialVersionUID, =, 4984534880991310382L, ;, private, final, BigDecimal, d, ;, private, RoundingMode, roundingMode, =]
[=, 4984534880991310382L, ;, private, final, BigDecimal, d, ;, private, RoundingMode, roundingMode, =, RoundingMode, ., HALF_UP, ;, private, int, scale, =]
[RoundingMode, roundingMode, =, RoundingMode, ., HALF_UP, ;, private, int, scale, =, 64, ;, public, BigReal, (, BigDecimal, val, ), {]
[=, RoundingMode, ., HALF_UP, ;, private, int, scale, =, 64, ;, public, BigReal, (, BigDecimal, val, ), {, d, =]
[;, public, BigReal, (, BigDecimal, val, ), {, d, =, val, ;, }, public, BigReal, (, BigInteger, val, ), {]
[BigReal, (, BigDecimal, val, ), {, d, =, val, ;, }, public, BigReal, (, BigInteger, val, ), {, d, =]
[val, ), {, d, =, val, ;, }, public, BigReal, (, BigInteger, val, ), {, d, =, new, BigDecimal, (]
[{, d, =, new, BigDecimal, (, val, ), ;, }, public, BigReal, (, BigInteger, unscaledVal, ,, int, scale, ), {]
[=, new, BigDecimal, (, val, ), ;, }, public, BigReal, (, BigInteger, unscaledVal, ,, int, scale, ), {, d, =]
[(, val, ), ;, }, public, BigReal, (, BigInteger, unscaledVal, ,, int, scale, ), {, d, =, new, BigDecimal, (]
[), ;, }, public, BigReal, (, BigInteger, unscaledVal, ,, int, scale, ), {, d, =, new, BigDecimal, (, unscaledVal, ,]
[(, unscaledVal, ,, scale, ), ;, }, public, BigReal, (, BigInteger, unscaledVal, ,, int, scale, ,, MathContext, mc, ), {]
[,, scale, ), ;, }, public, BigReal, (, BigInteger, unscaledVal, ,, int, scale, ,, MathContext, mc, ), {, d, =]
[;, }, public, BigReal, (, BigInteger, unscaledVal, ,, int, scale, ,, MathContext, mc, ), {, d, =, new, BigDecimal, (]
[public, BigReal, (, BigInteger, unscaledVal, ,, int, scale, ,, MathContext, mc, ), {, d, =, new, BigDecimal, (, unscaledVal, ,]
[(, BigInteger, unscaledVal, ,, int, scale, ,, MathContext, mc, ), {, d, =, new, BigDecimal, (, unscaledVal, ,, scale, ,]
[BigDecimal, (, unscaledVal, ,, scale, ,, mc, ), ;, }, public, BigReal, (, BigInteger, val, ,, MathContext, mc, ), {]
[unscaledVal, ,, scale, ,, mc, ), ;, }, public, BigReal, (, BigInteger, val, ,, MathContext, mc, ), {, d, =]
[,, mc, ), ;, }, public, BigReal, (, BigInteger, val, ,, MathContext, mc, ), {, d, =, new, BigDecimal, (]
[), ;, }, public, BigReal, (, BigInteger, val, ,, MathContext, mc, ), {, d, =, new, BigDecimal, (, val, ,]
[d, =, new, BigDecimal, (, val, ,, mc, ), ;, }, public, BigReal, (, char, [, ], in, ), {]
[new, BigDecimal, (, val, ,, mc, ), ;, }, public, BigReal, (, char, [, ], in, ), {, d, =]
[val, ,, mc, ), ;, }, public, BigReal, (, char, [, ], in, ), {, d, =, new, BigDecimal, (]
[(, in, ), ;, }, public, BigReal, (, char, [, ], in, ,, int, offset, ,, int, len, ), {]
[), ;, }, public, BigReal, (, char, [, ], in, ,, int, offset, ,, int, len, ), {, d, =]
[public, BigReal, (, char, [, ], in, ,, int, offset, ,, int, len, ), {, d, =, new, BigDecimal, (]
[(, char, [, ], in, ,, int, offset, ,, int, len, ), {, d, =, new, BigDecimal, (, in, ,]
[[, ], in, ,, int, offset, ,, int, len, ), {, d, =, new, BigDecimal, (, in, ,, offset, ,]
[;, }, public, BigReal, (, char, [, ], in, ,, int, offset, ,, int, len, ,, MathContext, mc, ), {]
[public, BigReal, (, char, [, ], in, ,, int, offset, ,, int, len, ,, MathContext, mc, ), {, d, =]
[char, [, ], in, ,, int, offset, ,, int, len, ,, MathContext, mc, ), {, d, =, new, BigDecimal, (]
[], in, ,, int, offset, ,, int, len, ,, MathContext, mc, ), {, d, =, new, BigDecimal, (, in, ,]
[,, int, offset, ,, int, len, ,, MathContext, mc, ), {, d, =, new, BigDecimal, (, in, ,, offset, ,]
[offset, ,, int, len, ,, MathContext, mc, ), {, d, =, new, BigDecimal, (, in, ,, offset, ,, len, ,]
[offset, ,, len, ,, mc, ), ;, }, public, BigReal, (, char, [, ], in, ,, MathContext, mc, ), {]
[len, ,, mc, ), ;, }, public, BigReal, (, char, [, ], in, ,, MathContext, mc, ), {, d, =]
[), ;, }, public, BigReal, (, char, [, ], in, ,, MathContext, mc, ), {, d, =, new, BigDecimal, (]
[}, public, BigReal, (, char, [, ], in, ,, MathContext, mc, ), {, d, =, new, BigDecimal, (, in, ,]
[), {, d, =, new, BigDecimal, (, in, ,, mc, ), ;, }, public, BigReal, (, double, val, ), {]
[d, =, new, BigDecimal, (, in, ,, mc, ), ;, }, public, BigReal, (, double, val, ), {, d, =]
[BigDecimal, (, in, ,, mc, ), ;, }, public, BigReal, (, double, val, ), {, d, =, new, BigDecimal, (]
[{, d, =, new, BigDecimal, (, val, ), ;, }, public, BigReal, (, double, val, ,, MathContext, mc, ), {]
[=, new, BigDecimal, (, val, ), ;, }, public, BigReal, (, double, val, ,, MathContext, mc, ), {, d, =]
[(, val, ), ;, }, public, BigReal, (, double, val, ,, MathContext, mc, ), {, d, =, new, BigDecimal, (]
[), ;, }, public, BigReal, (, double, val, ,, MathContext, mc, ), {, d, =, new, BigDecimal, (, val, ,]
[), {, d, =, new, BigDecimal, (, val, ,, mc, ), ;, }, public, BigReal, (, int, val, ), {]
[d, =, new, BigDecimal, (, val, ,, mc, ), ;, }, public, BigReal, (, int, val, ), {, d, =]
[BigDecimal, (, val, ,, mc, ), ;, }, public, BigReal, (, int, val, ), {, d, =, new, BigDecimal, (]
[{, d, =, new, BigDecimal, (, val, ), ;, }, public, BigReal, (, int, val, ,, MathContext, mc, ), {]
[=, new, BigDecimal, (, val, ), ;, }, public, BigReal, (, int, val, ,, MathContext, mc, ), {, d, =]
[(, val, ), ;, }, public, BigReal, (, int, val, ,, MathContext, mc, ), {, d, =, new, BigDecimal, (]
[), ;, }, public, BigReal, (, int, val, ,, MathContext, mc, ), {, d, =, new, BigDecimal, (, val, ,]
[), {, d, =, new, BigDecimal, (, val, ,, mc, ), ;, }, public, BigReal, (, long, val, ), {]
[d, =, new, BigDecimal, (, val, ,, mc, ), ;, }, public, BigReal, (, long, val, ), {, d, =]
[BigDecimal, (, val, ,, mc, ), ;, }, public, BigReal, (, long, val, ), {, d, =, new, BigDecimal, (]
[{, d, =, new, BigDecimal, (, val, ), ;, }, public, BigReal, (, long, val, ,, MathContext, mc, ), {]
[=, new, BigDecimal, (, val, ), ;, }, public, BigReal, (, long, val, ,, MathContext, mc, ), {, d, =]
[(, val, ), ;, }, public, BigReal, (, long, val, ,, MathContext, mc, ), {, d, =, new, BigDecimal, (]
[), ;, }, public, BigReal, (, long, val, ,, MathContext, mc, ), {, d, =, new, BigDecimal, (, val, ,]
[), {, d, =, new, BigDecimal, (, val, ,, mc, ), ;, }, public, BigReal, (, String, val, ), {]
[d, =, new, BigDecimal, (, val, ,, mc, ), ;, }, public, BigReal, (, String, val, ), {, d, =]
[BigDecimal, (, val, ,, mc, ), ;, }, public, BigReal, (, String, val, ), {, d, =, new, BigDecimal, (]
[{, d, =, new, BigDecimal, (, val, ), ;, }, public, BigReal, (, String, val, ,, MathContext, mc, ), {]
[=, new, BigDecimal, (, val, ), ;, }, public, BigReal, (, String, val, ,, MathContext, mc, ), {, d, =]
[(, val, ), ;, }, public, BigReal, (, String, val, ,, MathContext, mc, ), {, d, =, new, BigDecimal, (]
[), ;, }, public, BigReal, (, String, val, ,, MathContext, mc, ), {, d, =, new, BigDecimal, (, val, ,]
[), {, d, =, new, BigDecimal, (, val, ,, mc, ), ;, }, public, RoundingMode, getRoundingMode, (, ), {, return]
[;, }, public, RoundingMode, getRoundingMode, (, ), {, return, roundingMode, ;, }, public, void, setRoundingMode, (, RoundingMode, roundingMode, ), {]
[;, }, public, RoundingMode, getRoundingMode, (, ), {, return, roundingMode, ;, }, public, void, setRoundingMode, (, RoundingMode, roundingMode, ), {]
[getRoundingMode, (, ), {, return, roundingMode, ;, }, public, void, setRoundingMode, (, RoundingMode, roundingMode, ), {, this, ., roundingMode, =]
[setRoundingMode, (, RoundingMode, roundingMode, ), {, this, ., roundingMode, =, roundingMode, ;, }, public, int, getScale, (, ), {, return]
[;, }, public, int, getScale, (, ), {, return, scale, ;, }, public, void, setScale, (, int, scale, ), {]
[;, }, public, int, getScale, (, ), {, return, scale, ;, }, public, void, setScale, (, int, scale, ), {]
[getScale, (, ), {, return, scale, ;, }, public, void, setScale, (, int, scale, ), {, this, ., scale, =]
[int, scale, ), {, this, ., scale, =, scale, ;, }, public, BigReal, add, (, BigReal, a, ), {, return]
[{, this, ., scale, =, scale, ;, }, public, BigReal, add, (, BigReal, a, ), {, return, new, BigReal, (]
[{, this, ., scale, =, scale, ;, }, public, BigReal, add, (, BigReal, a, ), {, return, new, BigReal, (]
[=, scale, ;, }, public, BigReal, add, (, BigReal, a, ), {, return, new, BigReal, (, d, ., add, (]
[=, scale, ;, }, public, BigReal, add, (, BigReal, a, ), {, return, new, BigReal, (, d, ., add, (]
[d, ., add, (, a, ., d, ), ), ;, }, public, BigReal, subtract, (, BigReal, a, ), {, return]
[(, a, ., d, ), ), ;, }, public, BigReal, subtract, (, BigReal, a, ), {, return, new, BigReal, (]
[(, a, ., d, ), ), ;, }, public, BigReal, subtract, (, BigReal, a, ), {, return, new, BigReal, (]
[), ), ;, }, public, BigReal, subtract, (, BigReal, a, ), {, return, new, BigReal, (, d, ., subtract, (]
[), ), ;, }, public, BigReal, subtract, (, BigReal, a, ), {, return, new, BigReal, (, d, ., subtract, (]
[BigReal, (, d, ., subtract, (, a, ., d, ), ), ;, }, public, BigReal, negate, (, ), {, return]
[., subtract, (, a, ., d, ), ), ;, }, public, BigReal, negate, (, ), {, return, new, BigReal, (]
[., subtract, (, a, ., d, ), ), ;, }, public, BigReal, negate, (, ), {, return, new, BigReal, (]
[., negate, (, ), ), ;, }, public, BigReal, divide, (, BigReal, a, ), throws, MathArithmeticException, {, try, {, return]
[), ), ;, }, public, BigReal, divide, (, BigReal, a, ), throws, MathArithmeticException, {, try, {, return, new, BigReal, (]
[), ), ;, }, public, BigReal, divide, (, BigReal, a, ), throws, MathArithmeticException, {, try, {, return, new, BigReal, (]
[public, BigReal, divide, (, BigReal, a, ), throws, MathArithmeticException, {, try, {, return, new, BigReal, (, d, ., divide, (]
[public, BigReal, divide, (, BigReal, a, ), throws, MathArithmeticException, {, try, {, return, new, BigReal, (, d, ., divide, (]
[BigReal, a, ), throws, MathArithmeticException, {, try, {, return, new, BigReal, (, d, ., divide, (, a, ., d, ,]
[), throws, MathArithmeticException, {, try, {, return, new, BigReal, (, d, ., divide, (, a, ., d, ,, scale, ,]
[divide, (, a, ., d, ,, scale, ,, roundingMode, ), ), ;, }, catch, (, ArithmeticException, e, ), {, throw]
[., d, ,, scale, ,, roundingMode, ), ), ;, }, catch, (, ArithmeticException, e, ), {, throw, new, MathArithmeticException, (]
[., d, ,, scale, ,, roundingMode, ), ), ;, }, catch, (, ArithmeticException, e, ), {, throw, new, MathArithmeticException, (]
[MathArithmeticException, (, LocalizedFormats, ., ZERO_NOT_ALLOWED, ), ;, }, }, public, BigReal, reciprocal, (, ), throws, MathArithmeticException, {, try, {, return]
[., ZERO_NOT_ALLOWED, ), ;, }, }, public, BigReal, reciprocal, (, ), throws, MathArithmeticException, {, try, {, return, new, BigReal, (]
[., ZERO_NOT_ALLOWED, ), ;, }, }, public, BigReal, reciprocal, (, ), throws, MathArithmeticException, {, try, {, return, new, BigReal, (]
[., ZERO_NOT_ALLOWED, ), ;, }, }, public, BigReal, reciprocal, (, ), throws, MathArithmeticException, {, try, {, return, new, BigReal, (]
[public, BigReal, reciprocal, (, ), throws, MathArithmeticException, {, try, {, return, new, BigReal, (, BigDecimal, ., ONE, ., divide, (]
[reciprocal, (, ), throws, MathArithmeticException, {, try, {, return, new, BigReal, (, BigDecimal, ., ONE, ., divide, (, d, ,]
[), throws, MathArithmeticException, {, try, {, return, new, BigReal, (, BigDecimal, ., ONE, ., divide, (, d, ,, scale, ,]
[ONE, ., divide, (, d, ,, scale, ,, roundingMode, ), ), ;, }, catch, (, ArithmeticException, e, ), {, throw]
[(, d, ,, scale, ,, roundingMode, ), ), ;, }, catch, (, ArithmeticException, e, ), {, throw, new, MathArithmeticException, (]
[(, d, ,, scale, ,, roundingMode, ), ), ;, }, catch, (, ArithmeticException, e, ), {, throw, new, MathArithmeticException, (]
[throw, new, MathArithmeticException, (, LocalizedFormats, ., ZERO_NOT_ALLOWED, ), ;, }, }, public, BigReal, multiply, (, BigReal, a, ), {, return]
[(, LocalizedFormats, ., ZERO_NOT_ALLOWED, ), ;, }, }, public, BigReal, multiply, (, BigReal, a, ), {, return, new, BigReal, (]
[(, LocalizedFormats, ., ZERO_NOT_ALLOWED, ), ;, }, }, public, BigReal, multiply, (, BigReal, a, ), {, return, new, BigReal, (]
[), ;, }, }, public, BigReal, multiply, (, BigReal, a, ), {, return, new, BigReal, (, d, ., multiply, (]
[), ;, }, }, public, BigReal, multiply, (, BigReal, a, ), {, return, new, BigReal, (, d, ., multiply, (]
[., multiply, (, a, ., d, ), ), ;, }, public, BigReal, multiply, (, final, int, n, ), {, return]
[a, ., d, ), ), ;, }, public, BigReal, multiply, (, final, int, n, ), {, return, new, BigReal, (]
[a, ., d, ), ), ;, }, public, BigReal, multiply, (, final, int, n, ), {, return, new, BigReal, (]
[), ;, }, public, BigReal, multiply, (, final, int, n, ), {, return, new, BigReal, (, d, ., multiply, (]
[public, BigReal, multiply, (, final, int, n, ), {, return, new, BigReal, (, d, ., multiply, (, new, BigDecimal, (]
[multiply, (, new, BigDecimal, (, n, ), ), ), ;, }, public, int, compareTo, (, BigReal, a, ), {, return]
[multiply, (, new, BigDecimal, (, n, ), ), ), ;, }, public, int, compareTo, (, BigReal, a, ), {, return]
[(, n, ), ), ), ;, }, public, int, compareTo, (, BigReal, a, ), {, return, d, ., compareTo, (]
[(, n, ), ), ), ;, }, public, int, compareTo, (, BigReal, a, ), {, return, d, ., compareTo, (]
[), {, return, d, ., compareTo, (, a, ., d, ), ;, }, public, double, doubleValue, (, ), {, return]
[), {, return, d, ., compareTo, (, a, ., d, ), ;, }, public, double, doubleValue, (, ), {, return]
[double, doubleValue, (, ), {, return, d, ., doubleValue, (, ), ;, }, public, BigDecimal, bigDecimalValue, (, ), {, return]
[bigDecimalValue, (, ), {, return, d, ;, }, @, Override, public, boolean, equals, (, Object, other, ), {, if, (]
[bigDecimalValue, (, ), {, return, d, ;, }, @, Override, public, boolean, equals, (, Object, other, ), {, if, (]
[), {, return, d, ;, }, @, Override, public, boolean, equals, (, Object, other, ), {, if, (, this, ==]
[;, }, @, Override, public, boolean, equals, (, Object, other, ), {, if, (, this, ==, other, ), {, return]
[boolean, equals, (, Object, other, ), {, if, (, this, ==, other, ), {, return, true, ;, }, if, (]
[boolean, equals, (, Object, other, ), {, if, (, this, ==, other, ), {, return, true, ;, }, if, (]
[{, if, (, this, ==, other, ), {, return, true, ;, }, if, (, other, instanceof, BigReal, ), {, return]
[{, if, (, this, ==, other, ), {, return, true, ;, }, if, (, other, instanceof, BigReal, ), {, return]
[==, other, ), {, return, true, ;, }, if, (, other, instanceof, BigReal, ), {, return, d, ., equals, (]
[==, other, ), {, return, true, ;, }, if, (, other, instanceof, BigReal, ), {, return, d, ., equals, (]
[other, ), {, return, true, ;, }, if, (, other, instanceof, BigReal, ), {, return, d, ., equals, (, (]
[return, true, ;, }, if, (, other, instanceof, BigReal, ), {, return, d, ., equals, (, (, (, BigReal, )]
[BigReal, ), {, return, d, ., equals, (, (, (, BigReal, ), other, ), ., d, ), ;, }, return]
[other, ), ., d, ), ;, }, return, false, ;, }, @, Override, public, int, hashCode, (, ), {, return]
[other, ), ., d, ), ;, }, return, false, ;, }, @, Override, public, int, hashCode, (, ), {, return]
[), {, return, d, ., hashCode, (, ), ;, }, public, Field, <, BigReal, >, getField, (, ), {, return]
[), {, return, d, ., hashCode, (, ), ;, }, public, Field, <, BigReal, >, getField, (, ), {, return]
