[=, new, java, ., util, ., ArrayList, (, ), ;, this, ., yCrosshairs, =, new, java, ., util, ., ArrayList]
[., xCrosshairs, =, new, java, ., util, ., ArrayList, (, ), ;, this, ., yCrosshairs, =, new, java, ., util]
[;, this, ., yCrosshairs, =, new, java, ., util, ., ArrayList, (, ), ;, }, public, void, addDomainCrosshair, (, Crosshair]
[=, new, java, ., util, ., ArrayList, (, ), ;, }, public, void, addDomainCrosshair, (, Crosshair, crosshair, ), {, if]
[., yCrosshairs, =, new, java, ., util, ., ArrayList, (, ), ;, }, public, void, addDomainCrosshair, (, Crosshair, crosshair, )]
[;, }, public, void, addDomainCrosshair, (, Crosshair, crosshair, ), {, if, (, crosshair, ==, null, ), {, throw, new, IllegalArgumentException]
[), {, throw, new, IllegalArgumentException, (, "Null 'crosshair' argument.", ), ;, }, this, ., xCrosshairs, ., add, (, crosshair, ), ;, crosshair]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'crosshair' argument.", ), ;, }, this, ., xCrosshairs, ., add, (, crosshair, )]
[), {, throw, new, IllegalArgumentException, (, "Null 'crosshair' argument.", ), ;, }, this, ., xCrosshairs, ., add, (, crosshair, ), ;, crosshair]
[;, }, this, ., xCrosshairs, ., add, (, crosshair, ), ;, crosshair, ., addPropertyChangeListener, (, this, ), ;, fireOverlayChanged, (]
[), ;, }, this, ., xCrosshairs, ., add, (, crosshair, ), ;, crosshair, ., addPropertyChangeListener, (, this, ), ;, fireOverlayChanged]
[;, crosshair, ., addPropertyChangeListener, (, this, ), ;, fireOverlayChanged, (, ), ;, }, public, void, removeDomainCrosshair, (, Crosshair, crosshair, )]
[., add, (, crosshair, ), ;, crosshair, ., addPropertyChangeListener, (, this, ), ;, fireOverlayChanged, (, ), ;, }, public, void]
[., xCrosshairs, ., add, (, crosshair, ), ;, crosshair, ., addPropertyChangeListener, (, this, ), ;, fireOverlayChanged, (, ), ;, }]
[), ;, crosshair, ., addPropertyChangeListener, (, this, ), ;, fireOverlayChanged, (, ), ;, }, public, void, removeDomainCrosshair, (, Crosshair, crosshair]
[;, fireOverlayChanged, (, ), ;, }, public, void, removeDomainCrosshair, (, Crosshair, crosshair, ), {, if, (, crosshair, ==, null, )]
[., addPropertyChangeListener, (, this, ), ;, fireOverlayChanged, (, ), ;, }, public, void, removeDomainCrosshair, (, Crosshair, crosshair, ), {, if]
[), ;, fireOverlayChanged, (, ), ;, }, public, void, removeDomainCrosshair, (, Crosshair, crosshair, ), {, if, (, crosshair, ==, null]
[;, }, public, void, removeDomainCrosshair, (, Crosshair, crosshair, ), {, if, (, crosshair, ==, null, ), {, throw, new, IllegalArgumentException]
[), {, throw, new, IllegalArgumentException, (, "Null 'crosshair' argument.", ), ;, }, if, (, this, ., xCrosshairs, ., remove, (, crosshair, )]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'crosshair' argument.", ), ;, }, if, (, this, ., xCrosshairs, ., remove, (]
[), {, throw, new, IllegalArgumentException, (, "Null 'crosshair' argument.", ), ;, }, if, (, this, ., xCrosshairs, ., remove, (, crosshair, )]
[;, }, if, (, this, ., xCrosshairs, ., remove, (, crosshair, ), ), {, crosshair, ., removePropertyChangeListener, (, this, )]
[), ;, }, if, (, this, ., xCrosshairs, ., remove, (, crosshair, ), ), {, crosshair, ., removePropertyChangeListener, (, this]
[), {, crosshair, ., removePropertyChangeListener, (, this, ), ;, fireOverlayChanged, (, ), ;, }, }, public, void, clearDomainCrosshairs, (, )]
[., remove, (, crosshair, ), ), {, crosshair, ., removePropertyChangeListener, (, this, ), ;, fireOverlayChanged, (, ), ;, }, }]
[., xCrosshairs, ., remove, (, crosshair, ), ), {, crosshair, ., removePropertyChangeListener, (, this, ), ;, fireOverlayChanged, (, ), ;]
[), ), {, crosshair, ., removePropertyChangeListener, (, this, ), ;, fireOverlayChanged, (, ), ;, }, }, public, void, clearDomainCrosshairs, (]
[;, fireOverlayChanged, (, ), ;, }, }, public, void, clearDomainCrosshairs, (, ), {, if, (, this, ., xCrosshairs, ., isEmpty]
[., removePropertyChangeListener, (, this, ), ;, fireOverlayChanged, (, ), ;, }, }, public, void, clearDomainCrosshairs, (, ), {, if, (]
[), ;, fireOverlayChanged, (, ), ;, }, }, public, void, clearDomainCrosshairs, (, ), {, if, (, this, ., xCrosshairs, .]
[;, }, }, public, void, clearDomainCrosshairs, (, ), {, if, (, this, ., xCrosshairs, ., isEmpty, (, ), ), {]
[), {, return, ;, }, List, crosshairs, =, getDomainCrosshairs, (, ), ;, for, (, int, i, =, 0, ;, i]
[., isEmpty, (, ), ), {, return, ;, }, List, crosshairs, =, getDomainCrosshairs, (, ), ;, for, (, int, i]
[., xCrosshairs, ., isEmpty, (, ), ), {, return, ;, }, List, crosshairs, =, getDomainCrosshairs, (, ), ;, for, (]
[;, for, (, int, i, =, 0, ;, i, <, crosshairs, ., size, (, ), ;, i, ++, ), {]
[;, i, <, crosshairs, ., size, (, ), ;, i, ++, ), {, Crosshair, c, =, (, Crosshair, ), crosshairs]
[;, i, ++, ), {, Crosshair, c, =, (, Crosshair, ), crosshairs, ., get, (, i, ), ;, this, .]
[<, crosshairs, ., size, (, ), ;, i, ++, ), {, Crosshair, c, =, (, Crosshair, ), crosshairs, ., get]
[;, i, ++, ), {, Crosshair, c, =, (, Crosshair, ), crosshairs, ., get, (, i, ), ;, this, .]
[., size, (, ), ;, i, ++, ), {, Crosshair, c, =, (, Crosshair, ), crosshairs, ., get, (, i]
[), {, Crosshair, c, =, (, Crosshair, ), crosshairs, ., get, (, i, ), ;, this, ., xCrosshairs, ., remove]
[++, ), {, Crosshair, c, =, (, Crosshair, ), crosshairs, ., get, (, i, ), ;, this, ., xCrosshairs, .]
[;, this, ., xCrosshairs, ., remove, (, c, ), ;, c, ., removePropertyChangeListener, (, this, ), ;, }, fireOverlayChanged, (]
[;, this, ., xCrosshairs, ., remove, (, c, ), ;, c, ., removePropertyChangeListener, (, this, ), ;, }, fireOverlayChanged, (]
[., get, (, i, ), ;, this, ., xCrosshairs, ., remove, (, c, ), ;, c, ., removePropertyChangeListener, (, this]
[), ;, this, ., xCrosshairs, ., remove, (, c, ), ;, c, ., removePropertyChangeListener, (, this, ), ;, }, fireOverlayChanged]
[;, c, ., removePropertyChangeListener, (, this, ), ;, }, fireOverlayChanged, (, ), ;, }, public, List, getDomainCrosshairs, (, ), {]
[., remove, (, c, ), ;, c, ., removePropertyChangeListener, (, this, ), ;, }, fireOverlayChanged, (, ), ;, }, public]
[., xCrosshairs, ., remove, (, c, ), ;, c, ., removePropertyChangeListener, (, this, ), ;, }, fireOverlayChanged, (, ), ;]
[), ;, c, ., removePropertyChangeListener, (, this, ), ;, }, fireOverlayChanged, (, ), ;, }, public, List, getDomainCrosshairs, (, )]
[;, }, fireOverlayChanged, (, ), ;, }, public, List, getDomainCrosshairs, (, ), {, return, new, ArrayList, (, this, ., xCrosshairs]
[., removePropertyChangeListener, (, this, ), ;, }, fireOverlayChanged, (, ), ;, }, public, List, getDomainCrosshairs, (, ), {, return, new]
[), ;, }, fireOverlayChanged, (, ), ;, }, public, List, getDomainCrosshairs, (, ), {, return, new, ArrayList, (, this, .]
[;, }, public, List, getDomainCrosshairs, (, ), {, return, new, ArrayList, (, this, ., xCrosshairs, ), ;, }, public, void]
[;, }, public, void, addRangeCrosshair, (, Crosshair, crosshair, ), {, if, (, crosshair, ==, null, ), {, throw, new, IllegalArgumentException]
[), ;, }, public, void, addRangeCrosshair, (, Crosshair, crosshair, ), {, if, (, crosshair, ==, null, ), {, throw, new]
[., xCrosshairs, ), ;, }, public, void, addRangeCrosshair, (, Crosshair, crosshair, ), {, if, (, crosshair, ==, null, ), {]
[), {, throw, new, IllegalArgumentException, (, "Null 'crosshair' argument.", ), ;, }, this, ., yCrosshairs, ., add, (, crosshair, ), ;, crosshair]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'crosshair' argument.", ), ;, }, this, ., yCrosshairs, ., add, (, crosshair, )]
[), {, throw, new, IllegalArgumentException, (, "Null 'crosshair' argument.", ), ;, }, this, ., yCrosshairs, ., add, (, crosshair, ), ;, crosshair]
[;, }, this, ., yCrosshairs, ., add, (, crosshair, ), ;, crosshair, ., addPropertyChangeListener, (, this, ), ;, fireOverlayChanged, (]
[), ;, }, this, ., yCrosshairs, ., add, (, crosshair, ), ;, crosshair, ., addPropertyChangeListener, (, this, ), ;, fireOverlayChanged]
[;, crosshair, ., addPropertyChangeListener, (, this, ), ;, fireOverlayChanged, (, ), ;, }, public, void, removeRangeCrosshair, (, Crosshair, crosshair, )]
[., add, (, crosshair, ), ;, crosshair, ., addPropertyChangeListener, (, this, ), ;, fireOverlayChanged, (, ), ;, }, public, void]
[., yCrosshairs, ., add, (, crosshair, ), ;, crosshair, ., addPropertyChangeListener, (, this, ), ;, fireOverlayChanged, (, ), ;, }]
[), ;, crosshair, ., addPropertyChangeListener, (, this, ), ;, fireOverlayChanged, (, ), ;, }, public, void, removeRangeCrosshair, (, Crosshair, crosshair]
[;, fireOverlayChanged, (, ), ;, }, public, void, removeRangeCrosshair, (, Crosshair, crosshair, ), {, if, (, crosshair, ==, null, )]
[., addPropertyChangeListener, (, this, ), ;, fireOverlayChanged, (, ), ;, }, public, void, removeRangeCrosshair, (, Crosshair, crosshair, ), {, if]
[), ;, fireOverlayChanged, (, ), ;, }, public, void, removeRangeCrosshair, (, Crosshair, crosshair, ), {, if, (, crosshair, ==, null]
[;, }, public, void, removeRangeCrosshair, (, Crosshair, crosshair, ), {, if, (, crosshair, ==, null, ), {, throw, new, IllegalArgumentException]
[), {, throw, new, IllegalArgumentException, (, "Null 'crosshair' argument.", ), ;, }, if, (, this, ., yCrosshairs, ., remove, (, crosshair, )]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'crosshair' argument.", ), ;, }, if, (, this, ., yCrosshairs, ., remove, (]
[), {, throw, new, IllegalArgumentException, (, "Null 'crosshair' argument.", ), ;, }, if, (, this, ., yCrosshairs, ., remove, (, crosshair, )]
[;, }, if, (, this, ., yCrosshairs, ., remove, (, crosshair, ), ), {, crosshair, ., removePropertyChangeListener, (, this, )]
[), ;, }, if, (, this, ., yCrosshairs, ., remove, (, crosshair, ), ), {, crosshair, ., removePropertyChangeListener, (, this]
[), {, crosshair, ., removePropertyChangeListener, (, this, ), ;, fireOverlayChanged, (, ), ;, }, }, public, void, clearRangeCrosshairs, (, )]
[., remove, (, crosshair, ), ), {, crosshair, ., removePropertyChangeListener, (, this, ), ;, fireOverlayChanged, (, ), ;, }, }]
[., yCrosshairs, ., remove, (, crosshair, ), ), {, crosshair, ., removePropertyChangeListener, (, this, ), ;, fireOverlayChanged, (, ), ;]
[), ), {, crosshair, ., removePropertyChangeListener, (, this, ), ;, fireOverlayChanged, (, ), ;, }, }, public, void, clearRangeCrosshairs, (]
[;, fireOverlayChanged, (, ), ;, }, }, public, void, clearRangeCrosshairs, (, ), {, if, (, this, ., yCrosshairs, ., isEmpty]
[., removePropertyChangeListener, (, this, ), ;, fireOverlayChanged, (, ), ;, }, }, public, void, clearRangeCrosshairs, (, ), {, if, (]
[), ;, fireOverlayChanged, (, ), ;, }, }, public, void, clearRangeCrosshairs, (, ), {, if, (, this, ., yCrosshairs, .]
[;, }, }, public, void, clearRangeCrosshairs, (, ), {, if, (, this, ., yCrosshairs, ., isEmpty, (, ), ), {]
[), {, return, ;, }, List, crosshairs, =, getRangeCrosshairs, (, ), ;, for, (, int, i, =, 0, ;, i]
[., isEmpty, (, ), ), {, return, ;, }, List, crosshairs, =, getRangeCrosshairs, (, ), ;, for, (, int, i]
[., yCrosshairs, ., isEmpty, (, ), ), {, return, ;, }, List, crosshairs, =, getRangeCrosshairs, (, ), ;, for, (]
[;, for, (, int, i, =, 0, ;, i, <, crosshairs, ., size, (, ), ;, i, ++, ), {]
[;, i, <, crosshairs, ., size, (, ), ;, i, ++, ), {, Crosshair, c, =, (, Crosshair, ), crosshairs]
[;, i, ++, ), {, Crosshair, c, =, (, Crosshair, ), crosshairs, ., get, (, i, ), ;, this, .]
[<, crosshairs, ., size, (, ), ;, i, ++, ), {, Crosshair, c, =, (, Crosshair, ), crosshairs, ., get]
[;, i, ++, ), {, Crosshair, c, =, (, Crosshair, ), crosshairs, ., get, (, i, ), ;, this, .]
[., size, (, ), ;, i, ++, ), {, Crosshair, c, =, (, Crosshair, ), crosshairs, ., get, (, i]
[), {, Crosshair, c, =, (, Crosshair, ), crosshairs, ., get, (, i, ), ;, this, ., yCrosshairs, ., remove]
[++, ), {, Crosshair, c, =, (, Crosshair, ), crosshairs, ., get, (, i, ), ;, this, ., yCrosshairs, .]
[;, this, ., yCrosshairs, ., remove, (, c, ), ;, c, ., removePropertyChangeListener, (, this, ), ;, }, fireOverlayChanged, (]
[;, this, ., yCrosshairs, ., remove, (, c, ), ;, c, ., removePropertyChangeListener, (, this, ), ;, }, fireOverlayChanged, (]
[., get, (, i, ), ;, this, ., yCrosshairs, ., remove, (, c, ), ;, c, ., removePropertyChangeListener, (, this]
[), ;, this, ., yCrosshairs, ., remove, (, c, ), ;, c, ., removePropertyChangeListener, (, this, ), ;, }, fireOverlayChanged]
[;, c, ., removePropertyChangeListener, (, this, ), ;, }, fireOverlayChanged, (, ), ;, }, public, List, getRangeCrosshairs, (, ), {]
[., remove, (, c, ), ;, c, ., removePropertyChangeListener, (, this, ), ;, }, fireOverlayChanged, (, ), ;, }, public]
[., yCrosshairs, ., remove, (, c, ), ;, c, ., removePropertyChangeListener, (, this, ), ;, }, fireOverlayChanged, (, ), ;]
[), ;, c, ., removePropertyChangeListener, (, this, ), ;, }, fireOverlayChanged, (, ), ;, }, public, List, getRangeCrosshairs, (, )]
[;, }, fireOverlayChanged, (, ), ;, }, public, List, getRangeCrosshairs, (, ), {, return, new, ArrayList, (, this, ., yCrosshairs]
[., removePropertyChangeListener, (, this, ), ;, }, fireOverlayChanged, (, ), ;, }, public, List, getRangeCrosshairs, (, ), {, return, new]
[), ;, }, fireOverlayChanged, (, ), ;, }, public, List, getRangeCrosshairs, (, ), {, return, new, ArrayList, (, this, .]
[;, }, public, List, getRangeCrosshairs, (, ), {, return, new, ArrayList, (, this, ., yCrosshairs, ), ;, }, public, void]
[;, }, public, void, propertyChange, (, PropertyChangeEvent, e, ), {, fireOverlayChanged, (, ), ;, }, public, void, paintOverlay, (, Graphics2D]
[), ;, }, public, void, propertyChange, (, PropertyChangeEvent, e, ), {, fireOverlayChanged, (, ), ;, }, public, void, paintOverlay, (]
[., yCrosshairs, ), ;, }, public, void, propertyChange, (, PropertyChangeEvent, e, ), {, fireOverlayChanged, (, ), ;, }, public, void]
[;, }, public, void, paintOverlay, (, Graphics2D, g2, ,, ChartPanel, chartPanel, ), {, Shape, savedClip, =, g2, ., getClip, (]
[;, Rectangle2D, dataArea, =, chartPanel, ., getScreenDataArea, (, ), ;, g2, ., clip, (, dataArea, ), ;, JFreeChart, chart, =]
[., getClip, (, ), ;, Rectangle2D, dataArea, =, chartPanel, ., getScreenDataArea, (, ), ;, g2, ., clip, (, dataArea, )]
[;, g2, ., clip, (, dataArea, ), ;, JFreeChart, chart, =, chartPanel, ., getChart, (, ), ;, XYPlot, plot, =]
[., getScreenDataArea, (, ), ;, g2, ., clip, (, dataArea, ), ;, JFreeChart, chart, =, chartPanel, ., getChart, (, )]
[;, JFreeChart, chart, =, chartPanel, ., getChart, (, ), ;, XYPlot, plot, =, (, XYPlot, ), chart, ., getPlot, (]
[., clip, (, dataArea, ), ;, JFreeChart, chart, =, chartPanel, ., getChart, (, ), ;, XYPlot, plot, =, (, XYPlot]
[), ;, JFreeChart, chart, =, chartPanel, ., getChart, (, ), ;, XYPlot, plot, =, (, XYPlot, ), chart, ., getPlot]
[;, XYPlot, plot, =, (, XYPlot, ), chart, ., getPlot, (, ), ;, ValueAxis, xAxis, =, plot, ., getDomainAxis, (]
[., getChart, (, ), ;, XYPlot, plot, =, (, XYPlot, ), chart, ., getPlot, (, ), ;, ValueAxis, xAxis, =]
[;, ValueAxis, xAxis, =, plot, ., getDomainAxis, (, ), ;, RectangleEdge, xAxisEdge, =, plot, ., getDomainAxisEdge, (, ), ;, Iterator]
[;, ValueAxis, xAxis, =, plot, ., getDomainAxis, (, ), ;, RectangleEdge, xAxisEdge, =, plot, ., getDomainAxisEdge, (, ), ;, Iterator]
[., getPlot, (, ), ;, ValueAxis, xAxis, =, plot, ., getDomainAxis, (, ), ;, RectangleEdge, xAxisEdge, =, plot, ., getDomainAxisEdge]
[;, RectangleEdge, xAxisEdge, =, plot, ., getDomainAxisEdge, (, ), ;, Iterator, iterator, =, this, ., xCrosshairs, ., iterator, (, )]
[., getDomainAxis, (, ), ;, RectangleEdge, xAxisEdge, =, plot, ., getDomainAxisEdge, (, ), ;, Iterator, iterator, =, this, ., xCrosshairs]
[;, Iterator, iterator, =, this, ., xCrosshairs, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), )]
[., getDomainAxisEdge, (, ), ;, Iterator, iterator, =, this, ., xCrosshairs, ., iterator, (, ), ;, while, (, iterator, .]
[;, while, (, iterator, ., hasNext, (, ), ), {, Crosshair, ch, =, (, Crosshair, ), iterator, ., next, (]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, Crosshair, ch, =, (, Crosshair, )]
[., xCrosshairs, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, Crosshair, ch, =, (]
[), {, Crosshair, ch, =, (, Crosshair, ), iterator, ., next, (, ), ;, if, (, ch, ., isVisible, (]
[., hasNext, (, ), ), {, Crosshair, ch, =, (, Crosshair, ), iterator, ., next, (, ), ;, if, (]
[;, if, (, ch, ., isVisible, (, ), ), {, double, x, =, ch, ., getValue, (, ), ;, double]
[;, if, (, ch, ., isVisible, (, ), ), {, double, x, =, ch, ., getValue, (, ), ;, double]
[., next, (, ), ;, if, (, ch, ., isVisible, (, ), ), {, double, x, =, ch, ., getValue]
[), {, double, x, =, ch, ., getValue, (, ), ;, double, xx, =, xAxis, ., valueToJava2D, (, x, ,]
[., isVisible, (, ), ), {, double, x, =, ch, ., getValue, (, ), ;, double, xx, =, xAxis, .]
[;, double, xx, =, xAxis, ., valueToJava2D, (, x, ,, dataArea, ,, xAxisEdge, ), ;, if, (, plot, ., getOrientation]
[., getValue, (, ), ;, double, xx, =, xAxis, ., valueToJava2D, (, x, ,, dataArea, ,, xAxisEdge, ), ;, if]
[;, if, (, plot, ., getOrientation, (, ), ==, PlotOrientation, ., VERTICAL, ), {, drawVerticalCrosshair, (, g2, ,, dataArea, ,]
[., valueToJava2D, (, x, ,, dataArea, ,, xAxisEdge, ), ;, if, (, plot, ., getOrientation, (, ), ==, PlotOrientation, .]
[,, dataArea, ,, xAxisEdge, ), ;, if, (, plot, ., getOrientation, (, ), ==, PlotOrientation, ., VERTICAL, ), {, drawVerticalCrosshair]
[,, xAxisEdge, ), ;, if, (, plot, ., getOrientation, (, ), ==, PlotOrientation, ., VERTICAL, ), {, drawVerticalCrosshair, (, g2]
[), ;, if, (, plot, ., getOrientation, (, ), ==, PlotOrientation, ., VERTICAL, ), {, drawVerticalCrosshair, (, g2, ,, dataArea]
[), {, drawVerticalCrosshair, (, g2, ,, dataArea, ,, xx, ,, ch, ), ;, }, else, {, drawHorizontalCrosshair, (, g2, ,]
[==, PlotOrientation, ., VERTICAL, ), {, drawVerticalCrosshair, (, g2, ,, dataArea, ,, xx, ,, ch, ), ;, }, else, {]
[., getOrientation, (, ), ==, PlotOrientation, ., VERTICAL, ), {, drawVerticalCrosshair, (, g2, ,, dataArea, ,, xx, ,, ch, )]
[), {, drawVerticalCrosshair, (, g2, ,, dataArea, ,, xx, ,, ch, ), ;, }, else, {, drawHorizontalCrosshair, (, g2, ,]
[., VERTICAL, ), {, drawVerticalCrosshair, (, g2, ,, dataArea, ,, xx, ,, ch, ), ;, }, else, {, drawHorizontalCrosshair, (]
[;, }, else, {, drawHorizontalCrosshair, (, g2, ,, dataArea, ,, xx, ,, ch, ), ;, }, }, }, ValueAxis, yAxis]
[,, dataArea, ,, xx, ,, ch, ), ;, }, else, {, drawHorizontalCrosshair, (, g2, ,, dataArea, ,, xx, ,, ch]
[,, xx, ,, ch, ), ;, }, else, {, drawHorizontalCrosshair, (, g2, ,, dataArea, ,, xx, ,, ch, ), ;]
[,, ch, ), ;, }, else, {, drawHorizontalCrosshair, (, g2, ,, dataArea, ,, xx, ,, ch, ), ;, }, }]
[), ;, }, else, {, drawHorizontalCrosshair, (, g2, ,, dataArea, ,, xx, ,, ch, ), ;, }, }, }, ValueAxis]
[;, }, }, }, ValueAxis, yAxis, =, plot, ., getRangeAxis, (, ), ;, RectangleEdge, yAxisEdge, =, plot, ., getRangeAxisEdge, (]
[,, dataArea, ,, xx, ,, ch, ), ;, }, }, }, ValueAxis, yAxis, =, plot, ., getRangeAxis, (, ), ;]
[,, xx, ,, ch, ), ;, }, }, }, ValueAxis, yAxis, =, plot, ., getRangeAxis, (, ), ;, RectangleEdge, yAxisEdge]
[,, ch, ), ;, }, }, }, ValueAxis, yAxis, =, plot, ., getRangeAxis, (, ), ;, RectangleEdge, yAxisEdge, =, plot]
[), ;, }, }, }, ValueAxis, yAxis, =, plot, ., getRangeAxis, (, ), ;, RectangleEdge, yAxisEdge, =, plot, ., getRangeAxisEdge]
[;, RectangleEdge, yAxisEdge, =, plot, ., getRangeAxisEdge, (, ), ;, iterator, =, this, ., yCrosshairs, ., iterator, (, ), ;]
[., getRangeAxis, (, ), ;, RectangleEdge, yAxisEdge, =, plot, ., getRangeAxisEdge, (, ), ;, iterator, =, this, ., yCrosshairs, .]
[;, iterator, =, this, ., yCrosshairs, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {]
[., getRangeAxisEdge, (, ), ;, iterator, =, this, ., yCrosshairs, ., iterator, (, ), ;, while, (, iterator, ., hasNext]
[=, this, ., yCrosshairs, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, Crosshair, ch]
[;, while, (, iterator, ., hasNext, (, ), ), {, Crosshair, ch, =, (, Crosshair, ), iterator, ., next, (]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, Crosshair, ch, =, (, Crosshair, )]
[., yCrosshairs, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, Crosshair, ch, =, (]
[), {, Crosshair, ch, =, (, Crosshair, ), iterator, ., next, (, ), ;, if, (, ch, ., isVisible, (]
[., hasNext, (, ), ), {, Crosshair, ch, =, (, Crosshair, ), iterator, ., next, (, ), ;, if, (]
[;, if, (, ch, ., isVisible, (, ), ), {, double, y, =, ch, ., getValue, (, ), ;, double]
[;, if, (, ch, ., isVisible, (, ), ), {, double, y, =, ch, ., getValue, (, ), ;, double]
[., next, (, ), ;, if, (, ch, ., isVisible, (, ), ), {, double, y, =, ch, ., getValue]
[), {, double, y, =, ch, ., getValue, (, ), ;, double, yy, =, yAxis, ., valueToJava2D, (, y, ,]
[., isVisible, (, ), ), {, double, y, =, ch, ., getValue, (, ), ;, double, yy, =, yAxis, .]
[;, double, yy, =, yAxis, ., valueToJava2D, (, y, ,, dataArea, ,, yAxisEdge, ), ;, if, (, plot, ., getOrientation]
[., getValue, (, ), ;, double, yy, =, yAxis, ., valueToJava2D, (, y, ,, dataArea, ,, yAxisEdge, ), ;, if]
[;, if, (, plot, ., getOrientation, (, ), ==, PlotOrientation, ., VERTICAL, ), {, drawHorizontalCrosshair, (, g2, ,, dataArea, ,]
[., valueToJava2D, (, y, ,, dataArea, ,, yAxisEdge, ), ;, if, (, plot, ., getOrientation, (, ), ==, PlotOrientation, .]
[,, dataArea, ,, yAxisEdge, ), ;, if, (, plot, ., getOrientation, (, ), ==, PlotOrientation, ., VERTICAL, ), {, drawHorizontalCrosshair]
[,, yAxisEdge, ), ;, if, (, plot, ., getOrientation, (, ), ==, PlotOrientation, ., VERTICAL, ), {, drawHorizontalCrosshair, (, g2]
[), ;, if, (, plot, ., getOrientation, (, ), ==, PlotOrientation, ., VERTICAL, ), {, drawHorizontalCrosshair, (, g2, ,, dataArea]
[), {, drawHorizontalCrosshair, (, g2, ,, dataArea, ,, yy, ,, ch, ), ;, }, else, {, drawVerticalCrosshair, (, g2, ,]
[==, PlotOrientation, ., VERTICAL, ), {, drawHorizontalCrosshair, (, g2, ,, dataArea, ,, yy, ,, ch, ), ;, }, else, {]
[., getOrientation, (, ), ==, PlotOrientation, ., VERTICAL, ), {, drawHorizontalCrosshair, (, g2, ,, dataArea, ,, yy, ,, ch, )]
[), {, drawHorizontalCrosshair, (, g2, ,, dataArea, ,, yy, ,, ch, ), ;, }, else, {, drawVerticalCrosshair, (, g2, ,]
[., VERTICAL, ), {, drawHorizontalCrosshair, (, g2, ,, dataArea, ,, yy, ,, ch, ), ;, }, else, {, drawVerticalCrosshair, (]
[;, }, else, {, drawVerticalCrosshair, (, g2, ,, dataArea, ,, yy, ,, ch, ), ;, }, }, }, g2, .]
[,, dataArea, ,, yy, ,, ch, ), ;, }, else, {, drawVerticalCrosshair, (, g2, ,, dataArea, ,, yy, ,, ch]
[,, yy, ,, ch, ), ;, }, else, {, drawVerticalCrosshair, (, g2, ,, dataArea, ,, yy, ,, ch, ), ;]
[,, ch, ), ;, }, else, {, drawVerticalCrosshair, (, g2, ,, dataArea, ,, yy, ,, ch, ), ;, }, }]
[), ;, }, else, {, drawVerticalCrosshair, (, g2, ,, dataArea, ,, yy, ,, ch, ), ;, }, }, }, g2]
[;, }, }, }, g2, ., setClip, (, savedClip, ), ;, }, protected, void, drawHorizontalCrosshair, (, Graphics2D, g2, ,, Rectangle2D]
[,, dataArea, ,, yy, ,, ch, ), ;, }, }, }, g2, ., setClip, (, savedClip, ), ;, }, protected]
[,, yy, ,, ch, ), ;, }, }, }, g2, ., setClip, (, savedClip, ), ;, }, protected, void, drawHorizontalCrosshair]
[,, ch, ), ;, }, }, }, g2, ., setClip, (, savedClip, ), ;, }, protected, void, drawHorizontalCrosshair, (, Graphics2D]
[), ;, }, }, }, g2, ., setClip, (, savedClip, ), ;, }, protected, void, drawHorizontalCrosshair, (, Graphics2D, g2, ,]
[;, }, protected, void, drawHorizontalCrosshair, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, double, y, ,, Crosshair, crosshair, ), {, if]
[., setClip, (, savedClip, ), ;, }, protected, void, drawHorizontalCrosshair, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, double, y, ,]
[), ;, }, protected, void, drawHorizontalCrosshair, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, double, y, ,, Crosshair, crosshair, ), {]
[), {, Line2D, line, =, new, Line2D, ., Double, (, dataArea, ., getMinX, (, ), ,, y, ,, dataArea, .]
[&&, y, <=, dataArea, ., getMaxY, (, ), ), {, Line2D, line, =, new, Line2D, ., Double, (, dataArea, .]
[>=, dataArea, ., getMinY, (, ), &&, y, <=, dataArea, ., getMaxY, (, ), ), {, Line2D, line, =, new]
[&&, y, <=, dataArea, ., getMaxY, (, ), ), {, Line2D, line, =, new, Line2D, ., Double, (, dataArea, .]
[., getMinY, (, ), &&, y, <=, dataArea, ., getMaxY, (, ), ), {, Line2D, line, =, new, Line2D, .]
[), {, Line2D, line, =, new, Line2D, ., Double, (, dataArea, ., getMinX, (, ), ,, y, ,, dataArea, .]
[<=, dataArea, ., getMaxY, (, ), ), {, Line2D, line, =, new, Line2D, ., Double, (, dataArea, ., getMinX, (]
[), {, Line2D, line, =, new, Line2D, ., Double, (, dataArea, ., getMinX, (, ), ,, y, ,, dataArea, .]
[., getMaxY, (, ), ), {, Line2D, line, =, new, Line2D, ., Double, (, dataArea, ., getMinX, (, ), ,]
[;, Paint, savedPaint, =, g2, ., getPaint, (, ), ;, Stroke, savedStroke, =, g2, ., getStroke, (, ), ;, g2]
[,, y, ,, dataArea, ., getMaxX, (, ), ,, y, ), ;, Paint, savedPaint, =, g2, ., getPaint, (, )]
[., getMinX, (, ), ,, y, ,, dataArea, ., getMaxX, (, ), ,, y, ), ;, Paint, savedPaint, =, g2]
[,, dataArea, ., getMaxX, (, ), ,, y, ), ;, Paint, savedPaint, =, g2, ., getPaint, (, ), ;, Stroke]
[,, y, ), ;, Paint, savedPaint, =, g2, ., getPaint, (, ), ;, Stroke, savedStroke, =, g2, ., getStroke, (]
[., getMaxX, (, ), ,, y, ), ;, Paint, savedPaint, =, g2, ., getPaint, (, ), ;, Stroke, savedStroke, =]
[), ;, Paint, savedPaint, =, g2, ., getPaint, (, ), ;, Stroke, savedStroke, =, g2, ., getStroke, (, ), ;]
[;, Stroke, savedStroke, =, g2, ., getStroke, (, ), ;, g2, ., setPaint, (, crosshair, ., getPaint, (, ), )]
[., getPaint, (, ), ;, Stroke, savedStroke, =, g2, ., getStroke, (, ), ;, g2, ., setPaint, (, crosshair, .]
[;, g2, ., setPaint, (, crosshair, ., getPaint, (, ), ), ;, g2, ., setStroke, (, crosshair, ., getStroke, (]
[., getStroke, (, ), ;, g2, ., setPaint, (, crosshair, ., getPaint, (, ), ), ;, g2, ., setStroke, (]
[;, g2, ., setStroke, (, crosshair, ., getStroke, (, ), ), ;, g2, ., draw, (, line, ), ;, if]
[., setPaint, (, crosshair, ., getPaint, (, ), ), ;, g2, ., setStroke, (, crosshair, ., getStroke, (, ), )]
[), ;, g2, ., setStroke, (, crosshair, ., getStroke, (, ), ), ;, g2, ., draw, (, line, ), ;]
[., getPaint, (, ), ), ;, g2, ., setStroke, (, crosshair, ., getStroke, (, ), ), ;, g2, ., draw]
[;, g2, ., draw, (, line, ), ;, if, (, crosshair, ., isLabelVisible, (, ), ), {, String, label, =]
[., setStroke, (, crosshair, ., getStroke, (, ), ), ;, g2, ., draw, (, line, ), ;, if, (, crosshair]
[), ;, g2, ., draw, (, line, ), ;, if, (, crosshair, ., isLabelVisible, (, ), ), {, String, label]
[., getStroke, (, ), ), ;, g2, ., draw, (, line, ), ;, if, (, crosshair, ., isLabelVisible, (, )]
[;, if, (, crosshair, ., isLabelVisible, (, ), ), {, String, label, =, crosshair, ., getLabelGenerator, (, ), ., generateLabel]
[., draw, (, line, ), ;, if, (, crosshair, ., isLabelVisible, (, ), ), {, String, label, =, crosshair, .]
[), ;, if, (, crosshair, ., isLabelVisible, (, ), ), {, String, label, =, crosshair, ., getLabelGenerator, (, ), .]
[), {, String, label, =, crosshair, ., getLabelGenerator, (, ), ., generateLabel, (, crosshair, ), ;, RectangleAnchor, anchor, =, crosshair]
[., isLabelVisible, (, ), ), {, String, label, =, crosshair, ., getLabelGenerator, (, ), ., generateLabel, (, crosshair, ), ;]
[;, RectangleAnchor, anchor, =, crosshair, ., getLabelAnchor, (, ), ;, Point2D, pt, =, calculateLabelPoint, (, line, ,, anchor, ,, 5]
[., generateLabel, (, crosshair, ), ;, RectangleAnchor, anchor, =, crosshair, ., getLabelAnchor, (, ), ;, Point2D, pt, =, calculateLabelPoint, (]
[., getLabelGenerator, (, ), ., generateLabel, (, crosshair, ), ;, RectangleAnchor, anchor, =, crosshair, ., getLabelAnchor, (, ), ;, Point2D]
[), ;, RectangleAnchor, anchor, =, crosshair, ., getLabelAnchor, (, ), ;, Point2D, pt, =, calculateLabelPoint, (, line, ,, anchor, ,]
[;, Point2D, pt, =, calculateLabelPoint, (, line, ,, anchor, ,, 5, ,, 5, ), ;, float, xx, =, (, float]
[., getLabelAnchor, (, ), ;, Point2D, pt, =, calculateLabelPoint, (, line, ,, anchor, ,, 5, ,, 5, ), ;, float]
[;, float, xx, =, (, float, ), pt, ., getX, (, ), ;, float, yy, =, (, float, ), pt]
[,, anchor, ,, 5, ,, 5, ), ;, float, xx, =, (, float, ), pt, ., getX, (, ), ;]
[,, 5, ,, 5, ), ;, float, xx, =, (, float, ), pt, ., getX, (, ), ;, float, yy]
[,, 5, ), ;, float, xx, =, (, float, ), pt, ., getX, (, ), ;, float, yy, =, (]
[), ;, float, xx, =, (, float, ), pt, ., getX, (, ), ;, float, yy, =, (, float, )]
[;, float, yy, =, (, float, ), pt, ., getY, (, ), ;, TextAnchor, alignPt, =, textAlignPtForLabelAnchorH, (, anchor, )]
[;, float, yy, =, (, float, ), pt, ., getY, (, ), ;, TextAnchor, alignPt, =, textAlignPtForLabelAnchorH, (, anchor, )]
[., getX, (, ), ;, float, yy, =, (, float, ), pt, ., getY, (, ), ;, TextAnchor, alignPt, =]
[;, TextAnchor, alignPt, =, textAlignPtForLabelAnchorH, (, anchor, ), ;, Shape, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,]
[;, TextAnchor, alignPt, =, textAlignPtForLabelAnchorH, (, anchor, ), ;, Shape, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,]
[., getY, (, ), ;, TextAnchor, alignPt, =, textAlignPtForLabelAnchorH, (, anchor, ), ;, Shape, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (]
[;, Shape, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ,, 0.0, ,]
[), ;, Shape, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ,, 0.0]
[;, if, (, !, dataArea, ., contains, (, hotspot, ., getBounds2D, (, ), ), ), {, anchor, =, flipAnchorV, (]
[., calculateRotatedStringBounds, (, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ,, 0.0, ,, TextAnchor, ., CENTER, ), ;]
[,, g2, ,, xx, ,, yy, ,, alignPt, ,, 0.0, ,, TextAnchor, ., CENTER, ), ;, if, (, !, dataArea]
[,, xx, ,, yy, ,, alignPt, ,, 0.0, ,, TextAnchor, ., CENTER, ), ;, if, (, !, dataArea, ., contains]
[,, yy, ,, alignPt, ,, 0.0, ,, TextAnchor, ., CENTER, ), ;, if, (, !, dataArea, ., contains, (, hotspot]
[,, alignPt, ,, 0.0, ,, TextAnchor, ., CENTER, ), ;, if, (, !, dataArea, ., contains, (, hotspot, ., getBounds2D]
[,, 0.0, ,, TextAnchor, ., CENTER, ), ;, if, (, !, dataArea, ., contains, (, hotspot, ., getBounds2D, (, )]
[,, TextAnchor, ., CENTER, ), ;, if, (, !, dataArea, ., contains, (, hotspot, ., getBounds2D, (, ), ), )]
[), ;, if, (, !, dataArea, ., contains, (, hotspot, ., getBounds2D, (, ), ), ), {, anchor, =, flipAnchorV]
[., CENTER, ), ;, if, (, !, dataArea, ., contains, (, hotspot, ., getBounds2D, (, ), ), ), {, anchor]
[), {, anchor, =, flipAnchorV, (, anchor, ), ;, pt, =, calculateLabelPoint, (, line, ,, anchor, ,, 5, ,, 5]
[), {, anchor, =, flipAnchorV, (, anchor, ), ;, pt, =, calculateLabelPoint, (, line, ,, anchor, ,, 5, ,, 5]
[., contains, (, hotspot, ., getBounds2D, (, ), ), ), {, anchor, =, flipAnchorV, (, anchor, ), ;, pt, =]
[), ), {, anchor, =, flipAnchorV, (, anchor, ), ;, pt, =, calculateLabelPoint, (, line, ,, anchor, ,, 5, ,]
[., getBounds2D, (, ), ), ), {, anchor, =, flipAnchorV, (, anchor, ), ;, pt, =, calculateLabelPoint, (, line, ,]
[=, flipAnchorV, (, anchor, ), ;, pt, =, calculateLabelPoint, (, line, ,, anchor, ,, 5, ,, 5, ), ;, xx]
[;, pt, =, calculateLabelPoint, (, line, ,, anchor, ,, 5, ,, 5, ), ;, xx, =, (, float, ), pt]
[), ;, pt, =, calculateLabelPoint, (, line, ,, anchor, ,, 5, ,, 5, ), ;, xx, =, (, float, )]
[=, calculateLabelPoint, (, line, ,, anchor, ,, 5, ,, 5, ), ;, xx, =, (, float, ), pt, ., getX]
[;, xx, =, (, float, ), pt, ., getX, (, ), ;, yy, =, (, float, ), pt, ., getY]
[,, anchor, ,, 5, ,, 5, ), ;, xx, =, (, float, ), pt, ., getX, (, ), ;, yy]
[,, 5, ,, 5, ), ;, xx, =, (, float, ), pt, ., getX, (, ), ;, yy, =, (]
[,, 5, ), ;, xx, =, (, float, ), pt, ., getX, (, ), ;, yy, =, (, float, )]
[), ;, xx, =, (, float, ), pt, ., getX, (, ), ;, yy, =, (, float, ), pt, .]
[=, (, float, ), pt, ., getX, (, ), ;, yy, =, (, float, ), pt, ., getY, (, )]
[;, yy, =, (, float, ), pt, ., getY, (, ), ;, alignPt, =, textAlignPtForLabelAnchorH, (, anchor, ), ;, hotspot]
[;, yy, =, (, float, ), pt, ., getY, (, ), ;, alignPt, =, textAlignPtForLabelAnchorH, (, anchor, ), ;, hotspot]
[., getX, (, ), ;, yy, =, (, float, ), pt, ., getY, (, ), ;, alignPt, =, textAlignPtForLabelAnchorH, (]
[=, (, float, ), pt, ., getY, (, ), ;, alignPt, =, textAlignPtForLabelAnchorH, (, anchor, ), ;, hotspot, =, TextUtilities]
[;, alignPt, =, textAlignPtForLabelAnchorH, (, anchor, ), ;, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,, xx, ,]
[;, alignPt, =, textAlignPtForLabelAnchorH, (, anchor, ), ;, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,, xx, ,]
[., getY, (, ), ;, alignPt, =, textAlignPtForLabelAnchorH, (, anchor, ), ;, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,]
[=, textAlignPtForLabelAnchorH, (, anchor, ), ;, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,, xx, ,, yy, ,]
[;, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ,, 0.0, ,, TextAnchor]
[), ;, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ,, 0.0, ,]
[=, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ,, 0.0, ,, TextAnchor, ., CENTER]
[;, }, g2, ., setPaint, (, crosshair, ., getLabelBackgroundPaint, (, ), ), ;, g2, ., fill, (, hotspot, ), ;]
[., calculateRotatedStringBounds, (, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ,, 0.0, ,, TextAnchor, ., CENTER, ), ;]
[,, g2, ,, xx, ,, yy, ,, alignPt, ,, 0.0, ,, TextAnchor, ., CENTER, ), ;, }, g2, ., setPaint]
[,, xx, ,, yy, ,, alignPt, ,, 0.0, ,, TextAnchor, ., CENTER, ), ;, }, g2, ., setPaint, (, crosshair]
[,, yy, ,, alignPt, ,, 0.0, ,, TextAnchor, ., CENTER, ), ;, }, g2, ., setPaint, (, crosshair, ., getLabelBackgroundPaint]
[,, alignPt, ,, 0.0, ,, TextAnchor, ., CENTER, ), ;, }, g2, ., setPaint, (, crosshair, ., getLabelBackgroundPaint, (, )]
[,, 0.0, ,, TextAnchor, ., CENTER, ), ;, }, g2, ., setPaint, (, crosshair, ., getLabelBackgroundPaint, (, ), ), ;]
[,, TextAnchor, ., CENTER, ), ;, }, g2, ., setPaint, (, crosshair, ., getLabelBackgroundPaint, (, ), ), ;, g2, .]
[), ;, }, g2, ., setPaint, (, crosshair, ., getLabelBackgroundPaint, (, ), ), ;, g2, ., fill, (, hotspot, )]
[., CENTER, ), ;, }, g2, ., setPaint, (, crosshair, ., getLabelBackgroundPaint, (, ), ), ;, g2, ., fill, (]
[;, g2, ., fill, (, hotspot, ), ;, g2, ., setPaint, (, crosshair, ., getLabelOutlinePaint, (, ), ), ;, g2]
[., setPaint, (, crosshair, ., getLabelBackgroundPaint, (, ), ), ;, g2, ., fill, (, hotspot, ), ;, g2, ., setPaint]
[), ;, g2, ., fill, (, hotspot, ), ;, g2, ., setPaint, (, crosshair, ., getLabelOutlinePaint, (, ), ), ;]
[., getLabelBackgroundPaint, (, ), ), ;, g2, ., fill, (, hotspot, ), ;, g2, ., setPaint, (, crosshair, ., getLabelOutlinePaint]
[;, g2, ., setPaint, (, crosshair, ., getLabelOutlinePaint, (, ), ), ;, g2, ., draw, (, hotspot, ), ;, TextUtilities]
[., fill, (, hotspot, ), ;, g2, ., setPaint, (, crosshair, ., getLabelOutlinePaint, (, ), ), ;, g2, ., draw]
[), ;, g2, ., setPaint, (, crosshair, ., getLabelOutlinePaint, (, ), ), ;, g2, ., draw, (, hotspot, ), ;]
[;, g2, ., draw, (, hotspot, ), ;, TextUtilities, ., drawAlignedString, (, label, ,, g2, ,, xx, ,, yy, ,]
[., setPaint, (, crosshair, ., getLabelOutlinePaint, (, ), ), ;, g2, ., draw, (, hotspot, ), ;, TextUtilities, ., drawAlignedString]
[), ;, g2, ., draw, (, hotspot, ), ;, TextUtilities, ., drawAlignedString, (, label, ,, g2, ,, xx, ,, yy]
[., getLabelOutlinePaint, (, ), ), ;, g2, ., draw, (, hotspot, ), ;, TextUtilities, ., drawAlignedString, (, label, ,, g2]
[;, TextUtilities, ., drawAlignedString, (, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ), ;, }, g2, ., setPaint]
[., draw, (, hotspot, ), ;, TextUtilities, ., drawAlignedString, (, label, ,, g2, ,, xx, ,, yy, ,, alignPt, )]
[), ;, TextUtilities, ., drawAlignedString, (, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ), ;, }, g2, .]
[;, }, g2, ., setPaint, (, savedPaint, ), ;, g2, ., setStroke, (, savedStroke, ), ;, }, }, protected, void]
[., drawAlignedString, (, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ), ;, }, g2, ., setPaint, (, savedPaint]
[,, g2, ,, xx, ,, yy, ,, alignPt, ), ;, }, g2, ., setPaint, (, savedPaint, ), ;, g2, .]
[,, xx, ,, yy, ,, alignPt, ), ;, }, g2, ., setPaint, (, savedPaint, ), ;, g2, ., setStroke, (]
[,, yy, ,, alignPt, ), ;, }, g2, ., setPaint, (, savedPaint, ), ;, g2, ., setStroke, (, savedStroke, )]
[,, alignPt, ), ;, }, g2, ., setPaint, (, savedPaint, ), ;, g2, ., setStroke, (, savedStroke, ), ;, }]
[), ;, }, g2, ., setPaint, (, savedPaint, ), ;, g2, ., setStroke, (, savedStroke, ), ;, }, }, protected]
[;, g2, ., setStroke, (, savedStroke, ), ;, }, }, protected, void, drawVerticalCrosshair, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,]
[., setPaint, (, savedPaint, ), ;, g2, ., setStroke, (, savedStroke, ), ;, }, }, protected, void, drawVerticalCrosshair, (, Graphics2D]
[), ;, g2, ., setStroke, (, savedStroke, ), ;, }, }, protected, void, drawVerticalCrosshair, (, Graphics2D, g2, ,, Rectangle2D, dataArea]
[;, }, }, protected, void, drawVerticalCrosshair, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, double, x, ,, Crosshair, crosshair, ), {]
[., setStroke, (, savedStroke, ), ;, }, }, protected, void, drawVerticalCrosshair, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, double, x]
[), ;, }, }, protected, void, drawVerticalCrosshair, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, double, x, ,, Crosshair, crosshair, )]
[), {, Line2D, line, =, new, Line2D, ., Double, (, x, ,, dataArea, ., getMinY, (, ), ,, x, ,]
[&&, x, <=, dataArea, ., getMaxX, (, ), ), {, Line2D, line, =, new, Line2D, ., Double, (, x, ,]
[>=, dataArea, ., getMinX, (, ), &&, x, <=, dataArea, ., getMaxX, (, ), ), {, Line2D, line, =, new]
[&&, x, <=, dataArea, ., getMaxX, (, ), ), {, Line2D, line, =, new, Line2D, ., Double, (, x, ,]
[., getMinX, (, ), &&, x, <=, dataArea, ., getMaxX, (, ), ), {, Line2D, line, =, new, Line2D, .]
[), {, Line2D, line, =, new, Line2D, ., Double, (, x, ,, dataArea, ., getMinY, (, ), ,, x, ,]
[<=, dataArea, ., getMaxX, (, ), ), {, Line2D, line, =, new, Line2D, ., Double, (, x, ,, dataArea, .]
[), {, Line2D, line, =, new, Line2D, ., Double, (, x, ,, dataArea, ., getMinY, (, ), ,, x, ,]
[., getMaxX, (, ), ), {, Line2D, line, =, new, Line2D, ., Double, (, x, ,, dataArea, ., getMinY, (]
[;, Paint, savedPaint, =, g2, ., getPaint, (, ), ;, Stroke, savedStroke, =, g2, ., getStroke, (, ), ;, g2]
[,, dataArea, ., getMinY, (, ), ,, x, ,, dataArea, ., getMaxY, (, ), ), ;, Paint, savedPaint, =, g2]
[,, x, ,, dataArea, ., getMaxY, (, ), ), ;, Paint, savedPaint, =, g2, ., getPaint, (, ), ;, Stroke]
[., getMinY, (, ), ,, x, ,, dataArea, ., getMaxY, (, ), ), ;, Paint, savedPaint, =, g2, ., getPaint]
[,, dataArea, ., getMaxY, (, ), ), ;, Paint, savedPaint, =, g2, ., getPaint, (, ), ;, Stroke, savedStroke, =]
[), ;, Paint, savedPaint, =, g2, ., getPaint, (, ), ;, Stroke, savedStroke, =, g2, ., getStroke, (, ), ;]
[., getMaxY, (, ), ), ;, Paint, savedPaint, =, g2, ., getPaint, (, ), ;, Stroke, savedStroke, =, g2, .]
[;, Stroke, savedStroke, =, g2, ., getStroke, (, ), ;, g2, ., setPaint, (, crosshair, ., getPaint, (, ), )]
[., getPaint, (, ), ;, Stroke, savedStroke, =, g2, ., getStroke, (, ), ;, g2, ., setPaint, (, crosshair, .]
[;, g2, ., setPaint, (, crosshair, ., getPaint, (, ), ), ;, g2, ., setStroke, (, crosshair, ., getStroke, (]
[., getStroke, (, ), ;, g2, ., setPaint, (, crosshair, ., getPaint, (, ), ), ;, g2, ., setStroke, (]
[;, g2, ., setStroke, (, crosshair, ., getStroke, (, ), ), ;, g2, ., draw, (, line, ), ;, if]
[., setPaint, (, crosshair, ., getPaint, (, ), ), ;, g2, ., setStroke, (, crosshair, ., getStroke, (, ), )]
[), ;, g2, ., setStroke, (, crosshair, ., getStroke, (, ), ), ;, g2, ., draw, (, line, ), ;]
[., getPaint, (, ), ), ;, g2, ., setStroke, (, crosshair, ., getStroke, (, ), ), ;, g2, ., draw]
[;, g2, ., draw, (, line, ), ;, if, (, crosshair, ., isLabelVisible, (, ), ), {, String, label, =]
[., setStroke, (, crosshair, ., getStroke, (, ), ), ;, g2, ., draw, (, line, ), ;, if, (, crosshair]
[), ;, g2, ., draw, (, line, ), ;, if, (, crosshair, ., isLabelVisible, (, ), ), {, String, label]
[., getStroke, (, ), ), ;, g2, ., draw, (, line, ), ;, if, (, crosshair, ., isLabelVisible, (, )]
[;, if, (, crosshair, ., isLabelVisible, (, ), ), {, String, label, =, crosshair, ., getLabelGenerator, (, ), ., generateLabel]
[., draw, (, line, ), ;, if, (, crosshair, ., isLabelVisible, (, ), ), {, String, label, =, crosshair, .]
[), ;, if, (, crosshair, ., isLabelVisible, (, ), ), {, String, label, =, crosshair, ., getLabelGenerator, (, ), .]
[), {, String, label, =, crosshair, ., getLabelGenerator, (, ), ., generateLabel, (, crosshair, ), ;, RectangleAnchor, anchor, =, crosshair]
[., isLabelVisible, (, ), ), {, String, label, =, crosshair, ., getLabelGenerator, (, ), ., generateLabel, (, crosshair, ), ;]
[;, RectangleAnchor, anchor, =, crosshair, ., getLabelAnchor, (, ), ;, Point2D, pt, =, calculateLabelPoint, (, line, ,, anchor, ,, 5]
[., generateLabel, (, crosshair, ), ;, RectangleAnchor, anchor, =, crosshair, ., getLabelAnchor, (, ), ;, Point2D, pt, =, calculateLabelPoint, (]
[., getLabelGenerator, (, ), ., generateLabel, (, crosshair, ), ;, RectangleAnchor, anchor, =, crosshair, ., getLabelAnchor, (, ), ;, Point2D]
[), ;, RectangleAnchor, anchor, =, crosshair, ., getLabelAnchor, (, ), ;, Point2D, pt, =, calculateLabelPoint, (, line, ,, anchor, ,]
[;, Point2D, pt, =, calculateLabelPoint, (, line, ,, anchor, ,, 5, ,, 5, ), ;, float, xx, =, (, float]
[., getLabelAnchor, (, ), ;, Point2D, pt, =, calculateLabelPoint, (, line, ,, anchor, ,, 5, ,, 5, ), ;, float]
[;, float, xx, =, (, float, ), pt, ., getX, (, ), ;, float, yy, =, (, float, ), pt]
[,, anchor, ,, 5, ,, 5, ), ;, float, xx, =, (, float, ), pt, ., getX, (, ), ;]
[,, 5, ,, 5, ), ;, float, xx, =, (, float, ), pt, ., getX, (, ), ;, float, yy]
[,, 5, ), ;, float, xx, =, (, float, ), pt, ., getX, (, ), ;, float, yy, =, (]
[), ;, float, xx, =, (, float, ), pt, ., getX, (, ), ;, float, yy, =, (, float, )]
[;, float, yy, =, (, float, ), pt, ., getY, (, ), ;, TextAnchor, alignPt, =, textAlignPtForLabelAnchorV, (, anchor, )]
[;, float, yy, =, (, float, ), pt, ., getY, (, ), ;, TextAnchor, alignPt, =, textAlignPtForLabelAnchorV, (, anchor, )]
[., getX, (, ), ;, float, yy, =, (, float, ), pt, ., getY, (, ), ;, TextAnchor, alignPt, =]
[;, TextAnchor, alignPt, =, textAlignPtForLabelAnchorV, (, anchor, ), ;, Shape, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,]
[;, TextAnchor, alignPt, =, textAlignPtForLabelAnchorV, (, anchor, ), ;, Shape, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,]
[., getY, (, ), ;, TextAnchor, alignPt, =, textAlignPtForLabelAnchorV, (, anchor, ), ;, Shape, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (]
[;, Shape, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ,, 0.0, ,]
[), ;, Shape, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ,, 0.0]
[;, if, (, !, dataArea, ., contains, (, hotspot, ., getBounds2D, (, ), ), ), {, anchor, =, flipAnchorH, (]
[., calculateRotatedStringBounds, (, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ,, 0.0, ,, TextAnchor, ., CENTER, ), ;]
[,, g2, ,, xx, ,, yy, ,, alignPt, ,, 0.0, ,, TextAnchor, ., CENTER, ), ;, if, (, !, dataArea]
[,, xx, ,, yy, ,, alignPt, ,, 0.0, ,, TextAnchor, ., CENTER, ), ;, if, (, !, dataArea, ., contains]
[,, yy, ,, alignPt, ,, 0.0, ,, TextAnchor, ., CENTER, ), ;, if, (, !, dataArea, ., contains, (, hotspot]
[,, alignPt, ,, 0.0, ,, TextAnchor, ., CENTER, ), ;, if, (, !, dataArea, ., contains, (, hotspot, ., getBounds2D]
[,, 0.0, ,, TextAnchor, ., CENTER, ), ;, if, (, !, dataArea, ., contains, (, hotspot, ., getBounds2D, (, )]
[,, TextAnchor, ., CENTER, ), ;, if, (, !, dataArea, ., contains, (, hotspot, ., getBounds2D, (, ), ), )]
[), ;, if, (, !, dataArea, ., contains, (, hotspot, ., getBounds2D, (, ), ), ), {, anchor, =, flipAnchorH]
[., CENTER, ), ;, if, (, !, dataArea, ., contains, (, hotspot, ., getBounds2D, (, ), ), ), {, anchor]
[), {, anchor, =, flipAnchorH, (, anchor, ), ;, pt, =, calculateLabelPoint, (, line, ,, anchor, ,, 5, ,, 5]
[), {, anchor, =, flipAnchorH, (, anchor, ), ;, pt, =, calculateLabelPoint, (, line, ,, anchor, ,, 5, ,, 5]
[., contains, (, hotspot, ., getBounds2D, (, ), ), ), {, anchor, =, flipAnchorH, (, anchor, ), ;, pt, =]
[), ), {, anchor, =, flipAnchorH, (, anchor, ), ;, pt, =, calculateLabelPoint, (, line, ,, anchor, ,, 5, ,]
[., getBounds2D, (, ), ), ), {, anchor, =, flipAnchorH, (, anchor, ), ;, pt, =, calculateLabelPoint, (, line, ,]
[=, flipAnchorH, (, anchor, ), ;, pt, =, calculateLabelPoint, (, line, ,, anchor, ,, 5, ,, 5, ), ;, xx]
[;, pt, =, calculateLabelPoint, (, line, ,, anchor, ,, 5, ,, 5, ), ;, xx, =, (, float, ), pt]
[), ;, pt, =, calculateLabelPoint, (, line, ,, anchor, ,, 5, ,, 5, ), ;, xx, =, (, float, )]
[=, calculateLabelPoint, (, line, ,, anchor, ,, 5, ,, 5, ), ;, xx, =, (, float, ), pt, ., getX]
[;, xx, =, (, float, ), pt, ., getX, (, ), ;, yy, =, (, float, ), pt, ., getY]
[,, anchor, ,, 5, ,, 5, ), ;, xx, =, (, float, ), pt, ., getX, (, ), ;, yy]
[,, 5, ,, 5, ), ;, xx, =, (, float, ), pt, ., getX, (, ), ;, yy, =, (]
[,, 5, ), ;, xx, =, (, float, ), pt, ., getX, (, ), ;, yy, =, (, float, )]
[), ;, xx, =, (, float, ), pt, ., getX, (, ), ;, yy, =, (, float, ), pt, .]
[=, (, float, ), pt, ., getX, (, ), ;, yy, =, (, float, ), pt, ., getY, (, )]
[;, yy, =, (, float, ), pt, ., getY, (, ), ;, alignPt, =, textAlignPtForLabelAnchorV, (, anchor, ), ;, hotspot]
[;, yy, =, (, float, ), pt, ., getY, (, ), ;, alignPt, =, textAlignPtForLabelAnchorV, (, anchor, ), ;, hotspot]
[., getX, (, ), ;, yy, =, (, float, ), pt, ., getY, (, ), ;, alignPt, =, textAlignPtForLabelAnchorV, (]
[=, (, float, ), pt, ., getY, (, ), ;, alignPt, =, textAlignPtForLabelAnchorV, (, anchor, ), ;, hotspot, =, TextUtilities]
[;, alignPt, =, textAlignPtForLabelAnchorV, (, anchor, ), ;, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,, xx, ,]
[;, alignPt, =, textAlignPtForLabelAnchorV, (, anchor, ), ;, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,, xx, ,]
[., getY, (, ), ;, alignPt, =, textAlignPtForLabelAnchorV, (, anchor, ), ;, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,]
[=, textAlignPtForLabelAnchorV, (, anchor, ), ;, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,, xx, ,, yy, ,]
[;, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ,, 0.0, ,, TextAnchor]
[), ;, hotspot, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ,, 0.0, ,]
[=, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ,, 0.0, ,, TextAnchor, ., CENTER]
[;, }, g2, ., setPaint, (, crosshair, ., getLabelBackgroundPaint, (, ), ), ;, g2, ., fill, (, hotspot, ), ;]
[., calculateRotatedStringBounds, (, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ,, 0.0, ,, TextAnchor, ., CENTER, ), ;]
[,, g2, ,, xx, ,, yy, ,, alignPt, ,, 0.0, ,, TextAnchor, ., CENTER, ), ;, }, g2, ., setPaint]
[,, xx, ,, yy, ,, alignPt, ,, 0.0, ,, TextAnchor, ., CENTER, ), ;, }, g2, ., setPaint, (, crosshair]
[,, yy, ,, alignPt, ,, 0.0, ,, TextAnchor, ., CENTER, ), ;, }, g2, ., setPaint, (, crosshair, ., getLabelBackgroundPaint]
[,, alignPt, ,, 0.0, ,, TextAnchor, ., CENTER, ), ;, }, g2, ., setPaint, (, crosshair, ., getLabelBackgroundPaint, (, )]
[,, 0.0, ,, TextAnchor, ., CENTER, ), ;, }, g2, ., setPaint, (, crosshair, ., getLabelBackgroundPaint, (, ), ), ;]
[,, TextAnchor, ., CENTER, ), ;, }, g2, ., setPaint, (, crosshair, ., getLabelBackgroundPaint, (, ), ), ;, g2, .]
[), ;, }, g2, ., setPaint, (, crosshair, ., getLabelBackgroundPaint, (, ), ), ;, g2, ., fill, (, hotspot, )]
[., CENTER, ), ;, }, g2, ., setPaint, (, crosshair, ., getLabelBackgroundPaint, (, ), ), ;, g2, ., fill, (]
[;, g2, ., fill, (, hotspot, ), ;, g2, ., setPaint, (, crosshair, ., getLabelOutlinePaint, (, ), ), ;, g2]
[., setPaint, (, crosshair, ., getLabelBackgroundPaint, (, ), ), ;, g2, ., fill, (, hotspot, ), ;, g2, ., setPaint]
[), ;, g2, ., fill, (, hotspot, ), ;, g2, ., setPaint, (, crosshair, ., getLabelOutlinePaint, (, ), ), ;]
[., getLabelBackgroundPaint, (, ), ), ;, g2, ., fill, (, hotspot, ), ;, g2, ., setPaint, (, crosshair, ., getLabelOutlinePaint]
[;, g2, ., setPaint, (, crosshair, ., getLabelOutlinePaint, (, ), ), ;, g2, ., draw, (, hotspot, ), ;, TextUtilities]
[., fill, (, hotspot, ), ;, g2, ., setPaint, (, crosshair, ., getLabelOutlinePaint, (, ), ), ;, g2, ., draw]
[), ;, g2, ., setPaint, (, crosshair, ., getLabelOutlinePaint, (, ), ), ;, g2, ., draw, (, hotspot, ), ;]
[;, g2, ., draw, (, hotspot, ), ;, TextUtilities, ., drawAlignedString, (, label, ,, g2, ,, xx, ,, yy, ,]
[., setPaint, (, crosshair, ., getLabelOutlinePaint, (, ), ), ;, g2, ., draw, (, hotspot, ), ;, TextUtilities, ., drawAlignedString]
[), ;, g2, ., draw, (, hotspot, ), ;, TextUtilities, ., drawAlignedString, (, label, ,, g2, ,, xx, ,, yy]
[., getLabelOutlinePaint, (, ), ), ;, g2, ., draw, (, hotspot, ), ;, TextUtilities, ., drawAlignedString, (, label, ,, g2]
[;, TextUtilities, ., drawAlignedString, (, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ), ;, }, g2, ., setPaint]
[., draw, (, hotspot, ), ;, TextUtilities, ., drawAlignedString, (, label, ,, g2, ,, xx, ,, yy, ,, alignPt, )]
[), ;, TextUtilities, ., drawAlignedString, (, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ), ;, }, g2, .]
[;, }, g2, ., setPaint, (, savedPaint, ), ;, g2, ., setStroke, (, savedStroke, ), ;, }, }, private, Point2D]
[., drawAlignedString, (, label, ,, g2, ,, xx, ,, yy, ,, alignPt, ), ;, }, g2, ., setPaint, (, savedPaint]
[,, g2, ,, xx, ,, yy, ,, alignPt, ), ;, }, g2, ., setPaint, (, savedPaint, ), ;, g2, .]
[,, xx, ,, yy, ,, alignPt, ), ;, }, g2, ., setPaint, (, savedPaint, ), ;, g2, ., setStroke, (]
[,, yy, ,, alignPt, ), ;, }, g2, ., setPaint, (, savedPaint, ), ;, g2, ., setStroke, (, savedStroke, )]
[,, alignPt, ), ;, }, g2, ., setPaint, (, savedPaint, ), ;, g2, ., setStroke, (, savedStroke, ), ;, }]
[), ;, }, g2, ., setPaint, (, savedPaint, ), ;, g2, ., setStroke, (, savedStroke, ), ;, }, }, private]
[;, g2, ., setStroke, (, savedStroke, ), ;, }, }, private, Point2D, calculateLabelPoint, (, Line2D, line, ,, RectangleAnchor, anchor, ,]
[., setPaint, (, savedPaint, ), ;, g2, ., setStroke, (, savedStroke, ), ;, }, }, private, Point2D, calculateLabelPoint, (, Line2D]
[), ;, g2, ., setStroke, (, savedStroke, ), ;, }, }, private, Point2D, calculateLabelPoint, (, Line2D, line, ,, RectangleAnchor, anchor]
[;, }, }, private, Point2D, calculateLabelPoint, (, Line2D, line, ,, RectangleAnchor, anchor, ,, double, deltaX, ,, double, deltaY, ), {]
[., setStroke, (, savedStroke, ), ;, }, }, private, Point2D, calculateLabelPoint, (, Line2D, line, ,, RectangleAnchor, anchor, ,, double, deltaX]
[), ;, }, }, private, Point2D, calculateLabelPoint, (, Line2D, line, ,, RectangleAnchor, anchor, ,, double, deltaX, ,, double, deltaY, )]
[;, double, y, =, 0.0, ;, boolean, left, =, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ||, anchor, ==, RectangleAnchor, .]
[;, boolean, left, =, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ||, anchor, ==, RectangleAnchor, ., LEFT, ||, anchor, ==, RectangleAnchor]
[;, boolean, right, =, (, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, RectangleAnchor, ., RIGHT, ||, anchor, ==, RectangleAnchor]
[), ;, boolean, right, =, (, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, RectangleAnchor, ., RIGHT, ||, anchor, ==]
[||, anchor, ==, RectangleAnchor, ., TOP_LEFT, ), ;, boolean, right, =, (, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ||, anchor, ==]
[||, anchor, ==, RectangleAnchor, ., LEFT, ||, anchor, ==, RectangleAnchor, ., TOP_LEFT, ), ;, boolean, right, =, (, anchor, ==]
[==, RectangleAnchor, ., BOTTOM_LEFT, ||, anchor, ==, RectangleAnchor, ., LEFT, ||, anchor, ==, RectangleAnchor, ., TOP_LEFT, ), ;, boolean, right]
[||, anchor, ==, RectangleAnchor, ., LEFT, ||, anchor, ==, RectangleAnchor, ., TOP_LEFT, ), ;, boolean, right, =, (, anchor, ==]
[., BOTTOM_LEFT, ||, anchor, ==, RectangleAnchor, ., LEFT, ||, anchor, ==, RectangleAnchor, ., TOP_LEFT, ), ;, boolean, right, =, (]
[||, anchor, ==, RectangleAnchor, ., TOP_LEFT, ), ;, boolean, right, =, (, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ||, anchor, ==]
[==, RectangleAnchor, ., LEFT, ||, anchor, ==, RectangleAnchor, ., TOP_LEFT, ), ;, boolean, right, =, (, anchor, ==, RectangleAnchor, .]
[||, anchor, ==, RectangleAnchor, ., TOP_LEFT, ), ;, boolean, right, =, (, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ||, anchor, ==]
[., LEFT, ||, anchor, ==, RectangleAnchor, ., TOP_LEFT, ), ;, boolean, right, =, (, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ||]
[), ;, boolean, right, =, (, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, RectangleAnchor, ., RIGHT, ||, anchor, ==]
[==, RectangleAnchor, ., TOP_LEFT, ), ;, boolean, right, =, (, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, RectangleAnchor, .]
[), ;, boolean, right, =, (, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, RectangleAnchor, ., RIGHT, ||, anchor, ==]
[., TOP_LEFT, ), ;, boolean, right, =, (, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, RectangleAnchor, ., RIGHT, ||]
[;, boolean, top, =, (, anchor, ==, RectangleAnchor, ., TOP_LEFT, ||, anchor, ==, RectangleAnchor, ., TOP, ||, anchor, ==, RectangleAnchor]
[), ;, boolean, top, =, (, anchor, ==, RectangleAnchor, ., TOP_LEFT, ||, anchor, ==, RectangleAnchor, ., TOP, ||, anchor, ==]
[||, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), ;, boolean, top, =, (, anchor, ==, RectangleAnchor, ., TOP_LEFT, ||, anchor, ==]
[||, anchor, ==, RectangleAnchor, ., RIGHT, ||, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), ;, boolean, top, =, (, anchor, ==]
[==, RectangleAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, RectangleAnchor, ., RIGHT, ||, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), ;, boolean, top]
[||, anchor, ==, RectangleAnchor, ., RIGHT, ||, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), ;, boolean, top, =, (, anchor, ==]
[., BOTTOM_RIGHT, ||, anchor, ==, RectangleAnchor, ., RIGHT, ||, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), ;, boolean, top, =, (]
[||, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), ;, boolean, top, =, (, anchor, ==, RectangleAnchor, ., TOP_LEFT, ||, anchor, ==]
[==, RectangleAnchor, ., RIGHT, ||, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), ;, boolean, top, =, (, anchor, ==, RectangleAnchor, .]
[||, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), ;, boolean, top, =, (, anchor, ==, RectangleAnchor, ., TOP_LEFT, ||, anchor, ==]
[., RIGHT, ||, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), ;, boolean, top, =, (, anchor, ==, RectangleAnchor, ., TOP_LEFT, ||]
[), ;, boolean, top, =, (, anchor, ==, RectangleAnchor, ., TOP_LEFT, ||, anchor, ==, RectangleAnchor, ., TOP, ||, anchor, ==]
[==, RectangleAnchor, ., TOP_RIGHT, ), ;, boolean, top, =, (, anchor, ==, RectangleAnchor, ., TOP_LEFT, ||, anchor, ==, RectangleAnchor, .]
[), ;, boolean, top, =, (, anchor, ==, RectangleAnchor, ., TOP_LEFT, ||, anchor, ==, RectangleAnchor, ., TOP, ||, anchor, ==]
[., TOP_RIGHT, ), ;, boolean, top, =, (, anchor, ==, RectangleAnchor, ., TOP_LEFT, ||, anchor, ==, RectangleAnchor, ., TOP, ||]
[;, boolean, bottom, =, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ||, anchor, ==, RectangleAnchor, ., BOTTOM, ||, anchor, ==, RectangleAnchor]
[), ;, boolean, bottom, =, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ||, anchor, ==, RectangleAnchor, ., BOTTOM, ||, anchor, ==]
[||, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), ;, boolean, bottom, =, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ||, anchor, ==]
[||, anchor, ==, RectangleAnchor, ., TOP, ||, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), ;, boolean, bottom, =, (, anchor, ==]
[==, RectangleAnchor, ., TOP_LEFT, ||, anchor, ==, RectangleAnchor, ., TOP, ||, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), ;, boolean, bottom]
[||, anchor, ==, RectangleAnchor, ., TOP, ||, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), ;, boolean, bottom, =, (, anchor, ==]
[., TOP_LEFT, ||, anchor, ==, RectangleAnchor, ., TOP, ||, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), ;, boolean, bottom, =, (]
[||, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), ;, boolean, bottom, =, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ||, anchor, ==]
[==, RectangleAnchor, ., TOP, ||, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), ;, boolean, bottom, =, (, anchor, ==, RectangleAnchor, .]
[||, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), ;, boolean, bottom, =, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ||, anchor, ==]
[., TOP, ||, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), ;, boolean, bottom, =, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ||]
[), ;, boolean, bottom, =, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ||, anchor, ==, RectangleAnchor, ., BOTTOM, ||, anchor, ==]
[==, RectangleAnchor, ., TOP_RIGHT, ), ;, boolean, bottom, =, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ||, anchor, ==, RectangleAnchor, .]
[), ;, boolean, bottom, =, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ||, anchor, ==, RectangleAnchor, ., BOTTOM, ||, anchor, ==]
[., TOP_RIGHT, ), ;, boolean, bottom, =, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ||, anchor, ==, RectangleAnchor, ., BOTTOM, ||]
[;, Rectangle, rect, =, line, ., getBounds, (, ), ;, if, (, line, ., getX1, (, ), ==, line, .]
[), ;, Rectangle, rect, =, line, ., getBounds, (, ), ;, if, (, line, ., getX1, (, ), ==, line]
[||, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ), ;, Rectangle, rect, =, line, ., getBounds, (, ), ;, if, (, line]
[||, anchor, ==, RectangleAnchor, ., BOTTOM, ||, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ), ;, Rectangle, rect, =, line, ., getBounds]
[==, RectangleAnchor, ., BOTTOM_LEFT, ||, anchor, ==, RectangleAnchor, ., BOTTOM, ||, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ), ;, Rectangle, rect]
[||, anchor, ==, RectangleAnchor, ., BOTTOM, ||, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ), ;, Rectangle, rect, =, line, ., getBounds]
[., BOTTOM_LEFT, ||, anchor, ==, RectangleAnchor, ., BOTTOM, ||, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ), ;, Rectangle, rect, =, line]
[||, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ), ;, Rectangle, rect, =, line, ., getBounds, (, ), ;, if, (, line]
[==, RectangleAnchor, ., BOTTOM, ||, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ), ;, Rectangle, rect, =, line, ., getBounds, (, )]
[||, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ), ;, Rectangle, rect, =, line, ., getBounds, (, ), ;, if, (, line]
[., BOTTOM, ||, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ), ;, Rectangle, rect, =, line, ., getBounds, (, ), ;, if]
[), ;, Rectangle, rect, =, line, ., getBounds, (, ), ;, if, (, line, ., getX1, (, ), ==, line]
[==, RectangleAnchor, ., BOTTOM_RIGHT, ), ;, Rectangle, rect, =, line, ., getBounds, (, ), ;, if, (, line, ., getX1]
[), ;, Rectangle, rect, =, line, ., getBounds, (, ), ;, if, (, line, ., getX1, (, ), ==, line]
[., BOTTOM_RIGHT, ), ;, Rectangle, rect, =, line, ., getBounds, (, ), ;, if, (, line, ., getX1, (, )]
[;, if, (, line, ., getX1, (, ), ==, line, ., getX2, (, ), ), {, x, =, line, .]
[., getBounds, (, ), ;, if, (, line, ., getX1, (, ), ==, line, ., getX2, (, ), ), {]
[), {, x, =, line, ., getX1, (, ), ;, y, =, (, line, ., getY1, (, ), +, line]
[==, line, ., getX2, (, ), ), {, x, =, line, ., getX1, (, ), ;, y, =, (, line]
[., getX1, (, ), ==, line, ., getX2, (, ), ), {, x, =, line, ., getX1, (, ), ;]
[), {, x, =, line, ., getX1, (, ), ;, y, =, (, line, ., getY1, (, ), +, line]
[., getX2, (, ), ), {, x, =, line, ., getX1, (, ), ;, y, =, (, line, ., getY1]
[=, line, ., getX1, (, ), ;, y, =, (, line, ., getY1, (, ), +, line, ., getY2, (]
[;, y, =, (, line, ., getY1, (, ), +, line, ., getY2, (, ), ), /, 2.0, ;, if]
[., getX1, (, ), ;, y, =, (, line, ., getY1, (, ), +, line, ., getY2, (, ), )]
[=, (, line, ., getY1, (, ), +, line, ., getY2, (, ), ), /, 2.0, ;, if, (, left]
[;, if, (, left, ), {, x, =, x, -, deltaX, ;, }, if, (, right, ), {, x, =]
[/, 2.0, ;, if, (, left, ), {, x, =, x, -, deltaX, ;, }, if, (, right, ), {]
[), /, 2.0, ;, if, (, left, ), {, x, =, x, -, deltaX, ;, }, if, (, right, )]
[+, line, ., getY2, (, ), ), /, 2.0, ;, if, (, left, ), {, x, =, x, -, deltaX]
[., getY1, (, ), +, line, ., getY2, (, ), ), /, 2.0, ;, if, (, left, ), {, x]
[), /, 2.0, ;, if, (, left, ), {, x, =, x, -, deltaX, ;, }, if, (, right, )]
[., getY2, (, ), ), /, 2.0, ;, if, (, left, ), {, x, =, x, -, deltaX, ;, }]
[;, if, (, left, ), {, x, =, x, -, deltaX, ;, }, if, (, right, ), {, x, =]
[), {, x, =, x, -, deltaX, ;, }, if, (, right, ), {, x, =, x, +, deltaX, ;]
[=, x, -, deltaX, ;, }, if, (, right, ), {, x, =, x, +, deltaX, ;, }, if, (]
[;, }, if, (, right, ), {, x, =, x, +, deltaX, ;, }, if, (, top, ), {, y]
[-, deltaX, ;, }, if, (, right, ), {, x, =, x, +, deltaX, ;, }, if, (, top, )]
[;, }, if, (, right, ), {, x, =, x, +, deltaX, ;, }, if, (, top, ), {, y]
[), {, x, =, x, +, deltaX, ;, }, if, (, top, ), {, y, =, Math, ., min, (]
[=, x, +, deltaX, ;, }, if, (, top, ), {, y, =, Math, ., min, (, line, ., getY1]
[;, }, if, (, top, ), {, y, =, Math, ., min, (, line, ., getY1, (, ), ,, line]
[+, deltaX, ;, }, if, (, top, ), {, y, =, Math, ., min, (, line, ., getY1, (, )]
[;, }, if, (, top, ), {, y, =, Math, ., min, (, line, ., getY1, (, ), ,, line]
[), {, y, =, Math, ., min, (, line, ., getY1, (, ), ,, line, ., getY2, (, ), )]
[=, Math, ., min, (, line, ., getY1, (, ), ,, line, ., getY2, (, ), ), +, deltaY, ;]
[;, }, if, (, bottom, ), {, y, =, Math, ., max, (, line, ., getY1, (, ), ,, line]
[+, deltaY, ;, }, if, (, bottom, ), {, y, =, Math, ., max, (, line, ., getY1, (, )]
[., min, (, line, ., getY1, (, ), ,, line, ., getY2, (, ), ), +, deltaY, ;, }, if]
[,, line, ., getY2, (, ), ), +, deltaY, ;, }, if, (, bottom, ), {, y, =, Math, .]
[., getY1, (, ), ,, line, ., getY2, (, ), ), +, deltaY, ;, }, if, (, bottom, ), {]
[), +, deltaY, ;, }, if, (, bottom, ), {, y, =, Math, ., max, (, line, ., getY1, (]
[., getY2, (, ), ), +, deltaY, ;, }, if, (, bottom, ), {, y, =, Math, ., max, (]
[;, }, if, (, bottom, ), {, y, =, Math, ., max, (, line, ., getY1, (, ), ,, line]
[), {, y, =, Math, ., max, (, line, ., getY1, (, ), ,, line, ., getY2, (, ), )]
[=, Math, ., max, (, line, ., getY1, (, ), ,, line, ., getY2, (, ), ), -, deltaY, ;]
[;, }, }, else, {, x, =, (, line, ., getX1, (, ), +, line, ., getX2, (, ), )]
[-, deltaY, ;, }, }, else, {, x, =, (, line, ., getX1, (, ), +, line, ., getX2, (]
[., max, (, line, ., getY1, (, ), ,, line, ., getY2, (, ), ), -, deltaY, ;, }, }]
[,, line, ., getY2, (, ), ), -, deltaY, ;, }, }, else, {, x, =, (, line, ., getX1]
[., getY1, (, ), ,, line, ., getY2, (, ), ), -, deltaY, ;, }, }, else, {, x, =]
[), -, deltaY, ;, }, }, else, {, x, =, (, line, ., getX1, (, ), +, line, ., getX2]
[., getY2, (, ), ), -, deltaY, ;, }, }, else, {, x, =, (, line, ., getX1, (, )]
[;, }, }, else, {, x, =, (, line, ., getX1, (, ), +, line, ., getX2, (, ), )]
[=, (, line, ., getX1, (, ), +, line, ., getX2, (, ), ), /, 2.0, ;, y, =, line]
[;, y, =, line, ., getY1, (, ), ;, if, (, left, ), {, x, =, Math, ., min, (]
[/, 2.0, ;, y, =, line, ., getY1, (, ), ;, if, (, left, ), {, x, =, Math, .]
[), /, 2.0, ;, y, =, line, ., getY1, (, ), ;, if, (, left, ), {, x, =, Math]
[+, line, ., getX2, (, ), ), /, 2.0, ;, y, =, line, ., getY1, (, ), ;, if, (]
[., getX1, (, ), +, line, ., getX2, (, ), ), /, 2.0, ;, y, =, line, ., getY1, (]
[), /, 2.0, ;, y, =, line, ., getY1, (, ), ;, if, (, left, ), {, x, =, Math]
[., getX2, (, ), ), /, 2.0, ;, y, =, line, ., getY1, (, ), ;, if, (, left, )]
[;, y, =, line, ., getY1, (, ), ;, if, (, left, ), {, x, =, Math, ., min, (]
[=, line, ., getY1, (, ), ;, if, (, left, ), {, x, =, Math, ., min, (, line, .]
[;, if, (, left, ), {, x, =, Math, ., min, (, line, ., getX1, (, ), ,, line, .]
[., getY1, (, ), ;, if, (, left, ), {, x, =, Math, ., min, (, line, ., getX1, (]
[), {, x, =, Math, ., min, (, line, ., getX1, (, ), ,, line, ., getX2, (, ), )]
[=, Math, ., min, (, line, ., getX1, (, ), ,, line, ., getX2, (, ), ), +, deltaX, ;]
[;, }, if, (, right, ), {, x, =, Math, ., max, (, line, ., getX1, (, ), ,, line]
[+, deltaX, ;, }, if, (, right, ), {, x, =, Math, ., max, (, line, ., getX1, (, )]
[., min, (, line, ., getX1, (, ), ,, line, ., getX2, (, ), ), +, deltaX, ;, }, if]
[,, line, ., getX2, (, ), ), +, deltaX, ;, }, if, (, right, ), {, x, =, Math, .]
[., getX1, (, ), ,, line, ., getX2, (, ), ), +, deltaX, ;, }, if, (, right, ), {]
[), +, deltaX, ;, }, if, (, right, ), {, x, =, Math, ., max, (, line, ., getX1, (]
[., getX2, (, ), ), +, deltaX, ;, }, if, (, right, ), {, x, =, Math, ., max, (]
[;, }, if, (, right, ), {, x, =, Math, ., max, (, line, ., getX1, (, ), ,, line]
[), {, x, =, Math, ., max, (, line, ., getX1, (, ), ,, line, ., getX2, (, ), )]
[=, Math, ., max, (, line, ., getX1, (, ), ,, line, ., getX2, (, ), ), -, deltaX, ;]
[;, }, if, (, top, ), {, y, =, y, -, deltaY, ;, }, if, (, bottom, ), {, y]
[-, deltaX, ;, }, if, (, top, ), {, y, =, y, -, deltaY, ;, }, if, (, bottom, )]
[., max, (, line, ., getX1, (, ), ,, line, ., getX2, (, ), ), -, deltaX, ;, }, if]
[,, line, ., getX2, (, ), ), -, deltaX, ;, }, if, (, top, ), {, y, =, y, -]
[., getX1, (, ), ,, line, ., getX2, (, ), ), -, deltaX, ;, }, if, (, top, ), {]
[), -, deltaX, ;, }, if, (, top, ), {, y, =, y, -, deltaY, ;, }, if, (, bottom]
[., getX2, (, ), ), -, deltaX, ;, }, if, (, top, ), {, y, =, y, -, deltaY, ;]
[;, }, if, (, top, ), {, y, =, y, -, deltaY, ;, }, if, (, bottom, ), {, y]
[), {, y, =, y, -, deltaY, ;, }, if, (, bottom, ), {, y, =, y, +, deltaY, ;]
[=, y, -, deltaY, ;, }, if, (, bottom, ), {, y, =, y, +, deltaY, ;, }, }, return]
[;, }, if, (, bottom, ), {, y, =, y, +, deltaY, ;, }, }, return, new, Point2D, ., Double]
[-, deltaY, ;, }, if, (, bottom, ), {, y, =, y, +, deltaY, ;, }, }, return, new, Point2D]
[;, }, if, (, bottom, ), {, y, =, y, +, deltaY, ;, }, }, return, new, Point2D, ., Double]
[), {, y, =, y, +, deltaY, ;, }, }, return, new, Point2D, ., Double, (, x, ,, y, )]
[=, y, +, deltaY, ;, }, }, return, new, Point2D, ., Double, (, x, ,, y, ), ;, }, private]
[;, }, }, return, new, Point2D, ., Double, (, x, ,, y, ), ;, }, private, TextAnchor, textAlignPtForLabelAnchorV, (, RectangleAnchor]
[+, deltaY, ;, }, }, return, new, Point2D, ., Double, (, x, ,, y, ), ;, }, private, TextAnchor, textAlignPtForLabelAnchorV]
[;, }, }, return, new, Point2D, ., Double, (, x, ,, y, ), ;, }, private, TextAnchor, textAlignPtForLabelAnchorV, (, RectangleAnchor]
[;, }, private, TextAnchor, textAlignPtForLabelAnchorV, (, RectangleAnchor, anchor, ), {, TextAnchor, result, =, TextAnchor, ., CENTER, ;, if, (, anchor]
[,, y, ), ;, }, private, TextAnchor, textAlignPtForLabelAnchorV, (, RectangleAnchor, anchor, ), {, TextAnchor, result, =, TextAnchor, ., CENTER, ;]
[), ;, }, private, TextAnchor, textAlignPtForLabelAnchorV, (, RectangleAnchor, anchor, ), {, TextAnchor, result, =, TextAnchor, ., CENTER, ;, if, (]
[;, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {, result, =, TextAnchor, ., TOP_RIGHT, ;, }]
[., CENTER, ;, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {, result, =, TextAnchor, ., TOP_RIGHT]
[), {, result, =, TextAnchor, ., TOP_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP, )]
[., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {, result, =, TextAnchor, ., TOP_RIGHT, ;, }, else, if, (, anchor]
[), ), {, result, =, TextAnchor, ., TOP_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP]
[., TOP_LEFT, ), ), {, result, =, TextAnchor, ., TOP_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor]
[=, TextAnchor, ., TOP_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP, ), ), {, result]
[;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP, ), ), {, result, =, TextAnchor, ., TOP_CENTER]
[., TOP_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP, ), ), {, result, =, TextAnchor]
[), {, result, =, TextAnchor, ., TOP_CENTER, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, )]
[., equals, (, RectangleAnchor, ., TOP, ), ), {, result, =, TextAnchor, ., TOP_CENTER, ;, }, else, if, (, anchor]
[), ), {, result, =, TextAnchor, ., TOP_CENTER, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT]
[., TOP, ), ), {, result, =, TextAnchor, ., TOP_CENTER, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor]
[=, TextAnchor, ., TOP_CENTER, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, result]
[;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, result, =, TextAnchor, ., TOP_LEFT]
[., TOP_CENTER, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, result, =, TextAnchor]
[), {, result, =, TextAnchor, ., TOP_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., LEFT, )]
[., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, result, =, TextAnchor, ., TOP_LEFT, ;, }, else, if, (, anchor]
[), ), {, result, =, TextAnchor, ., TOP_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., LEFT]
[., TOP_RIGHT, ), ), {, result, =, TextAnchor, ., TOP_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor]
[=, TextAnchor, ., TOP_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., LEFT, ), ), {, result]
[;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., LEFT, ), ), {, result, =, TextAnchor, ., HALF_ASCENT_RIGHT]
[., TOP_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., LEFT, ), ), {, result, =, TextAnchor]
[), {, result, =, TextAnchor, ., HALF_ASCENT_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., RIGHT, )]
[., equals, (, RectangleAnchor, ., LEFT, ), ), {, result, =, TextAnchor, ., HALF_ASCENT_RIGHT, ;, }, else, if, (, anchor]
[), ), {, result, =, TextAnchor, ., HALF_ASCENT_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., RIGHT]
[., LEFT, ), ), {, result, =, TextAnchor, ., HALF_ASCENT_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor]
[=, TextAnchor, ., HALF_ASCENT_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., RIGHT, ), ), {, result]
[;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., RIGHT, ), ), {, result, =, TextAnchor, ., HALF_ASCENT_LEFT]
[., HALF_ASCENT_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., RIGHT, ), ), {, result, =, TextAnchor]
[), {, result, =, TextAnchor, ., HALF_ASCENT_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, )]
[., equals, (, RectangleAnchor, ., RIGHT, ), ), {, result, =, TextAnchor, ., HALF_ASCENT_LEFT, ;, }, else, if, (, anchor]
[), ), {, result, =, TextAnchor, ., HALF_ASCENT_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT]
[., RIGHT, ), ), {, result, =, TextAnchor, ., HALF_ASCENT_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor]
[=, TextAnchor, ., HALF_ASCENT_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result]
[;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result, =, TextAnchor, ., BOTTOM_RIGHT]
[., HALF_ASCENT_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result, =, TextAnchor]
[), {, result, =, TextAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM, )]
[., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result, =, TextAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (, anchor]
[), ), {, result, =, TextAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM]
[., BOTTOM_LEFT, ), ), {, result, =, TextAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor]
[=, TextAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM, ), ), {, result]
[;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM, ), ), {, result, =, TextAnchor, ., BOTTOM_CENTER]
[., BOTTOM_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM, ), ), {, result, =, TextAnchor]
[), {, result, =, TextAnchor, ., BOTTOM_CENTER, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, )]
[., equals, (, RectangleAnchor, ., BOTTOM, ), ), {, result, =, TextAnchor, ., BOTTOM_CENTER, ;, }, else, if, (, anchor]
[), ), {, result, =, TextAnchor, ., BOTTOM_CENTER, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT]
[., BOTTOM, ), ), {, result, =, TextAnchor, ., BOTTOM_CENTER, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor]
[=, TextAnchor, ., BOTTOM_CENTER, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {, result]
[;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {, result, =, TextAnchor, ., BOTTOM_LEFT]
[., BOTTOM_CENTER, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {, result, =, TextAnchor]
[), {, result, =, TextAnchor, ., BOTTOM_LEFT, ;, }, return, result, ;, }, private, TextAnchor, textAlignPtForLabelAnchorH, (, RectangleAnchor, anchor, )]
[., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {, result, =, TextAnchor, ., BOTTOM_LEFT, ;, }, return, result, ;, }]
[), ), {, result, =, TextAnchor, ., BOTTOM_LEFT, ;, }, return, result, ;, }, private, TextAnchor, textAlignPtForLabelAnchorH, (, RectangleAnchor, anchor]
[., BOTTOM_RIGHT, ), ), {, result, =, TextAnchor, ., BOTTOM_LEFT, ;, }, return, result, ;, }, private, TextAnchor, textAlignPtForLabelAnchorH, (]
[=, TextAnchor, ., BOTTOM_LEFT, ;, }, return, result, ;, }, private, TextAnchor, textAlignPtForLabelAnchorH, (, RectangleAnchor, anchor, ), {, TextAnchor, result]
[;, }, return, result, ;, }, private, TextAnchor, textAlignPtForLabelAnchorH, (, RectangleAnchor, anchor, ), {, TextAnchor, result, =, TextAnchor, ., CENTER]
[., BOTTOM_LEFT, ;, }, return, result, ;, }, private, TextAnchor, textAlignPtForLabelAnchorH, (, RectangleAnchor, anchor, ), {, TextAnchor, result, =, TextAnchor]
[;, }, private, TextAnchor, textAlignPtForLabelAnchorH, (, RectangleAnchor, anchor, ), {, TextAnchor, result, =, TextAnchor, ., CENTER, ;, if, (, anchor]
[;, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {, result, =, TextAnchor, ., BOTTOM_LEFT, ;, }]
[., CENTER, ;, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {, result, =, TextAnchor, ., BOTTOM_LEFT]
[), {, result, =, TextAnchor, ., BOTTOM_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP, )]
[., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {, result, =, TextAnchor, ., BOTTOM_LEFT, ;, }, else, if, (, anchor]
[), ), {, result, =, TextAnchor, ., BOTTOM_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP]
[., TOP_LEFT, ), ), {, result, =, TextAnchor, ., BOTTOM_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor]
[=, TextAnchor, ., BOTTOM_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP, ), ), {, result]
[;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP, ), ), {, result, =, TextAnchor, ., BOTTOM_CENTER]
[., BOTTOM_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP, ), ), {, result, =, TextAnchor]
[), {, result, =, TextAnchor, ., BOTTOM_CENTER, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, )]
[., equals, (, RectangleAnchor, ., TOP, ), ), {, result, =, TextAnchor, ., BOTTOM_CENTER, ;, }, else, if, (, anchor]
[), ), {, result, =, TextAnchor, ., BOTTOM_CENTER, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT]
[., TOP, ), ), {, result, =, TextAnchor, ., BOTTOM_CENTER, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor]
[=, TextAnchor, ., BOTTOM_CENTER, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, result]
[;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, result, =, TextAnchor, ., BOTTOM_RIGHT]
[., BOTTOM_CENTER, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, result, =, TextAnchor]
[), {, result, =, TextAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., LEFT, )]
[., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, result, =, TextAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (, anchor]
[), ), {, result, =, TextAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., LEFT]
[., TOP_RIGHT, ), ), {, result, =, TextAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor]
[=, TextAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., LEFT, ), ), {, result]
[;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., LEFT, ), ), {, result, =, TextAnchor, ., HALF_ASCENT_LEFT]
[., BOTTOM_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., LEFT, ), ), {, result, =, TextAnchor]
[), {, result, =, TextAnchor, ., HALF_ASCENT_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., RIGHT, )]
[., equals, (, RectangleAnchor, ., LEFT, ), ), {, result, =, TextAnchor, ., HALF_ASCENT_LEFT, ;, }, else, if, (, anchor]
[), ), {, result, =, TextAnchor, ., HALF_ASCENT_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., RIGHT]
[., LEFT, ), ), {, result, =, TextAnchor, ., HALF_ASCENT_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor]
[=, TextAnchor, ., HALF_ASCENT_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., RIGHT, ), ), {, result]
[;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., RIGHT, ), ), {, result, =, TextAnchor, ., HALF_ASCENT_RIGHT]
[., HALF_ASCENT_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., RIGHT, ), ), {, result, =, TextAnchor]
[), {, result, =, TextAnchor, ., HALF_ASCENT_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, )]
[., equals, (, RectangleAnchor, ., RIGHT, ), ), {, result, =, TextAnchor, ., HALF_ASCENT_RIGHT, ;, }, else, if, (, anchor]
[), ), {, result, =, TextAnchor, ., HALF_ASCENT_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT]
[., RIGHT, ), ), {, result, =, TextAnchor, ., HALF_ASCENT_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor]
[=, TextAnchor, ., HALF_ASCENT_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result]
[;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result, =, TextAnchor, ., TOP_LEFT]
[., HALF_ASCENT_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result, =, TextAnchor]
[), {, result, =, TextAnchor, ., TOP_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM, )]
[., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result, =, TextAnchor, ., TOP_LEFT, ;, }, else, if, (, anchor]
[), ), {, result, =, TextAnchor, ., TOP_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM]
[., BOTTOM_LEFT, ), ), {, result, =, TextAnchor, ., TOP_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor]
[=, TextAnchor, ., TOP_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM, ), ), {, result]
[;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM, ), ), {, result, =, TextAnchor, ., TOP_CENTER]
[., TOP_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM, ), ), {, result, =, TextAnchor]
[), {, result, =, TextAnchor, ., TOP_CENTER, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, )]
[., equals, (, RectangleAnchor, ., BOTTOM, ), ), {, result, =, TextAnchor, ., TOP_CENTER, ;, }, else, if, (, anchor]
[), ), {, result, =, TextAnchor, ., TOP_CENTER, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT]
[., BOTTOM, ), ), {, result, =, TextAnchor, ., TOP_CENTER, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor]
[=, TextAnchor, ., TOP_CENTER, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {, result]
[;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {, result, =, TextAnchor, ., TOP_RIGHT]
[., TOP_CENTER, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {, result, =, TextAnchor]
[), {, result, =, TextAnchor, ., TOP_RIGHT, ;, }, return, result, ;, }, private, RectangleAnchor, flipAnchorH, (, RectangleAnchor, anchor, )]
[., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {, result, =, TextAnchor, ., TOP_RIGHT, ;, }, return, result, ;, }]
[), ), {, result, =, TextAnchor, ., TOP_RIGHT, ;, }, return, result, ;, }, private, RectangleAnchor, flipAnchorH, (, RectangleAnchor, anchor]
[., BOTTOM_RIGHT, ), ), {, result, =, TextAnchor, ., TOP_RIGHT, ;, }, return, result, ;, }, private, RectangleAnchor, flipAnchorH, (]
[=, TextAnchor, ., TOP_RIGHT, ;, }, return, result, ;, }, private, RectangleAnchor, flipAnchorH, (, RectangleAnchor, anchor, ), {, RectangleAnchor, result]
[;, }, return, result, ;, }, private, RectangleAnchor, flipAnchorH, (, RectangleAnchor, anchor, ), {, RectangleAnchor, result, =, anchor, ;, if]
[., TOP_RIGHT, ;, }, return, result, ;, }, private, RectangleAnchor, flipAnchorH, (, RectangleAnchor, anchor, ), {, RectangleAnchor, result, =, anchor]
[;, }, private, RectangleAnchor, flipAnchorH, (, RectangleAnchor, anchor, ), {, RectangleAnchor, result, =, anchor, ;, if, (, anchor, ., equals]
[;, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {, result, =, RectangleAnchor, ., TOP_RIGHT, ;, }]
[), {, result, =, RectangleAnchor, ., TOP_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, )]
[., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {, result, =, RectangleAnchor, ., TOP_RIGHT, ;, }, else, if, (, anchor]
[), ), {, result, =, RectangleAnchor, ., TOP_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT]
[., TOP_LEFT, ), ), {, result, =, RectangleAnchor, ., TOP_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor]
[=, RectangleAnchor, ., TOP_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, result]
[;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, result, =, RectangleAnchor, ., TOP_LEFT]
[., TOP_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, result, =, RectangleAnchor]
[), {, result, =, RectangleAnchor, ., TOP_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., LEFT, )]
[., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, result, =, RectangleAnchor, ., TOP_LEFT, ;, }, else, if, (, anchor]
[), ), {, result, =, RectangleAnchor, ., TOP_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., LEFT]
[., TOP_RIGHT, ), ), {, result, =, RectangleAnchor, ., TOP_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor]
[=, RectangleAnchor, ., TOP_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., LEFT, ), ), {, result]
[;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., LEFT, ), ), {, result, =, RectangleAnchor, ., RIGHT]
[., TOP_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., LEFT, ), ), {, result, =, RectangleAnchor]
[), {, result, =, RectangleAnchor, ., RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., RIGHT, )]
[., equals, (, RectangleAnchor, ., LEFT, ), ), {, result, =, RectangleAnchor, ., RIGHT, ;, }, else, if, (, anchor]
[), ), {, result, =, RectangleAnchor, ., RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., RIGHT]
[., LEFT, ), ), {, result, =, RectangleAnchor, ., RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor]
[=, RectangleAnchor, ., RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., RIGHT, ), ), {, result]
[;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., RIGHT, ), ), {, result, =, RectangleAnchor, ., LEFT]
[., RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., RIGHT, ), ), {, result, =, RectangleAnchor]
[), {, result, =, RectangleAnchor, ., LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, )]
[., equals, (, RectangleAnchor, ., RIGHT, ), ), {, result, =, RectangleAnchor, ., LEFT, ;, }, else, if, (, anchor]
[), ), {, result, =, RectangleAnchor, ., LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT]
[., RIGHT, ), ), {, result, =, RectangleAnchor, ., LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor]
[=, RectangleAnchor, ., LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result]
[;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result, =, RectangleAnchor, ., BOTTOM_RIGHT]
[., LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result, =, RectangleAnchor]
[), {, result, =, RectangleAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, )]
[., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result, =, RectangleAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (, anchor]
[), ), {, result, =, RectangleAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT]
[., BOTTOM_LEFT, ), ), {, result, =, RectangleAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor]
[=, RectangleAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {, result]
[;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {, result, =, RectangleAnchor, ., BOTTOM_LEFT]
[., BOTTOM_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {, result, =, RectangleAnchor]
[), {, result, =, RectangleAnchor, ., BOTTOM_LEFT, ;, }, return, result, ;, }, private, RectangleAnchor, flipAnchorV, (, RectangleAnchor, anchor, )]
[., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {, result, =, RectangleAnchor, ., BOTTOM_LEFT, ;, }, return, result, ;, }]
[), ), {, result, =, RectangleAnchor, ., BOTTOM_LEFT, ;, }, return, result, ;, }, private, RectangleAnchor, flipAnchorV, (, RectangleAnchor, anchor]
[., BOTTOM_RIGHT, ), ), {, result, =, RectangleAnchor, ., BOTTOM_LEFT, ;, }, return, result, ;, }, private, RectangleAnchor, flipAnchorV, (]
[=, RectangleAnchor, ., BOTTOM_LEFT, ;, }, return, result, ;, }, private, RectangleAnchor, flipAnchorV, (, RectangleAnchor, anchor, ), {, RectangleAnchor, result]
[;, }, return, result, ;, }, private, RectangleAnchor, flipAnchorV, (, RectangleAnchor, anchor, ), {, RectangleAnchor, result, =, anchor, ;, if]
[., BOTTOM_LEFT, ;, }, return, result, ;, }, private, RectangleAnchor, flipAnchorV, (, RectangleAnchor, anchor, ), {, RectangleAnchor, result, =, anchor]
[;, }, private, RectangleAnchor, flipAnchorV, (, RectangleAnchor, anchor, ), {, RectangleAnchor, result, =, anchor, ;, if, (, anchor, ., equals]
[;, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {, result, =, RectangleAnchor, ., BOTTOM_LEFT, ;, }]
[), {, result, =, RectangleAnchor, ., BOTTOM_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, )]
[., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {, result, =, RectangleAnchor, ., BOTTOM_LEFT, ;, }, else, if, (, anchor]
[), ), {, result, =, RectangleAnchor, ., BOTTOM_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT]
[., TOP_LEFT, ), ), {, result, =, RectangleAnchor, ., BOTTOM_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor]
[=, RectangleAnchor, ., BOTTOM_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, result]
[;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, result, =, RectangleAnchor, ., BOTTOM_RIGHT]
[., BOTTOM_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, result, =, RectangleAnchor]
[), {, result, =, RectangleAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP, )]
[., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, result, =, RectangleAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (, anchor]
[), ), {, result, =, RectangleAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP]
[., TOP_RIGHT, ), ), {, result, =, RectangleAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor]
[=, RectangleAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP, ), ), {, result]
[;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP, ), ), {, result, =, RectangleAnchor, ., BOTTOM]
[., BOTTOM_RIGHT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., TOP, ), ), {, result, =, RectangleAnchor]
[), {, result, =, RectangleAnchor, ., BOTTOM, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM, )]
[., equals, (, RectangleAnchor, ., TOP, ), ), {, result, =, RectangleAnchor, ., BOTTOM, ;, }, else, if, (, anchor]
[), ), {, result, =, RectangleAnchor, ., BOTTOM, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM]
[., TOP, ), ), {, result, =, RectangleAnchor, ., BOTTOM, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor]
[=, RectangleAnchor, ., BOTTOM, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM, ), ), {, result]
[;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM, ), ), {, result, =, RectangleAnchor, ., TOP]
[., BOTTOM, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM, ), ), {, result, =, RectangleAnchor]
[), {, result, =, RectangleAnchor, ., TOP, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, )]
[., equals, (, RectangleAnchor, ., BOTTOM, ), ), {, result, =, RectangleAnchor, ., TOP, ;, }, else, if, (, anchor]
[), ), {, result, =, RectangleAnchor, ., TOP, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT]
[., BOTTOM, ), ), {, result, =, RectangleAnchor, ., TOP, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor]
[=, RectangleAnchor, ., TOP, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result]
[;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result, =, RectangleAnchor, ., TOP_LEFT]
[., TOP, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result, =, RectangleAnchor]
[), {, result, =, RectangleAnchor, ., TOP_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, )]
[., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result, =, RectangleAnchor, ., TOP_LEFT, ;, }, else, if, (, anchor]
[), ), {, result, =, RectangleAnchor, ., TOP_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT]
[., BOTTOM_LEFT, ), ), {, result, =, RectangleAnchor, ., TOP_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor]
[=, RectangleAnchor, ., TOP_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {, result]
[;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {, result, =, RectangleAnchor, ., TOP_RIGHT]
[., TOP_LEFT, ;, }, else, if, (, anchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {, result, =, RectangleAnchor]
[), {, result, =, RectangleAnchor, ., TOP_RIGHT, ;, }, return, result, ;, }, public, boolean, equals, (, Object, obj, )]
[., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {, result, =, RectangleAnchor, ., TOP_RIGHT, ;, }, return, result, ;, }]
[), ), {, result, =, RectangleAnchor, ., TOP_RIGHT, ;, }, return, result, ;, }, public, boolean, equals, (, Object, obj]
[., BOTTOM_RIGHT, ), ), {, result, =, RectangleAnchor, ., TOP_RIGHT, ;, }, return, result, ;, }, public, boolean, equals, (]
[=, RectangleAnchor, ., TOP_RIGHT, ;, }, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[;, }, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, )]
[., TOP_RIGHT, ;, }, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, CrosshairOverlay, ), ), {, return, false, ;, }]
[==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, CrosshairOverlay, ), ), {, return, false]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, CrosshairOverlay, ), ), {, return, false, ;, }]
[;, }, if, (, !, (, obj, instanceof, CrosshairOverlay, ), ), {, return, false, ;, }, CrosshairOverlay, that, =, (]
[), {, return, false, ;, }, CrosshairOverlay, that, =, (, CrosshairOverlay, ), obj, ;, if, (, !, this, ., xCrosshairs]
[), {, return, false, ;, }, CrosshairOverlay, that, =, (, CrosshairOverlay, ), obj, ;, if, (, !, this, ., xCrosshairs]
[), ), {, return, false, ;, }, CrosshairOverlay, that, =, (, CrosshairOverlay, ), obj, ;, if, (, !, this, .]
[instanceof, CrosshairOverlay, ), ), {, return, false, ;, }, CrosshairOverlay, that, =, (, CrosshairOverlay, ), obj, ;, if, (, !]
[;, }, CrosshairOverlay, that, =, (, CrosshairOverlay, ), obj, ;, if, (, !, this, ., xCrosshairs, ., equals, (, that]
[;, if, (, !, this, ., xCrosshairs, ., equals, (, that, ., xCrosshairs, ), ), {, return, false, ;, }]
[;, if, (, !, this, ., xCrosshairs, ., equals, (, that, ., xCrosshairs, ), ), {, return, false, ;, }]
[), {, return, false, ;, }, if, (, !, this, ., yCrosshairs, ., equals, (, that, ., yCrosshairs, ), )]
[), {, return, false, ;, }, if, (, !, this, ., yCrosshairs, ., equals, (, that, ., yCrosshairs, ), )]
[., equals, (, that, ., xCrosshairs, ), ), {, return, false, ;, }, if, (, !, this, ., yCrosshairs, .]
[., xCrosshairs, ., equals, (, that, ., xCrosshairs, ), ), {, return, false, ;, }, if, (, !, this, .]
[), ), {, return, false, ;, }, if, (, !, this, ., yCrosshairs, ., equals, (, that, ., yCrosshairs, )]
[., xCrosshairs, ), ), {, return, false, ;, }, if, (, !, this, ., yCrosshairs, ., equals, (, that, .]
[;, }, if, (, !, this, ., yCrosshairs, ., equals, (, that, ., yCrosshairs, ), ), {, return, false, ;]
[), {, return, false, ;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, CrosshairOverlay, clone]
[), {, return, false, ;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, CrosshairOverlay, clone]
[., equals, (, that, ., yCrosshairs, ), ), {, return, false, ;, }, return, true, ;, }, public, Object, clone]
[., yCrosshairs, ., equals, (, that, ., yCrosshairs, ), ), {, return, false, ;, }, return, true, ;, }, public]
[), ), {, return, false, ;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, CrosshairOverlay]
[., yCrosshairs, ), ), {, return, false, ;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException]
[;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, CrosshairOverlay, clone, =, (, CrosshairOverlay, )]
[;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, CrosshairOverlay, clone, =, (, CrosshairOverlay, ), super, ., clone, (]
[;, clone, ., xCrosshairs, =, (, List, ), ObjectUtilities, ., deepClone, (, this, ., xCrosshairs, ), ;, clone, ., yCrosshairs]
[;, clone, ., xCrosshairs, =, (, List, ), ObjectUtilities, ., deepClone, (, this, ., xCrosshairs, ), ;, clone, ., yCrosshairs]
[., clone, (, ), ;, clone, ., xCrosshairs, =, (, List, ), ObjectUtilities, ., deepClone, (, this, ., xCrosshairs, )]
[=, (, List, ), ObjectUtilities, ., deepClone, (, this, ., xCrosshairs, ), ;, clone, ., yCrosshairs, =, (, List, )]
[., xCrosshairs, =, (, List, ), ObjectUtilities, ., deepClone, (, this, ., xCrosshairs, ), ;, clone, ., yCrosshairs, =, (]
[;, clone, ., yCrosshairs, =, (, List, ), ObjectUtilities, ., deepClone, (, this, ., yCrosshairs, ), ;, return, clone, ;]
[;, clone, ., yCrosshairs, =, (, List, ), ObjectUtilities, ., deepClone, (, this, ., yCrosshairs, ), ;, return, clone, ;]
[., deepClone, (, this, ., xCrosshairs, ), ;, clone, ., yCrosshairs, =, (, List, ), ObjectUtilities, ., deepClone, (, this]
[), ;, clone, ., yCrosshairs, =, (, List, ), ObjectUtilities, ., deepClone, (, this, ., yCrosshairs, ), ;, return, clone]
[., xCrosshairs, ), ;, clone, ., yCrosshairs, =, (, List, ), ObjectUtilities, ., deepClone, (, this, ., yCrosshairs, ), ;]
[=, (, List, ), ObjectUtilities, ., deepClone, (, this, ., yCrosshairs, ), ;, return, clone, ;, }, }]
[., yCrosshairs, =, (, List, ), ObjectUtilities, ., deepClone, (, this, ., yCrosshairs, ), ;, return, clone, ;, }, }]
[;, return, clone, ;, }, }]
[;, return, clone, ;, }, }]
[., deepClone, (, this, ., yCrosshairs, ), ;, return, clone, ;, }, }]
[), ;, return, clone, ;, }, }]
[., yCrosshairs, ), ;, return, clone, ;, }, }]
[;, }, }]
