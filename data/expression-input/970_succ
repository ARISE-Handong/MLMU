[;, private, static, final, double, [, ], [, ], STATIC_A, =, {, {, 1.0, /, 2.0, }, ,, {, 0.0]
[,, 1.0, /, 2.0, ,, 1.0, }, ;, private, static, final, double, [, ], [, ], STATIC_A, =, {, {]
[/, 2.0, ,, 1.0, /, 2.0, ,, 1.0, }, ;, private, static, final, double, [, ], [, ], STATIC_A, =]
[,, 1.0, /, 2.0, ,, 1.0, }, ;, private, static, final, double, [, ], [, ], STATIC_A, =, {, {]
[,, 1.0, }, ;, private, static, final, double, [, ], [, ], STATIC_A, =, {, {, 1.0, /, 2.0, }]
[/, 2.0, ,, 1.0, }, ;, private, static, final, double, [, ], [, ], STATIC_A, =, {, {, 1.0, /]
[,, 1.0, }, ;, private, static, final, double, [, ], [, ], STATIC_A, =, {, {, 1.0, /, 2.0, }]
[}, ;, private, static, final, double, [, ], [, ], STATIC_A, =, {, {, 1.0, /, 2.0, }, ,, {]
[;, private, static, final, double, [, ], STATIC_B, =, {, 1.0, /, 6.0, ,, 1.0, /, 3.0, ,, 1.0, /]
[,, {, 0.0, ,, 1.0, /, 2.0, }, ,, {, 0.0, ,, 0.0, ,, 1.0, }, }, ;, private, static]
[}, ,, {, 0.0, ,, 1.0, /, 2.0, }, ,, {, 0.0, ,, 0.0, ,, 1.0, }, }, ;, private]
[/, 2.0, }, ,, {, 0.0, ,, 1.0, /, 2.0, }, ,, {, 0.0, ,, 0.0, ,, 1.0, }, }]
[}, ,, {, 0.0, ,, 1.0, /, 2.0, }, ,, {, 0.0, ,, 0.0, ,, 1.0, }, }, ;, private]
[,, {, 0.0, ,, 0.0, ,, 1.0, }, }, ;, private, static, final, double, [, ], STATIC_B, =, {, 1.0]
[,, 1.0, /, 2.0, }, ,, {, 0.0, ,, 0.0, ,, 1.0, }, }, ;, private, static, final, double, []
[}, ,, {, 0.0, ,, 0.0, ,, 1.0, }, }, ;, private, static, final, double, [, ], STATIC_B, =, {]
[/, 2.0, }, ,, {, 0.0, ,, 0.0, ,, 1.0, }, }, ;, private, static, final, double, [, ], STATIC_B]
[}, ,, {, 0.0, ,, 0.0, ,, 1.0, }, }, ;, private, static, final, double, [, ], STATIC_B, =, {]
[}, ;, private, static, final, double, [, ], STATIC_B, =, {, 1.0, /, 6.0, ,, 1.0, /, 3.0, ,, 1.0]
[,, 0.0, ,, 1.0, }, }, ;, private, static, final, double, [, ], STATIC_B, =, {, 1.0, /, 6.0, ,]
[,, 1.0, }, }, ;, private, static, final, double, [, ], STATIC_B, =, {, 1.0, /, 6.0, ,, 1.0, /]
[}, }, ;, private, static, final, double, [, ], STATIC_B, =, {, 1.0, /, 6.0, ,, 1.0, /, 3.0, ,]
[;, public, ClassicalRungeKuttaIntegrator, (, final, double, step, ), {, super, (, "classical Runge-Kutta", ,, STATIC_C, ,, STATIC_A, ,, STATIC_B, ,, new]
[,, 1.0, /, 3.0, ,, 1.0, /, 3.0, ,, 1.0, /, 6.0, }, ;, public, ClassicalRungeKuttaIntegrator, (, final, double, step]
[/, 6.0, ,, 1.0, /, 3.0, ,, 1.0, /, 3.0, ,, 1.0, /, 6.0, }, ;, public, ClassicalRungeKuttaIntegrator, (, final]
[,, 1.0, /, 3.0, ,, 1.0, /, 3.0, ,, 1.0, /, 6.0, }, ;, public, ClassicalRungeKuttaIntegrator, (, final, double, step]
[,, 1.0, /, 3.0, ,, 1.0, /, 6.0, }, ;, public, ClassicalRungeKuttaIntegrator, (, final, double, step, ), {, super, (]
[/, 3.0, ,, 1.0, /, 3.0, ,, 1.0, /, 6.0, }, ;, public, ClassicalRungeKuttaIntegrator, (, final, double, step, ), {]
[,, 1.0, /, 3.0, ,, 1.0, /, 6.0, }, ;, public, ClassicalRungeKuttaIntegrator, (, final, double, step, ), {, super, (]
[,, 1.0, /, 6.0, }, ;, public, ClassicalRungeKuttaIntegrator, (, final, double, step, ), {, super, (, "classical Runge-Kutta", ,, STATIC_C, ,]
[/, 3.0, ,, 1.0, /, 6.0, }, ;, public, ClassicalRungeKuttaIntegrator, (, final, double, step, ), {, super, (, "classical Runge-Kutta", ,]
[,, 1.0, /, 6.0, }, ;, public, ClassicalRungeKuttaIntegrator, (, final, double, step, ), {, super, (, "classical Runge-Kutta", ,, STATIC_C, ,]
[}, ;, public, ClassicalRungeKuttaIntegrator, (, final, double, step, ), {, super, (, "classical Runge-Kutta", ,, STATIC_C, ,, STATIC_A, ,, STATIC_B, ,]
[/, 6.0, }, ;, public, ClassicalRungeKuttaIntegrator, (, final, double, step, ), {, super, (, "classical Runge-Kutta", ,, STATIC_C, ,, STATIC_A, ,]
[}, ;, public, ClassicalRungeKuttaIntegrator, (, final, double, step, ), {, super, (, "classical Runge-Kutta", ,, STATIC_C, ,, STATIC_A, ,, STATIC_B, ,]
[,, STATIC_C, ,, STATIC_A, ,, STATIC_B, ,, new, ClassicalRungeKuttaStepInterpolator, (, ), ,, step, ), ;, }, }]
[,, STATIC_A, ,, STATIC_B, ,, new, ClassicalRungeKuttaStepInterpolator, (, ), ,, step, ), ;, }, }]
[,, STATIC_B, ,, new, ClassicalRungeKuttaStepInterpolator, (, ), ,, step, ), ;, }, }]
[,, new, ClassicalRungeKuttaStepInterpolator, (, ), ,, step, ), ;, }, }]
[,, step, ), ;, }, }]
[), ;, }, }]
