[class, Checks, {, public, static, <, T, >, T, checkNotNull, (, T, value, ,, String, checkedValue, ), {, if, (]
[class, Checks, {, public, static, <, T, >, T, checkNotNull, (, T, value, ,, String, checkedValue, ), {, if, (]
[{, public, static, <, T, >, T, checkNotNull, (, T, value, ,, String, checkedValue, ), {, if, (, value, ==]
[T, >, T, checkNotNull, (, T, value, ,, String, checkedValue, ), {, if, (, value, ==, null, ), {, throw]
[checkNotNull, (, T, value, ,, String, checkedValue, ), {, if, (, value, ==, null, ), {, throw, new, NullPointerException, (]
[checkNotNull, (, T, value, ,, String, checkedValue, ), {, if, (, value, ==, null, ), {, throw, new, NullPointerException, (]
[T, value, ,, String, checkedValue, ), {, if, (, value, ==, null, ), {, throw, new, NullPointerException, (, checkedValue, +]
[), {, if, (, value, ==, null, ), {, throw, new, NullPointerException, (, checkedValue, +, " should not be null", ), ;, }, return]
[value, ;, }, public, static, <, T, extends, Iterable, >, T, checkItemsNotNull, (, T, iterable, ,, String, checkedIterable, ), {]
[}, public, static, <, T, extends, Iterable, >, T, checkItemsNotNull, (, T, iterable, ,, String, checkedIterable, ), {, checkNotNull, (]
[static, <, T, extends, Iterable, >, T, checkItemsNotNull, (, T, iterable, ,, String, checkedIterable, ), {, checkNotNull, (, iterable, ,]
[(, T, iterable, ,, String, checkedIterable, ), {, checkNotNull, (, iterable, ,, checkedIterable, ), ;, for, (, Object, item, :]
[,, String, checkedIterable, ), {, checkNotNull, (, iterable, ,, checkedIterable, ), ;, for, (, Object, item, :, iterable, ), {]
[checkedIterable, ), {, checkNotNull, (, iterable, ,, checkedIterable, ), ;, for, (, Object, item, :, iterable, ), {, checkNotNull, (]
[{, checkNotNull, (, iterable, ,, checkedIterable, ), ;, for, (, Object, item, :, iterable, ), {, checkNotNull, (, item, ,]
[{, checkNotNull, (, iterable, ,, checkedIterable, ), ;, for, (, Object, item, :, iterable, ), {, checkNotNull, (, item, ,]
[(, iterable, ,, checkedIterable, ), ;, for, (, Object, item, :, iterable, ), {, checkNotNull, (, item, ,, "item in ", +]
[;, for, (, Object, item, :, iterable, ), {, checkNotNull, (, item, ,, "item in ", +, checkedIterable, ), ;, }, return]
