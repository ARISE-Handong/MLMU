[;, private, List, <, JsonML, >, children, =, new, ArrayList, <, JsonML, >, (, ), ;, public, JsonML, (, TagType]
[), ;, private, List, <, JsonML, >, children, =, new, ArrayList, <, JsonML, >, (, ), ;, public, JsonML, (]
[;, public, JsonML, (, TagType, type, ), {, this, ., type, =, type, ;, }, public, JsonML, (, TagType, type]
[=, type, ;, }, public, JsonML, (, TagType, type, ,, JsonML, ..., children, ), {, this, (, type, ,, Arrays]
[., type, =, type, ;, }, public, JsonML, (, TagType, type, ,, JsonML, ..., children, ), {, this, (, type]
[;, }, public, JsonML, (, TagType, type, ,, JsonML, ..., children, ), {, this, (, type, ,, Arrays, ., asList]
[,, Arrays, ., asList, (, children, ), ), ;, }, public, JsonML, (, TagType, type, ,, List, <, ?, extends]
[), ;, }, public, JsonML, (, TagType, type, ,, List, <, ?, extends, JsonML, >, children, ), {, this, (]
[., asList, (, children, ), ), ;, }, public, JsonML, (, TagType, type, ,, List, <, ?, extends, JsonML, >]
[), ), ;, }, public, JsonML, (, TagType, type, ,, List, <, ?, extends, JsonML, >, children, ), {, this]
[,, Collections, ., <, TagAttr, ,, Object, >, emptyMap, (, ), ,, children, ), ;, }, public, JsonML, (, TagType]
[,, children, ), ;, }, public, JsonML, (, TagType, type, ,, Map, <, ?, extends, TagAttr, ,, ?, >, attributes]
[., <, TagAttr, ,, Object, >, emptyMap, (, ), ,, children, ), ;, }, public, JsonML, (, TagType, type, ,]
[), ;, }, public, JsonML, (, TagType, type, ,, Map, <, ?, extends, TagAttr, ,, ?, >, attributes, ), {]
[,, attributes, ,, Collections, ., <, JsonML, >, emptyList, (, ), ), ;, }, public, JsonML, (, TagType, type, ,]
[,, Collections, ., <, JsonML, >, emptyList, (, ), ), ;, }, public, JsonML, (, TagType, type, ,, Map, <]
[), ;, }, public, JsonML, (, TagType, type, ,, Map, <, ?, extends, TagAttr, ,, ?, >, attributes, ,, List]
[., <, JsonML, >, emptyList, (, ), ), ;, }, public, JsonML, (, TagType, type, ,, Map, <, ?, extends]
[=, type, ;, this, ., attributes, ., putAll, (, attributes, ), ;, appendChildren, (, children, ), ;, }, public, void]
[., type, =, type, ;, this, ., attributes, ., putAll, (, attributes, ), ;, appendChildren, (, children, ), ;, }]
[;, this, ., attributes, ., putAll, (, attributes, ), ;, appendChildren, (, children, ), ;, }, public, void, addChild, (]
[;, appendChildren, (, children, ), ;, }, public, void, addChild, (, int, index, ,, JsonML, element, ), {, children, .]
[., putAll, (, attributes, ), ;, appendChildren, (, children, ), ;, }, public, void, addChild, (, int, index, ,, JsonML]
[., attributes, ., putAll, (, attributes, ), ;, appendChildren, (, children, ), ;, }, public, void, addChild, (, int, index]
[), ;, appendChildren, (, children, ), ;, }, public, void, addChild, (, int, index, ,, JsonML, element, ), {, children]
[;, }, public, void, addChild, (, int, index, ,, JsonML, element, ), {, children, ., add, (, index, ,, element]
[), ;, }, public, void, addChild, (, int, index, ,, JsonML, element, ), {, children, ., add, (, index, ,]
[;, }, public, void, appendChild, (, JsonML, element, ), {, children, ., add, (, element, ), ;, }, public, void]
[., add, (, index, ,, element, ), ;, }, public, void, appendChild, (, JsonML, element, ), {, children, ., add]
[,, element, ), ;, }, public, void, appendChild, (, JsonML, element, ), {, children, ., add, (, element, ), ;]
[), ;, }, public, void, appendChild, (, JsonML, element, ), {, children, ., add, (, element, ), ;, }, public]
[;, }, public, void, appendChildren, (, Collection, <, ?, extends, JsonML, >, elements, ), {, children, ., addAll, (, elements]
[., add, (, element, ), ;, }, public, void, appendChildren, (, Collection, <, ?, extends, JsonML, >, elements, ), {]
[), ;, }, public, void, appendChildren, (, Collection, <, ?, extends, JsonML, >, elements, ), {, children, ., addAll, (]
[;, }, public, int, childrenSize, (, ), {, return, children, ., size, (, ), ;, }, public, void, clearChildren, (]
[., addAll, (, elements, ), ;, }, public, int, childrenSize, (, ), {, return, children, ., size, (, ), ;]
[), ;, }, public, int, childrenSize, (, ), {, return, children, ., size, (, ), ;, }, public, void, clearChildren]
[;, }, public, void, clearChildren, (, ), {, setChildren, (, ), ;, }, public, Object, getAttribute, (, TagAttr, name, )]
[., size, (, ), ;, }, public, void, clearChildren, (, ), {, setChildren, (, ), ;, }, public, Object, getAttribute]
[;, }, public, Object, getAttribute, (, TagAttr, name, ), {, return, attributes, ., get, (, name, ), ;, }, public]
[;, }, public, Map, <, TagAttr, ,, Object, >, getAttributes, (, ), {, return, attributes, ;, }, public, JsonML, getChild]
[., get, (, name, ), ;, }, public, Map, <, TagAttr, ,, Object, >, getAttributes, (, ), {, return, attributes]
[), ;, }, public, Map, <, TagAttr, ,, Object, >, getAttributes, (, ), {, return, attributes, ;, }, public, JsonML]
[;, }, public, JsonML, getChild, (, int, index, ), {, return, children, ., get, (, index, ), ;, }, public]
[;, }, public, List, <, JsonML, >, getChildren, (, ), {, return, children, ;, }, public, List, <, JsonML, >]
[., get, (, index, ), ;, }, public, List, <, JsonML, >, getChildren, (, ), {, return, children, ;, }]
[), ;, }, public, List, <, JsonML, >, getChildren, (, ), {, return, children, ;, }, public, List, <, JsonML]
[;, }, public, List, <, JsonML, >, getChildren, (, int, fromIndex, ,, int, toIndex, ), {, return, children, ., subList]
[;, }, public, TagType, getType, (, ), {, return, type, ;, }, public, boolean, hasChildren, (, ), {, return, !]
[., subList, (, fromIndex, ,, toIndex, ), ;, }, public, TagType, getType, (, ), {, return, type, ;, }, public]
[,, toIndex, ), ;, }, public, TagType, getType, (, ), {, return, type, ;, }, public, boolean, hasChildren, (, )]
[), ;, }, public, TagType, getType, (, ), {, return, type, ;, }, public, boolean, hasChildren, (, ), {, return]
[;, }, public, boolean, hasChildren, (, ), {, return, !, children, ., isEmpty, (, ), ;, }, public, void, setAttribute]
[;, }, public, void, setAttribute, (, TagAttr, name, ,, Object, value, ), {, attributes, ., put, (, name, ,, value]
[;, }, public, void, setAttribute, (, TagAttr, name, ,, Object, value, ), {, attributes, ., put, (, name, ,, value]
[., isEmpty, (, ), ;, }, public, void, setAttribute, (, TagAttr, name, ,, Object, value, ), {, attributes, ., put]
[;, }, public, void, setAttributes, (, Map, <, TagAttr, ,, Object, >, attributes, ), {, this, ., attributes, =, attributes]
[., put, (, name, ,, value, ), ;, }, public, void, setAttributes, (, Map, <, TagAttr, ,, Object, >, attributes]
[,, value, ), ;, }, public, void, setAttributes, (, Map, <, TagAttr, ,, Object, >, attributes, ), {, this, .]
[), ;, }, public, void, setAttributes, (, Map, <, TagAttr, ,, Object, >, attributes, ), {, this, ., attributes, =]
[=, attributes, ;, }, public, void, setChild, (, int, index, ,, JsonML, element, ), {, children, ., set, (, index]
[., attributes, =, attributes, ;, }, public, void, setChild, (, int, index, ,, JsonML, element, ), {, children, ., set]
[;, }, public, void, setChild, (, int, index, ,, JsonML, element, ), {, children, ., set, (, index, ,, element]
[;, }, public, void, setChildren, (, JsonML, ..., children, ), {, this, ., children, ., clear, (, ), ;, this]
[., set, (, index, ,, element, ), ;, }, public, void, setChildren, (, JsonML, ..., children, ), {, this, .]
[,, element, ), ;, }, public, void, setChildren, (, JsonML, ..., children, ), {, this, ., children, ., clear, (]
[), ;, }, public, void, setChildren, (, JsonML, ..., children, ), {, this, ., children, ., clear, (, ), ;]
[;, this, ., children, ., addAll, (, Arrays, ., asList, (, children, ), ), ;, }, public, void, setChildren, (]
[., clear, (, ), ;, this, ., children, ., addAll, (, Arrays, ., asList, (, children, ), ), ;, }]
[., children, ., clear, (, ), ;, this, ., children, ., addAll, (, Arrays, ., asList, (, children, ), )]
[;, }, public, void, setChildren, (, List, <, JsonML, >, children, ), {, this, ., children, =, children, ;, }]
[., addAll, (, Arrays, ., asList, (, children, ), ), ;, }, public, void, setChildren, (, List, <, JsonML, >]
[., children, ., addAll, (, Arrays, ., asList, (, children, ), ), ;, }, public, void, setChildren, (, List, <]
[), ;, }, public, void, setChildren, (, List, <, JsonML, >, children, ), {, this, ., children, =, children, ;]
[., asList, (, children, ), ), ;, }, public, void, setChildren, (, List, <, JsonML, >, children, ), {, this]
[), ), ;, }, public, void, setChildren, (, List, <, JsonML, >, children, ), {, this, ., children, =, children]
[=, children, ;, }, @, Override, public, String, toString, (, ), {, StringBuilder, sb, =, new, StringBuilder, (, ), ;]
[., children, =, children, ;, }, @, Override, public, String, toString, (, ), {, StringBuilder, sb, =, new, StringBuilder, (]
[;, }, @, Override, public, String, toString, (, ), {, StringBuilder, sb, =, new, StringBuilder, (, ), ;, toString, (]
[;, toString, (, sb, ,, true, ,, true, ), ;, return, sb, ., toString, (, ), ;, }, private, void]
[;, return, sb, ., toString, (, ), ;, }, private, void, toString, (, StringBuilder, sb, ,, boolean, printAttributes, ,, boolean]
[,, true, ,, true, ), ;, return, sb, ., toString, (, ), ;, }, private, void, toString, (, StringBuilder, sb]
[,, true, ), ;, return, sb, ., toString, (, ), ;, }, private, void, toString, (, StringBuilder, sb, ,, boolean]
[), ;, return, sb, ., toString, (, ), ;, }, private, void, toString, (, StringBuilder, sb, ,, boolean, printAttributes, ,]
[;, }, private, void, toString, (, StringBuilder, sb, ,, boolean, printAttributes, ,, boolean, printChildren, ), {, sb, ., append, (]
[., toString, (, ), ;, }, private, void, toString, (, StringBuilder, sb, ,, boolean, printAttributes, ,, boolean, printChildren, ), {]
[;, escapeStringOnto, (, type, ., name, (, ), ,, sb, ), ;, sb, ., append, (, '"', ), ;, if]
[., append, (, "[\"", ), ;, escapeStringOnto, (, type, ., name, (, ), ,, sb, ), ;, sb, ., append]
[), ;, escapeStringOnto, (, type, ., name, (, ), ,, sb, ), ;, sb, ., append, (, '"', ), ;]
[;, sb, ., append, (, '"', ), ;, if, (, printAttributes, ), {, sb, ., append, (, ", {", ), ;]
[,, sb, ), ;, sb, ., append, (, '"', ), ;, if, (, printAttributes, ), {, sb, ., append, (]
[., name, (, ), ,, sb, ), ;, sb, ., append, (, '"', ), ;, if, (, printAttributes, ), {]
[), ;, sb, ., append, (, '"', ), ;, if, (, printAttributes, ), {, sb, ., append, (, ", {", )]
[;, if, (, printAttributes, ), {, sb, ., append, (, ", {", ), ;, boolean, first, =, true, ;, for, (]
[., append, (, '"', ), ;, if, (, printAttributes, ), {, sb, ., append, (, ", {", ), ;, boolean, first]
[), ;, if, (, printAttributes, ), {, sb, ., append, (, ", {", ), ;, boolean, first, =, true, ;, for]
[), {, sb, ., append, (, ", {", ), ;, boolean, first, =, true, ;, for, (, Entry, <, TagAttr, ,]
[;, boolean, first, =, true, ;, for, (, Entry, <, TagAttr, ,, Object, >, entry, :, attributes, ., entrySet, (]
[., append, (, ", {", ), ;, boolean, first, =, true, ;, for, (, Entry, <, TagAttr, ,, Object, >, entry]
[), ;, boolean, first, =, true, ;, for, (, Entry, <, TagAttr, ,, Object, >, entry, :, attributes, ., entrySet]
[;, for, (, Entry, <, TagAttr, ,, Object, >, entry, :, attributes, ., entrySet, (, ), ), {, if, (]
[), {, if, (, first, ), {, first, =, false, ;, }, else, {, sb, ., append, (, ", ", )]
[., entrySet, (, ), ), {, if, (, first, ), {, first, =, false, ;, }, else, {, sb, .]
[), {, first, =, false, ;, }, else, {, sb, ., append, (, ", ", ), ;, }, sb, ., append]
[=, false, ;, }, else, {, sb, ., append, (, ", ", ), ;, }, sb, ., append, (, '"', )]
[;, }, else, {, sb, ., append, (, ", ", ), ;, }, sb, ., append, (, '"', ), ;, escapeStringOnto]
[;, }, sb, ., append, (, '"', ), ;, escapeStringOnto, (, entry, ., getKey, (, ), ., toString, (, )]
[., append, (, ", ", ), ;, }, sb, ., append, (, '"', ), ;, escapeStringOnto, (, entry, ., getKey, (]
[), ;, }, sb, ., append, (, '"', ), ;, escapeStringOnto, (, entry, ., getKey, (, ), ., toString, (]
[;, escapeStringOnto, (, entry, ., getKey, (, ), ., toString, (, ), ,, sb, ), ;, sb, ., append, (]
[., append, (, '"', ), ;, escapeStringOnto, (, entry, ., getKey, (, ), ., toString, (, ), ,, sb, )]
[), ;, escapeStringOnto, (, entry, ., getKey, (, ), ., toString, (, ), ,, sb, ), ;, sb, ., append]
[;, sb, ., append, (, "\": ", ), ;, Object, value, =, entry, ., getValue, (, ), ;, if, (, value]
[,, sb, ), ;, sb, ., append, (, "\": ", ), ;, Object, value, =, entry, ., getValue, (, ), ;]
[., toString, (, ), ,, sb, ), ;, sb, ., append, (, "\": ", ), ;, Object, value, =, entry, .]
[., getKey, (, ), ., toString, (, ), ,, sb, ), ;, sb, ., append, (, "\": ", ), ;, Object]
[), ;, sb, ., append, (, "\": ", ), ;, Object, value, =, entry, ., getValue, (, ), ;, if, (]
[;, Object, value, =, entry, ., getValue, (, ), ;, if, (, value, ==, null, ), {, sb, ., append]
[., append, (, "\": ", ), ;, Object, value, =, entry, ., getValue, (, ), ;, if, (, value, ==, null]
[), ;, Object, value, =, entry, ., getValue, (, ), ;, if, (, value, ==, null, ), {, sb, .]
[;, if, (, value, ==, null, ), {, sb, ., append, (, "null", ), ;, }, else, if, (, value]
[., getValue, (, ), ;, if, (, value, ==, null, ), {, sb, ., append, (, "null", ), ;, }]
[), {, sb, ., append, (, "null", ), ;, }, else, if, (, value, instanceof, String, ), {, sb, .]
[==, null, ), {, sb, ., append, (, "null", ), ;, }, else, if, (, value, instanceof, String, ), {]
[), {, sb, ., append, (, "null", ), ;, }, else, if, (, value, instanceof, String, ), {, sb, .]
[;, }, else, if, (, value, instanceof, String, ), {, sb, ., append, (, '"', ), ;, escapeStringOnto, (, (]
[., append, (, "null", ), ;, }, else, if, (, value, instanceof, String, ), {, sb, ., append, (, '"']
[), ;, }, else, if, (, value, instanceof, String, ), {, sb, ., append, (, '"', ), ;, escapeStringOnto, (]
[), {, sb, ., append, (, '"', ), ;, escapeStringOnto, (, (, String, ), value, ,, sb, ), ;, sb]
[instanceof, String, ), {, sb, ., append, (, '"', ), ;, escapeStringOnto, (, (, String, ), value, ,, sb, )]
[;, escapeStringOnto, (, (, String, ), value, ,, sb, ), ;, sb, ., append, (, '"', ), ;, }, else]
[., append, (, '"', ), ;, escapeStringOnto, (, (, String, ), value, ,, sb, ), ;, sb, ., append, (]
[), ;, escapeStringOnto, (, (, String, ), value, ,, sb, ), ;, sb, ., append, (, '"', ), ;, }]
[;, sb, ., append, (, '"', ), ;, }, else, {, sb, ., append, (, value, ), ;, }, }]
[,, sb, ), ;, sb, ., append, (, '"', ), ;, }, else, {, sb, ., append, (, value, )]
[,, sb, ), ;, sb, ., append, (, '"', ), ;, }, else, {, sb, ., append, (, value, )]
[), ;, sb, ., append, (, '"', ), ;, }, else, {, sb, ., append, (, value, ), ;, }]
[;, }, else, {, sb, ., append, (, value, ), ;, }, }, sb, ., append, (, "}", ), ;]
[., append, (, '"', ), ;, }, else, {, sb, ., append, (, value, ), ;, }, }, sb, .]
[), ;, }, else, {, sb, ., append, (, value, ), ;, }, }, sb, ., append, (, "}", )]
[;, }, }, sb, ., append, (, "}", ), ;, }, if, (, printChildren, ), {, for, (, JsonML, child]
[., append, (, value, ), ;, }, }, sb, ., append, (, "}", ), ;, }, if, (, printChildren, )]
[), ;, }, }, sb, ., append, (, "}", ), ;, }, if, (, printChildren, ), {, for, (, JsonML]
[;, }, if, (, printChildren, ), {, for, (, JsonML, child, :, children, ), {, sb, ., append, (, ", "]
[., append, (, "}", ), ;, }, if, (, printChildren, ), {, for, (, JsonML, child, :, children, ), {]
[), ;, }, if, (, printChildren, ), {, for, (, JsonML, child, :, children, ), {, sb, ., append, (]
[), {, for, (, JsonML, child, :, children, ), {, sb, ., append, (, ", ", ), ;, sb, ., append]
[), {, sb, ., append, (, ", ", ), ;, sb, ., append, (, child, ., toString, (, ), ), ;]
[;, sb, ., append, (, child, ., toString, (, ), ), ;, }, }, sb, ., append, (, ']', )]
[., append, (, ", ", ), ;, sb, ., append, (, child, ., toString, (, ), ), ;, }, }, sb]
[), ;, sb, ., append, (, child, ., toString, (, ), ), ;, }, }, sb, ., append, (, ']']
[;, }, }, sb, ., append, (, ']', ), ;, }, private, static, void, escapeStringOnto, (, String, s, ,, StringBuilder]
[., append, (, child, ., toString, (, ), ), ;, }, }, sb, ., append, (, ']', ), ;, }]
[), ;, }, }, sb, ., append, (, ']', ), ;, }, private, static, void, escapeStringOnto, (, String, s, ,]
[., toString, (, ), ), ;, }, }, sb, ., append, (, ']', ), ;, }, private, static, void, escapeStringOnto]
[;, }, private, static, void, escapeStringOnto, (, String, s, ,, StringBuilder, sb, ), {, int, pos, =, 0, ,, n]
[., append, (, ']', ), ;, }, private, static, void, escapeStringOnto, (, String, s, ,, StringBuilder, sb, ), {, int]
[), ;, }, private, static, void, escapeStringOnto, (, String, s, ,, StringBuilder, sb, ), {, int, pos, =, 0, ,]
[,, n, =, s, ., length, (, ), ;, for, (, int, i, =, 0, ;, i, <, n, ;]
[;, for, (, int, i, =, 0, ;, i, <, n, ;, ++, i, ), {, char, ch, =, s]
[., length, (, ), ;, for, (, int, i, =, 0, ;, i, <, n, ;, ++, i, ), {]
[;, i, <, n, ;, ++, i, ), {, char, ch, =, s, ., charAt, (, i, ), ;, switch]
[;, ++, i, ), {, char, ch, =, s, ., charAt, (, i, ), ;, switch, (, ch, ), {]
[<, n, ;, ++, i, ), {, char, ch, =, s, ., charAt, (, i, ), ;, switch, (, ch]
[;, ++, i, ), {, char, ch, =, s, ., charAt, (, i, ), ;, switch, (, ch, ), {]
[), {, char, ch, =, s, ., charAt, (, i, ), ;, switch, (, ch, ), {, case, '\r', :]
[), {, char, ch, =, s, ., charAt, (, i, ), ;, switch, (, ch, ), {, case, '\r', :]
[;, switch, (, ch, ), {, case, '\r', :, case, '\n', :, case, '"', :, case, '\\', :, case, '\u2028']
[., charAt, (, i, ), ;, switch, (, ch, ), {, case, '\r', :, case, '\n', :, case, '"', :]
[), ;, switch, (, ch, ), {, case, '\r', :, case, '\n', :, case, '"', :, case, '\\', :, case]
[), {, case, '\r', :, case, '\n', :, case, '"', :, case, '\\', :, case, '\u2028', :, case, '\u2029', :]
[:, case, '\n', :, case, '"', :, case, '\\', :, case, '\u2028', :, case, '\u2029', :, String, hex, =, Integer]
[:, case, '"', :, case, '\\', :, case, '\u2028', :, case, '\u2029', :, String, hex, =, Integer, ., toString, (]
[:, case, '\\', :, case, '\u2028', :, case, '\u2029', :, String, hex, =, Integer, ., toString, (, ch, ,, 16]
[:, case, '\u2028', :, case, '\u2029', :, String, hex, =, Integer, ., toString, (, ch, ,, 16, ), ;, sb]
[:, case, '\u2029', :, String, hex, =, Integer, ., toString, (, ch, ,, 16, ), ;, sb, ., append, (]
[:, String, hex, =, Integer, ., toString, (, ch, ,, 16, ), ;, sb, ., append, (, s, ,, pos]
[;, sb, ., append, (, s, ,, pos, ,, i, ), ., append, (, "\\u", ), ., append, (, "0000"]
[., toString, (, ch, ,, 16, ), ;, sb, ., append, (, s, ,, pos, ,, i, ), ., append]
[,, 16, ), ;, sb, ., append, (, s, ,, pos, ,, i, ), ., append, (, "\\u", ), .]
[), ;, sb, ., append, (, s, ,, pos, ,, i, ), ., append, (, "\\u", ), ., append, (]
[;, pos, =, i, +, 1, ;, break, ;, }, }, sb, ., append, (, s, ,, pos, ,, n]
[., append, (, hex, ), ;, pos, =, i, +, 1, ;, break, ;, }, }, sb, ., append, (]
[., append, (, "0000", ,, hex, ., length, (, ), ,, 4, ), ., append, (, hex, ), ;, pos]
[., append, (, "\\u", ), ., append, (, "0000", ,, hex, ., length, (, ), ,, 4, ), ., append]
[., append, (, s, ,, pos, ,, i, ), ., append, (, "\\u", ), ., append, (, "0000", ,, hex]
[,, pos, ,, i, ), ., append, (, "\\u", ), ., append, (, "0000", ,, hex, ., length, (, )]
[,, i, ), ., append, (, "\\u", ), ., append, (, "0000", ,, hex, ., length, (, ), ,, 4]
[), ., append, (, "\\u", ), ., append, (, "0000", ,, hex, ., length, (, ), ,, 4, ), .]
[), ., append, (, "0000", ,, hex, ., length, (, ), ,, 4, ), ., append, (, hex, ), ;]
[,, hex, ., length, (, ), ,, 4, ), ., append, (, hex, ), ;, pos, =, i, +, 1]
[,, 4, ), ., append, (, hex, ), ;, pos, =, i, +, 1, ;, break, ;, }, }, sb]
[., length, (, ), ,, 4, ), ., append, (, hex, ), ;, pos, =, i, +, 1, ;, break]
[), ., append, (, hex, ), ;, pos, =, i, +, 1, ;, break, ;, }, }, sb, ., append]
[), ;, pos, =, i, +, 1, ;, break, ;, }, }, sb, ., append, (, s, ,, pos, ,]
[=, i, +, 1, ;, break, ;, }, }, sb, ., append, (, s, ,, pos, ,, n, ), ;]
[;, break, ;, }, }, sb, ., append, (, s, ,, pos, ,, n, ), ;, }, public, String, toStringTree]
[+, 1, ;, break, ;, }, }, sb, ., append, (, s, ,, pos, ,, n, ), ;, }, public]
[;, break, ;, }, }, sb, ., append, (, s, ,, pos, ,, n, ), ;, }, public, String, toStringTree]
[;, }, public, String, toStringTree, (, ), {, try, {, StringBuilder, s, =, new, StringBuilder, (, ), ;, toStringTreeHelper, (]
[., append, (, s, ,, pos, ,, n, ), ;, }, public, String, toStringTree, (, ), {, try, {, StringBuilder]
[,, pos, ,, n, ), ;, }, public, String, toStringTree, (, ), {, try, {, StringBuilder, s, =, new, StringBuilder]
[,, n, ), ;, }, public, String, toStringTree, (, ), {, try, {, StringBuilder, s, =, new, StringBuilder, (, )]
[), ;, }, public, String, toStringTree, (, ), {, try, {, StringBuilder, s, =, new, StringBuilder, (, ), ;, toStringTreeHelper]
[;, toStringTreeHelper, (, this, ,, 0, ,, s, ), ;, return, s, ., toString, (, ), ;, }, catch, (]
[;, return, s, ., toString, (, ), ;, }, catch, (, IOException, e, ), {, throw, new, RuntimeException, (, "Should not happen\n"]
[,, 0, ,, s, ), ;, return, s, ., toString, (, ), ;, }, catch, (, IOException, e, ), {]
[,, s, ), ;, return, s, ., toString, (, ), ;, }, catch, (, IOException, e, ), {, throw, new]
[), ;, return, s, ., toString, (, ), ;, }, catch, (, IOException, e, ), {, throw, new, RuntimeException, (]
[;, }, catch, (, IOException, e, ), {, throw, new, RuntimeException, (, "Should not happen\n", +, e, ), ;, }, }, private]
[., toString, (, ), ;, }, catch, (, IOException, e, ), {, throw, new, RuntimeException, (, "Should not happen\n", +, e, )]
[;, }, }, private, static, void, toStringTreeHelper, (, JsonML, element, ,, int, level, ,, StringBuilder, sb, ), throws, IOException, {]
[), ;, }, }, private, static, void, toStringTreeHelper, (, JsonML, element, ,, int, level, ,, StringBuilder, sb, ), throws, IOException]
[+, e, ), ;, }, }, private, static, void, toStringTreeHelper, (, JsonML, element, ,, int, level, ,, StringBuilder, sb, )]
[), ;, }, }, private, static, void, toStringTreeHelper, (, JsonML, element, ,, int, level, ,, StringBuilder, sb, ), throws, IOException]
[;, i, <, level, ;, ++, i, ), {, sb, ., append, (, "    ", ), ;, }, element, ., toString]
[;, ++, i, ), {, sb, ., append, (, "    ", ), ;, }, element, ., toString, (, sb, ,, true]
[<, level, ;, ++, i, ), {, sb, ., append, (, "    ", ), ;, }, element, ., toString, (, sb]
[;, ++, i, ), {, sb, ., append, (, "    ", ), ;, }, element, ., toString, (, sb, ,, true]
[), {, sb, ., append, (, "    ", ), ;, }, element, ., toString, (, sb, ,, true, ,, false, )]
[), {, sb, ., append, (, "    ", ), ;, }, element, ., toString, (, sb, ,, true, ,, false, )]
[;, }, element, ., toString, (, sb, ,, true, ,, false, ), ;, sb, ., append, (, "\n", ), ;]
[., append, (, "    ", ), ;, }, element, ., toString, (, sb, ,, true, ,, false, ), ;, sb, .]
[), ;, }, element, ., toString, (, sb, ,, true, ,, false, ), ;, sb, ., append, (, "\n", )]
[;, sb, ., append, (, "\n", ), ;, for, (, JsonML, child, :, element, ., getChildren, (, ), ), {]
[., toString, (, sb, ,, true, ,, false, ), ;, sb, ., append, (, "\n", ), ;, for, (, JsonML]
[,, true, ,, false, ), ;, sb, ., append, (, "\n", ), ;, for, (, JsonML, child, :, element, .]
[,, false, ), ;, sb, ., append, (, "\n", ), ;, for, (, JsonML, child, :, element, ., getChildren, (]
[), ;, sb, ., append, (, "\n", ), ;, for, (, JsonML, child, :, element, ., getChildren, (, ), )]
[;, for, (, JsonML, child, :, element, ., getChildren, (, ), ), {, toStringTreeHelper, (, child, ,, level, +, 1]
[., append, (, "\n", ), ;, for, (, JsonML, child, :, element, ., getChildren, (, ), ), {, toStringTreeHelper, (]
[), ;, for, (, JsonML, child, :, element, ., getChildren, (, ), ), {, toStringTreeHelper, (, child, ,, level, +]
[), {, toStringTreeHelper, (, child, ,, level, +, 1, ,, sb, ), ;, }, }, }]
[., getChildren, (, ), ), {, toStringTreeHelper, (, child, ,, level, +, 1, ,, sb, ), ;, }, }, }]
[;, }, }, }]
[,, level, +, 1, ,, sb, ), ;, }, }, }]
[,, sb, ), ;, }, }, }]
[+, 1, ,, sb, ), ;, }, }, }]
[,, sb, ), ;, }, }, }]
[), ;, }, }, }]
