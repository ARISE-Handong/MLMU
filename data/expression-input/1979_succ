[;, }, public, static, class, Proxy, implements, CodingConvention, {, protected, final, CodingConvention, nextConvention, ;, protected, Proxy, (, CodingConvention, convention, )]
[=, convention, ;, }, @, Override, public, boolean, isConstant, (, String, variableName, ), {, return, nextConvention, ., isConstant, (, variableName]
[., nextConvention, =, convention, ;, }, @, Override, public, boolean, isConstant, (, String, variableName, ), {, return, nextConvention, ., isConstant]
[;, }, @, Override, public, boolean, isConstant, (, String, variableName, ), {, return, nextConvention, ., isConstant, (, variableName, ), ;]
[;, }, @, Override, public, boolean, isConstantKey, (, String, keyName, ), {, return, nextConvention, ., isConstantKey, (, keyName, ), ;]
[., isConstant, (, variableName, ), ;, }, @, Override, public, boolean, isConstantKey, (, String, keyName, ), {, return, nextConvention, .]
[), ;, }, @, Override, public, boolean, isConstantKey, (, String, keyName, ), {, return, nextConvention, ., isConstantKey, (, keyName, )]
[;, }, @, Override, public, boolean, isValidEnumKey, (, String, key, ), {, return, nextConvention, ., isValidEnumKey, (, key, ), ;]
[., isConstantKey, (, keyName, ), ;, }, @, Override, public, boolean, isValidEnumKey, (, String, key, ), {, return, nextConvention, .]
[), ;, }, @, Override, public, boolean, isValidEnumKey, (, String, key, ), {, return, nextConvention, ., isValidEnumKey, (, key, )]
[;, }, @, Override, public, boolean, isOptionalParameter, (, Node, parameter, ), {, return, nextConvention, ., isOptionalParameter, (, parameter, ), ;]
[., isValidEnumKey, (, key, ), ;, }, @, Override, public, boolean, isOptionalParameter, (, Node, parameter, ), {, return, nextConvention, .]
[), ;, }, @, Override, public, boolean, isOptionalParameter, (, Node, parameter, ), {, return, nextConvention, ., isOptionalParameter, (, parameter, )]
[;, }, @, Override, public, boolean, isVarArgsParameter, (, Node, parameter, ), {, return, nextConvention, ., isVarArgsParameter, (, parameter, ), ;]
[., isOptionalParameter, (, parameter, ), ;, }, @, Override, public, boolean, isVarArgsParameter, (, Node, parameter, ), {, return, nextConvention, .]
[), ;, }, @, Override, public, boolean, isVarArgsParameter, (, Node, parameter, ), {, return, nextConvention, ., isVarArgsParameter, (, parameter, )]
[;, }, @, Override, public, boolean, isExported, (, String, name, ,, boolean, local, ), {, return, nextConvention, ., isExported, (]
[., isVarArgsParameter, (, parameter, ), ;, }, @, Override, public, boolean, isExported, (, String, name, ,, boolean, local, ), {]
[), ;, }, @, Override, public, boolean, isExported, (, String, name, ,, boolean, local, ), {, return, nextConvention, ., isExported]
[;, }, @, Override, public, final, boolean, isExported, (, String, name, ), {, return, isExported, (, name, ,, false, )]
[., isExported, (, name, ,, local, ), ;, }, @, Override, public, final, boolean, isExported, (, String, name, ), {]
[,, local, ), ;, }, @, Override, public, final, boolean, isExported, (, String, name, ), {, return, isExported, (, name]
[), ;, }, @, Override, public, final, boolean, isExported, (, String, name, ), {, return, isExported, (, name, ,, false]
[;, }, @, Override, public, boolean, isPrivate, (, String, name, ), {, return, nextConvention, ., isPrivate, (, name, ), ;]
[||, isExported, (, name, ,, true, ), ;, }, @, Override, public, boolean, isPrivate, (, String, name, ), {, return]
[,, false, ), ||, isExported, (, name, ,, true, ), ;, }, @, Override, public, boolean, isPrivate, (, String, name]
[), ||, isExported, (, name, ,, true, ), ;, }, @, Override, public, boolean, isPrivate, (, String, name, ), {]
[;, }, @, Override, public, boolean, isPrivate, (, String, name, ), {, return, nextConvention, ., isPrivate, (, name, ), ;]
[,, true, ), ;, }, @, Override, public, boolean, isPrivate, (, String, name, ), {, return, nextConvention, ., isPrivate, (]
[), ;, }, @, Override, public, boolean, isPrivate, (, String, name, ), {, return, nextConvention, ., isPrivate, (, name, )]
[;, }, @, Override, public, SubclassRelationship, getClassesDefinedByCall, (, Node, callNode, ), {, return, nextConvention, ., getClassesDefinedByCall, (, callNode, ), ;]
[., isPrivate, (, name, ), ;, }, @, Override, public, SubclassRelationship, getClassesDefinedByCall, (, Node, callNode, ), {, return, nextConvention, .]
[), ;, }, @, Override, public, SubclassRelationship, getClassesDefinedByCall, (, Node, callNode, ), {, return, nextConvention, ., getClassesDefinedByCall, (, callNode, )]
[;, }, @, Override, public, boolean, isSuperClassReference, (, String, propertyName, ), {, return, nextConvention, ., isSuperClassReference, (, propertyName, ), ;]
[., getClassesDefinedByCall, (, callNode, ), ;, }, @, Override, public, boolean, isSuperClassReference, (, String, propertyName, ), {, return, nextConvention, .]
[), ;, }, @, Override, public, boolean, isSuperClassReference, (, String, propertyName, ), {, return, nextConvention, ., isSuperClassReference, (, propertyName, )]
[;, }, @, Override, public, String, extractClassNameIfProvide, (, Node, node, ,, Node, parent, ), {, return, nextConvention, ., extractClassNameIfProvide, (]
[., isSuperClassReference, (, propertyName, ), ;, }, @, Override, public, String, extractClassNameIfProvide, (, Node, node, ,, Node, parent, ), {]
[), ;, }, @, Override, public, String, extractClassNameIfProvide, (, Node, node, ,, Node, parent, ), {, return, nextConvention, ., extractClassNameIfProvide]
[;, }, @, Override, public, String, extractClassNameIfRequire, (, Node, node, ,, Node, parent, ), {, return, nextConvention, ., extractClassNameIfRequire, (]
[., extractClassNameIfProvide, (, node, ,, parent, ), ;, }, @, Override, public, String, extractClassNameIfRequire, (, Node, node, ,, Node, parent]
[,, parent, ), ;, }, @, Override, public, String, extractClassNameIfRequire, (, Node, node, ,, Node, parent, ), {, return, nextConvention]
[), ;, }, @, Override, public, String, extractClassNameIfRequire, (, Node, node, ,, Node, parent, ), {, return, nextConvention, ., extractClassNameIfRequire]
[;, }, @, Override, public, String, getExportPropertyFunction, (, ), {, return, nextConvention, ., getExportPropertyFunction, (, ), ;, }, @, Override]
[., extractClassNameIfRequire, (, node, ,, parent, ), ;, }, @, Override, public, String, getExportPropertyFunction, (, ), {, return, nextConvention, .]
[,, parent, ), ;, }, @, Override, public, String, getExportPropertyFunction, (, ), {, return, nextConvention, ., getExportPropertyFunction, (, ), ;]
[), ;, }, @, Override, public, String, getExportPropertyFunction, (, ), {, return, nextConvention, ., getExportPropertyFunction, (, ), ;, }, @]
[;, }, @, Override, public, String, getExportSymbolFunction, (, ), {, return, nextConvention, ., getExportSymbolFunction, (, ), ;, }, @, Override]
[., getExportPropertyFunction, (, ), ;, }, @, Override, public, String, getExportSymbolFunction, (, ), {, return, nextConvention, ., getExportSymbolFunction, (, )]
[;, }, @, Override, public, List, <, String, >, identifyTypeDeclarationCall, (, Node, n, ), {, return, nextConvention, ., identifyTypeDeclarationCall, (]
[., getExportSymbolFunction, (, ), ;, }, @, Override, public, List, <, String, >, identifyTypeDeclarationCall, (, Node, n, ), {, return]
[;, }, @, Override, public, void, applySubclassRelationship, (, FunctionType, parentCtor, ,, FunctionType, childCtor, ,, SubclassType, type, ), {, nextConvention, .]
[., identifyTypeDeclarationCall, (, n, ), ;, }, @, Override, public, void, applySubclassRelationship, (, FunctionType, parentCtor, ,, FunctionType, childCtor, ,, SubclassType]
[), ;, }, @, Override, public, void, applySubclassRelationship, (, FunctionType, parentCtor, ,, FunctionType, childCtor, ,, SubclassType, type, ), {, nextConvention]
[;, }, @, Override, public, String, getAbstractMethodName, (, ), {, return, nextConvention, ., getAbstractMethodName, (, ), ;, }, @, Override]
[., applySubclassRelationship, (, parentCtor, ,, childCtor, ,, type, ), ;, }, @, Override, public, String, getAbstractMethodName, (, ), {, return]
[,, childCtor, ,, type, ), ;, }, @, Override, public, String, getAbstractMethodName, (, ), {, return, nextConvention, ., getAbstractMethodName, (]
[,, type, ), ;, }, @, Override, public, String, getAbstractMethodName, (, ), {, return, nextConvention, ., getAbstractMethodName, (, ), ;]
[), ;, }, @, Override, public, String, getAbstractMethodName, (, ), {, return, nextConvention, ., getAbstractMethodName, (, ), ;, }, @]
[;, }, @, Override, public, String, getSingletonGetterClassName, (, Node, callNode, ), {, return, nextConvention, ., getSingletonGetterClassName, (, callNode, ), ;]
[., getAbstractMethodName, (, ), ;, }, @, Override, public, String, getSingletonGetterClassName, (, Node, callNode, ), {, return, nextConvention, ., getSingletonGetterClassName]
[;, }, @, Override, public, void, applySingletonGetter, (, FunctionType, functionType, ,, FunctionType, getterType, ,, ObjectType, objectType, ), {, nextConvention, .]
[., getSingletonGetterClassName, (, callNode, ), ;, }, @, Override, public, void, applySingletonGetter, (, FunctionType, functionType, ,, FunctionType, getterType, ,, ObjectType]
[), ;, }, @, Override, public, void, applySingletonGetter, (, FunctionType, functionType, ,, FunctionType, getterType, ,, ObjectType, objectType, ), {, nextConvention]
[;, }, @, Override, public, boolean, isInlinableFunction, (, Node, n, ), {, return, nextConvention, ., isInlinableFunction, (, n, ), ;]
[., applySingletonGetter, (, functionType, ,, getterType, ,, objectType, ), ;, }, @, Override, public, boolean, isInlinableFunction, (, Node, n, )]
[,, getterType, ,, objectType, ), ;, }, @, Override, public, boolean, isInlinableFunction, (, Node, n, ), {, return, nextConvention, .]
[,, objectType, ), ;, }, @, Override, public, boolean, isInlinableFunction, (, Node, n, ), {, return, nextConvention, ., isInlinableFunction, (]
[), ;, }, @, Override, public, boolean, isInlinableFunction, (, Node, n, ), {, return, nextConvention, ., isInlinableFunction, (, n, )]
[;, }, @, Override, public, DelegateRelationship, getDelegateRelationship, (, Node, callNode, ), {, return, nextConvention, ., getDelegateRelationship, (, callNode, ), ;]
[., isInlinableFunction, (, n, ), ;, }, @, Override, public, DelegateRelationship, getDelegateRelationship, (, Node, callNode, ), {, return, nextConvention, .]
[), ;, }, @, Override, public, DelegateRelationship, getDelegateRelationship, (, Node, callNode, ), {, return, nextConvention, ., getDelegateRelationship, (, callNode, )]
[;, }, @, Override, public, void, applyDelegateRelationship, (, ObjectType, delegateSuperclass, ,, ObjectType, delegateBase, ,, ObjectType, delegator, ,, FunctionType, delegateProxy, ,]
[., getDelegateRelationship, (, callNode, ), ;, }, @, Override, public, void, applyDelegateRelationship, (, ObjectType, delegateSuperclass, ,, ObjectType, delegateBase, ,, ObjectType]
[), ;, }, @, Override, public, void, applyDelegateRelationship, (, ObjectType, delegateSuperclass, ,, ObjectType, delegateBase, ,, ObjectType, delegator, ,, FunctionType, delegateProxy]
[;, }, @, Override, public, String, getDelegateSuperclassName, (, ), {, return, nextConvention, ., getDelegateSuperclassName, (, ), ;, }, @, Override]
[., applyDelegateRelationship, (, delegateSuperclass, ,, delegateBase, ,, delegator, ,, delegateProxy, ,, findDelegate, ), ;, }, @, Override, public, String, getDelegateSuperclassName]
[,, delegateBase, ,, delegator, ,, delegateProxy, ,, findDelegate, ), ;, }, @, Override, public, String, getDelegateSuperclassName, (, ), {, return]
[,, delegator, ,, delegateProxy, ,, findDelegate, ), ;, }, @, Override, public, String, getDelegateSuperclassName, (, ), {, return, nextConvention, .]
[,, delegateProxy, ,, findDelegate, ), ;, }, @, Override, public, String, getDelegateSuperclassName, (, ), {, return, nextConvention, ., getDelegateSuperclassName, (]
[,, findDelegate, ), ;, }, @, Override, public, String, getDelegateSuperclassName, (, ), {, return, nextConvention, ., getDelegateSuperclassName, (, ), ;]
[), ;, }, @, Override, public, String, getDelegateSuperclassName, (, ), {, return, nextConvention, ., getDelegateSuperclassName, (, ), ;, }, @]
[;, }, @, Override, public, void, checkForCallingConventionDefiningCalls, (, Node, n, ,, Map, <, String, ,, String, >, delegateCallingConventions, ), {]
[., getDelegateSuperclassName, (, ), ;, }, @, Override, public, void, checkForCallingConventionDefiningCalls, (, Node, n, ,, Map, <, String, ,, String]
[;, }, @, Override, public, void, defineDelegateProxyPrototypeProperties, (, JSTypeRegistry, registry, ,, StaticScope, <, JSType, >, scope, ,, List, <, ObjectType]
[., checkForCallingConventionDefiningCalls, (, n, ,, delegateCallingConventions, ), ;, }, @, Override, public, void, defineDelegateProxyPrototypeProperties, (, JSTypeRegistry, registry, ,, StaticScope, <]
[,, delegateCallingConventions, ), ;, }, @, Override, public, void, defineDelegateProxyPrototypeProperties, (, JSTypeRegistry, registry, ,, StaticScope, <, JSType, >, scope, ,]
[), ;, }, @, Override, public, void, defineDelegateProxyPrototypeProperties, (, JSTypeRegistry, registry, ,, StaticScope, <, JSType, >, scope, ,, List, <]
[;, }, @, Override, public, String, getGlobalObject, (, ), {, return, nextConvention, ., getGlobalObject, (, ), ;, }, @, Override]
[., defineDelegateProxyPrototypeProperties, (, registry, ,, scope, ,, delegateProxyPrototypes, ,, delegateCallingConventions, ), ;, }, @, Override, public, String, getGlobalObject, (, )]
[,, scope, ,, delegateProxyPrototypes, ,, delegateCallingConventions, ), ;, }, @, Override, public, String, getGlobalObject, (, ), {, return, nextConvention, .]
[,, delegateProxyPrototypes, ,, delegateCallingConventions, ), ;, }, @, Override, public, String, getGlobalObject, (, ), {, return, nextConvention, ., getGlobalObject, (]
[,, delegateCallingConventions, ), ;, }, @, Override, public, String, getGlobalObject, (, ), {, return, nextConvention, ., getGlobalObject, (, ), ;]
[), ;, }, @, Override, public, String, getGlobalObject, (, ), {, return, nextConvention, ., getGlobalObject, (, ), ;, }, @]
[;, }, @, Override, public, Collection, <, AssertionFunctionSpec, >, getAssertionFunctions, (, ), {, return, nextConvention, ., getAssertionFunctions, (, ), ;]
[., getGlobalObject, (, ), ;, }, @, Override, public, Collection, <, AssertionFunctionSpec, >, getAssertionFunctions, (, ), {, return, nextConvention, .]
[;, }, @, Override, public, Bind, describeFunctionBind, (, Node, n, ), {, return, describeFunctionBind, (, n, ,, false, ), ;]
[., getAssertionFunctions, (, ), ;, }, @, Override, public, Bind, describeFunctionBind, (, Node, n, ), {, return, describeFunctionBind, (, n]
[;, }, @, Override, public, Bind, describeFunctionBind, (, Node, n, ,, boolean, useTypeInfo, ), {, return, nextConvention, ., describeFunctionBind, (]
[,, false, ), ;, }, @, Override, public, Bind, describeFunctionBind, (, Node, n, ,, boolean, useTypeInfo, ), {, return, nextConvention]
[), ;, }, @, Override, public, Bind, describeFunctionBind, (, Node, n, ,, boolean, useTypeInfo, ), {, return, nextConvention, ., describeFunctionBind]
[;, }, @, Override, public, boolean, isPropertyTestFunction, (, Node, call, ), {, return, nextConvention, ., isPropertyTestFunction, (, call, ), ;]
[., describeFunctionBind, (, n, ,, useTypeInfo, ), ;, }, @, Override, public, boolean, isPropertyTestFunction, (, Node, call, ), {, return]
[,, useTypeInfo, ), ;, }, @, Override, public, boolean, isPropertyTestFunction, (, Node, call, ), {, return, nextConvention, ., isPropertyTestFunction, (]
[), ;, }, @, Override, public, boolean, isPropertyTestFunction, (, Node, call, ), {, return, nextConvention, ., isPropertyTestFunction, (, call, )]
[;, }, @, Override, public, boolean, isPrototypeAlias, (, Node, getProp, ), {, return, false, ;, }, @, Override, public, ObjectLiteralCast]
[., isPropertyTestFunction, (, call, ), ;, }, @, Override, public, boolean, isPrototypeAlias, (, Node, getProp, ), {, return, false, ;]
[), ;, }, @, Override, public, boolean, isPrototypeAlias, (, Node, getProp, ), {, return, false, ;, }, @, Override, public]
[;, }, @, Override, public, ObjectLiteralCast, getObjectLiteralCast, (, Node, callNode, ), {, return, nextConvention, ., getObjectLiteralCast, (, callNode, ), ;]
[;, }, @, Override, public, Collection, <, String, >, getIndirectlyDeclaredProperties, (, ), {, return, nextConvention, ., getIndirectlyDeclaredProperties, (, ), ;]
[., getObjectLiteralCast, (, callNode, ), ;, }, @, Override, public, Collection, <, String, >, getIndirectlyDeclaredProperties, (, ), {, return, nextConvention]
[), ;, }, @, Override, public, Collection, <, String, >, getIndirectlyDeclaredProperties, (, ), {, return, nextConvention, ., getIndirectlyDeclaredProperties, (, )]
[;, }, }, private, static, class, DefaultCodingConvention, implements, CodingConvention, {, private, static, final, long, serialVersionUID, =, 1L, ;, @, Override]
[., getIndirectlyDeclaredProperties, (, ), ;, }, }, private, static, class, DefaultCodingConvention, implements, CodingConvention, {, private, static, final, long, serialVersionUID, =]
[;, @, Override, public, boolean, isConstant, (, String, variableName, ), {, return, false, ;, }, @, Override, public, boolean, isConstantKey]
[;, }, @, Override, public, boolean, isConstantKey, (, String, variableName, ), {, return, false, ;, }, @, Override, public, boolean]
[;, }, @, Override, public, boolean, isValidEnumKey, (, String, key, ), {, return, key, !=, null, &&, key, ., length]
[;, }, @, Override, public, boolean, isOptionalParameter, (, Node, parameter, ), {, return, !, isVarArgsParameter, (, parameter, ), ;, }]
[&&, key, ., length, (, ), >, 0, ;, }, @, Override, public, boolean, isOptionalParameter, (, Node, parameter, ), {]
[!=, null, &&, key, ., length, (, ), >, 0, ;, }, @, Override, public, boolean, isOptionalParameter, (, Node, parameter]
[&&, key, ., length, (, ), >, 0, ;, }, @, Override, public, boolean, isOptionalParameter, (, Node, parameter, ), {]
[;, }, @, Override, public, boolean, isOptionalParameter, (, Node, parameter, ), {, return, !, isVarArgsParameter, (, parameter, ), ;, }]
[>, 0, ;, }, @, Override, public, boolean, isOptionalParameter, (, Node, parameter, ), {, return, !, isVarArgsParameter, (, parameter, )]
[., length, (, ), >, 0, ;, }, @, Override, public, boolean, isOptionalParameter, (, Node, parameter, ), {, return, !]
[;, }, @, Override, public, boolean, isOptionalParameter, (, Node, parameter, ), {, return, !, isVarArgsParameter, (, parameter, ), ;, }]
[;, }, @, Override, public, boolean, isVarArgsParameter, (, Node, parameter, ), {, return, parameter, ., getParent, (, ), ., getLastChild]
[;, }, @, Override, public, boolean, isVarArgsParameter, (, Node, parameter, ), {, return, parameter, ., getParent, (, ), ., getLastChild]
[), ;, }, @, Override, public, boolean, isVarArgsParameter, (, Node, parameter, ), {, return, parameter, ., getParent, (, ), .]
[;, }, @, Override, public, boolean, isExported, (, String, name, ,, boolean, local, ), {, return, local, &&, name, .]
[==, parameter, ;, }, @, Override, public, boolean, isExported, (, String, name, ,, boolean, local, ), {, return, local, &&]
[., getLastChild, (, ), ==, parameter, ;, }, @, Override, public, boolean, isExported, (, String, name, ,, boolean, local, )]
[., getParent, (, ), ., getLastChild, (, ), ==, parameter, ;, }, @, Override, public, boolean, isExported, (, String, name]
[;, }, @, Override, public, boolean, isExported, (, String, name, ,, boolean, local, ), {, return, local, &&, name, .]
[;, }, @, Override, public, boolean, isExported, (, String, name, ), {, return, isExported, (, name, ,, false, ), ||]
[&&, name, ., startsWith, (, "$super", ), ;, }, @, Override, public, boolean, isExported, (, String, name, ), {, return]
[;, }, @, Override, public, boolean, isExported, (, String, name, ), {, return, isExported, (, name, ,, false, ), ||]
[., startsWith, (, "$super", ), ;, }, @, Override, public, boolean, isExported, (, String, name, ), {, return, isExported, (]
[), ;, }, @, Override, public, boolean, isExported, (, String, name, ), {, return, isExported, (, name, ,, false, )]
[;, }, @, Override, public, boolean, isPrivate, (, String, name, ), {, return, false, ;, }, @, Override, public, SubclassRelationship]
[||, isExported, (, name, ,, true, ), ;, }, @, Override, public, boolean, isPrivate, (, String, name, ), {, return]
[,, false, ), ||, isExported, (, name, ,, true, ), ;, }, @, Override, public, boolean, isPrivate, (, String, name]
[), ||, isExported, (, name, ,, true, ), ;, }, @, Override, public, boolean, isPrivate, (, String, name, ), {]
[;, }, @, Override, public, boolean, isPrivate, (, String, name, ), {, return, false, ;, }, @, Override, public, SubclassRelationship]
[,, true, ), ;, }, @, Override, public, boolean, isPrivate, (, String, name, ), {, return, false, ;, }, @]
[), ;, }, @, Override, public, boolean, isPrivate, (, String, name, ), {, return, false, ;, }, @, Override, public]
[;, }, @, Override, public, SubclassRelationship, getClassesDefinedByCall, (, Node, callNode, ), {, return, null, ;, }, @, Override, public, boolean]
[;, }, @, Override, public, boolean, isSuperClassReference, (, String, propertyName, ), {, return, false, ;, }, @, Override, public, String]
[;, }, @, Override, public, String, extractClassNameIfProvide, (, Node, node, ,, Node, parent, ), {, String, message, =, "only implemented in GoogleCodingConvention", ;]
[;, throw, new, UnsupportedOperationException, (, message, ), ;, }, @, Override, public, String, extractClassNameIfRequire, (, Node, node, ,, Node, parent]
[;, }, @, Override, public, String, extractClassNameIfRequire, (, Node, node, ,, Node, parent, ), {, String, message, =, "only implemented in GoogleCodingConvention", ;]
[), ;, }, @, Override, public, String, extractClassNameIfRequire, (, Node, node, ,, Node, parent, ), {, String, message, =, "only implemented in GoogleCodingConvention"]
[;, throw, new, UnsupportedOperationException, (, message, ), ;, }, @, Override, public, String, getExportPropertyFunction, (, ), {, return, null, ;]
[;, }, @, Override, public, String, getExportPropertyFunction, (, ), {, return, null, ;, }, @, Override, public, String, getExportSymbolFunction, (]
[), ;, }, @, Override, public, String, getExportPropertyFunction, (, ), {, return, null, ;, }, @, Override, public, String, getExportSymbolFunction]
[;, }, @, Override, public, String, getExportSymbolFunction, (, ), {, return, null, ;, }, @, Override, public, List, <, String]
[;, }, @, Override, public, List, <, String, >, identifyTypeDeclarationCall, (, Node, n, ), {, return, null, ;, }, @]
[;, }, @, Override, public, void, applySubclassRelationship, (, FunctionType, parentCtor, ,, FunctionType, childCtor, ,, SubclassType, type, ), {, }, @]
[;, }, @, Override, public, String, getSingletonGetterClassName, (, Node, callNode, ), {, return, null, ;, }, @, Override, public, void]
[;, }, @, Override, public, void, applySingletonGetter, (, FunctionType, functionType, ,, FunctionType, getterType, ,, ObjectType, objectType, ), {, }, @]
[;, return, true, ;, }, @, Override, public, DelegateRelationship, getDelegateRelationship, (, Node, callNode, ), {, return, null, ;, }, @]
[., checkState, (, n, ., isFunction, (, ), ), ;, return, true, ;, }, @, Override, public, DelegateRelationship, getDelegateRelationship, (]
[), ;, return, true, ;, }, @, Override, public, DelegateRelationship, getDelegateRelationship, (, Node, callNode, ), {, return, null, ;, }]
[., isFunction, (, ), ), ;, return, true, ;, }, @, Override, public, DelegateRelationship, getDelegateRelationship, (, Node, callNode, ), {]
[;, }, @, Override, public, DelegateRelationship, getDelegateRelationship, (, Node, callNode, ), {, return, null, ;, }, @, Override, public, void]
[;, }, @, Override, public, void, applyDelegateRelationship, (, ObjectType, delegateSuperclass, ,, ObjectType, delegateBase, ,, ObjectType, delegator, ,, FunctionType, delegateProxy, ,]
[;, }, @, Override, public, void, checkForCallingConventionDefiningCalls, (, Node, n, ,, Map, <, String, ,, String, >, delegateCallingConventions, ), {]
[;, }, @, Override, public, boolean, isPropertyTestFunction, (, Node, call, ), {, return, false, ;, }, @, Override, public, boolean]
[;, }, @, Override, public, boolean, isPrototypeAlias, (, Node, getProp, ), {, return, false, ;, }, @, Override, public, ObjectLiteralCast]
[;, }, @, Override, public, ObjectLiteralCast, getObjectLiteralCast, (, Node, callNode, ), {, return, null, ;, }, @, Override, public, Collection]
[;, }, @, Override, public, Collection, <, AssertionFunctionSpec, >, getAssertionFunctions, (, ), {, return, Collections, ., emptySet, (, ), ;]
[;, }, @, Override, public, Bind, describeFunctionBind, (, Node, n, ), {, return, describeFunctionBind, (, n, ,, false, ), ;]
[., emptySet, (, ), ;, }, @, Override, public, Bind, describeFunctionBind, (, Node, n, ), {, return, describeFunctionBind, (, n]
[;, }, @, Override, public, Bind, describeFunctionBind, (, Node, n, ,, boolean, useTypeInfo, ), {, if, (, !, n, .]
[,, false, ), ;, }, @, Override, public, Bind, describeFunctionBind, (, Node, n, ,, boolean, useTypeInfo, ), {, if, (]
[), ;, }, @, Override, public, Bind, describeFunctionBind, (, Node, n, ,, boolean, useTypeInfo, ), {, if, (, !, n]
[), {, return, null, ;, }, Node, callTarget, =, n, ., getFirstChild, (, ), ;, String, name, =, callTarget, .]
[), {, return, null, ;, }, Node, callTarget, =, n, ., getFirstChild, (, ), ;, String, name, =, callTarget, .]
[., isCall, (, ), ), {, return, null, ;, }, Node, callTarget, =, n, ., getFirstChild, (, ), ;, String]
[;, }, Node, callTarget, =, n, ., getFirstChild, (, ), ;, String, name, =, callTarget, ., getQualifiedName, (, ), ;]
[;, String, name, =, callTarget, ., getQualifiedName, (, ), ;, if, (, name, !=, null, ), {, if, (, name]
[., getFirstChild, (, ), ;, String, name, =, callTarget, ., getQualifiedName, (, ), ;, if, (, name, !=, null, )]
[;, if, (, name, !=, null, ), {, if, (, name, ., equals, (, "Function.prototype.bind.call", ), ), {, Node, fn]
[., getQualifiedName, (, ), ;, if, (, name, !=, null, ), {, if, (, name, ., equals, (, "Function.prototype.bind.call", )]
[), {, if, (, name, ., equals, (, "Function.prototype.bind.call", ), ), {, Node, fn, =, callTarget, ., getNext, (, )]
[!=, null, ), {, if, (, name, ., equals, (, "Function.prototype.bind.call", ), ), {, Node, fn, =, callTarget, ., getNext]
[), {, if, (, name, ., equals, (, "Function.prototype.bind.call", ), ), {, Node, fn, =, callTarget, ., getNext, (, )]
[), {, Node, fn, =, callTarget, ., getNext, (, ), ;, if, (, fn, ==, null, ), {, return, null]
[., equals, (, "Function.prototype.bind.call", ), ), {, Node, fn, =, callTarget, ., getNext, (, ), ;, if, (, fn, ==]
[), ), {, Node, fn, =, callTarget, ., getNext, (, ), ;, if, (, fn, ==, null, ), {, return]
[;, if, (, fn, ==, null, ), {, return, null, ;, }, Node, thisValue, =, safeNext, (, fn, ), ;]
[., getNext, (, ), ;, if, (, fn, ==, null, ), {, return, null, ;, }, Node, thisValue, =, safeNext]
[), {, return, null, ;, }, Node, thisValue, =, safeNext, (, fn, ), ;, Node, parameters, =, safeNext, (, thisValue]
[==, null, ), {, return, null, ;, }, Node, thisValue, =, safeNext, (, fn, ), ;, Node, parameters, =, safeNext]
[), {, return, null, ;, }, Node, thisValue, =, safeNext, (, fn, ), ;, Node, parameters, =, safeNext, (, thisValue]
[;, }, Node, thisValue, =, safeNext, (, fn, ), ;, Node, parameters, =, safeNext, (, thisValue, ), ;, return, new]
[;, Node, parameters, =, safeNext, (, thisValue, ), ;, return, new, Bind, (, fn, ,, thisValue, ,, parameters, ), ;]
[), ;, Node, parameters, =, safeNext, (, thisValue, ), ;, return, new, Bind, (, fn, ,, thisValue, ,, parameters, )]
[;, return, new, Bind, (, fn, ,, thisValue, ,, parameters, ), ;, }, }, if, (, callTarget, ., isGetProp, (]
[), ;, return, new, Bind, (, fn, ,, thisValue, ,, parameters, ), ;, }, }, if, (, callTarget, ., isGetProp]
[;, }, }, if, (, callTarget, ., isGetProp, (, ), &&, callTarget, ., getLastChild, (, ), ., getString, (, )]
[,, thisValue, ,, parameters, ), ;, }, }, if, (, callTarget, ., isGetProp, (, ), &&, callTarget, ., getLastChild, (]
[,, parameters, ), ;, }, }, if, (, callTarget, ., isGetProp, (, ), &&, callTarget, ., getLastChild, (, ), .]
[), ;, }, }, if, (, callTarget, ., isGetProp, (, ), &&, callTarget, ., getLastChild, (, ), ., getString, (]
[), {, Node, maybeFn, =, callTarget, ., getFirstChild, (, ), ;, JSType, maybeFnType, =, maybeFn, ., getJSType, (, ), ;]
[&&, callTarget, ., getLastChild, (, ), ., getString, (, ), ., equals, (, "bind", ), ), {, Node, maybeFn, =]
[., isGetProp, (, ), &&, callTarget, ., getLastChild, (, ), ., getString, (, ), ., equals, (, "bind", ), )]
[), {, Node, maybeFn, =, callTarget, ., getFirstChild, (, ), ;, JSType, maybeFnType, =, maybeFn, ., getJSType, (, ), ;]
[., equals, (, "bind", ), ), {, Node, maybeFn, =, callTarget, ., getFirstChild, (, ), ;, JSType, maybeFnType, =, maybeFn]
[., getString, (, ), ., equals, (, "bind", ), ), {, Node, maybeFn, =, callTarget, ., getFirstChild, (, ), ;]
[., getLastChild, (, ), ., getString, (, ), ., equals, (, "bind", ), ), {, Node, maybeFn, =, callTarget, .]
[), ), {, Node, maybeFn, =, callTarget, ., getFirstChild, (, ), ;, JSType, maybeFnType, =, maybeFn, ., getJSType, (, )]
[;, JSType, maybeFnType, =, maybeFn, ., getJSType, (, ), ;, FunctionType, fnType, =, null, ;, if, (, useTypeInfo, &&, maybeFnType]
[., getFirstChild, (, ), ;, JSType, maybeFnType, =, maybeFn, ., getJSType, (, ), ;, FunctionType, fnType, =, null, ;, if]
[;, FunctionType, fnType, =, null, ;, if, (, useTypeInfo, &&, maybeFnType, !=, null, ), {, fnType, =, maybeFnType, ., restrictByNotNullOrUndefined]
[., getJSType, (, ), ;, FunctionType, fnType, =, null, ;, if, (, useTypeInfo, &&, maybeFnType, !=, null, ), {, fnType]
[;, if, (, useTypeInfo, &&, maybeFnType, !=, null, ), {, fnType, =, maybeFnType, ., restrictByNotNullOrUndefined, (, ), ., toMaybeFunctionType, (]
[), {, fnType, =, maybeFnType, ., restrictByNotNullOrUndefined, (, ), ., toMaybeFunctionType, (, ), ;, }, if, (, fnType, !=, null]
[&&, maybeFnType, !=, null, ), {, fnType, =, maybeFnType, ., restrictByNotNullOrUndefined, (, ), ., toMaybeFunctionType, (, ), ;, }, if]
[), {, fnType, =, maybeFnType, ., restrictByNotNullOrUndefined, (, ), ., toMaybeFunctionType, (, ), ;, }, if, (, fnType, !=, null]
[!=, null, ), {, fnType, =, maybeFnType, ., restrictByNotNullOrUndefined, (, ), ., toMaybeFunctionType, (, ), ;, }, if, (, fnType]
[), {, fnType, =, maybeFnType, ., restrictByNotNullOrUndefined, (, ), ., toMaybeFunctionType, (, ), ;, }, if, (, fnType, !=, null]
[=, maybeFnType, ., restrictByNotNullOrUndefined, (, ), ., toMaybeFunctionType, (, ), ;, }, if, (, fnType, !=, null, ||, maybeFn, .]
[;, }, if, (, fnType, !=, null, ||, maybeFn, ., isFunction, (, ), ), {, Node, thisValue, =, callTarget, .]
[., toMaybeFunctionType, (, ), ;, }, if, (, fnType, !=, null, ||, maybeFn, ., isFunction, (, ), ), {, Node]
[., restrictByNotNullOrUndefined, (, ), ., toMaybeFunctionType, (, ), ;, }, if, (, fnType, !=, null, ||, maybeFn, ., isFunction, (]
[), {, Node, thisValue, =, callTarget, ., getNext, (, ), ;, Node, parameters, =, safeNext, (, thisValue, ), ;, return]
[||, maybeFn, ., isFunction, (, ), ), {, Node, thisValue, =, callTarget, ., getNext, (, ), ;, Node, parameters, =]
[!=, null, ||, maybeFn, ., isFunction, (, ), ), {, Node, thisValue, =, callTarget, ., getNext, (, ), ;, Node]
[||, maybeFn, ., isFunction, (, ), ), {, Node, thisValue, =, callTarget, ., getNext, (, ), ;, Node, parameters, =]
[), {, Node, thisValue, =, callTarget, ., getNext, (, ), ;, Node, parameters, =, safeNext, (, thisValue, ), ;, return]
[., isFunction, (, ), ), {, Node, thisValue, =, callTarget, ., getNext, (, ), ;, Node, parameters, =, safeNext, (]
[;, Node, parameters, =, safeNext, (, thisValue, ), ;, return, new, Bind, (, maybeFn, ,, thisValue, ,, parameters, ), ;]
[., getNext, (, ), ;, Node, parameters, =, safeNext, (, thisValue, ), ;, return, new, Bind, (, maybeFn, ,, thisValue]
[;, return, new, Bind, (, maybeFn, ,, thisValue, ,, parameters, ), ;, }, }, return, null, ;, }, @, Override]
[), ;, return, new, Bind, (, maybeFn, ,, thisValue, ,, parameters, ), ;, }, }, return, null, ;, }, @]
[;, }, }, return, null, ;, }, @, Override, public, Collection, <, String, >, getIndirectlyDeclaredProperties, (, ), {, return, ImmutableList]
[,, thisValue, ,, parameters, ), ;, }, }, return, null, ;, }, @, Override, public, Collection, <, String, >, getIndirectlyDeclaredProperties]
[,, parameters, ), ;, }, }, return, null, ;, }, @, Override, public, Collection, <, String, >, getIndirectlyDeclaredProperties, (, )]
[), ;, }, }, return, null, ;, }, @, Override, public, Collection, <, String, >, getIndirectlyDeclaredProperties, (, ), {, return]
[;, }, @, Override, public, Collection, <, String, >, getIndirectlyDeclaredProperties, (, ), {, return, ImmutableList, ., of, (, ), ;]
[;, }, private, Node, safeNext, (, Node, n, ), {, if, (, n, !=, null, ), {, return, n, .]
[., of, (, ), ;, }, private, Node, safeNext, (, Node, n, ), {, if, (, n, !=, null, )]
[), {, return, n, ., getNext, (, ), ;, }, return, null, ;, }, }, }]
[!=, null, ), {, return, n, ., getNext, (, ), ;, }, return, null, ;, }, }, }]
[), {, return, n, ., getNext, (, ), ;, }, return, null, ;, }, }, }]
[;, }, return, null, ;, }, }, }]
[., getNext, (, ), ;, }, return, null, ;, }, }, }]
[;, }, }, }]
