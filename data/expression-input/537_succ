[;, public, WindNeedle, (, ), {, super, (, false, ), ;, }, protected, void, drawNeedle, (, Graphics2D, g2, ,, Rectangle2D]
[;, public, WindNeedle, (, ), {, super, (, false, ), ;, }, protected, void, drawNeedle, (, Graphics2D, g2, ,, Rectangle2D]
[), ;, }, protected, void, drawNeedle, (, Graphics2D, g2, ,, Rectangle2D, plotArea, ,, Point2D, rotate, ,, double, angle, ), {]
[;, if, (, (, rotate, !=, null, ), &&, (, plotArea, !=, null, ), ), {, int, spacing, =, getSize]
[., drawNeedle, (, g2, ,, plotArea, ,, rotate, ,, angle, ), ;, if, (, (, rotate, !=, null, ), &&]
[,, plotArea, ,, rotate, ,, angle, ), ;, if, (, (, rotate, !=, null, ), &&, (, plotArea, !=, null]
[,, rotate, ,, angle, ), ;, if, (, (, rotate, !=, null, ), &&, (, plotArea, !=, null, ), )]
[,, angle, ), ;, if, (, (, rotate, !=, null, ), &&, (, plotArea, !=, null, ), ), {, int]
[), ;, if, (, (, rotate, !=, null, ), &&, (, plotArea, !=, null, ), ), {, int, spacing, =]
[), {, int, spacing, =, getSize, (, ), *, 3, ;, Rectangle2D, newArea, =, new, Rectangle2D, ., Double, (, )]
[&&, (, plotArea, !=, null, ), ), {, int, spacing, =, getSize, (, ), *, 3, ;, Rectangle2D, newArea, =]
[), &&, (, plotArea, !=, null, ), ), {, int, spacing, =, getSize, (, ), *, 3, ;, Rectangle2D, newArea]
[!=, null, ), &&, (, plotArea, !=, null, ), ), {, int, spacing, =, getSize, (, ), *, 3, ;]
[), &&, (, plotArea, !=, null, ), ), {, int, spacing, =, getSize, (, ), *, 3, ;, Rectangle2D, newArea]
[), {, int, spacing, =, getSize, (, ), *, 3, ;, Rectangle2D, newArea, =, new, Rectangle2D, ., Double, (, )]
[), ), {, int, spacing, =, getSize, (, ), *, 3, ;, Rectangle2D, newArea, =, new, Rectangle2D, ., Double, (]
[!=, null, ), ), {, int, spacing, =, getSize, (, ), *, 3, ;, Rectangle2D, newArea, =, new, Rectangle2D, .]
[), ), {, int, spacing, =, getSize, (, ), *, 3, ;, Rectangle2D, newArea, =, new, Rectangle2D, ., Double, (]
[;, Rectangle2D, newArea, =, new, Rectangle2D, ., Double, (, ), ;, Point2D, newRotate, =, rotate, ;, newArea, ., setRect, (]
[*, 3, ;, Rectangle2D, newArea, =, new, Rectangle2D, ., Double, (, ), ;, Point2D, newRotate, =, rotate, ;, newArea, .]
[;, Rectangle2D, newArea, =, new, Rectangle2D, ., Double, (, ), ;, Point2D, newRotate, =, rotate, ;, newArea, ., setRect, (]
[;, Point2D, newRotate, =, rotate, ;, newArea, ., setRect, (, plotArea, ., getMinX, (, ), -, spacing, ,, plotArea, .]
[;, newArea, ., setRect, (, plotArea, ., getMinX, (, ), -, spacing, ,, plotArea, ., getMinY, (, ), ,, plotArea]
[;, super, ., drawNeedle, (, g2, ,, newArea, ,, newRotate, ,, angle, ), ;, newArea, ., setRect, (, plotArea, .]
[., setRect, (, plotArea, ., getMinX, (, ), -, spacing, ,, plotArea, ., getMinY, (, ), ,, plotArea, ., getWidth]
[,, plotArea, ., getMinY, (, ), ,, plotArea, ., getWidth, (, ), ,, plotArea, ., getHeight, (, ), ), ;]
[-, spacing, ,, plotArea, ., getMinY, (, ), ,, plotArea, ., getWidth, (, ), ,, plotArea, ., getHeight, (, )]
[., getMinX, (, ), -, spacing, ,, plotArea, ., getMinY, (, ), ,, plotArea, ., getWidth, (, ), ,, plotArea]
[,, plotArea, ., getMinY, (, ), ,, plotArea, ., getWidth, (, ), ,, plotArea, ., getHeight, (, ), ), ;]
[,, plotArea, ., getWidth, (, ), ,, plotArea, ., getHeight, (, ), ), ;, super, ., drawNeedle, (, g2, ,]
[., getMinY, (, ), ,, plotArea, ., getWidth, (, ), ,, plotArea, ., getHeight, (, ), ), ;, super, .]
[,, plotArea, ., getHeight, (, ), ), ;, super, ., drawNeedle, (, g2, ,, newArea, ,, newRotate, ,, angle, )]
[., getWidth, (, ), ,, plotArea, ., getHeight, (, ), ), ;, super, ., drawNeedle, (, g2, ,, newArea, ,]
[), ;, super, ., drawNeedle, (, g2, ,, newArea, ,, newRotate, ,, angle, ), ;, newArea, ., setRect, (, plotArea]
[., getHeight, (, ), ), ;, super, ., drawNeedle, (, g2, ,, newArea, ,, newRotate, ,, angle, ), ;, newArea]
[;, newArea, ., setRect, (, plotArea, ., getMinX, (, ), +, spacing, ,, plotArea, ., getMinY, (, ), ,, plotArea]
[., drawNeedle, (, g2, ,, newArea, ,, newRotate, ,, angle, ), ;, newArea, ., setRect, (, plotArea, ., getMinX, (]
[,, newArea, ,, newRotate, ,, angle, ), ;, newArea, ., setRect, (, plotArea, ., getMinX, (, ), +, spacing, ,]
[,, newRotate, ,, angle, ), ;, newArea, ., setRect, (, plotArea, ., getMinX, (, ), +, spacing, ,, plotArea, .]
[,, angle, ), ;, newArea, ., setRect, (, plotArea, ., getMinX, (, ), +, spacing, ,, plotArea, ., getMinY, (]
[), ;, newArea, ., setRect, (, plotArea, ., getMinX, (, ), +, spacing, ,, plotArea, ., getMinY, (, ), ,]
[;, super, ., drawNeedle, (, g2, ,, newArea, ,, newRotate, ,, angle, ), ;, }, }, public, boolean, equals, (]
[., setRect, (, plotArea, ., getMinX, (, ), +, spacing, ,, plotArea, ., getMinY, (, ), ,, plotArea, ., getWidth]
[,, plotArea, ., getMinY, (, ), ,, plotArea, ., getWidth, (, ), ,, plotArea, ., getHeight, (, ), ), ;]
[+, spacing, ,, plotArea, ., getMinY, (, ), ,, plotArea, ., getWidth, (, ), ,, plotArea, ., getHeight, (, )]
[., getMinX, (, ), +, spacing, ,, plotArea, ., getMinY, (, ), ,, plotArea, ., getWidth, (, ), ,, plotArea]
[,, plotArea, ., getMinY, (, ), ,, plotArea, ., getWidth, (, ), ,, plotArea, ., getHeight, (, ), ), ;]
[,, plotArea, ., getWidth, (, ), ,, plotArea, ., getHeight, (, ), ), ;, super, ., drawNeedle, (, g2, ,]
[., getMinY, (, ), ,, plotArea, ., getWidth, (, ), ,, plotArea, ., getHeight, (, ), ), ;, super, .]
[,, plotArea, ., getHeight, (, ), ), ;, super, ., drawNeedle, (, g2, ,, newArea, ,, newRotate, ,, angle, )]
[., getWidth, (, ), ,, plotArea, ., getHeight, (, ), ), ;, super, ., drawNeedle, (, g2, ,, newArea, ,]
[), ;, super, ., drawNeedle, (, g2, ,, newArea, ,, newRotate, ,, angle, ), ;, }, }, public, boolean, equals]
[., getHeight, (, ), ), ;, super, ., drawNeedle, (, g2, ,, newArea, ,, newRotate, ,, angle, ), ;, }]
[;, }, }, public, boolean, equals, (, Object, object, ), {, if, (, object, ==, null, ), {, return, false]
[., drawNeedle, (, g2, ,, newArea, ,, newRotate, ,, angle, ), ;, }, }, public, boolean, equals, (, Object, object]
[,, newArea, ,, newRotate, ,, angle, ), ;, }, }, public, boolean, equals, (, Object, object, ), {, if, (]
[,, newRotate, ,, angle, ), ;, }, }, public, boolean, equals, (, Object, object, ), {, if, (, object, ==]
[,, angle, ), ;, }, }, public, boolean, equals, (, Object, object, ), {, if, (, object, ==, null, )]
[), ;, }, }, public, boolean, equals, (, Object, object, ), {, if, (, object, ==, null, ), {, return]
[), {, return, false, ;, }, if, (, object, ==, this, ), {, return, true, ;, }, if, (, super]
[==, null, ), {, return, false, ;, }, if, (, object, ==, this, ), {, return, true, ;, }, if]
[), {, return, false, ;, }, if, (, object, ==, this, ), {, return, true, ;, }, if, (, super]
[;, }, if, (, object, ==, this, ), {, return, true, ;, }, if, (, super, ., equals, (, object]
[), {, return, true, ;, }, if, (, super, ., equals, (, object, ), &&, object, instanceof, WindNeedle, ), {]
[==, this, ), {, return, true, ;, }, if, (, super, ., equals, (, object, ), &&, object, instanceof, WindNeedle]
[), {, return, true, ;, }, if, (, super, ., equals, (, object, ), &&, object, instanceof, WindNeedle, ), {]
[;, }, if, (, super, ., equals, (, object, ), &&, object, instanceof, WindNeedle, ), {, return, true, ;, }]
[), {, return, true, ;, }, return, false, ;, }, public, int, hashCode, (, ), {, return, super, ., hashCode]
[&&, object, instanceof, WindNeedle, ), {, return, true, ;, }, return, false, ;, }, public, int, hashCode, (, ), {]
[., equals, (, object, ), &&, object, instanceof, WindNeedle, ), {, return, true, ;, }, return, false, ;, }, public]
[), &&, object, instanceof, WindNeedle, ), {, return, true, ;, }, return, false, ;, }, public, int, hashCode, (, )]
[), {, return, true, ;, }, return, false, ;, }, public, int, hashCode, (, ), {, return, super, ., hashCode]
[instanceof, WindNeedle, ), {, return, true, ;, }, return, false, ;, }, public, int, hashCode, (, ), {, return, super]
[;, }, return, false, ;, }, public, int, hashCode, (, ), {, return, super, ., hashCode, (, ), ;, }]
[;, }, public, int, hashCode, (, ), {, return, super, ., hashCode, (, ), ;, }, }]
[;, }, }]
[., hashCode, (, ), ;, }, }]
