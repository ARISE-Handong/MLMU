[Vector2D, ;, public, class, CircleScalar, implements, MultivariateDifferentiableFunction, {, private, ArrayList, <, Vector2D, >, points, ;, public, CircleScalar, (, ), {]
[public, class, CircleScalar, implements, MultivariateDifferentiableFunction, {, private, ArrayList, <, Vector2D, >, points, ;, public, CircleScalar, (, ), {, points, =]
[new, ArrayList, <, Vector2D, >, (, ), ;, }, public, void, addPoint, (, double, px, ,, double, py, ), {]
[new, ArrayList, <, Vector2D, >, (, ), ;, }, public, void, addPoint, (, double, px, ,, double, py, ), {]
[>, (, ), ;, }, public, void, addPoint, (, double, px, ,, double, py, ), {, points, ., add, (]
[;, }, public, void, addPoint, (, double, px, ,, double, py, ), {, points, ., add, (, new, Vector2D, (]
[public, void, addPoint, (, double, px, ,, double, py, ), {, points, ., add, (, new, Vector2D, (, px, ,]
[Vector2D, (, px, ,, py, ), ), ;, }, public, double, getRadius, (, Vector2D, center, ), {, double, r, =]
[;, }, public, double, getRadius, (, Vector2D, center, ), {, double, r, =, 0, ;, for, (, Vector2D, point, :]
[double, getRadius, (, Vector2D, center, ), {, double, r, =, 0, ;, for, (, Vector2D, point, :, points, ), {]
[(, Vector2D, center, ), {, double, r, =, 0, ;, for, (, Vector2D, point, :, points, ), {, r, +=]
[(, Vector2D, center, ), {, double, r, =, 0, ;, for, (, Vector2D, point, :, points, ), {, r, +=]
[{, double, r, =, 0, ;, for, (, Vector2D, point, :, points, ), {, r, +=, point, ., distance, (]
[;, for, (, Vector2D, point, :, points, ), {, r, +=, point, ., distance, (, center, ), ;, }, return]
[;, for, (, Vector2D, point, :, points, ), {, r, +=, point, ., distance, (, center, ), ;, }, return]
[(, Vector2D, point, :, points, ), {, r, +=, point, ., distance, (, center, ), ;, }, return, r, /]
[(, Vector2D, point, :, points, ), {, r, +=, point, ., distance, (, center, ), ;, }, return, r, /]
[), ;, }, private, DerivativeStructure, distance, (, Vector2D, point, ,, DerivativeStructure, cx, ,, DerivativeStructure, cy, ), {, DerivativeStructure, dx, =]
[), ;, }, private, DerivativeStructure, distance, (, Vector2D, point, ,, DerivativeStructure, cx, ,, DerivativeStructure, cy, ), {, DerivativeStructure, dx, =]
[DerivativeStructure, distance, (, Vector2D, point, ,, DerivativeStructure, cx, ,, DerivativeStructure, cy, ), {, DerivativeStructure, dx, =, cx, ., subtract, (]
[DerivativeStructure, distance, (, Vector2D, point, ,, DerivativeStructure, cx, ,, DerivativeStructure, cy, ), {, DerivativeStructure, dx, =, cx, ., subtract, (]
[cy, ), {, DerivativeStructure, dx, =, cx, ., subtract, (, point, ., getX, (, ), ), ;, DerivativeStructure, dy, =]
[cy, ), {, DerivativeStructure, dx, =, cx, ., subtract, (, point, ., getX, (, ), ), ;, DerivativeStructure, dy, =]
[dx, =, cx, ., subtract, (, point, ., getX, (, ), ), ;, DerivativeStructure, dy, =, cy, ., subtract, (]
[dx, =, cx, ., subtract, (, point, ., getX, (, ), ), ;, DerivativeStructure, dy, =, cy, ., subtract, (]
[getX, (, ), ), ;, DerivativeStructure, dy, =, cy, ., subtract, (, point, ., getY, (, ), ), ;, return]
[getX, (, ), ), ;, DerivativeStructure, dy, =, cy, ., subtract, (, point, ., getY, (, ), ), ;, return]
[getX, (, ), ), ;, DerivativeStructure, dy, =, cy, ., subtract, (, point, ., getY, (, ), ), ;, return]
[getX, (, ), ), ;, DerivativeStructure, dy, =, cy, ., subtract, (, point, ., getY, (, ), ), ;, return]
[;, DerivativeStructure, dy, =, cy, ., subtract, (, point, ., getY, (, ), ), ;, return, dx, ., multiply, (]
[., subtract, (, point, ., getY, (, ), ), ;, return, dx, ., multiply, (, dx, ), ., add, (]
[., subtract, (, point, ., getY, (, ), ), ;, return, dx, ., multiply, (, dx, ), ., add, (]
[., getY, (, ), ), ;, return, dx, ., multiply, (, dx, ), ., add, (, dy, ., multiply, (]
[., sqrt, (, ), ;, }, public, DerivativeStructure, getRadius, (, DerivativeStructure, cx, ,, DerivativeStructure, cy, ), {, DerivativeStructure, r, =]
[., sqrt, (, ), ;, }, public, DerivativeStructure, getRadius, (, DerivativeStructure, cx, ,, DerivativeStructure, cy, ), {, DerivativeStructure, r, =]
[., sqrt, (, ), ;, }, public, DerivativeStructure, getRadius, (, DerivativeStructure, cx, ,, DerivativeStructure, cy, ), {, DerivativeStructure, r, =]
[), {, DerivativeStructure, r, =, cx, ., getField, (, ), ., getZero, (, ), ;, for, (, Vector2D, point, :]
[r, =, cx, ., getField, (, ), ., getZero, (, ), ;, for, (, Vector2D, point, :, points, ), {]
[cx, ., getField, (, ), ., getZero, (, ), ;, for, (, Vector2D, point, :, points, ), {, r, =]
[cx, ., getField, (, ), ., getZero, (, ), ;, for, (, Vector2D, point, :, points, ), {, r, =]
[), ., getZero, (, ), ;, for, (, Vector2D, point, :, points, ), {, r, =, r, ., add, (]
[getZero, (, ), ;, for, (, Vector2D, point, :, points, ), {, r, =, r, ., add, (, distance, (]
[), ;, for, (, Vector2D, point, :, points, ), {, r, =, r, ., add, (, distance, (, point, ,]
[for, (, Vector2D, point, :, points, ), {, r, =, r, ., add, (, distance, (, point, ,, cx, ,]
[), {, r, =, r, ., add, (, distance, (, point, ,, cx, ,, cy, ), ), ;, }, return]
[), {, r, =, r, ., add, (, distance, (, point, ,, cx, ,, cy, ), ), ;, }, return]
[r, ., add, (, distance, (, point, ,, cx, ,, cy, ), ), ;, }, return, r, ., divide, (]
[r, ., add, (, distance, (, point, ,, cx, ,, cy, ), ), ;, }, return, r, ., divide, (]
[., size, (, ), ), ;, }, public, double, value, (, double, [, ], variables, ), {, Vector2D, center, =]
[), ), ;, }, public, double, value, (, double, [, ], variables, ), {, Vector2D, center, =, new, Vector2D, (]
[), ), ;, }, public, double, value, (, double, [, ], variables, ), {, Vector2D, center, =, new, Vector2D, (]
[;, }, public, double, value, (, double, [, ], variables, ), {, Vector2D, center, =, new, Vector2D, (, variables, []
[double, value, (, double, [, ], variables, ), {, Vector2D, center, =, new, Vector2D, (, variables, [, 0, ], ,]
[double, value, (, double, [, ], variables, ), {, Vector2D, center, =, new, Vector2D, (, variables, [, 0, ], ,]
[(, double, [, ], variables, ), {, Vector2D, center, =, new, Vector2D, (, variables, [, 0, ], ,, variables, []
[Vector2D, center, =, new, Vector2D, (, variables, [, 0, ], ,, variables, [, 1, ], ), ;, double, radius, =]
[=, new, Vector2D, (, variables, [, 0, ], ,, variables, [, 1, ], ), ;, double, radius, =, getRadius, (]
[0, ], ,, variables, [, 1, ], ), ;, double, radius, =, getRadius, (, center, ), ;, double, sum, =]
[), ;, double, radius, =, getRadius, (, center, ), ;, double, sum, =, 0, ;, for, (, Vector2D, point, :]
[(, center, ), ;, double, sum, =, 0, ;, for, (, Vector2D, point, :, points, ), {, double, di, =]
[(, center, ), ;, double, sum, =, 0, ;, for, (, Vector2D, point, :, points, ), {, double, di, =]
[(, center, ), ;, double, sum, =, 0, ;, for, (, Vector2D, point, :, points, ), {, double, di, =]
[double, sum, =, 0, ;, for, (, Vector2D, point, :, points, ), {, double, di, =, point, ., distance, (]
[0, ;, for, (, Vector2D, point, :, points, ), {, double, di, =, point, ., distance, (, center, ), -]
[for, (, Vector2D, point, :, points, ), {, double, di, =, point, ., distance, (, center, ), -, radius, ;]
[Vector2D, point, :, points, ), {, double, di, =, point, ., distance, (, center, ), -, radius, ;, sum, +=]
[Vector2D, point, :, points, ), {, double, di, =, point, ., distance, (, center, ), -, radius, ;, sum, +=]
[:, points, ), {, double, di, =, point, ., distance, (, center, ), -, radius, ;, sum, +=, di, *]
[double, di, =, point, ., distance, (, center, ), -, radius, ;, sum, +=, di, *, di, ;, }, return]
[di, ;, }, return, sum, ;, }, public, DerivativeStructure, value, (, DerivativeStructure, [, ], variables, ), {, DerivativeStructure, radius, =]
[}, return, sum, ;, }, public, DerivativeStructure, value, (, DerivativeStructure, [, ], variables, ), {, DerivativeStructure, radius, =, getRadius, (]
[}, return, sum, ;, }, public, DerivativeStructure, value, (, DerivativeStructure, [, ], variables, ), {, DerivativeStructure, radius, =, getRadius, (]
[sum, ;, }, public, DerivativeStructure, value, (, DerivativeStructure, [, ], variables, ), {, DerivativeStructure, radius, =, getRadius, (, variables, []
[public, DerivativeStructure, value, (, DerivativeStructure, [, ], variables, ), {, DerivativeStructure, radius, =, getRadius, (, variables, [, 0, ], ,]
[public, DerivativeStructure, value, (, DerivativeStructure, [, ], variables, ), {, DerivativeStructure, radius, =, getRadius, (, variables, [, 0, ], ,]
[value, (, DerivativeStructure, [, ], variables, ), {, DerivativeStructure, radius, =, getRadius, (, variables, [, 0, ], ,, variables, []
[{, DerivativeStructure, radius, =, getRadius, (, variables, [, 0, ], ,, variables, [, 1, ], ), ;, DerivativeStructure, sum, =]
[{, DerivativeStructure, radius, =, getRadius, (, variables, [, 0, ], ,, variables, [, 1, ], ), ;, DerivativeStructure, sum, =]
[{, DerivativeStructure, radius, =, getRadius, (, variables, [, 0, ], ,, variables, [, 1, ], ), ;, DerivativeStructure, sum, =]
[{, DerivativeStructure, radius, =, getRadius, (, variables, [, 0, ], ,, variables, [, 1, ], ), ;, DerivativeStructure, sum, =]
[radius, =, getRadius, (, variables, [, 0, ], ,, variables, [, 1, ], ), ;, DerivativeStructure, sum, =, variables, []
[sum, =, variables, [, 0, ], ., getField, (, ), ., getZero, (, ), ;, for, (, Vector2D, point, :]
[., getField, (, ), ., getZero, (, ), ;, for, (, Vector2D, point, :, points, ), {, DerivativeStructure, di, =]
[., getField, (, ), ., getZero, (, ), ;, for, (, Vector2D, point, :, points, ), {, DerivativeStructure, di, =]
[(, ), ., getZero, (, ), ;, for, (, Vector2D, point, :, points, ), {, DerivativeStructure, di, =, distance, (]
[., getZero, (, ), ;, for, (, Vector2D, point, :, points, ), {, DerivativeStructure, di, =, distance, (, point, ,]
[., getZero, (, ), ;, for, (, Vector2D, point, :, points, ), {, DerivativeStructure, di, =, distance, (, point, ,]
[(, ), ;, for, (, Vector2D, point, :, points, ), {, DerivativeStructure, di, =, distance, (, point, ,, variables, []
[for, (, Vector2D, point, :, points, ), {, DerivativeStructure, di, =, distance, (, point, ,, variables, [, 0, ], ,]
[for, (, Vector2D, point, :, points, ), {, DerivativeStructure, di, =, distance, (, point, ,, variables, [, 0, ], ,]
[Vector2D, point, :, points, ), {, DerivativeStructure, di, =, distance, (, point, ,, variables, [, 0, ], ,, variables, []
[DerivativeStructure, di, =, distance, (, point, ,, variables, [, 0, ], ,, variables, [, 1, ], ), ., subtract, (]
[distance, (, point, ,, variables, [, 0, ], ,, variables, [, 1, ], ), ., subtract, (, radius, ), ;]
[point, ,, variables, [, 0, ], ,, variables, [, 1, ], ), ., subtract, (, radius, ), ;, sum, =]
[point, ,, variables, [, 0, ], ,, variables, [, 1, ], ), ., subtract, (, radius, ), ;, sum, =]
[0, ], ,, variables, [, 1, ], ), ., subtract, (, radius, ), ;, sum, =, sum, ., add, (]
[0, ], ,, variables, [, 1, ], ), ., subtract, (, radius, ), ;, sum, =, sum, ., add, (]
[[, 1, ], ), ., subtract, (, radius, ), ;, sum, =, sum, ., add, (, di, ., multiply, (]
[(, radius, ), ;, sum, =, sum, ., add, (, di, ., multiply, (, di, ), ), ;, }, return]
