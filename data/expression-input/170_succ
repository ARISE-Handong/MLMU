[;, private, static, Set, <, String, >, annotationNames, =, null, ;, private, static, Set, <, String, >, suppressionNames, =, null]
[;, private, static, Set, <, String, >, suppressionNames, =, null, ;, private, static, Set, <, String, >, reservedVars, =, null]
[;, private, static, Set, <, String, >, reservedVars, =, null, ;, private, ParserRunner, (, ), {, }, @, Deprecated, public]
[;, private, ParserRunner, (, ), {, }, @, Deprecated, public, static, Config, createConfig, (, boolean, isIdeMode, ), {, return, createConfig]
[;, }, public, static, Config, createConfig, (, boolean, isIdeMode, ,, LanguageMode, languageMode, ,, boolean, acceptConstKeyword, ), {, return, createConfig, (]
[,, LanguageMode, ., ECMASCRIPT3, ,, false, ), ;, }, public, static, Config, createConfig, (, boolean, isIdeMode, ,, LanguageMode, languageMode, ,]
[,, false, ), ;, }, public, static, Config, createConfig, (, boolean, isIdeMode, ,, LanguageMode, languageMode, ,, boolean, acceptConstKeyword, ), {]
[., ECMASCRIPT3, ,, false, ), ;, }, public, static, Config, createConfig, (, boolean, isIdeMode, ,, LanguageMode, languageMode, ,, boolean, acceptConstKeyword]
[), ;, }, public, static, Config, createConfig, (, boolean, isIdeMode, ,, LanguageMode, languageMode, ,, boolean, acceptConstKeyword, ), {, return, createConfig]
[;, }, public, static, Config, createConfig, (, boolean, isIdeMode, ,, LanguageMode, languageMode, ,, boolean, acceptConstKeyword, ,, Set, <, String, >]
[,, languageMode, ,, acceptConstKeyword, ,, null, ), ;, }, public, static, Config, createConfig, (, boolean, isIdeMode, ,, LanguageMode, languageMode, ,]
[,, acceptConstKeyword, ,, null, ), ;, }, public, static, Config, createConfig, (, boolean, isIdeMode, ,, LanguageMode, languageMode, ,, boolean, acceptConstKeyword]
[,, null, ), ;, }, public, static, Config, createConfig, (, boolean, isIdeMode, ,, LanguageMode, languageMode, ,, boolean, acceptConstKeyword, ,, Set]
[), ;, }, public, static, Config, createConfig, (, boolean, isIdeMode, ,, LanguageMode, languageMode, ,, boolean, acceptConstKeyword, ,, Set, <, String]
[;, Set, <, String, >, effectiveAnnotationNames, ;, if, (, extraAnnotationNames, ==, null, ), {, effectiveAnnotationNames, =, annotationNames, ;, }, else]
[), {, effectiveAnnotationNames, =, annotationNames, ;, }, else, {, effectiveAnnotationNames, =, new, HashSet, <, String, >, (, annotationNames, ), ;]
[==, null, ), {, effectiveAnnotationNames, =, annotationNames, ;, }, else, {, effectiveAnnotationNames, =, new, HashSet, <, String, >, (, annotationNames]
[), {, effectiveAnnotationNames, =, annotationNames, ;, }, else, {, effectiveAnnotationNames, =, new, HashSet, <, String, >, (, annotationNames, ), ;]
[=, annotationNames, ;, }, else, {, effectiveAnnotationNames, =, new, HashSet, <, String, >, (, annotationNames, ), ;, effectiveAnnotationNames, ., addAll]
[;, }, else, {, effectiveAnnotationNames, =, new, HashSet, <, String, >, (, annotationNames, ), ;, effectiveAnnotationNames, ., addAll, (, extraAnnotationNames]
[=, new, HashSet, <, String, >, (, annotationNames, ), ;, effectiveAnnotationNames, ., addAll, (, extraAnnotationNames, ), ;, }, return, new]
[;, effectiveAnnotationNames, ., addAll, (, extraAnnotationNames, ), ;, }, return, new, Config, (, effectiveAnnotationNames, ,, suppressionNames, ,, isIdeMode, ,, languageMode]
[), ;, effectiveAnnotationNames, ., addAll, (, extraAnnotationNames, ), ;, }, return, new, Config, (, effectiveAnnotationNames, ,, suppressionNames, ,, isIdeMode, ,]
[;, }, return, new, Config, (, effectiveAnnotationNames, ,, suppressionNames, ,, isIdeMode, ,, languageMode, ,, acceptConstKeyword, ), ;, }, public, static]
[., addAll, (, extraAnnotationNames, ), ;, }, return, new, Config, (, effectiveAnnotationNames, ,, suppressionNames, ,, isIdeMode, ,, languageMode, ,, acceptConstKeyword]
[), ;, }, return, new, Config, (, effectiveAnnotationNames, ,, suppressionNames, ,, isIdeMode, ,, languageMode, ,, acceptConstKeyword, ), ;, }, public]
[;, }, public, static, Set, <, String, >, getReservedVars, (, ), {, initResourceConfig, (, ), ;, return, reservedVars, ;, }]
[,, suppressionNames, ,, isIdeMode, ,, languageMode, ,, acceptConstKeyword, ), ;, }, public, static, Set, <, String, >, getReservedVars, (, )]
[,, isIdeMode, ,, languageMode, ,, acceptConstKeyword, ), ;, }, public, static, Set, <, String, >, getReservedVars, (, ), {, initResourceConfig]
[,, languageMode, ,, acceptConstKeyword, ), ;, }, public, static, Set, <, String, >, getReservedVars, (, ), {, initResourceConfig, (, )]
[,, acceptConstKeyword, ), ;, }, public, static, Set, <, String, >, getReservedVars, (, ), {, initResourceConfig, (, ), ;, return]
[), ;, }, public, static, Set, <, String, >, getReservedVars, (, ), {, initResourceConfig, (, ), ;, return, reservedVars, ;]
[;, return, reservedVars, ;, }, private, static, synchronized, void, initResourceConfig, (, ), {, if, (, annotationNames, !=, null, ), {]
[;, }, private, static, synchronized, void, initResourceConfig, (, ), {, if, (, annotationNames, !=, null, ), {, return, ;, }]
[), {, return, ;, }, ResourceBundle, config, =, ResourceBundle, ., getBundle, (, configResource, ), ;, annotationNames, =, extractList, (, config]
[!=, null, ), {, return, ;, }, ResourceBundle, config, =, ResourceBundle, ., getBundle, (, configResource, ), ;, annotationNames, =, extractList]
[), {, return, ;, }, ResourceBundle, config, =, ResourceBundle, ., getBundle, (, configResource, ), ;, annotationNames, =, extractList, (, config]
[;, annotationNames, =, extractList, (, config, ., getString, (, "jsdoc.annotations", ), ), ;, suppressionNames, =, extractList, (, config, ., getString]
[., getBundle, (, configResource, ), ;, annotationNames, =, extractList, (, config, ., getString, (, "jsdoc.annotations", ), ), ;, suppressionNames, =]
[), ;, annotationNames, =, extractList, (, config, ., getString, (, "jsdoc.annotations", ), ), ;, suppressionNames, =, extractList, (, config, .]
[=, extractList, (, config, ., getString, (, "jsdoc.annotations", ), ), ;, suppressionNames, =, extractList, (, config, ., getString, (, "jsdoc.suppressions"]
[;, suppressionNames, =, extractList, (, config, ., getString, (, "jsdoc.suppressions", ), ), ;, reservedVars, =, extractList, (, config, ., getString]
[), ;, suppressionNames, =, extractList, (, config, ., getString, (, "jsdoc.suppressions", ), ), ;, reservedVars, =, extractList, (, config, .]
[., getString, (, "jsdoc.annotations", ), ), ;, suppressionNames, =, extractList, (, config, ., getString, (, "jsdoc.suppressions", ), ), ;, reservedVars]
[), ), ;, suppressionNames, =, extractList, (, config, ., getString, (, "jsdoc.suppressions", ), ), ;, reservedVars, =, extractList, (, config]
[=, extractList, (, config, ., getString, (, "jsdoc.suppressions", ), ), ;, reservedVars, =, extractList, (, config, ., getString, (, "compiler.reserved.vars"]
[;, reservedVars, =, extractList, (, config, ., getString, (, "compiler.reserved.vars", ), ), ;, }, private, static, Set, <, String, >]
[), ;, reservedVars, =, extractList, (, config, ., getString, (, "compiler.reserved.vars", ), ), ;, }, private, static, Set, <, String]
[., getString, (, "jsdoc.suppressions", ), ), ;, reservedVars, =, extractList, (, config, ., getString, (, "compiler.reserved.vars", ), ), ;, }]
[), ), ;, reservedVars, =, extractList, (, config, ., getString, (, "compiler.reserved.vars", ), ), ;, }, private, static, Set, <]
[=, extractList, (, config, ., getString, (, "compiler.reserved.vars", ), ), ;, }, private, static, Set, <, String, >, extractList, (]
[;, }, private, static, Set, <, String, >, extractList, (, String, configProp, ), {, String, [, ], names, =, configProp]
[), ;, }, private, static, Set, <, String, >, extractList, (, String, configProp, ), {, String, [, ], names, =]
[., getString, (, "compiler.reserved.vars", ), ), ;, }, private, static, Set, <, String, >, extractList, (, String, configProp, ), {]
[), ), ;, }, private, static, Set, <, String, >, extractList, (, String, configProp, ), {, String, [, ], names]
[;, Set, <, String, >, trimmedNames, =, Sets, ., newHashSet, (, ), ;, for, (, String, name, :, names, )]
[., split, (, ",", ), ;, Set, <, String, >, trimmedNames, =, Sets, ., newHashSet, (, ), ;, for, (]
[), ;, Set, <, String, >, trimmedNames, =, Sets, ., newHashSet, (, ), ;, for, (, String, name, :, names]
[;, for, (, String, name, :, names, ), {, trimmedNames, ., add, (, name, ., trim, (, ), ), ;]
[., newHashSet, (, ), ;, for, (, String, name, :, names, ), {, trimmedNames, ., add, (, name, ., trim]
[), {, trimmedNames, ., add, (, name, ., trim, (, ), ), ;, }, return, ImmutableSet, ., copyOf, (, trimmedNames]
[;, }, return, ImmutableSet, ., copyOf, (, trimmedNames, ), ;, }, public, static, ParseResult, parse, (, StaticSourceFile, sourceFile, ,, String]
[., add, (, name, ., trim, (, ), ), ;, }, return, ImmutableSet, ., copyOf, (, trimmedNames, ), ;, }]
[), ;, }, return, ImmutableSet, ., copyOf, (, trimmedNames, ), ;, }, public, static, ParseResult, parse, (, StaticSourceFile, sourceFile, ,]
[., trim, (, ), ), ;, }, return, ImmutableSet, ., copyOf, (, trimmedNames, ), ;, }, public, static, ParseResult, parse]
[;, }, public, static, ParseResult, parse, (, StaticSourceFile, sourceFile, ,, String, sourceString, ,, Config, config, ,, ErrorReporter, errorReporter, ,, Logger]
[., copyOf, (, trimmedNames, ), ;, }, public, static, ParseResult, parse, (, StaticSourceFile, sourceFile, ,, String, sourceString, ,, Config, config]
[), ;, }, public, static, ParseResult, parse, (, StaticSourceFile, sourceFile, ,, String, sourceString, ,, Config, config, ,, ErrorReporter, errorReporter, ,]
[;, cx, ., setErrorReporter, (, errorReporter, ), ;, cx, ., setLanguageVersion, (, Context, ., VERSION_1_5, ), ;, CompilerEnvirons, compilerEnv, =]
[., enter, (, ), ;, cx, ., setErrorReporter, (, errorReporter, ), ;, cx, ., setLanguageVersion, (, Context, ., VERSION_1_5, )]
[;, cx, ., setLanguageVersion, (, Context, ., VERSION_1_5, ), ;, CompilerEnvirons, compilerEnv, =, new, CompilerEnvirons, (, ), ;, compilerEnv, .]
[., setErrorReporter, (, errorReporter, ), ;, cx, ., setLanguageVersion, (, Context, ., VERSION_1_5, ), ;, CompilerEnvirons, compilerEnv, =, new, CompilerEnvirons]
[), ;, cx, ., setLanguageVersion, (, Context, ., VERSION_1_5, ), ;, CompilerEnvirons, compilerEnv, =, new, CompilerEnvirons, (, ), ;, compilerEnv]
[;, CompilerEnvirons, compilerEnv, =, new, CompilerEnvirons, (, ), ;, compilerEnv, ., initFromContext, (, cx, ), ;, compilerEnv, ., setRecordingComments, (]
[., setLanguageVersion, (, Context, ., VERSION_1_5, ), ;, CompilerEnvirons, compilerEnv, =, new, CompilerEnvirons, (, ), ;, compilerEnv, ., initFromContext, (]
[), ;, CompilerEnvirons, compilerEnv, =, new, CompilerEnvirons, (, ), ;, compilerEnv, ., initFromContext, (, cx, ), ;, compilerEnv, ., setRecordingComments]
[., VERSION_1_5, ), ;, CompilerEnvirons, compilerEnv, =, new, CompilerEnvirons, (, ), ;, compilerEnv, ., initFromContext, (, cx, ), ;, compilerEnv]
[;, compilerEnv, ., initFromContext, (, cx, ), ;, compilerEnv, ., setRecordingComments, (, true, ), ;, compilerEnv, ., setRecordingLocalJsDocComments, (, true]
[;, compilerEnv, ., setRecordingComments, (, true, ), ;, compilerEnv, ., setRecordingLocalJsDocComments, (, true, ), ;, compilerEnv, ., setWarnTrailingComma, (, config]
[., initFromContext, (, cx, ), ;, compilerEnv, ., setRecordingComments, (, true, ), ;, compilerEnv, ., setRecordingLocalJsDocComments, (, true, ), ;]
[), ;, compilerEnv, ., setRecordingComments, (, true, ), ;, compilerEnv, ., setRecordingLocalJsDocComments, (, true, ), ;, compilerEnv, ., setWarnTrailingComma, (]
[;, compilerEnv, ., setRecordingLocalJsDocComments, (, true, ), ;, compilerEnv, ., setWarnTrailingComma, (, config, ., languageMode, ==, LanguageMode, ., ECMASCRIPT3, )]
[., setRecordingComments, (, true, ), ;, compilerEnv, ., setRecordingLocalJsDocComments, (, true, ), ;, compilerEnv, ., setWarnTrailingComma, (, config, ., languageMode]
[), ;, compilerEnv, ., setRecordingLocalJsDocComments, (, true, ), ;, compilerEnv, ., setWarnTrailingComma, (, config, ., languageMode, ==, LanguageMode, ., ECMASCRIPT3]
[;, compilerEnv, ., setWarnTrailingComma, (, config, ., languageMode, ==, LanguageMode, ., ECMASCRIPT3, ), ;, boolean, acceptEs5, =, config, ., isIdeMode]
[., setRecordingLocalJsDocComments, (, true, ), ;, compilerEnv, ., setWarnTrailingComma, (, config, ., languageMode, ==, LanguageMode, ., ECMASCRIPT3, ), ;, boolean]
[), ;, compilerEnv, ., setWarnTrailingComma, (, config, ., languageMode, ==, LanguageMode, ., ECMASCRIPT3, ), ;, boolean, acceptEs5, =, config, .]
[;, boolean, acceptEs5, =, config, ., isIdeMode, ||, config, ., languageMode, !=, LanguageMode, ., ECMASCRIPT3, ;, compilerEnv, ., setReservedKeywordAsIdentifier, (]
[., setWarnTrailingComma, (, config, ., languageMode, ==, LanguageMode, ., ECMASCRIPT3, ), ;, boolean, acceptEs5, =, config, ., isIdeMode, ||, config]
[), ;, boolean, acceptEs5, =, config, ., isIdeMode, ||, config, ., languageMode, !=, LanguageMode, ., ECMASCRIPT3, ;, compilerEnv, ., setReservedKeywordAsIdentifier]
[==, LanguageMode, ., ECMASCRIPT3, ), ;, boolean, acceptEs5, =, config, ., isIdeMode, ||, config, ., languageMode, !=, LanguageMode, ., ECMASCRIPT3]
[., languageMode, ==, LanguageMode, ., ECMASCRIPT3, ), ;, boolean, acceptEs5, =, config, ., isIdeMode, ||, config, ., languageMode, !=, LanguageMode]
[), ;, boolean, acceptEs5, =, config, ., isIdeMode, ||, config, ., languageMode, !=, LanguageMode, ., ECMASCRIPT3, ;, compilerEnv, ., setReservedKeywordAsIdentifier]
[., ECMASCRIPT3, ), ;, boolean, acceptEs5, =, config, ., isIdeMode, ||, config, ., languageMode, !=, LanguageMode, ., ECMASCRIPT3, ;, compilerEnv]
[;, compilerEnv, ., setReservedKeywordAsIdentifier, (, acceptEs5, ), ;, compilerEnv, ., setAllowMemberExprAsFunctionName, (, false, ), ;, compilerEnv, ., setIdeMode, (, config]
[||, config, ., languageMode, !=, LanguageMode, ., ECMASCRIPT3, ;, compilerEnv, ., setReservedKeywordAsIdentifier, (, acceptEs5, ), ;, compilerEnv, ., setAllowMemberExprAsFunctionName, (]
[., isIdeMode, ||, config, ., languageMode, !=, LanguageMode, ., ECMASCRIPT3, ;, compilerEnv, ., setReservedKeywordAsIdentifier, (, acceptEs5, ), ;, compilerEnv, .]
[;, compilerEnv, ., setReservedKeywordAsIdentifier, (, acceptEs5, ), ;, compilerEnv, ., setAllowMemberExprAsFunctionName, (, false, ), ;, compilerEnv, ., setIdeMode, (, config]
[!=, LanguageMode, ., ECMASCRIPT3, ;, compilerEnv, ., setReservedKeywordAsIdentifier, (, acceptEs5, ), ;, compilerEnv, ., setAllowMemberExprAsFunctionName, (, false, ), ;, compilerEnv]
[., languageMode, !=, LanguageMode, ., ECMASCRIPT3, ;, compilerEnv, ., setReservedKeywordAsIdentifier, (, acceptEs5, ), ;, compilerEnv, ., setAllowMemberExprAsFunctionName, (, false, )]
[;, compilerEnv, ., setReservedKeywordAsIdentifier, (, acceptEs5, ), ;, compilerEnv, ., setAllowMemberExprAsFunctionName, (, false, ), ;, compilerEnv, ., setIdeMode, (, config]
[., ECMASCRIPT3, ;, compilerEnv, ., setReservedKeywordAsIdentifier, (, acceptEs5, ), ;, compilerEnv, ., setAllowMemberExprAsFunctionName, (, false, ), ;, compilerEnv, ., setIdeMode]
[;, compilerEnv, ., setAllowMemberExprAsFunctionName, (, false, ), ;, compilerEnv, ., setIdeMode, (, config, ., isIdeMode, ), ;, compilerEnv, ., setRecoverFromErrors]
[., setReservedKeywordAsIdentifier, (, acceptEs5, ), ;, compilerEnv, ., setAllowMemberExprAsFunctionName, (, false, ), ;, compilerEnv, ., setIdeMode, (, config, ., isIdeMode]
[), ;, compilerEnv, ., setAllowMemberExprAsFunctionName, (, false, ), ;, compilerEnv, ., setIdeMode, (, config, ., isIdeMode, ), ;, compilerEnv, .]
[;, compilerEnv, ., setIdeMode, (, config, ., isIdeMode, ), ;, compilerEnv, ., setRecoverFromErrors, (, config, ., isIdeMode, ), ;, Parser]
[., setAllowMemberExprAsFunctionName, (, false, ), ;, compilerEnv, ., setIdeMode, (, config, ., isIdeMode, ), ;, compilerEnv, ., setRecoverFromErrors, (, config]
[), ;, compilerEnv, ., setIdeMode, (, config, ., isIdeMode, ), ;, compilerEnv, ., setRecoverFromErrors, (, config, ., isIdeMode, ), ;]
[;, compilerEnv, ., setRecoverFromErrors, (, config, ., isIdeMode, ), ;, Parser, p, =, new, Parser, (, compilerEnv, ,, errorReporter, )]
[., setIdeMode, (, config, ., isIdeMode, ), ;, compilerEnv, ., setRecoverFromErrors, (, config, ., isIdeMode, ), ;, Parser, p, =]
[), ;, compilerEnv, ., setRecoverFromErrors, (, config, ., isIdeMode, ), ;, Parser, p, =, new, Parser, (, compilerEnv, ,, errorReporter]
[., isIdeMode, ), ;, compilerEnv, ., setRecoverFromErrors, (, config, ., isIdeMode, ), ;, Parser, p, =, new, Parser, (, compilerEnv]
[;, Parser, p, =, new, Parser, (, compilerEnv, ,, errorReporter, ), ;, AstRoot, astRoot, =, null, ;, try, {, astRoot]
[., setRecoverFromErrors, (, config, ., isIdeMode, ), ;, Parser, p, =, new, Parser, (, compilerEnv, ,, errorReporter, ), ;, AstRoot]
[), ;, Parser, p, =, new, Parser, (, compilerEnv, ,, errorReporter, ), ;, AstRoot, astRoot, =, null, ;, try, {]
[., isIdeMode, ), ;, Parser, p, =, new, Parser, (, compilerEnv, ,, errorReporter, ), ;, AstRoot, astRoot, =, null, ;]
[;, AstRoot, astRoot, =, null, ;, try, {, astRoot, =, p, ., parse, (, sourceString, ,, sourceFile, ., getName, (]
[,, errorReporter, ), ;, AstRoot, astRoot, =, null, ;, try, {, astRoot, =, p, ., parse, (, sourceString, ,, sourceFile]
[), ;, AstRoot, astRoot, =, null, ;, try, {, astRoot, =, p, ., parse, (, sourceString, ,, sourceFile, ., getName]
[;, try, {, astRoot, =, p, ., parse, (, sourceString, ,, sourceFile, ., getName, (, ), ,, 1, ), ;]
[=, p, ., parse, (, sourceString, ,, sourceFile, ., getName, (, ), ,, 1, ), ;, }, catch, (, EvaluatorException]
[;, }, catch, (, EvaluatorException, e, ), {, logger, ., info, (, "Error parsing ", +, sourceFile, ., getName, (, ), +]
[., parse, (, sourceString, ,, sourceFile, ., getName, (, ), ,, 1, ), ;, }, catch, (, EvaluatorException, e, )]
[,, sourceFile, ., getName, (, ), ,, 1, ), ;, }, catch, (, EvaluatorException, e, ), {, logger, ., info]
[,, 1, ), ;, }, catch, (, EvaluatorException, e, ), {, logger, ., info, (, "Error parsing ", +, sourceFile, ., getName]
[., getName, (, ), ,, 1, ), ;, }, catch, (, EvaluatorException, e, ), {, logger, ., info, (, "Error parsing "]
[), ;, }, catch, (, EvaluatorException, e, ), {, logger, ., info, (, "Error parsing ", +, sourceFile, ., getName, (, )]
[;, }, finally, {, Context, ., exit, (, ), ;, }, Node, root, =, null, ;, if, (, astRoot, !=]
[., info, (, "Error parsing ", +, sourceFile, ., getName, (, ), +, ": ", +, e, ., getMessage, (, ), ), ;]
[), ;, }, finally, {, Context, ., exit, (, ), ;, }, Node, root, =, null, ;, if, (, astRoot]
[+, e, ., getMessage, (, ), ), ;, }, finally, {, Context, ., exit, (, ), ;, }, Node, root]
[+, ": ", +, e, ., getMessage, (, ), ), ;, }, finally, {, Context, ., exit, (, ), ;, }]
[+, sourceFile, ., getName, (, ), +, ": ", +, e, ., getMessage, (, ), ), ;, }, finally, {, Context]
[+, ": ", +, e, ., getMessage, (, ), ), ;, }, finally, {, Context, ., exit, (, ), ;, }]
[., getName, (, ), +, ": ", +, e, ., getMessage, (, ), ), ;, }, finally, {, Context, ., exit]
[+, e, ., getMessage, (, ), ), ;, }, finally, {, Context, ., exit, (, ), ;, }, Node, root]
[), ;, }, finally, {, Context, ., exit, (, ), ;, }, Node, root, =, null, ;, if, (, astRoot]
[., getMessage, (, ), ), ;, }, finally, {, Context, ., exit, (, ), ;, }, Node, root, =, null]
[;, }, Node, root, =, null, ;, if, (, astRoot, !=, null, ), {, root, =, IRFactory, ., transformTree, (]
[., exit, (, ), ;, }, Node, root, =, null, ;, if, (, astRoot, !=, null, ), {, root, =]
[;, if, (, astRoot, !=, null, ), {, root, =, IRFactory, ., transformTree, (, astRoot, ,, sourceFile, ,, sourceString, ,]
[), {, root, =, IRFactory, ., transformTree, (, astRoot, ,, sourceFile, ,, sourceString, ,, config, ,, errorReporter, ), ;, root]
[!=, null, ), {, root, =, IRFactory, ., transformTree, (, astRoot, ,, sourceFile, ,, sourceString, ,, config, ,, errorReporter, )]
[), {, root, =, IRFactory, ., transformTree, (, astRoot, ,, sourceFile, ,, sourceString, ,, config, ,, errorReporter, ), ;, root]
[=, IRFactory, ., transformTree, (, astRoot, ,, sourceFile, ,, sourceString, ,, config, ,, errorReporter, ), ;, root, ., setIsSyntheticBlock, (]
[;, root, ., setIsSyntheticBlock, (, true, ), ;, }, return, new, ParseResult, (, root, ,, astRoot, ), ;, }, public]
[., transformTree, (, astRoot, ,, sourceFile, ,, sourceString, ,, config, ,, errorReporter, ), ;, root, ., setIsSyntheticBlock, (, true, )]
[,, sourceFile, ,, sourceString, ,, config, ,, errorReporter, ), ;, root, ., setIsSyntheticBlock, (, true, ), ;, }, return, new]
[,, sourceString, ,, config, ,, errorReporter, ), ;, root, ., setIsSyntheticBlock, (, true, ), ;, }, return, new, ParseResult, (]
[,, config, ,, errorReporter, ), ;, root, ., setIsSyntheticBlock, (, true, ), ;, }, return, new, ParseResult, (, root, ,]
[,, errorReporter, ), ;, root, ., setIsSyntheticBlock, (, true, ), ;, }, return, new, ParseResult, (, root, ,, astRoot, )]
[), ;, root, ., setIsSyntheticBlock, (, true, ), ;, }, return, new, ParseResult, (, root, ,, astRoot, ), ;, }]
[;, }, return, new, ParseResult, (, root, ,, astRoot, ), ;, }, public, static, class, ParseResult, {, public, final, Node]
[., setIsSyntheticBlock, (, true, ), ;, }, return, new, ParseResult, (, root, ,, astRoot, ), ;, }, public, static, class]
[), ;, }, return, new, ParseResult, (, root, ,, astRoot, ), ;, }, public, static, class, ParseResult, {, public, final]
[;, }, public, static, class, ParseResult, {, public, final, Node, ast, ;, public, final, AstRoot, oldAst, ;, public, ParseResult, (]
[,, astRoot, ), ;, }, public, static, class, ParseResult, {, public, final, Node, ast, ;, public, final, AstRoot, oldAst, ;]
[), ;, }, public, static, class, ParseResult, {, public, final, Node, ast, ;, public, final, AstRoot, oldAst, ;, public, ParseResult]
[=, ast, ;, this, ., oldAst, =, oldAst, ;, }, }, }]
[., ast, =, ast, ;, this, ., oldAst, =, oldAst, ;, }, }, }]
[;, this, ., oldAst, =, oldAst, ;, }, }, }]
[=, oldAst, ;, }, }, }]
[., oldAst, =, oldAst, ;, }, }, }]
[;, }, }, }]
