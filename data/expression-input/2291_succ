[;, protected, CalendarConverter, (, ), {, super, (, ), ;, }, public, Chronology, getChronology, (, Object, object, ,, Chronology, chrono]
[), {, return, chrono, ;, }, Calendar, cal, =, (, Calendar, ), object, ;, DateTimeZone, zone, =, null, ;, try]
[!=, null, ), {, return, chrono, ;, }, Calendar, cal, =, (, Calendar, ), object, ;, DateTimeZone, zone, =, null]
[), {, return, chrono, ;, }, Calendar, cal, =, (, Calendar, ), object, ;, DateTimeZone, zone, =, null, ;, try]
[;, }, Calendar, cal, =, (, Calendar, ), object, ;, DateTimeZone, zone, =, null, ;, try, {, zone, =, DateTimeZone]
[;, DateTimeZone, zone, =, null, ;, try, {, zone, =, DateTimeZone, ., forTimeZone, (, cal, ., getTimeZone, (, ), )]
[;, DateTimeZone, zone, =, null, ;, try, {, zone, =, DateTimeZone, ., forTimeZone, (, cal, ., getTimeZone, (, ), )]
[;, try, {, zone, =, DateTimeZone, ., forTimeZone, (, cal, ., getTimeZone, (, ), ), ;, }, catch, (, IllegalArgumentException]
[=, DateTimeZone, ., forTimeZone, (, cal, ., getTimeZone, (, ), ), ;, }, catch, (, IllegalArgumentException, ex, ), {, zone]
[;, }, catch, (, IllegalArgumentException, ex, ), {, zone, =, DateTimeZone, ., getDefault, (, ), ;, }, return, getChronology, (]
[., forTimeZone, (, cal, ., getTimeZone, (, ), ), ;, }, catch, (, IllegalArgumentException, ex, ), {, zone, =, DateTimeZone]
[), ;, }, catch, (, IllegalArgumentException, ex, ), {, zone, =, DateTimeZone, ., getDefault, (, ), ;, }, return, getChronology]
[., getTimeZone, (, ), ), ;, }, catch, (, IllegalArgumentException, ex, ), {, zone, =, DateTimeZone, ., getDefault, (, )]
[=, DateTimeZone, ., getDefault, (, ), ;, }, return, getChronology, (, cal, ,, zone, ), ;, }, public, Chronology, getChronology]
[;, }, return, getChronology, (, cal, ,, zone, ), ;, }, public, Chronology, getChronology, (, Object, object, ,, DateTimeZone, zone]
[., getDefault, (, ), ;, }, return, getChronology, (, cal, ,, zone, ), ;, }, public, Chronology, getChronology, (, Object]
[;, }, public, Chronology, getChronology, (, Object, object, ,, DateTimeZone, zone, ), {, if, (, object, ., getClass, (, )]
[,, zone, ), ;, }, public, Chronology, getChronology, (, Object, object, ,, DateTimeZone, zone, ), {, if, (, object, .]
[), ;, }, public, Chronology, getChronology, (, Object, object, ,, DateTimeZone, zone, ), {, if, (, object, ., getClass, (]
[), {, return, BuddhistChronology, ., getInstance, (, zone, ), ;, }, else, if, (, object, instanceof, GregorianCalendar, ), {, GregorianCalendar]
[., endsWith, (, ".BuddhistCalendar", ), ), {, return, BuddhistChronology, ., getInstance, (, zone, ), ;, }, else, if, (, object]
[., getName, (, ), ., endsWith, (, ".BuddhistCalendar", ), ), {, return, BuddhistChronology, ., getInstance, (, zone, ), ;, }]
[., getClass, (, ), ., getName, (, ), ., endsWith, (, ".BuddhistCalendar", ), ), {, return, BuddhistChronology, ., getInstance, (]
[), ), {, return, BuddhistChronology, ., getInstance, (, zone, ), ;, }, else, if, (, object, instanceof, GregorianCalendar, ), {]
[;, }, else, if, (, object, instanceof, GregorianCalendar, ), {, GregorianCalendar, gc, =, (, GregorianCalendar, ), object, ;, long, cutover]
[., getInstance, (, zone, ), ;, }, else, if, (, object, instanceof, GregorianCalendar, ), {, GregorianCalendar, gc, =, (, GregorianCalendar]
[), ;, }, else, if, (, object, instanceof, GregorianCalendar, ), {, GregorianCalendar, gc, =, (, GregorianCalendar, ), object, ;, long]
[), {, GregorianCalendar, gc, =, (, GregorianCalendar, ), object, ;, long, cutover, =, gc, ., getGregorianChange, (, ), ., getTime]
[instanceof, GregorianCalendar, ), {, GregorianCalendar, gc, =, (, GregorianCalendar, ), object, ;, long, cutover, =, gc, ., getGregorianChange, (, )]
[;, long, cutover, =, gc, ., getGregorianChange, (, ), ., getTime, (, ), ;, if, (, cutover, ==, Long, .]
[;, long, cutover, =, gc, ., getGregorianChange, (, ), ., getTime, (, ), ;, if, (, cutover, ==, Long, .]
[;, if, (, cutover, ==, Long, ., MIN_VALUE, ), {, return, GregorianChronology, ., getInstance, (, zone, ), ;, }, else]
[., getTime, (, ), ;, if, (, cutover, ==, Long, ., MIN_VALUE, ), {, return, GregorianChronology, ., getInstance, (, zone]
[., getGregorianChange, (, ), ., getTime, (, ), ;, if, (, cutover, ==, Long, ., MIN_VALUE, ), {, return, GregorianChronology]
[), {, return, GregorianChronology, ., getInstance, (, zone, ), ;, }, else, if, (, cutover, ==, Long, ., MAX_VALUE, )]
[==, Long, ., MIN_VALUE, ), {, return, GregorianChronology, ., getInstance, (, zone, ), ;, }, else, if, (, cutover, ==]
[), {, return, GregorianChronology, ., getInstance, (, zone, ), ;, }, else, if, (, cutover, ==, Long, ., MAX_VALUE, )]
[., MIN_VALUE, ), {, return, GregorianChronology, ., getInstance, (, zone, ), ;, }, else, if, (, cutover, ==, Long, .]
[;, }, else, if, (, cutover, ==, Long, ., MAX_VALUE, ), {, return, JulianChronology, ., getInstance, (, zone, ), ;]
[., getInstance, (, zone, ), ;, }, else, if, (, cutover, ==, Long, ., MAX_VALUE, ), {, return, JulianChronology, .]
[), ;, }, else, if, (, cutover, ==, Long, ., MAX_VALUE, ), {, return, JulianChronology, ., getInstance, (, zone, )]
[), {, return, JulianChronology, ., getInstance, (, zone, ), ;, }, else, {, return, GJChronology, ., getInstance, (, zone, ,]
[==, Long, ., MAX_VALUE, ), {, return, JulianChronology, ., getInstance, (, zone, ), ;, }, else, {, return, GJChronology, .]
[), {, return, JulianChronology, ., getInstance, (, zone, ), ;, }, else, {, return, GJChronology, ., getInstance, (, zone, ,]
[., MAX_VALUE, ), {, return, JulianChronology, ., getInstance, (, zone, ), ;, }, else, {, return, GJChronology, ., getInstance, (]
[;, }, else, {, return, GJChronology, ., getInstance, (, zone, ,, cutover, ,, 4, ), ;, }, }, else, {]
[., getInstance, (, zone, ), ;, }, else, {, return, GJChronology, ., getInstance, (, zone, ,, cutover, ,, 4, )]
[), ;, }, else, {, return, GJChronology, ., getInstance, (, zone, ,, cutover, ,, 4, ), ;, }, }, else]
[;, }, }, else, {, return, ISOChronology, ., getInstance, (, zone, ), ;, }, }, public, long, getInstantMillis, (, Object]
[., getInstance, (, zone, ,, cutover, ,, 4, ), ;, }, }, else, {, return, ISOChronology, ., getInstance, (, zone]
[,, cutover, ,, 4, ), ;, }, }, else, {, return, ISOChronology, ., getInstance, (, zone, ), ;, }, }]
[,, 4, ), ;, }, }, else, {, return, ISOChronology, ., getInstance, (, zone, ), ;, }, }, public, long]
[), ;, }, }, else, {, return, ISOChronology, ., getInstance, (, zone, ), ;, }, }, public, long, getInstantMillis, (]
[;, }, }, public, long, getInstantMillis, (, Object, object, ,, Chronology, chrono, ), {, Calendar, calendar, =, (, Calendar, )]
[., getInstance, (, zone, ), ;, }, }, public, long, getInstantMillis, (, Object, object, ,, Chronology, chrono, ), {, Calendar]
[), ;, }, }, public, long, getInstantMillis, (, Object, object, ,, Chronology, chrono, ), {, Calendar, calendar, =, (, Calendar]
[;, return, calendar, ., getTime, (, ), ., getTime, (, ), ;, }, public, Class, <, ?, >, getSupportedType, (]
[;, return, calendar, ., getTime, (, ), ., getTime, (, ), ;, }, public, Class, <, ?, >, getSupportedType, (]
[;, }, public, Class, <, ?, >, getSupportedType, (, ), {, return, Calendar, ., class, ;, }, }]
[., getTime, (, ), ;, }, public, Class, <, ?, >, getSupportedType, (, ), {, return, Calendar, ., class, ;]
[., getTime, (, ), ., getTime, (, ), ;, }, public, Class, <, ?, >, getSupportedType, (, ), {, return]
[;, }, }]
