[;, private, double, sumX, =, 0d, ;, private, double, sumXX, =, 0d, ;, private, double, sumY, =, 0d, ;, private]
[;, private, double, sumX, =, 0d, ;, private, double, sumXX, =, 0d, ;, private, double, sumY, =, 0d, ;, private]
[;, private, double, sumXX, =, 0d, ;, private, double, sumY, =, 0d, ;, private, double, sumYY, =, 0d, ;, private]
[;, private, double, sumY, =, 0d, ;, private, double, sumYY, =, 0d, ;, private, double, sumXY, =, 0d, ;, private]
[;, private, double, sumYY, =, 0d, ;, private, double, sumXY, =, 0d, ;, private, long, n, =, 0, ;, private]
[;, private, double, sumXY, =, 0d, ;, private, long, n, =, 0, ;, private, double, xbar, =, 0, ;, private]
[;, private, long, n, =, 0, ;, private, double, xbar, =, 0, ;, private, double, ybar, =, 0, ;, private]
[;, private, double, xbar, =, 0, ;, private, double, ybar, =, 0, ;, private, final, boolean, hasIntercept, ;, public, SimpleRegression]
[;, private, double, ybar, =, 0, ;, private, final, boolean, hasIntercept, ;, public, SimpleRegression, (, ), {, this, (, true]
[;, private, final, boolean, hasIntercept, ;, public, SimpleRegression, (, ), {, this, (, true, ), ;, }, public, SimpleRegression, (]
[), ;, }, public, SimpleRegression, (, boolean, includeIntercept, ), {, super, (, ), ;, hasIntercept, =, includeIntercept, ;, }, public]
[=, includeIntercept, ;, }, public, void, addData, (, final, double, x, ,, final, double, y, ), {, if, (, n]
[;, }, public, void, addData, (, final, double, x, ,, final, double, y, ), {, if, (, n, ==, 0]
[), {, xbar, =, x, ;, ybar, =, y, ;, }, else, {, if, (, hasIntercept, ), {, final, double]
[==, 0, ), {, xbar, =, x, ;, ybar, =, y, ;, }, else, {, if, (, hasIntercept, ), {]
[), {, xbar, =, x, ;, ybar, =, y, ;, }, else, {, if, (, hasIntercept, ), {, final, double]
[=, x, ;, ybar, =, y, ;, }, else, {, if, (, hasIntercept, ), {, final, double, fact1, =, 1.0]
[;, ybar, =, y, ;, }, else, {, if, (, hasIntercept, ), {, final, double, fact1, =, 1.0, +, n]
[=, y, ;, }, else, {, if, (, hasIntercept, ), {, final, double, fact1, =, 1.0, +, n, ;, final]
[;, }, else, {, if, (, hasIntercept, ), {, final, double, fact1, =, 1.0, +, n, ;, final, double, fact2]
[), {, final, double, fact1, =, 1.0, +, n, ;, final, double, fact2, =, n, /, (, 1.0, +, n]
[;, final, double, fact2, =, n, /, (, 1.0, +, n, ), ;, final, double, dx, =, x, -, xbar]
[+, n, ;, final, double, fact2, =, n, /, (, 1.0, +, n, ), ;, final, double, dx, =, x]
[;, final, double, fact2, =, n, /, (, 1.0, +, n, ), ;, final, double, dx, =, x, -, xbar]
[;, final, double, dx, =, x, -, xbar, ;, final, double, dy, =, y, -, ybar, ;, sumXX, +=, dx]
[/, (, 1.0, +, n, ), ;, final, double, dx, =, x, -, xbar, ;, final, double, dy, =, y]
[;, final, double, dx, =, x, -, xbar, ;, final, double, dy, =, y, -, ybar, ;, sumXX, +=, dx]
[), ;, final, double, dx, =, x, -, xbar, ;, final, double, dy, =, y, -, ybar, ;, sumXX, +=]
[+, n, ), ;, final, double, dx, =, x, -, xbar, ;, final, double, dy, =, y, -, ybar, ;]
[), ;, final, double, dx, =, x, -, xbar, ;, final, double, dy, =, y, -, ybar, ;, sumXX, +=]
[;, final, double, dy, =, y, -, ybar, ;, sumXX, +=, dx, *, dx, *, fact2, ;, sumYY, +=, dy]
[-, xbar, ;, final, double, dy, =, y, -, ybar, ;, sumXX, +=, dx, *, dx, *, fact2, ;, sumYY]
[;, final, double, dy, =, y, -, ybar, ;, sumXX, +=, dx, *, dx, *, fact2, ;, sumYY, +=, dy]
[;, sumXX, +=, dx, *, dx, *, fact2, ;, sumYY, +=, dy, *, dy, *, fact2, ;, sumXY, +=, dx]
[-, ybar, ;, sumXX, +=, dx, *, dx, *, fact2, ;, sumYY, +=, dy, *, dy, *, fact2, ;, sumXY]
[;, sumXX, +=, dx, *, dx, *, fact2, ;, sumYY, +=, dy, *, dy, *, fact2, ;, sumXY, +=, dx]
[+=, dx, *, dx, *, fact2, ;, sumYY, +=, dy, *, dy, *, fact2, ;, sumXY, +=, dx, *, dy]
[;, sumYY, +=, dy, *, dy, *, fact2, ;, sumXY, +=, dx, *, dy, *, fact2, ;, xbar, +=, dx]
[*, fact2, ;, sumYY, +=, dy, *, dy, *, fact2, ;, sumXY, +=, dx, *, dy, *, fact2, ;, xbar]
[*, dx, *, fact2, ;, sumYY, +=, dy, *, dy, *, fact2, ;, sumXY, +=, dx, *, dy, *, fact2]
[*, fact2, ;, sumYY, +=, dy, *, dy, *, fact2, ;, sumXY, +=, dx, *, dy, *, fact2, ;, xbar]
[;, sumYY, +=, dy, *, dy, *, fact2, ;, sumXY, +=, dx, *, dy, *, fact2, ;, xbar, +=, dx]
[+=, dy, *, dy, *, fact2, ;, sumXY, +=, dx, *, dy, *, fact2, ;, xbar, +=, dx, /, fact1]
[;, sumXY, +=, dx, *, dy, *, fact2, ;, xbar, +=, dx, /, fact1, ;, ybar, +=, dy, /, fact1]
[*, fact2, ;, sumXY, +=, dx, *, dy, *, fact2, ;, xbar, +=, dx, /, fact1, ;, ybar, +=, dy]
[*, dy, *, fact2, ;, sumXY, +=, dx, *, dy, *, fact2, ;, xbar, +=, dx, /, fact1, ;, ybar]
[*, fact2, ;, sumXY, +=, dx, *, dy, *, fact2, ;, xbar, +=, dx, /, fact1, ;, ybar, +=, dy]
[;, sumXY, +=, dx, *, dy, *, fact2, ;, xbar, +=, dx, /, fact1, ;, ybar, +=, dy, /, fact1]
[+=, dx, *, dy, *, fact2, ;, xbar, +=, dx, /, fact1, ;, ybar, +=, dy, /, fact1, ;, }]
[;, xbar, +=, dx, /, fact1, ;, ybar, +=, dy, /, fact1, ;, }, }, if, (, !, hasIntercept, )]
[*, fact2, ;, xbar, +=, dx, /, fact1, ;, ybar, +=, dy, /, fact1, ;, }, }, if, (, !]
[*, dy, *, fact2, ;, xbar, +=, dx, /, fact1, ;, ybar, +=, dy, /, fact1, ;, }, }, if]
[*, fact2, ;, xbar, +=, dx, /, fact1, ;, ybar, +=, dy, /, fact1, ;, }, }, if, (, !]
[;, xbar, +=, dx, /, fact1, ;, ybar, +=, dy, /, fact1, ;, }, }, if, (, !, hasIntercept, )]
[+=, dx, /, fact1, ;, ybar, +=, dy, /, fact1, ;, }, }, if, (, !, hasIntercept, ), {, sumXX]
[;, ybar, +=, dy, /, fact1, ;, }, }, if, (, !, hasIntercept, ), {, sumXX, +=, x, *, x]
[/, fact1, ;, ybar, +=, dy, /, fact1, ;, }, }, if, (, !, hasIntercept, ), {, sumXX, +=, x]
[;, ybar, +=, dy, /, fact1, ;, }, }, if, (, !, hasIntercept, ), {, sumXX, +=, x, *, x]
[+=, dy, /, fact1, ;, }, }, if, (, !, hasIntercept, ), {, sumXX, +=, x, *, x, ;, sumYY]
[;, }, }, if, (, !, hasIntercept, ), {, sumXX, +=, x, *, x, ;, sumYY, +=, y, *, y]
[/, fact1, ;, }, }, if, (, !, hasIntercept, ), {, sumXX, +=, x, *, x, ;, sumYY, +=, y]
[;, }, }, if, (, !, hasIntercept, ), {, sumXX, +=, x, *, x, ;, sumYY, +=, y, *, y]
[), {, sumXX, +=, x, *, x, ;, sumYY, +=, y, *, y, ;, sumXY, +=, x, *, y, ;]
[), {, sumXX, +=, x, *, x, ;, sumYY, +=, y, *, y, ;, sumXY, +=, x, *, y, ;]
[+=, x, *, x, ;, sumYY, +=, y, *, y, ;, sumXY, +=, x, *, y, ;, }, sumX, +=]
[;, sumYY, +=, y, *, y, ;, sumXY, +=, x, *, y, ;, }, sumX, +=, x, ;, sumY, +=]
[*, x, ;, sumYY, +=, y, *, y, ;, sumXY, +=, x, *, y, ;, }, sumX, +=, x, ;]
[;, sumYY, +=, y, *, y, ;, sumXY, +=, x, *, y, ;, }, sumX, +=, x, ;, sumY, +=]
[+=, y, *, y, ;, sumXY, +=, x, *, y, ;, }, sumX, +=, x, ;, sumY, +=, y, ;]
[;, sumXY, +=, x, *, y, ;, }, sumX, +=, x, ;, sumY, +=, y, ;, n, ++, ;, }]
[*, y, ;, sumXY, +=, x, *, y, ;, }, sumX, +=, x, ;, sumY, +=, y, ;, n, ++]
[;, sumXY, +=, x, *, y, ;, }, sumX, +=, x, ;, sumY, +=, y, ;, n, ++, ;, }]
[+=, x, *, y, ;, }, sumX, +=, x, ;, sumY, +=, y, ;, n, ++, ;, }, public, void]
[;, }, sumX, +=, x, ;, sumY, +=, y, ;, n, ++, ;, }, public, void, append, (, SimpleRegression, reg]
[*, y, ;, }, sumX, +=, x, ;, sumY, +=, y, ;, n, ++, ;, }, public, void, append, (]
[;, }, sumX, +=, x, ;, sumY, +=, y, ;, n, ++, ;, }, public, void, append, (, SimpleRegression, reg]
[+=, x, ;, sumY, +=, y, ;, n, ++, ;, }, public, void, append, (, SimpleRegression, reg, ), {, if]
[;, sumY, +=, y, ;, n, ++, ;, }, public, void, append, (, SimpleRegression, reg, ), {, if, (, n]
[+=, y, ;, n, ++, ;, }, public, void, append, (, SimpleRegression, reg, ), {, if, (, n, ==, 0]
[;, n, ++, ;, }, public, void, append, (, SimpleRegression, reg, ), {, if, (, n, ==, 0, ), {]
[;, }, public, void, append, (, SimpleRegression, reg, ), {, if, (, n, ==, 0, ), {, xbar, =, reg]
[++, ;, }, public, void, append, (, SimpleRegression, reg, ), {, if, (, n, ==, 0, ), {, xbar, =]
[), {, xbar, =, reg, ., xbar, ;, ybar, =, reg, ., ybar, ;, sumXX, =, reg, ., sumXX, ;]
[==, 0, ), {, xbar, =, reg, ., xbar, ;, ybar, =, reg, ., ybar, ;, sumXX, =, reg, .]
[), {, xbar, =, reg, ., xbar, ;, ybar, =, reg, ., ybar, ;, sumXX, =, reg, ., sumXX, ;]
[=, reg, ., xbar, ;, ybar, =, reg, ., ybar, ;, sumXX, =, reg, ., sumXX, ;, sumYY, =, reg]
[;, ybar, =, reg, ., ybar, ;, sumXX, =, reg, ., sumXX, ;, sumYY, =, reg, ., sumYY, ;, sumXY]
[., xbar, ;, ybar, =, reg, ., ybar, ;, sumXX, =, reg, ., sumXX, ;, sumYY, =, reg, ., sumYY]
[=, reg, ., ybar, ;, sumXX, =, reg, ., sumXX, ;, sumYY, =, reg, ., sumYY, ;, sumXY, =, reg]
[;, sumXX, =, reg, ., sumXX, ;, sumYY, =, reg, ., sumYY, ;, sumXY, =, reg, ., sumXY, ;, }]
[., ybar, ;, sumXX, =, reg, ., sumXX, ;, sumYY, =, reg, ., sumYY, ;, sumXY, =, reg, ., sumXY]
[=, reg, ., sumXX, ;, sumYY, =, reg, ., sumYY, ;, sumXY, =, reg, ., sumXY, ;, }, else, {]
[;, sumYY, =, reg, ., sumYY, ;, sumXY, =, reg, ., sumXY, ;, }, else, {, if, (, hasIntercept, )]
[., sumXX, ;, sumYY, =, reg, ., sumYY, ;, sumXY, =, reg, ., sumXY, ;, }, else, {, if, (]
[=, reg, ., sumYY, ;, sumXY, =, reg, ., sumXY, ;, }, else, {, if, (, hasIntercept, ), {, final]
[;, sumXY, =, reg, ., sumXY, ;, }, else, {, if, (, hasIntercept, ), {, final, double, fact1, =, reg]
[., sumYY, ;, sumXY, =, reg, ., sumXY, ;, }, else, {, if, (, hasIntercept, ), {, final, double, fact1]
[=, reg, ., sumXY, ;, }, else, {, if, (, hasIntercept, ), {, final, double, fact1, =, reg, ., n]
[;, }, else, {, if, (, hasIntercept, ), {, final, double, fact1, =, reg, ., n, /, (, double, )]
[., sumXY, ;, }, else, {, if, (, hasIntercept, ), {, final, double, fact1, =, reg, ., n, /, (]
[), {, final, double, fact1, =, reg, ., n, /, (, double, ), (, reg, ., n, +, n, )]
[;, final, double, fact2, =, n, *, reg, ., n, /, (, double, ), (, reg, ., n, +, n]
[/, (, double, ), (, reg, ., n, +, n, ), ;, final, double, fact2, =, n, *, reg, .]
[., n, /, (, double, ), (, reg, ., n, +, n, ), ;, final, double, fact2, =, n, *]
[;, final, double, fact2, =, n, *, reg, ., n, /, (, double, ), (, reg, ., n, +, n]
[;, final, double, fact2, =, n, *, reg, ., n, /, (, double, ), (, reg, ., n, +, n]
[), ;, final, double, fact2, =, n, *, reg, ., n, /, (, double, ), (, reg, ., n, +]
[+, n, ), ;, final, double, fact2, =, n, *, reg, ., n, /, (, double, ), (, reg, .]
[., n, +, n, ), ;, final, double, fact2, =, n, *, reg, ., n, /, (, double, ), (]
[), ;, final, double, fact2, =, n, *, reg, ., n, /, (, double, ), (, reg, ., n, +]
[;, final, double, dx, =, reg, ., xbar, -, xbar, ;, final, double, dy, =, reg, ., ybar, -, ybar]
[/, (, double, ), (, reg, ., n, +, n, ), ;, final, double, dx, =, reg, ., xbar, -]
[*, reg, ., n, /, (, double, ), (, reg, ., n, +, n, ), ;, final, double, dx, =]
[/, (, double, ), (, reg, ., n, +, n, ), ;, final, double, dx, =, reg, ., xbar, -]
[., n, /, (, double, ), (, reg, ., n, +, n, ), ;, final, double, dx, =, reg, .]
[;, final, double, dx, =, reg, ., xbar, -, xbar, ;, final, double, dy, =, reg, ., ybar, -, ybar]
[;, final, double, dx, =, reg, ., xbar, -, xbar, ;, final, double, dy, =, reg, ., ybar, -, ybar]
[), ;, final, double, dx, =, reg, ., xbar, -, xbar, ;, final, double, dy, =, reg, ., ybar, -]
[+, n, ), ;, final, double, dx, =, reg, ., xbar, -, xbar, ;, final, double, dy, =, reg, .]
[., n, +, n, ), ;, final, double, dx, =, reg, ., xbar, -, xbar, ;, final, double, dy, =]
[), ;, final, double, dx, =, reg, ., xbar, -, xbar, ;, final, double, dy, =, reg, ., ybar, -]
[;, final, double, dy, =, reg, ., ybar, -, ybar, ;, sumXX, +=, reg, ., sumXX, +, dx, *, dx]
[-, xbar, ;, final, double, dy, =, reg, ., ybar, -, ybar, ;, sumXX, +=, reg, ., sumXX, +, dx]
[., xbar, -, xbar, ;, final, double, dy, =, reg, ., ybar, -, ybar, ;, sumXX, +=, reg, ., sumXX]
[;, final, double, dy, =, reg, ., ybar, -, ybar, ;, sumXX, +=, reg, ., sumXX, +, dx, *, dx]
[;, sumXX, +=, reg, ., sumXX, +, dx, *, dx, *, fact2, ;, sumYY, +=, reg, ., sumYY, +, dy]
[-, ybar, ;, sumXX, +=, reg, ., sumXX, +, dx, *, dx, *, fact2, ;, sumYY, +=, reg, ., sumYY]
[., ybar, -, ybar, ;, sumXX, +=, reg, ., sumXX, +, dx, *, dx, *, fact2, ;, sumYY, +=, reg]
[;, sumXX, +=, reg, ., sumXX, +, dx, *, dx, *, fact2, ;, sumYY, +=, reg, ., sumYY, +, dy]
[+=, reg, ., sumXX, +, dx, *, dx, *, fact2, ;, sumYY, +=, reg, ., sumYY, +, dy, *, dy]
[;, sumYY, +=, reg, ., sumYY, +, dy, *, dy, *, fact2, ;, sumXY, +=, reg, ., sumXY, +, dx]
[+, dx, *, dx, *, fact2, ;, sumYY, +=, reg, ., sumYY, +, dy, *, dy, *, fact2, ;, sumXY]
[., sumXX, +, dx, *, dx, *, fact2, ;, sumYY, +=, reg, ., sumYY, +, dy, *, dy, *, fact2]
[;, sumYY, +=, reg, ., sumYY, +, dy, *, dy, *, fact2, ;, sumXY, +=, reg, ., sumXY, +, dx]
[*, fact2, ;, sumYY, +=, reg, ., sumYY, +, dy, *, dy, *, fact2, ;, sumXY, +=, reg, ., sumXY]
[*, dx, *, fact2, ;, sumYY, +=, reg, ., sumYY, +, dy, *, dy, *, fact2, ;, sumXY, +=, reg]
[*, fact2, ;, sumYY, +=, reg, ., sumYY, +, dy, *, dy, *, fact2, ;, sumXY, +=, reg, ., sumXY]
[;, sumYY, +=, reg, ., sumYY, +, dy, *, dy, *, fact2, ;, sumXY, +=, reg, ., sumXY, +, dx]
[+=, reg, ., sumYY, +, dy, *, dy, *, fact2, ;, sumXY, +=, reg, ., sumXY, +, dx, *, dy]
[;, sumXY, +=, reg, ., sumXY, +, dx, *, dy, *, fact2, ;, xbar, +=, dx, *, fact1, ;, ybar]
[+, dy, *, dy, *, fact2, ;, sumXY, +=, reg, ., sumXY, +, dx, *, dy, *, fact2, ;, xbar]
[., sumYY, +, dy, *, dy, *, fact2, ;, sumXY, +=, reg, ., sumXY, +, dx, *, dy, *, fact2]
[;, sumXY, +=, reg, ., sumXY, +, dx, *, dy, *, fact2, ;, xbar, +=, dx, *, fact1, ;, ybar]
[*, fact2, ;, sumXY, +=, reg, ., sumXY, +, dx, *, dy, *, fact2, ;, xbar, +=, dx, *, fact1]
[*, dy, *, fact2, ;, sumXY, +=, reg, ., sumXY, +, dx, *, dy, *, fact2, ;, xbar, +=, dx]
[*, fact2, ;, sumXY, +=, reg, ., sumXY, +, dx, *, dy, *, fact2, ;, xbar, +=, dx, *, fact1]
[;, sumXY, +=, reg, ., sumXY, +, dx, *, dy, *, fact2, ;, xbar, +=, dx, *, fact1, ;, ybar]
[+=, reg, ., sumXY, +, dx, *, dy, *, fact2, ;, xbar, +=, dx, *, fact1, ;, ybar, +=, dy]
[;, xbar, +=, dx, *, fact1, ;, ybar, +=, dy, *, fact1, ;, }, else, {, sumXX, +=, reg, .]
[+, dx, *, dy, *, fact2, ;, xbar, +=, dx, *, fact1, ;, ybar, +=, dy, *, fact1, ;, }]
[., sumXY, +, dx, *, dy, *, fact2, ;, xbar, +=, dx, *, fact1, ;, ybar, +=, dy, *, fact1]
[;, xbar, +=, dx, *, fact1, ;, ybar, +=, dy, *, fact1, ;, }, else, {, sumXX, +=, reg, .]
[*, fact2, ;, xbar, +=, dx, *, fact1, ;, ybar, +=, dy, *, fact1, ;, }, else, {, sumXX, +=]
[*, dy, *, fact2, ;, xbar, +=, dx, *, fact1, ;, ybar, +=, dy, *, fact1, ;, }, else, {]
[*, fact2, ;, xbar, +=, dx, *, fact1, ;, ybar, +=, dy, *, fact1, ;, }, else, {, sumXX, +=]
[;, xbar, +=, dx, *, fact1, ;, ybar, +=, dy, *, fact1, ;, }, else, {, sumXX, +=, reg, .]
[+=, dx, *, fact1, ;, ybar, +=, dy, *, fact1, ;, }, else, {, sumXX, +=, reg, ., sumXX, ;]
[;, ybar, +=, dy, *, fact1, ;, }, else, {, sumXX, +=, reg, ., sumXX, ;, sumYY, +=, reg, .]
[*, fact1, ;, ybar, +=, dy, *, fact1, ;, }, else, {, sumXX, +=, reg, ., sumXX, ;, sumYY, +=]
[;, ybar, +=, dy, *, fact1, ;, }, else, {, sumXX, +=, reg, ., sumXX, ;, sumYY, +=, reg, .]
[+=, dy, *, fact1, ;, }, else, {, sumXX, +=, reg, ., sumXX, ;, sumYY, +=, reg, ., sumYY, ;]
[;, }, else, {, sumXX, +=, reg, ., sumXX, ;, sumYY, +=, reg, ., sumYY, ;, sumXY, +=, reg, .]
[*, fact1, ;, }, else, {, sumXX, +=, reg, ., sumXX, ;, sumYY, +=, reg, ., sumYY, ;, sumXY, +=]
[;, }, else, {, sumXX, +=, reg, ., sumXX, ;, sumYY, +=, reg, ., sumYY, ;, sumXY, +=, reg, .]
[+=, reg, ., sumXX, ;, sumYY, +=, reg, ., sumYY, ;, sumXY, +=, reg, ., sumXY, ;, }, }, sumX]
[;, sumYY, +=, reg, ., sumYY, ;, sumXY, +=, reg, ., sumXY, ;, }, }, sumX, +=, reg, ., sumX]
[., sumXX, ;, sumYY, +=, reg, ., sumYY, ;, sumXY, +=, reg, ., sumXY, ;, }, }, sumX, +=, reg]
[+=, reg, ., sumYY, ;, sumXY, +=, reg, ., sumXY, ;, }, }, sumX, +=, reg, ., sumX, ;, sumY]
[;, sumXY, +=, reg, ., sumXY, ;, }, }, sumX, +=, reg, ., sumX, ;, sumY, +=, reg, ., sumY]
[., sumYY, ;, sumXY, +=, reg, ., sumXY, ;, }, }, sumX, +=, reg, ., sumX, ;, sumY, +=, reg]
[+=, reg, ., sumXY, ;, }, }, sumX, +=, reg, ., sumX, ;, sumY, +=, reg, ., sumY, ;, n]
[;, }, }, sumX, +=, reg, ., sumX, ;, sumY, +=, reg, ., sumY, ;, n, +=, reg, ., n]
[., sumXY, ;, }, }, sumX, +=, reg, ., sumX, ;, sumY, +=, reg, ., sumY, ;, n, +=, reg]
[+=, reg, ., sumX, ;, sumY, +=, reg, ., sumY, ;, n, +=, reg, ., n, ;, }, public, void]
[;, sumY, +=, reg, ., sumY, ;, n, +=, reg, ., n, ;, }, public, void, removeData, (, final, double]
[., sumX, ;, sumY, +=, reg, ., sumY, ;, n, +=, reg, ., n, ;, }, public, void, removeData, (]
[+=, reg, ., sumY, ;, n, +=, reg, ., n, ;, }, public, void, removeData, (, final, double, x, ,]
[;, n, +=, reg, ., n, ;, }, public, void, removeData, (, final, double, x, ,, final, double, y, )]
[., sumY, ;, n, +=, reg, ., n, ;, }, public, void, removeData, (, final, double, x, ,, final, double]
[+=, reg, ., n, ;, }, public, void, removeData, (, final, double, x, ,, final, double, y, ), {, if]
[;, }, public, void, removeData, (, final, double, x, ,, final, double, y, ), {, if, (, n, >, 0]
[., n, ;, }, public, void, removeData, (, final, double, x, ,, final, double, y, ), {, if, (, n]
[), {, if, (, hasIntercept, ), {, final, double, fact1, =, n, -, 1.0, ;, final, double, fact2, =, n]
[>, 0, ), {, if, (, hasIntercept, ), {, final, double, fact1, =, n, -, 1.0, ;, final, double, fact2]
[), {, if, (, hasIntercept, ), {, final, double, fact1, =, n, -, 1.0, ;, final, double, fact2, =, n]
[), {, final, double, fact1, =, n, -, 1.0, ;, final, double, fact2, =, n, /, (, n, -, 1.0]
[;, final, double, fact2, =, n, /, (, n, -, 1.0, ), ;, final, double, dx, =, x, -, xbar]
[-, 1.0, ;, final, double, fact2, =, n, /, (, n, -, 1.0, ), ;, final, double, dx, =, x]
[;, final, double, fact2, =, n, /, (, n, -, 1.0, ), ;, final, double, dx, =, x, -, xbar]
[;, final, double, dx, =, x, -, xbar, ;, final, double, dy, =, y, -, ybar, ;, sumXX, -=, dx]
[/, (, n, -, 1.0, ), ;, final, double, dx, =, x, -, xbar, ;, final, double, dy, =, y]
[;, final, double, dx, =, x, -, xbar, ;, final, double, dy, =, y, -, ybar, ;, sumXX, -=, dx]
[), ;, final, double, dx, =, x, -, xbar, ;, final, double, dy, =, y, -, ybar, ;, sumXX, -=]
[-, 1.0, ), ;, final, double, dx, =, x, -, xbar, ;, final, double, dy, =, y, -, ybar, ;]
[), ;, final, double, dx, =, x, -, xbar, ;, final, double, dy, =, y, -, ybar, ;, sumXX, -=]
[;, final, double, dy, =, y, -, ybar, ;, sumXX, -=, dx, *, dx, *, fact2, ;, sumYY, -=, dy]
[-, xbar, ;, final, double, dy, =, y, -, ybar, ;, sumXX, -=, dx, *, dx, *, fact2, ;, sumYY]
[;, final, double, dy, =, y, -, ybar, ;, sumXX, -=, dx, *, dx, *, fact2, ;, sumYY, -=, dy]
[;, sumXX, -=, dx, *, dx, *, fact2, ;, sumYY, -=, dy, *, dy, *, fact2, ;, sumXY, -=, dx]
[-, ybar, ;, sumXX, -=, dx, *, dx, *, fact2, ;, sumYY, -=, dy, *, dy, *, fact2, ;, sumXY]
[;, sumXX, -=, dx, *, dx, *, fact2, ;, sumYY, -=, dy, *, dy, *, fact2, ;, sumXY, -=, dx]
[-=, dx, *, dx, *, fact2, ;, sumYY, -=, dy, *, dy, *, fact2, ;, sumXY, -=, dx, *, dy]
[;, sumYY, -=, dy, *, dy, *, fact2, ;, sumXY, -=, dx, *, dy, *, fact2, ;, xbar, -=, dx]
[*, fact2, ;, sumYY, -=, dy, *, dy, *, fact2, ;, sumXY, -=, dx, *, dy, *, fact2, ;, xbar]
[*, dx, *, fact2, ;, sumYY, -=, dy, *, dy, *, fact2, ;, sumXY, -=, dx, *, dy, *, fact2]
[*, fact2, ;, sumYY, -=, dy, *, dy, *, fact2, ;, sumXY, -=, dx, *, dy, *, fact2, ;, xbar]
[;, sumYY, -=, dy, *, dy, *, fact2, ;, sumXY, -=, dx, *, dy, *, fact2, ;, xbar, -=, dx]
[-=, dy, *, dy, *, fact2, ;, sumXY, -=, dx, *, dy, *, fact2, ;, xbar, -=, dx, /, fact1]
[;, sumXY, -=, dx, *, dy, *, fact2, ;, xbar, -=, dx, /, fact1, ;, ybar, -=, dy, /, fact1]
[*, fact2, ;, sumXY, -=, dx, *, dy, *, fact2, ;, xbar, -=, dx, /, fact1, ;, ybar, -=, dy]
[*, dy, *, fact2, ;, sumXY, -=, dx, *, dy, *, fact2, ;, xbar, -=, dx, /, fact1, ;, ybar]
[*, fact2, ;, sumXY, -=, dx, *, dy, *, fact2, ;, xbar, -=, dx, /, fact1, ;, ybar, -=, dy]
[;, sumXY, -=, dx, *, dy, *, fact2, ;, xbar, -=, dx, /, fact1, ;, ybar, -=, dy, /, fact1]
[-=, dx, *, dy, *, fact2, ;, xbar, -=, dx, /, fact1, ;, ybar, -=, dy, /, fact1, ;, }]
[;, xbar, -=, dx, /, fact1, ;, ybar, -=, dy, /, fact1, ;, }, else, {, final, double, fact1, =]
[*, fact2, ;, xbar, -=, dx, /, fact1, ;, ybar, -=, dy, /, fact1, ;, }, else, {, final, double]
[*, dy, *, fact2, ;, xbar, -=, dx, /, fact1, ;, ybar, -=, dy, /, fact1, ;, }, else, {]
[*, fact2, ;, xbar, -=, dx, /, fact1, ;, ybar, -=, dy, /, fact1, ;, }, else, {, final, double]
[;, xbar, -=, dx, /, fact1, ;, ybar, -=, dy, /, fact1, ;, }, else, {, final, double, fact1, =]
[-=, dx, /, fact1, ;, ybar, -=, dy, /, fact1, ;, }, else, {, final, double, fact1, =, n, -]
[;, ybar, -=, dy, /, fact1, ;, }, else, {, final, double, fact1, =, n, -, 1.0, ;, sumXX, -=]
[/, fact1, ;, ybar, -=, dy, /, fact1, ;, }, else, {, final, double, fact1, =, n, -, 1.0, ;]
[;, ybar, -=, dy, /, fact1, ;, }, else, {, final, double, fact1, =, n, -, 1.0, ;, sumXX, -=]
[-=, dy, /, fact1, ;, }, else, {, final, double, fact1, =, n, -, 1.0, ;, sumXX, -=, x, *]
[;, }, else, {, final, double, fact1, =, n, -, 1.0, ;, sumXX, -=, x, *, x, ;, sumYY, -=]
[/, fact1, ;, }, else, {, final, double, fact1, =, n, -, 1.0, ;, sumXX, -=, x, *, x, ;]
[;, }, else, {, final, double, fact1, =, n, -, 1.0, ;, sumXX, -=, x, *, x, ;, sumYY, -=]
[;, sumXX, -=, x, *, x, ;, sumYY, -=, y, *, y, ;, sumXY, -=, x, *, y, ;, xbar]
[-, 1.0, ;, sumXX, -=, x, *, x, ;, sumYY, -=, y, *, y, ;, sumXY, -=, x, *, y]
[;, sumXX, -=, x, *, x, ;, sumYY, -=, y, *, y, ;, sumXY, -=, x, *, y, ;, xbar]
[-=, x, *, x, ;, sumYY, -=, y, *, y, ;, sumXY, -=, x, *, y, ;, xbar, -=, x]
[;, sumYY, -=, y, *, y, ;, sumXY, -=, x, *, y, ;, xbar, -=, x, /, fact1, ;, ybar]
[*, x, ;, sumYY, -=, y, *, y, ;, sumXY, -=, x, *, y, ;, xbar, -=, x, /, fact1]
[;, sumYY, -=, y, *, y, ;, sumXY, -=, x, *, y, ;, xbar, -=, x, /, fact1, ;, ybar]
[-=, y, *, y, ;, sumXY, -=, x, *, y, ;, xbar, -=, x, /, fact1, ;, ybar, -=, y]
[;, sumXY, -=, x, *, y, ;, xbar, -=, x, /, fact1, ;, ybar, -=, y, /, fact1, ;, }]
[*, y, ;, sumXY, -=, x, *, y, ;, xbar, -=, x, /, fact1, ;, ybar, -=, y, /, fact1]
[;, sumXY, -=, x, *, y, ;, xbar, -=, x, /, fact1, ;, ybar, -=, y, /, fact1, ;, }]
[-=, x, *, y, ;, xbar, -=, x, /, fact1, ;, ybar, -=, y, /, fact1, ;, }, sumX, -=]
[;, xbar, -=, x, /, fact1, ;, ybar, -=, y, /, fact1, ;, }, sumX, -=, x, ;, sumY, -=]
[*, y, ;, xbar, -=, x, /, fact1, ;, ybar, -=, y, /, fact1, ;, }, sumX, -=, x, ;]
[;, xbar, -=, x, /, fact1, ;, ybar, -=, y, /, fact1, ;, }, sumX, -=, x, ;, sumY, -=]
[-=, x, /, fact1, ;, ybar, -=, y, /, fact1, ;, }, sumX, -=, x, ;, sumY, -=, y, ;]
[;, ybar, -=, y, /, fact1, ;, }, sumX, -=, x, ;, sumY, -=, y, ;, n, --, ;, }]
[/, fact1, ;, ybar, -=, y, /, fact1, ;, }, sumX, -=, x, ;, sumY, -=, y, ;, n, --]
[;, ybar, -=, y, /, fact1, ;, }, sumX, -=, x, ;, sumY, -=, y, ;, n, --, ;, }]
[-=, y, /, fact1, ;, }, sumX, -=, x, ;, sumY, -=, y, ;, n, --, ;, }, }, public]
[;, }, sumX, -=, x, ;, sumY, -=, y, ;, n, --, ;, }, }, public, void, addData, (, final]
[/, fact1, ;, }, sumX, -=, x, ;, sumY, -=, y, ;, n, --, ;, }, }, public, void, addData]
[;, }, sumX, -=, x, ;, sumY, -=, y, ;, n, --, ;, }, }, public, void, addData, (, final]
[-=, x, ;, sumY, -=, y, ;, n, --, ;, }, }, public, void, addData, (, final, double, [, ]]
[;, sumY, -=, y, ;, n, --, ;, }, }, public, void, addData, (, final, double, [, ], [, ]]
[-=, y, ;, n, --, ;, }, }, public, void, addData, (, final, double, [, ], [, ], data, )]
[;, n, --, ;, }, }, public, void, addData, (, final, double, [, ], [, ], data, ), throws, ModelSpecificationException]
[;, }, }, public, void, addData, (, final, double, [, ], [, ], data, ), throws, ModelSpecificationException, {, for, (]
[--, ;, }, }, public, void, addData, (, final, double, [, ], [, ], data, ), throws, ModelSpecificationException, {, for]
[;, i, <, data, ., length, ;, i, ++, ), {, if, (, data, [, i, ], ., length, <]
[;, i, ++, ), {, if, (, data, [, i, ], ., length, <, 2, ), {, throw, new, ModelSpecificationException]
[<, data, ., length, ;, i, ++, ), {, if, (, data, [, i, ], ., length, <, 2, )]
[;, i, ++, ), {, if, (, data, [, i, ], ., length, <, 2, ), {, throw, new, ModelSpecificationException]
[., length, ;, i, ++, ), {, if, (, data, [, i, ], ., length, <, 2, ), {, throw]
[), {, if, (, data, [, i, ], ., length, <, 2, ), {, throw, new, ModelSpecificationException, (, LocalizedFormats, .]
[++, ), {, if, (, data, [, i, ], ., length, <, 2, ), {, throw, new, ModelSpecificationException, (, LocalizedFormats]
[), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., INVALID_REGRESSION_OBSERVATION, ,, data, [, i, ], ., length, ,, 2, ), ;]
[<, 2, ), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., INVALID_REGRESSION_OBSERVATION, ,, data, [, i, ], ., length, ,, 2]
[., length, <, 2, ), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., INVALID_REGRESSION_OBSERVATION, ,, data, [, i, ], ., length]
[[, i, ], ., length, <, 2, ), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., INVALID_REGRESSION_OBSERVATION, ,, data, [, i]
[], ., length, <, 2, ), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., INVALID_REGRESSION_OBSERVATION, ,, data, [, i, ], .]
[), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., INVALID_REGRESSION_OBSERVATION, ,, data, [, i, ], ., length, ,, 2, ), ;]
[;, }, addData, (, data, [, i, ], [, 0, ], ,, data, [, i, ], [, 1, ], )]
[,, data, [, i, ], ., length, ,, 2, ), ;, }, addData, (, data, [, i, ], [, 0]
[., INVALID_REGRESSION_OBSERVATION, ,, data, [, i, ], ., length, ,, 2, ), ;, }, addData, (, data, [, i, ]]
[,, 2, ), ;, }, addData, (, data, [, i, ], [, 0, ], ,, data, [, i, ], []
[., length, ,, 2, ), ;, }, addData, (, data, [, i, ], [, 0, ], ,, data, [, i]
[[, i, ], ., length, ,, 2, ), ;, }, addData, (, data, [, i, ], [, 0, ], ,]
[], ., length, ,, 2, ), ;, }, addData, (, data, [, i, ], [, 0, ], ,, data, []
[), ;, }, addData, (, data, [, i, ], [, 0, ], ,, data, [, i, ], [, 1, ]]
[;, }, }, public, void, addObservation, (, final, double, [, ], x, ,, final, double, y, ), throws, ModelSpecificationException, {]
[,, data, [, i, ], [, 1, ], ), ;, }, }, public, void, addObservation, (, final, double, [, ]]
[[, 0, ], ,, data, [, i, ], [, 1, ], ), ;, }, }, public, void, addObservation, (, final]
[[, i, ], [, 0, ], ,, data, [, i, ], [, 1, ], ), ;, }, }, public, void]
[], [, 0, ], ,, data, [, i, ], [, 1, ], ), ;, }, }, public, void, addObservation, (]
[], ,, data, [, i, ], [, 1, ], ), ;, }, }, public, void, addObservation, (, final, double, []
[), ;, }, }, public, void, addObservation, (, final, double, [, ], x, ,, final, double, y, ), throws, ModelSpecificationException]
[[, 1, ], ), ;, }, }, public, void, addObservation, (, final, double, [, ], x, ,, final, double, y]
[[, i, ], [, 1, ], ), ;, }, }, public, void, addObservation, (, final, double, [, ], x, ,]
[], [, 1, ], ), ;, }, }, public, void, addObservation, (, final, double, [, ], x, ,, final, double]
[], ), ;, }, }, public, void, addObservation, (, final, double, [, ], x, ,, final, double, y, ), throws]
[), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., INVALID_REGRESSION_OBSERVATION, ,, x, !=, null, ?, x, ., length, :, 0, ,]
[||, x, ., length, ==, 0, ), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., INVALID_REGRESSION_OBSERVATION, ,, x, !=, null, ?]
[==, null, ||, x, ., length, ==, 0, ), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., INVALID_REGRESSION_OBSERVATION, ,, x, !=]
[||, x, ., length, ==, 0, ), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., INVALID_REGRESSION_OBSERVATION, ,, x, !=, null, ?]
[), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., INVALID_REGRESSION_OBSERVATION, ,, x, !=, null, ?, x, ., length, :, 0, ,]
[==, 0, ), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., INVALID_REGRESSION_OBSERVATION, ,, x, !=, null, ?, x, ., length, :]
[., length, ==, 0, ), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., INVALID_REGRESSION_OBSERVATION, ,, x, !=, null, ?, x, .]
[), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., INVALID_REGRESSION_OBSERVATION, ,, x, !=, null, ?, x, ., length, :, 0, ,]
[;, }, addData, (, x, [, 0, ], ,, y, ), ;, }, public, void, addObservations, (, final, double, []
[,, x, !=, null, ?, x, ., length, :, 0, ,, 1, ), ;, }, addData, (, x, [, 0]
[., INVALID_REGRESSION_OBSERVATION, ,, x, !=, null, ?, x, ., length, :, 0, ,, 1, ), ;, }, addData, (, x]
[,, 1, ), ;, }, addData, (, x, [, 0, ], ,, y, ), ;, }, public, void, addObservations, (]
[?, x, ., length, :, 0, ,, 1, ), ;, }, addData, (, x, [, 0, ], ,, y, )]
[!=, null, ?, x, ., length, :, 0, ,, 1, ), ;, }, addData, (, x, [, 0, ], ,]
[?, x, ., length, :, 0, ,, 1, ), ;, }, addData, (, x, [, 0, ], ,, y, )]
[:, 0, ,, 1, ), ;, }, addData, (, x, [, 0, ], ,, y, ), ;, }, public, void]
[., length, :, 0, ,, 1, ), ;, }, addData, (, x, [, 0, ], ,, y, ), ;, }]
[,, 1, ), ;, }, addData, (, x, [, 0, ], ,, y, ), ;, }, public, void, addObservations, (]
[), ;, }, addData, (, x, [, 0, ], ,, y, ), ;, }, public, void, addObservations, (, final, double]
[;, }, public, void, addObservations, (, final, double, [, ], [, ], x, ,, final, double, [, ], y, )]
[,, y, ), ;, }, public, void, addObservations, (, final, double, [, ], [, ], x, ,, final, double, []
[[, 0, ], ,, y, ), ;, }, public, void, addObservations, (, final, double, [, ], [, ], x, ,]
[], ,, y, ), ;, }, public, void, addObservations, (, final, double, [, ], [, ], x, ,, final, double]
[), ;, }, public, void, addObservations, (, final, double, [, ], [, ], x, ,, final, double, [, ], y]
[), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., DIMENSIONS_MISMATCH_SIMPLE, ,, (, x, ==, null, ), ?, 0, :, x, .]
[||, (, x, ., length, !=, y, ., length, ), ), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., DIMENSIONS_MISMATCH_SIMPLE, ,]
[||, (, y, ==, null, ), ||, (, x, ., length, !=, y, ., length, ), ), {, throw, new]
[), ||, (, y, ==, null, ), ||, (, x, ., length, !=, y, ., length, ), ), {, throw]
[==, null, ), ||, (, y, ==, null, ), ||, (, x, ., length, !=, y, ., length, ), )]
[), ||, (, y, ==, null, ), ||, (, x, ., length, !=, y, ., length, ), ), {, throw]
[||, (, x, ., length, !=, y, ., length, ), ), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., DIMENSIONS_MISMATCH_SIMPLE, ,]
[), ||, (, x, ., length, !=, y, ., length, ), ), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., DIMENSIONS_MISMATCH_SIMPLE]
[==, null, ), ||, (, x, ., length, !=, y, ., length, ), ), {, throw, new, ModelSpecificationException, (, LocalizedFormats]
[), ||, (, x, ., length, !=, y, ., length, ), ), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., DIMENSIONS_MISMATCH_SIMPLE]
[), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., DIMENSIONS_MISMATCH_SIMPLE, ,, (, x, ==, null, ), ?, 0, :, x, .]
[), ), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., DIMENSIONS_MISMATCH_SIMPLE, ,, (, x, ==, null, ), ?, 0, :, x]
[!=, y, ., length, ), ), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., DIMENSIONS_MISMATCH_SIMPLE, ,, (, x, ==, null, )]
[., length, !=, y, ., length, ), ), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., DIMENSIONS_MISMATCH_SIMPLE, ,, (, x, ==]
[), ), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., DIMENSIONS_MISMATCH_SIMPLE, ,, (, x, ==, null, ), ?, 0, :, x]
[., length, ), ), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., DIMENSIONS_MISMATCH_SIMPLE, ,, (, x, ==, null, ), ?, 0]
[;, }, boolean, obsOk, =, true, ;, for, (, int, i, =, 0, ;, i, <, x, ., length, ;]
[,, (, x, ==, null, ), ?, 0, :, x, ., length, ,, (, y, ==, null, ), ?, 0]
[., DIMENSIONS_MISMATCH_SIMPLE, ,, (, x, ==, null, ), ?, 0, :, x, ., length, ,, (, y, ==, null, )]
[,, (, y, ==, null, ), ?, 0, :, y, ., length, ), ;, }, boolean, obsOk, =, true, ;]
[?, 0, :, x, ., length, ,, (, y, ==, null, ), ?, 0, :, y, ., length, ), ;]
[), ?, 0, :, x, ., length, ,, (, y, ==, null, ), ?, 0, :, y, ., length, )]
[==, null, ), ?, 0, :, x, ., length, ,, (, y, ==, null, ), ?, 0, :, y, .]
[), ?, 0, :, x, ., length, ,, (, y, ==, null, ), ?, 0, :, y, ., length, )]
[:, x, ., length, ,, (, y, ==, null, ), ?, 0, :, y, ., length, ), ;, }, boolean]
[,, (, y, ==, null, ), ?, 0, :, y, ., length, ), ;, }, boolean, obsOk, =, true, ;]
[., length, ,, (, y, ==, null, ), ?, 0, :, y, ., length, ), ;, }, boolean, obsOk, =]
[), ;, }, boolean, obsOk, =, true, ;, for, (, int, i, =, 0, ;, i, <, x, ., length]
[?, 0, :, y, ., length, ), ;, }, boolean, obsOk, =, true, ;, for, (, int, i, =, 0]
[), ?, 0, :, y, ., length, ), ;, }, boolean, obsOk, =, true, ;, for, (, int, i, =]
[==, null, ), ?, 0, :, y, ., length, ), ;, }, boolean, obsOk, =, true, ;, for, (, int]
[), ?, 0, :, y, ., length, ), ;, }, boolean, obsOk, =, true, ;, for, (, int, i, =]
[:, y, ., length, ), ;, }, boolean, obsOk, =, true, ;, for, (, int, i, =, 0, ;, i]
[), ;, }, boolean, obsOk, =, true, ;, for, (, int, i, =, 0, ;, i, <, x, ., length]
[., length, ), ;, }, boolean, obsOk, =, true, ;, for, (, int, i, =, 0, ;, i, <, x]
[;, for, (, int, i, =, 0, ;, i, <, x, ., length, ;, i, ++, ), {, if, (]
[;, i, <, x, ., length, ;, i, ++, ), {, if, (, x, [, i, ], ==, null, ||]
[;, i, ++, ), {, if, (, x, [, i, ], ==, null, ||, x, [, i, ], ., length]
[<, x, ., length, ;, i, ++, ), {, if, (, x, [, i, ], ==, null, ||, x, []
[;, i, ++, ), {, if, (, x, [, i, ], ==, null, ||, x, [, i, ], ., length]
[., length, ;, i, ++, ), {, if, (, x, [, i, ], ==, null, ||, x, [, i, ]]
[), {, if, (, x, [, i, ], ==, null, ||, x, [, i, ], ., length, ==, 0, )]
[++, ), {, if, (, x, [, i, ], ==, null, ||, x, [, i, ], ., length, ==, 0]
[), {, obsOk, =, false, ;, }, }, if, (, !, obsOk, ), {, throw, new, ModelSpecificationException, (, LocalizedFormats, .]
[||, x, [, i, ], ., length, ==, 0, ), {, obsOk, =, false, ;, }, }, if, (, !]
[==, null, ||, x, [, i, ], ., length, ==, 0, ), {, obsOk, =, false, ;, }, }, if]
[[, i, ], ==, null, ||, x, [, i, ], ., length, ==, 0, ), {, obsOk, =, false, ;]
[], ==, null, ||, x, [, i, ], ., length, ==, 0, ), {, obsOk, =, false, ;, }, }]
[||, x, [, i, ], ., length, ==, 0, ), {, obsOk, =, false, ;, }, }, if, (, !]
[), {, obsOk, =, false, ;, }, }, if, (, !, obsOk, ), {, throw, new, ModelSpecificationException, (, LocalizedFormats, .]
[==, 0, ), {, obsOk, =, false, ;, }, }, if, (, !, obsOk, ), {, throw, new, ModelSpecificationException, (]
[., length, ==, 0, ), {, obsOk, =, false, ;, }, }, if, (, !, obsOk, ), {, throw, new]
[[, i, ], ., length, ==, 0, ), {, obsOk, =, false, ;, }, }, if, (, !, obsOk, )]
[], ., length, ==, 0, ), {, obsOk, =, false, ;, }, }, if, (, !, obsOk, ), {, throw]
[), {, obsOk, =, false, ;, }, }, if, (, !, obsOk, ), {, throw, new, ModelSpecificationException, (, LocalizedFormats, .]
[=, false, ;, }, }, if, (, !, obsOk, ), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., NOT_ENOUGH_DATA_FOR_NUMBER_OF_PREDICTORS, ,, 0]
[;, }, }, if, (, !, obsOk, ), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., NOT_ENOUGH_DATA_FOR_NUMBER_OF_PREDICTORS, ,, 0, ,, 1]
[), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., NOT_ENOUGH_DATA_FOR_NUMBER_OF_PREDICTORS, ,, 0, ,, 1, ), ;, }, for, (, int, i]
[), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., NOT_ENOUGH_DATA_FOR_NUMBER_OF_PREDICTORS, ,, 0, ,, 1, ), ;, }, for, (, int, i]
[;, }, for, (, int, i, =, 0, ;, i, <, x, ., length, ;, i, ++, ), {, addData]
[,, 0, ,, 1, ), ;, }, for, (, int, i, =, 0, ;, i, <, x, ., length, ;]
[., NOT_ENOUGH_DATA_FOR_NUMBER_OF_PREDICTORS, ,, 0, ,, 1, ), ;, }, for, (, int, i, =, 0, ;, i, <, x, .]
[,, 1, ), ;, }, for, (, int, i, =, 0, ;, i, <, x, ., length, ;, i, ++]
[), ;, }, for, (, int, i, =, 0, ;, i, <, x, ., length, ;, i, ++, ), {]
[;, i, <, x, ., length, ;, i, ++, ), {, addData, (, x, [, i, ], [, 0, ]]
[;, i, ++, ), {, addData, (, x, [, i, ], [, 0, ], ,, y, [, i, ], )]
[<, x, ., length, ;, i, ++, ), {, addData, (, x, [, i, ], [, 0, ], ,, y]
[;, i, ++, ), {, addData, (, x, [, i, ], [, 0, ], ,, y, [, i, ], )]
[., length, ;, i, ++, ), {, addData, (, x, [, i, ], [, 0, ], ,, y, [, i]
[), {, addData, (, x, [, i, ], [, 0, ], ,, y, [, i, ], ), ;, }, }]
[++, ), {, addData, (, x, [, i, ], [, 0, ], ,, y, [, i, ], ), ;, }]
[;, }, }, public, void, removeData, (, double, [, ], [, ], data, ), {, for, (, int, i, =]
[,, y, [, i, ], ), ;, }, }, public, void, removeData, (, double, [, ], [, ], data, )]
[[, 0, ], ,, y, [, i, ], ), ;, }, }, public, void, removeData, (, double, [, ], []
[[, i, ], [, 0, ], ,, y, [, i, ], ), ;, }, }, public, void, removeData, (, double]
[], [, 0, ], ,, y, [, i, ], ), ;, }, }, public, void, removeData, (, double, [, ]]
[], ,, y, [, i, ], ), ;, }, }, public, void, removeData, (, double, [, ], [, ], data]
[), ;, }, }, public, void, removeData, (, double, [, ], [, ], data, ), {, for, (, int, i]
[[, i, ], ), ;, }, }, public, void, removeData, (, double, [, ], [, ], data, ), {, for]
[], ), ;, }, }, public, void, removeData, (, double, [, ], [, ], data, ), {, for, (, int]
[;, i, <, data, ., length, &&, n, >, 0, ;, i, ++, ), {, removeData, (, data, [, i]
[;, i, ++, ), {, removeData, (, data, [, i, ], [, 0, ], ,, data, [, i, ], []
[&&, n, >, 0, ;, i, ++, ), {, removeData, (, data, [, i, ], [, 0, ], ,, data]
[<, data, ., length, &&, n, >, 0, ;, i, ++, ), {, removeData, (, data, [, i, ], []
[&&, n, >, 0, ;, i, ++, ), {, removeData, (, data, [, i, ], [, 0, ], ,, data]
[., length, &&, n, >, 0, ;, i, ++, ), {, removeData, (, data, [, i, ], [, 0, ]]
[;, i, ++, ), {, removeData, (, data, [, i, ], [, 0, ], ,, data, [, i, ], []
[>, 0, ;, i, ++, ), {, removeData, (, data, [, i, ], [, 0, ], ,, data, [, i]
[;, i, ++, ), {, removeData, (, data, [, i, ], [, 0, ], ,, data, [, i, ], []
[), {, removeData, (, data, [, i, ], [, 0, ], ,, data, [, i, ], [, 1, ], )]
[++, ), {, removeData, (, data, [, i, ], [, 0, ], ,, data, [, i, ], [, 1, ]]
[;, }, }, public, void, clear, (, ), {, sumX, =, 0d, ;, sumXX, =, 0d, ;, sumY, =, 0d]
[,, data, [, i, ], [, 1, ], ), ;, }, }, public, void, clear, (, ), {, sumX, =]
[[, 0, ], ,, data, [, i, ], [, 1, ], ), ;, }, }, public, void, clear, (, )]
[[, i, ], [, 0, ], ,, data, [, i, ], [, 1, ], ), ;, }, }, public, void]
[], [, 0, ], ,, data, [, i, ], [, 1, ], ), ;, }, }, public, void, clear, (]
[], ,, data, [, i, ], [, 1, ], ), ;, }, }, public, void, clear, (, ), {, sumX]
[), ;, }, }, public, void, clear, (, ), {, sumX, =, 0d, ;, sumXX, =, 0d, ;, sumY, =]
[[, 1, ], ), ;, }, }, public, void, clear, (, ), {, sumX, =, 0d, ;, sumXX, =, 0d]
[[, i, ], [, 1, ], ), ;, }, }, public, void, clear, (, ), {, sumX, =, 0d, ;]
[], [, 1, ], ), ;, }, }, public, void, clear, (, ), {, sumX, =, 0d, ;, sumXX, =]
[], ), ;, }, }, public, void, clear, (, ), {, sumX, =, 0d, ;, sumXX, =, 0d, ;, sumY]
[=, 0d, ;, sumXX, =, 0d, ;, sumY, =, 0d, ;, sumYY, =, 0d, ;, sumXY, =, 0d, ;, n]
[;, sumXX, =, 0d, ;, sumY, =, 0d, ;, sumYY, =, 0d, ;, sumXY, =, 0d, ;, n, =, 0]
[=, 0d, ;, sumY, =, 0d, ;, sumYY, =, 0d, ;, sumXY, =, 0d, ;, n, =, 0, ;, }]
[;, sumY, =, 0d, ;, sumYY, =, 0d, ;, sumXY, =, 0d, ;, n, =, 0, ;, }, public, long]
[=, 0d, ;, sumYY, =, 0d, ;, sumXY, =, 0d, ;, n, =, 0, ;, }, public, long, getN, (]
[;, sumYY, =, 0d, ;, sumXY, =, 0d, ;, n, =, 0, ;, }, public, long, getN, (, ), {]
[=, 0d, ;, sumXY, =, 0d, ;, n, =, 0, ;, }, public, long, getN, (, ), {, return, n]
[;, sumXY, =, 0d, ;, n, =, 0, ;, }, public, long, getN, (, ), {, return, n, ;, }]
[=, 0d, ;, n, =, 0, ;, }, public, long, getN, (, ), {, return, n, ;, }, public, double]
[;, n, =, 0, ;, }, public, long, getN, (, ), {, return, n, ;, }, public, double, predict, (]
[=, 0, ;, }, public, long, getN, (, ), {, return, n, ;, }, public, double, predict, (, final, double]
[;, }, public, long, getN, (, ), {, return, n, ;, }, public, double, predict, (, final, double, x, )]
[;, }, public, double, predict, (, final, double, x, ), {, final, double, b1, =, getSlope, (, ), ;, if]
[;, if, (, hasIntercept, ), {, return, getIntercept, (, b1, ), +, b1, *, x, ;, }, return, b1, *]
[), {, return, getIntercept, (, b1, ), +, b1, *, x, ;, }, return, b1, *, x, ;, }, public]
[;, }, return, b1, *, x, ;, }, public, double, getIntercept, (, ), {, return, hasIntercept, ?, getIntercept, (, getSlope]
[+, b1, *, x, ;, }, return, b1, *, x, ;, }, public, double, getIntercept, (, ), {, return, hasIntercept]
[), +, b1, *, x, ;, }, return, b1, *, x, ;, }, public, double, getIntercept, (, ), {, return]
[;, }, return, b1, *, x, ;, }, public, double, getIntercept, (, ), {, return, hasIntercept, ?, getIntercept, (, getSlope]
[*, x, ;, }, return, b1, *, x, ;, }, public, double, getIntercept, (, ), {, return, hasIntercept, ?, getIntercept]
[;, }, return, b1, *, x, ;, }, public, double, getIntercept, (, ), {, return, hasIntercept, ?, getIntercept, (, getSlope]
[;, }, public, double, getIntercept, (, ), {, return, hasIntercept, ?, getIntercept, (, getSlope, (, ), ), :, 0.0, ;]
[*, x, ;, }, public, double, getIntercept, (, ), {, return, hasIntercept, ?, getIntercept, (, getSlope, (, ), ), :]
[;, }, public, double, getIntercept, (, ), {, return, hasIntercept, ?, getIntercept, (, getSlope, (, ), ), :, 0.0, ;]
[;, }, public, boolean, hasIntercept, (, ), {, return, hasIntercept, ;, }, public, double, getSlope, (, ), {, if, (]
[?, getIntercept, (, getSlope, (, ), ), :, 0.0, ;, }, public, boolean, hasIntercept, (, ), {, return, hasIntercept, ;]
[:, 0.0, ;, }, public, boolean, hasIntercept, (, ), {, return, hasIntercept, ;, }, public, double, getSlope, (, ), {]
[), :, 0.0, ;, }, public, boolean, hasIntercept, (, ), {, return, hasIntercept, ;, }, public, double, getSlope, (, )]
[;, }, public, boolean, hasIntercept, (, ), {, return, hasIntercept, ;, }, public, double, getSlope, (, ), {, if, (]
[;, }, public, double, getSlope, (, ), {, if, (, n, <, 2, ), {, return, Double, ., NaN, ;]
[), {, return, Double, ., NaN, ;, }, if, (, FastMath, ., abs, (, sumXX, ), <, 10, *, Double]
[<, 2, ), {, return, Double, ., NaN, ;, }, if, (, FastMath, ., abs, (, sumXX, ), <, 10]
[), {, return, Double, ., NaN, ;, }, if, (, FastMath, ., abs, (, sumXX, ), <, 10, *, Double]
[;, }, if, (, FastMath, ., abs, (, sumXX, ), <, 10, *, Double, ., MIN_VALUE, ), {, return, Double]
[., NaN, ;, }, if, (, FastMath, ., abs, (, sumXX, ), <, 10, *, Double, ., MIN_VALUE, ), {]
[), {, return, Double, ., NaN, ;, }, return, sumXY, /, sumXX, ;, }, public, double, getSumSquaredErrors, (, ), {]
[<, 10, *, Double, ., MIN_VALUE, ), {, return, Double, ., NaN, ;, }, return, sumXY, /, sumXX, ;, }]
[., abs, (, sumXX, ), <, 10, *, Double, ., MIN_VALUE, ), {, return, Double, ., NaN, ;, }, return]
[), <, 10, *, Double, ., MIN_VALUE, ), {, return, Double, ., NaN, ;, }, return, sumXY, /, sumXX, ;]
[), {, return, Double, ., NaN, ;, }, return, sumXY, /, sumXX, ;, }, public, double, getSumSquaredErrors, (, ), {]
[*, Double, ., MIN_VALUE, ), {, return, Double, ., NaN, ;, }, return, sumXY, /, sumXX, ;, }, public, double]
[), {, return, Double, ., NaN, ;, }, return, sumXY, /, sumXX, ;, }, public, double, getSumSquaredErrors, (, ), {]
[., MIN_VALUE, ), {, return, Double, ., NaN, ;, }, return, sumXY, /, sumXX, ;, }, public, double, getSumSquaredErrors, (]
[;, }, return, sumXY, /, sumXX, ;, }, public, double, getSumSquaredErrors, (, ), {, return, FastMath, ., max, (, 0d]
[., NaN, ;, }, return, sumXY, /, sumXX, ;, }, public, double, getSumSquaredErrors, (, ), {, return, FastMath, ., max]
[;, }, public, double, getSumSquaredErrors, (, ), {, return, FastMath, ., max, (, 0d, ,, sumYY, -, sumXY, *, sumXY]
[/, sumXX, ;, }, public, double, getSumSquaredErrors, (, ), {, return, FastMath, ., max, (, 0d, ,, sumYY, -, sumXY]
[;, }, public, double, getSumSquaredErrors, (, ), {, return, FastMath, ., max, (, 0d, ,, sumYY, -, sumXY, *, sumXY]
[;, }, public, double, getTotalSumSquares, (, ), {, if, (, n, <, 2, ), {, return, Double, ., NaN, ;]
[., max, (, 0d, ,, sumYY, -, sumXY, *, sumXY, /, sumXX, ), ;, }, public, double, getTotalSumSquares, (, )]
[,, sumYY, -, sumXY, *, sumXY, /, sumXX, ), ;, }, public, double, getTotalSumSquares, (, ), {, if, (, n]
[), ;, }, public, double, getTotalSumSquares, (, ), {, if, (, n, <, 2, ), {, return, Double, ., NaN]
[-, sumXY, *, sumXY, /, sumXX, ), ;, }, public, double, getTotalSumSquares, (, ), {, if, (, n, <, 2]
[), ;, }, public, double, getTotalSumSquares, (, ), {, if, (, n, <, 2, ), {, return, Double, ., NaN]
[/, sumXX, ), ;, }, public, double, getTotalSumSquares, (, ), {, if, (, n, <, 2, ), {, return, Double]
[*, sumXY, /, sumXX, ), ;, }, public, double, getTotalSumSquares, (, ), {, if, (, n, <, 2, ), {]
[/, sumXX, ), ;, }, public, double, getTotalSumSquares, (, ), {, if, (, n, <, 2, ), {, return, Double]
[), ;, }, public, double, getTotalSumSquares, (, ), {, if, (, n, <, 2, ), {, return, Double, ., NaN]
[), {, return, Double, ., NaN, ;, }, return, sumYY, ;, }, public, double, getXSumSquares, (, ), {, if, (]
[<, 2, ), {, return, Double, ., NaN, ;, }, return, sumYY, ;, }, public, double, getXSumSquares, (, ), {]
[), {, return, Double, ., NaN, ;, }, return, sumYY, ;, }, public, double, getXSumSquares, (, ), {, if, (]
[;, }, return, sumYY, ;, }, public, double, getXSumSquares, (, ), {, if, (, n, <, 2, ), {, return]
[., NaN, ;, }, return, sumYY, ;, }, public, double, getXSumSquares, (, ), {, if, (, n, <, 2, )]
[;, }, public, double, getXSumSquares, (, ), {, if, (, n, <, 2, ), {, return, Double, ., NaN, ;]
[), {, return, Double, ., NaN, ;, }, return, sumXX, ;, }, public, double, getSumOfCrossProducts, (, ), {, return, sumXY]
[<, 2, ), {, return, Double, ., NaN, ;, }, return, sumXX, ;, }, public, double, getSumOfCrossProducts, (, ), {]
[), {, return, Double, ., NaN, ;, }, return, sumXX, ;, }, public, double, getSumOfCrossProducts, (, ), {, return, sumXY]
[;, }, return, sumXX, ;, }, public, double, getSumOfCrossProducts, (, ), {, return, sumXY, ;, }, public, double, getRegressionSumSquares, (]
[., NaN, ;, }, return, sumXX, ;, }, public, double, getSumOfCrossProducts, (, ), {, return, sumXY, ;, }, public, double]
[;, }, public, double, getSumOfCrossProducts, (, ), {, return, sumXY, ;, }, public, double, getRegressionSumSquares, (, ), {, return, getRegressionSumSquares]
[;, }, public, double, getRegressionSumSquares, (, ), {, return, getRegressionSumSquares, (, getSlope, (, ), ), ;, }, public, double, getMeanSquareError]
[;, }, public, double, getMeanSquareError, (, ), {, if, (, n, <, 3, ), {, return, Double, ., NaN, ;]
[), ;, }, public, double, getMeanSquareError, (, ), {, if, (, n, <, 3, ), {, return, Double, ., NaN]
[), {, return, Double, ., NaN, ;, }, return, hasIntercept, ?, (, getSumSquaredErrors, (, ), /, (, n, -, 2]
[<, 3, ), {, return, Double, ., NaN, ;, }, return, hasIntercept, ?, (, getSumSquaredErrors, (, ), /, (, n]
[), {, return, Double, ., NaN, ;, }, return, hasIntercept, ?, (, getSumSquaredErrors, (, ), /, (, n, -, 2]
[;, }, return, hasIntercept, ?, (, getSumSquaredErrors, (, ), /, (, n, -, 2, ), ), :, (, getSumSquaredErrors, (]
[., NaN, ;, }, return, hasIntercept, ?, (, getSumSquaredErrors, (, ), /, (, n, -, 2, ), ), :, (]
[;, }, public, double, getR, (, ), {, double, b1, =, getSlope, (, ), ;, double, result, =, FastMath, .]
[?, (, getSumSquaredErrors, (, ), /, (, n, -, 2, ), ), :, (, getSumSquaredErrors, (, ), /, (, n]
[:, (, getSumSquaredErrors, (, ), /, (, n, -, 1, ), ), ;, }, public, double, getR, (, ), {]
[), :, (, getSumSquaredErrors, (, ), /, (, n, -, 1, ), ), ;, }, public, double, getR, (, )]
[/, (, n, -, 2, ), ), :, (, getSumSquaredErrors, (, ), /, (, n, -, 1, ), ), ;]
[), :, (, getSumSquaredErrors, (, ), /, (, n, -, 1, ), ), ;, }, public, double, getR, (, )]
[), ), :, (, getSumSquaredErrors, (, ), /, (, n, -, 1, ), ), ;, }, public, double, getR, (]
[-, 2, ), ), :, (, getSumSquaredErrors, (, ), /, (, n, -, 1, ), ), ;, }, public, double]
[), ), :, (, getSumSquaredErrors, (, ), /, (, n, -, 1, ), ), ;, }, public, double, getR, (]
[;, }, public, double, getR, (, ), {, double, b1, =, getSlope, (, ), ;, double, result, =, FastMath, .]
[), ;, }, public, double, getR, (, ), {, double, b1, =, getSlope, (, ), ;, double, result, =, FastMath]
[/, (, n, -, 1, ), ), ;, }, public, double, getR, (, ), {, double, b1, =, getSlope, (]
[), ;, }, public, double, getR, (, ), {, double, b1, =, getSlope, (, ), ;, double, result, =, FastMath]
[), ), ;, }, public, double, getR, (, ), {, double, b1, =, getSlope, (, ), ;, double, result, =]
[-, 1, ), ), ;, }, public, double, getR, (, ), {, double, b1, =, getSlope, (, ), ;, double]
[), ), ;, }, public, double, getR, (, ), {, double, b1, =, getSlope, (, ), ;, double, result, =]
[;, double, result, =, FastMath, ., sqrt, (, getRSquare, (, ), ), ;, if, (, b1, <, 0, ), {]
[;, if, (, b1, <, 0, ), {, result, =, -, result, ;, }, return, result, ;, }, public, double]
[., sqrt, (, getRSquare, (, ), ), ;, if, (, b1, <, 0, ), {, result, =, -, result, ;]
[), ;, if, (, b1, <, 0, ), {, result, =, -, result, ;, }, return, result, ;, }, public]
[), {, result, =, -, result, ;, }, return, result, ;, }, public, double, getRSquare, (, ), {, double, ssto]
[<, 0, ), {, result, =, -, result, ;, }, return, result, ;, }, public, double, getRSquare, (, ), {]
[), {, result, =, -, result, ;, }, return, result, ;, }, public, double, getRSquare, (, ), {, double, ssto]
[=, -, result, ;, }, return, result, ;, }, public, double, getRSquare, (, ), {, double, ssto, =, getTotalSumSquares, (]
[;, }, return, result, ;, }, public, double, getRSquare, (, ), {, double, ssto, =, getTotalSumSquares, (, ), ;, return]
[;, }, return, result, ;, }, public, double, getRSquare, (, ), {, double, ssto, =, getTotalSumSquares, (, ), ;, return]
[;, }, public, double, getRSquare, (, ), {, double, ssto, =, getTotalSumSquares, (, ), ;, return, (, ssto, -, getSumSquaredErrors]
[;, return, (, ssto, -, getSumSquaredErrors, (, ), ), /, ssto, ;, }, public, double, getInterceptStdErr, (, ), {, if]
[;, }, public, double, getInterceptStdErr, (, ), {, if, (, !, hasIntercept, ), {, return, Double, ., NaN, ;, }]
[/, ssto, ;, }, public, double, getInterceptStdErr, (, ), {, if, (, !, hasIntercept, ), {, return, Double, ., NaN]
[), /, ssto, ;, }, public, double, getInterceptStdErr, (, ), {, if, (, !, hasIntercept, ), {, return, Double, .]
[-, getSumSquaredErrors, (, ), ), /, ssto, ;, }, public, double, getInterceptStdErr, (, ), {, if, (, !, hasIntercept, )]
[), /, ssto, ;, }, public, double, getInterceptStdErr, (, ), {, if, (, !, hasIntercept, ), {, return, Double, .]
[;, }, public, double, getInterceptStdErr, (, ), {, if, (, !, hasIntercept, ), {, return, Double, ., NaN, ;, }]
[), {, return, Double, ., NaN, ;, }, return, FastMath, ., sqrt, (, getMeanSquareError, (, ), *, (, (, 1d]
[), {, return, Double, ., NaN, ;, }, return, FastMath, ., sqrt, (, getMeanSquareError, (, ), *, (, (, 1d]
[;, }, return, FastMath, ., sqrt, (, getMeanSquareError, (, ), *, (, (, 1d, /, n, ), +, (, xbar]
[., NaN, ;, }, return, FastMath, ., sqrt, (, getMeanSquareError, (, ), *, (, (, 1d, /, n, ), +]
[;, }, public, double, getSlopeStdErr, (, ), {, return, FastMath, ., sqrt, (, getMeanSquareError, (, ), /, sumXX, ), ;]
[., sqrt, (, getMeanSquareError, (, ), *, (, (, 1d, /, n, ), +, (, xbar, *, xbar, ), /]
[), ;, }, public, double, getSlopeStdErr, (, ), {, return, FastMath, ., sqrt, (, getMeanSquareError, (, ), /, sumXX, )]
[*, (, (, 1d, /, n, ), +, (, xbar, *, xbar, ), /, sumXX, ), ), ;, }, public]
[), ;, }, public, double, getSlopeStdErr, (, ), {, return, FastMath, ., sqrt, (, getMeanSquareError, (, ), /, sumXX, )]
[), ), ;, }, public, double, getSlopeStdErr, (, ), {, return, FastMath, ., sqrt, (, getMeanSquareError, (, ), /, sumXX]
[+, (, xbar, *, xbar, ), /, sumXX, ), ), ;, }, public, double, getSlopeStdErr, (, ), {, return, FastMath]
[), +, (, xbar, *, xbar, ), /, sumXX, ), ), ;, }, public, double, getSlopeStdErr, (, ), {, return]
[/, n, ), +, (, xbar, *, xbar, ), /, sumXX, ), ), ;, }, public, double, getSlopeStdErr, (, )]
[), +, (, xbar, *, xbar, ), /, sumXX, ), ), ;, }, public, double, getSlopeStdErr, (, ), {, return]
[), ), ;, }, public, double, getSlopeStdErr, (, ), {, return, FastMath, ., sqrt, (, getMeanSquareError, (, ), /, sumXX]
[/, sumXX, ), ), ;, }, public, double, getSlopeStdErr, (, ), {, return, FastMath, ., sqrt, (, getMeanSquareError, (, )]
[), /, sumXX, ), ), ;, }, public, double, getSlopeStdErr, (, ), {, return, FastMath, ., sqrt, (, getMeanSquareError, (]
[*, xbar, ), /, sumXX, ), ), ;, }, public, double, getSlopeStdErr, (, ), {, return, FastMath, ., sqrt, (]
[), /, sumXX, ), ), ;, }, public, double, getSlopeStdErr, (, ), {, return, FastMath, ., sqrt, (, getMeanSquareError, (]
[), ), ;, }, public, double, getSlopeStdErr, (, ), {, return, FastMath, ., sqrt, (, getMeanSquareError, (, ), /, sumXX]
[;, }, public, double, getSlopeConfidenceInterval, (, ), throws, OutOfRangeException, {, return, getSlopeConfidenceInterval, (, 0.05d, ), ;, }, public, double, getSlopeConfidenceInterval]
[., sqrt, (, getMeanSquareError, (, ), /, sumXX, ), ;, }, public, double, getSlopeConfidenceInterval, (, ), throws, OutOfRangeException, {, return]
[), ;, }, public, double, getSlopeConfidenceInterval, (, ), throws, OutOfRangeException, {, return, getSlopeConfidenceInterval, (, 0.05d, ), ;, }, public, double]
[/, sumXX, ), ;, }, public, double, getSlopeConfidenceInterval, (, ), throws, OutOfRangeException, {, return, getSlopeConfidenceInterval, (, 0.05d, ), ;, }]
[), ;, }, public, double, getSlopeConfidenceInterval, (, ), throws, OutOfRangeException, {, return, getSlopeConfidenceInterval, (, 0.05d, ), ;, }, public, double]
[;, }, public, double, getSlopeConfidenceInterval, (, final, double, alpha, ), throws, OutOfRangeException, {, if, (, n, <, 3, ), {]
[), ;, }, public, double, getSlopeConfidenceInterval, (, final, double, alpha, ), throws, OutOfRangeException, {, if, (, n, <, 3, )]
[), {, return, Double, ., NaN, ;, }, if, (, alpha, >=, 1, ||, alpha, <=, 0, ), {, throw]
[<, 3, ), {, return, Double, ., NaN, ;, }, if, (, alpha, >=, 1, ||, alpha, <=, 0, )]
[), {, return, Double, ., NaN, ;, }, if, (, alpha, >=, 1, ||, alpha, <=, 0, ), {, throw]
[;, }, if, (, alpha, >=, 1, ||, alpha, <=, 0, ), {, throw, new, OutOfRangeException, (, LocalizedFormats, ., SIGNIFICANCE_LEVEL]
[., NaN, ;, }, if, (, alpha, >=, 1, ||, alpha, <=, 0, ), {, throw, new, OutOfRangeException, (, LocalizedFormats]
[), {, throw, new, OutOfRangeException, (, LocalizedFormats, ., SIGNIFICANCE_LEVEL, ,, alpha, ,, 0, ,, 1, ), ;, }, TDistribution, distribution]
[||, alpha, <=, 0, ), {, throw, new, OutOfRangeException, (, LocalizedFormats, ., SIGNIFICANCE_LEVEL, ,, alpha, ,, 0, ,, 1, )]
[>=, 1, ||, alpha, <=, 0, ), {, throw, new, OutOfRangeException, (, LocalizedFormats, ., SIGNIFICANCE_LEVEL, ,, alpha, ,, 0, ,]
[||, alpha, <=, 0, ), {, throw, new, OutOfRangeException, (, LocalizedFormats, ., SIGNIFICANCE_LEVEL, ,, alpha, ,, 0, ,, 1, )]
[), {, throw, new, OutOfRangeException, (, LocalizedFormats, ., SIGNIFICANCE_LEVEL, ,, alpha, ,, 0, ,, 1, ), ;, }, TDistribution, distribution]
[<=, 0, ), {, throw, new, OutOfRangeException, (, LocalizedFormats, ., SIGNIFICANCE_LEVEL, ,, alpha, ,, 0, ,, 1, ), ;, }]
[), {, throw, new, OutOfRangeException, (, LocalizedFormats, ., SIGNIFICANCE_LEVEL, ,, alpha, ,, 0, ,, 1, ), ;, }, TDistribution, distribution]
[;, }, TDistribution, distribution, =, new, TDistribution, (, n, -, 2, ), ;, return, getSlopeStdErr, (, ), *, distribution, .]
[,, alpha, ,, 0, ,, 1, ), ;, }, TDistribution, distribution, =, new, TDistribution, (, n, -, 2, ), ;]
[., SIGNIFICANCE_LEVEL, ,, alpha, ,, 0, ,, 1, ), ;, }, TDistribution, distribution, =, new, TDistribution, (, n, -, 2]
[,, 0, ,, 1, ), ;, }, TDistribution, distribution, =, new, TDistribution, (, n, -, 2, ), ;, return, getSlopeStdErr]
[,, 1, ), ;, }, TDistribution, distribution, =, new, TDistribution, (, n, -, 2, ), ;, return, getSlopeStdErr, (, )]
[), ;, }, TDistribution, distribution, =, new, TDistribution, (, n, -, 2, ), ;, return, getSlopeStdErr, (, ), *, distribution]
[;, return, getSlopeStdErr, (, ), *, distribution, ., inverseCumulativeProbability, (, 1d, -, alpha, /, 2d, ), ;, }, public, double]
[), ;, return, getSlopeStdErr, (, ), *, distribution, ., inverseCumulativeProbability, (, 1d, -, alpha, /, 2d, ), ;, }, public]
[-, 2, ), ;, return, getSlopeStdErr, (, ), *, distribution, ., inverseCumulativeProbability, (, 1d, -, alpha, /, 2d, ), ;]
[), ;, return, getSlopeStdErr, (, ), *, distribution, ., inverseCumulativeProbability, (, 1d, -, alpha, /, 2d, ), ;, }, public]
[;, }, public, double, getSignificance, (, ), {, if, (, n, <, 3, ), {, return, Double, ., NaN, ;]
[*, distribution, ., inverseCumulativeProbability, (, 1d, -, alpha, /, 2d, ), ;, }, public, double, getSignificance, (, ), {, if]
[;, }, public, double, getSignificance, (, ), {, if, (, n, <, 3, ), {, return, Double, ., NaN, ;]
[., inverseCumulativeProbability, (, 1d, -, alpha, /, 2d, ), ;, }, public, double, getSignificance, (, ), {, if, (, n]
[), ;, }, public, double, getSignificance, (, ), {, if, (, n, <, 3, ), {, return, Double, ., NaN]
[-, alpha, /, 2d, ), ;, }, public, double, getSignificance, (, ), {, if, (, n, <, 3, ), {]
[), ;, }, public, double, getSignificance, (, ), {, if, (, n, <, 3, ), {, return, Double, ., NaN]
[/, 2d, ), ;, }, public, double, getSignificance, (, ), {, if, (, n, <, 3, ), {, return, Double]
[), ;, }, public, double, getSignificance, (, ), {, if, (, n, <, 3, ), {, return, Double, ., NaN]
[), {, return, Double, ., NaN, ;, }, TDistribution, distribution, =, new, TDistribution, (, n, -, 2, ), ;, return]
[<, 3, ), {, return, Double, ., NaN, ;, }, TDistribution, distribution, =, new, TDistribution, (, n, -, 2, )]
[), {, return, Double, ., NaN, ;, }, TDistribution, distribution, =, new, TDistribution, (, n, -, 2, ), ;, return]
[;, }, TDistribution, distribution, =, new, TDistribution, (, n, -, 2, ), ;, return, 2d, *, (, 1.0, -, distribution]
[., NaN, ;, }, TDistribution, distribution, =, new, TDistribution, (, n, -, 2, ), ;, return, 2d, *, (, 1.0]
[;, return, 2d, *, (, 1.0, -, distribution, ., cumulativeProbability, (, FastMath, ., abs, (, getSlope, (, ), ), /]
[), ;, return, 2d, *, (, 1.0, -, distribution, ., cumulativeProbability, (, FastMath, ., abs, (, getSlope, (, ), )]
[-, 2, ), ;, return, 2d, *, (, 1.0, -, distribution, ., cumulativeProbability, (, FastMath, ., abs, (, getSlope, (]
[), ;, return, 2d, *, (, 1.0, -, distribution, ., cumulativeProbability, (, FastMath, ., abs, (, getSlope, (, ), )]
[;, }, private, double, getIntercept, (, final, double, slope, ), {, if, (, hasIntercept, ), {, return, (, sumY, -]
[*, (, 1.0, -, distribution, ., cumulativeProbability, (, FastMath, ., abs, (, getSlope, (, ), ), /, getSlopeStdErr, (, )]
[;, }, private, double, getIntercept, (, final, double, slope, ), {, if, (, hasIntercept, ), {, return, (, sumY, -]
[), ;, }, private, double, getIntercept, (, final, double, slope, ), {, if, (, hasIntercept, ), {, return, (, sumY]
[-, distribution, ., cumulativeProbability, (, FastMath, ., abs, (, getSlope, (, ), ), /, getSlopeStdErr, (, ), ), ), ;]
[), ;, }, private, double, getIntercept, (, final, double, slope, ), {, if, (, hasIntercept, ), {, return, (, sumY]
[., cumulativeProbability, (, FastMath, ., abs, (, getSlope, (, ), ), /, getSlopeStdErr, (, ), ), ), ;, }, private]
[), ), ;, }, private, double, getIntercept, (, final, double, slope, ), {, if, (, hasIntercept, ), {, return, (]
[/, getSlopeStdErr, (, ), ), ), ;, }, private, double, getIntercept, (, final, double, slope, ), {, if, (, hasIntercept]
[., abs, (, getSlope, (, ), ), /, getSlopeStdErr, (, ), ), ), ;, }, private, double, getIntercept, (, final]
[), /, getSlopeStdErr, (, ), ), ), ;, }, private, double, getIntercept, (, final, double, slope, ), {, if, (]
[), ), ;, }, private, double, getIntercept, (, final, double, slope, ), {, if, (, hasIntercept, ), {, return, (]
[), {, return, (, sumY, -, slope, *, sumX, ), /, n, ;, }, return, 0.0, ;, }, private, double]
[;, }, return, 0.0, ;, }, private, double, getRegressionSumSquares, (, final, double, slope, ), {, return, slope, *, slope, *]
[/, n, ;, }, return, 0.0, ;, }, private, double, getRegressionSumSquares, (, final, double, slope, ), {, return, slope, *]
[), /, n, ;, }, return, 0.0, ;, }, private, double, getRegressionSumSquares, (, final, double, slope, ), {, return, slope]
[-, slope, *, sumX, ), /, n, ;, }, return, 0.0, ;, }, private, double, getRegressionSumSquares, (, final, double, slope]
[), /, n, ;, }, return, 0.0, ;, }, private, double, getRegressionSumSquares, (, final, double, slope, ), {, return, slope]
[*, sumX, ), /, n, ;, }, return, 0.0, ;, }, private, double, getRegressionSumSquares, (, final, double, slope, ), {]
[), /, n, ;, }, return, 0.0, ;, }, private, double, getRegressionSumSquares, (, final, double, slope, ), {, return, slope]
[;, }, return, 0.0, ;, }, private, double, getRegressionSumSquares, (, final, double, slope, ), {, return, slope, *, slope, *]
[;, }, private, double, getRegressionSumSquares, (, final, double, slope, ), {, return, slope, *, slope, *, sumXX, ;, }, public]
[;, }, public, RegressionResults, regress, (, ), throws, ModelSpecificationException, ,, NoDataException, {, if, (, hasIntercept, ), {, if, (, n]
[*, sumXX, ;, }, public, RegressionResults, regress, (, ), throws, ModelSpecificationException, ,, NoDataException, {, if, (, hasIntercept, ), {, if]
[*, slope, *, sumXX, ;, }, public, RegressionResults, regress, (, ), throws, ModelSpecificationException, ,, NoDataException, {, if, (, hasIntercept, )]
[*, sumXX, ;, }, public, RegressionResults, regress, (, ), throws, ModelSpecificationException, ,, NoDataException, {, if, (, hasIntercept, ), {, if]
[;, }, public, RegressionResults, regress, (, ), throws, ModelSpecificationException, ,, NoDataException, {, if, (, hasIntercept, ), {, if, (, n]
[), {, if, (, n, <, 3, ), {, throw, new, NoDataException, (, LocalizedFormats, ., NOT_ENOUGH_DATA_REGRESSION, ), ;, }, if]
[), {, throw, new, NoDataException, (, LocalizedFormats, ., NOT_ENOUGH_DATA_REGRESSION, ), ;, }, if, (, FastMath, ., abs, (, sumXX, )]
[<, 3, ), {, throw, new, NoDataException, (, LocalizedFormats, ., NOT_ENOUGH_DATA_REGRESSION, ), ;, }, if, (, FastMath, ., abs, (]
[), {, throw, new, NoDataException, (, LocalizedFormats, ., NOT_ENOUGH_DATA_REGRESSION, ), ;, }, if, (, FastMath, ., abs, (, sumXX, )]
[;, }, if, (, FastMath, ., abs, (, sumXX, ), >, Precision, ., SAFE_MIN, ), {, final, double, [, ]]
[), ;, }, if, (, FastMath, ., abs, (, sumXX, ), >, Precision, ., SAFE_MIN, ), {, final, double, []
[., NOT_ENOUGH_DATA_REGRESSION, ), ;, }, if, (, FastMath, ., abs, (, sumXX, ), >, Precision, ., SAFE_MIN, ), {, final]
[), {, final, double, [, ], params, =, new, double, [, ], {, getIntercept, (, ), ,, getSlope, (, )]
[>, Precision, ., SAFE_MIN, ), {, final, double, [, ], params, =, new, double, [, ], {, getIntercept, (, )]
[., abs, (, sumXX, ), >, Precision, ., SAFE_MIN, ), {, final, double, [, ], params, =, new, double, []
[), >, Precision, ., SAFE_MIN, ), {, final, double, [, ], params, =, new, double, [, ], {, getIntercept, (]
[), {, final, double, [, ], params, =, new, double, [, ], {, getIntercept, (, ), ,, getSlope, (, )]
[., SAFE_MIN, ), {, final, double, [, ], params, =, new, double, [, ], {, getIntercept, (, ), ,, getSlope]
[;, final, double, mse, =, getMeanSquareError, (, ), ;, final, double, _syy, =, sumYY, +, sumY, *, sumY, /, n]
[;, final, double, mse, =, getMeanSquareError, (, ), ;, final, double, _syy, =, sumYY, +, sumY, *, sumY, /, n]
[,, getSlope, (, ), }, ;, final, double, mse, =, getMeanSquareError, (, ), ;, final, double, _syy, =, sumYY, +]
[}, ;, final, double, mse, =, getMeanSquareError, (, ), ;, final, double, _syy, =, sumYY, +, sumY, *, sumY, /]
[;, final, double, _syy, =, sumYY, +, sumY, *, sumY, /, n, ;, final, double, [, ], vcv, =, new]
[;, final, double, [, ], vcv, =, new, double, [, ], {, mse, *, (, xbar, *, xbar, /, sumXX]
[+, sumY, *, sumY, /, n, ;, final, double, [, ], vcv, =, new, double, [, ], {, mse, *]
[;, final, double, [, ], vcv, =, new, double, [, ], {, mse, *, (, xbar, *, xbar, /, sumXX]
[/, n, ;, final, double, [, ], vcv, =, new, double, [, ], {, mse, *, (, xbar, *, xbar]
[*, sumY, /, n, ;, final, double, [, ], vcv, =, new, double, [, ], {, mse, *, (, xbar]
[/, n, ;, final, double, [, ], vcv, =, new, double, [, ], {, mse, *, (, xbar, *, xbar]
[;, final, double, [, ], vcv, =, new, double, [, ], {, mse, *, (, xbar, *, xbar, /, sumXX]
[;, return, new, RegressionResults, (, params, ,, new, double, [, ], [, ], {, vcv, }, ,, true, ,, n]
[;, return, new, RegressionResults, (, params, ,, new, double, [, ], [, ], {, vcv, }, ,, true, ,, n]
[,, -, xbar, *, mse, /, sumXX, ,, mse, /, sumXX, }, ;, return, new, RegressionResults, (, params, ,, new]
[*, (, xbar, *, xbar, /, sumXX, +, 1.0, /, n, ), ,, -, xbar, *, mse, /, sumXX, ,]
[,, -, xbar, *, mse, /, sumXX, ,, mse, /, sumXX, }, ;, return, new, RegressionResults, (, params, ,, new]
[), ,, -, xbar, *, mse, /, sumXX, ,, mse, /, sumXX, }, ;, return, new, RegressionResults, (, params, ,]
[+, 1.0, /, n, ), ,, -, xbar, *, mse, /, sumXX, ,, mse, /, sumXX, }, ;, return, new]
[/, sumXX, +, 1.0, /, n, ), ,, -, xbar, *, mse, /, sumXX, ,, mse, /, sumXX, }, ;]
[*, xbar, /, sumXX, +, 1.0, /, n, ), ,, -, xbar, *, mse, /, sumXX, ,, mse, /, sumXX]
[/, sumXX, +, 1.0, /, n, ), ,, -, xbar, *, mse, /, sumXX, ,, mse, /, sumXX, }, ;]
[+, 1.0, /, n, ), ,, -, xbar, *, mse, /, sumXX, ,, mse, /, sumXX, }, ;, return, new]
[), ,, -, xbar, *, mse, /, sumXX, ,, mse, /, sumXX, }, ;, return, new, RegressionResults, (, params, ,]
[/, n, ), ,, -, xbar, *, mse, /, sumXX, ,, mse, /, sumXX, }, ;, return, new, RegressionResults, (]
[), ,, -, xbar, *, mse, /, sumXX, ,, mse, /, sumXX, }, ;, return, new, RegressionResults, (, params, ,]
[,, mse, /, sumXX, }, ;, return, new, RegressionResults, (, params, ,, new, double, [, ], [, ], {, vcv]
[/, sumXX, ,, mse, /, sumXX, }, ;, return, new, RegressionResults, (, params, ,, new, double, [, ], [, ]]
[*, mse, /, sumXX, ,, mse, /, sumXX, }, ;, return, new, RegressionResults, (, params, ,, new, double, [, ]]
[*, mse, /, sumXX, ,, mse, /, sumXX, }, ;, return, new, RegressionResults, (, params, ,, new, double, [, ]]
[/, sumXX, ,, mse, /, sumXX, }, ;, return, new, RegressionResults, (, params, ,, new, double, [, ], [, ]]
[,, mse, /, sumXX, }, ;, return, new, RegressionResults, (, params, ,, new, double, [, ], [, ], {, vcv]
[}, ;, return, new, RegressionResults, (, params, ,, new, double, [, ], [, ], {, vcv, }, ,, true, ,]
[/, sumXX, }, ;, return, new, RegressionResults, (, params, ,, new, double, [, ], [, ], {, vcv, }, ,]
[}, ;, return, new, RegressionResults, (, params, ,, new, double, [, ], [, ], {, vcv, }, ,, true, ,]
[;, }, else, {, final, double, [, ], params, =, new, double, [, ], {, sumY, /, n, ,, Double]
[,, new, double, [, ], [, ], {, vcv, }, ,, true, ,, n, ,, 2, ,, sumY, ,, _syy]
[,, true, ,, n, ,, 2, ,, sumY, ,, _syy, ,, getSumSquaredErrors, (, ), ,, true, ,, false, ), ;]
[,, true, ,, n, ,, 2, ,, sumY, ,, _syy, ,, getSumSquaredErrors, (, ), ,, true, ,, false, ), ;]
[}, ,, true, ,, n, ,, 2, ,, sumY, ,, _syy, ,, getSumSquaredErrors, (, ), ,, true, ,, false, )]
[,, n, ,, 2, ,, sumY, ,, _syy, ,, getSumSquaredErrors, (, ), ,, true, ,, false, ), ;, }, else]
[,, 2, ,, sumY, ,, _syy, ,, getSumSquaredErrors, (, ), ,, true, ,, false, ), ;, }, else, {, final]
[,, sumY, ,, _syy, ,, getSumSquaredErrors, (, ), ,, true, ,, false, ), ;, }, else, {, final, double, []
[,, _syy, ,, getSumSquaredErrors, (, ), ,, true, ,, false, ), ;, }, else, {, final, double, [, ], params]
[,, getSumSquaredErrors, (, ), ,, true, ,, false, ), ;, }, else, {, final, double, [, ], params, =, new]
[,, true, ,, false, ), ;, }, else, {, final, double, [, ], params, =, new, double, [, ], {]
[,, false, ), ;, }, else, {, final, double, [, ], params, =, new, double, [, ], {, sumY, /]
[), ;, }, else, {, final, double, [, ], params, =, new, double, [, ], {, sumY, /, n, ,]
[;, final, double, [, ], vcv, =, new, double, [, ], {, ybar, /, (, n, -, 1.0, ), ,]
[;, final, double, [, ], vcv, =, new, double, [, ], {, ybar, /, (, n, -, 1.0, ), ,]
[,, Double, ., NaN, }, ;, final, double, [, ], vcv, =, new, double, [, ], {, ybar, /, (]
[/, n, ,, Double, ., NaN, }, ;, final, double, [, ], vcv, =, new, double, [, ], {, ybar]
[,, Double, ., NaN, }, ;, final, double, [, ], vcv, =, new, double, [, ], {, ybar, /, (]
[}, ;, final, double, [, ], vcv, =, new, double, [, ], {, ybar, /, (, n, -, 1.0, )]
[., NaN, }, ;, final, double, [, ], vcv, =, new, double, [, ], {, ybar, /, (, n, -]
[;, return, new, RegressionResults, (, params, ,, new, double, [, ], [, ], {, vcv, }, ,, true, ,, n]
[;, return, new, RegressionResults, (, params, ,, new, double, [, ], [, ], {, vcv, }, ,, true, ,, n]
[,, Double, ., NaN, ,, Double, ., NaN, }, ;, return, new, RegressionResults, (, params, ,, new, double, [, ]]
[/, (, n, -, 1.0, ), ,, Double, ., NaN, ,, Double, ., NaN, }, ;, return, new, RegressionResults, (]
[,, Double, ., NaN, ,, Double, ., NaN, }, ;, return, new, RegressionResults, (, params, ,, new, double, [, ]]
[), ,, Double, ., NaN, ,, Double, ., NaN, }, ;, return, new, RegressionResults, (, params, ,, new, double, []
[-, 1.0, ), ,, Double, ., NaN, ,, Double, ., NaN, }, ;, return, new, RegressionResults, (, params, ,, new]
[), ,, Double, ., NaN, ,, Double, ., NaN, }, ;, return, new, RegressionResults, (, params, ,, new, double, []
[,, Double, ., NaN, }, ;, return, new, RegressionResults, (, params, ,, new, double, [, ], [, ], {, vcv]
[., NaN, ,, Double, ., NaN, }, ;, return, new, RegressionResults, (, params, ,, new, double, [, ], [, ]]
[}, ;, return, new, RegressionResults, (, params, ,, new, double, [, ], [, ], {, vcv, }, ,, true, ,]
[., NaN, }, ;, return, new, RegressionResults, (, params, ,, new, double, [, ], [, ], {, vcv, }, ,]
[;, }, }, else, {, if, (, n, <, 2, ), {, throw, new, NoDataException, (, LocalizedFormats, ., NOT_ENOUGH_DATA_REGRESSION, )]
[,, new, double, [, ], [, ], {, vcv, }, ,, true, ,, n, ,, 1, ,, sumY, ,, sumYY]
[,, true, ,, n, ,, 1, ,, sumY, ,, sumYY, ,, getSumSquaredErrors, (, ), ,, true, ,, false, ), ;]
[,, true, ,, n, ,, 1, ,, sumY, ,, sumYY, ,, getSumSquaredErrors, (, ), ,, true, ,, false, ), ;]
[}, ,, true, ,, n, ,, 1, ,, sumY, ,, sumYY, ,, getSumSquaredErrors, (, ), ,, true, ,, false, )]
[,, n, ,, 1, ,, sumY, ,, sumYY, ,, getSumSquaredErrors, (, ), ,, true, ,, false, ), ;, }, }]
[,, 1, ,, sumY, ,, sumYY, ,, getSumSquaredErrors, (, ), ,, true, ,, false, ), ;, }, }, else, {]
[,, sumY, ,, sumYY, ,, getSumSquaredErrors, (, ), ,, true, ,, false, ), ;, }, }, else, {, if, (]
[,, sumYY, ,, getSumSquaredErrors, (, ), ,, true, ,, false, ), ;, }, }, else, {, if, (, n, <]
[,, getSumSquaredErrors, (, ), ,, true, ,, false, ), ;, }, }, else, {, if, (, n, <, 2, )]
[,, true, ,, false, ), ;, }, }, else, {, if, (, n, <, 2, ), {, throw, new, NoDataException]
[,, false, ), ;, }, }, else, {, if, (, n, <, 2, ), {, throw, new, NoDataException, (, LocalizedFormats]
[), ;, }, }, else, {, if, (, n, <, 2, ), {, throw, new, NoDataException, (, LocalizedFormats, ., NOT_ENOUGH_DATA_REGRESSION]
[), {, throw, new, NoDataException, (, LocalizedFormats, ., NOT_ENOUGH_DATA_REGRESSION, ), ;, }, if, (, !, Double, ., isNaN, (, sumXX]
[<, 2, ), {, throw, new, NoDataException, (, LocalizedFormats, ., NOT_ENOUGH_DATA_REGRESSION, ), ;, }, if, (, !, Double, ., isNaN]
[), {, throw, new, NoDataException, (, LocalizedFormats, ., NOT_ENOUGH_DATA_REGRESSION, ), ;, }, if, (, !, Double, ., isNaN, (, sumXX]
[;, }, if, (, !, Double, ., isNaN, (, sumXX, ), ), {, final, double, [, ], vcv, =, new]
[), ;, }, if, (, !, Double, ., isNaN, (, sumXX, ), ), {, final, double, [, ], vcv, =]
[., NOT_ENOUGH_DATA_REGRESSION, ), ;, }, if, (, !, Double, ., isNaN, (, sumXX, ), ), {, final, double, [, ]]
[), {, final, double, [, ], vcv, =, new, double, [, ], {, getMeanSquareError, (, ), /, sumXX, }, ;]
[), {, final, double, [, ], vcv, =, new, double, [, ], {, getMeanSquareError, (, ), /, sumXX, }, ;]
[., isNaN, (, sumXX, ), ), {, final, double, [, ], vcv, =, new, double, [, ], {, getMeanSquareError, (]
[), ), {, final, double, [, ], vcv, =, new, double, [, ], {, getMeanSquareError, (, ), /, sumXX, }]
[;, final, double, [, ], params, =, new, double, [, ], {, sumXY, /, sumXX, }, ;, return, new, RegressionResults]
[;, final, double, [, ], params, =, new, double, [, ], {, sumXY, /, sumXX, }, ;, return, new, RegressionResults]
[}, ;, final, double, [, ], params, =, new, double, [, ], {, sumXY, /, sumXX, }, ;, return, new]
[/, sumXX, }, ;, final, double, [, ], params, =, new, double, [, ], {, sumXY, /, sumXX, }, ;]
[}, ;, final, double, [, ], params, =, new, double, [, ], {, sumXY, /, sumXX, }, ;, return, new]
[;, return, new, RegressionResults, (, params, ,, new, double, [, ], [, ], {, vcv, }, ,, true, ,, n]
[;, return, new, RegressionResults, (, params, ,, new, double, [, ], [, ], {, vcv, }, ,, true, ,, n]
[}, ;, return, new, RegressionResults, (, params, ,, new, double, [, ], [, ], {, vcv, }, ,, true, ,]
[/, sumXX, }, ;, return, new, RegressionResults, (, params, ,, new, double, [, ], [, ], {, vcv, }, ,]
[}, ;, return, new, RegressionResults, (, params, ,, new, double, [, ], [, ], {, vcv, }, ,, true, ,]
[;, }, else, {, final, double, [, ], vcv, =, new, double, [, ], {, Double, ., NaN, }, ;]
[,, new, double, [, ], [, ], {, vcv, }, ,, true, ,, n, ,, 1, ,, sumY, ,, sumYY]
[,, true, ,, n, ,, 1, ,, sumY, ,, sumYY, ,, getSumSquaredErrors, (, ), ,, false, ,, false, ), ;]
[,, true, ,, n, ,, 1, ,, sumY, ,, sumYY, ,, getSumSquaredErrors, (, ), ,, false, ,, false, ), ;]
[}, ,, true, ,, n, ,, 1, ,, sumY, ,, sumYY, ,, getSumSquaredErrors, (, ), ,, false, ,, false, )]
[,, n, ,, 1, ,, sumY, ,, sumYY, ,, getSumSquaredErrors, (, ), ,, false, ,, false, ), ;, }, else]
[,, 1, ,, sumY, ,, sumYY, ,, getSumSquaredErrors, (, ), ,, false, ,, false, ), ;, }, else, {, final]
[,, sumY, ,, sumYY, ,, getSumSquaredErrors, (, ), ,, false, ,, false, ), ;, }, else, {, final, double, []
[,, sumYY, ,, getSumSquaredErrors, (, ), ,, false, ,, false, ), ;, }, else, {, final, double, [, ], vcv]
[,, getSumSquaredErrors, (, ), ,, false, ,, false, ), ;, }, else, {, final, double, [, ], vcv, =, new]
[,, false, ,, false, ), ;, }, else, {, final, double, [, ], vcv, =, new, double, [, ], {]
[,, false, ), ;, }, else, {, final, double, [, ], vcv, =, new, double, [, ], {, Double, .]
[), ;, }, else, {, final, double, [, ], vcv, =, new, double, [, ], {, Double, ., NaN, }]
[;, final, double, [, ], params, =, new, double, [, ], {, Double, ., NaN, }, ;, return, new, RegressionResults]
[;, final, double, [, ], params, =, new, double, [, ], {, Double, ., NaN, }, ;, return, new, RegressionResults]
[}, ;, final, double, [, ], params, =, new, double, [, ], {, Double, ., NaN, }, ;, return, new]
[., NaN, }, ;, final, double, [, ], params, =, new, double, [, ], {, Double, ., NaN, }, ;]
[;, return, new, RegressionResults, (, params, ,, new, double, [, ], [, ], {, vcv, }, ,, true, ,, n]
[;, return, new, RegressionResults, (, params, ,, new, double, [, ], [, ], {, vcv, }, ,, true, ,, n]
[}, ;, return, new, RegressionResults, (, params, ,, new, double, [, ], [, ], {, vcv, }, ,, true, ,]
[., NaN, }, ;, return, new, RegressionResults, (, params, ,, new, double, [, ], [, ], {, vcv, }, ,]
[;, }, }, }, public, RegressionResults, regress, (, int, [, ], variablesToInclude, ), throws, MathIllegalArgumentException, {, if, (, variablesToInclude, ==]
[,, new, double, [, ], [, ], {, vcv, }, ,, true, ,, n, ,, 1, ,, Double, ., NaN]
[,, true, ,, n, ,, 1, ,, Double, ., NaN, ,, Double, ., NaN, ,, Double, ., NaN, ,, false]
[,, true, ,, n, ,, 1, ,, Double, ., NaN, ,, Double, ., NaN, ,, Double, ., NaN, ,, false]
[}, ,, true, ,, n, ,, 1, ,, Double, ., NaN, ,, Double, ., NaN, ,, Double, ., NaN, ,]
[,, n, ,, 1, ,, Double, ., NaN, ,, Double, ., NaN, ,, Double, ., NaN, ,, false, ,, false]
[,, 1, ,, Double, ., NaN, ,, Double, ., NaN, ,, Double, ., NaN, ,, false, ,, false, ), ;]
[,, Double, ., NaN, ,, Double, ., NaN, ,, Double, ., NaN, ,, false, ,, false, ), ;, }, }]
[,, Double, ., NaN, ,, Double, ., NaN, ,, false, ,, false, ), ;, }, }, }, public, RegressionResults, regress]
[., NaN, ,, Double, ., NaN, ,, Double, ., NaN, ,, false, ,, false, ), ;, }, }, }, public]
[,, Double, ., NaN, ,, false, ,, false, ), ;, }, }, }, public, RegressionResults, regress, (, int, [, ]]
[., NaN, ,, Double, ., NaN, ,, false, ,, false, ), ;, }, }, }, public, RegressionResults, regress, (, int]
[,, false, ,, false, ), ;, }, }, }, public, RegressionResults, regress, (, int, [, ], variablesToInclude, ), throws, MathIllegalArgumentException]
[., NaN, ,, false, ,, false, ), ;, }, }, }, public, RegressionResults, regress, (, int, [, ], variablesToInclude, )]
[,, false, ), ;, }, }, }, public, RegressionResults, regress, (, int, [, ], variablesToInclude, ), throws, MathIllegalArgumentException, {, if]
[), ;, }, }, }, public, RegressionResults, regress, (, int, [, ], variablesToInclude, ), throws, MathIllegalArgumentException, {, if, (, variablesToInclude]
[), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., ARRAY_ZERO_LENGTH_OR_NULL_NOT_ALLOWED, ), ;, }, if, (, variablesToInclude, ., length, >, 2, ||]
[||, variablesToInclude, ., length, ==, 0, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., ARRAY_ZERO_LENGTH_OR_NULL_NOT_ALLOWED, ), ;, }, if, (]
[==, null, ||, variablesToInclude, ., length, ==, 0, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., ARRAY_ZERO_LENGTH_OR_NULL_NOT_ALLOWED, ), ;, }]
[||, variablesToInclude, ., length, ==, 0, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., ARRAY_ZERO_LENGTH_OR_NULL_NOT_ALLOWED, ), ;, }, if, (]
[), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., ARRAY_ZERO_LENGTH_OR_NULL_NOT_ALLOWED, ), ;, }, if, (, variablesToInclude, ., length, >, 2, ||]
[==, 0, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., ARRAY_ZERO_LENGTH_OR_NULL_NOT_ALLOWED, ), ;, }, if, (, variablesToInclude, ., length, >]
[., length, ==, 0, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., ARRAY_ZERO_LENGTH_OR_NULL_NOT_ALLOWED, ), ;, }, if, (, variablesToInclude, .]
[), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., ARRAY_ZERO_LENGTH_OR_NULL_NOT_ALLOWED, ), ;, }, if, (, variablesToInclude, ., length, >, 2, ||]
[;, }, if, (, variablesToInclude, ., length, >, 2, ||, (, variablesToInclude, ., length, >, 1, &&, !, hasIntercept, )]
[), ;, }, if, (, variablesToInclude, ., length, >, 2, ||, (, variablesToInclude, ., length, >, 1, &&, !, hasIntercept]
[., ARRAY_ZERO_LENGTH_OR_NULL_NOT_ALLOWED, ), ;, }, if, (, variablesToInclude, ., length, >, 2, ||, (, variablesToInclude, ., length, >, 1, &&]
[), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., ARRAY_SIZE_EXCEEDS_MAX_VARIABLES, ,, (, variablesToInclude, ., length, >, 1, &&, !, hasIntercept, )]
[||, (, variablesToInclude, ., length, >, 1, &&, !, hasIntercept, ), ), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., ARRAY_SIZE_EXCEEDS_MAX_VARIABLES]
[>, 2, ||, (, variablesToInclude, ., length, >, 1, &&, !, hasIntercept, ), ), {, throw, new, ModelSpecificationException, (, LocalizedFormats]
[., length, >, 2, ||, (, variablesToInclude, ., length, >, 1, &&, !, hasIntercept, ), ), {, throw, new, ModelSpecificationException]
[||, (, variablesToInclude, ., length, >, 1, &&, !, hasIntercept, ), ), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., ARRAY_SIZE_EXCEEDS_MAX_VARIABLES]
[), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., ARRAY_SIZE_EXCEEDS_MAX_VARIABLES, ,, (, variablesToInclude, ., length, >, 1, &&, !, hasIntercept, )]
[), ), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., ARRAY_SIZE_EXCEEDS_MAX_VARIABLES, ,, (, variablesToInclude, ., length, >, 1, &&, !, hasIntercept]
[&&, !, hasIntercept, ), ), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., ARRAY_SIZE_EXCEEDS_MAX_VARIABLES, ,, (, variablesToInclude, ., length, >, 1]
[>, 1, &&, !, hasIntercept, ), ), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., ARRAY_SIZE_EXCEEDS_MAX_VARIABLES, ,, (, variablesToInclude, ., length]
[., length, >, 1, &&, !, hasIntercept, ), ), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., ARRAY_SIZE_EXCEEDS_MAX_VARIABLES, ,, (, variablesToInclude]
[&&, !, hasIntercept, ), ), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., ARRAY_SIZE_EXCEEDS_MAX_VARIABLES, ,, (, variablesToInclude, ., length, >, 1]
[), ), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., ARRAY_SIZE_EXCEEDS_MAX_VARIABLES, ,, (, variablesToInclude, ., length, >, 1, &&, !, hasIntercept]
[), ), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., ARRAY_SIZE_EXCEEDS_MAX_VARIABLES, ,, (, variablesToInclude, ., length, >, 1, &&, !, hasIntercept]
[;, }, if, (, hasIntercept, ), {, if, (, variablesToInclude, ., length, ==, 2, ), {, if, (, variablesToInclude, []
[,, (, variablesToInclude, ., length, >, 1, &&, !, hasIntercept, ), ?, 1, :, 2, ), ;, }, if, (]
[., ARRAY_SIZE_EXCEEDS_MAX_VARIABLES, ,, (, variablesToInclude, ., length, >, 1, &&, !, hasIntercept, ), ?, 1, :, 2, ), ;, }]
[), ;, }, if, (, hasIntercept, ), {, if, (, variablesToInclude, ., length, ==, 2, ), {, if, (, variablesToInclude]
[?, 1, :, 2, ), ;, }, if, (, hasIntercept, ), {, if, (, variablesToInclude, ., length, ==, 2, )]
[), ?, 1, :, 2, ), ;, }, if, (, hasIntercept, ), {, if, (, variablesToInclude, ., length, ==, 2]
[&&, !, hasIntercept, ), ?, 1, :, 2, ), ;, }, if, (, hasIntercept, ), {, if, (, variablesToInclude, .]
[>, 1, &&, !, hasIntercept, ), ?, 1, :, 2, ), ;, }, if, (, hasIntercept, ), {, if, (]
[., length, >, 1, &&, !, hasIntercept, ), ?, 1, :, 2, ), ;, }, if, (, hasIntercept, ), {]
[&&, !, hasIntercept, ), ?, 1, :, 2, ), ;, }, if, (, hasIntercept, ), {, if, (, variablesToInclude, .]
[), ?, 1, :, 2, ), ;, }, if, (, hasIntercept, ), {, if, (, variablesToInclude, ., length, ==, 2]
[), ?, 1, :, 2, ), ;, }, if, (, hasIntercept, ), {, if, (, variablesToInclude, ., length, ==, 2]
[:, 2, ), ;, }, if, (, hasIntercept, ), {, if, (, variablesToInclude, ., length, ==, 2, ), {, if]
[), ;, }, if, (, hasIntercept, ), {, if, (, variablesToInclude, ., length, ==, 2, ), {, if, (, variablesToInclude]
[), {, if, (, variablesToInclude, ., length, ==, 2, ), {, if, (, variablesToInclude, [, 0, ], ==, 1, )]
[), {, if, (, variablesToInclude, [, 0, ], ==, 1, ), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., NOT_INCREASING_SEQUENCE, )]
[==, 2, ), {, if, (, variablesToInclude, [, 0, ], ==, 1, ), {, throw, new, ModelSpecificationException, (, LocalizedFormats, .]
[., length, ==, 2, ), {, if, (, variablesToInclude, [, 0, ], ==, 1, ), {, throw, new, ModelSpecificationException, (]
[), {, if, (, variablesToInclude, [, 0, ], ==, 1, ), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., NOT_INCREASING_SEQUENCE, )]
[), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., NOT_INCREASING_SEQUENCE, ), ;, }, else, if, (, variablesToInclude, [, 0, ], !=]
[==, 1, ), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., NOT_INCREASING_SEQUENCE, ), ;, }, else, if, (, variablesToInclude, [, 0]
[[, 0, ], ==, 1, ), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., NOT_INCREASING_SEQUENCE, ), ;, }, else, if, (]
[], ==, 1, ), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., NOT_INCREASING_SEQUENCE, ), ;, }, else, if, (, variablesToInclude, []
[), {, throw, new, ModelSpecificationException, (, LocalizedFormats, ., NOT_INCREASING_SEQUENCE, ), ;, }, else, if, (, variablesToInclude, [, 0, ], !=]
[;, }, else, if, (, variablesToInclude, [, 0, ], !=, 0, ), {, throw, new, OutOfRangeException, (, variablesToInclude, [, 0]
[), ;, }, else, if, (, variablesToInclude, [, 0, ], !=, 0, ), {, throw, new, OutOfRangeException, (, variablesToInclude, []
[., NOT_INCREASING_SEQUENCE, ), ;, }, else, if, (, variablesToInclude, [, 0, ], !=, 0, ), {, throw, new, OutOfRangeException, (]
[), {, throw, new, OutOfRangeException, (, variablesToInclude, [, 0, ], ,, 0, ,, 1, ), ;, }, if, (, variablesToInclude]
[!=, 0, ), {, throw, new, OutOfRangeException, (, variablesToInclude, [, 0, ], ,, 0, ,, 1, ), ;, }, if]
[[, 0, ], !=, 0, ), {, throw, new, OutOfRangeException, (, variablesToInclude, [, 0, ], ,, 0, ,, 1, )]
[], !=, 0, ), {, throw, new, OutOfRangeException, (, variablesToInclude, [, 0, ], ,, 0, ,, 1, ), ;, }]
[), {, throw, new, OutOfRangeException, (, variablesToInclude, [, 0, ], ,, 0, ,, 1, ), ;, }, if, (, variablesToInclude]
[;, }, if, (, variablesToInclude, [, 1, ], !=, 1, ), {, throw, new, OutOfRangeException, (, variablesToInclude, [, 0, ]]
[,, 0, ,, 1, ), ;, }, if, (, variablesToInclude, [, 1, ], !=, 1, ), {, throw, new, OutOfRangeException]
[[, 0, ], ,, 0, ,, 1, ), ;, }, if, (, variablesToInclude, [, 1, ], !=, 1, ), {]
[], ,, 0, ,, 1, ), ;, }, if, (, variablesToInclude, [, 1, ], !=, 1, ), {, throw, new]
[,, 1, ), ;, }, if, (, variablesToInclude, [, 1, ], !=, 1, ), {, throw, new, OutOfRangeException, (, variablesToInclude]
[), ;, }, if, (, variablesToInclude, [, 1, ], !=, 1, ), {, throw, new, OutOfRangeException, (, variablesToInclude, [, 0]
[), {, throw, new, OutOfRangeException, (, variablesToInclude, [, 0, ], ,, 0, ,, 1, ), ;, }, return, regress, (]
[!=, 1, ), {, throw, new, OutOfRangeException, (, variablesToInclude, [, 0, ], ,, 0, ,, 1, ), ;, }, return]
[[, 1, ], !=, 1, ), {, throw, new, OutOfRangeException, (, variablesToInclude, [, 0, ], ,, 0, ,, 1, )]
[], !=, 1, ), {, throw, new, OutOfRangeException, (, variablesToInclude, [, 0, ], ,, 0, ,, 1, ), ;, }]
[), {, throw, new, OutOfRangeException, (, variablesToInclude, [, 0, ], ,, 0, ,, 1, ), ;, }, return, regress, (]
[;, }, return, regress, (, ), ;, }, else, {, if, (, variablesToInclude, [, 0, ], !=, 1, &&, variablesToInclude]
[,, 0, ,, 1, ), ;, }, return, regress, (, ), ;, }, else, {, if, (, variablesToInclude, [, 0]
[[, 0, ], ,, 0, ,, 1, ), ;, }, return, regress, (, ), ;, }, else, {, if, (]
[], ,, 0, ,, 1, ), ;, }, return, regress, (, ), ;, }, else, {, if, (, variablesToInclude, []
[,, 1, ), ;, }, return, regress, (, ), ;, }, else, {, if, (, variablesToInclude, [, 0, ], !=]
[), ;, }, return, regress, (, ), ;, }, else, {, if, (, variablesToInclude, [, 0, ], !=, 1, &&]
[;, }, else, {, if, (, variablesToInclude, [, 0, ], !=, 1, &&, variablesToInclude, [, 0, ], !=, 0, )]
[), {, throw, new, OutOfRangeException, (, variablesToInclude, [, 0, ], ,, 0, ,, 1, ), ;, }, final, double, _mean]
[&&, variablesToInclude, [, 0, ], !=, 0, ), {, throw, new, OutOfRangeException, (, variablesToInclude, [, 0, ], ,, 0, ,]
[!=, 1, &&, variablesToInclude, [, 0, ], !=, 0, ), {, throw, new, OutOfRangeException, (, variablesToInclude, [, 0, ], ,]
[[, 0, ], !=, 1, &&, variablesToInclude, [, 0, ], !=, 0, ), {, throw, new, OutOfRangeException, (, variablesToInclude, []
[], !=, 1, &&, variablesToInclude, [, 0, ], !=, 0, ), {, throw, new, OutOfRangeException, (, variablesToInclude, [, 0, ]]
[&&, variablesToInclude, [, 0, ], !=, 0, ), {, throw, new, OutOfRangeException, (, variablesToInclude, [, 0, ], ,, 0, ,]
[), {, throw, new, OutOfRangeException, (, variablesToInclude, [, 0, ], ,, 0, ,, 1, ), ;, }, final, double, _mean]
[!=, 0, ), {, throw, new, OutOfRangeException, (, variablesToInclude, [, 0, ], ,, 0, ,, 1, ), ;, }, final]
[[, 0, ], !=, 0, ), {, throw, new, OutOfRangeException, (, variablesToInclude, [, 0, ], ,, 0, ,, 1, )]
[], !=, 0, ), {, throw, new, OutOfRangeException, (, variablesToInclude, [, 0, ], ,, 0, ,, 1, ), ;, }]
[), {, throw, new, OutOfRangeException, (, variablesToInclude, [, 0, ], ,, 0, ,, 1, ), ;, }, final, double, _mean]
[;, }, final, double, _mean, =, sumY, *, sumY, /, n, ;, final, double, _syy, =, sumYY, +, _mean, ;]
[,, 0, ,, 1, ), ;, }, final, double, _mean, =, sumY, *, sumY, /, n, ;, final, double, _syy]
[[, 0, ], ,, 0, ,, 1, ), ;, }, final, double, _mean, =, sumY, *, sumY, /, n, ;]
[], ,, 0, ,, 1, ), ;, }, final, double, _mean, =, sumY, *, sumY, /, n, ;, final, double]
[,, 1, ), ;, }, final, double, _mean, =, sumY, *, sumY, /, n, ;, final, double, _syy, =, sumYY]
[), ;, }, final, double, _mean, =, sumY, *, sumY, /, n, ;, final, double, _syy, =, sumYY, +, _mean]
[;, final, double, _syy, =, sumYY, +, _mean, ;, if, (, variablesToInclude, [, 0, ], ==, 0, ), {, final]
[/, n, ;, final, double, _syy, =, sumYY, +, _mean, ;, if, (, variablesToInclude, [, 0, ], ==, 0, )]
[*, sumY, /, n, ;, final, double, _syy, =, sumYY, +, _mean, ;, if, (, variablesToInclude, [, 0, ], ==]
[/, n, ;, final, double, _syy, =, sumYY, +, _mean, ;, if, (, variablesToInclude, [, 0, ], ==, 0, )]
[;, final, double, _syy, =, sumYY, +, _mean, ;, if, (, variablesToInclude, [, 0, ], ==, 0, ), {, final]
[;, if, (, variablesToInclude, [, 0, ], ==, 0, ), {, final, double, [, ], vcv, =, new, double, []
[+, _mean, ;, if, (, variablesToInclude, [, 0, ], ==, 0, ), {, final, double, [, ], vcv, =, new]
[;, if, (, variablesToInclude, [, 0, ], ==, 0, ), {, final, double, [, ], vcv, =, new, double, []
[), {, final, double, [, ], vcv, =, new, double, [, ], {, sumYY, /, (, (, (, n, -]
[==, 0, ), {, final, double, [, ], vcv, =, new, double, [, ], {, sumYY, /, (, (, (]
[[, 0, ], ==, 0, ), {, final, double, [, ], vcv, =, new, double, [, ], {, sumYY, /]
[], ==, 0, ), {, final, double, [, ], vcv, =, new, double, [, ], {, sumYY, /, (, (]
[), {, final, double, [, ], vcv, =, new, double, [, ], {, sumYY, /, (, (, (, n, -]
[;, final, double, [, ], params, =, new, double, [, ], {, ybar, }, ;, return, new, RegressionResults, (, params]
[;, final, double, [, ], params, =, new, double, [, ], {, ybar, }, ;, return, new, RegressionResults, (, params]
[}, ;, final, double, [, ], params, =, new, double, [, ], {, ybar, }, ;, return, new, RegressionResults, (]
[/, (, (, (, n, -, 1, ), *, n, ), ), }, ;, final, double, [, ], params, =]
[}, ;, final, double, [, ], params, =, new, double, [, ], {, ybar, }, ;, return, new, RegressionResults, (]
[), }, ;, final, double, [, ], params, =, new, double, [, ], {, ybar, }, ;, return, new, RegressionResults]
[), ), }, ;, final, double, [, ], params, =, new, double, [, ], {, ybar, }, ;, return, new]
[*, n, ), ), }, ;, final, double, [, ], params, =, new, double, [, ], {, ybar, }, ;]
[), *, n, ), ), }, ;, final, double, [, ], params, =, new, double, [, ], {, ybar, }]
[-, 1, ), *, n, ), ), }, ;, final, double, [, ], params, =, new, double, [, ], {]
[), *, n, ), ), }, ;, final, double, [, ], params, =, new, double, [, ], {, ybar, }]
[), ), }, ;, final, double, [, ], params, =, new, double, [, ], {, ybar, }, ;, return, new]
[;, return, new, RegressionResults, (, params, ,, new, double, [, ], [, ], {, vcv, }, ,, true, ,, n]
[;, return, new, RegressionResults, (, params, ,, new, double, [, ], [, ], {, vcv, }, ,, true, ,, n]
[}, ;, return, new, RegressionResults, (, params, ,, new, double, [, ], [, ], {, vcv, }, ,, true, ,]
[;, }, else, if, (, variablesToInclude, [, 0, ], ==, 1, ), {, final, double, _sxx, =, sumXX, +, sumX]
[,, new, double, [, ], [, ], {, vcv, }, ,, true, ,, n, ,, 1, ,, sumY, ,, _syy]
[,, true, ,, n, ,, 1, ,, sumY, ,, _syy, +, _mean, ,, sumYY, ,, true, ,, false, ), ;]
[,, true, ,, n, ,, 1, ,, sumY, ,, _syy, +, _mean, ,, sumYY, ,, true, ,, false, ), ;]
[}, ,, true, ,, n, ,, 1, ,, sumY, ,, _syy, +, _mean, ,, sumYY, ,, true, ,, false, )]
[,, n, ,, 1, ,, sumY, ,, _syy, +, _mean, ,, sumYY, ,, true, ,, false, ), ;, }, else]
[,, 1, ,, sumY, ,, _syy, +, _mean, ,, sumYY, ,, true, ,, false, ), ;, }, else, if, (]
[,, sumY, ,, _syy, +, _mean, ,, sumYY, ,, true, ,, false, ), ;, }, else, if, (, variablesToInclude, []
[,, _syy, +, _mean, ,, sumYY, ,, true, ,, false, ), ;, }, else, if, (, variablesToInclude, [, 0, ]]
[,, sumYY, ,, true, ,, false, ), ;, }, else, if, (, variablesToInclude, [, 0, ], ==, 1, ), {]
[+, _mean, ,, sumYY, ,, true, ,, false, ), ;, }, else, if, (, variablesToInclude, [, 0, ], ==, 1]
[,, sumYY, ,, true, ,, false, ), ;, }, else, if, (, variablesToInclude, [, 0, ], ==, 1, ), {]
[,, true, ,, false, ), ;, }, else, if, (, variablesToInclude, [, 0, ], ==, 1, ), {, final, double]
[,, false, ), ;, }, else, if, (, variablesToInclude, [, 0, ], ==, 1, ), {, final, double, _sxx, =]
[), ;, }, else, if, (, variablesToInclude, [, 0, ], ==, 1, ), {, final, double, _sxx, =, sumXX, +]
[), {, final, double, _sxx, =, sumXX, +, sumX, *, sumX, /, n, ;, final, double, _sxy, =, sumXY, +]
[==, 1, ), {, final, double, _sxx, =, sumXX, +, sumX, *, sumX, /, n, ;, final, double, _sxy, =]
[[, 0, ], ==, 1, ), {, final, double, _sxx, =, sumXX, +, sumX, *, sumX, /, n, ;, final]
[], ==, 1, ), {, final, double, _sxx, =, sumXX, +, sumX, *, sumX, /, n, ;, final, double, _sxy]
[), {, final, double, _sxx, =, sumXX, +, sumX, *, sumX, /, n, ;, final, double, _sxy, =, sumXY, +]
[;, final, double, _sxy, =, sumXY, +, sumX, *, sumY, /, n, ;, final, double, _sse, =, FastMath, ., max]
[+, sumX, *, sumX, /, n, ;, final, double, _sxy, =, sumXY, +, sumX, *, sumY, /, n, ;, final]
[;, final, double, _sxy, =, sumXY, +, sumX, *, sumY, /, n, ;, final, double, _sse, =, FastMath, ., max]
[/, n, ;, final, double, _sxy, =, sumXY, +, sumX, *, sumY, /, n, ;, final, double, _sse, =, FastMath]
[*, sumX, /, n, ;, final, double, _sxy, =, sumXY, +, sumX, *, sumY, /, n, ;, final, double, _sse]
[/, n, ;, final, double, _sxy, =, sumXY, +, sumX, *, sumY, /, n, ;, final, double, _sse, =, FastMath]
[;, final, double, _sxy, =, sumXY, +, sumX, *, sumY, /, n, ;, final, double, _sse, =, FastMath, ., max]
[;, final, double, _sse, =, FastMath, ., max, (, 0d, ,, _syy, -, _sxy, *, _sxy, /, _sxx, ), ;]
[+, sumX, *, sumY, /, n, ;, final, double, _sse, =, FastMath, ., max, (, 0d, ,, _syy, -, _sxy]
[;, final, double, _sse, =, FastMath, ., max, (, 0d, ,, _syy, -, _sxy, *, _sxy, /, _sxx, ), ;]
[/, n, ;, final, double, _sse, =, FastMath, ., max, (, 0d, ,, _syy, -, _sxy, *, _sxy, /, _sxx]
[*, sumY, /, n, ;, final, double, _sse, =, FastMath, ., max, (, 0d, ,, _syy, -, _sxy, *, _sxy]
[/, n, ;, final, double, _sse, =, FastMath, ., max, (, 0d, ,, _syy, -, _sxy, *, _sxy, /, _sxx]
[;, final, double, _sse, =, FastMath, ., max, (, 0d, ,, _syy, -, _sxy, *, _sxy, /, _sxx, ), ;]
[;, final, double, _mse, =, _sse, /, (, (, n, -, 1, ), ), ;, if, (, !, Double, .]
[., max, (, 0d, ,, _syy, -, _sxy, *, _sxy, /, _sxx, ), ;, final, double, _mse, =, _sse, /]
[,, _syy, -, _sxy, *, _sxy, /, _sxx, ), ;, final, double, _mse, =, _sse, /, (, (, n, -]
[), ;, final, double, _mse, =, _sse, /, (, (, n, -, 1, ), ), ;, if, (, !, Double]
[-, _sxy, *, _sxy, /, _sxx, ), ;, final, double, _mse, =, _sse, /, (, (, n, -, 1, )]
[), ;, final, double, _mse, =, _sse, /, (, (, n, -, 1, ), ), ;, if, (, !, Double]
[/, _sxx, ), ;, final, double, _mse, =, _sse, /, (, (, n, -, 1, ), ), ;, if, (]
[*, _sxy, /, _sxx, ), ;, final, double, _mse, =, _sse, /, (, (, n, -, 1, ), ), ;]
[/, _sxx, ), ;, final, double, _mse, =, _sse, /, (, (, n, -, 1, ), ), ;, if, (]
[), ;, final, double, _mse, =, _sse, /, (, (, n, -, 1, ), ), ;, if, (, !, Double]
[;, if, (, !, Double, ., isNaN, (, _sxx, ), ), {, final, double, [, ], vcv, =, new, double]
[/, (, (, n, -, 1, ), ), ;, if, (, !, Double, ., isNaN, (, _sxx, ), ), {]
[;, if, (, !, Double, ., isNaN, (, _sxx, ), ), {, final, double, [, ], vcv, =, new, double]
[), ;, if, (, !, Double, ., isNaN, (, _sxx, ), ), {, final, double, [, ], vcv, =, new]
[), ), ;, if, (, !, Double, ., isNaN, (, _sxx, ), ), {, final, double, [, ], vcv, =]
[-, 1, ), ), ;, if, (, !, Double, ., isNaN, (, _sxx, ), ), {, final, double, [, ]]
[), ), ;, if, (, !, Double, ., isNaN, (, _sxx, ), ), {, final, double, [, ], vcv, =]
[), {, final, double, [, ], vcv, =, new, double, [, ], {, _mse, /, _sxx, }, ;, final, double]
[), {, final, double, [, ], vcv, =, new, double, [, ], {, _mse, /, _sxx, }, ;, final, double]
[., isNaN, (, _sxx, ), ), {, final, double, [, ], vcv, =, new, double, [, ], {, _mse, /]
[), ), {, final, double, [, ], vcv, =, new, double, [, ], {, _mse, /, _sxx, }, ;, final]
[;, final, double, [, ], params, =, new, double, [, ], {, _sxy, /, _sxx, }, ;, return, new, RegressionResults]
[;, final, double, [, ], params, =, new, double, [, ], {, _sxy, /, _sxx, }, ;, return, new, RegressionResults]
[}, ;, final, double, [, ], params, =, new, double, [, ], {, _sxy, /, _sxx, }, ;, return, new]
[/, _sxx, }, ;, final, double, [, ], params, =, new, double, [, ], {, _sxy, /, _sxx, }, ;]
[}, ;, final, double, [, ], params, =, new, double, [, ], {, _sxy, /, _sxx, }, ;, return, new]
[;, return, new, RegressionResults, (, params, ,, new, double, [, ], [, ], {, vcv, }, ,, true, ,, n]
[;, return, new, RegressionResults, (, params, ,, new, double, [, ], [, ], {, vcv, }, ,, true, ,, n]
[}, ;, return, new, RegressionResults, (, params, ,, new, double, [, ], [, ], {, vcv, }, ,, true, ,]
[/, _sxx, }, ;, return, new, RegressionResults, (, params, ,, new, double, [, ], [, ], {, vcv, }, ,]
[}, ;, return, new, RegressionResults, (, params, ,, new, double, [, ], [, ], {, vcv, }, ,, true, ,]
[;, }, else, {, final, double, [, ], vcv, =, new, double, [, ], {, Double, ., NaN, }, ;]
[,, new, double, [, ], [, ], {, vcv, }, ,, true, ,, n, ,, 1, ,, sumY, ,, _syy]
[,, true, ,, n, ,, 1, ,, sumY, ,, _syy, ,, _sse, ,, false, ,, false, ), ;, }, else]
[,, true, ,, n, ,, 1, ,, sumY, ,, _syy, ,, _sse, ,, false, ,, false, ), ;, }, else]
[}, ,, true, ,, n, ,, 1, ,, sumY, ,, _syy, ,, _sse, ,, false, ,, false, ), ;, }]
[,, n, ,, 1, ,, sumY, ,, _syy, ,, _sse, ,, false, ,, false, ), ;, }, else, {, final]
[,, 1, ,, sumY, ,, _syy, ,, _sse, ,, false, ,, false, ), ;, }, else, {, final, double, []
[,, sumY, ,, _syy, ,, _sse, ,, false, ,, false, ), ;, }, else, {, final, double, [, ], vcv]
[,, _syy, ,, _sse, ,, false, ,, false, ), ;, }, else, {, final, double, [, ], vcv, =, new]
[,, _sse, ,, false, ,, false, ), ;, }, else, {, final, double, [, ], vcv, =, new, double, []
[,, false, ,, false, ), ;, }, else, {, final, double, [, ], vcv, =, new, double, [, ], {]
[,, false, ), ;, }, else, {, final, double, [, ], vcv, =, new, double, [, ], {, Double, .]
[), ;, }, else, {, final, double, [, ], vcv, =, new, double, [, ], {, Double, ., NaN, }]
[;, final, double, [, ], params, =, new, double, [, ], {, Double, ., NaN, }, ;, return, new, RegressionResults]
[;, final, double, [, ], params, =, new, double, [, ], {, Double, ., NaN, }, ;, return, new, RegressionResults]
[}, ;, final, double, [, ], params, =, new, double, [, ], {, Double, ., NaN, }, ;, return, new]
[., NaN, }, ;, final, double, [, ], params, =, new, double, [, ], {, Double, ., NaN, }, ;]
[;, return, new, RegressionResults, (, params, ,, new, double, [, ], [, ], {, vcv, }, ,, true, ,, n]
[;, return, new, RegressionResults, (, params, ,, new, double, [, ], [, ], {, vcv, }, ,, true, ,, n]
[}, ;, return, new, RegressionResults, (, params, ,, new, double, [, ], [, ], {, vcv, }, ,, true, ,]
[., NaN, }, ;, return, new, RegressionResults, (, params, ,, new, double, [, ], [, ], {, vcv, }, ,]
[;, }, }, }, }, else, {, if, (, variablesToInclude, [, 0, ], !=, 0, ), {, throw, new, OutOfRangeException]
[,, new, double, [, ], [, ], {, vcv, }, ,, true, ,, n, ,, 1, ,, Double, ., NaN]
[,, true, ,, n, ,, 1, ,, Double, ., NaN, ,, Double, ., NaN, ,, Double, ., NaN, ,, false]
[,, true, ,, n, ,, 1, ,, Double, ., NaN, ,, Double, ., NaN, ,, Double, ., NaN, ,, false]
[}, ,, true, ,, n, ,, 1, ,, Double, ., NaN, ,, Double, ., NaN, ,, Double, ., NaN, ,]
[,, n, ,, 1, ,, Double, ., NaN, ,, Double, ., NaN, ,, Double, ., NaN, ,, false, ,, false]
[,, 1, ,, Double, ., NaN, ,, Double, ., NaN, ,, Double, ., NaN, ,, false, ,, false, ), ;]
[,, Double, ., NaN, ,, Double, ., NaN, ,, Double, ., NaN, ,, false, ,, false, ), ;, }, }]
[,, Double, ., NaN, ,, Double, ., NaN, ,, false, ,, false, ), ;, }, }, }, }, else, {]
[., NaN, ,, Double, ., NaN, ,, Double, ., NaN, ,, false, ,, false, ), ;, }, }, }, }]
[,, Double, ., NaN, ,, false, ,, false, ), ;, }, }, }, }, else, {, if, (, variablesToInclude, []
[., NaN, ,, Double, ., NaN, ,, false, ,, false, ), ;, }, }, }, }, else, {, if, (]
[,, false, ,, false, ), ;, }, }, }, }, else, {, if, (, variablesToInclude, [, 0, ], !=, 0]
[., NaN, ,, false, ,, false, ), ;, }, }, }, }, else, {, if, (, variablesToInclude, [, 0, ]]
[,, false, ), ;, }, }, }, }, else, {, if, (, variablesToInclude, [, 0, ], !=, 0, ), {]
[), ;, }, }, }, }, else, {, if, (, variablesToInclude, [, 0, ], !=, 0, ), {, throw, new]
[), {, throw, new, OutOfRangeException, (, variablesToInclude, [, 0, ], ,, 0, ,, 0, ), ;, }, return, regress, (]
[!=, 0, ), {, throw, new, OutOfRangeException, (, variablesToInclude, [, 0, ], ,, 0, ,, 0, ), ;, }, return]
[[, 0, ], !=, 0, ), {, throw, new, OutOfRangeException, (, variablesToInclude, [, 0, ], ,, 0, ,, 0, )]
[], !=, 0, ), {, throw, new, OutOfRangeException, (, variablesToInclude, [, 0, ], ,, 0, ,, 0, ), ;, }]
[), {, throw, new, OutOfRangeException, (, variablesToInclude, [, 0, ], ,, 0, ,, 0, ), ;, }, return, regress, (]
[;, }, return, regress, (, ), ;, }, return, null, ;, }, }]
[,, 0, ,, 0, ), ;, }, return, regress, (, ), ;, }, return, null, ;, }, }]
[[, 0, ], ,, 0, ,, 0, ), ;, }, return, regress, (, ), ;, }, return, null, ;, }]
[], ,, 0, ,, 0, ), ;, }, return, regress, (, ), ;, }, return, null, ;, }, }]
[,, 0, ), ;, }, return, regress, (, ), ;, }, return, null, ;, }, }]
[), ;, }, return, regress, (, ), ;, }, return, null, ;, }, }]
[;, }, return, null, ;, }, }]
[;, }, }]
