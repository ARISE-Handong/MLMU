[joda, ., time, ., DurationFieldType, ;, public, class, DelegatedDurationField, extends, DurationField, implements, Serializable, {, private, static, final, long, serialVersionUID, =]
[., time, ., DurationFieldType, ;, public, class, DelegatedDurationField, extends, DurationField, implements, Serializable, {, private, static, final, long, serialVersionUID, =, -]
[;, private, final, DurationField, iField, ;, private, final, DurationFieldType, iType, ;, protected, DelegatedDurationField, (, DurationField, field, ), {, this, (]
[final, DurationField, iField, ;, private, final, DurationFieldType, iType, ;, protected, DelegatedDurationField, (, DurationField, field, ), {, this, (, field, ,]
[null, ), ;, }, protected, DelegatedDurationField, (, DurationField, field, ,, DurationFieldType, type, ), {, super, (, ), ;, if, (]
[null, ), ;, }, protected, DelegatedDurationField, (, DurationField, field, ,, DurationFieldType, type, ), {, super, (, ), ;, if, (]
[;, }, protected, DelegatedDurationField, (, DurationField, field, ,, DurationFieldType, type, ), {, super, (, ), ;, if, (, field, ==]
[(, DurationField, field, ,, DurationFieldType, type, ), {, super, (, ), ;, if, (, field, ==, null, ), {, throw]
[,, DurationFieldType, type, ), {, super, (, ), ;, if, (, field, ==, null, ), {, throw, new, IllegalArgumentException, (]
[{, super, (, ), ;, if, (, field, ==, null, ), {, throw, new, IllegalArgumentException, (, "The field must not be null", ), ;, }]
[(, ), ;, if, (, field, ==, null, ), {, throw, new, IllegalArgumentException, (, "The field must not be null", ), ;, }, iField, =]
[;, if, (, field, ==, null, ), {, throw, new, IllegalArgumentException, (, "The field must not be null", ), ;, }, iField, =, field, ;]
[(, field, ==, null, ), {, throw, new, IllegalArgumentException, (, "The field must not be null", ), ;, }, iField, =, field, ;, iType, =]
[field, ==, null, ), {, throw, new, IllegalArgumentException, (, "The field must not be null", ), ;, }, iField, =, field, ;, iType, =, (]
[field, ==, null, ), {, throw, new, IllegalArgumentException, (, "The field must not be null", ), ;, }, iField, =, field, ;, iType, =, (]
[field, ==, null, ), {, throw, new, IllegalArgumentException, (, "The field must not be null", ), ;, }, iField, =, field, ;, iType, =, (]
[null, ), {, throw, new, IllegalArgumentException, (, "The field must not be null", ), ;, }, iField, =, field, ;, iType, =, (, type, ==]
[{, throw, new, IllegalArgumentException, (, "The field must not be null", ), ;, }, iField, =, field, ;, iType, =, (, type, ==, null, ?]
[{, throw, new, IllegalArgumentException, (, "The field must not be null", ), ;, }, iField, =, field, ;, iType, =, (, type, ==, null, ?]
[), ;, }, iField, =, field, ;, iType, =, (, type, ==, null, ?, field, ., getType, (, ), :]
[null, ?, field, ., getType, (, ), :, type, ), ;, }, public, final, DurationField, getWrappedField, (, ), {, return]
[;, }, public, final, DurationField, getWrappedField, (, ), {, return, iField, ;, }, public, DurationFieldType, getType, (, ), {, return]
[iField, ;, }, public, DurationFieldType, getType, (, ), {, return, iType, ;, }, public, String, getName, (, ), {, return]
[iField, ;, }, public, DurationFieldType, getType, (, ), {, return, iType, ;, }, public, String, getName, (, ), {, return]
[String, getName, (, ), {, return, iType, ., getName, (, ), ;, }, public, boolean, isSupported, (, ), {, return]
[String, getName, (, ), {, return, iType, ., getName, (, ), ;, }, public, boolean, isSupported, (, ), {, return]
[boolean, isSupported, (, ), {, return, iField, ., isSupported, (, ), ;, }, public, boolean, isPrecise, (, ), {, return]
[boolean, isSupported, (, ), {, return, iField, ., isSupported, (, ), ;, }, public, boolean, isPrecise, (, ), {, return]
[(, ), {, return, iField, ., isPrecise, (, ), ;, }, public, int, getValue, (, long, duration, ), {, return]
[(, ), {, return, iField, ., isPrecise, (, ), ;, }, public, int, getValue, (, long, duration, ), {, return]
[iField, ., isPrecise, (, ), ;, }, public, int, getValue, (, long, duration, ), {, return, iField, ., getValue, (]
[), {, return, iField, ., getValue, (, duration, ), ;, }, public, long, getValueAsLong, (, long, duration, ), {, return]
[), {, return, iField, ., getValue, (, duration, ), ;, }, public, long, getValueAsLong, (, long, duration, ), {, return]
[., getValue, (, duration, ), ;, }, public, long, getValueAsLong, (, long, duration, ), {, return, iField, ., getValueAsLong, (]
[iField, ., getValueAsLong, (, duration, ), ;, }, public, int, getValue, (, long, duration, ,, long, instant, ), {, return]
[iField, ., getValueAsLong, (, duration, ), ;, }, public, int, getValue, (, long, duration, ,, long, instant, ), {, return]
[duration, ), ;, }, public, int, getValue, (, long, duration, ,, long, instant, ), {, return, iField, ., getValue, (]
[;, }, public, int, getValue, (, long, duration, ,, long, instant, ), {, return, iField, ., getValue, (, duration, ,]
[getValue, (, duration, ,, instant, ), ;, }, public, long, getValueAsLong, (, long, duration, ,, long, instant, ), {, return]
[getValue, (, duration, ,, instant, ), ;, }, public, long, getValueAsLong, (, long, duration, ,, long, instant, ), {, return]
[instant, ), ;, }, public, long, getValueAsLong, (, long, duration, ,, long, instant, ), {, return, iField, ., getValueAsLong, (]
[;, }, public, long, getValueAsLong, (, long, duration, ,, long, instant, ), {, return, iField, ., getValueAsLong, (, duration, ,]
[return, iField, ., getValueAsLong, (, duration, ,, instant, ), ;, }, public, long, getMillis, (, int, value, ), {, return]
[return, iField, ., getValueAsLong, (, duration, ,, instant, ), ;, }, public, long, getMillis, (, int, value, ), {, return]
[(, duration, ,, instant, ), ;, }, public, long, getMillis, (, int, value, ), {, return, iField, ., getMillis, (]
[), {, return, iField, ., getMillis, (, value, ), ;, }, public, long, getMillis, (, long, value, ), {, return]
[), {, return, iField, ., getMillis, (, value, ), ;, }, public, long, getMillis, (, long, value, ), {, return]
[., getMillis, (, value, ), ;, }, public, long, getMillis, (, long, value, ), {, return, iField, ., getMillis, (]
[iField, ., getMillis, (, value, ), ;, }, public, long, getMillis, (, int, value, ,, long, instant, ), {, return]
[iField, ., getMillis, (, value, ), ;, }, public, long, getMillis, (, int, value, ,, long, instant, ), {, return]
[value, ), ;, }, public, long, getMillis, (, int, value, ,, long, instant, ), {, return, iField, ., getMillis, (]
[;, }, public, long, getMillis, (, int, value, ,, long, instant, ), {, return, iField, ., getMillis, (, value, ,]
[getMillis, (, value, ,, instant, ), ;, }, public, long, getMillis, (, long, value, ,, long, instant, ), {, return]
[getMillis, (, value, ,, instant, ), ;, }, public, long, getMillis, (, long, value, ,, long, instant, ), {, return]
[instant, ), ;, }, public, long, getMillis, (, long, value, ,, long, instant, ), {, return, iField, ., getMillis, (]
[;, }, public, long, getMillis, (, long, value, ,, long, instant, ), {, return, iField, ., getMillis, (, value, ,]
[getMillis, (, value, ,, instant, ), ;, }, public, long, add, (, long, instant, ,, int, value, ), {, return]
[getMillis, (, value, ,, instant, ), ;, }, public, long, add, (, long, instant, ,, int, value, ), {, return]
[instant, ), ;, }, public, long, add, (, long, instant, ,, int, value, ), {, return, iField, ., add, (]
[;, }, public, long, add, (, long, instant, ,, int, value, ), {, return, iField, ., add, (, instant, ,]
[add, (, instant, ,, value, ), ;, }, public, long, add, (, long, instant, ,, long, value, ), {, return]
[add, (, instant, ,, value, ), ;, }, public, long, add, (, long, instant, ,, long, value, ), {, return]
[value, ), ;, }, public, long, add, (, long, instant, ,, long, value, ), {, return, iField, ., add, (]
[;, }, public, long, add, (, long, instant, ,, long, value, ), {, return, iField, ., add, (, instant, ,]
[add, (, instant, ,, value, ), ;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return]
[add, (, instant, ,, value, ), ;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return]
[value, ), ;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, iField, ., getDifference, (]
[;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, iField, ., getDifference, (, minuendInstant, ,]
[getDifference, (, minuendInstant, ,, subtrahendInstant, ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return]
[getDifference, (, minuendInstant, ,, subtrahendInstant, ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return]
[subtrahendInstant, ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, iField, ., getDifferenceAsLong, (]
[;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, iField, ., getDifferenceAsLong, (, minuendInstant, ,]
[), {, return, iField, ., getDifferenceAsLong, (, minuendInstant, ,, subtrahendInstant, ), ;, }, public, long, getUnitMillis, (, ), {, return]
[), {, return, iField, ., getDifferenceAsLong, (, minuendInstant, ,, subtrahendInstant, ), ;, }, public, long, getUnitMillis, (, ), {, return]
[(, ), {, return, iField, ., getUnitMillis, (, ), ;, }, public, int, compareTo, (, DurationField, durationField, ), {, return]
[(, ), {, return, iField, ., getUnitMillis, (, ), ;, }, public, int, compareTo, (, DurationField, durationField, ), {, return]
[iField, ., getUnitMillis, (, ), ;, }, public, int, compareTo, (, DurationField, durationField, ), {, return, iField, ., compareTo, (]
[{, return, iField, ., compareTo, (, durationField, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[{, return, iField, ., compareTo, (, durationField, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[durationField, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, instanceof, DelegatedDurationField, ), {, return]
[durationField, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, instanceof, DelegatedDurationField, ), {, return]
[public, boolean, equals, (, Object, obj, ), {, if, (, obj, instanceof, DelegatedDurationField, ), {, return, iField, ., equals, (]
[public, boolean, equals, (, Object, obj, ), {, if, (, obj, instanceof, DelegatedDurationField, ), {, return, iField, ., equals, (]
[boolean, equals, (, Object, obj, ), {, if, (, obj, instanceof, DelegatedDurationField, ), {, return, iField, ., equals, (, (]
[Object, obj, ), {, if, (, obj, instanceof, DelegatedDurationField, ), {, return, iField, ., equals, (, (, (, DelegatedDurationField, )]
[DelegatedDurationField, ), {, return, iField, ., equals, (, (, (, DelegatedDurationField, ), obj, ), ., iField, ), ;, }, return]
[DelegatedDurationField, ), obj, ), ., iField, ), ;, }, return, false, ;, }, public, int, hashCode, (, ), {, return]
[DelegatedDurationField, ), obj, ), ., iField, ), ;, }, return, false, ;, }, public, int, hashCode, (, ), {, return]
[DelegatedDurationField, ), obj, ), ., iField, ), ;, }, return, false, ;, }, public, int, hashCode, (, ), {, return]
[), ;, }, return, false, ;, }, public, int, hashCode, (, ), {, return, iField, ., hashCode, (, ), ^]
[), ;, }, return, false, ;, }, public, int, hashCode, (, ), {, return, iField, ., hashCode, (, ), ^]
[iField, ., hashCode, (, ), ^, iType, ., hashCode, (, ), ;, }, public, String, toString, (, ), {, return]
[iField, ., hashCode, (, ), ^, iType, ., hashCode, (, ), ;, }, public, String, toString, (, ), {, return]
[., hashCode, (, ), ^, iType, ., hashCode, (, ), ;, }, public, String, toString, (, ), {, return, (]
[., hashCode, (, ), ^, iType, ., hashCode, (, ), ;, }, public, String, toString, (, ), {, return, (]
[(, ), ^, iType, ., hashCode, (, ), ;, }, public, String, toString, (, ), {, return, (, iType, ==]
[iType, ., hashCode, (, ), ;, }, public, String, toString, (, ), {, return, (, iType, ==, null, ), ?]
[iType, ., hashCode, (, ), ;, }, public, String, toString, (, ), {, return, (, iType, ==, null, ), ?]
[}, public, String, toString, (, ), {, return, (, iType, ==, null, ), ?, iField, ., toString, (, ), :]
[public, String, toString, (, ), {, return, (, iType, ==, null, ), ?, iField, ., toString, (, ), :, (]
[public, String, toString, (, ), {, return, (, iType, ==, null, ), ?, iField, ., toString, (, ), :, (]
[public, String, toString, (, ), {, return, (, iType, ==, null, ), ?, iField, ., toString, (, ), :, (]
[toString, (, ), {, return, (, iType, ==, null, ), ?, iField, ., toString, (, ), :, (, "DurationField[", +]
[), {, return, (, iType, ==, null, ), ?, iField, ., toString, (, ), :, (, "DurationField[", +, iType, +]
