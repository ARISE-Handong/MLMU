[;, public, static, final, StrMatcher, DEFAULT_PREFIX, =, StrMatcher, ., stringMatcher, (, "${", ), ;, public, static, final, StrMatcher, DEFAULT_SUFFIX, =]
[;, public, static, final, StrMatcher, DEFAULT_SUFFIX, =, StrMatcher, ., stringMatcher, (, "}", ), ;, private, char, escapeChar, ;, private, StrMatcher]
[., stringMatcher, (, "${", ), ;, public, static, final, StrMatcher, DEFAULT_SUFFIX, =, StrMatcher, ., stringMatcher, (, "}", ), ;, private]
[), ;, public, static, final, StrMatcher, DEFAULT_SUFFIX, =, StrMatcher, ., stringMatcher, (, "}", ), ;, private, char, escapeChar, ;, private]
[;, private, char, escapeChar, ;, private, StrMatcher, prefixMatcher, ;, private, StrMatcher, suffixMatcher, ;, private, StrLookup, <, ?, >, variableResolver, ;]
[., stringMatcher, (, "}", ), ;, private, char, escapeChar, ;, private, StrMatcher, prefixMatcher, ;, private, StrMatcher, suffixMatcher, ;, private, StrLookup]
[), ;, private, char, escapeChar, ;, private, StrMatcher, prefixMatcher, ;, private, StrMatcher, suffixMatcher, ;, private, StrLookup, <, ?, >, variableResolver]
[;, }, public, static, <, V, >, String, replace, (, final, Object, source, ,, final, Map, <, String, ,, V]
[., replace, (, source, ), ;, }, public, static, <, V, >, String, replace, (, final, Object, source, ,, final]
[), ., replace, (, source, ), ;, }, public, static, <, V, >, String, replace, (, final, Object, source, ,]
[), ;, }, public, static, <, V, >, String, replace, (, final, Object, source, ,, final, Map, <, String, ,]
[;, }, public, static, String, replace, (, final, Object, source, ,, final, Properties, valueProperties, ), {, if, (, valueProperties, ==]
[., replace, (, source, ), ;, }, public, static, String, replace, (, final, Object, source, ,, final, Properties, valueProperties, )]
[,, prefix, ,, suffix, ), ., replace, (, source, ), ;, }, public, static, String, replace, (, final, Object, source]
[,, suffix, ), ., replace, (, source, ), ;, }, public, static, String, replace, (, final, Object, source, ,, final]
[), ., replace, (, source, ), ;, }, public, static, String, replace, (, final, Object, source, ,, final, Properties, valueProperties]
[), ;, }, public, static, String, replace, (, final, Object, source, ,, final, Properties, valueProperties, ), {, if, (, valueProperties]
[), {, return, source, ., toString, (, ), ;, }, final, Map, <, String, ,, String, >, valueMap, =, new]
[==, null, ), {, return, source, ., toString, (, ), ;, }, final, Map, <, String, ,, String, >, valueMap]
[), {, return, source, ., toString, (, ), ;, }, final, Map, <, String, ,, String, >, valueMap, =, new]
[;, }, final, Map, <, String, ,, String, >, valueMap, =, new, HashMap, <, String, ,, String, >, (, )]
[., toString, (, ), ;, }, final, Map, <, String, ,, String, >, valueMap, =, new, HashMap, <, String, ,]
[;, final, Enumeration, <, ?, >, propNames, =, valueProperties, ., propertyNames, (, ), ;, while, (, propNames, ., hasMoreElements, (]
[;, while, (, propNames, ., hasMoreElements, (, ), ), {, final, String, propName, =, (, String, ), propNames, ., nextElement]
[., propertyNames, (, ), ;, while, (, propNames, ., hasMoreElements, (, ), ), {, final, String, propName, =, (, String]
[), {, final, String, propName, =, (, String, ), propNames, ., nextElement, (, ), ;, final, String, propValue, =, valueProperties]
[., hasMoreElements, (, ), ), {, final, String, propName, =, (, String, ), propNames, ., nextElement, (, ), ;, final]
[;, final, String, propValue, =, valueProperties, ., getProperty, (, propName, ), ;, valueMap, ., put, (, propName, ,, propValue, )]
[;, final, String, propValue, =, valueProperties, ., getProperty, (, propName, ), ;, valueMap, ., put, (, propName, ,, propValue, )]
[., nextElement, (, ), ;, final, String, propValue, =, valueProperties, ., getProperty, (, propName, ), ;, valueMap, ., put, (]
[;, valueMap, ., put, (, propName, ,, propValue, ), ;, }, return, StrSubstitutor, ., replace, (, source, ,, valueMap, )]
[., getProperty, (, propName, ), ;, valueMap, ., put, (, propName, ,, propValue, ), ;, }, return, StrSubstitutor, ., replace]
[), ;, valueMap, ., put, (, propName, ,, propValue, ), ;, }, return, StrSubstitutor, ., replace, (, source, ,, valueMap]
[;, }, return, StrSubstitutor, ., replace, (, source, ,, valueMap, ), ;, }, public, static, String, replaceSystemProperties, (, final, Object]
[., put, (, propName, ,, propValue, ), ;, }, return, StrSubstitutor, ., replace, (, source, ,, valueMap, ), ;, }]
[,, propValue, ), ;, }, return, StrSubstitutor, ., replace, (, source, ,, valueMap, ), ;, }, public, static, String, replaceSystemProperties]
[), ;, }, return, StrSubstitutor, ., replace, (, source, ,, valueMap, ), ;, }, public, static, String, replaceSystemProperties, (, final]
[;, }, public, static, String, replaceSystemProperties, (, final, Object, source, ), {, return, new, StrSubstitutor, (, StrLookup, ., systemPropertiesLookup, (]
[., replace, (, source, ,, valueMap, ), ;, }, public, static, String, replaceSystemProperties, (, final, Object, source, ), {, return]
[,, valueMap, ), ;, }, public, static, String, replaceSystemProperties, (, final, Object, source, ), {, return, new, StrSubstitutor, (, StrLookup]
[), ;, }, public, static, String, replaceSystemProperties, (, final, Object, source, ), {, return, new, StrSubstitutor, (, StrLookup, ., systemPropertiesLookup]
[;, }, public, StrSubstitutor, (, ), {, this, (, (, StrLookup, <, ?, >, ), null, ,, DEFAULT_PREFIX, ,, DEFAULT_SUFFIX]
[., replace, (, source, ), ;, }, public, StrSubstitutor, (, ), {, this, (, (, StrLookup, <, ?, >, )]
[), ., replace, (, source, ), ;, }, public, StrSubstitutor, (, ), {, this, (, (, StrLookup, <, ?, >]
[., systemPropertiesLookup, (, ), ), ., replace, (, source, ), ;, }, public, StrSubstitutor, (, ), {, this, (, (]
[), ;, }, public, StrSubstitutor, (, ), {, this, (, (, StrLookup, <, ?, >, ), null, ,, DEFAULT_PREFIX, ,]
[,, DEFAULT_PREFIX, ,, DEFAULT_SUFFIX, ,, DEFAULT_ESCAPE, ), ;, }, public, <, V, >, StrSubstitutor, (, final, Map, <, String, ,]
[,, DEFAULT_PREFIX, ,, DEFAULT_SUFFIX, ,, DEFAULT_ESCAPE, ), ;, }, public, <, V, >, StrSubstitutor, (, final, Map, <, String, ,]
[,, DEFAULT_SUFFIX, ,, DEFAULT_ESCAPE, ), ;, }, public, <, V, >, StrSubstitutor, (, final, Map, <, String, ,, V, >]
[,, DEFAULT_ESCAPE, ), ;, }, public, <, V, >, StrSubstitutor, (, final, Map, <, String, ,, V, >, valueMap, )]
[), ;, }, public, <, V, >, StrSubstitutor, (, final, Map, <, String, ,, V, >, valueMap, ), {, this]
[,, DEFAULT_PREFIX, ,, DEFAULT_SUFFIX, ,, DEFAULT_ESCAPE, ), ;, }, public, <, V, >, StrSubstitutor, (, final, Map, <, String, ,]
[., mapLookup, (, valueMap, ), ,, DEFAULT_PREFIX, ,, DEFAULT_SUFFIX, ,, DEFAULT_ESCAPE, ), ;, }, public, <, V, >, StrSubstitutor, (]
[), ,, DEFAULT_PREFIX, ,, DEFAULT_SUFFIX, ,, DEFAULT_ESCAPE, ), ;, }, public, <, V, >, StrSubstitutor, (, final, Map, <, String]
[,, DEFAULT_SUFFIX, ,, DEFAULT_ESCAPE, ), ;, }, public, <, V, >, StrSubstitutor, (, final, Map, <, String, ,, V, >]
[,, DEFAULT_ESCAPE, ), ;, }, public, <, V, >, StrSubstitutor, (, final, Map, <, String, ,, V, >, valueMap, ,]
[), ;, }, public, <, V, >, StrSubstitutor, (, final, Map, <, String, ,, V, >, valueMap, ,, final, String]
[,, prefix, ,, suffix, ,, DEFAULT_ESCAPE, ), ;, }, public, <, V, >, StrSubstitutor, (, final, Map, <, String, ,]
[., mapLookup, (, valueMap, ), ,, prefix, ,, suffix, ,, DEFAULT_ESCAPE, ), ;, }, public, <, V, >, StrSubstitutor, (]
[), ,, prefix, ,, suffix, ,, DEFAULT_ESCAPE, ), ;, }, public, <, V, >, StrSubstitutor, (, final, Map, <, String]
[,, suffix, ,, DEFAULT_ESCAPE, ), ;, }, public, <, V, >, StrSubstitutor, (, final, Map, <, String, ,, V, >]
[,, DEFAULT_ESCAPE, ), ;, }, public, <, V, >, StrSubstitutor, (, final, Map, <, String, ,, V, >, valueMap, ,]
[), ;, }, public, <, V, >, StrSubstitutor, (, final, Map, <, String, ,, V, >, valueMap, ,, final, String]
[,, prefix, ,, suffix, ,, escape, ), ;, }, public, StrSubstitutor, (, final, StrLookup, <, ?, >, variableResolver, ), {]
[., mapLookup, (, valueMap, ), ,, prefix, ,, suffix, ,, escape, ), ;, }, public, StrSubstitutor, (, final, StrLookup, <]
[), ,, prefix, ,, suffix, ,, escape, ), ;, }, public, StrSubstitutor, (, final, StrLookup, <, ?, >, variableResolver, )]
[,, suffix, ,, escape, ), ;, }, public, StrSubstitutor, (, final, StrLookup, <, ?, >, variableResolver, ), {, this, (]
[,, escape, ), ;, }, public, StrSubstitutor, (, final, StrLookup, <, ?, >, variableResolver, ), {, this, (, variableResolver, ,]
[), ;, }, public, StrSubstitutor, (, final, StrLookup, <, ?, >, variableResolver, ), {, this, (, variableResolver, ,, DEFAULT_PREFIX, ,]
[,, DEFAULT_PREFIX, ,, DEFAULT_SUFFIX, ,, DEFAULT_ESCAPE, ), ;, }, public, StrSubstitutor, (, final, StrLookup, <, ?, >, variableResolver, ,, final]
[,, DEFAULT_SUFFIX, ,, DEFAULT_ESCAPE, ), ;, }, public, StrSubstitutor, (, final, StrLookup, <, ?, >, variableResolver, ,, final, String, prefix]
[,, DEFAULT_ESCAPE, ), ;, }, public, StrSubstitutor, (, final, StrLookup, <, ?, >, variableResolver, ,, final, String, prefix, ,, final]
[), ;, }, public, StrSubstitutor, (, final, StrLookup, <, ?, >, variableResolver, ,, final, String, prefix, ,, final, String, suffix]
[;, this, ., setVariablePrefix, (, prefix, ), ;, this, ., setVariableSuffix, (, suffix, ), ;, this, ., setEscapeChar, (, escape]
[., setVariableResolver, (, variableResolver, ), ;, this, ., setVariablePrefix, (, prefix, ), ;, this, ., setVariableSuffix, (, suffix, ), ;]
[), ;, this, ., setVariablePrefix, (, prefix, ), ;, this, ., setVariableSuffix, (, suffix, ), ;, this, ., setEscapeChar, (]
[;, this, ., setVariableSuffix, (, suffix, ), ;, this, ., setEscapeChar, (, escape, ), ;, }, public, StrSubstitutor, (, final]
[., setVariablePrefix, (, prefix, ), ;, this, ., setVariableSuffix, (, suffix, ), ;, this, ., setEscapeChar, (, escape, ), ;]
[), ;, this, ., setVariableSuffix, (, suffix, ), ;, this, ., setEscapeChar, (, escape, ), ;, }, public, StrSubstitutor, (]
[;, this, ., setEscapeChar, (, escape, ), ;, }, public, StrSubstitutor, (, final, StrLookup, <, ?, >, variableResolver, ,, final]
[., setVariableSuffix, (, suffix, ), ;, this, ., setEscapeChar, (, escape, ), ;, }, public, StrSubstitutor, (, final, StrLookup, <]
[), ;, this, ., setEscapeChar, (, escape, ), ;, }, public, StrSubstitutor, (, final, StrLookup, <, ?, >, variableResolver, ,]
[;, }, public, StrSubstitutor, (, final, StrLookup, <, ?, >, variableResolver, ,, final, StrMatcher, prefixMatcher, ,, final, StrMatcher, suffixMatcher, ,]
[., setEscapeChar, (, escape, ), ;, }, public, StrSubstitutor, (, final, StrLookup, <, ?, >, variableResolver, ,, final, StrMatcher, prefixMatcher]
[), ;, }, public, StrSubstitutor, (, final, StrLookup, <, ?, >, variableResolver, ,, final, StrMatcher, prefixMatcher, ,, final, StrMatcher, suffixMatcher]
[;, this, ., setVariablePrefixMatcher, (, prefixMatcher, ), ;, this, ., setVariableSuffixMatcher, (, suffixMatcher, ), ;, this, ., setEscapeChar, (, escape]
[., setVariableResolver, (, variableResolver, ), ;, this, ., setVariablePrefixMatcher, (, prefixMatcher, ), ;, this, ., setVariableSuffixMatcher, (, suffixMatcher, ), ;]
[), ;, this, ., setVariablePrefixMatcher, (, prefixMatcher, ), ;, this, ., setVariableSuffixMatcher, (, suffixMatcher, ), ;, this, ., setEscapeChar, (]
[;, this, ., setVariableSuffixMatcher, (, suffixMatcher, ), ;, this, ., setEscapeChar, (, escape, ), ;, }, public, String, replace, (]
[., setVariablePrefixMatcher, (, prefixMatcher, ), ;, this, ., setVariableSuffixMatcher, (, suffixMatcher, ), ;, this, ., setEscapeChar, (, escape, ), ;]
[), ;, this, ., setVariableSuffixMatcher, (, suffixMatcher, ), ;, this, ., setEscapeChar, (, escape, ), ;, }, public, String, replace]
[;, this, ., setEscapeChar, (, escape, ), ;, }, public, String, replace, (, final, String, source, ), {, if, (]
[., setVariableSuffixMatcher, (, suffixMatcher, ), ;, this, ., setEscapeChar, (, escape, ), ;, }, public, String, replace, (, final, String]
[), ;, this, ., setEscapeChar, (, escape, ), ;, }, public, String, replace, (, final, String, source, ), {, if]
[;, }, public, String, replace, (, final, String, source, ), {, if, (, source, ==, null, ), {, return, null]
[., setEscapeChar, (, escape, ), ;, }, public, String, replace, (, final, String, source, ), {, if, (, source, ==]
[), ;, }, public, String, replace, (, final, String, source, ), {, if, (, source, ==, null, ), {, return]
[), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, source, ), ;, if, (, substitute, (]
[==, null, ), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, source, ), ;, if, (]
[), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, source, ), ;, if, (, substitute, (]
[;, }, final, StrBuilder, buf, =, new, StrBuilder, (, source, ), ;, if, (, substitute, (, buf, ,, 0, ,]
[;, if, (, substitute, (, buf, ,, 0, ,, source, ., length, (, ), ), ==, false, ), {, return]
[), ;, if, (, substitute, (, buf, ,, 0, ,, source, ., length, (, ), ), ==, false, ), {]
[), {, return, source, ;, }, return, buf, ., toString, (, ), ;, }, public, String, replace, (, final, String]
[==, false, ), {, return, source, ;, }, return, buf, ., toString, (, ), ;, }, public, String, replace, (]
[,, 0, ,, source, ., length, (, ), ), ==, false, ), {, return, source, ;, }, return, buf, .]
[,, source, ., length, (, ), ), ==, false, ), {, return, source, ;, }, return, buf, ., toString, (]
[), ==, false, ), {, return, source, ;, }, return, buf, ., toString, (, ), ;, }, public, String, replace]
[., length, (, ), ), ==, false, ), {, return, source, ;, }, return, buf, ., toString, (, ), ;]
[), {, return, source, ;, }, return, buf, ., toString, (, ), ;, }, public, String, replace, (, final, String]
[;, }, return, buf, ., toString, (, ), ;, }, public, String, replace, (, final, String, source, ,, final, int]
[;, }, public, String, replace, (, final, String, source, ,, final, int, offset, ,, final, int, length, ), {, if]
[., toString, (, ), ;, }, public, String, replace, (, final, String, source, ,, final, int, offset, ,, final, int]
[), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,]
[==, null, ), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (]
[), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,]
[;, }, final, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,, offset, ,, length, )]
[;, if, (, substitute, (, buf, ,, 0, ,, length, ), ==, false, ), {, return, source, ., substring, (]
[., append, (, source, ,, offset, ,, length, ), ;, if, (, substitute, (, buf, ,, 0, ,, length, )]
[), ., append, (, source, ,, offset, ,, length, ), ;, if, (, substitute, (, buf, ,, 0, ,, length]
[,, offset, ,, length, ), ;, if, (, substitute, (, buf, ,, 0, ,, length, ), ==, false, ), {]
[,, length, ), ;, if, (, substitute, (, buf, ,, 0, ,, length, ), ==, false, ), {, return, source]
[), ;, if, (, substitute, (, buf, ,, 0, ,, length, ), ==, false, ), {, return, source, ., substring]
[), {, return, source, ., substring, (, offset, ,, offset, +, length, ), ;, }, return, buf, ., toString, (]
[==, false, ), {, return, source, ., substring, (, offset, ,, offset, +, length, ), ;, }, return, buf, .]
[,, 0, ,, length, ), ==, false, ), {, return, source, ., substring, (, offset, ,, offset, +, length, )]
[,, length, ), ==, false, ), {, return, source, ., substring, (, offset, ,, offset, +, length, ), ;, }]
[), ==, false, ), {, return, source, ., substring, (, offset, ,, offset, +, length, ), ;, }, return, buf]
[), {, return, source, ., substring, (, offset, ,, offset, +, length, ), ;, }, return, buf, ., toString, (]
[;, }, return, buf, ., toString, (, ), ;, }, public, String, replace, (, final, char, [, ], source, )]
[., substring, (, offset, ,, offset, +, length, ), ;, }, return, buf, ., toString, (, ), ;, }, public]
[,, offset, +, length, ), ;, }, return, buf, ., toString, (, ), ;, }, public, String, replace, (, final]
[), ;, }, return, buf, ., toString, (, ), ;, }, public, String, replace, (, final, char, [, ], source]
[+, length, ), ;, }, return, buf, ., toString, (, ), ;, }, public, String, replace, (, final, char, []
[), ;, }, return, buf, ., toString, (, ), ;, }, public, String, replace, (, final, char, [, ], source]
[;, }, public, String, replace, (, final, char, [, ], source, ), {, if, (, source, ==, null, ), {]
[., toString, (, ), ;, }, public, String, replace, (, final, char, [, ], source, ), {, if, (, source]
[), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, source, ., length, ), ., append, (]
[==, null, ), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, source, ., length, ), .]
[), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, source, ., length, ), ., append, (]
[;, }, final, StrBuilder, buf, =, new, StrBuilder, (, source, ., length, ), ., append, (, source, ), ;, substitute]
[;, substitute, (, buf, ,, 0, ,, source, ., length, ), ;, return, buf, ., toString, (, ), ;, }]
[., append, (, source, ), ;, substitute, (, buf, ,, 0, ,, source, ., length, ), ;, return, buf, .]
[), ., append, (, source, ), ;, substitute, (, buf, ,, 0, ,, source, ., length, ), ;, return, buf]
[., length, ), ., append, (, source, ), ;, substitute, (, buf, ,, 0, ,, source, ., length, ), ;]
[), ;, substitute, (, buf, ,, 0, ,, source, ., length, ), ;, return, buf, ., toString, (, ), ;]
[;, return, buf, ., toString, (, ), ;, }, public, String, replace, (, final, char, [, ], source, ,, final]
[,, 0, ,, source, ., length, ), ;, return, buf, ., toString, (, ), ;, }, public, String, replace, (]
[,, source, ., length, ), ;, return, buf, ., toString, (, ), ;, }, public, String, replace, (, final, char]
[), ;, return, buf, ., toString, (, ), ;, }, public, String, replace, (, final, char, [, ], source, ,]
[., length, ), ;, return, buf, ., toString, (, ), ;, }, public, String, replace, (, final, char, [, ]]
[;, }, public, String, replace, (, final, char, [, ], source, ,, final, int, offset, ,, final, int, length, )]
[., toString, (, ), ;, }, public, String, replace, (, final, char, [, ], source, ,, final, int, offset, ,]
[), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,]
[==, null, ), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (]
[), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,]
[;, }, final, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,, offset, ,, length, )]
[;, substitute, (, buf, ,, 0, ,, length, ), ;, return, buf, ., toString, (, ), ;, }, public, String]
[., append, (, source, ,, offset, ,, length, ), ;, substitute, (, buf, ,, 0, ,, length, ), ;, return]
[), ., append, (, source, ,, offset, ,, length, ), ;, substitute, (, buf, ,, 0, ,, length, ), ;]
[,, offset, ,, length, ), ;, substitute, (, buf, ,, 0, ,, length, ), ;, return, buf, ., toString, (]
[,, length, ), ;, substitute, (, buf, ,, 0, ,, length, ), ;, return, buf, ., toString, (, ), ;]
[), ;, substitute, (, buf, ,, 0, ,, length, ), ;, return, buf, ., toString, (, ), ;, }, public]
[;, return, buf, ., toString, (, ), ;, }, public, String, replace, (, final, StringBuffer, source, ), {, if, (]
[,, 0, ,, length, ), ;, return, buf, ., toString, (, ), ;, }, public, String, replace, (, final, StringBuffer]
[,, length, ), ;, return, buf, ., toString, (, ), ;, }, public, String, replace, (, final, StringBuffer, source, )]
[), ;, return, buf, ., toString, (, ), ;, }, public, String, replace, (, final, StringBuffer, source, ), {, if]
[;, }, public, String, replace, (, final, StringBuffer, source, ), {, if, (, source, ==, null, ), {, return, null]
[., toString, (, ), ;, }, public, String, replace, (, final, StringBuffer, source, ), {, if, (, source, ==, null]
[), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, source, ., length, (, ), ), .]
[==, null, ), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, source, ., length, (, )]
[), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, source, ., length, (, ), ), .]
[;, }, final, StrBuilder, buf, =, new, StrBuilder, (, source, ., length, (, ), ), ., append, (, source, )]
[;, substitute, (, buf, ,, 0, ,, buf, ., length, (, ), ), ;, return, buf, ., toString, (, )]
[., append, (, source, ), ;, substitute, (, buf, ,, 0, ,, buf, ., length, (, ), ), ;, return]
[), ., append, (, source, ), ;, substitute, (, buf, ,, 0, ,, buf, ., length, (, ), ), ;]
[., length, (, ), ), ., append, (, source, ), ;, substitute, (, buf, ,, 0, ,, buf, ., length]
[), ;, substitute, (, buf, ,, 0, ,, buf, ., length, (, ), ), ;, return, buf, ., toString, (]
[;, return, buf, ., toString, (, ), ;, }, public, String, replace, (, final, StringBuffer, source, ,, final, int, offset]
[,, 0, ,, buf, ., length, (, ), ), ;, return, buf, ., toString, (, ), ;, }, public, String]
[,, buf, ., length, (, ), ), ;, return, buf, ., toString, (, ), ;, }, public, String, replace, (]
[), ;, return, buf, ., toString, (, ), ;, }, public, String, replace, (, final, StringBuffer, source, ,, final, int]
[., length, (, ), ), ;, return, buf, ., toString, (, ), ;, }, public, String, replace, (, final, StringBuffer]
[;, }, public, String, replace, (, final, StringBuffer, source, ,, final, int, offset, ,, final, int, length, ), {, if]
[., toString, (, ), ;, }, public, String, replace, (, final, StringBuffer, source, ,, final, int, offset, ,, final, int]
[), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,]
[==, null, ), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (]
[), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,]
[;, }, final, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,, offset, ,, length, )]
[;, substitute, (, buf, ,, 0, ,, length, ), ;, return, buf, ., toString, (, ), ;, }, public, String]
[., append, (, source, ,, offset, ,, length, ), ;, substitute, (, buf, ,, 0, ,, length, ), ;, return]
[), ., append, (, source, ,, offset, ,, length, ), ;, substitute, (, buf, ,, 0, ,, length, ), ;]
[,, offset, ,, length, ), ;, substitute, (, buf, ,, 0, ,, length, ), ;, return, buf, ., toString, (]
[,, length, ), ;, substitute, (, buf, ,, 0, ,, length, ), ;, return, buf, ., toString, (, ), ;]
[), ;, substitute, (, buf, ,, 0, ,, length, ), ;, return, buf, ., toString, (, ), ;, }, public]
[;, return, buf, ., toString, (, ), ;, }, public, String, replace, (, CharSequence, source, ), {, if, (, source]
[,, 0, ,, length, ), ;, return, buf, ., toString, (, ), ;, }, public, String, replace, (, CharSequence, source]
[,, length, ), ;, return, buf, ., toString, (, ), ;, }, public, String, replace, (, CharSequence, source, ), {]
[), ;, return, buf, ., toString, (, ), ;, }, public, String, replace, (, CharSequence, source, ), {, if, (]
[;, }, public, String, replace, (, CharSequence, source, ), {, if, (, source, ==, null, ), {, return, null, ;]
[., toString, (, ), ;, }, public, String, replace, (, CharSequence, source, ), {, if, (, source, ==, null, )]
[), {, return, null, ;, }, return, replace, (, source, ,, 0, ,, source, ., length, (, ), ), ;]
[==, null, ), {, return, null, ;, }, return, replace, (, source, ,, 0, ,, source, ., length, (, )]
[), {, return, null, ;, }, return, replace, (, source, ,, 0, ,, source, ., length, (, ), ), ;]
[;, }, return, replace, (, source, ,, 0, ,, source, ., length, (, ), ), ;, }, public, String, replace]
[;, }, public, String, replace, (, CharSequence, source, ,, int, offset, ,, int, length, ), {, if, (, source, ==]
[,, 0, ,, source, ., length, (, ), ), ;, }, public, String, replace, (, CharSequence, source, ,, int, offset]
[,, source, ., length, (, ), ), ;, }, public, String, replace, (, CharSequence, source, ,, int, offset, ,, int]
[), ;, }, public, String, replace, (, CharSequence, source, ,, int, offset, ,, int, length, ), {, if, (, source]
[., length, (, ), ), ;, }, public, String, replace, (, CharSequence, source, ,, int, offset, ,, int, length, )]
[), {, return, null, ;, }, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,, offset]
[==, null, ), {, return, null, ;, }, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source]
[), {, return, null, ;, }, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,, offset]
[;, }, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,, offset, ,, length, ), ;]
[;, substitute, (, buf, ,, 0, ,, length, ), ;, return, buf, ., toString, (, ), ;, }, public, String]
[., append, (, source, ,, offset, ,, length, ), ;, substitute, (, buf, ,, 0, ,, length, ), ;, return]
[), ., append, (, source, ,, offset, ,, length, ), ;, substitute, (, buf, ,, 0, ,, length, ), ;]
[,, offset, ,, length, ), ;, substitute, (, buf, ,, 0, ,, length, ), ;, return, buf, ., toString, (]
[,, length, ), ;, substitute, (, buf, ,, 0, ,, length, ), ;, return, buf, ., toString, (, ), ;]
[), ;, substitute, (, buf, ,, 0, ,, length, ), ;, return, buf, ., toString, (, ), ;, }, public]
[;, return, buf, ., toString, (, ), ;, }, public, String, replace, (, final, StrBuilder, source, ), {, if, (]
[,, 0, ,, length, ), ;, return, buf, ., toString, (, ), ;, }, public, String, replace, (, final, StrBuilder]
[,, length, ), ;, return, buf, ., toString, (, ), ;, }, public, String, replace, (, final, StrBuilder, source, )]
[), ;, return, buf, ., toString, (, ), ;, }, public, String, replace, (, final, StrBuilder, source, ), {, if]
[;, }, public, String, replace, (, final, StrBuilder, source, ), {, if, (, source, ==, null, ), {, return, null]
[., toString, (, ), ;, }, public, String, replace, (, final, StrBuilder, source, ), {, if, (, source, ==, null]
[), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, source, ., length, (, ), ), .]
[==, null, ), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, source, ., length, (, )]
[), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, source, ., length, (, ), ), .]
[;, }, final, StrBuilder, buf, =, new, StrBuilder, (, source, ., length, (, ), ), ., append, (, source, )]
[;, substitute, (, buf, ,, 0, ,, buf, ., length, (, ), ), ;, return, buf, ., toString, (, )]
[., append, (, source, ), ;, substitute, (, buf, ,, 0, ,, buf, ., length, (, ), ), ;, return]
[), ., append, (, source, ), ;, substitute, (, buf, ,, 0, ,, buf, ., length, (, ), ), ;]
[., length, (, ), ), ., append, (, source, ), ;, substitute, (, buf, ,, 0, ,, buf, ., length]
[), ;, substitute, (, buf, ,, 0, ,, buf, ., length, (, ), ), ;, return, buf, ., toString, (]
[;, return, buf, ., toString, (, ), ;, }, public, String, replace, (, final, StrBuilder, source, ,, final, int, offset]
[,, 0, ,, buf, ., length, (, ), ), ;, return, buf, ., toString, (, ), ;, }, public, String]
[,, buf, ., length, (, ), ), ;, return, buf, ., toString, (, ), ;, }, public, String, replace, (]
[), ;, return, buf, ., toString, (, ), ;, }, public, String, replace, (, final, StrBuilder, source, ,, final, int]
[., length, (, ), ), ;, return, buf, ., toString, (, ), ;, }, public, String, replace, (, final, StrBuilder]
[;, }, public, String, replace, (, final, StrBuilder, source, ,, final, int, offset, ,, final, int, length, ), {, if]
[., toString, (, ), ;, }, public, String, replace, (, final, StrBuilder, source, ,, final, int, offset, ,, final, int]
[), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,]
[==, null, ), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (]
[), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,]
[;, }, final, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,, offset, ,, length, )]
[;, substitute, (, buf, ,, 0, ,, length, ), ;, return, buf, ., toString, (, ), ;, }, public, String]
[., append, (, source, ,, offset, ,, length, ), ;, substitute, (, buf, ,, 0, ,, length, ), ;, return]
[), ., append, (, source, ,, offset, ,, length, ), ;, substitute, (, buf, ,, 0, ,, length, ), ;]
[,, offset, ,, length, ), ;, substitute, (, buf, ,, 0, ,, length, ), ;, return, buf, ., toString, (]
[,, length, ), ;, substitute, (, buf, ,, 0, ,, length, ), ;, return, buf, ., toString, (, ), ;]
[), ;, substitute, (, buf, ,, 0, ,, length, ), ;, return, buf, ., toString, (, ), ;, }, public]
[;, return, buf, ., toString, (, ), ;, }, public, String, replace, (, final, Object, source, ), {, if, (]
[,, 0, ,, length, ), ;, return, buf, ., toString, (, ), ;, }, public, String, replace, (, final, Object]
[,, length, ), ;, return, buf, ., toString, (, ), ;, }, public, String, replace, (, final, Object, source, )]
[), ;, return, buf, ., toString, (, ), ;, }, public, String, replace, (, final, Object, source, ), {, if]
[;, }, public, String, replace, (, final, Object, source, ), {, if, (, source, ==, null, ), {, return, null]
[., toString, (, ), ;, }, public, String, replace, (, final, Object, source, ), {, if, (, source, ==, null]
[), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, ), ., append, (, source, ), ;]
[==, null, ), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, ), ., append, (, source]
[), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, ), ., append, (, source, ), ;]
[;, }, final, StrBuilder, buf, =, new, StrBuilder, (, ), ., append, (, source, ), ;, substitute, (, buf, ,]
[;, substitute, (, buf, ,, 0, ,, buf, ., length, (, ), ), ;, return, buf, ., toString, (, )]
[., append, (, source, ), ;, substitute, (, buf, ,, 0, ,, buf, ., length, (, ), ), ;, return]
[), ;, substitute, (, buf, ,, 0, ,, buf, ., length, (, ), ), ;, return, buf, ., toString, (]
[;, return, buf, ., toString, (, ), ;, }, public, boolean, replaceIn, (, final, StringBuffer, source, ), {, if, (]
[,, 0, ,, buf, ., length, (, ), ), ;, return, buf, ., toString, (, ), ;, }, public, boolean]
[,, buf, ., length, (, ), ), ;, return, buf, ., toString, (, ), ;, }, public, boolean, replaceIn, (]
[), ;, return, buf, ., toString, (, ), ;, }, public, boolean, replaceIn, (, final, StringBuffer, source, ), {, if]
[., length, (, ), ), ;, return, buf, ., toString, (, ), ;, }, public, boolean, replaceIn, (, final, StringBuffer]
[;, }, public, boolean, replaceIn, (, final, StringBuffer, source, ), {, if, (, source, ==, null, ), {, return, false]
[., toString, (, ), ;, }, public, boolean, replaceIn, (, final, StringBuffer, source, ), {, if, (, source, ==, null]
[), {, return, false, ;, }, return, replaceIn, (, source, ,, 0, ,, source, ., length, (, ), ), ;]
[==, null, ), {, return, false, ;, }, return, replaceIn, (, source, ,, 0, ,, source, ., length, (, )]
[), {, return, false, ;, }, return, replaceIn, (, source, ,, 0, ,, source, ., length, (, ), ), ;]
[;, }, return, replaceIn, (, source, ,, 0, ,, source, ., length, (, ), ), ;, }, public, boolean, replaceIn]
[;, }, public, boolean, replaceIn, (, final, StringBuffer, source, ,, final, int, offset, ,, final, int, length, ), {, if]
[,, 0, ,, source, ., length, (, ), ), ;, }, public, boolean, replaceIn, (, final, StringBuffer, source, ,, final]
[,, source, ., length, (, ), ), ;, }, public, boolean, replaceIn, (, final, StringBuffer, source, ,, final, int, offset]
[), ;, }, public, boolean, replaceIn, (, final, StringBuffer, source, ,, final, int, offset, ,, final, int, length, ), {]
[., length, (, ), ), ;, }, public, boolean, replaceIn, (, final, StringBuffer, source, ,, final, int, offset, ,, final]
[), {, return, false, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,]
[==, null, ), {, return, false, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (]
[), {, return, false, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,]
[;, }, final, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,, offset, ,, length, )]
[;, if, (, substitute, (, buf, ,, 0, ,, length, ), ==, false, ), {, return, false, ;, }, source]
[., append, (, source, ,, offset, ,, length, ), ;, if, (, substitute, (, buf, ,, 0, ,, length, )]
[), ., append, (, source, ,, offset, ,, length, ), ;, if, (, substitute, (, buf, ,, 0, ,, length]
[,, offset, ,, length, ), ;, if, (, substitute, (, buf, ,, 0, ,, length, ), ==, false, ), {]
[,, length, ), ;, if, (, substitute, (, buf, ,, 0, ,, length, ), ==, false, ), {, return, false]
[), ;, if, (, substitute, (, buf, ,, 0, ,, length, ), ==, false, ), {, return, false, ;, }]
[), {, return, false, ;, }, source, ., replace, (, offset, ,, offset, +, length, ,, buf, ., toString, (]
[==, false, ), {, return, false, ;, }, source, ., replace, (, offset, ,, offset, +, length, ,, buf, .]
[,, 0, ,, length, ), ==, false, ), {, return, false, ;, }, source, ., replace, (, offset, ,, offset]
[,, length, ), ==, false, ), {, return, false, ;, }, source, ., replace, (, offset, ,, offset, +, length]
[), ==, false, ), {, return, false, ;, }, source, ., replace, (, offset, ,, offset, +, length, ,, buf]
[), {, return, false, ;, }, source, ., replace, (, offset, ,, offset, +, length, ,, buf, ., toString, (]
[;, }, source, ., replace, (, offset, ,, offset, +, length, ,, buf, ., toString, (, ), ), ;, return]
[;, return, true, ;, }, public, boolean, replaceIn, (, StringBuilder, source, ), {, if, (, source, ==, null, ), {]
[., replace, (, offset, ,, offset, +, length, ,, buf, ., toString, (, ), ), ;, return, true, ;, }]
[,, offset, +, length, ,, buf, ., toString, (, ), ), ;, return, true, ;, }, public, boolean, replaceIn, (]
[,, buf, ., toString, (, ), ), ;, return, true, ;, }, public, boolean, replaceIn, (, StringBuilder, source, ), {]
[+, length, ,, buf, ., toString, (, ), ), ;, return, true, ;, }, public, boolean, replaceIn, (, StringBuilder, source]
[,, buf, ., toString, (, ), ), ;, return, true, ;, }, public, boolean, replaceIn, (, StringBuilder, source, ), {]
[), ;, return, true, ;, }, public, boolean, replaceIn, (, StringBuilder, source, ), {, if, (, source, ==, null, )]
[., toString, (, ), ), ;, return, true, ;, }, public, boolean, replaceIn, (, StringBuilder, source, ), {, if, (]
[;, }, public, boolean, replaceIn, (, StringBuilder, source, ), {, if, (, source, ==, null, ), {, return, false, ;]
[), {, return, false, ;, }, return, replaceIn, (, source, ,, 0, ,, source, ., length, (, ), ), ;]
[==, null, ), {, return, false, ;, }, return, replaceIn, (, source, ,, 0, ,, source, ., length, (, )]
[), {, return, false, ;, }, return, replaceIn, (, source, ,, 0, ,, source, ., length, (, ), ), ;]
[;, }, return, replaceIn, (, source, ,, 0, ,, source, ., length, (, ), ), ;, }, public, boolean, replaceIn]
[;, }, public, boolean, replaceIn, (, StringBuilder, source, ,, int, offset, ,, int, length, ), {, if, (, source, ==]
[,, 0, ,, source, ., length, (, ), ), ;, }, public, boolean, replaceIn, (, StringBuilder, source, ,, int, offset]
[,, source, ., length, (, ), ), ;, }, public, boolean, replaceIn, (, StringBuilder, source, ,, int, offset, ,, int]
[), ;, }, public, boolean, replaceIn, (, StringBuilder, source, ,, int, offset, ,, int, length, ), {, if, (, source]
[., length, (, ), ), ;, }, public, boolean, replaceIn, (, StringBuilder, source, ,, int, offset, ,, int, length, )]
[), {, return, false, ;, }, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,, offset]
[==, null, ), {, return, false, ;, }, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source]
[), {, return, false, ;, }, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,, offset]
[;, }, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,, offset, ,, length, ), ;]
[;, if, (, substitute, (, buf, ,, 0, ,, length, ), ==, false, ), {, return, false, ;, }, source]
[., append, (, source, ,, offset, ,, length, ), ;, if, (, substitute, (, buf, ,, 0, ,, length, )]
[), ., append, (, source, ,, offset, ,, length, ), ;, if, (, substitute, (, buf, ,, 0, ,, length]
[,, offset, ,, length, ), ;, if, (, substitute, (, buf, ,, 0, ,, length, ), ==, false, ), {]
[,, length, ), ;, if, (, substitute, (, buf, ,, 0, ,, length, ), ==, false, ), {, return, false]
[), ;, if, (, substitute, (, buf, ,, 0, ,, length, ), ==, false, ), {, return, false, ;, }]
[), {, return, false, ;, }, source, ., replace, (, offset, ,, offset, +, length, ,, buf, ., toString, (]
[==, false, ), {, return, false, ;, }, source, ., replace, (, offset, ,, offset, +, length, ,, buf, .]
[,, 0, ,, length, ), ==, false, ), {, return, false, ;, }, source, ., replace, (, offset, ,, offset]
[,, length, ), ==, false, ), {, return, false, ;, }, source, ., replace, (, offset, ,, offset, +, length]
[), ==, false, ), {, return, false, ;, }, source, ., replace, (, offset, ,, offset, +, length, ,, buf]
[), {, return, false, ;, }, source, ., replace, (, offset, ,, offset, +, length, ,, buf, ., toString, (]
[;, }, source, ., replace, (, offset, ,, offset, +, length, ,, buf, ., toString, (, ), ), ;, return]
[;, return, true, ;, }, public, boolean, replaceIn, (, final, StrBuilder, source, ), {, if, (, source, ==, null, )]
[., replace, (, offset, ,, offset, +, length, ,, buf, ., toString, (, ), ), ;, return, true, ;, }]
[,, offset, +, length, ,, buf, ., toString, (, ), ), ;, return, true, ;, }, public, boolean, replaceIn, (]
[,, buf, ., toString, (, ), ), ;, return, true, ;, }, public, boolean, replaceIn, (, final, StrBuilder, source, )]
[+, length, ,, buf, ., toString, (, ), ), ;, return, true, ;, }, public, boolean, replaceIn, (, final, StrBuilder]
[,, buf, ., toString, (, ), ), ;, return, true, ;, }, public, boolean, replaceIn, (, final, StrBuilder, source, )]
[), ;, return, true, ;, }, public, boolean, replaceIn, (, final, StrBuilder, source, ), {, if, (, source, ==, null]
[., toString, (, ), ), ;, return, true, ;, }, public, boolean, replaceIn, (, final, StrBuilder, source, ), {, if]
[;, }, public, boolean, replaceIn, (, final, StrBuilder, source, ), {, if, (, source, ==, null, ), {, return, false]
[), {, return, false, ;, }, return, substitute, (, source, ,, 0, ,, source, ., length, (, ), ), ;]
[==, null, ), {, return, false, ;, }, return, substitute, (, source, ,, 0, ,, source, ., length, (, )]
[), {, return, false, ;, }, return, substitute, (, source, ,, 0, ,, source, ., length, (, ), ), ;]
[;, }, return, substitute, (, source, ,, 0, ,, source, ., length, (, ), ), ;, }, public, boolean, replaceIn]
[;, }, public, boolean, replaceIn, (, final, StrBuilder, source, ,, final, int, offset, ,, final, int, length, ), {, if]
[,, 0, ,, source, ., length, (, ), ), ;, }, public, boolean, replaceIn, (, final, StrBuilder, source, ,, final]
[,, source, ., length, (, ), ), ;, }, public, boolean, replaceIn, (, final, StrBuilder, source, ,, final, int, offset]
[), ;, }, public, boolean, replaceIn, (, final, StrBuilder, source, ,, final, int, offset, ,, final, int, length, ), {]
[., length, (, ), ), ;, }, public, boolean, replaceIn, (, final, StrBuilder, source, ,, final, int, offset, ,, final]
[), {, return, false, ;, }, return, substitute, (, source, ,, offset, ,, length, ), ;, }, protected, boolean, substitute]
[==, null, ), {, return, false, ;, }, return, substitute, (, source, ,, offset, ,, length, ), ;, }, protected]
[), {, return, false, ;, }, return, substitute, (, source, ,, offset, ,, length, ), ;, }, protected, boolean, substitute]
[;, }, return, substitute, (, source, ,, offset, ,, length, ), ;, }, protected, boolean, substitute, (, final, StrBuilder, buf]
[;, }, protected, boolean, substitute, (, final, StrBuilder, buf, ,, final, int, offset, ,, final, int, length, ), {, return]
[,, offset, ,, length, ), ;, }, protected, boolean, substitute, (, final, StrBuilder, buf, ,, final, int, offset, ,, final]
[,, length, ), ;, }, protected, boolean, substitute, (, final, StrBuilder, buf, ,, final, int, offset, ,, final, int, length]
[), ;, }, protected, boolean, substitute, (, final, StrBuilder, buf, ,, final, int, offset, ,, final, int, length, ), {]
[;, }, private, int, substitute, (, final, StrBuilder, buf, ,, final, int, offset, ,, final, int, length, ,, List, <]
[>, 0, ;, }, private, int, substitute, (, final, StrBuilder, buf, ,, final, int, offset, ,, final, int, length, ,]
[,, offset, ,, length, ,, null, ), >, 0, ;, }, private, int, substitute, (, final, StrBuilder, buf, ,, final]
[,, length, ,, null, ), >, 0, ;, }, private, int, substitute, (, final, StrBuilder, buf, ,, final, int, offset]
[,, null, ), >, 0, ;, }, private, int, substitute, (, final, StrBuilder, buf, ,, final, int, offset, ,, final]
[), >, 0, ;, }, private, int, substitute, (, final, StrBuilder, buf, ,, final, int, offset, ,, final, int, length]
[;, }, private, int, substitute, (, final, StrBuilder, buf, ,, final, int, offset, ,, final, int, length, ,, List, <]
[;, final, StrMatcher, suffixMatcher, =, getVariableSuffixMatcher, (, ), ;, final, char, escape, =, getEscapeChar, (, ), ;, final, boolean, top]
[;, final, char, escape, =, getEscapeChar, (, ), ;, final, boolean, top, =, priorVariables, ==, null, ;, boolean, altered, =]
[;, final, boolean, top, =, priorVariables, ==, null, ;, boolean, altered, =, false, ;, int, lengthChange, =, 0, ;, char]
[;, boolean, altered, =, false, ;, int, lengthChange, =, 0, ;, char, [, ], chars, =, buf, ., buffer, ;]
[==, null, ;, boolean, altered, =, false, ;, int, lengthChange, =, 0, ;, char, [, ], chars, =, buf, .]
[;, boolean, altered, =, false, ;, int, lengthChange, =, 0, ;, char, [, ], chars, =, buf, ., buffer, ;]
[;, int, lengthChange, =, 0, ;, char, [, ], chars, =, buf, ., buffer, ;, int, bufEnd, =, offset, +]
[;, char, [, ], chars, =, buf, ., buffer, ;, int, bufEnd, =, offset, +, length, ;, int, pos, =]
[;, int, bufEnd, =, offset, +, length, ;, int, pos, =, offset, ;, while, (, pos, <, bufEnd, ), {]
[., buffer, ;, int, bufEnd, =, offset, +, length, ;, int, pos, =, offset, ;, while, (, pos, <, bufEnd]
[;, int, pos, =, offset, ;, while, (, pos, <, bufEnd, ), {, final, int, startMatchLen, =, prefixMatcher, ., isMatch]
[+, length, ;, int, pos, =, offset, ;, while, (, pos, <, bufEnd, ), {, final, int, startMatchLen, =, prefixMatcher]
[;, int, pos, =, offset, ;, while, (, pos, <, bufEnd, ), {, final, int, startMatchLen, =, prefixMatcher, ., isMatch]
[;, while, (, pos, <, bufEnd, ), {, final, int, startMatchLen, =, prefixMatcher, ., isMatch, (, chars, ,, pos, ,]
[), {, final, int, startMatchLen, =, prefixMatcher, ., isMatch, (, chars, ,, pos, ,, offset, ,, bufEnd, ), ;, if]
[<, bufEnd, ), {, final, int, startMatchLen, =, prefixMatcher, ., isMatch, (, chars, ,, pos, ,, offset, ,, bufEnd, )]
[), {, final, int, startMatchLen, =, prefixMatcher, ., isMatch, (, chars, ,, pos, ,, offset, ,, bufEnd, ), ;, if]
[;, if, (, startMatchLen, ==, 0, ), {, pos, ++, ;, }, else, {, if, (, pos, >, offset, &&]
[., isMatch, (, chars, ,, pos, ,, offset, ,, bufEnd, ), ;, if, (, startMatchLen, ==, 0, ), {, pos]
[,, pos, ,, offset, ,, bufEnd, ), ;, if, (, startMatchLen, ==, 0, ), {, pos, ++, ;, }, else]
[,, offset, ,, bufEnd, ), ;, if, (, startMatchLen, ==, 0, ), {, pos, ++, ;, }, else, {, if]
[,, bufEnd, ), ;, if, (, startMatchLen, ==, 0, ), {, pos, ++, ;, }, else, {, if, (, pos]
[), ;, if, (, startMatchLen, ==, 0, ), {, pos, ++, ;, }, else, {, if, (, pos, >, offset]
[), {, pos, ++, ;, }, else, {, if, (, pos, >, offset, &&, chars, [, pos, -, 1, ]]
[==, 0, ), {, pos, ++, ;, }, else, {, if, (, pos, >, offset, &&, chars, [, pos, -]
[), {, pos, ++, ;, }, else, {, if, (, pos, >, offset, &&, chars, [, pos, -, 1, ]]
[;, }, else, {, if, (, pos, >, offset, &&, chars, [, pos, -, 1, ], ==, escape, ), {]
[++, ;, }, else, {, if, (, pos, >, offset, &&, chars, [, pos, -, 1, ], ==, escape, )]
[), {, buf, ., deleteCharAt, (, pos, -, 1, ), ;, chars, =, buf, ., buffer, ;, lengthChange, --, ;]
[&&, chars, [, pos, -, 1, ], ==, escape, ), {, buf, ., deleteCharAt, (, pos, -, 1, ), ;]
[>, offset, &&, chars, [, pos, -, 1, ], ==, escape, ), {, buf, ., deleteCharAt, (, pos, -, 1]
[&&, chars, [, pos, -, 1, ], ==, escape, ), {, buf, ., deleteCharAt, (, pos, -, 1, ), ;]
[), {, buf, ., deleteCharAt, (, pos, -, 1, ), ;, chars, =, buf, ., buffer, ;, lengthChange, --, ;]
[==, escape, ), {, buf, ., deleteCharAt, (, pos, -, 1, ), ;, chars, =, buf, ., buffer, ;, lengthChange]
[[, pos, -, 1, ], ==, escape, ), {, buf, ., deleteCharAt, (, pos, -, 1, ), ;, chars, =]
[], ==, escape, ), {, buf, ., deleteCharAt, (, pos, -, 1, ), ;, chars, =, buf, ., buffer, ;]
[-, 1, ], ==, escape, ), {, buf, ., deleteCharAt, (, pos, -, 1, ), ;, chars, =, buf, .]
[], ==, escape, ), {, buf, ., deleteCharAt, (, pos, -, 1, ), ;, chars, =, buf, ., buffer, ;]
[), {, buf, ., deleteCharAt, (, pos, -, 1, ), ;, chars, =, buf, ., buffer, ;, lengthChange, --, ;]
[;, chars, =, buf, ., buffer, ;, lengthChange, --, ;, altered, =, true, ;, bufEnd, --, ;, }, else, {]
[., deleteCharAt, (, pos, -, 1, ), ;, chars, =, buf, ., buffer, ;, lengthChange, --, ;, altered, =, true]
[), ;, chars, =, buf, ., buffer, ;, lengthChange, --, ;, altered, =, true, ;, bufEnd, --, ;, }, else]
[-, 1, ), ;, chars, =, buf, ., buffer, ;, lengthChange, --, ;, altered, =, true, ;, bufEnd, --, ;]
[), ;, chars, =, buf, ., buffer, ;, lengthChange, --, ;, altered, =, true, ;, bufEnd, --, ;, }, else]
[=, buf, ., buffer, ;, lengthChange, --, ;, altered, =, true, ;, bufEnd, --, ;, }, else, {, final, int]
[;, lengthChange, --, ;, altered, =, true, ;, bufEnd, --, ;, }, else, {, final, int, startPos, =, pos, ;]
[., buffer, ;, lengthChange, --, ;, altered, =, true, ;, bufEnd, --, ;, }, else, {, final, int, startPos, =]
[;, altered, =, true, ;, bufEnd, --, ;, }, else, {, final, int, startPos, =, pos, ;, pos, +=, startMatchLen]
[--, ;, altered, =, true, ;, bufEnd, --, ;, }, else, {, final, int, startPos, =, pos, ;, pos, +=]
[=, true, ;, bufEnd, --, ;, }, else, {, final, int, startPos, =, pos, ;, pos, +=, startMatchLen, ;, int]
[;, bufEnd, --, ;, }, else, {, final, int, startPos, =, pos, ;, pos, +=, startMatchLen, ;, int, endMatchLen, =]
[;, }, else, {, final, int, startPos, =, pos, ;, pos, +=, startMatchLen, ;, int, endMatchLen, =, 0, ;, int]
[--, ;, }, else, {, final, int, startPos, =, pos, ;, pos, +=, startMatchLen, ;, int, endMatchLen, =, 0, ;]
[;, pos, +=, startMatchLen, ;, int, endMatchLen, =, 0, ;, int, nestedVarCount, =, 0, ;, while, (, pos, <, bufEnd]
[+=, startMatchLen, ;, int, endMatchLen, =, 0, ;, int, nestedVarCount, =, 0, ;, while, (, pos, <, bufEnd, ), {]
[;, int, endMatchLen, =, 0, ;, int, nestedVarCount, =, 0, ;, while, (, pos, <, bufEnd, ), {, if, (]
[;, int, nestedVarCount, =, 0, ;, while, (, pos, <, bufEnd, ), {, if, (, isEnableSubstitutionInVariables, (, ), &&, (]
[;, while, (, pos, <, bufEnd, ), {, if, (, isEnableSubstitutionInVariables, (, ), &&, (, endMatchLen, =, prefixMatcher, ., isMatch]
[), {, if, (, isEnableSubstitutionInVariables, (, ), &&, (, endMatchLen, =, prefixMatcher, ., isMatch, (, chars, ,, pos, ,, offset]
[<, bufEnd, ), {, if, (, isEnableSubstitutionInVariables, (, ), &&, (, endMatchLen, =, prefixMatcher, ., isMatch, (, chars, ,, pos]
[), {, if, (, isEnableSubstitutionInVariables, (, ), &&, (, endMatchLen, =, prefixMatcher, ., isMatch, (, chars, ,, pos, ,, offset]
[), {, nestedVarCount, ++, ;, pos, +=, endMatchLen, ;, continue, ;, }, endMatchLen, =, suffixMatcher, ., isMatch, (, chars, ,]
[&&, (, endMatchLen, =, prefixMatcher, ., isMatch, (, chars, ,, pos, ,, offset, ,, bufEnd, ), ), !=, 0, )]
[), {, nestedVarCount, ++, ;, pos, +=, endMatchLen, ;, continue, ;, }, endMatchLen, =, suffixMatcher, ., isMatch, (, chars, ,]
[!=, 0, ), {, nestedVarCount, ++, ;, pos, +=, endMatchLen, ;, continue, ;, }, endMatchLen, =, suffixMatcher, ., isMatch, (]
[=, prefixMatcher, ., isMatch, (, chars, ,, pos, ,, offset, ,, bufEnd, ), ), !=, 0, ), {, nestedVarCount, ++]
[), !=, 0, ), {, nestedVarCount, ++, ;, pos, +=, endMatchLen, ;, continue, ;, }, endMatchLen, =, suffixMatcher, ., isMatch]
[., isMatch, (, chars, ,, pos, ,, offset, ,, bufEnd, ), ), !=, 0, ), {, nestedVarCount, ++, ;, pos]
[,, pos, ,, offset, ,, bufEnd, ), ), !=, 0, ), {, nestedVarCount, ++, ;, pos, +=, endMatchLen, ;, continue]
[,, offset, ,, bufEnd, ), ), !=, 0, ), {, nestedVarCount, ++, ;, pos, +=, endMatchLen, ;, continue, ;, }]
[,, bufEnd, ), ), !=, 0, ), {, nestedVarCount, ++, ;, pos, +=, endMatchLen, ;, continue, ;, }, endMatchLen, =]
[), ), !=, 0, ), {, nestedVarCount, ++, ;, pos, +=, endMatchLen, ;, continue, ;, }, endMatchLen, =, suffixMatcher, .]
[), {, nestedVarCount, ++, ;, pos, +=, endMatchLen, ;, continue, ;, }, endMatchLen, =, suffixMatcher, ., isMatch, (, chars, ,]
[;, pos, +=, endMatchLen, ;, continue, ;, }, endMatchLen, =, suffixMatcher, ., isMatch, (, chars, ,, pos, ,, offset, ,]
[++, ;, pos, +=, endMatchLen, ;, continue, ;, }, endMatchLen, =, suffixMatcher, ., isMatch, (, chars, ,, pos, ,, offset]
[+=, endMatchLen, ;, continue, ;, }, endMatchLen, =, suffixMatcher, ., isMatch, (, chars, ,, pos, ,, offset, ,, bufEnd, )]
[;, continue, ;, }, endMatchLen, =, suffixMatcher, ., isMatch, (, chars, ,, pos, ,, offset, ,, bufEnd, ), ;, if]
[=, suffixMatcher, ., isMatch, (, chars, ,, pos, ,, offset, ,, bufEnd, ), ;, if, (, endMatchLen, ==, 0, )]
[;, if, (, endMatchLen, ==, 0, ), {, pos, ++, ;, }, else, {, if, (, nestedVarCount, ==, 0, )]
[., isMatch, (, chars, ,, pos, ,, offset, ,, bufEnd, ), ;, if, (, endMatchLen, ==, 0, ), {, pos]
[,, pos, ,, offset, ,, bufEnd, ), ;, if, (, endMatchLen, ==, 0, ), {, pos, ++, ;, }, else]
[,, offset, ,, bufEnd, ), ;, if, (, endMatchLen, ==, 0, ), {, pos, ++, ;, }, else, {, if]
[,, bufEnd, ), ;, if, (, endMatchLen, ==, 0, ), {, pos, ++, ;, }, else, {, if, (, nestedVarCount]
[), ;, if, (, endMatchLen, ==, 0, ), {, pos, ++, ;, }, else, {, if, (, nestedVarCount, ==, 0]
[), {, pos, ++, ;, }, else, {, if, (, nestedVarCount, ==, 0, ), {, String, varName, =, new, String]
[==, 0, ), {, pos, ++, ;, }, else, {, if, (, nestedVarCount, ==, 0, ), {, String, varName, =]
[), {, pos, ++, ;, }, else, {, if, (, nestedVarCount, ==, 0, ), {, String, varName, =, new, String]
[;, }, else, {, if, (, nestedVarCount, ==, 0, ), {, String, varName, =, new, String, (, chars, ,, startPos]
[++, ;, }, else, {, if, (, nestedVarCount, ==, 0, ), {, String, varName, =, new, String, (, chars, ,]
[), {, String, varName, =, new, String, (, chars, ,, startPos, +, startMatchLen, ,, pos, -, startPos, -, startMatchLen, )]
[==, 0, ), {, String, varName, =, new, String, (, chars, ,, startPos, +, startMatchLen, ,, pos, -, startPos, -]
[), {, String, varName, =, new, String, (, chars, ,, startPos, +, startMatchLen, ,, pos, -, startPos, -, startMatchLen, )]
[;, if, (, isEnableSubstitutionInVariables, (, ), ), {, final, StrBuilder, bufName, =, new, StrBuilder, (, varName, ), ;, substitute, (]
[,, startPos, +, startMatchLen, ,, pos, -, startPos, -, startMatchLen, ), ;, if, (, isEnableSubstitutionInVariables, (, ), ), {, final]
[,, pos, -, startPos, -, startMatchLen, ), ;, if, (, isEnableSubstitutionInVariables, (, ), ), {, final, StrBuilder, bufName, =, new]
[+, startMatchLen, ,, pos, -, startPos, -, startMatchLen, ), ;, if, (, isEnableSubstitutionInVariables, (, ), ), {, final, StrBuilder, bufName]
[,, pos, -, startPos, -, startMatchLen, ), ;, if, (, isEnableSubstitutionInVariables, (, ), ), {, final, StrBuilder, bufName, =, new]
[), ;, if, (, isEnableSubstitutionInVariables, (, ), ), {, final, StrBuilder, bufName, =, new, StrBuilder, (, varName, ), ;, substitute]
[-, startMatchLen, ), ;, if, (, isEnableSubstitutionInVariables, (, ), ), {, final, StrBuilder, bufName, =, new, StrBuilder, (, varName, )]
[-, startPos, -, startMatchLen, ), ;, if, (, isEnableSubstitutionInVariables, (, ), ), {, final, StrBuilder, bufName, =, new, StrBuilder, (]
[-, startMatchLen, ), ;, if, (, isEnableSubstitutionInVariables, (, ), ), {, final, StrBuilder, bufName, =, new, StrBuilder, (, varName, )]
[), ;, if, (, isEnableSubstitutionInVariables, (, ), ), {, final, StrBuilder, bufName, =, new, StrBuilder, (, varName, ), ;, substitute]
[), {, final, StrBuilder, bufName, =, new, StrBuilder, (, varName, ), ;, substitute, (, bufName, ,, 0, ,, bufName, .]
[;, substitute, (, bufName, ,, 0, ,, bufName, ., length, (, ), ), ;, varName, =, bufName, ., toString, (]
[), ;, substitute, (, bufName, ,, 0, ,, bufName, ., length, (, ), ), ;, varName, =, bufName, ., toString]
[;, varName, =, bufName, ., toString, (, ), ;, }, pos, +=, endMatchLen, ;, final, int, endPos, =, pos, ;]
[,, 0, ,, bufName, ., length, (, ), ), ;, varName, =, bufName, ., toString, (, ), ;, }, pos]
[,, bufName, ., length, (, ), ), ;, varName, =, bufName, ., toString, (, ), ;, }, pos, +=, endMatchLen]
[), ;, varName, =, bufName, ., toString, (, ), ;, }, pos, +=, endMatchLen, ;, final, int, endPos, =, pos]
[., length, (, ), ), ;, varName, =, bufName, ., toString, (, ), ;, }, pos, +=, endMatchLen, ;, final]
[=, bufName, ., toString, (, ), ;, }, pos, +=, endMatchLen, ;, final, int, endPos, =, pos, ;, if, (]
[;, }, pos, +=, endMatchLen, ;, final, int, endPos, =, pos, ;, if, (, priorVariables, ==, null, ), {, priorVariables]
[., toString, (, ), ;, }, pos, +=, endMatchLen, ;, final, int, endPos, =, pos, ;, if, (, priorVariables, ==]
[+=, endMatchLen, ;, final, int, endPos, =, pos, ;, if, (, priorVariables, ==, null, ), {, priorVariables, =, new, ArrayList]
[;, final, int, endPos, =, pos, ;, if, (, priorVariables, ==, null, ), {, priorVariables, =, new, ArrayList, <, String]
[;, if, (, priorVariables, ==, null, ), {, priorVariables, =, new, ArrayList, <, String, >, (, ), ;, priorVariables, .]
[), {, priorVariables, =, new, ArrayList, <, String, >, (, ), ;, priorVariables, ., add, (, new, String, (, chars]
[==, null, ), {, priorVariables, =, new, ArrayList, <, String, >, (, ), ;, priorVariables, ., add, (, new, String]
[), {, priorVariables, =, new, ArrayList, <, String, >, (, ), ;, priorVariables, ., add, (, new, String, (, chars]
[=, new, ArrayList, <, String, >, (, ), ;, priorVariables, ., add, (, new, String, (, chars, ,, offset, ,]
[;, priorVariables, ., add, (, new, String, (, chars, ,, offset, ,, length, ), ), ;, }, checkCyclicSubstitution, (, varName]
[;, }, checkCyclicSubstitution, (, varName, ,, priorVariables, ), ;, priorVariables, ., add, (, varName, ), ;, final, String, varValue, =]
[., add, (, new, String, (, chars, ,, offset, ,, length, ), ), ;, }, checkCyclicSubstitution, (, varName, ,, priorVariables]
[), ;, }, checkCyclicSubstitution, (, varName, ,, priorVariables, ), ;, priorVariables, ., add, (, varName, ), ;, final, String, varValue]
[,, offset, ,, length, ), ), ;, }, checkCyclicSubstitution, (, varName, ,, priorVariables, ), ;, priorVariables, ., add, (, varName]
[,, length, ), ), ;, }, checkCyclicSubstitution, (, varName, ,, priorVariables, ), ;, priorVariables, ., add, (, varName, ), ;]
[), ), ;, }, checkCyclicSubstitution, (, varName, ,, priorVariables, ), ;, priorVariables, ., add, (, varName, ), ;, final, String]
[;, priorVariables, ., add, (, varName, ), ;, final, String, varValue, =, resolveVariable, (, varName, ,, buf, ,, startPos, ,]
[,, priorVariables, ), ;, priorVariables, ., add, (, varName, ), ;, final, String, varValue, =, resolveVariable, (, varName, ,, buf]
[), ;, priorVariables, ., add, (, varName, ), ;, final, String, varValue, =, resolveVariable, (, varName, ,, buf, ,, startPos]
[;, final, String, varValue, =, resolveVariable, (, varName, ,, buf, ,, startPos, ,, endPos, ), ;, if, (, varValue, !=]
[., add, (, varName, ), ;, final, String, varValue, =, resolveVariable, (, varName, ,, buf, ,, startPos, ,, endPos, )]
[), ;, final, String, varValue, =, resolveVariable, (, varName, ,, buf, ,, startPos, ,, endPos, ), ;, if, (, varValue]
[;, if, (, varValue, !=, null, ), {, final, int, varLen, =, varValue, ., length, (, ), ;, buf, .]
[,, buf, ,, startPos, ,, endPos, ), ;, if, (, varValue, !=, null, ), {, final, int, varLen, =, varValue]
[,, startPos, ,, endPos, ), ;, if, (, varValue, !=, null, ), {, final, int, varLen, =, varValue, ., length]
[,, endPos, ), ;, if, (, varValue, !=, null, ), {, final, int, varLen, =, varValue, ., length, (, )]
[), ;, if, (, varValue, !=, null, ), {, final, int, varLen, =, varValue, ., length, (, ), ;, buf]
[), {, final, int, varLen, =, varValue, ., length, (, ), ;, buf, ., replace, (, startPos, ,, endPos, ,]
[!=, null, ), {, final, int, varLen, =, varValue, ., length, (, ), ;, buf, ., replace, (, startPos, ,]
[), {, final, int, varLen, =, varValue, ., length, (, ), ;, buf, ., replace, (, startPos, ,, endPos, ,]
[;, buf, ., replace, (, startPos, ,, endPos, ,, varValue, ), ;, altered, =, true, ;, int, change, =, substitute]
[., length, (, ), ;, buf, ., replace, (, startPos, ,, endPos, ,, varValue, ), ;, altered, =, true, ;]
[;, altered, =, true, ;, int, change, =, substitute, (, buf, ,, startPos, ,, varLen, ,, priorVariables, ), ;, change]
[., replace, (, startPos, ,, endPos, ,, varValue, ), ;, altered, =, true, ;, int, change, =, substitute, (, buf]
[,, endPos, ,, varValue, ), ;, altered, =, true, ;, int, change, =, substitute, (, buf, ,, startPos, ,, varLen]
[,, varValue, ), ;, altered, =, true, ;, int, change, =, substitute, (, buf, ,, startPos, ,, varLen, ,, priorVariables]
[), ;, altered, =, true, ;, int, change, =, substitute, (, buf, ,, startPos, ,, varLen, ,, priorVariables, ), ;]
[=, true, ;, int, change, =, substitute, (, buf, ,, startPos, ,, varLen, ,, priorVariables, ), ;, change, =, change]
[;, int, change, =, substitute, (, buf, ,, startPos, ,, varLen, ,, priorVariables, ), ;, change, =, change, +, varLen]
[;, change, =, change, +, varLen, -, (, endPos, -, startPos, ), ;, pos, +=, change, ;, bufEnd, +=, change]
[,, startPos, ,, varLen, ,, priorVariables, ), ;, change, =, change, +, varLen, -, (, endPos, -, startPos, ), ;]
[,, varLen, ,, priorVariables, ), ;, change, =, change, +, varLen, -, (, endPos, -, startPos, ), ;, pos, +=]
[,, priorVariables, ), ;, change, =, change, +, varLen, -, (, endPos, -, startPos, ), ;, pos, +=, change, ;]
[), ;, change, =, change, +, varLen, -, (, endPos, -, startPos, ), ;, pos, +=, change, ;, bufEnd, +=]
[=, change, +, varLen, -, (, endPos, -, startPos, ), ;, pos, +=, change, ;, bufEnd, +=, change, ;, lengthChange]
[;, pos, +=, change, ;, bufEnd, +=, change, ;, lengthChange, +=, change, ;, chars, =, buf, ., buffer, ;, }]
[-, (, endPos, -, startPos, ), ;, pos, +=, change, ;, bufEnd, +=, change, ;, lengthChange, +=, change, ;, chars]
[+, varLen, -, (, endPos, -, startPos, ), ;, pos, +=, change, ;, bufEnd, +=, change, ;, lengthChange, +=, change]
[-, (, endPos, -, startPos, ), ;, pos, +=, change, ;, bufEnd, +=, change, ;, lengthChange, +=, change, ;, chars]
[;, pos, +=, change, ;, bufEnd, +=, change, ;, lengthChange, +=, change, ;, chars, =, buf, ., buffer, ;, }]
[), ;, pos, +=, change, ;, bufEnd, +=, change, ;, lengthChange, +=, change, ;, chars, =, buf, ., buffer, ;]
[-, startPos, ), ;, pos, +=, change, ;, bufEnd, +=, change, ;, lengthChange, +=, change, ;, chars, =, buf, .]
[), ;, pos, +=, change, ;, bufEnd, +=, change, ;, lengthChange, +=, change, ;, chars, =, buf, ., buffer, ;]
[+=, change, ;, bufEnd, +=, change, ;, lengthChange, +=, change, ;, chars, =, buf, ., buffer, ;, }, priorVariables, .]
[;, bufEnd, +=, change, ;, lengthChange, +=, change, ;, chars, =, buf, ., buffer, ;, }, priorVariables, ., remove, (]
[+=, change, ;, lengthChange, +=, change, ;, chars, =, buf, ., buffer, ;, }, priorVariables, ., remove, (, priorVariables, .]
[;, lengthChange, +=, change, ;, chars, =, buf, ., buffer, ;, }, priorVariables, ., remove, (, priorVariables, ., size, (]
[+=, change, ;, chars, =, buf, ., buffer, ;, }, priorVariables, ., remove, (, priorVariables, ., size, (, ), -]
[;, chars, =, buf, ., buffer, ;, }, priorVariables, ., remove, (, priorVariables, ., size, (, ), -, 1, )]
[=, buf, ., buffer, ;, }, priorVariables, ., remove, (, priorVariables, ., size, (, ), -, 1, ), ;, break]
[;, }, priorVariables, ., remove, (, priorVariables, ., size, (, ), -, 1, ), ;, break, ;, }, else, {]
[., buffer, ;, }, priorVariables, ., remove, (, priorVariables, ., size, (, ), -, 1, ), ;, break, ;, }]
[;, break, ;, }, else, {, nestedVarCount, --, ;, pos, +=, endMatchLen, ;, }, }, }, }, }, }, if]
[., remove, (, priorVariables, ., size, (, ), -, 1, ), ;, break, ;, }, else, {, nestedVarCount, --, ;]
[), ;, break, ;, }, else, {, nestedVarCount, --, ;, pos, +=, endMatchLen, ;, }, }, }, }, }, }]
[-, 1, ), ;, break, ;, }, else, {, nestedVarCount, --, ;, pos, +=, endMatchLen, ;, }, }, }, }]
[., size, (, ), -, 1, ), ;, break, ;, }, else, {, nestedVarCount, --, ;, pos, +=, endMatchLen, ;]
[), ;, break, ;, }, else, {, nestedVarCount, --, ;, pos, +=, endMatchLen, ;, }, }, }, }, }, }]
[;, pos, +=, endMatchLen, ;, }, }, }, }, }, }, if, (, top, ), {, return, altered, ?, 1]
[--, ;, pos, +=, endMatchLen, ;, }, }, }, }, }, }, if, (, top, ), {, return, altered, ?]
[+=, endMatchLen, ;, }, }, }, }, }, }, if, (, top, ), {, return, altered, ?, 1, :, 0]
[;, }, }, }, }, }, }, if, (, top, ), {, return, altered, ?, 1, :, 0, ;, }]
[), {, return, altered, ?, 1, :, 0, ;, }, return, lengthChange, ;, }, private, void, checkCyclicSubstitution, (, final, String]
[;, }, return, lengthChange, ;, }, private, void, checkCyclicSubstitution, (, final, String, varName, ,, final, List, <, String, >, priorVariables]
[?, 1, :, 0, ;, }, return, lengthChange, ;, }, private, void, checkCyclicSubstitution, (, final, String, varName, ,, final, List]
[:, 0, ;, }, return, lengthChange, ;, }, private, void, checkCyclicSubstitution, (, final, String, varName, ,, final, List, <, String]
[;, }, return, lengthChange, ;, }, private, void, checkCyclicSubstitution, (, final, String, varName, ,, final, List, <, String, >, priorVariables]
[;, }, private, void, checkCyclicSubstitution, (, final, String, varName, ,, final, List, <, String, >, priorVariables, ), {, if, (]
[), {, return, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, 256, ), ;, buf, ., append, (, "Infinite loop in property interpolation of "]
[==, false, ), {, return, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, 256, ), ;, buf, ., append]
[., contains, (, varName, ), ==, false, ), {, return, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, 256]
[), ==, false, ), {, return, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, 256, ), ;, buf, .]
[), {, return, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, 256, ), ;, buf, ., append, (, "Infinite loop in property interpolation of "]
[;, buf, ., append, (, "Infinite loop in property interpolation of ", ), ;, buf, ., append, (, priorVariables, ., remove, (, 0, ), ), ;]
[), ;, buf, ., append, (, "Infinite loop in property interpolation of ", ), ;, buf, ., append, (, priorVariables, ., remove, (, 0, ), )]
[;, buf, ., append, (, priorVariables, ., remove, (, 0, ), ), ;, buf, ., append, (, ": ", ), ;]
[., append, (, "Infinite loop in property interpolation of ", ), ;, buf, ., append, (, priorVariables, ., remove, (, 0, ), ), ;, buf, .]
[), ;, buf, ., append, (, priorVariables, ., remove, (, 0, ), ), ;, buf, ., append, (, ": ", )]
[;, buf, ., append, (, ": ", ), ;, buf, ., appendWithSeparators, (, priorVariables, ,, "->", ), ;, throw, new, IllegalStateException]
[., append, (, priorVariables, ., remove, (, 0, ), ), ;, buf, ., append, (, ": ", ), ;, buf, .]
[), ;, buf, ., append, (, ": ", ), ;, buf, ., appendWithSeparators, (, priorVariables, ,, "->", ), ;, throw, new]
[., remove, (, 0, ), ), ;, buf, ., append, (, ": ", ), ;, buf, ., appendWithSeparators, (, priorVariables, ,]
[), ), ;, buf, ., append, (, ": ", ), ;, buf, ., appendWithSeparators, (, priorVariables, ,, "->", ), ;, throw]
[;, buf, ., appendWithSeparators, (, priorVariables, ,, "->", ), ;, throw, new, IllegalStateException, (, buf, ., toString, (, ), )]
[., append, (, ": ", ), ;, buf, ., appendWithSeparators, (, priorVariables, ,, "->", ), ;, throw, new, IllegalStateException, (, buf]
[), ;, buf, ., appendWithSeparators, (, priorVariables, ,, "->", ), ;, throw, new, IllegalStateException, (, buf, ., toString, (, )]
[;, throw, new, IllegalStateException, (, buf, ., toString, (, ), ), ;, }, protected, String, resolveVariable, (, final, String, variableName]
[., appendWithSeparators, (, priorVariables, ,, "->", ), ;, throw, new, IllegalStateException, (, buf, ., toString, (, ), ), ;, }]
[,, "->", ), ;, throw, new, IllegalStateException, (, buf, ., toString, (, ), ), ;, }, protected, String, resolveVariable, (]
[), ;, throw, new, IllegalStateException, (, buf, ., toString, (, ), ), ;, }, protected, String, resolveVariable, (, final, String]
[;, }, protected, String, resolveVariable, (, final, String, variableName, ,, final, StrBuilder, buf, ,, final, int, startPos, ,, final, int]
[), ;, }, protected, String, resolveVariable, (, final, String, variableName, ,, final, StrBuilder, buf, ,, final, int, startPos, ,, final]
[., toString, (, ), ), ;, }, protected, String, resolveVariable, (, final, String, variableName, ,, final, StrBuilder, buf, ,, final]
[;, if, (, resolver, ==, null, ), {, return, null, ;, }, return, resolver, ., lookup, (, variableName, ), ;]
[), {, return, null, ;, }, return, resolver, ., lookup, (, variableName, ), ;, }, public, char, getEscapeChar, (, )]
[==, null, ), {, return, null, ;, }, return, resolver, ., lookup, (, variableName, ), ;, }, public, char, getEscapeChar]
[), {, return, null, ;, }, return, resolver, ., lookup, (, variableName, ), ;, }, public, char, getEscapeChar, (, )]
[;, }, return, resolver, ., lookup, (, variableName, ), ;, }, public, char, getEscapeChar, (, ), {, return, this, .]
[;, }, public, char, getEscapeChar, (, ), {, return, this, ., escapeChar, ;, }, public, void, setEscapeChar, (, final, char]
[., lookup, (, variableName, ), ;, }, public, char, getEscapeChar, (, ), {, return, this, ., escapeChar, ;, }, public]
[), ;, }, public, char, getEscapeChar, (, ), {, return, this, ., escapeChar, ;, }, public, void, setEscapeChar, (, final]
[;, }, public, void, setEscapeChar, (, final, char, escapeCharacter, ), {, this, ., escapeChar, =, escapeCharacter, ;, }, public, StrMatcher]
[., escapeChar, ;, }, public, void, setEscapeChar, (, final, char, escapeCharacter, ), {, this, ., escapeChar, =, escapeCharacter, ;, }]
[=, escapeCharacter, ;, }, public, StrMatcher, getVariablePrefixMatcher, (, ), {, return, prefixMatcher, ;, }, public, StrSubstitutor, setVariablePrefixMatcher, (, final, StrMatcher]
[., escapeChar, =, escapeCharacter, ;, }, public, StrMatcher, getVariablePrefixMatcher, (, ), {, return, prefixMatcher, ;, }, public, StrSubstitutor, setVariablePrefixMatcher, (]
[;, }, public, StrMatcher, getVariablePrefixMatcher, (, ), {, return, prefixMatcher, ;, }, public, StrSubstitutor, setVariablePrefixMatcher, (, final, StrMatcher, prefixMatcher, )]
[;, }, public, StrSubstitutor, setVariablePrefixMatcher, (, final, StrMatcher, prefixMatcher, ), {, if, (, prefixMatcher, ==, null, ), {, throw, new]
[), {, throw, new, IllegalArgumentException, (, "Variable prefix matcher must not be null!", ), ;, }, this, ., prefixMatcher, =, prefixMatcher, ;, return, this, ;, }]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Variable prefix matcher must not be null!", ), ;, }, this, ., prefixMatcher, =, prefixMatcher, ;, return, this]
[), {, throw, new, IllegalArgumentException, (, "Variable prefix matcher must not be null!", ), ;, }, this, ., prefixMatcher, =, prefixMatcher, ;, return, this, ;, }]
[;, }, this, ., prefixMatcher, =, prefixMatcher, ;, return, this, ;, }, public, StrSubstitutor, setVariablePrefix, (, final, char, prefix, )]
[), ;, }, this, ., prefixMatcher, =, prefixMatcher, ;, return, this, ;, }, public, StrSubstitutor, setVariablePrefix, (, final, char, prefix]
[=, prefixMatcher, ;, return, this, ;, }, public, StrSubstitutor, setVariablePrefix, (, final, char, prefix, ), {, return, setVariablePrefixMatcher, (, StrMatcher]
[., prefixMatcher, =, prefixMatcher, ;, return, this, ;, }, public, StrSubstitutor, setVariablePrefix, (, final, char, prefix, ), {, return, setVariablePrefixMatcher]
[;, return, this, ;, }, public, StrSubstitutor, setVariablePrefix, (, final, char, prefix, ), {, return, setVariablePrefixMatcher, (, StrMatcher, ., charMatcher]
[;, }, public, StrSubstitutor, setVariablePrefix, (, final, char, prefix, ), {, return, setVariablePrefixMatcher, (, StrMatcher, ., charMatcher, (, prefix, )]
[;, }, public, StrSubstitutor, setVariablePrefix, (, final, String, prefix, ), {, if, (, prefix, ==, null, ), {, throw, new]
[), ;, }, public, StrSubstitutor, setVariablePrefix, (, final, String, prefix, ), {, if, (, prefix, ==, null, ), {, throw]
[., charMatcher, (, prefix, ), ), ;, }, public, StrSubstitutor, setVariablePrefix, (, final, String, prefix, ), {, if, (, prefix]
[), ), ;, }, public, StrSubstitutor, setVariablePrefix, (, final, String, prefix, ), {, if, (, prefix, ==, null, ), {]
[), {, throw, new, IllegalArgumentException, (, "Variable prefix must not be null!", ), ;, }, return, setVariablePrefixMatcher, (, StrMatcher, ., stringMatcher, (, prefix, ), )]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Variable prefix must not be null!", ), ;, }, return, setVariablePrefixMatcher, (, StrMatcher, ., stringMatcher, (, prefix]
[), {, throw, new, IllegalArgumentException, (, "Variable prefix must not be null!", ), ;, }, return, setVariablePrefixMatcher, (, StrMatcher, ., stringMatcher, (, prefix, ), )]
[;, }, return, setVariablePrefixMatcher, (, StrMatcher, ., stringMatcher, (, prefix, ), ), ;, }, public, StrMatcher, getVariableSuffixMatcher, (, ), {]
[), ;, }, return, setVariablePrefixMatcher, (, StrMatcher, ., stringMatcher, (, prefix, ), ), ;, }, public, StrMatcher, getVariableSuffixMatcher, (, )]
[;, }, public, StrMatcher, getVariableSuffixMatcher, (, ), {, return, suffixMatcher, ;, }, public, StrSubstitutor, setVariableSuffixMatcher, (, final, StrMatcher, suffixMatcher, )]
[), ;, }, public, StrMatcher, getVariableSuffixMatcher, (, ), {, return, suffixMatcher, ;, }, public, StrSubstitutor, setVariableSuffixMatcher, (, final, StrMatcher, suffixMatcher]
[., stringMatcher, (, prefix, ), ), ;, }, public, StrMatcher, getVariableSuffixMatcher, (, ), {, return, suffixMatcher, ;, }, public, StrSubstitutor]
[), ), ;, }, public, StrMatcher, getVariableSuffixMatcher, (, ), {, return, suffixMatcher, ;, }, public, StrSubstitutor, setVariableSuffixMatcher, (, final, StrMatcher]
[;, }, public, StrSubstitutor, setVariableSuffixMatcher, (, final, StrMatcher, suffixMatcher, ), {, if, (, suffixMatcher, ==, null, ), {, throw, new]
[), {, throw, new, IllegalArgumentException, (, "Variable suffix matcher must not be null!", ), ;, }, this, ., suffixMatcher, =, suffixMatcher, ;, return, this, ;, }]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Variable suffix matcher must not be null!", ), ;, }, this, ., suffixMatcher, =, suffixMatcher, ;, return, this]
[), {, throw, new, IllegalArgumentException, (, "Variable suffix matcher must not be null!", ), ;, }, this, ., suffixMatcher, =, suffixMatcher, ;, return, this, ;, }]
[;, }, this, ., suffixMatcher, =, suffixMatcher, ;, return, this, ;, }, public, StrSubstitutor, setVariableSuffix, (, final, char, suffix, )]
[), ;, }, this, ., suffixMatcher, =, suffixMatcher, ;, return, this, ;, }, public, StrSubstitutor, setVariableSuffix, (, final, char, suffix]
[=, suffixMatcher, ;, return, this, ;, }, public, StrSubstitutor, setVariableSuffix, (, final, char, suffix, ), {, return, setVariableSuffixMatcher, (, StrMatcher]
[., suffixMatcher, =, suffixMatcher, ;, return, this, ;, }, public, StrSubstitutor, setVariableSuffix, (, final, char, suffix, ), {, return, setVariableSuffixMatcher]
[;, return, this, ;, }, public, StrSubstitutor, setVariableSuffix, (, final, char, suffix, ), {, return, setVariableSuffixMatcher, (, StrMatcher, ., charMatcher]
[;, }, public, StrSubstitutor, setVariableSuffix, (, final, char, suffix, ), {, return, setVariableSuffixMatcher, (, StrMatcher, ., charMatcher, (, suffix, )]
[;, }, public, StrSubstitutor, setVariableSuffix, (, final, String, suffix, ), {, if, (, suffix, ==, null, ), {, throw, new]
[), ;, }, public, StrSubstitutor, setVariableSuffix, (, final, String, suffix, ), {, if, (, suffix, ==, null, ), {, throw]
[., charMatcher, (, suffix, ), ), ;, }, public, StrSubstitutor, setVariableSuffix, (, final, String, suffix, ), {, if, (, suffix]
[), ), ;, }, public, StrSubstitutor, setVariableSuffix, (, final, String, suffix, ), {, if, (, suffix, ==, null, ), {]
[), {, throw, new, IllegalArgumentException, (, "Variable suffix must not be null!", ), ;, }, return, setVariableSuffixMatcher, (, StrMatcher, ., stringMatcher, (, suffix, ), )]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Variable suffix must not be null!", ), ;, }, return, setVariableSuffixMatcher, (, StrMatcher, ., stringMatcher, (, suffix]
[), {, throw, new, IllegalArgumentException, (, "Variable suffix must not be null!", ), ;, }, return, setVariableSuffixMatcher, (, StrMatcher, ., stringMatcher, (, suffix, ), )]
[;, }, return, setVariableSuffixMatcher, (, StrMatcher, ., stringMatcher, (, suffix, ), ), ;, }, public, StrLookup, <, ?, >, getVariableResolver]
[), ;, }, return, setVariableSuffixMatcher, (, StrMatcher, ., stringMatcher, (, suffix, ), ), ;, }, public, StrLookup, <, ?, >]
[;, }, public, StrLookup, <, ?, >, getVariableResolver, (, ), {, return, this, ., variableResolver, ;, }, public, void, setVariableResolver]
[), ;, }, public, StrLookup, <, ?, >, getVariableResolver, (, ), {, return, this, ., variableResolver, ;, }, public, void]
[., stringMatcher, (, suffix, ), ), ;, }, public, StrLookup, <, ?, >, getVariableResolver, (, ), {, return, this, .]
[), ), ;, }, public, StrLookup, <, ?, >, getVariableResolver, (, ), {, return, this, ., variableResolver, ;, }, public]
[;, }, public, void, setVariableResolver, (, final, StrLookup, <, ?, >, variableResolver, ), {, this, ., variableResolver, =, variableResolver, ;]
[., variableResolver, ;, }, public, void, setVariableResolver, (, final, StrLookup, <, ?, >, variableResolver, ), {, this, ., variableResolver, =]
[=, variableResolver, ;, }, public, boolean, isEnableSubstitutionInVariables, (, ), {, return, enableSubstitutionInVariables, ;, }, public, void, setEnableSubstitutionInVariables, (, final, boolean]
[., variableResolver, =, variableResolver, ;, }, public, boolean, isEnableSubstitutionInVariables, (, ), {, return, enableSubstitutionInVariables, ;, }, public, void, setEnableSubstitutionInVariables, (]
[;, }, public, boolean, isEnableSubstitutionInVariables, (, ), {, return, enableSubstitutionInVariables, ;, }, public, void, setEnableSubstitutionInVariables, (, final, boolean, enableSubstitutionInVariables, )]
[;, }, public, void, setEnableSubstitutionInVariables, (, final, boolean, enableSubstitutionInVariables, ), {, this, ., enableSubstitutionInVariables, =, enableSubstitutionInVariables, ;, }, }]
[=, enableSubstitutionInVariables, ;, }, }]
[., enableSubstitutionInVariables, =, enableSubstitutionInVariables, ;, }, }]
[;, }, }]
