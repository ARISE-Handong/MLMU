[{, private, final, RealMatrix, covarianceMatrix, ;, private, final, int, n, ;, public, Covariance, (, ), {, super, (, ), ;]
[final, RealMatrix, covarianceMatrix, ;, private, final, int, n, ;, public, Covariance, (, ), {, super, (, ), ;, covarianceMatrix, =]
[covarianceMatrix, ;, private, final, int, n, ;, public, Covariance, (, ), {, super, (, ), ;, covarianceMatrix, =, null, ;]
[private, final, int, n, ;, public, Covariance, (, ), {, super, (, ), ;, covarianceMatrix, =, null, ;, n, =]
[public, Covariance, (, double, [, ], [, ], data, ,, boolean, biasCorrected, ), throws, MathIllegalArgumentException, ,, NotStrictlyPositiveException, {, this, (]
[double, [, ], [, ], data, ,, boolean, biasCorrected, ), throws, MathIllegalArgumentException, ,, NotStrictlyPositiveException, {, this, (, new, BlockRealMatrix, (]
[[, ], data, ,, boolean, biasCorrected, ), throws, MathIllegalArgumentException, ,, NotStrictlyPositiveException, {, this, (, new, BlockRealMatrix, (, data, ), ,]
[), ;, }, public, Covariance, (, double, [, ], [, ], data, ), throws, MathIllegalArgumentException, ,, NotStrictlyPositiveException, {, this, (]
[}, public, Covariance, (, double, [, ], [, ], data, ), throws, MathIllegalArgumentException, ,, NotStrictlyPositiveException, {, this, (, data, ,]
[this, (, data, ,, true, ), ;, }, public, Covariance, (, RealMatrix, matrix, ,, boolean, biasCorrected, ), throws, MathIllegalArgumentException, {]
[data, ,, true, ), ;, }, public, Covariance, (, RealMatrix, matrix, ,, boolean, biasCorrected, ), throws, MathIllegalArgumentException, {, checkSufficientData, (]
[), ;, }, public, Covariance, (, RealMatrix, matrix, ,, boolean, biasCorrected, ), throws, MathIllegalArgumentException, {, checkSufficientData, (, matrix, ), ;]
[}, public, Covariance, (, RealMatrix, matrix, ,, boolean, biasCorrected, ), throws, MathIllegalArgumentException, {, checkSufficientData, (, matrix, ), ;, n, =]
[}, public, Covariance, (, RealMatrix, matrix, ,, boolean, biasCorrected, ), throws, MathIllegalArgumentException, {, checkSufficientData, (, matrix, ), ;, n, =]
[,, boolean, biasCorrected, ), throws, MathIllegalArgumentException, {, checkSufficientData, (, matrix, ), ;, n, =, matrix, ., getRowDimension, (, ), ;]
[biasCorrected, ), throws, MathIllegalArgumentException, {, checkSufficientData, (, matrix, ), ;, n, =, matrix, ., getRowDimension, (, ), ;, covarianceMatrix, =]
[throws, MathIllegalArgumentException, {, checkSufficientData, (, matrix, ), ;, n, =, matrix, ., getRowDimension, (, ), ;, covarianceMatrix, =, computeCovarianceMatrix, (]
[{, checkSufficientData, (, matrix, ), ;, n, =, matrix, ., getRowDimension, (, ), ;, covarianceMatrix, =, computeCovarianceMatrix, (, matrix, ,]
[=, computeCovarianceMatrix, (, matrix, ,, biasCorrected, ), ;, }, public, Covariance, (, RealMatrix, matrix, ), throws, MathIllegalArgumentException, {, this, (]
[(, matrix, ,, biasCorrected, ), ;, }, public, Covariance, (, RealMatrix, matrix, ), throws, MathIllegalArgumentException, {, this, (, matrix, ,]
[matrix, ), throws, MathIllegalArgumentException, {, this, (, matrix, ,, true, ), ;, }, public, RealMatrix, getCovarianceMatrix, (, ), {, return]
[), ;, }, public, RealMatrix, getCovarianceMatrix, (, ), {, return, covarianceMatrix, ;, }, public, int, getN, (, ), {, return]
[return, n, ;, }, protected, RealMatrix, computeCovarianceMatrix, (, RealMatrix, matrix, ,, boolean, biasCorrected, ), throws, MathIllegalArgumentException, {, int, dimension, =]
[return, n, ;, }, protected, RealMatrix, computeCovarianceMatrix, (, RealMatrix, matrix, ,, boolean, biasCorrected, ), throws, MathIllegalArgumentException, {, int, dimension, =]
[matrix, ,, boolean, biasCorrected, ), throws, MathIllegalArgumentException, {, int, dimension, =, matrix, ., getColumnDimension, (, ), ;, Variance, variance, =]
[biasCorrected, ), throws, MathIllegalArgumentException, {, int, dimension, =, matrix, ., getColumnDimension, (, ), ;, Variance, variance, =, new, Variance, (]
[dimension, =, matrix, ., getColumnDimension, (, ), ;, Variance, variance, =, new, Variance, (, biasCorrected, ), ;, RealMatrix, outMatrix, =]
[., getColumnDimension, (, ), ;, Variance, variance, =, new, Variance, (, biasCorrected, ), ;, RealMatrix, outMatrix, =, new, BlockRealMatrix, (]
[(, ), ;, Variance, variance, =, new, Variance, (, biasCorrected, ), ;, RealMatrix, outMatrix, =, new, BlockRealMatrix, (, dimension, ,]
[(, biasCorrected, ), ;, RealMatrix, outMatrix, =, new, BlockRealMatrix, (, dimension, ,, dimension, ), ;, for, (, int, i, =]
[), ;, RealMatrix, outMatrix, =, new, BlockRealMatrix, (, dimension, ,, dimension, ), ;, for, (, int, i, =, 0, ;]
[), ;, RealMatrix, outMatrix, =, new, BlockRealMatrix, (, dimension, ,, dimension, ), ;, for, (, int, i, =, 0, ;]
[RealMatrix, outMatrix, =, new, BlockRealMatrix, (, dimension, ,, dimension, ), ;, for, (, int, i, =, 0, ;, i, <]
[=, new, BlockRealMatrix, (, dimension, ,, dimension, ), ;, for, (, int, i, =, 0, ;, i, <, dimension, ;]
[=, new, BlockRealMatrix, (, dimension, ,, dimension, ), ;, for, (, int, i, =, 0, ;, i, <, dimension, ;]
[for, (, int, i, =, 0, ;, i, <, dimension, ;, i, ++, ), {, for, (, int, j, =]
[int, i, =, 0, ;, i, <, dimension, ;, i, ++, ), {, for, (, int, j, =, 0, ;]
[int, i, =, 0, ;, i, <, dimension, ;, i, ++, ), {, for, (, int, j, =, 0, ;]
[=, 0, ;, i, <, dimension, ;, i, ++, ), {, for, (, int, j, =, 0, ;, j, <]
[;, i, <, dimension, ;, i, ++, ), {, for, (, int, j, =, 0, ;, j, <, i, ;]
[;, i, <, dimension, ;, i, ++, ), {, for, (, int, j, =, 0, ;, j, <, i, ;]
[), {, for, (, int, j, =, 0, ;, j, <, i, ;, j, ++, ), {, double, cov, =]
[for, (, int, j, =, 0, ;, j, <, i, ;, j, ++, ), {, double, cov, =, covariance, (]
[for, (, int, j, =, 0, ;, j, <, i, ;, j, ++, ), {, double, cov, =, covariance, (]
[=, 0, ;, j, <, i, ;, j, ++, ), {, double, cov, =, covariance, (, matrix, ., getColumn, (]
[j, <, i, ;, j, ++, ), {, double, cov, =, covariance, (, matrix, ., getColumn, (, i, ), ,]
[j, <, i, ;, j, ++, ), {, double, cov, =, covariance, (, matrix, ., getColumn, (, i, ), ,]
[j, ++, ), {, double, cov, =, covariance, (, matrix, ., getColumn, (, i, ), ,, matrix, ., getColumn, (]
[{, double, cov, =, covariance, (, matrix, ., getColumn, (, i, ), ,, matrix, ., getColumn, (, j, ), ,]
[=, covariance, (, matrix, ., getColumn, (, i, ), ,, matrix, ., getColumn, (, j, ), ,, biasCorrected, ), ;]
[=, covariance, (, matrix, ., getColumn, (, i, ), ,, matrix, ., getColumn, (, j, ), ,, biasCorrected, ), ;]
[., getColumn, (, i, ), ,, matrix, ., getColumn, (, j, ), ,, biasCorrected, ), ;, outMatrix, ., setEntry, (]
[(, i, ), ,, matrix, ., getColumn, (, j, ), ,, biasCorrected, ), ;, outMatrix, ., setEntry, (, i, ,]
[), ,, matrix, ., getColumn, (, j, ), ,, biasCorrected, ), ;, outMatrix, ., setEntry, (, i, ,, j, ,]
[., getColumn, (, j, ), ,, biasCorrected, ), ;, outMatrix, ., setEntry, (, i, ,, j, ,, cov, ), ;]
[., getColumn, (, j, ), ,, biasCorrected, ), ;, outMatrix, ., setEntry, (, i, ,, j, ,, cov, ), ;]
[), ,, biasCorrected, ), ;, outMatrix, ., setEntry, (, i, ,, j, ,, cov, ), ;, outMatrix, ., setEntry, (]
[biasCorrected, ), ;, outMatrix, ., setEntry, (, i, ,, j, ,, cov, ), ;, outMatrix, ., setEntry, (, j, ,]
[;, outMatrix, ., setEntry, (, i, ,, j, ,, cov, ), ;, outMatrix, ., setEntry, (, j, ,, i, ,]
[(, i, ,, j, ,, cov, ), ;, outMatrix, ., setEntry, (, j, ,, i, ,, cov, ), ;, }]
[(, i, ,, j, ,, cov, ), ;, outMatrix, ., setEntry, (, j, ,, i, ,, cov, ), ;, }]
[,, cov, ), ;, outMatrix, ., setEntry, (, j, ,, i, ,, cov, ), ;, }, outMatrix, ., setEntry, (]
[), ;, outMatrix, ., setEntry, (, j, ,, i, ,, cov, ), ;, }, outMatrix, ., setEntry, (, i, ,]
[outMatrix, ., setEntry, (, j, ,, i, ,, cov, ), ;, }, outMatrix, ., setEntry, (, i, ,, i, ,]
[outMatrix, ., setEntry, (, j, ,, i, ,, cov, ), ;, }, outMatrix, ., setEntry, (, i, ,, i, ,]
[j, ,, i, ,, cov, ), ;, }, outMatrix, ., setEntry, (, i, ,, i, ,, variance, ., evaluate, (]
[j, ,, i, ,, cov, ), ;, }, outMatrix, ., setEntry, (, i, ,, i, ,, variance, ., evaluate, (]
[cov, ), ;, }, outMatrix, ., setEntry, (, i, ,, i, ,, variance, ., evaluate, (, matrix, ., getColumn, (]
[(, i, ,, i, ,, variance, ., evaluate, (, matrix, ., getColumn, (, i, ), ), ), ;, }, return]
[), ), ), ;, }, return, outMatrix, ;, }, protected, RealMatrix, computeCovarianceMatrix, (, RealMatrix, matrix, ), throws, MathIllegalArgumentException, {, return]
[), ;, }, return, outMatrix, ;, }, protected, RealMatrix, computeCovarianceMatrix, (, RealMatrix, matrix, ), throws, MathIllegalArgumentException, {, return, computeCovarianceMatrix, (]
[}, return, outMatrix, ;, }, protected, RealMatrix, computeCovarianceMatrix, (, RealMatrix, matrix, ), throws, MathIllegalArgumentException, {, return, computeCovarianceMatrix, (, matrix, ,]
[protected, RealMatrix, computeCovarianceMatrix, (, double, [, ], [, ], data, ,, boolean, biasCorrected, ), throws, MathIllegalArgumentException, ,, NotStrictlyPositiveException, {, return]
[computeCovarianceMatrix, (, double, [, ], [, ], data, ,, boolean, biasCorrected, ), throws, MathIllegalArgumentException, ,, NotStrictlyPositiveException, {, return, computeCovarianceMatrix, (]
[[, ], [, ], data, ,, boolean, biasCorrected, ), throws, MathIllegalArgumentException, ,, NotStrictlyPositiveException, {, return, computeCovarianceMatrix, (, new, BlockRealMatrix, (]
[], data, ,, boolean, biasCorrected, ), throws, MathIllegalArgumentException, ,, NotStrictlyPositiveException, {, return, computeCovarianceMatrix, (, new, BlockRealMatrix, (, data, ), ,]
[), ;, }, protected, RealMatrix, computeCovarianceMatrix, (, double, [, ], [, ], data, ), throws, MathIllegalArgumentException, ,, NotStrictlyPositiveException, {, return]
[}, protected, RealMatrix, computeCovarianceMatrix, (, double, [, ], [, ], data, ), throws, MathIllegalArgumentException, ,, NotStrictlyPositiveException, {, return, computeCovarianceMatrix, (]
[RealMatrix, computeCovarianceMatrix, (, double, [, ], [, ], data, ), throws, MathIllegalArgumentException, ,, NotStrictlyPositiveException, {, return, computeCovarianceMatrix, (, data, ,]
[double, [, ], xArray, ,, final, double, [, ], yArray, ,, boolean, biasCorrected, ), throws, MathIllegalArgumentException, {, Mean, mean, =]
[], yArray, ,, boolean, biasCorrected, ), throws, MathIllegalArgumentException, {, Mean, mean, =, new, Mean, (, ), ;, double, result, =]
[), throws, MathIllegalArgumentException, {, Mean, mean, =, new, Mean, (, ), ;, double, result, =, 0d, ;, int, length, =]
[), throws, MathIllegalArgumentException, {, Mean, mean, =, new, Mean, (, ), ;, double, result, =, 0d, ;, int, length, =]
[=, new, Mean, (, ), ;, double, result, =, 0d, ;, int, length, =, xArray, ., length, ;, if, (]
[=, new, Mean, (, ), ;, double, result, =, 0d, ;, int, length, =, xArray, ., length, ;, if, (]
[Mean, (, ), ;, double, result, =, 0d, ;, int, length, =, xArray, ., length, ;, if, (, length, !=]
[Mean, (, ), ;, double, result, =, 0d, ;, int, length, =, xArray, ., length, ;, if, (, length, !=]
[=, 0d, ;, int, length, =, xArray, ., length, ;, if, (, length, !=, yArray, ., length, ), {, throw]
[int, length, =, xArray, ., length, ;, if, (, length, !=, yArray, ., length, ), {, throw, new, MathIllegalArgumentException, (]
[int, length, =, xArray, ., length, ;, if, (, length, !=, yArray, ., length, ), {, throw, new, MathIllegalArgumentException, (]
[., length, ;, if, (, length, !=, yArray, ., length, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., DIMENSIONS_MISMATCH_SIMPLE, ,]
[;, if, (, length, !=, yArray, ., length, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., DIMENSIONS_MISMATCH_SIMPLE, ,, length, ,]
[;, if, (, length, !=, yArray, ., length, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., DIMENSIONS_MISMATCH_SIMPLE, ,, length, ,]
[{, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., DIMENSIONS_MISMATCH_SIMPLE, ,, length, ,, yArray, ., length, ), ;, }, else, if, (]
[{, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., DIMENSIONS_MISMATCH_SIMPLE, ,, length, ,, yArray, ., length, ), ;, }, else, if, (]
[new, MathIllegalArgumentException, (, LocalizedFormats, ., DIMENSIONS_MISMATCH_SIMPLE, ,, length, ,, yArray, ., length, ), ;, }, else, if, (, length, <]
[., DIMENSIONS_MISMATCH_SIMPLE, ,, length, ,, yArray, ., length, ), ;, }, else, if, (, length, <, 2, ), {, throw]
[length, ,, yArray, ., length, ), ;, }, else, if, (, length, <, 2, ), {, throw, new, MathIllegalArgumentException, (]
[length, ,, yArray, ., length, ), ;, }, else, if, (, length, <, 2, ), {, throw, new, MathIllegalArgumentException, (]
[length, ), ;, }, else, if, (, length, <, 2, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., INSUFFICIENT_OBSERVED_POINTS_IN_SAMPLE, ,]
[;, }, else, if, (, length, <, 2, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., INSUFFICIENT_OBSERVED_POINTS_IN_SAMPLE, ,, length, ,]
[{, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., INSUFFICIENT_OBSERVED_POINTS_IN_SAMPLE, ,, length, ,, 2, ), ;, }, else, {, double, xMean, =]
[{, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., INSUFFICIENT_OBSERVED_POINTS_IN_SAMPLE, ,, length, ,, 2, ), ;, }, else, {, double, xMean, =]
[(, LocalizedFormats, ., INSUFFICIENT_OBSERVED_POINTS_IN_SAMPLE, ,, length, ,, 2, ), ;, }, else, {, double, xMean, =, mean, ., evaluate, (]
[,, 2, ), ;, }, else, {, double, xMean, =, mean, ., evaluate, (, xArray, ), ;, double, yMean, =]
[,, 2, ), ;, }, else, {, double, xMean, =, mean, ., evaluate, (, xArray, ), ;, double, yMean, =]
[}, else, {, double, xMean, =, mean, ., evaluate, (, xArray, ), ;, double, yMean, =, mean, ., evaluate, (]
[evaluate, (, xArray, ), ;, double, yMean, =, mean, ., evaluate, (, yArray, ), ;, for, (, int, i, =]
[xArray, ), ;, double, yMean, =, mean, ., evaluate, (, yArray, ), ;, for, (, int, i, =, 0, ;]
[xArray, ), ;, double, yMean, =, mean, ., evaluate, (, yArray, ), ;, for, (, int, i, =, 0, ;]
[;, double, yMean, =, mean, ., evaluate, (, yArray, ), ;, for, (, int, i, =, 0, ;, i, <]
[yMean, =, mean, ., evaluate, (, yArray, ), ;, for, (, int, i, =, 0, ;, i, <, length, ;]
[yMean, =, mean, ., evaluate, (, yArray, ), ;, for, (, int, i, =, 0, ;, i, <, length, ;]
[), ;, for, (, int, i, =, 0, ;, i, <, length, ;, i, ++, ), {, double, xDev, =]
[), ;, for, (, int, i, =, 0, ;, i, <, length, ;, i, ++, ), {, double, xDev, =]
[), ;, for, (, int, i, =, 0, ;, i, <, length, ;, i, ++, ), {, double, xDev, =]
[for, (, int, i, =, 0, ;, i, <, length, ;, i, ++, ), {, double, xDev, =, xArray, []
[i, =, 0, ;, i, <, length, ;, i, ++, ), {, double, xDev, =, xArray, [, i, ], -]
[<, length, ;, i, ++, ), {, double, xDev, =, xArray, [, i, ], -, xMean, ;, double, yDev, =]
[<, length, ;, i, ++, ), {, double, xDev, =, xArray, [, i, ], -, xMean, ;, double, yDev, =]
[<, length, ;, i, ++, ), {, double, xDev, =, xArray, [, i, ], -, xMean, ;, double, yDev, =]
[;, i, ++, ), {, double, xDev, =, xArray, [, i, ], -, xMean, ;, double, yDev, =, yArray, []
[), {, double, xDev, =, xArray, [, i, ], -, xMean, ;, double, yDev, =, yArray, [, i, ], -]
[double, xDev, =, xArray, [, i, ], -, xMean, ;, double, yDev, =, yArray, [, i, ], -, yMean, ;]
[=, xArray, [, i, ], -, xMean, ;, double, yDev, =, yArray, [, i, ], -, yMean, ;, result, +=]
[=, xArray, [, i, ], -, xMean, ;, double, yDev, =, yArray, [, i, ], -, yMean, ;, result, +=]
[xArray, [, i, ], -, xMean, ;, double, yDev, =, yArray, [, i, ], -, yMean, ;, result, +=, (]
[xArray, [, i, ], -, xMean, ;, double, yDev, =, yArray, [, i, ], -, yMean, ;, result, +=, (]
[xArray, [, i, ], -, xMean, ;, double, yDev, =, yArray, [, i, ], -, yMean, ;, result, +=, (]
[i, ], -, xMean, ;, double, yDev, =, yArray, [, i, ], -, yMean, ;, result, +=, (, xDev, *]
[-, xMean, ;, double, yDev, =, yArray, [, i, ], -, yMean, ;, result, +=, (, xDev, *, yDev, -]
[double, yDev, =, yArray, [, i, ], -, yMean, ;, result, +=, (, xDev, *, yDev, -, result, ), /]
[yDev, =, yArray, [, i, ], -, yMean, ;, result, +=, (, xDev, *, yDev, -, result, ), /, (]
[yDev, =, yArray, [, i, ], -, yMean, ;, result, +=, (, xDev, *, yDev, -, result, ), /, (]
[yArray, [, i, ], -, yMean, ;, result, +=, (, xDev, *, yDev, -, result, ), /, (, i, +]
[;, result, +=, (, xDev, *, yDev, -, result, ), /, (, i, +, 1, ), ;, }, }, return]
[;, result, +=, (, xDev, *, yDev, -, result, ), /, (, i, +, 1, ), ;, }, }, return]
[+=, (, xDev, *, yDev, -, result, ), /, (, i, +, 1, ), ;, }, }, return, biasCorrected, ?]
[+=, (, xDev, *, yDev, -, result, ), /, (, i, +, 1, ), ;, }, }, return, biasCorrected, ?]
[xDev, *, yDev, -, result, ), /, (, i, +, 1, ), ;, }, }, return, biasCorrected, ?, result, *]
[*, yDev, -, result, ), /, (, i, +, 1, ), ;, }, }, return, biasCorrected, ?, result, *, (]
[*, yDev, -, result, ), /, (, i, +, 1, ), ;, }, }, return, biasCorrected, ?, result, *, (]
[result, ), /, (, i, +, 1, ), ;, }, }, return, biasCorrected, ?, result, *, (, (, double, )]
[/, (, i, +, 1, ), ;, }, }, return, biasCorrected, ?, result, *, (, (, double, ), length, /]
[+, 1, ), ;, }, }, return, biasCorrected, ?, result, *, (, (, double, ), length, /, (, double, )]
[1, ), ;, }, }, return, biasCorrected, ?, result, *, (, (, double, ), length, /, (, double, ), (]
[1, ), ;, }, }, return, biasCorrected, ?, result, *, (, (, double, ), length, /, (, double, ), (]
[;, }, }, return, biasCorrected, ?, result, *, (, (, double, ), length, /, (, double, ), (, length, -]
[biasCorrected, ?, result, *, (, (, double, ), length, /, (, double, ), (, length, -, 1, ), ), :]
[public, double, covariance, (, final, double, [, ], xArray, ,, final, double, [, ], yArray, ), throws, MathIllegalArgumentException, {, return]
[covariance, (, final, double, [, ], xArray, ,, final, double, [, ], yArray, ), throws, MathIllegalArgumentException, {, return, covariance, (]
[final, double, [, ], xArray, ,, final, double, [, ], yArray, ), throws, MathIllegalArgumentException, {, return, covariance, (, xArray, ,]
[[, ], xArray, ,, final, double, [, ], yArray, ), throws, MathIllegalArgumentException, {, return, covariance, (, xArray, ,, yArray, ,]
[yArray, ,, true, ), ;, }, private, void, checkSufficientData, (, final, RealMatrix, matrix, ), throws, MathIllegalArgumentException, {, int, nRows, =]
[yArray, ,, true, ), ;, }, private, void, checkSufficientData, (, final, RealMatrix, matrix, ), throws, MathIllegalArgumentException, {, int, nRows, =]
[(, final, RealMatrix, matrix, ), throws, MathIllegalArgumentException, {, int, nRows, =, matrix, ., getRowDimension, (, ), ;, int, nCols, =]
[(, final, RealMatrix, matrix, ), throws, MathIllegalArgumentException, {, int, nRows, =, matrix, ., getRowDimension, (, ), ;, int, nCols, =]
[int, nRows, =, matrix, ., getRowDimension, (, ), ;, int, nCols, =, matrix, ., getColumnDimension, (, ), ;, if, (]
[int, nRows, =, matrix, ., getRowDimension, (, ), ;, int, nCols, =, matrix, ., getColumnDimension, (, ), ;, if, (]
[int, nRows, =, matrix, ., getRowDimension, (, ), ;, int, nCols, =, matrix, ., getColumnDimension, (, ), ;, if, (]
[=, matrix, ., getRowDimension, (, ), ;, int, nCols, =, matrix, ., getColumnDimension, (, ), ;, if, (, nRows, <]
[., getRowDimension, (, ), ;, int, nCols, =, matrix, ., getColumnDimension, (, ), ;, if, (, nRows, <, 2, ||]
[., getRowDimension, (, ), ;, int, nCols, =, matrix, ., getColumnDimension, (, ), ;, if, (, nRows, <, 2, ||]
[(, ), ;, int, nCols, =, matrix, ., getColumnDimension, (, ), ;, if, (, nRows, <, 2, ||, nCols, <]
[nCols, =, matrix, ., getColumnDimension, (, ), ;, if, (, nRows, <, 2, ||, nCols, <, 1, ), {, throw]
[., getColumnDimension, (, ), ;, if, (, nRows, <, 2, ||, nCols, <, 1, ), {, throw, new, MathIllegalArgumentException, (]
[., getColumnDimension, (, ), ;, if, (, nRows, <, 2, ||, nCols, <, 1, ), {, throw, new, MathIllegalArgumentException, (]
[;, if, (, nRows, <, 2, ||, nCols, <, 1, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., INSUFFICIENT_ROWS_AND_COLUMNS, ,]
[(, nRows, <, 2, ||, nCols, <, 1, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., INSUFFICIENT_ROWS_AND_COLUMNS, ,, nRows, ,]
