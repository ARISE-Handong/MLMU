[private, final, AbstractCompiler, compiler, ;, private, final, CheckLevel, checkLevel, ;, private, final, CodingConvention, codingConvention, ;, static, final, DiagnosticType, MISSING_PROVIDE_WARNING, =]
[private, final, AbstractCompiler, compiler, ;, private, final, CheckLevel, checkLevel, ;, private, final, CodingConvention, codingConvention, ;, static, final, DiagnosticType, MISSING_PROVIDE_WARNING, =]
[;, private, final, CheckLevel, checkLevel, ;, private, final, CodingConvention, codingConvention, ;, static, final, DiagnosticType, MISSING_PROVIDE_WARNING, =, DiagnosticType, ., disabled, (]
[final, CheckLevel, checkLevel, ;, private, final, CodingConvention, codingConvention, ;, static, final, DiagnosticType, MISSING_PROVIDE_WARNING, =, DiagnosticType, ., disabled, (, "JSC_MISSING_PROVIDE", ,]
[MISSING_PROVIDE_WARNING, =, DiagnosticType, ., disabled, (, "JSC_MISSING_PROVIDE", ,, "missing goog.provide(''{0}'')", ), ;, CheckProvides, (, AbstractCompiler, compiler, ,, CheckLevel, checkLevel, ), {]
[MISSING_PROVIDE_WARNING, =, DiagnosticType, ., disabled, (, "JSC_MISSING_PROVIDE", ,, "missing goog.provide(''{0}'')", ), ;, CheckProvides, (, AbstractCompiler, compiler, ,, CheckLevel, checkLevel, ), {]
[disabled, (, "JSC_MISSING_PROVIDE", ,, "missing goog.provide(''{0}'')", ), ;, CheckProvides, (, AbstractCompiler, compiler, ,, CheckLevel, checkLevel, ), {, this, ., compiler, =]
["JSC_MISSING_PROVIDE", ,, "missing goog.provide(''{0}'')", ), ;, CheckProvides, (, AbstractCompiler, compiler, ,, CheckLevel, checkLevel, ), {, this, ., compiler, =, compiler, ;]
["JSC_MISSING_PROVIDE", ,, "missing goog.provide(''{0}'')", ), ;, CheckProvides, (, AbstractCompiler, compiler, ,, CheckLevel, checkLevel, ), {, this, ., compiler, =, compiler, ;]
[;, CheckProvides, (, AbstractCompiler, compiler, ,, CheckLevel, checkLevel, ), {, this, ., compiler, =, compiler, ;, this, ., checkLevel, =]
[(, AbstractCompiler, compiler, ,, CheckLevel, checkLevel, ), {, this, ., compiler, =, compiler, ;, this, ., checkLevel, =, checkLevel, ;]
[(, AbstractCompiler, compiler, ,, CheckLevel, checkLevel, ), {, this, ., compiler, =, compiler, ;, this, ., checkLevel, =, checkLevel, ;]
[CheckLevel, checkLevel, ), {, this, ., compiler, =, compiler, ;, this, ., checkLevel, =, checkLevel, ;, this, ., codingConvention, =]
[CheckLevel, checkLevel, ), {, this, ., compiler, =, compiler, ;, this, ., checkLevel, =, checkLevel, ;, this, ., codingConvention, =]
[compiler, ., getCodingConvention, (, ), ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {]
[getCodingConvention, (, ), ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, hotSwapScript, (]
[), ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, hotSwapScript, (, root, ,]
[null, ), ;, }, @, Override, public, void, hotSwapScript, (, Node, scriptRoot, ,, Node, originalRoot, ), {, CheckProvidesCallback, callback, =]
[}, @, Override, public, void, hotSwapScript, (, Node, scriptRoot, ,, Node, originalRoot, ), {, CheckProvidesCallback, callback, =, new, CheckProvidesCallback, (]
[public, void, hotSwapScript, (, Node, scriptRoot, ,, Node, originalRoot, ), {, CheckProvidesCallback, callback, =, new, CheckProvidesCallback, (, codingConvention, ), ;]
[public, void, hotSwapScript, (, Node, scriptRoot, ,, Node, originalRoot, ), {, CheckProvidesCallback, callback, =, new, CheckProvidesCallback, (, codingConvention, ), ;]
[(, Node, scriptRoot, ,, Node, originalRoot, ), {, CheckProvidesCallback, callback, =, new, CheckProvidesCallback, (, codingConvention, ), ;, new, NodeTraversal, (]
[scriptRoot, ,, Node, originalRoot, ), {, CheckProvidesCallback, callback, =, new, CheckProvidesCallback, (, codingConvention, ), ;, new, NodeTraversal, (, compiler, ,]
[{, CheckProvidesCallback, callback, =, new, CheckProvidesCallback, (, codingConvention, ), ;, new, NodeTraversal, (, compiler, ,, callback, ), ., traverse, (]
[scriptRoot, ), ;, }, private, class, CheckProvidesCallback, extends, AbstractShallowCallback, {, private, final, Map, <, String, ,, Node, >, provides, =]
[scriptRoot, ), ;, }, private, class, CheckProvidesCallback, extends, AbstractShallowCallback, {, private, final, Map, <, String, ,, Node, >, provides, =]
[Node, >, provides, =, Maps, ., newHashMap, (, ), ;, private, final, Map, <, String, ,, Node, >, ctors, =]
[Node, >, provides, =, Maps, ., newHashMap, (, ), ;, private, final, Map, <, String, ,, Node, >, ctors, =]
[>, ctors, =, Maps, ., newHashMap, (, ), ;, private, final, CodingConvention, convention, ;, CheckProvidesCallback, (, CodingConvention, convention, ), {]
[>, ctors, =, Maps, ., newHashMap, (, ), ;, private, final, CodingConvention, convention, ;, CheckProvidesCallback, (, CodingConvention, convention, ), {]
[., newHashMap, (, ), ;, private, final, CodingConvention, convention, ;, CheckProvidesCallback, (, CodingConvention, convention, ), {, this, ., convention, =]
[;, }, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, switch, (]
[;, }, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, switch, (]
[NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, switch, (, n, ., getType, (, ), ), {, case]
[NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, switch, (, n, ., getType, (, ), ), {, case]
[parent, ), {, switch, (, n, ., getType, (, ), ), {, case, Token, ., CALL, :, String, providedClassName, =]
[parent, ), {, switch, (, n, ., getType, (, ), ), {, case, Token, ., CALL, :, String, providedClassName, =]
[(, n, ., getType, (, ), ), {, case, Token, ., CALL, :, String, providedClassName, =, codingConvention, ., extractClassNameIfProvide, (]
[., getType, (, ), ), {, case, Token, ., CALL, :, String, providedClassName, =, codingConvention, ., extractClassNameIfProvide, (, n, ,]
[{, case, Token, ., CALL, :, String, providedClassName, =, codingConvention, ., extractClassNameIfProvide, (, n, ,, parent, ), ;, if, (]
[{, case, Token, ., CALL, :, String, providedClassName, =, codingConvention, ., extractClassNameIfProvide, (, n, ,, parent, ), ;, if, (]
[Token, ., CALL, :, String, providedClassName, =, codingConvention, ., extractClassNameIfProvide, (, n, ,, parent, ), ;, if, (, providedClassName, !=]
[:, String, providedClassName, =, codingConvention, ., extractClassNameIfProvide, (, n, ,, parent, ), ;, if, (, providedClassName, !=, null, ), {]
[:, String, providedClassName, =, codingConvention, ., extractClassNameIfProvide, (, n, ,, parent, ), ;, if, (, providedClassName, !=, null, ), {]
[codingConvention, ., extractClassNameIfProvide, (, n, ,, parent, ), ;, if, (, providedClassName, !=, null, ), {, provides, ., put, (]
[extractClassNameIfProvide, (, n, ,, parent, ), ;, if, (, providedClassName, !=, null, ), {, provides, ., put, (, providedClassName, ,]
[if, (, providedClassName, !=, null, ), {, provides, ., put, (, providedClassName, ,, n, ), ;, }, break, ;, case]
[if, (, providedClassName, !=, null, ), {, provides, ., put, (, providedClassName, ,, n, ), ;, }, break, ;, case]
[null, ), {, provides, ., put, (, providedClassName, ,, n, ), ;, }, break, ;, case, Token, ., FUNCTION, :]
[{, provides, ., put, (, providedClassName, ,, n, ), ;, }, break, ;, case, Token, ., FUNCTION, :, visitFunctionNode, (]
[., put, (, providedClassName, ,, n, ), ;, }, break, ;, case, Token, ., FUNCTION, :, visitFunctionNode, (, n, ,]
[), ;, }, break, ;, case, Token, ., FUNCTION, :, visitFunctionNode, (, n, ,, parent, ), ;, break, ;, case]
[), ;, }, break, ;, case, Token, ., FUNCTION, :, visitFunctionNode, (, n, ,, parent, ), ;, break, ;, case]
[;, case, Token, ., FUNCTION, :, visitFunctionNode, (, n, ,, parent, ), ;, break, ;, case, Token, ., SCRIPT, :]
[Token, ., FUNCTION, :, visitFunctionNode, (, n, ,, parent, ), ;, break, ;, case, Token, ., SCRIPT, :, visitScriptNode, (]
[FUNCTION, :, visitFunctionNode, (, n, ,, parent, ), ;, break, ;, case, Token, ., SCRIPT, :, visitScriptNode, (, t, ,]
[,, n, ), ;, }, }, private, void, visitFunctionNode, (, Node, n, ,, Node, parent, ), {, Node, name, =]
[}, private, void, visitFunctionNode, (, Node, n, ,, Node, parent, ), {, Node, name, =, null, ;, JSDocInfo, info, =]
[}, private, void, visitFunctionNode, (, Node, n, ,, Node, parent, ), {, Node, name, =, null, ;, JSDocInfo, info, =]
[Node, parent, ), {, Node, name, =, null, ;, JSDocInfo, info, =, parent, ., getJSDocInfo, (, ), ;, if, (]
[Node, parent, ), {, Node, name, =, null, ;, JSDocInfo, info, =, parent, ., getJSDocInfo, (, ), ;, if, (]
[Node, parent, ), {, Node, name, =, null, ;, JSDocInfo, info, =, parent, ., getJSDocInfo, (, ), ;, if, (]
[), {, Node, name, =, null, ;, JSDocInfo, info, =, parent, ., getJSDocInfo, (, ), ;, if, (, info, !=]
[Node, name, =, null, ;, JSDocInfo, info, =, parent, ., getJSDocInfo, (, ), ;, if, (, info, !=, null, &&]
[Node, name, =, null, ;, JSDocInfo, info, =, parent, ., getJSDocInfo, (, ), ;, if, (, info, !=, null, &&]
[=, parent, ., getJSDocInfo, (, ), ;, if, (, info, !=, null, &&, info, ., isConstructor, (, ), ), {]
[., getJSDocInfo, (, ), ;, if, (, info, !=, null, &&, info, ., isConstructor, (, ), ), {, name, =]
[., getJSDocInfo, (, ), ;, if, (, info, !=, null, &&, info, ., isConstructor, (, ), ), {, name, =]
[null, &&, info, ., isConstructor, (, ), ), {, name, =, parent, ., getFirstChild, (, ), ;, }, else, {]
[info, ., isConstructor, (, ), ), {, name, =, parent, ., getFirstChild, (, ), ;, }, else, {, info, =]
[info, ., isConstructor, (, ), ), {, name, =, parent, ., getFirstChild, (, ), ;, }, else, {, info, =]
[=, parent, ., getFirstChild, (, ), ;, }, else, {, info, =, n, ., getJSDocInfo, (, ), ;, if, (]
[=, parent, ., getFirstChild, (, ), ;, }, else, {, info, =, n, ., getJSDocInfo, (, ), ;, if, (]
[=, parent, ., getFirstChild, (, ), ;, }, else, {, info, =, n, ., getJSDocInfo, (, ), ;, if, (]
[., getFirstChild, (, ), ;, }, else, {, info, =, n, ., getJSDocInfo, (, ), ;, if, (, info, !=]
[(, ), ;, }, else, {, info, =, n, ., getJSDocInfo, (, ), ;, if, (, info, !=, null, &&]
[(, ), ;, }, else, {, info, =, n, ., getJSDocInfo, (, ), ;, if, (, info, !=, null, &&]
[=, n, ., getJSDocInfo, (, ), ;, if, (, info, !=, null, &&, info, ., isConstructor, (, ), ), {]
[., getJSDocInfo, (, ), ;, if, (, info, !=, null, &&, info, ., isConstructor, (, ), ), {, name, =]
[., getJSDocInfo, (, ), ;, if, (, info, !=, null, &&, info, ., isConstructor, (, ), ), {, name, =]
[&&, info, ., isConstructor, (, ), ), {, name, =, n, ., getFirstChild, (, ), ;, }, }, if, (]
[&&, info, ., isConstructor, (, ), ), {, name, =, n, ., getFirstChild, (, ), ;, }, }, if, (]
[&&, info, ., isConstructor, (, ), ), {, name, =, n, ., getFirstChild, (, ), ;, }, }, if, (]
[., isConstructor, (, ), ), {, name, =, n, ., getFirstChild, (, ), ;, }, }, if, (, name, !=]
[(, ), ), {, name, =, n, ., getFirstChild, (, ), ;, }, }, if, (, name, !=, null, &&]
[(, ), ), {, name, =, n, ., getFirstChild, (, ), ;, }, }, if, (, name, !=, null, &&]
[), ;, }, }, if, (, name, !=, null, &&, name, ., isQualifiedName, (, ), ), {, String, qualifiedName, =]
[), ;, }, }, if, (, name, !=, null, &&, name, ., isQualifiedName, (, ), ), {, String, qualifiedName, =]
[null, &&, name, ., isQualifiedName, (, ), ), {, String, qualifiedName, =, name, ., getQualifiedName, (, ), ;, if, (]
[&&, name, ., isQualifiedName, (, ), ), {, String, qualifiedName, =, name, ., getQualifiedName, (, ), ;, if, (, !]
[&&, name, ., isQualifiedName, (, ), ), {, String, qualifiedName, =, name, ., getQualifiedName, (, ), ;, if, (, !]
[&&, name, ., isQualifiedName, (, ), ), {, String, qualifiedName, =, name, ., getQualifiedName, (, ), ;, if, (, !]
[), {, String, qualifiedName, =, name, ., getQualifiedName, (, ), ;, if, (, !, this, ., convention, ., isPrivate, (]
[getQualifiedName, (, ), ;, if, (, !, this, ., convention, ., isPrivate, (, qualifiedName, ), ), {, Visibility, visibility, =]
[getQualifiedName, (, ), ;, if, (, !, this, ., convention, ., isPrivate, (, qualifiedName, ), ), {, Visibility, visibility, =]
[., convention, ., isPrivate, (, qualifiedName, ), ), {, Visibility, visibility, =, info, ., getVisibility, (, ), ;, if, (]
[convention, ., isPrivate, (, qualifiedName, ), ), {, Visibility, visibility, =, info, ., getVisibility, (, ), ;, if, (, !]
[convention, ., isPrivate, (, qualifiedName, ), ), {, Visibility, visibility, =, info, ., getVisibility, (, ), ;, if, (, !]
[qualifiedName, ), ), {, Visibility, visibility, =, info, ., getVisibility, (, ), ;, if, (, !, visibility, ., equals, (]
[qualifiedName, ), ), {, Visibility, visibility, =, info, ., getVisibility, (, ), ;, if, (, !, visibility, ., equals, (]
[qualifiedName, ), ), {, Visibility, visibility, =, info, ., getVisibility, (, ), ;, if, (, !, visibility, ., equals, (]
[., getVisibility, (, ), ;, if, (, !, visibility, ., equals, (, JSDocInfo, ., Visibility, ., PRIVATE, ), ), {]
[., getVisibility, (, ), ;, if, (, !, visibility, ., equals, (, JSDocInfo, ., Visibility, ., PRIVATE, ), ), {]
[;, if, (, !, visibility, ., equals, (, JSDocInfo, ., Visibility, ., PRIVATE, ), ), {, ctors, ., put, (]
[(, !, visibility, ., equals, (, JSDocInfo, ., Visibility, ., PRIVATE, ), ), {, ctors, ., put, (, qualifiedName, ,]
[(, NodeTraversal, t, ,, Node, n, ), {, for, (, Map, ., Entry, <, String, ,, Node, >, ctorEntry, :]
[(, NodeTraversal, t, ,, Node, n, ), {, for, (, Map, ., Entry, <, String, ,, Node, >, ctorEntry, :]
[Map, ., Entry, <, String, ,, Node, >, ctorEntry, :, ctors, ., entrySet, (, ), ), {, String, ctor, =]
[Map, ., Entry, <, String, ,, Node, >, ctorEntry, :, ctors, ., entrySet, (, ), ), {, String, ctor, =]
[:, ctors, ., entrySet, (, ), ), {, String, ctor, =, ctorEntry, ., getKey, (, ), ;, int, index, =]
[ctors, ., entrySet, (, ), ), {, String, ctor, =, ctorEntry, ., getKey, (, ), ;, int, index, =, -]
[), {, String, ctor, =, ctorEntry, ., getKey, (, ), ;, int, index, =, -, 1, ;, boolean, found, =]
[=, ctorEntry, ., getKey, (, ), ;, int, index, =, -, 1, ;, boolean, found, =, false, ;, do, {]
[., getKey, (, ), ;, int, index, =, -, 1, ;, boolean, found, =, false, ;, do, {, index, =]
[., getKey, (, ), ;, int, index, =, -, 1, ;, boolean, found, =, false, ;, do, {, index, =]
[;, int, index, =, -, 1, ;, boolean, found, =, false, ;, do, {, index, =, ctor, ., indexOf, (]
[index, =, -, 1, ;, boolean, found, =, false, ;, do, {, index, =, ctor, ., indexOf, (, '.', ,]
[index, =, -, 1, ;, boolean, found, =, false, ;, do, {, index, =, ctor, ., indexOf, (, '.', ,]
[-, 1, ;, boolean, found, =, false, ;, do, {, index, =, ctor, ., indexOf, (, '.', ,, index, +]
[false, ;, do, {, index, =, ctor, ., indexOf, (, '.', ,, index, +, 1, ), ;, String, provideKey, =]
[false, ;, do, {, index, =, ctor, ., indexOf, (, '.', ,, index, +, 1, ), ;, String, provideKey, =]
[false, ;, do, {, index, =, ctor, ., indexOf, (, '.', ,, index, +, 1, ), ;, String, provideKey, =]
[do, {, index, =, ctor, ., indexOf, (, '.', ,, index, +, 1, ), ;, String, provideKey, =, index, ==]
[{, index, =, ctor, ., indexOf, (, '.', ,, index, +, 1, ), ;, String, provideKey, =, index, ==, -]
[=, ctor, ., indexOf, (, '.', ,, index, +, 1, ), ;, String, provideKey, =, index, ==, -, 1, ?]
[., indexOf, (, '.', ,, index, +, 1, ), ;, String, provideKey, =, index, ==, -, 1, ?, ctor, :]
[., indexOf, (, '.', ,, index, +, 1, ), ;, String, provideKey, =, index, ==, -, 1, ?, ctor, :]
[,, index, +, 1, ), ;, String, provideKey, =, index, ==, -, 1, ?, ctor, :, ctor, ., substring, (]
[+, 1, ), ;, String, provideKey, =, index, ==, -, 1, ?, ctor, :, ctor, ., substring, (, 0, ,]
[provideKey, =, index, ==, -, 1, ?, ctor, :, ctor, ., substring, (, 0, ,, index, ), ;, if, (]
[provideKey, =, index, ==, -, 1, ?, ctor, :, ctor, ., substring, (, 0, ,, index, ), ;, if, (]
[-, 1, ?, ctor, :, ctor, ., substring, (, 0, ,, index, ), ;, if, (, provides, ., containsKey, (]
[:, ctor, ., substring, (, 0, ,, index, ), ;, if, (, provides, ., containsKey, (, provideKey, ), ), {]
[., substring, (, 0, ,, index, ), ;, if, (, provides, ., containsKey, (, provideKey, ), ), {, found, =]
[if, (, provides, ., containsKey, (, provideKey, ), ), {, found, =, true, ;, break, ;, }, }, while, (]
[if, (, provides, ., containsKey, (, provideKey, ), ), {, found, =, true, ;, break, ;, }, }, while, (]
[provides, ., containsKey, (, provideKey, ), ), {, found, =, true, ;, break, ;, }, }, while, (, index, !=]
[., containsKey, (, provideKey, ), ), {, found, =, true, ;, break, ;, }, }, while, (, index, !=, -]
[), {, found, =, true, ;, break, ;, }, }, while, (, index, !=, -, 1, ), ;, if, (]
[{, found, =, true, ;, break, ;, }, }, while, (, index, !=, -, 1, ), ;, if, (, !]
[true, ;, break, ;, }, }, while, (, index, !=, -, 1, ), ;, if, (, !, found, ), {]
[true, ;, break, ;, }, }, while, (, index, !=, -, 1, ), ;, if, (, !, found, ), {]
[}, }, while, (, index, !=, -, 1, ), ;, if, (, !, found, ), {, compiler, ., report, (]
[}, }, while, (, index, !=, -, 1, ), ;, if, (, !, found, ), {, compiler, ., report, (]
[index, !=, -, 1, ), ;, if, (, !, found, ), {, compiler, ., report, (, t, ., makeError, (]
[index, !=, -, 1, ), ;, if, (, !, found, ), {, compiler, ., report, (, t, ., makeError, (]
[if, (, !, found, ), {, compiler, ., report, (, t, ., makeError, (, ctorEntry, ., getValue, (, ), ,]
[!, found, ), {, compiler, ., report, (, t, ., makeError, (, ctorEntry, ., getValue, (, ), ,, checkLevel, ,]
[), {, compiler, ., report, (, t, ., makeError, (, ctorEntry, ., getValue, (, ), ,, checkLevel, ,, MISSING_PROVIDE_WARNING, ,]
[), {, compiler, ., report, (, t, ., makeError, (, ctorEntry, ., getValue, (, ), ,, checkLevel, ,, MISSING_PROVIDE_WARNING, ,]
[ctorEntry, ., getValue, (, ), ,, checkLevel, ,, MISSING_PROVIDE_WARNING, ,, ctorEntry, ., getKey, (, ), ), ), ;, }, }]
[ctorEntry, ., getValue, (, ), ,, checkLevel, ,, MISSING_PROVIDE_WARNING, ,, ctorEntry, ., getKey, (, ), ), ), ;, }, }]
[checkLevel, ,, MISSING_PROVIDE_WARNING, ,, ctorEntry, ., getKey, (, ), ), ), ;, }, }, provides, ., clear, (, ), ;]
[checkLevel, ,, MISSING_PROVIDE_WARNING, ,, ctorEntry, ., getKey, (, ), ), ), ;, }, }, provides, ., clear, (, ), ;]
