[), ;, }, public, AxisState, (, double, cursor, ), {, this, ., cursor, =, cursor, ;, this, ., ticks, =]
[=, cursor, ;, this, ., ticks, =, new, java, ., util, ., ArrayList, (, ), ;, }, public, double, getCursor]
[., cursor, =, cursor, ;, this, ., ticks, =, new, java, ., util, ., ArrayList, (, ), ;, }, public]
[;, this, ., ticks, =, new, java, ., util, ., ArrayList, (, ), ;, }, public, double, getCursor, (, )]
[=, new, java, ., util, ., ArrayList, (, ), ;, }, public, double, getCursor, (, ), {, return, this, .]
[., ticks, =, new, java, ., util, ., ArrayList, (, ), ;, }, public, double, getCursor, (, ), {, return]
[;, }, public, double, getCursor, (, ), {, return, this, ., cursor, ;, }, public, void, setCursor, (, double, cursor]
[;, }, public, void, setCursor, (, double, cursor, ), {, this, ., cursor, =, cursor, ;, }, public, void, moveCursor]
[., cursor, ;, }, public, void, setCursor, (, double, cursor, ), {, this, ., cursor, =, cursor, ;, }, public]
[=, cursor, ;, }, public, void, moveCursor, (, double, units, ,, RectangleEdge, edge, ), {, if, (, edge, ==, RectangleEdge]
[., cursor, =, cursor, ;, }, public, void, moveCursor, (, double, units, ,, RectangleEdge, edge, ), {, if, (, edge]
[;, }, public, void, moveCursor, (, double, units, ,, RectangleEdge, edge, ), {, if, (, edge, ==, RectangleEdge, ., TOP]
[), {, cursorUp, (, units, ), ;, }, else, if, (, edge, ==, RectangleEdge, ., BOTTOM, ), {, cursorDown, (]
[==, RectangleEdge, ., TOP, ), {, cursorUp, (, units, ), ;, }, else, if, (, edge, ==, RectangleEdge, ., BOTTOM]
[), {, cursorUp, (, units, ), ;, }, else, if, (, edge, ==, RectangleEdge, ., BOTTOM, ), {, cursorDown, (]
[., TOP, ), {, cursorUp, (, units, ), ;, }, else, if, (, edge, ==, RectangleEdge, ., BOTTOM, ), {]
[;, }, else, if, (, edge, ==, RectangleEdge, ., BOTTOM, ), {, cursorDown, (, units, ), ;, }, else, if]
[), ;, }, else, if, (, edge, ==, RectangleEdge, ., BOTTOM, ), {, cursorDown, (, units, ), ;, }, else]
[), {, cursorDown, (, units, ), ;, }, else, if, (, edge, ==, RectangleEdge, ., LEFT, ), {, cursorLeft, (]
[==, RectangleEdge, ., BOTTOM, ), {, cursorDown, (, units, ), ;, }, else, if, (, edge, ==, RectangleEdge, ., LEFT]
[), {, cursorDown, (, units, ), ;, }, else, if, (, edge, ==, RectangleEdge, ., LEFT, ), {, cursorLeft, (]
[., BOTTOM, ), {, cursorDown, (, units, ), ;, }, else, if, (, edge, ==, RectangleEdge, ., LEFT, ), {]
[;, }, else, if, (, edge, ==, RectangleEdge, ., LEFT, ), {, cursorLeft, (, units, ), ;, }, else, if]
[), ;, }, else, if, (, edge, ==, RectangleEdge, ., LEFT, ), {, cursorLeft, (, units, ), ;, }, else]
[), {, cursorLeft, (, units, ), ;, }, else, if, (, edge, ==, RectangleEdge, ., RIGHT, ), {, cursorRight, (]
[==, RectangleEdge, ., LEFT, ), {, cursorLeft, (, units, ), ;, }, else, if, (, edge, ==, RectangleEdge, ., RIGHT]
[), {, cursorLeft, (, units, ), ;, }, else, if, (, edge, ==, RectangleEdge, ., RIGHT, ), {, cursorRight, (]
[., LEFT, ), {, cursorLeft, (, units, ), ;, }, else, if, (, edge, ==, RectangleEdge, ., RIGHT, ), {]
[;, }, else, if, (, edge, ==, RectangleEdge, ., RIGHT, ), {, cursorRight, (, units, ), ;, }, }, public]
[), ;, }, else, if, (, edge, ==, RectangleEdge, ., RIGHT, ), {, cursorRight, (, units, ), ;, }, }]
[), {, cursorRight, (, units, ), ;, }, }, public, void, cursorUp, (, double, units, ), {, this, ., cursor]
[==, RectangleEdge, ., RIGHT, ), {, cursorRight, (, units, ), ;, }, }, public, void, cursorUp, (, double, units, )]
[), {, cursorRight, (, units, ), ;, }, }, public, void, cursorUp, (, double, units, ), {, this, ., cursor]
[., RIGHT, ), {, cursorRight, (, units, ), ;, }, }, public, void, cursorUp, (, double, units, ), {, this]
[;, }, }, public, void, cursorUp, (, double, units, ), {, this, ., cursor, =, this, ., cursor, -, units]
[), ;, }, }, public, void, cursorUp, (, double, units, ), {, this, ., cursor, =, this, ., cursor, -]
[=, this, ., cursor, -, units, ;, }, public, void, cursorDown, (, double, units, ), {, this, ., cursor, =]
[., cursor, =, this, ., cursor, -, units, ;, }, public, void, cursorDown, (, double, units, ), {, this, .]
[;, }, public, void, cursorDown, (, double, units, ), {, this, ., cursor, =, this, ., cursor, +, units, ;]
[-, units, ;, }, public, void, cursorDown, (, double, units, ), {, this, ., cursor, =, this, ., cursor, +]
[., cursor, -, units, ;, }, public, void, cursorDown, (, double, units, ), {, this, ., cursor, =, this, .]
[;, }, public, void, cursorDown, (, double, units, ), {, this, ., cursor, =, this, ., cursor, +, units, ;]
[=, this, ., cursor, +, units, ;, }, public, void, cursorLeft, (, double, units, ), {, this, ., cursor, =]
[., cursor, =, this, ., cursor, +, units, ;, }, public, void, cursorLeft, (, double, units, ), {, this, .]
[;, }, public, void, cursorLeft, (, double, units, ), {, this, ., cursor, =, this, ., cursor, -, units, ;]
[+, units, ;, }, public, void, cursorLeft, (, double, units, ), {, this, ., cursor, =, this, ., cursor, -]
[., cursor, +, units, ;, }, public, void, cursorLeft, (, double, units, ), {, this, ., cursor, =, this, .]
[;, }, public, void, cursorLeft, (, double, units, ), {, this, ., cursor, =, this, ., cursor, -, units, ;]
[=, this, ., cursor, -, units, ;, }, public, void, cursorRight, (, double, units, ), {, this, ., cursor, =]
[., cursor, =, this, ., cursor, -, units, ;, }, public, void, cursorRight, (, double, units, ), {, this, .]
[;, }, public, void, cursorRight, (, double, units, ), {, this, ., cursor, =, this, ., cursor, +, units, ;]
[-, units, ;, }, public, void, cursorRight, (, double, units, ), {, this, ., cursor, =, this, ., cursor, +]
[., cursor, -, units, ;, }, public, void, cursorRight, (, double, units, ), {, this, ., cursor, =, this, .]
[;, }, public, void, cursorRight, (, double, units, ), {, this, ., cursor, =, this, ., cursor, +, units, ;]
[=, this, ., cursor, +, units, ;, }, public, List, getTicks, (, ), {, return, this, ., ticks, ;, }]
[., cursor, =, this, ., cursor, +, units, ;, }, public, List, getTicks, (, ), {, return, this, ., ticks]
[;, }, public, List, getTicks, (, ), {, return, this, ., ticks, ;, }, public, void, setTicks, (, List, ticks]
[+, units, ;, }, public, List, getTicks, (, ), {, return, this, ., ticks, ;, }, public, void, setTicks, (]
[., cursor, +, units, ;, }, public, List, getTicks, (, ), {, return, this, ., ticks, ;, }, public, void]
[;, }, public, List, getTicks, (, ), {, return, this, ., ticks, ;, }, public, void, setTicks, (, List, ticks]
[;, }, public, void, setTicks, (, List, ticks, ), {, this, ., ticks, =, ticks, ;, }, public, double, getMax]
[., ticks, ;, }, public, void, setTicks, (, List, ticks, ), {, this, ., ticks, =, ticks, ;, }, public]
[=, ticks, ;, }, public, double, getMax, (, ), {, return, this, ., max, ;, }, public, void, setMax, (]
[., ticks, =, ticks, ;, }, public, double, getMax, (, ), {, return, this, ., max, ;, }, public, void]
[;, }, public, double, getMax, (, ), {, return, this, ., max, ;, }, public, void, setMax, (, double, max]
[;, }, public, void, setMax, (, double, max, ), {, this, ., max, =, max, ;, }, }]
[., max, ;, }, public, void, setMax, (, double, max, ), {, this, ., max, =, max, ;, }, }]
[=, max, ;, }, }]
[., max, =, max, ;, }, }]
[;, }, }]
