[Task, {, private, CompilerOptions, ., LanguageMode, languageIn, ;, private, WarningLevel, warningLevel, ;, private, boolean, debugOptions, ;, private, String, encoding, =]
[languageIn, ;, private, WarningLevel, warningLevel, ;, private, boolean, debugOptions, ;, private, String, encoding, =, "UTF-8", ;, private, String, outputEncoding, =]
[final, List, <, Path, >, sourcePaths, ;, private, final, List, <, Warning, >, warnings, ;, public, CompileTask, (, ), {]
[final, List, <, Path, >, sourcePaths, ;, private, final, List, <, Warning, >, warnings, ;, public, CompileTask, (, ), {]
[>, sourcePaths, ;, private, final, List, <, Warning, >, warnings, ;, public, CompileTask, (, ), {, this, ., languageIn, =]
[>, sourcePaths, ;, private, final, List, <, Warning, >, warnings, ;, public, CompileTask, (, ), {, this, ., languageIn, =]
[>, sourcePaths, ;, private, final, List, <, Warning, >, warnings, ;, public, CompileTask, (, ), {, this, ., languageIn, =]
[<, Warning, >, warnings, ;, public, CompileTask, (, ), {, this, ., languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT3, ;]
[<, Warning, >, warnings, ;, public, CompileTask, (, ), {, this, ., languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT3, ;]
[;, public, CompileTask, (, ), {, this, ., languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT3, ;, this, ., warningLevel, =]
[;, public, CompileTask, (, ), {, this, ., languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT3, ;, this, ., warningLevel, =]
[), {, this, ., languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT3, ;, this, ., warningLevel, =, WarningLevel, ., DEFAULT, ;]
[), {, this, ., languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT3, ;, this, ., warningLevel, =, WarningLevel, ., DEFAULT, ;]
[languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT3, ;, this, ., warningLevel, =, WarningLevel, ., DEFAULT, ;, this, ., debugOptions, =]
[CompilerOptions, ., LanguageMode, ., ECMASCRIPT3, ;, this, ., warningLevel, =, WarningLevel, ., DEFAULT, ;, this, ., debugOptions, =, false, ;]
[CompilerOptions, ., LanguageMode, ., ECMASCRIPT3, ;, this, ., warningLevel, =, WarningLevel, ., DEFAULT, ;, this, ., debugOptions, =, false, ;]
[ECMASCRIPT3, ;, this, ., warningLevel, =, WarningLevel, ., DEFAULT, ;, this, ., debugOptions, =, false, ;, this, ., compilationLevel, =]
[ECMASCRIPT3, ;, this, ., warningLevel, =, WarningLevel, ., DEFAULT, ;, this, ., debugOptions, =, false, ;, this, ., compilationLevel, =]
[warningLevel, =, WarningLevel, ., DEFAULT, ;, this, ., debugOptions, =, false, ;, this, ., compilationLevel, =, CompilationLevel, ., SIMPLE_OPTIMIZATIONS, ;]
[warningLevel, =, WarningLevel, ., DEFAULT, ;, this, ., debugOptions, =, false, ;, this, ., compilationLevel, =, CompilationLevel, ., SIMPLE_OPTIMIZATIONS, ;]
[DEFAULT, ;, this, ., debugOptions, =, false, ;, this, ., compilationLevel, =, CompilationLevel, ., SIMPLE_OPTIMIZATIONS, ;, this, ., customExternsOnly, =]
[this, ., debugOptions, =, false, ;, this, ., compilationLevel, =, CompilationLevel, ., SIMPLE_OPTIMIZATIONS, ;, this, ., customExternsOnly, =, false, ;]
[this, ., debugOptions, =, false, ;, this, ., compilationLevel, =, CompilationLevel, ., SIMPLE_OPTIMIZATIONS, ;, this, ., customExternsOnly, =, false, ;]
[false, ;, this, ., compilationLevel, =, CompilationLevel, ., SIMPLE_OPTIMIZATIONS, ;, this, ., customExternsOnly, =, false, ;, this, ., manageDependencies, =]
[this, ., compilationLevel, =, CompilationLevel, ., SIMPLE_OPTIMIZATIONS, ;, this, ., customExternsOnly, =, false, ;, this, ., manageDependencies, =, false, ;]
[this, ., compilationLevel, =, CompilationLevel, ., SIMPLE_OPTIMIZATIONS, ;, this, ., customExternsOnly, =, false, ;, this, ., manageDependencies, =, false, ;]
[CompilationLevel, ., SIMPLE_OPTIMIZATIONS, ;, this, ., customExternsOnly, =, false, ;, this, ., manageDependencies, =, false, ;, this, ., prettyPrint, =]
[SIMPLE_OPTIMIZATIONS, ;, this, ., customExternsOnly, =, false, ;, this, ., manageDependencies, =, false, ;, this, ., prettyPrint, =, false, ;]
[SIMPLE_OPTIMIZATIONS, ;, this, ., customExternsOnly, =, false, ;, this, ., manageDependencies, =, false, ;, this, ., prettyPrint, =, false, ;]
[customExternsOnly, =, false, ;, this, ., manageDependencies, =, false, ;, this, ., prettyPrint, =, false, ;, this, ., printInputDelimiter, =]
[false, ;, this, ., manageDependencies, =, false, ;, this, ., prettyPrint, =, false, ;, this, ., printInputDelimiter, =, false, ;]
[false, ;, this, ., manageDependencies, =, false, ;, this, ., prettyPrint, =, false, ;, this, ., printInputDelimiter, =, false, ;]
[manageDependencies, =, false, ;, this, ., prettyPrint, =, false, ;, this, ., printInputDelimiter, =, false, ;, this, ., generateExports, =]
[false, ;, this, ., prettyPrint, =, false, ;, this, ., printInputDelimiter, =, false, ;, this, ., generateExports, =, false, ;]
[false, ;, this, ., prettyPrint, =, false, ;, this, ., printInputDelimiter, =, false, ;, this, ., generateExports, =, false, ;]
[prettyPrint, =, false, ;, this, ., printInputDelimiter, =, false, ;, this, ., generateExports, =, false, ;, this, ., replaceProperties, =]
[false, ;, this, ., printInputDelimiter, =, false, ;, this, ., generateExports, =, false, ;, this, ., replaceProperties, =, false, ;]
[false, ;, this, ., printInputDelimiter, =, false, ;, this, ., generateExports, =, false, ;, this, ., replaceProperties, =, false, ;]
[printInputDelimiter, =, false, ;, this, ., generateExports, =, false, ;, this, ., replaceProperties, =, false, ;, this, ., forceRecompile, =]
[false, ;, this, ., generateExports, =, false, ;, this, ., replaceProperties, =, false, ;, this, ., forceRecompile, =, false, ;]
[false, ;, this, ., generateExports, =, false, ;, this, ., replaceProperties, =, false, ;, this, ., forceRecompile, =, false, ;]
[generateExports, =, false, ;, this, ., replaceProperties, =, false, ;, this, ., forceRecompile, =, false, ;, this, ., replacePropertiesPrefix, =]
[false, ;, this, ., replaceProperties, =, false, ;, this, ., forceRecompile, =, false, ;, this, ., replacePropertiesPrefix, =, "closure.define.", ;]
[false, ;, this, ., replaceProperties, =, false, ;, this, ., forceRecompile, =, false, ;, this, ., replacePropertiesPrefix, =, "closure.define.", ;]
[replaceProperties, =, false, ;, this, ., forceRecompile, =, false, ;, this, ., replacePropertiesPrefix, =, "closure.define.", ;, this, ., defineParams, =]
[replaceProperties, =, false, ;, this, ., forceRecompile, =, false, ;, this, ., replacePropertiesPrefix, =, "closure.define.", ;, this, ., defineParams, =]
[forceRecompile, =, false, ;, this, ., replacePropertiesPrefix, =, "closure.define.", ;, this, ., defineParams, =, Lists, ., newLinkedList, (, ), ;]
[forceRecompile, =, false, ;, this, ., replacePropertiesPrefix, =, "closure.define.", ;, this, ., defineParams, =, Lists, ., newLinkedList, (, ), ;]
[this, ., replacePropertiesPrefix, =, "closure.define.", ;, this, ., defineParams, =, Lists, ., newLinkedList, (, ), ;, this, ., externFileLists, =]
[this, ., replacePropertiesPrefix, =, "closure.define.", ;, this, ., defineParams, =, Lists, ., newLinkedList, (, ), ;, this, ., externFileLists, =]
[this, ., defineParams, =, Lists, ., newLinkedList, (, ), ;, this, ., externFileLists, =, Lists, ., newLinkedList, (, ), ;]
[this, ., defineParams, =, Lists, ., newLinkedList, (, ), ;, this, ., externFileLists, =, Lists, ., newLinkedList, (, ), ;]
[Lists, ., newLinkedList, (, ), ;, this, ., externFileLists, =, Lists, ., newLinkedList, (, ), ;, this, ., sourceFileLists, =]
[Lists, ., newLinkedList, (, ), ;, this, ., externFileLists, =, Lists, ., newLinkedList, (, ), ;, this, ., sourceFileLists, =]
[this, ., externFileLists, =, Lists, ., newLinkedList, (, ), ;, this, ., sourceFileLists, =, Lists, ., newLinkedList, (, ), ;]
[this, ., externFileLists, =, Lists, ., newLinkedList, (, ), ;, this, ., sourceFileLists, =, Lists, ., newLinkedList, (, ), ;]
[Lists, ., newLinkedList, (, ), ;, this, ., sourceFileLists, =, Lists, ., newLinkedList, (, ), ;, this, ., sourcePaths, =]
[Lists, ., newLinkedList, (, ), ;, this, ., sourceFileLists, =, Lists, ., newLinkedList, (, ), ;, this, ., sourcePaths, =]
[this, ., sourceFileLists, =, Lists, ., newLinkedList, (, ), ;, this, ., sourcePaths, =, Lists, ., newLinkedList, (, ), ;]
[this, ., sourceFileLists, =, Lists, ., newLinkedList, (, ), ;, this, ., sourcePaths, =, Lists, ., newLinkedList, (, ), ;]
[Lists, ., newLinkedList, (, ), ;, this, ., sourcePaths, =, Lists, ., newLinkedList, (, ), ;, this, ., warnings, =]
[Lists, ., newLinkedList, (, ), ;, this, ., sourcePaths, =, Lists, ., newLinkedList, (, ), ;, this, ., warnings, =]
[., warnings, =, Lists, ., newLinkedList, (, ), ;, }, public, void, setLanguageIn, (, String, value, ), {, if, (]
[., warnings, =, Lists, ., newLinkedList, (, ), ;, }, public, void, setLanguageIn, (, String, value, ), {, if, (]
[., warnings, =, Lists, ., newLinkedList, (, ), ;, }, public, void, setLanguageIn, (, String, value, ), {, if, (]
[., newLinkedList, (, ), ;, }, public, void, setLanguageIn, (, String, value, ), {, if, (, value, ., equals, (]
[), ;, }, public, void, setLanguageIn, (, String, value, ), {, if, (, value, ., equals, (, "ECMASCRIPT5_STRICT", ), ||]
[), ;, }, public, void, setLanguageIn, (, String, value, ), {, if, (, value, ., equals, (, "ECMASCRIPT5_STRICT", ), ||]
[void, setLanguageIn, (, String, value, ), {, if, (, value, ., equals, (, "ECMASCRIPT5_STRICT", ), ||, value, ., equals, (]
[value, ), {, if, (, value, ., equals, (, "ECMASCRIPT5_STRICT", ), ||, value, ., equals, (, "ES5_STRICT", ), ), {]
[value, ), {, if, (, value, ., equals, (, "ECMASCRIPT5_STRICT", ), ||, value, ., equals, (, "ES5_STRICT", ), ), {]
[(, value, ., equals, (, "ECMASCRIPT5_STRICT", ), ||, value, ., equals, (, "ES5_STRICT", ), ), {, this, ., languageIn, =]
[(, value, ., equals, (, "ECMASCRIPT5_STRICT", ), ||, value, ., equals, (, "ES5_STRICT", ), ), {, this, ., languageIn, =]
[(, value, ., equals, (, "ECMASCRIPT5_STRICT", ), ||, value, ., equals, (, "ES5_STRICT", ), ), {, this, ., languageIn, =]
[equals, (, "ES5_STRICT", ), ), {, this, ., languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT5_STRICT, ;, }, else, if, (]
[equals, (, "ES5_STRICT", ), ), {, this, ., languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT5_STRICT, ;, }, else, if, (]
[equals, (, "ES5_STRICT", ), ), {, this, ., languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT5_STRICT, ;, }, else, if, (]
[), {, this, ., languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT5_STRICT, ;, }, else, if, (, value, ., equals, (]
[., languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT5_STRICT, ;, }, else, if, (, value, ., equals, (, "ECMASCRIPT5", ), ||]
[., languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT5_STRICT, ;, }, else, if, (, value, ., equals, (, "ECMASCRIPT5", ), ||]
[., LanguageMode, ., ECMASCRIPT5_STRICT, ;, }, else, if, (, value, ., equals, (, "ECMASCRIPT5", ), ||, value, ., equals, (]
[;, }, else, if, (, value, ., equals, (, "ECMASCRIPT5", ), ||, value, ., equals, (, "ES5", ), ), {]
[;, }, else, if, (, value, ., equals, (, "ECMASCRIPT5", ), ||, value, ., equals, (, "ES5", ), ), {]
[(, value, ., equals, (, "ECMASCRIPT5", ), ||, value, ., equals, (, "ES5", ), ), {, this, ., languageIn, =]
[(, value, ., equals, (, "ECMASCRIPT5", ), ||, value, ., equals, (, "ES5", ), ), {, this, ., languageIn, =]
[(, value, ., equals, (, "ECMASCRIPT5", ), ||, value, ., equals, (, "ES5", ), ), {, this, ., languageIn, =]
[equals, (, "ES5", ), ), {, this, ., languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT5, ;, }, else, if, (]
[equals, (, "ES5", ), ), {, this, ., languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT5, ;, }, else, if, (]
[equals, (, "ES5", ), ), {, this, ., languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT5, ;, }, else, if, (]
[), {, this, ., languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT5, ;, }, else, if, (, value, ., equals, (]
[., languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT5, ;, }, else, if, (, value, ., equals, (, "ECMASCRIPT3", ), ||]
[., languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT5, ;, }, else, if, (, value, ., equals, (, "ECMASCRIPT3", ), ||]
[., LanguageMode, ., ECMASCRIPT5, ;, }, else, if, (, value, ., equals, (, "ECMASCRIPT3", ), ||, value, ., equals, (]
[;, }, else, if, (, value, ., equals, (, "ECMASCRIPT3", ), ||, value, ., equals, (, "ES3", ), ), {]
[;, }, else, if, (, value, ., equals, (, "ECMASCRIPT3", ), ||, value, ., equals, (, "ES3", ), ), {]
[(, value, ., equals, (, "ECMASCRIPT3", ), ||, value, ., equals, (, "ES3", ), ), {, this, ., languageIn, =]
[(, value, ., equals, (, "ECMASCRIPT3", ), ||, value, ., equals, (, "ES3", ), ), {, this, ., languageIn, =]
[(, value, ., equals, (, "ECMASCRIPT3", ), ||, value, ., equals, (, "ES3", ), ), {, this, ., languageIn, =]
[equals, (, "ES3", ), ), {, this, ., languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT3, ;, }, else, {, throw]
[), ), {, this, ., languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT3, ;, }, else, {, throw, new, BuildException, (]
[), ), {, this, ., languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT3, ;, }, else, {, throw, new, BuildException, (]
[), ), {, this, ., languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT3, ;, }, else, {, throw, new, BuildException, (]
[{, this, ., languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT3, ;, }, else, {, throw, new, BuildException, (, "Unrecognized 'languageIn' option value (", +]
[., languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT3, ;, }, else, {, throw, new, BuildException, (, "Unrecognized 'languageIn' option value (", +, value, +]
[(, "Unrecognized 'languageIn' option value (", +, value, +, ")", ), ;, }, }, public, void, setWarning, (, String, value, ), {, if, (]
[(, "Unrecognized 'languageIn' option value (", +, value, +, ")", ), ;, }, }, public, void, setWarning, (, String, value, ), {, if, (]
[+, ")", ), ;, }, }, public, void, setWarning, (, String, value, ), {, if, (, "default", ., equalsIgnoreCase, (]
[}, }, public, void, setWarning, (, String, value, ), {, if, (, "default", ., equalsIgnoreCase, (, value, ), ), {]
[}, }, public, void, setWarning, (, String, value, ), {, if, (, "default", ., equalsIgnoreCase, (, value, ), ), {]
[setWarning, (, String, value, ), {, if, (, "default", ., equalsIgnoreCase, (, value, ), ), {, this, ., warningLevel, =]
[setWarning, (, String, value, ), {, if, (, "default", ., equalsIgnoreCase, (, value, ), ), {, this, ., warningLevel, =]
["default", ., equalsIgnoreCase, (, value, ), ), {, this, ., warningLevel, =, WarningLevel, ., DEFAULT, ;, }, else, if, (]
["default", ., equalsIgnoreCase, (, value, ), ), {, this, ., warningLevel, =, WarningLevel, ., DEFAULT, ;, }, else, if, (]
[value, ), ), {, this, ., warningLevel, =, WarningLevel, ., DEFAULT, ;, }, else, if, (, "quiet", ., equalsIgnoreCase, (]
[this, ., warningLevel, =, WarningLevel, ., DEFAULT, ;, }, else, if, (, "quiet", ., equalsIgnoreCase, (, value, ), ), {]
[this, ., warningLevel, =, WarningLevel, ., DEFAULT, ;, }, else, if, (, "quiet", ., equalsIgnoreCase, (, value, ), ), {]
[WarningLevel, ., DEFAULT, ;, }, else, if, (, "quiet", ., equalsIgnoreCase, (, value, ), ), {, this, ., warningLevel, =]
[WarningLevel, ., DEFAULT, ;, }, else, if, (, "quiet", ., equalsIgnoreCase, (, value, ), ), {, this, ., warningLevel, =]
["quiet", ., equalsIgnoreCase, (, value, ), ), {, this, ., warningLevel, =, WarningLevel, ., QUIET, ;, }, else, if, (]
["quiet", ., equalsIgnoreCase, (, value, ), ), {, this, ., warningLevel, =, WarningLevel, ., QUIET, ;, }, else, if, (]
[value, ), ), {, this, ., warningLevel, =, WarningLevel, ., QUIET, ;, }, else, if, (, "verbose", ., equalsIgnoreCase, (]
[this, ., warningLevel, =, WarningLevel, ., QUIET, ;, }, else, if, (, "verbose", ., equalsIgnoreCase, (, value, ), ), {]
[this, ., warningLevel, =, WarningLevel, ., QUIET, ;, }, else, if, (, "verbose", ., equalsIgnoreCase, (, value, ), ), {]
[WarningLevel, ., QUIET, ;, }, else, if, (, "verbose", ., equalsIgnoreCase, (, value, ), ), {, this, ., warningLevel, =]
[WarningLevel, ., QUIET, ;, }, else, if, (, "verbose", ., equalsIgnoreCase, (, value, ), ), {, this, ., warningLevel, =]
["verbose", ., equalsIgnoreCase, (, value, ), ), {, this, ., warningLevel, =, WarningLevel, ., VERBOSE, ;, }, else, {, throw]
[(, value, ), ), {, this, ., warningLevel, =, WarningLevel, ., VERBOSE, ;, }, else, {, throw, new, BuildException, (]
[(, value, ), ), {, this, ., warningLevel, =, WarningLevel, ., VERBOSE, ;, }, else, {, throw, new, BuildException, (]
[(, value, ), ), {, this, ., warningLevel, =, WarningLevel, ., VERBOSE, ;, }, else, {, throw, new, BuildException, (]
[), ), {, this, ., warningLevel, =, WarningLevel, ., VERBOSE, ;, }, else, {, throw, new, BuildException, (, "Unrecognized 'warning' option value (", +]
[{, this, ., warningLevel, =, WarningLevel, ., VERBOSE, ;, }, else, {, throw, new, BuildException, (, "Unrecognized 'warning' option value (", +, value, +]
[new, BuildException, (, "Unrecognized 'warning' option value (", +, value, +, ")", ), ;, }, }, public, void, setDebug, (, boolean, value, ), {]
[new, BuildException, (, "Unrecognized 'warning' option value (", +, value, +, ")", ), ;, }, }, public, void, setDebug, (, boolean, value, ), {]
[+, value, +, ")", ), ;, }, }, public, void, setDebug, (, boolean, value, ), {, this, ., debugOptions, =]
[value, ), {, this, ., debugOptions, =, value, ;, }, public, void, setCompilationLevel, (, String, value, ), {, if, (]
[value, ), {, this, ., debugOptions, =, value, ;, }, public, void, setCompilationLevel, (, String, value, ), {, if, (]
[., debugOptions, =, value, ;, }, public, void, setCompilationLevel, (, String, value, ), {, if, (, "simple", ., equalsIgnoreCase, (]
[;, }, public, void, setCompilationLevel, (, String, value, ), {, if, (, "simple", ., equalsIgnoreCase, (, value, ), ), {]
[;, }, public, void, setCompilationLevel, (, String, value, ), {, if, (, "simple", ., equalsIgnoreCase, (, value, ), ), {]
[setCompilationLevel, (, String, value, ), {, if, (, "simple", ., equalsIgnoreCase, (, value, ), ), {, this, ., compilationLevel, =]
[setCompilationLevel, (, String, value, ), {, if, (, "simple", ., equalsIgnoreCase, (, value, ), ), {, this, ., compilationLevel, =]
["simple", ., equalsIgnoreCase, (, value, ), ), {, this, ., compilationLevel, =, CompilationLevel, ., SIMPLE_OPTIMIZATIONS, ;, }, else, if, (]
["simple", ., equalsIgnoreCase, (, value, ), ), {, this, ., compilationLevel, =, CompilationLevel, ., SIMPLE_OPTIMIZATIONS, ;, }, else, if, (]
[value, ), ), {, this, ., compilationLevel, =, CompilationLevel, ., SIMPLE_OPTIMIZATIONS, ;, }, else, if, (, "advanced", ., equalsIgnoreCase, (]
[this, ., compilationLevel, =, CompilationLevel, ., SIMPLE_OPTIMIZATIONS, ;, }, else, if, (, "advanced", ., equalsIgnoreCase, (, value, ), ), {]
[this, ., compilationLevel, =, CompilationLevel, ., SIMPLE_OPTIMIZATIONS, ;, }, else, if, (, "advanced", ., equalsIgnoreCase, (, value, ), ), {]
[CompilationLevel, ., SIMPLE_OPTIMIZATIONS, ;, }, else, if, (, "advanced", ., equalsIgnoreCase, (, value, ), ), {, this, ., compilationLevel, =]
[CompilationLevel, ., SIMPLE_OPTIMIZATIONS, ;, }, else, if, (, "advanced", ., equalsIgnoreCase, (, value, ), ), {, this, ., compilationLevel, =]
["advanced", ., equalsIgnoreCase, (, value, ), ), {, this, ., compilationLevel, =, CompilationLevel, ., ADVANCED_OPTIMIZATIONS, ;, }, else, if, (]
["advanced", ., equalsIgnoreCase, (, value, ), ), {, this, ., compilationLevel, =, CompilationLevel, ., ADVANCED_OPTIMIZATIONS, ;, }, else, if, (]
[value, ), ), {, this, ., compilationLevel, =, CompilationLevel, ., ADVANCED_OPTIMIZATIONS, ;, }, else, if, (, "whitespace", ., equalsIgnoreCase, (]
[this, ., compilationLevel, =, CompilationLevel, ., ADVANCED_OPTIMIZATIONS, ;, }, else, if, (, "whitespace", ., equalsIgnoreCase, (, value, ), ), {]
[this, ., compilationLevel, =, CompilationLevel, ., ADVANCED_OPTIMIZATIONS, ;, }, else, if, (, "whitespace", ., equalsIgnoreCase, (, value, ), ), {]
[CompilationLevel, ., ADVANCED_OPTIMIZATIONS, ;, }, else, if, (, "whitespace", ., equalsIgnoreCase, (, value, ), ), {, this, ., compilationLevel, =]
[CompilationLevel, ., ADVANCED_OPTIMIZATIONS, ;, }, else, if, (, "whitespace", ., equalsIgnoreCase, (, value, ), ), {, this, ., compilationLevel, =]
["whitespace", ., equalsIgnoreCase, (, value, ), ), {, this, ., compilationLevel, =, CompilationLevel, ., WHITESPACE_ONLY, ;, }, else, {, throw]
[(, value, ), ), {, this, ., compilationLevel, =, CompilationLevel, ., WHITESPACE_ONLY, ;, }, else, {, throw, new, BuildException, (]
[(, value, ), ), {, this, ., compilationLevel, =, CompilationLevel, ., WHITESPACE_ONLY, ;, }, else, {, throw, new, BuildException, (]
[(, value, ), ), {, this, ., compilationLevel, =, CompilationLevel, ., WHITESPACE_ONLY, ;, }, else, {, throw, new, BuildException, (]
[), ), {, this, ., compilationLevel, =, CompilationLevel, ., WHITESPACE_ONLY, ;, }, else, {, throw, new, BuildException, (, "Unrecognized 'compilation' option value (", +]
[{, this, ., compilationLevel, =, CompilationLevel, ., WHITESPACE_ONLY, ;, }, else, {, throw, new, BuildException, (, "Unrecognized 'compilation' option value (", +, value, +]
[new, BuildException, (, "Unrecognized 'compilation' option value (", +, value, +, ")", ), ;, }, }, public, void, setManageDependencies, (, boolean, value, ), {]
[new, BuildException, (, "Unrecognized 'compilation' option value (", +, value, +, ")", ), ;, }, }, public, void, setManageDependencies, (, boolean, value, ), {]
[+, value, +, ")", ), ;, }, }, public, void, setManageDependencies, (, boolean, value, ), {, this, ., manageDependencies, =]
[(, boolean, value, ), {, this, ., manageDependencies, =, value, ;, }, public, void, setCustomExternsOnly, (, boolean, value, ), {]
[(, boolean, value, ), {, this, ., manageDependencies, =, value, ;, }, public, void, setCustomExternsOnly, (, boolean, value, ), {]
[{, this, ., manageDependencies, =, value, ;, }, public, void, setCustomExternsOnly, (, boolean, value, ), {, this, ., customExternsOnly, =]
[(, boolean, value, ), {, this, ., customExternsOnly, =, value, ;, }, public, void, setOutput, (, File, value, ), {]
[(, boolean, value, ), {, this, ., customExternsOnly, =, value, ;, }, public, void, setOutput, (, File, value, ), {]
[{, this, ., customExternsOnly, =, value, ;, }, public, void, setOutput, (, File, value, ), {, this, ., outputFile, =]
[(, File, value, ), {, this, ., outputFile, =, value, ;, }, public, void, setReplacePropertiesPrefix, (, String, value, ), {]
[(, File, value, ), {, this, ., outputFile, =, value, ;, }, public, void, setReplacePropertiesPrefix, (, String, value, ), {]
[{, this, ., outputFile, =, value, ;, }, public, void, setReplacePropertiesPrefix, (, String, value, ), {, this, ., replacePropertiesPrefix, =]
[(, String, value, ), {, this, ., replacePropertiesPrefix, =, value, ;, }, public, void, setReplaceProperties, (, boolean, value, ), {]
[(, String, value, ), {, this, ., replacePropertiesPrefix, =, value, ;, }, public, void, setReplaceProperties, (, boolean, value, ), {]
[{, this, ., replacePropertiesPrefix, =, value, ;, }, public, void, setReplaceProperties, (, boolean, value, ), {, this, ., replaceProperties, =]
[(, boolean, value, ), {, this, ., replaceProperties, =, value, ;, }, public, void, setEncoding, (, String, encoding, ), {]
[(, boolean, value, ), {, this, ., replaceProperties, =, value, ;, }, public, void, setEncoding, (, String, encoding, ), {]
[{, this, ., replaceProperties, =, value, ;, }, public, void, setEncoding, (, String, encoding, ), {, this, ., encoding, =]
[(, String, encoding, ), {, this, ., encoding, =, encoding, ;, }, public, void, setOutputEncoding, (, String, outputEncoding, ), {]
[(, String, encoding, ), {, this, ., encoding, =, encoding, ;, }, public, void, setOutputEncoding, (, String, outputEncoding, ), {]
[{, this, ., encoding, =, encoding, ;, }, public, void, setOutputEncoding, (, String, outputEncoding, ), {, this, ., outputEncoding, =]
[(, String, outputEncoding, ), {, this, ., outputEncoding, =, outputEncoding, ;, }, public, void, setPrettyPrint, (, boolean, pretty, ), {]
[(, String, outputEncoding, ), {, this, ., outputEncoding, =, outputEncoding, ;, }, public, void, setPrettyPrint, (, boolean, pretty, ), {]
[{, this, ., outputEncoding, =, outputEncoding, ;, }, public, void, setPrettyPrint, (, boolean, pretty, ), {, this, ., prettyPrint, =]
[(, boolean, pretty, ), {, this, ., prettyPrint, =, pretty, ;, }, public, void, setPrintInputDelimiter, (, boolean, print, ), {]
[(, boolean, pretty, ), {, this, ., prettyPrint, =, pretty, ;, }, public, void, setPrintInputDelimiter, (, boolean, print, ), {]
[{, this, ., prettyPrint, =, pretty, ;, }, public, void, setPrintInputDelimiter, (, boolean, print, ), {, this, ., printInputDelimiter, =]
[(, boolean, print, ), {, this, ., printInputDelimiter, =, print, ;, }, public, void, setForceRecompile, (, boolean, forceRecompile, ), {]
[(, boolean, print, ), {, this, ., printInputDelimiter, =, print, ;, }, public, void, setForceRecompile, (, boolean, forceRecompile, ), {]
[{, this, ., printInputDelimiter, =, print, ;, }, public, void, setForceRecompile, (, boolean, forceRecompile, ), {, this, ., forceRecompile, =]
[(, boolean, forceRecompile, ), {, this, ., forceRecompile, =, forceRecompile, ;, }, public, void, setGenerateExports, (, boolean, generateExports, ), {]
[(, boolean, forceRecompile, ), {, this, ., forceRecompile, =, forceRecompile, ;, }, public, void, setGenerateExports, (, boolean, generateExports, ), {]
[{, this, ., forceRecompile, =, forceRecompile, ;, }, public, void, setGenerateExports, (, boolean, generateExports, ), {, this, ., generateExports, =]
[(, boolean, generateExports, ), {, this, ., generateExports, =, generateExports, ;, }, public, void, addExterns, (, FileList, list, ), {]
[(, boolean, generateExports, ), {, this, ., generateExports, =, generateExports, ;, }, public, void, addExterns, (, FileList, list, ), {]
[(, boolean, generateExports, ), {, this, ., generateExports, =, generateExports, ;, }, public, void, addExterns, (, FileList, list, ), {]
[., generateExports, =, generateExports, ;, }, public, void, addExterns, (, FileList, list, ), {, this, ., externFileLists, ., add, (]
[), {, this, ., externFileLists, ., add, (, list, ), ;, }, public, void, addWarning, (, Warning, warning, ), {]
[), {, this, ., externFileLists, ., add, (, list, ), ;, }, public, void, addWarning, (, Warning, warning, ), {]
[), {, this, ., externFileLists, ., add, (, list, ), ;, }, public, void, addWarning, (, Warning, warning, ), {]
[add, (, list, ), ;, }, public, void, addWarning, (, Warning, warning, ), {, this, ., warnings, ., add, (]
[), {, this, ., warnings, ., add, (, warning, ), ;, }, public, void, addSources, (, FileList, list, ), {]
[), {, this, ., warnings, ., add, (, warning, ), ;, }, public, void, addSources, (, FileList, list, ), {]
[), {, this, ., warnings, ., add, (, warning, ), ;, }, public, void, addSources, (, FileList, list, ), {]
[add, (, warning, ), ;, }, public, void, addSources, (, FileList, list, ), {, this, ., sourceFileLists, ., add, (]
[), {, this, ., sourceFileLists, ., add, (, list, ), ;, }, public, void, addPath, (, Path, list, ), {]
[), {, this, ., sourceFileLists, ., add, (, list, ), ;, }, public, void, addPath, (, Path, list, ), {]
[), {, this, ., sourceFileLists, ., add, (, list, ), ;, }, public, void, addPath, (, Path, list, ), {]
[add, (, list, ), ;, }, public, void, addPath, (, Path, list, ), {, this, ., sourcePaths, ., add, (]
[this, ., sourcePaths, ., add, (, list, ), ;, }, @, Override, public, void, execute, (, ), {, if, (]
[this, ., sourcePaths, ., add, (, list, ), ;, }, @, Override, public, void, execute, (, ), {, if, (]
[this, ., sourcePaths, ., add, (, list, ), ;, }, @, Override, public, void, execute, (, ), {, if, (]
[add, (, list, ), ;, }, @, Override, public, void, execute, (, ), {, if, (, this, ., outputFile, ==]
[;, }, @, Override, public, void, execute, (, ), {, if, (, this, ., outputFile, ==, null, ), {, throw]
[Override, public, void, execute, (, ), {, if, (, this, ., outputFile, ==, null, ), {, throw, new, BuildException, (]
[(, ), {, if, (, this, ., outputFile, ==, null, ), {, throw, new, BuildException, (, "outputFile attribute must be set", ), ;, }]
[(, ), {, if, (, this, ., outputFile, ==, null, ), {, throw, new, BuildException, (, "outputFile attribute must be set", ), ;, }]
[(, this, ., outputFile, ==, null, ), {, throw, new, BuildException, (, "outputFile attribute must be set", ), ;, }, Compiler, ., setLoggingLevel, (]
[(, this, ., outputFile, ==, null, ), {, throw, new, BuildException, (, "outputFile attribute must be set", ), ;, }, Compiler, ., setLoggingLevel, (]
[throw, new, BuildException, (, "outputFile attribute must be set", ), ;, }, Compiler, ., setLoggingLevel, (, Level, ., OFF, ), ;, CompilerOptions, options, =]
[}, Compiler, ., setLoggingLevel, (, Level, ., OFF, ), ;, CompilerOptions, options, =, createCompilerOptions, (, ), ;, Compiler, compiler, =]
[., setLoggingLevel, (, Level, ., OFF, ), ;, CompilerOptions, options, =, createCompilerOptions, (, ), ;, Compiler, compiler, =, createCompiler, (]
[options, =, createCompilerOptions, (, ), ;, Compiler, compiler, =, createCompiler, (, options, ), ;, List, <, SourceFile, >, externs, =]
[(, options, ), ;, List, <, SourceFile, >, externs, =, findExternFiles, (, ), ;, List, <, SourceFile, >, sources, =]
[SourceFile, >, externs, =, findExternFiles, (, ), ;, List, <, SourceFile, >, sources, =, findSourceFiles, (, ), ;, if, (]
[SourceFile, >, externs, =, findExternFiles, (, ), ;, List, <, SourceFile, >, sources, =, findSourceFiles, (, ), ;, if, (]
[findExternFiles, (, ), ;, List, <, SourceFile, >, sources, =, findSourceFiles, (, ), ;, if, (, isStale, (, ), ||]
[;, List, <, SourceFile, >, sources, =, findSourceFiles, (, ), ;, if, (, isStale, (, ), ||, forceRecompile, ), {]
[<, SourceFile, >, sources, =, findSourceFiles, (, ), ;, if, (, isStale, (, ), ||, forceRecompile, ), {, log, (]
[<, SourceFile, >, sources, =, findSourceFiles, (, ), ;, if, (, isStale, (, ), ||, forceRecompile, ), {, log, (]
[<, SourceFile, >, sources, =, findSourceFiles, (, ), ;, if, (, isStale, (, ), ||, forceRecompile, ), {, log, (]
[<, SourceFile, >, sources, =, findSourceFiles, (, ), ;, if, (, isStale, (, ), ||, forceRecompile, ), {, log, (]
[<, SourceFile, >, sources, =, findSourceFiles, (, ), ;, if, (, isStale, (, ), ||, forceRecompile, ), {, log, (]
[>, sources, =, findSourceFiles, (, ), ;, if, (, isStale, (, ), ||, forceRecompile, ), {, log, (, "Compiling ", +]
[>, sources, =, findSourceFiles, (, ), ;, if, (, isStale, (, ), ||, forceRecompile, ), {, log, (, "Compiling ", +]
[;, if, (, isStale, (, ), ||, forceRecompile, ), {, log, (, "Compiling ", +, sources, ., size, (, ), +]
[(, isStale, (, ), ||, forceRecompile, ), {, log, (, "Compiling ", +, sources, ., size, (, ), +, " file(s) with ", +]
[(, isStale, (, ), ||, forceRecompile, ), {, log, (, "Compiling ", +, sources, ., size, (, ), +, " file(s) with ", +]
[), {, log, (, "Compiling ", +, sources, ., size, (, ), +, " file(s) with ", +, externs, ., size, (, ), +]
[sources, ., size, (, ), +, " file(s) with ", +, externs, ., size, (, ), +, " extern(s)", ), ;, Result, result, =]
[sources, ., size, (, ), +, " file(s) with ", +, externs, ., size, (, ), +, " extern(s)", ), ;, Result, result, =]
[), +, " file(s) with ", +, externs, ., size, (, ), +, " extern(s)", ), ;, Result, result, =, compiler, ., compile, (]
[" file(s) with ", +, externs, ., size, (, ), +, " extern(s)", ), ;, Result, result, =, compiler, ., compile, (, externs, ,]
[externs, ., size, (, ), +, " extern(s)", ), ;, Result, result, =, compiler, ., compile, (, externs, ,, sources, ,]
[+, " extern(s)", ), ;, Result, result, =, compiler, ., compile, (, externs, ,, sources, ,, options, ), ;, if, (]
[+, " extern(s)", ), ;, Result, result, =, compiler, ., compile, (, externs, ,, sources, ,, options, ), ;, if, (]
[result, =, compiler, ., compile, (, externs, ,, sources, ,, options, ), ;, if, (, result, ., success, ), {]
[compiler, ., compile, (, externs, ,, sources, ,, options, ), ;, if, (, result, ., success, ), {, writeResult, (]
[compiler, ., compile, (, externs, ,, sources, ,, options, ), ;, if, (, result, ., success, ), {, writeResult, (]
[if, (, result, ., success, ), {, writeResult, (, compiler, ., toSource, (, ), ), ;, }, else, {, throw]
[., success, ), {, writeResult, (, compiler, ., toSource, (, ), ), ;, }, else, {, throw, new, BuildException, (]
[., toSource, (, ), ), ;, }, else, {, throw, new, BuildException, (, "Compilation failed.", ), ;, }, }, else, {]
[(, ), ), ;, }, else, {, throw, new, BuildException, (, "Compilation failed.", ), ;, }, }, else, {, log, (]
[}, }, else, {, log, (, "None of the files changed. Compilation skipped.", ), ;, }, }, private, CompilerOptions, createCompilerOptions, (, ), {, CompilerOptions, options, =]
[(, "None of the files changed. Compilation skipped.", ), ;, }, }, private, CompilerOptions, createCompilerOptions, (, ), {, CompilerOptions, options, =, new, CompilerOptions, (, ), ;]
[(, "None of the files changed. Compilation skipped.", ), ;, }, }, private, CompilerOptions, createCompilerOptions, (, ), {, CompilerOptions, options, =, new, CompilerOptions, (, ), ;]
[(, "None of the files changed. Compilation skipped.", ), ;, }, }, private, CompilerOptions, createCompilerOptions, (, ), {, CompilerOptions, options, =, new, CompilerOptions, (, ), ;]
[private, CompilerOptions, createCompilerOptions, (, ), {, CompilerOptions, options, =, new, CompilerOptions, (, ), ;, this, ., compilationLevel, ., setOptionsForCompilationLevel, (]
[{, CompilerOptions, options, =, new, CompilerOptions, (, ), ;, this, ., compilationLevel, ., setOptionsForCompilationLevel, (, options, ), ;, if, (]
[{, CompilerOptions, options, =, new, CompilerOptions, (, ), ;, this, ., compilationLevel, ., setOptionsForCompilationLevel, (, options, ), ;, if, (]
[CompilerOptions, (, ), ;, this, ., compilationLevel, ., setOptionsForCompilationLevel, (, options, ), ;, if, (, this, ., debugOptions, ), {]
[CompilerOptions, (, ), ;, this, ., compilationLevel, ., setOptionsForCompilationLevel, (, options, ), ;, if, (, this, ., debugOptions, ), {]
[CompilerOptions, (, ), ;, this, ., compilationLevel, ., setOptionsForCompilationLevel, (, options, ), ;, if, (, this, ., debugOptions, ), {]
[compilationLevel, ., setOptionsForCompilationLevel, (, options, ), ;, if, (, this, ., debugOptions, ), {, this, ., compilationLevel, ., setDebugOptionsForCompilationLevel, (]
[options, ), ;, if, (, this, ., debugOptions, ), {, this, ., compilationLevel, ., setDebugOptionsForCompilationLevel, (, options, ), ;, }]
[options, ), ;, if, (, this, ., debugOptions, ), {, this, ., compilationLevel, ., setDebugOptionsForCompilationLevel, (, options, ), ;, }]
[(, this, ., debugOptions, ), {, this, ., compilationLevel, ., setDebugOptionsForCompilationLevel, (, options, ), ;, }, options, ., prettyPrint, =]
[(, this, ., debugOptions, ), {, this, ., compilationLevel, ., setDebugOptionsForCompilationLevel, (, options, ), ;, }, options, ., prettyPrint, =]
[), {, this, ., compilationLevel, ., setDebugOptionsForCompilationLevel, (, options, ), ;, }, options, ., prettyPrint, =, this, ., prettyPrint, ;]
[), {, this, ., compilationLevel, ., setDebugOptionsForCompilationLevel, (, options, ), ;, }, options, ., prettyPrint, =, this, ., prettyPrint, ;]
[compilationLevel, ., setDebugOptionsForCompilationLevel, (, options, ), ;, }, options, ., prettyPrint, =, this, ., prettyPrint, ;, options, ., printInputDelimiter, =]
[compilationLevel, ., setDebugOptionsForCompilationLevel, (, options, ), ;, }, options, ., prettyPrint, =, this, ., prettyPrint, ;, options, ., printInputDelimiter, =]
[options, ), ;, }, options, ., prettyPrint, =, this, ., prettyPrint, ;, options, ., printInputDelimiter, =, this, ., printInputDelimiter, ;]
[options, ), ;, }, options, ., prettyPrint, =, this, ., prettyPrint, ;, options, ., printInputDelimiter, =, this, ., printInputDelimiter, ;]
[options, ., prettyPrint, =, this, ., prettyPrint, ;, options, ., printInputDelimiter, =, this, ., printInputDelimiter, ;, options, ., generateExports, =]
[options, ., prettyPrint, =, this, ., prettyPrint, ;, options, ., printInputDelimiter, =, this, ., printInputDelimiter, ;, options, ., generateExports, =]
[this, ., prettyPrint, ;, options, ., printInputDelimiter, =, this, ., printInputDelimiter, ;, options, ., generateExports, =, this, ., generateExports, ;]
[this, ., prettyPrint, ;, options, ., printInputDelimiter, =, this, ., printInputDelimiter, ;, options, ., generateExports, =, this, ., generateExports, ;]
[options, ., printInputDelimiter, =, this, ., printInputDelimiter, ;, options, ., generateExports, =, this, ., generateExports, ;, options, ., setLanguageIn, (]
[options, ., printInputDelimiter, =, this, ., printInputDelimiter, ;, options, ., generateExports, =, this, ., generateExports, ;, options, ., setLanguageIn, (]
[., printInputDelimiter, ;, options, ., generateExports, =, this, ., generateExports, ;, options, ., setLanguageIn, (, this, ., languageIn, ), ;]
[., printInputDelimiter, ;, options, ., generateExports, =, this, ., generateExports, ;, options, ., setLanguageIn, (, this, ., languageIn, ), ;]
[., printInputDelimiter, ;, options, ., generateExports, =, this, ., generateExports, ;, options, ., setLanguageIn, (, this, ., languageIn, ), ;]
[=, this, ., generateExports, ;, options, ., setLanguageIn, (, this, ., languageIn, ), ;, this, ., warningLevel, ., setOptionsForWarningLevel, (]
[generateExports, ;, options, ., setLanguageIn, (, this, ., languageIn, ), ;, this, ., warningLevel, ., setOptionsForWarningLevel, (, options, ), ;]
[generateExports, ;, options, ., setLanguageIn, (, this, ., languageIn, ), ;, this, ., warningLevel, ., setOptionsForWarningLevel, (, options, ), ;]
[setLanguageIn, (, this, ., languageIn, ), ;, this, ., warningLevel, ., setOptionsForWarningLevel, (, options, ), ;, options, ., setManageClosureDependencies, (]
[), ;, this, ., warningLevel, ., setOptionsForWarningLevel, (, options, ), ;, options, ., setManageClosureDependencies, (, manageDependencies, ), ;, if, (]
[., warningLevel, ., setOptionsForWarningLevel, (, options, ), ;, options, ., setManageClosureDependencies, (, manageDependencies, ), ;, if, (, replaceProperties, ), {]
[., setOptionsForWarningLevel, (, options, ), ;, options, ., setManageClosureDependencies, (, manageDependencies, ), ;, if, (, replaceProperties, ), {, convertPropertiesMap, (]
[), ;, options, ., setManageClosureDependencies, (, manageDependencies, ), ;, if, (, replaceProperties, ), {, convertPropertiesMap, (, options, ), ;, }]
[options, ., setManageClosureDependencies, (, manageDependencies, ), ;, if, (, replaceProperties, ), {, convertPropertiesMap, (, options, ), ;, }, convertDefineParameters, (]
[(, replaceProperties, ), {, convertPropertiesMap, (, options, ), ;, }, convertDefineParameters, (, options, ), ;, for, (, Warning, warning, :]
[options, ), ;, }, convertDefineParameters, (, options, ), ;, for, (, Warning, warning, :, warnings, ), {, CheckLevel, level, =]
[options, ), ;, }, convertDefineParameters, (, options, ), ;, for, (, Warning, warning, :, warnings, ), {, CheckLevel, level, =]
[for, (, Warning, warning, :, warnings, ), {, CheckLevel, level, =, warning, ., getLevel, (, ), ;, String, groupName, =]
[for, (, Warning, warning, :, warnings, ), {, CheckLevel, level, =, warning, ., getLevel, (, ), ;, String, groupName, =]
[level, =, warning, ., getLevel, (, ), ;, String, groupName, =, warning, ., getGroup, (, ), ;, DiagnosticGroup, group, =]
[level, =, warning, ., getLevel, (, ), ;, String, groupName, =, warning, ., getGroup, (, ), ;, DiagnosticGroup, group, =]
[;, String, groupName, =, warning, ., getGroup, (, ), ;, DiagnosticGroup, group, =, new, DiagnosticGroups, (, ), ., forName, (]
[., getGroup, (, ), ;, DiagnosticGroup, group, =, new, DiagnosticGroups, (, ), ., forName, (, groupName, ), ;, if, (]
[., getGroup, (, ), ;, DiagnosticGroup, group, =, new, DiagnosticGroups, (, ), ., forName, (, groupName, ), ;, if, (]
[(, ), ;, DiagnosticGroup, group, =, new, DiagnosticGroups, (, ), ., forName, (, groupName, ), ;, if, (, group, ==]
[group, =, new, DiagnosticGroups, (, ), ., forName, (, groupName, ), ;, if, (, group, ==, null, ), {, throw]
[DiagnosticGroups, (, ), ., forName, (, groupName, ), ;, if, (, group, ==, null, ), {, throw, new, BuildException, (]
[DiagnosticGroups, (, ), ., forName, (, groupName, ), ;, if, (, group, ==, null, ), {, throw, new, BuildException, (]
[DiagnosticGroups, (, ), ., forName, (, groupName, ), ;, if, (, group, ==, null, ), {, throw, new, BuildException, (]
[), ., forName, (, groupName, ), ;, if, (, group, ==, null, ), {, throw, new, BuildException, (, "Unrecognized 'warning' option value (", +]
[forName, (, groupName, ), ;, if, (, group, ==, null, ), {, throw, new, BuildException, (, "Unrecognized 'warning' option value (", +, groupName, +]
[;, if, (, group, ==, null, ), {, throw, new, BuildException, (, "Unrecognized 'warning' option value (", +, groupName, +, ")", ), ;, }]
[;, if, (, group, ==, null, ), {, throw, new, BuildException, (, "Unrecognized 'warning' option value (", +, groupName, +, ")", ), ;, }]
[==, null, ), {, throw, new, BuildException, (, "Unrecognized 'warning' option value (", +, groupName, +, ")", ), ;, }, options, ., setWarningLevel, (]
[), {, throw, new, BuildException, (, "Unrecognized 'warning' option value (", +, groupName, +, ")", ), ;, }, options, ., setWarningLevel, (, group, ,]
[(, "Unrecognized 'warning' option value (", +, groupName, +, ")", ), ;, }, options, ., setWarningLevel, (, group, ,, level, ), ;, }, return]
[(, group, ,, level, ), ;, }, return, options, ;, }, public, Parameter, createDefine, (, ), {, Parameter, param, =]
[;, }, return, options, ;, }, public, Parameter, createDefine, (, ), {, Parameter, param, =, new, Parameter, (, ), ;]
[;, }, return, options, ;, }, public, Parameter, createDefine, (, ), {, Parameter, param, =, new, Parameter, (, ), ;]
[;, }, public, Parameter, createDefine, (, ), {, Parameter, param, =, new, Parameter, (, ), ;, defineParams, ., add, (]
[createDefine, (, ), {, Parameter, param, =, new, Parameter, (, ), ;, defineParams, ., add, (, param, ), ;, return]
[param, ), ;, return, param, ;, }, private, void, convertDefineParameters, (, CompilerOptions, options, ), {, for, (, Parameter, p, :]
[}, private, void, convertDefineParameters, (, CompilerOptions, options, ), {, for, (, Parameter, p, :, defineParams, ), {, String, key, =]
[}, private, void, convertDefineParameters, (, CompilerOptions, options, ), {, for, (, Parameter, p, :, defineParams, ), {, String, key, =]
[for, (, Parameter, p, :, defineParams, ), {, String, key, =, p, ., getName, (, ), ;, Object, value, =]
[for, (, Parameter, p, :, defineParams, ), {, String, key, =, p, ., getName, (, ), ;, Object, value, =]
[String, key, =, p, ., getName, (, ), ;, Object, value, =, p, ., getValue, (, ), ;, if, (]
[key, =, p, ., getName, (, ), ;, Object, value, =, p, ., getValue, (, ), ;, if, (, !]
[p, ., getName, (, ), ;, Object, value, =, p, ., getValue, (, ), ;, if, (, !, setDefine, (]
[getName, (, ), ;, Object, value, =, p, ., getValue, (, ), ;, if, (, !, setDefine, (, options, ,]
[), ;, Object, value, =, p, ., getValue, (, ), ;, if, (, !, setDefine, (, options, ,, key, ,]
[=, p, ., getValue, (, ), ;, if, (, !, setDefine, (, options, ,, key, ,, value, ), ), {]
[., getValue, (, ), ;, if, (, !, setDefine, (, options, ,, key, ,, value, ), ), {, log, (]
[., getValue, (, ), ;, if, (, !, setDefine, (, options, ,, key, ,, value, ), ), {, log, (]
[., getValue, (, ), ;, if, (, !, setDefine, (, options, ,, key, ,, value, ), ), {, log, (]
[., getValue, (, ), ;, if, (, !, setDefine, (, options, ,, key, ,, value, ), ), {, log, (]
[(, ), ;, if, (, !, setDefine, (, options, ,, key, ,, value, ), ), {, log, (, "Unexpected @define value for name=", +]
[;, if, (, !, setDefine, (, options, ,, key, ,, value, ), ), {, log, (, "Unexpected @define value for name=", +, key, +]
[(, !, setDefine, (, options, ,, key, ,, value, ), ), {, log, (, "Unexpected @define value for name=", +, key, +, "; value=", +]
["Unexpected @define value for name=", +, key, +, "; value=", +, value, ), ;, }, }, }, private, void, convertPropertiesMap, (, CompilerOptions, options, ), {]
[+, "; value=", +, value, ), ;, }, }, }, private, void, convertPropertiesMap, (, CompilerOptions, options, ), {, @, SuppressWarnings, (]
[void, convertPropertiesMap, (, CompilerOptions, options, ), {, @, SuppressWarnings, (, "unchecked", ), Map, <, String, ,, Object, >, props, =]
[void, convertPropertiesMap, (, CompilerOptions, options, ), {, @, SuppressWarnings, (, "unchecked", ), Map, <, String, ,, Object, >, props, =]
[getProject, (, ), ., getProperties, (, ), ;, for, (, Map, ., Entry, <, String, ,, Object, >, entry, :]
[getProject, (, ), ., getProperties, (, ), ;, for, (, Map, ., Entry, <, String, ,, Object, >, entry, :]
[Map, ., Entry, <, String, ,, Object, >, entry, :, props, ., entrySet, (, ), ), {, String, key, =]
[Map, ., Entry, <, String, ,, Object, >, entry, :, props, ., entrySet, (, ), ), {, String, key, =]
[:, props, ., entrySet, (, ), ), {, String, key, =, entry, ., getKey, (, ), ;, Object, value, =]
[:, props, ., entrySet, (, ), ), {, String, key, =, entry, ., getKey, (, ), ;, Object, value, =]
[String, key, =, entry, ., getKey, (, ), ;, Object, value, =, entry, ., getValue, (, ), ;, if, (]
[String, key, =, entry, ., getKey, (, ), ;, Object, value, =, entry, ., getValue, (, ), ;, if, (]
[., getKey, (, ), ;, Object, value, =, entry, ., getValue, (, ), ;, if, (, key, ., startsWith, (]
[;, Object, value, =, entry, ., getValue, (, ), ;, if, (, key, ., startsWith, (, replacePropertiesPrefix, ), ), {]
[value, =, entry, ., getValue, (, ), ;, if, (, key, ., startsWith, (, replacePropertiesPrefix, ), ), {, key, =]
[value, =, entry, ., getValue, (, ), ;, if, (, key, ., startsWith, (, replacePropertiesPrefix, ), ), {, key, =]
[getValue, (, ), ;, if, (, key, ., startsWith, (, replacePropertiesPrefix, ), ), {, key, =, key, ., substring, (]
[getValue, (, ), ;, if, (, key, ., startsWith, (, replacePropertiesPrefix, ), ), {, key, =, key, ., substring, (]
[(, replacePropertiesPrefix, ), ), {, key, =, key, ., substring, (, replacePropertiesPrefix, ., length, (, ), ), ;, if, (]
[replacePropertiesPrefix, ), ), {, key, =, key, ., substring, (, replacePropertiesPrefix, ., length, (, ), ), ;, if, (, !]
[), {, key, =, key, ., substring, (, replacePropertiesPrefix, ., length, (, ), ), ;, if, (, !, setDefine, (]
[key, =, key, ., substring, (, replacePropertiesPrefix, ., length, (, ), ), ;, if, (, !, setDefine, (, options, ,]
[key, ., substring, (, replacePropertiesPrefix, ., length, (, ), ), ;, if, (, !, setDefine, (, options, ,, key, ,]
[replacePropertiesPrefix, ., length, (, ), ), ;, if, (, !, setDefine, (, options, ,, key, ,, value, ), ), {]
[length, (, ), ), ;, if, (, !, setDefine, (, options, ,, key, ,, value, ), ), {, log, (]
[length, (, ), ), ;, if, (, !, setDefine, (, options, ,, key, ,, value, ), ), {, log, (]
[length, (, ), ), ;, if, (, !, setDefine, (, options, ,, key, ,, value, ), ), {, log, (]
[length, (, ), ), ;, if, (, !, setDefine, (, options, ,, key, ,, value, ), ), {, log, (]
[), ), ;, if, (, !, setDefine, (, options, ,, key, ,, value, ), ), {, log, (, "Unexpected property value for key=", +]
[;, if, (, !, setDefine, (, options, ,, key, ,, value, ), ), {, log, (, "Unexpected property value for key=", +, key, +]
[(, !, setDefine, (, options, ,, key, ,, value, ), ), {, log, (, "Unexpected property value for key=", +, key, +, "; value=", +]
[}, }, }, private, boolean, setDefine, (, CompilerOptions, options, ,, String, key, ,, Object, value, ), {, boolean, success, =]
[boolean, setDefine, (, CompilerOptions, options, ,, String, key, ,, Object, value, ), {, boolean, success, =, false, ;, if, (]
[boolean, setDefine, (, CompilerOptions, options, ,, String, key, ,, Object, value, ), {, boolean, success, =, false, ;, if, (]
[Object, value, ), {, boolean, success, =, false, ;, if, (, value, instanceof, String, ), {, final, boolean, isTrue, =]
[Object, value, ), {, boolean, success, =, false, ;, if, (, value, instanceof, String, ), {, final, boolean, isTrue, =]
[boolean, success, =, false, ;, if, (, value, instanceof, String, ), {, final, boolean, isTrue, =, "true", ., equals, (]
[value, instanceof, String, ), {, final, boolean, isTrue, =, "true", ., equals, (, value, ), ;, final, boolean, isFalse, =]
[value, instanceof, String, ), {, final, boolean, isTrue, =, "true", ., equals, (, value, ), ;, final, boolean, isFalse, =]
[{, final, boolean, isTrue, =, "true", ., equals, (, value, ), ;, final, boolean, isFalse, =, "false", ., equals, (]
["true", ., equals, (, value, ), ;, final, boolean, isFalse, =, "false", ., equals, (, value, ), ;, if, (]
["true", ., equals, (, value, ), ;, final, boolean, isFalse, =, "false", ., equals, (, value, ), ;, if, (]
[equals, (, value, ), ;, final, boolean, isFalse, =, "false", ., equals, (, value, ), ;, if, (, isTrue, ||]
[), ;, final, boolean, isFalse, =, "false", ., equals, (, value, ), ;, if, (, isTrue, ||, isFalse, ), {]
[), ;, final, boolean, isFalse, =, "false", ., equals, (, value, ), ;, if, (, isTrue, ||, isFalse, ), {]
[isFalse, =, "false", ., equals, (, value, ), ;, if, (, isTrue, ||, isFalse, ), {, options, ., setDefineToBooleanLiteral, (]
["false", ., equals, (, value, ), ;, if, (, isTrue, ||, isFalse, ), {, options, ., setDefineToBooleanLiteral, (, key, ,]
[isFalse, ), {, options, ., setDefineToBooleanLiteral, (, key, ,, isTrue, ), ;, }, else, {, try, {, double, dblTemp, =]
[isFalse, ), {, options, ., setDefineToBooleanLiteral, (, key, ,, isTrue, ), ;, }, else, {, try, {, double, dblTemp, =]
[., setDefineToBooleanLiteral, (, key, ,, isTrue, ), ;, }, else, {, try, {, double, dblTemp, =, Double, ., parseDouble, (]
[key, ,, isTrue, ), ;, }, else, {, try, {, double, dblTemp, =, Double, ., parseDouble, (, (, String, )]
[), ;, }, else, {, try, {, double, dblTemp, =, Double, ., parseDouble, (, (, String, ), value, ), ;]
[), ;, }, else, {, try, {, double, dblTemp, =, Double, ., parseDouble, (, (, String, ), value, ), ;]
[{, try, {, double, dblTemp, =, Double, ., parseDouble, (, (, String, ), value, ), ;, options, ., setDefineToDoubleLiteral, (]
[{, double, dblTemp, =, Double, ., parseDouble, (, (, String, ), value, ), ;, options, ., setDefineToDoubleLiteral, (, key, ,]
[), value, ), ;, options, ., setDefineToDoubleLiteral, (, key, ,, dblTemp, ), ;, }, catch, (, NumberFormatException, nfe, ), {]
[), value, ), ;, options, ., setDefineToDoubleLiteral, (, key, ,, dblTemp, ), ;, }, catch, (, NumberFormatException, nfe, ), {]
[options, ., setDefineToDoubleLiteral, (, key, ,, dblTemp, ), ;, }, catch, (, NumberFormatException, nfe, ), {, options, ., setDefineToStringLiteral, (]
[setDefineToDoubleLiteral, (, key, ,, dblTemp, ), ;, }, catch, (, NumberFormatException, nfe, ), {, options, ., setDefineToStringLiteral, (, key, ,]
[,, dblTemp, ), ;, }, catch, (, NumberFormatException, nfe, ), {, options, ., setDefineToStringLiteral, (, key, ,, (, String, )]
[catch, (, NumberFormatException, nfe, ), {, options, ., setDefineToStringLiteral, (, key, ,, (, String, ), value, ), ;, }, }]
[NumberFormatException, nfe, ), {, options, ., setDefineToStringLiteral, (, key, ,, (, String, ), value, ), ;, }, }, success, =]
[setDefineToStringLiteral, (, key, ,, (, String, ), value, ), ;, }, }, success, =, true, ;, }, else, if, (]
[setDefineToStringLiteral, (, key, ,, (, String, ), value, ), ;, }, }, success, =, true, ;, }, else, if, (]
[String, ), value, ), ;, }, }, success, =, true, ;, }, else, if, (, value, instanceof, Boolean, ), {]
[String, ), value, ), ;, }, }, success, =, true, ;, }, else, if, (, value, instanceof, Boolean, ), {]
[;, }, }, success, =, true, ;, }, else, if, (, value, instanceof, Boolean, ), {, options, ., setDefineToBooleanLiteral, (]
[}, success, =, true, ;, }, else, if, (, value, instanceof, Boolean, ), {, options, ., setDefineToBooleanLiteral, (, key, ,]
[true, ;, }, else, if, (, value, instanceof, Boolean, ), {, options, ., setDefineToBooleanLiteral, (, key, ,, (, Boolean, )]
[else, if, (, value, instanceof, Boolean, ), {, options, ., setDefineToBooleanLiteral, (, key, ,, (, Boolean, ), value, ), ;]
[(, value, instanceof, Boolean, ), {, options, ., setDefineToBooleanLiteral, (, key, ,, (, Boolean, ), value, ), ;, success, =]
[options, ., setDefineToBooleanLiteral, (, key, ,, (, Boolean, ), value, ), ;, success, =, true, ;, }, else, if, (]
[options, ., setDefineToBooleanLiteral, (, key, ,, (, Boolean, ), value, ), ;, success, =, true, ;, }, else, if, (]
[,, (, Boolean, ), value, ), ;, success, =, true, ;, }, else, if, (, value, instanceof, Integer, ), {]
[,, (, Boolean, ), value, ), ;, success, =, true, ;, }, else, if, (, value, instanceof, Integer, ), {]
[value, ), ;, success, =, true, ;, }, else, if, (, value, instanceof, Integer, ), {, options, ., setDefineToNumberLiteral, (]
[;, success, =, true, ;, }, else, if, (, value, instanceof, Integer, ), {, options, ., setDefineToNumberLiteral, (, key, ,]
[true, ;, }, else, if, (, value, instanceof, Integer, ), {, options, ., setDefineToNumberLiteral, (, key, ,, (, Integer, )]
[else, if, (, value, instanceof, Integer, ), {, options, ., setDefineToNumberLiteral, (, key, ,, (, Integer, ), value, ), ;]
[(, value, instanceof, Integer, ), {, options, ., setDefineToNumberLiteral, (, key, ,, (, Integer, ), value, ), ;, success, =]
[options, ., setDefineToNumberLiteral, (, key, ,, (, Integer, ), value, ), ;, success, =, true, ;, }, else, if, (]
[options, ., setDefineToNumberLiteral, (, key, ,, (, Integer, ), value, ), ;, success, =, true, ;, }, else, if, (]
[,, (, Integer, ), value, ), ;, success, =, true, ;, }, else, if, (, value, instanceof, Double, ), {]
[,, (, Integer, ), value, ), ;, success, =, true, ;, }, else, if, (, value, instanceof, Double, ), {]
[value, ), ;, success, =, true, ;, }, else, if, (, value, instanceof, Double, ), {, options, ., setDefineToDoubleLiteral, (]
[;, success, =, true, ;, }, else, if, (, value, instanceof, Double, ), {, options, ., setDefineToDoubleLiteral, (, key, ,]
[true, ;, }, else, if, (, value, instanceof, Double, ), {, options, ., setDefineToDoubleLiteral, (, key, ,, (, Double, )]
[else, if, (, value, instanceof, Double, ), {, options, ., setDefineToDoubleLiteral, (, key, ,, (, Double, ), value, ), ;]
[(, value, instanceof, Double, ), {, options, ., setDefineToDoubleLiteral, (, key, ,, (, Double, ), value, ), ;, success, =]
[), {, options, ., setDefineToDoubleLiteral, (, key, ,, (, Double, ), value, ), ;, success, =, true, ;, }, return]
[success, =, true, ;, }, return, success, ;, }, private, Compiler, createCompiler, (, CompilerOptions, options, ), {, Compiler, compiler, =]
[}, private, Compiler, createCompiler, (, CompilerOptions, options, ), {, Compiler, compiler, =, new, Compiler, (, ), ;, MessageFormatter, formatter, =]
[}, private, Compiler, createCompiler, (, CompilerOptions, options, ), {, Compiler, compiler, =, new, Compiler, (, ), ;, MessageFormatter, formatter, =]
[}, private, Compiler, createCompiler, (, CompilerOptions, options, ), {, Compiler, compiler, =, new, Compiler, (, ), ;, MessageFormatter, formatter, =]
[options, ), {, Compiler, compiler, =, new, Compiler, (, ), ;, MessageFormatter, formatter, =, options, ., errorFormat, ., toFormatter, (]
[{, Compiler, compiler, =, new, Compiler, (, ), ;, MessageFormatter, formatter, =, options, ., errorFormat, ., toFormatter, (, compiler, ,]
[(, ), ;, MessageFormatter, formatter, =, options, ., errorFormat, ., toFormatter, (, compiler, ,, false, ), ;, AntErrorManager, errorManager, =]
[MessageFormatter, formatter, =, options, ., errorFormat, ., toFormatter, (, compiler, ,, false, ), ;, AntErrorManager, errorManager, =, new, AntErrorManager, (]
[=, options, ., errorFormat, ., toFormatter, (, compiler, ,, false, ), ;, AntErrorManager, errorManager, =, new, AntErrorManager, (, formatter, ,]
[errorFormat, ., toFormatter, (, compiler, ,, false, ), ;, AntErrorManager, errorManager, =, new, AntErrorManager, (, formatter, ,, this, ), ;]
[errorFormat, ., toFormatter, (, compiler, ,, false, ), ;, AntErrorManager, errorManager, =, new, AntErrorManager, (, formatter, ,, this, ), ;]
[compiler, ,, false, ), ;, AntErrorManager, errorManager, =, new, AntErrorManager, (, formatter, ,, this, ), ;, compiler, ., setErrorManager, (]
[;, AntErrorManager, errorManager, =, new, AntErrorManager, (, formatter, ,, this, ), ;, compiler, ., setErrorManager, (, errorManager, ), ;, return]
[;, return, compiler, ;, }, private, List, <, SourceFile, >, findExternFiles, (, ), {, List, <, SourceFile, >, files, =]
[;, return, compiler, ;, }, private, List, <, SourceFile, >, findExternFiles, (, ), {, List, <, SourceFile, >, files, =]
[SourceFile, >, findExternFiles, (, ), {, List, <, SourceFile, >, files, =, Lists, ., newLinkedList, (, ), ;, if, (]
[>, findExternFiles, (, ), {, List, <, SourceFile, >, files, =, Lists, ., newLinkedList, (, ), ;, if, (, !]
[>, findExternFiles, (, ), {, List, <, SourceFile, >, files, =, Lists, ., newLinkedList, (, ), ;, if, (, !]
[List, <, SourceFile, >, files, =, Lists, ., newLinkedList, (, ), ;, if, (, !, this, ., customExternsOnly, ), {]
[List, <, SourceFile, >, files, =, Lists, ., newLinkedList, (, ), ;, if, (, !, this, ., customExternsOnly, ), {]
[files, =, Lists, ., newLinkedList, (, ), ;, if, (, !, this, ., customExternsOnly, ), {, files, ., addAll, (]
[this, ., customExternsOnly, ), {, files, ., addAll, (, getDefaultExterns, (, ), ), ;, }, for, (, FileList, list, :]
[this, ., customExternsOnly, ), {, files, ., addAll, (, getDefaultExterns, (, ), ), ;, }, for, (, FileList, list, :]
[files, ., addAll, (, getDefaultExterns, (, ), ), ;, }, for, (, FileList, list, :, this, ., externFileLists, ), {]
[files, ., addAll, (, getDefaultExterns, (, ), ), ;, }, for, (, FileList, list, :, this, ., externFileLists, ), {]
[getDefaultExterns, (, ), ), ;, }, for, (, FileList, list, :, this, ., externFileLists, ), {, files, ., addAll, (]
[), ), ;, }, for, (, FileList, list, :, this, ., externFileLists, ), {, files, ., addAll, (, findJavaScriptFiles, (]
[FileList, list, :, this, ., externFileLists, ), {, files, ., addAll, (, findJavaScriptFiles, (, list, ), ), ;, }, return]
[}, return, files, ;, }, private, List, <, SourceFile, >, findSourceFiles, (, ), {, List, <, SourceFile, >, files, =]
[}, return, files, ;, }, private, List, <, SourceFile, >, findSourceFiles, (, ), {, List, <, SourceFile, >, files, =]
[(, ), {, List, <, SourceFile, >, files, =, Lists, ., newLinkedList, (, ), ;, for, (, FileList, list, :]
[(, ), {, List, <, SourceFile, >, files, =, Lists, ., newLinkedList, (, ), ;, for, (, FileList, list, :]
[SourceFile, >, files, =, Lists, ., newLinkedList, (, ), ;, for, (, FileList, list, :, this, ., sourceFileLists, ), {]
[SourceFile, >, files, =, Lists, ., newLinkedList, (, ), ;, for, (, FileList, list, :, this, ., sourceFileLists, ), {]
[Lists, ., newLinkedList, (, ), ;, for, (, FileList, list, :, this, ., sourceFileLists, ), {, files, ., addAll, (]
[newLinkedList, (, ), ;, for, (, FileList, list, :, this, ., sourceFileLists, ), {, files, ., addAll, (, findJavaScriptFiles, (]
[., sourceFileLists, ), {, files, ., addAll, (, findJavaScriptFiles, (, list, ), ), ;, }, for, (, Path, list, :]
[., sourceFileLists, ), {, files, ., addAll, (, findJavaScriptFiles, (, list, ), ), ;, }, for, (, Path, list, :]
[., addAll, (, findJavaScriptFiles, (, list, ), ), ;, }, for, (, Path, list, :, this, ., sourcePaths, ), {]
[., addAll, (, findJavaScriptFiles, (, list, ), ), ;, }, for, (, Path, list, :, this, ., sourcePaths, ), {]
[(, list, ), ), ;, }, for, (, Path, list, :, this, ., sourcePaths, ), {, files, ., addAll, (]
[), ), ;, }, for, (, Path, list, :, this, ., sourcePaths, ), {, files, ., addAll, (, findJavaScriptFiles, (]
[Path, list, :, this, ., sourcePaths, ), {, files, ., addAll, (, findJavaScriptFiles, (, list, ), ), ;, }, return]
[files, ;, }, private, List, <, SourceFile, >, findJavaScriptFiles, (, FileList, fileList, ), {, List, <, SourceFile, >, files, =]
[files, ;, }, private, List, <, SourceFile, >, findJavaScriptFiles, (, FileList, fileList, ), {, List, <, SourceFile, >, files, =]
[(, FileList, fileList, ), {, List, <, SourceFile, >, files, =, Lists, ., newLinkedList, (, ), ;, File, baseDir, =]
[(, FileList, fileList, ), {, List, <, SourceFile, >, files, =, Lists, ., newLinkedList, (, ), ;, File, baseDir, =]
[{, List, <, SourceFile, >, files, =, Lists, ., newLinkedList, (, ), ;, File, baseDir, =, fileList, ., getDir, (]
[(, ), ;, File, baseDir, =, fileList, ., getDir, (, getProject, (, ), ), ;, for, (, String, included, :]
[(, ), ;, File, baseDir, =, fileList, ., getDir, (, getProject, (, ), ), ;, for, (, String, included, :]
[baseDir, =, fileList, ., getDir, (, getProject, (, ), ), ;, for, (, String, included, :, fileList, ., getFiles, (]
[getProject, (, ), ), ;, for, (, String, included, :, fileList, ., getFiles, (, getProject, (, ), ), ), {]
[getProject, (, ), ), ;, for, (, String, included, :, fileList, ., getFiles, (, getProject, (, ), ), ), {]
[;, for, (, String, included, :, fileList, ., getFiles, (, getProject, (, ), ), ), {, files, ., add, (]
[;, for, (, String, included, :, fileList, ., getFiles, (, getProject, (, ), ), ), {, files, ., add, (]
[included, :, fileList, ., getFiles, (, getProject, (, ), ), ), {, files, ., add, (, SourceFile, ., fromFile, (]
[., getFiles, (, getProject, (, ), ), ), {, files, ., add, (, SourceFile, ., fromFile, (, new, File, (]
[(, getProject, (, ), ), ), {, files, ., add, (, SourceFile, ., fromFile, (, new, File, (, baseDir, ,]
[), ), ), {, files, ., add, (, SourceFile, ., fromFile, (, new, File, (, baseDir, ,, included, ), ,]
[), ), ), {, files, ., add, (, SourceFile, ., fromFile, (, new, File, (, baseDir, ,, included, ), ,]
[files, ., add, (, SourceFile, ., fromFile, (, new, File, (, baseDir, ,, included, ), ,, Charset, ., forName, (]
[(, new, File, (, baseDir, ,, included, ), ,, Charset, ., forName, (, encoding, ), ), ), ;, }, return]
[files, ;, }, private, List, <, SourceFile, >, findJavaScriptFiles, (, Path, path, ), {, List, <, SourceFile, >, files, =]
[files, ;, }, private, List, <, SourceFile, >, findJavaScriptFiles, (, Path, path, ), {, List, <, SourceFile, >, files, =]
[path, ), {, List, <, SourceFile, >, files, =, Lists, ., newArrayList, (, ), ;, for, (, String, included, :]
[path, ), {, List, <, SourceFile, >, files, =, Lists, ., newArrayList, (, ), ;, for, (, String, included, :]
[files, =, Lists, ., newArrayList, (, ), ;, for, (, String, included, :, path, ., list, (, ), ), {]
[files, =, Lists, ., newArrayList, (, ), ;, for, (, String, included, :, path, ., list, (, ), ), {]
[newArrayList, (, ), ;, for, (, String, included, :, path, ., list, (, ), ), {, files, ., add, (]
[newArrayList, (, ), ;, for, (, String, included, :, path, ., list, (, ), ), {, files, ., add, (]
[for, (, String, included, :, path, ., list, (, ), ), {, files, ., add, (, SourceFile, ., fromFile, (]
[included, :, path, ., list, (, ), ), {, files, ., add, (, SourceFile, ., fromFile, (, new, File, (]
[., list, (, ), ), {, files, ., add, (, SourceFile, ., fromFile, (, new, File, (, included, ), ,]
[., list, (, ), ), {, files, ., add, (, SourceFile, ., fromFile, (, new, File, (, included, ), ,]
[), {, files, ., add, (, SourceFile, ., fromFile, (, new, File, (, included, ), ,, Charset, ., forName, (]
[., fromFile, (, new, File, (, included, ), ,, Charset, ., forName, (, encoding, ), ), ), ;, }, return]
[), ), ;, }, return, files, ;, }, private, List, <, SourceFile, >, getDefaultExterns, (, ), {, try, {, return]
[), ), ;, }, return, files, ;, }, private, List, <, SourceFile, >, getDefaultExterns, (, ), {, try, {, return]
[(, ), {, try, {, return, CommandLineRunner, ., getDefaultExterns, (, ), ;, }, catch, (, IOException, e, ), {, throw]
[try, {, return, CommandLineRunner, ., getDefaultExterns, (, ), ;, }, catch, (, IOException, e, ), {, throw, new, BuildException, (]
[{, throw, new, BuildException, (, e, ), ;, }, }, private, void, writeResult, (, String, source, ), {, if, (]
[{, throw, new, BuildException, (, e, ), ;, }, }, private, void, writeResult, (, String, source, ), {, if, (]
[{, throw, new, BuildException, (, e, ), ;, }, }, private, void, writeResult, (, String, source, ), {, if, (]
[{, throw, new, BuildException, (, e, ), ;, }, }, private, void, writeResult, (, String, source, ), {, if, (]
[(, String, source, ), {, if, (, this, ., outputFile, ., getParentFile, (, ), ., mkdirs, (, ), ), {]
[source, ), {, if, (, this, ., outputFile, ., getParentFile, (, ), ., mkdirs, (, ), ), {, log, (]
[source, ), {, if, (, this, ., outputFile, ., getParentFile, (, ), ., mkdirs, (, ), ), {, log, (]
[{, if, (, this, ., outputFile, ., getParentFile, (, ), ., mkdirs, (, ), ), {, log, (, "Created missing parent directory ", +]
[{, if, (, this, ., outputFile, ., getParentFile, (, ), ., mkdirs, (, ), ), {, log, (, "Created missing parent directory ", +]
[{, if, (, this, ., outputFile, ., getParentFile, (, ), ., mkdirs, (, ), ), {, log, (, "Created missing parent directory ", +]
[(, ), ., mkdirs, (, ), ), {, log, (, "Created missing parent directory ", +, this, ., outputFile, ., getParentFile, (, ), ,]
[(, ), ., mkdirs, (, ), ), {, log, (, "Created missing parent directory ", +, this, ., outputFile, ., getParentFile, (, ), ,]
[+, this, ., outputFile, ., getParentFile, (, ), ,, Project, ., MSG_DEBUG, ), ;, }, try, {, OutputStreamWriter, out, =]
[outputFile, ., getParentFile, (, ), ,, Project, ., MSG_DEBUG, ), ;, }, try, {, OutputStreamWriter, out, =, new, OutputStreamWriter, (]
[(, ), ,, Project, ., MSG_DEBUG, ), ;, }, try, {, OutputStreamWriter, out, =, new, OutputStreamWriter, (, new, FileOutputStream, (]
[(, ), ,, Project, ., MSG_DEBUG, ), ;, }, try, {, OutputStreamWriter, out, =, new, OutputStreamWriter, (, new, FileOutputStream, (]
[MSG_DEBUG, ), ;, }, try, {, OutputStreamWriter, out, =, new, OutputStreamWriter, (, new, FileOutputStream, (, this, ., outputFile, ), ,]
[}, try, {, OutputStreamWriter, out, =, new, OutputStreamWriter, (, new, FileOutputStream, (, this, ., outputFile, ), ,, outputEncoding, ), ;]
[}, try, {, OutputStreamWriter, out, =, new, OutputStreamWriter, (, new, FileOutputStream, (, this, ., outputFile, ), ,, outputEncoding, ), ;]
[out, =, new, OutputStreamWriter, (, new, FileOutputStream, (, this, ., outputFile, ), ,, outputEncoding, ), ;, out, ., append, (]
[OutputStreamWriter, (, new, FileOutputStream, (, this, ., outputFile, ), ,, outputEncoding, ), ;, out, ., append, (, source, ), ;]
[OutputStreamWriter, (, new, FileOutputStream, (, this, ., outputFile, ), ,, outputEncoding, ), ;, out, ., append, (, source, ), ;]
[., outputFile, ), ,, outputEncoding, ), ;, out, ., append, (, source, ), ;, out, ., flush, (, ), ;]
[., outputFile, ), ,, outputEncoding, ), ;, out, ., append, (, source, ), ;, out, ., flush, (, ), ;]
[out, ., flush, (, ), ;, out, ., close, (, ), ;, }, catch, (, IOException, e, ), {, throw]
[(, ), ;, out, ., close, (, ), ;, }, catch, (, IOException, e, ), {, throw, new, BuildException, (]
[., close, (, ), ;, }, catch, (, IOException, e, ), {, throw, new, BuildException, (, e, ), ;, }]
[(, ), ;, }, catch, (, IOException, e, ), {, throw, new, BuildException, (, e, ), ;, }, log, (]
[(, ), ;, }, catch, (, IOException, e, ), {, throw, new, BuildException, (, e, ), ;, }, log, (]
[;, }, catch, (, IOException, e, ), {, throw, new, BuildException, (, e, ), ;, }, log, (, "Compiled JavaScript written to ", +]
[;, }, catch, (, IOException, e, ), {, throw, new, BuildException, (, e, ), ;, }, log, (, "Compiled JavaScript written to ", +]
[;, }, catch, (, IOException, e, ), {, throw, new, BuildException, (, e, ), ;, }, log, (, "Compiled JavaScript written to ", +]
[throw, new, BuildException, (, e, ), ;, }, log, (, "Compiled JavaScript written to ", +, this, ., outputFile, ., getAbsolutePath, (, ), ,]
[throw, new, BuildException, (, e, ), ;, }, log, (, "Compiled JavaScript written to ", +, this, ., outputFile, ., getAbsolutePath, (, ), ,]
[., getAbsolutePath, (, ), ,, Project, ., MSG_DEBUG, ), ;, }, private, boolean, isStale, (, ), {, long, lastRun, =]
[., getAbsolutePath, (, ), ,, Project, ., MSG_DEBUG, ), ;, }, private, boolean, isStale, (, ), {, long, lastRun, =]
[;, }, private, boolean, isStale, (, ), {, long, lastRun, =, outputFile, ., lastModified, (, ), ;, long, sourcesLastModified, =]
[;, }, private, boolean, isStale, (, ), {, long, lastRun, =, outputFile, ., lastModified, (, ), ;, long, sourcesLastModified, =]
[isStale, (, ), {, long, lastRun, =, outputFile, ., lastModified, (, ), ;, long, sourcesLastModified, =, Math, ., max, (]
[), {, long, lastRun, =, outputFile, ., lastModified, (, ), ;, long, sourcesLastModified, =, Math, ., max, (, getLastModifiedTime, (]
[), {, long, lastRun, =, outputFile, ., lastModified, (, ), ;, long, sourcesLastModified, =, Math, ., max, (, getLastModifiedTime, (]
[outputFile, ., lastModified, (, ), ;, long, sourcesLastModified, =, Math, ., max, (, getLastModifiedTime, (, this, ., sourceFileLists, ), ,]
[lastModified, (, ), ;, long, sourcesLastModified, =, Math, ., max, (, getLastModifiedTime, (, this, ., sourceFileLists, ), ,, getLastModifiedTime, (]
[lastModified, (, ), ;, long, sourcesLastModified, =, Math, ., max, (, getLastModifiedTime, (, this, ., sourceFileLists, ), ,, getLastModifiedTime, (]
[max, (, getLastModifiedTime, (, this, ., sourceFileLists, ), ,, getLastModifiedTime, (, this, ., sourcePaths, ), ), ;, long, externsLastModified, =]
[getLastModifiedTime, (, this, ., sourceFileLists, ), ,, getLastModifiedTime, (, this, ., sourcePaths, ), ), ;, long, externsLastModified, =, getLastModifiedTime, (]
[getLastModifiedTime, (, this, ., sourceFileLists, ), ,, getLastModifiedTime, (, this, ., sourcePaths, ), ), ;, long, externsLastModified, =, getLastModifiedTime, (]
[,, getLastModifiedTime, (, this, ., sourcePaths, ), ), ;, long, externsLastModified, =, getLastModifiedTime, (, this, ., externFileLists, ), ;, return]
[,, getLastModifiedTime, (, this, ., sourcePaths, ), ), ;, long, externsLastModified, =, getLastModifiedTime, (, this, ., externFileLists, ), ;, return]
[,, getLastModifiedTime, (, this, ., sourcePaths, ), ), ;, long, externsLastModified, =, getLastModifiedTime, (, this, ., externFileLists, ), ;, return]
[(, this, ., sourcePaths, ), ), ;, long, externsLastModified, =, getLastModifiedTime, (, this, ., externFileLists, ), ;, return, lastRun, <=]
[., sourcePaths, ), ), ;, long, externsLastModified, =, getLastModifiedTime, (, this, ., externFileLists, ), ;, return, lastRun, <=, sourcesLastModified, ||]
[., sourcePaths, ), ), ;, long, externsLastModified, =, getLastModifiedTime, (, this, ., externFileLists, ), ;, return, lastRun, <=, sourcesLastModified, ||]
[), ), ;, long, externsLastModified, =, getLastModifiedTime, (, this, ., externFileLists, ), ;, return, lastRun, <=, sourcesLastModified, ||, lastRun, <=]
[||, lastRun, <=, externsLastModified, ;, }, private, long, getLastModifiedTime, (, List, <, ?, >, fileLists, ), {, long, lastModified, =]
[long, getLastModifiedTime, (, List, <, ?, >, fileLists, ), {, long, lastModified, =, 0, ;, for, (, Object, entry, :]
[?, >, fileLists, ), {, long, lastModified, =, 0, ;, for, (, Object, entry, :, fileLists, ), {, if, (]
[?, >, fileLists, ), {, long, lastModified, =, 0, ;, for, (, Object, entry, :, fileLists, ), {, if, (]
[0, ;, for, (, Object, entry, :, fileLists, ), {, if, (, entry, instanceof, FileList, ), {, FileList, list, =]
[(, Object, entry, :, fileLists, ), {, if, (, entry, instanceof, FileList, ), {, FileList, list, =, (, FileList, )]
[if, (, entry, instanceof, FileList, ), {, FileList, list, =, (, FileList, ), entry, ;, for, (, String, fileName, :]
[if, (, entry, instanceof, FileList, ), {, FileList, list, =, (, FileList, ), entry, ;, for, (, String, fileName, :]
[FileList, ), {, FileList, list, =, (, FileList, ), entry, ;, for, (, String, fileName, :, list, ., getFiles, (]
[FileList, ), {, FileList, list, =, (, FileList, ), entry, ;, for, (, String, fileName, :, list, ., getFiles, (]
[for, (, String, fileName, :, list, ., getFiles, (, this, ., getProject, (, ), ), ), {, File, path, =]
[for, (, String, fileName, :, list, ., getFiles, (, this, ., getProject, (, ), ), ), {, File, path, =]
[:, list, ., getFiles, (, this, ., getProject, (, ), ), ), {, File, path, =, list, ., getDir, (]
[:, list, ., getFiles, (, this, ., getProject, (, ), ), ), {, File, path, =, list, ., getDir, (]
[), ), {, File, path, =, list, ., getDir, (, this, ., getProject, (, ), ), ;, File, file, =]
[File, path, =, list, ., getDir, (, this, ., getProject, (, ), ), ;, File, file, =, new, File, (]
[=, list, ., getDir, (, this, ., getProject, (, ), ), ;, File, file, =, new, File, (, path, ,]
[getDir, (, this, ., getProject, (, ), ), ;, File, file, =, new, File, (, path, ,, fileName, ), ;]
[this, ., getProject, (, ), ), ;, File, file, =, new, File, (, path, ,, fileName, ), ;, lastModified, =]
[this, ., getProject, (, ), ), ;, File, file, =, new, File, (, path, ,, fileName, ), ;, lastModified, =]
[), ), ;, File, file, =, new, File, (, path, ,, fileName, ), ;, lastModified, =, Math, ., max, (]
[;, File, file, =, new, File, (, path, ,, fileName, ), ;, lastModified, =, Math, ., max, (, getLastModifiedTime, (]
[=, new, File, (, path, ,, fileName, ), ;, lastModified, =, Math, ., max, (, getLastModifiedTime, (, file, ), ,]
[;, lastModified, =, Math, ., max, (, getLastModifiedTime, (, file, ), ,, lastModified, ), ;, }, }, else, if, (]
[;, lastModified, =, Math, ., max, (, getLastModifiedTime, (, file, ), ,, lastModified, ), ;, }, }, else, if, (]
[(, file, ), ,, lastModified, ), ;, }, }, else, if, (, entry, instanceof, Path, ), {, Path, path, =]
[,, lastModified, ), ;, }, }, else, if, (, entry, instanceof, Path, ), {, Path, path, =, (, Path, )]
[if, (, entry, instanceof, Path, ), {, Path, path, =, (, Path, ), entry, ;, for, (, String, src, :]
[if, (, entry, instanceof, Path, ), {, Path, path, =, (, Path, ), entry, ;, for, (, String, src, :]
[(, Path, ), entry, ;, for, (, String, src, :, path, ., list, (, ), ), {, File, file, =]
[entry, ;, for, (, String, src, :, path, ., list, (, ), ), {, File, file, =, new, File, (]
[(, String, src, :, path, ., list, (, ), ), {, File, file, =, new, File, (, src, ), ;]
[src, :, path, ., list, (, ), ), {, File, file, =, new, File, (, src, ), ;, lastModified, =]
[src, :, path, ., list, (, ), ), {, File, file, =, new, File, (, src, ), ;, lastModified, =]
[list, (, ), ), {, File, file, =, new, File, (, src, ), ;, lastModified, =, Math, ., max, (]
[), ), {, File, file, =, new, File, (, src, ), ;, lastModified, =, Math, ., max, (, getLastModifiedTime, (]
[File, file, =, new, File, (, src, ), ;, lastModified, =, Math, ., max, (, getLastModifiedTime, (, file, ), ,]
[), ;, lastModified, =, Math, ., max, (, getLastModifiedTime, (, file, ), ,, lastModified, ), ;, }, }, }, return]
[), ;, }, }, }, return, lastModified, ;, }, private, long, getLastModifiedTime, (, File, file, ), {, long, fileLastModified, =]
[), ;, }, }, }, return, lastModified, ;, }, private, long, getLastModifiedTime, (, File, file, ), {, long, fileLastModified, =]
[}, private, long, getLastModifiedTime, (, File, file, ), {, long, fileLastModified, =, file, ., lastModified, (, ), ;, if, (]
[}, private, long, getLastModifiedTime, (, File, file, ), {, long, fileLastModified, =, file, ., lastModified, (, ), ;, if, (]
[long, getLastModifiedTime, (, File, file, ), {, long, fileLastModified, =, file, ., lastModified, (, ), ;, if, (, fileLastModified, ==]
[File, file, ), {, long, fileLastModified, =, file, ., lastModified, (, ), ;, if, (, fileLastModified, ==, 0, ), {]
[), {, long, fileLastModified, =, file, ., lastModified, (, ), ;, if, (, fileLastModified, ==, 0, ), {, fileLastModified, =]
[), {, long, fileLastModified, =, file, ., lastModified, (, ), ;, if, (, fileLastModified, ==, 0, ), {, fileLastModified, =]
[if, (, fileLastModified, ==, 0, ), {, fileLastModified, =, new, Date, (, ), ., getTime, (, ), ;, }, return]
