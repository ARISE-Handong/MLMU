[=, new, Stack, (, ), ;, }, public, Stack, getSubHandlers, (, ), {, return, this, ., subHandlers, ;, }, public]
[., subHandlers, =, new, Stack, (, ), ;, }, public, Stack, getSubHandlers, (, ), {, return, this, ., subHandlers, ;]
[;, }, public, Stack, getSubHandlers, (, ), {, return, this, ., subHandlers, ;, }, public, void, characters, (, char, []
[;, }, public, void, characters, (, char, [, ], ch, ,, int, start, ,, int, length, ), throws, SAXException, {]
[., subHandlers, ;, }, public, void, characters, (, char, [, ], ch, ,, int, start, ,, int, length, ), throws]
[;, if, (, handler, !=, this, ), {, handler, ., characters, (, ch, ,, start, ,, length, ), ;, }]
[), {, handler, ., characters, (, ch, ,, start, ,, length, ), ;, }, }, public, DefaultHandler, getCurrentHandler, (, )]
[!=, this, ), {, handler, ., characters, (, ch, ,, start, ,, length, ), ;, }, }, public, DefaultHandler, getCurrentHandler]
[), {, handler, ., characters, (, ch, ,, start, ,, length, ), ;, }, }, public, DefaultHandler, getCurrentHandler, (, )]
[;, }, }, public, DefaultHandler, getCurrentHandler, (, ), {, DefaultHandler, result, =, this, ;, if, (, this, ., subHandlers, !=]
[., characters, (, ch, ,, start, ,, length, ), ;, }, }, public, DefaultHandler, getCurrentHandler, (, ), {, DefaultHandler, result]
[,, start, ,, length, ), ;, }, }, public, DefaultHandler, getCurrentHandler, (, ), {, DefaultHandler, result, =, this, ;, if]
[,, length, ), ;, }, }, public, DefaultHandler, getCurrentHandler, (, ), {, DefaultHandler, result, =, this, ;, if, (, this]
[), ;, }, }, public, DefaultHandler, getCurrentHandler, (, ), {, DefaultHandler, result, =, this, ;, if, (, this, ., subHandlers]
[;, if, (, this, ., subHandlers, !=, null, ), {, if, (, this, ., subHandlers, ., size, (, ), >]
[), {, if, (, this, ., subHandlers, ., size, (, ), >, 0, ), {, Object, top, =, this, .]
[!=, null, ), {, if, (, this, ., subHandlers, ., size, (, ), >, 0, ), {, Object, top, =]
[., subHandlers, !=, null, ), {, if, (, this, ., subHandlers, ., size, (, ), >, 0, ), {, Object]
[), {, if, (, this, ., subHandlers, ., size, (, ), >, 0, ), {, Object, top, =, this, .]
[), {, Object, top, =, this, ., subHandlers, ., peek, (, ), ;, if, (, top, !=, null, ), {]
[>, 0, ), {, Object, top, =, this, ., subHandlers, ., peek, (, ), ;, if, (, top, !=, null]
[., size, (, ), >, 0, ), {, Object, top, =, this, ., subHandlers, ., peek, (, ), ;, if]
[., subHandlers, ., size, (, ), >, 0, ), {, Object, top, =, this, ., subHandlers, ., peek, (, )]
[), {, Object, top, =, this, ., subHandlers, ., peek, (, ), ;, if, (, top, !=, null, ), {]
[;, if, (, top, !=, null, ), {, result, =, (, DefaultHandler, ), top, ;, }, }, }, return, result]
[., peek, (, ), ;, if, (, top, !=, null, ), {, result, =, (, DefaultHandler, ), top, ;, }]
[., subHandlers, ., peek, (, ), ;, if, (, top, !=, null, ), {, result, =, (, DefaultHandler, ), top]
[), {, result, =, (, DefaultHandler, ), top, ;, }, }, }, return, result, ;, }, public, void, pushSubHandler, (]
[!=, null, ), {, result, =, (, DefaultHandler, ), top, ;, }, }, }, return, result, ;, }, public, void]
[), {, result, =, (, DefaultHandler, ), top, ;, }, }, }, return, result, ;, }, public, void, pushSubHandler, (]
[=, (, DefaultHandler, ), top, ;, }, }, }, return, result, ;, }, public, void, pushSubHandler, (, DefaultHandler, subhandler, )]
[;, }, }, }, return, result, ;, }, public, void, pushSubHandler, (, DefaultHandler, subhandler, ), {, this, ., subHandlers, .]
[;, }, }, }, return, result, ;, }, public, void, pushSubHandler, (, DefaultHandler, subhandler, ), {, this, ., subHandlers, .]
[;, }, public, void, pushSubHandler, (, DefaultHandler, subhandler, ), {, this, ., subHandlers, ., push, (, subhandler, ), ;, }]
[;, }, public, DefaultHandler, popSubHandler, (, ), {, return, (, DefaultHandler, ), this, ., subHandlers, ., pop, (, ), ;]
[., push, (, subhandler, ), ;, }, public, DefaultHandler, popSubHandler, (, ), {, return, (, DefaultHandler, ), this, ., subHandlers]
[., subHandlers, ., push, (, subhandler, ), ;, }, public, DefaultHandler, popSubHandler, (, ), {, return, (, DefaultHandler, ), this]
[), ;, }, public, DefaultHandler, popSubHandler, (, ), {, return, (, DefaultHandler, ), this, ., subHandlers, ., pop, (, )]
[;, }, }]
[;, }, }]
[., pop, (, ), ;, }, }]
[., subHandlers, ., pop, (, ), ;, }, }]
