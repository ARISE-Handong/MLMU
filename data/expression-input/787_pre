[CategoryDataset, ;, public, class, BarRenderer, extends, AbstractCategoryItemRenderer, implements, Cloneable, ,, PublicCloneable, ,, Serializable, {, private, static, final, long, serialVersionUID, =]
[Cloneable, ,, PublicCloneable, ,, Serializable, {, private, static, final, long, serialVersionUID, =, 6000649414965887481L, ;, public, static, final, double, DEFAULT_ITEM_MARGIN, =]
[final, long, serialVersionUID, =, 6000649414965887481L, ;, public, static, final, double, DEFAULT_ITEM_MARGIN, =, 0.20, ;, public, static, final, double, BAR_OUTLINE_WIDTH_THRESHOLD, =]
[static, final, double, DEFAULT_ITEM_MARGIN, =, 0.20, ;, public, static, final, double, BAR_OUTLINE_WIDTH_THRESHOLD, =, 3.0, ;, private, static, BarPainter, defaultBarPainter, =]
[3.0, ;, private, static, BarPainter, defaultBarPainter, =, new, GradientBarPainter, (, ), ;, public, static, BarPainter, getDefaultBarPainter, (, ), {, return]
[3.0, ;, private, static, BarPainter, defaultBarPainter, =, new, GradientBarPainter, (, ), ;, public, static, BarPainter, getDefaultBarPainter, (, ), {, return]
[(, ), {, return, BarRenderer, ., defaultBarPainter, ;, }, public, static, void, setDefaultBarPainter, (, BarPainter, painter, ), {, if, (]
[(, ), {, return, BarRenderer, ., defaultBarPainter, ;, }, public, static, void, setDefaultBarPainter, (, BarPainter, painter, ), {, if, (]
[{, return, BarRenderer, ., defaultBarPainter, ;, }, public, static, void, setDefaultBarPainter, (, BarPainter, painter, ), {, if, (, painter, ==]
[defaultBarPainter, ;, }, public, static, void, setDefaultBarPainter, (, BarPainter, painter, ), {, if, (, painter, ==, null, ), {, throw]
[public, static, void, setDefaultBarPainter, (, BarPainter, painter, ), {, if, (, painter, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, BarPainter, painter, ), {, if, (, painter, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'painter' argument.", ), ;, }]
[(, BarPainter, painter, ), {, if, (, painter, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'painter' argument.", ), ;, }]
[{, if, (, painter, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'painter' argument.", ), ;, }, BarRenderer, ., defaultBarPainter, =]
[throw, new, IllegalArgumentException, (, "Null 'painter' argument.", ), ;, }, BarRenderer, ., defaultBarPainter, =, painter, ;, }, private, static, boolean, defaultShadowsVisible, =]
[defaultBarPainter, =, painter, ;, }, private, static, boolean, defaultShadowsVisible, =, true, ;, public, static, boolean, getDefaultShadowsVisible, (, ), {, return]
[defaultBarPainter, =, painter, ;, }, private, static, boolean, defaultShadowsVisible, =, true, ;, public, static, boolean, getDefaultShadowsVisible, (, ), {, return]
[boolean, getDefaultShadowsVisible, (, ), {, return, BarRenderer, ., defaultShadowsVisible, ;, }, public, static, void, setDefaultShadowsVisible, (, boolean, visible, ), {]
[boolean, getDefaultShadowsVisible, (, ), {, return, BarRenderer, ., defaultShadowsVisible, ;, }, public, static, void, setDefaultShadowsVisible, (, boolean, visible, ), {]
[{, return, BarRenderer, ., defaultShadowsVisible, ;, }, public, static, void, setDefaultShadowsVisible, (, boolean, visible, ), {, BarRenderer, ., defaultShadowsVisible, =]
[Paint, shadowPaint, ;, private, double, shadowXOffset, ;, private, double, shadowYOffset, ;, public, BarRenderer, (, ), {, super, (, ), ;]
[Paint, shadowPaint, ;, private, double, shadowXOffset, ;, private, double, shadowYOffset, ;, public, BarRenderer, (, ), {, super, (, ), ;]
[double, shadowXOffset, ;, private, double, shadowYOffset, ;, public, BarRenderer, (, ), {, super, (, ), ;, this, ., base, =]
[;, private, double, shadowYOffset, ;, public, BarRenderer, (, ), {, super, (, ), ;, this, ., base, =, 0.0, ;]
[;, private, double, shadowYOffset, ;, public, BarRenderer, (, ), {, super, (, ), ;, this, ., base, =, 0.0, ;]
[;, public, BarRenderer, (, ), {, super, (, ), ;, this, ., base, =, 0.0, ;, this, ., includeBaseInRange, =]
[BarRenderer, (, ), {, super, (, ), ;, this, ., base, =, 0.0, ;, this, ., includeBaseInRange, =, true, ;]
[BarRenderer, (, ), {, super, (, ), ;, this, ., base, =, 0.0, ;, this, ., includeBaseInRange, =, true, ;]
[super, (, ), ;, this, ., base, =, 0.0, ;, this, ., includeBaseInRange, =, true, ;, this, ., itemMargin, =]
[), ;, this, ., base, =, 0.0, ;, this, ., includeBaseInRange, =, true, ;, this, ., itemMargin, =, DEFAULT_ITEM_MARGIN, ;]
[), ;, this, ., base, =, 0.0, ;, this, ., includeBaseInRange, =, true, ;, this, ., itemMargin, =, DEFAULT_ITEM_MARGIN, ;]
[base, =, 0.0, ;, this, ., includeBaseInRange, =, true, ;, this, ., itemMargin, =, DEFAULT_ITEM_MARGIN, ;, this, ., drawBarOutline, =]
[0.0, ;, this, ., includeBaseInRange, =, true, ;, this, ., itemMargin, =, DEFAULT_ITEM_MARGIN, ;, this, ., drawBarOutline, =, false, ;]
[0.0, ;, this, ., includeBaseInRange, =, true, ;, this, ., itemMargin, =, DEFAULT_ITEM_MARGIN, ;, this, ., drawBarOutline, =, false, ;]
[includeBaseInRange, =, true, ;, this, ., itemMargin, =, DEFAULT_ITEM_MARGIN, ;, this, ., drawBarOutline, =, false, ;, this, ., maximumBarWidth, =]
[true, ;, this, ., itemMargin, =, DEFAULT_ITEM_MARGIN, ;, this, ., drawBarOutline, =, false, ;, this, ., maximumBarWidth, =, 1.0, ;]
[true, ;, this, ., itemMargin, =, DEFAULT_ITEM_MARGIN, ;, this, ., drawBarOutline, =, false, ;, this, ., maximumBarWidth, =, 1.0, ;]
[itemMargin, =, DEFAULT_ITEM_MARGIN, ;, this, ., drawBarOutline, =, false, ;, this, ., maximumBarWidth, =, 1.0, ;, this, ., positiveItemLabelPositionFallback, =]
[DEFAULT_ITEM_MARGIN, ;, this, ., drawBarOutline, =, false, ;, this, ., maximumBarWidth, =, 1.0, ;, this, ., positiveItemLabelPositionFallback, =, null, ;]
[DEFAULT_ITEM_MARGIN, ;, this, ., drawBarOutline, =, false, ;, this, ., maximumBarWidth, =, 1.0, ;, this, ., positiveItemLabelPositionFallback, =, null, ;]
[drawBarOutline, =, false, ;, this, ., maximumBarWidth, =, 1.0, ;, this, ., positiveItemLabelPositionFallback, =, null, ;, this, ., negativeItemLabelPositionFallback, =]
[false, ;, this, ., maximumBarWidth, =, 1.0, ;, this, ., positiveItemLabelPositionFallback, =, null, ;, this, ., negativeItemLabelPositionFallback, =, null, ;]
[false, ;, this, ., maximumBarWidth, =, 1.0, ;, this, ., positiveItemLabelPositionFallback, =, null, ;, this, ., negativeItemLabelPositionFallback, =, null, ;]
[maximumBarWidth, =, 1.0, ;, this, ., positiveItemLabelPositionFallback, =, null, ;, this, ., negativeItemLabelPositionFallback, =, null, ;, this, ., gradientPaintTransformer, =]
[., positiveItemLabelPositionFallback, =, null, ;, this, ., negativeItemLabelPositionFallback, =, null, ;, this, ., gradientPaintTransformer, =, new, StandardGradientPaintTransformer, (, ), ;]
[., positiveItemLabelPositionFallback, =, null, ;, this, ., negativeItemLabelPositionFallback, =, null, ;, this, ., gradientPaintTransformer, =, new, StandardGradientPaintTransformer, (, ), ;]
[;, this, ., negativeItemLabelPositionFallback, =, null, ;, this, ., gradientPaintTransformer, =, new, StandardGradientPaintTransformer, (, ), ;, this, ., minimumBarLength, =]
[., negativeItemLabelPositionFallback, =, null, ;, this, ., gradientPaintTransformer, =, new, StandardGradientPaintTransformer, (, ), ;, this, ., minimumBarLength, =, 0.0, ;]
[=, null, ;, this, ., gradientPaintTransformer, =, new, StandardGradientPaintTransformer, (, ), ;, this, ., minimumBarLength, =, 0.0, ;, setBaseLegendShape, (]
[gradientPaintTransformer, =, new, StandardGradientPaintTransformer, (, ), ;, this, ., minimumBarLength, =, 0.0, ;, setBaseLegendShape, (, new, Rectangle2D, ., Double, (]
[=, new, StandardGradientPaintTransformer, (, ), ;, this, ., minimumBarLength, =, 0.0, ;, setBaseLegendShape, (, new, Rectangle2D, ., Double, (, -]
[StandardGradientPaintTransformer, (, ), ;, this, ., minimumBarLength, =, 0.0, ;, setBaseLegendShape, (, new, Rectangle2D, ., Double, (, -, 4.0, ,]
[(, ), ;, this, ., minimumBarLength, =, 0.0, ;, setBaseLegendShape, (, new, Rectangle2D, ., Double, (, -, 4.0, ,, -]
[;, this, ., minimumBarLength, =, 0.0, ;, setBaseLegendShape, (, new, Rectangle2D, ., Double, (, -, 4.0, ,, -, 4.0, ,]
[., minimumBarLength, =, 0.0, ;, setBaseLegendShape, (, new, Rectangle2D, ., Double, (, -, 4.0, ,, -, 4.0, ,, 8.0, ,]
[;, setBaseLegendShape, (, new, Rectangle2D, ., Double, (, -, 4.0, ,, -, 4.0, ,, 8.0, ,, 8.0, ), ), ;]
[;, setBaseLegendShape, (, new, Rectangle2D, ., Double, (, -, 4.0, ,, -, 4.0, ,, 8.0, ,, 8.0, ), ), ;]
[Rectangle2D, ., Double, (, -, 4.0, ,, -, 4.0, ,, 8.0, ,, 8.0, ), ), ;, this, ., barPainter, =]
[-, 4.0, ,, -, 4.0, ,, 8.0, ,, 8.0, ), ), ;, this, ., barPainter, =, getDefaultBarPainter, (, ), ;]
[-, 4.0, ,, -, 4.0, ,, 8.0, ,, 8.0, ), ), ;, this, ., barPainter, =, getDefaultBarPainter, (, ), ;]
[4.0, ,, 8.0, ,, 8.0, ), ), ;, this, ., barPainter, =, getDefaultBarPainter, (, ), ;, this, ., shadowsVisible, =]
[8.0, ), ), ;, this, ., barPainter, =, getDefaultBarPainter, (, ), ;, this, ., shadowsVisible, =, getDefaultShadowsVisible, (, ), ;]
[8.0, ), ), ;, this, ., barPainter, =, getDefaultBarPainter, (, ), ;, this, ., shadowsVisible, =, getDefaultShadowsVisible, (, ), ;]
[this, ., barPainter, =, getDefaultBarPainter, (, ), ;, this, ., shadowsVisible, =, getDefaultShadowsVisible, (, ), ;, this, ., shadowPaint, =]
[this, ., barPainter, =, getDefaultBarPainter, (, ), ;, this, ., shadowsVisible, =, getDefaultShadowsVisible, (, ), ;, this, ., shadowPaint, =]
[getDefaultBarPainter, (, ), ;, this, ., shadowsVisible, =, getDefaultShadowsVisible, (, ), ;, this, ., shadowPaint, =, Color, ., gray, ;]
[getDefaultBarPainter, (, ), ;, this, ., shadowsVisible, =, getDefaultShadowsVisible, (, ), ;, this, ., shadowPaint, =, Color, ., gray, ;]
[this, ., shadowsVisible, =, getDefaultShadowsVisible, (, ), ;, this, ., shadowPaint, =, Color, ., gray, ;, this, ., shadowXOffset, =]
[shadowsVisible, =, getDefaultShadowsVisible, (, ), ;, this, ., shadowPaint, =, Color, ., gray, ;, this, ., shadowXOffset, =, 4.0, ;]
[shadowsVisible, =, getDefaultShadowsVisible, (, ), ;, this, ., shadowPaint, =, Color, ., gray, ;, this, ., shadowXOffset, =, 4.0, ;]
[), ;, this, ., shadowPaint, =, Color, ., gray, ;, this, ., shadowXOffset, =, 4.0, ;, this, ., shadowYOffset, =]
[this, ., shadowXOffset, =, 4.0, ;, this, ., shadowYOffset, =, 4.0, ;, }, public, double, getBase, (, ), {, return]
[this, ., shadowXOffset, =, 4.0, ;, this, ., shadowYOffset, =, 4.0, ;, }, public, double, getBase, (, ), {, return]
[public, double, getBase, (, ), {, return, this, ., base, ;, }, public, void, setBase, (, double, base, ), {]
[public, double, getBase, (, ), {, return, this, ., base, ;, }, public, void, setBase, (, double, base, ), {]
[), {, return, this, ., base, ;, }, public, void, setBase, (, double, base, ), {, this, ., base, =]
[return, this, ., base, ;, }, public, void, setBase, (, double, base, ), {, this, ., base, =, base, ;]
[), {, this, ., base, =, base, ;, fireChangeEvent, (, ), ;, }, public, double, getItemMargin, (, ), {, return]
[), {, this, ., base, =, base, ;, fireChangeEvent, (, ), ;, }, public, double, getItemMargin, (, ), {, return]
[public, double, getItemMargin, (, ), {, return, this, ., itemMargin, ;, }, public, void, setItemMargin, (, double, percent, ), {]
[public, double, getItemMargin, (, ), {, return, this, ., itemMargin, ;, }, public, void, setItemMargin, (, double, percent, ), {]
[), {, return, this, ., itemMargin, ;, }, public, void, setItemMargin, (, double, percent, ), {, this, ., itemMargin, =]
[return, this, ., itemMargin, ;, }, public, void, setItemMargin, (, double, percent, ), {, this, ., itemMargin, =, percent, ;]
[), {, this, ., itemMargin, =, percent, ;, fireChangeEvent, (, ), ;, }, public, boolean, isDrawBarOutline, (, ), {, return]
[), {, this, ., itemMargin, =, percent, ;, fireChangeEvent, (, ), ;, }, public, boolean, isDrawBarOutline, (, ), {, return]
[public, boolean, isDrawBarOutline, (, ), {, return, this, ., drawBarOutline, ;, }, public, void, setDrawBarOutline, (, boolean, draw, ), {]
[public, boolean, isDrawBarOutline, (, ), {, return, this, ., drawBarOutline, ;, }, public, void, setDrawBarOutline, (, boolean, draw, ), {]
[), {, return, this, ., drawBarOutline, ;, }, public, void, setDrawBarOutline, (, boolean, draw, ), {, this, ., drawBarOutline, =]
[return, this, ., drawBarOutline, ;, }, public, void, setDrawBarOutline, (, boolean, draw, ), {, this, ., drawBarOutline, =, draw, ;]
[), {, this, ., drawBarOutline, =, draw, ;, fireChangeEvent, (, ), ;, }, public, double, getMaximumBarWidth, (, ), {, return]
[), {, this, ., drawBarOutline, =, draw, ;, fireChangeEvent, (, ), ;, }, public, double, getMaximumBarWidth, (, ), {, return]
[public, double, getMaximumBarWidth, (, ), {, return, this, ., maximumBarWidth, ;, }, public, void, setMaximumBarWidth, (, double, percent, ), {]
[public, double, getMaximumBarWidth, (, ), {, return, this, ., maximumBarWidth, ;, }, public, void, setMaximumBarWidth, (, double, percent, ), {]
[), {, return, this, ., maximumBarWidth, ;, }, public, void, setMaximumBarWidth, (, double, percent, ), {, this, ., maximumBarWidth, =]
[return, this, ., maximumBarWidth, ;, }, public, void, setMaximumBarWidth, (, double, percent, ), {, this, ., maximumBarWidth, =, percent, ;]
[), {, this, ., maximumBarWidth, =, percent, ;, fireChangeEvent, (, ), ;, }, public, double, getMinimumBarLength, (, ), {, return]
[), {, this, ., maximumBarWidth, =, percent, ;, fireChangeEvent, (, ), ;, }, public, double, getMinimumBarLength, (, ), {, return]
[getMinimumBarLength, (, ), {, return, this, ., minimumBarLength, ;, }, public, void, setMinimumBarLength, (, double, min, ), {, if, (]
[getMinimumBarLength, (, ), {, return, this, ., minimumBarLength, ;, }, public, void, setMinimumBarLength, (, double, min, ), {, if, (]
[), {, return, this, ., minimumBarLength, ;, }, public, void, setMinimumBarLength, (, double, min, ), {, if, (, min, <]
[., minimumBarLength, ;, }, public, void, setMinimumBarLength, (, double, min, ), {, if, (, min, <, 0.0, ), {, throw]
[}, public, void, setMinimumBarLength, (, double, min, ), {, if, (, min, <, 0.0, ), {, throw, new, IllegalArgumentException, (]
[(, double, min, ), {, if, (, min, <, 0.0, ), {, throw, new, IllegalArgumentException, (, "Requires 'min' >= 0.0", ), ;, }]
[(, double, min, ), {, if, (, min, <, 0.0, ), {, throw, new, IllegalArgumentException, (, "Requires 'min' >= 0.0", ), ;, }]
[{, if, (, min, <, 0.0, ), {, throw, new, IllegalArgumentException, (, "Requires 'min' >= 0.0", ), ;, }, this, ., minimumBarLength, =]
[(, min, <, 0.0, ), {, throw, new, IllegalArgumentException, (, "Requires 'min' >= 0.0", ), ;, }, this, ., minimumBarLength, =, min, ;]
[;, }, this, ., minimumBarLength, =, min, ;, fireChangeEvent, (, ), ;, }, public, GradientPaintTransformer, getGradientPaintTransformer, (, ), {, return]
[;, }, this, ., minimumBarLength, =, min, ;, fireChangeEvent, (, ), ;, }, public, GradientPaintTransformer, getGradientPaintTransformer, (, ), {, return]
[public, GradientPaintTransformer, getGradientPaintTransformer, (, ), {, return, this, ., gradientPaintTransformer, ;, }, public, void, setGradientPaintTransformer, (, GradientPaintTransformer, transformer, ), {]
[public, GradientPaintTransformer, getGradientPaintTransformer, (, ), {, return, this, ., gradientPaintTransformer, ;, }, public, void, setGradientPaintTransformer, (, GradientPaintTransformer, transformer, ), {]
[), {, return, this, ., gradientPaintTransformer, ;, }, public, void, setGradientPaintTransformer, (, GradientPaintTransformer, transformer, ), {, this, ., gradientPaintTransformer, =]
[return, this, ., gradientPaintTransformer, ;, }, public, void, setGradientPaintTransformer, (, GradientPaintTransformer, transformer, ), {, this, ., gradientPaintTransformer, =, transformer, ;]
[), {, this, ., gradientPaintTransformer, =, transformer, ;, fireChangeEvent, (, ), ;, }, public, ItemLabelPosition, getPositiveItemLabelPositionFallback, (, ), {, return]
[), {, this, ., gradientPaintTransformer, =, transformer, ;, fireChangeEvent, (, ), ;, }, public, ItemLabelPosition, getPositiveItemLabelPositionFallback, (, ), {, return]
[public, ItemLabelPosition, getPositiveItemLabelPositionFallback, (, ), {, return, this, ., positiveItemLabelPositionFallback, ;, }, public, void, setPositiveItemLabelPositionFallback, (, ItemLabelPosition, position, ), {]
[public, ItemLabelPosition, getPositiveItemLabelPositionFallback, (, ), {, return, this, ., positiveItemLabelPositionFallback, ;, }, public, void, setPositiveItemLabelPositionFallback, (, ItemLabelPosition, position, ), {]
[), {, return, this, ., positiveItemLabelPositionFallback, ;, }, public, void, setPositiveItemLabelPositionFallback, (, ItemLabelPosition, position, ), {, this, ., positiveItemLabelPositionFallback, =]
[return, this, ., positiveItemLabelPositionFallback, ;, }, public, void, setPositiveItemLabelPositionFallback, (, ItemLabelPosition, position, ), {, this, ., positiveItemLabelPositionFallback, =, position, ;]
[), {, this, ., positiveItemLabelPositionFallback, =, position, ;, fireChangeEvent, (, ), ;, }, public, ItemLabelPosition, getNegativeItemLabelPositionFallback, (, ), {, return]
[), {, this, ., positiveItemLabelPositionFallback, =, position, ;, fireChangeEvent, (, ), ;, }, public, ItemLabelPosition, getNegativeItemLabelPositionFallback, (, ), {, return]
[public, ItemLabelPosition, getNegativeItemLabelPositionFallback, (, ), {, return, this, ., negativeItemLabelPositionFallback, ;, }, public, void, setNegativeItemLabelPositionFallback, (, ItemLabelPosition, position, ), {]
[public, ItemLabelPosition, getNegativeItemLabelPositionFallback, (, ), {, return, this, ., negativeItemLabelPositionFallback, ;, }, public, void, setNegativeItemLabelPositionFallback, (, ItemLabelPosition, position, ), {]
[), {, return, this, ., negativeItemLabelPositionFallback, ;, }, public, void, setNegativeItemLabelPositionFallback, (, ItemLabelPosition, position, ), {, this, ., negativeItemLabelPositionFallback, =]
[return, this, ., negativeItemLabelPositionFallback, ;, }, public, void, setNegativeItemLabelPositionFallback, (, ItemLabelPosition, position, ), {, this, ., negativeItemLabelPositionFallback, =, position, ;]
[), {, this, ., negativeItemLabelPositionFallback, =, position, ;, fireChangeEvent, (, ), ;, }, public, boolean, getIncludeBaseInRange, (, ), {, return]
[), {, this, ., negativeItemLabelPositionFallback, =, position, ;, fireChangeEvent, (, ), ;, }, public, boolean, getIncludeBaseInRange, (, ), {, return]
[getIncludeBaseInRange, (, ), {, return, this, ., includeBaseInRange, ;, }, public, void, setIncludeBaseInRange, (, boolean, include, ), {, if, (]
[getIncludeBaseInRange, (, ), {, return, this, ., includeBaseInRange, ;, }, public, void, setIncludeBaseInRange, (, boolean, include, ), {, if, (]
[getIncludeBaseInRange, (, ), {, return, this, ., includeBaseInRange, ;, }, public, void, setIncludeBaseInRange, (, boolean, include, ), {, if, (]
[return, this, ., includeBaseInRange, ;, }, public, void, setIncludeBaseInRange, (, boolean, include, ), {, if, (, this, ., includeBaseInRange, !=]
[includeBaseInRange, ;, }, public, void, setIncludeBaseInRange, (, boolean, include, ), {, if, (, this, ., includeBaseInRange, !=, include, ), {]
[includeBaseInRange, ;, }, public, void, setIncludeBaseInRange, (, boolean, include, ), {, if, (, this, ., includeBaseInRange, !=, include, ), {]
[void, setIncludeBaseInRange, (, boolean, include, ), {, if, (, this, ., includeBaseInRange, !=, include, ), {, this, ., includeBaseInRange, =]
[(, boolean, include, ), {, if, (, this, ., includeBaseInRange, !=, include, ), {, this, ., includeBaseInRange, =, include, ;]
[{, this, ., includeBaseInRange, =, include, ;, fireChangeEvent, (, ), ;, }, }, public, BarPainter, getBarPainter, (, ), {, return]
[{, this, ., includeBaseInRange, =, include, ;, fireChangeEvent, (, ), ;, }, }, public, BarPainter, getBarPainter, (, ), {, return]
[getBarPainter, (, ), {, return, this, ., barPainter, ;, }, public, void, setBarPainter, (, BarPainter, painter, ), {, if, (]
[getBarPainter, (, ), {, return, this, ., barPainter, ;, }, public, void, setBarPainter, (, BarPainter, painter, ), {, if, (]
[), {, return, this, ., barPainter, ;, }, public, void, setBarPainter, (, BarPainter, painter, ), {, if, (, painter, ==]
[., barPainter, ;, }, public, void, setBarPainter, (, BarPainter, painter, ), {, if, (, painter, ==, null, ), {, throw]
[}, public, void, setBarPainter, (, BarPainter, painter, ), {, if, (, painter, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, BarPainter, painter, ), {, if, (, painter, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'painter' argument.", ), ;, }]
[(, BarPainter, painter, ), {, if, (, painter, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'painter' argument.", ), ;, }]
[{, if, (, painter, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'painter' argument.", ), ;, }, this, ., barPainter, =]
[(, painter, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'painter' argument.", ), ;, }, this, ., barPainter, =, painter, ;]
[;, }, this, ., barPainter, =, painter, ;, fireChangeEvent, (, ), ;, }, public, boolean, getShadowsVisible, (, ), {, return]
[;, }, this, ., barPainter, =, painter, ;, fireChangeEvent, (, ), ;, }, public, boolean, getShadowsVisible, (, ), {, return]
[public, boolean, getShadowsVisible, (, ), {, return, this, ., shadowsVisible, ;, }, public, void, setShadowVisible, (, boolean, visible, ), {]
[public, boolean, getShadowsVisible, (, ), {, return, this, ., shadowsVisible, ;, }, public, void, setShadowVisible, (, boolean, visible, ), {]
[), {, return, this, ., shadowsVisible, ;, }, public, void, setShadowVisible, (, boolean, visible, ), {, this, ., shadowsVisible, =]
[return, this, ., shadowsVisible, ;, }, public, void, setShadowVisible, (, boolean, visible, ), {, this, ., shadowsVisible, =, visible, ;]
[), {, this, ., shadowsVisible, =, visible, ;, fireChangeEvent, (, ), ;, }, public, Paint, getShadowPaint, (, ), {, return]
[), {, this, ., shadowsVisible, =, visible, ;, fireChangeEvent, (, ), ;, }, public, Paint, getShadowPaint, (, ), {, return]
[getShadowPaint, (, ), {, return, this, ., shadowPaint, ;, }, public, void, setShadowPaint, (, Paint, paint, ), {, if, (]
[getShadowPaint, (, ), {, return, this, ., shadowPaint, ;, }, public, void, setShadowPaint, (, Paint, paint, ), {, if, (]
[), {, return, this, ., shadowPaint, ;, }, public, void, setShadowPaint, (, Paint, paint, ), {, if, (, paint, ==]
[., shadowPaint, ;, }, public, void, setShadowPaint, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw]
[}, public, void, setShadowPaint, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }]
[(, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }]
[{, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., shadowPaint, =]
[(, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., shadowPaint, =, paint, ;]
[;, }, this, ., shadowPaint, =, paint, ;, fireChangeEvent, (, ), ;, }, public, double, getShadowXOffset, (, ), {, return]
[;, }, this, ., shadowPaint, =, paint, ;, fireChangeEvent, (, ), ;, }, public, double, getShadowXOffset, (, ), {, return]
[public, double, getShadowXOffset, (, ), {, return, this, ., shadowXOffset, ;, }, public, void, setShadowXOffset, (, double, offset, ), {]
[public, double, getShadowXOffset, (, ), {, return, this, ., shadowXOffset, ;, }, public, void, setShadowXOffset, (, double, offset, ), {]
[), {, return, this, ., shadowXOffset, ;, }, public, void, setShadowXOffset, (, double, offset, ), {, this, ., shadowXOffset, =]
[return, this, ., shadowXOffset, ;, }, public, void, setShadowXOffset, (, double, offset, ), {, this, ., shadowXOffset, =, offset, ;]
[), {, this, ., shadowXOffset, =, offset, ;, fireChangeEvent, (, ), ;, }, public, double, getShadowYOffset, (, ), {, return]
[), {, this, ., shadowXOffset, =, offset, ;, fireChangeEvent, (, ), ;, }, public, double, getShadowYOffset, (, ), {, return]
[public, double, getShadowYOffset, (, ), {, return, this, ., shadowYOffset, ;, }, public, void, setShadowYOffset, (, double, offset, ), {]
[public, double, getShadowYOffset, (, ), {, return, this, ., shadowYOffset, ;, }, public, void, setShadowYOffset, (, double, offset, ), {]
[), {, return, this, ., shadowYOffset, ;, }, public, void, setShadowYOffset, (, double, offset, ), {, this, ., shadowYOffset, =]
[return, this, ., shadowYOffset, ;, }, public, void, setShadowYOffset, (, double, offset, ), {, this, ., shadowYOffset, =, offset, ;]
[(, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, CategoryPlot, plot, ,, CategoryDataset, dataset, ,, PlotRenderingInfo, info, ), {, CategoryItemRendererState, state, =]
[(, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, CategoryPlot, plot, ,, CategoryDataset, dataset, ,, PlotRenderingInfo, info, ), {, CategoryItemRendererState, state, =]
[Rectangle2D, dataArea, ,, CategoryPlot, plot, ,, CategoryDataset, dataset, ,, PlotRenderingInfo, info, ), {, CategoryItemRendererState, state, =, super, ., initialise, (]
[,, CategoryPlot, plot, ,, CategoryDataset, dataset, ,, PlotRenderingInfo, info, ), {, CategoryItemRendererState, state, =, super, ., initialise, (, g2, ,]
[plot, ,, CategoryDataset, dataset, ,, PlotRenderingInfo, info, ), {, CategoryItemRendererState, state, =, super, ., initialise, (, g2, ,, dataArea, ,]
[CategoryDataset, dataset, ,, PlotRenderingInfo, info, ), {, CategoryItemRendererState, state, =, super, ., initialise, (, g2, ,, dataArea, ,, plot, ,]
[,, PlotRenderingInfo, info, ), {, CategoryItemRendererState, state, =, super, ., initialise, (, g2, ,, dataArea, ,, plot, ,, dataset, ,]
[), {, CategoryItemRendererState, state, =, super, ., initialise, (, g2, ,, dataArea, ,, plot, ,, dataset, ,, info, ), ;]
[CategoryItemRendererState, state, =, super, ., initialise, (, g2, ,, dataArea, ,, plot, ,, dataset, ,, info, ), ;, calculateBarWidth, (]
[=, super, ., initialise, (, g2, ,, dataArea, ,, plot, ,, dataset, ,, info, ), ;, calculateBarWidth, (, plot, ,]
[., initialise, (, g2, ,, dataArea, ,, plot, ,, dataset, ,, info, ), ;, calculateBarWidth, (, plot, ,, dataArea, ,]
[(, g2, ,, dataArea, ,, plot, ,, dataset, ,, info, ), ;, calculateBarWidth, (, plot, ,, dataArea, ,, dataset, ,]
[,, plot, ,, dataset, ,, info, ), ;, calculateBarWidth, (, plot, ,, dataArea, ,, dataset, ,, state, ), ;, return]
[protected, void, calculateBarWidth, (, CategoryPlot, plot, ,, Rectangle2D, dataArea, ,, CategoryDataset, dataset, ,, CategoryItemRendererState, state, ), {, CategoryAxis, domainAxis, =]
[calculateBarWidth, (, CategoryPlot, plot, ,, Rectangle2D, dataArea, ,, CategoryDataset, dataset, ,, CategoryItemRendererState, state, ), {, CategoryAxis, domainAxis, =, getDomainAxis, (]
[CategoryPlot, plot, ,, Rectangle2D, dataArea, ,, CategoryDataset, dataset, ,, CategoryItemRendererState, state, ), {, CategoryAxis, domainAxis, =, getDomainAxis, (, plot, ,]
[,, CategoryDataset, dataset, ,, CategoryItemRendererState, state, ), {, CategoryAxis, domainAxis, =, getDomainAxis, (, plot, ,, dataset, ), ;, if, (]
[,, CategoryDataset, dataset, ,, CategoryItemRendererState, state, ), {, CategoryAxis, domainAxis, =, getDomainAxis, (, plot, ,, dataset, ), ;, if, (]
[dataset, ,, CategoryItemRendererState, state, ), {, CategoryAxis, domainAxis, =, getDomainAxis, (, plot, ,, dataset, ), ;, if, (, dataset, !=]
[CategoryAxis, domainAxis, =, getDomainAxis, (, plot, ,, dataset, ), ;, if, (, dataset, !=, null, ), {, int, columns, =]
[CategoryAxis, domainAxis, =, getDomainAxis, (, plot, ,, dataset, ), ;, if, (, dataset, !=, null, ), {, int, columns, =]
[;, if, (, dataset, !=, null, ), {, int, columns, =, dataset, ., getColumnCount, (, ), ;, int, rows, =]
[;, if, (, dataset, !=, null, ), {, int, columns, =, dataset, ., getColumnCount, (, ), ;, int, rows, =]
[;, if, (, dataset, !=, null, ), {, int, columns, =, dataset, ., getColumnCount, (, ), ;, int, rows, =]
[;, if, (, dataset, !=, null, ), {, int, columns, =, dataset, ., getColumnCount, (, ), ;, int, rows, =]
[), {, int, columns, =, dataset, ., getColumnCount, (, ), ;, int, rows, =, state, ., getVisibleSeriesCount, (, ), >=]
[int, columns, =, dataset, ., getColumnCount, (, ), ;, int, rows, =, state, ., getVisibleSeriesCount, (, ), >=, 0, ?]
[int, columns, =, dataset, ., getColumnCount, (, ), ;, int, rows, =, state, ., getVisibleSeriesCount, (, ), >=, 0, ?]
[(, ), ;, int, rows, =, state, ., getVisibleSeriesCount, (, ), >=, 0, ?, state, ., getVisibleSeriesCount, (, ), :]
[(, ), ;, int, rows, =, state, ., getVisibleSeriesCount, (, ), >=, 0, ?, state, ., getVisibleSeriesCount, (, ), :]
[(, ), >=, 0, ?, state, ., getVisibleSeriesCount, (, ), :, dataset, ., getRowCount, (, ), ;, double, space, =]
[state, ., getVisibleSeriesCount, (, ), :, dataset, ., getRowCount, (, ), ;, double, space, =, 0.0, ;, PlotOrientation, orientation, =]
[state, ., getVisibleSeriesCount, (, ), :, dataset, ., getRowCount, (, ), ;, double, space, =, 0.0, ;, PlotOrientation, orientation, =]
[getRowCount, (, ), ;, double, space, =, 0.0, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (]
[getRowCount, (, ), ;, double, space, =, 0.0, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (]
[), ;, double, space, =, 0.0, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ==]
[), ;, double, space, =, 0.0, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ==]
[0.0, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {]
[PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space, =]
[PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space, =]
[(, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, if, (]
[(, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, if, (]
[==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==]
[==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==]
[{, space, =, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {]
[=, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, space, =]
[=, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, space, =]
[(, orientation, ==, PlotOrientation, ., VERTICAL, ), {, space, =, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =]
[(, orientation, ==, PlotOrientation, ., VERTICAL, ), {, space, =, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =]
[==, PlotOrientation, ., VERTICAL, ), {, space, =, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =, space, *]
[=, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =, space, *, getMaximumBarWidth, (, ), ;, double, categoryMargin, =]
[), ;, }, double, maxWidth, =, space, *, getMaximumBarWidth, (, ), ;, double, categoryMargin, =, 0.0, ;, double, currentItemMargin, =]
[maxWidth, =, space, *, getMaximumBarWidth, (, ), ;, double, categoryMargin, =, 0.0, ;, double, currentItemMargin, =, 0.0, ;, if, (]
[maxWidth, =, space, *, getMaximumBarWidth, (, ), ;, double, categoryMargin, =, 0.0, ;, double, currentItemMargin, =, 0.0, ;, if, (]
[space, *, getMaximumBarWidth, (, ), ;, double, categoryMargin, =, 0.0, ;, double, currentItemMargin, =, 0.0, ;, if, (, columns, >]
[(, ), ;, double, categoryMargin, =, 0.0, ;, double, currentItemMargin, =, 0.0, ;, if, (, columns, >, 1, ), {]
[;, double, categoryMargin, =, 0.0, ;, double, currentItemMargin, =, 0.0, ;, if, (, columns, >, 1, ), {, categoryMargin, =]
[;, double, categoryMargin, =, 0.0, ;, double, currentItemMargin, =, 0.0, ;, if, (, columns, >, 1, ), {, categoryMargin, =]
[0.0, ;, if, (, columns, >, 1, ), {, categoryMargin, =, domainAxis, ., getCategoryMargin, (, ), ;, }, if, (]
[0.0, ;, if, (, columns, >, 1, ), {, categoryMargin, =, domainAxis, ., getCategoryMargin, (, ), ;, }, if, (]
[if, (, columns, >, 1, ), {, categoryMargin, =, domainAxis, ., getCategoryMargin, (, ), ;, }, if, (, rows, >]
[>, 1, ), {, categoryMargin, =, domainAxis, ., getCategoryMargin, (, ), ;, }, if, (, rows, >, 1, ), {]
[), {, categoryMargin, =, domainAxis, ., getCategoryMargin, (, ), ;, }, if, (, rows, >, 1, ), {, currentItemMargin, =]
[), ;, }, if, (, rows, >, 1, ), {, currentItemMargin, =, getItemMargin, (, ), ;, }, double, used, =]
[), ;, }, if, (, rows, >, 1, ), {, currentItemMargin, =, getItemMargin, (, ), ;, }, double, used, =]
[}, if, (, rows, >, 1, ), {, currentItemMargin, =, getItemMargin, (, ), ;, }, double, used, =, space, *]
[if, (, rows, >, 1, ), {, currentItemMargin, =, getItemMargin, (, ), ;, }, double, used, =, space, *, (]
[if, (, rows, >, 1, ), {, currentItemMargin, =, getItemMargin, (, ), ;, }, double, used, =, space, *, (]
[if, (, rows, >, 1, ), {, currentItemMargin, =, getItemMargin, (, ), ;, }, double, used, =, space, *, (]
[if, (, rows, >, 1, ), {, currentItemMargin, =, getItemMargin, (, ), ;, }, double, used, =, space, *, (]
[if, (, rows, >, 1, ), {, currentItemMargin, =, getItemMargin, (, ), ;, }, double, used, =, space, *, (]
[rows, >, 1, ), {, currentItemMargin, =, getItemMargin, (, ), ;, }, double, used, =, space, *, (, 1, -]
[rows, >, 1, ), {, currentItemMargin, =, getItemMargin, (, ), ;, }, double, used, =, space, *, (, 1, -]
[=, getItemMargin, (, ), ;, }, double, used, =, space, *, (, 1, -, domainAxis, ., getLowerMargin, (, ), -]
[=, getItemMargin, (, ), ;, }, double, used, =, space, *, (, 1, -, domainAxis, ., getLowerMargin, (, ), -]
[double, used, =, space, *, (, 1, -, domainAxis, ., getLowerMargin, (, ), -, domainAxis, ., getUpperMargin, (, ), -]
[=, space, *, (, 1, -, domainAxis, ., getLowerMargin, (, ), -, domainAxis, ., getUpperMargin, (, ), -, categoryMargin, -]
[-, domainAxis, ., getLowerMargin, (, ), -, domainAxis, ., getUpperMargin, (, ), -, categoryMargin, -, currentItemMargin, ), ;, if, (]
[-, domainAxis, ., getLowerMargin, (, ), -, domainAxis, ., getUpperMargin, (, ), -, categoryMargin, -, currentItemMargin, ), ;, if, (]
[domainAxis, ., getLowerMargin, (, ), -, domainAxis, ., getUpperMargin, (, ), -, categoryMargin, -, currentItemMargin, ), ;, if, (, (]
[domainAxis, ., getLowerMargin, (, ), -, domainAxis, ., getUpperMargin, (, ), -, categoryMargin, -, currentItemMargin, ), ;, if, (, (]
[getLowerMargin, (, ), -, domainAxis, ., getUpperMargin, (, ), -, categoryMargin, -, currentItemMargin, ), ;, if, (, (, rows, *]
[-, domainAxis, ., getUpperMargin, (, ), -, categoryMargin, -, currentItemMargin, ), ;, if, (, (, rows, *, columns, ), >]
[getUpperMargin, (, ), -, categoryMargin, -, currentItemMargin, ), ;, if, (, (, rows, *, columns, ), >, 0, ), {]
[getUpperMargin, (, ), -, categoryMargin, -, currentItemMargin, ), ;, if, (, (, rows, *, columns, ), >, 0, ), {]
[categoryMargin, -, currentItemMargin, ), ;, if, (, (, rows, *, columns, ), >, 0, ), {, state, ., setBarWidth, (]
[categoryMargin, -, currentItemMargin, ), ;, if, (, (, rows, *, columns, ), >, 0, ), {, state, ., setBarWidth, (]
[;, if, (, (, rows, *, columns, ), >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (]
[;, if, (, (, rows, *, columns, ), >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (]
[(, (, rows, *, columns, ), >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (, used, /]
[(, rows, *, columns, ), >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (, used, /, (]
[(, rows, *, columns, ), >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (, used, /, (]
[*, columns, ), >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (, used, /, (, rows, *]
[>, 0, ), {, state, ., setBarWidth, (, Math, ., min, (, used, /, (, rows, *, columns, ), ,]
[(, Math, ., min, (, used, /, (, rows, *, columns, ), ,, maxWidth, ), ), ;, }, else, {]
[(, Math, ., min, (, used, /, (, rows, *, columns, ), ,, maxWidth, ), ), ;, }, else, {]
[(, used, /, (, rows, *, columns, ), ,, maxWidth, ), ), ;, }, else, {, state, ., setBarWidth, (]
[(, used, /, (, rows, *, columns, ), ,, maxWidth, ), ), ;, }, else, {, state, ., setBarWidth, (]
[rows, *, columns, ), ,, maxWidth, ), ), ;, }, else, {, state, ., setBarWidth, (, Math, ., min, (]
[columns, ), ,, maxWidth, ), ), ;, }, else, {, state, ., setBarWidth, (, Math, ., min, (, used, ,]
[,, Rectangle2D, dataArea, ,, CategoryAxis, domainAxis, ,, CategoryItemRendererState, state, ,, int, row, ,, int, column, ), {, double, space, =]
[CategoryAxis, domainAxis, ,, CategoryItemRendererState, state, ,, int, row, ,, int, column, ), {, double, space, =, 0.0, ;, if, (]
[CategoryAxis, domainAxis, ,, CategoryItemRendererState, state, ,, int, row, ,, int, column, ), {, double, space, =, 0.0, ;, if, (]
[,, CategoryItemRendererState, state, ,, int, row, ,, int, column, ), {, double, space, =, 0.0, ;, if, (, orientation, ==]
[,, CategoryItemRendererState, state, ,, int, row, ,, int, column, ), {, double, space, =, 0.0, ;, if, (, orientation, ==]
[row, ,, int, column, ), {, double, space, =, 0.0, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {]
[int, column, ), {, double, space, =, 0.0, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space, =]
[int, column, ), {, double, space, =, 0.0, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space, =]
[if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, {]
[orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, {, space, =]
[orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, {, space, =]
[., getHeight, (, ), ;, }, else, {, space, =, dataArea, ., getWidth, (, ), ;, }, double, barW0, =]
[., getHeight, (, ), ;, }, else, {, space, =, dataArea, ., getWidth, (, ), ;, }, double, barW0, =]
[;, }, else, {, space, =, dataArea, ., getWidth, (, ), ;, }, double, barW0, =, domainAxis, ., getCategoryStart, (]
[else, {, space, =, dataArea, ., getWidth, (, ), ;, }, double, barW0, =, domainAxis, ., getCategoryStart, (, column, ,]
[dataArea, ., getWidth, (, ), ;, }, double, barW0, =, domainAxis, ., getCategoryStart, (, column, ,, getColumnCount, (, ), ,]
[getWidth, (, ), ;, }, double, barW0, =, domainAxis, ., getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,]
[getWidth, (, ), ;, }, double, barW0, =, domainAxis, ., getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,]
[getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, int, seriesCount, =]
[getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, int, seriesCount, =]
[getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, int, seriesCount, =]
[getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, int, seriesCount, =]
[), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, int, seriesCount, =, state, ., getVisibleSeriesCount, (, ), >=]
[dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, int, seriesCount, =, state, ., getVisibleSeriesCount, (, ), >=, 0, ?]
[dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, int, seriesCount, =, state, ., getVisibleSeriesCount, (, ), >=, 0, ?]
[), ), ;, int, seriesCount, =, state, ., getVisibleSeriesCount, (, ), >=, 0, ?, state, ., getVisibleSeriesCount, (, ), :]
[., getVisibleSeriesCount, (, ), >=, 0, ?, state, ., getVisibleSeriesCount, (, ), :, getRowCount, (, ), ;, int, categoryCount, =]
[?, state, ., getVisibleSeriesCount, (, ), :, getRowCount, (, ), ;, int, categoryCount, =, getColumnCount, (, ), ;, if, (]
[?, state, ., getVisibleSeriesCount, (, ), :, getRowCount, (, ), ;, int, categoryCount, =, getColumnCount, (, ), ;, if, (]
[., getVisibleSeriesCount, (, ), :, getRowCount, (, ), ;, int, categoryCount, =, getColumnCount, (, ), ;, if, (, seriesCount, >]
[(, ), ;, int, categoryCount, =, getColumnCount, (, ), ;, if, (, seriesCount, >, 1, ), {, double, seriesGap, =]
[(, ), ;, int, categoryCount, =, getColumnCount, (, ), ;, if, (, seriesCount, >, 1, ), {, double, seriesGap, =]
[(, ), ;, int, categoryCount, =, getColumnCount, (, ), ;, if, (, seriesCount, >, 1, ), {, double, seriesGap, =]
[;, int, categoryCount, =, getColumnCount, (, ), ;, if, (, seriesCount, >, 1, ), {, double, seriesGap, =, space, *]
[getColumnCount, (, ), ;, if, (, seriesCount, >, 1, ), {, double, seriesGap, =, space, *, getItemMargin, (, ), /]
[(, ), ;, if, (, seriesCount, >, 1, ), {, double, seriesGap, =, space, *, getItemMargin, (, ), /, (]
[(, ), ;, if, (, seriesCount, >, 1, ), {, double, seriesGap, =, space, *, getItemMargin, (, ), /, (]
[;, if, (, seriesCount, >, 1, ), {, double, seriesGap, =, space, *, getItemMargin, (, ), /, (, categoryCount, *]
[if, (, seriesCount, >, 1, ), {, double, seriesGap, =, space, *, getItemMargin, (, ), /, (, categoryCount, *, (]
[if, (, seriesCount, >, 1, ), {, double, seriesGap, =, space, *, getItemMargin, (, ), /, (, categoryCount, *, (]
[seriesCount, >, 1, ), {, double, seriesGap, =, space, *, getItemMargin, (, ), /, (, categoryCount, *, (, seriesCount, -]
[=, space, *, getItemMargin, (, ), /, (, categoryCount, *, (, seriesCount, -, 1, ), ), ;, double, seriesW, =]
[*, getItemMargin, (, ), /, (, categoryCount, *, (, seriesCount, -, 1, ), ), ;, double, seriesW, =, calculateSeriesWidth, (]
[(, ), /, (, categoryCount, *, (, seriesCount, -, 1, ), ), ;, double, seriesW, =, calculateSeriesWidth, (, space, ,]
[/, (, categoryCount, *, (, seriesCount, -, 1, ), ), ;, double, seriesW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,]
[categoryCount, *, (, seriesCount, -, 1, ), ), ;, double, seriesW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,]
[seriesCount, -, 1, ), ), ;, double, seriesW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,, seriesCount, ), ;]
[1, ), ), ;, double, seriesW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,, seriesCount, ), ;, barW0, =]
[1, ), ), ;, double, seriesW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,, seriesCount, ), ;, barW0, =]
[1, ), ), ;, double, seriesW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,, seriesCount, ), ;, barW0, =]
[1, ), ), ;, double, seriesW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,, seriesCount, ), ;, barW0, =]
[), ;, double, seriesW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,, seriesCount, ), ;, barW0, =, barW0, +]
[), ;, double, seriesW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,, seriesCount, ), ;, barW0, =, barW0, +]
[double, seriesW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,, seriesCount, ), ;, barW0, =, barW0, +, row, *]
[seriesW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,, seriesCount, ), ;, barW0, =, barW0, +, row, *, (]
[seriesW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,, seriesCount, ), ;, barW0, =, barW0, +, row, *, (]
[calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,, seriesCount, ), ;, barW0, =, barW0, +, row, *, (, seriesW, +]
[,, domainAxis, ,, categoryCount, ,, seriesCount, ), ;, barW0, =, barW0, +, row, *, (, seriesW, +, seriesGap, ), +]
[domainAxis, ,, categoryCount, ,, seriesCount, ), ;, barW0, =, barW0, +, row, *, (, seriesW, +, seriesGap, ), +, (]
[domainAxis, ,, categoryCount, ,, seriesCount, ), ;, barW0, =, barW0, +, row, *, (, seriesW, +, seriesGap, ), +, (]
[categoryCount, ,, seriesCount, ), ;, barW0, =, barW0, +, row, *, (, seriesW, +, seriesGap, ), +, (, seriesW, /]
[), ;, barW0, =, barW0, +, row, *, (, seriesW, +, seriesGap, ), +, (, seriesW, /, 2.0, ), -]
[;, barW0, =, barW0, +, row, *, (, seriesW, +, seriesGap, ), +, (, seriesW, /, 2.0, ), -, (]
[;, barW0, =, barW0, +, row, *, (, seriesW, +, seriesGap, ), +, (, seriesW, /, 2.0, ), -, (]
[;, barW0, =, barW0, +, row, *, (, seriesW, +, seriesGap, ), +, (, seriesW, /, 2.0, ), -, (]
[*, (, seriesW, +, seriesGap, ), +, (, seriesW, /, 2.0, ), -, (, state, ., getBarWidth, (, ), /]
[+, (, seriesW, /, 2.0, ), -, (, state, ., getBarWidth, (, ), /, 2.0, ), ;, }, else, {]
[seriesW, /, 2.0, ), -, (, state, ., getBarWidth, (, ), /, 2.0, ), ;, }, else, {, barW0, =]
[seriesW, /, 2.0, ), -, (, state, ., getBarWidth, (, ), /, 2.0, ), ;, }, else, {, barW0, =]
[seriesW, /, 2.0, ), -, (, state, ., getBarWidth, (, ), /, 2.0, ), ;, }, else, {, barW0, =]
[-, (, state, ., getBarWidth, (, ), /, 2.0, ), ;, }, else, {, barW0, =, domainAxis, ., getCategoryMiddle, (]
[state, ., getBarWidth, (, ), /, 2.0, ), ;, }, else, {, barW0, =, domainAxis, ., getCategoryMiddle, (, column, ,]
[), /, 2.0, ), ;, }, else, {, barW0, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,]
[2.0, ), ;, }, else, {, barW0, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,]
[2.0, ), ;, }, else, {, barW0, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,]
[=, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), -]
[=, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), -]
[=, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), -]
[,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), -, state, ., getBarWidth, (, ), /]
[,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), -, state, ., getBarWidth, (, ), /, 2.0, ;, }, return]
[}, protected, double, [, ], calculateBarL0L1, (, double, value, ,, double, min, ,, double, max, ), {, double, barLow, =]
[}, protected, double, [, ], calculateBarL0L1, (, double, value, ,, double, min, ,, double, max, ), {, double, barLow, =]
[], calculateBarL0L1, (, double, value, ,, double, min, ,, double, max, ), {, double, barLow, =, Math, ., min, (]
[], calculateBarL0L1, (, double, value, ,, double, min, ,, double, max, ), {, double, barLow, =, Math, ., min, (]
[value, ,, double, min, ,, double, max, ), {, double, barLow, =, Math, ., min, (, this, ., base, ,]
[max, ), {, double, barLow, =, Math, ., min, (, this, ., base, ,, value, ), ;, double, barHigh, =]
[max, ), {, double, barLow, =, Math, ., min, (, this, ., base, ,, value, ), ;, double, barHigh, =]
[barLow, =, Math, ., min, (, this, ., base, ,, value, ), ;, double, barHigh, =, Math, ., max, (]
[barLow, =, Math, ., min, (, this, ., base, ,, value, ), ;, double, barHigh, =, Math, ., max, (]
[min, (, this, ., base, ,, value, ), ;, double, barHigh, =, Math, ., max, (, this, ., base, ,]
[,, value, ), ;, double, barHigh, =, Math, ., max, (, this, ., base, ,, value, ), ;, if, (]
[,, value, ), ;, double, barHigh, =, Math, ., max, (, this, ., base, ,, value, ), ;, if, (]
[), ;, double, barHigh, =, Math, ., max, (, this, ., base, ,, value, ), ;, if, (, barHigh, <]
[=, Math, ., max, (, this, ., base, ,, value, ), ;, if, (, barHigh, <, min, ), {, return]
[this, ., base, ,, value, ), ;, if, (, barHigh, <, min, ), {, return, null, ;, }, if, (]
[this, ., base, ,, value, ), ;, if, (, barHigh, <, min, ), {, return, null, ;, }, if, (]
[base, ,, value, ), ;, if, (, barHigh, <, min, ), {, return, null, ;, }, if, (, barLow, >]
[;, if, (, barHigh, <, min, ), {, return, null, ;, }, if, (, barLow, >, max, ), {, return]
[barHigh, <, min, ), {, return, null, ;, }, if, (, barLow, >, max, ), {, return, null, ;, }]
[min, ), {, return, null, ;, }, if, (, barLow, >, max, ), {, return, null, ;, }, barLow, =]
[min, ), {, return, null, ;, }, if, (, barLow, >, max, ), {, return, null, ;, }, barLow, =]
[null, ;, }, if, (, barLow, >, max, ), {, return, null, ;, }, barLow, =, Math, ., max, (]
[}, if, (, barLow, >, max, ), {, return, null, ;, }, barLow, =, Math, ., max, (, barLow, ,]
[barLow, >, max, ), {, return, null, ;, }, barLow, =, Math, ., max, (, barLow, ,, min, ), ;]
[max, ), {, return, null, ;, }, barLow, =, Math, ., max, (, barLow, ,, min, ), ;, barHigh, =]
[max, ), {, return, null, ;, }, barLow, =, Math, ., max, (, barLow, ,, min, ), ;, barHigh, =]
[null, ;, }, barLow, =, Math, ., max, (, barLow, ,, min, ), ;, barHigh, =, Math, ., min, (]
[}, barLow, =, Math, ., max, (, barLow, ,, min, ), ;, barHigh, =, Math, ., min, (, barHigh, ,]
[., max, (, barLow, ,, min, ), ;, barHigh, =, Math, ., min, (, barHigh, ,, max, ), ;, return]
[,, min, ), ;, barHigh, =, Math, ., min, (, barHigh, ,, max, ), ;, return, new, double, [, ]]
[min, ), ;, barHigh, =, Math, ., min, (, barHigh, ,, max, ), ;, return, new, double, [, ], {]
[;, barHigh, =, Math, ., min, (, barHigh, ,, max, ), ;, return, new, double, [, ], {, barLow, ,]
[{, barLow, ,, barHigh, }, ;, }, public, Range, findRangeBounds, (, CategoryDataset, dataset, ,, boolean, includeInterval, ), {, if, (]
[{, barLow, ,, barHigh, }, ;, }, public, Range, findRangeBounds, (, CategoryDataset, dataset, ,, boolean, includeInterval, ), {, if, (]
[,, barHigh, }, ;, }, public, Range, findRangeBounds, (, CategoryDataset, dataset, ,, boolean, includeInterval, ), {, if, (, dataset, ==]
[}, public, Range, findRangeBounds, (, CategoryDataset, dataset, ,, boolean, includeInterval, ), {, if, (, dataset, ==, null, ), {, return]
[dataset, ,, boolean, includeInterval, ), {, if, (, dataset, ==, null, ), {, return, null, ;, }, Range, result, =]
[dataset, ,, boolean, includeInterval, ), {, if, (, dataset, ==, null, ), {, return, null, ;, }, Range, result, =]
[), {, if, (, dataset, ==, null, ), {, return, null, ;, }, Range, result, =, super, ., findRangeBounds, (]
[if, (, dataset, ==, null, ), {, return, null, ;, }, Range, result, =, super, ., findRangeBounds, (, dataset, ,]
[), {, return, null, ;, }, Range, result, =, super, ., findRangeBounds, (, dataset, ,, includeInterval, ), ;, if, (]
[), {, return, null, ;, }, Range, result, =, super, ., findRangeBounds, (, dataset, ,, includeInterval, ), ;, if, (]
[return, null, ;, }, Range, result, =, super, ., findRangeBounds, (, dataset, ,, includeInterval, ), ;, if, (, result, !=]
[result, =, super, ., findRangeBounds, (, dataset, ,, includeInterval, ), ;, if, (, result, !=, null, ), {, if, (]
[result, =, super, ., findRangeBounds, (, dataset, ,, includeInterval, ), ;, if, (, result, !=, null, ), {, if, (]
[(, dataset, ,, includeInterval, ), ;, if, (, result, !=, null, ), {, if, (, this, ., includeBaseInRange, ), {]
[,, includeInterval, ), ;, if, (, result, !=, null, ), {, if, (, this, ., includeBaseInRange, ), {, result, =]
[,, includeInterval, ), ;, if, (, result, !=, null, ), {, if, (, this, ., includeBaseInRange, ), {, result, =]
[if, (, result, !=, null, ), {, if, (, this, ., includeBaseInRange, ), {, result, =, Range, ., expandToInclude, (]
[result, !=, null, ), {, if, (, this, ., includeBaseInRange, ), {, result, =, Range, ., expandToInclude, (, result, ,]
[result, !=, null, ), {, if, (, this, ., includeBaseInRange, ), {, result, =, Range, ., expandToInclude, (, result, ,]
[., includeBaseInRange, ), {, result, =, Range, ., expandToInclude, (, result, ,, this, ., base, ), ;, }, }, return]
[}, }, return, result, ;, }, public, LegendItem, getLegendItem, (, int, datasetIndex, ,, int, series, ), {, CategoryPlot, cp, =]
[public, LegendItem, getLegendItem, (, int, datasetIndex, ,, int, series, ), {, CategoryPlot, cp, =, getPlot, (, ), ;, if, (]
[public, LegendItem, getLegendItem, (, int, datasetIndex, ,, int, series, ), {, CategoryPlot, cp, =, getPlot, (, ), ;, if, (]
[getLegendItem, (, int, datasetIndex, ,, int, series, ), {, CategoryPlot, cp, =, getPlot, (, ), ;, if, (, cp, ==]
[,, int, series, ), {, CategoryPlot, cp, =, getPlot, (, ), ;, if, (, cp, ==, null, ), {, return]
[CategoryPlot, cp, =, getPlot, (, ), ;, if, (, cp, ==, null, ), {, return, null, ;, }, if, (]
[CategoryPlot, cp, =, getPlot, (, ), ;, if, (, cp, ==, null, ), {, return, null, ;, }, if, (]
[cp, =, getPlot, (, ), ;, if, (, cp, ==, null, ), {, return, null, ;, }, if, (, !]
[getPlot, (, ), ;, if, (, cp, ==, null, ), {, return, null, ;, }, if, (, !, isSeriesVisible, (]
[;, if, (, cp, ==, null, ), {, return, null, ;, }, if, (, !, isSeriesVisible, (, series, ), ||]
[if, (, cp, ==, null, ), {, return, null, ;, }, if, (, !, isSeriesVisible, (, series, ), ||, !]
[cp, ==, null, ), {, return, null, ;, }, if, (, !, isSeriesVisible, (, series, ), ||, !, isSeriesVisibleInLegend, (]
[return, null, ;, }, if, (, !, isSeriesVisible, (, series, ), ||, !, isSeriesVisibleInLegend, (, series, ), ), {, return]
[!, isSeriesVisible, (, series, ), ||, !, isSeriesVisibleInLegend, (, series, ), ), {, return, null, ;, }, CategoryDataset, dataset, =]
[!, isSeriesVisible, (, series, ), ||, !, isSeriesVisibleInLegend, (, series, ), ), {, return, null, ;, }, CategoryDataset, dataset, =]
[), ||, !, isSeriesVisibleInLegend, (, series, ), ), {, return, null, ;, }, CategoryDataset, dataset, =, cp, ., getDataset, (]
[), ), {, return, null, ;, }, CategoryDataset, dataset, =, cp, ., getDataset, (, datasetIndex, ), ;, String, label, =]
[), ), {, return, null, ;, }, CategoryDataset, dataset, =, cp, ., getDataset, (, datasetIndex, ), ;, String, label, =]
[}, CategoryDataset, dataset, =, cp, ., getDataset, (, datasetIndex, ), ;, String, label, =, getLegendItemLabelGenerator, (, ), ., generateLabel, (]
[dataset, =, cp, ., getDataset, (, datasetIndex, ), ;, String, label, =, getLegendItemLabelGenerator, (, ), ., generateLabel, (, dataset, ,]
[datasetIndex, ), ;, String, label, =, getLegendItemLabelGenerator, (, ), ., generateLabel, (, dataset, ,, series, ), ;, String, description, =]
[=, getLegendItemLabelGenerator, (, ), ., generateLabel, (, dataset, ,, series, ), ;, String, description, =, label, ;, String, toolTipText, =]
[., generateLabel, (, dataset, ,, series, ), ;, String, description, =, label, ;, String, toolTipText, =, null, ;, if, (]
[., generateLabel, (, dataset, ,, series, ), ;, String, description, =, label, ;, String, toolTipText, =, null, ;, if, (]
[,, series, ), ;, String, description, =, label, ;, String, toolTipText, =, null, ;, if, (, getLegendItemToolTipGenerator, (, ), !=]
[;, String, description, =, label, ;, String, toolTipText, =, null, ;, if, (, getLegendItemToolTipGenerator, (, ), !=, null, ), {]
[description, =, label, ;, String, toolTipText, =, null, ;, if, (, getLegendItemToolTipGenerator, (, ), !=, null, ), {, toolTipText, =]
[description, =, label, ;, String, toolTipText, =, null, ;, if, (, getLegendItemToolTipGenerator, (, ), !=, null, ), {, toolTipText, =]
[=, null, ;, if, (, getLegendItemToolTipGenerator, (, ), !=, null, ), {, toolTipText, =, getLegendItemToolTipGenerator, (, ), ., generateLabel, (]
[;, if, (, getLegendItemToolTipGenerator, (, ), !=, null, ), {, toolTipText, =, getLegendItemToolTipGenerator, (, ), ., generateLabel, (, dataset, ,]
[null, ), {, toolTipText, =, getLegendItemToolTipGenerator, (, ), ., generateLabel, (, dataset, ,, series, ), ;, }, String, urlText, =]
[=, getLegendItemToolTipGenerator, (, ), ., generateLabel, (, dataset, ,, series, ), ;, }, String, urlText, =, null, ;, if, (]
[=, getLegendItemToolTipGenerator, (, ), ., generateLabel, (, dataset, ,, series, ), ;, }, String, urlText, =, null, ;, if, (]
[., generateLabel, (, dataset, ,, series, ), ;, }, String, urlText, =, null, ;, if, (, getLegendItemURLGenerator, (, ), !=]
[dataset, ,, series, ), ;, }, String, urlText, =, null, ;, if, (, getLegendItemURLGenerator, (, ), !=, null, ), {]
[series, ), ;, }, String, urlText, =, null, ;, if, (, getLegendItemURLGenerator, (, ), !=, null, ), {, urlText, =]
[series, ), ;, }, String, urlText, =, null, ;, if, (, getLegendItemURLGenerator, (, ), !=, null, ), {, urlText, =]
[=, null, ;, if, (, getLegendItemURLGenerator, (, ), !=, null, ), {, urlText, =, getLegendItemURLGenerator, (, ), ., generateLabel, (]
[;, if, (, getLegendItemURLGenerator, (, ), !=, null, ), {, urlText, =, getLegendItemURLGenerator, (, ), ., generateLabel, (, dataset, ,]
[null, ), {, urlText, =, getLegendItemURLGenerator, (, ), ., generateLabel, (, dataset, ,, series, ), ;, }, Shape, shape, =]
[{, urlText, =, getLegendItemURLGenerator, (, ), ., generateLabel, (, dataset, ,, series, ), ;, }, Shape, shape, =, lookupLegendShape, (]
[., generateLabel, (, dataset, ,, series, ), ;, }, Shape, shape, =, lookupLegendShape, (, series, ), ;, Paint, paint, =]
[(, dataset, ,, series, ), ;, }, Shape, shape, =, lookupLegendShape, (, series, ), ;, Paint, paint, =, lookupSeriesPaint, (]
[}, Shape, shape, =, lookupLegendShape, (, series, ), ;, Paint, paint, =, lookupSeriesPaint, (, series, ), ;, Paint, outlinePaint, =]
[shape, =, lookupLegendShape, (, series, ), ;, Paint, paint, =, lookupSeriesPaint, (, series, ), ;, Paint, outlinePaint, =, lookupSeriesOutlinePaint, (]
[;, Paint, paint, =, lookupSeriesPaint, (, series, ), ;, Paint, outlinePaint, =, lookupSeriesOutlinePaint, (, series, ), ;, Stroke, outlineStroke, =]
[paint, =, lookupSeriesPaint, (, series, ), ;, Paint, outlinePaint, =, lookupSeriesOutlinePaint, (, series, ), ;, Stroke, outlineStroke, =, lookupSeriesOutlineStroke, (]
[;, Paint, outlinePaint, =, lookupSeriesOutlinePaint, (, series, ), ;, Stroke, outlineStroke, =, lookupSeriesOutlineStroke, (, series, ), ;, LegendItem, result, =]
[=, lookupSeriesOutlinePaint, (, series, ), ;, Stroke, outlineStroke, =, lookupSeriesOutlineStroke, (, series, ), ;, LegendItem, result, =, new, LegendItem, (]
[(, series, ), ;, Stroke, outlineStroke, =, lookupSeriesOutlineStroke, (, series, ), ;, LegendItem, result, =, new, LegendItem, (, label, ,]
[), ;, Stroke, outlineStroke, =, lookupSeriesOutlineStroke, (, series, ), ;, LegendItem, result, =, new, LegendItem, (, label, ,, description, ,]
[Stroke, outlineStroke, =, lookupSeriesOutlineStroke, (, series, ), ;, LegendItem, result, =, new, LegendItem, (, label, ,, description, ,, toolTipText, ,]
[=, lookupSeriesOutlineStroke, (, series, ), ;, LegendItem, result, =, new, LegendItem, (, label, ,, description, ,, toolTipText, ,, urlText, ,]
[(, series, ), ;, LegendItem, result, =, new, LegendItem, (, label, ,, description, ,, toolTipText, ,, urlText, ,, true, ,]
[), ;, LegendItem, result, =, new, LegendItem, (, label, ,, description, ,, toolTipText, ,, urlText, ,, true, ,, shape, ,]
[LegendItem, result, =, new, LegendItem, (, label, ,, description, ,, toolTipText, ,, urlText, ,, true, ,, shape, ,, true, ,]
[=, new, LegendItem, (, label, ,, description, ,, toolTipText, ,, urlText, ,, true, ,, shape, ,, true, ,, paint, ,]
[label, ,, description, ,, toolTipText, ,, urlText, ,, true, ,, shape, ,, true, ,, paint, ,, isDrawBarOutline, (, ), ,]
[description, ,, toolTipText, ,, urlText, ,, true, ,, shape, ,, true, ,, paint, ,, isDrawBarOutline, (, ), ,, outlinePaint, ,]
[toolTipText, ,, urlText, ,, true, ,, shape, ,, true, ,, paint, ,, isDrawBarOutline, (, ), ,, outlinePaint, ,, outlineStroke, ,]
[urlText, ,, true, ,, shape, ,, true, ,, paint, ,, isDrawBarOutline, (, ), ,, outlinePaint, ,, outlineStroke, ,, false, ,]
[,, paint, ,, isDrawBarOutline, (, ), ,, outlinePaint, ,, outlineStroke, ,, false, ,, new, Line2D, ., Float, (, ), ,]
[isDrawBarOutline, (, ), ,, outlinePaint, ,, outlineStroke, ,, false, ,, new, Line2D, ., Float, (, ), ,, new, BasicStroke, (]
[,, outlinePaint, ,, outlineStroke, ,, false, ,, new, Line2D, ., Float, (, ), ,, new, BasicStroke, (, 1.0f, ), ,]
[,, outlinePaint, ,, outlineStroke, ,, false, ,, new, Line2D, ., Float, (, ), ,, new, BasicStroke, (, 1.0f, ), ,]
[false, ,, new, Line2D, ., Float, (, ), ,, new, BasicStroke, (, 1.0f, ), ,, Color, ., black, ), ;]
[false, ,, new, Line2D, ., Float, (, ), ,, new, BasicStroke, (, 1.0f, ), ,, Color, ., black, ), ;]
[., Float, (, ), ,, new, BasicStroke, (, 1.0f, ), ,, Color, ., black, ), ;, result, ., setLabelFont, (]
[(, ), ,, new, BasicStroke, (, 1.0f, ), ,, Color, ., black, ), ;, result, ., setLabelFont, (, lookupLegendTextFont, (]
[), ,, Color, ., black, ), ;, result, ., setLabelFont, (, lookupLegendTextFont, (, series, ), ), ;, Paint, labelPaint, =]
[Color, ., black, ), ;, result, ., setLabelFont, (, lookupLegendTextFont, (, series, ), ), ;, Paint, labelPaint, =, lookupLegendTextPaint, (]
[result, ., setLabelFont, (, lookupLegendTextFont, (, series, ), ), ;, Paint, labelPaint, =, lookupLegendTextPaint, (, series, ), ;, if, (]
[result, ., setLabelFont, (, lookupLegendTextFont, (, series, ), ), ;, Paint, labelPaint, =, lookupLegendTextPaint, (, series, ), ;, if, (]
[setLabelFont, (, lookupLegendTextFont, (, series, ), ), ;, Paint, labelPaint, =, lookupLegendTextPaint, (, series, ), ;, if, (, labelPaint, !=]
[(, series, ), ), ;, Paint, labelPaint, =, lookupLegendTextPaint, (, series, ), ;, if, (, labelPaint, !=, null, ), {]
[(, series, ), ), ;, Paint, labelPaint, =, lookupLegendTextPaint, (, series, ), ;, if, (, labelPaint, !=, null, ), {]
[;, Paint, labelPaint, =, lookupLegendTextPaint, (, series, ), ;, if, (, labelPaint, !=, null, ), {, result, ., setLabelPaint, (]
[lookupLegendTextPaint, (, series, ), ;, if, (, labelPaint, !=, null, ), {, result, ., setLabelPaint, (, labelPaint, ), ;, }]
[lookupLegendTextPaint, (, series, ), ;, if, (, labelPaint, !=, null, ), {, result, ., setLabelPaint, (, labelPaint, ), ;, }]
[;, if, (, labelPaint, !=, null, ), {, result, ., setLabelPaint, (, labelPaint, ), ;, }, result, ., setDataset, (]
[labelPaint, !=, null, ), {, result, ., setLabelPaint, (, labelPaint, ), ;, }, result, ., setDataset, (, dataset, ), ;]
[labelPaint, !=, null, ), {, result, ., setLabelPaint, (, labelPaint, ), ;, }, result, ., setDataset, (, dataset, ), ;]
[{, result, ., setLabelPaint, (, labelPaint, ), ;, }, result, ., setDataset, (, dataset, ), ;, result, ., setDatasetIndex, (]
[setLabelPaint, (, labelPaint, ), ;, }, result, ., setDataset, (, dataset, ), ;, result, ., setDatasetIndex, (, datasetIndex, ), ;]
[setLabelPaint, (, labelPaint, ), ;, }, result, ., setDataset, (, dataset, ), ;, result, ., setDatasetIndex, (, datasetIndex, ), ;]
[;, }, result, ., setDataset, (, dataset, ), ;, result, ., setDatasetIndex, (, datasetIndex, ), ;, result, ., setSeriesKey, (]
[;, }, result, ., setDataset, (, dataset, ), ;, result, ., setDatasetIndex, (, datasetIndex, ), ;, result, ., setSeriesKey, (]
[setDataset, (, dataset, ), ;, result, ., setDatasetIndex, (, datasetIndex, ), ;, result, ., setSeriesKey, (, dataset, ., getRowKey, (]
[;, result, ., setDatasetIndex, (, datasetIndex, ), ;, result, ., setSeriesKey, (, dataset, ., getRowKey, (, series, ), ), ;]
[;, result, ., setDatasetIndex, (, datasetIndex, ), ;, result, ., setSeriesKey, (, dataset, ., getRowKey, (, series, ), ), ;]
[(, datasetIndex, ), ;, result, ., setSeriesKey, (, dataset, ., getRowKey, (, series, ), ), ;, result, ., setSeriesIndex, (]
[., setSeriesKey, (, dataset, ., getRowKey, (, series, ), ), ;, result, ., setSeriesIndex, (, series, ), ;, if, (]
[., setSeriesKey, (, dataset, ., getRowKey, (, series, ), ), ;, result, ., setSeriesIndex, (, series, ), ;, if, (]
[., setSeriesKey, (, dataset, ., getRowKey, (, series, ), ), ;, result, ., setSeriesIndex, (, series, ), ;, if, (]
[., getRowKey, (, series, ), ), ;, result, ., setSeriesIndex, (, series, ), ;, if, (, this, ., gradientPaintTransformer, !=]
[series, ), ), ;, result, ., setSeriesIndex, (, series, ), ;, if, (, this, ., gradientPaintTransformer, !=, null, ), {]
[series, ), ), ;, result, ., setSeriesIndex, (, series, ), ;, if, (, this, ., gradientPaintTransformer, !=, null, ), {]
[result, ., setSeriesIndex, (, series, ), ;, if, (, this, ., gradientPaintTransformer, !=, null, ), {, result, ., setFillPaintTransformer, (]
[result, ., setSeriesIndex, (, series, ), ;, if, (, this, ., gradientPaintTransformer, !=, null, ), {, result, ., setFillPaintTransformer, (]
[if, (, this, ., gradientPaintTransformer, !=, null, ), {, result, ., setFillPaintTransformer, (, this, ., gradientPaintTransformer, ), ;, }, return]
[,, CategoryDataset, dataset, ,, int, row, ,, int, column, ,, boolean, selected, ,, int, pass, ), {, int, visibleRow, =]
[,, CategoryDataset, dataset, ,, int, row, ,, int, column, ,, boolean, selected, ,, int, pass, ), {, int, visibleRow, =]
[int, row, ,, int, column, ,, boolean, selected, ,, int, pass, ), {, int, visibleRow, =, state, ., getVisibleSeriesIndex, (]
[,, boolean, selected, ,, int, pass, ), {, int, visibleRow, =, state, ., getVisibleSeriesIndex, (, row, ), ;, if, (]
[,, boolean, selected, ,, int, pass, ), {, int, visibleRow, =, state, ., getVisibleSeriesIndex, (, row, ), ;, if, (]
[selected, ,, int, pass, ), {, int, visibleRow, =, state, ., getVisibleSeriesIndex, (, row, ), ;, if, (, visibleRow, <]
[state, ., getVisibleSeriesIndex, (, row, ), ;, if, (, visibleRow, <, 0, ), {, return, ;, }, Number, dataValue, =]
[state, ., getVisibleSeriesIndex, (, row, ), ;, if, (, visibleRow, <, 0, ), {, return, ;, }, Number, dataValue, =]
[row, ), ;, if, (, visibleRow, <, 0, ), {, return, ;, }, Number, dataValue, =, dataset, ., getValue, (]
[;, if, (, visibleRow, <, 0, ), {, return, ;, }, Number, dataValue, =, dataset, ., getValue, (, row, ,]
[0, ), {, return, ;, }, Number, dataValue, =, dataset, ., getValue, (, row, ,, column, ), ;, if, (]
[0, ), {, return, ;, }, Number, dataValue, =, dataset, ., getValue, (, row, ,, column, ), ;, if, (]
[{, return, ;, }, Number, dataValue, =, dataset, ., getValue, (, row, ,, column, ), ;, if, (, dataValue, ==]
[(, row, ,, column, ), ;, if, (, dataValue, ==, null, ), {, return, ;, }, final, double, value, =]
[(, row, ,, column, ), ;, if, (, dataValue, ==, null, ), {, return, ;, }, final, double, value, =]
[==, null, ), {, return, ;, }, final, double, value, =, dataValue, ., doubleValue, (, ), ;, PlotOrientation, orientation, =]
[==, null, ), {, return, ;, }, final, double, value, =, dataValue, ., doubleValue, (, ), ;, PlotOrientation, orientation, =]
[value, =, dataValue, ., doubleValue, (, ), ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, barW0, =]
[dataValue, ., doubleValue, (, ), ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, barW0, =, calculateBarW0, (]
[doubleValue, (, ), ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, barW0, =, calculateBarW0, (, plot, ,]
[), ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, barW0, =, calculateBarW0, (, plot, ,, orientation, ,]
[PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, barW0, =, calculateBarW0, (, plot, ,, orientation, ,, dataArea, ,]
[=, plot, ., getOrientation, (, ), ;, double, barW0, =, calculateBarW0, (, plot, ,, orientation, ,, dataArea, ,, domainAxis, ,]
[., getOrientation, (, ), ;, double, barW0, =, calculateBarW0, (, plot, ,, orientation, ,, dataArea, ,, domainAxis, ,, state, ,]
[(, ), ;, double, barW0, =, calculateBarW0, (, plot, ,, orientation, ,, dataArea, ,, domainAxis, ,, state, ,, visibleRow, ,]
[plot, ,, orientation, ,, dataArea, ,, domainAxis, ,, state, ,, visibleRow, ,, column, ), ;, double, [, ], barL0L1, =]
[orientation, ,, dataArea, ,, domainAxis, ,, state, ,, visibleRow, ,, column, ), ;, double, [, ], barL0L1, =, calculateBarL0L1, (]
[dataArea, ,, domainAxis, ,, state, ,, visibleRow, ,, column, ), ;, double, [, ], barL0L1, =, calculateBarL0L1, (, value, ,]
[dataArea, ,, domainAxis, ,, state, ,, visibleRow, ,, column, ), ;, double, [, ], barL0L1, =, calculateBarL0L1, (, value, ,]
[visibleRow, ,, column, ), ;, double, [, ], barL0L1, =, calculateBarL0L1, (, value, ,, rangeAxis, ., getLowerBound, (, ), ,]
[visibleRow, ,, column, ), ;, double, [, ], barL0L1, =, calculateBarL0L1, (, value, ,, rangeAxis, ., getLowerBound, (, ), ,]
[=, calculateBarL0L1, (, value, ,, rangeAxis, ., getLowerBound, (, ), ,, rangeAxis, ., getUpperBound, (, ), ), ;, if, (]
[=, calculateBarL0L1, (, value, ,, rangeAxis, ., getLowerBound, (, ), ,, rangeAxis, ., getUpperBound, (, ), ), ;, if, (]
[(, value, ,, rangeAxis, ., getLowerBound, (, ), ,, rangeAxis, ., getUpperBound, (, ), ), ;, if, (, barL0L1, ==]
[rangeAxis, ., getUpperBound, (, ), ), ;, if, (, barL0L1, ==, null, ), {, return, ;, }, RectangleEdge, edge, =]
[rangeAxis, ., getUpperBound, (, ), ), ;, if, (, barL0L1, ==, null, ), {, return, ;, }, RectangleEdge, edge, =]
[barL0L1, ==, null, ), {, return, ;, }, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double, transL0, =]
[barL0L1, ==, null, ), {, return, ;, }, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double, transL0, =]
[{, return, ;, }, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double, transL0, =, rangeAxis, ., valueToJava2D, (]
[{, return, ;, }, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double, transL0, =, rangeAxis, ., valueToJava2D, (]
[;, }, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double, transL0, =, rangeAxis, ., valueToJava2D, (, barL0L1, []
[edge, =, plot, ., getRangeAxisEdge, (, ), ;, double, transL0, =, rangeAxis, ., valueToJava2D, (, barL0L1, [, 0, ], ,]
[plot, ., getRangeAxisEdge, (, ), ;, double, transL0, =, rangeAxis, ., valueToJava2D, (, barL0L1, [, 0, ], ,, dataArea, ,]
[double, transL0, =, rangeAxis, ., valueToJava2D, (, barL0L1, [, 0, ], ,, dataArea, ,, edge, ), ;, double, transL1, =]
[double, transL0, =, rangeAxis, ., valueToJava2D, (, barL0L1, [, 0, ], ,, dataArea, ,, edge, ), ;, double, transL1, =]
[., valueToJava2D, (, barL0L1, [, 0, ], ,, dataArea, ,, edge, ), ;, double, transL1, =, rangeAxis, ., valueToJava2D, (]
[., valueToJava2D, (, barL0L1, [, 0, ], ,, dataArea, ,, edge, ), ;, double, transL1, =, rangeAxis, ., valueToJava2D, (]
[(, barL0L1, [, 0, ], ,, dataArea, ,, edge, ), ;, double, transL1, =, rangeAxis, ., valueToJava2D, (, barL0L1, []
[0, ], ,, dataArea, ,, edge, ), ;, double, transL1, =, rangeAxis, ., valueToJava2D, (, barL0L1, [, 1, ], ,]
[,, dataArea, ,, edge, ), ;, double, transL1, =, rangeAxis, ., valueToJava2D, (, barL0L1, [, 1, ], ,, dataArea, ,]
[double, transL1, =, rangeAxis, ., valueToJava2D, (, barL0L1, [, 1, ], ,, dataArea, ,, edge, ), ;, boolean, positive, =]
[transL1, =, rangeAxis, ., valueToJava2D, (, barL0L1, [, 1, ], ,, dataArea, ,, edge, ), ;, boolean, positive, =, (]
[transL1, =, rangeAxis, ., valueToJava2D, (, barL0L1, [, 1, ], ,, dataArea, ,, edge, ), ;, boolean, positive, =, (]
[rangeAxis, ., valueToJava2D, (, barL0L1, [, 1, ], ,, dataArea, ,, edge, ), ;, boolean, positive, =, (, value, >=]
[rangeAxis, ., valueToJava2D, (, barL0L1, [, 1, ], ,, dataArea, ,, edge, ), ;, boolean, positive, =, (, value, >=]
[,, dataArea, ,, edge, ), ;, boolean, positive, =, (, value, >=, this, ., base, ), ;, boolean, inverted, =]
[,, dataArea, ,, edge, ), ;, boolean, positive, =, (, value, >=, this, ., base, ), ;, boolean, inverted, =]
[(, value, >=, this, ., base, ), ;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;, double, barL0, =]
[(, value, >=, this, ., base, ), ;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;, double, barL0, =]
[., base, ), ;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;, double, barL0, =, Math, ., min, (]
[), ;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;, double, barL0, =, Math, ., min, (, transL0, ,]
[., isInverted, (, ), ;, double, barL0, =, Math, ., min, (, transL0, ,, transL1, ), ;, double, barLength, =]
[., isInverted, (, ), ;, double, barL0, =, Math, ., min, (, transL0, ,, transL1, ), ;, double, barLength, =]
[;, double, barL0, =, Math, ., min, (, transL0, ,, transL1, ), ;, double, barLength, =, Math, ., abs, (]
[;, double, barL0, =, Math, ., min, (, transL0, ,, transL1, ), ;, double, barLength, =, Math, ., abs, (]
[barL0, =, Math, ., min, (, transL0, ,, transL1, ), ;, double, barLength, =, Math, ., abs, (, transL1, -]
[transL0, ,, transL1, ), ;, double, barLength, =, Math, ., abs, (, transL1, -, transL0, ), ;, double, barLengthAdj, =]
[;, double, barLength, =, Math, ., abs, (, transL1, -, transL0, ), ;, double, barLengthAdj, =, 0.0, ;, if, (]
[;, double, barLength, =, Math, ., abs, (, transL1, -, transL0, ), ;, double, barLengthAdj, =, 0.0, ;, if, (]
[;, double, barLength, =, Math, ., abs, (, transL1, -, transL0, ), ;, double, barLengthAdj, =, 0.0, ;, if, (]
[barLength, =, Math, ., abs, (, transL1, -, transL0, ), ;, double, barLengthAdj, =, 0.0, ;, if, (, barLength, >]
[Math, ., abs, (, transL1, -, transL0, ), ;, double, barLengthAdj, =, 0.0, ;, if, (, barLength, >, 0.0, &&]
[Math, ., abs, (, transL1, -, transL0, ), ;, double, barLengthAdj, =, 0.0, ;, if, (, barLength, >, 0.0, &&]
[abs, (, transL1, -, transL0, ), ;, double, barLengthAdj, =, 0.0, ;, if, (, barLength, >, 0.0, &&, barLength, <]
[), ;, double, barLengthAdj, =, 0.0, ;, if, (, barLength, >, 0.0, &&, barLength, <, getMinimumBarLength, (, ), ), {]
[double, barLengthAdj, =, 0.0, ;, if, (, barLength, >, 0.0, &&, barLength, <, getMinimumBarLength, (, ), ), {, barLengthAdj, =]
[double, barLengthAdj, =, 0.0, ;, if, (, barLength, >, 0.0, &&, barLength, <, getMinimumBarLength, (, ), ), {, barLengthAdj, =]
[;, if, (, barLength, >, 0.0, &&, barLength, <, getMinimumBarLength, (, ), ), {, barLengthAdj, =, getMinimumBarLength, (, ), -]
[&&, barLength, <, getMinimumBarLength, (, ), ), {, barLengthAdj, =, getMinimumBarLength, (, ), -, barLength, ;, }, double, barL0Adj, =]
[{, barLengthAdj, =, getMinimumBarLength, (, ), -, barLength, ;, }, double, barL0Adj, =, 0.0, ;, RectangleEdge, barBase, ;, if, (]
[{, barLengthAdj, =, getMinimumBarLength, (, ), -, barLength, ;, }, double, barL0Adj, =, 0.0, ;, RectangleEdge, barBase, ;, if, (]
[=, getMinimumBarLength, (, ), -, barLength, ;, }, double, barL0Adj, =, 0.0, ;, RectangleEdge, barBase, ;, if, (, orientation, ==]
[=, getMinimumBarLength, (, ), -, barLength, ;, }, double, barL0Adj, =, 0.0, ;, RectangleEdge, barBase, ;, if, (, orientation, ==]
[}, double, barL0Adj, =, 0.0, ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (]
[}, double, barL0Adj, =, 0.0, ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (]
[}, double, barL0Adj, =, 0.0, ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (]
[barL0Adj, =, 0.0, ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&]
[0.0, ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||]
[0.0, ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||]
[;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !]
[barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !, positive, &&]
[;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !, positive, &&, !]
[orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !, positive, &&, !, inverted, ), {]
[PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !, positive, &&, !, inverted, ), {, barL0Adj, =]
[HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !, positive, &&, !, inverted, ), {, barL0Adj, =, barLengthAdj, ;]
[{, if, (, positive, &&, inverted, ||, !, positive, &&, !, inverted, ), {, barL0Adj, =, barLengthAdj, ;, barBase, =]
[{, if, (, positive, &&, inverted, ||, !, positive, &&, !, inverted, ), {, barL0Adj, =, barLengthAdj, ;, barBase, =]
[!, positive, &&, !, inverted, ), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {]
[&&, !, inverted, ), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =]
[&&, !, inverted, ), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =]
[=, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (]
[=, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (]
[=, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (]
[., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&]
[RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&, !]
[}, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&, !, inverted, ||]
[}, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&, !, inverted, ||]
[else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&, !, inverted, ||, !]
[barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&, !, inverted, ||, !, positive, &&]
[., LEFT, ;, }, }, else, {, if, (, positive, &&, !, inverted, ||, !, positive, &&, inverted, ), {]
[;, }, }, else, {, if, (, positive, &&, !, inverted, ||, !, positive, &&, inverted, ), {, barL0Adj, =]
[}, else, {, if, (, positive, &&, !, inverted, ||, !, positive, &&, inverted, ), {, barL0Adj, =, barLengthAdj, ;]
[{, if, (, positive, &&, !, inverted, ||, !, positive, &&, inverted, ), {, barL0Adj, =, barLengthAdj, ;, barBase, =]
[{, if, (, positive, &&, !, inverted, ||, !, positive, &&, inverted, ), {, barL0Adj, =, barLengthAdj, ;, barBase, =]
[||, !, positive, &&, inverted, ), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {]
[positive, &&, inverted, ), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =]
[positive, &&, inverted, ), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =]
[barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, Rectangle2D, bar, =]
[BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, Rectangle2D, bar, =, null, ;, if, (]
[BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, Rectangle2D, bar, =, null, ;, if, (]
[}, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, Rectangle2D, bar, =, null, ;, if, (, orientation, ==]
[}, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, Rectangle2D, bar, =, null, ;, if, (, orientation, ==]
[RectangleEdge, ., TOP, ;, }, }, Rectangle2D, bar, =, null, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {]
[TOP, ;, }, }, Rectangle2D, bar, =, null, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, bar, =]
[bar, =, null, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (]
[bar, =, null, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (]
[null, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (, barL0, -]
[if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (, barL0, -, barL0Adj, ,]
[orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (, barL0, -, barL0Adj, ,, barW0, ,]
[orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (, barL0, -, barL0Adj, ,, barW0, ,]
[PlotOrientation, ., HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (, barL0, -, barL0Adj, ,, barW0, ,, barLength, +]
[HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (, barL0, -, barL0Adj, ,, barW0, ,, barLength, +, barLengthAdj, ,]
[HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (, barL0, -, barL0Adj, ,, barW0, ,, barLength, +, barLengthAdj, ,]
[barL0, -, barL0Adj, ,, barW0, ,, barLength, +, barLengthAdj, ,, state, ., getBarWidth, (, ), ), ;, }, else, {]
[barL0Adj, ,, barW0, ,, barLength, +, barLengthAdj, ,, state, ., getBarWidth, (, ), ), ;, }, else, {, bar, =]
[+, barLengthAdj, ,, state, ., getBarWidth, (, ), ), ;, }, else, {, bar, =, new, Rectangle2D, ., Double, (]
[,, state, ., getBarWidth, (, ), ), ;, }, else, {, bar, =, new, Rectangle2D, ., Double, (, barW0, ,]
[,, state, ., getBarWidth, (, ), ), ;, }, else, {, bar, =, new, Rectangle2D, ., Double, (, barW0, ,]
[., getBarWidth, (, ), ), ;, }, else, {, bar, =, new, Rectangle2D, ., Double, (, barW0, ,, barL0, -]
[(, ), ), ;, }, else, {, bar, =, new, Rectangle2D, ., Double, (, barW0, ,, barL0, -, barL0Adj, ,]
[(, ), ), ;, }, else, {, bar, =, new, Rectangle2D, ., Double, (, barW0, ,, barL0, -, barL0Adj, ,]
[{, bar, =, new, Rectangle2D, ., Double, (, barW0, ,, barL0, -, barL0Adj, ,, state, ., getBarWidth, (, ), ,]
[{, bar, =, new, Rectangle2D, ., Double, (, barW0, ,, barL0, -, barL0Adj, ,, state, ., getBarWidth, (, ), ,]
[=, new, Rectangle2D, ., Double, (, barW0, ,, barL0, -, barL0Adj, ,, state, ., getBarWidth, (, ), ,, barLength, +]
[barW0, ,, barL0, -, barL0Adj, ,, state, ., getBarWidth, (, ), ,, barLength, +, barLengthAdj, ), ;, }, if, (]
[,, state, ., getBarWidth, (, ), ,, barLength, +, barLengthAdj, ), ;, }, if, (, getShadowsVisible, (, ), ), {]
[,, state, ., getBarWidth, (, ), ,, barLength, +, barLengthAdj, ), ;, }, if, (, getShadowsVisible, (, ), ), {]
[,, state, ., getBarWidth, (, ), ,, barLength, +, barLengthAdj, ), ;, }, if, (, getShadowsVisible, (, ), ), {]
[,, barLength, +, barLengthAdj, ), ;, }, if, (, getShadowsVisible, (, ), ), {, this, ., barPainter, ., paintBarShadow, (]
[+, barLengthAdj, ), ;, }, if, (, getShadowsVisible, (, ), ), {, this, ., barPainter, ., paintBarShadow, (, g2, ,]
[), ;, }, if, (, getShadowsVisible, (, ), ), {, this, ., barPainter, ., paintBarShadow, (, g2, ,, this, ,]
[}, if, (, getShadowsVisible, (, ), ), {, this, ., barPainter, ., paintBarShadow, (, g2, ,, this, ,, row, ,]
[(, getShadowsVisible, (, ), ), {, this, ., barPainter, ., paintBarShadow, (, g2, ,, this, ,, row, ,, column, ,]
[(, ), ), {, this, ., barPainter, ., paintBarShadow, (, g2, ,, this, ,, row, ,, column, ,, selected, ,]
[), {, this, ., barPainter, ., paintBarShadow, (, g2, ,, this, ,, row, ,, column, ,, selected, ,, bar, ,]
[this, ., barPainter, ., paintBarShadow, (, g2, ,, this, ,, row, ,, column, ,, selected, ,, bar, ,, barBase, ,]
[paintBarShadow, (, g2, ,, this, ,, row, ,, column, ,, selected, ,, bar, ,, barBase, ,, true, ), ;, }]
[paintBarShadow, (, g2, ,, this, ,, row, ,, column, ,, selected, ,, bar, ,, barBase, ,, true, ), ;, }]
[paintBarShadow, (, g2, ,, this, ,, row, ,, column, ,, selected, ,, bar, ,, barBase, ,, true, ), ;, }]
[row, ,, column, ,, selected, ,, bar, ,, barBase, ,, true, ), ;, }, this, ., barPainter, ., paintBar, (]
[column, ,, selected, ,, bar, ,, barBase, ,, true, ), ;, }, this, ., barPainter, ., paintBar, (, g2, ,]
[selected, ,, bar, ,, barBase, ,, true, ), ;, }, this, ., barPainter, ., paintBar, (, g2, ,, this, ,]
[bar, ,, barBase, ,, true, ), ;, }, this, ., barPainter, ., paintBar, (, g2, ,, this, ,, row, ,]
[barBase, ,, true, ), ;, }, this, ., barPainter, ., paintBar, (, g2, ,, this, ,, row, ,, column, ,]
[true, ), ;, }, this, ., barPainter, ., paintBar, (, g2, ,, this, ,, row, ,, column, ,, selected, ,]
[;, }, this, ., barPainter, ., paintBar, (, g2, ,, this, ,, row, ,, column, ,, selected, ,, bar, ,]
[paintBar, (, g2, ,, this, ,, row, ,, column, ,, selected, ,, bar, ,, barBase, ), ;, CategoryItemLabelGenerator, generator, =]
[g2, ,, this, ,, row, ,, column, ,, selected, ,, bar, ,, barBase, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (]
[this, ,, row, ,, column, ,, selected, ,, bar, ,, barBase, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,]
[row, ,, column, ,, selected, ,, bar, ,, barBase, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,]
[,, bar, ,, barBase, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (]
[,, bar, ,, barBase, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (]
[,, bar, ,, barBase, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (]
[,, barBase, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (, generator, !=]
[), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (, generator, !=, null, &&]
[CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (]
[=, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,]
[(, row, ,, column, ,, selected, ), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,]
[,, selected, ), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {]
[), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (]
[if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,]
[generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,]
[null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,]
[isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,]
[row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,]
[column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,]
[selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,]
[), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,]
[{, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,, (]
[{, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,, (]
[(, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,, (, value, <]
[,, column, ,, selected, ,, generator, ,, bar, ,, (, value, <, 0.0, ), ), ;, }, int, datasetIndex, =]
[,, column, ,, selected, ,, generator, ,, bar, ,, (, value, <, 0.0, ), ), ;, }, int, datasetIndex, =]
[,, generator, ,, bar, ,, (, value, <, 0.0, ), ), ;, }, int, datasetIndex, =, plot, ., indexOf, (]
[bar, ,, (, value, <, 0.0, ), ), ;, }, int, datasetIndex, =, plot, ., indexOf, (, dataset, ), ;]
[(, value, <, 0.0, ), ), ;, }, int, datasetIndex, =, plot, ., indexOf, (, dataset, ), ;, updateCrosshairValues, (]
[(, value, <, 0.0, ), ), ;, }, int, datasetIndex, =, plot, ., indexOf, (, dataset, ), ;, updateCrosshairValues, (]
[;, }, int, datasetIndex, =, plot, ., indexOf, (, dataset, ), ;, updateCrosshairValues, (, state, ., getCrosshairState, (, ), ,]
[;, }, int, datasetIndex, =, plot, ., indexOf, (, dataset, ), ;, updateCrosshairValues, (, state, ., getCrosshairState, (, ), ,]
[=, plot, ., indexOf, (, dataset, ), ;, updateCrosshairValues, (, state, ., getCrosshairState, (, ), ,, dataset, ., getRowKey, (]
[indexOf, (, dataset, ), ;, updateCrosshairValues, (, state, ., getCrosshairState, (, ), ,, dataset, ., getRowKey, (, row, ), ,]
[indexOf, (, dataset, ), ;, updateCrosshairValues, (, state, ., getCrosshairState, (, ), ,, dataset, ., getRowKey, (, row, ), ,]
[;, updateCrosshairValues, (, state, ., getCrosshairState, (, ), ,, dataset, ., getRowKey, (, row, ), ,, dataset, ., getColumnKey, (]
[state, ., getCrosshairState, (, ), ,, dataset, ., getRowKey, (, row, ), ,, dataset, ., getColumnKey, (, column, ), ,]
[getCrosshairState, (, ), ,, dataset, ., getRowKey, (, row, ), ,, dataset, ., getColumnKey, (, column, ), ,, value, ,]
[), ,, dataset, ., getRowKey, (, row, ), ,, dataset, ., getColumnKey, (, column, ), ,, value, ,, datasetIndex, ,]
[dataset, ., getRowKey, (, row, ), ,, dataset, ., getColumnKey, (, column, ), ,, value, ,, datasetIndex, ,, barW0, ,]
[getRowKey, (, row, ), ,, dataset, ., getColumnKey, (, column, ), ,, value, ,, datasetIndex, ,, barW0, ,, barL0, ,]
[., getColumnKey, (, column, ), ,, value, ,, datasetIndex, ,, barW0, ,, barL0, ,, orientation, ), ;, EntityCollection, entities, =]
[., getColumnKey, (, column, ), ,, value, ,, datasetIndex, ,, barW0, ,, barL0, ,, orientation, ), ;, EntityCollection, entities, =]
[datasetIndex, ,, barW0, ,, barL0, ,, orientation, ), ;, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (]
[datasetIndex, ,, barW0, ,, barL0, ,, orientation, ), ;, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (]
[barW0, ,, barL0, ,, orientation, ), ;, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=]
[,, orientation, ), ;, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {]
[), ;, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (]
[EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,]
[=, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, bar, ,]
[., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,]
[(, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,, row, ,]
[;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,, row, ,, column, ,]
[protected, double, calculateSeriesWidth, (, double, space, ,, CategoryAxis, axis, ,, int, categories, ,, int, series, ), {, double, factor, =]
[protected, double, calculateSeriesWidth, (, double, space, ,, CategoryAxis, axis, ,, int, categories, ,, int, series, ), {, double, factor, =]
[protected, double, calculateSeriesWidth, (, double, space, ,, CategoryAxis, axis, ,, int, categories, ,, int, series, ), {, double, factor, =]
[protected, double, calculateSeriesWidth, (, double, space, ,, CategoryAxis, axis, ,, int, categories, ,, int, series, ), {, double, factor, =]
[calculateSeriesWidth, (, double, space, ,, CategoryAxis, axis, ,, int, categories, ,, int, series, ), {, double, factor, =, 1.0, -]
[,, CategoryAxis, axis, ,, int, categories, ,, int, series, ), {, double, factor, =, 1.0, -, getItemMargin, (, ), -]
[,, CategoryAxis, axis, ,, int, categories, ,, int, series, ), {, double, factor, =, 1.0, -, getItemMargin, (, ), -]
[,, int, series, ), {, double, factor, =, 1.0, -, getItemMargin, (, ), -, axis, ., getLowerMargin, (, ), -]
[,, int, series, ), {, double, factor, =, 1.0, -, getItemMargin, (, ), -, axis, ., getLowerMargin, (, ), -]
[1.0, -, getItemMargin, (, ), -, axis, ., getLowerMargin, (, ), -, axis, ., getUpperMargin, (, ), ;, if, (]
[1.0, -, getItemMargin, (, ), -, axis, ., getLowerMargin, (, ), -, axis, ., getUpperMargin, (, ), ;, if, (]
[getItemMargin, (, ), -, axis, ., getLowerMargin, (, ), -, axis, ., getUpperMargin, (, ), ;, if, (, categories, >]
[-, axis, ., getLowerMargin, (, ), -, axis, ., getUpperMargin, (, ), ;, if, (, categories, >, 1, ), {]
[., getLowerMargin, (, ), -, axis, ., getUpperMargin, (, ), ;, if, (, categories, >, 1, ), {, factor, =]
[., getLowerMargin, (, ), -, axis, ., getUpperMargin, (, ), ;, if, (, categories, >, 1, ), {, factor, =]
[(, ), -, axis, ., getUpperMargin, (, ), ;, if, (, categories, >, 1, ), {, factor, =, factor, -]
[(, ), -, axis, ., getUpperMargin, (, ), ;, if, (, categories, >, 1, ), {, factor, =, factor, -]
[;, if, (, categories, >, 1, ), {, factor, =, factor, -, axis, ., getCategoryMargin, (, ), ;, }, return]
[;, if, (, categories, >, 1, ), {, factor, =, factor, -, axis, ., getCategoryMargin, (, ), ;, }, return]
[if, (, categories, >, 1, ), {, factor, =, factor, -, axis, ., getCategoryMargin, (, ), ;, }, return, (]
[if, (, categories, >, 1, ), {, factor, =, factor, -, axis, ., getCategoryMargin, (, ), ;, }, return, (]
[categories, >, 1, ), {, factor, =, factor, -, axis, ., getCategoryMargin, (, ), ;, }, return, (, space, *]
[), {, factor, =, factor, -, axis, ., getCategoryMargin, (, ), ;, }, return, (, space, *, factor, ), /]
[{, factor, =, factor, -, axis, ., getCategoryMargin, (, ), ;, }, return, (, space, *, factor, ), /, (]
[{, factor, =, factor, -, axis, ., getCategoryMargin, (, ), ;, }, return, (, space, *, factor, ), /, (]
[=, factor, -, axis, ., getCategoryMargin, (, ), ;, }, return, (, space, *, factor, ), /, (, categories, *]
[,, int, column, ,, boolean, selected, ,, CategoryItemLabelGenerator, generator, ,, Rectangle2D, bar, ,, boolean, negative, ), {, String, label, =]
[,, int, column, ,, boolean, selected, ,, CategoryItemLabelGenerator, generator, ,, Rectangle2D, bar, ,, boolean, negative, ), {, String, label, =]
[boolean, selected, ,, CategoryItemLabelGenerator, generator, ,, Rectangle2D, bar, ,, boolean, negative, ), {, String, label, =, generator, ., generateLabel, (]
[,, CategoryItemLabelGenerator, generator, ,, Rectangle2D, bar, ,, boolean, negative, ), {, String, label, =, generator, ., generateLabel, (, dataset, ,]
[generator, ,, Rectangle2D, bar, ,, boolean, negative, ), {, String, label, =, generator, ., generateLabel, (, dataset, ,, row, ,]
[boolean, negative, ), {, String, label, =, generator, ., generateLabel, (, dataset, ,, row, ,, column, ), ;, if, (]
[boolean, negative, ), {, String, label, =, generator, ., generateLabel, (, dataset, ,, row, ,, column, ), ;, if, (]
[), {, String, label, =, generator, ., generateLabel, (, dataset, ,, row, ,, column, ), ;, if, (, label, ==]
[dataset, ,, row, ,, column, ), ;, if, (, label, ==, null, ), {, return, ;, }, Font, labelFont, =]
[row, ,, column, ), ;, if, (, label, ==, null, ), {, return, ;, }, Font, labelFont, =, getItemLabelFont, (]
[column, ), ;, if, (, label, ==, null, ), {, return, ;, }, Font, labelFont, =, getItemLabelFont, (, row, ,]
[;, if, (, label, ==, null, ), {, return, ;, }, Font, labelFont, =, getItemLabelFont, (, row, ,, column, ,]
[label, ==, null, ), {, return, ;, }, Font, labelFont, =, getItemLabelFont, (, row, ,, column, ,, selected, ), ;]
[label, ==, null, ), {, return, ;, }, Font, labelFont, =, getItemLabelFont, (, row, ,, column, ,, selected, ), ;]
[{, return, ;, }, Font, labelFont, =, getItemLabelFont, (, row, ,, column, ,, selected, ), ;, g2, ., setFont, (]
[=, getItemLabelFont, (, row, ,, column, ,, selected, ), ;, g2, ., setFont, (, labelFont, ), ;, Paint, paint, =]
[(, row, ,, column, ,, selected, ), ;, g2, ., setFont, (, labelFont, ), ;, Paint, paint, =, getItemLabelPaint, (]
[,, column, ,, selected, ), ;, g2, ., setFont, (, labelFont, ), ;, Paint, paint, =, getItemLabelPaint, (, row, ,]
[,, selected, ), ;, g2, ., setFont, (, labelFont, ), ;, Paint, paint, =, getItemLabelPaint, (, row, ,, column, ,]
[;, g2, ., setFont, (, labelFont, ), ;, Paint, paint, =, getItemLabelPaint, (, row, ,, column, ,, selected, ), ;]
[;, g2, ., setFont, (, labelFont, ), ;, Paint, paint, =, getItemLabelPaint, (, row, ,, column, ,, selected, ), ;]
[(, labelFont, ), ;, Paint, paint, =, getItemLabelPaint, (, row, ,, column, ,, selected, ), ;, g2, ., setPaint, (]
[=, getItemLabelPaint, (, row, ,, column, ,, selected, ), ;, g2, ., setPaint, (, paint, ), ;, ItemLabelPosition, position, =]
[,, column, ,, selected, ), ;, g2, ., setPaint, (, paint, ), ;, ItemLabelPosition, position, =, null, ;, if, (]
[column, ,, selected, ), ;, g2, ., setPaint, (, paint, ), ;, ItemLabelPosition, position, =, null, ;, if, (, !]
[), ;, g2, ., setPaint, (, paint, ), ;, ItemLabelPosition, position, =, null, ;, if, (, !, negative, ), {]
[g2, ., setPaint, (, paint, ), ;, ItemLabelPosition, position, =, null, ;, if, (, !, negative, ), {, position, =]
[setPaint, (, paint, ), ;, ItemLabelPosition, position, =, null, ;, if, (, !, negative, ), {, position, =, getPositiveItemLabelPosition, (]
[paint, ), ;, ItemLabelPosition, position, =, null, ;, if, (, !, negative, ), {, position, =, getPositiveItemLabelPosition, (, row, ,]
[;, ItemLabelPosition, position, =, null, ;, if, (, !, negative, ), {, position, =, getPositiveItemLabelPosition, (, row, ,, column, ,]
[if, (, !, negative, ), {, position, =, getPositiveItemLabelPosition, (, row, ,, column, ,, selected, ), ;, }, else, {]
[!, negative, ), {, position, =, getPositiveItemLabelPosition, (, row, ,, column, ,, selected, ), ;, }, else, {, position, =]
[), {, position, =, getPositiveItemLabelPosition, (, row, ,, column, ,, selected, ), ;, }, else, {, position, =, getNegativeItemLabelPosition, (]
[position, =, getPositiveItemLabelPosition, (, row, ,, column, ,, selected, ), ;, }, else, {, position, =, getNegativeItemLabelPosition, (, row, ,]
[getPositiveItemLabelPosition, (, row, ,, column, ,, selected, ), ;, }, else, {, position, =, getNegativeItemLabelPosition, (, row, ,, column, ,]
[), ;, }, else, {, position, =, getNegativeItemLabelPosition, (, row, ,, column, ,, selected, ), ;, }, Point2D, anchorPoint, =]
[}, else, {, position, =, getNegativeItemLabelPosition, (, row, ,, column, ,, selected, ), ;, }, Point2D, anchorPoint, =, calculateLabelAnchorPoint, (]
[}, else, {, position, =, getNegativeItemLabelPosition, (, row, ,, column, ,, selected, ), ;, }, Point2D, anchorPoint, =, calculateLabelAnchorPoint, (]
[(, row, ,, column, ,, selected, ), ;, }, Point2D, anchorPoint, =, calculateLabelAnchorPoint, (, position, ., getItemLabelAnchor, (, ), ,]
[,, column, ,, selected, ), ;, }, Point2D, anchorPoint, =, calculateLabelAnchorPoint, (, position, ., getItemLabelAnchor, (, ), ,, bar, ,]
[,, column, ,, selected, ), ;, }, Point2D, anchorPoint, =, calculateLabelAnchorPoint, (, position, ., getItemLabelAnchor, (, ), ,, bar, ,]
[=, calculateLabelAnchorPoint, (, position, ., getItemLabelAnchor, (, ), ,, bar, ,, plot, ., getOrientation, (, ), ), ;, if, (]
[(, position, ., getItemLabelAnchor, (, ), ,, bar, ,, plot, ., getOrientation, (, ), ), ;, if, (, isInternalAnchor, (]
[(, position, ., getItemLabelAnchor, (, ), ,, bar, ,, plot, ., getOrientation, (, ), ), ;, if, (, isInternalAnchor, (]
[getOrientation, (, ), ), ;, if, (, isInternalAnchor, (, position, ., getItemLabelAnchor, (, ), ), ), {, Shape, bounds, =]
[getOrientation, (, ), ), ;, if, (, isInternalAnchor, (, position, ., getItemLabelAnchor, (, ), ), ), {, Shape, bounds, =]
[;, if, (, isInternalAnchor, (, position, ., getItemLabelAnchor, (, ), ), ), {, Shape, bounds, =, TextUtilities, ., calculateRotatedStringBounds, (]
[(, isInternalAnchor, (, position, ., getItemLabelAnchor, (, ), ), ), {, Shape, bounds, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,]
[(, position, ., getItemLabelAnchor, (, ), ), ), {, Shape, bounds, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,]
[getItemLabelAnchor, (, ), ), ), {, Shape, bounds, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,, (, float, )]
[getItemLabelAnchor, (, ), ), ), {, Shape, bounds, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,, (, float, )]
[Shape, bounds, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,, (, float, ), anchorPoint, ., getX, (, ), ,]
[TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,, (, float, ), anchorPoint, ., getX, (, ), ,, (, float, )]
[TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,, (, float, ), anchorPoint, ., getX, (, ), ,, (, float, )]
[g2, ,, (, float, ), anchorPoint, ., getX, (, ), ,, (, float, ), anchorPoint, ., getY, (, ), ,]
[g2, ,, (, float, ), anchorPoint, ., getX, (, ), ,, (, float, ), anchorPoint, ., getY, (, ), ,]
[., getX, (, ), ,, (, float, ), anchorPoint, ., getY, (, ), ,, position, ., getTextAnchor, (, ), ,]
[., getX, (, ), ,, (, float, ), anchorPoint, ., getY, (, ), ,, position, ., getTextAnchor, (, ), ,]
[float, ), anchorPoint, ., getY, (, ), ,, position, ., getTextAnchor, (, ), ,, position, ., getAngle, (, ), ,]
[float, ), anchorPoint, ., getY, (, ), ,, position, ., getTextAnchor, (, ), ,, position, ., getAngle, (, ), ,]
[., getTextAnchor, (, ), ,, position, ., getAngle, (, ), ,, position, ., getRotationAnchor, (, ), ), ;, if, (]
[., getTextAnchor, (, ), ,, position, ., getAngle, (, ), ,, position, ., getRotationAnchor, (, ), ), ;, if, (]
[(, ), ,, position, ., getAngle, (, ), ,, position, ., getRotationAnchor, (, ), ), ;, if, (, bounds, !=]
[getAngle, (, ), ,, position, ., getRotationAnchor, (, ), ), ;, if, (, bounds, !=, null, ), {, if, (]
[(, ), ,, position, ., getRotationAnchor, (, ), ), ;, if, (, bounds, !=, null, ), {, if, (, !]
[(, ), ,, position, ., getRotationAnchor, (, ), ), ;, if, (, bounds, !=, null, ), {, if, (, !]
[., getRotationAnchor, (, ), ), ;, if, (, bounds, !=, null, ), {, if, (, !, bar, ., contains, (]
[., getRotationAnchor, (, ), ), ;, if, (, bounds, !=, null, ), {, if, (, !, bar, ., contains, (]
[null, ), {, if, (, !, bar, ., contains, (, bounds, ., getBounds2D, (, ), ), ), {, if, (]
[), {, if, (, !, bar, ., contains, (, bounds, ., getBounds2D, (, ), ), ), {, if, (, !]
[(, !, bar, ., contains, (, bounds, ., getBounds2D, (, ), ), ), {, if, (, !, negative, ), {]
[bar, ., contains, (, bounds, ., getBounds2D, (, ), ), ), {, if, (, !, negative, ), {, position, =]
[(, ), ), ), {, if, (, !, negative, ), {, position, =, getPositiveItemLabelPositionFallback, (, ), ;, }, else, {]
[), ), {, if, (, !, negative, ), {, position, =, getPositiveItemLabelPositionFallback, (, ), ;, }, else, {, position, =]
[), {, position, =, getPositiveItemLabelPositionFallback, (, ), ;, }, else, {, position, =, getNegativeItemLabelPositionFallback, (, ), ;, }, if, (]
[), {, position, =, getPositiveItemLabelPositionFallback, (, ), ;, }, else, {, position, =, getNegativeItemLabelPositionFallback, (, ), ;, }, if, (]
[position, =, getPositiveItemLabelPositionFallback, (, ), ;, }, else, {, position, =, getNegativeItemLabelPositionFallback, (, ), ;, }, if, (, position, !=]
[(, ), ;, }, else, {, position, =, getNegativeItemLabelPositionFallback, (, ), ;, }, if, (, position, !=, null, ), {]
[;, }, else, {, position, =, getNegativeItemLabelPositionFallback, (, ), ;, }, if, (, position, !=, null, ), {, anchorPoint, =]
[else, {, position, =, getNegativeItemLabelPositionFallback, (, ), ;, }, if, (, position, !=, null, ), {, anchorPoint, =, calculateLabelAnchorPoint, (]
[else, {, position, =, getNegativeItemLabelPositionFallback, (, ), ;, }, if, (, position, !=, null, ), {, anchorPoint, =, calculateLabelAnchorPoint, (]
[), ;, }, if, (, position, !=, null, ), {, anchorPoint, =, calculateLabelAnchorPoint, (, position, ., getItemLabelAnchor, (, ), ,]
[}, if, (, position, !=, null, ), {, anchorPoint, =, calculateLabelAnchorPoint, (, position, ., getItemLabelAnchor, (, ), ,, bar, ,]
[}, if, (, position, !=, null, ), {, anchorPoint, =, calculateLabelAnchorPoint, (, position, ., getItemLabelAnchor, (, ), ,, bar, ,]
[., getItemLabelAnchor, (, ), ,, bar, ,, plot, ., getOrientation, (, ), ), ;, }, }, }, }, if, (]
[., getItemLabelAnchor, (, ), ,, bar, ,, plot, ., getOrientation, (, ), ), ;, }, }, }, }, if, (]
[(, ), ,, bar, ,, plot, ., getOrientation, (, ), ), ;, }, }, }, }, if, (, position, !=]
[bar, ,, plot, ., getOrientation, (, ), ), ;, }, }, }, }, if, (, position, !=, null, ), {]
[bar, ,, plot, ., getOrientation, (, ), ), ;, }, }, }, }, if, (, position, !=, null, ), {]
[getOrientation, (, ), ), ;, }, }, }, }, if, (, position, !=, null, ), {, TextUtilities, ., drawRotatedString, (]
[), ), ;, }, }, }, }, if, (, position, !=, null, ), {, TextUtilities, ., drawRotatedString, (, label, ,]
[;, }, }, }, }, if, (, position, !=, null, ), {, TextUtilities, ., drawRotatedString, (, label, ,, g2, ,]
[}, }, if, (, position, !=, null, ), {, TextUtilities, ., drawRotatedString, (, label, ,, g2, ,, (, float, )]
[}, }, if, (, position, !=, null, ), {, TextUtilities, ., drawRotatedString, (, label, ,, g2, ,, (, float, )]
[null, ), {, TextUtilities, ., drawRotatedString, (, label, ,, g2, ,, (, float, ), anchorPoint, ., getX, (, ), ,]
[TextUtilities, ., drawRotatedString, (, label, ,, g2, ,, (, float, ), anchorPoint, ., getX, (, ), ,, (, float, )]
[TextUtilities, ., drawRotatedString, (, label, ,, g2, ,, (, float, ), anchorPoint, ., getX, (, ), ,, (, float, )]
[g2, ,, (, float, ), anchorPoint, ., getX, (, ), ,, (, float, ), anchorPoint, ., getY, (, ), ,]
[g2, ,, (, float, ), anchorPoint, ., getX, (, ), ,, (, float, ), anchorPoint, ., getY, (, ), ,]
[., getX, (, ), ,, (, float, ), anchorPoint, ., getY, (, ), ,, position, ., getTextAnchor, (, ), ,]
[., getX, (, ), ,, (, float, ), anchorPoint, ., getY, (, ), ,, position, ., getTextAnchor, (, ), ,]
[float, ), anchorPoint, ., getY, (, ), ,, position, ., getTextAnchor, (, ), ,, position, ., getAngle, (, ), ,]
[float, ), anchorPoint, ., getY, (, ), ,, position, ., getTextAnchor, (, ), ,, position, ., getAngle, (, ), ,]
[;, }, }, private, Point2D, calculateLabelAnchorPoint, (, ItemLabelAnchor, anchor, ,, Rectangle2D, bar, ,, PlotOrientation, orientation, ), {, Point2D, result, =]
[calculateLabelAnchorPoint, (, ItemLabelAnchor, anchor, ,, Rectangle2D, bar, ,, PlotOrientation, orientation, ), {, Point2D, result, =, null, ;, double, offset, =]
[,, PlotOrientation, orientation, ), {, Point2D, result, =, null, ;, double, offset, =, getItemLabelAnchorOffset, (, ), ;, double, x0, =]
[,, PlotOrientation, orientation, ), {, Point2D, result, =, null, ;, double, offset, =, getItemLabelAnchorOffset, (, ), ;, double, x0, =]
[,, PlotOrientation, orientation, ), {, Point2D, result, =, null, ;, double, offset, =, getItemLabelAnchorOffset, (, ), ;, double, x0, =]
[result, =, null, ;, double, offset, =, getItemLabelAnchorOffset, (, ), ;, double, x0, =, bar, ., getX, (, ), -]
[offset, =, getItemLabelAnchorOffset, (, ), ;, double, x0, =, bar, ., getX, (, ), -, offset, ;, double, x1, =]
[offset, =, getItemLabelAnchorOffset, (, ), ;, double, x0, =, bar, ., getX, (, ), -, offset, ;, double, x1, =]
[bar, ., getX, (, ), -, offset, ;, double, x1, =, bar, ., getX, (, ), ;, double, x2, =]
[bar, ., getX, (, ), -, offset, ;, double, x1, =, bar, ., getX, (, ), ;, double, x2, =]
[bar, ., getX, (, ), -, offset, ;, double, x1, =, bar, ., getX, (, ), ;, double, x2, =]
[offset, ;, double, x1, =, bar, ., getX, (, ), ;, double, x2, =, bar, ., getX, (, ), +]
[bar, ., getX, (, ), ;, double, x2, =, bar, ., getX, (, ), +, offset, ;, double, x3, =]
[bar, ., getX, (, ), ;, double, x2, =, bar, ., getX, (, ), +, offset, ;, double, x3, =]
[bar, ., getX, (, ), +, offset, ;, double, x3, =, bar, ., getCenterX, (, ), ;, double, x4, =]
[bar, ., getX, (, ), +, offset, ;, double, x3, =, bar, ., getCenterX, (, ), ;, double, x4, =]
[bar, ., getX, (, ), +, offset, ;, double, x3, =, bar, ., getCenterX, (, ), ;, double, x4, =]
[offset, ;, double, x3, =, bar, ., getCenterX, (, ), ;, double, x4, =, bar, ., getMaxX, (, ), -]
[bar, ., getCenterX, (, ), ;, double, x4, =, bar, ., getMaxX, (, ), -, offset, ;, double, x5, =]
[bar, ., getCenterX, (, ), ;, double, x4, =, bar, ., getMaxX, (, ), -, offset, ;, double, x5, =]
[bar, ., getMaxX, (, ), -, offset, ;, double, x5, =, bar, ., getMaxX, (, ), ;, double, x6, =]
[bar, ., getMaxX, (, ), -, offset, ;, double, x5, =, bar, ., getMaxX, (, ), ;, double, x6, =]
[bar, ., getMaxX, (, ), -, offset, ;, double, x5, =, bar, ., getMaxX, (, ), ;, double, x6, =]
[offset, ;, double, x5, =, bar, ., getMaxX, (, ), ;, double, x6, =, bar, ., getMaxX, (, ), +]
[bar, ., getMaxX, (, ), ;, double, x6, =, bar, ., getMaxX, (, ), +, offset, ;, double, y0, =]
[bar, ., getMaxX, (, ), ;, double, x6, =, bar, ., getMaxX, (, ), +, offset, ;, double, y0, =]
[bar, ., getMaxX, (, ), ;, double, x6, =, bar, ., getMaxX, (, ), +, offset, ;, double, y0, =]
[double, x6, =, bar, ., getMaxX, (, ), +, offset, ;, double, y0, =, bar, ., getMaxY, (, ), +]
[getMaxX, (, ), +, offset, ;, double, y0, =, bar, ., getMaxY, (, ), +, offset, ;, double, y1, =]
[getMaxX, (, ), +, offset, ;, double, y0, =, bar, ., getMaxY, (, ), +, offset, ;, double, y1, =]
[bar, ., getMaxY, (, ), +, offset, ;, double, y1, =, bar, ., getMaxY, (, ), ;, double, y2, =]
[bar, ., getMaxY, (, ), +, offset, ;, double, y1, =, bar, ., getMaxY, (, ), ;, double, y2, =]
[bar, ., getMaxY, (, ), +, offset, ;, double, y1, =, bar, ., getMaxY, (, ), ;, double, y2, =]
[offset, ;, double, y1, =, bar, ., getMaxY, (, ), ;, double, y2, =, bar, ., getMaxY, (, ), -]
[bar, ., getMaxY, (, ), ;, double, y2, =, bar, ., getMaxY, (, ), -, offset, ;, double, y3, =]
[bar, ., getMaxY, (, ), ;, double, y2, =, bar, ., getMaxY, (, ), -, offset, ;, double, y3, =]
[bar, ., getMaxY, (, ), -, offset, ;, double, y3, =, bar, ., getCenterY, (, ), ;, double, y4, =]
[bar, ., getMaxY, (, ), -, offset, ;, double, y3, =, bar, ., getCenterY, (, ), ;, double, y4, =]
[bar, ., getMaxY, (, ), -, offset, ;, double, y3, =, bar, ., getCenterY, (, ), ;, double, y4, =]
[offset, ;, double, y3, =, bar, ., getCenterY, (, ), ;, double, y4, =, bar, ., getMinY, (, ), +]
[bar, ., getCenterY, (, ), ;, double, y4, =, bar, ., getMinY, (, ), +, offset, ;, double, y5, =]
[bar, ., getCenterY, (, ), ;, double, y4, =, bar, ., getMinY, (, ), +, offset, ;, double, y5, =]
[bar, ., getMinY, (, ), +, offset, ;, double, y5, =, bar, ., getMinY, (, ), ;, double, y6, =]
[bar, ., getMinY, (, ), +, offset, ;, double, y5, =, bar, ., getMinY, (, ), ;, double, y6, =]
[bar, ., getMinY, (, ), +, offset, ;, double, y5, =, bar, ., getMinY, (, ), ;, double, y6, =]
[offset, ;, double, y5, =, bar, ., getMinY, (, ), ;, double, y6, =, bar, ., getMinY, (, ), -]
[=, bar, ., getMinY, (, ), ;, double, y6, =, bar, ., getMinY, (, ), -, offset, ;, if, (]
[=, bar, ., getMinY, (, ), ;, double, y6, =, bar, ., getMinY, (, ), -, offset, ;, if, (]
[., getMinY, (, ), ;, double, y6, =, bar, ., getMinY, (, ), -, offset, ;, if, (, anchor, ==]
[., getMinY, (, ), ;, double, y6, =, bar, ., getMinY, (, ), -, offset, ;, if, (, anchor, ==]
[double, y6, =, bar, ., getMinY, (, ), -, offset, ;, if, (, anchor, ==, ItemLabelAnchor, ., CENTER, ), {]
[=, bar, ., getMinY, (, ), -, offset, ;, if, (, anchor, ==, ItemLabelAnchor, ., CENTER, ), {, result, =]
[), -, offset, ;, if, (, anchor, ==, ItemLabelAnchor, ., CENTER, ), {, result, =, new, Point2D, ., Double, (]
[offset, ;, if, (, anchor, ==, ItemLabelAnchor, ., CENTER, ), {, result, =, new, Point2D, ., Double, (, x3, ,]
[., CENTER, ), {, result, =, new, Point2D, ., Double, (, x3, ,, y3, ), ;, }, else, if, (]
[., CENTER, ), {, result, =, new, Point2D, ., Double, (, x3, ,, y3, ), ;, }, else, if, (]
[), {, result, =, new, Point2D, ., Double, (, x3, ,, y3, ), ;, }, else, if, (, anchor, ==]
[), {, result, =, new, Point2D, ., Double, (, x3, ,, y3, ), ;, }, else, if, (, anchor, ==]
[Point2D, ., Double, (, x3, ,, y3, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE1, ), {]
[Double, (, x3, ,, y3, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE1, ), {, result, =]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE1, ), {, result, =, new, Point2D, ., Double, (]
[}, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE1, ), {, result, =, new, Point2D, ., Double, (, x4, ,]
[., INSIDE1, ), {, result, =, new, Point2D, ., Double, (, x4, ,, y4, ), ;, }, else, if, (]
[., INSIDE1, ), {, result, =, new, Point2D, ., Double, (, x4, ,, y4, ), ;, }, else, if, (]
[), {, result, =, new, Point2D, ., Double, (, x4, ,, y4, ), ;, }, else, if, (, anchor, ==]
[), {, result, =, new, Point2D, ., Double, (, x4, ,, y4, ), ;, }, else, if, (, anchor, ==]
[Point2D, ., Double, (, x4, ,, y4, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE2, ), {]
[Double, (, x4, ,, y4, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE2, ), {, result, =]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE2, ), {, result, =, new, Point2D, ., Double, (]
[}, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE2, ), {, result, =, new, Point2D, ., Double, (, x4, ,]
[., INSIDE2, ), {, result, =, new, Point2D, ., Double, (, x4, ,, y4, ), ;, }, else, if, (]
[., INSIDE2, ), {, result, =, new, Point2D, ., Double, (, x4, ,, y4, ), ;, }, else, if, (]
[), {, result, =, new, Point2D, ., Double, (, x4, ,, y4, ), ;, }, else, if, (, anchor, ==]
[), {, result, =, new, Point2D, ., Double, (, x4, ,, y4, ), ;, }, else, if, (, anchor, ==]
[Point2D, ., Double, (, x4, ,, y4, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE3, ), {]
[Double, (, x4, ,, y4, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE3, ), {, result, =]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE3, ), {, result, =, new, Point2D, ., Double, (]
[}, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE3, ), {, result, =, new, Point2D, ., Double, (, x4, ,]
[., INSIDE3, ), {, result, =, new, Point2D, ., Double, (, x4, ,, y3, ), ;, }, else, if, (]
[., INSIDE3, ), {, result, =, new, Point2D, ., Double, (, x4, ,, y3, ), ;, }, else, if, (]
[), {, result, =, new, Point2D, ., Double, (, x4, ,, y3, ), ;, }, else, if, (, anchor, ==]
[), {, result, =, new, Point2D, ., Double, (, x4, ,, y3, ), ;, }, else, if, (, anchor, ==]
[Point2D, ., Double, (, x4, ,, y3, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE4, ), {]
[Double, (, x4, ,, y3, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE4, ), {, result, =]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE4, ), {, result, =, new, Point2D, ., Double, (]
[}, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE4, ), {, result, =, new, Point2D, ., Double, (, x4, ,]
[., INSIDE4, ), {, result, =, new, Point2D, ., Double, (, x4, ,, y2, ), ;, }, else, if, (]
[., INSIDE4, ), {, result, =, new, Point2D, ., Double, (, x4, ,, y2, ), ;, }, else, if, (]
[), {, result, =, new, Point2D, ., Double, (, x4, ,, y2, ), ;, }, else, if, (, anchor, ==]
[), {, result, =, new, Point2D, ., Double, (, x4, ,, y2, ), ;, }, else, if, (, anchor, ==]
[Point2D, ., Double, (, x4, ,, y2, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE5, ), {]
[Double, (, x4, ,, y2, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE5, ), {, result, =]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE5, ), {, result, =, new, Point2D, ., Double, (]
[}, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE5, ), {, result, =, new, Point2D, ., Double, (, x4, ,]
[., INSIDE5, ), {, result, =, new, Point2D, ., Double, (, x4, ,, y2, ), ;, }, else, if, (]
[., INSIDE5, ), {, result, =, new, Point2D, ., Double, (, x4, ,, y2, ), ;, }, else, if, (]
[), {, result, =, new, Point2D, ., Double, (, x4, ,, y2, ), ;, }, else, if, (, anchor, ==]
[), {, result, =, new, Point2D, ., Double, (, x4, ,, y2, ), ;, }, else, if, (, anchor, ==]
[Point2D, ., Double, (, x4, ,, y2, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE6, ), {]
[Double, (, x4, ,, y2, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE6, ), {, result, =]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE6, ), {, result, =, new, Point2D, ., Double, (]
[}, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE6, ), {, result, =, new, Point2D, ., Double, (, x3, ,]
[., INSIDE6, ), {, result, =, new, Point2D, ., Double, (, x3, ,, y2, ), ;, }, else, if, (]
[., INSIDE6, ), {, result, =, new, Point2D, ., Double, (, x3, ,, y2, ), ;, }, else, if, (]
[), {, result, =, new, Point2D, ., Double, (, x3, ,, y2, ), ;, }, else, if, (, anchor, ==]
[), {, result, =, new, Point2D, ., Double, (, x3, ,, y2, ), ;, }, else, if, (, anchor, ==]
[Point2D, ., Double, (, x3, ,, y2, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE7, ), {]
[Double, (, x3, ,, y2, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE7, ), {, result, =]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE7, ), {, result, =, new, Point2D, ., Double, (]
[}, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE7, ), {, result, =, new, Point2D, ., Double, (, x2, ,]
[., INSIDE7, ), {, result, =, new, Point2D, ., Double, (, x2, ,, y2, ), ;, }, else, if, (]
[., INSIDE7, ), {, result, =, new, Point2D, ., Double, (, x2, ,, y2, ), ;, }, else, if, (]
[), {, result, =, new, Point2D, ., Double, (, x2, ,, y2, ), ;, }, else, if, (, anchor, ==]
[), {, result, =, new, Point2D, ., Double, (, x2, ,, y2, ), ;, }, else, if, (, anchor, ==]
[Point2D, ., Double, (, x2, ,, y2, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE8, ), {]
[Double, (, x2, ,, y2, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE8, ), {, result, =]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE8, ), {, result, =, new, Point2D, ., Double, (]
[}, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE8, ), {, result, =, new, Point2D, ., Double, (, x2, ,]
[., INSIDE8, ), {, result, =, new, Point2D, ., Double, (, x2, ,, y2, ), ;, }, else, if, (]
[., INSIDE8, ), {, result, =, new, Point2D, ., Double, (, x2, ,, y2, ), ;, }, else, if, (]
[), {, result, =, new, Point2D, ., Double, (, x2, ,, y2, ), ;, }, else, if, (, anchor, ==]
[), {, result, =, new, Point2D, ., Double, (, x2, ,, y2, ), ;, }, else, if, (, anchor, ==]
[Point2D, ., Double, (, x2, ,, y2, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE9, ), {]
[Double, (, x2, ,, y2, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE9, ), {, result, =]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE9, ), {, result, =, new, Point2D, ., Double, (]
[}, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE9, ), {, result, =, new, Point2D, ., Double, (, x2, ,]
[., INSIDE9, ), {, result, =, new, Point2D, ., Double, (, x2, ,, y3, ), ;, }, else, if, (]
[., INSIDE9, ), {, result, =, new, Point2D, ., Double, (, x2, ,, y3, ), ;, }, else, if, (]
[), {, result, =, new, Point2D, ., Double, (, x2, ,, y3, ), ;, }, else, if, (, anchor, ==]
[), {, result, =, new, Point2D, ., Double, (, x2, ,, y3, ), ;, }, else, if, (, anchor, ==]
[Point2D, ., Double, (, x2, ,, y3, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE10, ), {]
[Double, (, x2, ,, y3, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE10, ), {, result, =]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE10, ), {, result, =, new, Point2D, ., Double, (]
[}, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE10, ), {, result, =, new, Point2D, ., Double, (, x2, ,]
[., INSIDE10, ), {, result, =, new, Point2D, ., Double, (, x2, ,, y4, ), ;, }, else, if, (]
[., INSIDE10, ), {, result, =, new, Point2D, ., Double, (, x2, ,, y4, ), ;, }, else, if, (]
[), {, result, =, new, Point2D, ., Double, (, x2, ,, y4, ), ;, }, else, if, (, anchor, ==]
[), {, result, =, new, Point2D, ., Double, (, x2, ,, y4, ), ;, }, else, if, (, anchor, ==]
[Point2D, ., Double, (, x2, ,, y4, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE11, ), {]
[Double, (, x2, ,, y4, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE11, ), {, result, =]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE11, ), {, result, =, new, Point2D, ., Double, (]
[}, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE11, ), {, result, =, new, Point2D, ., Double, (, x2, ,]
[., INSIDE11, ), {, result, =, new, Point2D, ., Double, (, x2, ,, y4, ), ;, }, else, if, (]
[., INSIDE11, ), {, result, =, new, Point2D, ., Double, (, x2, ,, y4, ), ;, }, else, if, (]
[), {, result, =, new, Point2D, ., Double, (, x2, ,, y4, ), ;, }, else, if, (, anchor, ==]
[), {, result, =, new, Point2D, ., Double, (, x2, ,, y4, ), ;, }, else, if, (, anchor, ==]
[Point2D, ., Double, (, x2, ,, y4, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE12, ), {]
[Double, (, x2, ,, y4, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE12, ), {, result, =]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE12, ), {, result, =, new, Point2D, ., Double, (]
[}, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE12, ), {, result, =, new, Point2D, ., Double, (, x3, ,]
[., INSIDE12, ), {, result, =, new, Point2D, ., Double, (, x3, ,, y4, ), ;, }, else, if, (]
[., INSIDE12, ), {, result, =, new, Point2D, ., Double, (, x3, ,, y4, ), ;, }, else, if, (]
[), {, result, =, new, Point2D, ., Double, (, x3, ,, y4, ), ;, }, else, if, (, anchor, ==]
[), {, result, =, new, Point2D, ., Double, (, x3, ,, y4, ), ;, }, else, if, (, anchor, ==]
[Point2D, ., Double, (, x3, ,, y4, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE1, ), {]
[Double, (, x3, ,, y4, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE1, ), {, result, =]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE1, ), {, result, =, new, Point2D, ., Double, (]
[}, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE1, ), {, result, =, new, Point2D, ., Double, (, x5, ,]
[., OUTSIDE1, ), {, result, =, new, Point2D, ., Double, (, x5, ,, y6, ), ;, }, else, if, (]
[., OUTSIDE1, ), {, result, =, new, Point2D, ., Double, (, x5, ,, y6, ), ;, }, else, if, (]
[), {, result, =, new, Point2D, ., Double, (, x5, ,, y6, ), ;, }, else, if, (, anchor, ==]
[), {, result, =, new, Point2D, ., Double, (, x5, ,, y6, ), ;, }, else, if, (, anchor, ==]
[Point2D, ., Double, (, x5, ,, y6, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE2, ), {]
[Double, (, x5, ,, y6, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE2, ), {, result, =]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE2, ), {, result, =, new, Point2D, ., Double, (]
[}, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE2, ), {, result, =, new, Point2D, ., Double, (, x6, ,]
[., OUTSIDE2, ), {, result, =, new, Point2D, ., Double, (, x6, ,, y5, ), ;, }, else, if, (]
[., OUTSIDE2, ), {, result, =, new, Point2D, ., Double, (, x6, ,, y5, ), ;, }, else, if, (]
[), {, result, =, new, Point2D, ., Double, (, x6, ,, y5, ), ;, }, else, if, (, anchor, ==]
[), {, result, =, new, Point2D, ., Double, (, x6, ,, y5, ), ;, }, else, if, (, anchor, ==]
[Point2D, ., Double, (, x6, ,, y5, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE3, ), {]
[Double, (, x6, ,, y5, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE3, ), {, result, =]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE3, ), {, result, =, new, Point2D, ., Double, (]
[}, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE3, ), {, result, =, new, Point2D, ., Double, (, x6, ,]
[., OUTSIDE3, ), {, result, =, new, Point2D, ., Double, (, x6, ,, y3, ), ;, }, else, if, (]
[., OUTSIDE3, ), {, result, =, new, Point2D, ., Double, (, x6, ,, y3, ), ;, }, else, if, (]
[), {, result, =, new, Point2D, ., Double, (, x6, ,, y3, ), ;, }, else, if, (, anchor, ==]
[), {, result, =, new, Point2D, ., Double, (, x6, ,, y3, ), ;, }, else, if, (, anchor, ==]
[Point2D, ., Double, (, x6, ,, y3, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE4, ), {]
[Double, (, x6, ,, y3, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE4, ), {, result, =]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE4, ), {, result, =, new, Point2D, ., Double, (]
[}, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE4, ), {, result, =, new, Point2D, ., Double, (, x6, ,]
[., OUTSIDE4, ), {, result, =, new, Point2D, ., Double, (, x6, ,, y1, ), ;, }, else, if, (]
[., OUTSIDE4, ), {, result, =, new, Point2D, ., Double, (, x6, ,, y1, ), ;, }, else, if, (]
[), {, result, =, new, Point2D, ., Double, (, x6, ,, y1, ), ;, }, else, if, (, anchor, ==]
[), {, result, =, new, Point2D, ., Double, (, x6, ,, y1, ), ;, }, else, if, (, anchor, ==]
[Point2D, ., Double, (, x6, ,, y1, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE5, ), {]
[Double, (, x6, ,, y1, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE5, ), {, result, =]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE5, ), {, result, =, new, Point2D, ., Double, (]
[}, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE5, ), {, result, =, new, Point2D, ., Double, (, x5, ,]
[., OUTSIDE5, ), {, result, =, new, Point2D, ., Double, (, x5, ,, y0, ), ;, }, else, if, (]
[., OUTSIDE5, ), {, result, =, new, Point2D, ., Double, (, x5, ,, y0, ), ;, }, else, if, (]
[), {, result, =, new, Point2D, ., Double, (, x5, ,, y0, ), ;, }, else, if, (, anchor, ==]
[), {, result, =, new, Point2D, ., Double, (, x5, ,, y0, ), ;, }, else, if, (, anchor, ==]
[Point2D, ., Double, (, x5, ,, y0, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE6, ), {]
[Double, (, x5, ,, y0, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE6, ), {, result, =]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE6, ), {, result, =, new, Point2D, ., Double, (]
[}, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE6, ), {, result, =, new, Point2D, ., Double, (, x3, ,]
[., OUTSIDE6, ), {, result, =, new, Point2D, ., Double, (, x3, ,, y0, ), ;, }, else, if, (]
[., OUTSIDE6, ), {, result, =, new, Point2D, ., Double, (, x3, ,, y0, ), ;, }, else, if, (]
[), {, result, =, new, Point2D, ., Double, (, x3, ,, y0, ), ;, }, else, if, (, anchor, ==]
[), {, result, =, new, Point2D, ., Double, (, x3, ,, y0, ), ;, }, else, if, (, anchor, ==]
[Point2D, ., Double, (, x3, ,, y0, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE7, ), {]
[Double, (, x3, ,, y0, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE7, ), {, result, =]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE7, ), {, result, =, new, Point2D, ., Double, (]
[}, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE7, ), {, result, =, new, Point2D, ., Double, (, x1, ,]
[., OUTSIDE7, ), {, result, =, new, Point2D, ., Double, (, x1, ,, y0, ), ;, }, else, if, (]
[., OUTSIDE7, ), {, result, =, new, Point2D, ., Double, (, x1, ,, y0, ), ;, }, else, if, (]
[), {, result, =, new, Point2D, ., Double, (, x1, ,, y0, ), ;, }, else, if, (, anchor, ==]
[), {, result, =, new, Point2D, ., Double, (, x1, ,, y0, ), ;, }, else, if, (, anchor, ==]
[Point2D, ., Double, (, x1, ,, y0, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE8, ), {]
[Double, (, x1, ,, y0, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE8, ), {, result, =]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE8, ), {, result, =, new, Point2D, ., Double, (]
[}, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE8, ), {, result, =, new, Point2D, ., Double, (, x0, ,]
[., OUTSIDE8, ), {, result, =, new, Point2D, ., Double, (, x0, ,, y1, ), ;, }, else, if, (]
[., OUTSIDE8, ), {, result, =, new, Point2D, ., Double, (, x0, ,, y1, ), ;, }, else, if, (]
[), {, result, =, new, Point2D, ., Double, (, x0, ,, y1, ), ;, }, else, if, (, anchor, ==]
[), {, result, =, new, Point2D, ., Double, (, x0, ,, y1, ), ;, }, else, if, (, anchor, ==]
[Point2D, ., Double, (, x0, ,, y1, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE9, ), {]
[Double, (, x0, ,, y1, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE9, ), {, result, =]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE9, ), {, result, =, new, Point2D, ., Double, (]
[}, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE9, ), {, result, =, new, Point2D, ., Double, (, x0, ,]
[., OUTSIDE9, ), {, result, =, new, Point2D, ., Double, (, x0, ,, y3, ), ;, }, else, if, (]
[., OUTSIDE9, ), {, result, =, new, Point2D, ., Double, (, x0, ,, y3, ), ;, }, else, if, (]
[), {, result, =, new, Point2D, ., Double, (, x0, ,, y3, ), ;, }, else, if, (, anchor, ==]
[), {, result, =, new, Point2D, ., Double, (, x0, ,, y3, ), ;, }, else, if, (, anchor, ==]
[Point2D, ., Double, (, x0, ,, y3, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE10, ), {]
[Double, (, x0, ,, y3, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE10, ), {, result, =]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE10, ), {, result, =, new, Point2D, ., Double, (]
[}, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE10, ), {, result, =, new, Point2D, ., Double, (, x0, ,]
[., OUTSIDE10, ), {, result, =, new, Point2D, ., Double, (, x0, ,, y5, ), ;, }, else, if, (]
[., OUTSIDE10, ), {, result, =, new, Point2D, ., Double, (, x0, ,, y5, ), ;, }, else, if, (]
[), {, result, =, new, Point2D, ., Double, (, x0, ,, y5, ), ;, }, else, if, (, anchor, ==]
[), {, result, =, new, Point2D, ., Double, (, x0, ,, y5, ), ;, }, else, if, (, anchor, ==]
[Point2D, ., Double, (, x0, ,, y5, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE11, ), {]
[Double, (, x0, ,, y5, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE11, ), {, result, =]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE11, ), {, result, =, new, Point2D, ., Double, (]
[}, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE11, ), {, result, =, new, Point2D, ., Double, (, x1, ,]
[., OUTSIDE11, ), {, result, =, new, Point2D, ., Double, (, x1, ,, y6, ), ;, }, else, if, (]
[., OUTSIDE11, ), {, result, =, new, Point2D, ., Double, (, x1, ,, y6, ), ;, }, else, if, (]
[), {, result, =, new, Point2D, ., Double, (, x1, ,, y6, ), ;, }, else, if, (, anchor, ==]
[), {, result, =, new, Point2D, ., Double, (, x1, ,, y6, ), ;, }, else, if, (, anchor, ==]
[Point2D, ., Double, (, x1, ,, y6, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE12, ), {]
[Double, (, x1, ,, y6, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE12, ), {, result, =]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE12, ), {, result, =, new, Point2D, ., Double, (]
[}, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE12, ), {, result, =, new, Point2D, ., Double, (, x3, ,]
[==, ItemLabelAnchor, ., OUTSIDE12, ), {, result, =, new, Point2D, ., Double, (, x3, ,, y6, ), ;, }, return]
[(, x3, ,, y6, ), ;, }, return, result, ;, }, private, boolean, isInternalAnchor, (, ItemLabelAnchor, anchor, ), {, return]
[(, x3, ,, y6, ), ;, }, return, result, ;, }, private, boolean, isInternalAnchor, (, ItemLabelAnchor, anchor, ), {, return]
[(, x3, ,, y6, ), ;, }, return, result, ;, }, private, boolean, isInternalAnchor, (, ItemLabelAnchor, anchor, ), {, return]
[(, x3, ,, y6, ), ;, }, return, result, ;, }, private, boolean, isInternalAnchor, (, ItemLabelAnchor, anchor, ), {, return]
[(, x3, ,, y6, ), ;, }, return, result, ;, }, private, boolean, isInternalAnchor, (, ItemLabelAnchor, anchor, ), {, return]
[(, x3, ,, y6, ), ;, }, return, result, ;, }, private, boolean, isInternalAnchor, (, ItemLabelAnchor, anchor, ), {, return]
[(, x3, ,, y6, ), ;, }, return, result, ;, }, private, boolean, isInternalAnchor, (, ItemLabelAnchor, anchor, ), {, return]
[(, x3, ,, y6, ), ;, }, return, result, ;, }, private, boolean, isInternalAnchor, (, ItemLabelAnchor, anchor, ), {, return]
[(, x3, ,, y6, ), ;, }, return, result, ;, }, private, boolean, isInternalAnchor, (, ItemLabelAnchor, anchor, ), {, return]
[(, x3, ,, y6, ), ;, }, return, result, ;, }, private, boolean, isInternalAnchor, (, ItemLabelAnchor, anchor, ), {, return]
[(, x3, ,, y6, ), ;, }, return, result, ;, }, private, boolean, isInternalAnchor, (, ItemLabelAnchor, anchor, ), {, return]
[(, x3, ,, y6, ), ;, }, return, result, ;, }, private, boolean, isInternalAnchor, (, ItemLabelAnchor, anchor, ), {, return]
[(, x3, ,, y6, ), ;, }, return, result, ;, }, private, boolean, isInternalAnchor, (, ItemLabelAnchor, anchor, ), {, return]
[(, x3, ,, y6, ), ;, }, return, result, ;, }, private, boolean, isInternalAnchor, (, ItemLabelAnchor, anchor, ), {, return]
[,, y6, ), ;, }, return, result, ;, }, private, boolean, isInternalAnchor, (, ItemLabelAnchor, anchor, ), {, return, anchor, ==]
[,, y6, ), ;, }, return, result, ;, }, private, boolean, isInternalAnchor, (, ItemLabelAnchor, anchor, ), {, return, anchor, ==]
[}, return, result, ;, }, private, boolean, isInternalAnchor, (, ItemLabelAnchor, anchor, ), {, return, anchor, ==, ItemLabelAnchor, ., CENTER, ||]
[}, return, result, ;, }, private, boolean, isInternalAnchor, (, ItemLabelAnchor, anchor, ), {, return, anchor, ==, ItemLabelAnchor, ., CENTER, ||]
[result, ;, }, private, boolean, isInternalAnchor, (, ItemLabelAnchor, anchor, ), {, return, anchor, ==, ItemLabelAnchor, ., CENTER, ||, anchor, ==]
[result, ;, }, private, boolean, isInternalAnchor, (, ItemLabelAnchor, anchor, ), {, return, anchor, ==, ItemLabelAnchor, ., CENTER, ||, anchor, ==]
[boolean, isInternalAnchor, (, ItemLabelAnchor, anchor, ), {, return, anchor, ==, ItemLabelAnchor, ., CENTER, ||, anchor, ==, ItemLabelAnchor, ., INSIDE1, ||]
[boolean, isInternalAnchor, (, ItemLabelAnchor, anchor, ), {, return, anchor, ==, ItemLabelAnchor, ., CENTER, ||, anchor, ==, ItemLabelAnchor, ., INSIDE1, ||]
[(, ItemLabelAnchor, anchor, ), {, return, anchor, ==, ItemLabelAnchor, ., CENTER, ||, anchor, ==, ItemLabelAnchor, ., INSIDE1, ||, anchor, ==]
[(, ItemLabelAnchor, anchor, ), {, return, anchor, ==, ItemLabelAnchor, ., CENTER, ||, anchor, ==, ItemLabelAnchor, ., INSIDE1, ||, anchor, ==]
[{, return, anchor, ==, ItemLabelAnchor, ., CENTER, ||, anchor, ==, ItemLabelAnchor, ., INSIDE1, ||, anchor, ==, ItemLabelAnchor, ., INSIDE2, ||]
[{, return, anchor, ==, ItemLabelAnchor, ., CENTER, ||, anchor, ==, ItemLabelAnchor, ., INSIDE1, ||, anchor, ==, ItemLabelAnchor, ., INSIDE2, ||]
[anchor, ==, ItemLabelAnchor, ., CENTER, ||, anchor, ==, ItemLabelAnchor, ., INSIDE1, ||, anchor, ==, ItemLabelAnchor, ., INSIDE2, ||, anchor, ==]
[anchor, ==, ItemLabelAnchor, ., CENTER, ||, anchor, ==, ItemLabelAnchor, ., INSIDE1, ||, anchor, ==, ItemLabelAnchor, ., INSIDE2, ||, anchor, ==]
[CENTER, ||, anchor, ==, ItemLabelAnchor, ., INSIDE1, ||, anchor, ==, ItemLabelAnchor, ., INSIDE2, ||, anchor, ==, ItemLabelAnchor, ., INSIDE3, ||]
[CENTER, ||, anchor, ==, ItemLabelAnchor, ., INSIDE1, ||, anchor, ==, ItemLabelAnchor, ., INSIDE2, ||, anchor, ==, ItemLabelAnchor, ., INSIDE3, ||]
[anchor, ==, ItemLabelAnchor, ., INSIDE1, ||, anchor, ==, ItemLabelAnchor, ., INSIDE2, ||, anchor, ==, ItemLabelAnchor, ., INSIDE3, ||, anchor, ==]
[anchor, ==, ItemLabelAnchor, ., INSIDE1, ||, anchor, ==, ItemLabelAnchor, ., INSIDE2, ||, anchor, ==, ItemLabelAnchor, ., INSIDE3, ||, anchor, ==]
[INSIDE1, ||, anchor, ==, ItemLabelAnchor, ., INSIDE2, ||, anchor, ==, ItemLabelAnchor, ., INSIDE3, ||, anchor, ==, ItemLabelAnchor, ., INSIDE4, ||]
[INSIDE1, ||, anchor, ==, ItemLabelAnchor, ., INSIDE2, ||, anchor, ==, ItemLabelAnchor, ., INSIDE3, ||, anchor, ==, ItemLabelAnchor, ., INSIDE4, ||]
[anchor, ==, ItemLabelAnchor, ., INSIDE2, ||, anchor, ==, ItemLabelAnchor, ., INSIDE3, ||, anchor, ==, ItemLabelAnchor, ., INSIDE4, ||, anchor, ==]
[anchor, ==, ItemLabelAnchor, ., INSIDE2, ||, anchor, ==, ItemLabelAnchor, ., INSIDE3, ||, anchor, ==, ItemLabelAnchor, ., INSIDE4, ||, anchor, ==]
[INSIDE2, ||, anchor, ==, ItemLabelAnchor, ., INSIDE3, ||, anchor, ==, ItemLabelAnchor, ., INSIDE4, ||, anchor, ==, ItemLabelAnchor, ., INSIDE5, ||]
[INSIDE2, ||, anchor, ==, ItemLabelAnchor, ., INSIDE3, ||, anchor, ==, ItemLabelAnchor, ., INSIDE4, ||, anchor, ==, ItemLabelAnchor, ., INSIDE5, ||]
[anchor, ==, ItemLabelAnchor, ., INSIDE3, ||, anchor, ==, ItemLabelAnchor, ., INSIDE4, ||, anchor, ==, ItemLabelAnchor, ., INSIDE5, ||, anchor, ==]
[anchor, ==, ItemLabelAnchor, ., INSIDE3, ||, anchor, ==, ItemLabelAnchor, ., INSIDE4, ||, anchor, ==, ItemLabelAnchor, ., INSIDE5, ||, anchor, ==]
[INSIDE3, ||, anchor, ==, ItemLabelAnchor, ., INSIDE4, ||, anchor, ==, ItemLabelAnchor, ., INSIDE5, ||, anchor, ==, ItemLabelAnchor, ., INSIDE6, ||]
[INSIDE3, ||, anchor, ==, ItemLabelAnchor, ., INSIDE4, ||, anchor, ==, ItemLabelAnchor, ., INSIDE5, ||, anchor, ==, ItemLabelAnchor, ., INSIDE6, ||]
[anchor, ==, ItemLabelAnchor, ., INSIDE4, ||, anchor, ==, ItemLabelAnchor, ., INSIDE5, ||, anchor, ==, ItemLabelAnchor, ., INSIDE6, ||, anchor, ==]
[anchor, ==, ItemLabelAnchor, ., INSIDE4, ||, anchor, ==, ItemLabelAnchor, ., INSIDE5, ||, anchor, ==, ItemLabelAnchor, ., INSIDE6, ||, anchor, ==]
[INSIDE4, ||, anchor, ==, ItemLabelAnchor, ., INSIDE5, ||, anchor, ==, ItemLabelAnchor, ., INSIDE6, ||, anchor, ==, ItemLabelAnchor, ., INSIDE7, ||]
[INSIDE4, ||, anchor, ==, ItemLabelAnchor, ., INSIDE5, ||, anchor, ==, ItemLabelAnchor, ., INSIDE6, ||, anchor, ==, ItemLabelAnchor, ., INSIDE7, ||]
[anchor, ==, ItemLabelAnchor, ., INSIDE5, ||, anchor, ==, ItemLabelAnchor, ., INSIDE6, ||, anchor, ==, ItemLabelAnchor, ., INSIDE7, ||, anchor, ==]
[anchor, ==, ItemLabelAnchor, ., INSIDE5, ||, anchor, ==, ItemLabelAnchor, ., INSIDE6, ||, anchor, ==, ItemLabelAnchor, ., INSIDE7, ||, anchor, ==]
[INSIDE5, ||, anchor, ==, ItemLabelAnchor, ., INSIDE6, ||, anchor, ==, ItemLabelAnchor, ., INSIDE7, ||, anchor, ==, ItemLabelAnchor, ., INSIDE8, ||]
[INSIDE5, ||, anchor, ==, ItemLabelAnchor, ., INSIDE6, ||, anchor, ==, ItemLabelAnchor, ., INSIDE7, ||, anchor, ==, ItemLabelAnchor, ., INSIDE8, ||]
[anchor, ==, ItemLabelAnchor, ., INSIDE6, ||, anchor, ==, ItemLabelAnchor, ., INSIDE7, ||, anchor, ==, ItemLabelAnchor, ., INSIDE8, ||, anchor, ==]
[anchor, ==, ItemLabelAnchor, ., INSIDE6, ||, anchor, ==, ItemLabelAnchor, ., INSIDE7, ||, anchor, ==, ItemLabelAnchor, ., INSIDE8, ||, anchor, ==]
[INSIDE6, ||, anchor, ==, ItemLabelAnchor, ., INSIDE7, ||, anchor, ==, ItemLabelAnchor, ., INSIDE8, ||, anchor, ==, ItemLabelAnchor, ., INSIDE9, ||]
[INSIDE6, ||, anchor, ==, ItemLabelAnchor, ., INSIDE7, ||, anchor, ==, ItemLabelAnchor, ., INSIDE8, ||, anchor, ==, ItemLabelAnchor, ., INSIDE9, ||]
[anchor, ==, ItemLabelAnchor, ., INSIDE7, ||, anchor, ==, ItemLabelAnchor, ., INSIDE8, ||, anchor, ==, ItemLabelAnchor, ., INSIDE9, ||, anchor, ==]
[anchor, ==, ItemLabelAnchor, ., INSIDE7, ||, anchor, ==, ItemLabelAnchor, ., INSIDE8, ||, anchor, ==, ItemLabelAnchor, ., INSIDE9, ||, anchor, ==]
[INSIDE7, ||, anchor, ==, ItemLabelAnchor, ., INSIDE8, ||, anchor, ==, ItemLabelAnchor, ., INSIDE9, ||, anchor, ==, ItemLabelAnchor, ., INSIDE10, ||]
[INSIDE7, ||, anchor, ==, ItemLabelAnchor, ., INSIDE8, ||, anchor, ==, ItemLabelAnchor, ., INSIDE9, ||, anchor, ==, ItemLabelAnchor, ., INSIDE10, ||]
[anchor, ==, ItemLabelAnchor, ., INSIDE8, ||, anchor, ==, ItemLabelAnchor, ., INSIDE9, ||, anchor, ==, ItemLabelAnchor, ., INSIDE10, ||, anchor, ==]
[anchor, ==, ItemLabelAnchor, ., INSIDE8, ||, anchor, ==, ItemLabelAnchor, ., INSIDE9, ||, anchor, ==, ItemLabelAnchor, ., INSIDE10, ||, anchor, ==]
[INSIDE8, ||, anchor, ==, ItemLabelAnchor, ., INSIDE9, ||, anchor, ==, ItemLabelAnchor, ., INSIDE10, ||, anchor, ==, ItemLabelAnchor, ., INSIDE11, ||]
[INSIDE8, ||, anchor, ==, ItemLabelAnchor, ., INSIDE9, ||, anchor, ==, ItemLabelAnchor, ., INSIDE10, ||, anchor, ==, ItemLabelAnchor, ., INSIDE11, ||]
[anchor, ==, ItemLabelAnchor, ., INSIDE9, ||, anchor, ==, ItemLabelAnchor, ., INSIDE10, ||, anchor, ==, ItemLabelAnchor, ., INSIDE11, ||, anchor, ==]
[anchor, ==, ItemLabelAnchor, ., INSIDE9, ||, anchor, ==, ItemLabelAnchor, ., INSIDE10, ||, anchor, ==, ItemLabelAnchor, ., INSIDE11, ||, anchor, ==]
[., INSIDE11, ||, anchor, ==, ItemLabelAnchor, ., INSIDE12, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[., INSIDE11, ||, anchor, ==, ItemLabelAnchor, ., INSIDE12, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[||, anchor, ==, ItemLabelAnchor, ., INSIDE12, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[., INSIDE12, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, BarRenderer, ), ), {, return]
[true, ;, }, if, (, !, (, obj, instanceof, BarRenderer, ), ), {, return, false, ;, }, BarRenderer, that, =]
[if, (, !, (, obj, instanceof, BarRenderer, ), ), {, return, false, ;, }, BarRenderer, that, =, (, BarRenderer, )]
[obj, instanceof, BarRenderer, ), ), {, return, false, ;, }, BarRenderer, that, =, (, BarRenderer, ), obj, ;, if, (]
[obj, instanceof, BarRenderer, ), ), {, return, false, ;, }, BarRenderer, that, =, (, BarRenderer, ), obj, ;, if, (]
[obj, instanceof, BarRenderer, ), ), {, return, false, ;, }, BarRenderer, that, =, (, BarRenderer, ), obj, ;, if, (]
[), {, return, false, ;, }, BarRenderer, that, =, (, BarRenderer, ), obj, ;, if, (, this, ., base, !=]
[), {, return, false, ;, }, BarRenderer, that, =, (, BarRenderer, ), obj, ;, if, (, this, ., base, !=]
[BarRenderer, that, =, (, BarRenderer, ), obj, ;, if, (, this, ., base, !=, that, ., base, ), {, return]
[), obj, ;, if, (, this, ., base, !=, that, ., base, ), {, return, false, ;, }, if, (]
[), obj, ;, if, (, this, ., base, !=, that, ., base, ), {, return, false, ;, }, if, (]
[), obj, ;, if, (, this, ., base, !=, that, ., base, ), {, return, false, ;, }, if, (]
[(, this, ., base, !=, that, ., base, ), {, return, false, ;, }, if, (, this, ., itemMargin, !=]
[(, this, ., base, !=, that, ., base, ), {, return, false, ;, }, if, (, this, ., itemMargin, !=]
[., base, ), {, return, false, ;, }, if, (, this, ., itemMargin, !=, that, ., itemMargin, ), {, return]
[false, ;, }, if, (, this, ., itemMargin, !=, that, ., itemMargin, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., itemMargin, !=, that, ., itemMargin, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., itemMargin, !=, that, ., itemMargin, ), {, return, false, ;, }, if, (]
[(, this, ., itemMargin, !=, that, ., itemMargin, ), {, return, false, ;, }, if, (, this, ., drawBarOutline, !=]
[(, this, ., itemMargin, !=, that, ., itemMargin, ), {, return, false, ;, }, if, (, this, ., drawBarOutline, !=]
[., itemMargin, ), {, return, false, ;, }, if, (, this, ., drawBarOutline, !=, that, ., drawBarOutline, ), {, return]
[false, ;, }, if, (, this, ., drawBarOutline, !=, that, ., drawBarOutline, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., drawBarOutline, !=, that, ., drawBarOutline, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., drawBarOutline, !=, that, ., drawBarOutline, ), {, return, false, ;, }, if, (]
[(, this, ., drawBarOutline, !=, that, ., drawBarOutline, ), {, return, false, ;, }, if, (, this, ., maximumBarWidth, !=]
[(, this, ., drawBarOutline, !=, that, ., drawBarOutline, ), {, return, false, ;, }, if, (, this, ., maximumBarWidth, !=]
[., drawBarOutline, ), {, return, false, ;, }, if, (, this, ., maximumBarWidth, !=, that, ., maximumBarWidth, ), {, return]
[false, ;, }, if, (, this, ., maximumBarWidth, !=, that, ., maximumBarWidth, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., maximumBarWidth, !=, that, ., maximumBarWidth, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., maximumBarWidth, !=, that, ., maximumBarWidth, ), {, return, false, ;, }, if, (]
[(, this, ., maximumBarWidth, !=, that, ., maximumBarWidth, ), {, return, false, ;, }, if, (, this, ., minimumBarLength, !=]
[(, this, ., maximumBarWidth, !=, that, ., maximumBarWidth, ), {, return, false, ;, }, if, (, this, ., minimumBarLength, !=]
[., maximumBarWidth, ), {, return, false, ;, }, if, (, this, ., minimumBarLength, !=, that, ., minimumBarLength, ), {, return]
[false, ;, }, if, (, this, ., minimumBarLength, !=, that, ., minimumBarLength, ), {, return, false, ;, }, if, (]
[;, }, if, (, this, ., minimumBarLength, !=, that, ., minimumBarLength, ), {, return, false, ;, }, if, (, !]
[;, }, if, (, this, ., minimumBarLength, !=, that, ., minimumBarLength, ), {, return, false, ;, }, if, (, !]
[this, ., minimumBarLength, !=, that, ., minimumBarLength, ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (]
[this, ., minimumBarLength, !=, that, ., minimumBarLength, ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (]
[that, ., minimumBarLength, ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., gradientPaintTransformer, ,]
[that, ., minimumBarLength, ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., gradientPaintTransformer, ,]
[;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., gradientPaintTransformer, ,, that, ., gradientPaintTransformer, ), ), {, return]
[ObjectUtilities, ., equal, (, this, ., gradientPaintTransformer, ,, that, ., gradientPaintTransformer, ), ), {, return, false, ;, }, if, (]
[., equal, (, this, ., gradientPaintTransformer, ,, that, ., gradientPaintTransformer, ), ), {, return, false, ;, }, if, (, !]
[., equal, (, this, ., gradientPaintTransformer, ,, that, ., gradientPaintTransformer, ), ), {, return, false, ;, }, if, (, !]
[., gradientPaintTransformer, ,, that, ., gradientPaintTransformer, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (]
[., gradientPaintTransformer, ,, that, ., gradientPaintTransformer, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (]
[., gradientPaintTransformer, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., positiveItemLabelPositionFallback, ,]
[., gradientPaintTransformer, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., positiveItemLabelPositionFallback, ,]
[;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., positiveItemLabelPositionFallback, ,, that, ., positiveItemLabelPositionFallback, ), ), {, return]
[ObjectUtilities, ., equal, (, this, ., positiveItemLabelPositionFallback, ,, that, ., positiveItemLabelPositionFallback, ), ), {, return, false, ;, }, if, (]
[., equal, (, this, ., positiveItemLabelPositionFallback, ,, that, ., positiveItemLabelPositionFallback, ), ), {, return, false, ;, }, if, (, !]
[., equal, (, this, ., positiveItemLabelPositionFallback, ,, that, ., positiveItemLabelPositionFallback, ), ), {, return, false, ;, }, if, (, !]
[., positiveItemLabelPositionFallback, ,, that, ., positiveItemLabelPositionFallback, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (]
[., positiveItemLabelPositionFallback, ,, that, ., positiveItemLabelPositionFallback, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (]
[., positiveItemLabelPositionFallback, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., negativeItemLabelPositionFallback, ,]
[., positiveItemLabelPositionFallback, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., negativeItemLabelPositionFallback, ,]
[;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., negativeItemLabelPositionFallback, ,, that, ., negativeItemLabelPositionFallback, ), ), {, return]
[ObjectUtilities, ., equal, (, this, ., negativeItemLabelPositionFallback, ,, that, ., negativeItemLabelPositionFallback, ), ), {, return, false, ;, }, if, (]
[., equal, (, this, ., negativeItemLabelPositionFallback, ,, that, ., negativeItemLabelPositionFallback, ), ), {, return, false, ;, }, if, (, !]
[., equal, (, this, ., negativeItemLabelPositionFallback, ,, that, ., negativeItemLabelPositionFallback, ), ), {, return, false, ;, }, if, (, !]
[., equal, (, this, ., negativeItemLabelPositionFallback, ,, that, ., negativeItemLabelPositionFallback, ), ), {, return, false, ;, }, if, (, !]
[,, that, ., negativeItemLabelPositionFallback, ), ), {, return, false, ;, }, if, (, !, this, ., barPainter, ., equals, (]
[,, that, ., negativeItemLabelPositionFallback, ), ), {, return, false, ;, }, if, (, !, this, ., barPainter, ., equals, (]
[return, false, ;, }, if, (, !, this, ., barPainter, ., equals, (, that, ., barPainter, ), ), {, return]
[(, !, this, ., barPainter, ., equals, (, that, ., barPainter, ), ), {, return, false, ;, }, if, (]
[(, !, this, ., barPainter, ., equals, (, that, ., barPainter, ), ), {, return, false, ;, }, if, (]
[(, !, this, ., barPainter, ., equals, (, that, ., barPainter, ), ), {, return, false, ;, }, if, (]
[barPainter, ., equals, (, that, ., barPainter, ), ), {, return, false, ;, }, if, (, this, ., shadowsVisible, !=]
[barPainter, ., equals, (, that, ., barPainter, ), ), {, return, false, ;, }, if, (, this, ., shadowsVisible, !=]
[barPainter, ), ), {, return, false, ;, }, if, (, this, ., shadowsVisible, !=, that, ., shadowsVisible, ), {, return]
[false, ;, }, if, (, this, ., shadowsVisible, !=, that, ., shadowsVisible, ), {, return, false, ;, }, if, (]
[;, }, if, (, this, ., shadowsVisible, !=, that, ., shadowsVisible, ), {, return, false, ;, }, if, (, !]
[;, }, if, (, this, ., shadowsVisible, !=, that, ., shadowsVisible, ), {, return, false, ;, }, if, (, !]
[this, ., shadowsVisible, !=, that, ., shadowsVisible, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (]
[this, ., shadowsVisible, !=, that, ., shadowsVisible, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (]
[that, ., shadowsVisible, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., shadowPaint, ,]
[that, ., shadowsVisible, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., shadowPaint, ,]
[;, }, if, (, !, PaintUtilities, ., equal, (, this, ., shadowPaint, ,, that, ., shadowPaint, ), ), {, return]
[PaintUtilities, ., equal, (, this, ., shadowPaint, ,, that, ., shadowPaint, ), ), {, return, false, ;, }, if, (]
[PaintUtilities, ., equal, (, this, ., shadowPaint, ,, that, ., shadowPaint, ), ), {, return, false, ;, }, if, (]
[PaintUtilities, ., equal, (, this, ., shadowPaint, ,, that, ., shadowPaint, ), ), {, return, false, ;, }, if, (]
[this, ., shadowPaint, ,, that, ., shadowPaint, ), ), {, return, false, ;, }, if, (, this, ., shadowXOffset, !=]
[this, ., shadowPaint, ,, that, ., shadowPaint, ), ), {, return, false, ;, }, if, (, this, ., shadowXOffset, !=]
[shadowPaint, ), ), {, return, false, ;, }, if, (, this, ., shadowXOffset, !=, that, ., shadowXOffset, ), {, return]
[false, ;, }, if, (, this, ., shadowXOffset, !=, that, ., shadowXOffset, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., shadowXOffset, !=, that, ., shadowXOffset, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., shadowXOffset, !=, that, ., shadowXOffset, ), {, return, false, ;, }, if, (]
[(, this, ., shadowXOffset, !=, that, ., shadowXOffset, ), {, return, false, ;, }, if, (, this, ., shadowYOffset, !=]
[(, this, ., shadowXOffset, !=, that, ., shadowXOffset, ), {, return, false, ;, }, if, (, this, ., shadowYOffset, !=]
[., shadowXOffset, ), {, return, false, ;, }, if, (, this, ., shadowYOffset, !=, that, ., shadowYOffset, ), {, return]
[return, false, ;, }, if, (, this, ., shadowYOffset, !=, that, ., shadowYOffset, ), {, return, false, ;, }, return]
[return, false, ;, }, if, (, this, ., shadowYOffset, !=, that, ., shadowYOffset, ), {, return, false, ;, }, return]
[if, (, this, ., shadowYOffset, !=, that, ., shadowYOffset, ), {, return, false, ;, }, return, super, ., equals, (]
[}, return, super, ., equals, (, obj, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {]
[}, return, super, ., equals, (, obj, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {]
[obj, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;]
[obj, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;]
[private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (]
[private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (]
[ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (, this, ., shadowPaint, ,]
[this, ., shadowPaint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {]
[this, ., shadowPaint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {]
[;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;]
[;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;]
[readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., shadowPaint, =]
[readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., shadowPaint, =]
[), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., shadowPaint, =, SerialUtilities, ., readPaint, (]
[,, int, row, ,, int, column, ,, boolean, selected, ,, CategoryItemRendererState, state, ,, Rectangle2D, result, ), {, int, visibleRow, =]
[,, int, row, ,, int, column, ,, boolean, selected, ,, CategoryItemRendererState, state, ,, Rectangle2D, result, ), {, int, visibleRow, =]
[int, column, ,, boolean, selected, ,, CategoryItemRendererState, state, ,, Rectangle2D, result, ), {, int, visibleRow, =, state, ., getVisibleSeriesIndex, (]
[,, CategoryItemRendererState, state, ,, Rectangle2D, result, ), {, int, visibleRow, =, state, ., getVisibleSeriesIndex, (, row, ), ;, if, (]
[,, CategoryItemRendererState, state, ,, Rectangle2D, result, ), {, int, visibleRow, =, state, ., getVisibleSeriesIndex, (, row, ), ;, if, (]
[state, ,, Rectangle2D, result, ), {, int, visibleRow, =, state, ., getVisibleSeriesIndex, (, row, ), ;, if, (, visibleRow, <]
[), {, int, visibleRow, =, state, ., getVisibleSeriesIndex, (, row, ), ;, if, (, visibleRow, <, 0, ), {, return]
[state, ., getVisibleSeriesIndex, (, row, ), ;, if, (, visibleRow, <, 0, ), {, return, null, ;, }, if, (]
[., getVisibleSeriesIndex, (, row, ), ;, if, (, visibleRow, <, 0, ), {, return, null, ;, }, if, (, !]
[., getVisibleSeriesIndex, (, row, ), ;, if, (, visibleRow, <, 0, ), {, return, null, ;, }, if, (, !]
[), ;, if, (, visibleRow, <, 0, ), {, return, null, ;, }, if, (, !, this, ., getItemVisible, (]
[if, (, visibleRow, <, 0, ), {, return, null, ;, }, if, (, !, this, ., getItemVisible, (, row, ,]
[), {, return, null, ;, }, if, (, !, this, ., getItemVisible, (, row, ,, column, ), ), {, return]
[if, (, !, this, ., getItemVisible, (, row, ,, column, ), ), {, return, null, ;, }, Number, dataValue, =]
[if, (, !, this, ., getItemVisible, (, row, ,, column, ), ), {, return, null, ;, }, Number, dataValue, =]
[., getItemVisible, (, row, ,, column, ), ), {, return, null, ;, }, Number, dataValue, =, dataset, ., getValue, (]
[(, row, ,, column, ), ), {, return, null, ;, }, Number, dataValue, =, dataset, ., getValue, (, row, ,]
[), {, return, null, ;, }, Number, dataValue, =, dataset, ., getValue, (, row, ,, column, ), ;, if, (]
[), {, return, null, ;, }, Number, dataValue, =, dataset, ., getValue, (, row, ,, column, ), ;, if, (]
[return, null, ;, }, Number, dataValue, =, dataset, ., getValue, (, row, ,, column, ), ;, if, (, dataValue, ==]
[Number, dataValue, =, dataset, ., getValue, (, row, ,, column, ), ;, if, (, dataValue, ==, null, ), {, return]
[row, ,, column, ), ;, if, (, dataValue, ==, null, ), {, return, null, ;, }, final, double, value, =]
[row, ,, column, ), ;, if, (, dataValue, ==, null, ), {, return, null, ;, }, final, double, value, =]
[null, ), {, return, null, ;, }, final, double, value, =, dataValue, ., doubleValue, (, ), ;, PlotOrientation, orientation, =]
[null, ), {, return, null, ;, }, final, double, value, =, dataValue, ., doubleValue, (, ), ;, PlotOrientation, orientation, =]
[value, =, dataValue, ., doubleValue, (, ), ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, barW0, =]
[dataValue, ., doubleValue, (, ), ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, barW0, =, calculateBarW0, (]
[doubleValue, (, ), ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, barW0, =, calculateBarW0, (, plot, ,]
[), ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, barW0, =, calculateBarW0, (, plot, ,, orientation, ,]
[PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, barW0, =, calculateBarW0, (, plot, ,, orientation, ,, dataArea, ,]
[=, plot, ., getOrientation, (, ), ;, double, barW0, =, calculateBarW0, (, plot, ,, orientation, ,, dataArea, ,, domainAxis, ,]
[., getOrientation, (, ), ;, double, barW0, =, calculateBarW0, (, plot, ,, orientation, ,, dataArea, ,, domainAxis, ,, state, ,]
[(, ), ;, double, barW0, =, calculateBarW0, (, plot, ,, orientation, ,, dataArea, ,, domainAxis, ,, state, ,, visibleRow, ,]
[plot, ,, orientation, ,, dataArea, ,, domainAxis, ,, state, ,, visibleRow, ,, column, ), ;, double, [, ], barL0L1, =]
[orientation, ,, dataArea, ,, domainAxis, ,, state, ,, visibleRow, ,, column, ), ;, double, [, ], barL0L1, =, calculateBarL0L1, (]
[dataArea, ,, domainAxis, ,, state, ,, visibleRow, ,, column, ), ;, double, [, ], barL0L1, =, calculateBarL0L1, (, value, ,]
[dataArea, ,, domainAxis, ,, state, ,, visibleRow, ,, column, ), ;, double, [, ], barL0L1, =, calculateBarL0L1, (, value, ,]
[visibleRow, ,, column, ), ;, double, [, ], barL0L1, =, calculateBarL0L1, (, value, ,, rangeAxis, ., getLowerBound, (, ), ,]
[visibleRow, ,, column, ), ;, double, [, ], barL0L1, =, calculateBarL0L1, (, value, ,, rangeAxis, ., getLowerBound, (, ), ,]
[=, calculateBarL0L1, (, value, ,, rangeAxis, ., getLowerBound, (, ), ,, rangeAxis, ., getUpperBound, (, ), ), ;, if, (]
[=, calculateBarL0L1, (, value, ,, rangeAxis, ., getLowerBound, (, ), ,, rangeAxis, ., getUpperBound, (, ), ), ;, if, (]
[(, value, ,, rangeAxis, ., getLowerBound, (, ), ,, rangeAxis, ., getUpperBound, (, ), ), ;, if, (, barL0L1, ==]
[., getLowerBound, (, ), ,, rangeAxis, ., getUpperBound, (, ), ), ;, if, (, barL0L1, ==, null, ), {, return]
[., getUpperBound, (, ), ), ;, if, (, barL0L1, ==, null, ), {, return, null, ;, }, RectangleEdge, edge, =]
[., getUpperBound, (, ), ), ;, if, (, barL0L1, ==, null, ), {, return, null, ;, }, RectangleEdge, edge, =]
[==, null, ), {, return, null, ;, }, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double, transL0, =]
[==, null, ), {, return, null, ;, }, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double, transL0, =]
[return, null, ;, }, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double, transL0, =, rangeAxis, ., valueToJava2D, (]
[return, null, ;, }, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double, transL0, =, rangeAxis, ., valueToJava2D, (]
[;, }, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double, transL0, =, rangeAxis, ., valueToJava2D, (, barL0L1, []
[edge, =, plot, ., getRangeAxisEdge, (, ), ;, double, transL0, =, rangeAxis, ., valueToJava2D, (, barL0L1, [, 0, ], ,]
[plot, ., getRangeAxisEdge, (, ), ;, double, transL0, =, rangeAxis, ., valueToJava2D, (, barL0L1, [, 0, ], ,, dataArea, ,]
[double, transL0, =, rangeAxis, ., valueToJava2D, (, barL0L1, [, 0, ], ,, dataArea, ,, edge, ), ;, double, transL1, =]
[double, transL0, =, rangeAxis, ., valueToJava2D, (, barL0L1, [, 0, ], ,, dataArea, ,, edge, ), ;, double, transL1, =]
[., valueToJava2D, (, barL0L1, [, 0, ], ,, dataArea, ,, edge, ), ;, double, transL1, =, rangeAxis, ., valueToJava2D, (]
[., valueToJava2D, (, barL0L1, [, 0, ], ,, dataArea, ,, edge, ), ;, double, transL1, =, rangeAxis, ., valueToJava2D, (]
[(, barL0L1, [, 0, ], ,, dataArea, ,, edge, ), ;, double, transL1, =, rangeAxis, ., valueToJava2D, (, barL0L1, []
[0, ], ,, dataArea, ,, edge, ), ;, double, transL1, =, rangeAxis, ., valueToJava2D, (, barL0L1, [, 1, ], ,]
[,, dataArea, ,, edge, ), ;, double, transL1, =, rangeAxis, ., valueToJava2D, (, barL0L1, [, 1, ], ,, dataArea, ,]
[double, transL1, =, rangeAxis, ., valueToJava2D, (, barL0L1, [, 1, ], ,, dataArea, ,, edge, ), ;, boolean, positive, =]
[transL1, =, rangeAxis, ., valueToJava2D, (, barL0L1, [, 1, ], ,, dataArea, ,, edge, ), ;, boolean, positive, =, (]
[transL1, =, rangeAxis, ., valueToJava2D, (, barL0L1, [, 1, ], ,, dataArea, ,, edge, ), ;, boolean, positive, =, (]
[rangeAxis, ., valueToJava2D, (, barL0L1, [, 1, ], ,, dataArea, ,, edge, ), ;, boolean, positive, =, (, value, >=]
[rangeAxis, ., valueToJava2D, (, barL0L1, [, 1, ], ,, dataArea, ,, edge, ), ;, boolean, positive, =, (, value, >=]
[,, dataArea, ,, edge, ), ;, boolean, positive, =, (, value, >=, this, ., base, ), ;, boolean, inverted, =]
[,, dataArea, ,, edge, ), ;, boolean, positive, =, (, value, >=, this, ., base, ), ;, boolean, inverted, =]
[(, value, >=, this, ., base, ), ;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;, double, barL0, =]
[(, value, >=, this, ., base, ), ;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;, double, barL0, =]
[., base, ), ;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;, double, barL0, =, Math, ., min, (]
[), ;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;, double, barL0, =, Math, ., min, (, transL0, ,]
[., isInverted, (, ), ;, double, barL0, =, Math, ., min, (, transL0, ,, transL1, ), ;, double, barLength, =]
[., isInverted, (, ), ;, double, barL0, =, Math, ., min, (, transL0, ,, transL1, ), ;, double, barLength, =]
[;, double, barL0, =, Math, ., min, (, transL0, ,, transL1, ), ;, double, barLength, =, Math, ., abs, (]
[;, double, barL0, =, Math, ., min, (, transL0, ,, transL1, ), ;, double, barLength, =, Math, ., abs, (]
[barL0, =, Math, ., min, (, transL0, ,, transL1, ), ;, double, barLength, =, Math, ., abs, (, transL1, -]
[transL0, ,, transL1, ), ;, double, barLength, =, Math, ., abs, (, transL1, -, transL0, ), ;, double, barLengthAdj, =]
[;, double, barLength, =, Math, ., abs, (, transL1, -, transL0, ), ;, double, barLengthAdj, =, 0.0, ;, if, (]
[;, double, barLength, =, Math, ., abs, (, transL1, -, transL0, ), ;, double, barLengthAdj, =, 0.0, ;, if, (]
[;, double, barLength, =, Math, ., abs, (, transL1, -, transL0, ), ;, double, barLengthAdj, =, 0.0, ;, if, (]
[barLength, =, Math, ., abs, (, transL1, -, transL0, ), ;, double, barLengthAdj, =, 0.0, ;, if, (, barLength, >]
[Math, ., abs, (, transL1, -, transL0, ), ;, double, barLengthAdj, =, 0.0, ;, if, (, barLength, >, 0.0, &&]
[Math, ., abs, (, transL1, -, transL0, ), ;, double, barLengthAdj, =, 0.0, ;, if, (, barLength, >, 0.0, &&]
[abs, (, transL1, -, transL0, ), ;, double, barLengthAdj, =, 0.0, ;, if, (, barLength, >, 0.0, &&, barLength, <]
[), ;, double, barLengthAdj, =, 0.0, ;, if, (, barLength, >, 0.0, &&, barLength, <, getMinimumBarLength, (, ), ), {]
[double, barLengthAdj, =, 0.0, ;, if, (, barLength, >, 0.0, &&, barLength, <, getMinimumBarLength, (, ), ), {, barLengthAdj, =]
[double, barLengthAdj, =, 0.0, ;, if, (, barLength, >, 0.0, &&, barLength, <, getMinimumBarLength, (, ), ), {, barLengthAdj, =]
[;, if, (, barLength, >, 0.0, &&, barLength, <, getMinimumBarLength, (, ), ), {, barLengthAdj, =, getMinimumBarLength, (, ), -]
[&&, barLength, <, getMinimumBarLength, (, ), ), {, barLengthAdj, =, getMinimumBarLength, (, ), -, barLength, ;, }, double, barL0Adj, =]
[{, barLengthAdj, =, getMinimumBarLength, (, ), -, barLength, ;, }, double, barL0Adj, =, 0.0, ;, RectangleEdge, barBase, ;, if, (]
[{, barLengthAdj, =, getMinimumBarLength, (, ), -, barLength, ;, }, double, barL0Adj, =, 0.0, ;, RectangleEdge, barBase, ;, if, (]
[=, getMinimumBarLength, (, ), -, barLength, ;, }, double, barL0Adj, =, 0.0, ;, RectangleEdge, barBase, ;, if, (, orientation, ==]
[=, getMinimumBarLength, (, ), -, barLength, ;, }, double, barL0Adj, =, 0.0, ;, RectangleEdge, barBase, ;, if, (, orientation, ==]
[}, double, barL0Adj, =, 0.0, ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (]
[}, double, barL0Adj, =, 0.0, ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (]
[}, double, barL0Adj, =, 0.0, ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (]
[barL0Adj, =, 0.0, ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&]
[0.0, ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||]
[0.0, ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||]
[;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !]
[barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !, positive, &&]
[;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !, positive, &&, !]
[orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !, positive, &&, !, inverted, ), {]
[PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !, positive, &&, !, inverted, ), {, barL0Adj, =]
[HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !, positive, &&, !, inverted, ), {, barL0Adj, =, barLengthAdj, ;]
[{, if, (, positive, &&, inverted, ||, !, positive, &&, !, inverted, ), {, barL0Adj, =, barLengthAdj, ;, barBase, =]
[{, if, (, positive, &&, inverted, ||, !, positive, &&, !, inverted, ), {, barL0Adj, =, barLengthAdj, ;, barBase, =]
[!, positive, &&, !, inverted, ), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {]
[&&, !, inverted, ), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =]
[&&, !, inverted, ), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =]
[=, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (]
[=, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (]
[=, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (]
[., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&]
[RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&, !]
[}, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&, !, inverted, ||]
[}, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&, !, inverted, ||]
[else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&, !, inverted, ||, !]
[barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&, !, inverted, ||, !, positive, &&]
[., LEFT, ;, }, }, else, {, if, (, positive, &&, !, inverted, ||, !, positive, &&, inverted, ), {]
[;, }, }, else, {, if, (, positive, &&, !, inverted, ||, !, positive, &&, inverted, ), {, barL0Adj, =]
[}, else, {, if, (, positive, &&, !, inverted, ||, !, positive, &&, inverted, ), {, barL0Adj, =, barLengthAdj, ;]
[{, if, (, positive, &&, !, inverted, ||, !, positive, &&, inverted, ), {, barL0Adj, =, barLengthAdj, ;, barBase, =]
[{, if, (, positive, &&, !, inverted, ||, !, positive, &&, inverted, ), {, barL0Adj, =, barLengthAdj, ;, barBase, =]
[||, !, positive, &&, inverted, ), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {]
[positive, &&, inverted, ), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =]
[positive, &&, inverted, ), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =]
[barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, Rectangle2D, bar, =]
[BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, Rectangle2D, bar, =, null, ;, if, (]
[BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, Rectangle2D, bar, =, null, ;, if, (]
[}, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, Rectangle2D, bar, =, null, ;, if, (, orientation, ==]
[}, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, Rectangle2D, bar, =, null, ;, if, (, orientation, ==]
[RectangleEdge, ., TOP, ;, }, }, Rectangle2D, bar, =, null, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {]
[TOP, ;, }, }, Rectangle2D, bar, =, null, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, bar, =]
[bar, =, null, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (]
[bar, =, null, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (]
[null, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (, barL0, -]
[if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (, barL0, -, barL0Adj, ,]
[orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (, barL0, -, barL0Adj, ,, barW0, ,]
[orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (, barL0, -, barL0Adj, ,, barW0, ,]
[PlotOrientation, ., HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (, barL0, -, barL0Adj, ,, barW0, ,, barLength, +]
[HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (, barL0, -, barL0Adj, ,, barW0, ,, barLength, +, barLengthAdj, ,]
[HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (, barL0, -, barL0Adj, ,, barW0, ,, barLength, +, barLengthAdj, ,]
[barL0, -, barL0Adj, ,, barW0, ,, barLength, +, barLengthAdj, ,, state, ., getBarWidth, (, ), ), ;, }, else, {]
[barL0Adj, ,, barW0, ,, barLength, +, barLengthAdj, ,, state, ., getBarWidth, (, ), ), ;, }, else, {, bar, =]
[+, barLengthAdj, ,, state, ., getBarWidth, (, ), ), ;, }, else, {, bar, =, new, Rectangle2D, ., Double, (]
[,, state, ., getBarWidth, (, ), ), ;, }, else, {, bar, =, new, Rectangle2D, ., Double, (, barW0, ,]
[,, state, ., getBarWidth, (, ), ), ;, }, else, {, bar, =, new, Rectangle2D, ., Double, (, barW0, ,]
[., getBarWidth, (, ), ), ;, }, else, {, bar, =, new, Rectangle2D, ., Double, (, barW0, ,, barL0, -]
[(, ), ), ;, }, else, {, bar, =, new, Rectangle2D, ., Double, (, barW0, ,, barL0, -, barL0Adj, ,]
[(, ), ), ;, }, else, {, bar, =, new, Rectangle2D, ., Double, (, barW0, ,, barL0, -, barL0Adj, ,]
[{, bar, =, new, Rectangle2D, ., Double, (, barW0, ,, barL0, -, barL0Adj, ,, state, ., getBarWidth, (, ), ,]
[{, bar, =, new, Rectangle2D, ., Double, (, barW0, ,, barL0, -, barL0Adj, ,, state, ., getBarWidth, (, ), ,]
[=, new, Rectangle2D, ., Double, (, barW0, ,, barL0, -, barL0Adj, ,, state, ., getBarWidth, (, ), ,, barLength, +]
[(, barW0, ,, barL0, -, barL0Adj, ,, state, ., getBarWidth, (, ), ,, barLength, +, barLengthAdj, ), ;, }, return]
