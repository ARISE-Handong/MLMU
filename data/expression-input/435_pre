[., VariableRenamingPolicy, ;, import, java, ., util, ., ArrayList, ;, public, class, SecureCompiler, {, private, static, final, String, COMPILATION_UNCOMPLETED_MSG, =]
[ArrayList, ;, public, class, SecureCompiler, {, private, static, final, String, COMPILATION_UNCOMPLETED_MSG, =, "No compilation has been completed yet.", ;, private, static, final, String, COMPILATION_UNSUCCESSFUL_MSG, =]
[final, String, COMPILATION_UNCOMPLETED_MSG, =, "No compilation has been completed yet.", ;, private, static, final, String, COMPILATION_UNSUCCESSFUL_MSG, =, "The last compilation was not successful.", ;, private, static, final, String, COMPILATION_ALREADY_COMPLETED_MSG, =]
[Compiler, compiler, ;, private, CompilerOptions, options, ;, private, JsonMLAst, sourceAst, ;, private, Report, report, ;, public, SecureCompiler, (, ), {]
[;, private, CompilerOptions, options, ;, private, JsonMLAst, sourceAst, ;, private, Report, report, ;, public, SecureCompiler, (, ), {, compiler, =]
[private, JsonMLAst, sourceAst, ;, private, Report, report, ;, public, SecureCompiler, (, ), {, compiler, =, new, Compiler, (, ), ;]
[sourceAst, ;, private, Report, report, ;, public, SecureCompiler, (, ), {, compiler, =, new, Compiler, (, ), ;, options, =]
[compiler, =, new, Compiler, (, ), ;, options, =, getSecureCompilerOptions, (, ), ;, }, public, JsonML, getJsonML, (, ), {]
[compiler, =, new, Compiler, (, ), ;, options, =, getSecureCompilerOptions, (, ), ;, }, public, JsonML, getJsonML, (, ), {]
[(, ), ;, options, =, getSecureCompilerOptions, (, ), ;, }, public, JsonML, getJsonML, (, ), {, Preconditions, ., checkState, (]
[(, ), ;, options, =, getSecureCompilerOptions, (, ), ;, }, public, JsonML, getJsonML, (, ), {, Preconditions, ., checkState, (]
[;, options, =, getSecureCompilerOptions, (, ), ;, }, public, JsonML, getJsonML, (, ), {, Preconditions, ., checkState, (, report, !=]
[=, getSecureCompilerOptions, (, ), ;, }, public, JsonML, getJsonML, (, ), {, Preconditions, ., checkState, (, report, !=, null, ,]
[), ;, }, public, JsonML, getJsonML, (, ), {, Preconditions, ., checkState, (, report, !=, null, ,, COMPILATION_UNCOMPLETED_MSG, ), ;]
[), ;, }, public, JsonML, getJsonML, (, ), {, Preconditions, ., checkState, (, report, !=, null, ,, COMPILATION_UNCOMPLETED_MSG, ), ;]
[JsonML, getJsonML, (, ), {, Preconditions, ., checkState, (, report, !=, null, ,, COMPILATION_UNCOMPLETED_MSG, ), ;, Preconditions, ., checkState, (]
[JsonML, getJsonML, (, ), {, Preconditions, ., checkState, (, report, !=, null, ,, COMPILATION_UNCOMPLETED_MSG, ), ;, Preconditions, ., checkState, (]
[{, Preconditions, ., checkState, (, report, !=, null, ,, COMPILATION_UNCOMPLETED_MSG, ), ;, Preconditions, ., checkState, (, report, ., success, ,]
[(, report, !=, null, ,, COMPILATION_UNCOMPLETED_MSG, ), ;, Preconditions, ., checkState, (, report, ., success, ,, COMPILATION_UNSUCCESSFUL_MSG, ), ;, return]
[(, report, !=, null, ,, COMPILATION_UNCOMPLETED_MSG, ), ;, Preconditions, ., checkState, (, report, ., success, ,, COMPILATION_UNSUCCESSFUL_MSG, ), ;, return]
[., success, ,, COMPILATION_UNSUCCESSFUL_MSG, ), ;, return, sourceAst, ., convertToJsonML, (, ), ;, }, public, String, getString, (, ), {]
[., success, ,, COMPILATION_UNSUCCESSFUL_MSG, ), ;, return, sourceAst, ., convertToJsonML, (, ), ;, }, public, String, getString, (, ), {]
[), ;, return, sourceAst, ., convertToJsonML, (, ), ;, }, public, String, getString, (, ), {, Preconditions, ., checkState, (]
[), ;, return, sourceAst, ., convertToJsonML, (, ), ;, }, public, String, getString, (, ), {, Preconditions, ., checkState, (]
[return, sourceAst, ., convertToJsonML, (, ), ;, }, public, String, getString, (, ), {, Preconditions, ., checkState, (, report, !=]
[., convertToJsonML, (, ), ;, }, public, String, getString, (, ), {, Preconditions, ., checkState, (, report, !=, null, ,]
[), ;, }, public, String, getString, (, ), {, Preconditions, ., checkState, (, report, !=, null, ,, COMPILATION_UNCOMPLETED_MSG, ), ;]
[), ;, }, public, String, getString, (, ), {, Preconditions, ., checkState, (, report, !=, null, ,, COMPILATION_UNCOMPLETED_MSG, ), ;]
[String, getString, (, ), {, Preconditions, ., checkState, (, report, !=, null, ,, COMPILATION_UNCOMPLETED_MSG, ), ;, Preconditions, ., checkState, (]
[String, getString, (, ), {, Preconditions, ., checkState, (, report, !=, null, ,, COMPILATION_UNCOMPLETED_MSG, ), ;, Preconditions, ., checkState, (]
[{, Preconditions, ., checkState, (, report, !=, null, ,, COMPILATION_UNCOMPLETED_MSG, ), ;, Preconditions, ., checkState, (, report, ., success, ,]
[(, report, !=, null, ,, COMPILATION_UNCOMPLETED_MSG, ), ;, Preconditions, ., checkState, (, report, ., success, ,, COMPILATION_UNSUCCESSFUL_MSG, ), ;, return]
[(, report, !=, null, ,, COMPILATION_UNCOMPLETED_MSG, ), ;, Preconditions, ., checkState, (, report, ., success, ,, COMPILATION_UNSUCCESSFUL_MSG, ), ;, return]
[., success, ,, COMPILATION_UNSUCCESSFUL_MSG, ), ;, return, compiler, ., toSource, (, ), ;, }, public, Report, getReport, (, ), {]
[., success, ,, COMPILATION_UNSUCCESSFUL_MSG, ), ;, return, compiler, ., toSource, (, ), ;, }, public, Report, getReport, (, ), {]
[), ;, return, compiler, ., toSource, (, ), ;, }, public, Report, getReport, (, ), {, Preconditions, ., checkState, (]
[), ;, return, compiler, ., toSource, (, ), ;, }, public, Report, getReport, (, ), {, Preconditions, ., checkState, (]
[return, compiler, ., toSource, (, ), ;, }, public, Report, getReport, (, ), {, Preconditions, ., checkState, (, report, !=]
[., toSource, (, ), ;, }, public, Report, getReport, (, ), {, Preconditions, ., checkState, (, report, !=, null, ,]
[;, }, public, Report, getReport, (, ), {, Preconditions, ., checkState, (, report, !=, null, ,, COMPILATION_UNCOMPLETED_MSG, ), ;, return]
[!=, null, ,, COMPILATION_UNCOMPLETED_MSG, ), ;, return, report, ;, }, public, void, compile, (, JsonML, source, ), {, if, (]
[!=, null, ,, COMPILATION_UNCOMPLETED_MSG, ), ;, return, report, ;, }, public, void, compile, (, JsonML, source, ), {, if, (]
[,, COMPILATION_UNCOMPLETED_MSG, ), ;, return, report, ;, }, public, void, compile, (, JsonML, source, ), {, if, (, report, !=]
[return, report, ;, }, public, void, compile, (, JsonML, source, ), {, if, (, report, !=, null, ), {, throw]
[}, public, void, compile, (, JsonML, source, ), {, if, (, report, !=, null, ), {, throw, new, IllegalStateException, (]
[(, JsonML, source, ), {, if, (, report, !=, null, ), {, throw, new, IllegalStateException, (, COMPILATION_ALREADY_COMPLETED_MSG, ), ;, }]
[source, ), {, if, (, report, !=, null, ), {, throw, new, IllegalStateException, (, COMPILATION_ALREADY_COMPLETED_MSG, ), ;, }, sourceAst, =]
[if, (, report, !=, null, ), {, throw, new, IllegalStateException, (, COMPILATION_ALREADY_COMPLETED_MSG, ), ;, }, sourceAst, =, new, JsonMLAst, (]
[{, throw, new, IllegalStateException, (, COMPILATION_ALREADY_COMPLETED_MSG, ), ;, }, sourceAst, =, new, JsonMLAst, (, source, ), ;, CompilerInput, input, =]
[IllegalStateException, (, COMPILATION_ALREADY_COMPLETED_MSG, ), ;, }, sourceAst, =, new, JsonMLAst, (, source, ), ;, CompilerInput, input, =, new, CompilerInput, (]
[COMPILATION_ALREADY_COMPLETED_MSG, ), ;, }, sourceAst, =, new, JsonMLAst, (, source, ), ;, CompilerInput, input, =, new, CompilerInput, (, sourceAst, ,]
[;, }, sourceAst, =, new, JsonMLAst, (, source, ), ;, CompilerInput, input, =, new, CompilerInput, (, sourceAst, ,, "[[jsonmlsource]]", ,]
[(, source, ), ;, CompilerInput, input, =, new, CompilerInput, (, sourceAst, ,, "[[jsonmlsource]]", ,, false, ), ;, JSModule, module, =]
[;, CompilerInput, input, =, new, CompilerInput, (, sourceAst, ,, "[[jsonmlsource]]", ,, false, ), ;, JSModule, module, =, new, JSModule, (]
[=, new, CompilerInput, (, sourceAst, ,, "[[jsonmlsource]]", ,, false, ), ;, JSModule, module, =, new, JSModule, (, "[[jsonmlmodule]]", ), ;]
[=, new, CompilerInput, (, sourceAst, ,, "[[jsonmlsource]]", ,, false, ), ;, JSModule, module, =, new, JSModule, (, "[[jsonmlmodule]]", ), ;]
[sourceAst, ,, "[[jsonmlsource]]", ,, false, ), ;, JSModule, module, =, new, JSModule, (, "[[jsonmlmodule]]", ), ;, module, ., add, (]
[;, JSModule, module, =, new, JSModule, (, "[[jsonmlmodule]]", ), ;, module, ., add, (, input, ), ;, Result, result, =]
[;, JSModule, module, =, new, JSModule, (, "[[jsonmlmodule]]", ), ;, module, ., add, (, input, ), ;, Result, result, =]
[new, JSModule, (, "[[jsonmlmodule]]", ), ;, module, ., add, (, input, ), ;, Result, result, =, compiler, ., compileModules, (]
[new, JSModule, (, "[[jsonmlmodule]]", ), ;, module, ., add, (, input, ), ;, Result, result, =, compiler, ., compileModules, (]
[(, input, ), ;, Result, result, =, compiler, ., compileModules, (, ImmutableList, ., <, SourceFile, >, of, (, ), ,]
[(, input, ), ;, Result, result, =, compiler, ., compileModules, (, ImmutableList, ., <, SourceFile, >, of, (, ), ,]
[Result, result, =, compiler, ., compileModules, (, ImmutableList, ., <, SourceFile, >, of, (, ), ,, ImmutableList, ., of, (]
[compiler, ., compileModules, (, ImmutableList, ., <, SourceFile, >, of, (, ), ,, ImmutableList, ., of, (, module, ), ,]
[(, ImmutableList, ., <, SourceFile, >, of, (, ), ,, ImmutableList, ., of, (, module, ), ,, options, ), ;]
[., <, SourceFile, >, of, (, ), ,, ImmutableList, ., of, (, module, ), ,, options, ), ;, report, =]
[SourceFile, >, of, (, ), ,, ImmutableList, ., of, (, module, ), ,, options, ), ;, report, =, generateReport, (]
[options, ), ;, report, =, generateReport, (, result, ), ;, }, private, CompilerOptions, getSecureCompilerOptions, (, ), {, CompilerOptions, options, =]
[generateReport, (, result, ), ;, }, private, CompilerOptions, getSecureCompilerOptions, (, ), {, CompilerOptions, options, =, new, CompilerOptions, (, ), ;]
[generateReport, (, result, ), ;, }, private, CompilerOptions, getSecureCompilerOptions, (, ), {, CompilerOptions, options, =, new, CompilerOptions, (, ), ;]
[;, }, private, CompilerOptions, getSecureCompilerOptions, (, ), {, CompilerOptions, options, =, new, CompilerOptions, (, ), ;, options, ., variableRenaming, =]
[;, }, private, CompilerOptions, getSecureCompilerOptions, (, ), {, CompilerOptions, options, =, new, CompilerOptions, (, ), ;, options, ., variableRenaming, =]
[getSecureCompilerOptions, (, ), {, CompilerOptions, options, =, new, CompilerOptions, (, ), ;, options, ., variableRenaming, =, VariableRenamingPolicy, ., OFF, ;]
[getSecureCompilerOptions, (, ), {, CompilerOptions, options, =, new, CompilerOptions, (, ), ;, options, ., variableRenaming, =, VariableRenamingPolicy, ., OFF, ;]
[CompilerOptions, options, =, new, CompilerOptions, (, ), ;, options, ., variableRenaming, =, VariableRenamingPolicy, ., OFF, ;, options, ., setInlineVariables, (]
[CompilerOptions, options, =, new, CompilerOptions, (, ), ;, options, ., variableRenaming, =, VariableRenamingPolicy, ., OFF, ;, options, ., setInlineVariables, (]
[(, ), ;, options, ., variableRenaming, =, VariableRenamingPolicy, ., OFF, ;, options, ., setInlineVariables, (, Reach, ., LOCAL_ONLY, ), ;]
[(, ), ;, options, ., variableRenaming, =, VariableRenamingPolicy, ., OFF, ;, options, ., setInlineVariables, (, Reach, ., LOCAL_ONLY, ), ;]
[., variableRenaming, =, VariableRenamingPolicy, ., OFF, ;, options, ., setInlineVariables, (, Reach, ., LOCAL_ONLY, ), ;, options, ., inlineLocalFunctions, =]
[=, VariableRenamingPolicy, ., OFF, ;, options, ., setInlineVariables, (, Reach, ., LOCAL_ONLY, ), ;, options, ., inlineLocalFunctions, =, true, ;]
[=, VariableRenamingPolicy, ., OFF, ;, options, ., setInlineVariables, (, Reach, ., LOCAL_ONLY, ), ;, options, ., inlineLocalFunctions, =, true, ;]
[;, options, ., setInlineVariables, (, Reach, ., LOCAL_ONLY, ), ;, options, ., inlineLocalFunctions, =, true, ;, options, ., checkGlobalThisLevel, =]
[;, options, ., setInlineVariables, (, Reach, ., LOCAL_ONLY, ), ;, options, ., inlineLocalFunctions, =, true, ;, options, ., checkGlobalThisLevel, =]
[(, Reach, ., LOCAL_ONLY, ), ;, options, ., inlineLocalFunctions, =, true, ;, options, ., checkGlobalThisLevel, =, CheckLevel, ., OFF, ;]
[(, Reach, ., LOCAL_ONLY, ), ;, options, ., inlineLocalFunctions, =, true, ;, options, ., checkGlobalThisLevel, =, CheckLevel, ., OFF, ;]
[), ;, options, ., inlineLocalFunctions, =, true, ;, options, ., checkGlobalThisLevel, =, CheckLevel, ., OFF, ;, options, ., coalesceVariableNames, =]
[options, ., inlineLocalFunctions, =, true, ;, options, ., checkGlobalThisLevel, =, CheckLevel, ., OFF, ;, options, ., coalesceVariableNames, =, true, ;]
[options, ., inlineLocalFunctions, =, true, ;, options, ., checkGlobalThisLevel, =, CheckLevel, ., OFF, ;, options, ., coalesceVariableNames, =, true, ;]
[true, ;, options, ., checkGlobalThisLevel, =, CheckLevel, ., OFF, ;, options, ., coalesceVariableNames, =, true, ;, options, ., deadAssignmentElimination, =]
[options, ., checkGlobalThisLevel, =, CheckLevel, ., OFF, ;, options, ., coalesceVariableNames, =, true, ;, options, ., deadAssignmentElimination, =, true, ;]
[options, ., checkGlobalThisLevel, =, CheckLevel, ., OFF, ;, options, ., coalesceVariableNames, =, true, ;, options, ., deadAssignmentElimination, =, true, ;]
[CheckLevel, ., OFF, ;, options, ., coalesceVariableNames, =, true, ;, options, ., deadAssignmentElimination, =, true, ;, options, ., collapseVariableDeclarations, =]
[OFF, ;, options, ., coalesceVariableNames, =, true, ;, options, ., deadAssignmentElimination, =, true, ;, options, ., collapseVariableDeclarations, =, true, ;]
[OFF, ;, options, ., coalesceVariableNames, =, true, ;, options, ., deadAssignmentElimination, =, true, ;, options, ., collapseVariableDeclarations, =, true, ;]
[coalesceVariableNames, =, true, ;, options, ., deadAssignmentElimination, =, true, ;, options, ., collapseVariableDeclarations, =, true, ;, options, ., convertToDottedProperties, =]
[true, ;, options, ., deadAssignmentElimination, =, true, ;, options, ., collapseVariableDeclarations, =, true, ;, options, ., convertToDottedProperties, =, true, ;]
[true, ;, options, ., deadAssignmentElimination, =, true, ;, options, ., collapseVariableDeclarations, =, true, ;, options, ., convertToDottedProperties, =, true, ;]
[deadAssignmentElimination, =, true, ;, options, ., collapseVariableDeclarations, =, true, ;, options, ., convertToDottedProperties, =, true, ;, options, ., labelRenaming, =]
[true, ;, options, ., collapseVariableDeclarations, =, true, ;, options, ., convertToDottedProperties, =, true, ;, options, ., labelRenaming, =, true, ;]
[true, ;, options, ., collapseVariableDeclarations, =, true, ;, options, ., convertToDottedProperties, =, true, ;, options, ., labelRenaming, =, true, ;]
[collapseVariableDeclarations, =, true, ;, options, ., convertToDottedProperties, =, true, ;, options, ., labelRenaming, =, true, ;, options, ., removeDeadCode, =]
[true, ;, options, ., convertToDottedProperties, =, true, ;, options, ., labelRenaming, =, true, ;, options, ., removeDeadCode, =, true, ;]
[true, ;, options, ., convertToDottedProperties, =, true, ;, options, ., labelRenaming, =, true, ;, options, ., removeDeadCode, =, true, ;]
[convertToDottedProperties, =, true, ;, options, ., labelRenaming, =, true, ;, options, ., removeDeadCode, =, true, ;, options, ., optimizeArgumentsArray, =]
[true, ;, options, ., labelRenaming, =, true, ;, options, ., removeDeadCode, =, true, ;, options, ., optimizeArgumentsArray, =, true, ;]
[true, ;, options, ., labelRenaming, =, true, ;, options, ., removeDeadCode, =, true, ;, options, ., optimizeArgumentsArray, =, true, ;]
[labelRenaming, =, true, ;, options, ., removeDeadCode, =, true, ;, options, ., optimizeArgumentsArray, =, true, ;, options, ., removeUnusedVars, =]
[true, ;, options, ., removeDeadCode, =, true, ;, options, ., optimizeArgumentsArray, =, true, ;, options, ., removeUnusedVars, =, false, ;]
[true, ;, options, ., removeDeadCode, =, true, ;, options, ., optimizeArgumentsArray, =, true, ;, options, ., removeUnusedVars, =, false, ;]
[removeDeadCode, =, true, ;, options, ., optimizeArgumentsArray, =, true, ;, options, ., removeUnusedVars, =, false, ;, options, ., removeUnusedLocalVars, =]
[;, options, ., optimizeArgumentsArray, =, true, ;, options, ., removeUnusedVars, =, false, ;, options, ., removeUnusedLocalVars, =, true, ;, return]
[removeUnusedVars, =, false, ;, options, ., removeUnusedLocalVars, =, true, ;, return, options, ;, }, public, void, enableFoldConstant, (, ), {]
[removeUnusedVars, =, false, ;, options, ., removeUnusedLocalVars, =, true, ;, return, options, ;, }, public, void, enableFoldConstant, (, ), {]
[options, ., removeUnusedLocalVars, =, true, ;, return, options, ;, }, public, void, enableFoldConstant, (, ), {, options, ., foldConstants, =]
[enableFoldConstant, (, ), {, options, ., foldConstants, =, true, ;, }, Report, generateReport, (, Result, result, ), {, if, (]
[enableFoldConstant, (, ), {, options, ., foldConstants, =, true, ;, }, Report, generateReport, (, Result, result, ), {, if, (]
[), {, options, ., foldConstants, =, true, ;, }, Report, generateReport, (, Result, result, ), {, if, (, result, ==]
[foldConstants, =, true, ;, }, Report, generateReport, (, Result, result, ), {, if, (, result, ==, null, ), {, return]
[result, ), {, if, (, result, ==, null, ), {, return, null, ;, }, ArrayList, <, JsonMLError, >, errors, =]
[result, ), {, if, (, result, ==, null, ), {, return, null, ;, }, ArrayList, <, JsonMLError, >, errors, =]
[null, ;, }, ArrayList, <, JsonMLError, >, errors, =, Lists, ., newArrayList, (, ), ;, for, (, JSError, error, :]
[null, ;, }, ArrayList, <, JsonMLError, >, errors, =, Lists, ., newArrayList, (, ), ;, for, (, JSError, error, :]
[JsonMLError, >, errors, =, Lists, ., newArrayList, (, ), ;, for, (, JSError, error, :, result, ., errors, ), {]
[JsonMLError, >, errors, =, Lists, ., newArrayList, (, ), ;, for, (, JSError, error, :, result, ., errors, ), {]
[Lists, ., newArrayList, (, ), ;, for, (, JSError, error, :, result, ., errors, ), {, errors, ., add, (]
[Lists, ., newArrayList, (, ), ;, for, (, JSError, error, :, result, ., errors, ), {, errors, ., add, (]
[), ;, for, (, JSError, error, :, result, ., errors, ), {, errors, ., add, (, JsonMLError, ., make, (]
[for, (, JSError, error, :, result, ., errors, ), {, errors, ., add, (, JsonMLError, ., make, (, error, ,]
[., add, (, JsonMLError, ., make, (, error, ,, sourceAst, ), ), ;, }, ArrayList, <, JsonMLError, >, warnings, =]
[., add, (, JsonMLError, ., make, (, error, ,, sourceAst, ), ), ;, }, ArrayList, <, JsonMLError, >, warnings, =]
[), ;, }, ArrayList, <, JsonMLError, >, warnings, =, Lists, ., newArrayList, (, ), ;, for, (, JSError, warning, :]
[), ;, }, ArrayList, <, JsonMLError, >, warnings, =, Lists, ., newArrayList, (, ), ;, for, (, JSError, warning, :]
[JsonMLError, >, warnings, =, Lists, ., newArrayList, (, ), ;, for, (, JSError, warning, :, result, ., warnings, ), {]
[JsonMLError, >, warnings, =, Lists, ., newArrayList, (, ), ;, for, (, JSError, warning, :, result, ., warnings, ), {]
[Lists, ., newArrayList, (, ), ;, for, (, JSError, warning, :, result, ., warnings, ), {, warnings, ., add, (]
[Lists, ., newArrayList, (, ), ;, for, (, JSError, warning, :, result, ., warnings, ), {, warnings, ., add, (]
[), ;, for, (, JSError, warning, :, result, ., warnings, ), {, warnings, ., add, (, JsonMLError, ., make, (]
[for, (, JSError, warning, :, result, ., warnings, ), {, warnings, ., add, (, JsonMLError, ., make, (, warning, ,]
[., warnings, ), {, warnings, ., add, (, JsonMLError, ., make, (, warning, ,, sourceAst, ), ), ;, }, return]
[{, warnings, ., add, (, JsonMLError, ., make, (, warning, ,, sourceAst, ), ), ;, }, return, new, Report, (]
[{, warnings, ., add, (, JsonMLError, ., make, (, warning, ,, sourceAst, ), ), ;, }, return, new, Report, (]
[(, JsonMLError, ., make, (, warning, ,, sourceAst, ), ), ;, }, return, new, Report, (, errors, ., toArray, (]
[make, (, warning, ,, sourceAst, ), ), ;, }, return, new, Report, (, errors, ., toArray, (, new, JsonMLError, []
[sourceAst, ), ), ;, }, return, new, Report, (, errors, ., toArray, (, new, JsonMLError, [, 0, ], ), ,]
[sourceAst, ), ), ;, }, return, new, Report, (, errors, ., toArray, (, new, JsonMLError, [, 0, ], ), ,]
[}, return, new, Report, (, errors, ., toArray, (, new, JsonMLError, [, 0, ], ), ,, warnings, ., toArray, (]
[Report, (, errors, ., toArray, (, new, JsonMLError, [, 0, ], ), ,, warnings, ., toArray, (, new, JsonMLError, []
[final, JsonMLError, [, ], warnings, ;, private, Report, (, JsonMLError, [, ], errors, ,, JsonMLError, [, ], warnings, ), {]
[final, JsonMLError, [, ], warnings, ;, private, Report, (, JsonMLError, [, ], errors, ,, JsonMLError, [, ], warnings, ), {]
[warnings, ;, private, Report, (, JsonMLError, [, ], errors, ,, JsonMLError, [, ], warnings, ), {, this, ., success, =]
[warnings, ;, private, Report, (, JsonMLError, [, ], errors, ,, JsonMLError, [, ], warnings, ), {, this, ., success, =]
[warnings, ;, private, Report, (, JsonMLError, [, ], errors, ,, JsonMLError, [, ], warnings, ), {, this, ., success, =]
[(, JsonMLError, [, ], errors, ,, JsonMLError, [, ], warnings, ), {, this, ., success, =, errors, ., length, ==]
[[, ], errors, ,, JsonMLError, [, ], warnings, ), {, this, ., success, =, errors, ., length, ==, 0, ;]
[[, ], errors, ,, JsonMLError, [, ], warnings, ), {, this, ., success, =, errors, ., length, ==, 0, ;]
[JsonMLError, [, ], warnings, ), {, this, ., success, =, errors, ., length, ==, 0, ;, this, ., errors, =]
[], warnings, ), {, this, ., success, =, errors, ., length, ==, 0, ;, this, ., errors, =, errors, ;]
[], warnings, ), {, this, ., success, =, errors, ., length, ==, 0, ;, this, ., errors, =, errors, ;]
[this, ., success, =, errors, ., length, ==, 0, ;, this, ., errors, =, errors, ;, this, ., warnings, =]
[this, ., errors, =, errors, ;, this, ., warnings, =, warnings, ;, }, public, boolean, isSuccessful, (, ), {, return]
[}, public, boolean, isSuccessful, (, ), {, return, success, ;, }, public, JsonMLError, [, ], getErrors, (, ), {, return]
[JsonMLError, [, ], getErrors, (, ), {, return, errors, ;, }, public, JsonMLError, [, ], getWarnings, (, ), {, return]
