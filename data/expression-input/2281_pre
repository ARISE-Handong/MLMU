[io, ., IOException, ;, final, class, Base64VLQ, {, private, Base64VLQ, (, ), {, }, private, static, final, int, VLQ_BASE_SHIFT, =]
[private, Base64VLQ, (, ), {, }, private, static, final, int, VLQ_BASE_SHIFT, =, 5, ;, private, static, final, int, VLQ_BASE, =]
[private, Base64VLQ, (, ), {, }, private, static, final, int, VLQ_BASE_SHIFT, =, 5, ;, private, static, final, int, VLQ_BASE, =]
[(, ), {, }, private, static, final, int, VLQ_BASE_SHIFT, =, 5, ;, private, static, final, int, VLQ_BASE, =, 1, <<]
[VLQ_BASE_SHIFT, =, 5, ;, private, static, final, int, VLQ_BASE, =, 1, <<, VLQ_BASE_SHIFT, ;, private, static, final, int, VLQ_BASE_MASK, =]
[VLQ_BASE_SHIFT, =, 5, ;, private, static, final, int, VLQ_BASE, =, 1, <<, VLQ_BASE_SHIFT, ;, private, static, final, int, VLQ_BASE_MASK, =]
[5, ;, private, static, final, int, VLQ_BASE, =, 1, <<, VLQ_BASE_SHIFT, ;, private, static, final, int, VLQ_BASE_MASK, =, VLQ_BASE, -]
[1, <<, VLQ_BASE_SHIFT, ;, private, static, final, int, VLQ_BASE_MASK, =, VLQ_BASE, -, 1, ;, private, static, final, int, VLQ_CONTINUATION_BIT, =]
[;, private, static, final, int, VLQ_CONTINUATION_BIT, =, VLQ_BASE, ;, private, static, int, toVLQSigned, (, int, value, ), {, if, (]
[;, private, static, final, int, VLQ_CONTINUATION_BIT, =, VLQ_BASE, ;, private, static, int, toVLQSigned, (, int, value, ), {, if, (]
[static, final, int, VLQ_CONTINUATION_BIT, =, VLQ_BASE, ;, private, static, int, toVLQSigned, (, int, value, ), {, if, (, value, <]
[=, VLQ_BASE, ;, private, static, int, toVLQSigned, (, int, value, ), {, if, (, value, <, 0, ), {, return]
[=, VLQ_BASE, ;, private, static, int, toVLQSigned, (, int, value, ), {, if, (, value, <, 0, ), {, return]
[VLQ_BASE, ;, private, static, int, toVLQSigned, (, int, value, ), {, if, (, value, <, 0, ), {, return, (]
[VLQ_BASE, ;, private, static, int, toVLQSigned, (, int, value, ), {, if, (, value, <, 0, ), {, return, (]
[;, private, static, int, toVLQSigned, (, int, value, ), {, if, (, value, <, 0, ), {, return, (, (]
[private, static, int, toVLQSigned, (, int, value, ), {, if, (, value, <, 0, ), {, return, (, (, -]
[toVLQSigned, (, int, value, ), {, if, (, value, <, 0, ), {, return, (, (, -, value, ), <<]
[value, ), {, if, (, value, <, 0, ), {, return, (, (, -, value, ), <<, 1, ), +]
[<, 0, ), {, return, (, (, -, value, ), <<, 1, ), +, 1, ;, }, else, {, return]
[<, 0, ), {, return, (, (, -, value, ), <<, 1, ), +, 1, ;, }, else, {, return]
[0, ), {, return, (, (, -, value, ), <<, 1, ), +, 1, ;, }, else, {, return, (]
[0, ), {, return, (, (, -, value, ), <<, 1, ), +, 1, ;, }, else, {, return, (]
[{, return, (, (, -, value, ), <<, 1, ), +, 1, ;, }, else, {, return, (, value, <<]
[(, -, value, ), <<, 1, ), +, 1, ;, }, else, {, return, (, value, <<, 1, ), +]
[<<, 1, ), +, 0, ;, }, }, private, static, int, fromVLQSigned, (, int, value, ), {, boolean, negate, =]
[<<, 1, ), +, 0, ;, }, }, private, static, int, fromVLQSigned, (, int, value, ), {, boolean, negate, =]
[1, ), +, 0, ;, }, }, private, static, int, fromVLQSigned, (, int, value, ), {, boolean, negate, =, (]
[1, ), +, 0, ;, }, }, private, static, int, fromVLQSigned, (, int, value, ), {, boolean, negate, =, (]
[+, 0, ;, }, }, private, static, int, fromVLQSigned, (, int, value, ), {, boolean, negate, =, (, value, &]
[}, }, private, static, int, fromVLQSigned, (, int, value, ), {, boolean, negate, =, (, value, &, 1, ), ==]
[private, static, int, fromVLQSigned, (, int, value, ), {, boolean, negate, =, (, value, &, 1, ), ==, 1, ;]
[int, fromVLQSigned, (, int, value, ), {, boolean, negate, =, (, value, &, 1, ), ==, 1, ;, value, =]
[int, fromVLQSigned, (, int, value, ), {, boolean, negate, =, (, value, &, 1, ), ==, 1, ;, value, =]
[int, value, ), {, boolean, negate, =, (, value, &, 1, ), ==, 1, ;, value, =, value, >, >]
[{, boolean, negate, =, (, value, &, 1, ), ==, 1, ;, value, =, value, >, >, 1, ;, return]
[{, boolean, negate, =, (, value, &, 1, ), ==, 1, ;, value, =, value, >, >, 1, ;, return]
[negate, =, (, value, &, 1, ), ==, 1, ;, value, =, value, >, >, 1, ;, return, negate, ?]
[=, (, value, &, 1, ), ==, 1, ;, value, =, value, >, >, 1, ;, return, negate, ?, -]
[value, &, 1, ), ==, 1, ;, value, =, value, >, >, 1, ;, return, negate, ?, -, value, :]
[-, value, :, value, ;, }, public, static, void, encode, (, Appendable, out, ,, int, value, ), throws, IOException, {]
[:, value, ;, }, public, static, void, encode, (, Appendable, out, ,, int, value, ), throws, IOException, {, value, =]
[;, }, public, static, void, encode, (, Appendable, out, ,, int, value, ), throws, IOException, {, value, =, toVLQSigned, (]
[out, ,, int, value, ), throws, IOException, {, value, =, toVLQSigned, (, value, ), ;, do, {, int, digit, =]
[out, ,, int, value, ), throws, IOException, {, value, =, toVLQSigned, (, value, ), ;, do, {, int, digit, =]
[int, value, ), throws, IOException, {, value, =, toVLQSigned, (, value, ), ;, do, {, int, digit, =, value, &]
[), throws, IOException, {, value, =, toVLQSigned, (, value, ), ;, do, {, int, digit, =, value, &, VLQ_BASE_MASK, ;]
[IOException, {, value, =, toVLQSigned, (, value, ), ;, do, {, int, digit, =, value, &, VLQ_BASE_MASK, ;, value, >>>=]
[toVLQSigned, (, value, ), ;, do, {, int, digit, =, value, &, VLQ_BASE_MASK, ;, value, >>>=, VLQ_BASE_SHIFT, ;, if, (]
[toVLQSigned, (, value, ), ;, do, {, int, digit, =, value, &, VLQ_BASE_MASK, ;, value, >>>=, VLQ_BASE_SHIFT, ;, if, (]
[value, ), ;, do, {, int, digit, =, value, &, VLQ_BASE_MASK, ;, value, >>>=, VLQ_BASE_SHIFT, ;, if, (, value, >]
[do, {, int, digit, =, value, &, VLQ_BASE_MASK, ;, value, >>>=, VLQ_BASE_SHIFT, ;, if, (, value, >, 0, ), {]
[int, digit, =, value, &, VLQ_BASE_MASK, ;, value, >>>=, VLQ_BASE_SHIFT, ;, if, (, value, >, 0, ), {, digit, |=]
[value, &, VLQ_BASE_MASK, ;, value, >>>=, VLQ_BASE_SHIFT, ;, if, (, value, >, 0, ), {, digit, |=, VLQ_CONTINUATION_BIT, ;, }]
[value, &, VLQ_BASE_MASK, ;, value, >>>=, VLQ_BASE_SHIFT, ;, if, (, value, >, 0, ), {, digit, |=, VLQ_CONTINUATION_BIT, ;, }]
[value, >>>=, VLQ_BASE_SHIFT, ;, if, (, value, >, 0, ), {, digit, |=, VLQ_CONTINUATION_BIT, ;, }, out, ., append, (]
[value, >>>=, VLQ_BASE_SHIFT, ;, if, (, value, >, 0, ), {, digit, |=, VLQ_CONTINUATION_BIT, ;, }, out, ., append, (]
[if, (, value, >, 0, ), {, digit, |=, VLQ_CONTINUATION_BIT, ;, }, out, ., append, (, Base64, ., toBase64, (]
[digit, |=, VLQ_CONTINUATION_BIT, ;, }, out, ., append, (, Base64, ., toBase64, (, digit, ), ), ;, }, while, (]
[digit, |=, VLQ_CONTINUATION_BIT, ;, }, out, ., append, (, Base64, ., toBase64, (, digit, ), ), ;, }, while, (]
[VLQ_CONTINUATION_BIT, ;, }, out, ., append, (, Base64, ., toBase64, (, digit, ), ), ;, }, while, (, value, >]
[), ;, char, next, (, ), ;, }, public, static, int, decode, (, CharIterator, in, ), {, int, result, =]
[public, static, int, decode, (, CharIterator, in, ), {, int, result, =, 0, ;, boolean, continuation, ;, int, shift, =]
[), {, int, result, =, 0, ;, boolean, continuation, ;, int, shift, =, 0, ;, do, {, char, c, =]
[), {, int, result, =, 0, ;, boolean, continuation, ;, int, shift, =, 0, ;, do, {, char, c, =]
[;, int, shift, =, 0, ;, do, {, char, c, =, in, ., next, (, ), ;, int, digit, =]
[;, int, shift, =, 0, ;, do, {, char, c, =, in, ., next, (, ), ;, int, digit, =]
[0, ;, do, {, char, c, =, in, ., next, (, ), ;, int, digit, =, Base64, ., fromBase64, (]
[{, char, c, =, in, ., next, (, ), ;, int, digit, =, Base64, ., fromBase64, (, c, ), ;]
[c, =, in, ., next, (, ), ;, int, digit, =, Base64, ., fromBase64, (, c, ), ;, continuation, =]
[c, =, in, ., next, (, ), ;, int, digit, =, Base64, ., fromBase64, (, c, ), ;, continuation, =]
[=, in, ., next, (, ), ;, int, digit, =, Base64, ., fromBase64, (, c, ), ;, continuation, =, (]
[=, in, ., next, (, ), ;, int, digit, =, Base64, ., fromBase64, (, c, ), ;, continuation, =, (]
[., next, (, ), ;, int, digit, =, Base64, ., fromBase64, (, c, ), ;, continuation, =, (, digit, &]
[), ;, int, digit, =, Base64, ., fromBase64, (, c, ), ;, continuation, =, (, digit, &, VLQ_CONTINUATION_BIT, ), !=]
[int, digit, =, Base64, ., fromBase64, (, c, ), ;, continuation, =, (, digit, &, VLQ_CONTINUATION_BIT, ), !=, 0, ;]
[=, Base64, ., fromBase64, (, c, ), ;, continuation, =, (, digit, &, VLQ_CONTINUATION_BIT, ), !=, 0, ;, digit, &=]
[., fromBase64, (, c, ), ;, continuation, =, (, digit, &, VLQ_CONTINUATION_BIT, ), !=, 0, ;, digit, &=, VLQ_BASE_MASK, ;]
[(, c, ), ;, continuation, =, (, digit, &, VLQ_CONTINUATION_BIT, ), !=, 0, ;, digit, &=, VLQ_BASE_MASK, ;, result, =]
[(, c, ), ;, continuation, =, (, digit, &, VLQ_CONTINUATION_BIT, ), !=, 0, ;, digit, &=, VLQ_BASE_MASK, ;, result, =]
[), ;, continuation, =, (, digit, &, VLQ_CONTINUATION_BIT, ), !=, 0, ;, digit, &=, VLQ_BASE_MASK, ;, result, =, result, +]
[;, continuation, =, (, digit, &, VLQ_CONTINUATION_BIT, ), !=, 0, ;, digit, &=, VLQ_BASE_MASK, ;, result, =, result, +, (]
[;, continuation, =, (, digit, &, VLQ_CONTINUATION_BIT, ), !=, 0, ;, digit, &=, VLQ_BASE_MASK, ;, result, =, result, +, (]
[=, (, digit, &, VLQ_CONTINUATION_BIT, ), !=, 0, ;, digit, &=, VLQ_BASE_MASK, ;, result, =, result, +, (, digit, <<]
[&, VLQ_CONTINUATION_BIT, ), !=, 0, ;, digit, &=, VLQ_BASE_MASK, ;, result, =, result, +, (, digit, <<, shift, ), ;]
[), !=, 0, ;, digit, &=, VLQ_BASE_MASK, ;, result, =, result, +, (, digit, <<, shift, ), ;, shift, =]
[), !=, 0, ;, digit, &=, VLQ_BASE_MASK, ;, result, =, result, +, (, digit, <<, shift, ), ;, shift, =]
[0, ;, digit, &=, VLQ_BASE_MASK, ;, result, =, result, +, (, digit, <<, shift, ), ;, shift, =, shift, +]
[;, result, =, result, +, (, digit, <<, shift, ), ;, shift, =, shift, +, VLQ_BASE_SHIFT, ;, }, while, (]
[+, (, digit, <<, shift, ), ;, shift, =, shift, +, VLQ_BASE_SHIFT, ;, }, while, (, continuation, ), ;, return]
[digit, <<, shift, ), ;, shift, =, shift, +, VLQ_BASE_SHIFT, ;, }, while, (, continuation, ), ;, return, fromVLQSigned, (]
