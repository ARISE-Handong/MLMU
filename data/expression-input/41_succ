[;, private, int, searchIntervalIndex, =, -, 1, ;, public, MultiStartUnivariateOptimizer, (, final, UnivariateOptimizer, optimizer, ,, final, int, starts, ,, final]
[;, private, int, searchIntervalIndex, =, -, 1, ;, public, MultiStartUnivariateOptimizer, (, final, UnivariateOptimizer, optimizer, ,, final, int, starts, ,, final]
[;, public, MultiStartUnivariateOptimizer, (, final, UnivariateOptimizer, optimizer, ,, final, int, starts, ,, final, RandomGenerator, generator, ), {, super, (, optimizer]
[;, public, MultiStartUnivariateOptimizer, (, final, UnivariateOptimizer, optimizer, ,, final, int, starts, ,, final, RandomGenerator, generator, ), {, super, (, optimizer]
[), ;, if, (, starts, <, 1, ), {, throw, new, NotStrictlyPositiveException, (, starts, ), ;, }, this, ., optimizer]
[., getConvergenceChecker, (, ), ), ;, if, (, starts, <, 1, ), {, throw, new, NotStrictlyPositiveException, (, starts, ), ;]
[), {, throw, new, NotStrictlyPositiveException, (, starts, ), ;, }, this, ., optimizer, =, optimizer, ;, this, ., starts, =]
[<, 1, ), {, throw, new, NotStrictlyPositiveException, (, starts, ), ;, }, this, ., optimizer, =, optimizer, ;, this, .]
[), {, throw, new, NotStrictlyPositiveException, (, starts, ), ;, }, this, ., optimizer, =, optimizer, ;, this, ., starts, =]
[;, }, this, ., optimizer, =, optimizer, ;, this, ., starts, =, starts, ;, this, ., generator, =, generator, ;]
[), ;, }, this, ., optimizer, =, optimizer, ;, this, ., starts, =, starts, ;, this, ., generator, =, generator]
[=, optimizer, ;, this, ., starts, =, starts, ;, this, ., generator, =, generator, ;, }, @, Override, public, int]
[., optimizer, =, optimizer, ;, this, ., starts, =, starts, ;, this, ., generator, =, generator, ;, }, @, Override]
[;, this, ., starts, =, starts, ;, this, ., generator, =, generator, ;, }, @, Override, public, int, getEvaluations, (]
[=, starts, ;, this, ., generator, =, generator, ;, }, @, Override, public, int, getEvaluations, (, ), {, return, totalEvaluations]
[., starts, =, starts, ;, this, ., generator, =, generator, ;, }, @, Override, public, int, getEvaluations, (, ), {]
[;, this, ., generator, =, generator, ;, }, @, Override, public, int, getEvaluations, (, ), {, return, totalEvaluations, ;, }]
[=, generator, ;, }, @, Override, public, int, getEvaluations, (, ), {, return, totalEvaluations, ;, }, public, UnivariatePointValuePair, [, ]]
[., generator, =, generator, ;, }, @, Override, public, int, getEvaluations, (, ), {, return, totalEvaluations, ;, }, public, UnivariatePointValuePair]
[;, }, @, Override, public, int, getEvaluations, (, ), {, return, totalEvaluations, ;, }, public, UnivariatePointValuePair, [, ], getOptima, (]
[;, }, public, UnivariatePointValuePair, [, ], getOptima, (, ), {, if, (, optima, ==, null, ), {, throw, new, MathIllegalStateException]
[), {, throw, new, MathIllegalStateException, (, LocalizedFormats, ., NO_OPTIMUM_COMPUTED_YET, ), ;, }, return, optima, ., clone, (, ), ;, }]
[==, null, ), {, throw, new, MathIllegalStateException, (, LocalizedFormats, ., NO_OPTIMUM_COMPUTED_YET, ), ;, }, return, optima, ., clone, (, )]
[), {, throw, new, MathIllegalStateException, (, LocalizedFormats, ., NO_OPTIMUM_COMPUTED_YET, ), ;, }, return, optima, ., clone, (, ), ;, }]
[;, }, return, optima, ., clone, (, ), ;, }, @, Override, public, UnivariatePointValuePair, optimize, (, OptimizationData, ..., optData, )]
[), ;, }, return, optima, ., clone, (, ), ;, }, @, Override, public, UnivariatePointValuePair, optimize, (, OptimizationData, ..., optData]
[., NO_OPTIMUM_COMPUTED_YET, ), ;, }, return, optima, ., clone, (, ), ;, }, @, Override, public, UnivariatePointValuePair, optimize, (, OptimizationData]
[;, }, @, Override, public, UnivariatePointValuePair, optimize, (, OptimizationData, ..., optData, ), {, optimData, =, optData, ;, return, super, .]
[., clone, (, ), ;, }, @, Override, public, UnivariatePointValuePair, optimize, (, OptimizationData, ..., optData, ), {, optimData, =, optData]
[=, optData, ;, return, super, ., optimize, (, optData, ), ;, }, @, Override, protected, UnivariatePointValuePair, doOptimize, (, ), {]
[;, return, super, ., optimize, (, optData, ), ;, }, @, Override, protected, UnivariatePointValuePair, doOptimize, (, ), {, for, (]
[;, }, @, Override, protected, UnivariatePointValuePair, doOptimize, (, ), {, for, (, int, i, =, 0, ;, i, <, optimData]
[., optimize, (, optData, ), ;, }, @, Override, protected, UnivariatePointValuePair, doOptimize, (, ), {, for, (, int, i, =]
[), ;, }, @, Override, protected, UnivariatePointValuePair, doOptimize, (, ), {, for, (, int, i, =, 0, ;, i, <]
[;, i, <, optimData, ., length, ;, i, ++, ), {, if, (, optimData, [, i, ], instanceof, MaxEval, )]
[;, i, ++, ), {, if, (, optimData, [, i, ], instanceof, MaxEval, ), {, optimData, [, i, ], =]
[<, optimData, ., length, ;, i, ++, ), {, if, (, optimData, [, i, ], instanceof, MaxEval, ), {, optimData]
[;, i, ++, ), {, if, (, optimData, [, i, ], instanceof, MaxEval, ), {, optimData, [, i, ], =]
[., length, ;, i, ++, ), {, if, (, optimData, [, i, ], instanceof, MaxEval, ), {, optimData, [, i]
[), {, if, (, optimData, [, i, ], instanceof, MaxEval, ), {, optimData, [, i, ], =, null, ;, maxEvalIndex]
[++, ), {, if, (, optimData, [, i, ], instanceof, MaxEval, ), {, optimData, [, i, ], =, null, ;]
[), {, optimData, [, i, ], =, null, ;, maxEvalIndex, =, i, ;, continue, ;, }, if, (, optimData, []
[instanceof, MaxEval, ), {, optimData, [, i, ], =, null, ;, maxEvalIndex, =, i, ;, continue, ;, }, if, (]
[[, i, ], instanceof, MaxEval, ), {, optimData, [, i, ], =, null, ;, maxEvalIndex, =, i, ;, continue, ;]
[], instanceof, MaxEval, ), {, optimData, [, i, ], =, null, ;, maxEvalIndex, =, i, ;, continue, ;, }, if]
[=, null, ;, maxEvalIndex, =, i, ;, continue, ;, }, if, (, optimData, [, i, ], instanceof, SearchInterval, ), {]
[[, i, ], =, null, ;, maxEvalIndex, =, i, ;, continue, ;, }, if, (, optimData, [, i, ], instanceof]
[], =, null, ;, maxEvalIndex, =, i, ;, continue, ;, }, if, (, optimData, [, i, ], instanceof, SearchInterval, )]
[;, maxEvalIndex, =, i, ;, continue, ;, }, if, (, optimData, [, i, ], instanceof, SearchInterval, ), {, optimData, []
[=, i, ;, continue, ;, }, if, (, optimData, [, i, ], instanceof, SearchInterval, ), {, optimData, [, i, ]]
[;, continue, ;, }, if, (, optimData, [, i, ], instanceof, SearchInterval, ), {, optimData, [, i, ], =, null]
[), {, optimData, [, i, ], =, null, ;, searchIntervalIndex, =, i, ;, continue, ;, }, }, if, (, maxEvalIndex]
[instanceof, SearchInterval, ), {, optimData, [, i, ], =, null, ;, searchIntervalIndex, =, i, ;, continue, ;, }, }, if]
[[, i, ], instanceof, SearchInterval, ), {, optimData, [, i, ], =, null, ;, searchIntervalIndex, =, i, ;, continue, ;]
[], instanceof, SearchInterval, ), {, optimData, [, i, ], =, null, ;, searchIntervalIndex, =, i, ;, continue, ;, }, }]
[=, null, ;, searchIntervalIndex, =, i, ;, continue, ;, }, }, if, (, maxEvalIndex, ==, -, 1, ), {, throw]
[[, i, ], =, null, ;, searchIntervalIndex, =, i, ;, continue, ;, }, }, if, (, maxEvalIndex, ==, -, 1]
[], =, null, ;, searchIntervalIndex, =, i, ;, continue, ;, }, }, if, (, maxEvalIndex, ==, -, 1, ), {]
[;, searchIntervalIndex, =, i, ;, continue, ;, }, }, if, (, maxEvalIndex, ==, -, 1, ), {, throw, new, MathIllegalStateException]
[=, i, ;, continue, ;, }, }, if, (, maxEvalIndex, ==, -, 1, ), {, throw, new, MathIllegalStateException, (, )]
[;, continue, ;, }, }, if, (, maxEvalIndex, ==, -, 1, ), {, throw, new, MathIllegalStateException, (, ), ;, }]
[), {, throw, new, MathIllegalStateException, (, ), ;, }, if, (, searchIntervalIndex, ==, -, 1, ), {, throw, new, MathIllegalStateException]
[==, -, 1, ), {, throw, new, MathIllegalStateException, (, ), ;, }, if, (, searchIntervalIndex, ==, -, 1, ), {]
[), {, throw, new, MathIllegalStateException, (, ), ;, }, if, (, searchIntervalIndex, ==, -, 1, ), {, throw, new, MathIllegalStateException]
[), {, throw, new, MathIllegalStateException, (, ), ;, }, if, (, searchIntervalIndex, ==, -, 1, ), {, throw, new, MathIllegalStateException]
[;, }, if, (, searchIntervalIndex, ==, -, 1, ), {, throw, new, MathIllegalStateException, (, ), ;, }, RuntimeException, lastException, =]
[), {, throw, new, MathIllegalStateException, (, ), ;, }, RuntimeException, lastException, =, null, ;, optima, =, new, UnivariatePointValuePair, [, starts]
[==, -, 1, ), {, throw, new, MathIllegalStateException, (, ), ;, }, RuntimeException, lastException, =, null, ;, optima, =, new]
[), {, throw, new, MathIllegalStateException, (, ), ;, }, RuntimeException, lastException, =, null, ;, optima, =, new, UnivariatePointValuePair, [, starts]
[), {, throw, new, MathIllegalStateException, (, ), ;, }, RuntimeException, lastException, =, null, ;, optima, =, new, UnivariatePointValuePair, [, starts]
[;, }, RuntimeException, lastException, =, null, ;, optima, =, new, UnivariatePointValuePair, [, starts, ], ;, totalEvaluations, =, 0, ;, final]
[;, optima, =, new, UnivariatePointValuePair, [, starts, ], ;, totalEvaluations, =, 0, ;, final, int, maxEval, =, getMaxEvaluations, (, )]
[=, new, UnivariatePointValuePair, [, starts, ], ;, totalEvaluations, =, 0, ;, final, int, maxEval, =, getMaxEvaluations, (, ), ;, final]
[;, totalEvaluations, =, 0, ;, final, int, maxEval, =, getMaxEvaluations, (, ), ;, final, double, min, =, getMin, (, )]
[], ;, totalEvaluations, =, 0, ;, final, int, maxEval, =, getMaxEvaluations, (, ), ;, final, double, min, =, getMin, (]
[=, 0, ;, final, int, maxEval, =, getMaxEvaluations, (, ), ;, final, double, min, =, getMin, (, ), ;, final]
[;, final, int, maxEval, =, getMaxEvaluations, (, ), ;, final, double, min, =, getMin, (, ), ;, final, double, max]
[;, final, double, min, =, getMin, (, ), ;, final, double, max, =, getMax, (, ), ;, final, double, startValue]
[;, final, double, max, =, getMax, (, ), ;, final, double, startValue, =, getStartValue, (, ), ;, for, (, int]
[;, final, double, startValue, =, getStartValue, (, ), ;, for, (, int, i, =, 0, ;, i, <, starts, ;]
[;, for, (, int, i, =, 0, ;, i, <, starts, ;, i, ++, ), {, try, {, optimData, []
[;, i, <, starts, ;, i, ++, ), {, try, {, optimData, [, maxEvalIndex, ], =, new, MaxEval, (, maxEval]
[;, i, ++, ), {, try, {, optimData, [, maxEvalIndex, ], =, new, MaxEval, (, maxEval, -, totalEvaluations, ), ;]
[<, starts, ;, i, ++, ), {, try, {, optimData, [, maxEvalIndex, ], =, new, MaxEval, (, maxEval, -, totalEvaluations]
[;, i, ++, ), {, try, {, optimData, [, maxEvalIndex, ], =, new, MaxEval, (, maxEval, -, totalEvaluations, ), ;]
[), {, try, {, optimData, [, maxEvalIndex, ], =, new, MaxEval, (, maxEval, -, totalEvaluations, ), ;, final, double, s]
[++, ), {, try, {, optimData, [, maxEvalIndex, ], =, new, MaxEval, (, maxEval, -, totalEvaluations, ), ;, final, double]
[=, new, MaxEval, (, maxEval, -, totalEvaluations, ), ;, final, double, s, =, (, i, ==, 0, ), ?, startValue]
[[, maxEvalIndex, ], =, new, MaxEval, (, maxEval, -, totalEvaluations, ), ;, final, double, s, =, (, i, ==, 0]
[], =, new, MaxEval, (, maxEval, -, totalEvaluations, ), ;, final, double, s, =, (, i, ==, 0, ), ?]
[;, final, double, s, =, (, i, ==, 0, ), ?, startValue, :, min, +, generator, ., nextDouble, (, )]
[), ;, final, double, s, =, (, i, ==, 0, ), ?, startValue, :, min, +, generator, ., nextDouble, (]
[-, totalEvaluations, ), ;, final, double, s, =, (, i, ==, 0, ), ?, startValue, :, min, +, generator, .]
[), ;, final, double, s, =, (, i, ==, 0, ), ?, startValue, :, min, +, generator, ., nextDouble, (]
[;, optimData, [, searchIntervalIndex, ], =, new, SearchInterval, (, min, ,, max, ,, s, ), ;, optima, [, i, ]]
[?, startValue, :, min, +, generator, ., nextDouble, (, ), *, (, max, -, min, ), ;, optimData, [, searchIntervalIndex]
[), ?, startValue, :, min, +, generator, ., nextDouble, (, ), *, (, max, -, min, ), ;, optimData, []
[==, 0, ), ?, startValue, :, min, +, generator, ., nextDouble, (, ), *, (, max, -, min, ), ;]
[), ?, startValue, :, min, +, generator, ., nextDouble, (, ), *, (, max, -, min, ), ;, optimData, []
[:, min, +, generator, ., nextDouble, (, ), *, (, max, -, min, ), ;, optimData, [, searchIntervalIndex, ], =]
[;, optimData, [, searchIntervalIndex, ], =, new, SearchInterval, (, min, ,, max, ,, s, ), ;, optima, [, i, ]]
[+, generator, ., nextDouble, (, ), *, (, max, -, min, ), ;, optimData, [, searchIntervalIndex, ], =, new, SearchInterval]
[;, optimData, [, searchIntervalIndex, ], =, new, SearchInterval, (, min, ,, max, ,, s, ), ;, optima, [, i, ]]
[*, (, max, -, min, ), ;, optimData, [, searchIntervalIndex, ], =, new, SearchInterval, (, min, ,, max, ,, s]
[., nextDouble, (, ), *, (, max, -, min, ), ;, optimData, [, searchIntervalIndex, ], =, new, SearchInterval, (, min]
[;, optimData, [, searchIntervalIndex, ], =, new, SearchInterval, (, min, ,, max, ,, s, ), ;, optima, [, i, ]]
[), ;, optimData, [, searchIntervalIndex, ], =, new, SearchInterval, (, min, ,, max, ,, s, ), ;, optima, [, i]
[-, min, ), ;, optimData, [, searchIntervalIndex, ], =, new, SearchInterval, (, min, ,, max, ,, s, ), ;, optima]
[), ;, optimData, [, searchIntervalIndex, ], =, new, SearchInterval, (, min, ,, max, ,, s, ), ;, optima, [, i]
[=, new, SearchInterval, (, min, ,, max, ,, s, ), ;, optima, [, i, ], =, optimizer, ., optimize, (]
[[, searchIntervalIndex, ], =, new, SearchInterval, (, min, ,, max, ,, s, ), ;, optima, [, i, ], =, optimizer]
[], =, new, SearchInterval, (, min, ,, max, ,, s, ), ;, optima, [, i, ], =, optimizer, ., optimize]
[;, optima, [, i, ], =, optimizer, ., optimize, (, optimData, ), ;, }, catch, (, RuntimeException, mue, ), {]
[,, max, ,, s, ), ;, optima, [, i, ], =, optimizer, ., optimize, (, optimData, ), ;, }, catch]
[,, s, ), ;, optima, [, i, ], =, optimizer, ., optimize, (, optimData, ), ;, }, catch, (, RuntimeException]
[), ;, optima, [, i, ], =, optimizer, ., optimize, (, optimData, ), ;, }, catch, (, RuntimeException, mue, )]
[=, optimizer, ., optimize, (, optimData, ), ;, }, catch, (, RuntimeException, mue, ), {, lastException, =, mue, ;, optima]
[[, i, ], =, optimizer, ., optimize, (, optimData, ), ;, }, catch, (, RuntimeException, mue, ), {, lastException, =]
[], =, optimizer, ., optimize, (, optimData, ), ;, }, catch, (, RuntimeException, mue, ), {, lastException, =, mue, ;]
[;, }, catch, (, RuntimeException, mue, ), {, lastException, =, mue, ;, optima, [, i, ], =, null, ;, }]
[., optimize, (, optimData, ), ;, }, catch, (, RuntimeException, mue, ), {, lastException, =, mue, ;, optima, [, i]
[), ;, }, catch, (, RuntimeException, mue, ), {, lastException, =, mue, ;, optima, [, i, ], =, null, ;]
[=, mue, ;, optima, [, i, ], =, null, ;, }, totalEvaluations, +=, optimizer, ., getEvaluations, (, ), ;, }]
[;, optima, [, i, ], =, null, ;, }, totalEvaluations, +=, optimizer, ., getEvaluations, (, ), ;, }, sortPairs, (]
[=, null, ;, }, totalEvaluations, +=, optimizer, ., getEvaluations, (, ), ;, }, sortPairs, (, getGoalType, (, ), ), ;]
[[, i, ], =, null, ;, }, totalEvaluations, +=, optimizer, ., getEvaluations, (, ), ;, }, sortPairs, (, getGoalType, (]
[], =, null, ;, }, totalEvaluations, +=, optimizer, ., getEvaluations, (, ), ;, }, sortPairs, (, getGoalType, (, ), )]
[;, }, totalEvaluations, +=, optimizer, ., getEvaluations, (, ), ;, }, sortPairs, (, getGoalType, (, ), ), ;, if, (]
[+=, optimizer, ., getEvaluations, (, ), ;, }, sortPairs, (, getGoalType, (, ), ), ;, if, (, optima, [, 0]
[;, }, sortPairs, (, getGoalType, (, ), ), ;, if, (, optima, [, 0, ], ==, null, ), {, throw]
[., getEvaluations, (, ), ;, }, sortPairs, (, getGoalType, (, ), ), ;, if, (, optima, [, 0, ], ==]
[;, if, (, optima, [, 0, ], ==, null, ), {, throw, lastException, ;, }, return, optima, [, 0, ]]
[), ;, if, (, optima, [, 0, ], ==, null, ), {, throw, lastException, ;, }, return, optima, [, 0]
[), {, throw, lastException, ;, }, return, optima, [, 0, ], ;, }, private, void, sortPairs, (, final, GoalType, goal]
[==, null, ), {, throw, lastException, ;, }, return, optima, [, 0, ], ;, }, private, void, sortPairs, (, final]
[[, 0, ], ==, null, ), {, throw, lastException, ;, }, return, optima, [, 0, ], ;, }, private, void]
[], ==, null, ), {, throw, lastException, ;, }, return, optima, [, 0, ], ;, }, private, void, sortPairs, (]
[), {, throw, lastException, ;, }, return, optima, [, 0, ], ;, }, private, void, sortPairs, (, final, GoalType, goal]
[;, }, return, optima, [, 0, ], ;, }, private, void, sortPairs, (, final, GoalType, goal, ), {, Arrays, .]
[;, }, private, void, sortPairs, (, final, GoalType, goal, ), {, Arrays, ., sort, (, optima, ,, new, Comparator, <]
[[, 0, ], ;, }, private, void, sortPairs, (, final, GoalType, goal, ), {, Arrays, ., sort, (, optima, ,]
[], ;, }, private, void, sortPairs, (, final, GoalType, goal, ), {, Arrays, ., sort, (, optima, ,, new, Comparator]
[;, }, }]
[., sort, (, optima, ,, new, Comparator, <, UnivariatePointValuePair, >, (, ), {, public, int, compare, (, final, UnivariatePointValuePair, o1]
[,, new, Comparator, <, UnivariatePointValuePair, >, (, ), {, public, int, compare, (, final, UnivariatePointValuePair, o1, ,, final, UnivariatePointValuePair, o2]
[), ;, }, }]
[), {, return, (, o2, ==, null, ), ?, 0, :, 1, ;, }, else, if, (, o2, ==, null]
[==, null, ), {, return, (, o2, ==, null, ), ?, 0, :, 1, ;, }, else, if, (, o2]
[), {, return, (, o2, ==, null, ), ?, 0, :, 1, ;, }, else, if, (, o2, ==, null]
[;, }, else, if, (, o2, ==, null, ), {, return, -, 1, ;, }, final, double, v1, =, o1]
[?, 0, :, 1, ;, }, else, if, (, o2, ==, null, ), {, return, -, 1, ;, }, final]
[), ?, 0, :, 1, ;, }, else, if, (, o2, ==, null, ), {, return, -, 1, ;, }]
[==, null, ), ?, 0, :, 1, ;, }, else, if, (, o2, ==, null, ), {, return, -, 1]
[), ?, 0, :, 1, ;, }, else, if, (, o2, ==, null, ), {, return, -, 1, ;, }]
[:, 1, ;, }, else, if, (, o2, ==, null, ), {, return, -, 1, ;, }, final, double, v1]
[;, }, else, if, (, o2, ==, null, ), {, return, -, 1, ;, }, final, double, v1, =, o1]
[), {, return, -, 1, ;, }, final, double, v1, =, o1, ., getValue, (, ), ;, final, double, v2]
[==, null, ), {, return, -, 1, ;, }, final, double, v1, =, o1, ., getValue, (, ), ;, final]
[), {, return, -, 1, ;, }, final, double, v1, =, o1, ., getValue, (, ), ;, final, double, v2]
[;, }, final, double, v1, =, o1, ., getValue, (, ), ;, final, double, v2, =, o2, ., getValue, (]
[;, }, final, double, v1, =, o1, ., getValue, (, ), ;, final, double, v2, =, o2, ., getValue, (]
[;, final, double, v2, =, o2, ., getValue, (, ), ;, return, (, goal, ==, GoalType, ., MINIMIZE, ), ?]
[., getValue, (, ), ;, final, double, v2, =, o2, ., getValue, (, ), ;, return, (, goal, ==, GoalType]
[;, return, (, goal, ==, GoalType, ., MINIMIZE, ), ?, Double, ., compare, (, v1, ,, v2, ), :, Double]
[., getValue, (, ), ;, return, (, goal, ==, GoalType, ., MINIMIZE, ), ?, Double, ., compare, (, v1, ,]
[;, }, }, ), ;, }, }]
[?, Double, ., compare, (, v1, ,, v2, ), :, Double, ., compare, (, v2, ,, v1, ), ;, }]
[), ?, Double, ., compare, (, v1, ,, v2, ), :, Double, ., compare, (, v2, ,, v1, ), ;]
[==, GoalType, ., MINIMIZE, ), ?, Double, ., compare, (, v1, ,, v2, ), :, Double, ., compare, (, v2]
[), ?, Double, ., compare, (, v1, ,, v2, ), :, Double, ., compare, (, v2, ,, v1, ), ;]
[., MINIMIZE, ), ?, Double, ., compare, (, v1, ,, v2, ), :, Double, ., compare, (, v2, ,, v1]
[:, Double, ., compare, (, v2, ,, v1, ), ;, }, }, ), ;, }, }]
[., compare, (, v1, ,, v2, ), :, Double, ., compare, (, v2, ,, v1, ), ;, }, }, )]
[,, v2, ), :, Double, ., compare, (, v2, ,, v1, ), ;, }, }, ), ;, }, }]
[), :, Double, ., compare, (, v2, ,, v1, ), ;, }, }, ), ;, }, }]
[;, }, }, ), ;, }, }]
[., compare, (, v2, ,, v1, ), ;, }, }, ), ;, }, }]
[,, v1, ), ;, }, }, ), ;, }, }]
[), ;, }, }, ), ;, }, }]
