[;, public, static, final, String, VECTOR, =, "vector", ;, private, boolean, check, ;, private, final, double, delta, ;, public, ConjugateGradient]
[;, private, boolean, check, ;, private, final, double, delta, ;, public, ConjugateGradient, (, final, int, maxIterations, ,, final, double, delta]
[), ;, this, ., delta, =, delta, ;, this, ., check, =, check, ;, }, public, ConjugateGradient, (, final, IterationManager]
[=, delta, ;, this, ., check, =, check, ;, }, public, ConjugateGradient, (, final, IterationManager, manager, ,, final, double, delta]
[., delta, =, delta, ;, this, ., check, =, check, ;, }, public, ConjugateGradient, (, final, IterationManager, manager, ,, final]
[;, this, ., check, =, check, ;, }, public, ConjugateGradient, (, final, IterationManager, manager, ,, final, double, delta, ,, final]
[=, check, ;, }, public, ConjugateGradient, (, final, IterationManager, manager, ,, final, double, delta, ,, final, boolean, check, ), throws]
[., check, =, check, ;, }, public, ConjugateGradient, (, final, IterationManager, manager, ,, final, double, delta, ,, final, boolean, check]
[;, }, public, ConjugateGradient, (, final, IterationManager, manager, ,, final, double, delta, ,, final, boolean, check, ), throws, NullArgumentException, {]
[), ;, this, ., delta, =, delta, ;, this, ., check, =, check, ;, }, public, final, boolean, getCheck, (]
[=, delta, ;, this, ., check, =, check, ;, }, public, final, boolean, getCheck, (, ), {, return, check, ;]
[., delta, =, delta, ;, this, ., check, =, check, ;, }, public, final, boolean, getCheck, (, ), {, return]
[;, this, ., check, =, check, ;, }, public, final, boolean, getCheck, (, ), {, return, check, ;, }, @]
[=, check, ;, }, public, final, boolean, getCheck, (, ), {, return, check, ;, }, @, Override, public, RealVector, solveInPlace]
[., check, =, check, ;, }, public, final, boolean, getCheck, (, ), {, return, check, ;, }, @, Override, public]
[;, }, public, final, boolean, getCheck, (, ), {, return, check, ;, }, @, Override, public, RealVector, solveInPlace, (, final]
[;, }, @, Override, public, RealVector, solveInPlace, (, final, RealLinearOperator, a, ,, final, RealLinearOperator, m, ,, final, RealVector, b, ,]
[;, final, IterationManager, manager, =, getIterationManager, (, ), ;, manager, ., resetIterationCount, (, ), ;, final, double, rmax, =, delta]
[,, m, ,, b, ,, x0, ), ;, final, IterationManager, manager, =, getIterationManager, (, ), ;, manager, ., resetIterationCount, (]
[,, b, ,, x0, ), ;, final, IterationManager, manager, =, getIterationManager, (, ), ;, manager, ., resetIterationCount, (, ), ;]
[,, x0, ), ;, final, IterationManager, manager, =, getIterationManager, (, ), ;, manager, ., resetIterationCount, (, ), ;, final, double]
[), ;, final, IterationManager, manager, =, getIterationManager, (, ), ;, manager, ., resetIterationCount, (, ), ;, final, double, rmax, =]
[;, manager, ., resetIterationCount, (, ), ;, final, double, rmax, =, delta, *, b, ., getNorm, (, ), ;, final]
[;, final, double, rmax, =, delta, *, b, ., getNorm, (, ), ;, final, RealVector, bro, =, RealVector, ., unmodifiableRealVector]
[., resetIterationCount, (, ), ;, final, double, rmax, =, delta, *, b, ., getNorm, (, ), ;, final, RealVector, bro]
[;, final, RealVector, bro, =, RealVector, ., unmodifiableRealVector, (, b, ), ;, manager, ., incrementIterationCount, (, ), ;, final, RealVector]
[*, b, ., getNorm, (, ), ;, final, RealVector, bro, =, RealVector, ., unmodifiableRealVector, (, b, ), ;, manager, .]
[;, final, RealVector, bro, =, RealVector, ., unmodifiableRealVector, (, b, ), ;, manager, ., incrementIterationCount, (, ), ;, final, RealVector]
[., getNorm, (, ), ;, final, RealVector, bro, =, RealVector, ., unmodifiableRealVector, (, b, ), ;, manager, ., incrementIterationCount, (]
[;, manager, ., incrementIterationCount, (, ), ;, final, RealVector, x, =, x0, ;, final, RealVector, xro, =, RealVector, ., unmodifiableRealVector]
[., unmodifiableRealVector, (, b, ), ;, manager, ., incrementIterationCount, (, ), ;, final, RealVector, x, =, x0, ;, final, RealVector]
[), ;, manager, ., incrementIterationCount, (, ), ;, final, RealVector, x, =, x0, ;, final, RealVector, xro, =, RealVector, .]
[;, final, RealVector, x, =, x0, ;, final, RealVector, xro, =, RealVector, ., unmodifiableRealVector, (, x, ), ;, final, RealVector]
[., incrementIterationCount, (, ), ;, final, RealVector, x, =, x0, ;, final, RealVector, xro, =, RealVector, ., unmodifiableRealVector, (, x]
[;, final, RealVector, xro, =, RealVector, ., unmodifiableRealVector, (, x, ), ;, final, RealVector, p, =, x, ., copy, (]
[;, final, RealVector, p, =, x, ., copy, (, ), ;, RealVector, q, =, a, ., operate, (, p, )]
[., unmodifiableRealVector, (, x, ), ;, final, RealVector, p, =, x, ., copy, (, ), ;, RealVector, q, =, a]
[), ;, final, RealVector, p, =, x, ., copy, (, ), ;, RealVector, q, =, a, ., operate, (, p]
[;, RealVector, q, =, a, ., operate, (, p, ), ;, final, RealVector, r, =, b, ., combine, (, 1]
[., copy, (, ), ;, RealVector, q, =, a, ., operate, (, p, ), ;, final, RealVector, r, =, b]
[;, final, RealVector, r, =, b, ., combine, (, 1, ,, -, 1, ,, q, ), ;, final, RealVector, rro]
[., operate, (, p, ), ;, final, RealVector, r, =, b, ., combine, (, 1, ,, -, 1, ,, q]
[), ;, final, RealVector, r, =, b, ., combine, (, 1, ,, -, 1, ,, q, ), ;, final, RealVector]
[;, final, RealVector, rro, =, RealVector, ., unmodifiableRealVector, (, r, ), ;, double, rnorm, =, r, ., getNorm, (, )]
[., combine, (, 1, ,, -, 1, ,, q, ), ;, final, RealVector, rro, =, RealVector, ., unmodifiableRealVector, (, r]
[,, -, 1, ,, q, ), ;, final, RealVector, rro, =, RealVector, ., unmodifiableRealVector, (, r, ), ;, double, rnorm]
[,, q, ), ;, final, RealVector, rro, =, RealVector, ., unmodifiableRealVector, (, r, ), ;, double, rnorm, =, r, .]
[,, q, ), ;, final, RealVector, rro, =, RealVector, ., unmodifiableRealVector, (, r, ), ;, double, rnorm, =, r, .]
[), ;, final, RealVector, rro, =, RealVector, ., unmodifiableRealVector, (, r, ), ;, double, rnorm, =, r, ., getNorm, (]
[;, double, rnorm, =, r, ., getNorm, (, ), ;, RealVector, z, ;, if, (, m, ==, null, ), {]
[., unmodifiableRealVector, (, r, ), ;, double, rnorm, =, r, ., getNorm, (, ), ;, RealVector, z, ;, if, (]
[), ;, double, rnorm, =, r, ., getNorm, (, ), ;, RealVector, z, ;, if, (, m, ==, null, )]
[;, RealVector, z, ;, if, (, m, ==, null, ), {, z, =, r, ;, }, else, {, z, =]
[., getNorm, (, ), ;, RealVector, z, ;, if, (, m, ==, null, ), {, z, =, r, ;, }]
[), {, z, =, r, ;, }, else, {, z, =, null, ;, }, IterativeLinearSolverEvent, evt, ;, evt, =, new]
[==, null, ), {, z, =, r, ;, }, else, {, z, =, null, ;, }, IterativeLinearSolverEvent, evt, ;, evt]
[), {, z, =, r, ;, }, else, {, z, =, null, ;, }, IterativeLinearSolverEvent, evt, ;, evt, =, new]
[=, r, ;, }, else, {, z, =, null, ;, }, IterativeLinearSolverEvent, evt, ;, evt, =, new, DefaultIterativeLinearSolverEvent, (, this]
[;, }, else, {, z, =, null, ;, }, IterativeLinearSolverEvent, evt, ;, evt, =, new, DefaultIterativeLinearSolverEvent, (, this, ,, manager]
[=, null, ;, }, IterativeLinearSolverEvent, evt, ;, evt, =, new, DefaultIterativeLinearSolverEvent, (, this, ,, manager, ., getIterations, (, ), ,]
[;, }, IterativeLinearSolverEvent, evt, ;, evt, =, new, DefaultIterativeLinearSolverEvent, (, this, ,, manager, ., getIterations, (, ), ,, xro, ,]
[=, new, DefaultIterativeLinearSolverEvent, (, this, ,, manager, ., getIterations, (, ), ,, xro, ,, bro, ,, rro, ,, rnorm, )]
[;, manager, ., fireInitializationEvent, (, evt, ), ;, if, (, rnorm, <=, rmax, ), {, manager, ., fireTerminationEvent, (, evt]
[,, manager, ., getIterations, (, ), ,, xro, ,, bro, ,, rro, ,, rnorm, ), ;, manager, ., fireInitializationEvent, (]
[,, xro, ,, bro, ,, rro, ,, rnorm, ), ;, manager, ., fireInitializationEvent, (, evt, ), ;, if, (, rnorm]
[., getIterations, (, ), ,, xro, ,, bro, ,, rro, ,, rnorm, ), ;, manager, ., fireInitializationEvent, (, evt, )]
[,, bro, ,, rro, ,, rnorm, ), ;, manager, ., fireInitializationEvent, (, evt, ), ;, if, (, rnorm, <=, rmax]
[,, rro, ,, rnorm, ), ;, manager, ., fireInitializationEvent, (, evt, ), ;, if, (, rnorm, <=, rmax, ), {]
[,, rnorm, ), ;, manager, ., fireInitializationEvent, (, evt, ), ;, if, (, rnorm, <=, rmax, ), {, manager, .]
[), ;, manager, ., fireInitializationEvent, (, evt, ), ;, if, (, rnorm, <=, rmax, ), {, manager, ., fireTerminationEvent, (]
[;, if, (, rnorm, <=, rmax, ), {, manager, ., fireTerminationEvent, (, evt, ), ;, return, x, ;, }, double]
[., fireInitializationEvent, (, evt, ), ;, if, (, rnorm, <=, rmax, ), {, manager, ., fireTerminationEvent, (, evt, ), ;]
[), ;, if, (, rnorm, <=, rmax, ), {, manager, ., fireTerminationEvent, (, evt, ), ;, return, x, ;, }]
[), {, manager, ., fireTerminationEvent, (, evt, ), ;, return, x, ;, }, double, rhoPrev, =, 0., ;, while, (]
[<=, rmax, ), {, manager, ., fireTerminationEvent, (, evt, ), ;, return, x, ;, }, double, rhoPrev, =, 0., ;]
[), {, manager, ., fireTerminationEvent, (, evt, ), ;, return, x, ;, }, double, rhoPrev, =, 0., ;, while, (]
[;, return, x, ;, }, double, rhoPrev, =, 0., ;, while, (, true, ), {, manager, ., incrementIterationCount, (, )]
[., fireTerminationEvent, (, evt, ), ;, return, x, ;, }, double, rhoPrev, =, 0., ;, while, (, true, ), {]
[), ;, return, x, ;, }, double, rhoPrev, =, 0., ;, while, (, true, ), {, manager, ., incrementIterationCount, (]
[;, }, double, rhoPrev, =, 0., ;, while, (, true, ), {, manager, ., incrementIterationCount, (, ), ;, evt, =]
[;, while, (, true, ), {, manager, ., incrementIterationCount, (, ), ;, evt, =, new, DefaultIterativeLinearSolverEvent, (, this, ,, manager]
[), {, manager, ., incrementIterationCount, (, ), ;, evt, =, new, DefaultIterativeLinearSolverEvent, (, this, ,, manager, ., getIterations, (, )]
[;, evt, =, new, DefaultIterativeLinearSolverEvent, (, this, ,, manager, ., getIterations, (, ), ,, xro, ,, bro, ,, rro, ,]
[., incrementIterationCount, (, ), ;, evt, =, new, DefaultIterativeLinearSolverEvent, (, this, ,, manager, ., getIterations, (, ), ,, xro, ,]
[=, new, DefaultIterativeLinearSolverEvent, (, this, ,, manager, ., getIterations, (, ), ,, xro, ,, bro, ,, rro, ,, rnorm, )]
[;, manager, ., fireIterationStartedEvent, (, evt, ), ;, if, (, m, !=, null, ), {, z, =, m, ., operate]
[,, manager, ., getIterations, (, ), ,, xro, ,, bro, ,, rro, ,, rnorm, ), ;, manager, ., fireIterationStartedEvent, (]
[,, xro, ,, bro, ,, rro, ,, rnorm, ), ;, manager, ., fireIterationStartedEvent, (, evt, ), ;, if, (, m]
[., getIterations, (, ), ,, xro, ,, bro, ,, rro, ,, rnorm, ), ;, manager, ., fireIterationStartedEvent, (, evt, )]
[,, bro, ,, rro, ,, rnorm, ), ;, manager, ., fireIterationStartedEvent, (, evt, ), ;, if, (, m, !=, null]
[,, rro, ,, rnorm, ), ;, manager, ., fireIterationStartedEvent, (, evt, ), ;, if, (, m, !=, null, ), {]
[,, rnorm, ), ;, manager, ., fireIterationStartedEvent, (, evt, ), ;, if, (, m, !=, null, ), {, z, =]
[), ;, manager, ., fireIterationStartedEvent, (, evt, ), ;, if, (, m, !=, null, ), {, z, =, m, .]
[;, if, (, m, !=, null, ), {, z, =, m, ., operate, (, r, ), ;, }, final, double]
[., fireIterationStartedEvent, (, evt, ), ;, if, (, m, !=, null, ), {, z, =, m, ., operate, (, r]
[), ;, if, (, m, !=, null, ), {, z, =, m, ., operate, (, r, ), ;, }, final]
[), {, z, =, m, ., operate, (, r, ), ;, }, final, double, rhoNext, =, r, ., dotProduct, (]
[!=, null, ), {, z, =, m, ., operate, (, r, ), ;, }, final, double, rhoNext, =, r, .]
[), {, z, =, m, ., operate, (, r, ), ;, }, final, double, rhoNext, =, r, ., dotProduct, (]
[=, m, ., operate, (, r, ), ;, }, final, double, rhoNext, =, r, ., dotProduct, (, z, ), ;]
[;, }, final, double, rhoNext, =, r, ., dotProduct, (, z, ), ;, if, (, check, &&, (, rhoNext, <=]
[., operate, (, r, ), ;, }, final, double, rhoNext, =, r, ., dotProduct, (, z, ), ;, if, (]
[), ;, }, final, double, rhoNext, =, r, ., dotProduct, (, z, ), ;, if, (, check, &&, (, rhoNext]
[;, if, (, check, &&, (, rhoNext, <=, 0., ), ), {, final, NonPositiveDefiniteOperatorException, e, ;, e, =, new, NonPositiveDefiniteOperatorException]
[., dotProduct, (, z, ), ;, if, (, check, &&, (, rhoNext, <=, 0., ), ), {, final, NonPositiveDefiniteOperatorException, e]
[), ;, if, (, check, &&, (, rhoNext, <=, 0., ), ), {, final, NonPositiveDefiniteOperatorException, e, ;, e, =, new]
[), {, final, NonPositiveDefiniteOperatorException, e, ;, e, =, new, NonPositiveDefiniteOperatorException, (, ), ;, final, ExceptionContext, context, =, e, ., getContext]
[&&, (, rhoNext, <=, 0., ), ), {, final, NonPositiveDefiniteOperatorException, e, ;, e, =, new, NonPositiveDefiniteOperatorException, (, ), ;, final]
[), {, final, NonPositiveDefiniteOperatorException, e, ;, e, =, new, NonPositiveDefiniteOperatorException, (, ), ;, final, ExceptionContext, context, =, e, ., getContext]
[), ), {, final, NonPositiveDefiniteOperatorException, e, ;, e, =, new, NonPositiveDefiniteOperatorException, (, ), ;, final, ExceptionContext, context, =, e, .]
[<=, 0., ), ), {, final, NonPositiveDefiniteOperatorException, e, ;, e, =, new, NonPositiveDefiniteOperatorException, (, ), ;, final, ExceptionContext, context, =]
[), ), {, final, NonPositiveDefiniteOperatorException, e, ;, e, =, new, NonPositiveDefiniteOperatorException, (, ), ;, final, ExceptionContext, context, =, e, .]
[=, new, NonPositiveDefiniteOperatorException, (, ), ;, final, ExceptionContext, context, =, e, ., getContext, (, ), ;, context, ., setValue, (]
[;, final, ExceptionContext, context, =, e, ., getContext, (, ), ;, context, ., setValue, (, OPERATOR, ,, m, ), ;]
[;, context, ., setValue, (, OPERATOR, ,, m, ), ;, context, ., setValue, (, VECTOR, ,, r, ), ;, throw]
[., getContext, (, ), ;, context, ., setValue, (, OPERATOR, ,, m, ), ;, context, ., setValue, (, VECTOR, ,]
[;, context, ., setValue, (, VECTOR, ,, r, ), ;, throw, e, ;, }, if, (, manager, ., getIterations, (]
[., setValue, (, OPERATOR, ,, m, ), ;, context, ., setValue, (, VECTOR, ,, r, ), ;, throw, e, ;]
[,, m, ), ;, context, ., setValue, (, VECTOR, ,, r, ), ;, throw, e, ;, }, if, (, manager]
[), ;, context, ., setValue, (, VECTOR, ,, r, ), ;, throw, e, ;, }, if, (, manager, ., getIterations]
[;, throw, e, ;, }, if, (, manager, ., getIterations, (, ), ==, 2, ), {, p, ., setSubVector, (]
[., setValue, (, VECTOR, ,, r, ), ;, throw, e, ;, }, if, (, manager, ., getIterations, (, ), ==]
[,, r, ), ;, throw, e, ;, }, if, (, manager, ., getIterations, (, ), ==, 2, ), {, p]
[), ;, throw, e, ;, }, if, (, manager, ., getIterations, (, ), ==, 2, ), {, p, ., setSubVector]
[;, }, if, (, manager, ., getIterations, (, ), ==, 2, ), {, p, ., setSubVector, (, 0, ,, z]
[), {, p, ., setSubVector, (, 0, ,, z, ), ;, }, else, {, p, ., combineToSelf, (, rhoNext, /]
[==, 2, ), {, p, ., setSubVector, (, 0, ,, z, ), ;, }, else, {, p, ., combineToSelf, (]
[., getIterations, (, ), ==, 2, ), {, p, ., setSubVector, (, 0, ,, z, ), ;, }, else, {]
[), {, p, ., setSubVector, (, 0, ,, z, ), ;, }, else, {, p, ., combineToSelf, (, rhoNext, /]
[;, }, else, {, p, ., combineToSelf, (, rhoNext, /, rhoPrev, ,, 1., ,, z, ), ;, }, q, =]
[., setSubVector, (, 0, ,, z, ), ;, }, else, {, p, ., combineToSelf, (, rhoNext, /, rhoPrev, ,, 1.]
[,, z, ), ;, }, else, {, p, ., combineToSelf, (, rhoNext, /, rhoPrev, ,, 1., ,, z, ), ;]
[), ;, }, else, {, p, ., combineToSelf, (, rhoNext, /, rhoPrev, ,, 1., ,, z, ), ;, }, q]
[;, }, q, =, a, ., operate, (, p, ), ;, final, double, pq, =, p, ., dotProduct, (, q]
[., combineToSelf, (, rhoNext, /, rhoPrev, ,, 1., ,, z, ), ;, }, q, =, a, ., operate, (, p]
[,, 1., ,, z, ), ;, }, q, =, a, ., operate, (, p, ), ;, final, double, pq, =]
[/, rhoPrev, ,, 1., ,, z, ), ;, }, q, =, a, ., operate, (, p, ), ;, final, double]
[,, 1., ,, z, ), ;, }, q, =, a, ., operate, (, p, ), ;, final, double, pq, =]
[,, z, ), ;, }, q, =, a, ., operate, (, p, ), ;, final, double, pq, =, p, .]
[), ;, }, q, =, a, ., operate, (, p, ), ;, final, double, pq, =, p, ., dotProduct, (]
[=, a, ., operate, (, p, ), ;, final, double, pq, =, p, ., dotProduct, (, q, ), ;, if]
[;, final, double, pq, =, p, ., dotProduct, (, q, ), ;, if, (, check, &&, (, pq, <=, 0.]
[., operate, (, p, ), ;, final, double, pq, =, p, ., dotProduct, (, q, ), ;, if, (, check]
[), ;, final, double, pq, =, p, ., dotProduct, (, q, ), ;, if, (, check, &&, (, pq, <=]
[;, if, (, check, &&, (, pq, <=, 0., ), ), {, final, NonPositiveDefiniteOperatorException, e, ;, e, =, new, NonPositiveDefiniteOperatorException]
[., dotProduct, (, q, ), ;, if, (, check, &&, (, pq, <=, 0., ), ), {, final, NonPositiveDefiniteOperatorException, e]
[), ;, if, (, check, &&, (, pq, <=, 0., ), ), {, final, NonPositiveDefiniteOperatorException, e, ;, e, =, new]
[), {, final, NonPositiveDefiniteOperatorException, e, ;, e, =, new, NonPositiveDefiniteOperatorException, (, ), ;, final, ExceptionContext, context, =, e, ., getContext]
[&&, (, pq, <=, 0., ), ), {, final, NonPositiveDefiniteOperatorException, e, ;, e, =, new, NonPositiveDefiniteOperatorException, (, ), ;, final]
[), {, final, NonPositiveDefiniteOperatorException, e, ;, e, =, new, NonPositiveDefiniteOperatorException, (, ), ;, final, ExceptionContext, context, =, e, ., getContext]
[), ), {, final, NonPositiveDefiniteOperatorException, e, ;, e, =, new, NonPositiveDefiniteOperatorException, (, ), ;, final, ExceptionContext, context, =, e, .]
[<=, 0., ), ), {, final, NonPositiveDefiniteOperatorException, e, ;, e, =, new, NonPositiveDefiniteOperatorException, (, ), ;, final, ExceptionContext, context, =]
[), ), {, final, NonPositiveDefiniteOperatorException, e, ;, e, =, new, NonPositiveDefiniteOperatorException, (, ), ;, final, ExceptionContext, context, =, e, .]
[=, new, NonPositiveDefiniteOperatorException, (, ), ;, final, ExceptionContext, context, =, e, ., getContext, (, ), ;, context, ., setValue, (]
[;, final, ExceptionContext, context, =, e, ., getContext, (, ), ;, context, ., setValue, (, OPERATOR, ,, a, ), ;]
[;, context, ., setValue, (, OPERATOR, ,, a, ), ;, context, ., setValue, (, VECTOR, ,, p, ), ;, throw]
[., getContext, (, ), ;, context, ., setValue, (, OPERATOR, ,, a, ), ;, context, ., setValue, (, VECTOR, ,]
[;, context, ., setValue, (, VECTOR, ,, p, ), ;, throw, e, ;, }, final, double, alpha, =, rhoNext, /]
[., setValue, (, OPERATOR, ,, a, ), ;, context, ., setValue, (, VECTOR, ,, p, ), ;, throw, e, ;]
[,, a, ), ;, context, ., setValue, (, VECTOR, ,, p, ), ;, throw, e, ;, }, final, double, alpha]
[), ;, context, ., setValue, (, VECTOR, ,, p, ), ;, throw, e, ;, }, final, double, alpha, =, rhoNext]
[;, throw, e, ;, }, final, double, alpha, =, rhoNext, /, pq, ;, x, ., combineToSelf, (, 1., ,, alpha]
[., setValue, (, VECTOR, ,, p, ), ;, throw, e, ;, }, final, double, alpha, =, rhoNext, /, pq, ;]
[,, p, ), ;, throw, e, ;, }, final, double, alpha, =, rhoNext, /, pq, ;, x, ., combineToSelf, (]
[), ;, throw, e, ;, }, final, double, alpha, =, rhoNext, /, pq, ;, x, ., combineToSelf, (, 1., ,]
[;, }, final, double, alpha, =, rhoNext, /, pq, ;, x, ., combineToSelf, (, 1., ,, alpha, ,, p, )]
[;, x, ., combineToSelf, (, 1., ,, alpha, ,, p, ), ;, r, ., combineToSelf, (, 1., ,, -, alpha]
[/, pq, ;, x, ., combineToSelf, (, 1., ,, alpha, ,, p, ), ;, r, ., combineToSelf, (, 1., ,]
[;, x, ., combineToSelf, (, 1., ,, alpha, ,, p, ), ;, r, ., combineToSelf, (, 1., ,, -, alpha]
[;, r, ., combineToSelf, (, 1., ,, -, alpha, ,, q, ), ;, rhoPrev, =, rhoNext, ;, rnorm, =, r]
[., combineToSelf, (, 1., ,, alpha, ,, p, ), ;, r, ., combineToSelf, (, 1., ,, -, alpha, ,, q]
[,, alpha, ,, p, ), ;, r, ., combineToSelf, (, 1., ,, -, alpha, ,, q, ), ;, rhoPrev, =]
[,, p, ), ;, r, ., combineToSelf, (, 1., ,, -, alpha, ,, q, ), ;, rhoPrev, =, rhoNext, ;]
[), ;, r, ., combineToSelf, (, 1., ,, -, alpha, ,, q, ), ;, rhoPrev, =, rhoNext, ;, rnorm, =]
[;, rhoPrev, =, rhoNext, ;, rnorm, =, r, ., getNorm, (, ), ;, evt, =, new, DefaultIterativeLinearSolverEvent, (, this, ,]
[., combineToSelf, (, 1., ,, -, alpha, ,, q, ), ;, rhoPrev, =, rhoNext, ;, rnorm, =, r, ., getNorm]
[,, -, alpha, ,, q, ), ;, rhoPrev, =, rhoNext, ;, rnorm, =, r, ., getNorm, (, ), ;, evt]
[,, q, ), ;, rhoPrev, =, rhoNext, ;, rnorm, =, r, ., getNorm, (, ), ;, evt, =, new, DefaultIterativeLinearSolverEvent]
[,, q, ), ;, rhoPrev, =, rhoNext, ;, rnorm, =, r, ., getNorm, (, ), ;, evt, =, new, DefaultIterativeLinearSolverEvent]
[), ;, rhoPrev, =, rhoNext, ;, rnorm, =, r, ., getNorm, (, ), ;, evt, =, new, DefaultIterativeLinearSolverEvent, (, this]
[=, rhoNext, ;, rnorm, =, r, ., getNorm, (, ), ;, evt, =, new, DefaultIterativeLinearSolverEvent, (, this, ,, manager, .]
[;, rnorm, =, r, ., getNorm, (, ), ;, evt, =, new, DefaultIterativeLinearSolverEvent, (, this, ,, manager, ., getIterations, (]
[=, r, ., getNorm, (, ), ;, evt, =, new, DefaultIterativeLinearSolverEvent, (, this, ,, manager, ., getIterations, (, ), ,]
[;, evt, =, new, DefaultIterativeLinearSolverEvent, (, this, ,, manager, ., getIterations, (, ), ,, xro, ,, bro, ,, rro, ,]
[., getNorm, (, ), ;, evt, =, new, DefaultIterativeLinearSolverEvent, (, this, ,, manager, ., getIterations, (, ), ,, xro, ,]
[=, new, DefaultIterativeLinearSolverEvent, (, this, ,, manager, ., getIterations, (, ), ,, xro, ,, bro, ,, rro, ,, rnorm, )]
[;, manager, ., fireIterationPerformedEvent, (, evt, ), ;, if, (, rnorm, <=, rmax, ), {, manager, ., fireTerminationEvent, (, evt]
[,, manager, ., getIterations, (, ), ,, xro, ,, bro, ,, rro, ,, rnorm, ), ;, manager, ., fireIterationPerformedEvent, (]
[,, xro, ,, bro, ,, rro, ,, rnorm, ), ;, manager, ., fireIterationPerformedEvent, (, evt, ), ;, if, (, rnorm]
[., getIterations, (, ), ,, xro, ,, bro, ,, rro, ,, rnorm, ), ;, manager, ., fireIterationPerformedEvent, (, evt, )]
[,, bro, ,, rro, ,, rnorm, ), ;, manager, ., fireIterationPerformedEvent, (, evt, ), ;, if, (, rnorm, <=, rmax]
[,, rro, ,, rnorm, ), ;, manager, ., fireIterationPerformedEvent, (, evt, ), ;, if, (, rnorm, <=, rmax, ), {]
[,, rnorm, ), ;, manager, ., fireIterationPerformedEvent, (, evt, ), ;, if, (, rnorm, <=, rmax, ), {, manager, .]
[), ;, manager, ., fireIterationPerformedEvent, (, evt, ), ;, if, (, rnorm, <=, rmax, ), {, manager, ., fireTerminationEvent, (]
[;, if, (, rnorm, <=, rmax, ), {, manager, ., fireTerminationEvent, (, evt, ), ;, return, x, ;, }, }]
[., fireIterationPerformedEvent, (, evt, ), ;, if, (, rnorm, <=, rmax, ), {, manager, ., fireTerminationEvent, (, evt, ), ;]
[), ;, if, (, rnorm, <=, rmax, ), {, manager, ., fireTerminationEvent, (, evt, ), ;, return, x, ;, }]
[), {, manager, ., fireTerminationEvent, (, evt, ), ;, return, x, ;, }, }, }, }]
[<=, rmax, ), {, manager, ., fireTerminationEvent, (, evt, ), ;, return, x, ;, }, }, }, }]
[), {, manager, ., fireTerminationEvent, (, evt, ), ;, return, x, ;, }, }, }, }]
[;, return, x, ;, }, }, }, }]
[., fireTerminationEvent, (, evt, ), ;, return, x, ;, }, }, }, }]
[), ;, return, x, ;, }, }, }, }]
[;, }, }, }, }]
