[), ;, this, ., lowerCoordinates, =, new, java, ., util, ., ArrayList, (, ), ;, this, ., upperCoordinates, =, new]
[=, new, java, ., util, ., ArrayList, (, ), ;, this, ., upperCoordinates, =, new, java, ., util, ., ArrayList]
[., lowerCoordinates, =, new, java, ., util, ., ArrayList, (, ), ;, this, ., upperCoordinates, =, new, java, ., util]
[;, this, ., upperCoordinates, =, new, java, ., util, ., ArrayList, (, ), ;, }, }, private, float, alpha, ;]
[=, new, java, ., util, ., ArrayList, (, ), ;, }, }, private, float, alpha, ;, public, DeviationRenderer, (, )]
[., upperCoordinates, =, new, java, ., util, ., ArrayList, (, ), ;, }, }, private, float, alpha, ;, public, DeviationRenderer]
[;, }, }, private, float, alpha, ;, public, DeviationRenderer, (, ), {, this, (, true, ,, true, ), ;, }]
[,, true, ), ;, }, public, DeviationRenderer, (, boolean, lines, ,, boolean, shapes, ), {, super, (, lines, ,, shapes]
[), ;, }, public, DeviationRenderer, (, boolean, lines, ,, boolean, shapes, ), {, super, (, lines, ,, shapes, ), ;]
[,, shapes, ), ;, super, ., setDrawSeriesLineAsPath, (, true, ), ;, this, ., alpha, =, 0.5f, ;, }, public, float]
[), ;, super, ., setDrawSeriesLineAsPath, (, true, ), ;, this, ., alpha, =, 0.5f, ;, }, public, float, getAlpha, (]
[;, this, ., alpha, =, 0.5f, ;, }, public, float, getAlpha, (, ), {, return, this, ., alpha, ;, }]
[., setDrawSeriesLineAsPath, (, true, ), ;, this, ., alpha, =, 0.5f, ;, }, public, float, getAlpha, (, ), {, return]
[), ;, this, ., alpha, =, 0.5f, ;, }, public, float, getAlpha, (, ), {, return, this, ., alpha, ;]
[=, 0.5f, ;, }, public, float, getAlpha, (, ), {, return, this, ., alpha, ;, }, public, void, setAlpha, (]
[., alpha, =, 0.5f, ;, }, public, float, getAlpha, (, ), {, return, this, ., alpha, ;, }, public, void]
[;, }, public, float, getAlpha, (, ), {, return, this, ., alpha, ;, }, public, void, setAlpha, (, float, alpha]
[;, }, public, void, setAlpha, (, float, alpha, ), {, if, (, alpha, <, 0.0f, ||, alpha, >, 1.0f, )]
[., alpha, ;, }, public, void, setAlpha, (, float, alpha, ), {, if, (, alpha, <, 0.0f, ||, alpha, >]
[), {, throw, new, IllegalArgumentException, (, "Requires 'alpha' in the range 0.0 to 1.0.", ), ;, }, this, ., alpha, =, alpha, ;, fireChangeEvent, (, ), ;]
[||, alpha, >, 1.0f, ), {, throw, new, IllegalArgumentException, (, "Requires 'alpha' in the range 0.0 to 1.0.", ), ;, }, this, ., alpha, =, alpha, ;]
[<, 0.0f, ||, alpha, >, 1.0f, ), {, throw, new, IllegalArgumentException, (, "Requires 'alpha' in the range 0.0 to 1.0.", ), ;, }, this, ., alpha, =]
[||, alpha, >, 1.0f, ), {, throw, new, IllegalArgumentException, (, "Requires 'alpha' in the range 0.0 to 1.0.", ), ;, }, this, ., alpha, =, alpha, ;]
[), {, throw, new, IllegalArgumentException, (, "Requires 'alpha' in the range 0.0 to 1.0.", ), ;, }, this, ., alpha, =, alpha, ;, fireChangeEvent, (, ), ;]
[>, 1.0f, ), {, throw, new, IllegalArgumentException, (, "Requires 'alpha' in the range 0.0 to 1.0.", ), ;, }, this, ., alpha, =, alpha, ;, fireChangeEvent, (]
[), {, throw, new, IllegalArgumentException, (, "Requires 'alpha' in the range 0.0 to 1.0.", ), ;, }, this, ., alpha, =, alpha, ;, fireChangeEvent, (, ), ;]
[;, }, this, ., alpha, =, alpha, ;, fireChangeEvent, (, ), ;, }, public, void, setDrawSeriesLineAsPath, (, boolean, flag, )]
[), ;, }, this, ., alpha, =, alpha, ;, fireChangeEvent, (, ), ;, }, public, void, setDrawSeriesLineAsPath, (, boolean, flag]
[=, alpha, ;, fireChangeEvent, (, ), ;, }, public, void, setDrawSeriesLineAsPath, (, boolean, flag, ), {, }, public, Range, findRangeBounds]
[., alpha, =, alpha, ;, fireChangeEvent, (, ), ;, }, public, void, setDrawSeriesLineAsPath, (, boolean, flag, ), {, }, public]
[;, fireChangeEvent, (, ), ;, }, public, void, setDrawSeriesLineAsPath, (, boolean, flag, ), {, }, public, Range, findRangeBounds, (, XYDataset]
[;, }, public, void, setDrawSeriesLineAsPath, (, boolean, flag, ), {, }, public, Range, findRangeBounds, (, XYDataset, dataset, ), {, return]
[;, }, public, XYItemRendererState, initialise, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, XYPlot, plot, ,, XYDataset, dataset, ,, PlotRenderingInfo, info]
[,, true, ), ;, }, public, XYItemRendererState, initialise, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, XYPlot, plot, ,, XYDataset, dataset]
[), ;, }, public, XYItemRendererState, initialise, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, XYPlot, plot, ,, XYDataset, dataset, ,, PlotRenderingInfo]
[;, state, ., seriesPath, =, new, GeneralPath, (, ), ;, state, ., setProcessVisibleItemsOnly, (, false, ), ;, return, state, ;]
[), ;, state, ., seriesPath, =, new, GeneralPath, (, ), ;, state, ., setProcessVisibleItemsOnly, (, false, ), ;, return, state]
[=, new, GeneralPath, (, ), ;, state, ., setProcessVisibleItemsOnly, (, false, ), ;, return, state, ;, }, public, int, getPassCount]
[., seriesPath, =, new, GeneralPath, (, ), ;, state, ., setProcessVisibleItemsOnly, (, false, ), ;, return, state, ;, }, public]
[;, state, ., setProcessVisibleItemsOnly, (, false, ), ;, return, state, ;, }, public, int, getPassCount, (, ), {, return, 3]
[;, return, state, ;, }, public, int, getPassCount, (, ), {, return, 3, ;, }, protected, boolean, isItemPass, (, int]
[., setProcessVisibleItemsOnly, (, false, ), ;, return, state, ;, }, public, int, getPassCount, (, ), {, return, 3, ;, }]
[), ;, return, state, ;, }, public, int, getPassCount, (, ), {, return, 3, ;, }, protected, boolean, isItemPass, (]
[;, }, public, int, getPassCount, (, ), {, return, 3, ;, }, protected, boolean, isItemPass, (, int, pass, ), {]
[;, }, protected, boolean, isItemPass, (, int, pass, ), {, return, (, pass, ==, 2, ), ;, }, protected, boolean]
[;, }, protected, boolean, isLinePass, (, int, pass, ), {, return, (, pass, ==, 1, ), ;, }, public, void]
[), ;, }, protected, boolean, isLinePass, (, int, pass, ), {, return, (, pass, ==, 1, ), ;, }, public]
[==, 2, ), ;, }, protected, boolean, isLinePass, (, int, pass, ), {, return, (, pass, ==, 1, ), ;]
[), ;, }, protected, boolean, isLinePass, (, int, pass, ), {, return, (, pass, ==, 1, ), ;, }, public]
[;, }, public, void, drawItem, (, Graphics2D, g2, ,, XYItemRendererState, state, ,, Rectangle2D, dataArea, ,, XYPlot, plot, ,, ValueAxis, domainAxis]
[), ;, }, public, void, drawItem, (, Graphics2D, g2, ,, XYItemRendererState, state, ,, Rectangle2D, dataArea, ,, XYPlot, plot, ,, ValueAxis]
[==, 1, ), ;, }, public, void, drawItem, (, Graphics2D, g2, ,, XYItemRendererState, state, ,, Rectangle2D, dataArea, ,, XYPlot, plot]
[), ;, }, public, void, drawItem, (, Graphics2D, g2, ,, XYItemRendererState, state, ,, Rectangle2D, dataArea, ,, XYPlot, plot, ,, ValueAxis]
[), {, return, ;, }, if, (, pass, ==, 0, ), {, IntervalXYDataset, intervalDataset, =, (, IntervalXYDataset, ), dataset, ;]
[), {, return, ;, }, if, (, pass, ==, 0, ), {, IntervalXYDataset, intervalDataset, =, (, IntervalXYDataset, ), dataset, ;]
[,, item, ), ), {, return, ;, }, if, (, pass, ==, 0, ), {, IntervalXYDataset, intervalDataset, =, (, IntervalXYDataset]
[), ), {, return, ;, }, if, (, pass, ==, 0, ), {, IntervalXYDataset, intervalDataset, =, (, IntervalXYDataset, ), dataset]
[), {, IntervalXYDataset, intervalDataset, =, (, IntervalXYDataset, ), dataset, ;, State, drState, =, (, State, ), state, ;, double, x]
[==, 0, ), {, IntervalXYDataset, intervalDataset, =, (, IntervalXYDataset, ), dataset, ;, State, drState, =, (, State, ), state, ;]
[), {, IntervalXYDataset, intervalDataset, =, (, IntervalXYDataset, ), dataset, ;, State, drState, =, (, State, ), state, ;, double, x]
[;, State, drState, =, (, State, ), state, ;, double, x, =, intervalDataset, ., getXValue, (, series, ,, item, )]
[;, State, drState, =, (, State, ), state, ;, double, x, =, intervalDataset, ., getXValue, (, series, ,, item, )]
[;, double, x, =, intervalDataset, ., getXValue, (, series, ,, item, ), ;, double, yLow, =, intervalDataset, ., getStartYValue, (]
[;, double, x, =, intervalDataset, ., getXValue, (, series, ,, item, ), ;, double, yLow, =, intervalDataset, ., getStartYValue, (]
[;, double, yLow, =, intervalDataset, ., getStartYValue, (, series, ,, item, ), ;, double, yHigh, =, intervalDataset, ., getEndYValue, (]
[., getXValue, (, series, ,, item, ), ;, double, yLow, =, intervalDataset, ., getStartYValue, (, series, ,, item, ), ;]
[,, item, ), ;, double, yLow, =, intervalDataset, ., getStartYValue, (, series, ,, item, ), ;, double, yHigh, =, intervalDataset]
[), ;, double, yLow, =, intervalDataset, ., getStartYValue, (, series, ,, item, ), ;, double, yHigh, =, intervalDataset, ., getEndYValue]
[;, double, yHigh, =, intervalDataset, ., getEndYValue, (, series, ,, item, ), ;, RectangleEdge, xAxisLocation, =, plot, ., getDomainAxisEdge, (]
[., getStartYValue, (, series, ,, item, ), ;, double, yHigh, =, intervalDataset, ., getEndYValue, (, series, ,, item, ), ;]
[,, item, ), ;, double, yHigh, =, intervalDataset, ., getEndYValue, (, series, ,, item, ), ;, RectangleEdge, xAxisLocation, =, plot]
[), ;, double, yHigh, =, intervalDataset, ., getEndYValue, (, series, ,, item, ), ;, RectangleEdge, xAxisLocation, =, plot, ., getDomainAxisEdge]
[;, RectangleEdge, xAxisLocation, =, plot, ., getDomainAxisEdge, (, ), ;, RectangleEdge, yAxisLocation, =, plot, ., getRangeAxisEdge, (, ), ;, double]
[., getEndYValue, (, series, ,, item, ), ;, RectangleEdge, xAxisLocation, =, plot, ., getDomainAxisEdge, (, ), ;, RectangleEdge, yAxisLocation, =]
[,, item, ), ;, RectangleEdge, xAxisLocation, =, plot, ., getDomainAxisEdge, (, ), ;, RectangleEdge, yAxisLocation, =, plot, ., getRangeAxisEdge, (]
[), ;, RectangleEdge, xAxisLocation, =, plot, ., getDomainAxisEdge, (, ), ;, RectangleEdge, yAxisLocation, =, plot, ., getRangeAxisEdge, (, ), ;]
[;, RectangleEdge, yAxisLocation, =, plot, ., getRangeAxisEdge, (, ), ;, double, xx, =, domainAxis, ., valueToJava2D, (, x, ,, dataArea]
[., getDomainAxisEdge, (, ), ;, RectangleEdge, yAxisLocation, =, plot, ., getRangeAxisEdge, (, ), ;, double, xx, =, domainAxis, ., valueToJava2D]
[;, double, xx, =, domainAxis, ., valueToJava2D, (, x, ,, dataArea, ,, xAxisLocation, ), ;, double, yyLow, =, rangeAxis, .]
[., getRangeAxisEdge, (, ), ;, double, xx, =, domainAxis, ., valueToJava2D, (, x, ,, dataArea, ,, xAxisLocation, ), ;, double]
[;, double, yyLow, =, rangeAxis, ., valueToJava2D, (, yLow, ,, dataArea, ,, yAxisLocation, ), ;, double, yyHigh, =, rangeAxis, .]
[., valueToJava2D, (, x, ,, dataArea, ,, xAxisLocation, ), ;, double, yyLow, =, rangeAxis, ., valueToJava2D, (, yLow, ,, dataArea]
[,, dataArea, ,, xAxisLocation, ), ;, double, yyLow, =, rangeAxis, ., valueToJava2D, (, yLow, ,, dataArea, ,, yAxisLocation, ), ;]
[,, xAxisLocation, ), ;, double, yyLow, =, rangeAxis, ., valueToJava2D, (, yLow, ,, dataArea, ,, yAxisLocation, ), ;, double, yyHigh]
[), ;, double, yyLow, =, rangeAxis, ., valueToJava2D, (, yLow, ,, dataArea, ,, yAxisLocation, ), ;, double, yyHigh, =, rangeAxis]
[;, double, yyHigh, =, rangeAxis, ., valueToJava2D, (, yHigh, ,, dataArea, ,, yAxisLocation, ), ;, PlotOrientation, orientation, =, plot, .]
[., valueToJava2D, (, yLow, ,, dataArea, ,, yAxisLocation, ), ;, double, yyHigh, =, rangeAxis, ., valueToJava2D, (, yHigh, ,, dataArea]
[,, dataArea, ,, yAxisLocation, ), ;, double, yyHigh, =, rangeAxis, ., valueToJava2D, (, yHigh, ,, dataArea, ,, yAxisLocation, ), ;]
[,, yAxisLocation, ), ;, double, yyHigh, =, rangeAxis, ., valueToJava2D, (, yHigh, ,, dataArea, ,, yAxisLocation, ), ;, PlotOrientation, orientation]
[), ;, double, yyHigh, =, rangeAxis, ., valueToJava2D, (, yHigh, ,, dataArea, ,, yAxisLocation, ), ;, PlotOrientation, orientation, =, plot]
[;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, drState]
[., valueToJava2D, (, yHigh, ,, dataArea, ,, yAxisLocation, ), ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if]
[,, dataArea, ,, yAxisLocation, ), ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ==, PlotOrientation]
[,, yAxisLocation, ), ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL]
[), ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {]
[;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, drState, ., lowerCoordinates, ., add, (, new, double, [, ]]
[., getOrientation, (, ), ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, drState, ., lowerCoordinates, ., add, (]
[), {, drState, ., lowerCoordinates, ., add, (, new, double, [, ], {, yyLow, ,, xx, }, ), ;, drState]
[==, PlotOrientation, ., HORIZONTAL, ), {, drState, ., lowerCoordinates, ., add, (, new, double, [, ], {, yyLow, ,, xx]
[), {, drState, ., lowerCoordinates, ., add, (, new, double, [, ], {, yyLow, ,, xx, }, ), ;, drState]
[., HORIZONTAL, ), {, drState, ., lowerCoordinates, ., add, (, new, double, [, ], {, yyLow, ,, xx, }, )]
[;, drState, ., upperCoordinates, ., add, (, new, double, [, ], {, yyHigh, ,, xx, }, ), ;, }, else]
[., add, (, new, double, [, ], {, yyLow, ,, xx, }, ), ;, drState, ., upperCoordinates, ., add, (]
[., lowerCoordinates, ., add, (, new, double, [, ], {, yyLow, ,, xx, }, ), ;, drState, ., upperCoordinates, .]
[), ;, drState, ., upperCoordinates, ., add, (, new, double, [, ], {, yyHigh, ,, xx, }, ), ;, }]
[), ;, drState, ., upperCoordinates, ., add, (, new, double, [, ], {, yyHigh, ,, xx, }, ), ;, }]
[,, xx, }, ), ;, drState, ., upperCoordinates, ., add, (, new, double, [, ], {, yyHigh, ,, xx, }]
[}, ), ;, drState, ., upperCoordinates, ., add, (, new, double, [, ], {, yyHigh, ,, xx, }, ), ;]
[;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, drState, ., lowerCoordinates, ., add, (, new, double]
[., add, (, new, double, [, ], {, yyHigh, ,, xx, }, ), ;, }, else, if, (, orientation, ==]
[., upperCoordinates, ., add, (, new, double, [, ], {, yyHigh, ,, xx, }, ), ;, }, else, if, (]
[), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, drState, ., lowerCoordinates, ., add, (, new]
[), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, drState, ., lowerCoordinates, ., add, (, new]
[,, xx, }, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, drState, ., lowerCoordinates, .]
[}, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, drState, ., lowerCoordinates, ., add, (]
[), {, drState, ., lowerCoordinates, ., add, (, new, double, [, ], {, xx, ,, yyLow, }, ), ;, drState]
[==, PlotOrientation, ., VERTICAL, ), {, drState, ., lowerCoordinates, ., add, (, new, double, [, ], {, xx, ,, yyLow]
[), {, drState, ., lowerCoordinates, ., add, (, new, double, [, ], {, xx, ,, yyLow, }, ), ;, drState]
[., VERTICAL, ), {, drState, ., lowerCoordinates, ., add, (, new, double, [, ], {, xx, ,, yyLow, }, )]
[;, drState, ., upperCoordinates, ., add, (, new, double, [, ], {, xx, ,, yyHigh, }, ), ;, }, if]
[., add, (, new, double, [, ], {, xx, ,, yyLow, }, ), ;, drState, ., upperCoordinates, ., add, (]
[., lowerCoordinates, ., add, (, new, double, [, ], {, xx, ,, yyLow, }, ), ;, drState, ., upperCoordinates, .]
[), ;, drState, ., upperCoordinates, ., add, (, new, double, [, ], {, xx, ,, yyHigh, }, ), ;, }]
[), ;, drState, ., upperCoordinates, ., add, (, new, double, [, ], {, xx, ,, yyHigh, }, ), ;, }]
[,, yyLow, }, ), ;, drState, ., upperCoordinates, ., add, (, new, double, [, ], {, xx, ,, yyHigh, }]
[}, ), ;, drState, ., upperCoordinates, ., add, (, new, double, [, ], {, xx, ,, yyHigh, }, ), ;]
[;, }, if, (, item, ==, (, dataset, ., getItemCount, (, series, ), -, 1, ), ), {, Composite, originalComposite]
[., add, (, new, double, [, ], {, xx, ,, yyHigh, }, ), ;, }, if, (, item, ==, (]
[., upperCoordinates, ., add, (, new, double, [, ], {, xx, ,, yyHigh, }, ), ;, }, if, (, item]
[), ;, }, if, (, item, ==, (, dataset, ., getItemCount, (, series, ), -, 1, ), ), {, Composite]
[), ;, }, if, (, item, ==, (, dataset, ., getItemCount, (, series, ), -, 1, ), ), {, Composite]
[,, yyHigh, }, ), ;, }, if, (, item, ==, (, dataset, ., getItemCount, (, series, ), -, 1, )]
[}, ), ;, }, if, (, item, ==, (, dataset, ., getItemCount, (, series, ), -, 1, ), ), {]
[), {, Composite, originalComposite, =, g2, ., getComposite, (, ), ;, g2, ., setComposite, (, AlphaComposite, ., getInstance, (, AlphaComposite]
[==, (, dataset, ., getItemCount, (, series, ), -, 1, ), ), {, Composite, originalComposite, =, g2, ., getComposite, (]
[), {, Composite, originalComposite, =, g2, ., getComposite, (, ), ;, g2, ., setComposite, (, AlphaComposite, ., getInstance, (, AlphaComposite]
[), ), {, Composite, originalComposite, =, g2, ., getComposite, (, ), ;, g2, ., setComposite, (, AlphaComposite, ., getInstance, (]
[-, 1, ), ), {, Composite, originalComposite, =, g2, ., getComposite, (, ), ;, g2, ., setComposite, (, AlphaComposite, .]
[., getItemCount, (, series, ), -, 1, ), ), {, Composite, originalComposite, =, g2, ., getComposite, (, ), ;, g2]
[), -, 1, ), ), {, Composite, originalComposite, =, g2, ., getComposite, (, ), ;, g2, ., setComposite, (, AlphaComposite]
[), ), {, Composite, originalComposite, =, g2, ., getComposite, (, ), ;, g2, ., setComposite, (, AlphaComposite, ., getInstance, (]
[;, g2, ., setComposite, (, AlphaComposite, ., getInstance, (, AlphaComposite, ., SRC_OVER, ,, this, ., alpha, ), ), ;, g2]
[., getComposite, (, ), ;, g2, ., setComposite, (, AlphaComposite, ., getInstance, (, AlphaComposite, ., SRC_OVER, ,, this, ., alpha]
[;, g2, ., setPaint, (, getItemFillPaint, (, series, ,, item, ,, selected, ), ), ;, GeneralPath, area, =, new, GeneralPath]
[., setComposite, (, AlphaComposite, ., getInstance, (, AlphaComposite, ., SRC_OVER, ,, this, ., alpha, ), ), ;, g2, ., setPaint]
[), ;, g2, ., setPaint, (, getItemFillPaint, (, series, ,, item, ,, selected, ), ), ;, GeneralPath, area, =, new]
[., getInstance, (, AlphaComposite, ., SRC_OVER, ,, this, ., alpha, ), ), ;, g2, ., setPaint, (, getItemFillPaint, (, series]
[,, this, ., alpha, ), ), ;, g2, ., setPaint, (, getItemFillPaint, (, series, ,, item, ,, selected, ), )]
[., SRC_OVER, ,, this, ., alpha, ), ), ;, g2, ., setPaint, (, getItemFillPaint, (, series, ,, item, ,, selected]
[), ), ;, g2, ., setPaint, (, getItemFillPaint, (, series, ,, item, ,, selected, ), ), ;, GeneralPath, area, =]
[., alpha, ), ), ;, g2, ., setPaint, (, getItemFillPaint, (, series, ,, item, ,, selected, ), ), ;, GeneralPath]
[;, GeneralPath, area, =, new, GeneralPath, (, ), ;, double, [, ], coords, =, (, double, [, ], ), drState]
[., setPaint, (, getItemFillPaint, (, series, ,, item, ,, selected, ), ), ;, GeneralPath, area, =, new, GeneralPath, (, )]
[), ;, GeneralPath, area, =, new, GeneralPath, (, ), ;, double, [, ], coords, =, (, double, [, ], )]
[,, item, ,, selected, ), ), ;, GeneralPath, area, =, new, GeneralPath, (, ), ;, double, [, ], coords, =]
[,, selected, ), ), ;, GeneralPath, area, =, new, GeneralPath, (, ), ;, double, [, ], coords, =, (, double]
[), ), ;, GeneralPath, area, =, new, GeneralPath, (, ), ;, double, [, ], coords, =, (, double, [, ]]
[;, double, [, ], coords, =, (, double, [, ], ), drState, ., lowerCoordinates, ., get, (, 0, ), ;]
[;, area, ., moveTo, (, (, float, ), coords, [, 0, ], ,, (, float, ), coords, [, 1, ]]
[;, area, ., moveTo, (, (, float, ), coords, [, 0, ], ,, (, float, ), coords, [, 1, ]]
[., get, (, 0, ), ;, area, ., moveTo, (, (, float, ), coords, [, 0, ], ,, (, float]
[., lowerCoordinates, ., get, (, 0, ), ;, area, ., moveTo, (, (, float, ), coords, [, 0, ], ,]
[), ;, area, ., moveTo, (, (, float, ), coords, [, 0, ], ,, (, float, ), coords, [, 1]
[;, for, (, int, i, =, 1, ;, i, <, drState, ., lowerCoordinates, ., size, (, ), ;, i, ++]
[., moveTo, (, (, float, ), coords, [, 0, ], ,, (, float, ), coords, [, 1, ], ), ;]
[,, (, float, ), coords, [, 1, ], ), ;, for, (, int, i, =, 1, ;, i, <, drState]
[,, (, float, ), coords, [, 1, ], ), ;, for, (, int, i, =, 1, ;, i, <, drState]
[[, 0, ], ,, (, float, ), coords, [, 1, ], ), ;, for, (, int, i, =, 1, ;]
[], ,, (, float, ), coords, [, 1, ], ), ;, for, (, int, i, =, 1, ;, i, <]
[), ;, for, (, int, i, =, 1, ;, i, <, drState, ., lowerCoordinates, ., size, (, ), ;, i]
[), ;, for, (, int, i, =, 1, ;, i, <, drState, ., lowerCoordinates, ., size, (, ), ;, i]
[[, 1, ], ), ;, for, (, int, i, =, 1, ;, i, <, drState, ., lowerCoordinates, ., size, (]
[], ), ;, for, (, int, i, =, 1, ;, i, <, drState, ., lowerCoordinates, ., size, (, ), ;]
[;, i, <, drState, ., lowerCoordinates, ., size, (, ), ;, i, ++, ), {, coords, =, (, double, []
[;, i, ++, ), {, coords, =, (, double, [, ], ), drState, ., lowerCoordinates, ., get, (, i, )]
[<, drState, ., lowerCoordinates, ., size, (, ), ;, i, ++, ), {, coords, =, (, double, [, ], )]
[;, i, ++, ), {, coords, =, (, double, [, ], ), drState, ., lowerCoordinates, ., get, (, i, )]
[., size, (, ), ;, i, ++, ), {, coords, =, (, double, [, ], ), drState, ., lowerCoordinates, .]
[., lowerCoordinates, ., size, (, ), ;, i, ++, ), {, coords, =, (, double, [, ], ), drState, .]
[), {, coords, =, (, double, [, ], ), drState, ., lowerCoordinates, ., get, (, i, ), ;, area, .]
[++, ), {, coords, =, (, double, [, ], ), drState, ., lowerCoordinates, ., get, (, i, ), ;, area]
[=, (, double, [, ], ), drState, ., lowerCoordinates, ., get, (, i, ), ;, area, ., lineTo, (, (]
[;, area, ., lineTo, (, (, float, ), coords, [, 0, ], ,, (, float, ), coords, [, 1, ]]
[;, area, ., lineTo, (, (, float, ), coords, [, 0, ], ,, (, float, ), coords, [, 1, ]]
[., get, (, i, ), ;, area, ., lineTo, (, (, float, ), coords, [, 0, ], ,, (, float]
[., lowerCoordinates, ., get, (, i, ), ;, area, ., lineTo, (, (, float, ), coords, [, 0, ], ,]
[), ;, area, ., lineTo, (, (, float, ), coords, [, 0, ], ,, (, float, ), coords, [, 1]
[;, }, int, count, =, drState, ., upperCoordinates, ., size, (, ), ;, coords, =, (, double, [, ], )]
[., lineTo, (, (, float, ), coords, [, 0, ], ,, (, float, ), coords, [, 1, ], ), ;]
[,, (, float, ), coords, [, 1, ], ), ;, }, int, count, =, drState, ., upperCoordinates, ., size, (]
[,, (, float, ), coords, [, 1, ], ), ;, }, int, count, =, drState, ., upperCoordinates, ., size, (]
[[, 0, ], ,, (, float, ), coords, [, 1, ], ), ;, }, int, count, =, drState, ., upperCoordinates]
[], ,, (, float, ), coords, [, 1, ], ), ;, }, int, count, =, drState, ., upperCoordinates, ., size]
[), ;, }, int, count, =, drState, ., upperCoordinates, ., size, (, ), ;, coords, =, (, double, [, ]]
[), ;, }, int, count, =, drState, ., upperCoordinates, ., size, (, ), ;, coords, =, (, double, [, ]]
[[, 1, ], ), ;, }, int, count, =, drState, ., upperCoordinates, ., size, (, ), ;, coords, =, (]
[], ), ;, }, int, count, =, drState, ., upperCoordinates, ., size, (, ), ;, coords, =, (, double, []
[;, coords, =, (, double, [, ], ), drState, ., upperCoordinates, ., get, (, count, -, 1, ), ;, area]
[., size, (, ), ;, coords, =, (, double, [, ], ), drState, ., upperCoordinates, ., get, (, count, -]
[., upperCoordinates, ., size, (, ), ;, coords, =, (, double, [, ], ), drState, ., upperCoordinates, ., get, (]
[=, (, double, [, ], ), drState, ., upperCoordinates, ., get, (, count, -, 1, ), ;, area, ., lineTo]
[;, area, ., lineTo, (, (, float, ), coords, [, 0, ], ,, (, float, ), coords, [, 1, ]]
[;, area, ., lineTo, (, (, float, ), coords, [, 0, ], ,, (, float, ), coords, [, 1, ]]
[., get, (, count, -, 1, ), ;, area, ., lineTo, (, (, float, ), coords, [, 0, ], ,]
[., upperCoordinates, ., get, (, count, -, 1, ), ;, area, ., lineTo, (, (, float, ), coords, [, 0]
[), ;, area, ., lineTo, (, (, float, ), coords, [, 0, ], ,, (, float, ), coords, [, 1]
[-, 1, ), ;, area, ., lineTo, (, (, float, ), coords, [, 0, ], ,, (, float, ), coords]
[), ;, area, ., lineTo, (, (, float, ), coords, [, 0, ], ,, (, float, ), coords, [, 1]
[;, for, (, int, i, =, count, -, 2, ;, i, >=, 0, ;, i, --, ), {, coords, =]
[., lineTo, (, (, float, ), coords, [, 0, ], ,, (, float, ), coords, [, 1, ], ), ;]
[,, (, float, ), coords, [, 1, ], ), ;, for, (, int, i, =, count, -, 2, ;, i]
[,, (, float, ), coords, [, 1, ], ), ;, for, (, int, i, =, count, -, 2, ;, i]
[[, 0, ], ,, (, float, ), coords, [, 1, ], ), ;, for, (, int, i, =, count, -]
[], ,, (, float, ), coords, [, 1, ], ), ;, for, (, int, i, =, count, -, 2, ;]
[), ;, for, (, int, i, =, count, -, 2, ;, i, >=, 0, ;, i, --, ), {, coords]
[), ;, for, (, int, i, =, count, -, 2, ;, i, >=, 0, ;, i, --, ), {, coords]
[[, 1, ], ), ;, for, (, int, i, =, count, -, 2, ;, i, >=, 0, ;, i, --]
[], ), ;, for, (, int, i, =, count, -, 2, ;, i, >=, 0, ;, i, --, ), {]
[;, i, >=, 0, ;, i, --, ), {, coords, =, (, double, [, ], ), drState, ., upperCoordinates, .]
[-, 2, ;, i, >=, 0, ;, i, --, ), {, coords, =, (, double, [, ], ), drState, .]
[;, i, >=, 0, ;, i, --, ), {, coords, =, (, double, [, ], ), drState, ., upperCoordinates, .]
[;, i, --, ), {, coords, =, (, double, [, ], ), drState, ., upperCoordinates, ., get, (, i, )]
[>=, 0, ;, i, --, ), {, coords, =, (, double, [, ], ), drState, ., upperCoordinates, ., get, (]
[;, i, --, ), {, coords, =, (, double, [, ], ), drState, ., upperCoordinates, ., get, (, i, )]
[), {, coords, =, (, double, [, ], ), drState, ., upperCoordinates, ., get, (, i, ), ;, area, .]
[--, ), {, coords, =, (, double, [, ], ), drState, ., upperCoordinates, ., get, (, i, ), ;, area]
[=, (, double, [, ], ), drState, ., upperCoordinates, ., get, (, i, ), ;, area, ., lineTo, (, (]
[;, area, ., lineTo, (, (, float, ), coords, [, 0, ], ,, (, float, ), coords, [, 1, ]]
[;, area, ., lineTo, (, (, float, ), coords, [, 0, ], ,, (, float, ), coords, [, 1, ]]
[., get, (, i, ), ;, area, ., lineTo, (, (, float, ), coords, [, 0, ], ,, (, float]
[., upperCoordinates, ., get, (, i, ), ;, area, ., lineTo, (, (, float, ), coords, [, 0, ], ,]
[), ;, area, ., lineTo, (, (, float, ), coords, [, 0, ], ,, (, float, ), coords, [, 1]
[;, }, area, ., closePath, (, ), ;, g2, ., fill, (, area, ), ;, g2, ., setComposite, (, originalComposite]
[., lineTo, (, (, float, ), coords, [, 0, ], ,, (, float, ), coords, [, 1, ], ), ;]
[,, (, float, ), coords, [, 1, ], ), ;, }, area, ., closePath, (, ), ;, g2, ., fill]
[,, (, float, ), coords, [, 1, ], ), ;, }, area, ., closePath, (, ), ;, g2, ., fill]
[[, 0, ], ,, (, float, ), coords, [, 1, ], ), ;, }, area, ., closePath, (, ), ;]
[], ,, (, float, ), coords, [, 1, ], ), ;, }, area, ., closePath, (, ), ;, g2, .]
[), ;, }, area, ., closePath, (, ), ;, g2, ., fill, (, area, ), ;, g2, ., setComposite, (]
[), ;, }, area, ., closePath, (, ), ;, g2, ., fill, (, area, ), ;, g2, ., setComposite, (]
[[, 1, ], ), ;, }, area, ., closePath, (, ), ;, g2, ., fill, (, area, ), ;, g2]
[], ), ;, }, area, ., closePath, (, ), ;, g2, ., fill, (, area, ), ;, g2, ., setComposite]
[;, g2, ., fill, (, area, ), ;, g2, ., setComposite, (, originalComposite, ), ;, drState, ., lowerCoordinates, ., clear]
[., closePath, (, ), ;, g2, ., fill, (, area, ), ;, g2, ., setComposite, (, originalComposite, ), ;, drState]
[;, g2, ., setComposite, (, originalComposite, ), ;, drState, ., lowerCoordinates, ., clear, (, ), ;, drState, ., upperCoordinates, .]
[., fill, (, area, ), ;, g2, ., setComposite, (, originalComposite, ), ;, drState, ., lowerCoordinates, ., clear, (, )]
[), ;, g2, ., setComposite, (, originalComposite, ), ;, drState, ., lowerCoordinates, ., clear, (, ), ;, drState, ., upperCoordinates]
[;, drState, ., lowerCoordinates, ., clear, (, ), ;, drState, ., upperCoordinates, ., clear, (, ), ;, }, }, if]
[., setComposite, (, originalComposite, ), ;, drState, ., lowerCoordinates, ., clear, (, ), ;, drState, ., upperCoordinates, ., clear, (]
[), ;, drState, ., lowerCoordinates, ., clear, (, ), ;, drState, ., upperCoordinates, ., clear, (, ), ;, }, }]
[;, drState, ., upperCoordinates, ., clear, (, ), ;, }, }, if, (, isLinePass, (, pass, ), ), {, if]
[., clear, (, ), ;, drState, ., upperCoordinates, ., clear, (, ), ;, }, }, if, (, isLinePass, (, pass]
[., lowerCoordinates, ., clear, (, ), ;, drState, ., upperCoordinates, ., clear, (, ), ;, }, }, if, (, isLinePass]
[;, }, }, if, (, isLinePass, (, pass, ), ), {, if, (, item, ==, 0, ), {, State, s]
[., clear, (, ), ;, }, }, if, (, isLinePass, (, pass, ), ), {, if, (, item, ==, 0]
[., upperCoordinates, ., clear, (, ), ;, }, }, if, (, isLinePass, (, pass, ), ), {, if, (, item]
[), {, if, (, item, ==, 0, ), {, State, s, =, (, State, ), state, ;, s, ., seriesPath]
[), ), {, if, (, item, ==, 0, ), {, State, s, =, (, State, ), state, ;, s, .]
[), {, State, s, =, (, State, ), state, ;, s, ., seriesPath, ., reset, (, ), ;, s, .]
[==, 0, ), {, State, s, =, (, State, ), state, ;, s, ., seriesPath, ., reset, (, ), ;]
[), {, State, s, =, (, State, ), state, ;, s, ., seriesPath, ., reset, (, ), ;, s, .]
[;, s, ., seriesPath, ., reset, (, ), ;, s, ., setLastPointGood, (, false, ), ;, }, if, (, getItemLineVisible]
[;, s, ., seriesPath, ., reset, (, ), ;, s, ., setLastPointGood, (, false, ), ;, }, if, (, getItemLineVisible]
[;, s, ., setLastPointGood, (, false, ), ;, }, if, (, getItemLineVisible, (, series, ,, item, ), ), {, drawPrimaryLineAsPath]
[., reset, (, ), ;, s, ., setLastPointGood, (, false, ), ;, }, if, (, getItemLineVisible, (, series, ,, item]
[., seriesPath, ., reset, (, ), ;, s, ., setLastPointGood, (, false, ), ;, }, if, (, getItemLineVisible, (, series]
[;, }, if, (, getItemLineVisible, (, series, ,, item, ), ), {, drawPrimaryLineAsPath, (, state, ,, g2, ,, plot, ,]
[., setLastPointGood, (, false, ), ;, }, if, (, getItemLineVisible, (, series, ,, item, ), ), {, drawPrimaryLineAsPath, (, state]
[), ;, }, if, (, getItemLineVisible, (, series, ,, item, ), ), {, drawPrimaryLineAsPath, (, state, ,, g2, ,, plot]
[), {, drawPrimaryLineAsPath, (, state, ,, g2, ,, plot, ,, dataset, ,, pass, ,, series, ,, item, ,, selected, ,]
[,, item, ), ), {, drawPrimaryLineAsPath, (, state, ,, g2, ,, plot, ,, dataset, ,, pass, ,, series, ,, item]
[), ), {, drawPrimaryLineAsPath, (, state, ,, g2, ,, plot, ,, dataset, ,, pass, ,, series, ,, item, ,, selected]
[;, }, }, else, if, (, isItemPass, (, pass, ), ), {, EntityCollection, entities, =, null, ;, if, (, state]
[,, g2, ,, plot, ,, dataset, ,, pass, ,, series, ,, item, ,, selected, ,, domainAxis, ,, rangeAxis, ,, dataArea]
[,, plot, ,, dataset, ,, pass, ,, series, ,, item, ,, selected, ,, domainAxis, ,, rangeAxis, ,, dataArea, ), ;]
[,, dataset, ,, pass, ,, series, ,, item, ,, selected, ,, domainAxis, ,, rangeAxis, ,, dataArea, ), ;, }, }]
[,, pass, ,, series, ,, item, ,, selected, ,, domainAxis, ,, rangeAxis, ,, dataArea, ), ;, }, }, else, if]
[,, series, ,, item, ,, selected, ,, domainAxis, ,, rangeAxis, ,, dataArea, ), ;, }, }, else, if, (, isItemPass]
[,, item, ,, selected, ,, domainAxis, ,, rangeAxis, ,, dataArea, ), ;, }, }, else, if, (, isItemPass, (, pass]
[,, selected, ,, domainAxis, ,, rangeAxis, ,, dataArea, ), ;, }, }, else, if, (, isItemPass, (, pass, ), )]
[,, domainAxis, ,, rangeAxis, ,, dataArea, ), ;, }, }, else, if, (, isItemPass, (, pass, ), ), {, EntityCollection]
[,, rangeAxis, ,, dataArea, ), ;, }, }, else, if, (, isItemPass, (, pass, ), ), {, EntityCollection, entities, =]
[,, dataArea, ), ;, }, }, else, if, (, isItemPass, (, pass, ), ), {, EntityCollection, entities, =, null, ;]
[), ;, }, }, else, if, (, isItemPass, (, pass, ), ), {, EntityCollection, entities, =, null, ;, if, (]
[), {, EntityCollection, entities, =, null, ;, if, (, state, ., getInfo, (, ), !=, null, ), {, entities, =]
[), ), {, EntityCollection, entities, =, null, ;, if, (, state, ., getInfo, (, ), !=, null, ), {, entities]
[;, if, (, state, ., getInfo, (, ), !=, null, ), {, entities, =, state, ., getInfo, (, ), .]
[), {, entities, =, state, ., getInfo, (, ), ., getOwner, (, ), ., getEntityCollection, (, ), ;, }, drawShape2]
[!=, null, ), {, entities, =, state, ., getInfo, (, ), ., getOwner, (, ), ., getEntityCollection, (, ), ;]
[., getInfo, (, ), !=, null, ), {, entities, =, state, ., getInfo, (, ), ., getOwner, (, ), .]
[), {, entities, =, state, ., getInfo, (, ), ., getOwner, (, ), ., getEntityCollection, (, ), ;, }, drawShape2]
[=, state, ., getInfo, (, ), ., getOwner, (, ), ., getEntityCollection, (, ), ;, }, drawShape2, (, g2, ,]
[;, }, drawShape2, (, g2, ,, dataArea, ,, plot, ,, dataset, ,, pass, ,, series, ,, item, ,, selected, ,]
[., getEntityCollection, (, ), ;, }, drawShape2, (, g2, ,, dataArea, ,, plot, ,, dataset, ,, pass, ,, series, ,]
[., getOwner, (, ), ., getEntityCollection, (, ), ;, }, drawShape2, (, g2, ,, dataArea, ,, plot, ,, dataset, ,]
[., getInfo, (, ), ., getOwner, (, ), ., getEntityCollection, (, ), ;, }, drawShape2, (, g2, ,, dataArea, ,]
[;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true]
[,, dataArea, ,, plot, ,, dataset, ,, pass, ,, series, ,, item, ,, selected, ,, domainAxis, ,, rangeAxis, ,, null]
[,, plot, ,, dataset, ,, pass, ,, series, ,, item, ,, selected, ,, domainAxis, ,, rangeAxis, ,, null, ,, entities]
[,, dataset, ,, pass, ,, series, ,, item, ,, selected, ,, domainAxis, ,, rangeAxis, ,, null, ,, entities, ), ;]
[,, pass, ,, series, ,, item, ,, selected, ,, domainAxis, ,, rangeAxis, ,, null, ,, entities, ), ;, }, }]
[,, series, ,, item, ,, selected, ,, domainAxis, ,, rangeAxis, ,, null, ,, entities, ), ;, }, }, public, boolean]
[,, item, ,, selected, ,, domainAxis, ,, rangeAxis, ,, null, ,, entities, ), ;, }, }, public, boolean, equals, (]
[,, selected, ,, domainAxis, ,, rangeAxis, ,, null, ,, entities, ), ;, }, }, public, boolean, equals, (, Object, obj]
[,, domainAxis, ,, rangeAxis, ,, null, ,, entities, ), ;, }, }, public, boolean, equals, (, Object, obj, ), {]
[,, rangeAxis, ,, null, ,, entities, ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[,, null, ,, entities, ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[,, entities, ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, )]
[), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, DeviationRenderer, ), ), {, return, false, ;, }]
[==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, DeviationRenderer, ), ), {, return, false]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, DeviationRenderer, ), ), {, return, false, ;, }]
[;, }, if, (, !, (, obj, instanceof, DeviationRenderer, ), ), {, return, false, ;, }, DeviationRenderer, that, =, (]
[), {, return, false, ;, }, DeviationRenderer, that, =, (, DeviationRenderer, ), obj, ;, if, (, this, ., alpha, !=]
[), {, return, false, ;, }, DeviationRenderer, that, =, (, DeviationRenderer, ), obj, ;, if, (, this, ., alpha, !=]
[), ), {, return, false, ;, }, DeviationRenderer, that, =, (, DeviationRenderer, ), obj, ;, if, (, this, ., alpha]
[instanceof, DeviationRenderer, ), ), {, return, false, ;, }, DeviationRenderer, that, =, (, DeviationRenderer, ), obj, ;, if, (, this]
[;, }, DeviationRenderer, that, =, (, DeviationRenderer, ), obj, ;, if, (, this, ., alpha, !=, that, ., alpha, )]
[;, if, (, this, ., alpha, !=, that, ., alpha, ), {, return, false, ;, }, return, super, ., equals]
[;, if, (, this, ., alpha, !=, that, ., alpha, ), {, return, false, ;, }, return, super, ., equals]
[), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, }]
[!=, that, ., alpha, ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, }]
[., alpha, !=, that, ., alpha, ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;]
[), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, }]
[., alpha, ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, }]
[;, }, return, super, ., equals, (, obj, ), ;, }, }]
[;, }, }]
[., equals, (, obj, ), ;, }, }]
[), ;, }, }]
