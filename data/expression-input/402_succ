[private, static, final, long, serialVersionUID, =, 3145790132623583142L, ;, private, final, int, iOffset, ;, private, final, int, iMin, ;, private, final]
[), private, static, final, long, serialVersionUID, =, 3145790132623583142L, ;, private, final, int, iOffset, ;, private, final, int, iMin, ;, private]
[;, private, final, int, iOffset, ;, private, final, int, iMin, ;, private, final, int, iMax, ;, public, OffsetDateTimeField, (, DateTimeField]
[,, (, field, ==, null, ?, null, :, field, ., getType, (, ), ), ,, offset, ,, Integer, ., MIN_VALUE]
[,, offset, ,, Integer, ., MIN_VALUE, ,, Integer, ., MAX_VALUE, ), ;, }, public, OffsetDateTimeField, (, DateTimeField, field, ,, DateTimeFieldType]
[), ,, offset, ,, Integer, ., MIN_VALUE, ,, Integer, ., MAX_VALUE, ), ;, }, public, OffsetDateTimeField, (, DateTimeField, field, ,]
[?, null, :, field, ., getType, (, ), ), ,, offset, ,, Integer, ., MIN_VALUE, ,, Integer, ., MAX_VALUE, )]
[==, null, ?, null, :, field, ., getType, (, ), ), ,, offset, ,, Integer, ., MIN_VALUE, ,, Integer, .]
[?, null, :, field, ., getType, (, ), ), ,, offset, ,, Integer, ., MIN_VALUE, ,, Integer, ., MAX_VALUE, )]
[:, field, ., getType, (, ), ), ,, offset, ,, Integer, ., MIN_VALUE, ,, Integer, ., MAX_VALUE, ), ;, }]
[), ,, offset, ,, Integer, ., MIN_VALUE, ,, Integer, ., MAX_VALUE, ), ;, }, public, OffsetDateTimeField, (, DateTimeField, field, ,]
[., getType, (, ), ), ,, offset, ,, Integer, ., MIN_VALUE, ,, Integer, ., MAX_VALUE, ), ;, }, public, OffsetDateTimeField]
[,, Integer, ., MIN_VALUE, ,, Integer, ., MAX_VALUE, ), ;, }, public, OffsetDateTimeField, (, DateTimeField, field, ,, DateTimeFieldType, type, ,]
[,, Integer, ., MAX_VALUE, ), ;, }, public, OffsetDateTimeField, (, DateTimeField, field, ,, DateTimeFieldType, type, ,, int, offset, ), {]
[., MIN_VALUE, ,, Integer, ., MAX_VALUE, ), ;, }, public, OffsetDateTimeField, (, DateTimeField, field, ,, DateTimeFieldType, type, ,, int, offset]
[), ;, }, public, OffsetDateTimeField, (, DateTimeField, field, ,, DateTimeFieldType, type, ,, int, offset, ), {, this, (, field, ,]
[., MAX_VALUE, ), ;, }, public, OffsetDateTimeField, (, DateTimeField, field, ,, DateTimeFieldType, type, ,, int, offset, ), {, this, (]
[,, type, ,, offset, ,, Integer, ., MIN_VALUE, ,, Integer, ., MAX_VALUE, ), ;, }, public, OffsetDateTimeField, (, DateTimeField, field]
[,, offset, ,, Integer, ., MIN_VALUE, ,, Integer, ., MAX_VALUE, ), ;, }, public, OffsetDateTimeField, (, DateTimeField, field, ,, DateTimeFieldType]
[,, Integer, ., MIN_VALUE, ,, Integer, ., MAX_VALUE, ), ;, }, public, OffsetDateTimeField, (, DateTimeField, field, ,, DateTimeFieldType, type, ,]
[,, Integer, ., MAX_VALUE, ), ;, }, public, OffsetDateTimeField, (, DateTimeField, field, ,, DateTimeFieldType, type, ,, int, offset, ,, int]
[., MIN_VALUE, ,, Integer, ., MAX_VALUE, ), ;, }, public, OffsetDateTimeField, (, DateTimeField, field, ,, DateTimeFieldType, type, ,, int, offset]
[), ;, }, public, OffsetDateTimeField, (, DateTimeField, field, ,, DateTimeFieldType, type, ,, int, offset, ,, int, minValue, ,, int, maxValue]
[., MAX_VALUE, ), ;, }, public, OffsetDateTimeField, (, DateTimeField, field, ,, DateTimeFieldType, type, ,, int, offset, ,, int, minValue, ,]
[,, type, ), ;, if, (, offset, ==, 0, ), {, throw, new, IllegalArgumentException, (, "The offset cannot be zero", ), ;, }, iOffset]
[), ;, if, (, offset, ==, 0, ), {, throw, new, IllegalArgumentException, (, "The offset cannot be zero", ), ;, }, iOffset, =, offset]
[), {, throw, new, IllegalArgumentException, (, "The offset cannot be zero", ), ;, }, iOffset, =, offset, ;, if, (, minValue, <, (, field]
[==, 0, ), {, throw, new, IllegalArgumentException, (, "The offset cannot be zero", ), ;, }, iOffset, =, offset, ;, if, (, minValue, <]
[), {, throw, new, IllegalArgumentException, (, "The offset cannot be zero", ), ;, }, iOffset, =, offset, ;, if, (, minValue, <, (, field]
[;, }, iOffset, =, offset, ;, if, (, minValue, <, (, field, ., getMinimumValue, (, ), +, offset, ), )]
[), ;, }, iOffset, =, offset, ;, if, (, minValue, <, (, field, ., getMinimumValue, (, ), +, offset, )]
[=, offset, ;, if, (, minValue, <, (, field, ., getMinimumValue, (, ), +, offset, ), ), {, iMin, =]
[;, if, (, minValue, <, (, field, ., getMinimumValue, (, ), +, offset, ), ), {, iMin, =, field, .]
[), {, iMin, =, field, ., getMinimumValue, (, ), +, offset, ;, }, else, {, iMin, =, minValue, ;, }]
[<, (, field, ., getMinimumValue, (, ), +, offset, ), ), {, iMin, =, field, ., getMinimumValue, (, ), +]
[), {, iMin, =, field, ., getMinimumValue, (, ), +, offset, ;, }, else, {, iMin, =, minValue, ;, }]
[), ), {, iMin, =, field, ., getMinimumValue, (, ), +, offset, ;, }, else, {, iMin, =, minValue, ;]
[+, offset, ), ), {, iMin, =, field, ., getMinimumValue, (, ), +, offset, ;, }, else, {, iMin, =]
[., getMinimumValue, (, ), +, offset, ), ), {, iMin, =, field, ., getMinimumValue, (, ), +, offset, ;, }]
[), ), {, iMin, =, field, ., getMinimumValue, (, ), +, offset, ;, }, else, {, iMin, =, minValue, ;]
[=, field, ., getMinimumValue, (, ), +, offset, ;, }, else, {, iMin, =, minValue, ;, }, if, (, maxValue]
[;, }, else, {, iMin, =, minValue, ;, }, if, (, maxValue, >, (, field, ., getMaximumValue, (, ), +]
[+, offset, ;, }, else, {, iMin, =, minValue, ;, }, if, (, maxValue, >, (, field, ., getMaximumValue, (]
[., getMinimumValue, (, ), +, offset, ;, }, else, {, iMin, =, minValue, ;, }, if, (, maxValue, >, (]
[;, }, else, {, iMin, =, minValue, ;, }, if, (, maxValue, >, (, field, ., getMaximumValue, (, ), +]
[=, minValue, ;, }, if, (, maxValue, >, (, field, ., getMaximumValue, (, ), +, offset, ), ), {, iMax]
[;, }, if, (, maxValue, >, (, field, ., getMaximumValue, (, ), +, offset, ), ), {, iMax, =, field]
[), {, iMax, =, field, ., getMaximumValue, (, ), +, offset, ;, }, else, {, iMax, =, maxValue, ;, }]
[>, (, field, ., getMaximumValue, (, ), +, offset, ), ), {, iMax, =, field, ., getMaximumValue, (, ), +]
[), {, iMax, =, field, ., getMaximumValue, (, ), +, offset, ;, }, else, {, iMax, =, maxValue, ;, }]
[), ), {, iMax, =, field, ., getMaximumValue, (, ), +, offset, ;, }, else, {, iMax, =, maxValue, ;]
[+, offset, ), ), {, iMax, =, field, ., getMaximumValue, (, ), +, offset, ;, }, else, {, iMax, =]
[., getMaximumValue, (, ), +, offset, ), ), {, iMax, =, field, ., getMaximumValue, (, ), +, offset, ;, }]
[), ), {, iMax, =, field, ., getMaximumValue, (, ), +, offset, ;, }, else, {, iMax, =, maxValue, ;]
[=, field, ., getMaximumValue, (, ), +, offset, ;, }, else, {, iMax, =, maxValue, ;, }, }, public, int]
[;, }, else, {, iMax, =, maxValue, ;, }, }, public, int, get, (, long, instant, ), {, return, super]
[+, offset, ;, }, else, {, iMax, =, maxValue, ;, }, }, public, int, get, (, long, instant, ), {]
[., getMaximumValue, (, ), +, offset, ;, }, else, {, iMax, =, maxValue, ;, }, }, public, int, get, (]
[;, }, else, {, iMax, =, maxValue, ;, }, }, public, int, get, (, long, instant, ), {, return, super]
[=, maxValue, ;, }, }, public, int, get, (, long, instant, ), {, return, super, ., get, (, instant, )]
[;, }, }, public, int, get, (, long, instant, ), {, return, super, ., get, (, instant, ), +, iOffset]
[;, }, public, long, add, (, long, instant, ,, int, amount, ), {, instant, =, super, ., add, (, instant]
[+, iOffset, ;, }, public, long, add, (, long, instant, ,, int, amount, ), {, instant, =, super, ., add]
[., get, (, instant, ), +, iOffset, ;, }, public, long, add, (, long, instant, ,, int, amount, ), {]
[), +, iOffset, ;, }, public, long, add, (, long, instant, ,, int, amount, ), {, instant, =, super, .]
[;, }, public, long, add, (, long, instant, ,, int, amount, ), {, instant, =, super, ., add, (, instant]
[=, super, ., add, (, instant, ,, amount, ), ;, FieldUtils, ., verifyValueBounds, (, this, ,, get, (, instant, )]
[;, FieldUtils, ., verifyValueBounds, (, this, ,, get, (, instant, ), ,, iMin, ,, iMax, ), ;, return, instant, ;]
[., add, (, instant, ,, amount, ), ;, FieldUtils, ., verifyValueBounds, (, this, ,, get, (, instant, ), ,, iMin]
[,, amount, ), ;, FieldUtils, ., verifyValueBounds, (, this, ,, get, (, instant, ), ,, iMin, ,, iMax, ), ;]
[), ;, FieldUtils, ., verifyValueBounds, (, this, ,, get, (, instant, ), ,, iMin, ,, iMax, ), ;, return, instant]
[;, return, instant, ;, }, public, long, add, (, long, instant, ,, long, amount, ), {, instant, =, super, .]
[., verifyValueBounds, (, this, ,, get, (, instant, ), ,, iMin, ,, iMax, ), ;, return, instant, ;, }, public]
[,, get, (, instant, ), ,, iMin, ,, iMax, ), ;, return, instant, ;, }, public, long, add, (, long]
[,, iMin, ,, iMax, ), ;, return, instant, ;, }, public, long, add, (, long, instant, ,, long, amount, )]
[), ,, iMin, ,, iMax, ), ;, return, instant, ;, }, public, long, add, (, long, instant, ,, long, amount]
[,, iMax, ), ;, return, instant, ;, }, public, long, add, (, long, instant, ,, long, amount, ), {, instant]
[), ;, return, instant, ;, }, public, long, add, (, long, instant, ,, long, amount, ), {, instant, =, super]
[;, }, public, long, add, (, long, instant, ,, long, amount, ), {, instant, =, super, ., add, (, instant]
[=, super, ., add, (, instant, ,, amount, ), ;, FieldUtils, ., verifyValueBounds, (, this, ,, get, (, instant, )]
[;, FieldUtils, ., verifyValueBounds, (, this, ,, get, (, instant, ), ,, iMin, ,, iMax, ), ;, return, instant, ;]
[., add, (, instant, ,, amount, ), ;, FieldUtils, ., verifyValueBounds, (, this, ,, get, (, instant, ), ,, iMin]
[,, amount, ), ;, FieldUtils, ., verifyValueBounds, (, this, ,, get, (, instant, ), ,, iMin, ,, iMax, ), ;]
[), ;, FieldUtils, ., verifyValueBounds, (, this, ,, get, (, instant, ), ,, iMin, ,, iMax, ), ;, return, instant]
[;, return, instant, ;, }, public, long, addWrapField, (, long, instant, ,, int, amount, ), {, return, set, (, instant]
[., verifyValueBounds, (, this, ,, get, (, instant, ), ,, iMin, ,, iMax, ), ;, return, instant, ;, }, public]
[,, get, (, instant, ), ,, iMin, ,, iMax, ), ;, return, instant, ;, }, public, long, addWrapField, (, long]
[,, iMin, ,, iMax, ), ;, return, instant, ;, }, public, long, addWrapField, (, long, instant, ,, int, amount, )]
[), ,, iMin, ,, iMax, ), ;, return, instant, ;, }, public, long, addWrapField, (, long, instant, ,, int, amount]
[,, iMax, ), ;, return, instant, ;, }, public, long, addWrapField, (, long, instant, ,, int, amount, ), {, return]
[), ;, return, instant, ;, }, public, long, addWrapField, (, long, instant, ,, int, amount, ), {, return, set, (]
[;, }, public, long, addWrapField, (, long, instant, ,, int, amount, ), {, return, set, (, instant, ,, FieldUtils, .]
[;, }, public, long, set, (, long, instant, ,, int, value, ), {, FieldUtils, ., verifyValueBounds, (, this, ,, value]
[,, FieldUtils, ., getWrappedValue, (, get, (, instant, ), ,, amount, ,, iMin, ,, iMax, ), ), ;, }, public]
[), ;, }, public, long, set, (, long, instant, ,, int, value, ), {, FieldUtils, ., verifyValueBounds, (, this, ,]
[., getWrappedValue, (, get, (, instant, ), ,, amount, ,, iMin, ,, iMax, ), ), ;, }, public, long, set]
[,, amount, ,, iMin, ,, iMax, ), ), ;, }, public, long, set, (, long, instant, ,, int, value, )]
[), ,, amount, ,, iMin, ,, iMax, ), ), ;, }, public, long, set, (, long, instant, ,, int, value]
[,, iMin, ,, iMax, ), ), ;, }, public, long, set, (, long, instant, ,, int, value, ), {, FieldUtils]
[,, iMax, ), ), ;, }, public, long, set, (, long, instant, ,, int, value, ), {, FieldUtils, ., verifyValueBounds]
[), ), ;, }, public, long, set, (, long, instant, ,, int, value, ), {, FieldUtils, ., verifyValueBounds, (, this]
[;, return, super, ., set, (, instant, ,, value, -, iOffset, ), ;, }, public, boolean, isLeap, (, long, instant]
[., verifyValueBounds, (, this, ,, value, ,, iMin, ,, iMax, ), ;, return, super, ., set, (, instant, ,, value]
[,, value, ,, iMin, ,, iMax, ), ;, return, super, ., set, (, instant, ,, value, -, iOffset, ), ;]
[,, iMin, ,, iMax, ), ;, return, super, ., set, (, instant, ,, value, -, iOffset, ), ;, }, public]
[,, iMax, ), ;, return, super, ., set, (, instant, ,, value, -, iOffset, ), ;, }, public, boolean, isLeap]
[), ;, return, super, ., set, (, instant, ,, value, -, iOffset, ), ;, }, public, boolean, isLeap, (, long]
[;, }, public, boolean, isLeap, (, long, instant, ), {, return, getWrappedField, (, ), ., isLeap, (, instant, ), ;]
[., set, (, instant, ,, value, -, iOffset, ), ;, }, public, boolean, isLeap, (, long, instant, ), {, return]
[,, value, -, iOffset, ), ;, }, public, boolean, isLeap, (, long, instant, ), {, return, getWrappedField, (, ), .]
[), ;, }, public, boolean, isLeap, (, long, instant, ), {, return, getWrappedField, (, ), ., isLeap, (, instant, )]
[-, iOffset, ), ;, }, public, boolean, isLeap, (, long, instant, ), {, return, getWrappedField, (, ), ., isLeap, (]
[), ;, }, public, boolean, isLeap, (, long, instant, ), {, return, getWrappedField, (, ), ., isLeap, (, instant, )]
[;, }, public, int, getLeapAmount, (, long, instant, ), {, return, getWrappedField, (, ), ., getLeapAmount, (, instant, ), ;]
[., isLeap, (, instant, ), ;, }, public, int, getLeapAmount, (, long, instant, ), {, return, getWrappedField, (, ), .]
[), ;, }, public, int, getLeapAmount, (, long, instant, ), {, return, getWrappedField, (, ), ., getLeapAmount, (, instant, )]
[;, }, public, DurationField, getLeapDurationField, (, ), {, return, getWrappedField, (, ), ., getLeapDurationField, (, ), ;, }, public, int]
[., getLeapAmount, (, instant, ), ;, }, public, DurationField, getLeapDurationField, (, ), {, return, getWrappedField, (, ), ., getLeapDurationField, (]
[), ;, }, public, DurationField, getLeapDurationField, (, ), {, return, getWrappedField, (, ), ., getLeapDurationField, (, ), ;, }, public]
[;, }, public, int, getMinimumValue, (, ), {, return, iMin, ;, }, public, int, getMaximumValue, (, ), {, return, iMax]
[., getLeapDurationField, (, ), ;, }, public, int, getMinimumValue, (, ), {, return, iMin, ;, }, public, int, getMaximumValue, (]
[;, }, public, int, getMaximumValue, (, ), {, return, iMax, ;, }, public, long, roundFloor, (, long, instant, ), {]
[;, }, public, long, roundFloor, (, long, instant, ), {, return, getWrappedField, (, ), ., roundFloor, (, instant, ), ;]
[;, }, public, long, roundCeiling, (, long, instant, ), {, return, getWrappedField, (, ), ., roundCeiling, (, instant, ), ;]
[., roundFloor, (, instant, ), ;, }, public, long, roundCeiling, (, long, instant, ), {, return, getWrappedField, (, ), .]
[), ;, }, public, long, roundCeiling, (, long, instant, ), {, return, getWrappedField, (, ), ., roundCeiling, (, instant, )]
[;, }, public, long, roundHalfFloor, (, long, instant, ), {, return, getWrappedField, (, ), ., roundHalfFloor, (, instant, ), ;]
[., roundCeiling, (, instant, ), ;, }, public, long, roundHalfFloor, (, long, instant, ), {, return, getWrappedField, (, ), .]
[), ;, }, public, long, roundHalfFloor, (, long, instant, ), {, return, getWrappedField, (, ), ., roundHalfFloor, (, instant, )]
[;, }, public, long, roundHalfCeiling, (, long, instant, ), {, return, getWrappedField, (, ), ., roundHalfCeiling, (, instant, ), ;]
[., roundHalfFloor, (, instant, ), ;, }, public, long, roundHalfCeiling, (, long, instant, ), {, return, getWrappedField, (, ), .]
[), ;, }, public, long, roundHalfCeiling, (, long, instant, ), {, return, getWrappedField, (, ), ., roundHalfCeiling, (, instant, )]
[;, }, public, long, roundHalfEven, (, long, instant, ), {, return, getWrappedField, (, ), ., roundHalfEven, (, instant, ), ;]
[., roundHalfCeiling, (, instant, ), ;, }, public, long, roundHalfEven, (, long, instant, ), {, return, getWrappedField, (, ), .]
[), ;, }, public, long, roundHalfEven, (, long, instant, ), {, return, getWrappedField, (, ), ., roundHalfEven, (, instant, )]
[;, }, public, long, remainder, (, long, instant, ), {, return, getWrappedField, (, ), ., remainder, (, instant, ), ;]
[., roundHalfEven, (, instant, ), ;, }, public, long, remainder, (, long, instant, ), {, return, getWrappedField, (, ), .]
[), ;, }, public, long, remainder, (, long, instant, ), {, return, getWrappedField, (, ), ., remainder, (, instant, )]
[;, }, public, int, getOffset, (, ), {, return, iOffset, ;, }, }]
[., remainder, (, instant, ), ;, }, public, int, getOffset, (, ), {, return, iOffset, ;, }, }]
[), ;, }, public, int, getOffset, (, ), {, return, iOffset, ;, }, }]
[;, }, }]
