[org, ., joda, ., time, ., DurationFieldType, ;, public, class, PreciseDurationField, extends, BaseDurationField, {, private, static, final, long, serialVersionUID, =]
[., joda, ., time, ., DurationFieldType, ;, public, class, PreciseDurationField, extends, BaseDurationField, {, private, static, final, long, serialVersionUID, =, -]
[-, 8346152187724495365L, ;, private, final, long, iUnitMillis, ;, public, PreciseDurationField, (, DurationFieldType, type, ,, long, unitMillis, ), {, super, (]
[private, final, long, iUnitMillis, ;, public, PreciseDurationField, (, DurationFieldType, type, ,, long, unitMillis, ), {, super, (, type, ), ;]
[long, iUnitMillis, ;, public, PreciseDurationField, (, DurationFieldType, type, ,, long, unitMillis, ), {, super, (, type, ), ;, iUnitMillis, =]
[), {, super, (, type, ), ;, iUnitMillis, =, unitMillis, ;, }, public, final, boolean, isPrecise, (, ), {, return]
[}, public, final, boolean, isPrecise, (, ), {, return, true, ;, }, public, final, long, getUnitMillis, (, ), {, return]
[getUnitMillis, (, ), {, return, iUnitMillis, ;, }, public, long, getValueAsLong, (, long, duration, ,, long, instant, ), {, return]
[getUnitMillis, (, ), {, return, iUnitMillis, ;, }, public, long, getValueAsLong, (, long, duration, ,, long, instant, ), {, return]
[), {, return, iUnitMillis, ;, }, public, long, getValueAsLong, (, long, duration, ,, long, instant, ), {, return, duration, /]
[), {, return, duration, /, iUnitMillis, ;, }, public, long, getMillis, (, int, value, ,, long, instant, ), {, return]
[), {, return, duration, /, iUnitMillis, ;, }, public, long, getMillis, (, int, value, ,, long, instant, ), {, return]
[return, duration, /, iUnitMillis, ;, }, public, long, getMillis, (, int, value, ,, long, instant, ), {, return, value, *]
[), {, return, value, *, iUnitMillis, ;, }, public, long, getMillis, (, long, value, ,, long, instant, ), {, return]
[), {, return, value, *, iUnitMillis, ;, }, public, long, getMillis, (, long, value, ,, long, instant, ), {, return]
[*, iUnitMillis, ;, }, public, long, getMillis, (, long, value, ,, long, instant, ), {, return, FieldUtils, ., safeMultiply, (]
[;, }, public, long, getMillis, (, long, value, ,, long, instant, ), {, return, FieldUtils, ., safeMultiply, (, value, ,]
[value, ,, iUnitMillis, ), ;, }, public, long, add, (, long, instant, ,, int, value, ), {, long, addition, =]
[value, ,, iUnitMillis, ), ;, }, public, long, add, (, long, instant, ,, int, value, ), {, long, addition, =]
[iUnitMillis, ), ;, }, public, long, add, (, long, instant, ,, int, value, ), {, long, addition, =, value, *]
[}, public, long, add, (, long, instant, ,, int, value, ), {, long, addition, =, value, *, iUnitMillis, ;, return]
[}, public, long, add, (, long, instant, ,, int, value, ), {, long, addition, =, value, *, iUnitMillis, ;, return]
[(, long, instant, ,, int, value, ), {, long, addition, =, value, *, iUnitMillis, ;, return, FieldUtils, ., safeAdd, (]
[instant, ,, int, value, ), {, long, addition, =, value, *, iUnitMillis, ;, return, FieldUtils, ., safeAdd, (, instant, ,]
[instant, ,, addition, ), ;, }, public, long, add, (, long, instant, ,, long, value, ), {, long, addition, =]
[instant, ,, addition, ), ;, }, public, long, add, (, long, instant, ,, long, value, ), {, long, addition, =]
[;, }, public, long, add, (, long, instant, ,, long, value, ), {, long, addition, =, FieldUtils, ., safeMultiply, (]
[public, long, add, (, long, instant, ,, long, value, ), {, long, addition, =, FieldUtils, ., safeMultiply, (, value, ,]
[long, instant, ,, long, value, ), {, long, addition, =, FieldUtils, ., safeMultiply, (, value, ,, iUnitMillis, ), ;, return]
[long, instant, ,, long, value, ), {, long, addition, =, FieldUtils, ., safeMultiply, (, value, ,, iUnitMillis, ), ;, return]
[value, ), {, long, addition, =, FieldUtils, ., safeMultiply, (, value, ,, iUnitMillis, ), ;, return, FieldUtils, ., safeAdd, (]
[{, long, addition, =, FieldUtils, ., safeMultiply, (, value, ,, iUnitMillis, ), ;, return, FieldUtils, ., safeAdd, (, instant, ,]
[instant, ,, addition, ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, long, difference, =]
[instant, ,, addition, ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, long, difference, =]
[;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, long, difference, =, FieldUtils, ., safeSubtract, (]
[public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, long, difference, =, FieldUtils, ., safeSubtract, (, minuendInstant, ,]
[long, minuendInstant, ,, long, subtrahendInstant, ), {, long, difference, =, FieldUtils, ., safeSubtract, (, minuendInstant, ,, subtrahendInstant, ), ;, return]
[long, minuendInstant, ,, long, subtrahendInstant, ), {, long, difference, =, FieldUtils, ., safeSubtract, (, minuendInstant, ,, subtrahendInstant, ), ;, return]
[,, long, subtrahendInstant, ), {, long, difference, =, FieldUtils, ., safeSubtract, (, minuendInstant, ,, subtrahendInstant, ), ;, return, difference, /]
[,, subtrahendInstant, ), ;, return, difference, /, iUnitMillis, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[,, subtrahendInstant, ), ;, return, difference, /, iUnitMillis, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[), ;, return, difference, /, iUnitMillis, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, this, ==]
[/, iUnitMillis, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, this, ==, obj, ), {, return]
[equals, (, Object, obj, ), {, if, (, this, ==, obj, ), {, return, true, ;, }, else, if, (]
[equals, (, Object, obj, ), {, if, (, this, ==, obj, ), {, return, true, ;, }, else, if, (]
[this, ==, obj, ), {, return, true, ;, }, else, if, (, obj, instanceof, PreciseDurationField, ), {, PreciseDurationField, other, =]
[), {, return, true, ;, }, else, if, (, obj, instanceof, PreciseDurationField, ), {, PreciseDurationField, other, =, (, PreciseDurationField, )]
[true, ;, }, else, if, (, obj, instanceof, PreciseDurationField, ), {, PreciseDurationField, other, =, (, PreciseDurationField, ), obj, ;, return]
[true, ;, }, else, if, (, obj, instanceof, PreciseDurationField, ), {, PreciseDurationField, other, =, (, PreciseDurationField, ), obj, ;, return]
[;, }, else, if, (, obj, instanceof, PreciseDurationField, ), {, PreciseDurationField, other, =, (, PreciseDurationField, ), obj, ;, return, (]
[;, }, else, if, (, obj, instanceof, PreciseDurationField, ), {, PreciseDurationField, other, =, (, PreciseDurationField, ), obj, ;, return, (]
[(, obj, instanceof, PreciseDurationField, ), {, PreciseDurationField, other, =, (, PreciseDurationField, ), obj, ;, return, (, getType, (, ), ==]
[(, obj, instanceof, PreciseDurationField, ), {, PreciseDurationField, other, =, (, PreciseDurationField, ), obj, ;, return, (, getType, (, ), ==]
[other, =, (, PreciseDurationField, ), obj, ;, return, (, getType, (, ), ==, other, ., getType, (, ), ), &&]
[=, (, PreciseDurationField, ), obj, ;, return, (, getType, (, ), ==, other, ., getType, (, ), ), &&, (]
[=, (, PreciseDurationField, ), obj, ;, return, (, getType, (, ), ==, other, ., getType, (, ), ), &&, (]
[PreciseDurationField, ), obj, ;, return, (, getType, (, ), ==, other, ., getType, (, ), ), &&, (, iUnitMillis, ==]
[PreciseDurationField, ), obj, ;, return, (, getType, (, ), ==, other, ., getType, (, ), ), &&, (, iUnitMillis, ==]
[(, ), ==, other, ., getType, (, ), ), &&, (, iUnitMillis, ==, other, ., iUnitMillis, ), ;, }, return]
[==, other, ., iUnitMillis, ), ;, }, return, false, ;, }, public, int, hashCode, (, ), {, long, millis, =]
[;, }, return, false, ;, }, public, int, hashCode, (, ), {, long, millis, =, iUnitMillis, ;, int, hash, =]
[false, ;, }, public, int, hashCode, (, ), {, long, millis, =, iUnitMillis, ;, int, hash, =, (, int, )]
[;, }, public, int, hashCode, (, ), {, long, millis, =, iUnitMillis, ;, int, hash, =, (, int, ), (]
[;, }, public, int, hashCode, (, ), {, long, millis, =, iUnitMillis, ;, int, hash, =, (, int, ), (]
[public, int, hashCode, (, ), {, long, millis, =, iUnitMillis, ;, int, hash, =, (, int, ), (, millis, ^]
[int, hashCode, (, ), {, long, millis, =, iUnitMillis, ;, int, hash, =, (, int, ), (, millis, ^, (]
[int, hashCode, (, ), {, long, millis, =, iUnitMillis, ;, int, hash, =, (, int, ), (, millis, ^, (]
[{, long, millis, =, iUnitMillis, ;, int, hash, =, (, int, ), (, millis, ^, (, millis, >, >, >]
[iUnitMillis, ;, int, hash, =, (, int, ), (, millis, ^, (, millis, >, >, >, 32, ), ), ;]
[int, hash, =, (, int, ), (, millis, ^, (, millis, >, >, >, 32, ), ), ;, hash, +=]
[int, hash, =, (, int, ), (, millis, ^, (, millis, >, >, >, 32, ), ), ;, hash, +=]
[(, millis, >, >, >, 32, ), ), ;, hash, +=, getType, (, ), ., hashCode, (, ), ;, return]
