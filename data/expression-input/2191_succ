[;, public, static, final, Font, DEFAULT_FONT, =, new, Font, (, "Tahoma", ,, Font, ., BOLD, ,, 12, ), ;, public]
[;, public, static, final, Paint, DEFAULT_TEXT_PAINT, =, Color, ., black, ;, private, String, text, ;, private, Font, font, ;, private]
[,, Font, ., BOLD, ,, 12, ), ;, public, static, final, Paint, DEFAULT_TEXT_PAINT, =, Color, ., black, ;, private, String]
[,, 12, ), ;, public, static, final, Paint, DEFAULT_TEXT_PAINT, =, Color, ., black, ;, private, String, text, ;, private, Font]
[., BOLD, ,, 12, ), ;, public, static, final, Paint, DEFAULT_TEXT_PAINT, =, Color, ., black, ;, private, String, text, ;]
[), ;, public, static, final, Paint, DEFAULT_TEXT_PAINT, =, Color, ., black, ;, private, String, text, ;, private, Font, font, ;]
[;, private, String, text, ;, private, Font, font, ;, private, HorizontalAlignment, textAlignment, ;, private, transient, Paint, paint, ;, private, transient]
[., black, ;, private, String, text, ;, private, Font, font, ;, private, HorizontalAlignment, textAlignment, ;, private, transient, Paint, paint, ;]
[;, private, int, maximumLinesToDisplay, =, Integer, ., MAX_VALUE, ;, public, TextTitle, (, ), {, this, (, "", ), ;, }]
[;, public, TextTitle, (, ), {, this, (, "", ), ;, }, public, TextTitle, (, String, text, ), {, this]
[., MAX_VALUE, ;, public, TextTitle, (, ), {, this, (, "", ), ;, }, public, TextTitle, (, String, text, )]
[), ;, }, public, TextTitle, (, String, text, ), {, this, (, text, ,, TextTitle, ., DEFAULT_FONT, ,, TextTitle, .]
[,, TextTitle, ., DEFAULT_FONT, ,, TextTitle, ., DEFAULT_TEXT_PAINT, ,, Title, ., DEFAULT_POSITION, ,, Title, ., DEFAULT_HORIZONTAL_ALIGNMENT, ,, Title, ., DEFAULT_VERTICAL_ALIGNMENT]
[,, TextTitle, ., DEFAULT_TEXT_PAINT, ,, Title, ., DEFAULT_POSITION, ,, Title, ., DEFAULT_HORIZONTAL_ALIGNMENT, ,, Title, ., DEFAULT_VERTICAL_ALIGNMENT, ,, Title, ., DEFAULT_PADDING]
[., DEFAULT_FONT, ,, TextTitle, ., DEFAULT_TEXT_PAINT, ,, Title, ., DEFAULT_POSITION, ,, Title, ., DEFAULT_HORIZONTAL_ALIGNMENT, ,, Title, ., DEFAULT_VERTICAL_ALIGNMENT, ,, Title]
[,, Title, ., DEFAULT_POSITION, ,, Title, ., DEFAULT_HORIZONTAL_ALIGNMENT, ,, Title, ., DEFAULT_VERTICAL_ALIGNMENT, ,, Title, ., DEFAULT_PADDING, ), ;, }, public]
[., DEFAULT_TEXT_PAINT, ,, Title, ., DEFAULT_POSITION, ,, Title, ., DEFAULT_HORIZONTAL_ALIGNMENT, ,, Title, ., DEFAULT_VERTICAL_ALIGNMENT, ,, Title, ., DEFAULT_PADDING, ), ;]
[,, Title, ., DEFAULT_HORIZONTAL_ALIGNMENT, ,, Title, ., DEFAULT_VERTICAL_ALIGNMENT, ,, Title, ., DEFAULT_PADDING, ), ;, }, public, TextTitle, (, String, text]
[., DEFAULT_POSITION, ,, Title, ., DEFAULT_HORIZONTAL_ALIGNMENT, ,, Title, ., DEFAULT_VERTICAL_ALIGNMENT, ,, Title, ., DEFAULT_PADDING, ), ;, }, public, TextTitle, (]
[,, Title, ., DEFAULT_VERTICAL_ALIGNMENT, ,, Title, ., DEFAULT_PADDING, ), ;, }, public, TextTitle, (, String, text, ,, Font, font, )]
[., DEFAULT_HORIZONTAL_ALIGNMENT, ,, Title, ., DEFAULT_VERTICAL_ALIGNMENT, ,, Title, ., DEFAULT_PADDING, ), ;, }, public, TextTitle, (, String, text, ,, Font]
[,, Title, ., DEFAULT_PADDING, ), ;, }, public, TextTitle, (, String, text, ,, Font, font, ), {, this, (, text]
[., DEFAULT_VERTICAL_ALIGNMENT, ,, Title, ., DEFAULT_PADDING, ), ;, }, public, TextTitle, (, String, text, ,, Font, font, ), {, this]
[), ;, }, public, TextTitle, (, String, text, ,, Font, font, ), {, this, (, text, ,, font, ,, TextTitle]
[., DEFAULT_PADDING, ), ;, }, public, TextTitle, (, String, text, ,, Font, font, ), {, this, (, text, ,, font]
[,, font, ,, TextTitle, ., DEFAULT_TEXT_PAINT, ,, Title, ., DEFAULT_POSITION, ,, Title, ., DEFAULT_HORIZONTAL_ALIGNMENT, ,, Title, ., DEFAULT_VERTICAL_ALIGNMENT, ,, Title]
[,, TextTitle, ., DEFAULT_TEXT_PAINT, ,, Title, ., DEFAULT_POSITION, ,, Title, ., DEFAULT_HORIZONTAL_ALIGNMENT, ,, Title, ., DEFAULT_VERTICAL_ALIGNMENT, ,, Title, ., DEFAULT_PADDING]
[,, Title, ., DEFAULT_POSITION, ,, Title, ., DEFAULT_HORIZONTAL_ALIGNMENT, ,, Title, ., DEFAULT_VERTICAL_ALIGNMENT, ,, Title, ., DEFAULT_PADDING, ), ;, }, public]
[., DEFAULT_TEXT_PAINT, ,, Title, ., DEFAULT_POSITION, ,, Title, ., DEFAULT_HORIZONTAL_ALIGNMENT, ,, Title, ., DEFAULT_VERTICAL_ALIGNMENT, ,, Title, ., DEFAULT_PADDING, ), ;]
[,, Title, ., DEFAULT_HORIZONTAL_ALIGNMENT, ,, Title, ., DEFAULT_VERTICAL_ALIGNMENT, ,, Title, ., DEFAULT_PADDING, ), ;, }, public, TextTitle, (, String, text]
[., DEFAULT_POSITION, ,, Title, ., DEFAULT_HORIZONTAL_ALIGNMENT, ,, Title, ., DEFAULT_VERTICAL_ALIGNMENT, ,, Title, ., DEFAULT_PADDING, ), ;, }, public, TextTitle, (]
[,, Title, ., DEFAULT_VERTICAL_ALIGNMENT, ,, Title, ., DEFAULT_PADDING, ), ;, }, public, TextTitle, (, String, text, ,, Font, font, ,]
[., DEFAULT_HORIZONTAL_ALIGNMENT, ,, Title, ., DEFAULT_VERTICAL_ALIGNMENT, ,, Title, ., DEFAULT_PADDING, ), ;, }, public, TextTitle, (, String, text, ,, Font]
[,, Title, ., DEFAULT_PADDING, ), ;, }, public, TextTitle, (, String, text, ,, Font, font, ,, Paint, paint, ,, RectangleEdge]
[., DEFAULT_VERTICAL_ALIGNMENT, ,, Title, ., DEFAULT_PADDING, ), ;, }, public, TextTitle, (, String, text, ,, Font, font, ,, Paint, paint]
[), ;, }, public, TextTitle, (, String, text, ,, Font, font, ,, Paint, paint, ,, RectangleEdge, position, ,, HorizontalAlignment, horizontalAlignment]
[., DEFAULT_PADDING, ), ;, }, public, TextTitle, (, String, text, ,, Font, font, ,, Paint, paint, ,, RectangleEdge, position, ,]
[,, horizontalAlignment, ,, verticalAlignment, ,, padding, ), ;, if, (, text, ==, null, ), {, throw, new, NullPointerException, (, "Null 'text' argument."]
[,, verticalAlignment, ,, padding, ), ;, if, (, text, ==, null, ), {, throw, new, NullPointerException, (, "Null 'text' argument.", ), ;]
[,, padding, ), ;, if, (, text, ==, null, ), {, throw, new, NullPointerException, (, "Null 'text' argument.", ), ;, }, if]
[), ;, if, (, text, ==, null, ), {, throw, new, NullPointerException, (, "Null 'text' argument.", ), ;, }, if, (, font]
[), {, throw, new, NullPointerException, (, "Null 'text' argument.", ), ;, }, if, (, font, ==, null, ), {, throw, new, NullPointerException]
[==, null, ), {, throw, new, NullPointerException, (, "Null 'text' argument.", ), ;, }, if, (, font, ==, null, ), {, throw]
[), {, throw, new, NullPointerException, (, "Null 'text' argument.", ), ;, }, if, (, font, ==, null, ), {, throw, new, NullPointerException]
[;, }, if, (, font, ==, null, ), {, throw, new, NullPointerException, (, "Null 'font' argument.", ), ;, }, if, (, paint]
[), ;, }, if, (, font, ==, null, ), {, throw, new, NullPointerException, (, "Null 'font' argument.", ), ;, }, if, (]
[), {, throw, new, NullPointerException, (, "Null 'font' argument.", ), ;, }, if, (, paint, ==, null, ), {, throw, new, NullPointerException]
[==, null, ), {, throw, new, NullPointerException, (, "Null 'font' argument.", ), ;, }, if, (, paint, ==, null, ), {, throw]
[), {, throw, new, NullPointerException, (, "Null 'font' argument.", ), ;, }, if, (, paint, ==, null, ), {, throw, new, NullPointerException]
[;, }, if, (, paint, ==, null, ), {, throw, new, NullPointerException, (, "Null 'paint' argument.", ), ;, }, this, ., text]
[), ;, }, if, (, paint, ==, null, ), {, throw, new, NullPointerException, (, "Null 'paint' argument.", ), ;, }, this, .]
[), {, throw, new, NullPointerException, (, "Null 'paint' argument.", ), ;, }, this, ., text, =, text, ;, this, ., font, =]
[==, null, ), {, throw, new, NullPointerException, (, "Null 'paint' argument.", ), ;, }, this, ., text, =, text, ;, this, .]
[), {, throw, new, NullPointerException, (, "Null 'paint' argument.", ), ;, }, this, ., text, =, text, ;, this, ., font, =]
[;, }, this, ., text, =, text, ;, this, ., font, =, font, ;, this, ., paint, =, paint, ;]
[), ;, }, this, ., text, =, text, ;, this, ., font, =, font, ;, this, ., paint, =, paint]
[=, text, ;, this, ., font, =, font, ;, this, ., paint, =, paint, ;, this, ., textAlignment, =, horizontalAlignment]
[., text, =, text, ;, this, ., font, =, font, ;, this, ., paint, =, paint, ;, this, ., textAlignment]
[;, this, ., font, =, font, ;, this, ., paint, =, paint, ;, this, ., textAlignment, =, horizontalAlignment, ;, this]
[=, font, ;, this, ., paint, =, paint, ;, this, ., textAlignment, =, horizontalAlignment, ;, this, ., backgroundPaint, =, null]
[., font, =, font, ;, this, ., paint, =, paint, ;, this, ., textAlignment, =, horizontalAlignment, ;, this, ., backgroundPaint]
[;, this, ., paint, =, paint, ;, this, ., textAlignment, =, horizontalAlignment, ;, this, ., backgroundPaint, =, null, ;, this]
[=, paint, ;, this, ., textAlignment, =, horizontalAlignment, ;, this, ., backgroundPaint, =, null, ;, this, ., content, =, null]
[., paint, =, paint, ;, this, ., textAlignment, =, horizontalAlignment, ;, this, ., backgroundPaint, =, null, ;, this, ., content]
[;, this, ., textAlignment, =, horizontalAlignment, ;, this, ., backgroundPaint, =, null, ;, this, ., content, =, null, ;, this]
[=, horizontalAlignment, ;, this, ., backgroundPaint, =, null, ;, this, ., content, =, null, ;, this, ., toolTipText, =, null]
[., textAlignment, =, horizontalAlignment, ;, this, ., backgroundPaint, =, null, ;, this, ., content, =, null, ;, this, ., toolTipText]
[;, this, ., backgroundPaint, =, null, ;, this, ., content, =, null, ;, this, ., toolTipText, =, null, ;, this]
[=, null, ;, this, ., content, =, null, ;, this, ., toolTipText, =, null, ;, this, ., urlText, =, null]
[., backgroundPaint, =, null, ;, this, ., content, =, null, ;, this, ., toolTipText, =, null, ;, this, ., urlText]
[;, this, ., content, =, null, ;, this, ., toolTipText, =, null, ;, this, ., urlText, =, null, ;, }]
[=, null, ;, this, ., toolTipText, =, null, ;, this, ., urlText, =, null, ;, }, public, String, getText, (]
[., content, =, null, ;, this, ., toolTipText, =, null, ;, this, ., urlText, =, null, ;, }, public, String]
[;, this, ., toolTipText, =, null, ;, this, ., urlText, =, null, ;, }, public, String, getText, (, ), {]
[=, null, ;, this, ., urlText, =, null, ;, }, public, String, getText, (, ), {, return, this, ., text]
[., toolTipText, =, null, ;, this, ., urlText, =, null, ;, }, public, String, getText, (, ), {, return, this]
[;, this, ., urlText, =, null, ;, }, public, String, getText, (, ), {, return, this, ., text, ;, }]
[=, null, ;, }, public, String, getText, (, ), {, return, this, ., text, ;, }, public, void, setText, (]
[., urlText, =, null, ;, }, public, String, getText, (, ), {, return, this, ., text, ;, }, public, void]
[;, }, public, String, getText, (, ), {, return, this, ., text, ;, }, public, void, setText, (, String, text]
[;, }, public, void, setText, (, String, text, ), {, if, (, text, ==, null, ), {, throw, new, IllegalArgumentException]
[., text, ;, }, public, void, setText, (, String, text, ), {, if, (, text, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'text' argument.", ), ;, }, if, (, !, this, ., text, ., equals, (, text]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'text' argument.", ), ;, }, if, (, !, this, ., text, ., equals]
[), {, throw, new, IllegalArgumentException, (, "Null 'text' argument.", ), ;, }, if, (, !, this, ., text, ., equals, (, text]
[;, }, if, (, !, this, ., text, ., equals, (, text, ), ), {, this, ., text, =, text]
[), ;, }, if, (, !, this, ., text, ., equals, (, text, ), ), {, this, ., text, =]
[), {, this, ., text, =, text, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, }, public]
[), {, this, ., text, =, text, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, }, public]
[., equals, (, text, ), ), {, this, ., text, =, text, ;, notifyListeners, (, new, TitleChangeEvent, (, this, )]
[., text, ., equals, (, text, ), ), {, this, ., text, =, text, ;, notifyListeners, (, new, TitleChangeEvent, (]
[), ), {, this, ., text, =, text, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, }]
[=, text, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, }, public, HorizontalAlignment, getTextAlignment, (, ), {]
[., text, =, text, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, }, public, HorizontalAlignment, getTextAlignment, (]
[;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, }, public, HorizontalAlignment, getTextAlignment, (, ), {, return, this]
[;, }, }, public, HorizontalAlignment, getTextAlignment, (, ), {, return, this, ., textAlignment, ;, }, public, void, setTextAlignment, (, HorizontalAlignment]
[), ;, }, }, public, HorizontalAlignment, getTextAlignment, (, ), {, return, this, ., textAlignment, ;, }, public, void, setTextAlignment, (]
[), ), ;, }, }, public, HorizontalAlignment, getTextAlignment, (, ), {, return, this, ., textAlignment, ;, }, public, void, setTextAlignment]
[;, }, public, void, setTextAlignment, (, HorizontalAlignment, alignment, ), {, if, (, alignment, ==, null, ), {, throw, new, IllegalArgumentException]
[., textAlignment, ;, }, public, void, setTextAlignment, (, HorizontalAlignment, alignment, ), {, if, (, alignment, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'alignment' argument.", ), ;, }, this, ., textAlignment, =, alignment, ;, notifyListeners, (, new, TitleChangeEvent]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'alignment' argument.", ), ;, }, this, ., textAlignment, =, alignment, ;, notifyListeners, (]
[), {, throw, new, IllegalArgumentException, (, "Null 'alignment' argument.", ), ;, }, this, ., textAlignment, =, alignment, ;, notifyListeners, (, new, TitleChangeEvent]
[;, }, this, ., textAlignment, =, alignment, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, Font]
[), ;, }, this, ., textAlignment, =, alignment, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public]
[=, alignment, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, Font, getFont, (, ), {, return]
[., textAlignment, =, alignment, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, Font, getFont, (, )]
[;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, Font, getFont, (, ), {, return, this, .]
[;, }, public, Font, getFont, (, ), {, return, this, ., font, ;, }, public, void, setFont, (, Font, font]
[), ;, }, public, Font, getFont, (, ), {, return, this, ., font, ;, }, public, void, setFont, (, Font]
[), ), ;, }, public, Font, getFont, (, ), {, return, this, ., font, ;, }, public, void, setFont, (]
[;, }, public, void, setFont, (, Font, font, ), {, if, (, font, ==, null, ), {, throw, new, IllegalArgumentException]
[., font, ;, }, public, void, setFont, (, Font, font, ), {, if, (, font, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'font' argument.", ), ;, }, if, (, !, this, ., font, ., equals, (, font]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'font' argument.", ), ;, }, if, (, !, this, ., font, ., equals]
[), {, throw, new, IllegalArgumentException, (, "Null 'font' argument.", ), ;, }, if, (, !, this, ., font, ., equals, (, font]
[;, }, if, (, !, this, ., font, ., equals, (, font, ), ), {, this, ., font, =, font]
[), ;, }, if, (, !, this, ., font, ., equals, (, font, ), ), {, this, ., font, =]
[), {, this, ., font, =, font, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, }, public]
[), {, this, ., font, =, font, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, }, public]
[., equals, (, font, ), ), {, this, ., font, =, font, ;, notifyListeners, (, new, TitleChangeEvent, (, this, )]
[., font, ., equals, (, font, ), ), {, this, ., font, =, font, ;, notifyListeners, (, new, TitleChangeEvent, (]
[), ), {, this, ., font, =, font, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, }]
[=, font, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, }, public, Paint, getPaint, (, ), {]
[., font, =, font, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, }, public, Paint, getPaint, (]
[;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, }, public, Paint, getPaint, (, ), {, return, this]
[;, }, }, public, Paint, getPaint, (, ), {, return, this, ., paint, ;, }, public, void, setPaint, (, Paint]
[), ;, }, }, public, Paint, getPaint, (, ), {, return, this, ., paint, ;, }, public, void, setPaint, (]
[), ), ;, }, }, public, Paint, getPaint, (, ), {, return, this, ., paint, ;, }, public, void, setPaint]
[;, }, public, void, setPaint, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException]
[., paint, ;, }, public, void, setPaint, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, if, (, !, this, ., paint, ., equals, (, paint]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, if, (, !, this, ., paint, ., equals]
[), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, if, (, !, this, ., paint, ., equals, (, paint]
[;, }, if, (, !, this, ., paint, ., equals, (, paint, ), ), {, this, ., paint, =, paint]
[), ;, }, if, (, !, this, ., paint, ., equals, (, paint, ), ), {, this, ., paint, =]
[), {, this, ., paint, =, paint, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, }, public]
[), {, this, ., paint, =, paint, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, }, public]
[., equals, (, paint, ), ), {, this, ., paint, =, paint, ;, notifyListeners, (, new, TitleChangeEvent, (, this, )]
[., paint, ., equals, (, paint, ), ), {, this, ., paint, =, paint, ;, notifyListeners, (, new, TitleChangeEvent, (]
[), ), {, this, ., paint, =, paint, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, }]
[=, paint, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, }, public, Paint, getBackgroundPaint, (, ), {]
[., paint, =, paint, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, }, public, Paint, getBackgroundPaint, (]
[;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, }, public, Paint, getBackgroundPaint, (, ), {, return, this]
[;, }, }, public, Paint, getBackgroundPaint, (, ), {, return, this, ., backgroundPaint, ;, }, public, void, setBackgroundPaint, (, Paint]
[), ;, }, }, public, Paint, getBackgroundPaint, (, ), {, return, this, ., backgroundPaint, ;, }, public, void, setBackgroundPaint, (]
[), ), ;, }, }, public, Paint, getBackgroundPaint, (, ), {, return, this, ., backgroundPaint, ;, }, public, void, setBackgroundPaint]
[;, }, public, void, setBackgroundPaint, (, Paint, paint, ), {, this, ., backgroundPaint, =, paint, ;, notifyListeners, (, new, TitleChangeEvent]
[., backgroundPaint, ;, }, public, void, setBackgroundPaint, (, Paint, paint, ), {, this, ., backgroundPaint, =, paint, ;, notifyListeners, (]
[=, paint, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, String, getToolTipText, (, ), {, return]
[., backgroundPaint, =, paint, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, String, getToolTipText, (, )]
[;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, String, getToolTipText, (, ), {, return, this, .]
[;, }, public, String, getToolTipText, (, ), {, return, this, ., toolTipText, ;, }, public, void, setToolTipText, (, String, text]
[), ;, }, public, String, getToolTipText, (, ), {, return, this, ., toolTipText, ;, }, public, void, setToolTipText, (, String]
[), ), ;, }, public, String, getToolTipText, (, ), {, return, this, ., toolTipText, ;, }, public, void, setToolTipText, (]
[;, }, public, void, setToolTipText, (, String, text, ), {, this, ., toolTipText, =, text, ;, notifyListeners, (, new, TitleChangeEvent]
[., toolTipText, ;, }, public, void, setToolTipText, (, String, text, ), {, this, ., toolTipText, =, text, ;, notifyListeners, (]
[=, text, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, String, getURLText, (, ), {, return]
[., toolTipText, =, text, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, String, getURLText, (, )]
[;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, String, getURLText, (, ), {, return, this, .]
[;, }, public, String, getURLText, (, ), {, return, this, ., urlText, ;, }, public, void, setURLText, (, String, text]
[), ;, }, public, String, getURLText, (, ), {, return, this, ., urlText, ;, }, public, void, setURLText, (, String]
[), ), ;, }, public, String, getURLText, (, ), {, return, this, ., urlText, ;, }, public, void, setURLText, (]
[;, }, public, void, setURLText, (, String, text, ), {, this, ., urlText, =, text, ;, notifyListeners, (, new, TitleChangeEvent]
[., urlText, ;, }, public, void, setURLText, (, String, text, ), {, this, ., urlText, =, text, ;, notifyListeners, (]
[=, text, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, boolean, getExpandToFitSpace, (, ), {, return]
[., urlText, =, text, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, boolean, getExpandToFitSpace, (, )]
[;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, boolean, getExpandToFitSpace, (, ), {, return, this, .]
[;, }, public, boolean, getExpandToFitSpace, (, ), {, return, this, ., expandToFitSpace, ;, }, public, void, setExpandToFitSpace, (, boolean, expand]
[), ;, }, public, boolean, getExpandToFitSpace, (, ), {, return, this, ., expandToFitSpace, ;, }, public, void, setExpandToFitSpace, (, boolean]
[), ), ;, }, public, boolean, getExpandToFitSpace, (, ), {, return, this, ., expandToFitSpace, ;, }, public, void, setExpandToFitSpace, (]
[;, }, public, void, setExpandToFitSpace, (, boolean, expand, ), {, this, ., expandToFitSpace, =, expand, ;, notifyListeners, (, new, TitleChangeEvent]
[., expandToFitSpace, ;, }, public, void, setExpandToFitSpace, (, boolean, expand, ), {, this, ., expandToFitSpace, =, expand, ;, notifyListeners, (]
[=, expand, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, int, getMaximumLinesToDisplay, (, ), {, return]
[., expandToFitSpace, =, expand, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, int, getMaximumLinesToDisplay, (, )]
[;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, int, getMaximumLinesToDisplay, (, ), {, return, this, .]
[;, }, public, int, getMaximumLinesToDisplay, (, ), {, return, this, ., maximumLinesToDisplay, ;, }, public, void, setMaximumLinesToDisplay, (, int, max]
[), ;, }, public, int, getMaximumLinesToDisplay, (, ), {, return, this, ., maximumLinesToDisplay, ;, }, public, void, setMaximumLinesToDisplay, (, int]
[), ), ;, }, public, int, getMaximumLinesToDisplay, (, ), {, return, this, ., maximumLinesToDisplay, ;, }, public, void, setMaximumLinesToDisplay, (]
[;, }, public, void, setMaximumLinesToDisplay, (, int, max, ), {, this, ., maximumLinesToDisplay, =, max, ;, notifyListeners, (, new, TitleChangeEvent]
[., maximumLinesToDisplay, ;, }, public, void, setMaximumLinesToDisplay, (, int, max, ), {, this, ., maximumLinesToDisplay, =, max, ;, notifyListeners, (]
[=, max, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, Size2D, arrange, (, Graphics2D, g2, ,]
[., maximumLinesToDisplay, =, max, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, Size2D, arrange, (, Graphics2D]
[;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, Size2D, arrange, (, Graphics2D, g2, ,, RectangleConstraint, constraint]
[;, }, public, Size2D, arrange, (, Graphics2D, g2, ,, RectangleConstraint, constraint, ), {, RectangleConstraint, cc, =, toContentConstraint, (, constraint, )]
[), ;, }, public, Size2D, arrange, (, Graphics2D, g2, ,, RectangleConstraint, constraint, ), {, RectangleConstraint, cc, =, toContentConstraint, (, constraint]
[), ), ;, }, public, Size2D, arrange, (, Graphics2D, g2, ,, RectangleConstraint, constraint, ), {, RectangleConstraint, cc, =, toContentConstraint, (]
[;, LengthConstraintType, w, =, cc, ., getWidthConstraintType, (, ), ;, LengthConstraintType, h, =, cc, ., getHeightConstraintType, (, ), ;, Size2D]
[), ;, LengthConstraintType, w, =, cc, ., getWidthConstraintType, (, ), ;, LengthConstraintType, h, =, cc, ., getHeightConstraintType, (, ), ;]
[;, LengthConstraintType, h, =, cc, ., getHeightConstraintType, (, ), ;, Size2D, contentSize, =, null, ;, if, (, w, ==, LengthConstraintType]
[., getWidthConstraintType, (, ), ;, LengthConstraintType, h, =, cc, ., getHeightConstraintType, (, ), ;, Size2D, contentSize, =, null, ;, if]
[;, Size2D, contentSize, =, null, ;, if, (, w, ==, LengthConstraintType, ., NONE, ), {, if, (, h, ==, LengthConstraintType]
[., getHeightConstraintType, (, ), ;, Size2D, contentSize, =, null, ;, if, (, w, ==, LengthConstraintType, ., NONE, ), {, if]
[;, if, (, w, ==, LengthConstraintType, ., NONE, ), {, if, (, h, ==, LengthConstraintType, ., NONE, ), {, contentSize]
[), {, if, (, h, ==, LengthConstraintType, ., NONE, ), {, contentSize, =, arrangeNN, (, g2, ), ;, }, else]
[==, LengthConstraintType, ., NONE, ), {, if, (, h, ==, LengthConstraintType, ., NONE, ), {, contentSize, =, arrangeNN, (, g2]
[), {, if, (, h, ==, LengthConstraintType, ., NONE, ), {, contentSize, =, arrangeNN, (, g2, ), ;, }, else]
[., NONE, ), {, if, (, h, ==, LengthConstraintType, ., NONE, ), {, contentSize, =, arrangeNN, (, g2, ), ;]
[), {, contentSize, =, arrangeNN, (, g2, ), ;, }, else, if, (, h, ==, LengthConstraintType, ., RANGE, ), {]
[==, LengthConstraintType, ., NONE, ), {, contentSize, =, arrangeNN, (, g2, ), ;, }, else, if, (, h, ==, LengthConstraintType]
[), {, contentSize, =, arrangeNN, (, g2, ), ;, }, else, if, (, h, ==, LengthConstraintType, ., RANGE, ), {]
[., NONE, ), {, contentSize, =, arrangeNN, (, g2, ), ;, }, else, if, (, h, ==, LengthConstraintType, ., RANGE]
[=, arrangeNN, (, g2, ), ;, }, else, if, (, h, ==, LengthConstraintType, ., RANGE, ), {, throw, new, RuntimeException]
[;, }, else, if, (, h, ==, LengthConstraintType, ., RANGE, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }]
[), ;, }, else, if, (, h, ==, LengthConstraintType, ., RANGE, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;]
[), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, else, if, (, h, ==, LengthConstraintType, ., FIXED, ), {]
[==, LengthConstraintType, ., RANGE, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, else, if, (, h, ==, LengthConstraintType]
[), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, else, if, (, h, ==, LengthConstraintType, ., FIXED, ), {]
[., RANGE, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, else, if, (, h, ==, LengthConstraintType, ., FIXED]
[;, }, else, if, (, h, ==, LengthConstraintType, ., FIXED, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }]
[), ;, }, else, if, (, h, ==, LengthConstraintType, ., FIXED, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;]
[), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, }, else, if, (, w, ==, LengthConstraintType, ., RANGE, )]
[==, LengthConstraintType, ., FIXED, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, }, else, if, (, w, ==]
[), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, }, else, if, (, w, ==, LengthConstraintType, ., RANGE, )]
[., FIXED, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, }, else, if, (, w, ==, LengthConstraintType, .]
[;, }, }, else, if, (, w, ==, LengthConstraintType, ., RANGE, ), {, if, (, h, ==, LengthConstraintType, ., NONE]
[), ;, }, }, else, if, (, w, ==, LengthConstraintType, ., RANGE, ), {, if, (, h, ==, LengthConstraintType, .]
[), {, if, (, h, ==, LengthConstraintType, ., NONE, ), {, contentSize, =, arrangeRN, (, g2, ,, cc, ., getWidthRange]
[==, LengthConstraintType, ., RANGE, ), {, if, (, h, ==, LengthConstraintType, ., NONE, ), {, contentSize, =, arrangeRN, (, g2]
[), {, if, (, h, ==, LengthConstraintType, ., NONE, ), {, contentSize, =, arrangeRN, (, g2, ,, cc, ., getWidthRange]
[., RANGE, ), {, if, (, h, ==, LengthConstraintType, ., NONE, ), {, contentSize, =, arrangeRN, (, g2, ,, cc]
[), {, contentSize, =, arrangeRN, (, g2, ,, cc, ., getWidthRange, (, ), ), ;, }, else, if, (, h]
[==, LengthConstraintType, ., NONE, ), {, contentSize, =, arrangeRN, (, g2, ,, cc, ., getWidthRange, (, ), ), ;, }]
[), {, contentSize, =, arrangeRN, (, g2, ,, cc, ., getWidthRange, (, ), ), ;, }, else, if, (, h]
[., NONE, ), {, contentSize, =, arrangeRN, (, g2, ,, cc, ., getWidthRange, (, ), ), ;, }, else, if]
[=, arrangeRN, (, g2, ,, cc, ., getWidthRange, (, ), ), ;, }, else, if, (, h, ==, LengthConstraintType, .]
[;, }, else, if, (, h, ==, LengthConstraintType, ., RANGE, ), {, contentSize, =, arrangeRR, (, g2, ,, cc, .]
[,, cc, ., getWidthRange, (, ), ), ;, }, else, if, (, h, ==, LengthConstraintType, ., RANGE, ), {, contentSize]
[), ;, }, else, if, (, h, ==, LengthConstraintType, ., RANGE, ), {, contentSize, =, arrangeRR, (, g2, ,, cc]
[., getWidthRange, (, ), ), ;, }, else, if, (, h, ==, LengthConstraintType, ., RANGE, ), {, contentSize, =, arrangeRR]
[), {, contentSize, =, arrangeRR, (, g2, ,, cc, ., getWidthRange, (, ), ,, cc, ., getHeightRange, (, ), )]
[==, LengthConstraintType, ., RANGE, ), {, contentSize, =, arrangeRR, (, g2, ,, cc, ., getWidthRange, (, ), ,, cc, .]
[), {, contentSize, =, arrangeRR, (, g2, ,, cc, ., getWidthRange, (, ), ,, cc, ., getHeightRange, (, ), )]
[., RANGE, ), {, contentSize, =, arrangeRR, (, g2, ,, cc, ., getWidthRange, (, ), ,, cc, ., getHeightRange, (]
[=, arrangeRR, (, g2, ,, cc, ., getWidthRange, (, ), ,, cc, ., getHeightRange, (, ), ), ;, }, else]
[;, }, else, if, (, h, ==, LengthConstraintType, ., FIXED, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }]
[,, cc, ., getWidthRange, (, ), ,, cc, ., getHeightRange, (, ), ), ;, }, else, if, (, h, ==]
[,, cc, ., getHeightRange, (, ), ), ;, }, else, if, (, h, ==, LengthConstraintType, ., FIXED, ), {, throw]
[., getWidthRange, (, ), ,, cc, ., getHeightRange, (, ), ), ;, }, else, if, (, h, ==, LengthConstraintType, .]
[), ;, }, else, if, (, h, ==, LengthConstraintType, ., FIXED, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;]
[., getHeightRange, (, ), ), ;, }, else, if, (, h, ==, LengthConstraintType, ., FIXED, ), {, throw, new, RuntimeException]
[), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, }, else, if, (, w, ==, LengthConstraintType, ., FIXED, )]
[==, LengthConstraintType, ., FIXED, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, }, else, if, (, w, ==]
[), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, }, else, if, (, w, ==, LengthConstraintType, ., FIXED, )]
[., FIXED, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, }, else, if, (, w, ==, LengthConstraintType, .]
[;, }, }, else, if, (, w, ==, LengthConstraintType, ., FIXED, ), {, if, (, h, ==, LengthConstraintType, ., NONE]
[), ;, }, }, else, if, (, w, ==, LengthConstraintType, ., FIXED, ), {, if, (, h, ==, LengthConstraintType, .]
[), {, if, (, h, ==, LengthConstraintType, ., NONE, ), {, contentSize, =, arrangeFN, (, g2, ,, cc, ., getWidth]
[==, LengthConstraintType, ., FIXED, ), {, if, (, h, ==, LengthConstraintType, ., NONE, ), {, contentSize, =, arrangeFN, (, g2]
[), {, if, (, h, ==, LengthConstraintType, ., NONE, ), {, contentSize, =, arrangeFN, (, g2, ,, cc, ., getWidth]
[., FIXED, ), {, if, (, h, ==, LengthConstraintType, ., NONE, ), {, contentSize, =, arrangeFN, (, g2, ,, cc]
[), {, contentSize, =, arrangeFN, (, g2, ,, cc, ., getWidth, (, ), ), ;, }, else, if, (, h]
[==, LengthConstraintType, ., NONE, ), {, contentSize, =, arrangeFN, (, g2, ,, cc, ., getWidth, (, ), ), ;, }]
[), {, contentSize, =, arrangeFN, (, g2, ,, cc, ., getWidth, (, ), ), ;, }, else, if, (, h]
[., NONE, ), {, contentSize, =, arrangeFN, (, g2, ,, cc, ., getWidth, (, ), ), ;, }, else, if]
[=, arrangeFN, (, g2, ,, cc, ., getWidth, (, ), ), ;, }, else, if, (, h, ==, LengthConstraintType, .]
[;, }, else, if, (, h, ==, LengthConstraintType, ., RANGE, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }]
[,, cc, ., getWidth, (, ), ), ;, }, else, if, (, h, ==, LengthConstraintType, ., RANGE, ), {, throw]
[), ;, }, else, if, (, h, ==, LengthConstraintType, ., RANGE, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;]
[., getWidth, (, ), ), ;, }, else, if, (, h, ==, LengthConstraintType, ., RANGE, ), {, throw, new, RuntimeException]
[), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, else, if, (, h, ==, LengthConstraintType, ., FIXED, ), {]
[==, LengthConstraintType, ., RANGE, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, else, if, (, h, ==, LengthConstraintType]
[), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, else, if, (, h, ==, LengthConstraintType, ., FIXED, ), {]
[., RANGE, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, else, if, (, h, ==, LengthConstraintType, ., FIXED]
[;, }, else, if, (, h, ==, LengthConstraintType, ., FIXED, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }]
[), ;, }, else, if, (, h, ==, LengthConstraintType, ., FIXED, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;]
[), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, }, return, new, Size2D, (, calculateTotalWidth, (, contentSize, ., getWidth]
[==, LengthConstraintType, ., FIXED, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, }, return, new, Size2D, (, calculateTotalWidth]
[), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, }, return, new, Size2D, (, calculateTotalWidth, (, contentSize, ., getWidth]
[., FIXED, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, }, return, new, Size2D, (, calculateTotalWidth, (, contentSize]
[;, }, }, return, new, Size2D, (, calculateTotalWidth, (, contentSize, ., getWidth, (, ), ), ,, calculateTotalHeight, (, contentSize, .]
[), ;, }, }, return, new, Size2D, (, calculateTotalWidth, (, contentSize, ., getWidth, (, ), ), ,, calculateTotalHeight, (, contentSize]
[;, }, protected, Size2D, arrangeNN, (, Graphics2D, g2, ), {, Range, max, =, new, Range, (, 0.0, ,, Float, .]
[,, calculateTotalHeight, (, contentSize, ., getHeight, (, ), ), ), ;, }, protected, Size2D, arrangeNN, (, Graphics2D, g2, ), {]
[), ,, calculateTotalHeight, (, contentSize, ., getHeight, (, ), ), ), ;, }, protected, Size2D, arrangeNN, (, Graphics2D, g2, )]
[., getWidth, (, ), ), ,, calculateTotalHeight, (, contentSize, ., getHeight, (, ), ), ), ;, }, protected, Size2D, arrangeNN]
[), ;, }, protected, Size2D, arrangeNN, (, Graphics2D, g2, ), {, Range, max, =, new, Range, (, 0.0, ,, Float]
[), ), ;, }, protected, Size2D, arrangeNN, (, Graphics2D, g2, ), {, Range, max, =, new, Range, (, 0.0, ,]
[., getHeight, (, ), ), ), ;, }, protected, Size2D, arrangeNN, (, Graphics2D, g2, ), {, Range, max, =, new]
[;, return, arrangeRR, (, g2, ,, max, ,, max, ), ;, }, protected, Size2D, arrangeFN, (, Graphics2D, g2, ,, double]
[,, Float, ., MAX_VALUE, ), ;, return, arrangeRR, (, g2, ,, max, ,, max, ), ;, }, protected, Size2D, arrangeFN]
[), ;, return, arrangeRR, (, g2, ,, max, ,, max, ), ;, }, protected, Size2D, arrangeFN, (, Graphics2D, g2, ,]
[., MAX_VALUE, ), ;, return, arrangeRR, (, g2, ,, max, ,, max, ), ;, }, protected, Size2D, arrangeFN, (, Graphics2D]
[;, }, protected, Size2D, arrangeFN, (, Graphics2D, g2, ,, double, w, ), {, RectangleEdge, position, =, getPosition, (, ), ;]
[,, max, ,, max, ), ;, }, protected, Size2D, arrangeFN, (, Graphics2D, g2, ,, double, w, ), {, RectangleEdge, position]
[,, max, ), ;, }, protected, Size2D, arrangeFN, (, Graphics2D, g2, ,, double, w, ), {, RectangleEdge, position, =, getPosition]
[), ;, }, protected, Size2D, arrangeFN, (, Graphics2D, g2, ,, double, w, ), {, RectangleEdge, position, =, getPosition, (, )]
[;, if, (, position, ==, RectangleEdge, ., TOP, ||, position, ==, RectangleEdge, ., BOTTOM, ), {, float, maxWidth, =, (]
[), {, float, maxWidth, =, (, float, ), w, ;, g2, ., setFont, (, this, ., font, ), ;, this]
[||, position, ==, RectangleEdge, ., BOTTOM, ), {, float, maxWidth, =, (, float, ), w, ;, g2, ., setFont, (]
[==, RectangleEdge, ., TOP, ||, position, ==, RectangleEdge, ., BOTTOM, ), {, float, maxWidth, =, (, float, ), w, ;]
[||, position, ==, RectangleEdge, ., BOTTOM, ), {, float, maxWidth, =, (, float, ), w, ;, g2, ., setFont, (]
[., TOP, ||, position, ==, RectangleEdge, ., BOTTOM, ), {, float, maxWidth, =, (, float, ), w, ;, g2, .]
[), {, float, maxWidth, =, (, float, ), w, ;, g2, ., setFont, (, this, ., font, ), ;, this]
[==, RectangleEdge, ., BOTTOM, ), {, float, maxWidth, =, (, float, ), w, ;, g2, ., setFont, (, this, .]
[), {, float, maxWidth, =, (, float, ), w, ;, g2, ., setFont, (, this, ., font, ), ;, this]
[., BOTTOM, ), {, float, maxWidth, =, (, float, ), w, ;, g2, ., setFont, (, this, ., font, )]
[;, g2, ., setFont, (, this, ., font, ), ;, this, ., content, =, TextUtilities, ., createTextBlock, (, this, .]
[;, g2, ., setFont, (, this, ., font, ), ;, this, ., content, =, TextUtilities, ., createTextBlock, (, this, .]
[;, this, ., content, =, TextUtilities, ., createTextBlock, (, this, ., text, ,, this, ., font, ,, this, ., paint]
[., setFont, (, this, ., font, ), ;, this, ., content, =, TextUtilities, ., createTextBlock, (, this, ., text, ,]
[), ;, this, ., content, =, TextUtilities, ., createTextBlock, (, this, ., text, ,, this, ., font, ,, this, .]
[., font, ), ;, this, ., content, =, TextUtilities, ., createTextBlock, (, this, ., text, ,, this, ., font, ,]
[=, TextUtilities, ., createTextBlock, (, this, ., text, ,, this, ., font, ,, this, ., paint, ,, maxWidth, ,, this]
[., content, =, TextUtilities, ., createTextBlock, (, this, ., text, ,, this, ., font, ,, this, ., paint, ,, maxWidth]
[;, this, ., content, ., setLineAlignment, (, this, ., textAlignment, ), ;, Size2D, contentSize, =, this, ., content, ., calculateDimensions]
[., createTextBlock, (, this, ., text, ,, this, ., font, ,, this, ., paint, ,, maxWidth, ,, this, ., maximumLinesToDisplay]
[,, this, ., font, ,, this, ., paint, ,, maxWidth, ,, this, ., maximumLinesToDisplay, ,, new, G2TextMeasurer, (, g2, )]
[., text, ,, this, ., font, ,, this, ., paint, ,, maxWidth, ,, this, ., maximumLinesToDisplay, ,, new, G2TextMeasurer, (]
[,, this, ., paint, ,, maxWidth, ,, this, ., maximumLinesToDisplay, ,, new, G2TextMeasurer, (, g2, ), ), ;, this, .]
[., font, ,, this, ., paint, ,, maxWidth, ,, this, ., maximumLinesToDisplay, ,, new, G2TextMeasurer, (, g2, ), ), ;]
[,, maxWidth, ,, this, ., maximumLinesToDisplay, ,, new, G2TextMeasurer, (, g2, ), ), ;, this, ., content, ., setLineAlignment, (]
[., paint, ,, maxWidth, ,, this, ., maximumLinesToDisplay, ,, new, G2TextMeasurer, (, g2, ), ), ;, this, ., content, .]
[,, this, ., maximumLinesToDisplay, ,, new, G2TextMeasurer, (, g2, ), ), ;, this, ., content, ., setLineAlignment, (, this, .]
[,, new, G2TextMeasurer, (, g2, ), ), ;, this, ., content, ., setLineAlignment, (, this, ., textAlignment, ), ;, Size2D]
[., maximumLinesToDisplay, ,, new, G2TextMeasurer, (, g2, ), ), ;, this, ., content, ., setLineAlignment, (, this, ., textAlignment, )]
[), ;, this, ., content, ., setLineAlignment, (, this, ., textAlignment, ), ;, Size2D, contentSize, =, this, ., content, .]
[), ), ;, this, ., content, ., setLineAlignment, (, this, ., textAlignment, ), ;, Size2D, contentSize, =, this, ., content]
[;, Size2D, contentSize, =, this, ., content, ., calculateDimensions, (, g2, ), ;, if, (, this, ., expandToFitSpace, ), {]
[., setLineAlignment, (, this, ., textAlignment, ), ;, Size2D, contentSize, =, this, ., content, ., calculateDimensions, (, g2, ), ;]
[., content, ., setLineAlignment, (, this, ., textAlignment, ), ;, Size2D, contentSize, =, this, ., content, ., calculateDimensions, (, g2]
[), ;, Size2D, contentSize, =, this, ., content, ., calculateDimensions, (, g2, ), ;, if, (, this, ., expandToFitSpace, )]
[., textAlignment, ), ;, Size2D, contentSize, =, this, ., content, ., calculateDimensions, (, g2, ), ;, if, (, this, .]
[;, if, (, this, ., expandToFitSpace, ), {, return, new, Size2D, (, maxWidth, ,, contentSize, ., getHeight, (, ), )]
[., calculateDimensions, (, g2, ), ;, if, (, this, ., expandToFitSpace, ), {, return, new, Size2D, (, maxWidth, ,, contentSize]
[., content, ., calculateDimensions, (, g2, ), ;, if, (, this, ., expandToFitSpace, ), {, return, new, Size2D, (, maxWidth]
[), ;, if, (, this, ., expandToFitSpace, ), {, return, new, Size2D, (, maxWidth, ,, contentSize, ., getHeight, (, )]
[), {, return, new, Size2D, (, maxWidth, ,, contentSize, ., getHeight, (, ), ), ;, }, else, {, return, contentSize]
[., expandToFitSpace, ), {, return, new, Size2D, (, maxWidth, ,, contentSize, ., getHeight, (, ), ), ;, }, else, {]
[;, }, else, {, return, contentSize, ;, }, }, else, if, (, position, ==, RectangleEdge, ., LEFT, ||, position, ==]
[,, contentSize, ., getHeight, (, ), ), ;, }, else, {, return, contentSize, ;, }, }, else, if, (, position]
[), ;, }, else, {, return, contentSize, ;, }, }, else, if, (, position, ==, RectangleEdge, ., LEFT, ||, position]
[., getHeight, (, ), ), ;, }, else, {, return, contentSize, ;, }, }, else, if, (, position, ==, RectangleEdge]
[;, }, }, else, if, (, position, ==, RectangleEdge, ., LEFT, ||, position, ==, RectangleEdge, ., RIGHT, ), {, float]
[), {, float, maxWidth, =, Float, ., MAX_VALUE, ;, g2, ., setFont, (, this, ., font, ), ;, this, .]
[||, position, ==, RectangleEdge, ., RIGHT, ), {, float, maxWidth, =, Float, ., MAX_VALUE, ;, g2, ., setFont, (, this]
[==, RectangleEdge, ., LEFT, ||, position, ==, RectangleEdge, ., RIGHT, ), {, float, maxWidth, =, Float, ., MAX_VALUE, ;, g2]
[||, position, ==, RectangleEdge, ., RIGHT, ), {, float, maxWidth, =, Float, ., MAX_VALUE, ;, g2, ., setFont, (, this]
[., LEFT, ||, position, ==, RectangleEdge, ., RIGHT, ), {, float, maxWidth, =, Float, ., MAX_VALUE, ;, g2, ., setFont]
[), {, float, maxWidth, =, Float, ., MAX_VALUE, ;, g2, ., setFont, (, this, ., font, ), ;, this, .]
[==, RectangleEdge, ., RIGHT, ), {, float, maxWidth, =, Float, ., MAX_VALUE, ;, g2, ., setFont, (, this, ., font]
[), {, float, maxWidth, =, Float, ., MAX_VALUE, ;, g2, ., setFont, (, this, ., font, ), ;, this, .]
[., RIGHT, ), {, float, maxWidth, =, Float, ., MAX_VALUE, ;, g2, ., setFont, (, this, ., font, ), ;]
[;, g2, ., setFont, (, this, ., font, ), ;, this, ., content, =, TextUtilities, ., createTextBlock, (, this, .]
[., MAX_VALUE, ;, g2, ., setFont, (, this, ., font, ), ;, this, ., content, =, TextUtilities, ., createTextBlock, (]
[;, this, ., content, =, TextUtilities, ., createTextBlock, (, this, ., text, ,, this, ., font, ,, this, ., paint]
[., setFont, (, this, ., font, ), ;, this, ., content, =, TextUtilities, ., createTextBlock, (, this, ., text, ,]
[), ;, this, ., content, =, TextUtilities, ., createTextBlock, (, this, ., text, ,, this, ., font, ,, this, .]
[., font, ), ;, this, ., content, =, TextUtilities, ., createTextBlock, (, this, ., text, ,, this, ., font, ,]
[=, TextUtilities, ., createTextBlock, (, this, ., text, ,, this, ., font, ,, this, ., paint, ,, maxWidth, ,, this]
[., content, =, TextUtilities, ., createTextBlock, (, this, ., text, ,, this, ., font, ,, this, ., paint, ,, maxWidth]
[;, this, ., content, ., setLineAlignment, (, this, ., textAlignment, ), ;, Size2D, contentSize, =, this, ., content, ., calculateDimensions]
[., createTextBlock, (, this, ., text, ,, this, ., font, ,, this, ., paint, ,, maxWidth, ,, this, ., maximumLinesToDisplay]
[,, this, ., font, ,, this, ., paint, ,, maxWidth, ,, this, ., maximumLinesToDisplay, ,, new, G2TextMeasurer, (, g2, )]
[., text, ,, this, ., font, ,, this, ., paint, ,, maxWidth, ,, this, ., maximumLinesToDisplay, ,, new, G2TextMeasurer, (]
[,, this, ., paint, ,, maxWidth, ,, this, ., maximumLinesToDisplay, ,, new, G2TextMeasurer, (, g2, ), ), ;, this, .]
[., font, ,, this, ., paint, ,, maxWidth, ,, this, ., maximumLinesToDisplay, ,, new, G2TextMeasurer, (, g2, ), ), ;]
[,, maxWidth, ,, this, ., maximumLinesToDisplay, ,, new, G2TextMeasurer, (, g2, ), ), ;, this, ., content, ., setLineAlignment, (]
[., paint, ,, maxWidth, ,, this, ., maximumLinesToDisplay, ,, new, G2TextMeasurer, (, g2, ), ), ;, this, ., content, .]
[,, this, ., maximumLinesToDisplay, ,, new, G2TextMeasurer, (, g2, ), ), ;, this, ., content, ., setLineAlignment, (, this, .]
[,, new, G2TextMeasurer, (, g2, ), ), ;, this, ., content, ., setLineAlignment, (, this, ., textAlignment, ), ;, Size2D]
[., maximumLinesToDisplay, ,, new, G2TextMeasurer, (, g2, ), ), ;, this, ., content, ., setLineAlignment, (, this, ., textAlignment, )]
[), ;, this, ., content, ., setLineAlignment, (, this, ., textAlignment, ), ;, Size2D, contentSize, =, this, ., content, .]
[), ), ;, this, ., content, ., setLineAlignment, (, this, ., textAlignment, ), ;, Size2D, contentSize, =, this, ., content]
[;, Size2D, contentSize, =, this, ., content, ., calculateDimensions, (, g2, ), ;, if, (, this, ., expandToFitSpace, ), {]
[., setLineAlignment, (, this, ., textAlignment, ), ;, Size2D, contentSize, =, this, ., content, ., calculateDimensions, (, g2, ), ;]
[., content, ., setLineAlignment, (, this, ., textAlignment, ), ;, Size2D, contentSize, =, this, ., content, ., calculateDimensions, (, g2]
[), ;, Size2D, contentSize, =, this, ., content, ., calculateDimensions, (, g2, ), ;, if, (, this, ., expandToFitSpace, )]
[., textAlignment, ), ;, Size2D, contentSize, =, this, ., content, ., calculateDimensions, (, g2, ), ;, if, (, this, .]
[;, if, (, this, ., expandToFitSpace, ), {, return, new, Size2D, (, contentSize, ., getHeight, (, ), ,, maxWidth, )]
[., calculateDimensions, (, g2, ), ;, if, (, this, ., expandToFitSpace, ), {, return, new, Size2D, (, contentSize, ., getHeight]
[., content, ., calculateDimensions, (, g2, ), ;, if, (, this, ., expandToFitSpace, ), {, return, new, Size2D, (, contentSize]
[), ;, if, (, this, ., expandToFitSpace, ), {, return, new, Size2D, (, contentSize, ., getHeight, (, ), ,, maxWidth]
[), {, return, new, Size2D, (, contentSize, ., getHeight, (, ), ,, maxWidth, ), ;, }, else, {, return, new]
[., expandToFitSpace, ), {, return, new, Size2D, (, contentSize, ., getHeight, (, ), ,, maxWidth, ), ;, }, else, {]
[;, }, else, {, return, new, Size2D, (, contentSize, ., height, ,, contentSize, ., width, ), ;, }, }, else]
[,, maxWidth, ), ;, }, else, {, return, new, Size2D, (, contentSize, ., height, ,, contentSize, ., width, ), ;]
[., getHeight, (, ), ,, maxWidth, ), ;, }, else, {, return, new, Size2D, (, contentSize, ., height, ,, contentSize]
[), ;, }, else, {, return, new, Size2D, (, contentSize, ., height, ,, contentSize, ., width, ), ;, }, }]
[;, }, }, else, {, throw, new, RuntimeException, (, "Unrecognised exception.", ), ;, }, }, protected, Size2D, arrangeRN, (, Graphics2D, g2]
[,, contentSize, ., width, ), ;, }, }, else, {, throw, new, RuntimeException, (, "Unrecognised exception.", ), ;, }, }, protected]
[., height, ,, contentSize, ., width, ), ;, }, }, else, {, throw, new, RuntimeException, (, "Unrecognised exception.", ), ;, }]
[), ;, }, }, else, {, throw, new, RuntimeException, (, "Unrecognised exception.", ), ;, }, }, protected, Size2D, arrangeRN, (, Graphics2D]
[., width, ), ;, }, }, else, {, throw, new, RuntimeException, (, "Unrecognised exception.", ), ;, }, }, protected, Size2D, arrangeRN]
[;, }, }, protected, Size2D, arrangeRN, (, Graphics2D, g2, ,, Range, widthRange, ), {, Size2D, s, =, arrangeNN, (, g2]
[), ;, }, }, protected, Size2D, arrangeRN, (, Graphics2D, g2, ,, Range, widthRange, ), {, Size2D, s, =, arrangeNN, (]
[;, if, (, widthRange, ., contains, (, s, ., getWidth, (, ), ), ), {, return, s, ;, }, double]
[), ;, if, (, widthRange, ., contains, (, s, ., getWidth, (, ), ), ), {, return, s, ;, }]
[), {, return, s, ;, }, double, ww, =, widthRange, ., constrain, (, s, ., getWidth, (, ), ), ;]
[., contains, (, s, ., getWidth, (, ), ), ), {, return, s, ;, }, double, ww, =, widthRange, .]
[), ), {, return, s, ;, }, double, ww, =, widthRange, ., constrain, (, s, ., getWidth, (, ), )]
[., getWidth, (, ), ), ), {, return, s, ;, }, double, ww, =, widthRange, ., constrain, (, s, .]
[;, }, double, ww, =, widthRange, ., constrain, (, s, ., getWidth, (, ), ), ;, return, arrangeFN, (, g2]
[;, return, arrangeFN, (, g2, ,, ww, ), ;, }, protected, Size2D, arrangeRR, (, Graphics2D, g2, ,, Range, widthRange, ,]
[., constrain, (, s, ., getWidth, (, ), ), ;, return, arrangeFN, (, g2, ,, ww, ), ;, }, protected]
[), ;, return, arrangeFN, (, g2, ,, ww, ), ;, }, protected, Size2D, arrangeRR, (, Graphics2D, g2, ,, Range, widthRange]
[., getWidth, (, ), ), ;, return, arrangeFN, (, g2, ,, ww, ), ;, }, protected, Size2D, arrangeRR, (, Graphics2D]
[;, }, protected, Size2D, arrangeRR, (, Graphics2D, g2, ,, Range, widthRange, ,, Range, heightRange, ), {, RectangleEdge, position, =, getPosition]
[,, ww, ), ;, }, protected, Size2D, arrangeRR, (, Graphics2D, g2, ,, Range, widthRange, ,, Range, heightRange, ), {, RectangleEdge]
[), ;, }, protected, Size2D, arrangeRR, (, Graphics2D, g2, ,, Range, widthRange, ,, Range, heightRange, ), {, RectangleEdge, position, =]
[;, if, (, position, ==, RectangleEdge, ., TOP, ||, position, ==, RectangleEdge, ., BOTTOM, ), {, float, maxWidth, =, (]
[), {, float, maxWidth, =, (, float, ), widthRange, ., getUpperBound, (, ), ;, g2, ., setFont, (, this, .]
[||, position, ==, RectangleEdge, ., BOTTOM, ), {, float, maxWidth, =, (, float, ), widthRange, ., getUpperBound, (, ), ;]
[==, RectangleEdge, ., TOP, ||, position, ==, RectangleEdge, ., BOTTOM, ), {, float, maxWidth, =, (, float, ), widthRange, .]
[||, position, ==, RectangleEdge, ., BOTTOM, ), {, float, maxWidth, =, (, float, ), widthRange, ., getUpperBound, (, ), ;]
[., TOP, ||, position, ==, RectangleEdge, ., BOTTOM, ), {, float, maxWidth, =, (, float, ), widthRange, ., getUpperBound, (]
[), {, float, maxWidth, =, (, float, ), widthRange, ., getUpperBound, (, ), ;, g2, ., setFont, (, this, .]
[==, RectangleEdge, ., BOTTOM, ), {, float, maxWidth, =, (, float, ), widthRange, ., getUpperBound, (, ), ;, g2, .]
[), {, float, maxWidth, =, (, float, ), widthRange, ., getUpperBound, (, ), ;, g2, ., setFont, (, this, .]
[., BOTTOM, ), {, float, maxWidth, =, (, float, ), widthRange, ., getUpperBound, (, ), ;, g2, ., setFont, (]
[;, g2, ., setFont, (, this, ., font, ), ;, this, ., content, =, TextUtilities, ., createTextBlock, (, this, .]
[;, g2, ., setFont, (, this, ., font, ), ;, this, ., content, =, TextUtilities, ., createTextBlock, (, this, .]
[., getUpperBound, (, ), ;, g2, ., setFont, (, this, ., font, ), ;, this, ., content, =, TextUtilities, .]
[;, this, ., content, =, TextUtilities, ., createTextBlock, (, this, ., text, ,, this, ., font, ,, this, ., paint]
[., setFont, (, this, ., font, ), ;, this, ., content, =, TextUtilities, ., createTextBlock, (, this, ., text, ,]
[), ;, this, ., content, =, TextUtilities, ., createTextBlock, (, this, ., text, ,, this, ., font, ,, this, .]
[., font, ), ;, this, ., content, =, TextUtilities, ., createTextBlock, (, this, ., text, ,, this, ., font, ,]
[=, TextUtilities, ., createTextBlock, (, this, ., text, ,, this, ., font, ,, this, ., paint, ,, maxWidth, ,, this]
[., content, =, TextUtilities, ., createTextBlock, (, this, ., text, ,, this, ., font, ,, this, ., paint, ,, maxWidth]
[;, this, ., content, ., setLineAlignment, (, this, ., textAlignment, ), ;, Size2D, contentSize, =, this, ., content, ., calculateDimensions]
[., createTextBlock, (, this, ., text, ,, this, ., font, ,, this, ., paint, ,, maxWidth, ,, this, ., maximumLinesToDisplay]
[,, this, ., font, ,, this, ., paint, ,, maxWidth, ,, this, ., maximumLinesToDisplay, ,, new, G2TextMeasurer, (, g2, )]
[., text, ,, this, ., font, ,, this, ., paint, ,, maxWidth, ,, this, ., maximumLinesToDisplay, ,, new, G2TextMeasurer, (]
[,, this, ., paint, ,, maxWidth, ,, this, ., maximumLinesToDisplay, ,, new, G2TextMeasurer, (, g2, ), ), ;, this, .]
[., font, ,, this, ., paint, ,, maxWidth, ,, this, ., maximumLinesToDisplay, ,, new, G2TextMeasurer, (, g2, ), ), ;]
[,, maxWidth, ,, this, ., maximumLinesToDisplay, ,, new, G2TextMeasurer, (, g2, ), ), ;, this, ., content, ., setLineAlignment, (]
[., paint, ,, maxWidth, ,, this, ., maximumLinesToDisplay, ,, new, G2TextMeasurer, (, g2, ), ), ;, this, ., content, .]
[,, this, ., maximumLinesToDisplay, ,, new, G2TextMeasurer, (, g2, ), ), ;, this, ., content, ., setLineAlignment, (, this, .]
[,, new, G2TextMeasurer, (, g2, ), ), ;, this, ., content, ., setLineAlignment, (, this, ., textAlignment, ), ;, Size2D]
[., maximumLinesToDisplay, ,, new, G2TextMeasurer, (, g2, ), ), ;, this, ., content, ., setLineAlignment, (, this, ., textAlignment, )]
[), ;, this, ., content, ., setLineAlignment, (, this, ., textAlignment, ), ;, Size2D, contentSize, =, this, ., content, .]
[), ), ;, this, ., content, ., setLineAlignment, (, this, ., textAlignment, ), ;, Size2D, contentSize, =, this, ., content]
[;, Size2D, contentSize, =, this, ., content, ., calculateDimensions, (, g2, ), ;, if, (, this, ., expandToFitSpace, ), {]
[., setLineAlignment, (, this, ., textAlignment, ), ;, Size2D, contentSize, =, this, ., content, ., calculateDimensions, (, g2, ), ;]
[., content, ., setLineAlignment, (, this, ., textAlignment, ), ;, Size2D, contentSize, =, this, ., content, ., calculateDimensions, (, g2]
[), ;, Size2D, contentSize, =, this, ., content, ., calculateDimensions, (, g2, ), ;, if, (, this, ., expandToFitSpace, )]
[., textAlignment, ), ;, Size2D, contentSize, =, this, ., content, ., calculateDimensions, (, g2, ), ;, if, (, this, .]
[;, if, (, this, ., expandToFitSpace, ), {, return, new, Size2D, (, maxWidth, ,, contentSize, ., getHeight, (, ), )]
[., calculateDimensions, (, g2, ), ;, if, (, this, ., expandToFitSpace, ), {, return, new, Size2D, (, maxWidth, ,, contentSize]
[., content, ., calculateDimensions, (, g2, ), ;, if, (, this, ., expandToFitSpace, ), {, return, new, Size2D, (, maxWidth]
[), ;, if, (, this, ., expandToFitSpace, ), {, return, new, Size2D, (, maxWidth, ,, contentSize, ., getHeight, (, )]
[), {, return, new, Size2D, (, maxWidth, ,, contentSize, ., getHeight, (, ), ), ;, }, else, {, return, contentSize]
[., expandToFitSpace, ), {, return, new, Size2D, (, maxWidth, ,, contentSize, ., getHeight, (, ), ), ;, }, else, {]
[;, }, else, {, return, contentSize, ;, }, }, else, if, (, position, ==, RectangleEdge, ., LEFT, ||, position, ==]
[,, contentSize, ., getHeight, (, ), ), ;, }, else, {, return, contentSize, ;, }, }, else, if, (, position]
[), ;, }, else, {, return, contentSize, ;, }, }, else, if, (, position, ==, RectangleEdge, ., LEFT, ||, position]
[., getHeight, (, ), ), ;, }, else, {, return, contentSize, ;, }, }, else, if, (, position, ==, RectangleEdge]
[;, }, }, else, if, (, position, ==, RectangleEdge, ., LEFT, ||, position, ==, RectangleEdge, ., RIGHT, ), {, float]
[), {, float, maxWidth, =, (, float, ), heightRange, ., getUpperBound, (, ), ;, g2, ., setFont, (, this, .]
[||, position, ==, RectangleEdge, ., RIGHT, ), {, float, maxWidth, =, (, float, ), heightRange, ., getUpperBound, (, ), ;]
[==, RectangleEdge, ., LEFT, ||, position, ==, RectangleEdge, ., RIGHT, ), {, float, maxWidth, =, (, float, ), heightRange, .]
[||, position, ==, RectangleEdge, ., RIGHT, ), {, float, maxWidth, =, (, float, ), heightRange, ., getUpperBound, (, ), ;]
[., LEFT, ||, position, ==, RectangleEdge, ., RIGHT, ), {, float, maxWidth, =, (, float, ), heightRange, ., getUpperBound, (]
[), {, float, maxWidth, =, (, float, ), heightRange, ., getUpperBound, (, ), ;, g2, ., setFont, (, this, .]
[==, RectangleEdge, ., RIGHT, ), {, float, maxWidth, =, (, float, ), heightRange, ., getUpperBound, (, ), ;, g2, .]
[), {, float, maxWidth, =, (, float, ), heightRange, ., getUpperBound, (, ), ;, g2, ., setFont, (, this, .]
[., RIGHT, ), {, float, maxWidth, =, (, float, ), heightRange, ., getUpperBound, (, ), ;, g2, ., setFont, (]
[;, g2, ., setFont, (, this, ., font, ), ;, this, ., content, =, TextUtilities, ., createTextBlock, (, this, .]
[;, g2, ., setFont, (, this, ., font, ), ;, this, ., content, =, TextUtilities, ., createTextBlock, (, this, .]
[., getUpperBound, (, ), ;, g2, ., setFont, (, this, ., font, ), ;, this, ., content, =, TextUtilities, .]
[;, this, ., content, =, TextUtilities, ., createTextBlock, (, this, ., text, ,, this, ., font, ,, this, ., paint]
[., setFont, (, this, ., font, ), ;, this, ., content, =, TextUtilities, ., createTextBlock, (, this, ., text, ,]
[), ;, this, ., content, =, TextUtilities, ., createTextBlock, (, this, ., text, ,, this, ., font, ,, this, .]
[., font, ), ;, this, ., content, =, TextUtilities, ., createTextBlock, (, this, ., text, ,, this, ., font, ,]
[=, TextUtilities, ., createTextBlock, (, this, ., text, ,, this, ., font, ,, this, ., paint, ,, maxWidth, ,, this]
[., content, =, TextUtilities, ., createTextBlock, (, this, ., text, ,, this, ., font, ,, this, ., paint, ,, maxWidth]
[;, this, ., content, ., setLineAlignment, (, this, ., textAlignment, ), ;, Size2D, contentSize, =, this, ., content, ., calculateDimensions]
[., createTextBlock, (, this, ., text, ,, this, ., font, ,, this, ., paint, ,, maxWidth, ,, this, ., maximumLinesToDisplay]
[,, this, ., font, ,, this, ., paint, ,, maxWidth, ,, this, ., maximumLinesToDisplay, ,, new, G2TextMeasurer, (, g2, )]
[., text, ,, this, ., font, ,, this, ., paint, ,, maxWidth, ,, this, ., maximumLinesToDisplay, ,, new, G2TextMeasurer, (]
[,, this, ., paint, ,, maxWidth, ,, this, ., maximumLinesToDisplay, ,, new, G2TextMeasurer, (, g2, ), ), ;, this, .]
[., font, ,, this, ., paint, ,, maxWidth, ,, this, ., maximumLinesToDisplay, ,, new, G2TextMeasurer, (, g2, ), ), ;]
[,, maxWidth, ,, this, ., maximumLinesToDisplay, ,, new, G2TextMeasurer, (, g2, ), ), ;, this, ., content, ., setLineAlignment, (]
[., paint, ,, maxWidth, ,, this, ., maximumLinesToDisplay, ,, new, G2TextMeasurer, (, g2, ), ), ;, this, ., content, .]
[,, this, ., maximumLinesToDisplay, ,, new, G2TextMeasurer, (, g2, ), ), ;, this, ., content, ., setLineAlignment, (, this, .]
[,, new, G2TextMeasurer, (, g2, ), ), ;, this, ., content, ., setLineAlignment, (, this, ., textAlignment, ), ;, Size2D]
[., maximumLinesToDisplay, ,, new, G2TextMeasurer, (, g2, ), ), ;, this, ., content, ., setLineAlignment, (, this, ., textAlignment, )]
[), ;, this, ., content, ., setLineAlignment, (, this, ., textAlignment, ), ;, Size2D, contentSize, =, this, ., content, .]
[), ), ;, this, ., content, ., setLineAlignment, (, this, ., textAlignment, ), ;, Size2D, contentSize, =, this, ., content]
[;, Size2D, contentSize, =, this, ., content, ., calculateDimensions, (, g2, ), ;, if, (, this, ., expandToFitSpace, ), {]
[., setLineAlignment, (, this, ., textAlignment, ), ;, Size2D, contentSize, =, this, ., content, ., calculateDimensions, (, g2, ), ;]
[., content, ., setLineAlignment, (, this, ., textAlignment, ), ;, Size2D, contentSize, =, this, ., content, ., calculateDimensions, (, g2]
[), ;, Size2D, contentSize, =, this, ., content, ., calculateDimensions, (, g2, ), ;, if, (, this, ., expandToFitSpace, )]
[., textAlignment, ), ;, Size2D, contentSize, =, this, ., content, ., calculateDimensions, (, g2, ), ;, if, (, this, .]
[;, if, (, this, ., expandToFitSpace, ), {, return, new, Size2D, (, contentSize, ., getHeight, (, ), ,, maxWidth, )]
[., calculateDimensions, (, g2, ), ;, if, (, this, ., expandToFitSpace, ), {, return, new, Size2D, (, contentSize, ., getHeight]
[., content, ., calculateDimensions, (, g2, ), ;, if, (, this, ., expandToFitSpace, ), {, return, new, Size2D, (, contentSize]
[), ;, if, (, this, ., expandToFitSpace, ), {, return, new, Size2D, (, contentSize, ., getHeight, (, ), ,, maxWidth]
[), {, return, new, Size2D, (, contentSize, ., getHeight, (, ), ,, maxWidth, ), ;, }, else, {, return, new]
[., expandToFitSpace, ), {, return, new, Size2D, (, contentSize, ., getHeight, (, ), ,, maxWidth, ), ;, }, else, {]
[;, }, else, {, return, new, Size2D, (, contentSize, ., height, ,, contentSize, ., width, ), ;, }, }, else]
[,, maxWidth, ), ;, }, else, {, return, new, Size2D, (, contentSize, ., height, ,, contentSize, ., width, ), ;]
[., getHeight, (, ), ,, maxWidth, ), ;, }, else, {, return, new, Size2D, (, contentSize, ., height, ,, contentSize]
[), ;, }, else, {, return, new, Size2D, (, contentSize, ., height, ,, contentSize, ., width, ), ;, }, }]
[;, }, }, else, {, throw, new, RuntimeException, (, "Unrecognised exception.", ), ;, }, }, public, void, draw, (, Graphics2D, g2]
[,, contentSize, ., width, ), ;, }, }, else, {, throw, new, RuntimeException, (, "Unrecognised exception.", ), ;, }, }, public]
[., height, ,, contentSize, ., width, ), ;, }, }, else, {, throw, new, RuntimeException, (, "Unrecognised exception.", ), ;, }]
[), ;, }, }, else, {, throw, new, RuntimeException, (, "Unrecognised exception.", ), ;, }, }, public, void, draw, (, Graphics2D]
[., width, ), ;, }, }, else, {, throw, new, RuntimeException, (, "Unrecognised exception.", ), ;, }, }, public, void, draw]
[;, }, }, public, void, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ), {, draw, (, g2, ,, area, ,]
[), ;, }, }, public, void, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ), {, draw, (, g2, ,, area]
[;, }, public, Object, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ,, Object, params, ), {, if, (, this, .]
[,, area, ,, null, ), ;, }, public, Object, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ,, Object, params, )]
[,, null, ), ;, }, public, Object, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ,, Object, params, ), {, if]
[), ;, }, public, Object, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ,, Object, params, ), {, if, (, this]
[), {, return, null, ;, }, area, =, trimMargin, (, area, ), ;, drawBorder, (, g2, ,, area, ), ;]
[==, null, ), {, return, null, ;, }, area, =, trimMargin, (, area, ), ;, drawBorder, (, g2, ,, area]
[., content, ==, null, ), {, return, null, ;, }, area, =, trimMargin, (, area, ), ;, drawBorder, (, g2]
[), {, return, null, ;, }, area, =, trimMargin, (, area, ), ;, drawBorder, (, g2, ,, area, ), ;]
[;, }, area, =, trimMargin, (, area, ), ;, drawBorder, (, g2, ,, area, ), ;, if, (, this, .]
[=, trimMargin, (, area, ), ;, drawBorder, (, g2, ,, area, ), ;, if, (, this, ., text, ., equals]
[;, drawBorder, (, g2, ,, area, ), ;, if, (, this, ., text, ., equals, (, "", ), ), {]
[), ;, drawBorder, (, g2, ,, area, ), ;, if, (, this, ., text, ., equals, (, "", ), )]
[;, if, (, this, ., text, ., equals, (, "", ), ), {, return, null, ;, }, ChartEntity, entity, =]
[,, area, ), ;, if, (, this, ., text, ., equals, (, "", ), ), {, return, null, ;, }]
[), ;, if, (, this, ., text, ., equals, (, "", ), ), {, return, null, ;, }, ChartEntity, entity]
[), {, return, null, ;, }, ChartEntity, entity, =, null, ;, if, (, params, instanceof, EntityBlockParams, ), {, EntityBlockParams, p]
[., equals, (, "", ), ), {, return, null, ;, }, ChartEntity, entity, =, null, ;, if, (, params, instanceof]
[., text, ., equals, (, "", ), ), {, return, null, ;, }, ChartEntity, entity, =, null, ;, if, (]
[), ), {, return, null, ;, }, ChartEntity, entity, =, null, ;, if, (, params, instanceof, EntityBlockParams, ), {, EntityBlockParams]
[;, }, ChartEntity, entity, =, null, ;, if, (, params, instanceof, EntityBlockParams, ), {, EntityBlockParams, p, =, (, EntityBlockParams, )]
[;, if, (, params, instanceof, EntityBlockParams, ), {, EntityBlockParams, p, =, (, EntityBlockParams, ), params, ;, if, (, p, .]
[), {, EntityBlockParams, p, =, (, EntityBlockParams, ), params, ;, if, (, p, ., getGenerateEntities, (, ), ), {, entity]
[instanceof, EntityBlockParams, ), {, EntityBlockParams, p, =, (, EntityBlockParams, ), params, ;, if, (, p, ., getGenerateEntities, (, ), )]
[;, if, (, p, ., getGenerateEntities, (, ), ), {, entity, =, new, TitleEntity, (, area, ,, this, ,, this]
[;, if, (, p, ., getGenerateEntities, (, ), ), {, entity, =, new, TitleEntity, (, area, ,, this, ,, this]
[), {, entity, =, new, TitleEntity, (, area, ,, this, ,, this, ., toolTipText, ,, this, ., urlText, ), ;]
[., getGenerateEntities, (, ), ), {, entity, =, new, TitleEntity, (, area, ,, this, ,, this, ., toolTipText, ,, this]
[=, new, TitleEntity, (, area, ,, this, ,, this, ., toolTipText, ,, this, ., urlText, ), ;, }, }, area]
[;, }, }, area, =, trimBorder, (, area, ), ;, if, (, this, ., backgroundPaint, !=, null, ), {, g2]
[,, this, ,, this, ., toolTipText, ,, this, ., urlText, ), ;, }, }, area, =, trimBorder, (, area, )]
[,, this, ., toolTipText, ,, this, ., urlText, ), ;, }, }, area, =, trimBorder, (, area, ), ;, if]
[,, this, ., urlText, ), ;, }, }, area, =, trimBorder, (, area, ), ;, if, (, this, ., backgroundPaint]
[., toolTipText, ,, this, ., urlText, ), ;, }, }, area, =, trimBorder, (, area, ), ;, if, (, this]
[), ;, }, }, area, =, trimBorder, (, area, ), ;, if, (, this, ., backgroundPaint, !=, null, ), {]
[., urlText, ), ;, }, }, area, =, trimBorder, (, area, ), ;, if, (, this, ., backgroundPaint, !=, null]
[=, trimBorder, (, area, ), ;, if, (, this, ., backgroundPaint, !=, null, ), {, g2, ., setPaint, (, this]
[;, if, (, this, ., backgroundPaint, !=, null, ), {, g2, ., setPaint, (, this, ., backgroundPaint, ), ;, g2]
[), ;, if, (, this, ., backgroundPaint, !=, null, ), {, g2, ., setPaint, (, this, ., backgroundPaint, ), ;]
[), {, g2, ., setPaint, (, this, ., backgroundPaint, ), ;, g2, ., fill, (, area, ), ;, }, area]
[!=, null, ), {, g2, ., setPaint, (, this, ., backgroundPaint, ), ;, g2, ., fill, (, area, ), ;]
[., backgroundPaint, !=, null, ), {, g2, ., setPaint, (, this, ., backgroundPaint, ), ;, g2, ., fill, (, area]
[), {, g2, ., setPaint, (, this, ., backgroundPaint, ), ;, g2, ., fill, (, area, ), ;, }, area]
[;, g2, ., fill, (, area, ), ;, }, area, =, trimPadding, (, area, ), ;, RectangleEdge, position, =, getPosition]
[., setPaint, (, this, ., backgroundPaint, ), ;, g2, ., fill, (, area, ), ;, }, area, =, trimPadding, (]
[), ;, g2, ., fill, (, area, ), ;, }, area, =, trimPadding, (, area, ), ;, RectangleEdge, position, =]
[., backgroundPaint, ), ;, g2, ., fill, (, area, ), ;, }, area, =, trimPadding, (, area, ), ;, RectangleEdge]
[;, }, area, =, trimPadding, (, area, ), ;, RectangleEdge, position, =, getPosition, (, ), ;, if, (, position, ==]
[., fill, (, area, ), ;, }, area, =, trimPadding, (, area, ), ;, RectangleEdge, position, =, getPosition, (, )]
[), ;, }, area, =, trimPadding, (, area, ), ;, RectangleEdge, position, =, getPosition, (, ), ;, if, (, position]
[=, trimPadding, (, area, ), ;, RectangleEdge, position, =, getPosition, (, ), ;, if, (, position, ==, RectangleEdge, ., TOP]
[;, RectangleEdge, position, =, getPosition, (, ), ;, if, (, position, ==, RectangleEdge, ., TOP, ||, position, ==, RectangleEdge, .]
[), ;, RectangleEdge, position, =, getPosition, (, ), ;, if, (, position, ==, RectangleEdge, ., TOP, ||, position, ==, RectangleEdge]
[;, if, (, position, ==, RectangleEdge, ., TOP, ||, position, ==, RectangleEdge, ., BOTTOM, ), {, drawHorizontal, (, g2, ,]
[), {, drawHorizontal, (, g2, ,, area, ), ;, }, else, if, (, position, ==, RectangleEdge, ., LEFT, ||, position]
[||, position, ==, RectangleEdge, ., BOTTOM, ), {, drawHorizontal, (, g2, ,, area, ), ;, }, else, if, (, position]
[==, RectangleEdge, ., TOP, ||, position, ==, RectangleEdge, ., BOTTOM, ), {, drawHorizontal, (, g2, ,, area, ), ;, }]
[||, position, ==, RectangleEdge, ., BOTTOM, ), {, drawHorizontal, (, g2, ,, area, ), ;, }, else, if, (, position]
[., TOP, ||, position, ==, RectangleEdge, ., BOTTOM, ), {, drawHorizontal, (, g2, ,, area, ), ;, }, else, if]
[), {, drawHorizontal, (, g2, ,, area, ), ;, }, else, if, (, position, ==, RectangleEdge, ., LEFT, ||, position]
[==, RectangleEdge, ., BOTTOM, ), {, drawHorizontal, (, g2, ,, area, ), ;, }, else, if, (, position, ==, RectangleEdge]
[), {, drawHorizontal, (, g2, ,, area, ), ;, }, else, if, (, position, ==, RectangleEdge, ., LEFT, ||, position]
[., BOTTOM, ), {, drawHorizontal, (, g2, ,, area, ), ;, }, else, if, (, position, ==, RectangleEdge, ., LEFT]
[;, }, else, if, (, position, ==, RectangleEdge, ., LEFT, ||, position, ==, RectangleEdge, ., RIGHT, ), {, drawVertical, (]
[,, area, ), ;, }, else, if, (, position, ==, RectangleEdge, ., LEFT, ||, position, ==, RectangleEdge, ., RIGHT, )]
[), ;, }, else, if, (, position, ==, RectangleEdge, ., LEFT, ||, position, ==, RectangleEdge, ., RIGHT, ), {, drawVertical]
[), {, drawVertical, (, g2, ,, area, ), ;, }, BlockResult, result, =, new, BlockResult, (, ), ;, if, (]
[||, position, ==, RectangleEdge, ., RIGHT, ), {, drawVertical, (, g2, ,, area, ), ;, }, BlockResult, result, =, new]
[==, RectangleEdge, ., LEFT, ||, position, ==, RectangleEdge, ., RIGHT, ), {, drawVertical, (, g2, ,, area, ), ;, }]
[||, position, ==, RectangleEdge, ., RIGHT, ), {, drawVertical, (, g2, ,, area, ), ;, }, BlockResult, result, =, new]
[., LEFT, ||, position, ==, RectangleEdge, ., RIGHT, ), {, drawVertical, (, g2, ,, area, ), ;, }, BlockResult, result]
[), {, drawVertical, (, g2, ,, area, ), ;, }, BlockResult, result, =, new, BlockResult, (, ), ;, if, (]
[==, RectangleEdge, ., RIGHT, ), {, drawVertical, (, g2, ,, area, ), ;, }, BlockResult, result, =, new, BlockResult, (]
[), {, drawVertical, (, g2, ,, area, ), ;, }, BlockResult, result, =, new, BlockResult, (, ), ;, if, (]
[., RIGHT, ), {, drawVertical, (, g2, ,, area, ), ;, }, BlockResult, result, =, new, BlockResult, (, ), ;]
[;, }, BlockResult, result, =, new, BlockResult, (, ), ;, if, (, entity, !=, null, ), {, StandardEntityCollection, sec, =]
[,, area, ), ;, }, BlockResult, result, =, new, BlockResult, (, ), ;, if, (, entity, !=, null, ), {]
[), ;, }, BlockResult, result, =, new, BlockResult, (, ), ;, if, (, entity, !=, null, ), {, StandardEntityCollection, sec]
[;, if, (, entity, !=, null, ), {, StandardEntityCollection, sec, =, new, StandardEntityCollection, (, ), ;, sec, ., add, (]
[), {, StandardEntityCollection, sec, =, new, StandardEntityCollection, (, ), ;, sec, ., add, (, entity, ), ;, result, ., setEntityCollection]
[!=, null, ), {, StandardEntityCollection, sec, =, new, StandardEntityCollection, (, ), ;, sec, ., add, (, entity, ), ;, result]
[), {, StandardEntityCollection, sec, =, new, StandardEntityCollection, (, ), ;, sec, ., add, (, entity, ), ;, result, ., setEntityCollection]
[;, sec, ., add, (, entity, ), ;, result, ., setEntityCollection, (, sec, ), ;, }, return, result, ;, }]
[;, result, ., setEntityCollection, (, sec, ), ;, }, return, result, ;, }, protected, void, drawHorizontal, (, Graphics2D, g2, ,]
[., add, (, entity, ), ;, result, ., setEntityCollection, (, sec, ), ;, }, return, result, ;, }, protected, void]
[), ;, result, ., setEntityCollection, (, sec, ), ;, }, return, result, ;, }, protected, void, drawHorizontal, (, Graphics2D, g2]
[;, }, return, result, ;, }, protected, void, drawHorizontal, (, Graphics2D, g2, ,, Rectangle2D, area, ), {, Rectangle2D, titleArea, =]
[., setEntityCollection, (, sec, ), ;, }, return, result, ;, }, protected, void, drawHorizontal, (, Graphics2D, g2, ,, Rectangle2D, area]
[), ;, }, return, result, ;, }, protected, void, drawHorizontal, (, Graphics2D, g2, ,, Rectangle2D, area, ), {, Rectangle2D, titleArea]
[;, }, protected, void, drawHorizontal, (, Graphics2D, g2, ,, Rectangle2D, area, ), {, Rectangle2D, titleArea, =, (, Rectangle2D, ), area]
[;, g2, ., setFont, (, this, ., font, ), ;, g2, ., setPaint, (, this, ., paint, ), ;, TextBlockAnchor]
[;, g2, ., setFont, (, this, ., font, ), ;, g2, ., setPaint, (, this, ., paint, ), ;, TextBlockAnchor]
[., clone, (, ), ;, g2, ., setFont, (, this, ., font, ), ;, g2, ., setPaint, (, this, .]
[;, g2, ., setPaint, (, this, ., paint, ), ;, TextBlockAnchor, anchor, =, null, ;, float, x, =, 0.0f, ;]
[., setFont, (, this, ., font, ), ;, g2, ., setPaint, (, this, ., paint, ), ;, TextBlockAnchor, anchor, =]
[), ;, g2, ., setPaint, (, this, ., paint, ), ;, TextBlockAnchor, anchor, =, null, ;, float, x, =, 0.0f]
[., font, ), ;, g2, ., setPaint, (, this, ., paint, ), ;, TextBlockAnchor, anchor, =, null, ;, float, x]
[;, TextBlockAnchor, anchor, =, null, ;, float, x, =, 0.0f, ;, HorizontalAlignment, horizontalAlignment, =, getHorizontalAlignment, (, ), ;, if, (]
[., setPaint, (, this, ., paint, ), ;, TextBlockAnchor, anchor, =, null, ;, float, x, =, 0.0f, ;, HorizontalAlignment, horizontalAlignment]
[), ;, TextBlockAnchor, anchor, =, null, ;, float, x, =, 0.0f, ;, HorizontalAlignment, horizontalAlignment, =, getHorizontalAlignment, (, ), ;, if]
[., paint, ), ;, TextBlockAnchor, anchor, =, null, ;, float, x, =, 0.0f, ;, HorizontalAlignment, horizontalAlignment, =, getHorizontalAlignment, (, )]
[;, float, x, =, 0.0f, ;, HorizontalAlignment, horizontalAlignment, =, getHorizontalAlignment, (, ), ;, if, (, horizontalAlignment, ==, HorizontalAlignment, ., LEFT]
[;, HorizontalAlignment, horizontalAlignment, =, getHorizontalAlignment, (, ), ;, if, (, horizontalAlignment, ==, HorizontalAlignment, ., LEFT, ), {, x, =, (]
[;, if, (, horizontalAlignment, ==, HorizontalAlignment, ., LEFT, ), {, x, =, (, float, ), titleArea, ., getX, (, )]
[), {, x, =, (, float, ), titleArea, ., getX, (, ), ;, anchor, =, TextBlockAnchor, ., TOP_LEFT, ;, }]
[==, HorizontalAlignment, ., LEFT, ), {, x, =, (, float, ), titleArea, ., getX, (, ), ;, anchor, =, TextBlockAnchor]
[), {, x, =, (, float, ), titleArea, ., getX, (, ), ;, anchor, =, TextBlockAnchor, ., TOP_LEFT, ;, }]
[., LEFT, ), {, x, =, (, float, ), titleArea, ., getX, (, ), ;, anchor, =, TextBlockAnchor, ., TOP_LEFT]
[=, (, float, ), titleArea, ., getX, (, ), ;, anchor, =, TextBlockAnchor, ., TOP_LEFT, ;, }, else, if, (]
[;, anchor, =, TextBlockAnchor, ., TOP_LEFT, ;, }, else, if, (, horizontalAlignment, ==, HorizontalAlignment, ., RIGHT, ), {, x, =]
[;, anchor, =, TextBlockAnchor, ., TOP_LEFT, ;, }, else, if, (, horizontalAlignment, ==, HorizontalAlignment, ., RIGHT, ), {, x, =]
[., getX, (, ), ;, anchor, =, TextBlockAnchor, ., TOP_LEFT, ;, }, else, if, (, horizontalAlignment, ==, HorizontalAlignment, ., RIGHT]
[=, TextBlockAnchor, ., TOP_LEFT, ;, }, else, if, (, horizontalAlignment, ==, HorizontalAlignment, ., RIGHT, ), {, x, =, (, float]
[;, }, else, if, (, horizontalAlignment, ==, HorizontalAlignment, ., RIGHT, ), {, x, =, (, float, ), titleArea, ., getMaxX]
[., TOP_LEFT, ;, }, else, if, (, horizontalAlignment, ==, HorizontalAlignment, ., RIGHT, ), {, x, =, (, float, ), titleArea]
[), {, x, =, (, float, ), titleArea, ., getMaxX, (, ), ;, anchor, =, TextBlockAnchor, ., TOP_RIGHT, ;, }]
[==, HorizontalAlignment, ., RIGHT, ), {, x, =, (, float, ), titleArea, ., getMaxX, (, ), ;, anchor, =, TextBlockAnchor]
[), {, x, =, (, float, ), titleArea, ., getMaxX, (, ), ;, anchor, =, TextBlockAnchor, ., TOP_RIGHT, ;, }]
[., RIGHT, ), {, x, =, (, float, ), titleArea, ., getMaxX, (, ), ;, anchor, =, TextBlockAnchor, ., TOP_RIGHT]
[=, (, float, ), titleArea, ., getMaxX, (, ), ;, anchor, =, TextBlockAnchor, ., TOP_RIGHT, ;, }, else, if, (]
[;, anchor, =, TextBlockAnchor, ., TOP_RIGHT, ;, }, else, if, (, horizontalAlignment, ==, HorizontalAlignment, ., CENTER, ), {, x, =]
[;, anchor, =, TextBlockAnchor, ., TOP_RIGHT, ;, }, else, if, (, horizontalAlignment, ==, HorizontalAlignment, ., CENTER, ), {, x, =]
[., getMaxX, (, ), ;, anchor, =, TextBlockAnchor, ., TOP_RIGHT, ;, }, else, if, (, horizontalAlignment, ==, HorizontalAlignment, ., CENTER]
[=, TextBlockAnchor, ., TOP_RIGHT, ;, }, else, if, (, horizontalAlignment, ==, HorizontalAlignment, ., CENTER, ), {, x, =, (, float]
[;, }, else, if, (, horizontalAlignment, ==, HorizontalAlignment, ., CENTER, ), {, x, =, (, float, ), titleArea, ., getCenterX]
[., TOP_RIGHT, ;, }, else, if, (, horizontalAlignment, ==, HorizontalAlignment, ., CENTER, ), {, x, =, (, float, ), titleArea]
[), {, x, =, (, float, ), titleArea, ., getCenterX, (, ), ;, anchor, =, TextBlockAnchor, ., TOP_CENTER, ;, }]
[==, HorizontalAlignment, ., CENTER, ), {, x, =, (, float, ), titleArea, ., getCenterX, (, ), ;, anchor, =, TextBlockAnchor]
[), {, x, =, (, float, ), titleArea, ., getCenterX, (, ), ;, anchor, =, TextBlockAnchor, ., TOP_CENTER, ;, }]
[., CENTER, ), {, x, =, (, float, ), titleArea, ., getCenterX, (, ), ;, anchor, =, TextBlockAnchor, ., TOP_CENTER]
[=, (, float, ), titleArea, ., getCenterX, (, ), ;, anchor, =, TextBlockAnchor, ., TOP_CENTER, ;, }, float, y, =]
[;, anchor, =, TextBlockAnchor, ., TOP_CENTER, ;, }, float, y, =, 0.0f, ;, RectangleEdge, position, =, getPosition, (, ), ;]
[;, anchor, =, TextBlockAnchor, ., TOP_CENTER, ;, }, float, y, =, 0.0f, ;, RectangleEdge, position, =, getPosition, (, ), ;]
[., getCenterX, (, ), ;, anchor, =, TextBlockAnchor, ., TOP_CENTER, ;, }, float, y, =, 0.0f, ;, RectangleEdge, position, =]
[=, TextBlockAnchor, ., TOP_CENTER, ;, }, float, y, =, 0.0f, ;, RectangleEdge, position, =, getPosition, (, ), ;, if, (]
[;, }, float, y, =, 0.0f, ;, RectangleEdge, position, =, getPosition, (, ), ;, if, (, position, ==, RectangleEdge, .]
[., TOP_CENTER, ;, }, float, y, =, 0.0f, ;, RectangleEdge, position, =, getPosition, (, ), ;, if, (, position, ==]
[;, RectangleEdge, position, =, getPosition, (, ), ;, if, (, position, ==, RectangleEdge, ., TOP, ), {, y, =, (]
[;, if, (, position, ==, RectangleEdge, ., TOP, ), {, y, =, (, float, ), titleArea, ., getY, (, )]
[), {, y, =, (, float, ), titleArea, ., getY, (, ), ;, }, else, if, (, position, ==, RectangleEdge]
[==, RectangleEdge, ., TOP, ), {, y, =, (, float, ), titleArea, ., getY, (, ), ;, }, else, if]
[), {, y, =, (, float, ), titleArea, ., getY, (, ), ;, }, else, if, (, position, ==, RectangleEdge]
[., TOP, ), {, y, =, (, float, ), titleArea, ., getY, (, ), ;, }, else, if, (, position]
[=, (, float, ), titleArea, ., getY, (, ), ;, }, else, if, (, position, ==, RectangleEdge, ., BOTTOM, )]
[;, }, else, if, (, position, ==, RectangleEdge, ., BOTTOM, ), {, y, =, (, float, ), titleArea, ., getMaxY]
[;, }, else, if, (, position, ==, RectangleEdge, ., BOTTOM, ), {, y, =, (, float, ), titleArea, ., getMaxY]
[., getY, (, ), ;, }, else, if, (, position, ==, RectangleEdge, ., BOTTOM, ), {, y, =, (, float]
[), {, y, =, (, float, ), titleArea, ., getMaxY, (, ), ;, if, (, horizontalAlignment, ==, HorizontalAlignment, ., LEFT]
[==, RectangleEdge, ., BOTTOM, ), {, y, =, (, float, ), titleArea, ., getMaxY, (, ), ;, if, (, horizontalAlignment]
[), {, y, =, (, float, ), titleArea, ., getMaxY, (, ), ;, if, (, horizontalAlignment, ==, HorizontalAlignment, ., LEFT]
[., BOTTOM, ), {, y, =, (, float, ), titleArea, ., getMaxY, (, ), ;, if, (, horizontalAlignment, ==, HorizontalAlignment]
[=, (, float, ), titleArea, ., getMaxY, (, ), ;, if, (, horizontalAlignment, ==, HorizontalAlignment, ., LEFT, ), {, anchor]
[;, if, (, horizontalAlignment, ==, HorizontalAlignment, ., LEFT, ), {, anchor, =, TextBlockAnchor, ., BOTTOM_LEFT, ;, }, else, if, (]
[;, if, (, horizontalAlignment, ==, HorizontalAlignment, ., LEFT, ), {, anchor, =, TextBlockAnchor, ., BOTTOM_LEFT, ;, }, else, if, (]
[., getMaxY, (, ), ;, if, (, horizontalAlignment, ==, HorizontalAlignment, ., LEFT, ), {, anchor, =, TextBlockAnchor, ., BOTTOM_LEFT, ;]
[), {, anchor, =, TextBlockAnchor, ., BOTTOM_LEFT, ;, }, else, if, (, horizontalAlignment, ==, HorizontalAlignment, ., CENTER, ), {, anchor]
[==, HorizontalAlignment, ., LEFT, ), {, anchor, =, TextBlockAnchor, ., BOTTOM_LEFT, ;, }, else, if, (, horizontalAlignment, ==, HorizontalAlignment, .]
[), {, anchor, =, TextBlockAnchor, ., BOTTOM_LEFT, ;, }, else, if, (, horizontalAlignment, ==, HorizontalAlignment, ., CENTER, ), {, anchor]
[., LEFT, ), {, anchor, =, TextBlockAnchor, ., BOTTOM_LEFT, ;, }, else, if, (, horizontalAlignment, ==, HorizontalAlignment, ., CENTER, )]
[=, TextBlockAnchor, ., BOTTOM_LEFT, ;, }, else, if, (, horizontalAlignment, ==, HorizontalAlignment, ., CENTER, ), {, anchor, =, TextBlockAnchor, .]
[;, }, else, if, (, horizontalAlignment, ==, HorizontalAlignment, ., CENTER, ), {, anchor, =, TextBlockAnchor, ., BOTTOM_CENTER, ;, }, else]
[., BOTTOM_LEFT, ;, }, else, if, (, horizontalAlignment, ==, HorizontalAlignment, ., CENTER, ), {, anchor, =, TextBlockAnchor, ., BOTTOM_CENTER, ;]
[), {, anchor, =, TextBlockAnchor, ., BOTTOM_CENTER, ;, }, else, if, (, horizontalAlignment, ==, HorizontalAlignment, ., RIGHT, ), {, anchor]
[==, HorizontalAlignment, ., CENTER, ), {, anchor, =, TextBlockAnchor, ., BOTTOM_CENTER, ;, }, else, if, (, horizontalAlignment, ==, HorizontalAlignment, .]
[), {, anchor, =, TextBlockAnchor, ., BOTTOM_CENTER, ;, }, else, if, (, horizontalAlignment, ==, HorizontalAlignment, ., RIGHT, ), {, anchor]
[., CENTER, ), {, anchor, =, TextBlockAnchor, ., BOTTOM_CENTER, ;, }, else, if, (, horizontalAlignment, ==, HorizontalAlignment, ., RIGHT, )]
[=, TextBlockAnchor, ., BOTTOM_CENTER, ;, }, else, if, (, horizontalAlignment, ==, HorizontalAlignment, ., RIGHT, ), {, anchor, =, TextBlockAnchor, .]
[;, }, else, if, (, horizontalAlignment, ==, HorizontalAlignment, ., RIGHT, ), {, anchor, =, TextBlockAnchor, ., BOTTOM_RIGHT, ;, }, }]
[., BOTTOM_CENTER, ;, }, else, if, (, horizontalAlignment, ==, HorizontalAlignment, ., RIGHT, ), {, anchor, =, TextBlockAnchor, ., BOTTOM_RIGHT, ;]
[), {, anchor, =, TextBlockAnchor, ., BOTTOM_RIGHT, ;, }, }, this, ., content, ., draw, (, g2, ,, x, ,]
[==, HorizontalAlignment, ., RIGHT, ), {, anchor, =, TextBlockAnchor, ., BOTTOM_RIGHT, ;, }, }, this, ., content, ., draw, (]
[), {, anchor, =, TextBlockAnchor, ., BOTTOM_RIGHT, ;, }, }, this, ., content, ., draw, (, g2, ,, x, ,]
[., RIGHT, ), {, anchor, =, TextBlockAnchor, ., BOTTOM_RIGHT, ;, }, }, this, ., content, ., draw, (, g2, ,]
[=, TextBlockAnchor, ., BOTTOM_RIGHT, ;, }, }, this, ., content, ., draw, (, g2, ,, x, ,, y, ,, anchor]
[;, }, }, this, ., content, ., draw, (, g2, ,, x, ,, y, ,, anchor, ), ;, }, protected]
[., BOTTOM_RIGHT, ;, }, }, this, ., content, ., draw, (, g2, ,, x, ,, y, ,, anchor, ), ;]
[;, }, protected, void, drawVertical, (, Graphics2D, g2, ,, Rectangle2D, area, ), {, Rectangle2D, titleArea, =, (, Rectangle2D, ), area]
[., draw, (, g2, ,, x, ,, y, ,, anchor, ), ;, }, protected, void, drawVertical, (, Graphics2D, g2, ,]
[., content, ., draw, (, g2, ,, x, ,, y, ,, anchor, ), ;, }, protected, void, drawVertical, (, Graphics2D]
[,, x, ,, y, ,, anchor, ), ;, }, protected, void, drawVertical, (, Graphics2D, g2, ,, Rectangle2D, area, ), {]
[,, y, ,, anchor, ), ;, }, protected, void, drawVertical, (, Graphics2D, g2, ,, Rectangle2D, area, ), {, Rectangle2D, titleArea]
[,, anchor, ), ;, }, protected, void, drawVertical, (, Graphics2D, g2, ,, Rectangle2D, area, ), {, Rectangle2D, titleArea, =, (]
[), ;, }, protected, void, drawVertical, (, Graphics2D, g2, ,, Rectangle2D, area, ), {, Rectangle2D, titleArea, =, (, Rectangle2D, )]
[;, g2, ., setFont, (, this, ., font, ), ;, g2, ., setPaint, (, this, ., paint, ), ;, TextBlockAnchor]
[;, g2, ., setFont, (, this, ., font, ), ;, g2, ., setPaint, (, this, ., paint, ), ;, TextBlockAnchor]
[., clone, (, ), ;, g2, ., setFont, (, this, ., font, ), ;, g2, ., setPaint, (, this, .]
[;, g2, ., setPaint, (, this, ., paint, ), ;, TextBlockAnchor, anchor, =, null, ;, float, y, =, 0.0f, ;]
[., setFont, (, this, ., font, ), ;, g2, ., setPaint, (, this, ., paint, ), ;, TextBlockAnchor, anchor, =]
[), ;, g2, ., setPaint, (, this, ., paint, ), ;, TextBlockAnchor, anchor, =, null, ;, float, y, =, 0.0f]
[., font, ), ;, g2, ., setPaint, (, this, ., paint, ), ;, TextBlockAnchor, anchor, =, null, ;, float, y]
[;, TextBlockAnchor, anchor, =, null, ;, float, y, =, 0.0f, ;, VerticalAlignment, verticalAlignment, =, getVerticalAlignment, (, ), ;, if, (]
[., setPaint, (, this, ., paint, ), ;, TextBlockAnchor, anchor, =, null, ;, float, y, =, 0.0f, ;, VerticalAlignment, verticalAlignment]
[), ;, TextBlockAnchor, anchor, =, null, ;, float, y, =, 0.0f, ;, VerticalAlignment, verticalAlignment, =, getVerticalAlignment, (, ), ;, if]
[., paint, ), ;, TextBlockAnchor, anchor, =, null, ;, float, y, =, 0.0f, ;, VerticalAlignment, verticalAlignment, =, getVerticalAlignment, (, )]
[;, float, y, =, 0.0f, ;, VerticalAlignment, verticalAlignment, =, getVerticalAlignment, (, ), ;, if, (, verticalAlignment, ==, VerticalAlignment, ., TOP]
[;, VerticalAlignment, verticalAlignment, =, getVerticalAlignment, (, ), ;, if, (, verticalAlignment, ==, VerticalAlignment, ., TOP, ), {, y, =, (]
[;, if, (, verticalAlignment, ==, VerticalAlignment, ., TOP, ), {, y, =, (, float, ), titleArea, ., getY, (, )]
[), {, y, =, (, float, ), titleArea, ., getY, (, ), ;, anchor, =, TextBlockAnchor, ., TOP_RIGHT, ;, }]
[==, VerticalAlignment, ., TOP, ), {, y, =, (, float, ), titleArea, ., getY, (, ), ;, anchor, =, TextBlockAnchor]
[), {, y, =, (, float, ), titleArea, ., getY, (, ), ;, anchor, =, TextBlockAnchor, ., TOP_RIGHT, ;, }]
[., TOP, ), {, y, =, (, float, ), titleArea, ., getY, (, ), ;, anchor, =, TextBlockAnchor, ., TOP_RIGHT]
[=, (, float, ), titleArea, ., getY, (, ), ;, anchor, =, TextBlockAnchor, ., TOP_RIGHT, ;, }, else, if, (]
[;, anchor, =, TextBlockAnchor, ., TOP_RIGHT, ;, }, else, if, (, verticalAlignment, ==, VerticalAlignment, ., BOTTOM, ), {, y, =]
[;, anchor, =, TextBlockAnchor, ., TOP_RIGHT, ;, }, else, if, (, verticalAlignment, ==, VerticalAlignment, ., BOTTOM, ), {, y, =]
[., getY, (, ), ;, anchor, =, TextBlockAnchor, ., TOP_RIGHT, ;, }, else, if, (, verticalAlignment, ==, VerticalAlignment, ., BOTTOM]
[=, TextBlockAnchor, ., TOP_RIGHT, ;, }, else, if, (, verticalAlignment, ==, VerticalAlignment, ., BOTTOM, ), {, y, =, (, float]
[;, }, else, if, (, verticalAlignment, ==, VerticalAlignment, ., BOTTOM, ), {, y, =, (, float, ), titleArea, ., getMaxY]
[., TOP_RIGHT, ;, }, else, if, (, verticalAlignment, ==, VerticalAlignment, ., BOTTOM, ), {, y, =, (, float, ), titleArea]
[), {, y, =, (, float, ), titleArea, ., getMaxY, (, ), ;, anchor, =, TextBlockAnchor, ., TOP_LEFT, ;, }]
[==, VerticalAlignment, ., BOTTOM, ), {, y, =, (, float, ), titleArea, ., getMaxY, (, ), ;, anchor, =, TextBlockAnchor]
[), {, y, =, (, float, ), titleArea, ., getMaxY, (, ), ;, anchor, =, TextBlockAnchor, ., TOP_LEFT, ;, }]
[., BOTTOM, ), {, y, =, (, float, ), titleArea, ., getMaxY, (, ), ;, anchor, =, TextBlockAnchor, ., TOP_LEFT]
[=, (, float, ), titleArea, ., getMaxY, (, ), ;, anchor, =, TextBlockAnchor, ., TOP_LEFT, ;, }, else, if, (]
[;, anchor, =, TextBlockAnchor, ., TOP_LEFT, ;, }, else, if, (, verticalAlignment, ==, VerticalAlignment, ., CENTER, ), {, y, =]
[;, anchor, =, TextBlockAnchor, ., TOP_LEFT, ;, }, else, if, (, verticalAlignment, ==, VerticalAlignment, ., CENTER, ), {, y, =]
[., getMaxY, (, ), ;, anchor, =, TextBlockAnchor, ., TOP_LEFT, ;, }, else, if, (, verticalAlignment, ==, VerticalAlignment, ., CENTER]
[=, TextBlockAnchor, ., TOP_LEFT, ;, }, else, if, (, verticalAlignment, ==, VerticalAlignment, ., CENTER, ), {, y, =, (, float]
[;, }, else, if, (, verticalAlignment, ==, VerticalAlignment, ., CENTER, ), {, y, =, (, float, ), titleArea, ., getCenterY]
[., TOP_LEFT, ;, }, else, if, (, verticalAlignment, ==, VerticalAlignment, ., CENTER, ), {, y, =, (, float, ), titleArea]
[), {, y, =, (, float, ), titleArea, ., getCenterY, (, ), ;, anchor, =, TextBlockAnchor, ., TOP_CENTER, ;, }]
[==, VerticalAlignment, ., CENTER, ), {, y, =, (, float, ), titleArea, ., getCenterY, (, ), ;, anchor, =, TextBlockAnchor]
[), {, y, =, (, float, ), titleArea, ., getCenterY, (, ), ;, anchor, =, TextBlockAnchor, ., TOP_CENTER, ;, }]
[., CENTER, ), {, y, =, (, float, ), titleArea, ., getCenterY, (, ), ;, anchor, =, TextBlockAnchor, ., TOP_CENTER]
[=, (, float, ), titleArea, ., getCenterY, (, ), ;, anchor, =, TextBlockAnchor, ., TOP_CENTER, ;, }, float, x, =]
[;, anchor, =, TextBlockAnchor, ., TOP_CENTER, ;, }, float, x, =, 0.0f, ;, RectangleEdge, position, =, getPosition, (, ), ;]
[;, anchor, =, TextBlockAnchor, ., TOP_CENTER, ;, }, float, x, =, 0.0f, ;, RectangleEdge, position, =, getPosition, (, ), ;]
[., getCenterY, (, ), ;, anchor, =, TextBlockAnchor, ., TOP_CENTER, ;, }, float, x, =, 0.0f, ;, RectangleEdge, position, =]
[=, TextBlockAnchor, ., TOP_CENTER, ;, }, float, x, =, 0.0f, ;, RectangleEdge, position, =, getPosition, (, ), ;, if, (]
[;, }, float, x, =, 0.0f, ;, RectangleEdge, position, =, getPosition, (, ), ;, if, (, position, ==, RectangleEdge, .]
[., TOP_CENTER, ;, }, float, x, =, 0.0f, ;, RectangleEdge, position, =, getPosition, (, ), ;, if, (, position, ==]
[;, RectangleEdge, position, =, getPosition, (, ), ;, if, (, position, ==, RectangleEdge, ., LEFT, ), {, x, =, (]
[;, if, (, position, ==, RectangleEdge, ., LEFT, ), {, x, =, (, float, ), titleArea, ., getX, (, )]
[), {, x, =, (, float, ), titleArea, ., getX, (, ), ;, }, else, if, (, position, ==, RectangleEdge]
[==, RectangleEdge, ., LEFT, ), {, x, =, (, float, ), titleArea, ., getX, (, ), ;, }, else, if]
[), {, x, =, (, float, ), titleArea, ., getX, (, ), ;, }, else, if, (, position, ==, RectangleEdge]
[., LEFT, ), {, x, =, (, float, ), titleArea, ., getX, (, ), ;, }, else, if, (, position]
[=, (, float, ), titleArea, ., getX, (, ), ;, }, else, if, (, position, ==, RectangleEdge, ., RIGHT, )]
[;, }, else, if, (, position, ==, RectangleEdge, ., RIGHT, ), {, x, =, (, float, ), titleArea, ., getMaxX]
[;, }, else, if, (, position, ==, RectangleEdge, ., RIGHT, ), {, x, =, (, float, ), titleArea, ., getMaxX]
[., getX, (, ), ;, }, else, if, (, position, ==, RectangleEdge, ., RIGHT, ), {, x, =, (, float]
[), {, x, =, (, float, ), titleArea, ., getMaxX, (, ), ;, if, (, verticalAlignment, ==, VerticalAlignment, ., TOP]
[==, RectangleEdge, ., RIGHT, ), {, x, =, (, float, ), titleArea, ., getMaxX, (, ), ;, if, (, verticalAlignment]
[), {, x, =, (, float, ), titleArea, ., getMaxX, (, ), ;, if, (, verticalAlignment, ==, VerticalAlignment, ., TOP]
[., RIGHT, ), {, x, =, (, float, ), titleArea, ., getMaxX, (, ), ;, if, (, verticalAlignment, ==, VerticalAlignment]
[=, (, float, ), titleArea, ., getMaxX, (, ), ;, if, (, verticalAlignment, ==, VerticalAlignment, ., TOP, ), {, anchor]
[;, if, (, verticalAlignment, ==, VerticalAlignment, ., TOP, ), {, anchor, =, TextBlockAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (]
[;, if, (, verticalAlignment, ==, VerticalAlignment, ., TOP, ), {, anchor, =, TextBlockAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (]
[., getMaxX, (, ), ;, if, (, verticalAlignment, ==, VerticalAlignment, ., TOP, ), {, anchor, =, TextBlockAnchor, ., BOTTOM_RIGHT, ;]
[), {, anchor, =, TextBlockAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (, verticalAlignment, ==, VerticalAlignment, ., CENTER, ), {, anchor]
[==, VerticalAlignment, ., TOP, ), {, anchor, =, TextBlockAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (, verticalAlignment, ==, VerticalAlignment, .]
[), {, anchor, =, TextBlockAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (, verticalAlignment, ==, VerticalAlignment, ., CENTER, ), {, anchor]
[., TOP, ), {, anchor, =, TextBlockAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (, verticalAlignment, ==, VerticalAlignment, ., CENTER, )]
[=, TextBlockAnchor, ., BOTTOM_RIGHT, ;, }, else, if, (, verticalAlignment, ==, VerticalAlignment, ., CENTER, ), {, anchor, =, TextBlockAnchor, .]
[;, }, else, if, (, verticalAlignment, ==, VerticalAlignment, ., CENTER, ), {, anchor, =, TextBlockAnchor, ., BOTTOM_CENTER, ;, }, else]
[., BOTTOM_RIGHT, ;, }, else, if, (, verticalAlignment, ==, VerticalAlignment, ., CENTER, ), {, anchor, =, TextBlockAnchor, ., BOTTOM_CENTER, ;]
[), {, anchor, =, TextBlockAnchor, ., BOTTOM_CENTER, ;, }, else, if, (, verticalAlignment, ==, VerticalAlignment, ., BOTTOM, ), {, anchor]
[==, VerticalAlignment, ., CENTER, ), {, anchor, =, TextBlockAnchor, ., BOTTOM_CENTER, ;, }, else, if, (, verticalAlignment, ==, VerticalAlignment, .]
[), {, anchor, =, TextBlockAnchor, ., BOTTOM_CENTER, ;, }, else, if, (, verticalAlignment, ==, VerticalAlignment, ., BOTTOM, ), {, anchor]
[., CENTER, ), {, anchor, =, TextBlockAnchor, ., BOTTOM_CENTER, ;, }, else, if, (, verticalAlignment, ==, VerticalAlignment, ., BOTTOM, )]
[=, TextBlockAnchor, ., BOTTOM_CENTER, ;, }, else, if, (, verticalAlignment, ==, VerticalAlignment, ., BOTTOM, ), {, anchor, =, TextBlockAnchor, .]
[;, }, else, if, (, verticalAlignment, ==, VerticalAlignment, ., BOTTOM, ), {, anchor, =, TextBlockAnchor, ., BOTTOM_LEFT, ;, }, }]
[., BOTTOM_CENTER, ;, }, else, if, (, verticalAlignment, ==, VerticalAlignment, ., BOTTOM, ), {, anchor, =, TextBlockAnchor, ., BOTTOM_LEFT, ;]
[), {, anchor, =, TextBlockAnchor, ., BOTTOM_LEFT, ;, }, }, this, ., content, ., draw, (, g2, ,, x, ,]
[==, VerticalAlignment, ., BOTTOM, ), {, anchor, =, TextBlockAnchor, ., BOTTOM_LEFT, ;, }, }, this, ., content, ., draw, (]
[), {, anchor, =, TextBlockAnchor, ., BOTTOM_LEFT, ;, }, }, this, ., content, ., draw, (, g2, ,, x, ,]
[., BOTTOM, ), {, anchor, =, TextBlockAnchor, ., BOTTOM_LEFT, ;, }, }, this, ., content, ., draw, (, g2, ,]
[=, TextBlockAnchor, ., BOTTOM_LEFT, ;, }, }, this, ., content, ., draw, (, g2, ,, x, ,, y, ,, anchor]
[;, }, }, this, ., content, ., draw, (, g2, ,, x, ,, y, ,, anchor, ,, x, ,, y]
[., BOTTOM_LEFT, ;, }, }, this, ., content, ., draw, (, g2, ,, x, ,, y, ,, anchor, ,, x]
[;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;]
[., draw, (, g2, ,, x, ,, y, ,, anchor, ,, x, ,, y, ,, -, Math, ., PI, /]
[., content, ., draw, (, g2, ,, x, ,, y, ,, anchor, ,, x, ,, y, ,, -, Math, .]
[,, x, ,, y, ,, anchor, ,, x, ,, y, ,, -, Math, ., PI, /, 2.0, ), ;, }]
[,, y, ,, anchor, ,, x, ,, y, ,, -, Math, ., PI, /, 2.0, ), ;, }, public, boolean]
[,, anchor, ,, x, ,, y, ,, -, Math, ., PI, /, 2.0, ), ;, }, public, boolean, equals, (]
[,, x, ,, y, ,, -, Math, ., PI, /, 2.0, ), ;, }, public, boolean, equals, (, Object, obj]
[,, y, ,, -, Math, ., PI, /, 2.0, ), ;, }, public, boolean, equals, (, Object, obj, ), {]
[,, -, Math, ., PI, /, 2.0, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true]
[/, 2.0, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {]
[/, 2.0, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {]
[., PI, /, 2.0, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this]
[), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, TextTitle, ), ), {, return, false, ;, }]
[==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, TextTitle, ), ), {, return, false]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, TextTitle, ), ), {, return, false, ;, }]
[;, }, if, (, !, (, obj, instanceof, TextTitle, ), ), {, return, false, ;, }, TextTitle, that, =, (]
[), {, return, false, ;, }, TextTitle, that, =, (, TextTitle, ), obj, ;, if, (, !, ObjectUtilities, ., equal]
[), {, return, false, ;, }, TextTitle, that, =, (, TextTitle, ), obj, ;, if, (, !, ObjectUtilities, ., equal]
[), ), {, return, false, ;, }, TextTitle, that, =, (, TextTitle, ), obj, ;, if, (, !, ObjectUtilities, .]
[instanceof, TextTitle, ), ), {, return, false, ;, }, TextTitle, that, =, (, TextTitle, ), obj, ;, if, (, !]
[;, }, TextTitle, that, =, (, TextTitle, ), obj, ;, if, (, !, ObjectUtilities, ., equal, (, this, ., text]
[;, if, (, !, ObjectUtilities, ., equal, (, this, ., text, ,, that, ., text, ), ), {, return, false]
[;, if, (, !, ObjectUtilities, ., equal, (, this, ., text, ,, that, ., text, ), ), {, return, false]
[), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., font, ,, that, ., font]
[), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., font, ,, that, ., font]
[., equal, (, this, ., text, ,, that, ., text, ), ), {, return, false, ;, }, if, (, !]
[,, that, ., text, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, .]
[., text, ,, that, ., text, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (]
[), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., font, ,, that, .]
[., text, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., font, ,]
[;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., font, ,, that, ., font, ), ), {, return]
[), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., paint, ,, that, ., paint]
[), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., paint, ,, that, ., paint]
[., equal, (, this, ., font, ,, that, ., font, ), ), {, return, false, ;, }, if, (, !]
[,, that, ., font, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, .]
[., font, ,, that, ., font, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (]
[), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., paint, ,, that, .]
[., font, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., paint, ,]
[;, }, if, (, !, PaintUtilities, ., equal, (, this, ., paint, ,, that, ., paint, ), ), {, return]
[), {, return, false, ;, }, if, (, this, ., textAlignment, !=, that, ., textAlignment, ), {, return, false, ;]
[), {, return, false, ;, }, if, (, this, ., textAlignment, !=, that, ., textAlignment, ), {, return, false, ;]
[., equal, (, this, ., paint, ,, that, ., paint, ), ), {, return, false, ;, }, if, (, this]
[,, that, ., paint, ), ), {, return, false, ;, }, if, (, this, ., textAlignment, !=, that, ., textAlignment]
[., paint, ,, that, ., paint, ), ), {, return, false, ;, }, if, (, this, ., textAlignment, !=, that]
[), ), {, return, false, ;, }, if, (, this, ., textAlignment, !=, that, ., textAlignment, ), {, return, false]
[., paint, ), ), {, return, false, ;, }, if, (, this, ., textAlignment, !=, that, ., textAlignment, ), {]
[;, }, if, (, this, ., textAlignment, !=, that, ., textAlignment, ), {, return, false, ;, }, if, (, !]
[), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., backgroundPaint, ,, that, ., backgroundPaint]
[!=, that, ., textAlignment, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., backgroundPaint]
[., textAlignment, !=, that, ., textAlignment, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this]
[), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., backgroundPaint, ,, that, ., backgroundPaint]
[., textAlignment, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., backgroundPaint, ,, that]
[;, }, if, (, !, PaintUtilities, ., equal, (, this, ., backgroundPaint, ,, that, ., backgroundPaint, ), ), {, return]
[), {, return, false, ;, }, if, (, this, ., maximumLinesToDisplay, !=, that, ., maximumLinesToDisplay, ), {, return, false, ;]
[), {, return, false, ;, }, if, (, this, ., maximumLinesToDisplay, !=, that, ., maximumLinesToDisplay, ), {, return, false, ;]
[., equal, (, this, ., backgroundPaint, ,, that, ., backgroundPaint, ), ), {, return, false, ;, }, if, (, this]
[,, that, ., backgroundPaint, ), ), {, return, false, ;, }, if, (, this, ., maximumLinesToDisplay, !=, that, ., maximumLinesToDisplay]
[., backgroundPaint, ,, that, ., backgroundPaint, ), ), {, return, false, ;, }, if, (, this, ., maximumLinesToDisplay, !=, that]
[), ), {, return, false, ;, }, if, (, this, ., maximumLinesToDisplay, !=, that, ., maximumLinesToDisplay, ), {, return, false]
[., backgroundPaint, ), ), {, return, false, ;, }, if, (, this, ., maximumLinesToDisplay, !=, that, ., maximumLinesToDisplay, ), {]
[;, }, if, (, this, ., maximumLinesToDisplay, !=, that, ., maximumLinesToDisplay, ), {, return, false, ;, }, if, (, this]
[), {, return, false, ;, }, if, (, this, ., expandToFitSpace, !=, that, ., expandToFitSpace, ), {, return, false, ;]
[!=, that, ., maximumLinesToDisplay, ), {, return, false, ;, }, if, (, this, ., expandToFitSpace, !=, that, ., expandToFitSpace, )]
[., maximumLinesToDisplay, !=, that, ., maximumLinesToDisplay, ), {, return, false, ;, }, if, (, this, ., expandToFitSpace, !=, that, .]
[), {, return, false, ;, }, if, (, this, ., expandToFitSpace, !=, that, ., expandToFitSpace, ), {, return, false, ;]
[., maximumLinesToDisplay, ), {, return, false, ;, }, if, (, this, ., expandToFitSpace, !=, that, ., expandToFitSpace, ), {, return]
[;, }, if, (, this, ., expandToFitSpace, !=, that, ., expandToFitSpace, ), {, return, false, ;, }, if, (, !]
[), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., toolTipText, ,, that, ., toolTipText]
[!=, that, ., expandToFitSpace, ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., toolTipText]
[., expandToFitSpace, !=, that, ., expandToFitSpace, ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this]
[), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., toolTipText, ,, that, ., toolTipText]
[., expandToFitSpace, ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., toolTipText, ,, that]
[;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., toolTipText, ,, that, ., toolTipText, ), ), {, return]
[), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., urlText, ,, that, ., urlText]
[), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., urlText, ,, that, ., urlText]
[., equal, (, this, ., toolTipText, ,, that, ., toolTipText, ), ), {, return, false, ;, }, if, (, !]
[,, that, ., toolTipText, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, .]
[., toolTipText, ,, that, ., toolTipText, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (]
[), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., urlText, ,, that, .]
[., toolTipText, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., urlText, ,]
[;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., urlText, ,, that, ., urlText, ), ), {, return]
[), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, public, int, hashCode, (, )]
[), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, public, int, hashCode, (, )]
[., equal, (, this, ., urlText, ,, that, ., urlText, ), ), {, return, false, ;, }, return, super, .]
[,, that, ., urlText, ), ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }]
[., urlText, ,, that, ., urlText, ), ), {, return, false, ;, }, return, super, ., equals, (, obj, )]
[), ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, public, int, hashCode, (]
[., urlText, ), ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, public, int]
[;, }, return, super, ., equals, (, obj, ), ;, }, public, int, hashCode, (, ), {, int, result, =]
[;, }, public, int, hashCode, (, ), {, int, result, =, super, ., hashCode, (, ), ;, result, =, 29]
[., equals, (, obj, ), ;, }, public, int, hashCode, (, ), {, int, result, =, super, ., hashCode, (]
[), ;, }, public, int, hashCode, (, ), {, int, result, =, super, ., hashCode, (, ), ;, result, =]
[;, result, =, 29, *, result, +, (, this, ., text, !=, null, ?, this, ., text, ., hashCode, (]
[., hashCode, (, ), ;, result, =, 29, *, result, +, (, this, ., text, !=, null, ?, this, .]
[=, 29, *, result, +, (, this, ., text, !=, null, ?, this, ., text, ., hashCode, (, ), :]
[;, result, =, 29, *, result, +, (, this, ., font, !=, null, ?, this, ., font, ., hashCode, (]
[+, (, this, ., text, !=, null, ?, this, ., text, ., hashCode, (, ), :, 0, ), ;, result]
[*, result, +, (, this, ., text, !=, null, ?, this, ., text, ., hashCode, (, ), :, 0, )]
[+, (, this, ., text, !=, null, ?, this, ., text, ., hashCode, (, ), :, 0, ), ;, result]
[;, result, =, 29, *, result, +, (, this, ., font, !=, null, ?, this, ., font, ., hashCode, (]
[), ;, result, =, 29, *, result, +, (, this, ., font, !=, null, ?, this, ., font, ., hashCode]
[?, this, ., text, ., hashCode, (, ), :, 0, ), ;, result, =, 29, *, result, +, (, this]
[!=, null, ?, this, ., text, ., hashCode, (, ), :, 0, ), ;, result, =, 29, *, result, +]
[., text, !=, null, ?, this, ., text, ., hashCode, (, ), :, 0, ), ;, result, =, 29, *]
[?, this, ., text, ., hashCode, (, ), :, 0, ), ;, result, =, 29, *, result, +, (, this]
[:, 0, ), ;, result, =, 29, *, result, +, (, this, ., font, !=, null, ?, this, ., font]
[., hashCode, (, ), :, 0, ), ;, result, =, 29, *, result, +, (, this, ., font, !=, null]
[., text, ., hashCode, (, ), :, 0, ), ;, result, =, 29, *, result, +, (, this, ., font]
[), ;, result, =, 29, *, result, +, (, this, ., font, !=, null, ?, this, ., font, ., hashCode]
[=, 29, *, result, +, (, this, ., font, !=, null, ?, this, ., font, ., hashCode, (, ), :]
[;, result, =, 29, *, result, +, (, this, ., paint, !=, null, ?, this, ., paint, ., hashCode, (]
[+, (, this, ., font, !=, null, ?, this, ., font, ., hashCode, (, ), :, 0, ), ;, result]
[*, result, +, (, this, ., font, !=, null, ?, this, ., font, ., hashCode, (, ), :, 0, )]
[+, (, this, ., font, !=, null, ?, this, ., font, ., hashCode, (, ), :, 0, ), ;, result]
[;, result, =, 29, *, result, +, (, this, ., paint, !=, null, ?, this, ., paint, ., hashCode, (]
[), ;, result, =, 29, *, result, +, (, this, ., paint, !=, null, ?, this, ., paint, ., hashCode]
[?, this, ., font, ., hashCode, (, ), :, 0, ), ;, result, =, 29, *, result, +, (, this]
[!=, null, ?, this, ., font, ., hashCode, (, ), :, 0, ), ;, result, =, 29, *, result, +]
[., font, !=, null, ?, this, ., font, ., hashCode, (, ), :, 0, ), ;, result, =, 29, *]
[?, this, ., font, ., hashCode, (, ), :, 0, ), ;, result, =, 29, *, result, +, (, this]
[:, 0, ), ;, result, =, 29, *, result, +, (, this, ., paint, !=, null, ?, this, ., paint]
[., hashCode, (, ), :, 0, ), ;, result, =, 29, *, result, +, (, this, ., paint, !=, null]
[., font, ., hashCode, (, ), :, 0, ), ;, result, =, 29, *, result, +, (, this, ., paint]
[), ;, result, =, 29, *, result, +, (, this, ., paint, !=, null, ?, this, ., paint, ., hashCode]
[=, 29, *, result, +, (, this, ., paint, !=, null, ?, this, ., paint, ., hashCode, (, ), :]
[;, result, =, 29, *, result, +, (, this, ., backgroundPaint, !=, null, ?, this, ., backgroundPaint, ., hashCode, (]
[+, (, this, ., paint, !=, null, ?, this, ., paint, ., hashCode, (, ), :, 0, ), ;, result]
[*, result, +, (, this, ., paint, !=, null, ?, this, ., paint, ., hashCode, (, ), :, 0, )]
[+, (, this, ., paint, !=, null, ?, this, ., paint, ., hashCode, (, ), :, 0, ), ;, result]
[;, result, =, 29, *, result, +, (, this, ., backgroundPaint, !=, null, ?, this, ., backgroundPaint, ., hashCode, (]
[), ;, result, =, 29, *, result, +, (, this, ., backgroundPaint, !=, null, ?, this, ., backgroundPaint, ., hashCode]
[?, this, ., paint, ., hashCode, (, ), :, 0, ), ;, result, =, 29, *, result, +, (, this]
[!=, null, ?, this, ., paint, ., hashCode, (, ), :, 0, ), ;, result, =, 29, *, result, +]
[., paint, !=, null, ?, this, ., paint, ., hashCode, (, ), :, 0, ), ;, result, =, 29, *]
[?, this, ., paint, ., hashCode, (, ), :, 0, ), ;, result, =, 29, *, result, +, (, this]
[:, 0, ), ;, result, =, 29, *, result, +, (, this, ., backgroundPaint, !=, null, ?, this, ., backgroundPaint]
[., hashCode, (, ), :, 0, ), ;, result, =, 29, *, result, +, (, this, ., backgroundPaint, !=, null]
[., paint, ., hashCode, (, ), :, 0, ), ;, result, =, 29, *, result, +, (, this, ., backgroundPaint]
[), ;, result, =, 29, *, result, +, (, this, ., backgroundPaint, !=, null, ?, this, ., backgroundPaint, ., hashCode]
[=, 29, *, result, +, (, this, ., backgroundPaint, !=, null, ?, this, ., backgroundPaint, ., hashCode, (, ), :]
[;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (, ), ;]
[+, (, this, ., backgroundPaint, !=, null, ?, this, ., backgroundPaint, ., hashCode, (, ), :, 0, ), ;, return]
[*, result, +, (, this, ., backgroundPaint, !=, null, ?, this, ., backgroundPaint, ., hashCode, (, ), :, 0, )]
[+, (, this, ., backgroundPaint, !=, null, ?, this, ., backgroundPaint, ., hashCode, (, ), :, 0, ), ;, return]
[;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (, ), ;]
[), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (, )]
[?, this, ., backgroundPaint, ., hashCode, (, ), :, 0, ), ;, return, result, ;, }, public, Object, clone, (]
[!=, null, ?, this, ., backgroundPaint, ., hashCode, (, ), :, 0, ), ;, return, result, ;, }, public, Object]
[., backgroundPaint, !=, null, ?, this, ., backgroundPaint, ., hashCode, (, ), :, 0, ), ;, return, result, ;, }]
[?, this, ., backgroundPaint, ., hashCode, (, ), :, 0, ), ;, return, result, ;, }, public, Object, clone, (]
[:, 0, ), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone]
[., hashCode, (, ), :, 0, ), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {]
[., backgroundPaint, ., hashCode, (, ), :, 0, ), ;, return, result, ;, }, public, Object, clone, (, ), throws]
[), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (, )]
[;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (, ), ;, }, private, void]
[;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, .]
[., clone, (, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (]
[;, SerialUtilities, ., writePaint, (, this, ., paint, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., backgroundPaint, ,]
[., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (, this, ., paint, ,, stream, ), ;, SerialUtilities, ., writePaint, (]
[;, SerialUtilities, ., writePaint, (, this, ., backgroundPaint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, )]
[., writePaint, (, this, ., paint, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., backgroundPaint, ,, stream, )]
[,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., backgroundPaint, ,, stream, ), ;, }, private, void, readObject, (]
[., paint, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., backgroundPaint, ,, stream, ), ;, }, private, void]
[), ;, SerialUtilities, ., writePaint, (, this, ., backgroundPaint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream]
[;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;]
[., writePaint, (, this, ., backgroundPaint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException]
[,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject]
[., backgroundPaint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream]
[), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, )]
[;, this, ., paint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., backgroundPaint, =, SerialUtilities, ., readPaint, (]
[., defaultReadObject, (, ), ;, this, ., paint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., backgroundPaint, =]
[=, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., backgroundPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, }]
[., paint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., backgroundPaint, =, SerialUtilities, ., readPaint, (, stream, )]
[;, this, ., backgroundPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, }, }]
[., readPaint, (, stream, ), ;, this, ., backgroundPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, }, }]
[), ;, this, ., backgroundPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, }, }]
[=, SerialUtilities, ., readPaint, (, stream, ), ;, }, }]
[., backgroundPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, }, }]
[;, }, }]
[., readPaint, (, stream, ), ;, }, }]
[), ;, }, }]
