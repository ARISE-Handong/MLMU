[;, static, final, DiagnosticType, DEPRECATED_NAME_REASON, =, DiagnosticType, ., disabled, (, "JSC_DEPRECATED_VAR_REASON", ,, "Variable {0} has been deprecated: {1}", ), ;, static, final, DiagnosticType, DEPRECATED_PROP, =]
[., disabled, (, "JSC_DEPRECATED_VAR", ,, "Variable {0} has been deprecated.", ), ;, static, final, DiagnosticType, DEPRECATED_NAME_REASON, =, DiagnosticType, ., disabled, (, "JSC_DEPRECATED_VAR_REASON", ,, "Variable {0} has been deprecated: {1}"]
[,, "Variable {0} has been deprecated.", ), ;, static, final, DiagnosticType, DEPRECATED_NAME_REASON, =, DiagnosticType, ., disabled, (, "JSC_DEPRECATED_VAR_REASON", ,, "Variable {0} has been deprecated: {1}", ), ;, static, final]
[), ;, static, final, DiagnosticType, DEPRECATED_NAME_REASON, =, DiagnosticType, ., disabled, (, "JSC_DEPRECATED_VAR_REASON", ,, "Variable {0} has been deprecated: {1}", ), ;, static, final, DiagnosticType, DEPRECATED_PROP]
[;, static, final, DiagnosticType, DEPRECATED_PROP, =, DiagnosticType, ., disabled, (, "JSC_DEPRECATED_PROP", ,, "Property {0} of type {1} has been deprecated.", ), ;, static, final, DiagnosticType, DEPRECATED_PROP_REASON, =]
[., disabled, (, "JSC_DEPRECATED_VAR_REASON", ,, "Variable {0} has been deprecated: {1}", ), ;, static, final, DiagnosticType, DEPRECATED_PROP, =, DiagnosticType, ., disabled, (, "JSC_DEPRECATED_PROP", ,, "Property {0} of type {1} has been deprecated."]
[,, "Variable {0} has been deprecated: {1}", ), ;, static, final, DiagnosticType, DEPRECATED_PROP, =, DiagnosticType, ., disabled, (, "JSC_DEPRECATED_PROP", ,, "Property {0} of type {1} has been deprecated.", ), ;, static, final]
[), ;, static, final, DiagnosticType, DEPRECATED_PROP, =, DiagnosticType, ., disabled, (, "JSC_DEPRECATED_PROP", ,, "Property {0} of type {1} has been deprecated.", ), ;, static, final, DiagnosticType, DEPRECATED_PROP_REASON]
[;, static, final, DiagnosticType, DEPRECATED_PROP_REASON, =, DiagnosticType, ., disabled, (, "JSC_DEPRECATED_PROP_REASON", ,, "Property {0} of type {1} has been deprecated: {2}", ), ;, static, final, DiagnosticType, DEPRECATED_CLASS, =]
[., disabled, (, "JSC_DEPRECATED_PROP", ,, "Property {0} of type {1} has been deprecated.", ), ;, static, final, DiagnosticType, DEPRECATED_PROP_REASON, =, DiagnosticType, ., disabled, (, "JSC_DEPRECATED_PROP_REASON", ,, "Property {0} of type {1} has been deprecated: {2}"]
[,, "Property {0} of type {1} has been deprecated.", ), ;, static, final, DiagnosticType, DEPRECATED_PROP_REASON, =, DiagnosticType, ., disabled, (, "JSC_DEPRECATED_PROP_REASON", ,, "Property {0} of type {1} has been deprecated: {2}", ), ;, static, final]
[), ;, static, final, DiagnosticType, DEPRECATED_PROP_REASON, =, DiagnosticType, ., disabled, (, "JSC_DEPRECATED_PROP_REASON", ,, "Property {0} of type {1} has been deprecated: {2}", ), ;, static, final, DiagnosticType, DEPRECATED_CLASS]
[;, static, final, DiagnosticType, DEPRECATED_CLASS, =, DiagnosticType, ., disabled, (, "JSC_DEPRECATED_CLASS", ,, "Class {0} has been deprecated.", ), ;, static, final, DiagnosticType, DEPRECATED_CLASS_REASON, =]
[., disabled, (, "JSC_DEPRECATED_PROP_REASON", ,, "Property {0} of type {1} has been deprecated: {2}", ), ;, static, final, DiagnosticType, DEPRECATED_CLASS, =, DiagnosticType, ., disabled, (, "JSC_DEPRECATED_CLASS", ,, "Class {0} has been deprecated."]
[,, "Property {0} of type {1} has been deprecated: {2}", ), ;, static, final, DiagnosticType, DEPRECATED_CLASS, =, DiagnosticType, ., disabled, (, "JSC_DEPRECATED_CLASS", ,, "Class {0} has been deprecated.", ), ;, static, final]
[), ;, static, final, DiagnosticType, DEPRECATED_CLASS, =, DiagnosticType, ., disabled, (, "JSC_DEPRECATED_CLASS", ,, "Class {0} has been deprecated.", ), ;, static, final, DiagnosticType, DEPRECATED_CLASS_REASON]
[;, static, final, DiagnosticType, DEPRECATED_CLASS_REASON, =, DiagnosticType, ., disabled, (, "JSC_DEPRECATED_CLASS_REASON", ,, "Class {0} has been deprecated: {1}", ), ;, static, final, DiagnosticType, BAD_PRIVATE_GLOBAL_ACCESS, =]
[., disabled, (, "JSC_DEPRECATED_CLASS", ,, "Class {0} has been deprecated.", ), ;, static, final, DiagnosticType, DEPRECATED_CLASS_REASON, =, DiagnosticType, ., disabled, (, "JSC_DEPRECATED_CLASS_REASON", ,, "Class {0} has been deprecated: {1}"]
[,, "Class {0} has been deprecated.", ), ;, static, final, DiagnosticType, DEPRECATED_CLASS_REASON, =, DiagnosticType, ., disabled, (, "JSC_DEPRECATED_CLASS_REASON", ,, "Class {0} has been deprecated: {1}", ), ;, static, final]
[), ;, static, final, DiagnosticType, DEPRECATED_CLASS_REASON, =, DiagnosticType, ., disabled, (, "JSC_DEPRECATED_CLASS_REASON", ,, "Class {0} has been deprecated: {1}", ), ;, static, final, DiagnosticType, BAD_PRIVATE_GLOBAL_ACCESS]
[;, static, final, DiagnosticType, BAD_PRIVATE_GLOBAL_ACCESS, =, DiagnosticType, ., disabled, (, "JSC_BAD_PRIVATE_GLOBAL_ACCESS", ,, "Access to private variable {0} not allowed outside file {1}.", ), ;, static, final, DiagnosticType, BAD_PRIVATE_PROPERTY_ACCESS, =]
[., disabled, (, "JSC_DEPRECATED_CLASS_REASON", ,, "Class {0} has been deprecated: {1}", ), ;, static, final, DiagnosticType, BAD_PRIVATE_GLOBAL_ACCESS, =, DiagnosticType, ., disabled, (, "JSC_BAD_PRIVATE_GLOBAL_ACCESS", ,, "Access to private variable {0} not allowed outside file {1}."]
[,, "Class {0} has been deprecated: {1}", ), ;, static, final, DiagnosticType, BAD_PRIVATE_GLOBAL_ACCESS, =, DiagnosticType, ., disabled, (, "JSC_BAD_PRIVATE_GLOBAL_ACCESS", ,, "Access to private variable {0} not allowed outside file {1}.", ), ;, static, final]
[), ;, static, final, DiagnosticType, BAD_PRIVATE_GLOBAL_ACCESS, =, DiagnosticType, ., disabled, (, "JSC_BAD_PRIVATE_GLOBAL_ACCESS", ,, "Access to private variable {0} not allowed outside file {1}.", ), ;, static, final, DiagnosticType, BAD_PRIVATE_PROPERTY_ACCESS]
[;, static, final, DiagnosticType, BAD_PRIVATE_PROPERTY_ACCESS, =, DiagnosticType, ., disabled, (, "JSC_BAD_PRIVATE_PROPERTY_ACCESS", ,, "Access to private property {0} of {1} not allowed here.", ), ;, static, final, DiagnosticType, BAD_PROTECTED_PROPERTY_ACCESS, =]
[., disabled, (, "JSC_BAD_PRIVATE_GLOBAL_ACCESS", ,, "Access to private variable {0} not allowed outside file {1}.", ), ;, static, final, DiagnosticType, BAD_PRIVATE_PROPERTY_ACCESS, =, DiagnosticType, ., disabled, (, "JSC_BAD_PRIVATE_PROPERTY_ACCESS", ,, "Access to private property {0} of {1} not allowed here."]
[,, "Access to private variable {0} not allowed outside file {1}.", ), ;, static, final, DiagnosticType, BAD_PRIVATE_PROPERTY_ACCESS, =, DiagnosticType, ., disabled, (, "JSC_BAD_PRIVATE_PROPERTY_ACCESS", ,, "Access to private property {0} of {1} not allowed here.", ), ;, static, final]
[), ;, static, final, DiagnosticType, BAD_PRIVATE_PROPERTY_ACCESS, =, DiagnosticType, ., disabled, (, "JSC_BAD_PRIVATE_PROPERTY_ACCESS", ,, "Access to private property {0} of {1} not allowed here.", ), ;, static, final, DiagnosticType, BAD_PROTECTED_PROPERTY_ACCESS]
[;, static, final, DiagnosticType, BAD_PROTECTED_PROPERTY_ACCESS, =, DiagnosticType, ., disabled, (, "JSC_BAD_PROTECTED_PROPERTY_ACCESS", ,, "Access to protected property {0} of {1} not allowed here.", ), ;, static, final, DiagnosticType, PRIVATE_OVERRIDE, =]
[., disabled, (, "JSC_BAD_PRIVATE_PROPERTY_ACCESS", ,, "Access to private property {0} of {1} not allowed here.", ), ;, static, final, DiagnosticType, BAD_PROTECTED_PROPERTY_ACCESS, =, DiagnosticType, ., disabled, (, "JSC_BAD_PROTECTED_PROPERTY_ACCESS", ,, "Access to protected property {0} of {1} not allowed here."]
[,, "Access to private property {0} of {1} not allowed here.", ), ;, static, final, DiagnosticType, BAD_PROTECTED_PROPERTY_ACCESS, =, DiagnosticType, ., disabled, (, "JSC_BAD_PROTECTED_PROPERTY_ACCESS", ,, "Access to protected property {0} of {1} not allowed here.", ), ;, static, final]
[), ;, static, final, DiagnosticType, BAD_PROTECTED_PROPERTY_ACCESS, =, DiagnosticType, ., disabled, (, "JSC_BAD_PROTECTED_PROPERTY_ACCESS", ,, "Access to protected property {0} of {1} not allowed here.", ), ;, static, final, DiagnosticType, PRIVATE_OVERRIDE]
[;, static, final, DiagnosticType, PRIVATE_OVERRIDE, =, DiagnosticType, ., disabled, (, "JSC_PRIVATE_OVERRIDE", ,, "Overriding private property of {0}.", ), ;, static, final, DiagnosticType, EXTEND_FINAL_CLASS, =]
[., disabled, (, "JSC_BAD_PROTECTED_PROPERTY_ACCESS", ,, "Access to protected property {0} of {1} not allowed here.", ), ;, static, final, DiagnosticType, PRIVATE_OVERRIDE, =, DiagnosticType, ., disabled, (, "JSC_PRIVATE_OVERRIDE", ,, "Overriding private property of {0}."]
[,, "Access to protected property {0} of {1} not allowed here.", ), ;, static, final, DiagnosticType, PRIVATE_OVERRIDE, =, DiagnosticType, ., disabled, (, "JSC_PRIVATE_OVERRIDE", ,, "Overriding private property of {0}.", ), ;, static, final]
[), ;, static, final, DiagnosticType, PRIVATE_OVERRIDE, =, DiagnosticType, ., disabled, (, "JSC_PRIVATE_OVERRIDE", ,, "Overriding private property of {0}.", ), ;, static, final, DiagnosticType, EXTEND_FINAL_CLASS]
[;, static, final, DiagnosticType, EXTEND_FINAL_CLASS, =, DiagnosticType, ., error, (, "JSC_EXTEND_FINAL_CLASS", ,, "{0} is not allowed to extend final class {1}.", ), ;, static, final, DiagnosticType, VISIBILITY_MISMATCH, =]
[., disabled, (, "JSC_PRIVATE_OVERRIDE", ,, "Overriding private property of {0}.", ), ;, static, final, DiagnosticType, EXTEND_FINAL_CLASS, =, DiagnosticType, ., error, (, "JSC_EXTEND_FINAL_CLASS", ,, "{0} is not allowed to extend final class {1}."]
[,, "Overriding private property of {0}.", ), ;, static, final, DiagnosticType, EXTEND_FINAL_CLASS, =, DiagnosticType, ., error, (, "JSC_EXTEND_FINAL_CLASS", ,, "{0} is not allowed to extend final class {1}.", ), ;, static, final]
[), ;, static, final, DiagnosticType, EXTEND_FINAL_CLASS, =, DiagnosticType, ., error, (, "JSC_EXTEND_FINAL_CLASS", ,, "{0} is not allowed to extend final class {1}.", ), ;, static, final, DiagnosticType, VISIBILITY_MISMATCH]
[;, static, final, DiagnosticType, VISIBILITY_MISMATCH, =, DiagnosticType, ., disabled, (, "JSC_VISIBILITY_MISMATCH", ,, "Overriding {0} property of {1} with {2} property.", ), ;, static, final, DiagnosticType, CONST_PROPERTY_REASSIGNED_VALUE, =]
[., error, (, "JSC_EXTEND_FINAL_CLASS", ,, "{0} is not allowed to extend final class {1}.", ), ;, static, final, DiagnosticType, VISIBILITY_MISMATCH, =, DiagnosticType, ., disabled, (, "JSC_VISIBILITY_MISMATCH", ,, "Overriding {0} property of {1} with {2} property."]
[,, "{0} is not allowed to extend final class {1}.", ), ;, static, final, DiagnosticType, VISIBILITY_MISMATCH, =, DiagnosticType, ., disabled, (, "JSC_VISIBILITY_MISMATCH", ,, "Overriding {0} property of {1} with {2} property.", ), ;, static, final]
[), ;, static, final, DiagnosticType, VISIBILITY_MISMATCH, =, DiagnosticType, ., disabled, (, "JSC_VISIBILITY_MISMATCH", ,, "Overriding {0} property of {1} with {2} property.", ), ;, static, final, DiagnosticType, CONST_PROPERTY_REASSIGNED_VALUE]
[;, static, final, DiagnosticType, CONST_PROPERTY_REASSIGNED_VALUE, =, DiagnosticType, ., warning, (, "JSC_CONSTANT_PROPERTY_REASSIGNED_VALUE", ,, "constant property {0} assigned a value more than once", ), ;, static, final, DiagnosticType, CONST_PROPERTY_DELETED, =]
[., disabled, (, "JSC_VISIBILITY_MISMATCH", ,, "Overriding {0} property of {1} with {2} property.", ), ;, static, final, DiagnosticType, CONST_PROPERTY_REASSIGNED_VALUE, =, DiagnosticType, ., warning, (, "JSC_CONSTANT_PROPERTY_REASSIGNED_VALUE", ,, "constant property {0} assigned a value more than once"]
[,, "Overriding {0} property of {1} with {2} property.", ), ;, static, final, DiagnosticType, CONST_PROPERTY_REASSIGNED_VALUE, =, DiagnosticType, ., warning, (, "JSC_CONSTANT_PROPERTY_REASSIGNED_VALUE", ,, "constant property {0} assigned a value more than once", ), ;, static, final]
[), ;, static, final, DiagnosticType, CONST_PROPERTY_REASSIGNED_VALUE, =, DiagnosticType, ., warning, (, "JSC_CONSTANT_PROPERTY_REASSIGNED_VALUE", ,, "constant property {0} assigned a value more than once", ), ;, static, final, DiagnosticType, CONST_PROPERTY_DELETED]
[;, static, final, DiagnosticType, CONST_PROPERTY_DELETED, =, DiagnosticType, ., warning, (, "JSC_CONSTANT_PROPERTY_DELETED", ,, "constant property {0} cannot be deleted", ), ;, private, final, AbstractCompiler, compiler, ;]
[., warning, (, "JSC_CONSTANT_PROPERTY_REASSIGNED_VALUE", ,, "constant property {0} assigned a value more than once", ), ;, static, final, DiagnosticType, CONST_PROPERTY_DELETED, =, DiagnosticType, ., warning, (, "JSC_CONSTANT_PROPERTY_DELETED", ,, "constant property {0} cannot be deleted"]
[,, "constant property {0} assigned a value more than once", ), ;, static, final, DiagnosticType, CONST_PROPERTY_DELETED, =, DiagnosticType, ., warning, (, "JSC_CONSTANT_PROPERTY_DELETED", ,, "constant property {0} cannot be deleted", ), ;, private, final]
[), ;, static, final, DiagnosticType, CONST_PROPERTY_DELETED, =, DiagnosticType, ., warning, (, "JSC_CONSTANT_PROPERTY_DELETED", ,, "constant property {0} cannot be deleted", ), ;, private, final, AbstractCompiler, compiler]
[;, private, final, AbstractCompiler, compiler, ;, private, final, TypeValidator, validator, ;, private, int, deprecatedDepth, =, 0, ;, private, int, methodDepth]
[., warning, (, "JSC_CONSTANT_PROPERTY_DELETED", ,, "constant property {0} cannot be deleted", ), ;, private, final, AbstractCompiler, compiler, ;, private, final, TypeValidator, validator, ;, private, int]
[,, "constant property {0} cannot be deleted", ), ;, private, final, AbstractCompiler, compiler, ;, private, final, TypeValidator, validator, ;, private, int, deprecatedDepth, =, 0, ;]
[), ;, private, final, AbstractCompiler, compiler, ;, private, final, TypeValidator, validator, ;, private, int, deprecatedDepth, =, 0, ;, private, int]
[;, private, int, methodDepth, =, 0, ;, private, JSType, currentClass, =, null, ;, private, final, Multimap, <, String, ,, String]
[;, private, JSType, currentClass, =, null, ;, private, final, Multimap, <, String, ,, String, >, initializedConstantProperties, ;, CheckAccessControls, (, AbstractCompiler]
[;, private, final, Multimap, <, String, ,, String, >, initializedConstantProperties, ;, CheckAccessControls, (, AbstractCompiler, compiler, ), {, this, ., compiler]
[=, compiler, ;, this, ., validator, =, compiler, ., getTypeValidator, (, ), ;, this, ., initializedConstantProperties, =, HashMultimap, ., create]
[., compiler, =, compiler, ;, this, ., validator, =, compiler, ., getTypeValidator, (, ), ;, this, ., initializedConstantProperties, =, HashMultimap]
[;, this, ., validator, =, compiler, ., getTypeValidator, (, ), ;, this, ., initializedConstantProperties, =, HashMultimap, ., create, (, )]
[=, compiler, ., getTypeValidator, (, ), ;, this, ., initializedConstantProperties, =, HashMultimap, ., create, (, ), ;, }, @, Override]
[., validator, =, compiler, ., getTypeValidator, (, ), ;, this, ., initializedConstantProperties, =, HashMultimap, ., create, (, ), ;, }]
[;, this, ., initializedConstantProperties, =, HashMultimap, ., create, (, ), ;, }, @, Override, public, void, process, (, Node, externs]
[., getTypeValidator, (, ), ;, this, ., initializedConstantProperties, =, HashMultimap, ., create, (, ), ;, }, @, Override, public, void]
[=, HashMultimap, ., create, (, ), ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, )]
[., initializedConstantProperties, =, HashMultimap, ., create, (, ), ;, }, @, Override, public, void, process, (, Node, externs, ,, Node]
[;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, NodeTraversal, ., traverse, (, compiler]
[., create, (, ), ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, NodeTraversal]
[;, }, @, Override, public, void, hotSwapScript, (, Node, scriptRoot, ,, Node, originalRoot, ), {, NodeTraversal, ., traverse, (, compiler]
[., traverse, (, compiler, ,, root, ,, this, ), ;, }, @, Override, public, void, hotSwapScript, (, Node, scriptRoot, ,]
[,, root, ,, this, ), ;, }, @, Override, public, void, hotSwapScript, (, Node, scriptRoot, ,, Node, originalRoot, ), {]
[,, this, ), ;, }, @, Override, public, void, hotSwapScript, (, Node, scriptRoot, ,, Node, originalRoot, ), {, NodeTraversal, .]
[), ;, }, @, Override, public, void, hotSwapScript, (, Node, scriptRoot, ,, Node, originalRoot, ), {, NodeTraversal, ., traverse, (]
[;, }, @, Override, public, void, enterScope, (, NodeTraversal, t, ), {, if, (, !, t, ., inGlobalScope, (, )]
[., traverse, (, compiler, ,, scriptRoot, ,, this, ), ;, }, @, Override, public, void, enterScope, (, NodeTraversal, t, )]
[,, scriptRoot, ,, this, ), ;, }, @, Override, public, void, enterScope, (, NodeTraversal, t, ), {, if, (, !]
[,, this, ), ;, }, @, Override, public, void, enterScope, (, NodeTraversal, t, ), {, if, (, !, t, .]
[), ;, }, @, Override, public, void, enterScope, (, NodeTraversal, t, ), {, if, (, !, t, ., inGlobalScope, (]
[), {, Node, n, =, t, ., getScopeRoot, (, ), ;, Node, parent, =, n, ., getParent, (, ), ;]
[), {, Node, n, =, t, ., getScopeRoot, (, ), ;, Node, parent, =, n, ., getParent, (, ), ;]
[., inGlobalScope, (, ), ), {, Node, n, =, t, ., getScopeRoot, (, ), ;, Node, parent, =, n, .]
[;, Node, parent, =, n, ., getParent, (, ), ;, if, (, isDeprecatedFunction, (, n, ,, parent, ), ), {]
[., getScopeRoot, (, ), ;, Node, parent, =, n, ., getParent, (, ), ;, if, (, isDeprecatedFunction, (, n, ,]
[;, if, (, isDeprecatedFunction, (, n, ,, parent, ), ), {, deprecatedDepth, ++, ;, }, if, (, methodDepth, ==, 0]
[., getParent, (, ), ;, if, (, isDeprecatedFunction, (, n, ,, parent, ), ), {, deprecatedDepth, ++, ;, }, if]
[), {, deprecatedDepth, ++, ;, }, if, (, methodDepth, ==, 0, ), {, currentClass, =, getClassOfMethod, (, n, ,, parent]
[,, parent, ), ), {, deprecatedDepth, ++, ;, }, if, (, methodDepth, ==, 0, ), {, currentClass, =, getClassOfMethod, (]
[), ), {, deprecatedDepth, ++, ;, }, if, (, methodDepth, ==, 0, ), {, currentClass, =, getClassOfMethod, (, n, ,]
[;, }, if, (, methodDepth, ==, 0, ), {, currentClass, =, getClassOfMethod, (, n, ,, parent, ), ;, }, methodDepth]
[++, ;, }, if, (, methodDepth, ==, 0, ), {, currentClass, =, getClassOfMethod, (, n, ,, parent, ), ;, }]
[), {, currentClass, =, getClassOfMethod, (, n, ,, parent, ), ;, }, methodDepth, ++, ;, }, }, @, Override, public]
[==, 0, ), {, currentClass, =, getClassOfMethod, (, n, ,, parent, ), ;, }, methodDepth, ++, ;, }, }, @]
[), {, currentClass, =, getClassOfMethod, (, n, ,, parent, ), ;, }, methodDepth, ++, ;, }, }, @, Override, public]
[=, getClassOfMethod, (, n, ,, parent, ), ;, }, methodDepth, ++, ;, }, }, @, Override, public, void, exitScope, (]
[;, }, methodDepth, ++, ;, }, }, @, Override, public, void, exitScope, (, NodeTraversal, t, ), {, if, (, !]
[,, parent, ), ;, }, methodDepth, ++, ;, }, }, @, Override, public, void, exitScope, (, NodeTraversal, t, ), {]
[), ;, }, methodDepth, ++, ;, }, }, @, Override, public, void, exitScope, (, NodeTraversal, t, ), {, if, (]
[;, }, }, @, Override, public, void, exitScope, (, NodeTraversal, t, ), {, if, (, !, t, ., inGlobalScope, (]
[++, ;, }, }, @, Override, public, void, exitScope, (, NodeTraversal, t, ), {, if, (, !, t, ., inGlobalScope]
[), {, Node, n, =, t, ., getScopeRoot, (, ), ;, Node, parent, =, n, ., getParent, (, ), ;]
[), {, Node, n, =, t, ., getScopeRoot, (, ), ;, Node, parent, =, n, ., getParent, (, ), ;]
[., inGlobalScope, (, ), ), {, Node, n, =, t, ., getScopeRoot, (, ), ;, Node, parent, =, n, .]
[;, Node, parent, =, n, ., getParent, (, ), ;, if, (, isDeprecatedFunction, (, n, ,, parent, ), ), {]
[., getScopeRoot, (, ), ;, Node, parent, =, n, ., getParent, (, ), ;, if, (, isDeprecatedFunction, (, n, ,]
[;, if, (, isDeprecatedFunction, (, n, ,, parent, ), ), {, deprecatedDepth, --, ;, }, methodDepth, --, ;, if, (]
[., getParent, (, ), ;, if, (, isDeprecatedFunction, (, n, ,, parent, ), ), {, deprecatedDepth, --, ;, }, methodDepth]
[), {, deprecatedDepth, --, ;, }, methodDepth, --, ;, if, (, methodDepth, ==, 0, ), {, currentClass, =, null, ;]
[,, parent, ), ), {, deprecatedDepth, --, ;, }, methodDepth, --, ;, if, (, methodDepth, ==, 0, ), {, currentClass]
[), ), {, deprecatedDepth, --, ;, }, methodDepth, --, ;, if, (, methodDepth, ==, 0, ), {, currentClass, =, null]
[;, }, methodDepth, --, ;, if, (, methodDepth, ==, 0, ), {, currentClass, =, null, ;, }, }, }, private]
[--, ;, }, methodDepth, --, ;, if, (, methodDepth, ==, 0, ), {, currentClass, =, null, ;, }, }, }]
[;, if, (, methodDepth, ==, 0, ), {, currentClass, =, null, ;, }, }, }, private, JSType, getClassOfMethod, (, Node]
[--, ;, if, (, methodDepth, ==, 0, ), {, currentClass, =, null, ;, }, }, }, private, JSType, getClassOfMethod, (]
[), {, currentClass, =, null, ;, }, }, }, private, JSType, getClassOfMethod, (, Node, n, ,, Node, parent, ), {]
[==, 0, ), {, currentClass, =, null, ;, }, }, }, private, JSType, getClassOfMethod, (, Node, n, ,, Node, parent]
[), {, currentClass, =, null, ;, }, }, }, private, JSType, getClassOfMethod, (, Node, n, ,, Node, parent, ), {]
[=, null, ;, }, }, }, private, JSType, getClassOfMethod, (, Node, n, ,, Node, parent, ), {, if, (, parent]
[;, }, }, }, private, JSType, getClassOfMethod, (, Node, n, ,, Node, parent, ), {, if, (, parent, ., isAssign]
[), {, Node, lValue, =, parent, ., getFirstChild, (, ), ;, if, (, NodeUtil, ., isGet, (, lValue, ), )]
[., isAssign, (, ), ), {, Node, lValue, =, parent, ., getFirstChild, (, ), ;, if, (, NodeUtil, ., isGet]
[;, if, (, NodeUtil, ., isGet, (, lValue, ), ), {, JSType, lValueType, =, lValue, ., getJSType, (, ), ;]
[., getFirstChild, (, ), ;, if, (, NodeUtil, ., isGet, (, lValue, ), ), {, JSType, lValueType, =, lValue, .]
[), {, JSType, lValueType, =, lValue, ., getJSType, (, ), ;, if, (, lValueType, !=, null, &&, lValueType, ., isNominalConstructor]
[., isGet, (, lValue, ), ), {, JSType, lValueType, =, lValue, ., getJSType, (, ), ;, if, (, lValueType, !=]
[), ), {, JSType, lValueType, =, lValue, ., getJSType, (, ), ;, if, (, lValueType, !=, null, &&, lValueType, .]
[;, if, (, lValueType, !=, null, &&, lValueType, ., isNominalConstructor, (, ), ), {, return, (, lValueType, ., toMaybeFunctionType, (]
[., getJSType, (, ), ;, if, (, lValueType, !=, null, &&, lValueType, ., isNominalConstructor, (, ), ), {, return, (]
[), {, return, (, lValueType, ., toMaybeFunctionType, (, ), ), ., getInstanceType, (, ), ;, }, else, {, return, normalizeClassType]
[&&, lValueType, ., isNominalConstructor, (, ), ), {, return, (, lValueType, ., toMaybeFunctionType, (, ), ), ., getInstanceType, (, )]
[!=, null, &&, lValueType, ., isNominalConstructor, (, ), ), {, return, (, lValueType, ., toMaybeFunctionType, (, ), ), ., getInstanceType]
[&&, lValueType, ., isNominalConstructor, (, ), ), {, return, (, lValueType, ., toMaybeFunctionType, (, ), ), ., getInstanceType, (, )]
[), {, return, (, lValueType, ., toMaybeFunctionType, (, ), ), ., getInstanceType, (, ), ;, }, else, {, return, normalizeClassType]
[., isNominalConstructor, (, ), ), {, return, (, lValueType, ., toMaybeFunctionType, (, ), ), ., getInstanceType, (, ), ;, }]
[;, }, else, {, return, normalizeClassType, (, lValue, ., getFirstChild, (, ), ., getJSType, (, ), ), ;, }, }]
[., getInstanceType, (, ), ;, }, else, {, return, normalizeClassType, (, lValue, ., getFirstChild, (, ), ., getJSType, (, )]
[), ., getInstanceType, (, ), ;, }, else, {, return, normalizeClassType, (, lValue, ., getFirstChild, (, ), ., getJSType, (]
[., toMaybeFunctionType, (, ), ), ., getInstanceType, (, ), ;, }, else, {, return, normalizeClassType, (, lValue, ., getFirstChild, (]
[;, }, }, else, {, return, normalizeClassType, (, lValue, ., getJSType, (, ), ), ;, }, }, else, if, (]
[), ;, }, }, else, {, return, normalizeClassType, (, lValue, ., getJSType, (, ), ), ;, }, }, else, if]
[., getJSType, (, ), ), ;, }, }, else, {, return, normalizeClassType, (, lValue, ., getJSType, (, ), ), ;]
[., getFirstChild, (, ), ., getJSType, (, ), ), ;, }, }, else, {, return, normalizeClassType, (, lValue, ., getJSType]
[;, }, }, else, if, (, NodeUtil, ., isFunctionDeclaration, (, n, ), ||, parent, ., isName, (, ), ), {]
[), ;, }, }, else, if, (, NodeUtil, ., isFunctionDeclaration, (, n, ), ||, parent, ., isName, (, ), )]
[., getJSType, (, ), ), ;, }, }, else, if, (, NodeUtil, ., isFunctionDeclaration, (, n, ), ||, parent, .]
[), {, return, normalizeClassType, (, n, ., getJSType, (, ), ), ;, }, return, null, ;, }, private, JSType, normalizeClassType]
[||, parent, ., isName, (, ), ), {, return, normalizeClassType, (, n, ., getJSType, (, ), ), ;, }, return]
[., isFunctionDeclaration, (, n, ), ||, parent, ., isName, (, ), ), {, return, normalizeClassType, (, n, ., getJSType, (]
[), ||, parent, ., isName, (, ), ), {, return, normalizeClassType, (, n, ., getJSType, (, ), ), ;, }]
[), {, return, normalizeClassType, (, n, ., getJSType, (, ), ), ;, }, return, null, ;, }, private, JSType, normalizeClassType]
[., isName, (, ), ), {, return, normalizeClassType, (, n, ., getJSType, (, ), ), ;, }, return, null, ;]
[;, }, return, null, ;, }, private, JSType, normalizeClassType, (, JSType, type, ), {, if, (, type, ==, null, ||]
[), ;, }, return, null, ;, }, private, JSType, normalizeClassType, (, JSType, type, ), {, if, (, type, ==, null]
[., getJSType, (, ), ), ;, }, return, null, ;, }, private, JSType, normalizeClassType, (, JSType, type, ), {, if]
[;, }, private, JSType, normalizeClassType, (, JSType, type, ), {, if, (, type, ==, null, ||, type, ., isUnknownType, (]
[), {, return, type, ;, }, else, if, (, type, ., isNominalConstructor, (, ), ), {, return, (, type, .]
[||, type, ., isUnknownType, (, ), ), {, return, type, ;, }, else, if, (, type, ., isNominalConstructor, (, )]
[==, null, ||, type, ., isUnknownType, (, ), ), {, return, type, ;, }, else, if, (, type, ., isNominalConstructor]
[||, type, ., isUnknownType, (, ), ), {, return, type, ;, }, else, if, (, type, ., isNominalConstructor, (, )]
[), {, return, type, ;, }, else, if, (, type, ., isNominalConstructor, (, ), ), {, return, (, type, .]
[., isUnknownType, (, ), ), {, return, type, ;, }, else, if, (, type, ., isNominalConstructor, (, ), ), {]
[;, }, else, if, (, type, ., isNominalConstructor, (, ), ), {, return, (, type, ., toMaybeFunctionType, (, ), )]
[), {, return, (, type, ., toMaybeFunctionType, (, ), ), ., getInstanceType, (, ), ;, }, else, if, (, type]
[., isNominalConstructor, (, ), ), {, return, (, type, ., toMaybeFunctionType, (, ), ), ., getInstanceType, (, ), ;, }]
[;, }, else, if, (, type, ., isFunctionPrototypeType, (, ), ), {, FunctionType, owner, =, (, (, ObjectType, ), type]
[., getInstanceType, (, ), ;, }, else, if, (, type, ., isFunctionPrototypeType, (, ), ), {, FunctionType, owner, =, (]
[), ., getInstanceType, (, ), ;, }, else, if, (, type, ., isFunctionPrototypeType, (, ), ), {, FunctionType, owner, =]
[., toMaybeFunctionType, (, ), ), ., getInstanceType, (, ), ;, }, else, if, (, type, ., isFunctionPrototypeType, (, ), )]
[), {, FunctionType, owner, =, (, (, ObjectType, ), type, ), ., getOwnerFunction, (, ), ;, if, (, owner, .]
[., isFunctionPrototypeType, (, ), ), {, FunctionType, owner, =, (, (, ObjectType, ), type, ), ., getOwnerFunction, (, ), ;]
[;, if, (, owner, ., isConstructor, (, ), ), {, return, owner, ., getInstanceType, (, ), ;, }, }, return]
[., getOwnerFunction, (, ), ;, if, (, owner, ., isConstructor, (, ), ), {, return, owner, ., getInstanceType, (, )]
[), ., getOwnerFunction, (, ), ;, if, (, owner, ., isConstructor, (, ), ), {, return, owner, ., getInstanceType, (]
[), ., getOwnerFunction, (, ), ;, if, (, owner, ., isConstructor, (, ), ), {, return, owner, ., getInstanceType, (]
[), {, return, owner, ., getInstanceType, (, ), ;, }, }, return, type, ;, }, @, Override, public, boolean, shouldTraverse]
[., isConstructor, (, ), ), {, return, owner, ., getInstanceType, (, ), ;, }, }, return, type, ;, }, @]
[;, }, }, return, type, ;, }, @, Override, public, boolean, shouldTraverse, (, NodeTraversal, t, ,, Node, n, ,, Node]
[., getInstanceType, (, ), ;, }, }, return, type, ;, }, @, Override, public, boolean, shouldTraverse, (, NodeTraversal, t, ,]
[;, }, @, Override, public, boolean, shouldTraverse, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, return, true]
[;, }, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, switch, (]
[), {, case, Token, ., NAME, :, checkNameDeprecation, (, t, ,, n, ,, parent, ), ;, checkNameVisibility, (, t, ,]
[., getType, (, ), ), {, case, Token, ., NAME, :, checkNameDeprecation, (, t, ,, n, ,, parent, ), ;]
[:, checkNameDeprecation, (, t, ,, n, ,, parent, ), ;, checkNameVisibility, (, t, ,, n, ,, parent, ), ;, break]
[., NAME, :, checkNameDeprecation, (, t, ,, n, ,, parent, ), ;, checkNameVisibility, (, t, ,, n, ,, parent, )]
[;, checkNameVisibility, (, t, ,, n, ,, parent, ), ;, break, ;, case, Token, ., GETPROP, :, checkPropertyDeprecation, (, t]
[,, n, ,, parent, ), ;, checkNameVisibility, (, t, ,, n, ,, parent, ), ;, break, ;, case, Token, .]
[,, parent, ), ;, checkNameVisibility, (, t, ,, n, ,, parent, ), ;, break, ;, case, Token, ., GETPROP, :]
[), ;, checkNameVisibility, (, t, ,, n, ,, parent, ), ;, break, ;, case, Token, ., GETPROP, :, checkPropertyDeprecation, (]
[;, break, ;, case, Token, ., GETPROP, :, checkPropertyDeprecation, (, t, ,, n, ,, parent, ), ;, checkPropertyVisibility, (, t]
[,, n, ,, parent, ), ;, break, ;, case, Token, ., GETPROP, :, checkPropertyDeprecation, (, t, ,, n, ,, parent]
[,, parent, ), ;, break, ;, case, Token, ., GETPROP, :, checkPropertyDeprecation, (, t, ,, n, ,, parent, ), ;]
[), ;, break, ;, case, Token, ., GETPROP, :, checkPropertyDeprecation, (, t, ,, n, ,, parent, ), ;, checkPropertyVisibility, (]
[:, checkPropertyDeprecation, (, t, ,, n, ,, parent, ), ;, checkPropertyVisibility, (, t, ,, n, ,, parent, ), ;, checkConstantProperty]
[., GETPROP, :, checkPropertyDeprecation, (, t, ,, n, ,, parent, ), ;, checkPropertyVisibility, (, t, ,, n, ,, parent, )]
[;, checkPropertyVisibility, (, t, ,, n, ,, parent, ), ;, checkConstantProperty, (, t, ,, n, ), ;, break, ;, case]
[,, n, ,, parent, ), ;, checkPropertyVisibility, (, t, ,, n, ,, parent, ), ;, checkConstantProperty, (, t, ,, n]
[,, parent, ), ;, checkPropertyVisibility, (, t, ,, n, ,, parent, ), ;, checkConstantProperty, (, t, ,, n, ), ;]
[), ;, checkPropertyVisibility, (, t, ,, n, ,, parent, ), ;, checkConstantProperty, (, t, ,, n, ), ;, break, ;]
[;, checkConstantProperty, (, t, ,, n, ), ;, break, ;, case, Token, ., NEW, :, checkConstructorDeprecation, (, t, ,, n]
[,, n, ,, parent, ), ;, checkConstantProperty, (, t, ,, n, ), ;, break, ;, case, Token, ., NEW, :]
[,, parent, ), ;, checkConstantProperty, (, t, ,, n, ), ;, break, ;, case, Token, ., NEW, :, checkConstructorDeprecation, (]
[), ;, checkConstantProperty, (, t, ,, n, ), ;, break, ;, case, Token, ., NEW, :, checkConstructorDeprecation, (, t, ,]
[;, break, ;, case, Token, ., NEW, :, checkConstructorDeprecation, (, t, ,, n, ,, parent, ), ;, break, ;, case]
[,, n, ), ;, break, ;, case, Token, ., NEW, :, checkConstructorDeprecation, (, t, ,, n, ,, parent, ), ;]
[), ;, break, ;, case, Token, ., NEW, :, checkConstructorDeprecation, (, t, ,, n, ,, parent, ), ;, break, ;]
[:, checkConstructorDeprecation, (, t, ,, n, ,, parent, ), ;, break, ;, case, Token, ., FUNCTION, :, checkFinalClassOverrides, (, t]
[., NEW, :, checkConstructorDeprecation, (, t, ,, n, ,, parent, ), ;, break, ;, case, Token, ., FUNCTION, :, checkFinalClassOverrides]
[;, break, ;, case, Token, ., FUNCTION, :, checkFinalClassOverrides, (, t, ,, n, ,, parent, ), ;, break, ;, }]
[,, n, ,, parent, ), ;, break, ;, case, Token, ., FUNCTION, :, checkFinalClassOverrides, (, t, ,, n, ,, parent]
[,, parent, ), ;, break, ;, case, Token, ., FUNCTION, :, checkFinalClassOverrides, (, t, ,, n, ,, parent, ), ;]
[), ;, break, ;, case, Token, ., FUNCTION, :, checkFinalClassOverrides, (, t, ,, n, ,, parent, ), ;, break, ;]
[:, checkFinalClassOverrides, (, t, ,, n, ,, parent, ), ;, break, ;, }, }, private, void, checkConstructorDeprecation, (, NodeTraversal, t]
[., FUNCTION, :, checkFinalClassOverrides, (, t, ,, n, ,, parent, ), ;, break, ;, }, }, private, void, checkConstructorDeprecation, (]
[;, break, ;, }, }, private, void, checkConstructorDeprecation, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, JSType]
[,, n, ,, parent, ), ;, break, ;, }, }, private, void, checkConstructorDeprecation, (, NodeTraversal, t, ,, Node, n, ,]
[,, parent, ), ;, break, ;, }, }, private, void, checkConstructorDeprecation, (, NodeTraversal, t, ,, Node, n, ,, Node, parent]
[), ;, break, ;, }, }, private, void, checkConstructorDeprecation, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {]
[;, if, (, type, !=, null, ), {, String, deprecationInfo, =, getTypeDeprecationInfo, (, type, ), ;, if, (, deprecationInfo, !=]
[., getJSType, (, ), ;, if, (, type, !=, null, ), {, String, deprecationInfo, =, getTypeDeprecationInfo, (, type, ), ;]
[), {, String, deprecationInfo, =, getTypeDeprecationInfo, (, type, ), ;, if, (, deprecationInfo, !=, null, &&, shouldEmitDeprecationWarning, (, t, ,]
[!=, null, ), {, String, deprecationInfo, =, getTypeDeprecationInfo, (, type, ), ;, if, (, deprecationInfo, !=, null, &&, shouldEmitDeprecationWarning, (]
[), {, String, deprecationInfo, =, getTypeDeprecationInfo, (, type, ), ;, if, (, deprecationInfo, !=, null, &&, shouldEmitDeprecationWarning, (, t, ,]
[;, if, (, deprecationInfo, !=, null, &&, shouldEmitDeprecationWarning, (, t, ,, n, ,, parent, ), ), {, if, (, !]
[), ;, if, (, deprecationInfo, !=, null, &&, shouldEmitDeprecationWarning, (, t, ,, n, ,, parent, ), ), {, if, (]
[), {, if, (, !, deprecationInfo, ., isEmpty, (, ), ), {, compiler, ., report, (, t, ., makeError, (]
[&&, shouldEmitDeprecationWarning, (, t, ,, n, ,, parent, ), ), {, if, (, !, deprecationInfo, ., isEmpty, (, ), )]
[!=, null, &&, shouldEmitDeprecationWarning, (, t, ,, n, ,, parent, ), ), {, if, (, !, deprecationInfo, ., isEmpty, (]
[&&, shouldEmitDeprecationWarning, (, t, ,, n, ,, parent, ), ), {, if, (, !, deprecationInfo, ., isEmpty, (, ), )]
[), {, if, (, !, deprecationInfo, ., isEmpty, (, ), ), {, compiler, ., report, (, t, ., makeError, (]
[,, n, ,, parent, ), ), {, if, (, !, deprecationInfo, ., isEmpty, (, ), ), {, compiler, ., report]
[,, parent, ), ), {, if, (, !, deprecationInfo, ., isEmpty, (, ), ), {, compiler, ., report, (, t]
[), ), {, if, (, !, deprecationInfo, ., isEmpty, (, ), ), {, compiler, ., report, (, t, ., makeError]
[), {, compiler, ., report, (, t, ., makeError, (, n, ,, DEPRECATED_CLASS_REASON, ,, type, ., toString, (, ), ,]
[), {, compiler, ., report, (, t, ., makeError, (, n, ,, DEPRECATED_CLASS_REASON, ,, type, ., toString, (, ), ,]
[., isEmpty, (, ), ), {, compiler, ., report, (, t, ., makeError, (, n, ,, DEPRECATED_CLASS_REASON, ,, type, .]
[;, }, else, {, compiler, ., report, (, t, ., makeError, (, n, ,, DEPRECATED_CLASS, ,, type, ., toString, (]
[., report, (, t, ., makeError, (, n, ,, DEPRECATED_CLASS_REASON, ,, type, ., toString, (, ), ,, deprecationInfo, ), )]
[), ;, }, else, {, compiler, ., report, (, t, ., makeError, (, n, ,, DEPRECATED_CLASS, ,, type, ., toString]
[., makeError, (, n, ,, DEPRECATED_CLASS_REASON, ,, type, ., toString, (, ), ,, deprecationInfo, ), ), ;, }, else, {]
[,, DEPRECATED_CLASS_REASON, ,, type, ., toString, (, ), ,, deprecationInfo, ), ), ;, }, else, {, compiler, ., report, (]
[,, type, ., toString, (, ), ,, deprecationInfo, ), ), ;, }, else, {, compiler, ., report, (, t, .]
[,, deprecationInfo, ), ), ;, }, else, {, compiler, ., report, (, t, ., makeError, (, n, ,, DEPRECATED_CLASS, ,]
[., toString, (, ), ,, deprecationInfo, ), ), ;, }, else, {, compiler, ., report, (, t, ., makeError, (]
[), ), ;, }, else, {, compiler, ., report, (, t, ., makeError, (, n, ,, DEPRECATED_CLASS, ,, type, .]
[;, }, }, }, }, private, void, checkNameDeprecation, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if]
[., report, (, t, ., makeError, (, n, ,, DEPRECATED_CLASS, ,, type, ., toString, (, ), ), ), ;, }]
[), ;, }, }, }, }, private, void, checkNameDeprecation, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {]
[., makeError, (, n, ,, DEPRECATED_CLASS, ,, type, ., toString, (, ), ), ), ;, }, }, }, }, private]
[,, DEPRECATED_CLASS, ,, type, ., toString, (, ), ), ), ;, }, }, }, }, private, void, checkNameDeprecation, (, NodeTraversal]
[,, type, ., toString, (, ), ), ), ;, }, }, }, }, private, void, checkNameDeprecation, (, NodeTraversal, t, ,]
[), ), ;, }, }, }, }, private, void, checkNameDeprecation, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, )]
[., toString, (, ), ), ), ;, }, }, }, }, private, void, checkNameDeprecation, (, NodeTraversal, t, ,, Node, n]
[), {, return, ;, }, Scope, ., Var, var, =, t, ., getScope, (, ), ., getVar, (, n, .]
[||, parent, ., isNew, (, ), ), {, return, ;, }, Scope, ., Var, var, =, t, ., getScope, (]
[||, parent, ., isVar, (, ), ||, parent, ., isNew, (, ), ), {, return, ;, }, Scope, ., Var]
[., isFunction, (, ), ||, parent, ., isVar, (, ), ||, parent, ., isNew, (, ), ), {, return, ;]
[||, parent, ., isNew, (, ), ), {, return, ;, }, Scope, ., Var, var, =, t, ., getScope, (]
[., isVar, (, ), ||, parent, ., isNew, (, ), ), {, return, ;, }, Scope, ., Var, var, =]
[), {, return, ;, }, Scope, ., Var, var, =, t, ., getScope, (, ), ., getVar, (, n, .]
[., isNew, (, ), ), {, return, ;, }, Scope, ., Var, var, =, t, ., getScope, (, ), .]
[;, JSDocInfo, docInfo, =, var, ==, null, ?, null, :, var, ., getJSDocInfo, (, ), ;, if, (, docInfo, !=]
[., getVar, (, n, ., getString, (, ), ), ;, JSDocInfo, docInfo, =, var, ==, null, ?, null, :, var]
[., getScope, (, ), ., getVar, (, n, ., getString, (, ), ), ;, JSDocInfo, docInfo, =, var, ==, null]
[), ;, JSDocInfo, docInfo, =, var, ==, null, ?, null, :, var, ., getJSDocInfo, (, ), ;, if, (, docInfo]
[., getString, (, ), ), ;, JSDocInfo, docInfo, =, var, ==, null, ?, null, :, var, ., getJSDocInfo, (, )]
[;, if, (, docInfo, !=, null, &&, docInfo, ., isDeprecated, (, ), &&, shouldEmitDeprecationWarning, (, t, ,, n, ,, parent]
[?, null, :, var, ., getJSDocInfo, (, ), ;, if, (, docInfo, !=, null, &&, docInfo, ., isDeprecated, (, )]
[==, null, ?, null, :, var, ., getJSDocInfo, (, ), ;, if, (, docInfo, !=, null, &&, docInfo, ., isDeprecated]
[?, null, :, var, ., getJSDocInfo, (, ), ;, if, (, docInfo, !=, null, &&, docInfo, ., isDeprecated, (, )]
[:, var, ., getJSDocInfo, (, ), ;, if, (, docInfo, !=, null, &&, docInfo, ., isDeprecated, (, ), &&, shouldEmitDeprecationWarning]
[;, if, (, docInfo, !=, null, &&, docInfo, ., isDeprecated, (, ), &&, shouldEmitDeprecationWarning, (, t, ,, n, ,, parent]
[., getJSDocInfo, (, ), ;, if, (, docInfo, !=, null, &&, docInfo, ., isDeprecated, (, ), &&, shouldEmitDeprecationWarning, (, t]
[), {, if, (, docInfo, ., getDeprecationReason, (, ), !=, null, ), {, compiler, ., report, (, t, ., makeError]
[&&, shouldEmitDeprecationWarning, (, t, ,, n, ,, parent, ), ), {, if, (, docInfo, ., getDeprecationReason, (, ), !=, null]
[&&, docInfo, ., isDeprecated, (, ), &&, shouldEmitDeprecationWarning, (, t, ,, n, ,, parent, ), ), {, if, (, docInfo]
[!=, null, &&, docInfo, ., isDeprecated, (, ), &&, shouldEmitDeprecationWarning, (, t, ,, n, ,, parent, ), ), {, if]
[&&, docInfo, ., isDeprecated, (, ), &&, shouldEmitDeprecationWarning, (, t, ,, n, ,, parent, ), ), {, if, (, docInfo]
[&&, shouldEmitDeprecationWarning, (, t, ,, n, ,, parent, ), ), {, if, (, docInfo, ., getDeprecationReason, (, ), !=, null]
[., isDeprecated, (, ), &&, shouldEmitDeprecationWarning, (, t, ,, n, ,, parent, ), ), {, if, (, docInfo, ., getDeprecationReason]
[), {, if, (, docInfo, ., getDeprecationReason, (, ), !=, null, ), {, compiler, ., report, (, t, ., makeError]
[,, n, ,, parent, ), ), {, if, (, docInfo, ., getDeprecationReason, (, ), !=, null, ), {, compiler, .]
[,, parent, ), ), {, if, (, docInfo, ., getDeprecationReason, (, ), !=, null, ), {, compiler, ., report, (]
[), ), {, if, (, docInfo, ., getDeprecationReason, (, ), !=, null, ), {, compiler, ., report, (, t, .]
[), {, compiler, ., report, (, t, ., makeError, (, n, ,, DEPRECATED_NAME_REASON, ,, n, ., getString, (, ), ,]
[!=, null, ), {, compiler, ., report, (, t, ., makeError, (, n, ,, DEPRECATED_NAME_REASON, ,, n, ., getString, (]
[., getDeprecationReason, (, ), !=, null, ), {, compiler, ., report, (, t, ., makeError, (, n, ,, DEPRECATED_NAME_REASON, ,]
[), {, compiler, ., report, (, t, ., makeError, (, n, ,, DEPRECATED_NAME_REASON, ,, n, ., getString, (, ), ,]
[;, }, else, {, compiler, ., report, (, t, ., makeError, (, n, ,, DEPRECATED_NAME, ,, n, ., getString, (]
[., report, (, t, ., makeError, (, n, ,, DEPRECATED_NAME_REASON, ,, n, ., getString, (, ), ,, docInfo, ., getDeprecationReason]
[), ;, }, else, {, compiler, ., report, (, t, ., makeError, (, n, ,, DEPRECATED_NAME, ,, n, ., getString]
[., makeError, (, n, ,, DEPRECATED_NAME_REASON, ,, n, ., getString, (, ), ,, docInfo, ., getDeprecationReason, (, ), ), )]
[,, DEPRECATED_NAME_REASON, ,, n, ., getString, (, ), ,, docInfo, ., getDeprecationReason, (, ), ), ), ;, }, else, {]
[,, n, ., getString, (, ), ,, docInfo, ., getDeprecationReason, (, ), ), ), ;, }, else, {, compiler, .]
[,, docInfo, ., getDeprecationReason, (, ), ), ), ;, }, else, {, compiler, ., report, (, t, ., makeError, (]
[., getString, (, ), ,, docInfo, ., getDeprecationReason, (, ), ), ), ;, }, else, {, compiler, ., report, (]
[), ), ;, }, else, {, compiler, ., report, (, t, ., makeError, (, n, ,, DEPRECATED_NAME, ,, n, .]
[., getDeprecationReason, (, ), ), ), ;, }, else, {, compiler, ., report, (, t, ., makeError, (, n, ,]
[;, }, }, }, private, void, checkPropertyDeprecation, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (]
[., report, (, t, ., makeError, (, n, ,, DEPRECATED_NAME, ,, n, ., getString, (, ), ), ), ;, }]
[), ;, }, }, }, private, void, checkPropertyDeprecation, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if]
[., makeError, (, n, ,, DEPRECATED_NAME, ,, n, ., getString, (, ), ), ), ;, }, }, }, private, void]
[,, DEPRECATED_NAME, ,, n, ., getString, (, ), ), ), ;, }, }, }, private, void, checkPropertyDeprecation, (, NodeTraversal, t]
[,, n, ., getString, (, ), ), ), ;, }, }, }, private, void, checkPropertyDeprecation, (, NodeTraversal, t, ,, Node]
[), ), ;, }, }, }, private, void, checkPropertyDeprecation, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {]
[., getString, (, ), ), ), ;, }, }, }, private, void, checkPropertyDeprecation, (, NodeTraversal, t, ,, Node, n, ,]
[), {, return, ;, }, ObjectType, objectType, =, ObjectType, ., cast, (, dereference, (, n, ., getFirstChild, (, ), .]
[., isNew, (, ), ), {, return, ;, }, ObjectType, objectType, =, ObjectType, ., cast, (, dereference, (, n, .]
[;, String, propertyName, =, n, ., getLastChild, (, ), ., getString, (, ), ;, if, (, objectType, !=, null, )]
[., cast, (, dereference, (, n, ., getFirstChild, (, ), ., getJSType, (, ), ), ), ;, String, propertyName, =]
[), ;, String, propertyName, =, n, ., getLastChild, (, ), ., getString, (, ), ;, if, (, objectType, !=, null]
[), ), ;, String, propertyName, =, n, ., getLastChild, (, ), ., getString, (, ), ;, if, (, objectType, !=]
[., getJSType, (, ), ), ), ;, String, propertyName, =, n, ., getLastChild, (, ), ., getString, (, ), ;]
[., getFirstChild, (, ), ., getJSType, (, ), ), ), ;, String, propertyName, =, n, ., getLastChild, (, ), .]
[;, if, (, objectType, !=, null, ), {, String, deprecationInfo, =, getPropertyDeprecationInfo, (, objectType, ,, propertyName, ), ;, if, (]
[., getString, (, ), ;, if, (, objectType, !=, null, ), {, String, deprecationInfo, =, getPropertyDeprecationInfo, (, objectType, ,, propertyName]
[., getLastChild, (, ), ., getString, (, ), ;, if, (, objectType, !=, null, ), {, String, deprecationInfo, =, getPropertyDeprecationInfo]
[), {, String, deprecationInfo, =, getPropertyDeprecationInfo, (, objectType, ,, propertyName, ), ;, if, (, deprecationInfo, !=, null, &&, shouldEmitDeprecationWarning, (]
[!=, null, ), {, String, deprecationInfo, =, getPropertyDeprecationInfo, (, objectType, ,, propertyName, ), ;, if, (, deprecationInfo, !=, null, &&]
[), {, String, deprecationInfo, =, getPropertyDeprecationInfo, (, objectType, ,, propertyName, ), ;, if, (, deprecationInfo, !=, null, &&, shouldEmitDeprecationWarning, (]
[;, if, (, deprecationInfo, !=, null, &&, shouldEmitDeprecationWarning, (, t, ,, n, ,, parent, ), ), {, if, (, !]
[,, propertyName, ), ;, if, (, deprecationInfo, !=, null, &&, shouldEmitDeprecationWarning, (, t, ,, n, ,, parent, ), ), {]
[), ;, if, (, deprecationInfo, !=, null, &&, shouldEmitDeprecationWarning, (, t, ,, n, ,, parent, ), ), {, if, (]
[), {, if, (, !, deprecationInfo, ., isEmpty, (, ), ), {, compiler, ., report, (, t, ., makeError, (]
[&&, shouldEmitDeprecationWarning, (, t, ,, n, ,, parent, ), ), {, if, (, !, deprecationInfo, ., isEmpty, (, ), )]
[!=, null, &&, shouldEmitDeprecationWarning, (, t, ,, n, ,, parent, ), ), {, if, (, !, deprecationInfo, ., isEmpty, (]
[&&, shouldEmitDeprecationWarning, (, t, ,, n, ,, parent, ), ), {, if, (, !, deprecationInfo, ., isEmpty, (, ), )]
[), {, if, (, !, deprecationInfo, ., isEmpty, (, ), ), {, compiler, ., report, (, t, ., makeError, (]
[,, n, ,, parent, ), ), {, if, (, !, deprecationInfo, ., isEmpty, (, ), ), {, compiler, ., report]
[,, parent, ), ), {, if, (, !, deprecationInfo, ., isEmpty, (, ), ), {, compiler, ., report, (, t]
[), ), {, if, (, !, deprecationInfo, ., isEmpty, (, ), ), {, compiler, ., report, (, t, ., makeError]
[), {, compiler, ., report, (, t, ., makeError, (, n, ,, DEPRECATED_PROP_REASON, ,, propertyName, ,, validator, ., getReadableJSTypeName, (]
[), {, compiler, ., report, (, t, ., makeError, (, n, ,, DEPRECATED_PROP_REASON, ,, propertyName, ,, validator, ., getReadableJSTypeName, (]
[., isEmpty, (, ), ), {, compiler, ., report, (, t, ., makeError, (, n, ,, DEPRECATED_PROP_REASON, ,, propertyName, ,]
[;, }, else, {, compiler, ., report, (, t, ., makeError, (, n, ,, DEPRECATED_PROP, ,, propertyName, ,, validator, .]
[., report, (, t, ., makeError, (, n, ,, DEPRECATED_PROP_REASON, ,, propertyName, ,, validator, ., getReadableJSTypeName, (, n, ., getFirstChild]
[), ;, }, else, {, compiler, ., report, (, t, ., makeError, (, n, ,, DEPRECATED_PROP, ,, propertyName, ,, validator]
[., makeError, (, n, ,, DEPRECATED_PROP_REASON, ,, propertyName, ,, validator, ., getReadableJSTypeName, (, n, ., getFirstChild, (, ), ,, true]
[,, DEPRECATED_PROP_REASON, ,, propertyName, ,, validator, ., getReadableJSTypeName, (, n, ., getFirstChild, (, ), ,, true, ), ,, deprecationInfo, )]
[,, propertyName, ,, validator, ., getReadableJSTypeName, (, n, ., getFirstChild, (, ), ,, true, ), ,, deprecationInfo, ), ), ;]
[,, validator, ., getReadableJSTypeName, (, n, ., getFirstChild, (, ), ,, true, ), ,, deprecationInfo, ), ), ;, }, else]
[,, deprecationInfo, ), ), ;, }, else, {, compiler, ., report, (, t, ., makeError, (, n, ,, DEPRECATED_PROP, ,]
[., getReadableJSTypeName, (, n, ., getFirstChild, (, ), ,, true, ), ,, deprecationInfo, ), ), ;, }, else, {, compiler]
[,, true, ), ,, deprecationInfo, ), ), ;, }, else, {, compiler, ., report, (, t, ., makeError, (, n]
[., getFirstChild, (, ), ,, true, ), ,, deprecationInfo, ), ), ;, }, else, {, compiler, ., report, (, t]
[), ,, deprecationInfo, ), ), ;, }, else, {, compiler, ., report, (, t, ., makeError, (, n, ,, DEPRECATED_PROP]
[), ), ;, }, else, {, compiler, ., report, (, t, ., makeError, (, n, ,, DEPRECATED_PROP, ,, propertyName, ,]
[;, }, }, }, }, private, void, checkNameVisibility, (, NodeTraversal, t, ,, Node, name, ,, Node, parent, ), {, Var]
[., report, (, t, ., makeError, (, n, ,, DEPRECATED_PROP, ,, propertyName, ,, validator, ., getReadableJSTypeName, (, n, ., getFirstChild]
[), ;, }, }, }, }, private, void, checkNameVisibility, (, NodeTraversal, t, ,, Node, name, ,, Node, parent, ), {]
[., makeError, (, n, ,, DEPRECATED_PROP, ,, propertyName, ,, validator, ., getReadableJSTypeName, (, n, ., getFirstChild, (, ), ,, true]
[,, DEPRECATED_PROP, ,, propertyName, ,, validator, ., getReadableJSTypeName, (, n, ., getFirstChild, (, ), ,, true, ), ), ), ;]
[,, propertyName, ,, validator, ., getReadableJSTypeName, (, n, ., getFirstChild, (, ), ,, true, ), ), ), ;, }, }]
[,, validator, ., getReadableJSTypeName, (, n, ., getFirstChild, (, ), ,, true, ), ), ), ;, }, }, }, }]
[), ), ;, }, }, }, }, private, void, checkNameVisibility, (, NodeTraversal, t, ,, Node, name, ,, Node, parent, )]
[., getReadableJSTypeName, (, n, ., getFirstChild, (, ), ,, true, ), ), ), ;, }, }, }, }, private, void]
[,, true, ), ), ), ;, }, }, }, }, private, void, checkNameVisibility, (, NodeTraversal, t, ,, Node, name, ,]
[., getFirstChild, (, ), ,, true, ), ), ), ;, }, }, }, }, private, void, checkNameVisibility, (, NodeTraversal, t]
[), ), ), ;, }, }, }, }, private, void, checkNameVisibility, (, NodeTraversal, t, ,, Node, name, ,, Node, parent]
[;, if, (, var, !=, null, ), {, JSDocInfo, docInfo, =, var, ., getJSDocInfo, (, ), ;, if, (, docInfo]
[., getVar, (, name, ., getString, (, ), ), ;, if, (, var, !=, null, ), {, JSDocInfo, docInfo, =]
[., getScope, (, ), ., getVar, (, name, ., getString, (, ), ), ;, if, (, var, !=, null, )]
[), ;, if, (, var, !=, null, ), {, JSDocInfo, docInfo, =, var, ., getJSDocInfo, (, ), ;, if, (]
[., getString, (, ), ), ;, if, (, var, !=, null, ), {, JSDocInfo, docInfo, =, var, ., getJSDocInfo, (]
[), {, JSDocInfo, docInfo, =, var, ., getJSDocInfo, (, ), ;, if, (, docInfo, !=, null, ), {, Visibility, visibility]
[!=, null, ), {, JSDocInfo, docInfo, =, var, ., getJSDocInfo, (, ), ;, if, (, docInfo, !=, null, ), {]
[), {, JSDocInfo, docInfo, =, var, ., getJSDocInfo, (, ), ;, if, (, docInfo, !=, null, ), {, Visibility, visibility]
[;, if, (, docInfo, !=, null, ), {, Visibility, visibility, =, docInfo, ., getVisibility, (, ), ;, if, (, visibility]
[., getJSDocInfo, (, ), ;, if, (, docInfo, !=, null, ), {, Visibility, visibility, =, docInfo, ., getVisibility, (, )]
[), {, Visibility, visibility, =, docInfo, ., getVisibility, (, ), ;, if, (, visibility, ==, Visibility, ., PRIVATE, ), {]
[!=, null, ), {, Visibility, visibility, =, docInfo, ., getVisibility, (, ), ;, if, (, visibility, ==, Visibility, ., PRIVATE]
[), {, Visibility, visibility, =, docInfo, ., getVisibility, (, ), ;, if, (, visibility, ==, Visibility, ., PRIVATE, ), {]
[;, if, (, visibility, ==, Visibility, ., PRIVATE, ), {, StaticSourceFile, varSrc, =, var, ., getSourceFile, (, ), ;, StaticSourceFile]
[., getVisibility, (, ), ;, if, (, visibility, ==, Visibility, ., PRIVATE, ), {, StaticSourceFile, varSrc, =, var, ., getSourceFile]
[), {, StaticSourceFile, varSrc, =, var, ., getSourceFile, (, ), ;, StaticSourceFile, refSrc, =, name, ., getStaticSourceFile, (, ), ;]
[==, Visibility, ., PRIVATE, ), {, StaticSourceFile, varSrc, =, var, ., getSourceFile, (, ), ;, StaticSourceFile, refSrc, =, name, .]
[), {, StaticSourceFile, varSrc, =, var, ., getSourceFile, (, ), ;, StaticSourceFile, refSrc, =, name, ., getStaticSourceFile, (, ), ;]
[., PRIVATE, ), {, StaticSourceFile, varSrc, =, var, ., getSourceFile, (, ), ;, StaticSourceFile, refSrc, =, name, ., getStaticSourceFile, (]
[;, StaticSourceFile, refSrc, =, name, ., getStaticSourceFile, (, ), ;, if, (, varSrc, !=, null, &&, refSrc, !=, null, &&]
[., getSourceFile, (, ), ;, StaticSourceFile, refSrc, =, name, ., getStaticSourceFile, (, ), ;, if, (, varSrc, !=, null, &&]
[;, if, (, varSrc, !=, null, &&, refSrc, !=, null, &&, !, varSrc, ., getName, (, ), ., equals, (]
[., getStaticSourceFile, (, ), ;, if, (, varSrc, !=, null, &&, refSrc, !=, null, &&, !, varSrc, ., getName, (]
[), {, if, (, docInfo, ., isConstructor, (, ), &&, isValidPrivateConstructorAccess, (, parent, ), ), {, return, ;, }, compiler]
[&&, !, varSrc, ., getName, (, ), ., equals, (, refSrc, ., getName, (, ), ), ), {, if, (]
[&&, refSrc, !=, null, &&, !, varSrc, ., getName, (, ), ., equals, (, refSrc, ., getName, (, ), )]
[!=, null, &&, refSrc, !=, null, &&, !, varSrc, ., getName, (, ), ., equals, (, refSrc, ., getName, (]
[&&, refSrc, !=, null, &&, !, varSrc, ., getName, (, ), ., equals, (, refSrc, ., getName, (, ), )]
[&&, !, varSrc, ., getName, (, ), ., equals, (, refSrc, ., getName, (, ), ), ), {, if, (]
[!=, null, &&, !, varSrc, ., getName, (, ), ., equals, (, refSrc, ., getName, (, ), ), ), {]
[&&, !, varSrc, ., getName, (, ), ., equals, (, refSrc, ., getName, (, ), ), ), {, if, (]
[), {, if, (, docInfo, ., isConstructor, (, ), &&, isValidPrivateConstructorAccess, (, parent, ), ), {, return, ;, }, compiler]
[), {, if, (, docInfo, ., isConstructor, (, ), &&, isValidPrivateConstructorAccess, (, parent, ), ), {, return, ;, }, compiler]
[., equals, (, refSrc, ., getName, (, ), ), ), {, if, (, docInfo, ., isConstructor, (, ), &&, isValidPrivateConstructorAccess]
[., getName, (, ), ., equals, (, refSrc, ., getName, (, ), ), ), {, if, (, docInfo, ., isConstructor]
[), ), {, if, (, docInfo, ., isConstructor, (, ), &&, isValidPrivateConstructorAccess, (, parent, ), ), {, return, ;, }]
[., getName, (, ), ), ), {, if, (, docInfo, ., isConstructor, (, ), &&, isValidPrivateConstructorAccess, (, parent, ), )]
[), {, return, ;, }, compiler, ., report, (, t, ., makeError, (, name, ,, BAD_PRIVATE_GLOBAL_ACCESS, ,, name, ., getString]
[&&, isValidPrivateConstructorAccess, (, parent, ), ), {, return, ;, }, compiler, ., report, (, t, ., makeError, (, name, ,]
[., isConstructor, (, ), &&, isValidPrivateConstructorAccess, (, parent, ), ), {, return, ;, }, compiler, ., report, (, t, .]
[), {, return, ;, }, compiler, ., report, (, t, ., makeError, (, name, ,, BAD_PRIVATE_GLOBAL_ACCESS, ,, name, ., getString]
[), ), {, return, ;, }, compiler, ., report, (, t, ., makeError, (, name, ,, BAD_PRIVATE_GLOBAL_ACCESS, ,, name, .]
[;, }, }, }, }, }, private, void, checkFinalClassOverrides, (, NodeTraversal, t, ,, Node, fn, ,, Node, parent, ), {]
[., report, (, t, ., makeError, (, name, ,, BAD_PRIVATE_GLOBAL_ACCESS, ,, name, ., getString, (, ), ,, varSrc, ., getName]
[), ;, }, }, }, }, }, private, void, checkFinalClassOverrides, (, NodeTraversal, t, ,, Node, fn, ,, Node, parent, )]
[., makeError, (, name, ,, BAD_PRIVATE_GLOBAL_ACCESS, ,, name, ., getString, (, ), ,, varSrc, ., getName, (, ), ), )]
[,, BAD_PRIVATE_GLOBAL_ACCESS, ,, name, ., getString, (, ), ,, varSrc, ., getName, (, ), ), ), ;, }, }, }]
[,, name, ., getString, (, ), ,, varSrc, ., getName, (, ), ), ), ;, }, }, }, }, }]
[,, varSrc, ., getName, (, ), ), ), ;, }, }, }, }, }, private, void, checkFinalClassOverrides, (, NodeTraversal, t]
[., getString, (, ), ,, varSrc, ., getName, (, ), ), ), ;, }, }, }, }, }, private, void]
[), ), ;, }, }, }, }, }, private, void, checkFinalClassOverrides, (, NodeTraversal, t, ,, Node, fn, ,, Node, parent]
[., getName, (, ), ), ), ;, }, }, }, }, }, private, void, checkFinalClassOverrides, (, NodeTraversal, t, ,, Node]
[;, if, (, type, !=, null, &&, type, ., isConstructor, (, ), ), {, JSType, finalParentClass, =, getFinalParentClass, (, getClassOfMethod]
[., toMaybeFunctionType, (, ), ;, if, (, type, !=, null, &&, type, ., isConstructor, (, ), ), {, JSType, finalParentClass]
[., getJSType, (, ), ., toMaybeFunctionType, (, ), ;, if, (, type, !=, null, &&, type, ., isConstructor, (, )]
[), {, JSType, finalParentClass, =, getFinalParentClass, (, getClassOfMethod, (, fn, ,, parent, ), ), ;, if, (, finalParentClass, !=, null]
[&&, type, ., isConstructor, (, ), ), {, JSType, finalParentClass, =, getFinalParentClass, (, getClassOfMethod, (, fn, ,, parent, ), )]
[!=, null, &&, type, ., isConstructor, (, ), ), {, JSType, finalParentClass, =, getFinalParentClass, (, getClassOfMethod, (, fn, ,, parent]
[&&, type, ., isConstructor, (, ), ), {, JSType, finalParentClass, =, getFinalParentClass, (, getClassOfMethod, (, fn, ,, parent, ), )]
[), {, JSType, finalParentClass, =, getFinalParentClass, (, getClassOfMethod, (, fn, ,, parent, ), ), ;, if, (, finalParentClass, !=, null]
[., isConstructor, (, ), ), {, JSType, finalParentClass, =, getFinalParentClass, (, getClassOfMethod, (, fn, ,, parent, ), ), ;, if]
[;, if, (, finalParentClass, !=, null, ), {, compiler, ., report, (, t, ., makeError, (, fn, ,, EXTEND_FINAL_CLASS, ,]
[), ;, if, (, finalParentClass, !=, null, ), {, compiler, ., report, (, t, ., makeError, (, fn, ,, EXTEND_FINAL_CLASS]
[,, parent, ), ), ;, if, (, finalParentClass, !=, null, ), {, compiler, ., report, (, t, ., makeError, (]
[), ), ;, if, (, finalParentClass, !=, null, ), {, compiler, ., report, (, t, ., makeError, (, fn, ,]
[), {, compiler, ., report, (, t, ., makeError, (, fn, ,, EXTEND_FINAL_CLASS, ,, type, ., getDisplayName, (, ), ,]
[!=, null, ), {, compiler, ., report, (, t, ., makeError, (, fn, ,, EXTEND_FINAL_CLASS, ,, type, ., getDisplayName, (]
[), {, compiler, ., report, (, t, ., makeError, (, fn, ,, EXTEND_FINAL_CLASS, ,, type, ., getDisplayName, (, ), ,]
[;, }, }, }, private, void, checkConstantProperty, (, NodeTraversal, t, ,, Node, getprop, ), {, Node, parent, =, getprop, .]
[., report, (, t, ., makeError, (, fn, ,, EXTEND_FINAL_CLASS, ,, type, ., getDisplayName, (, ), ,, finalParentClass, ., getDisplayName]
[), ;, }, }, }, private, void, checkConstantProperty, (, NodeTraversal, t, ,, Node, getprop, ), {, Node, parent, =, getprop]
[., makeError, (, fn, ,, EXTEND_FINAL_CLASS, ,, type, ., getDisplayName, (, ), ,, finalParentClass, ., getDisplayName, (, ), ), )]
[,, EXTEND_FINAL_CLASS, ,, type, ., getDisplayName, (, ), ,, finalParentClass, ., getDisplayName, (, ), ), ), ;, }, }, }]
[,, type, ., getDisplayName, (, ), ,, finalParentClass, ., getDisplayName, (, ), ), ), ;, }, }, }, private, void]
[,, finalParentClass, ., getDisplayName, (, ), ), ), ;, }, }, }, private, void, checkConstantProperty, (, NodeTraversal, t, ,, Node]
[., getDisplayName, (, ), ,, finalParentClass, ., getDisplayName, (, ), ), ), ;, }, }, }, private, void, checkConstantProperty, (]
[), ), ;, }, }, }, private, void, checkConstantProperty, (, NodeTraversal, t, ,, Node, getprop, ), {, Node, parent, =]
[., getDisplayName, (, ), ), ), ;, }, }, }, private, void, checkConstantProperty, (, NodeTraversal, t, ,, Node, getprop, )]
[;, boolean, isDelete, =, parent, ., isDelProp, (, ), ;, if, (, !, (, NodeUtil, ., isAssignmentOp, (, parent, )]
[., getParent, (, ), ;, boolean, isDelete, =, parent, ., isDelProp, (, ), ;, if, (, !, (, NodeUtil, .]
[;, if, (, !, (, NodeUtil, ., isAssignmentOp, (, parent, ), &&, parent, ., getFirstChild, (, ), ==, getprop, )]
[., isDelProp, (, ), ;, if, (, !, (, NodeUtil, ., isAssignmentOp, (, parent, ), &&, parent, ., getFirstChild, (]
[), {, return, ;, }, ObjectType, objectType, =, ObjectType, ., cast, (, dereference, (, getprop, ., getFirstChild, (, ), .]
[&&, !, isDelete, ), {, return, ;, }, ObjectType, objectType, =, ObjectType, ., cast, (, dereference, (, getprop, ., getFirstChild]
[&&, !, parent, ., isDec, (, ), &&, !, isDelete, ), {, return, ;, }, ObjectType, objectType, =, ObjectType, .]
[&&, !, parent, ., isInc, (, ), &&, !, parent, ., isDec, (, ), &&, !, isDelete, ), {, return]
[&&, !, parent, ., isInc, (, ), &&, !, parent, ., isDec, (, ), &&, !, isDelete, ), {, return]
[), &&, !, parent, ., isInc, (, ), &&, !, parent, ., isDec, (, ), &&, !, isDelete, ), {]
[&&, parent, ., getFirstChild, (, ), ==, getprop, ), &&, !, parent, ., isInc, (, ), &&, !, parent, .]
[., isAssignmentOp, (, parent, ), &&, parent, ., getFirstChild, (, ), ==, getprop, ), &&, !, parent, ., isInc, (]
[), &&, parent, ., getFirstChild, (, ), ==, getprop, ), &&, !, parent, ., isInc, (, ), &&, !, parent]
[), &&, !, parent, ., isInc, (, ), &&, !, parent, ., isDec, (, ), &&, !, isDelete, ), {]
[==, getprop, ), &&, !, parent, ., isInc, (, ), &&, !, parent, ., isDec, (, ), &&, !, isDelete]
[., getFirstChild, (, ), ==, getprop, ), &&, !, parent, ., isInc, (, ), &&, !, parent, ., isDec, (]
[), &&, !, parent, ., isInc, (, ), &&, !, parent, ., isDec, (, ), &&, !, isDelete, ), {]
[&&, !, parent, ., isDec, (, ), &&, !, isDelete, ), {, return, ;, }, ObjectType, objectType, =, ObjectType, .]
[&&, !, parent, ., isDec, (, ), &&, !, isDelete, ), {, return, ;, }, ObjectType, objectType, =, ObjectType, .]
[., isInc, (, ), &&, !, parent, ., isDec, (, ), &&, !, isDelete, ), {, return, ;, }, ObjectType]
[&&, !, isDelete, ), {, return, ;, }, ObjectType, objectType, =, ObjectType, ., cast, (, dereference, (, getprop, ., getFirstChild]
[&&, !, isDelete, ), {, return, ;, }, ObjectType, objectType, =, ObjectType, ., cast, (, dereference, (, getprop, ., getFirstChild]
[., isDec, (, ), &&, !, isDelete, ), {, return, ;, }, ObjectType, objectType, =, ObjectType, ., cast, (, dereference]
[), {, return, ;, }, ObjectType, objectType, =, ObjectType, ., cast, (, dereference, (, getprop, ., getFirstChild, (, ), .]
[), {, return, ;, }, ObjectType, objectType, =, ObjectType, ., cast, (, dereference, (, getprop, ., getFirstChild, (, ), .]
[;, String, propertyName, =, getprop, ., getLastChild, (, ), ., getString, (, ), ;, boolean, isConstant, =, isPropertyDeclaredConstant, (, objectType]
[., cast, (, dereference, (, getprop, ., getFirstChild, (, ), ., getJSType, (, ), ), ), ;, String, propertyName, =]
[), ;, String, propertyName, =, getprop, ., getLastChild, (, ), ., getString, (, ), ;, boolean, isConstant, =, isPropertyDeclaredConstant, (]
[), ), ;, String, propertyName, =, getprop, ., getLastChild, (, ), ., getString, (, ), ;, boolean, isConstant, =, isPropertyDeclaredConstant]
[., getJSType, (, ), ), ), ;, String, propertyName, =, getprop, ., getLastChild, (, ), ., getString, (, ), ;]
[., getFirstChild, (, ), ., getJSType, (, ), ), ), ;, String, propertyName, =, getprop, ., getLastChild, (, ), .]
[;, boolean, isConstant, =, isPropertyDeclaredConstant, (, objectType, ,, propertyName, ), ;, if, (, isConstant, ), {, if, (, isDelete, )]
[., getString, (, ), ;, boolean, isConstant, =, isPropertyDeclaredConstant, (, objectType, ,, propertyName, ), ;, if, (, isConstant, ), {]
[., getLastChild, (, ), ., getString, (, ), ;, boolean, isConstant, =, isPropertyDeclaredConstant, (, objectType, ,, propertyName, ), ;, if]
[;, if, (, isConstant, ), {, if, (, isDelete, ), {, compiler, ., report, (, t, ., makeError, (, getprop]
[,, propertyName, ), ;, if, (, isConstant, ), {, if, (, isDelete, ), {, compiler, ., report, (, t, .]
[), ;, if, (, isConstant, ), {, if, (, isDelete, ), {, compiler, ., report, (, t, ., makeError, (]
[), {, if, (, isDelete, ), {, compiler, ., report, (, t, ., makeError, (, getprop, ,, CONST_PROPERTY_DELETED, ,, propertyName]
[), {, compiler, ., report, (, t, ., makeError, (, getprop, ,, CONST_PROPERTY_DELETED, ,, propertyName, ), ), ;, return, ;]
[;, return, ;, }, ObjectType, oType, =, objectType, ;, while, (, oType, !=, null, ), {, if, (, oType, .]
[., report, (, t, ., makeError, (, getprop, ,, CONST_PROPERTY_DELETED, ,, propertyName, ), ), ;, return, ;, }, ObjectType, oType]
[), ;, return, ;, }, ObjectType, oType, =, objectType, ;, while, (, oType, !=, null, ), {, if, (, oType]
[., makeError, (, getprop, ,, CONST_PROPERTY_DELETED, ,, propertyName, ), ), ;, return, ;, }, ObjectType, oType, =, objectType, ;, while]
[,, CONST_PROPERTY_DELETED, ,, propertyName, ), ), ;, return, ;, }, ObjectType, oType, =, objectType, ;, while, (, oType, !=, null]
[,, propertyName, ), ), ;, return, ;, }, ObjectType, oType, =, objectType, ;, while, (, oType, !=, null, ), {]
[), ), ;, return, ;, }, ObjectType, oType, =, objectType, ;, while, (, oType, !=, null, ), {, if, (]
[;, while, (, oType, !=, null, ), {, if, (, oType, ., hasReferenceName, (, ), ), {, if, (, initializedConstantProperties]
[), {, if, (, oType, ., hasReferenceName, (, ), ), {, if, (, initializedConstantProperties, ., containsEntry, (, oType, ., getReferenceName]
[!=, null, ), {, if, (, oType, ., hasReferenceName, (, ), ), {, if, (, initializedConstantProperties, ., containsEntry, (, oType]
[), {, if, (, oType, ., hasReferenceName, (, ), ), {, if, (, initializedConstantProperties, ., containsEntry, (, oType, ., getReferenceName]
[), {, if, (, initializedConstantProperties, ., containsEntry, (, oType, ., getReferenceName, (, ), ,, propertyName, ), ), {, compiler, .]
[., hasReferenceName, (, ), ), {, if, (, initializedConstantProperties, ., containsEntry, (, oType, ., getReferenceName, (, ), ,, propertyName, )]
[), {, compiler, ., report, (, t, ., makeError, (, getprop, ,, CONST_PROPERTY_REASSIGNED_VALUE, ,, propertyName, ), ), ;, break, ;]
[., containsEntry, (, oType, ., getReferenceName, (, ), ,, propertyName, ), ), {, compiler, ., report, (, t, ., makeError]
[,, propertyName, ), ), {, compiler, ., report, (, t, ., makeError, (, getprop, ,, CONST_PROPERTY_REASSIGNED_VALUE, ,, propertyName, ), )]
[., getReferenceName, (, ), ,, propertyName, ), ), {, compiler, ., report, (, t, ., makeError, (, getprop, ,, CONST_PROPERTY_REASSIGNED_VALUE]
[), ), {, compiler, ., report, (, t, ., makeError, (, getprop, ,, CONST_PROPERTY_REASSIGNED_VALUE, ,, propertyName, ), ), ;, break]
[;, break, ;, }, }, oType, =, oType, ., getImplicitPrototype, (, ), ;, }, Preconditions, ., checkState, (, objectType, .]
[., report, (, t, ., makeError, (, getprop, ,, CONST_PROPERTY_REASSIGNED_VALUE, ,, propertyName, ), ), ;, break, ;, }, }, oType]
[), ;, break, ;, }, }, oType, =, oType, ., getImplicitPrototype, (, ), ;, }, Preconditions, ., checkState, (, objectType]
[., makeError, (, getprop, ,, CONST_PROPERTY_REASSIGNED_VALUE, ,, propertyName, ), ), ;, break, ;, }, }, oType, =, oType, ., getImplicitPrototype]
[,, CONST_PROPERTY_REASSIGNED_VALUE, ,, propertyName, ), ), ;, break, ;, }, }, oType, =, oType, ., getImplicitPrototype, (, ), ;, }]
[,, propertyName, ), ), ;, break, ;, }, }, oType, =, oType, ., getImplicitPrototype, (, ), ;, }, Preconditions, .]
[), ), ;, break, ;, }, }, oType, =, oType, ., getImplicitPrototype, (, ), ;, }, Preconditions, ., checkState, (]
[=, oType, ., getImplicitPrototype, (, ), ;, }, Preconditions, ., checkState, (, objectType, ., hasReferenceName, (, ), ), ;, initializedConstantProperties]
[;, }, Preconditions, ., checkState, (, objectType, ., hasReferenceName, (, ), ), ;, initializedConstantProperties, ., put, (, objectType, ., getReferenceName]
[., getImplicitPrototype, (, ), ;, }, Preconditions, ., checkState, (, objectType, ., hasReferenceName, (, ), ), ;, initializedConstantProperties, ., put]
[;, initializedConstantProperties, ., put, (, objectType, ., getReferenceName, (, ), ,, propertyName, ), ;, if, (, objectType, ., isInstanceType, (]
[., checkState, (, objectType, ., hasReferenceName, (, ), ), ;, initializedConstantProperties, ., put, (, objectType, ., getReferenceName, (, ), ,]
[), ;, initializedConstantProperties, ., put, (, objectType, ., getReferenceName, (, ), ,, propertyName, ), ;, if, (, objectType, ., isInstanceType]
[., hasReferenceName, (, ), ), ;, initializedConstantProperties, ., put, (, objectType, ., getReferenceName, (, ), ,, propertyName, ), ;, if]
[;, if, (, objectType, ., isInstanceType, (, ), ), {, ObjectType, prototype, =, objectType, ., getImplicitPrototype, (, ), ;, if]
[., put, (, objectType, ., getReferenceName, (, ), ,, propertyName, ), ;, if, (, objectType, ., isInstanceType, (, ), )]
[,, propertyName, ), ;, if, (, objectType, ., isInstanceType, (, ), ), {, ObjectType, prototype, =, objectType, ., getImplicitPrototype, (]
[., getReferenceName, (, ), ,, propertyName, ), ;, if, (, objectType, ., isInstanceType, (, ), ), {, ObjectType, prototype, =]
[), ;, if, (, objectType, ., isInstanceType, (, ), ), {, ObjectType, prototype, =, objectType, ., getImplicitPrototype, (, ), ;]
[), {, ObjectType, prototype, =, objectType, ., getImplicitPrototype, (, ), ;, if, (, prototype, !=, null, ), {, if, (]
[., isInstanceType, (, ), ), {, ObjectType, prototype, =, objectType, ., getImplicitPrototype, (, ), ;, if, (, prototype, !=, null]
[;, if, (, prototype, !=, null, ), {, if, (, prototype, ., hasProperty, (, propertyName, ), &&, prototype, ., hasReferenceName]
[., getImplicitPrototype, (, ), ;, if, (, prototype, !=, null, ), {, if, (, prototype, ., hasProperty, (, propertyName, )]
[), {, if, (, prototype, ., hasProperty, (, propertyName, ), &&, prototype, ., hasReferenceName, (, ), ), {, initializedConstantProperties, .]
[!=, null, ), {, if, (, prototype, ., hasProperty, (, propertyName, ), &&, prototype, ., hasReferenceName, (, ), ), {]
[), {, if, (, prototype, ., hasProperty, (, propertyName, ), &&, prototype, ., hasReferenceName, (, ), ), {, initializedConstantProperties, .]
[), {, initializedConstantProperties, ., put, (, prototype, ., getReferenceName, (, ), ,, propertyName, ), ;, }, }, }, }, }]
[&&, prototype, ., hasReferenceName, (, ), ), {, initializedConstantProperties, ., put, (, prototype, ., getReferenceName, (, ), ,, propertyName, )]
[., hasProperty, (, propertyName, ), &&, prototype, ., hasReferenceName, (, ), ), {, initializedConstantProperties, ., put, (, prototype, ., getReferenceName]
[), &&, prototype, ., hasReferenceName, (, ), ), {, initializedConstantProperties, ., put, (, prototype, ., getReferenceName, (, ), ,, propertyName]
[), {, initializedConstantProperties, ., put, (, prototype, ., getReferenceName, (, ), ,, propertyName, ), ;, }, }, }, }, }]
[., hasReferenceName, (, ), ), {, initializedConstantProperties, ., put, (, prototype, ., getReferenceName, (, ), ,, propertyName, ), ;, }]
[;, }, }, }, }, }, private, void, checkPropertyVisibility, (, NodeTraversal, t, ,, Node, getprop, ,, Node, parent, ), {]
[., put, (, prototype, ., getReferenceName, (, ), ,, propertyName, ), ;, }, }, }, }, }, private, void, checkPropertyVisibility]
[,, propertyName, ), ;, }, }, }, }, }, private, void, checkPropertyVisibility, (, NodeTraversal, t, ,, Node, getprop, ,, Node]
[., getReferenceName, (, ), ,, propertyName, ), ;, }, }, }, }, }, private, void, checkPropertyVisibility, (, NodeTraversal, t, ,]
[), ;, }, }, }, }, }, private, void, checkPropertyVisibility, (, NodeTraversal, t, ,, Node, getprop, ,, Node, parent, )]
[;, String, propertyName, =, getprop, ., getLastChild, (, ), ., getString, (, ), ;, if, (, objectType, !=, null, )]
[., cast, (, dereference, (, getprop, ., getFirstChild, (, ), ., getJSType, (, ), ), ), ;, String, propertyName, =]
[), ;, String, propertyName, =, getprop, ., getLastChild, (, ), ., getString, (, ), ;, if, (, objectType, !=, null]
[), ), ;, String, propertyName, =, getprop, ., getLastChild, (, ), ., getString, (, ), ;, if, (, objectType, !=]
[., getJSType, (, ), ), ), ;, String, propertyName, =, getprop, ., getLastChild, (, ), ., getString, (, ), ;]
[., getFirstChild, (, ), ., getJSType, (, ), ), ), ;, String, propertyName, =, getprop, ., getLastChild, (, ), .]
[;, if, (, objectType, !=, null, ), {, boolean, isOverride, =, parent, ., getJSDocInfo, (, ), !=, null, &&, parent]
[., getString, (, ), ;, if, (, objectType, !=, null, ), {, boolean, isOverride, =, parent, ., getJSDocInfo, (, )]
[., getLastChild, (, ), ., getString, (, ), ;, if, (, objectType, !=, null, ), {, boolean, isOverride, =, parent]
[), {, boolean, isOverride, =, parent, ., getJSDocInfo, (, ), !=, null, &&, parent, ., isAssign, (, ), &&, parent]
[!=, null, ), {, boolean, isOverride, =, parent, ., getJSDocInfo, (, ), !=, null, &&, parent, ., isAssign, (, )]
[), {, boolean, isOverride, =, parent, ., getJSDocInfo, (, ), !=, null, &&, parent, ., isAssign, (, ), &&, parent]
[;, if, (, isOverride, ), {, objectType, =, objectType, ., getImplicitPrototype, (, ), ;, }, JSDocInfo, docInfo, =, null, ;]
[&&, parent, ., getFirstChild, (, ), ==, getprop, ;, if, (, isOverride, ), {, objectType, =, objectType, ., getImplicitPrototype, (]
[&&, parent, ., isAssign, (, ), &&, parent, ., getFirstChild, (, ), ==, getprop, ;, if, (, isOverride, ), {]
[!=, null, &&, parent, ., isAssign, (, ), &&, parent, ., getFirstChild, (, ), ==, getprop, ;, if, (, isOverride]
[., getJSDocInfo, (, ), !=, null, &&, parent, ., isAssign, (, ), &&, parent, ., getFirstChild, (, ), ==, getprop]
[&&, parent, ., isAssign, (, ), &&, parent, ., getFirstChild, (, ), ==, getprop, ;, if, (, isOverride, ), {]
[&&, parent, ., getFirstChild, (, ), ==, getprop, ;, if, (, isOverride, ), {, objectType, =, objectType, ., getImplicitPrototype, (]
[., isAssign, (, ), &&, parent, ., getFirstChild, (, ), ==, getprop, ;, if, (, isOverride, ), {, objectType, =]
[;, if, (, isOverride, ), {, objectType, =, objectType, ., getImplicitPrototype, (, ), ;, }, JSDocInfo, docInfo, =, null, ;]
[==, getprop, ;, if, (, isOverride, ), {, objectType, =, objectType, ., getImplicitPrototype, (, ), ;, }, JSDocInfo, docInfo, =]
[., getFirstChild, (, ), ==, getprop, ;, if, (, isOverride, ), {, objectType, =, objectType, ., getImplicitPrototype, (, ), ;]
[;, if, (, isOverride, ), {, objectType, =, objectType, ., getImplicitPrototype, (, ), ;, }, JSDocInfo, docInfo, =, null, ;]
[), {, objectType, =, objectType, ., getImplicitPrototype, (, ), ;, }, JSDocInfo, docInfo, =, null, ;, for, (, ;, objectType]
[=, objectType, ., getImplicitPrototype, (, ), ;, }, JSDocInfo, docInfo, =, null, ;, for, (, ;, objectType, !=, null, ;]
[;, }, JSDocInfo, docInfo, =, null, ;, for, (, ;, objectType, !=, null, ;, objectType, =, objectType, ., getImplicitPrototype, (]
[., getImplicitPrototype, (, ), ;, }, JSDocInfo, docInfo, =, null, ;, for, (, ;, objectType, !=, null, ;, objectType, =]
[;, for, (, ;, objectType, !=, null, ;, objectType, =, objectType, ., getImplicitPrototype, (, ), ), {, docInfo, =, objectType]
[;, objectType, =, objectType, ., getImplicitPrototype, (, ), ), {, docInfo, =, objectType, ., getOwnPropertyJSDocInfo, (, propertyName, ), ;, if]
[!=, null, ;, objectType, =, objectType, ., getImplicitPrototype, (, ), ), {, docInfo, =, objectType, ., getOwnPropertyJSDocInfo, (, propertyName, )]
[;, objectType, =, objectType, ., getImplicitPrototype, (, ), ), {, docInfo, =, objectType, ., getOwnPropertyJSDocInfo, (, propertyName, ), ;, if]
[=, objectType, ., getImplicitPrototype, (, ), ), {, docInfo, =, objectType, ., getOwnPropertyJSDocInfo, (, propertyName, ), ;, if, (, docInfo]
[), {, docInfo, =, objectType, ., getOwnPropertyJSDocInfo, (, propertyName, ), ;, if, (, docInfo, !=, null, &&, docInfo, ., getVisibility]
[., getImplicitPrototype, (, ), ), {, docInfo, =, objectType, ., getOwnPropertyJSDocInfo, (, propertyName, ), ;, if, (, docInfo, !=, null]
[=, objectType, ., getOwnPropertyJSDocInfo, (, propertyName, ), ;, if, (, docInfo, !=, null, &&, docInfo, ., getVisibility, (, ), !=]
[;, if, (, docInfo, !=, null, &&, docInfo, ., getVisibility, (, ), !=, Visibility, ., INHERITED, ), {, break, ;]
[., getOwnPropertyJSDocInfo, (, propertyName, ), ;, if, (, docInfo, !=, null, &&, docInfo, ., getVisibility, (, ), !=, Visibility, .]
[), ;, if, (, docInfo, !=, null, &&, docInfo, ., getVisibility, (, ), !=, Visibility, ., INHERITED, ), {, break]
[), {, break, ;, }, }, if, (, objectType, ==, null, ), {, return, ;, }, String, referenceSource, =, getprop]
[&&, docInfo, ., getVisibility, (, ), !=, Visibility, ., INHERITED, ), {, break, ;, }, }, if, (, objectType, ==]
[!=, null, &&, docInfo, ., getVisibility, (, ), !=, Visibility, ., INHERITED, ), {, break, ;, }, }, if, (]
[&&, docInfo, ., getVisibility, (, ), !=, Visibility, ., INHERITED, ), {, break, ;, }, }, if, (, objectType, ==]
[), {, break, ;, }, }, if, (, objectType, ==, null, ), {, return, ;, }, String, referenceSource, =, getprop]
[!=, Visibility, ., INHERITED, ), {, break, ;, }, }, if, (, objectType, ==, null, ), {, return, ;, }]
[., getVisibility, (, ), !=, Visibility, ., INHERITED, ), {, break, ;, }, }, if, (, objectType, ==, null, )]
[), {, break, ;, }, }, if, (, objectType, ==, null, ), {, return, ;, }, String, referenceSource, =, getprop]
[., INHERITED, ), {, break, ;, }, }, if, (, objectType, ==, null, ), {, return, ;, }, String, referenceSource]
[), {, return, ;, }, String, referenceSource, =, getprop, ., getSourceFileName, (, ), ;, String, definingSource, =, docInfo, ., getSourceName]
[==, null, ), {, return, ;, }, String, referenceSource, =, getprop, ., getSourceFileName, (, ), ;, String, definingSource, =, docInfo]
[), {, return, ;, }, String, referenceSource, =, getprop, ., getSourceFileName, (, ), ;, String, definingSource, =, docInfo, ., getSourceName]
[;, String, definingSource, =, docInfo, ., getSourceName, (, ), ;, boolean, sameInput, =, referenceSource, !=, null, &&, referenceSource, ., equals]
[., getSourceFileName, (, ), ;, String, definingSource, =, docInfo, ., getSourceName, (, ), ;, boolean, sameInput, =, referenceSource, !=, null]
[;, boolean, sameInput, =, referenceSource, !=, null, &&, referenceSource, ., equals, (, definingSource, ), ;, Visibility, visibility, =, docInfo, .]
[., getSourceName, (, ), ;, boolean, sameInput, =, referenceSource, !=, null, &&, referenceSource, ., equals, (, definingSource, ), ;, Visibility]
[;, Visibility, visibility, =, docInfo, ., getVisibility, (, ), ;, JSType, ownerType, =, normalizeClassType, (, objectType, ), ;, if, (]
[&&, referenceSource, ., equals, (, definingSource, ), ;, Visibility, visibility, =, docInfo, ., getVisibility, (, ), ;, JSType, ownerType, =]
[!=, null, &&, referenceSource, ., equals, (, definingSource, ), ;, Visibility, visibility, =, docInfo, ., getVisibility, (, ), ;, JSType]
[&&, referenceSource, ., equals, (, definingSource, ), ;, Visibility, visibility, =, docInfo, ., getVisibility, (, ), ;, JSType, ownerType, =]
[;, Visibility, visibility, =, docInfo, ., getVisibility, (, ), ;, JSType, ownerType, =, normalizeClassType, (, objectType, ), ;, if, (]
[., equals, (, definingSource, ), ;, Visibility, visibility, =, docInfo, ., getVisibility, (, ), ;, JSType, ownerType, =, normalizeClassType, (]
[), ;, Visibility, visibility, =, docInfo, ., getVisibility, (, ), ;, JSType, ownerType, =, normalizeClassType, (, objectType, ), ;, if]
[;, JSType, ownerType, =, normalizeClassType, (, objectType, ), ;, if, (, isOverride, ), {, JSDocInfo, overridingInfo, =, parent, ., getJSDocInfo]
[., getVisibility, (, ), ;, JSType, ownerType, =, normalizeClassType, (, objectType, ), ;, if, (, isOverride, ), {, JSDocInfo, overridingInfo]
[;, if, (, isOverride, ), {, JSDocInfo, overridingInfo, =, parent, ., getJSDocInfo, (, ), ;, Visibility, overridingVisibility, =, overridingInfo, ==]
[), ;, if, (, isOverride, ), {, JSDocInfo, overridingInfo, =, parent, ., getJSDocInfo, (, ), ;, Visibility, overridingVisibility, =, overridingInfo]
[), {, JSDocInfo, overridingInfo, =, parent, ., getJSDocInfo, (, ), ;, Visibility, overridingVisibility, =, overridingInfo, ==, null, ?, Visibility, .]
[;, Visibility, overridingVisibility, =, overridingInfo, ==, null, ?, Visibility, ., INHERITED, :, overridingInfo, ., getVisibility, (, ), ;, if, (]
[., getJSDocInfo, (, ), ;, Visibility, overridingVisibility, =, overridingInfo, ==, null, ?, Visibility, ., INHERITED, :, overridingInfo, ., getVisibility, (]
[;, if, (, visibility, ==, Visibility, ., PRIVATE, &&, !, sameInput, ), {, compiler, ., report, (, t, ., makeError]
[?, Visibility, ., INHERITED, :, overridingInfo, ., getVisibility, (, ), ;, if, (, visibility, ==, Visibility, ., PRIVATE, &&, !]
[==, null, ?, Visibility, ., INHERITED, :, overridingInfo, ., getVisibility, (, ), ;, if, (, visibility, ==, Visibility, ., PRIVATE]
[?, Visibility, ., INHERITED, :, overridingInfo, ., getVisibility, (, ), ;, if, (, visibility, ==, Visibility, ., PRIVATE, &&, !]
[:, overridingInfo, ., getVisibility, (, ), ;, if, (, visibility, ==, Visibility, ., PRIVATE, &&, !, sameInput, ), {, compiler]
[., INHERITED, :, overridingInfo, ., getVisibility, (, ), ;, if, (, visibility, ==, Visibility, ., PRIVATE, &&, !, sameInput, )]
[;, if, (, visibility, ==, Visibility, ., PRIVATE, &&, !, sameInput, ), {, compiler, ., report, (, t, ., makeError]
[., getVisibility, (, ), ;, if, (, visibility, ==, Visibility, ., PRIVATE, &&, !, sameInput, ), {, compiler, ., report]
[), {, compiler, ., report, (, t, ., makeError, (, getprop, ,, PRIVATE_OVERRIDE, ,, objectType, ., toString, (, ), )]
[&&, !, sameInput, ), {, compiler, ., report, (, t, ., makeError, (, getprop, ,, PRIVATE_OVERRIDE, ,, objectType, ., toString]
[==, Visibility, ., PRIVATE, &&, !, sameInput, ), {, compiler, ., report, (, t, ., makeError, (, getprop, ,, PRIVATE_OVERRIDE]
[&&, !, sameInput, ), {, compiler, ., report, (, t, ., makeError, (, getprop, ,, PRIVATE_OVERRIDE, ,, objectType, ., toString]
[., PRIVATE, &&, !, sameInput, ), {, compiler, ., report, (, t, ., makeError, (, getprop, ,, PRIVATE_OVERRIDE, ,, objectType]
[), {, compiler, ., report, (, t, ., makeError, (, getprop, ,, PRIVATE_OVERRIDE, ,, objectType, ., toString, (, ), )]
[), {, compiler, ., report, (, t, ., makeError, (, getprop, ,, PRIVATE_OVERRIDE, ,, objectType, ., toString, (, ), )]
[;, }, else, if, (, overridingVisibility, !=, Visibility, ., INHERITED, &&, overridingVisibility, !=, visibility, ), {, compiler, ., report, (]
[., report, (, t, ., makeError, (, getprop, ,, PRIVATE_OVERRIDE, ,, objectType, ., toString, (, ), ), ), ;, }]
[), ;, }, else, if, (, overridingVisibility, !=, Visibility, ., INHERITED, &&, overridingVisibility, !=, visibility, ), {, compiler, ., report]
[., makeError, (, getprop, ,, PRIVATE_OVERRIDE, ,, objectType, ., toString, (, ), ), ), ;, }, else, if, (, overridingVisibility]
[,, PRIVATE_OVERRIDE, ,, objectType, ., toString, (, ), ), ), ;, }, else, if, (, overridingVisibility, !=, Visibility, ., INHERITED]
[,, objectType, ., toString, (, ), ), ), ;, }, else, if, (, overridingVisibility, !=, Visibility, ., INHERITED, &&, overridingVisibility]
[), ), ;, }, else, if, (, overridingVisibility, !=, Visibility, ., INHERITED, &&, overridingVisibility, !=, visibility, ), {, compiler, .]
[., toString, (, ), ), ), ;, }, else, if, (, overridingVisibility, !=, Visibility, ., INHERITED, &&, overridingVisibility, !=, visibility]
[), {, compiler, ., report, (, t, ., makeError, (, getprop, ,, VISIBILITY_MISMATCH, ,, visibility, ., name, (, ), ,]
[&&, overridingVisibility, !=, visibility, ), {, compiler, ., report, (, t, ., makeError, (, getprop, ,, VISIBILITY_MISMATCH, ,, visibility, .]
[!=, Visibility, ., INHERITED, &&, overridingVisibility, !=, visibility, ), {, compiler, ., report, (, t, ., makeError, (, getprop, ,]
[&&, overridingVisibility, !=, visibility, ), {, compiler, ., report, (, t, ., makeError, (, getprop, ,, VISIBILITY_MISMATCH, ,, visibility, .]
[., INHERITED, &&, overridingVisibility, !=, visibility, ), {, compiler, ., report, (, t, ., makeError, (, getprop, ,, VISIBILITY_MISMATCH, ,]
[), {, compiler, ., report, (, t, ., makeError, (, getprop, ,, VISIBILITY_MISMATCH, ,, visibility, ., name, (, ), ,]
[!=, visibility, ), {, compiler, ., report, (, t, ., makeError, (, getprop, ,, VISIBILITY_MISMATCH, ,, visibility, ., name, (]
[), {, compiler, ., report, (, t, ., makeError, (, getprop, ,, VISIBILITY_MISMATCH, ,, visibility, ., name, (, ), ,]
[;, }, }, else, {, if, (, sameInput, ), {, return, ;, }, else, if, (, visibility, ==, Visibility, .]
[., report, (, t, ., makeError, (, getprop, ,, VISIBILITY_MISMATCH, ,, visibility, ., name, (, ), ,, objectType, ., toString]
[), ;, }, }, else, {, if, (, sameInput, ), {, return, ;, }, else, if, (, visibility, ==, Visibility]
[., makeError, (, getprop, ,, VISIBILITY_MISMATCH, ,, visibility, ., name, (, ), ,, objectType, ., toString, (, ), ,, overridingVisibility]
[,, VISIBILITY_MISMATCH, ,, visibility, ., name, (, ), ,, objectType, ., toString, (, ), ,, overridingVisibility, ., name, (, )]
[,, visibility, ., name, (, ), ,, objectType, ., toString, (, ), ,, overridingVisibility, ., name, (, ), ), )]
[,, objectType, ., toString, (, ), ,, overridingVisibility, ., name, (, ), ), ), ;, }, }, else, {, if]
[., name, (, ), ,, objectType, ., toString, (, ), ,, overridingVisibility, ., name, (, ), ), ), ;, }]
[,, overridingVisibility, ., name, (, ), ), ), ;, }, }, else, {, if, (, sameInput, ), {, return, ;]
[., toString, (, ), ,, overridingVisibility, ., name, (, ), ), ), ;, }, }, else, {, if, (, sameInput]
[), ), ;, }, }, else, {, if, (, sameInput, ), {, return, ;, }, else, if, (, visibility, ==]
[., name, (, ), ), ), ;, }, }, else, {, if, (, sameInput, ), {, return, ;, }, else]
[), {, return, ;, }, else, if, (, visibility, ==, Visibility, ., PRIVATE, &&, (, currentClass, ==, null, ||, !]
[), {, if, (, docInfo, ., isConstructor, (, ), &&, isValidPrivateConstructorAccess, (, parent, ), ), {, return, ;, }, compiler]
[&&, (, currentClass, ==, null, ||, !, ownerType, ., isEquivalentTo, (, currentClass, ), ), ), {, if, (, docInfo, .]
[==, Visibility, ., PRIVATE, &&, (, currentClass, ==, null, ||, !, ownerType, ., isEquivalentTo, (, currentClass, ), ), ), {]
[&&, (, currentClass, ==, null, ||, !, ownerType, ., isEquivalentTo, (, currentClass, ), ), ), {, if, (, docInfo, .]
[., PRIVATE, &&, (, currentClass, ==, null, ||, !, ownerType, ., isEquivalentTo, (, currentClass, ), ), ), {, if, (]
[), {, if, (, docInfo, ., isConstructor, (, ), &&, isValidPrivateConstructorAccess, (, parent, ), ), {, return, ;, }, compiler]
[), ), {, if, (, docInfo, ., isConstructor, (, ), &&, isValidPrivateConstructorAccess, (, parent, ), ), {, return, ;, }]
[||, !, ownerType, ., isEquivalentTo, (, currentClass, ), ), ), {, if, (, docInfo, ., isConstructor, (, ), &&, isValidPrivateConstructorAccess]
[==, null, ||, !, ownerType, ., isEquivalentTo, (, currentClass, ), ), ), {, if, (, docInfo, ., isConstructor, (, )]
[||, !, ownerType, ., isEquivalentTo, (, currentClass, ), ), ), {, if, (, docInfo, ., isConstructor, (, ), &&, isValidPrivateConstructorAccess]
[), ), {, if, (, docInfo, ., isConstructor, (, ), &&, isValidPrivateConstructorAccess, (, parent, ), ), {, return, ;, }]
[), ), {, if, (, docInfo, ., isConstructor, (, ), &&, isValidPrivateConstructorAccess, (, parent, ), ), {, return, ;, }]
[., isEquivalentTo, (, currentClass, ), ), ), {, if, (, docInfo, ., isConstructor, (, ), &&, isValidPrivateConstructorAccess, (, parent, )]
[), ), ), {, if, (, docInfo, ., isConstructor, (, ), &&, isValidPrivateConstructorAccess, (, parent, ), ), {, return, ;]
[), {, return, ;, }, compiler, ., report, (, t, ., makeError, (, getprop, ,, BAD_PRIVATE_PROPERTY_ACCESS, ,, propertyName, ,, validator]
[&&, isValidPrivateConstructorAccess, (, parent, ), ), {, return, ;, }, compiler, ., report, (, t, ., makeError, (, getprop, ,]
[., isConstructor, (, ), &&, isValidPrivateConstructorAccess, (, parent, ), ), {, return, ;, }, compiler, ., report, (, t, .]
[), {, return, ;, }, compiler, ., report, (, t, ., makeError, (, getprop, ,, BAD_PRIVATE_PROPERTY_ACCESS, ,, propertyName, ,, validator]
[), ), {, return, ;, }, compiler, ., report, (, t, ., makeError, (, getprop, ,, BAD_PRIVATE_PROPERTY_ACCESS, ,, propertyName, ,]
[;, }, else, if, (, visibility, ==, Visibility, ., PROTECTED, ), {, if, (, currentClass, ==, null, ||, !, currentClass]
[., report, (, t, ., makeError, (, getprop, ,, BAD_PRIVATE_PROPERTY_ACCESS, ,, propertyName, ,, validator, ., getReadableJSTypeName, (, getprop, ., getFirstChild]
[), ;, }, else, if, (, visibility, ==, Visibility, ., PROTECTED, ), {, if, (, currentClass, ==, null, ||, !]
[., makeError, (, getprop, ,, BAD_PRIVATE_PROPERTY_ACCESS, ,, propertyName, ,, validator, ., getReadableJSTypeName, (, getprop, ., getFirstChild, (, ), ,, true]
[,, BAD_PRIVATE_PROPERTY_ACCESS, ,, propertyName, ,, validator, ., getReadableJSTypeName, (, getprop, ., getFirstChild, (, ), ,, true, ), ), ), ;]
[,, propertyName, ,, validator, ., getReadableJSTypeName, (, getprop, ., getFirstChild, (, ), ,, true, ), ), ), ;, }, else]
[,, validator, ., getReadableJSTypeName, (, getprop, ., getFirstChild, (, ), ,, true, ), ), ), ;, }, else, if, (]
[), ), ;, }, else, if, (, visibility, ==, Visibility, ., PROTECTED, ), {, if, (, currentClass, ==, null, ||]
[., getReadableJSTypeName, (, getprop, ., getFirstChild, (, ), ,, true, ), ), ), ;, }, else, if, (, visibility, ==]
[,, true, ), ), ), ;, }, else, if, (, visibility, ==, Visibility, ., PROTECTED, ), {, if, (, currentClass]
[., getFirstChild, (, ), ,, true, ), ), ), ;, }, else, if, (, visibility, ==, Visibility, ., PROTECTED, )]
[), ), ), ;, }, else, if, (, visibility, ==, Visibility, ., PROTECTED, ), {, if, (, currentClass, ==, null]
[), {, if, (, currentClass, ==, null, ||, !, currentClass, ., isSubtype, (, ownerType, ), ), {, compiler, ., report]
[==, Visibility, ., PROTECTED, ), {, if, (, currentClass, ==, null, ||, !, currentClass, ., isSubtype, (, ownerType, ), )]
[), {, if, (, currentClass, ==, null, ||, !, currentClass, ., isSubtype, (, ownerType, ), ), {, compiler, ., report]
[., PROTECTED, ), {, if, (, currentClass, ==, null, ||, !, currentClass, ., isSubtype, (, ownerType, ), ), {, compiler]
[), {, compiler, ., report, (, t, ., makeError, (, getprop, ,, BAD_PROTECTED_PROPERTY_ACCESS, ,, propertyName, ,, validator, ., getReadableJSTypeName, (]
[||, !, currentClass, ., isSubtype, (, ownerType, ), ), {, compiler, ., report, (, t, ., makeError, (, getprop, ,]
[==, null, ||, !, currentClass, ., isSubtype, (, ownerType, ), ), {, compiler, ., report, (, t, ., makeError, (]
[||, !, currentClass, ., isSubtype, (, ownerType, ), ), {, compiler, ., report, (, t, ., makeError, (, getprop, ,]
[), {, compiler, ., report, (, t, ., makeError, (, getprop, ,, BAD_PROTECTED_PROPERTY_ACCESS, ,, propertyName, ,, validator, ., getReadableJSTypeName, (]
[), {, compiler, ., report, (, t, ., makeError, (, getprop, ,, BAD_PROTECTED_PROPERTY_ACCESS, ,, propertyName, ,, validator, ., getReadableJSTypeName, (]
[., isSubtype, (, ownerType, ), ), {, compiler, ., report, (, t, ., makeError, (, getprop, ,, BAD_PROTECTED_PROPERTY_ACCESS, ,, propertyName]
[), ), {, compiler, ., report, (, t, ., makeError, (, getprop, ,, BAD_PROTECTED_PROPERTY_ACCESS, ,, propertyName, ,, validator, ., getReadableJSTypeName]
[;, }, }, }, }, }, private, static, boolean, isValidPrivateConstructorAccess, (, Node, parent, ), {, return, !, parent, ., isNew]
[., report, (, t, ., makeError, (, getprop, ,, BAD_PROTECTED_PROPERTY_ACCESS, ,, propertyName, ,, validator, ., getReadableJSTypeName, (, getprop, ., getFirstChild]
[), ;, }, }, }, }, }, private, static, boolean, isValidPrivateConstructorAccess, (, Node, parent, ), {, return, !, parent, .]
[., makeError, (, getprop, ,, BAD_PROTECTED_PROPERTY_ACCESS, ,, propertyName, ,, validator, ., getReadableJSTypeName, (, getprop, ., getFirstChild, (, ), ,, true]
[,, BAD_PROTECTED_PROPERTY_ACCESS, ,, propertyName, ,, validator, ., getReadableJSTypeName, (, getprop, ., getFirstChild, (, ), ,, true, ), ), ), ;]
[,, propertyName, ,, validator, ., getReadableJSTypeName, (, getprop, ., getFirstChild, (, ), ,, true, ), ), ), ;, }, }]
[,, validator, ., getReadableJSTypeName, (, getprop, ., getFirstChild, (, ), ,, true, ), ), ), ;, }, }, }, }]
[), ), ;, }, }, }, }, }, private, static, boolean, isValidPrivateConstructorAccess, (, Node, parent, ), {, return, !, parent]
[., getReadableJSTypeName, (, getprop, ., getFirstChild, (, ), ,, true, ), ), ), ;, }, }, }, }, }, private]
[,, true, ), ), ), ;, }, }, }, }, }, private, static, boolean, isValidPrivateConstructorAccess, (, Node, parent, ), {]
[., getFirstChild, (, ), ,, true, ), ), ), ;, }, }, }, }, }, private, static, boolean, isValidPrivateConstructorAccess, (]
[), ), ), ;, }, }, }, }, }, private, static, boolean, isValidPrivateConstructorAccess, (, Node, parent, ), {, return, !]
[;, }, private, boolean, shouldEmitDeprecationWarning, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (, t, .]
[;, }, private, boolean, shouldEmitDeprecationWarning, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (, t, .]
[., isNew, (, ), ;, }, private, boolean, shouldEmitDeprecationWarning, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {]
[), {, if, (, !, (, (, parent, ., isCall, (, ), &&, parent, ., getFirstChild, (, ), ==, n]
[., inGlobalScope, (, ), ), {, if, (, !, (, (, parent, ., isCall, (, ), &&, parent, ., getFirstChild]
[), {, return, false, ;, }, }, if, (, n, ., isGetProp, (, ), &&, n, ==, parent, ., getFirstChild]
[), {, return, false, ;, }, }, if, (, n, ., isGetProp, (, ), &&, n, ==, parent, ., getFirstChild]
[), ), {, return, false, ;, }, }, if, (, n, ., isGetProp, (, ), &&, n, ==, parent, .]
[||, n, ., isNew, (, ), ), ), {, return, false, ;, }, }, if, (, n, ., isGetProp, (]
[), ||, n, ., isNew, (, ), ), ), {, return, false, ;, }, }, if, (, n, ., isGetProp]
[&&, parent, ., getFirstChild, (, ), ==, n, ), ||, n, ., isNew, (, ), ), ), {, return, false]
[., isCall, (, ), &&, parent, ., getFirstChild, (, ), ==, n, ), ||, n, ., isNew, (, ), )]
[), ||, n, ., isNew, (, ), ), ), {, return, false, ;, }, }, if, (, n, ., isGetProp]
[==, n, ), ||, n, ., isNew, (, ), ), ), {, return, false, ;, }, }, if, (, n]
[., getFirstChild, (, ), ==, n, ), ||, n, ., isNew, (, ), ), ), {, return, false, ;, }]
[), ||, n, ., isNew, (, ), ), ), {, return, false, ;, }, }, if, (, n, ., isGetProp]
[), ), {, return, false, ;, }, }, if, (, n, ., isGetProp, (, ), &&, n, ==, parent, .]
[., isNew, (, ), ), ), {, return, false, ;, }, }, if, (, n, ., isGetProp, (, ), &&]
[;, }, }, if, (, n, ., isGetProp, (, ), &&, n, ==, parent, ., getFirstChild, (, ), &&, NodeUtil]
[), {, return, false, ;, }, return, !, canAccessDeprecatedTypes, (, t, ), ;, }, private, boolean, canAccessDeprecatedTypes, (, NodeTraversal, t]
[&&, NodeUtil, ., isAssignmentOp, (, parent, ), ), {, return, false, ;, }, return, !, canAccessDeprecatedTypes, (, t, ), ;]
[&&, n, ==, parent, ., getFirstChild, (, ), &&, NodeUtil, ., isAssignmentOp, (, parent, ), ), {, return, false, ;]
[., isGetProp, (, ), &&, n, ==, parent, ., getFirstChild, (, ), &&, NodeUtil, ., isAssignmentOp, (, parent, ), )]
[&&, NodeUtil, ., isAssignmentOp, (, parent, ), ), {, return, false, ;, }, return, !, canAccessDeprecatedTypes, (, t, ), ;]
[==, parent, ., getFirstChild, (, ), &&, NodeUtil, ., isAssignmentOp, (, parent, ), ), {, return, false, ;, }, return]
[&&, NodeUtil, ., isAssignmentOp, (, parent, ), ), {, return, false, ;, }, return, !, canAccessDeprecatedTypes, (, t, ), ;]
[., getFirstChild, (, ), &&, NodeUtil, ., isAssignmentOp, (, parent, ), ), {, return, false, ;, }, return, !, canAccessDeprecatedTypes]
[), {, return, false, ;, }, return, !, canAccessDeprecatedTypes, (, t, ), ;, }, private, boolean, canAccessDeprecatedTypes, (, NodeTraversal, t]
[., isAssignmentOp, (, parent, ), ), {, return, false, ;, }, return, !, canAccessDeprecatedTypes, (, t, ), ;, }, private]
[), ), {, return, false, ;, }, return, !, canAccessDeprecatedTypes, (, t, ), ;, }, private, boolean, canAccessDeprecatedTypes, (, NodeTraversal]
[;, }, return, !, canAccessDeprecatedTypes, (, t, ), ;, }, private, boolean, canAccessDeprecatedTypes, (, NodeTraversal, t, ), {, Node, scopeRoot]
[;, }, private, boolean, canAccessDeprecatedTypes, (, NodeTraversal, t, ), {, Node, scopeRoot, =, t, ., getScopeRoot, (, ), ;, Node]
[;, }, private, boolean, canAccessDeprecatedTypes, (, NodeTraversal, t, ), {, Node, scopeRoot, =, t, ., getScopeRoot, (, ), ;, Node]
[), ;, }, private, boolean, canAccessDeprecatedTypes, (, NodeTraversal, t, ), {, Node, scopeRoot, =, t, ., getScopeRoot, (, ), ;]
[;, Node, scopeRootParent, =, scopeRoot, ., getParent, (, ), ;, return, (, deprecatedDepth, >, 0, ), ||, (, getTypeDeprecationInfo, (]
[., getScopeRoot, (, ), ;, Node, scopeRootParent, =, scopeRoot, ., getParent, (, ), ;, return, (, deprecatedDepth, >, 0, )]
[;, return, (, deprecatedDepth, >, 0, ), ||, (, getTypeDeprecationInfo, (, t, ., getScope, (, ), ., getTypeOfThis, (, )]
[., getParent, (, ), ;, return, (, deprecatedDepth, >, 0, ), ||, (, getTypeDeprecationInfo, (, t, ., getScope, (, )]
[;, }, private, static, boolean, isDeprecatedFunction, (, Node, n, ,, Node, parent, ), {, if, (, n, ., isFunction, (]
[||, (, scopeRootParent, !=, null, &&, scopeRootParent, ., isAssign, (, ), &&, getTypeDeprecationInfo, (, getClassOfMethod, (, scopeRoot, ,, scopeRootParent, )]
[||, (, getTypeDeprecationInfo, (, t, ., getScope, (, ), ., getTypeOfThis, (, ), ), !=, null, ), ||, (, scopeRootParent]
[), ||, (, getTypeDeprecationInfo, (, t, ., getScope, (, ), ., getTypeOfThis, (, ), ), !=, null, ), ||, (]
[>, 0, ), ||, (, getTypeDeprecationInfo, (, t, ., getScope, (, ), ., getTypeOfThis, (, ), ), !=, null, )]
[), ||, (, getTypeDeprecationInfo, (, t, ., getScope, (, ), ., getTypeOfThis, (, ), ), !=, null, ), ||, (]
[||, (, scopeRootParent, !=, null, &&, scopeRootParent, ., isAssign, (, ), &&, getTypeDeprecationInfo, (, getClassOfMethod, (, scopeRoot, ,, scopeRootParent, )]
[), ||, (, scopeRootParent, !=, null, &&, scopeRootParent, ., isAssign, (, ), &&, getTypeDeprecationInfo, (, getClassOfMethod, (, scopeRoot, ,, scopeRootParent]
[!=, null, ), ||, (, scopeRootParent, !=, null, &&, scopeRootParent, ., isAssign, (, ), &&, getTypeDeprecationInfo, (, getClassOfMethod, (, scopeRoot]
[), !=, null, ), ||, (, scopeRootParent, !=, null, &&, scopeRootParent, ., isAssign, (, ), &&, getTypeDeprecationInfo, (, getClassOfMethod, (]
[., getTypeOfThis, (, ), ), !=, null, ), ||, (, scopeRootParent, !=, null, &&, scopeRootParent, ., isAssign, (, ), &&]
[., getScope, (, ), ., getTypeOfThis, (, ), ), !=, null, ), ||, (, scopeRootParent, !=, null, &&, scopeRootParent, .]
[), ||, (, scopeRootParent, !=, null, &&, scopeRootParent, ., isAssign, (, ), &&, getTypeDeprecationInfo, (, getClassOfMethod, (, scopeRoot, ,, scopeRootParent]
[;, }, private, static, boolean, isDeprecatedFunction, (, Node, n, ,, Node, parent, ), {, if, (, n, ., isFunction, (]
[), ;, }, private, static, boolean, isDeprecatedFunction, (, Node, n, ,, Node, parent, ), {, if, (, n, ., isFunction]
[&&, getTypeDeprecationInfo, (, getClassOfMethod, (, scopeRoot, ,, scopeRootParent, ), ), !=, null, ), ;, }, private, static, boolean, isDeprecatedFunction, (]
[&&, scopeRootParent, ., isAssign, (, ), &&, getTypeDeprecationInfo, (, getClassOfMethod, (, scopeRoot, ,, scopeRootParent, ), ), !=, null, ), ;]
[!=, null, &&, scopeRootParent, ., isAssign, (, ), &&, getTypeDeprecationInfo, (, getClassOfMethod, (, scopeRoot, ,, scopeRootParent, ), ), !=, null]
[&&, scopeRootParent, ., isAssign, (, ), &&, getTypeDeprecationInfo, (, getClassOfMethod, (, scopeRoot, ,, scopeRootParent, ), ), !=, null, ), ;]
[&&, getTypeDeprecationInfo, (, getClassOfMethod, (, scopeRoot, ,, scopeRootParent, ), ), !=, null, ), ;, }, private, static, boolean, isDeprecatedFunction, (]
[., isAssign, (, ), &&, getTypeDeprecationInfo, (, getClassOfMethod, (, scopeRoot, ,, scopeRootParent, ), ), !=, null, ), ;, }, private]
[), ;, }, private, static, boolean, isDeprecatedFunction, (, Node, n, ,, Node, parent, ), {, if, (, n, ., isFunction]
[!=, null, ), ;, }, private, static, boolean, isDeprecatedFunction, (, Node, n, ,, Node, parent, ), {, if, (, n]
[), !=, null, ), ;, }, private, static, boolean, isDeprecatedFunction, (, Node, n, ,, Node, parent, ), {, if, (]
[,, scopeRootParent, ), ), !=, null, ), ;, }, private, static, boolean, isDeprecatedFunction, (, Node, n, ,, Node, parent, )]
[), ), !=, null, ), ;, }, private, static, boolean, isDeprecatedFunction, (, Node, n, ,, Node, parent, ), {, if]
[), ;, }, private, static, boolean, isDeprecatedFunction, (, Node, n, ,, Node, parent, ), {, if, (, n, ., isFunction]
[), {, JSType, type, =, n, ., getJSType, (, ), ;, if, (, type, !=, null, ), {, return, getTypeDeprecationInfo]
[., isFunction, (, ), ), {, JSType, type, =, n, ., getJSType, (, ), ;, if, (, type, !=, null]
[;, if, (, type, !=, null, ), {, return, getTypeDeprecationInfo, (, type, ), !=, null, ;, }, }, return, false]
[., getJSType, (, ), ;, if, (, type, !=, null, ), {, return, getTypeDeprecationInfo, (, type, ), !=, null, ;]
[), {, return, getTypeDeprecationInfo, (, type, ), !=, null, ;, }, }, return, false, ;, }, private, static, String, getTypeDeprecationInfo]
[!=, null, ), {, return, getTypeDeprecationInfo, (, type, ), !=, null, ;, }, }, return, false, ;, }, private, static]
[), {, return, getTypeDeprecationInfo, (, type, ), !=, null, ;, }, }, return, false, ;, }, private, static, String, getTypeDeprecationInfo]
[;, }, }, return, false, ;, }, private, static, String, getTypeDeprecationInfo, (, JSType, type, ), {, if, (, type, ==]
[!=, null, ;, }, }, return, false, ;, }, private, static, String, getTypeDeprecationInfo, (, JSType, type, ), {, if, (]
[), !=, null, ;, }, }, return, false, ;, }, private, static, String, getTypeDeprecationInfo, (, JSType, type, ), {, if]
[;, }, }, return, false, ;, }, private, static, String, getTypeDeprecationInfo, (, JSType, type, ), {, if, (, type, ==]
[;, }, private, static, String, getTypeDeprecationInfo, (, JSType, type, ), {, if, (, type, ==, null, ), {, return, null]
[), {, return, null, ;, }, JSDocInfo, info, =, type, ., getJSDocInfo, (, ), ;, if, (, info, !=, null]
[==, null, ), {, return, null, ;, }, JSDocInfo, info, =, type, ., getJSDocInfo, (, ), ;, if, (, info]
[), {, return, null, ;, }, JSDocInfo, info, =, type, ., getJSDocInfo, (, ), ;, if, (, info, !=, null]
[;, }, JSDocInfo, info, =, type, ., getJSDocInfo, (, ), ;, if, (, info, !=, null, &&, info, ., isDeprecated]
[;, if, (, info, !=, null, &&, info, ., isDeprecated, (, ), ), {, if, (, info, ., getDeprecationReason, (]
[., getJSDocInfo, (, ), ;, if, (, info, !=, null, &&, info, ., isDeprecated, (, ), ), {, if, (]
[), {, if, (, info, ., getDeprecationReason, (, ), !=, null, ), {, return, info, ., getDeprecationReason, (, ), ;]
[&&, info, ., isDeprecated, (, ), ), {, if, (, info, ., getDeprecationReason, (, ), !=, null, ), {, return]
[!=, null, &&, info, ., isDeprecated, (, ), ), {, if, (, info, ., getDeprecationReason, (, ), !=, null, )]
[&&, info, ., isDeprecated, (, ), ), {, if, (, info, ., getDeprecationReason, (, ), !=, null, ), {, return]
[), {, if, (, info, ., getDeprecationReason, (, ), !=, null, ), {, return, info, ., getDeprecationReason, (, ), ;]
[., isDeprecated, (, ), ), {, if, (, info, ., getDeprecationReason, (, ), !=, null, ), {, return, info, .]
[), {, return, info, ., getDeprecationReason, (, ), ;, }, return, "", ;, }, ObjectType, objType, =, ObjectType, ., cast]
[!=, null, ), {, return, info, ., getDeprecationReason, (, ), ;, }, return, "", ;, }, ObjectType, objType, =, ObjectType]
[., getDeprecationReason, (, ), !=, null, ), {, return, info, ., getDeprecationReason, (, ), ;, }, return, "", ;, }]
[), {, return, info, ., getDeprecationReason, (, ), ;, }, return, "", ;, }, ObjectType, objType, =, ObjectType, ., cast]
[;, }, return, "", ;, }, ObjectType, objType, =, ObjectType, ., cast, (, type, ), ;, if, (, objType, !=]
[., getDeprecationReason, (, ), ;, }, return, "", ;, }, ObjectType, objType, =, ObjectType, ., cast, (, type, ), ;]
[;, }, ObjectType, objType, =, ObjectType, ., cast, (, type, ), ;, if, (, objType, !=, null, ), {, ObjectType]
[;, if, (, objType, !=, null, ), {, ObjectType, implicitProto, =, objType, ., getImplicitPrototype, (, ), ;, if, (, implicitProto]
[., cast, (, type, ), ;, if, (, objType, !=, null, ), {, ObjectType, implicitProto, =, objType, ., getImplicitPrototype, (]
[), ;, if, (, objType, !=, null, ), {, ObjectType, implicitProto, =, objType, ., getImplicitPrototype, (, ), ;, if, (]
[), {, ObjectType, implicitProto, =, objType, ., getImplicitPrototype, (, ), ;, if, (, implicitProto, !=, null, ), {, return, getTypeDeprecationInfo]
[!=, null, ), {, ObjectType, implicitProto, =, objType, ., getImplicitPrototype, (, ), ;, if, (, implicitProto, !=, null, ), {]
[), {, ObjectType, implicitProto, =, objType, ., getImplicitPrototype, (, ), ;, if, (, implicitProto, !=, null, ), {, return, getTypeDeprecationInfo]
[;, if, (, implicitProto, !=, null, ), {, return, getTypeDeprecationInfo, (, implicitProto, ), ;, }, }, return, null, ;, }]
[., getImplicitPrototype, (, ), ;, if, (, implicitProto, !=, null, ), {, return, getTypeDeprecationInfo, (, implicitProto, ), ;, }, }]
[), {, return, getTypeDeprecationInfo, (, implicitProto, ), ;, }, }, return, null, ;, }, private, static, boolean, isPropertyDeclaredConstant, (, ObjectType]
[!=, null, ), {, return, getTypeDeprecationInfo, (, implicitProto, ), ;, }, }, return, null, ;, }, private, static, boolean, isPropertyDeclaredConstant]
[), {, return, getTypeDeprecationInfo, (, implicitProto, ), ;, }, }, return, null, ;, }, private, static, boolean, isPropertyDeclaredConstant, (, ObjectType]
[;, }, }, return, null, ;, }, private, static, boolean, isPropertyDeclaredConstant, (, ObjectType, objectType, ,, String, prop, ), {, for]
[), ;, }, }, return, null, ;, }, private, static, boolean, isPropertyDeclaredConstant, (, ObjectType, objectType, ,, String, prop, ), {]
[;, }, private, static, boolean, isPropertyDeclaredConstant, (, ObjectType, objectType, ,, String, prop, ), {, for, (, ;, objectType, !=, null]
[;, objectType, =, objectType, ., getImplicitPrototype, (, ), ), {, JSDocInfo, docInfo, =, objectType, ., getOwnPropertyJSDocInfo, (, prop, ), ;]
[&&, objectType, ., hasReferenceName, (, ), ;, objectType, =, objectType, ., getImplicitPrototype, (, ), ), {, JSDocInfo, docInfo, =, objectType]
[!=, null, &&, objectType, ., hasReferenceName, (, ), ;, objectType, =, objectType, ., getImplicitPrototype, (, ), ), {, JSDocInfo, docInfo]
[&&, objectType, ., hasReferenceName, (, ), ;, objectType, =, objectType, ., getImplicitPrototype, (, ), ), {, JSDocInfo, docInfo, =, objectType]
[;, objectType, =, objectType, ., getImplicitPrototype, (, ), ), {, JSDocInfo, docInfo, =, objectType, ., getOwnPropertyJSDocInfo, (, prop, ), ;]
[., hasReferenceName, (, ), ;, objectType, =, objectType, ., getImplicitPrototype, (, ), ), {, JSDocInfo, docInfo, =, objectType, ., getOwnPropertyJSDocInfo]
[=, objectType, ., getImplicitPrototype, (, ), ), {, JSDocInfo, docInfo, =, objectType, ., getOwnPropertyJSDocInfo, (, prop, ), ;, if, (]
[), {, JSDocInfo, docInfo, =, objectType, ., getOwnPropertyJSDocInfo, (, prop, ), ;, if, (, docInfo, !=, null, &&, docInfo, .]
[., getImplicitPrototype, (, ), ), {, JSDocInfo, docInfo, =, objectType, ., getOwnPropertyJSDocInfo, (, prop, ), ;, if, (, docInfo, !=]
[;, if, (, docInfo, !=, null, &&, docInfo, ., isConstant, (, ), ), {, return, true, ;, }, }, return]
[., getOwnPropertyJSDocInfo, (, prop, ), ;, if, (, docInfo, !=, null, &&, docInfo, ., isConstant, (, ), ), {, return]
[), ;, if, (, docInfo, !=, null, &&, docInfo, ., isConstant, (, ), ), {, return, true, ;, }, }]
[), {, return, true, ;, }, }, return, false, ;, }, private, static, String, getPropertyDeprecationInfo, (, ObjectType, type, ,, String]
[&&, docInfo, ., isConstant, (, ), ), {, return, true, ;, }, }, return, false, ;, }, private, static, String]
[!=, null, &&, docInfo, ., isConstant, (, ), ), {, return, true, ;, }, }, return, false, ;, }, private]
[&&, docInfo, ., isConstant, (, ), ), {, return, true, ;, }, }, return, false, ;, }, private, static, String]
[), {, return, true, ;, }, }, return, false, ;, }, private, static, String, getPropertyDeprecationInfo, (, ObjectType, type, ,, String]
[., isConstant, (, ), ), {, return, true, ;, }, }, return, false, ;, }, private, static, String, getPropertyDeprecationInfo, (]
[;, }, }, return, false, ;, }, private, static, String, getPropertyDeprecationInfo, (, ObjectType, type, ,, String, prop, ), {, JSDocInfo]
[;, }, private, static, String, getPropertyDeprecationInfo, (, ObjectType, type, ,, String, prop, ), {, JSDocInfo, info, =, type, ., getOwnPropertyJSDocInfo]
[;, if, (, info, !=, null, &&, info, ., isDeprecated, (, ), ), {, if, (, info, ., getDeprecationReason, (]
[., getOwnPropertyJSDocInfo, (, prop, ), ;, if, (, info, !=, null, &&, info, ., isDeprecated, (, ), ), {, if]
[), ;, if, (, info, !=, null, &&, info, ., isDeprecated, (, ), ), {, if, (, info, ., getDeprecationReason]
[), {, if, (, info, ., getDeprecationReason, (, ), !=, null, ), {, return, info, ., getDeprecationReason, (, ), ;]
[&&, info, ., isDeprecated, (, ), ), {, if, (, info, ., getDeprecationReason, (, ), !=, null, ), {, return]
[!=, null, &&, info, ., isDeprecated, (, ), ), {, if, (, info, ., getDeprecationReason, (, ), !=, null, )]
[&&, info, ., isDeprecated, (, ), ), {, if, (, info, ., getDeprecationReason, (, ), !=, null, ), {, return]
[), {, if, (, info, ., getDeprecationReason, (, ), !=, null, ), {, return, info, ., getDeprecationReason, (, ), ;]
[., isDeprecated, (, ), ), {, if, (, info, ., getDeprecationReason, (, ), !=, null, ), {, return, info, .]
[), {, return, info, ., getDeprecationReason, (, ), ;, }, return, "", ;, }, ObjectType, implicitProto, =, type, ., getImplicitPrototype]
[!=, null, ), {, return, info, ., getDeprecationReason, (, ), ;, }, return, "", ;, }, ObjectType, implicitProto, =, type]
[., getDeprecationReason, (, ), !=, null, ), {, return, info, ., getDeprecationReason, (, ), ;, }, return, "", ;, }]
[), {, return, info, ., getDeprecationReason, (, ), ;, }, return, "", ;, }, ObjectType, implicitProto, =, type, ., getImplicitPrototype]
[;, }, return, "", ;, }, ObjectType, implicitProto, =, type, ., getImplicitPrototype, (, ), ;, if, (, implicitProto, !=, null]
[., getDeprecationReason, (, ), ;, }, return, "", ;, }, ObjectType, implicitProto, =, type, ., getImplicitPrototype, (, ), ;, if]
[;, }, ObjectType, implicitProto, =, type, ., getImplicitPrototype, (, ), ;, if, (, implicitProto, !=, null, ), {, return, getPropertyDeprecationInfo]
[;, if, (, implicitProto, !=, null, ), {, return, getPropertyDeprecationInfo, (, implicitProto, ,, prop, ), ;, }, return, null, ;]
[., getImplicitPrototype, (, ), ;, if, (, implicitProto, !=, null, ), {, return, getPropertyDeprecationInfo, (, implicitProto, ,, prop, ), ;]
[), {, return, getPropertyDeprecationInfo, (, implicitProto, ,, prop, ), ;, }, return, null, ;, }, private, static, JSType, dereference, (]
[!=, null, ), {, return, getPropertyDeprecationInfo, (, implicitProto, ,, prop, ), ;, }, return, null, ;, }, private, static, JSType]
[), {, return, getPropertyDeprecationInfo, (, implicitProto, ,, prop, ), ;, }, return, null, ;, }, private, static, JSType, dereference, (]
[;, }, return, null, ;, }, private, static, JSType, dereference, (, JSType, type, ), {, return, type, ==, null, ?]
[,, prop, ), ;, }, return, null, ;, }, private, static, JSType, dereference, (, JSType, type, ), {, return, type]
[), ;, }, return, null, ;, }, private, static, JSType, dereference, (, JSType, type, ), {, return, type, ==, null]
[;, }, private, static, JSType, dereference, (, JSType, type, ), {, return, type, ==, null, ?, null, :, type, .]
[;, }, private, JSType, getFinalParentClass, (, JSType, type, ), {, if, (, type, !=, null, ), {, ObjectType, iproto, =]
[?, null, :, type, ., dereference, (, ), ;, }, private, JSType, getFinalParentClass, (, JSType, type, ), {, if, (]
[==, null, ?, null, :, type, ., dereference, (, ), ;, }, private, JSType, getFinalParentClass, (, JSType, type, ), {]
[?, null, :, type, ., dereference, (, ), ;, }, private, JSType, getFinalParentClass, (, JSType, type, ), {, if, (]
[:, type, ., dereference, (, ), ;, }, private, JSType, getFinalParentClass, (, JSType, type, ), {, if, (, type, !=]
[;, }, private, JSType, getFinalParentClass, (, JSType, type, ), {, if, (, type, !=, null, ), {, ObjectType, iproto, =]
[., dereference, (, ), ;, }, private, JSType, getFinalParentClass, (, JSType, type, ), {, if, (, type, !=, null, )]
[), {, ObjectType, iproto, =, ObjectType, ., cast, (, type, ), ., getImplicitPrototype, (, ), ;, while, (, iproto, !=]
[!=, null, ), {, ObjectType, iproto, =, ObjectType, ., cast, (, type, ), ., getImplicitPrototype, (, ), ;, while, (]
[), {, ObjectType, iproto, =, ObjectType, ., cast, (, type, ), ., getImplicitPrototype, (, ), ;, while, (, iproto, !=]
[;, while, (, iproto, !=, null, &&, iproto, ., getConstructor, (, ), ==, null, ), {, iproto, =, iproto, .]
[., getImplicitPrototype, (, ), ;, while, (, iproto, !=, null, &&, iproto, ., getConstructor, (, ), ==, null, ), {]
[., cast, (, type, ), ., getImplicitPrototype, (, ), ;, while, (, iproto, !=, null, &&, iproto, ., getConstructor, (]
[), ., getImplicitPrototype, (, ), ;, while, (, iproto, !=, null, &&, iproto, ., getConstructor, (, ), ==, null, )]
[), {, iproto, =, iproto, ., getImplicitPrototype, (, ), ;, }, if, (, iproto, !=, null, ), {, Node, source]
[&&, iproto, ., getConstructor, (, ), ==, null, ), {, iproto, =, iproto, ., getImplicitPrototype, (, ), ;, }, if]
[!=, null, &&, iproto, ., getConstructor, (, ), ==, null, ), {, iproto, =, iproto, ., getImplicitPrototype, (, ), ;]
[&&, iproto, ., getConstructor, (, ), ==, null, ), {, iproto, =, iproto, ., getImplicitPrototype, (, ), ;, }, if]
[), {, iproto, =, iproto, ., getImplicitPrototype, (, ), ;, }, if, (, iproto, !=, null, ), {, Node, source]
[==, null, ), {, iproto, =, iproto, ., getImplicitPrototype, (, ), ;, }, if, (, iproto, !=, null, ), {]
[., getConstructor, (, ), ==, null, ), {, iproto, =, iproto, ., getImplicitPrototype, (, ), ;, }, if, (, iproto]
[), {, iproto, =, iproto, ., getImplicitPrototype, (, ), ;, }, if, (, iproto, !=, null, ), {, Node, source]
[=, iproto, ., getImplicitPrototype, (, ), ;, }, if, (, iproto, !=, null, ), {, Node, source, =, iproto, .]
[;, }, if, (, iproto, !=, null, ), {, Node, source, =, iproto, ., getConstructor, (, ), ., getSource, (]
[., getImplicitPrototype, (, ), ;, }, if, (, iproto, !=, null, ), {, Node, source, =, iproto, ., getConstructor, (]
[), {, Node, source, =, iproto, ., getConstructor, (, ), ., getSource, (, ), ;, JSDocInfo, jsDoc, =, source, !=]
[!=, null, ), {, Node, source, =, iproto, ., getConstructor, (, ), ., getSource, (, ), ;, JSDocInfo, jsDoc, =]
[), {, Node, source, =, iproto, ., getConstructor, (, ), ., getSource, (, ), ;, JSDocInfo, jsDoc, =, source, !=]
[;, JSDocInfo, jsDoc, =, source, !=, null, ?, NodeUtil, ., getBestJSDocInfo, (, source, ), :, null, ;, if, (, jsDoc]
[., getSource, (, ), ;, JSDocInfo, jsDoc, =, source, !=, null, ?, NodeUtil, ., getBestJSDocInfo, (, source, ), :, null]
[., getConstructor, (, ), ., getSource, (, ), ;, JSDocInfo, jsDoc, =, source, !=, null, ?, NodeUtil, ., getBestJSDocInfo, (]
[;, if, (, jsDoc, !=, null, &&, jsDoc, ., isConstant, (, ), ), {, return, iproto, ;, }, }, }]
[?, NodeUtil, ., getBestJSDocInfo, (, source, ), :, null, ;, if, (, jsDoc, !=, null, &&, jsDoc, ., isConstant, (]
[!=, null, ?, NodeUtil, ., getBestJSDocInfo, (, source, ), :, null, ;, if, (, jsDoc, !=, null, &&, jsDoc, .]
[?, NodeUtil, ., getBestJSDocInfo, (, source, ), :, null, ;, if, (, jsDoc, !=, null, &&, jsDoc, ., isConstant, (]
[:, null, ;, if, (, jsDoc, !=, null, &&, jsDoc, ., isConstant, (, ), ), {, return, iproto, ;, }]
[., getBestJSDocInfo, (, source, ), :, null, ;, if, (, jsDoc, !=, null, &&, jsDoc, ., isConstant, (, ), )]
[), :, null, ;, if, (, jsDoc, !=, null, &&, jsDoc, ., isConstant, (, ), ), {, return, iproto, ;]
[;, if, (, jsDoc, !=, null, &&, jsDoc, ., isConstant, (, ), ), {, return, iproto, ;, }, }, }]
[), {, return, iproto, ;, }, }, }, return, null, ;, }, }]
[&&, jsDoc, ., isConstant, (, ), ), {, return, iproto, ;, }, }, }, return, null, ;, }, }]
[!=, null, &&, jsDoc, ., isConstant, (, ), ), {, return, iproto, ;, }, }, }, return, null, ;, }]
[&&, jsDoc, ., isConstant, (, ), ), {, return, iproto, ;, }, }, }, return, null, ;, }, }]
[), {, return, iproto, ;, }, }, }, return, null, ;, }, }]
[., isConstant, (, ), ), {, return, iproto, ;, }, }, }, return, null, ;, }, }]
[;, }, }, }, return, null, ;, }, }]
[;, }, }]
