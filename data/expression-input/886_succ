[private, static, final, long, serialVersionUID, =, -, 8258715387168736L, ;, private, static, final, int, MIN, =, DateTimeConstants, ., JANUARY, ;, private]
[), private, static, final, long, serialVersionUID, =, -, 8258715387168736L, ;, private, static, final, int, MIN, =, DateTimeConstants, ., JANUARY, ;]
[;, private, static, final, int, MIN, =, DateTimeConstants, ., JANUARY, ;, private, final, BasicChronology, iChronology, ;, private, final, int, iMax]
[;, private, static, final, int, MIN, =, DateTimeConstants, ., JANUARY, ;, private, final, BasicChronology, iChronology, ;, private, final, int, iMax]
[;, private, final, BasicChronology, iChronology, ;, private, final, int, iMax, ;, private, final, int, iLeapMonth, ;, BasicMonthOfYearDateTimeField, (, BasicChronology, chronology]
[., JANUARY, ;, private, final, BasicChronology, iChronology, ;, private, final, int, iMax, ;, private, final, int, iLeapMonth, ;, BasicMonthOfYearDateTimeField, (]
[,, chronology, ., getAverageMillisPerMonth, (, ), ), ;, iChronology, =, chronology, ;, iMax, =, iChronology, ., getMaxMonth, (, ), ;]
[., monthOfYear, (, ), ,, chronology, ., getAverageMillisPerMonth, (, ), ), ;, iChronology, =, chronology, ;, iMax, =, iChronology, .]
[), ;, iChronology, =, chronology, ;, iMax, =, iChronology, ., getMaxMonth, (, ), ;, iLeapMonth, =, leapMonth, ;, }, public]
[., getAverageMillisPerMonth, (, ), ), ;, iChronology, =, chronology, ;, iMax, =, iChronology, ., getMaxMonth, (, ), ;, iLeapMonth, =]
[=, chronology, ;, iMax, =, iChronology, ., getMaxMonth, (, ), ;, iLeapMonth, =, leapMonth, ;, }, public, boolean, isLenient, (]
[;, iMax, =, iChronology, ., getMaxMonth, (, ), ;, iLeapMonth, =, leapMonth, ;, }, public, boolean, isLenient, (, ), {]
[=, iChronology, ., getMaxMonth, (, ), ;, iLeapMonth, =, leapMonth, ;, }, public, boolean, isLenient, (, ), {, return, false]
[;, iLeapMonth, =, leapMonth, ;, }, public, boolean, isLenient, (, ), {, return, false, ;, }, public, int, get, (]
[., getMaxMonth, (, ), ;, iLeapMonth, =, leapMonth, ;, }, public, boolean, isLenient, (, ), {, return, false, ;, }]
[=, leapMonth, ;, }, public, boolean, isLenient, (, ), {, return, false, ;, }, public, int, get, (, long, instant]
[;, }, public, boolean, isLenient, (, ), {, return, false, ;, }, public, int, get, (, long, instant, ), {]
[;, }, public, int, get, (, long, instant, ), {, return, iChronology, ., getMonthOfYear, (, instant, ), ;, }, public]
[;, }, public, long, add, (, long, instant, ,, int, months, ), {, if, (, months, ==, 0, ), {]
[., getMonthOfYear, (, instant, ), ;, }, public, long, add, (, long, instant, ,, int, months, ), {, if, (]
[), ;, }, public, long, add, (, long, instant, ,, int, months, ), {, if, (, months, ==, 0, )]
[), {, return, instant, ;, }, long, timePart, =, iChronology, ., getMillisOfDay, (, instant, ), ;, int, thisYear, =, iChronology]
[==, 0, ), {, return, instant, ;, }, long, timePart, =, iChronology, ., getMillisOfDay, (, instant, ), ;, int, thisYear]
[), {, return, instant, ;, }, long, timePart, =, iChronology, ., getMillisOfDay, (, instant, ), ;, int, thisYear, =, iChronology]
[;, }, long, timePart, =, iChronology, ., getMillisOfDay, (, instant, ), ;, int, thisYear, =, iChronology, ., getYear, (, instant]
[;, int, thisYear, =, iChronology, ., getYear, (, instant, ), ;, int, thisMonth, =, iChronology, ., getMonthOfYear, (, instant, ,]
[., getMillisOfDay, (, instant, ), ;, int, thisYear, =, iChronology, ., getYear, (, instant, ), ;, int, thisMonth, =, iChronology]
[), ;, int, thisYear, =, iChronology, ., getYear, (, instant, ), ;, int, thisMonth, =, iChronology, ., getMonthOfYear, (, instant]
[;, int, thisMonth, =, iChronology, ., getMonthOfYear, (, instant, ,, thisYear, ), ;, int, yearToUse, ;, int, monthToUse, =, thisMonth]
[., getYear, (, instant, ), ;, int, thisMonth, =, iChronology, ., getMonthOfYear, (, instant, ,, thisYear, ), ;, int, yearToUse]
[), ;, int, thisMonth, =, iChronology, ., getMonthOfYear, (, instant, ,, thisYear, ), ;, int, yearToUse, ;, int, monthToUse, =]
[;, int, yearToUse, ;, int, monthToUse, =, thisMonth, -, 1, +, months, ;, if, (, monthToUse, >=, 0, ), {]
[., getMonthOfYear, (, instant, ,, thisYear, ), ;, int, yearToUse, ;, int, monthToUse, =, thisMonth, -, 1, +, months, ;]
[,, thisYear, ), ;, int, yearToUse, ;, int, monthToUse, =, thisMonth, -, 1, +, months, ;, if, (, monthToUse, >=]
[), ;, int, yearToUse, ;, int, monthToUse, =, thisMonth, -, 1, +, months, ;, if, (, monthToUse, >=, 0, )]
[;, if, (, monthToUse, >=, 0, ), {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), ;, monthToUse, =]
[+, months, ;, if, (, monthToUse, >=, 0, ), {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), ;]
[-, 1, +, months, ;, if, (, monthToUse, >=, 0, ), {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax]
[+, months, ;, if, (, monthToUse, >=, 0, ), {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), ;]
[;, if, (, monthToUse, >=, 0, ), {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), ;, monthToUse, =]
[), {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), ;, monthToUse, =, (, monthToUse, %, iMax, ), +]
[>=, 0, ), {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), ;, monthToUse, =, (, monthToUse, %, iMax]
[), {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), ;, monthToUse, =, (, monthToUse, %, iMax, ), +]
[=, thisYear, +, (, monthToUse, /, iMax, ), ;, monthToUse, =, (, monthToUse, %, iMax, ), +, 1, ;, }]
[;, monthToUse, =, (, monthToUse, %, iMax, ), +, 1, ;, }, else, {, yearToUse, =, thisYear, +, (, monthToUse]
[+, (, monthToUse, /, iMax, ), ;, monthToUse, =, (, monthToUse, %, iMax, ), +, 1, ;, }, else, {]
[;, monthToUse, =, (, monthToUse, %, iMax, ), +, 1, ;, }, else, {, yearToUse, =, thisYear, +, (, monthToUse]
[), ;, monthToUse, =, (, monthToUse, %, iMax, ), +, 1, ;, }, else, {, yearToUse, =, thisYear, +, (]
[/, iMax, ), ;, monthToUse, =, (, monthToUse, %, iMax, ), +, 1, ;, }, else, {, yearToUse, =, thisYear]
[), ;, monthToUse, =, (, monthToUse, %, iMax, ), +, 1, ;, }, else, {, yearToUse, =, thisYear, +, (]
[=, (, monthToUse, %, iMax, ), +, 1, ;, }, else, {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax]
[;, }, else, {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), -, 1, ;, monthToUse, =, Math, .]
[+, 1, ;, }, else, {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), -, 1, ;, monthToUse, =]
[), +, 1, ;, }, else, {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), -, 1, ;, monthToUse]
[%, iMax, ), +, 1, ;, }, else, {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), -, 1]
[), +, 1, ;, }, else, {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), -, 1, ;, monthToUse]
[;, }, else, {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), -, 1, ;, monthToUse, =, Math, .]
[=, thisYear, +, (, monthToUse, /, iMax, ), -, 1, ;, monthToUse, =, Math, ., abs, (, monthToUse, ), ;]
[;, monthToUse, =, Math, ., abs, (, monthToUse, ), ;, int, remMonthToUse, =, monthToUse, %, iMax, ;, if, (, remMonthToUse]
[-, 1, ;, monthToUse, =, Math, ., abs, (, monthToUse, ), ;, int, remMonthToUse, =, monthToUse, %, iMax, ;, if]
[+, (, monthToUse, /, iMax, ), -, 1, ;, monthToUse, =, Math, ., abs, (, monthToUse, ), ;, int, remMonthToUse]
[-, 1, ;, monthToUse, =, Math, ., abs, (, monthToUse, ), ;, int, remMonthToUse, =, monthToUse, %, iMax, ;, if]
[), -, 1, ;, monthToUse, =, Math, ., abs, (, monthToUse, ), ;, int, remMonthToUse, =, monthToUse, %, iMax, ;]
[/, iMax, ), -, 1, ;, monthToUse, =, Math, ., abs, (, monthToUse, ), ;, int, remMonthToUse, =, monthToUse, %]
[), -, 1, ;, monthToUse, =, Math, ., abs, (, monthToUse, ), ;, int, remMonthToUse, =, monthToUse, %, iMax, ;]
[;, monthToUse, =, Math, ., abs, (, monthToUse, ), ;, int, remMonthToUse, =, monthToUse, %, iMax, ;, if, (, remMonthToUse]
[=, Math, ., abs, (, monthToUse, ), ;, int, remMonthToUse, =, monthToUse, %, iMax, ;, if, (, remMonthToUse, ==, 0]
[;, int, remMonthToUse, =, monthToUse, %, iMax, ;, if, (, remMonthToUse, ==, 0, ), {, remMonthToUse, =, iMax, ;, }]
[., abs, (, monthToUse, ), ;, int, remMonthToUse, =, monthToUse, %, iMax, ;, if, (, remMonthToUse, ==, 0, ), {]
[), ;, int, remMonthToUse, =, monthToUse, %, iMax, ;, if, (, remMonthToUse, ==, 0, ), {, remMonthToUse, =, iMax, ;]
[;, if, (, remMonthToUse, ==, 0, ), {, remMonthToUse, =, iMax, ;, }, monthToUse, =, iMax, -, remMonthToUse, +, 1]
[%, iMax, ;, if, (, remMonthToUse, ==, 0, ), {, remMonthToUse, =, iMax, ;, }, monthToUse, =, iMax, -, remMonthToUse]
[;, if, (, remMonthToUse, ==, 0, ), {, remMonthToUse, =, iMax, ;, }, monthToUse, =, iMax, -, remMonthToUse, +, 1]
[), {, remMonthToUse, =, iMax, ;, }, monthToUse, =, iMax, -, remMonthToUse, +, 1, ;, if, (, monthToUse, ==, 1]
[==, 0, ), {, remMonthToUse, =, iMax, ;, }, monthToUse, =, iMax, -, remMonthToUse, +, 1, ;, if, (, monthToUse]
[), {, remMonthToUse, =, iMax, ;, }, monthToUse, =, iMax, -, remMonthToUse, +, 1, ;, if, (, monthToUse, ==, 1]
[=, iMax, ;, }, monthToUse, =, iMax, -, remMonthToUse, +, 1, ;, if, (, monthToUse, ==, 1, ), {, yearToUse]
[;, }, monthToUse, =, iMax, -, remMonthToUse, +, 1, ;, if, (, monthToUse, ==, 1, ), {, yearToUse, +=, 1]
[=, iMax, -, remMonthToUse, +, 1, ;, if, (, monthToUse, ==, 1, ), {, yearToUse, +=, 1, ;, }, }]
[;, if, (, monthToUse, ==, 1, ), {, yearToUse, +=, 1, ;, }, }, int, dayToUse, =, iChronology, ., getDayOfMonth]
[+, 1, ;, if, (, monthToUse, ==, 1, ), {, yearToUse, +=, 1, ;, }, }, int, dayToUse, =, iChronology]
[-, remMonthToUse, +, 1, ;, if, (, monthToUse, ==, 1, ), {, yearToUse, +=, 1, ;, }, }, int, dayToUse]
[+, 1, ;, if, (, monthToUse, ==, 1, ), {, yearToUse, +=, 1, ;, }, }, int, dayToUse, =, iChronology]
[;, if, (, monthToUse, ==, 1, ), {, yearToUse, +=, 1, ;, }, }, int, dayToUse, =, iChronology, ., getDayOfMonth]
[), {, yearToUse, +=, 1, ;, }, }, int, dayToUse, =, iChronology, ., getDayOfMonth, (, instant, ,, thisYear, ,, thisMonth]
[==, 1, ), {, yearToUse, +=, 1, ;, }, }, int, dayToUse, =, iChronology, ., getDayOfMonth, (, instant, ,, thisYear]
[), {, yearToUse, +=, 1, ;, }, }, int, dayToUse, =, iChronology, ., getDayOfMonth, (, instant, ,, thisYear, ,, thisMonth]
[+=, 1, ;, }, }, int, dayToUse, =, iChronology, ., getDayOfMonth, (, instant, ,, thisYear, ,, thisMonth, ), ;, int]
[;, }, }, int, dayToUse, =, iChronology, ., getDayOfMonth, (, instant, ,, thisYear, ,, thisMonth, ), ;, int, maxDay, =]
[;, int, maxDay, =, iChronology, ., getDaysInYearMonth, (, yearToUse, ,, monthToUse, ), ;, if, (, dayToUse, >, maxDay, ), {]
[., getDayOfMonth, (, instant, ,, thisYear, ,, thisMonth, ), ;, int, maxDay, =, iChronology, ., getDaysInYearMonth, (, yearToUse, ,, monthToUse]
[,, thisYear, ,, thisMonth, ), ;, int, maxDay, =, iChronology, ., getDaysInYearMonth, (, yearToUse, ,, monthToUse, ), ;, if, (]
[,, thisMonth, ), ;, int, maxDay, =, iChronology, ., getDaysInYearMonth, (, yearToUse, ,, monthToUse, ), ;, if, (, dayToUse, >]
[), ;, int, maxDay, =, iChronology, ., getDaysInYearMonth, (, yearToUse, ,, monthToUse, ), ;, if, (, dayToUse, >, maxDay, )]
[;, if, (, dayToUse, >, maxDay, ), {, dayToUse, =, maxDay, ;, }, long, datePart, =, iChronology, ., getYearMonthDayMillis, (]
[., getDaysInYearMonth, (, yearToUse, ,, monthToUse, ), ;, if, (, dayToUse, >, maxDay, ), {, dayToUse, =, maxDay, ;, }]
[,, monthToUse, ), ;, if, (, dayToUse, >, maxDay, ), {, dayToUse, =, maxDay, ;, }, long, datePart, =, iChronology]
[), ;, if, (, dayToUse, >, maxDay, ), {, dayToUse, =, maxDay, ;, }, long, datePart, =, iChronology, ., getYearMonthDayMillis]
[), {, dayToUse, =, maxDay, ;, }, long, datePart, =, iChronology, ., getYearMonthDayMillis, (, yearToUse, ,, monthToUse, ,, dayToUse, )]
[>, maxDay, ), {, dayToUse, =, maxDay, ;, }, long, datePart, =, iChronology, ., getYearMonthDayMillis, (, yearToUse, ,, monthToUse, ,]
[), {, dayToUse, =, maxDay, ;, }, long, datePart, =, iChronology, ., getYearMonthDayMillis, (, yearToUse, ,, monthToUse, ,, dayToUse, )]
[=, maxDay, ;, }, long, datePart, =, iChronology, ., getYearMonthDayMillis, (, yearToUse, ,, monthToUse, ,, dayToUse, ), ;, return, datePart]
[;, }, long, datePart, =, iChronology, ., getYearMonthDayMillis, (, yearToUse, ,, monthToUse, ,, dayToUse, ), ;, return, datePart, +, timePart]
[;, return, datePart, +, timePart, ;, }, public, long, add, (, long, instant, ,, long, months, ), {, int, i_months]
[., getYearMonthDayMillis, (, yearToUse, ,, monthToUse, ,, dayToUse, ), ;, return, datePart, +, timePart, ;, }, public, long, add, (]
[,, monthToUse, ,, dayToUse, ), ;, return, datePart, +, timePart, ;, }, public, long, add, (, long, instant, ,, long]
[,, dayToUse, ), ;, return, datePart, +, timePart, ;, }, public, long, add, (, long, instant, ,, long, months, )]
[), ;, return, datePart, +, timePart, ;, }, public, long, add, (, long, instant, ,, long, months, ), {, int]
[;, }, public, long, add, (, long, instant, ,, long, months, ), {, int, i_months, =, (, int, ), months]
[+, timePart, ;, }, public, long, add, (, long, instant, ,, long, months, ), {, int, i_months, =, (, int]
[;, }, public, long, add, (, long, instant, ,, long, months, ), {, int, i_months, =, (, int, ), months]
[;, if, (, i_months, ==, months, ), {, return, add, (, instant, ,, i_months, ), ;, }, long, timePart, =]
[;, if, (, i_months, ==, months, ), {, return, add, (, instant, ,, i_months, ), ;, }, long, timePart, =]
[), {, return, add, (, instant, ,, i_months, ), ;, }, long, timePart, =, iChronology, ., getMillisOfDay, (, instant, )]
[==, months, ), {, return, add, (, instant, ,, i_months, ), ;, }, long, timePart, =, iChronology, ., getMillisOfDay, (]
[), {, return, add, (, instant, ,, i_months, ), ;, }, long, timePart, =, iChronology, ., getMillisOfDay, (, instant, )]
[;, }, long, timePart, =, iChronology, ., getMillisOfDay, (, instant, ), ;, int, thisYear, =, iChronology, ., getYear, (, instant]
[,, i_months, ), ;, }, long, timePart, =, iChronology, ., getMillisOfDay, (, instant, ), ;, int, thisYear, =, iChronology, .]
[), ;, }, long, timePart, =, iChronology, ., getMillisOfDay, (, instant, ), ;, int, thisYear, =, iChronology, ., getYear, (]
[;, int, thisYear, =, iChronology, ., getYear, (, instant, ), ;, int, thisMonth, =, iChronology, ., getMonthOfYear, (, instant, ,]
[., getMillisOfDay, (, instant, ), ;, int, thisYear, =, iChronology, ., getYear, (, instant, ), ;, int, thisMonth, =, iChronology]
[), ;, int, thisYear, =, iChronology, ., getYear, (, instant, ), ;, int, thisMonth, =, iChronology, ., getMonthOfYear, (, instant]
[;, int, thisMonth, =, iChronology, ., getMonthOfYear, (, instant, ,, thisYear, ), ;, long, yearToUse, ;, long, monthToUse, =, thisMonth]
[., getYear, (, instant, ), ;, int, thisMonth, =, iChronology, ., getMonthOfYear, (, instant, ,, thisYear, ), ;, long, yearToUse]
[), ;, int, thisMonth, =, iChronology, ., getMonthOfYear, (, instant, ,, thisYear, ), ;, long, yearToUse, ;, long, monthToUse, =]
[;, long, yearToUse, ;, long, monthToUse, =, thisMonth, -, 1, +, months, ;, if, (, monthToUse, >=, 0, ), {]
[., getMonthOfYear, (, instant, ,, thisYear, ), ;, long, yearToUse, ;, long, monthToUse, =, thisMonth, -, 1, +, months, ;]
[,, thisYear, ), ;, long, yearToUse, ;, long, monthToUse, =, thisMonth, -, 1, +, months, ;, if, (, monthToUse, >=]
[), ;, long, yearToUse, ;, long, monthToUse, =, thisMonth, -, 1, +, months, ;, if, (, monthToUse, >=, 0, )]
[;, if, (, monthToUse, >=, 0, ), {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), ;, monthToUse, =]
[+, months, ;, if, (, monthToUse, >=, 0, ), {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), ;]
[-, 1, +, months, ;, if, (, monthToUse, >=, 0, ), {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax]
[+, months, ;, if, (, monthToUse, >=, 0, ), {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), ;]
[;, if, (, monthToUse, >=, 0, ), {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), ;, monthToUse, =]
[), {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), ;, monthToUse, =, (, monthToUse, %, iMax, ), +]
[>=, 0, ), {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), ;, monthToUse, =, (, monthToUse, %, iMax]
[), {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), ;, monthToUse, =, (, monthToUse, %, iMax, ), +]
[=, thisYear, +, (, monthToUse, /, iMax, ), ;, monthToUse, =, (, monthToUse, %, iMax, ), +, 1, ;, }]
[;, monthToUse, =, (, monthToUse, %, iMax, ), +, 1, ;, }, else, {, yearToUse, =, thisYear, +, (, monthToUse]
[+, (, monthToUse, /, iMax, ), ;, monthToUse, =, (, monthToUse, %, iMax, ), +, 1, ;, }, else, {]
[;, monthToUse, =, (, monthToUse, %, iMax, ), +, 1, ;, }, else, {, yearToUse, =, thisYear, +, (, monthToUse]
[), ;, monthToUse, =, (, monthToUse, %, iMax, ), +, 1, ;, }, else, {, yearToUse, =, thisYear, +, (]
[/, iMax, ), ;, monthToUse, =, (, monthToUse, %, iMax, ), +, 1, ;, }, else, {, yearToUse, =, thisYear]
[), ;, monthToUse, =, (, monthToUse, %, iMax, ), +, 1, ;, }, else, {, yearToUse, =, thisYear, +, (]
[=, (, monthToUse, %, iMax, ), +, 1, ;, }, else, {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax]
[;, }, else, {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), -, 1, ;, monthToUse, =, Math, .]
[+, 1, ;, }, else, {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), -, 1, ;, monthToUse, =]
[), +, 1, ;, }, else, {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), -, 1, ;, monthToUse]
[%, iMax, ), +, 1, ;, }, else, {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), -, 1]
[), +, 1, ;, }, else, {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), -, 1, ;, monthToUse]
[;, }, else, {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), -, 1, ;, monthToUse, =, Math, .]
[=, thisYear, +, (, monthToUse, /, iMax, ), -, 1, ;, monthToUse, =, Math, ., abs, (, monthToUse, ), ;]
[;, monthToUse, =, Math, ., abs, (, monthToUse, ), ;, int, remMonthToUse, =, (, int, ), (, monthToUse, %, iMax]
[-, 1, ;, monthToUse, =, Math, ., abs, (, monthToUse, ), ;, int, remMonthToUse, =, (, int, ), (, monthToUse]
[+, (, monthToUse, /, iMax, ), -, 1, ;, monthToUse, =, Math, ., abs, (, monthToUse, ), ;, int, remMonthToUse]
[-, 1, ;, monthToUse, =, Math, ., abs, (, monthToUse, ), ;, int, remMonthToUse, =, (, int, ), (, monthToUse]
[), -, 1, ;, monthToUse, =, Math, ., abs, (, monthToUse, ), ;, int, remMonthToUse, =, (, int, ), (]
[/, iMax, ), -, 1, ;, monthToUse, =, Math, ., abs, (, monthToUse, ), ;, int, remMonthToUse, =, (, int]
[), -, 1, ;, monthToUse, =, Math, ., abs, (, monthToUse, ), ;, int, remMonthToUse, =, (, int, ), (]
[;, monthToUse, =, Math, ., abs, (, monthToUse, ), ;, int, remMonthToUse, =, (, int, ), (, monthToUse, %, iMax]
[=, Math, ., abs, (, monthToUse, ), ;, int, remMonthToUse, =, (, int, ), (, monthToUse, %, iMax, ), ;]
[;, int, remMonthToUse, =, (, int, ), (, monthToUse, %, iMax, ), ;, if, (, remMonthToUse, ==, 0, ), {]
[., abs, (, monthToUse, ), ;, int, remMonthToUse, =, (, int, ), (, monthToUse, %, iMax, ), ;, if, (]
[), ;, int, remMonthToUse, =, (, int, ), (, monthToUse, %, iMax, ), ;, if, (, remMonthToUse, ==, 0, )]
[;, if, (, remMonthToUse, ==, 0, ), {, remMonthToUse, =, iMax, ;, }, monthToUse, =, iMax, -, remMonthToUse, +, 1]
[;, if, (, remMonthToUse, ==, 0, ), {, remMonthToUse, =, iMax, ;, }, monthToUse, =, iMax, -, remMonthToUse, +, 1]
[), ;, if, (, remMonthToUse, ==, 0, ), {, remMonthToUse, =, iMax, ;, }, monthToUse, =, iMax, -, remMonthToUse, +]
[%, iMax, ), ;, if, (, remMonthToUse, ==, 0, ), {, remMonthToUse, =, iMax, ;, }, monthToUse, =, iMax, -]
[), ;, if, (, remMonthToUse, ==, 0, ), {, remMonthToUse, =, iMax, ;, }, monthToUse, =, iMax, -, remMonthToUse, +]
[), {, remMonthToUse, =, iMax, ;, }, monthToUse, =, iMax, -, remMonthToUse, +, 1, ;, if, (, monthToUse, ==, 1]
[==, 0, ), {, remMonthToUse, =, iMax, ;, }, monthToUse, =, iMax, -, remMonthToUse, +, 1, ;, if, (, monthToUse]
[), {, remMonthToUse, =, iMax, ;, }, monthToUse, =, iMax, -, remMonthToUse, +, 1, ;, if, (, monthToUse, ==, 1]
[=, iMax, ;, }, monthToUse, =, iMax, -, remMonthToUse, +, 1, ;, if, (, monthToUse, ==, 1, ), {, yearToUse]
[;, }, monthToUse, =, iMax, -, remMonthToUse, +, 1, ;, if, (, monthToUse, ==, 1, ), {, yearToUse, +=, 1]
[=, iMax, -, remMonthToUse, +, 1, ;, if, (, monthToUse, ==, 1, ), {, yearToUse, +=, 1, ;, }, }]
[;, if, (, monthToUse, ==, 1, ), {, yearToUse, +=, 1, ;, }, }, if, (, yearToUse, <, iChronology, .]
[+, 1, ;, if, (, monthToUse, ==, 1, ), {, yearToUse, +=, 1, ;, }, }, if, (, yearToUse, <]
[-, remMonthToUse, +, 1, ;, if, (, monthToUse, ==, 1, ), {, yearToUse, +=, 1, ;, }, }, if, (]
[+, 1, ;, if, (, monthToUse, ==, 1, ), {, yearToUse, +=, 1, ;, }, }, if, (, yearToUse, <]
[;, if, (, monthToUse, ==, 1, ), {, yearToUse, +=, 1, ;, }, }, if, (, yearToUse, <, iChronology, .]
[), {, yearToUse, +=, 1, ;, }, }, if, (, yearToUse, <, iChronology, ., getMinYear, (, ), ||, yearToUse, >]
[==, 1, ), {, yearToUse, +=, 1, ;, }, }, if, (, yearToUse, <, iChronology, ., getMinYear, (, ), ||]
[), {, yearToUse, +=, 1, ;, }, }, if, (, yearToUse, <, iChronology, ., getMinYear, (, ), ||, yearToUse, >]
[+=, 1, ;, }, }, if, (, yearToUse, <, iChronology, ., getMinYear, (, ), ||, yearToUse, >, iChronology, ., getMaxYear]
[;, }, }, if, (, yearToUse, <, iChronology, ., getMinYear, (, ), ||, yearToUse, >, iChronology, ., getMaxYear, (, )]
[), {, throw, new, IllegalArgumentException, (, "Magnitude of add amount is too large: ", +, months, ), ;, }, int, i_yearToUse, =, (, int, ), yearToUse, ;]
[||, yearToUse, >, iChronology, ., getMaxYear, (, ), ), {, throw, new, IllegalArgumentException, (, "Magnitude of add amount is too large: ", +, months, ), ;, }]
[<, iChronology, ., getMinYear, (, ), ||, yearToUse, >, iChronology, ., getMaxYear, (, ), ), {, throw, new, IllegalArgumentException, (]
[||, yearToUse, >, iChronology, ., getMaxYear, (, ), ), {, throw, new, IllegalArgumentException, (, "Magnitude of add amount is too large: ", +, months, ), ;, }]
[., getMinYear, (, ), ||, yearToUse, >, iChronology, ., getMaxYear, (, ), ), {, throw, new, IllegalArgumentException, (, "Magnitude of add amount is too large: ", +]
[), {, throw, new, IllegalArgumentException, (, "Magnitude of add amount is too large: ", +, months, ), ;, }, int, i_yearToUse, =, (, int, ), yearToUse, ;]
[>, iChronology, ., getMaxYear, (, ), ), {, throw, new, IllegalArgumentException, (, "Magnitude of add amount is too large: ", +, months, ), ;, }, int, i_yearToUse]
[), {, throw, new, IllegalArgumentException, (, "Magnitude of add amount is too large: ", +, months, ), ;, }, int, i_yearToUse, =, (, int, ), yearToUse, ;]
[., getMaxYear, (, ), ), {, throw, new, IllegalArgumentException, (, "Magnitude of add amount is too large: ", +, months, ), ;, }, int, i_yearToUse, =, (]
[;, }, int, i_yearToUse, =, (, int, ), yearToUse, ;, int, i_monthToUse, =, (, int, ), monthToUse, ;, int, dayToUse]
[), ;, }, int, i_yearToUse, =, (, int, ), yearToUse, ;, int, i_monthToUse, =, (, int, ), monthToUse, ;, int]
[+, months, ), ;, }, int, i_yearToUse, =, (, int, ), yearToUse, ;, int, i_monthToUse, =, (, int, ), monthToUse]
[), ;, }, int, i_yearToUse, =, (, int, ), yearToUse, ;, int, i_monthToUse, =, (, int, ), monthToUse, ;, int]
[;, int, i_monthToUse, =, (, int, ), monthToUse, ;, int, dayToUse, =, iChronology, ., getDayOfMonth, (, instant, ,, thisYear, ,]
[;, int, i_monthToUse, =, (, int, ), monthToUse, ;, int, dayToUse, =, iChronology, ., getDayOfMonth, (, instant, ,, thisYear, ,]
[;, int, dayToUse, =, iChronology, ., getDayOfMonth, (, instant, ,, thisYear, ,, thisMonth, ), ;, int, maxDay, =, iChronology, .]
[;, int, dayToUse, =, iChronology, ., getDayOfMonth, (, instant, ,, thisYear, ,, thisMonth, ), ;, int, maxDay, =, iChronology, .]
[;, int, maxDay, =, iChronology, ., getDaysInYearMonth, (, i_yearToUse, ,, i_monthToUse, ), ;, if, (, dayToUse, >, maxDay, ), {]
[., getDayOfMonth, (, instant, ,, thisYear, ,, thisMonth, ), ;, int, maxDay, =, iChronology, ., getDaysInYearMonth, (, i_yearToUse, ,, i_monthToUse]
[,, thisYear, ,, thisMonth, ), ;, int, maxDay, =, iChronology, ., getDaysInYearMonth, (, i_yearToUse, ,, i_monthToUse, ), ;, if, (]
[,, thisMonth, ), ;, int, maxDay, =, iChronology, ., getDaysInYearMonth, (, i_yearToUse, ,, i_monthToUse, ), ;, if, (, dayToUse, >]
[), ;, int, maxDay, =, iChronology, ., getDaysInYearMonth, (, i_yearToUse, ,, i_monthToUse, ), ;, if, (, dayToUse, >, maxDay, )]
[;, if, (, dayToUse, >, maxDay, ), {, dayToUse, =, maxDay, ;, }, long, datePart, =, iChronology, ., getYearMonthDayMillis, (]
[., getDaysInYearMonth, (, i_yearToUse, ,, i_monthToUse, ), ;, if, (, dayToUse, >, maxDay, ), {, dayToUse, =, maxDay, ;, }]
[,, i_monthToUse, ), ;, if, (, dayToUse, >, maxDay, ), {, dayToUse, =, maxDay, ;, }, long, datePart, =, iChronology]
[), ;, if, (, dayToUse, >, maxDay, ), {, dayToUse, =, maxDay, ;, }, long, datePart, =, iChronology, ., getYearMonthDayMillis]
[), {, dayToUse, =, maxDay, ;, }, long, datePart, =, iChronology, ., getYearMonthDayMillis, (, i_yearToUse, ,, i_monthToUse, ,, dayToUse, )]
[>, maxDay, ), {, dayToUse, =, maxDay, ;, }, long, datePart, =, iChronology, ., getYearMonthDayMillis, (, i_yearToUse, ,, i_monthToUse, ,]
[), {, dayToUse, =, maxDay, ;, }, long, datePart, =, iChronology, ., getYearMonthDayMillis, (, i_yearToUse, ,, i_monthToUse, ,, dayToUse, )]
[=, maxDay, ;, }, long, datePart, =, iChronology, ., getYearMonthDayMillis, (, i_yearToUse, ,, i_monthToUse, ,, dayToUse, ), ;, return, datePart]
[;, }, long, datePart, =, iChronology, ., getYearMonthDayMillis, (, i_yearToUse, ,, i_monthToUse, ,, dayToUse, ), ;, return, datePart, +, timePart]
[;, return, datePart, +, timePart, ;, }, public, int, [, ], add, (, ReadablePartial, partial, ,, int, fieldIndex, ,, int]
[., getYearMonthDayMillis, (, i_yearToUse, ,, i_monthToUse, ,, dayToUse, ), ;, return, datePart, +, timePart, ;, }, public, int, [, ]]
[,, i_monthToUse, ,, dayToUse, ), ;, return, datePart, +, timePart, ;, }, public, int, [, ], add, (, ReadablePartial, partial]
[,, dayToUse, ), ;, return, datePart, +, timePart, ;, }, public, int, [, ], add, (, ReadablePartial, partial, ,, int]
[), ;, return, datePart, +, timePart, ;, }, public, int, [, ], add, (, ReadablePartial, partial, ,, int, fieldIndex, ,]
[;, }, public, int, [, ], add, (, ReadablePartial, partial, ,, int, fieldIndex, ,, int, [, ], values, ,, int]
[+, timePart, ;, }, public, int, [, ], add, (, ReadablePartial, partial, ,, int, fieldIndex, ,, int, [, ], values]
[;, }, public, int, [, ], add, (, ReadablePartial, partial, ,, int, fieldIndex, ,, int, [, ], values, ,, int]
[), {, return, values, ;, }, if, (, partial, ., size, (, ), >, 0, &&, partial, ., getFieldType, (]
[==, 0, ), {, return, values, ;, }, if, (, partial, ., size, (, ), >, 0, &&, partial, .]
[), {, return, values, ;, }, if, (, partial, ., size, (, ), >, 0, &&, partial, ., getFieldType, (]
[;, }, if, (, partial, ., size, (, ), >, 0, &&, partial, ., getFieldType, (, 0, ), ., equals]
[), {, int, curMonth0, =, partial, ., getValue, (, 0, ), -, 1, ;, int, newMonth, =, (, (, curMonth0]
[&&, fieldIndex, ==, 0, ), {, int, curMonth0, =, partial, ., getValue, (, 0, ), -, 1, ;, int, newMonth]
[&&, partial, ., getFieldType, (, 0, ), ., equals, (, DateTimeFieldType, ., monthOfYear, (, ), ), &&, fieldIndex, ==, 0]
[>, 0, &&, partial, ., getFieldType, (, 0, ), ., equals, (, DateTimeFieldType, ., monthOfYear, (, ), ), &&, fieldIndex]
[., size, (, ), >, 0, &&, partial, ., getFieldType, (, 0, ), ., equals, (, DateTimeFieldType, ., monthOfYear, (]
[&&, partial, ., getFieldType, (, 0, ), ., equals, (, DateTimeFieldType, ., monthOfYear, (, ), ), &&, fieldIndex, ==, 0]
[&&, fieldIndex, ==, 0, ), {, int, curMonth0, =, partial, ., getValue, (, 0, ), -, 1, ;, int, newMonth]
[., equals, (, DateTimeFieldType, ., monthOfYear, (, ), ), &&, fieldIndex, ==, 0, ), {, int, curMonth0, =, partial, .]
[., getFieldType, (, 0, ), ., equals, (, DateTimeFieldType, ., monthOfYear, (, ), ), &&, fieldIndex, ==, 0, ), {]
[), ., equals, (, DateTimeFieldType, ., monthOfYear, (, ), ), &&, fieldIndex, ==, 0, ), {, int, curMonth0, =, partial]
[), &&, fieldIndex, ==, 0, ), {, int, curMonth0, =, partial, ., getValue, (, 0, ), -, 1, ;, int]
[., monthOfYear, (, ), ), &&, fieldIndex, ==, 0, ), {, int, curMonth0, =, partial, ., getValue, (, 0, )]
[), {, int, curMonth0, =, partial, ., getValue, (, 0, ), -, 1, ;, int, newMonth, =, (, (, curMonth0]
[==, 0, ), {, int, curMonth0, =, partial, ., getValue, (, 0, ), -, 1, ;, int, newMonth, =, (]
[), {, int, curMonth0, =, partial, ., getValue, (, 0, ), -, 1, ;, int, newMonth, =, (, (, curMonth0]
[;, int, newMonth, =, (, (, curMonth0, +, (, valueToAdd, %, 12, ), +, 12, ), %, 12, ), +]
[-, 1, ;, int, newMonth, =, (, (, curMonth0, +, (, valueToAdd, %, 12, ), +, 12, ), %, 12]
[., getValue, (, 0, ), -, 1, ;, int, newMonth, =, (, (, curMonth0, +, (, valueToAdd, %, 12, )]
[), -, 1, ;, int, newMonth, =, (, (, curMonth0, +, (, valueToAdd, %, 12, ), +, 12, ), %]
[;, int, newMonth, =, (, (, curMonth0, +, (, valueToAdd, %, 12, ), +, 12, ), %, 12, ), +]
[;, return, set, (, partial, ,, 0, ,, values, ,, newMonth, ), ;, }, if, (, DateTimeUtils, ., isContiguous, (]
[+, 1, ;, return, set, (, partial, ,, 0, ,, values, ,, newMonth, ), ;, }, if, (, DateTimeUtils, .]
[), +, 1, ;, return, set, (, partial, ,, 0, ,, values, ,, newMonth, ), ;, }, if, (, DateTimeUtils]
[%, 12, ), +, 1, ;, return, set, (, partial, ,, 0, ,, values, ,, newMonth, ), ;, }, if]
[), %, 12, ), +, 1, ;, return, set, (, partial, ,, 0, ,, values, ,, newMonth, ), ;, }]
[+, 12, ), %, 12, ), +, 1, ;, return, set, (, partial, ,, 0, ,, values, ,, newMonth, )]
[+, (, valueToAdd, %, 12, ), +, 12, ), %, 12, ), +, 1, ;, return, set, (, partial, ,]
[+, 12, ), %, 12, ), +, 1, ;, return, set, (, partial, ,, 0, ,, values, ,, newMonth, )]
[), +, 12, ), %, 12, ), +, 1, ;, return, set, (, partial, ,, 0, ,, values, ,, newMonth]
[%, 12, ), +, 12, ), %, 12, ), +, 1, ;, return, set, (, partial, ,, 0, ,, values]
[), +, 12, ), %, 12, ), +, 1, ;, return, set, (, partial, ,, 0, ,, values, ,, newMonth]
[), %, 12, ), +, 1, ;, return, set, (, partial, ,, 0, ,, values, ,, newMonth, ), ;, }]
[), +, 1, ;, return, set, (, partial, ,, 0, ,, values, ,, newMonth, ), ;, }, if, (, DateTimeUtils]
[;, return, set, (, partial, ,, 0, ,, values, ,, newMonth, ), ;, }, if, (, DateTimeUtils, ., isContiguous, (]
[;, }, if, (, DateTimeUtils, ., isContiguous, (, partial, ), ), {, long, instant, =, 0L, ;, for, (, int]
[,, 0, ,, values, ,, newMonth, ), ;, }, if, (, DateTimeUtils, ., isContiguous, (, partial, ), ), {, long]
[,, values, ,, newMonth, ), ;, }, if, (, DateTimeUtils, ., isContiguous, (, partial, ), ), {, long, instant, =]
[,, newMonth, ), ;, }, if, (, DateTimeUtils, ., isContiguous, (, partial, ), ), {, long, instant, =, 0L, ;]
[), ;, }, if, (, DateTimeUtils, ., isContiguous, (, partial, ), ), {, long, instant, =, 0L, ;, for, (]
[), {, long, instant, =, 0L, ;, for, (, int, i, =, 0, ,, isize, =, partial, ., size, (]
[., isContiguous, (, partial, ), ), {, long, instant, =, 0L, ;, for, (, int, i, =, 0, ,, isize]
[), ), {, long, instant, =, 0L, ;, for, (, int, i, =, 0, ,, isize, =, partial, ., size]
[;, for, (, int, i, =, 0, ,, isize, =, partial, ., size, (, ), ;, i, <, isize, ;]
[,, isize, =, partial, ., size, (, ), ;, i, <, isize, ;, i, ++, ), {, instant, =, partial]
[;, i, <, isize, ;, i, ++, ), {, instant, =, partial, ., getFieldType, (, i, ), ., getField, (]
[., size, (, ), ;, i, <, isize, ;, i, ++, ), {, instant, =, partial, ., getFieldType, (, i]
[;, i, ++, ), {, instant, =, partial, ., getFieldType, (, i, ), ., getField, (, iChronology, ), ., set]
[<, isize, ;, i, ++, ), {, instant, =, partial, ., getFieldType, (, i, ), ., getField, (, iChronology, )]
[;, i, ++, ), {, instant, =, partial, ., getFieldType, (, i, ), ., getField, (, iChronology, ), ., set]
[), {, instant, =, partial, ., getFieldType, (, i, ), ., getField, (, iChronology, ), ., set, (, instant, ,]
[++, ), {, instant, =, partial, ., getFieldType, (, i, ), ., getField, (, iChronology, ), ., set, (, instant]
[=, partial, ., getFieldType, (, i, ), ., getField, (, iChronology, ), ., set, (, instant, ,, values, [, i]
[;, }, instant, =, add, (, instant, ,, valueToAdd, ), ;, return, iChronology, ., get, (, partial, ,, instant, )]
[., set, (, instant, ,, values, [, i, ], ), ;, }, instant, =, add, (, instant, ,, valueToAdd, )]
[., getField, (, iChronology, ), ., set, (, instant, ,, values, [, i, ], ), ;, }, instant, =, add]
[., getFieldType, (, i, ), ., getField, (, iChronology, ), ., set, (, instant, ,, values, [, i, ], )]
[), ., getField, (, iChronology, ), ., set, (, instant, ,, values, [, i, ], ), ;, }, instant, =]
[), ., set, (, instant, ,, values, [, i, ], ), ;, }, instant, =, add, (, instant, ,, valueToAdd]
[,, values, [, i, ], ), ;, }, instant, =, add, (, instant, ,, valueToAdd, ), ;, return, iChronology, .]
[), ;, }, instant, =, add, (, instant, ,, valueToAdd, ), ;, return, iChronology, ., get, (, partial, ,, instant]
[[, i, ], ), ;, }, instant, =, add, (, instant, ,, valueToAdd, ), ;, return, iChronology, ., get, (]
[], ), ;, }, instant, =, add, (, instant, ,, valueToAdd, ), ;, return, iChronology, ., get, (, partial, ,]
[=, add, (, instant, ,, valueToAdd, ), ;, return, iChronology, ., get, (, partial, ,, instant, ), ;, }, else]
[;, return, iChronology, ., get, (, partial, ,, instant, ), ;, }, else, {, return, super, ., add, (, partial]
[,, valueToAdd, ), ;, return, iChronology, ., get, (, partial, ,, instant, ), ;, }, else, {, return, super, .]
[), ;, return, iChronology, ., get, (, partial, ,, instant, ), ;, }, else, {, return, super, ., add, (]
[;, }, else, {, return, super, ., add, (, partial, ,, fieldIndex, ,, values, ,, valueToAdd, ), ;, }, }]
[., get, (, partial, ,, instant, ), ;, }, else, {, return, super, ., add, (, partial, ,, fieldIndex, ,]
[,, instant, ), ;, }, else, {, return, super, ., add, (, partial, ,, fieldIndex, ,, values, ,, valueToAdd, )]
[), ;, }, else, {, return, super, ., add, (, partial, ,, fieldIndex, ,, values, ,, valueToAdd, ), ;, }]
[;, }, }, public, long, addWrapField, (, long, instant, ,, int, months, ), {, return, set, (, instant, ,, FieldUtils]
[., add, (, partial, ,, fieldIndex, ,, values, ,, valueToAdd, ), ;, }, }, public, long, addWrapField, (, long, instant]
[,, fieldIndex, ,, values, ,, valueToAdd, ), ;, }, }, public, long, addWrapField, (, long, instant, ,, int, months, )]
[,, values, ,, valueToAdd, ), ;, }, }, public, long, addWrapField, (, long, instant, ,, int, months, ), {, return]
[,, valueToAdd, ), ;, }, }, public, long, addWrapField, (, long, instant, ,, int, months, ), {, return, set, (]
[), ;, }, }, public, long, addWrapField, (, long, instant, ,, int, months, ), {, return, set, (, instant, ,]
[;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, if, (, minuendInstant, <, subtrahendInstant, ), {]
[,, FieldUtils, ., getWrappedValue, (, get, (, instant, ), ,, months, ,, MIN, ,, iMax, ), ), ;, }, public]
[), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, if, (, minuendInstant, <, subtrahendInstant, )]
[., getWrappedValue, (, get, (, instant, ), ,, months, ,, MIN, ,, iMax, ), ), ;, }, public, long, getDifferenceAsLong]
[,, months, ,, MIN, ,, iMax, ), ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, )]
[), ,, months, ,, MIN, ,, iMax, ), ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant]
[,, MIN, ,, iMax, ), ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, if]
[,, iMax, ), ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, if, (, minuendInstant]
[), ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, if, (, minuendInstant, <, subtrahendInstant]
[), {, return, -, getDifference, (, subtrahendInstant, ,, minuendInstant, ), ;, }, int, minuendYear, =, iChronology, ., getYear, (, minuendInstant]
[<, subtrahendInstant, ), {, return, -, getDifference, (, subtrahendInstant, ,, minuendInstant, ), ;, }, int, minuendYear, =, iChronology, ., getYear]
[), {, return, -, getDifference, (, subtrahendInstant, ,, minuendInstant, ), ;, }, int, minuendYear, =, iChronology, ., getYear, (, minuendInstant]
[;, }, int, minuendYear, =, iChronology, ., getYear, (, minuendInstant, ), ;, int, minuendMonth, =, iChronology, ., getMonthOfYear, (, minuendInstant]
[;, }, int, minuendYear, =, iChronology, ., getYear, (, minuendInstant, ), ;, int, minuendMonth, =, iChronology, ., getMonthOfYear, (, minuendInstant]
[,, minuendInstant, ), ;, }, int, minuendYear, =, iChronology, ., getYear, (, minuendInstant, ), ;, int, minuendMonth, =, iChronology, .]
[), ;, }, int, minuendYear, =, iChronology, ., getYear, (, minuendInstant, ), ;, int, minuendMonth, =, iChronology, ., getMonthOfYear, (]
[;, int, minuendMonth, =, iChronology, ., getMonthOfYear, (, minuendInstant, ,, minuendYear, ), ;, int, subtrahendYear, =, iChronology, ., getYear, (]
[., getYear, (, minuendInstant, ), ;, int, minuendMonth, =, iChronology, ., getMonthOfYear, (, minuendInstant, ,, minuendYear, ), ;, int, subtrahendYear]
[), ;, int, minuendMonth, =, iChronology, ., getMonthOfYear, (, minuendInstant, ,, minuendYear, ), ;, int, subtrahendYear, =, iChronology, ., getYear]
[;, int, subtrahendYear, =, iChronology, ., getYear, (, subtrahendInstant, ), ;, int, subtrahendMonth, =, iChronology, ., getMonthOfYear, (, subtrahendInstant, ,]
[., getMonthOfYear, (, minuendInstant, ,, minuendYear, ), ;, int, subtrahendYear, =, iChronology, ., getYear, (, subtrahendInstant, ), ;, int, subtrahendMonth]
[,, minuendYear, ), ;, int, subtrahendYear, =, iChronology, ., getYear, (, subtrahendInstant, ), ;, int, subtrahendMonth, =, iChronology, ., getMonthOfYear]
[), ;, int, subtrahendYear, =, iChronology, ., getYear, (, subtrahendInstant, ), ;, int, subtrahendMonth, =, iChronology, ., getMonthOfYear, (, subtrahendInstant]
[;, int, subtrahendMonth, =, iChronology, ., getMonthOfYear, (, subtrahendInstant, ,, subtrahendYear, ), ;, long, difference, =, (, minuendYear, -, subtrahendYear]
[., getYear, (, subtrahendInstant, ), ;, int, subtrahendMonth, =, iChronology, ., getMonthOfYear, (, subtrahendInstant, ,, subtrahendYear, ), ;, long, difference]
[), ;, int, subtrahendMonth, =, iChronology, ., getMonthOfYear, (, subtrahendInstant, ,, subtrahendYear, ), ;, long, difference, =, (, minuendYear, -]
[;, long, difference, =, (, minuendYear, -, subtrahendYear, ), *, (, (, long, ), iMax, ), +, minuendMonth, -, subtrahendMonth]
[., getMonthOfYear, (, subtrahendInstant, ,, subtrahendYear, ), ;, long, difference, =, (, minuendYear, -, subtrahendYear, ), *, (, (, long]
[,, subtrahendYear, ), ;, long, difference, =, (, minuendYear, -, subtrahendYear, ), *, (, (, long, ), iMax, ), +]
[), ;, long, difference, =, (, minuendYear, -, subtrahendYear, ), *, (, (, long, ), iMax, ), +, minuendMonth, -]
[;, int, minuendDom, =, iChronology, ., getDayOfMonth, (, minuendInstant, ,, minuendYear, ,, minuendMonth, ), ;, if, (, minuendDom, ==, iChronology]
[-, subtrahendMonth, ;, int, minuendDom, =, iChronology, ., getDayOfMonth, (, minuendInstant, ,, minuendYear, ,, minuendMonth, ), ;, if, (, minuendDom]
[+, minuendMonth, -, subtrahendMonth, ;, int, minuendDom, =, iChronology, ., getDayOfMonth, (, minuendInstant, ,, minuendYear, ,, minuendMonth, ), ;, if]
[*, (, (, long, ), iMax, ), +, minuendMonth, -, subtrahendMonth, ;, int, minuendDom, =, iChronology, ., getDayOfMonth, (, minuendInstant]
[), *, (, (, long, ), iMax, ), +, minuendMonth, -, subtrahendMonth, ;, int, minuendDom, =, iChronology, ., getDayOfMonth, (]
[-, subtrahendYear, ), *, (, (, long, ), iMax, ), +, minuendMonth, -, subtrahendMonth, ;, int, minuendDom, =, iChronology, .]
[), *, (, (, long, ), iMax, ), +, minuendMonth, -, subtrahendMonth, ;, int, minuendDom, =, iChronology, ., getDayOfMonth, (]
[+, minuendMonth, -, subtrahendMonth, ;, int, minuendDom, =, iChronology, ., getDayOfMonth, (, minuendInstant, ,, minuendYear, ,, minuendMonth, ), ;, if]
[), +, minuendMonth, -, subtrahendMonth, ;, int, minuendDom, =, iChronology, ., getDayOfMonth, (, minuendInstant, ,, minuendYear, ,, minuendMonth, ), ;]
[), +, minuendMonth, -, subtrahendMonth, ;, int, minuendDom, =, iChronology, ., getDayOfMonth, (, minuendInstant, ,, minuendYear, ,, minuendMonth, ), ;]
[-, subtrahendMonth, ;, int, minuendDom, =, iChronology, ., getDayOfMonth, (, minuendInstant, ,, minuendYear, ,, minuendMonth, ), ;, if, (, minuendDom]
[;, int, minuendDom, =, iChronology, ., getDayOfMonth, (, minuendInstant, ,, minuendYear, ,, minuendMonth, ), ;, if, (, minuendDom, ==, iChronology]
[;, if, (, minuendDom, ==, iChronology, ., getDaysInYearMonth, (, minuendYear, ,, minuendMonth, ), ), {, int, subtrahendDom, =, iChronology, .]
[., getDayOfMonth, (, minuendInstant, ,, minuendYear, ,, minuendMonth, ), ;, if, (, minuendDom, ==, iChronology, ., getDaysInYearMonth, (, minuendYear, ,]
[,, minuendYear, ,, minuendMonth, ), ;, if, (, minuendDom, ==, iChronology, ., getDaysInYearMonth, (, minuendYear, ,, minuendMonth, ), ), {]
[,, minuendMonth, ), ;, if, (, minuendDom, ==, iChronology, ., getDaysInYearMonth, (, minuendYear, ,, minuendMonth, ), ), {, int, subtrahendDom]
[), ;, if, (, minuendDom, ==, iChronology, ., getDaysInYearMonth, (, minuendYear, ,, minuendMonth, ), ), {, int, subtrahendDom, =, iChronology]
[), {, int, subtrahendDom, =, iChronology, ., getDayOfMonth, (, subtrahendInstant, ,, subtrahendYear, ,, subtrahendMonth, ), ;, if, (, subtrahendDom, >]
[==, iChronology, ., getDaysInYearMonth, (, minuendYear, ,, minuendMonth, ), ), {, int, subtrahendDom, =, iChronology, ., getDayOfMonth, (, subtrahendInstant, ,]
[), {, int, subtrahendDom, =, iChronology, ., getDayOfMonth, (, subtrahendInstant, ,, subtrahendYear, ,, subtrahendMonth, ), ;, if, (, subtrahendDom, >]
[., getDaysInYearMonth, (, minuendYear, ,, minuendMonth, ), ), {, int, subtrahendDom, =, iChronology, ., getDayOfMonth, (, subtrahendInstant, ,, subtrahendYear, ,]
[,, minuendMonth, ), ), {, int, subtrahendDom, =, iChronology, ., getDayOfMonth, (, subtrahendInstant, ,, subtrahendYear, ,, subtrahendMonth, ), ;, if]
[), ), {, int, subtrahendDom, =, iChronology, ., getDayOfMonth, (, subtrahendInstant, ,, subtrahendYear, ,, subtrahendMonth, ), ;, if, (, subtrahendDom]
[;, if, (, subtrahendDom, >, minuendDom, ), {, subtrahendInstant, =, iChronology, ., dayOfMonth, (, ), ., set, (, subtrahendInstant, ,]
[., getDayOfMonth, (, subtrahendInstant, ,, subtrahendYear, ,, subtrahendMonth, ), ;, if, (, subtrahendDom, >, minuendDom, ), {, subtrahendInstant, =, iChronology]
[,, subtrahendYear, ,, subtrahendMonth, ), ;, if, (, subtrahendDom, >, minuendDom, ), {, subtrahendInstant, =, iChronology, ., dayOfMonth, (, )]
[,, subtrahendMonth, ), ;, if, (, subtrahendDom, >, minuendDom, ), {, subtrahendInstant, =, iChronology, ., dayOfMonth, (, ), ., set]
[), ;, if, (, subtrahendDom, >, minuendDom, ), {, subtrahendInstant, =, iChronology, ., dayOfMonth, (, ), ., set, (, subtrahendInstant]
[), {, subtrahendInstant, =, iChronology, ., dayOfMonth, (, ), ., set, (, subtrahendInstant, ,, minuendDom, ), ;, }, }, long]
[>, minuendDom, ), {, subtrahendInstant, =, iChronology, ., dayOfMonth, (, ), ., set, (, subtrahendInstant, ,, minuendDom, ), ;, }]
[), {, subtrahendInstant, =, iChronology, ., dayOfMonth, (, ), ., set, (, subtrahendInstant, ,, minuendDom, ), ;, }, }, long]
[=, iChronology, ., dayOfMonth, (, ), ., set, (, subtrahendInstant, ,, minuendDom, ), ;, }, }, long, minuendRem, =, minuendInstant]
[;, }, }, long, minuendRem, =, minuendInstant, -, iChronology, ., getYearMonthMillis, (, minuendYear, ,, minuendMonth, ), ;, long, subtrahendRem, =]
[., set, (, subtrahendInstant, ,, minuendDom, ), ;, }, }, long, minuendRem, =, minuendInstant, -, iChronology, ., getYearMonthMillis, (, minuendYear]
[., dayOfMonth, (, ), ., set, (, subtrahendInstant, ,, minuendDom, ), ;, }, }, long, minuendRem, =, minuendInstant, -, iChronology]
[,, minuendDom, ), ;, }, }, long, minuendRem, =, minuendInstant, -, iChronology, ., getYearMonthMillis, (, minuendYear, ,, minuendMonth, ), ;]
[), ;, }, }, long, minuendRem, =, minuendInstant, -, iChronology, ., getYearMonthMillis, (, minuendYear, ,, minuendMonth, ), ;, long, subtrahendRem]
[;, long, subtrahendRem, =, subtrahendInstant, -, iChronology, ., getYearMonthMillis, (, subtrahendYear, ,, subtrahendMonth, ), ;, if, (, minuendRem, <, subtrahendRem]
[-, iChronology, ., getYearMonthMillis, (, minuendYear, ,, minuendMonth, ), ;, long, subtrahendRem, =, subtrahendInstant, -, iChronology, ., getYearMonthMillis, (, subtrahendYear]
[;, long, subtrahendRem, =, subtrahendInstant, -, iChronology, ., getYearMonthMillis, (, subtrahendYear, ,, subtrahendMonth, ), ;, if, (, minuendRem, <, subtrahendRem]
[., getYearMonthMillis, (, minuendYear, ,, minuendMonth, ), ;, long, subtrahendRem, =, subtrahendInstant, -, iChronology, ., getYearMonthMillis, (, subtrahendYear, ,, subtrahendMonth]
[,, minuendMonth, ), ;, long, subtrahendRem, =, subtrahendInstant, -, iChronology, ., getYearMonthMillis, (, subtrahendYear, ,, subtrahendMonth, ), ;, if, (]
[), ;, long, subtrahendRem, =, subtrahendInstant, -, iChronology, ., getYearMonthMillis, (, subtrahendYear, ,, subtrahendMonth, ), ;, if, (, minuendRem, <]
[;, if, (, minuendRem, <, subtrahendRem, ), {, difference, --, ;, }, return, difference, ;, }, public, long, set, (]
[-, iChronology, ., getYearMonthMillis, (, subtrahendYear, ,, subtrahendMonth, ), ;, if, (, minuendRem, <, subtrahendRem, ), {, difference, --, ;]
[;, if, (, minuendRem, <, subtrahendRem, ), {, difference, --, ;, }, return, difference, ;, }, public, long, set, (]
[., getYearMonthMillis, (, subtrahendYear, ,, subtrahendMonth, ), ;, if, (, minuendRem, <, subtrahendRem, ), {, difference, --, ;, }, return]
[,, subtrahendMonth, ), ;, if, (, minuendRem, <, subtrahendRem, ), {, difference, --, ;, }, return, difference, ;, }, public]
[), ;, if, (, minuendRem, <, subtrahendRem, ), {, difference, --, ;, }, return, difference, ;, }, public, long, set]
[), {, difference, --, ;, }, return, difference, ;, }, public, long, set, (, long, instant, ,, int, month, )]
[<, subtrahendRem, ), {, difference, --, ;, }, return, difference, ;, }, public, long, set, (, long, instant, ,, int]
[), {, difference, --, ;, }, return, difference, ;, }, public, long, set, (, long, instant, ,, int, month, )]
[;, }, return, difference, ;, }, public, long, set, (, long, instant, ,, int, month, ), {, FieldUtils, ., verifyValueBounds]
[--, ;, }, return, difference, ;, }, public, long, set, (, long, instant, ,, int, month, ), {, FieldUtils, .]
[;, }, public, long, set, (, long, instant, ,, int, month, ), {, FieldUtils, ., verifyValueBounds, (, this, ,, month]
[;, int, thisYear, =, iChronology, ., getYear, (, instant, ), ;, int, thisDom, =, iChronology, ., getDayOfMonth, (, instant, ,]
[., verifyValueBounds, (, this, ,, month, ,, MIN, ,, iMax, ), ;, int, thisYear, =, iChronology, ., getYear, (, instant]
[,, month, ,, MIN, ,, iMax, ), ;, int, thisYear, =, iChronology, ., getYear, (, instant, ), ;, int, thisDom]
[,, MIN, ,, iMax, ), ;, int, thisYear, =, iChronology, ., getYear, (, instant, ), ;, int, thisDom, =, iChronology]
[,, iMax, ), ;, int, thisYear, =, iChronology, ., getYear, (, instant, ), ;, int, thisDom, =, iChronology, ., getDayOfMonth]
[), ;, int, thisYear, =, iChronology, ., getYear, (, instant, ), ;, int, thisDom, =, iChronology, ., getDayOfMonth, (, instant]
[;, int, thisDom, =, iChronology, ., getDayOfMonth, (, instant, ,, thisYear, ), ;, int, maxDom, =, iChronology, ., getDaysInYearMonth, (]
[., getYear, (, instant, ), ;, int, thisDom, =, iChronology, ., getDayOfMonth, (, instant, ,, thisYear, ), ;, int, maxDom]
[), ;, int, thisDom, =, iChronology, ., getDayOfMonth, (, instant, ,, thisYear, ), ;, int, maxDom, =, iChronology, ., getDaysInYearMonth]
[;, int, maxDom, =, iChronology, ., getDaysInYearMonth, (, thisYear, ,, month, ), ;, if, (, thisDom, >, maxDom, ), {]
[., getDayOfMonth, (, instant, ,, thisYear, ), ;, int, maxDom, =, iChronology, ., getDaysInYearMonth, (, thisYear, ,, month, ), ;]
[,, thisYear, ), ;, int, maxDom, =, iChronology, ., getDaysInYearMonth, (, thisYear, ,, month, ), ;, if, (, thisDom, >]
[), ;, int, maxDom, =, iChronology, ., getDaysInYearMonth, (, thisYear, ,, month, ), ;, if, (, thisDom, >, maxDom, )]
[;, if, (, thisDom, >, maxDom, ), {, thisDom, =, maxDom, ;, }, return, iChronology, ., getYearMonthDayMillis, (, thisYear, ,]
[., getDaysInYearMonth, (, thisYear, ,, month, ), ;, if, (, thisDom, >, maxDom, ), {, thisDom, =, maxDom, ;, }]
[,, month, ), ;, if, (, thisDom, >, maxDom, ), {, thisDom, =, maxDom, ;, }, return, iChronology, ., getYearMonthDayMillis]
[), ;, if, (, thisDom, >, maxDom, ), {, thisDom, =, maxDom, ;, }, return, iChronology, ., getYearMonthDayMillis, (, thisYear]
[), {, thisDom, =, maxDom, ;, }, return, iChronology, ., getYearMonthDayMillis, (, thisYear, ,, month, ,, thisDom, ), +, iChronology]
[>, maxDom, ), {, thisDom, =, maxDom, ;, }, return, iChronology, ., getYearMonthDayMillis, (, thisYear, ,, month, ,, thisDom, )]
[), {, thisDom, =, maxDom, ;, }, return, iChronology, ., getYearMonthDayMillis, (, thisYear, ,, month, ,, thisDom, ), +, iChronology]
[=, maxDom, ;, }, return, iChronology, ., getYearMonthDayMillis, (, thisYear, ,, month, ,, thisDom, ), +, iChronology, ., getMillisOfDay, (]
[;, }, return, iChronology, ., getYearMonthDayMillis, (, thisYear, ,, month, ,, thisDom, ), +, iChronology, ., getMillisOfDay, (, instant, )]
[;, }, public, DurationField, getRangeDurationField, (, ), {, return, iChronology, ., years, (, ), ;, }, public, boolean, isLeap, (]
[+, iChronology, ., getMillisOfDay, (, instant, ), ;, }, public, DurationField, getRangeDurationField, (, ), {, return, iChronology, ., years, (]
[., getYearMonthDayMillis, (, thisYear, ,, month, ,, thisDom, ), +, iChronology, ., getMillisOfDay, (, instant, ), ;, }, public, DurationField]
[,, month, ,, thisDom, ), +, iChronology, ., getMillisOfDay, (, instant, ), ;, }, public, DurationField, getRangeDurationField, (, ), {]
[,, thisDom, ), +, iChronology, ., getMillisOfDay, (, instant, ), ;, }, public, DurationField, getRangeDurationField, (, ), {, return, iChronology]
[), +, iChronology, ., getMillisOfDay, (, instant, ), ;, }, public, DurationField, getRangeDurationField, (, ), {, return, iChronology, ., years]
[;, }, public, DurationField, getRangeDurationField, (, ), {, return, iChronology, ., years, (, ), ;, }, public, boolean, isLeap, (]
[., getMillisOfDay, (, instant, ), ;, }, public, DurationField, getRangeDurationField, (, ), {, return, iChronology, ., years, (, ), ;]
[), ;, }, public, DurationField, getRangeDurationField, (, ), {, return, iChronology, ., years, (, ), ;, }, public, boolean, isLeap]
[;, }, public, boolean, isLeap, (, long, instant, ), {, int, thisYear, =, iChronology, ., getYear, (, instant, ), ;]
[., years, (, ), ;, }, public, boolean, isLeap, (, long, instant, ), {, int, thisYear, =, iChronology, ., getYear]
[;, if, (, iChronology, ., isLeapYear, (, thisYear, ), ), {, return, (, iChronology, ., getMonthOfYear, (, instant, ,, thisYear]
[., getYear, (, instant, ), ;, if, (, iChronology, ., isLeapYear, (, thisYear, ), ), {, return, (, iChronology, .]
[), ;, if, (, iChronology, ., isLeapYear, (, thisYear, ), ), {, return, (, iChronology, ., getMonthOfYear, (, instant, ,]
[), {, return, (, iChronology, ., getMonthOfYear, (, instant, ,, thisYear, ), ==, iLeapMonth, ), ;, }, return, false, ;]
[., isLeapYear, (, thisYear, ), ), {, return, (, iChronology, ., getMonthOfYear, (, instant, ,, thisYear, ), ==, iLeapMonth, )]
[), ), {, return, (, iChronology, ., getMonthOfYear, (, instant, ,, thisYear, ), ==, iLeapMonth, ), ;, }, return, false]
[;, }, return, false, ;, }, public, int, getLeapAmount, (, long, instant, ), {, return, isLeap, (, instant, ), ?]
[), ;, }, return, false, ;, }, public, int, getLeapAmount, (, long, instant, ), {, return, isLeap, (, instant, )]
[==, iLeapMonth, ), ;, }, return, false, ;, }, public, int, getLeapAmount, (, long, instant, ), {, return, isLeap, (]
[., getMonthOfYear, (, instant, ,, thisYear, ), ==, iLeapMonth, ), ;, }, return, false, ;, }, public, int, getLeapAmount, (]
[,, thisYear, ), ==, iLeapMonth, ), ;, }, return, false, ;, }, public, int, getLeapAmount, (, long, instant, ), {]
[), ==, iLeapMonth, ), ;, }, return, false, ;, }, public, int, getLeapAmount, (, long, instant, ), {, return, isLeap]
[), ;, }, return, false, ;, }, public, int, getLeapAmount, (, long, instant, ), {, return, isLeap, (, instant, )]
[;, }, public, int, getLeapAmount, (, long, instant, ), {, return, isLeap, (, instant, ), ?, 1, :, 0, ;]
[;, }, public, DurationField, getLeapDurationField, (, ), {, return, iChronology, ., days, (, ), ;, }, public, int, getMinimumValue, (]
[?, 1, :, 0, ;, }, public, DurationField, getLeapDurationField, (, ), {, return, iChronology, ., days, (, ), ;, }]
[), ?, 1, :, 0, ;, }, public, DurationField, getLeapDurationField, (, ), {, return, iChronology, ., days, (, ), ;]
[:, 0, ;, }, public, DurationField, getLeapDurationField, (, ), {, return, iChronology, ., days, (, ), ;, }, public, int]
[;, }, public, DurationField, getLeapDurationField, (, ), {, return, iChronology, ., days, (, ), ;, }, public, int, getMinimumValue, (]
[;, }, public, int, getMinimumValue, (, ), {, return, MIN, ;, }, public, int, getMaximumValue, (, ), {, return, iMax]
[., days, (, ), ;, }, public, int, getMinimumValue, (, ), {, return, MIN, ;, }, public, int, getMaximumValue, (]
[;, }, public, int, getMaximumValue, (, ), {, return, iMax, ;, }, public, long, roundFloor, (, long, instant, ), {]
[;, }, public, long, roundFloor, (, long, instant, ), {, int, year, =, iChronology, ., getYear, (, instant, ), ;]
[;, int, month, =, iChronology, ., getMonthOfYear, (, instant, ,, year, ), ;, return, iChronology, ., getYearMonthMillis, (, year, ,]
[., getYear, (, instant, ), ;, int, month, =, iChronology, ., getMonthOfYear, (, instant, ,, year, ), ;, return, iChronology]
[), ;, int, month, =, iChronology, ., getMonthOfYear, (, instant, ,, year, ), ;, return, iChronology, ., getYearMonthMillis, (, year]
[;, return, iChronology, ., getYearMonthMillis, (, year, ,, month, ), ;, }, public, long, remainder, (, long, instant, ), {]
[., getMonthOfYear, (, instant, ,, year, ), ;, return, iChronology, ., getYearMonthMillis, (, year, ,, month, ), ;, }, public]
[,, year, ), ;, return, iChronology, ., getYearMonthMillis, (, year, ,, month, ), ;, }, public, long, remainder, (, long]
[), ;, return, iChronology, ., getYearMonthMillis, (, year, ,, month, ), ;, }, public, long, remainder, (, long, instant, )]
[;, }, public, long, remainder, (, long, instant, ), {, return, instant, -, roundFloor, (, instant, ), ;, }, private]
[., getYearMonthMillis, (, year, ,, month, ), ;, }, public, long, remainder, (, long, instant, ), {, return, instant, -]
[,, month, ), ;, }, public, long, remainder, (, long, instant, ), {, return, instant, -, roundFloor, (, instant, )]
[), ;, }, public, long, remainder, (, long, instant, ), {, return, instant, -, roundFloor, (, instant, ), ;, }]
[;, }, private, Object, readResolve, (, ), {, return, iChronology, ., monthOfYear, (, ), ;, }, }]
[-, roundFloor, (, instant, ), ;, }, private, Object, readResolve, (, ), {, return, iChronology, ., monthOfYear, (, ), ;]
[;, }, private, Object, readResolve, (, ), {, return, iChronology, ., monthOfYear, (, ), ;, }, }]
[), ;, }, private, Object, readResolve, (, ), {, return, iChronology, ., monthOfYear, (, ), ;, }, }]
[;, }, }]
[., monthOfYear, (, ), ;, }, }]
