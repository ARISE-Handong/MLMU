[;, import, java, ., util, ., List, ;, class, ClosureRewriteClass, extends, AbstractPostOrderCallback, implements, HotSwapCompilerPass, {, static, final, DiagnosticType, GOOG_CLASS_TARGET_INVALID, =]
[;, import, java, ., util, ., List, ;, class, ClosureRewriteClass, extends, AbstractPostOrderCallback, implements, HotSwapCompilerPass, {, static, final, DiagnosticType, GOOG_CLASS_TARGET_INVALID, =]
[util, ., List, ;, class, ClosureRewriteClass, extends, AbstractPostOrderCallback, implements, HotSwapCompilerPass, {, static, final, DiagnosticType, GOOG_CLASS_TARGET_INVALID, =, DiagnosticType, ., error, (]
[List, ;, class, ClosureRewriteClass, extends, AbstractPostOrderCallback, implements, HotSwapCompilerPass, {, static, final, DiagnosticType, GOOG_CLASS_TARGET_INVALID, =, DiagnosticType, ., error, (, "JSC_GOOG_CLASS_TARGET_INVALID", ,]
[{, static, final, DiagnosticType, GOOG_CLASS_TARGET_INVALID, =, DiagnosticType, ., error, (, "JSC_GOOG_CLASS_TARGET_INVALID", ,, "Unsupported class definition expression.", ), ;, static, final, DiagnosticType, GOOG_CLASS_SUPER_CLASS_NOT_VALID, =]
[{, static, final, DiagnosticType, GOOG_CLASS_TARGET_INVALID, =, DiagnosticType, ., error, (, "JSC_GOOG_CLASS_TARGET_INVALID", ,, "Unsupported class definition expression.", ), ;, static, final, DiagnosticType, GOOG_CLASS_SUPER_CLASS_NOT_VALID, =]
[GOOG_CLASS_TARGET_INVALID, =, DiagnosticType, ., error, (, "JSC_GOOG_CLASS_TARGET_INVALID", ,, "Unsupported class definition expression.", ), ;, static, final, DiagnosticType, GOOG_CLASS_SUPER_CLASS_NOT_VALID, =, DiagnosticType, ., error, (]
[DiagnosticType, ., error, (, "JSC_GOOG_CLASS_TARGET_INVALID", ,, "Unsupported class definition expression.", ), ;, static, final, DiagnosticType, GOOG_CLASS_SUPER_CLASS_NOT_VALID, =, DiagnosticType, ., error, (, "JSC_GOOG_CLASS_SUPER_CLASS_NOT_VALID", ,]
[;, static, final, DiagnosticType, GOOG_CLASS_SUPER_CLASS_NOT_VALID, =, DiagnosticType, ., error, (, "JSC_GOOG_CLASS_SUPER_CLASS_NOT_VALID", ,, "The super class must be null or a valid name reference", ), ;, static, final, DiagnosticType, GOOG_CLASS_DESCRIPTOR_NOT_VALID, =]
[;, static, final, DiagnosticType, GOOG_CLASS_SUPER_CLASS_NOT_VALID, =, DiagnosticType, ., error, (, "JSC_GOOG_CLASS_SUPER_CLASS_NOT_VALID", ,, "The super class must be null or a valid name reference", ), ;, static, final, DiagnosticType, GOOG_CLASS_DESCRIPTOR_NOT_VALID, =]
[GOOG_CLASS_SUPER_CLASS_NOT_VALID, =, DiagnosticType, ., error, (, "JSC_GOOG_CLASS_SUPER_CLASS_NOT_VALID", ,, "The super class must be null or a valid name reference", ), ;, static, final, DiagnosticType, GOOG_CLASS_DESCRIPTOR_NOT_VALID, =, DiagnosticType, ., error, (]
[DiagnosticType, ., error, (, "JSC_GOOG_CLASS_SUPER_CLASS_NOT_VALID", ,, "The super class must be null or a valid name reference", ), ;, static, final, DiagnosticType, GOOG_CLASS_DESCRIPTOR_NOT_VALID, =, DiagnosticType, ., error, (, "JSC_GOOG_CLASS_DESCRIPTOR_NOT_VALID", ,]
[;, static, final, DiagnosticType, GOOG_CLASS_DESCRIPTOR_NOT_VALID, =, DiagnosticType, ., error, (, "JSC_GOOG_CLASS_DESCRIPTOR_NOT_VALID", ,, "The class descriptor must be an object literal", ), ;, static, final, DiagnosticType, GOOG_CLASS_CONSTRUCTOR_MISING, =]
[;, static, final, DiagnosticType, GOOG_CLASS_DESCRIPTOR_NOT_VALID, =, DiagnosticType, ., error, (, "JSC_GOOG_CLASS_DESCRIPTOR_NOT_VALID", ,, "The class descriptor must be an object literal", ), ;, static, final, DiagnosticType, GOOG_CLASS_CONSTRUCTOR_MISING, =]
[GOOG_CLASS_DESCRIPTOR_NOT_VALID, =, DiagnosticType, ., error, (, "JSC_GOOG_CLASS_DESCRIPTOR_NOT_VALID", ,, "The class descriptor must be an object literal", ), ;, static, final, DiagnosticType, GOOG_CLASS_CONSTRUCTOR_MISING, =, DiagnosticType, ., error, (]
[DiagnosticType, ., error, (, "JSC_GOOG_CLASS_DESCRIPTOR_NOT_VALID", ,, "The class descriptor must be an object literal", ), ;, static, final, DiagnosticType, GOOG_CLASS_CONSTRUCTOR_MISING, =, DiagnosticType, ., error, (, "JSC_GOOG_CLASS_CONSTRUCTOR_MISING", ,]
[;, static, final, DiagnosticType, GOOG_CLASS_CONSTRUCTOR_MISING, =, DiagnosticType, ., error, (, "JSC_GOOG_CLASS_CONSTRUCTOR_MISING", ,, "The constructor expression is missing for the class descriptor", ), ;, static, final, DiagnosticType, GOOG_CLASS_STATICS_NOT_VALID, =]
[;, static, final, DiagnosticType, GOOG_CLASS_CONSTRUCTOR_MISING, =, DiagnosticType, ., error, (, "JSC_GOOG_CLASS_CONSTRUCTOR_MISING", ,, "The constructor expression is missing for the class descriptor", ), ;, static, final, DiagnosticType, GOOG_CLASS_STATICS_NOT_VALID, =]
[GOOG_CLASS_CONSTRUCTOR_MISING, =, DiagnosticType, ., error, (, "JSC_GOOG_CLASS_CONSTRUCTOR_MISING", ,, "The constructor expression is missing for the class descriptor", ), ;, static, final, DiagnosticType, GOOG_CLASS_STATICS_NOT_VALID, =, DiagnosticType, ., error, (]
[DiagnosticType, ., error, (, "JSC_GOOG_CLASS_CONSTRUCTOR_MISING", ,, "The constructor expression is missing for the class descriptor", ), ;, static, final, DiagnosticType, GOOG_CLASS_STATICS_NOT_VALID, =, DiagnosticType, ., error, (, "JSC_GOOG_CLASS_STATICS_NOT_VALID", ,]
[;, static, final, DiagnosticType, GOOG_CLASS_STATICS_NOT_VALID, =, DiagnosticType, ., error, (, "JSC_GOOG_CLASS_STATICS_NOT_VALID", ,, "The class statics descriptor must be an object or function literal", ), ;, static, final, DiagnosticType, GOOG_CLASS_UNEXPECTED_PARAMS, =]
[;, static, final, DiagnosticType, GOOG_CLASS_STATICS_NOT_VALID, =, DiagnosticType, ., error, (, "JSC_GOOG_CLASS_STATICS_NOT_VALID", ,, "The class statics descriptor must be an object or function literal", ), ;, static, final, DiagnosticType, GOOG_CLASS_UNEXPECTED_PARAMS, =]
[GOOG_CLASS_STATICS_NOT_VALID, =, DiagnosticType, ., error, (, "JSC_GOOG_CLASS_STATICS_NOT_VALID", ,, "The class statics descriptor must be an object or function literal", ), ;, static, final, DiagnosticType, GOOG_CLASS_UNEXPECTED_PARAMS, =, DiagnosticType, ., error, (]
[DiagnosticType, ., error, (, "JSC_GOOG_CLASS_STATICS_NOT_VALID", ,, "The class statics descriptor must be an object or function literal", ), ;, static, final, DiagnosticType, GOOG_CLASS_UNEXPECTED_PARAMS, =, DiagnosticType, ., error, (, "JSC_GOOG_CLASS_UNEXPECTED_PARAMS", ,]
[., error, (, "JSC_GOOG_CLASS_UNEXPECTED_PARAMS", ,, "The class definition has too many arguments.", ), ;, private, final, AbstractCompiler, compiler, ;, public, ClosureRewriteClass, (, AbstractCompiler, compiler, ), {]
[., error, (, "JSC_GOOG_CLASS_UNEXPECTED_PARAMS", ,, "The class definition has too many arguments.", ), ;, private, final, AbstractCompiler, compiler, ;, public, ClosureRewriteClass, (, AbstractCompiler, compiler, ), {]
[,, "The class definition has too many arguments.", ), ;, private, final, AbstractCompiler, compiler, ;, public, ClosureRewriteClass, (, AbstractCompiler, compiler, ), {, this, ., compiler, =]
[this, ., compiler, =, compiler, ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {]
[this, ., compiler, =, compiler, ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {]
[compiler, ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, NodeTraversal, ., traverse, (]
[}, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, NodeTraversal, ., traverse, (, compiler, ,]
[Override, public, void, process, (, Node, externs, ,, Node, root, ), {, NodeTraversal, ., traverse, (, compiler, ,, root, ,]
[,, root, ,, this, ), ;, }, @, Override, public, void, hotSwapScript, (, Node, scriptRoot, ,, Node, originalRoot, ), {]
[,, root, ,, this, ), ;, }, @, Override, public, void, hotSwapScript, (, Node, scriptRoot, ,, Node, originalRoot, ), {]
[,, root, ,, this, ), ;, }, @, Override, public, void, hotSwapScript, (, Node, scriptRoot, ,, Node, originalRoot, ), {]
[}, @, Override, public, void, hotSwapScript, (, Node, scriptRoot, ,, Node, originalRoot, ), {, this, ., compiler, ., process, (]
[;, }, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (]
[;, }, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (]
[;, }, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (]
[visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (, n, ., isCall, (, ), &&]
[NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (, n, ., isCall, (, ), &&, isGoogDefineClass, (]
[Node, parent, ), {, if, (, n, ., isCall, (, ), &&, isGoogDefineClass, (, n, ), ), {, if, (]
[parent, ), {, if, (, n, ., isCall, (, ), &&, isGoogDefineClass, (, n, ), ), {, if, (, !]
[{, if, (, n, ., isCall, (, ), &&, isGoogDefineClass, (, n, ), ), {, if, (, !, validateUsage, (]
[., isCall, (, ), &&, isGoogDefineClass, (, n, ), ), {, if, (, !, validateUsage, (, n, ), ), {]
[., isCall, (, ), &&, isGoogDefineClass, (, n, ), ), {, if, (, !, validateUsage, (, n, ), ), {]
[&&, isGoogDefineClass, (, n, ), ), {, if, (, !, validateUsage, (, n, ), ), {, compiler, ., report, (]
[&&, isGoogDefineClass, (, n, ), ), {, if, (, !, validateUsage, (, n, ), ), {, compiler, ., report, (]
[), ), {, if, (, !, validateUsage, (, n, ), ), {, compiler, ., report, (, JSError, ., make, (]
[{, if, (, !, validateUsage, (, n, ), ), {, compiler, ., report, (, JSError, ., make, (, n, ,]
[n, ), ), {, compiler, ., report, (, JSError, ., make, (, n, ,, GOOG_CLASS_TARGET_INVALID, ), ), ;, }, }]
[), {, compiler, ., report, (, JSError, ., make, (, n, ,, GOOG_CLASS_TARGET_INVALID, ), ), ;, }, }, maybeRewriteClassDefinition, (]
[;, }, }, maybeRewriteClassDefinition, (, n, ), ;, }, private, boolean, validateUsage, (, Node, n, ), {, Node, parent, =]
[;, }, }, maybeRewriteClassDefinition, (, n, ), ;, }, private, boolean, validateUsage, (, Node, n, ), {, Node, parent, =]
[}, private, boolean, validateUsage, (, Node, n, ), {, Node, parent, =, n, ., getParent, (, ), ;, switch, (]
[}, private, boolean, validateUsage, (, Node, n, ), {, Node, parent, =, n, ., getParent, (, ), ;, switch, (]
[{, Node, parent, =, n, ., getParent, (, ), ;, switch, (, parent, ., getType, (, ), ), {, case]
[{, Node, parent, =, n, ., getParent, (, ), ;, switch, (, parent, ., getType, (, ), ), {, case]
[., getParent, (, ), ;, switch, (, parent, ., getType, (, ), ), {, case, Token, ., NAME, :, return]
[), ;, switch, (, parent, ., getType, (, ), ), {, case, Token, ., NAME, :, return, true, ;, case]
[), ;, switch, (, parent, ., getType, (, ), ), {, case, Token, ., NAME, :, return, true, ;, case]
[., getType, (, ), ), {, case, Token, ., NAME, :, return, true, ;, case, Token, ., ASSIGN, :, return]
[., getType, (, ), ), {, case, Token, ., NAME, :, return, true, ;, case, Token, ., ASSIGN, :, return]
[., getType, (, ), ), {, case, Token, ., NAME, :, return, true, ;, case, Token, ., ASSIGN, :, return]
[(, ), ), {, case, Token, ., NAME, :, return, true, ;, case, Token, ., ASSIGN, :, return, n, ==]
[(, ), ), {, case, Token, ., NAME, :, return, true, ;, case, Token, ., ASSIGN, :, return, n, ==]
[., NAME, :, return, true, ;, case, Token, ., ASSIGN, :, return, n, ==, parent, ., getLastChild, (, ), &&]
[., NAME, :, return, true, ;, case, Token, ., ASSIGN, :, return, n, ==, parent, ., getLastChild, (, ), &&]
[., NAME, :, return, true, ;, case, Token, ., ASSIGN, :, return, n, ==, parent, ., getLastChild, (, ), &&]
[return, n, ==, parent, ., getLastChild, (, ), &&, parent, ., getParent, (, ), ., isExprResult, (, ), ;, case]
[return, n, ==, parent, ., getLastChild, (, ), &&, parent, ., getParent, (, ), ., isExprResult, (, ), ;, case]
[getLastChild, (, ), &&, parent, ., getParent, (, ), ., isExprResult, (, ), ;, case, Token, ., STRING_KEY, :, return]
[), &&, parent, ., getParent, (, ), ., isExprResult, (, ), ;, case, Token, ., STRING_KEY, :, return, isContainedInGoogDefineClass, (]
[(, ), ., isExprResult, (, ), ;, case, Token, ., STRING_KEY, :, return, isContainedInGoogDefineClass, (, parent, ), ;, }, return]
[isContainedInGoogDefineClass, (, parent, ), ;, }, return, false, ;, }, private, boolean, isContainedInGoogDefineClass, (, Node, n, ), {, while, (]
[isContainedInGoogDefineClass, (, parent, ), ;, }, return, false, ;, }, private, boolean, isContainedInGoogDefineClass, (, Node, n, ), {, while, (]
[parent, ), ;, }, return, false, ;, }, private, boolean, isContainedInGoogDefineClass, (, Node, n, ), {, while, (, n, !=]
[}, return, false, ;, }, private, boolean, isContainedInGoogDefineClass, (, Node, n, ), {, while, (, n, !=, null, ), {]
[false, ;, }, private, boolean, isContainedInGoogDefineClass, (, Node, n, ), {, while, (, n, !=, null, ), {, n, =]
[false, ;, }, private, boolean, isContainedInGoogDefineClass, (, Node, n, ), {, while, (, n, !=, null, ), {, n, =]
[n, ), {, while, (, n, !=, null, ), {, n, =, n, ., getParent, (, ), ;, if, (]
[n, ), {, while, (, n, !=, null, ), {, n, =, n, ., getParent, (, ), ;, if, (]
[{, n, =, n, ., getParent, (, ), ;, if, (, n, ., isCall, (, ), ), {, if, (]
[=, n, ., getParent, (, ), ;, if, (, n, ., isCall, (, ), ), {, if, (, isGoogDefineClass, (]
[), ;, if, (, n, ., isCall, (, ), ), {, if, (, isGoogDefineClass, (, n, ), ), {, return]
[(, ), ), {, if, (, isGoogDefineClass, (, n, ), ), {, return, true, ;, }, }, else, if, (]
[(, ), ), {, if, (, isGoogDefineClass, (, n, ), ), {, return, true, ;, }, }, else, if, (]
[), ), {, if, (, isGoogDefineClass, (, n, ), ), {, return, true, ;, }, }, else, if, (, !]
[), ), {, if, (, isGoogDefineClass, (, n, ), ), {, return, true, ;, }, }, else, if, (, !]
[(, n, ), ), {, return, true, ;, }, }, else, if, (, !, n, ., isObjectLit, (, ), &&]
[n, ), ), {, return, true, ;, }, }, else, if, (, !, n, ., isObjectLit, (, ), &&, !]
[n, ), ), {, return, true, ;, }, }, else, if, (, !, n, ., isObjectLit, (, ), &&, !]
[!, n, ., isObjectLit, (, ), &&, !, n, ., isStringKey, (, ), ), {, break, ;, }, }, return]
[), {, break, ;, }, }, return, false, ;, }, private, void, maybeRewriteClassDefinition, (, Node, n, ), {, if, (]
[), {, break, ;, }, }, return, false, ;, }, private, void, maybeRewriteClassDefinition, (, Node, n, ), {, if, (]
[private, void, maybeRewriteClassDefinition, (, Node, n, ), {, if, (, n, ., isVar, (, ), ), {, Node, target, =]
[private, void, maybeRewriteClassDefinition, (, Node, n, ), {, if, (, n, ., isVar, (, ), ), {, Node, target, =]
[(, n, ., isVar, (, ), ), {, Node, target, =, n, ., getFirstChild, (, ), ;, Node, value, =]
[(, n, ., isVar, (, ), ), {, Node, target, =, n, ., getFirstChild, (, ), ;, Node, value, =]
[), {, Node, target, =, n, ., getFirstChild, (, ), ;, Node, value, =, target, ., getFirstChild, (, ), ;]
[Node, target, =, n, ., getFirstChild, (, ), ;, Node, value, =, target, ., getFirstChild, (, ), ;, maybeRewriteClassDefinition, (]
[=, n, ., getFirstChild, (, ), ;, Node, value, =, target, ., getFirstChild, (, ), ;, maybeRewriteClassDefinition, (, n, ,]
[., getFirstChild, (, ), ;, Node, value, =, target, ., getFirstChild, (, ), ;, maybeRewriteClassDefinition, (, n, ,, target, ,]
[=, target, ., getFirstChild, (, ), ;, maybeRewriteClassDefinition, (, n, ,, target, ,, value, ), ;, }, else, if, (]
[=, target, ., getFirstChild, (, ), ;, maybeRewriteClassDefinition, (, n, ,, target, ,, value, ), ;, }, else, if, (]
[(, ), ;, maybeRewriteClassDefinition, (, n, ,, target, ,, value, ), ;, }, else, if, (, NodeUtil, ., isExprAssign, (]
[target, ,, value, ), ;, }, else, if, (, NodeUtil, ., isExprAssign, (, n, ), ), {, Node, assign, =]
[target, ,, value, ), ;, }, else, if, (, NodeUtil, ., isExprAssign, (, n, ), ), {, Node, assign, =]
[NodeUtil, ., isExprAssign, (, n, ), ), {, Node, assign, =, n, ., getFirstChild, (, ), ;, Node, target, =]
[NodeUtil, ., isExprAssign, (, n, ), ), {, Node, assign, =, n, ., getFirstChild, (, ), ;, Node, target, =]
[assign, =, n, ., getFirstChild, (, ), ;, Node, target, =, assign, ., getFirstChild, (, ), ;, Node, value, =]
[assign, =, n, ., getFirstChild, (, ), ;, Node, target, =, assign, ., getFirstChild, (, ), ;, Node, value, =]
[), ;, Node, target, =, assign, ., getFirstChild, (, ), ;, Node, value, =, assign, ., getLastChild, (, ), ;]
[Node, target, =, assign, ., getFirstChild, (, ), ;, Node, value, =, assign, ., getLastChild, (, ), ;, maybeRewriteClassDefinition, (]
[=, assign, ., getFirstChild, (, ), ;, Node, value, =, assign, ., getLastChild, (, ), ;, maybeRewriteClassDefinition, (, n, ,]
[., getFirstChild, (, ), ;, Node, value, =, assign, ., getLastChild, (, ), ;, maybeRewriteClassDefinition, (, n, ,, target, ,]
[), ;, }, }, private, void, maybeRewriteClassDefinition, (, Node, n, ,, Node, target, ,, Node, value, ), {, if, (]
[}, }, private, void, maybeRewriteClassDefinition, (, Node, n, ,, Node, target, ,, Node, value, ), {, if, (, isGoogDefineClass, (]
[Node, n, ,, Node, target, ,, Node, value, ), {, if, (, isGoogDefineClass, (, value, ), ), {, if, (]
[n, ,, Node, target, ,, Node, value, ), {, if, (, isGoogDefineClass, (, value, ), ), {, if, (, !]
[n, ,, Node, target, ,, Node, value, ), {, if, (, isGoogDefineClass, (, value, ), ), {, if, (, !]
[), {, if, (, isGoogDefineClass, (, value, ), ), {, if, (, !, target, ., isQualifiedName, (, ), ), {]
[), {, if, (, isGoogDefineClass, (, value, ), ), {, if, (, !, target, ., isQualifiedName, (, ), ), {]
[isGoogDefineClass, (, value, ), ), {, if, (, !, target, ., isQualifiedName, (, ), ), {, compiler, ., report, (]
[isGoogDefineClass, (, value, ), ), {, if, (, !, target, ., isQualifiedName, (, ), ), {, compiler, ., report, (]
[), {, if, (, !, target, ., isQualifiedName, (, ), ), {, compiler, ., report, (, JSError, ., make, (]
[if, (, !, target, ., isQualifiedName, (, ), ), {, compiler, ., report, (, JSError, ., make, (, n, ,]
[), {, compiler, ., report, (, JSError, ., make, (, n, ,, GOOG_CLASS_TARGET_INVALID, ), ), ;, }, ClassDefinition, def, =]
[compiler, ., report, (, JSError, ., make, (, n, ,, GOOG_CLASS_TARGET_INVALID, ), ), ;, }, ClassDefinition, def, =, extractClassDefinition, (]
[report, (, JSError, ., make, (, n, ,, GOOG_CLASS_TARGET_INVALID, ), ), ;, }, ClassDefinition, def, =, extractClassDefinition, (, target, ,]
[(, n, ,, GOOG_CLASS_TARGET_INVALID, ), ), ;, }, ClassDefinition, def, =, extractClassDefinition, (, target, ,, value, ), ;, if, (]
[(, n, ,, GOOG_CLASS_TARGET_INVALID, ), ), ;, }, ClassDefinition, def, =, extractClassDefinition, (, target, ,, value, ), ;, if, (]
[,, GOOG_CLASS_TARGET_INVALID, ), ), ;, }, ClassDefinition, def, =, extractClassDefinition, (, target, ,, value, ), ;, if, (, def, !=]
[), ;, }, ClassDefinition, def, =, extractClassDefinition, (, target, ,, value, ), ;, if, (, def, !=, null, ), {]
[), ;, }, ClassDefinition, def, =, extractClassDefinition, (, target, ,, value, ), ;, if, (, def, !=, null, ), {]
[extractClassDefinition, (, target, ,, value, ), ;, if, (, def, !=, null, ), {, value, ., detachFromParent, (, ), ;]
[extractClassDefinition, (, target, ,, value, ), ;, if, (, def, !=, null, ), {, value, ., detachFromParent, (, ), ;]
[;, if, (, def, !=, null, ), {, value, ., detachFromParent, (, ), ;, target, ., detachFromParent, (, ), ;]
[(, def, !=, null, ), {, value, ., detachFromParent, (, ), ;, target, ., detachFromParent, (, ), ;, rewriteGoogDefineClass, (]
[!=, null, ), {, value, ., detachFromParent, (, ), ;, target, ., detachFromParent, (, ), ;, rewriteGoogDefineClass, (, n, ,]
[final, Node, name, ;, final, Node, value, ;, MemberDefinition, (, JSDocInfo, info, ,, Node, name, ,, Node, value, ), {]
[final, Node, name, ;, final, Node, value, ;, MemberDefinition, (, JSDocInfo, info, ,, Node, name, ,, Node, value, ), {]
[final, Node, value, ;, MemberDefinition, (, JSDocInfo, info, ,, Node, name, ,, Node, value, ), {, this, ., info, =]
[value, ;, MemberDefinition, (, JSDocInfo, info, ,, Node, name, ,, Node, value, ), {, this, ., info, =, info, ;]
[value, ;, MemberDefinition, (, JSDocInfo, info, ,, Node, name, ,, Node, value, ), {, this, ., info, =, info, ;]
[JSDocInfo, info, ,, Node, name, ,, Node, value, ), {, this, ., info, =, info, ;, this, ., name, =]
[,, Node, name, ,, Node, value, ), {, this, ., info, =, info, ;, this, ., name, =, name, ;]
[,, Node, name, ,, Node, value, ), {, this, ., info, =, info, ;, this, ., name, =, name, ;]
[Node, value, ), {, this, ., info, =, info, ;, this, ., name, =, name, ;, this, ., value, =]
[,, MemberDefinition, constructor, ,, List, <, MemberDefinition, >, staticProps, ,, List, <, MemberDefinition, >, props, ,, Node, classModifier, ), {]
[,, MemberDefinition, constructor, ,, List, <, MemberDefinition, >, staticProps, ,, List, <, MemberDefinition, >, props, ,, Node, classModifier, ), {]
[List, <, MemberDefinition, >, staticProps, ,, List, <, MemberDefinition, >, props, ,, Node, classModifier, ), {, this, ., name, =]
[MemberDefinition, >, staticProps, ,, List, <, MemberDefinition, >, props, ,, Node, classModifier, ), {, this, ., name, =, name, ;]
[MemberDefinition, >, staticProps, ,, List, <, MemberDefinition, >, props, ,, Node, classModifier, ), {, this, ., name, =, name, ;]
[List, <, MemberDefinition, >, props, ,, Node, classModifier, ), {, this, ., name, =, name, ;, this, ., superClass, =]
[MemberDefinition, >, props, ,, Node, classModifier, ), {, this, ., name, =, name, ;, this, ., superClass, =, superClass, ;]
[MemberDefinition, >, props, ,, Node, classModifier, ), {, this, ., name, =, name, ;, this, ., superClass, =, superClass, ;]
[Node, classModifier, ), {, this, ., name, =, name, ;, this, ., superClass, =, superClass, ;, this, ., constructor, =]
[), {, this, ., name, =, name, ;, this, ., superClass, =, superClass, ;, this, ., constructor, =, constructor, ;]
[), {, this, ., name, =, name, ;, this, ., superClass, =, superClass, ;, this, ., constructor, =, constructor, ;]
[name, =, name, ;, this, ., superClass, =, superClass, ;, this, ., constructor, =, constructor, ;, this, ., staticProps, =]
[name, ;, this, ., superClass, =, superClass, ;, this, ., constructor, =, constructor, ;, this, ., staticProps, =, staticProps, ;]
[name, ;, this, ., superClass, =, superClass, ;, this, ., constructor, =, constructor, ;, this, ., staticProps, =, staticProps, ;]
[superClass, =, superClass, ;, this, ., constructor, =, constructor, ;, this, ., staticProps, =, staticProps, ;, this, ., props, =]
[superClass, ;, this, ., constructor, =, constructor, ;, this, ., staticProps, =, staticProps, ;, this, ., props, =, props, ;]
[superClass, ;, this, ., constructor, =, constructor, ;, this, ., staticProps, =, staticProps, ;, this, ., props, =, props, ;]
[constructor, =, constructor, ;, this, ., staticProps, =, staticProps, ;, this, ., props, =, props, ;, this, ., classModifier, =]
[classModifier, =, classModifier, ;, }, }, private, ClassDefinition, extractClassDefinition, (, Node, targetName, ,, Node, callNode, ), {, Node, superClass, =]
[classModifier, =, classModifier, ;, }, }, private, ClassDefinition, extractClassDefinition, (, Node, targetName, ,, Node, callNode, ), {, Node, superClass, =]
[}, }, private, ClassDefinition, extractClassDefinition, (, Node, targetName, ,, Node, callNode, ), {, Node, superClass, =, NodeUtil, ., getArgumentForCallOrNew, (]
[private, ClassDefinition, extractClassDefinition, (, Node, targetName, ,, Node, callNode, ), {, Node, superClass, =, NodeUtil, ., getArgumentForCallOrNew, (, callNode, ,]
[targetName, ,, Node, callNode, ), {, Node, superClass, =, NodeUtil, ., getArgumentForCallOrNew, (, callNode, ,, 0, ), ;, if, (]
[targetName, ,, Node, callNode, ), {, Node, superClass, =, NodeUtil, ., getArgumentForCallOrNew, (, callNode, ,, 0, ), ;, if, (]
[targetName, ,, Node, callNode, ), {, Node, superClass, =, NodeUtil, ., getArgumentForCallOrNew, (, callNode, ,, 0, ), ;, if, (]
[Node, callNode, ), {, Node, superClass, =, NodeUtil, ., getArgumentForCallOrNew, (, callNode, ,, 0, ), ;, if, (, superClass, ==]
[), {, Node, superClass, =, NodeUtil, ., getArgumentForCallOrNew, (, callNode, ,, 0, ), ;, if, (, superClass, ==, null, ||]
[{, Node, superClass, =, NodeUtil, ., getArgumentForCallOrNew, (, callNode, ,, 0, ), ;, if, (, superClass, ==, null, ||, (]
[{, Node, superClass, =, NodeUtil, ., getArgumentForCallOrNew, (, callNode, ,, 0, ), ;, if, (, superClass, ==, null, ||, (]
[Node, superClass, =, NodeUtil, ., getArgumentForCallOrNew, (, callNode, ,, 0, ), ;, if, (, superClass, ==, null, ||, (, !]
[Node, superClass, =, NodeUtil, ., getArgumentForCallOrNew, (, callNode, ,, 0, ), ;, if, (, superClass, ==, null, ||, (, !]
[(, callNode, ,, 0, ), ;, if, (, superClass, ==, null, ||, (, !, superClass, ., isNull, (, ), &&]
[callNode, ,, 0, ), ;, if, (, superClass, ==, null, ||, (, !, superClass, ., isNull, (, ), &&, !]
[callNode, ,, 0, ), ;, if, (, superClass, ==, null, ||, (, !, superClass, ., isNull, (, ), &&, !]
[==, null, ||, (, !, superClass, ., isNull, (, ), &&, !, superClass, ., isQualifiedName, (, ), ), ), {]
[==, null, ||, (, !, superClass, ., isNull, (, ), &&, !, superClass, ., isQualifiedName, (, ), ), ), {]
[!, superClass, ., isNull, (, ), &&, !, superClass, ., isQualifiedName, (, ), ), ), {, compiler, ., report, (]
[!, superClass, ., isNull, (, ), &&, !, superClass, ., isQualifiedName, (, ), ), ), {, compiler, ., report, (]
[(, ), &&, !, superClass, ., isQualifiedName, (, ), ), ), {, compiler, ., report, (, JSError, ., make, (]
[&&, !, superClass, ., isQualifiedName, (, ), ), ), {, compiler, ., report, (, JSError, ., make, (, callNode, ,]
[(, ), ), ), {, compiler, ., report, (, JSError, ., make, (, callNode, ,, GOOG_CLASS_SUPER_CLASS_NOT_VALID, ), ), ;, return]
[compiler, ., report, (, JSError, ., make, (, callNode, ,, GOOG_CLASS_SUPER_CLASS_NOT_VALID, ), ), ;, return, null, ;, }, if, (]
[compiler, ., report, (, JSError, ., make, (, callNode, ,, GOOG_CLASS_SUPER_CLASS_NOT_VALID, ), ), ;, return, null, ;, }, if, (]
[JSError, ., make, (, callNode, ,, GOOG_CLASS_SUPER_CLASS_NOT_VALID, ), ), ;, return, null, ;, }, if, (, NodeUtil, ., isNullOrUndefined, (]
[callNode, ,, GOOG_CLASS_SUPER_CLASS_NOT_VALID, ), ), ;, return, null, ;, }, if, (, NodeUtil, ., isNullOrUndefined, (, superClass, ), ), {]
[GOOG_CLASS_SUPER_CLASS_NOT_VALID, ), ), ;, return, null, ;, }, if, (, NodeUtil, ., isNullOrUndefined, (, superClass, ), ), {, superClass, =]
[;, }, if, (, NodeUtil, ., isNullOrUndefined, (, superClass, ), ), {, superClass, =, null, ;, }, Node, description, =]
[;, }, if, (, NodeUtil, ., isNullOrUndefined, (, superClass, ), ), {, superClass, =, null, ;, }, Node, description, =]
[NodeUtil, ., isNullOrUndefined, (, superClass, ), ), {, superClass, =, null, ;, }, Node, description, =, NodeUtil, ., getArgumentForCallOrNew, (]
[isNullOrUndefined, (, superClass, ), ), {, superClass, =, null, ;, }, Node, description, =, NodeUtil, ., getArgumentForCallOrNew, (, callNode, ,]
[{, superClass, =, null, ;, }, Node, description, =, NodeUtil, ., getArgumentForCallOrNew, (, callNode, ,, 1, ), ;, if, (]
[{, superClass, =, null, ;, }, Node, description, =, NodeUtil, ., getArgumentForCallOrNew, (, callNode, ,, 1, ), ;, if, (]
[{, superClass, =, null, ;, }, Node, description, =, NodeUtil, ., getArgumentForCallOrNew, (, callNode, ,, 1, ), ;, if, (]
[{, superClass, =, null, ;, }, Node, description, =, NodeUtil, ., getArgumentForCallOrNew, (, callNode, ,, 1, ), ;, if, (]
[=, null, ;, }, Node, description, =, NodeUtil, ., getArgumentForCallOrNew, (, callNode, ,, 1, ), ;, if, (, description, ==]
[;, }, Node, description, =, NodeUtil, ., getArgumentForCallOrNew, (, callNode, ,, 1, ), ;, if, (, description, ==, null, ||]
[}, Node, description, =, NodeUtil, ., getArgumentForCallOrNew, (, callNode, ,, 1, ), ;, if, (, description, ==, null, ||, !]
[}, Node, description, =, NodeUtil, ., getArgumentForCallOrNew, (, callNode, ,, 1, ), ;, if, (, description, ==, null, ||, !]
[getArgumentForCallOrNew, (, callNode, ,, 1, ), ;, if, (, description, ==, null, ||, !, description, ., isObjectLit, (, ), ||]
[(, callNode, ,, 1, ), ;, if, (, description, ==, null, ||, !, description, ., isObjectLit, (, ), ||, !]
[,, 1, ), ;, if, (, description, ==, null, ||, !, description, ., isObjectLit, (, ), ||, !, validateObjLit, (]
[if, (, description, ==, null, ||, !, description, ., isObjectLit, (, ), ||, !, validateObjLit, (, description, ), ), {]
[if, (, description, ==, null, ||, !, description, ., isObjectLit, (, ), ||, !, validateObjLit, (, description, ), ), {]
[null, ||, !, description, ., isObjectLit, (, ), ||, !, validateObjLit, (, description, ), ), {, compiler, ., report, (]
[null, ||, !, description, ., isObjectLit, (, ), ||, !, validateObjLit, (, description, ), ), {, compiler, ., report, (]
[., isObjectLit, (, ), ||, !, validateObjLit, (, description, ), ), {, compiler, ., report, (, JSError, ., make, (]
[(, ), ||, !, validateObjLit, (, description, ), ), {, compiler, ., report, (, JSError, ., make, (, callNode, ,]
[(, description, ), ), {, compiler, ., report, (, JSError, ., make, (, callNode, ,, GOOG_CLASS_DESCRIPTOR_NOT_VALID, ), ), ;, return]
[., report, (, JSError, ., make, (, callNode, ,, GOOG_CLASS_DESCRIPTOR_NOT_VALID, ), ), ;, return, null, ;, }, int, paramCount, =]
[., report, (, JSError, ., make, (, callNode, ,, GOOG_CLASS_DESCRIPTOR_NOT_VALID, ), ), ;, return, null, ;, }, int, paramCount, =]
[., report, (, JSError, ., make, (, callNode, ,, GOOG_CLASS_DESCRIPTOR_NOT_VALID, ), ), ;, return, null, ;, }, int, paramCount, =]
[(, callNode, ,, GOOG_CLASS_DESCRIPTOR_NOT_VALID, ), ), ;, return, null, ;, }, int, paramCount, =, callNode, ., getChildCount, (, ), -]
[), ), ;, return, null, ;, }, int, paramCount, =, callNode, ., getChildCount, (, ), -, 1, ;, if, (]
[), ), ;, return, null, ;, }, int, paramCount, =, callNode, ., getChildCount, (, ), -, 1, ;, if, (]
[;, return, null, ;, }, int, paramCount, =, callNode, ., getChildCount, (, ), -, 1, ;, if, (, paramCount, >]
[;, }, int, paramCount, =, callNode, ., getChildCount, (, ), -, 1, ;, if, (, paramCount, >, 2, ), {]
[;, }, int, paramCount, =, callNode, ., getChildCount, (, ), -, 1, ;, if, (, paramCount, >, 2, ), {]
[=, callNode, ., getChildCount, (, ), -, 1, ;, if, (, paramCount, >, 2, ), {, compiler, ., report, (]
[=, callNode, ., getChildCount, (, ), -, 1, ;, if, (, paramCount, >, 2, ), {, compiler, ., report, (]
[(, ), -, 1, ;, if, (, paramCount, >, 2, ), {, compiler, ., report, (, JSError, ., make, (]
[-, 1, ;, if, (, paramCount, >, 2, ), {, compiler, ., report, (, JSError, ., make, (, callNode, ,]
[paramCount, >, 2, ), {, compiler, ., report, (, JSError, ., make, (, callNode, ,, GOOG_CLASS_UNEXPECTED_PARAMS, ), ), ;, return]
[., report, (, JSError, ., make, (, callNode, ,, GOOG_CLASS_UNEXPECTED_PARAMS, ), ), ;, return, null, ;, }, Node, constructor, =]
[(, JSError, ., make, (, callNode, ,, GOOG_CLASS_UNEXPECTED_PARAMS, ), ), ;, return, null, ;, }, Node, constructor, =, extractProperty, (]
[., make, (, callNode, ,, GOOG_CLASS_UNEXPECTED_PARAMS, ), ), ;, return, null, ;, }, Node, constructor, =, extractProperty, (, description, ,]
[GOOG_CLASS_UNEXPECTED_PARAMS, ), ), ;, return, null, ;, }, Node, constructor, =, extractProperty, (, description, ,, "constructor", ), ;, if, (]
[GOOG_CLASS_UNEXPECTED_PARAMS, ), ), ;, return, null, ;, }, Node, constructor, =, extractProperty, (, description, ,, "constructor", ), ;, if, (]
[), ;, return, null, ;, }, Node, constructor, =, extractProperty, (, description, ,, "constructor", ), ;, if, (, constructor, ==]
[null, ;, }, Node, constructor, =, extractProperty, (, description, ,, "constructor", ), ;, if, (, constructor, ==, null, ), {]
[null, ;, }, Node, constructor, =, extractProperty, (, description, ,, "constructor", ), ;, if, (, constructor, ==, null, ), {]
[constructor, =, extractProperty, (, description, ,, "constructor", ), ;, if, (, constructor, ==, null, ), {, compiler, ., report, (]
[constructor, =, extractProperty, (, description, ,, "constructor", ), ;, if, (, constructor, ==, null, ), {, compiler, ., report, (]
[description, ,, "constructor", ), ;, if, (, constructor, ==, null, ), {, compiler, ., report, (, JSError, ., make, (]
["constructor", ), ;, if, (, constructor, ==, null, ), {, compiler, ., report, (, JSError, ., make, (, description, ,]
[constructor, ==, null, ), {, compiler, ., report, (, JSError, ., make, (, description, ,, GOOG_CLASS_CONSTRUCTOR_MISING, ), ), ;, return]
[., report, (, JSError, ., make, (, description, ,, GOOG_CLASS_CONSTRUCTOR_MISING, ), ), ;, return, null, ;, }, JSDocInfo, info, =]
[., report, (, JSError, ., make, (, description, ,, GOOG_CLASS_CONSTRUCTOR_MISING, ), ), ;, return, null, ;, }, JSDocInfo, info, =]
[., make, (, description, ,, GOOG_CLASS_CONSTRUCTOR_MISING, ), ), ;, return, null, ;, }, JSDocInfo, info, =, NodeUtil, ., getBestJSDocInfo, (]
[), ), ;, return, null, ;, }, JSDocInfo, info, =, NodeUtil, ., getBestJSDocInfo, (, constructor, ), ;, Node, classModifier, =]
[;, }, JSDocInfo, info, =, NodeUtil, ., getBestJSDocInfo, (, constructor, ), ;, Node, classModifier, =, null, ;, Node, statics, =]
[NodeUtil, ., getBestJSDocInfo, (, constructor, ), ;, Node, classModifier, =, null, ;, Node, statics, =, null, ;, Node, staticsProp, =]
[getBestJSDocInfo, (, constructor, ), ;, Node, classModifier, =, null, ;, Node, statics, =, null, ;, Node, staticsProp, =, extractProperty, (]
[constructor, ), ;, Node, classModifier, =, null, ;, Node, statics, =, null, ;, Node, staticsProp, =, extractProperty, (, description, ,]
[=, null, ;, Node, statics, =, null, ;, Node, staticsProp, =, extractProperty, (, description, ,, "statics", ), ;, if, (]
[=, null, ;, Node, statics, =, null, ;, Node, staticsProp, =, extractProperty, (, description, ,, "statics", ), ;, if, (]
[;, Node, statics, =, null, ;, Node, staticsProp, =, extractProperty, (, description, ,, "statics", ), ;, if, (, staticsProp, !=]
[;, Node, staticsProp, =, extractProperty, (, description, ,, "statics", ), ;, if, (, staticsProp, !=, null, ), {, if, (]
[;, Node, staticsProp, =, extractProperty, (, description, ,, "statics", ), ;, if, (, staticsProp, !=, null, ), {, if, (]
[;, Node, staticsProp, =, extractProperty, (, description, ,, "statics", ), ;, if, (, staticsProp, !=, null, ), {, if, (]
[description, ,, "statics", ), ;, if, (, staticsProp, !=, null, ), {, if, (, staticsProp, ., isObjectLit, (, ), &&]
["statics", ), ;, if, (, staticsProp, !=, null, ), {, if, (, staticsProp, ., isObjectLit, (, ), &&, validateObjLit, (]
[(, staticsProp, !=, null, ), {, if, (, staticsProp, ., isObjectLit, (, ), &&, validateObjLit, (, staticsProp, ), ), {]
[!=, null, ), {, if, (, staticsProp, ., isObjectLit, (, ), &&, validateObjLit, (, staticsProp, ), ), {, statics, =]
[staticsProp, ., isObjectLit, (, ), &&, validateObjLit, (, staticsProp, ), ), {, statics, =, staticsProp, ;, }, else, if, (]
[staticsProp, ., isObjectLit, (, ), &&, validateObjLit, (, staticsProp, ), ), {, statics, =, staticsProp, ;, }, else, if, (]
[(, staticsProp, ), ), {, statics, =, staticsProp, ;, }, else, if, (, staticsProp, ., isFunction, (, ), ), {]
[), ), {, statics, =, staticsProp, ;, }, else, if, (, staticsProp, ., isFunction, (, ), ), {, classModifier, =]
[staticsProp, ;, }, else, if, (, staticsProp, ., isFunction, (, ), ), {, classModifier, =, staticsProp, ;, }, else, {]
[staticsProp, ;, }, else, if, (, staticsProp, ., isFunction, (, ), ), {, classModifier, =, staticsProp, ;, }, else, {]
[if, (, staticsProp, ., isFunction, (, ), ), {, classModifier, =, staticsProp, ;, }, else, {, compiler, ., report, (]
[if, (, staticsProp, ., isFunction, (, ), ), {, classModifier, =, staticsProp, ;, }, else, {, compiler, ., report, (]
[isFunction, (, ), ), {, classModifier, =, staticsProp, ;, }, else, {, compiler, ., report, (, JSError, ., make, (]
[), ), {, classModifier, =, staticsProp, ;, }, else, {, compiler, ., report, (, JSError, ., make, (, staticsProp, ,]
[staticsProp, ;, }, else, {, compiler, ., report, (, JSError, ., make, (, staticsProp, ,, GOOG_CLASS_STATICS_NOT_VALID, ), ), ;, return]
[., report, (, JSError, ., make, (, staticsProp, ,, GOOG_CLASS_STATICS_NOT_VALID, ), ), ;, return, null, ;, }, }, if, (]
[., report, (, JSError, ., make, (, staticsProp, ,, GOOG_CLASS_STATICS_NOT_VALID, ), ), ;, return, null, ;, }, }, if, (]
[(, JSError, ., make, (, staticsProp, ,, GOOG_CLASS_STATICS_NOT_VALID, ), ), ;, return, null, ;, }, }, if, (, statics, ==]
[make, (, staticsProp, ,, GOOG_CLASS_STATICS_NOT_VALID, ), ), ;, return, null, ;, }, }, if, (, statics, ==, null, ), {]
[staticsProp, ,, GOOG_CLASS_STATICS_NOT_VALID, ), ), ;, return, null, ;, }, }, if, (, statics, ==, null, ), {, statics, =]
[staticsProp, ,, GOOG_CLASS_STATICS_NOT_VALID, ), ), ;, return, null, ;, }, }, if, (, statics, ==, null, ), {, statics, =]
[null, ;, }, }, if, (, statics, ==, null, ), {, statics, =, IR, ., objectlit, (, ), ;, }]
[}, }, if, (, statics, ==, null, ), {, statics, =, IR, ., objectlit, (, ), ;, }, maybeDetach, (]
[}, }, if, (, statics, ==, null, ), {, statics, =, IR, ., objectlit, (, ), ;, }, maybeDetach, (]
[), {, statics, =, IR, ., objectlit, (, ), ;, }, maybeDetach, (, constructor, ., getParent, (, ), ), ;]
[statics, =, IR, ., objectlit, (, ), ;, }, maybeDetach, (, constructor, ., getParent, (, ), ), ;, maybeDetach, (]
[statics, =, IR, ., objectlit, (, ), ;, }, maybeDetach, (, constructor, ., getParent, (, ), ), ;, maybeDetach, (]
[maybeDetach, (, constructor, ., getParent, (, ), ), ;, maybeDetach, (, statics, ., getParent, (, ), ), ;, if, (]
[maybeDetach, (, constructor, ., getParent, (, ), ), ;, maybeDetach, (, statics, ., getParent, (, ), ), ;, if, (]
[constructor, ., getParent, (, ), ), ;, maybeDetach, (, statics, ., getParent, (, ), ), ;, if, (, classModifier, !=]
[(, ), ), ;, maybeDetach, (, statics, ., getParent, (, ), ), ;, if, (, classModifier, !=, null, ), {]
[), ;, maybeDetach, (, statics, ., getParent, (, ), ), ;, if, (, classModifier, !=, null, ), {, maybeDetach, (]
[), ;, maybeDetach, (, statics, ., getParent, (, ), ), ;, if, (, classModifier, !=, null, ), {, maybeDetach, (]
[if, (, classModifier, !=, null, ), {, maybeDetach, (, classModifier, ., getParent, (, ), ), ;, }, ClassDefinition, def, =]
[!=, null, ), {, maybeDetach, (, classModifier, ., getParent, (, ), ), ;, }, ClassDefinition, def, =, new, ClassDefinition, (]
[), {, maybeDetach, (, classModifier, ., getParent, (, ), ), ;, }, ClassDefinition, def, =, new, ClassDefinition, (, targetName, ,]
[maybeDetach, (, classModifier, ., getParent, (, ), ), ;, }, ClassDefinition, def, =, new, ClassDefinition, (, targetName, ,, maybeDetach, (]
[., getParent, (, ), ), ;, }, ClassDefinition, def, =, new, ClassDefinition, (, targetName, ,, maybeDetach, (, superClass, ), ,]
[), ), ;, }, ClassDefinition, def, =, new, ClassDefinition, (, targetName, ,, maybeDetach, (, superClass, ), ,, new, MemberDefinition, (]
[;, }, ClassDefinition, def, =, new, ClassDefinition, (, targetName, ,, maybeDetach, (, superClass, ), ,, new, MemberDefinition, (, info, ,]
[ClassDefinition, def, =, new, ClassDefinition, (, targetName, ,, maybeDetach, (, superClass, ), ,, new, MemberDefinition, (, info, ,, null, ,]
[=, new, ClassDefinition, (, targetName, ,, maybeDetach, (, superClass, ), ,, new, MemberDefinition, (, info, ,, null, ,, maybeDetach, (]
[targetName, ,, maybeDetach, (, superClass, ), ,, new, MemberDefinition, (, info, ,, null, ,, maybeDetach, (, constructor, ), ), ,]
[maybeDetach, (, superClass, ), ,, new, MemberDefinition, (, info, ,, null, ,, maybeDetach, (, constructor, ), ), ,, objectLitToList, (]
[superClass, ), ,, new, MemberDefinition, (, info, ,, null, ,, maybeDetach, (, constructor, ), ), ,, objectLitToList, (, maybeDetach, (]
[MemberDefinition, (, info, ,, null, ,, maybeDetach, (, constructor, ), ), ,, objectLitToList, (, maybeDetach, (, statics, ), ), ,]
[info, ,, null, ,, maybeDetach, (, constructor, ), ), ,, objectLitToList, (, maybeDetach, (, statics, ), ), ,, objectLitToList, (]
[,, maybeDetach, (, constructor, ), ), ,, objectLitToList, (, maybeDetach, (, statics, ), ), ,, objectLitToList, (, description, ), ,]
[(, constructor, ), ), ,, objectLitToList, (, maybeDetach, (, statics, ), ), ,, objectLitToList, (, description, ), ,, maybeDetach, (]
[objectLitToList, (, maybeDetach, (, statics, ), ), ,, objectLitToList, (, description, ), ,, maybeDetach, (, classModifier, ), ), ;, return]
[maybeDetach, (, classModifier, ), ), ;, return, def, ;, }, private, Node, maybeDetach, (, Node, node, ), {, if, (]
[maybeDetach, (, classModifier, ), ), ;, return, def, ;, }, private, Node, maybeDetach, (, Node, node, ), {, if, (]
[maybeDetach, (, classModifier, ), ), ;, return, def, ;, }, private, Node, maybeDetach, (, Node, node, ), {, if, (]
[classModifier, ), ), ;, return, def, ;, }, private, Node, maybeDetach, (, Node, node, ), {, if, (, node, !=]
[), ;, return, def, ;, }, private, Node, maybeDetach, (, Node, node, ), {, if, (, node, !=, null, &&]
[), ;, return, def, ;, }, private, Node, maybeDetach, (, Node, node, ), {, if, (, node, !=, null, &&]
[), ;, return, def, ;, }, private, Node, maybeDetach, (, Node, node, ), {, if, (, node, !=, null, &&]
[private, Node, maybeDetach, (, Node, node, ), {, if, (, node, !=, null, &&, node, ., getParent, (, ), !=]
[(, Node, node, ), {, if, (, node, !=, null, &&, node, ., getParent, (, ), !=, null, ), {]
[(, Node, node, ), {, if, (, node, !=, null, &&, node, ., getParent, (, ), !=, null, ), {]
[!=, null, &&, node, ., getParent, (, ), !=, null, ), {, node, ., detachFromParent, (, ), ;, }, return]
[), ;, }, return, node, ;, }, private, boolean, validateObjLit, (, Node, objlit, ), {, for, (, Node, key, :]
[), ;, }, return, node, ;, }, private, boolean, validateObjLit, (, Node, objlit, ), {, for, (, Node, key, :]
[validateObjLit, (, Node, objlit, ), {, for, (, Node, key, :, objlit, ., children, (, ), ), {, if, (]
[validateObjLit, (, Node, objlit, ), {, for, (, Node, key, :, objlit, ., children, (, ), ), {, if, (]
[(, Node, objlit, ), {, for, (, Node, key, :, objlit, ., children, (, ), ), {, if, (, !]
[(, Node, objlit, ), {, for, (, Node, key, :, objlit, ., children, (, ), ), {, if, (, !]
[(, Node, key, :, objlit, ., children, (, ), ), {, if, (, !, key, ., isStringKey, (, ), ||]
[(, Node, key, :, objlit, ., children, (, ), ), {, if, (, !, key, ., isStringKey, (, ), ||]
[), ), {, if, (, !, key, ., isStringKey, (, ), ||, key, ., isQuotedString, (, ), ), {, return]
[!, key, ., isStringKey, (, ), ||, key, ., isQuotedString, (, ), ), {, return, false, ;, }, }, return]
[return, true, ;, }, private, Node, extractProperty, (, Node, objlit, ,, String, keyName, ), {, for, (, Node, keyNode, :]
[return, true, ;, }, private, Node, extractProperty, (, Node, objlit, ,, String, keyName, ), {, for, (, Node, keyNode, :]
[objlit, ,, String, keyName, ), {, for, (, Node, keyNode, :, objlit, ., children, (, ), ), {, if, (]
[objlit, ,, String, keyName, ), {, for, (, Node, keyNode, :, objlit, ., children, (, ), ), {, if, (]
[objlit, ,, String, keyName, ), {, for, (, Node, keyNode, :, objlit, ., children, (, ), ), {, if, (]
[Node, keyNode, :, objlit, ., children, (, ), ), {, if, (, keyNode, ., getString, (, ), ., equals, (]
[children, (, ), ), {, if, (, keyNode, ., getString, (, ), ., equals, (, keyName, ), ), {, return]
[children, (, ), ), {, if, (, keyNode, ., getString, (, ), ., equals, (, keyName, ), ), {, return]
[children, (, ), ), {, if, (, keyNode, ., getString, (, ), ., equals, (, keyName, ), ), {, return]
[(, keyNode, ., getString, (, ), ., equals, (, keyName, ), ), {, return, keyNode, ., isStringKey, (, ), ?]
[(, keyNode, ., getString, (, ), ., equals, (, keyName, ), ), {, return, keyNode, ., isStringKey, (, ), ?]
[., equals, (, keyName, ), ), {, return, keyNode, ., isStringKey, (, ), ?, keyNode, ., getFirstChild, (, ), :]
[), {, return, keyNode, ., isStringKey, (, ), ?, keyNode, ., getFirstChild, (, ), :, null, ;, }, }, return]
[null, ;, }, private, List, <, MemberDefinition, >, objectLitToList, (, Node, objlit, ), {, List, <, MemberDefinition, >, result, =]
[null, ;, }, private, List, <, MemberDefinition, >, objectLitToList, (, Node, objlit, ), {, List, <, MemberDefinition, >, result, =]
[objlit, ), {, List, <, MemberDefinition, >, result, =, Lists, ., newArrayList, (, ), ;, for, (, Node, keyNode, :]
[objlit, ), {, List, <, MemberDefinition, >, result, =, Lists, ., newArrayList, (, ), ;, for, (, Node, keyNode, :]
[result, =, Lists, ., newArrayList, (, ), ;, for, (, Node, keyNode, :, objlit, ., children, (, ), ), {]
[result, =, Lists, ., newArrayList, (, ), ;, for, (, Node, keyNode, :, objlit, ., children, (, ), ), {]
[newArrayList, (, ), ;, for, (, Node, keyNode, :, objlit, ., children, (, ), ), {, result, ., add, (]
[;, for, (, Node, keyNode, :, objlit, ., children, (, ), ), {, result, ., add, (, new, MemberDefinition, (]
[;, for, (, Node, keyNode, :, objlit, ., children, (, ), ), {, result, ., add, (, new, MemberDefinition, (]
[keyNode, :, objlit, ., children, (, ), ), {, result, ., add, (, new, MemberDefinition, (, NodeUtil, ., getBestJSDocInfo, (]
[., children, (, ), ), {, result, ., add, (, new, MemberDefinition, (, NodeUtil, ., getBestJSDocInfo, (, keyNode, ), ,]
[(, ), ), {, result, ., add, (, new, MemberDefinition, (, NodeUtil, ., getBestJSDocInfo, (, keyNode, ), ,, keyNode, ,]
[(, ), ), {, result, ., add, (, new, MemberDefinition, (, NodeUtil, ., getBestJSDocInfo, (, keyNode, ), ,, keyNode, ,]
[MemberDefinition, (, NodeUtil, ., getBestJSDocInfo, (, keyNode, ), ,, keyNode, ,, keyNode, ., removeFirstChild, (, ), ), ), ;, }]
[MemberDefinition, (, NodeUtil, ., getBestJSDocInfo, (, keyNode, ), ,, keyNode, ,, keyNode, ., removeFirstChild, (, ), ), ), ;, }]
[), ,, keyNode, ,, keyNode, ., removeFirstChild, (, ), ), ), ;, }, objlit, ., detachChildren, (, ), ;, return]
[), ;, return, result, ;, }, private, void, rewriteGoogDefineClass, (, Node, exprRoot, ,, ClassDefinition, cls, ), {, Node, block, =]
[), ;, return, result, ;, }, private, void, rewriteGoogDefineClass, (, Node, exprRoot, ,, ClassDefinition, cls, ), {, Node, block, =]
[rewriteGoogDefineClass, (, Node, exprRoot, ,, ClassDefinition, cls, ), {, Node, block, =, IR, ., block, (, ), ;, if, (]
[rewriteGoogDefineClass, (, Node, exprRoot, ,, ClassDefinition, cls, ), {, Node, block, =, IR, ., block, (, ), ;, if, (]
[), {, Node, block, =, IR, ., block, (, ), ;, if, (, exprRoot, ., isVar, (, ), ), {]
[), {, Node, block, =, IR, ., block, (, ), ;, if, (, exprRoot, ., isVar, (, ), ), {]
[=, IR, ., block, (, ), ;, if, (, exprRoot, ., isVar, (, ), ), {, block, ., addChildToBack, (]
[=, IR, ., block, (, ), ;, if, (, exprRoot, ., isVar, (, ), ), {, block, ., addChildToBack, (]
[=, IR, ., block, (, ), ;, if, (, exprRoot, ., isVar, (, ), ), {, block, ., addChildToBack, (]
[=, IR, ., block, (, ), ;, if, (, exprRoot, ., isVar, (, ), ), {, block, ., addChildToBack, (]
[(, ), ;, if, (, exprRoot, ., isVar, (, ), ), {, block, ., addChildToBack, (, IR, ., var, (]
[(, ), ;, if, (, exprRoot, ., isVar, (, ), ), {, block, ., addChildToBack, (, IR, ., var, (]
[(, ), ;, if, (, exprRoot, ., isVar, (, ), ), {, block, ., addChildToBack, (, IR, ., var, (]
[(, ), ), {, block, ., addChildToBack, (, IR, ., var, (, cls, ., name, ., cloneTree, (, ), ,]
[(, ), ), {, block, ., addChildToBack, (, IR, ., var, (, cls, ., name, ., cloneTree, (, ), ,]
[(, ), ), {, block, ., addChildToBack, (, IR, ., var, (, cls, ., name, ., cloneTree, (, ), ,]
[., var, (, cls, ., name, ., cloneTree, (, ), ,, cls, ., constructor, ., value, ), ., srcref, (]
[name, ., cloneTree, (, ), ,, cls, ., constructor, ., value, ), ., srcref, (, exprRoot, ), ., setJSDocInfo, (]
[name, ., cloneTree, (, ), ,, cls, ., constructor, ., value, ), ., srcref, (, exprRoot, ), ., setJSDocInfo, (]
[name, ., cloneTree, (, ), ,, cls, ., constructor, ., value, ), ., srcref, (, exprRoot, ), ., setJSDocInfo, (]
[), ., srcref, (, exprRoot, ), ., setJSDocInfo, (, cls, ., constructor, ., info, ), ), ;, }, else, {]
[), ., srcref, (, exprRoot, ), ., setJSDocInfo, (, cls, ., constructor, ., info, ), ), ;, }, else, {]
[exprRoot, ), ., setJSDocInfo, (, cls, ., constructor, ., info, ), ), ;, }, else, {, block, ., addChildToBack, (]
[exprRoot, ), ., setJSDocInfo, (, cls, ., constructor, ., info, ), ), ;, }, else, {, block, ., addChildToBack, (]
[., setJSDocInfo, (, cls, ., constructor, ., info, ), ), ;, }, else, {, block, ., addChildToBack, (, fixupSrcref, (]
[., setJSDocInfo, (, cls, ., constructor, ., info, ), ), ;, }, else, {, block, ., addChildToBack, (, fixupSrcref, (]
[., constructor, ., info, ), ), ;, }, else, {, block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (]
[., constructor, ., info, ), ), ;, }, else, {, block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (]
[., constructor, ., info, ), ), ;, }, else, {, block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (]
[., constructor, ., info, ), ), ;, }, else, {, block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (]
[., constructor, ., info, ), ), ;, }, else, {, block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (]
[), ), ;, }, else, {, block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (, IR, ., assign, (]
[), ), ;, }, else, {, block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (, IR, ., assign, (]
[), ), ;, }, else, {, block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (, IR, ., assign, (]
[addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (, IR, ., assign, (, cls, ., name, ., cloneTree, (, ), ,]
[addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (, IR, ., assign, (, cls, ., name, ., cloneTree, (, ), ,]
[addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (, IR, ., assign, (, cls, ., name, ., cloneTree, (, ), ,]
[., assign, (, cls, ., name, ., cloneTree, (, ), ,, cls, ., constructor, ., value, ), ., srcref, (]
[name, ., cloneTree, (, ), ,, cls, ., constructor, ., value, ), ., srcref, (, exprRoot, ), ., setJSDocInfo, (]
[name, ., cloneTree, (, ), ,, cls, ., constructor, ., value, ), ., srcref, (, exprRoot, ), ., setJSDocInfo, (]
[name, ., cloneTree, (, ), ,, cls, ., constructor, ., value, ), ., srcref, (, exprRoot, ), ., setJSDocInfo, (]
[., value, ), ., srcref, (, exprRoot, ), ., setJSDocInfo, (, cls, ., constructor, ., info, ), ., srcref, (]
[), ., setJSDocInfo, (, cls, ., constructor, ., info, ), ., srcref, (, exprRoot, ), ), ), ., setJSDocInfo, (]
[), ., setJSDocInfo, (, cls, ., constructor, ., info, ), ., srcref, (, exprRoot, ), ), ), ., setJSDocInfo, (]
[), ., setJSDocInfo, (, cls, ., constructor, ., info, ), ., srcref, (, exprRoot, ), ), ), ., setJSDocInfo, (]
[srcref, (, exprRoot, ), ), ), ., setJSDocInfo, (, cls, ., constructor, ., info, ), ), ;, }, if, (]
[srcref, (, exprRoot, ), ), ), ., setJSDocInfo, (, cls, ., constructor, ., info, ), ), ;, }, if, (]
[srcref, (, exprRoot, ), ), ), ., setJSDocInfo, (, cls, ., constructor, ., info, ), ), ;, }, if, (]
[), ), ., setJSDocInfo, (, cls, ., constructor, ., info, ), ), ;, }, if, (, cls, ., superClass, !=]
[setJSDocInfo, (, cls, ., constructor, ., info, ), ), ;, }, if, (, cls, ., superClass, !=, null, ), {]
[setJSDocInfo, (, cls, ., constructor, ., info, ), ), ;, }, if, (, cls, ., superClass, !=, null, ), {]
[constructor, ., info, ), ), ;, }, if, (, cls, ., superClass, !=, null, ), {, block, ., addChildToBack, (]
[info, ), ), ;, }, if, (, cls, ., superClass, !=, null, ), {, block, ., addChildToBack, (, fixupSrcref, (]
[info, ), ), ;, }, if, (, cls, ., superClass, !=, null, ), {, block, ., addChildToBack, (, fixupSrcref, (]
[}, if, (, cls, ., superClass, !=, null, ), {, block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (]
[}, if, (, cls, ., superClass, !=, null, ), {, block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (]
[}, if, (, cls, ., superClass, !=, null, ), {, block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (]
[., superClass, !=, null, ), {, block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (, IR, ., call, (]
[., superClass, !=, null, ), {, block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (, IR, ., call, (]
[., superClass, !=, null, ), {, block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (, IR, ., call, (]
[), {, block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (, IR, ., call, (, NodeUtil, ., newQualifiedNameNode, (]
[), {, block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (, IR, ., call, (, NodeUtil, ., newQualifiedNameNode, (]
[fixupSrcref, (, IR, ., exprResult, (, IR, ., call, (, NodeUtil, ., newQualifiedNameNode, (, compiler, ., getCodingConvention, (, ), ,]
[(, IR, ., call, (, NodeUtil, ., newQualifiedNameNode, (, compiler, ., getCodingConvention, (, ), ,, "goog.inherits", ), ., srcrefTree, (]
[(, IR, ., call, (, NodeUtil, ., newQualifiedNameNode, (, compiler, ., getCodingConvention, (, ), ,, "goog.inherits", ), ., srcrefTree, (]
[NodeUtil, ., newQualifiedNameNode, (, compiler, ., getCodingConvention, (, ), ,, "goog.inherits", ), ., srcrefTree, (, cls, ., superClass, ), ,]
[NodeUtil, ., newQualifiedNameNode, (, compiler, ., getCodingConvention, (, ), ,, "goog.inherits", ), ., srcrefTree, (, cls, ., superClass, ), ,]
[NodeUtil, ., newQualifiedNameNode, (, compiler, ., getCodingConvention, (, ), ,, "goog.inherits", ), ., srcrefTree, (, cls, ., superClass, ), ,]
[), ,, "goog.inherits", ), ., srcrefTree, (, cls, ., superClass, ), ,, cls, ., name, ., cloneTree, (, ), ,]
[), ,, "goog.inherits", ), ., srcrefTree, (, cls, ., superClass, ), ,, cls, ., name, ., cloneTree, (, ), ,]
[), ,, "goog.inherits", ), ., srcrefTree, (, cls, ., superClass, ), ,, cls, ., name, ., cloneTree, (, ), ,]
[,, cls, ., name, ., cloneTree, (, ), ,, cls, ., superClass, ., cloneTree, (, ), ), ., srcref, (]
[,, cls, ., name, ., cloneTree, (, ), ,, cls, ., superClass, ., cloneTree, (, ), ), ., srcref, (]
[(, ), ), ., srcref, (, cls, ., superClass, ), ), ), ), ;, }, for, (, MemberDefinition, def, :]
[(, ), ), ., srcref, (, cls, ., superClass, ), ), ), ), ;, }, for, (, MemberDefinition, def, :]
[(, cls, ., superClass, ), ), ), ), ;, }, for, (, MemberDefinition, def, :, cls, ., staticProps, ), {]
[(, cls, ., superClass, ), ), ), ), ;, }, for, (, MemberDefinition, def, :, cls, ., staticProps, ), {]
[), ), ), ), ;, }, for, (, MemberDefinition, def, :, cls, ., staticProps, ), {, block, ., addChildToBack, (]
[), ), ;, }, for, (, MemberDefinition, def, :, cls, ., staticProps, ), {, block, ., addChildToBack, (, fixupSrcref, (]
[), ), ;, }, for, (, MemberDefinition, def, :, cls, ., staticProps, ), {, block, ., addChildToBack, (, fixupSrcref, (]
[for, (, MemberDefinition, def, :, cls, ., staticProps, ), {, block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (]
[for, (, MemberDefinition, def, :, cls, ., staticProps, ), {, block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (]
[MemberDefinition, def, :, cls, ., staticProps, ), {, block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (, fixupSrcref, (]
[MemberDefinition, def, :, cls, ., staticProps, ), {, block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (, fixupSrcref, (]
[., staticProps, ), {, block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (, fixupSrcref, (, IR, ., assign, (]
[., staticProps, ), {, block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (, fixupSrcref, (, IR, ., assign, (]
[., staticProps, ), {, block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (, fixupSrcref, (, IR, ., assign, (]
[block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (, fixupSrcref, (, IR, ., assign, (, IR, ., getprop, (]
[block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (, fixupSrcref, (, IR, ., assign, (, IR, ., getprop, (]
[block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (, fixupSrcref, (, IR, ., assign, (, IR, ., getprop, (]
[exprResult, (, fixupSrcref, (, IR, ., assign, (, IR, ., getprop, (, cls, ., name, ., cloneTree, (, ), ,]
[exprResult, (, fixupSrcref, (, IR, ., assign, (, IR, ., getprop, (, cls, ., name, ., cloneTree, (, ), ,]
[exprResult, (, fixupSrcref, (, IR, ., assign, (, IR, ., getprop, (, cls, ., name, ., cloneTree, (, ), ,]
[IR, ., assign, (, IR, ., getprop, (, cls, ., name, ., cloneTree, (, ), ,, IR, ., string, (]
[IR, ., assign, (, IR, ., getprop, (, cls, ., name, ., cloneTree, (, ), ,, IR, ., string, (]
[IR, ., assign, (, IR, ., getprop, (, cls, ., name, ., cloneTree, (, ), ,, IR, ., string, (]
[., cloneTree, (, ), ,, IR, ., string, (, def, ., name, ., getString, (, ), ), ., srcref, (]
[., cloneTree, (, ), ,, IR, ., string, (, def, ., name, ., getString, (, ), ), ., srcref, (]
[(, def, ., name, ., getString, (, ), ), ., srcref, (, def, ., name, ), ), ., srcref, (]
[(, def, ., name, ., getString, (, ), ), ., srcref, (, def, ., name, ), ), ., srcref, (]
[getString, (, ), ), ., srcref, (, def, ., name, ), ), ., srcref, (, def, ., name, ), ,]
[getString, (, ), ), ., srcref, (, def, ., name, ), ), ., srcref, (, def, ., name, ), ,]
[., name, ), ), ., srcref, (, def, ., name, ), ,, def, ., value, ), ), ., setJSDocInfo, (]
[., name, ), ), ., srcref, (, def, ., name, ), ,, def, ., value, ), ), ., setJSDocInfo, (]
[., name, ), ,, def, ., value, ), ), ., setJSDocInfo, (, def, ., info, ), ), ), ), ;]
[), ,, def, ., value, ), ), ., setJSDocInfo, (, def, ., info, ), ), ), ), ;, maybeRewriteClassDefinition, (]
[), ,, def, ., value, ), ), ., setJSDocInfo, (, def, ., info, ), ), ), ), ;, maybeRewriteClassDefinition, (]
[), ), ), ), ;, maybeRewriteClassDefinition, (, block, ., getLastChild, (, ), ), ;, }, for, (, MemberDefinition, def, :]
[), ), ), ), ;, maybeRewriteClassDefinition, (, block, ., getLastChild, (, ), ), ;, }, for, (, MemberDefinition, def, :]
[maybeRewriteClassDefinition, (, block, ., getLastChild, (, ), ), ;, }, for, (, MemberDefinition, def, :, cls, ., props, ), {]
[maybeRewriteClassDefinition, (, block, ., getLastChild, (, ), ), ;, }, for, (, MemberDefinition, def, :, cls, ., props, ), {]
[getLastChild, (, ), ), ;, }, for, (, MemberDefinition, def, :, cls, ., props, ), {, block, ., addChildToBack, (]
[), ), ;, }, for, (, MemberDefinition, def, :, cls, ., props, ), {, block, ., addChildToBack, (, fixupSrcref, (]
[), ), ;, }, for, (, MemberDefinition, def, :, cls, ., props, ), {, block, ., addChildToBack, (, fixupSrcref, (]
[for, (, MemberDefinition, def, :, cls, ., props, ), {, block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (]
[for, (, MemberDefinition, def, :, cls, ., props, ), {, block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (]
[MemberDefinition, def, :, cls, ., props, ), {, block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (, fixupSrcref, (]
[MemberDefinition, def, :, cls, ., props, ), {, block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (, fixupSrcref, (]
[., props, ), {, block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (, fixupSrcref, (, IR, ., assign, (]
[., props, ), {, block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (, fixupSrcref, (, IR, ., assign, (]
[., props, ), {, block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (, fixupSrcref, (, IR, ., assign, (]
[block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (, fixupSrcref, (, IR, ., assign, (, IR, ., getprop, (]
[addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (, fixupSrcref, (, IR, ., assign, (, IR, ., getprop, (, fixupSrcref, (]
[addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (, fixupSrcref, (, IR, ., assign, (, IR, ., getprop, (, fixupSrcref, (]
[IR, ., exprResult, (, fixupSrcref, (, IR, ., assign, (, IR, ., getprop, (, fixupSrcref, (, IR, ., getprop, (]
[IR, ., exprResult, (, fixupSrcref, (, IR, ., assign, (, IR, ., getprop, (, fixupSrcref, (, IR, ., getprop, (]
[IR, ., exprResult, (, fixupSrcref, (, IR, ., assign, (, IR, ., getprop, (, fixupSrcref, (, IR, ., getprop, (]
[assign, (, IR, ., getprop, (, fixupSrcref, (, IR, ., getprop, (, cls, ., name, ., cloneTree, (, ), ,]
[assign, (, IR, ., getprop, (, fixupSrcref, (, IR, ., getprop, (, cls, ., name, ., cloneTree, (, ), ,]
[assign, (, IR, ., getprop, (, fixupSrcref, (, IR, ., getprop, (, cls, ., name, ., cloneTree, (, ), ,]
[getprop, (, fixupSrcref, (, IR, ., getprop, (, cls, ., name, ., cloneTree, (, ), ,, IR, ., string, (]
[., getprop, (, cls, ., name, ., cloneTree, (, ), ,, IR, ., string, (, "prototype", ), ., srcref, (]
[., getprop, (, cls, ., name, ., cloneTree, (, ), ,, IR, ., string, (, "prototype", ), ., srcref, (]
[cloneTree, (, ), ,, IR, ., string, (, "prototype", ), ., srcref, (, def, ., name, ), ), ), ,]
[cloneTree, (, ), ,, IR, ., string, (, "prototype", ), ., srcref, (, def, ., name, ), ), ), ,]
[cloneTree, (, ), ,, IR, ., string, (, "prototype", ), ., srcref, (, def, ., name, ), ), ), ,]
[IR, ., string, (, "prototype", ), ., srcref, (, def, ., name, ), ), ), ,, IR, ., string, (]
[IR, ., string, (, "prototype", ), ., srcref, (, def, ., name, ), ), ), ,, IR, ., string, (]
[IR, ., string, (, "prototype", ), ., srcref, (, def, ., name, ), ), ), ,, IR, ., string, (]
[name, ), ), ), ,, IR, ., string, (, def, ., name, ., getString, (, ), ), ., srcref, (]
[name, ), ), ), ,, IR, ., string, (, def, ., name, ., getString, (, ), ), ., srcref, (]
[(, def, ., name, ., getString, (, ), ), ., srcref, (, def, ., name, ), ), ., srcref, (]
[(, def, ., name, ., getString, (, ), ), ., srcref, (, def, ., name, ), ), ., srcref, (]
[getString, (, ), ), ., srcref, (, def, ., name, ), ), ., srcref, (, def, ., name, ), ,]
[getString, (, ), ), ., srcref, (, def, ., name, ), ), ., srcref, (, def, ., name, ), ,]
[., name, ), ), ., srcref, (, def, ., name, ), ,, def, ., value, ), ), ., setJSDocInfo, (]
[., name, ), ), ., srcref, (, def, ., name, ), ,, def, ., value, ), ), ., setJSDocInfo, (]
[., name, ), ,, def, ., value, ), ), ., setJSDocInfo, (, def, ., info, ), ), ), ), ;]
[), ,, def, ., value, ), ), ., setJSDocInfo, (, def, ., info, ), ), ), ), ;, maybeRewriteClassDefinition, (]
[), ,, def, ., value, ), ), ., setJSDocInfo, (, def, ., info, ), ), ), ), ;, maybeRewriteClassDefinition, (]
[def, ., info, ), ), ), ), ;, maybeRewriteClassDefinition, (, block, ., getLastChild, (, ), ), ;, }, if, (]
[def, ., info, ), ), ), ), ;, maybeRewriteClassDefinition, (, block, ., getLastChild, (, ), ), ;, }, if, (]
[def, ., info, ), ), ), ), ;, maybeRewriteClassDefinition, (, block, ., getLastChild, (, ), ), ;, }, if, (]
[), ), ), ;, maybeRewriteClassDefinition, (, block, ., getLastChild, (, ), ), ;, }, if, (, cls, ., classModifier, !=]
[;, maybeRewriteClassDefinition, (, block, ., getLastChild, (, ), ), ;, }, if, (, cls, ., classModifier, !=, null, ), {]
[;, maybeRewriteClassDefinition, (, block, ., getLastChild, (, ), ), ;, }, if, (, cls, ., classModifier, !=, null, ), {]
[., getLastChild, (, ), ), ;, }, if, (, cls, ., classModifier, !=, null, ), {, block, ., addChildToBack, (]
[., getLastChild, (, ), ), ;, }, if, (, cls, ., classModifier, !=, null, ), {, block, ., addChildToBack, (]
[., getLastChild, (, ), ), ;, }, if, (, cls, ., classModifier, !=, null, ), {, block, ., addChildToBack, (]
[), ;, }, if, (, cls, ., classModifier, !=, null, ), {, block, ., addChildToBack, (, IR, ., exprResult, (]
[}, if, (, cls, ., classModifier, !=, null, ), {, block, ., addChildToBack, (, IR, ., exprResult, (, fixupFreeCall, (]
[}, if, (, cls, ., classModifier, !=, null, ), {, block, ., addChildToBack, (, IR, ., exprResult, (, fixupFreeCall, (]
[}, if, (, cls, ., classModifier, !=, null, ), {, block, ., addChildToBack, (, IR, ., exprResult, (, fixupFreeCall, (]
[., classModifier, !=, null, ), {, block, ., addChildToBack, (, IR, ., exprResult, (, fixupFreeCall, (, IR, ., call, (]
[., classModifier, !=, null, ), {, block, ., addChildToBack, (, IR, ., exprResult, (, fixupFreeCall, (, IR, ., call, (]
[), {, block, ., addChildToBack, (, IR, ., exprResult, (, fixupFreeCall, (, IR, ., call, (, cls, ., classModifier, ,]
[), {, block, ., addChildToBack, (, IR, ., exprResult, (, fixupFreeCall, (, IR, ., call, (, cls, ., classModifier, ,]
[), {, block, ., addChildToBack, (, IR, ., exprResult, (, fixupFreeCall, (, IR, ., call, (, cls, ., classModifier, ,]
[(, IR, ., call, (, cls, ., classModifier, ,, cls, ., name, ., cloneTree, (, ), ), ., srcref, (]
[(, IR, ., call, (, cls, ., classModifier, ,, cls, ., name, ., cloneTree, (, ), ), ., srcref, (]
[cls, ., name, ., cloneTree, (, ), ), ., srcref, (, cls, ., classModifier, ), ), ), ., srcref, (]
[cls, ., name, ., cloneTree, (, ), ), ., srcref, (, cls, ., classModifier, ), ), ), ., srcref, (]
[), ., srcref, (, cls, ., classModifier, ), ), ), ., srcref, (, cls, ., classModifier, ), ), ;, }]
[), ., srcref, (, cls, ., classModifier, ), ), ), ., srcref, (, cls, ., classModifier, ), ), ;, }]
[), ., srcref, (, cls, ., classModifier, ), ), ), ., srcref, (, cls, ., classModifier, ), ), ;, }]
[), ), ., srcref, (, cls, ., classModifier, ), ), ;, }, exprRoot, ., getParent, (, ), ., replaceChild, (]
[., srcref, (, cls, ., classModifier, ), ), ;, }, exprRoot, ., getParent, (, ), ., replaceChild, (, exprRoot, ,]
[cls, ., classModifier, ), ), ;, }, exprRoot, ., getParent, (, ), ., replaceChild, (, exprRoot, ,, block, ), ;]
[cls, ., classModifier, ), ), ;, }, exprRoot, ., getParent, (, ), ., replaceChild, (, exprRoot, ,, block, ), ;]
[exprRoot, ,, block, ), ;, compiler, ., reportCodeChange, (, ), ;, }, private, Node, fixupSrcref, (, Node, node, ), {]
[exprRoot, ,, block, ), ;, compiler, ., reportCodeChange, (, ), ;, }, private, Node, fixupSrcref, (, Node, node, ), {]
[;, compiler, ., reportCodeChange, (, ), ;, }, private, Node, fixupSrcref, (, Node, node, ), {, node, ., srcref, (]
[;, compiler, ., reportCodeChange, (, ), ;, }, private, Node, fixupSrcref, (, Node, node, ), {, node, ., srcref, (]
[private, Node, fixupSrcref, (, Node, node, ), {, node, ., srcref, (, node, ., getFirstChild, (, ), ), ;, return]
[(, node, ., getFirstChild, (, ), ), ;, return, node, ;, }, private, Node, fixupFreeCall, (, Node, call, ), {]
[(, node, ., getFirstChild, (, ), ), ;, return, node, ;, }, private, Node, fixupFreeCall, (, Node, call, ), {]
[(, ), ), ;, return, node, ;, }, private, Node, fixupFreeCall, (, Node, call, ), {, Preconditions, ., checkState, (]
[(, ), ), ;, return, node, ;, }, private, Node, fixupFreeCall, (, Node, call, ), {, Preconditions, ., checkState, (]
[}, private, Node, fixupFreeCall, (, Node, call, ), {, Preconditions, ., checkState, (, call, ., isCall, (, ), ), ;]
[}, private, Node, fixupFreeCall, (, Node, call, ), {, Preconditions, ., checkState, (, call, ., isCall, (, ), ), ;]
[(, Node, call, ), {, Preconditions, ., checkState, (, call, ., isCall, (, ), ), ;, call, ., putBooleanProp, (]
[(, Node, call, ), {, Preconditions, ., checkState, (, call, ., isCall, (, ), ), ;, call, ., putBooleanProp, (]
[{, Preconditions, ., checkState, (, call, ., isCall, (, ), ), ;, call, ., putBooleanProp, (, Node, ., FREE_CALL, ,]
[(, call, ., isCall, (, ), ), ;, call, ., putBooleanProp, (, Node, ., FREE_CALL, ,, true, ), ;, return]
[., FREE_CALL, ,, true, ), ;, return, call, ;, }, private, boolean, isGoogDefineClass, (, Node, value, ), {, if, (]
[., FREE_CALL, ,, true, ), ;, return, call, ;, }, private, boolean, isGoogDefineClass, (, Node, value, ), {, if, (]
[., FREE_CALL, ,, true, ), ;, return, call, ;, }, private, boolean, isGoogDefineClass, (, Node, value, ), {, if, (]
[,, true, ), ;, return, call, ;, }, private, boolean, isGoogDefineClass, (, Node, value, ), {, if, (, value, !=]
[), ;, return, call, ;, }, private, boolean, isGoogDefineClass, (, Node, value, ), {, if, (, value, !=, null, &&]
[), ;, return, call, ;, }, private, boolean, isGoogDefineClass, (, Node, value, ), {, if, (, value, !=, null, &&]
[Node, value, ), {, if, (, value, !=, null, &&, value, ., isCall, (, ), ), {, String, targetName, =]
[Node, value, ), {, if, (, value, !=, null, &&, value, ., isCall, (, ), ), {, String, targetName, =]
[Node, value, ), {, if, (, value, !=, null, &&, value, ., isCall, (, ), ), {, String, targetName, =]
[., isCall, (, ), ), {, String, targetName, =, value, ., getFirstChild, (, ), ., getQualifiedName, (, ), ;, return]
[isCall, (, ), ), {, String, targetName, =, value, ., getFirstChild, (, ), ., getQualifiedName, (, ), ;, return, (]
[isCall, (, ), ), {, String, targetName, =, value, ., getFirstChild, (, ), ., getQualifiedName, (, ), ;, return, (]
[isCall, (, ), ), {, String, targetName, =, value, ., getFirstChild, (, ), ., getQualifiedName, (, ), ;, return, (]
[{, String, targetName, =, value, ., getFirstChild, (, ), ., getQualifiedName, (, ), ;, return, (, "goog.defineClass", ., equals, (]
[=, value, ., getFirstChild, (, ), ., getQualifiedName, (, ), ;, return, (, "goog.defineClass", ., equals, (, targetName, ), ||]
[=, value, ., getFirstChild, (, ), ., getQualifiedName, (, ), ;, return, (, "goog.defineClass", ., equals, (, targetName, ), ||]
[(, ), ., getQualifiedName, (, ), ;, return, (, "goog.defineClass", ., equals, (, targetName, ), ||, "goog.labs.classdef.defineClass", ., equals, (]
[;, return, (, "goog.defineClass", ., equals, (, targetName, ), ||, "goog.labs.classdef.defineClass", ., equals, (, targetName, ), ), ;, }, return]
