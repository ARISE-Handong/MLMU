[util, ., List, ;, public, class, OutlierList, {, private, List, outliers, ;, private, Outlier, averagedOutlier, ;, private, boolean, multiple, =]
[List, outliers, ;, private, Outlier, averagedOutlier, ;, private, boolean, multiple, =, false, ;, public, OutlierList, (, Outlier, outlier, ), {]
[List, outliers, ;, private, Outlier, averagedOutlier, ;, private, boolean, multiple, =, false, ;, public, OutlierList, (, Outlier, outlier, ), {]
[Outlier, averagedOutlier, ;, private, boolean, multiple, =, false, ;, public, OutlierList, (, Outlier, outlier, ), {, this, ., outliers, =]
[multiple, =, false, ;, public, OutlierList, (, Outlier, outlier, ), {, this, ., outliers, =, new, ArrayList, (, ), ;]
[false, ;, public, OutlierList, (, Outlier, outlier, ), {, this, ., outliers, =, new, ArrayList, (, ), ;, setAveragedOutlier, (]
[new, ArrayList, (, ), ;, setAveragedOutlier, (, outlier, ), ;, }, public, boolean, add, (, Outlier, outlier, ), {, return]
[new, ArrayList, (, ), ;, setAveragedOutlier, (, outlier, ), ;, }, public, boolean, add, (, Outlier, outlier, ), {, return]
[new, ArrayList, (, ), ;, setAveragedOutlier, (, outlier, ), ;, }, public, boolean, add, (, Outlier, outlier, ), {, return]
[(, outlier, ), ;, }, public, boolean, add, (, Outlier, outlier, ), {, return, this, ., outliers, ., add, (]
[), {, return, this, ., outliers, ., add, (, outlier, ), ;, }, public, int, getItemCount, (, ), {, return]
[), {, return, this, ., outliers, ., add, (, outlier, ), ;, }, public, int, getItemCount, (, ), {, return]
[), {, return, this, ., outliers, ., add, (, outlier, ), ;, }, public, int, getItemCount, (, ), {, return]
[(, ), {, return, this, ., outliers, ., size, (, ), ;, }, public, Outlier, getAveragedOutlier, (, ), {, return]
[(, ), {, return, this, ., outliers, ., size, (, ), ;, }, public, Outlier, getAveragedOutlier, (, ), {, return]
[public, Outlier, getAveragedOutlier, (, ), {, return, this, ., averagedOutlier, ;, }, public, void, setAveragedOutlier, (, Outlier, averagedOutlier, ), {]
[public, Outlier, getAveragedOutlier, (, ), {, return, this, ., averagedOutlier, ;, }, public, void, setAveragedOutlier, (, Outlier, averagedOutlier, ), {]
[), {, return, this, ., averagedOutlier, ;, }, public, void, setAveragedOutlier, (, Outlier, averagedOutlier, ), {, this, ., averagedOutlier, =]
[setAveragedOutlier, (, Outlier, averagedOutlier, ), {, this, ., averagedOutlier, =, averagedOutlier, ;, }, public, boolean, isMultiple, (, ), {, return]
[setAveragedOutlier, (, Outlier, averagedOutlier, ), {, this, ., averagedOutlier, =, averagedOutlier, ;, }, public, boolean, isMultiple, (, ), {, return]
[public, boolean, isMultiple, (, ), {, return, this, ., multiple, ;, }, public, void, setMultiple, (, boolean, multiple, ), {]
[public, boolean, isMultiple, (, ), {, return, this, ., multiple, ;, }, public, void, setMultiple, (, boolean, multiple, ), {]
[), {, return, this, ., multiple, ;, }, public, void, setMultiple, (, boolean, multiple, ), {, this, ., multiple, =]
[multiple, ), {, this, ., multiple, =, multiple, ;, }, public, boolean, isOverlapped, (, Outlier, other, ), {, if, (]
[multiple, ), {, this, ., multiple, =, multiple, ;, }, public, boolean, isOverlapped, (, Outlier, other, ), {, if, (]
[{, this, ., multiple, =, multiple, ;, }, public, boolean, isOverlapped, (, Outlier, other, ), {, if, (, other, ==]
[=, multiple, ;, }, public, boolean, isOverlapped, (, Outlier, other, ), {, if, (, other, ==, null, ), {, return]
[isOverlapped, (, Outlier, other, ), {, if, (, other, ==, null, ), {, return, false, ;, }, boolean, result, =]
[isOverlapped, (, Outlier, other, ), {, if, (, other, ==, null, ), {, return, false, ;, }, boolean, result, =]
[), {, if, (, other, ==, null, ), {, return, false, ;, }, boolean, result, =, other, ., overlaps, (]
[null, ), {, return, false, ;, }, boolean, result, =, other, ., overlaps, (, getAveragedOutlier, (, ), ), ;, return]
[overlaps, (, getAveragedOutlier, (, ), ), ;, return, result, ;, }, public, void, updateAveragedOutlier, (, ), {, double, totalXCoords, =]
[), ;, return, result, ;, }, public, void, updateAveragedOutlier, (, ), {, double, totalXCoords, =, 0.0, ;, double, totalYCoords, =]
[}, public, void, updateAveragedOutlier, (, ), {, double, totalXCoords, =, 0.0, ;, double, totalYCoords, =, 0.0, ;, int, size, =]
[=, 0.0, ;, double, totalYCoords, =, 0.0, ;, int, size, =, getItemCount, (, ), ;, for, (, Iterator, iterator, =]
[=, 0.0, ;, double, totalYCoords, =, 0.0, ;, int, size, =, getItemCount, (, ), ;, for, (, Iterator, iterator, =]
[=, 0.0, ;, double, totalYCoords, =, 0.0, ;, int, size, =, getItemCount, (, ), ;, for, (, Iterator, iterator, =]
[int, size, =, getItemCount, (, ), ;, for, (, Iterator, iterator, =, this, ., outliers, ., iterator, (, ), ;]
[int, size, =, getItemCount, (, ), ;, for, (, Iterator, iterator, =, this, ., outliers, ., iterator, (, ), ;]
[=, this, ., outliers, ., iterator, (, ), ;, iterator, ., hasNext, (, ), ;, ), {, Outlier, o, =]
[outliers, ., iterator, (, ), ;, iterator, ., hasNext, (, ), ;, ), {, Outlier, o, =, (, Outlier, )]
[outliers, ., iterator, (, ), ;, iterator, ., hasNext, (, ), ;, ), {, Outlier, o, =, (, Outlier, )]
[iterator, ., hasNext, (, ), ;, ), {, Outlier, o, =, (, Outlier, ), iterator, ., next, (, ), ;]
[hasNext, (, ), ;, ), {, Outlier, o, =, (, Outlier, ), iterator, ., next, (, ), ;, totalXCoords, +=]
[hasNext, (, ), ;, ), {, Outlier, o, =, (, Outlier, ), iterator, ., next, (, ), ;, totalXCoords, +=]
[Outlier, o, =, (, Outlier, ), iterator, ., next, (, ), ;, totalXCoords, +=, o, ., getX, (, ), ;]
[=, (, Outlier, ), iterator, ., next, (, ), ;, totalXCoords, +=, o, ., getX, (, ), ;, totalYCoords, +=]
[=, (, Outlier, ), iterator, ., next, (, ), ;, totalXCoords, +=, o, ., getX, (, ), ;, totalYCoords, +=]
[(, ), ;, totalXCoords, +=, o, ., getX, (, ), ;, totalYCoords, +=, o, ., getY, (, ), ;, }]
[(, ), ;, totalXCoords, +=, o, ., getX, (, ), ;, totalYCoords, +=, o, ., getY, (, ), ;, }]
[(, ), ;, totalXCoords, +=, o, ., getX, (, ), ;, totalYCoords, +=, o, ., getY, (, ), ;, }]
[;, totalYCoords, +=, o, ., getY, (, ), ;, }, getAveragedOutlier, (, ), ., getPoint, (, ), ., setLocation, (]
[getY, (, ), ;, }, getAveragedOutlier, (, ), ., getPoint, (, ), ., setLocation, (, new, Point2D, ., Double, (]
[getY, (, ), ;, }, getAveragedOutlier, (, ), ., getPoint, (, ), ., setLocation, (, new, Point2D, ., Double, (]
[), ;, }, getAveragedOutlier, (, ), ., getPoint, (, ), ., setLocation, (, new, Point2D, ., Double, (, totalXCoords, /]
[}, getAveragedOutlier, (, ), ., getPoint, (, ), ., setLocation, (, new, Point2D, ., Double, (, totalXCoords, /, size, ,]
[}, getAveragedOutlier, (, ), ., getPoint, (, ), ., setLocation, (, new, Point2D, ., Double, (, totalXCoords, /, size, ,]
[(, ), ., getPoint, (, ), ., setLocation, (, new, Point2D, ., Double, (, totalXCoords, /, size, ,, totalYCoords, /]
