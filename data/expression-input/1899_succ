[;, public, static, final, String, CLASS_CONTEXT, =, "ClassContext", ;, private, static, String, classLoaderSource, =, THREAD_CONTEXT, ;, private, static, ClassLoader, classLoader]
[;, private, static, String, classLoaderSource, =, THREAD_CONTEXT, ;, private, static, ClassLoader, classLoader, ;, private, ObjectUtilities, (, ), {, }, public]
[;, private, static, ClassLoader, classLoader, ;, private, ObjectUtilities, (, ), {, }, public, static, String, getClassLoaderSource, (, ), {, return]
[;, }, public, static, void, setClassLoaderSource, (, final, String, classLoaderSource, ), {, ObjectUtilities, ., classLoaderSource, =, classLoaderSource, ;, }, public]
[=, classLoaderSource, ;, }, public, static, boolean, equal, (, final, Object, o1, ,, final, Object, o2, ), {, if, (]
[., classLoaderSource, =, classLoaderSource, ;, }, public, static, boolean, equal, (, final, Object, o1, ,, final, Object, o2, ), {]
[;, }, public, static, boolean, equal, (, final, Object, o1, ,, final, Object, o2, ), {, if, (, o1, ==]
[), {, return, true, ;, }, if, (, o1, !=, null, ), {, return, o1, ., equals, (, o2, )]
[==, o2, ), {, return, true, ;, }, if, (, o1, !=, null, ), {, return, o1, ., equals, (]
[), {, return, true, ;, }, if, (, o1, !=, null, ), {, return, o1, ., equals, (, o2, )]
[;, }, if, (, o1, !=, null, ), {, return, o1, ., equals, (, o2, ), ;, }, else, {]
[), {, return, o1, ., equals, (, o2, ), ;, }, else, {, return, false, ;, }, }, public, static]
[!=, null, ), {, return, o1, ., equals, (, o2, ), ;, }, else, {, return, false, ;, }, }]
[), {, return, o1, ., equals, (, o2, ), ;, }, else, {, return, false, ;, }, }, public, static]
[;, }, else, {, return, false, ;, }, }, public, static, int, hashCode, (, final, Object, object, ), {, int]
[., equals, (, o2, ), ;, }, else, {, return, false, ;, }, }, public, static, int, hashCode, (, final]
[), ;, }, else, {, return, false, ;, }, }, public, static, int, hashCode, (, final, Object, object, ), {]
[;, }, }, public, static, int, hashCode, (, final, Object, object, ), {, int, result, =, 0, ;, if, (]
[;, if, (, object, !=, null, ), {, result, =, object, ., hashCode, (, ), ;, }, return, result, ;]
[), {, result, =, object, ., hashCode, (, ), ;, }, return, result, ;, }, public, static, Object, clone, (]
[!=, null, ), {, result, =, object, ., hashCode, (, ), ;, }, return, result, ;, }, public, static, Object]
[), {, result, =, object, ., hashCode, (, ), ;, }, return, result, ;, }, public, static, Object, clone, (]
[=, object, ., hashCode, (, ), ;, }, return, result, ;, }, public, static, Object, clone, (, final, Object, object]
[;, }, return, result, ;, }, public, static, Object, clone, (, final, Object, object, ), throws, CloneNotSupportedException, {, if, (]
[., hashCode, (, ), ;, }, return, result, ;, }, public, static, Object, clone, (, final, Object, object, ), throws]
[;, }, public, static, Object, clone, (, final, Object, object, ), throws, CloneNotSupportedException, {, if, (, object, ==, null, )]
[), {, throw, new, IllegalArgumentException, (, "Null 'object' argument.", ), ;, }, if, (, object, instanceof, PublicCloneable, ), {, final, PublicCloneable, pc]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'object' argument.", ), ;, }, if, (, object, instanceof, PublicCloneable, ), {, final]
[), {, throw, new, IllegalArgumentException, (, "Null 'object' argument.", ), ;, }, if, (, object, instanceof, PublicCloneable, ), {, final, PublicCloneable, pc]
[;, }, if, (, object, instanceof, PublicCloneable, ), {, final, PublicCloneable, pc, =, (, PublicCloneable, ), object, ;, return, pc]
[), ;, }, if, (, object, instanceof, PublicCloneable, ), {, final, PublicCloneable, pc, =, (, PublicCloneable, ), object, ;, return]
[), {, final, PublicCloneable, pc, =, (, PublicCloneable, ), object, ;, return, pc, ., clone, (, ), ;, }, else]
[instanceof, PublicCloneable, ), {, final, PublicCloneable, pc, =, (, PublicCloneable, ), object, ;, return, pc, ., clone, (, ), ;]
[;, return, pc, ., clone, (, ), ;, }, else, {, try, {, final, Method, method, =, object, ., getClass]
[;, return, pc, ., clone, (, ), ;, }, else, {, try, {, final, Method, method, =, object, ., getClass]
[;, }, else, {, try, {, final, Method, method, =, object, ., getClass, (, ), ., getMethod, (, "clone", ,]
[., clone, (, ), ;, }, else, {, try, {, final, Method, method, =, object, ., getClass, (, ), .]
[;, if, (, Modifier, ., isPublic, (, method, ., getModifiers, (, ), ), ), {, return, method, ., invoke, (]
[., getMethod, (, "clone", ,, (, Class, [, ], ), null, ), ;, if, (, Modifier, ., isPublic, (, method]
[., getClass, (, ), ., getMethod, (, "clone", ,, (, Class, [, ], ), null, ), ;, if, (, Modifier]
[,, (, Class, [, ], ), null, ), ;, if, (, Modifier, ., isPublic, (, method, ., getModifiers, (, )]
[), ;, if, (, Modifier, ., isPublic, (, method, ., getModifiers, (, ), ), ), {, return, method, ., invoke]
[), ;, if, (, Modifier, ., isPublic, (, method, ., getModifiers, (, ), ), ), {, return, method, ., invoke]
[), {, return, method, ., invoke, (, object, ,, (, Object, [, ], ), null, ), ;, }, }, catch]
[., isPublic, (, method, ., getModifiers, (, ), ), ), {, return, method, ., invoke, (, object, ,, (, Object]
[), ), {, return, method, ., invoke, (, object, ,, (, Object, [, ], ), null, ), ;, }, }]
[., getModifiers, (, ), ), ), {, return, method, ., invoke, (, object, ,, (, Object, [, ], ), null]
[;, }, }, catch, (, NoSuchMethodException, e, ), {, e, ., printStackTrace, (, ), ;, }, catch, (, IllegalAccessException, e]
[., invoke, (, object, ,, (, Object, [, ], ), null, ), ;, }, }, catch, (, NoSuchMethodException, e, )]
[,, (, Object, [, ], ), null, ), ;, }, }, catch, (, NoSuchMethodException, e, ), {, e, ., printStackTrace]
[), ;, }, }, catch, (, NoSuchMethodException, e, ), {, e, ., printStackTrace, (, ), ;, }, catch, (, IllegalAccessException]
[), ;, }, }, catch, (, NoSuchMethodException, e, ), {, e, ., printStackTrace, (, ), ;, }, catch, (, IllegalAccessException]
[;, }, catch, (, IllegalAccessException, e, ), {, e, ., printStackTrace, (, ), ;, }, catch, (, InvocationTargetException, e, )]
[., printStackTrace, (, ), ;, }, catch, (, IllegalAccessException, e, ), {, e, ., printStackTrace, (, ), ;, }, catch]
[;, }, catch, (, InvocationTargetException, e, ), {, e, ., printStackTrace, (, ), ;, }, }, throw, new, CloneNotSupportedException, (]
[., printStackTrace, (, ), ;, }, catch, (, InvocationTargetException, e, ), {, e, ., printStackTrace, (, ), ;, }, }]
[;, }, }, throw, new, CloneNotSupportedException, (, "Failed to clone.", ), ;, }, public, static, Collection, deepClone, (, final, Collection, collection, )]
[., printStackTrace, (, ), ;, }, }, throw, new, CloneNotSupportedException, (, "Failed to clone.", ), ;, }, public, static, Collection, deepClone, (]
[;, }, public, static, Collection, deepClone, (, final, Collection, collection, ), throws, CloneNotSupportedException, {, if, (, collection, ==, null, )]
[), ;, }, public, static, Collection, deepClone, (, final, Collection, collection, ), throws, CloneNotSupportedException, {, if, (, collection, ==, null]
[), {, throw, new, IllegalArgumentException, (, "Null 'collection' argument.", ), ;, }, final, Collection, result, =, (, Collection, ), ObjectUtilities, ., clone]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'collection' argument.", ), ;, }, final, Collection, result, =, (, Collection, ), ObjectUtilities]
[), {, throw, new, IllegalArgumentException, (, "Null 'collection' argument.", ), ;, }, final, Collection, result, =, (, Collection, ), ObjectUtilities, ., clone]
[;, }, final, Collection, result, =, (, Collection, ), ObjectUtilities, ., clone, (, collection, ), ;, result, ., clear, (]
[), ;, }, final, Collection, result, =, (, Collection, ), ObjectUtilities, ., clone, (, collection, ), ;, result, ., clear]
[;, result, ., clear, (, ), ;, final, Iterator, iterator, =, collection, ., iterator, (, ), ;, while, (, iterator]
[;, result, ., clear, (, ), ;, final, Iterator, iterator, =, collection, ., iterator, (, ), ;, while, (, iterator]
[., clone, (, collection, ), ;, result, ., clear, (, ), ;, final, Iterator, iterator, =, collection, ., iterator, (]
[), ;, result, ., clear, (, ), ;, final, Iterator, iterator, =, collection, ., iterator, (, ), ;, while, (]
[;, final, Iterator, iterator, =, collection, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {]
[., clear, (, ), ;, final, Iterator, iterator, =, collection, ., iterator, (, ), ;, while, (, iterator, ., hasNext]
[;, while, (, iterator, ., hasNext, (, ), ), {, final, Object, item, =, iterator, ., next, (, ), ;]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, final, Object, item, =, iterator, .]
[), {, final, Object, item, =, iterator, ., next, (, ), ;, if, (, item, !=, null, ), {, result]
[., hasNext, (, ), ), {, final, Object, item, =, iterator, ., next, (, ), ;, if, (, item, !=]
[;, if, (, item, !=, null, ), {, result, ., add, (, clone, (, item, ), ), ;, }, else]
[., next, (, ), ;, if, (, item, !=, null, ), {, result, ., add, (, clone, (, item, )]
[), {, result, ., add, (, clone, (, item, ), ), ;, }, else, {, result, ., add, (, null]
[!=, null, ), {, result, ., add, (, clone, (, item, ), ), ;, }, else, {, result, ., add]
[), {, result, ., add, (, clone, (, item, ), ), ;, }, else, {, result, ., add, (, null]
[;, }, else, {, result, ., add, (, null, ), ;, }, }, return, result, ;, }, public, synchronized, static]
[., add, (, clone, (, item, ), ), ;, }, else, {, result, ., add, (, null, ), ;, }]
[), ;, }, else, {, result, ., add, (, null, ), ;, }, }, return, result, ;, }, public, synchronized]
[), ), ;, }, else, {, result, ., add, (, null, ), ;, }, }, return, result, ;, }, public]
[;, }, }, return, result, ;, }, public, synchronized, static, void, setClassLoader, (, final, ClassLoader, classLoader, ), {, ObjectUtilities, .]
[., add, (, null, ), ;, }, }, return, result, ;, }, public, synchronized, static, void, setClassLoader, (, final, ClassLoader]
[), ;, }, }, return, result, ;, }, public, synchronized, static, void, setClassLoader, (, final, ClassLoader, classLoader, ), {, ObjectUtilities]
[;, }, public, synchronized, static, void, setClassLoader, (, final, ClassLoader, classLoader, ), {, ObjectUtilities, ., classLoader, =, classLoader, ;, }]
[=, classLoader, ;, }, public, static, ClassLoader, getClassLoader, (, ), {, return, classLoader, ;, }, public, synchronized, static, ClassLoader, getClassLoader]
[., classLoader, =, classLoader, ;, }, public, static, ClassLoader, getClassLoader, (, ), {, return, classLoader, ;, }, public, synchronized, static]
[;, }, public, static, ClassLoader, getClassLoader, (, ), {, return, classLoader, ;, }, public, synchronized, static, ClassLoader, getClassLoader, (, final]
[;, }, public, synchronized, static, ClassLoader, getClassLoader, (, final, Class, c, ), {, if, (, classLoader, !=, null, ), {]
[), {, return, classLoader, ;, }, if, (, "ThreadContext", ., equals, (, classLoaderSource, ), ), {, final, ClassLoader, threadLoader, =]
[!=, null, ), {, return, classLoader, ;, }, if, (, "ThreadContext", ., equals, (, classLoaderSource, ), ), {, final, ClassLoader]
[), {, return, classLoader, ;, }, if, (, "ThreadContext", ., equals, (, classLoaderSource, ), ), {, final, ClassLoader, threadLoader, =]
[;, }, if, (, "ThreadContext", ., equals, (, classLoaderSource, ), ), {, final, ClassLoader, threadLoader, =, Thread, ., currentThread, (]
[), {, final, ClassLoader, threadLoader, =, Thread, ., currentThread, (, ), ., getContextClassLoader, (, ), ;, if, (, threadLoader, !=]
[., equals, (, classLoaderSource, ), ), {, final, ClassLoader, threadLoader, =, Thread, ., currentThread, (, ), ., getContextClassLoader, (, )]
[), ), {, final, ClassLoader, threadLoader, =, Thread, ., currentThread, (, ), ., getContextClassLoader, (, ), ;, if, (, threadLoader]
[;, if, (, threadLoader, !=, null, ), {, return, threadLoader, ;, }, }, final, ClassLoader, applicationCL, =, c, ., getClassLoader]
[., getContextClassLoader, (, ), ;, if, (, threadLoader, !=, null, ), {, return, threadLoader, ;, }, }, final, ClassLoader, applicationCL]
[., currentThread, (, ), ., getContextClassLoader, (, ), ;, if, (, threadLoader, !=, null, ), {, return, threadLoader, ;, }]
[), {, return, threadLoader, ;, }, }, final, ClassLoader, applicationCL, =, c, ., getClassLoader, (, ), ;, if, (, applicationCL]
[!=, null, ), {, return, threadLoader, ;, }, }, final, ClassLoader, applicationCL, =, c, ., getClassLoader, (, ), ;, if]
[), {, return, threadLoader, ;, }, }, final, ClassLoader, applicationCL, =, c, ., getClassLoader, (, ), ;, if, (, applicationCL]
[;, }, }, final, ClassLoader, applicationCL, =, c, ., getClassLoader, (, ), ;, if, (, applicationCL, ==, null, ), {]
[;, if, (, applicationCL, ==, null, ), {, return, ClassLoader, ., getSystemClassLoader, (, ), ;, }, else, {, return, applicationCL]
[., getClassLoader, (, ), ;, if, (, applicationCL, ==, null, ), {, return, ClassLoader, ., getSystemClassLoader, (, ), ;, }]
[), {, return, ClassLoader, ., getSystemClassLoader, (, ), ;, }, else, {, return, applicationCL, ;, }, }, public, static, URL]
[==, null, ), {, return, ClassLoader, ., getSystemClassLoader, (, ), ;, }, else, {, return, applicationCL, ;, }, }, public]
[), {, return, ClassLoader, ., getSystemClassLoader, (, ), ;, }, else, {, return, applicationCL, ;, }, }, public, static, URL]
[;, }, else, {, return, applicationCL, ;, }, }, public, static, URL, getResource, (, final, String, name, ,, final, Class]
[., getSystemClassLoader, (, ), ;, }, else, {, return, applicationCL, ;, }, }, public, static, URL, getResource, (, final, String]
[;, }, }, public, static, URL, getResource, (, final, String, name, ,, final, Class, c, ), {, final, ClassLoader, cl]
[;, if, (, cl, ==, null, ), {, return, null, ;, }, return, cl, ., getResource, (, name, ), ;]
[), ;, if, (, cl, ==, null, ), {, return, null, ;, }, return, cl, ., getResource, (, name, )]
[), {, return, null, ;, }, return, cl, ., getResource, (, name, ), ;, }, public, static, URL, getResourceRelative, (]
[==, null, ), {, return, null, ;, }, return, cl, ., getResource, (, name, ), ;, }, public, static, URL]
[), {, return, null, ;, }, return, cl, ., getResource, (, name, ), ;, }, public, static, URL, getResourceRelative, (]
[;, }, return, cl, ., getResource, (, name, ), ;, }, public, static, URL, getResourceRelative, (, final, String, name, ,]
[;, }, public, static, URL, getResourceRelative, (, final, String, name, ,, final, Class, c, ), {, final, ClassLoader, cl, =]
[., getResource, (, name, ), ;, }, public, static, URL, getResourceRelative, (, final, String, name, ,, final, Class, c, )]
[), ;, }, public, static, URL, getResourceRelative, (, final, String, name, ,, final, Class, c, ), {, final, ClassLoader, cl]
[;, final, String, cname, =, convertName, (, name, ,, c, ), ;, if, (, cl, ==, null, ), {, return]
[), ;, final, String, cname, =, convertName, (, name, ,, c, ), ;, if, (, cl, ==, null, ), {]
[;, if, (, cl, ==, null, ), {, return, null, ;, }, return, cl, ., getResource, (, cname, ), ;]
[,, c, ), ;, if, (, cl, ==, null, ), {, return, null, ;, }, return, cl, ., getResource, (]
[), ;, if, (, cl, ==, null, ), {, return, null, ;, }, return, cl, ., getResource, (, cname, )]
[), {, return, null, ;, }, return, cl, ., getResource, (, cname, ), ;, }, private, static, String, convertName, (]
[==, null, ), {, return, null, ;, }, return, cl, ., getResource, (, cname, ), ;, }, private, static, String]
[), {, return, null, ;, }, return, cl, ., getResource, (, cname, ), ;, }, private, static, String, convertName, (]
[;, }, return, cl, ., getResource, (, cname, ), ;, }, private, static, String, convertName, (, final, String, name, ,]
[;, }, private, static, String, convertName, (, final, String, name, ,, Class, c, ), {, if, (, name, ., startsWith]
[., getResource, (, cname, ), ;, }, private, static, String, convertName, (, final, String, name, ,, Class, c, ), {]
[), ;, }, private, static, String, convertName, (, final, String, name, ,, Class, c, ), {, if, (, name, .]
[), {, return, name, ., substring, (, 1, ), ;, }, while, (, c, ., isArray, (, ), ), {]
[., startsWith, (, "/", ), ), {, return, name, ., substring, (, 1, ), ;, }, while, (, c, .]
[), ), {, return, name, ., substring, (, 1, ), ;, }, while, (, c, ., isArray, (, ), )]
[;, }, while, (, c, ., isArray, (, ), ), {, c, =, c, ., getComponentType, (, ), ;, }]
[., substring, (, 1, ), ;, }, while, (, c, ., isArray, (, ), ), {, c, =, c, .]
[), ;, }, while, (, c, ., isArray, (, ), ), {, c, =, c, ., getComponentType, (, ), ;]
[), {, c, =, c, ., getComponentType, (, ), ;, }, final, String, baseName, =, c, ., getName, (, )]
[., isArray, (, ), ), {, c, =, c, ., getComponentType, (, ), ;, }, final, String, baseName, =, c]
[=, c, ., getComponentType, (, ), ;, }, final, String, baseName, =, c, ., getName, (, ), ;, final, int]
[;, }, final, String, baseName, =, c, ., getName, (, ), ;, final, int, index, =, baseName, ., lastIndexOf, (]
[., getComponentType, (, ), ;, }, final, String, baseName, =, c, ., getName, (, ), ;, final, int, index, =]
[;, final, int, index, =, baseName, ., lastIndexOf, (, '.', ), ;, if, (, index, ==, -, 1, ), {]
[., getName, (, ), ;, final, int, index, =, baseName, ., lastIndexOf, (, '.', ), ;, if, (, index, ==]
[;, if, (, index, ==, -, 1, ), {, return, name, ;, }, final, String, pkgName, =, baseName, ., substring]
[., lastIndexOf, (, '.', ), ;, if, (, index, ==, -, 1, ), {, return, name, ;, }, final, String]
[), ;, if, (, index, ==, -, 1, ), {, return, name, ;, }, final, String, pkgName, =, baseName, .]
[), {, return, name, ;, }, final, String, pkgName, =, baseName, ., substring, (, 0, ,, index, ), ;, return]
[==, -, 1, ), {, return, name, ;, }, final, String, pkgName, =, baseName, ., substring, (, 0, ,, index]
[), {, return, name, ;, }, final, String, pkgName, =, baseName, ., substring, (, 0, ,, index, ), ;, return]
[), {, return, name, ;, }, final, String, pkgName, =, baseName, ., substring, (, 0, ,, index, ), ;, return]
[;, }, final, String, pkgName, =, baseName, ., substring, (, 0, ,, index, ), ;, return, pkgName, ., replace, (]
[;, return, pkgName, ., replace, (, '.', ,, '/', ), +, "/", +, name, ;, }, public, static, InputStream, getResourceAsStream]
[., substring, (, 0, ,, index, ), ;, return, pkgName, ., replace, (, '.', ,, '/', ), +, "/", +]
[,, index, ), ;, return, pkgName, ., replace, (, '.', ,, '/', ), +, "/", +, name, ;, }, public]
[), ;, return, pkgName, ., replace, (, '.', ,, '/', ), +, "/", +, name, ;, }, public, static, InputStream]
[;, }, public, static, InputStream, getResourceAsStream, (, final, String, name, ,, final, Class, context, ), {, final, URL, url, =]
[+, name, ;, }, public, static, InputStream, getResourceAsStream, (, final, String, name, ,, final, Class, context, ), {, final, URL]
[+, "/", +, name, ;, }, public, static, InputStream, getResourceAsStream, (, final, String, name, ,, final, Class, context, ), {]
[., replace, (, '.', ,, '/', ), +, "/", +, name, ;, }, public, static, InputStream, getResourceAsStream, (, final, String]
[,, '/', ), +, "/", +, name, ;, }, public, static, InputStream, getResourceAsStream, (, final, String, name, ,, final, Class]
[), +, "/", +, name, ;, }, public, static, InputStream, getResourceAsStream, (, final, String, name, ,, final, Class, context, )]
[+, name, ;, }, public, static, InputStream, getResourceAsStream, (, final, String, name, ,, final, Class, context, ), {, final, URL]
[;, }, public, static, InputStream, getResourceAsStream, (, final, String, name, ,, final, Class, context, ), {, final, URL, url, =]
[;, if, (, url, ==, null, ), {, return, null, ;, }, try, {, return, url, ., openStream, (, )]
[,, context, ), ;, if, (, url, ==, null, ), {, return, null, ;, }, try, {, return, url, .]
[), ;, if, (, url, ==, null, ), {, return, null, ;, }, try, {, return, url, ., openStream, (]
[), {, return, null, ;, }, try, {, return, url, ., openStream, (, ), ;, }, catch, (, IOException, e]
[==, null, ), {, return, null, ;, }, try, {, return, url, ., openStream, (, ), ;, }, catch, (]
[), {, return, null, ;, }, try, {, return, url, ., openStream, (, ), ;, }, catch, (, IOException, e]
[;, }, try, {, return, url, ., openStream, (, ), ;, }, catch, (, IOException, e, ), {, return, null]
[;, }, catch, (, IOException, e, ), {, return, null, ;, }, }, public, static, InputStream, getResourceRelativeAsStream, (, final, String]
[., openStream, (, ), ;, }, catch, (, IOException, e, ), {, return, null, ;, }, }, public, static, InputStream]
[;, }, }, public, static, InputStream, getResourceRelativeAsStream, (, final, String, name, ,, final, Class, context, ), {, final, URL, url]
[;, if, (, url, ==, null, ), {, return, null, ;, }, try, {, return, url, ., openStream, (, )]
[,, context, ), ;, if, (, url, ==, null, ), {, return, null, ;, }, try, {, return, url, .]
[), ;, if, (, url, ==, null, ), {, return, null, ;, }, try, {, return, url, ., openStream, (]
[), {, return, null, ;, }, try, {, return, url, ., openStream, (, ), ;, }, catch, (, IOException, e]
[==, null, ), {, return, null, ;, }, try, {, return, url, ., openStream, (, ), ;, }, catch, (]
[), {, return, null, ;, }, try, {, return, url, ., openStream, (, ), ;, }, catch, (, IOException, e]
[;, }, try, {, return, url, ., openStream, (, ), ;, }, catch, (, IOException, e, ), {, return, null]
[;, }, catch, (, IOException, e, ), {, return, null, ;, }, }, public, static, Object, loadAndInstantiate, (, final, String]
[., openStream, (, ), ;, }, catch, (, IOException, e, ), {, return, null, ;, }, }, public, static, Object]
[;, }, }, public, static, Object, loadAndInstantiate, (, final, String, className, ,, final, Class, source, ), {, try, {, final]
[;, final, Class, c, =, loader, ., loadClass, (, className, ), ;, return, c, ., newInstance, (, ), ;, }]
[), ;, final, Class, c, =, loader, ., loadClass, (, className, ), ;, return, c, ., newInstance, (, ), ;]
[;, return, c, ., newInstance, (, ), ;, }, catch, (, Exception, e, ), {, return, null, ;, }, }]
[., loadClass, (, className, ), ;, return, c, ., newInstance, (, ), ;, }, catch, (, Exception, e, ), {]
[), ;, return, c, ., newInstance, (, ), ;, }, catch, (, Exception, e, ), {, return, null, ;, }]
[;, }, catch, (, Exception, e, ), {, return, null, ;, }, }, public, static, Object, loadAndInstantiate, (, String, className]
[., newInstance, (, ), ;, }, catch, (, Exception, e, ), {, return, null, ;, }, }, public, static, Object]
[;, }, }, public, static, Object, loadAndInstantiate, (, String, className, ,, Class, source, ,, Class, type, ), {, try, {]
[;, Class, c, =, loader, ., loadClass, (, className, ), ;, if, (, type, ., isAssignableFrom, (, c, ), )]
[), ;, Class, c, =, loader, ., loadClass, (, className, ), ;, if, (, type, ., isAssignableFrom, (, c, )]
[;, if, (, type, ., isAssignableFrom, (, c, ), ), {, return, c, ., newInstance, (, ), ;, }, }]
[., loadClass, (, className, ), ;, if, (, type, ., isAssignableFrom, (, c, ), ), {, return, c, ., newInstance]
[), ;, if, (, type, ., isAssignableFrom, (, c, ), ), {, return, c, ., newInstance, (, ), ;, }]
[), {, return, c, ., newInstance, (, ), ;, }, }, catch, (, Exception, e, ), {, return, null, ;]
[., isAssignableFrom, (, c, ), ), {, return, c, ., newInstance, (, ), ;, }, }, catch, (, Exception, e]
[), ), {, return, c, ., newInstance, (, ), ;, }, }, catch, (, Exception, e, ), {, return, null]
[;, }, }, catch, (, Exception, e, ), {, return, null, ;, }, return, null, ;, }, public, static, boolean]
[., newInstance, (, ), ;, }, }, catch, (, Exception, e, ), {, return, null, ;, }, return, null, ;]
[;, }, return, null, ;, }, public, static, boolean, isJDK14, (, ), {, ClassLoader, loader, =, getClassLoader, (, ObjectUtilities, .]
[;, }, public, static, boolean, isJDK14, (, ), {, ClassLoader, loader, =, getClassLoader, (, ObjectUtilities, ., class, ), ;, if]
[;, if, (, loader, !=, null, ), {, try, {, loader, ., loadClass, (, "java.util.RandomAccess", ), ;, return, true, ;]
[), ;, if, (, loader, !=, null, ), {, try, {, loader, ., loadClass, (, "java.util.RandomAccess", ), ;, return, true]
[), {, try, {, loader, ., loadClass, (, "java.util.RandomAccess", ), ;, return, true, ;, }, catch, (, ClassNotFoundException, e, )]
[!=, null, ), {, try, {, loader, ., loadClass, (, "java.util.RandomAccess", ), ;, return, true, ;, }, catch, (, ClassNotFoundException]
[), {, try, {, loader, ., loadClass, (, "java.util.RandomAccess", ), ;, return, true, ;, }, catch, (, ClassNotFoundException, e, )]
[;, return, true, ;, }, catch, (, ClassNotFoundException, e, ), {, return, false, ;, }, catch, (, Exception, e, )]
[., loadClass, (, "java.util.RandomAccess", ), ;, return, true, ;, }, catch, (, ClassNotFoundException, e, ), {, return, false, ;, }]
[), ;, return, true, ;, }, catch, (, ClassNotFoundException, e, ), {, return, false, ;, }, catch, (, Exception, e]
[;, }, catch, (, ClassNotFoundException, e, ), {, return, false, ;, }, catch, (, Exception, e, ), {, }, }]
[;, }, catch, (, Exception, e, ), {, }, }, try, {, String, version, =, System, ., getProperty, (, "java.vm.specification.version"]
[;, if, (, version, ==, null, ), {, return, false, ;, }, String, [, ], versions, =, parseVersions, (, version]
[., getProperty, (, "java.vm.specification.version", ), ;, if, (, version, ==, null, ), {, return, false, ;, }, String, [, ]]
[), ;, if, (, version, ==, null, ), {, return, false, ;, }, String, [, ], versions, =, parseVersions, (]
[), {, return, false, ;, }, String, [, ], versions, =, parseVersions, (, version, ), ;, String, [, ], target]
[==, null, ), {, return, false, ;, }, String, [, ], versions, =, parseVersions, (, version, ), ;, String, []
[), {, return, false, ;, }, String, [, ], versions, =, parseVersions, (, version, ), ;, String, [, ], target]
[;, }, String, [, ], versions, =, parseVersions, (, version, ), ;, String, [, ], target, =, new, String, []
[;, String, [, ], target, =, new, String, [, ], {, "1", ,, "4", }, ;, return, (, ArrayUtilities, .]
[), ;, String, [, ], target, =, new, String, [, ], {, "1", ,, "4", }, ;, return, (, ArrayUtilities]
[;, return, (, ArrayUtilities, ., compareVersionArrays, (, versions, ,, target, ), >=, 0, ), ;, }, catch, (, Exception, e]
[;, return, (, ArrayUtilities, ., compareVersionArrays, (, versions, ,, target, ), >=, 0, ), ;, }, catch, (, Exception, e]
[,, "4", }, ;, return, (, ArrayUtilities, ., compareVersionArrays, (, versions, ,, target, ), >=, 0, ), ;, }, catch]
[}, ;, return, (, ArrayUtilities, ., compareVersionArrays, (, versions, ,, target, ), >=, 0, ), ;, }, catch, (, Exception]
[;, }, catch, (, Exception, e, ), {, return, false, ;, }, }, private, static, String, [, ], parseVersions, (]
[), ;, }, catch, (, Exception, e, ), {, return, false, ;, }, }, private, static, String, [, ], parseVersions]
[>=, 0, ), ;, }, catch, (, Exception, e, ), {, return, false, ;, }, }, private, static, String, []
[., compareVersionArrays, (, versions, ,, target, ), >=, 0, ), ;, }, catch, (, Exception, e, ), {, return, false]
[,, target, ), >=, 0, ), ;, }, catch, (, Exception, e, ), {, return, false, ;, }, }, private]
[), >=, 0, ), ;, }, catch, (, Exception, e, ), {, return, false, ;, }, }, private, static, String]
[), ;, }, catch, (, Exception, e, ), {, return, false, ;, }, }, private, static, String, [, ], parseVersions]
[;, }, }, private, static, String, [, ], parseVersions, (, String, version, ), {, if, (, version, ==, null, )]
[), {, return, new, String, [, 0, ], ;, }, ArrayList, versions, =, new, ArrayList, (, ), ;, StringTokenizer, strtok]
[==, null, ), {, return, new, String, [, 0, ], ;, }, ArrayList, versions, =, new, ArrayList, (, ), ;]
[), {, return, new, String, [, 0, ], ;, }, ArrayList, versions, =, new, ArrayList, (, ), ;, StringTokenizer, strtok]
[;, }, ArrayList, versions, =, new, ArrayList, (, ), ;, StringTokenizer, strtok, =, new, StringTokenizer, (, version, ,, ".", )]
[], ;, }, ArrayList, versions, =, new, ArrayList, (, ), ;, StringTokenizer, strtok, =, new, StringTokenizer, (, version, ,, "."]
[;, StringTokenizer, strtok, =, new, StringTokenizer, (, version, ,, ".", ), ;, while, (, strtok, ., hasMoreTokens, (, ), )]
[;, while, (, strtok, ., hasMoreTokens, (, ), ), {, versions, ., add, (, strtok, ., nextToken, (, ), )]
[,, ".", ), ;, while, (, strtok, ., hasMoreTokens, (, ), ), {, versions, ., add, (, strtok, ., nextToken]
[), ;, while, (, strtok, ., hasMoreTokens, (, ), ), {, versions, ., add, (, strtok, ., nextToken, (, )]
[), {, versions, ., add, (, strtok, ., nextToken, (, ), ), ;, }, return, (, String, [, ], )]
[., hasMoreTokens, (, ), ), {, versions, ., add, (, strtok, ., nextToken, (, ), ), ;, }, return, (]
[;, }, return, (, String, [, ], ), versions, ., toArray, (, new, String, [, versions, ., size, (, )]
[., add, (, strtok, ., nextToken, (, ), ), ;, }, return, (, String, [, ], ), versions, ., toArray]
[), ;, }, return, (, String, [, ], ), versions, ., toArray, (, new, String, [, versions, ., size, (]
[., nextToken, (, ), ), ;, }, return, (, String, [, ], ), versions, ., toArray, (, new, String, []
[;, }, }]
[;, }, }]
[., toArray, (, new, String, [, versions, ., size, (, ), ], ), ;, }, }]
[), ;, }, }]
[], ), ;, }, }]
[., size, (, ), ], ), ;, }, }]
