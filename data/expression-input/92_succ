[), {, throw, new, MockitoException, (, "Negative and zero values are not allowed here", ), ;, }, this, ., wantedCount, =, wantedNumberOfInvocations, ;, }, public, void, verify]
[<=, 0, ), {, throw, new, MockitoException, (, "Negative and zero values are not allowed here", ), ;, }, this, ., wantedCount, =, wantedNumberOfInvocations, ;, }, public]
[), {, throw, new, MockitoException, (, "Negative and zero values are not allowed here", ), ;, }, this, ., wantedCount, =, wantedNumberOfInvocations, ;, }, public, void, verify]
[;, }, this, ., wantedCount, =, wantedNumberOfInvocations, ;, }, public, void, verify, (, VerificationData, data, ), {, throw, new, MockitoException]
[), ;, }, this, ., wantedCount, =, wantedNumberOfInvocations, ;, }, public, void, verify, (, VerificationData, data, ), {, throw, new]
[=, wantedNumberOfInvocations, ;, }, public, void, verify, (, VerificationData, data, ), {, throw, new, MockitoException, (, "calls is only intended to work with InOrder", ), ;, }]
[., wantedCount, =, wantedNumberOfInvocations, ;, }, public, void, verify, (, VerificationData, data, ), {, throw, new, MockitoException, (, "calls is only intended to work with InOrder", )]
[;, }, public, void, verify, (, VerificationData, data, ), {, throw, new, MockitoException, (, "calls is only intended to work with InOrder", ), ;, }, public, void]
[;, }, public, void, verifyInOrder, (, VerificationDataInOrder, data, ), {, List, <, Invocation, >, allInvocations, =, data, ., getAllInvocations, (]
[), ;, }, public, void, verifyInOrder, (, VerificationDataInOrder, data, ), {, List, <, Invocation, >, allInvocations, =, data, ., getAllInvocations]
[;, InvocationMatcher, wanted, =, data, ., getWanted, (, ), ;, MissingInvocationInOrderChecker, missingInvocation, =, new, MissingInvocationInOrderChecker, (, ), ;, missingInvocation, .]
[., getAllInvocations, (, ), ;, InvocationMatcher, wanted, =, data, ., getWanted, (, ), ;, MissingInvocationInOrderChecker, missingInvocation, =, new, MissingInvocationInOrderChecker, (]
[;, MissingInvocationInOrderChecker, missingInvocation, =, new, MissingInvocationInOrderChecker, (, ), ;, missingInvocation, ., check, (, allInvocations, ,, wanted, ,, this, ,, data]
[., getWanted, (, ), ;, MissingInvocationInOrderChecker, missingInvocation, =, new, MissingInvocationInOrderChecker, (, ), ;, missingInvocation, ., check, (, allInvocations, ,, wanted]
[;, missingInvocation, ., check, (, allInvocations, ,, wanted, ,, this, ,, data, ., getOrderingContext, (, ), ), ;, NonGreedyNumberOfInvocationsInOrderChecker, numberOfCalls]
[;, NonGreedyNumberOfInvocationsInOrderChecker, numberOfCalls, =, new, NonGreedyNumberOfInvocationsInOrderChecker, (, ), ;, numberOfCalls, ., check, (, allInvocations, ,, wanted, ,, wantedCount, ,, data]
[., check, (, allInvocations, ,, wanted, ,, this, ,, data, ., getOrderingContext, (, ), ), ;, NonGreedyNumberOfInvocationsInOrderChecker, numberOfCalls, =, new]
[,, wanted, ,, this, ,, data, ., getOrderingContext, (, ), ), ;, NonGreedyNumberOfInvocationsInOrderChecker, numberOfCalls, =, new, NonGreedyNumberOfInvocationsInOrderChecker, (, ), ;]
[,, this, ,, data, ., getOrderingContext, (, ), ), ;, NonGreedyNumberOfInvocationsInOrderChecker, numberOfCalls, =, new, NonGreedyNumberOfInvocationsInOrderChecker, (, ), ;, numberOfCalls, .]
[,, data, ., getOrderingContext, (, ), ), ;, NonGreedyNumberOfInvocationsInOrderChecker, numberOfCalls, =, new, NonGreedyNumberOfInvocationsInOrderChecker, (, ), ;, numberOfCalls, ., check, (]
[), ;, NonGreedyNumberOfInvocationsInOrderChecker, numberOfCalls, =, new, NonGreedyNumberOfInvocationsInOrderChecker, (, ), ;, numberOfCalls, ., check, (, allInvocations, ,, wanted, ,, wantedCount, ,]
[., getOrderingContext, (, ), ), ;, NonGreedyNumberOfInvocationsInOrderChecker, numberOfCalls, =, new, NonGreedyNumberOfInvocationsInOrderChecker, (, ), ;, numberOfCalls, ., check, (, allInvocations, ,]
[;, numberOfCalls, ., check, (, allInvocations, ,, wanted, ,, wantedCount, ,, data, ., getOrderingContext, (, ), ), ;, }, @]
[;, }, @, Override, public, String, toString, (, ), {, return, "Wanted invocations count (non-greedy): ", +, wantedCount, ;, }, }]
[., check, (, allInvocations, ,, wanted, ,, wantedCount, ,, data, ., getOrderingContext, (, ), ), ;, }, @, Override, public]
[,, wanted, ,, wantedCount, ,, data, ., getOrderingContext, (, ), ), ;, }, @, Override, public, String, toString, (, )]
[,, wantedCount, ,, data, ., getOrderingContext, (, ), ), ;, }, @, Override, public, String, toString, (, ), {, return]
[,, data, ., getOrderingContext, (, ), ), ;, }, @, Override, public, String, toString, (, ), {, return, "Wanted invocations count (non-greedy): ", +]
[), ;, }, @, Override, public, String, toString, (, ), {, return, "Wanted invocations count (non-greedy): ", +, wantedCount, ;, }, }]
[., getOrderingContext, (, ), ), ;, }, @, Override, public, String, toString, (, ), {, return, "Wanted invocations count (non-greedy): ", +, wantedCount, ;]
[;, }, }]
[+, wantedCount, ;, }, }]
[;, }, }]
