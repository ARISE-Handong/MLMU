[;, public, static, ZonedChronology, getInstance, (, Chronology, base, ,, DateTimeZone, zone, ), {, if, (, base, ==, null, ), {]
[;, public, static, ZonedChronology, getInstance, (, Chronology, base, ,, DateTimeZone, zone, ), {, if, (, base, ==, null, ), {]
[), {, throw, new, IllegalArgumentException, (, "Must supply a chronology", ), ;, }, base, =, base, ., withUTC, (, ), ;, if, (]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Must supply a chronology", ), ;, }, base, =, base, ., withUTC, (, ), ;]
[), {, throw, new, IllegalArgumentException, (, "Must supply a chronology", ), ;, }, base, =, base, ., withUTC, (, ), ;, if, (]
[;, }, base, =, base, ., withUTC, (, ), ;, if, (, base, ==, null, ), {, throw, new, IllegalArgumentException]
[), ;, }, base, =, base, ., withUTC, (, ), ;, if, (, base, ==, null, ), {, throw, new]
[=, base, ., withUTC, (, ), ;, if, (, base, ==, null, ), {, throw, new, IllegalArgumentException, (, "UTC chronology must not be null", )]
[;, if, (, base, ==, null, ), {, throw, new, IllegalArgumentException, (, "UTC chronology must not be null", ), ;, }, if, (, zone, ==]
[., withUTC, (, ), ;, if, (, base, ==, null, ), {, throw, new, IllegalArgumentException, (, "UTC chronology must not be null", ), ;, }]
[), {, throw, new, IllegalArgumentException, (, "UTC chronology must not be null", ), ;, }, if, (, zone, ==, null, ), {, throw, new, IllegalArgumentException]
[==, null, ), {, throw, new, IllegalArgumentException, (, "UTC chronology must not be null", ), ;, }, if, (, zone, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "UTC chronology must not be null", ), ;, }, if, (, zone, ==, null, ), {, throw, new, IllegalArgumentException]
[;, }, if, (, zone, ==, null, ), {, throw, new, IllegalArgumentException, (, "DateTimeZone must not be null", ), ;, }, return, new, ZonedChronology]
[), ;, }, if, (, zone, ==, null, ), {, throw, new, IllegalArgumentException, (, "DateTimeZone must not be null", ), ;, }, return, new]
[), {, throw, new, IllegalArgumentException, (, "DateTimeZone must not be null", ), ;, }, return, new, ZonedChronology, (, base, ,, zone, ), ;, }]
[==, null, ), {, throw, new, IllegalArgumentException, (, "DateTimeZone must not be null", ), ;, }, return, new, ZonedChronology, (, base, ,, zone, )]
[), {, throw, new, IllegalArgumentException, (, "DateTimeZone must not be null", ), ;, }, return, new, ZonedChronology, (, base, ,, zone, ), ;, }]
[;, }, return, new, ZonedChronology, (, base, ,, zone, ), ;, }, static, boolean, useTimeArithmetic, (, DurationField, field, ), {]
[), ;, }, return, new, ZonedChronology, (, base, ,, zone, ), ;, }, static, boolean, useTimeArithmetic, (, DurationField, field, )]
[;, }, static, boolean, useTimeArithmetic, (, DurationField, field, ), {, return, field, !=, null, &&, field, ., getUnitMillis, (, )]
[,, zone, ), ;, }, static, boolean, useTimeArithmetic, (, DurationField, field, ), {, return, field, !=, null, &&, field, .]
[), ;, }, static, boolean, useTimeArithmetic, (, DurationField, field, ), {, return, field, !=, null, &&, field, ., getUnitMillis, (]
[;, }, private, ZonedChronology, (, Chronology, base, ,, DateTimeZone, zone, ), {, super, (, base, ,, zone, ), ;, }]
[&&, field, ., getUnitMillis, (, ), <, DateTimeConstants, ., MILLIS_PER_HOUR, *, 12, ;, }, private, ZonedChronology, (, Chronology, base, ,]
[!=, null, &&, field, ., getUnitMillis, (, ), <, DateTimeConstants, ., MILLIS_PER_HOUR, *, 12, ;, }, private, ZonedChronology, (, Chronology]
[&&, field, ., getUnitMillis, (, ), <, DateTimeConstants, ., MILLIS_PER_HOUR, *, 12, ;, }, private, ZonedChronology, (, Chronology, base, ,]
[;, }, private, ZonedChronology, (, Chronology, base, ,, DateTimeZone, zone, ), {, super, (, base, ,, zone, ), ;, }]
[<, DateTimeConstants, ., MILLIS_PER_HOUR, *, 12, ;, }, private, ZonedChronology, (, Chronology, base, ,, DateTimeZone, zone, ), {, super, (]
[., getUnitMillis, (, ), <, DateTimeConstants, ., MILLIS_PER_HOUR, *, 12, ;, }, private, ZonedChronology, (, Chronology, base, ,, DateTimeZone, zone]
[;, }, private, ZonedChronology, (, Chronology, base, ,, DateTimeZone, zone, ), {, super, (, base, ,, zone, ), ;, }]
[*, 12, ;, }, private, ZonedChronology, (, Chronology, base, ,, DateTimeZone, zone, ), {, super, (, base, ,, zone, )]
[., MILLIS_PER_HOUR, *, 12, ;, }, private, ZonedChronology, (, Chronology, base, ,, DateTimeZone, zone, ), {, super, (, base, ,]
[;, }, private, ZonedChronology, (, Chronology, base, ,, DateTimeZone, zone, ), {, super, (, base, ,, zone, ), ;, }]
[,, zone, ), ;, }, public, DateTimeZone, getZone, (, ), {, return, (, DateTimeZone, ), getParam, (, ), ;, }]
[), ;, }, public, DateTimeZone, getZone, (, ), {, return, (, DateTimeZone, ), getParam, (, ), ;, }, public, Chronology]
[;, }, public, Chronology, withUTC, (, ), {, return, getBase, (, ), ;, }, public, Chronology, withZone, (, DateTimeZone, zone]
[;, }, public, Chronology, withUTC, (, ), {, return, getBase, (, ), ;, }, public, Chronology, withZone, (, DateTimeZone, zone]
[;, }, public, Chronology, withZone, (, DateTimeZone, zone, ), {, if, (, zone, ==, null, ), {, zone, =, DateTimeZone]
[), {, zone, =, DateTimeZone, ., getDefault, (, ), ;, }, if, (, zone, ==, getParam, (, ), ), {]
[==, null, ), {, zone, =, DateTimeZone, ., getDefault, (, ), ;, }, if, (, zone, ==, getParam, (, )]
[), {, zone, =, DateTimeZone, ., getDefault, (, ), ;, }, if, (, zone, ==, getParam, (, ), ), {]
[=, DateTimeZone, ., getDefault, (, ), ;, }, if, (, zone, ==, getParam, (, ), ), {, return, this, ;]
[;, }, if, (, zone, ==, getParam, (, ), ), {, return, this, ;, }, if, (, zone, ==, DateTimeZone]
[., getDefault, (, ), ;, }, if, (, zone, ==, getParam, (, ), ), {, return, this, ;, }, if]
[), {, return, this, ;, }, if, (, zone, ==, DateTimeZone, ., UTC, ), {, return, getBase, (, ), ;]
[==, getParam, (, ), ), {, return, this, ;, }, if, (, zone, ==, DateTimeZone, ., UTC, ), {, return]
[), {, return, this, ;, }, if, (, zone, ==, DateTimeZone, ., UTC, ), {, return, getBase, (, ), ;]
[;, }, if, (, zone, ==, DateTimeZone, ., UTC, ), {, return, getBase, (, ), ;, }, return, new, ZonedChronology]
[), {, return, getBase, (, ), ;, }, return, new, ZonedChronology, (, getBase, (, ), ,, zone, ), ;, }]
[==, DateTimeZone, ., UTC, ), {, return, getBase, (, ), ;, }, return, new, ZonedChronology, (, getBase, (, ), ,]
[), {, return, getBase, (, ), ;, }, return, new, ZonedChronology, (, getBase, (, ), ,, zone, ), ;, }]
[., UTC, ), {, return, getBase, (, ), ;, }, return, new, ZonedChronology, (, getBase, (, ), ,, zone, )]
[;, }, return, new, ZonedChronology, (, getBase, (, ), ,, zone, ), ;, }, public, long, getDateTimeMillis, (, int, year]
[;, }, public, long, getDateTimeMillis, (, int, year, ,, int, monthOfYear, ,, int, dayOfMonth, ,, int, millisOfDay, ), throws, IllegalArgumentException]
[,, zone, ), ;, }, public, long, getDateTimeMillis, (, int, year, ,, int, monthOfYear, ,, int, dayOfMonth, ,, int, millisOfDay]
[), ;, }, public, long, getDateTimeMillis, (, int, year, ,, int, monthOfYear, ,, int, dayOfMonth, ,, int, millisOfDay, ), throws]
[;, }, public, long, getDateTimeMillis, (, int, year, ,, int, monthOfYear, ,, int, dayOfMonth, ,, int, hourOfDay, ,, int, minuteOfHour]
[), ;, }, public, long, getDateTimeMillis, (, int, year, ,, int, monthOfYear, ,, int, dayOfMonth, ,, int, hourOfDay, ,, int]
[., getDateTimeMillis, (, year, ,, monthOfYear, ,, dayOfMonth, ,, millisOfDay, ), ), ;, }, public, long, getDateTimeMillis, (, int, year]
[,, monthOfYear, ,, dayOfMonth, ,, millisOfDay, ), ), ;, }, public, long, getDateTimeMillis, (, int, year, ,, int, monthOfYear, ,]
[,, dayOfMonth, ,, millisOfDay, ), ), ;, }, public, long, getDateTimeMillis, (, int, year, ,, int, monthOfYear, ,, int, dayOfMonth]
[,, millisOfDay, ), ), ;, }, public, long, getDateTimeMillis, (, int, year, ,, int, monthOfYear, ,, int, dayOfMonth, ,, int]
[), ), ;, }, public, long, getDateTimeMillis, (, int, year, ,, int, monthOfYear, ,, int, dayOfMonth, ,, int, hourOfDay, ,]
[;, }, public, long, getDateTimeMillis, (, long, instant, ,, int, hourOfDay, ,, int, minuteOfHour, ,, int, secondOfMinute, ,, int, millisOfSecond]
[), ;, }, public, long, getDateTimeMillis, (, long, instant, ,, int, hourOfDay, ,, int, minuteOfHour, ,, int, secondOfMinute, ,, int]
[., getDateTimeMillis, (, year, ,, monthOfYear, ,, dayOfMonth, ,, hourOfDay, ,, minuteOfHour, ,, secondOfMinute, ,, millisOfSecond, ), ), ;, }]
[,, monthOfYear, ,, dayOfMonth, ,, hourOfDay, ,, minuteOfHour, ,, secondOfMinute, ,, millisOfSecond, ), ), ;, }, public, long, getDateTimeMillis, (]
[,, dayOfMonth, ,, hourOfDay, ,, minuteOfHour, ,, secondOfMinute, ,, millisOfSecond, ), ), ;, }, public, long, getDateTimeMillis, (, long, instant]
[,, hourOfDay, ,, minuteOfHour, ,, secondOfMinute, ,, millisOfSecond, ), ), ;, }, public, long, getDateTimeMillis, (, long, instant, ,, int]
[,, minuteOfHour, ,, secondOfMinute, ,, millisOfSecond, ), ), ;, }, public, long, getDateTimeMillis, (, long, instant, ,, int, hourOfDay, ,]
[,, secondOfMinute, ,, millisOfSecond, ), ), ;, }, public, long, getDateTimeMillis, (, long, instant, ,, int, hourOfDay, ,, int, minuteOfHour]
[,, millisOfSecond, ), ), ;, }, public, long, getDateTimeMillis, (, long, instant, ,, int, hourOfDay, ,, int, minuteOfHour, ,, int]
[), ), ;, }, public, long, getDateTimeMillis, (, long, instant, ,, int, hourOfDay, ,, int, minuteOfHour, ,, int, secondOfMinute, ,]
[;, }, private, long, localToUTC, (, long, localInstant, ), {, DateTimeZone, zone, =, getZone, (, ), ;, int, offset, =]
[), ;, }, private, long, localToUTC, (, long, localInstant, ), {, DateTimeZone, zone, =, getZone, (, ), ;, int, offset]
[., getDateTimeMillis, (, instant, +, getZone, (, ), ., getOffset, (, instant, ), ,, hourOfDay, ,, minuteOfHour, ,, secondOfMinute, ,]
[,, hourOfDay, ,, minuteOfHour, ,, secondOfMinute, ,, millisOfSecond, ), ), ;, }, private, long, localToUTC, (, long, localInstant, ), {]
[+, getZone, (, ), ., getOffset, (, instant, ), ,, hourOfDay, ,, minuteOfHour, ,, secondOfMinute, ,, millisOfSecond, ), ), ;]
[,, hourOfDay, ,, minuteOfHour, ,, secondOfMinute, ,, millisOfSecond, ), ), ;, }, private, long, localToUTC, (, long, localInstant, ), {]
[., getOffset, (, instant, ), ,, hourOfDay, ,, minuteOfHour, ,, secondOfMinute, ,, millisOfSecond, ), ), ;, }, private, long, localToUTC]
[), ,, hourOfDay, ,, minuteOfHour, ,, secondOfMinute, ,, millisOfSecond, ), ), ;, }, private, long, localToUTC, (, long, localInstant, )]
[,, minuteOfHour, ,, secondOfMinute, ,, millisOfSecond, ), ), ;, }, private, long, localToUTC, (, long, localInstant, ), {, DateTimeZone, zone]
[,, secondOfMinute, ,, millisOfSecond, ), ), ;, }, private, long, localToUTC, (, long, localInstant, ), {, DateTimeZone, zone, =, getZone]
[,, millisOfSecond, ), ), ;, }, private, long, localToUTC, (, long, localInstant, ), {, DateTimeZone, zone, =, getZone, (, )]
[), ), ;, }, private, long, localToUTC, (, long, localInstant, ), {, DateTimeZone, zone, =, getZone, (, ), ;, int]
[;, int, offset, =, zone, ., getOffsetFromLocal, (, localInstant, ), ;, localInstant, -=, offset, ;, if, (, offset, !=, zone]
[;, localInstant, -=, offset, ;, if, (, offset, !=, zone, ., getOffset, (, localInstant, ), ), {, throw, new, IllegalInstantException]
[., getOffsetFromLocal, (, localInstant, ), ;, localInstant, -=, offset, ;, if, (, offset, !=, zone, ., getOffset, (, localInstant, )]
[), ;, localInstant, -=, offset, ;, if, (, offset, !=, zone, ., getOffset, (, localInstant, ), ), {, throw, new]
[-=, offset, ;, if, (, offset, !=, zone, ., getOffset, (, localInstant, ), ), {, throw, new, IllegalInstantException, (, localInstant]
[;, if, (, offset, !=, zone, ., getOffset, (, localInstant, ), ), {, throw, new, IllegalInstantException, (, localInstant, ,, zone]
[), {, throw, new, IllegalInstantException, (, localInstant, ,, zone, ., getID, (, ), ), ;, }, return, localInstant, ;, }]
[!=, zone, ., getOffset, (, localInstant, ), ), {, throw, new, IllegalInstantException, (, localInstant, ,, zone, ., getID, (, )]
[), {, throw, new, IllegalInstantException, (, localInstant, ,, zone, ., getID, (, ), ), ;, }, return, localInstant, ;, }]
[., getOffset, (, localInstant, ), ), {, throw, new, IllegalInstantException, (, localInstant, ,, zone, ., getID, (, ), ), ;]
[), ), {, throw, new, IllegalInstantException, (, localInstant, ,, zone, ., getID, (, ), ), ;, }, return, localInstant, ;]
[;, }, return, localInstant, ;, }, protected, void, assemble, (, Fields, fields, ), {, HashMap, <, Object, ,, Object, >]
[,, zone, ., getID, (, ), ), ;, }, return, localInstant, ;, }, protected, void, assemble, (, Fields, fields, )]
[), ;, }, return, localInstant, ;, }, protected, void, assemble, (, Fields, fields, ), {, HashMap, <, Object, ,, Object]
[., getID, (, ), ), ;, }, return, localInstant, ;, }, protected, void, assemble, (, Fields, fields, ), {, HashMap]
[;, }, protected, void, assemble, (, Fields, fields, ), {, HashMap, <, Object, ,, Object, >, converted, =, new, HashMap]
[;, fields, ., eras, =, convertField, (, fields, ., eras, ,, converted, ), ;, fields, ., centuries, =, convertField, (]
[=, convertField, (, fields, ., eras, ,, converted, ), ;, fields, ., centuries, =, convertField, (, fields, ., centuries, ,]
[., eras, =, convertField, (, fields, ., eras, ,, converted, ), ;, fields, ., centuries, =, convertField, (, fields, .]
[;, fields, ., centuries, =, convertField, (, fields, ., centuries, ,, converted, ), ;, fields, ., years, =, convertField, (]
[,, converted, ), ;, fields, ., centuries, =, convertField, (, fields, ., centuries, ,, converted, ), ;, fields, ., years]
[., eras, ,, converted, ), ;, fields, ., centuries, =, convertField, (, fields, ., centuries, ,, converted, ), ;, fields]
[), ;, fields, ., centuries, =, convertField, (, fields, ., centuries, ,, converted, ), ;, fields, ., years, =, convertField]
[=, convertField, (, fields, ., centuries, ,, converted, ), ;, fields, ., years, =, convertField, (, fields, ., years, ,]
[., centuries, =, convertField, (, fields, ., centuries, ,, converted, ), ;, fields, ., years, =, convertField, (, fields, .]
[;, fields, ., years, =, convertField, (, fields, ., years, ,, converted, ), ;, fields, ., months, =, convertField, (]
[,, converted, ), ;, fields, ., years, =, convertField, (, fields, ., years, ,, converted, ), ;, fields, ., months]
[., centuries, ,, converted, ), ;, fields, ., years, =, convertField, (, fields, ., years, ,, converted, ), ;, fields]
[), ;, fields, ., years, =, convertField, (, fields, ., years, ,, converted, ), ;, fields, ., months, =, convertField]
[=, convertField, (, fields, ., years, ,, converted, ), ;, fields, ., months, =, convertField, (, fields, ., months, ,]
[., years, =, convertField, (, fields, ., years, ,, converted, ), ;, fields, ., months, =, convertField, (, fields, .]
[;, fields, ., months, =, convertField, (, fields, ., months, ,, converted, ), ;, fields, ., weekyears, =, convertField, (]
[,, converted, ), ;, fields, ., months, =, convertField, (, fields, ., months, ,, converted, ), ;, fields, ., weekyears]
[., years, ,, converted, ), ;, fields, ., months, =, convertField, (, fields, ., months, ,, converted, ), ;, fields]
[), ;, fields, ., months, =, convertField, (, fields, ., months, ,, converted, ), ;, fields, ., weekyears, =, convertField]
[=, convertField, (, fields, ., months, ,, converted, ), ;, fields, ., weekyears, =, convertField, (, fields, ., weekyears, ,]
[., months, =, convertField, (, fields, ., months, ,, converted, ), ;, fields, ., weekyears, =, convertField, (, fields, .]
[;, fields, ., weekyears, =, convertField, (, fields, ., weekyears, ,, converted, ), ;, fields, ., weeks, =, convertField, (]
[,, converted, ), ;, fields, ., weekyears, =, convertField, (, fields, ., weekyears, ,, converted, ), ;, fields, ., weeks]
[., months, ,, converted, ), ;, fields, ., weekyears, =, convertField, (, fields, ., weekyears, ,, converted, ), ;, fields]
[), ;, fields, ., weekyears, =, convertField, (, fields, ., weekyears, ,, converted, ), ;, fields, ., weeks, =, convertField]
[=, convertField, (, fields, ., weekyears, ,, converted, ), ;, fields, ., weeks, =, convertField, (, fields, ., weeks, ,]
[., weekyears, =, convertField, (, fields, ., weekyears, ,, converted, ), ;, fields, ., weeks, =, convertField, (, fields, .]
[;, fields, ., weeks, =, convertField, (, fields, ., weeks, ,, converted, ), ;, fields, ., days, =, convertField, (]
[,, converted, ), ;, fields, ., weeks, =, convertField, (, fields, ., weeks, ,, converted, ), ;, fields, ., days]
[., weekyears, ,, converted, ), ;, fields, ., weeks, =, convertField, (, fields, ., weeks, ,, converted, ), ;, fields]
[), ;, fields, ., weeks, =, convertField, (, fields, ., weeks, ,, converted, ), ;, fields, ., days, =, convertField]
[=, convertField, (, fields, ., weeks, ,, converted, ), ;, fields, ., days, =, convertField, (, fields, ., days, ,]
[., weeks, =, convertField, (, fields, ., weeks, ,, converted, ), ;, fields, ., days, =, convertField, (, fields, .]
[;, fields, ., days, =, convertField, (, fields, ., days, ,, converted, ), ;, fields, ., halfdays, =, convertField, (]
[,, converted, ), ;, fields, ., days, =, convertField, (, fields, ., days, ,, converted, ), ;, fields, ., halfdays]
[., weeks, ,, converted, ), ;, fields, ., days, =, convertField, (, fields, ., days, ,, converted, ), ;, fields]
[), ;, fields, ., days, =, convertField, (, fields, ., days, ,, converted, ), ;, fields, ., halfdays, =, convertField]
[=, convertField, (, fields, ., days, ,, converted, ), ;, fields, ., halfdays, =, convertField, (, fields, ., halfdays, ,]
[., days, =, convertField, (, fields, ., days, ,, converted, ), ;, fields, ., halfdays, =, convertField, (, fields, .]
[;, fields, ., halfdays, =, convertField, (, fields, ., halfdays, ,, converted, ), ;, fields, ., hours, =, convertField, (]
[,, converted, ), ;, fields, ., halfdays, =, convertField, (, fields, ., halfdays, ,, converted, ), ;, fields, ., hours]
[., days, ,, converted, ), ;, fields, ., halfdays, =, convertField, (, fields, ., halfdays, ,, converted, ), ;, fields]
[), ;, fields, ., halfdays, =, convertField, (, fields, ., halfdays, ,, converted, ), ;, fields, ., hours, =, convertField]
[=, convertField, (, fields, ., halfdays, ,, converted, ), ;, fields, ., hours, =, convertField, (, fields, ., hours, ,]
[., halfdays, =, convertField, (, fields, ., halfdays, ,, converted, ), ;, fields, ., hours, =, convertField, (, fields, .]
[;, fields, ., hours, =, convertField, (, fields, ., hours, ,, converted, ), ;, fields, ., minutes, =, convertField, (]
[,, converted, ), ;, fields, ., hours, =, convertField, (, fields, ., hours, ,, converted, ), ;, fields, ., minutes]
[., halfdays, ,, converted, ), ;, fields, ., hours, =, convertField, (, fields, ., hours, ,, converted, ), ;, fields]
[), ;, fields, ., hours, =, convertField, (, fields, ., hours, ,, converted, ), ;, fields, ., minutes, =, convertField]
[=, convertField, (, fields, ., hours, ,, converted, ), ;, fields, ., minutes, =, convertField, (, fields, ., minutes, ,]
[., hours, =, convertField, (, fields, ., hours, ,, converted, ), ;, fields, ., minutes, =, convertField, (, fields, .]
[;, fields, ., minutes, =, convertField, (, fields, ., minutes, ,, converted, ), ;, fields, ., seconds, =, convertField, (]
[,, converted, ), ;, fields, ., minutes, =, convertField, (, fields, ., minutes, ,, converted, ), ;, fields, ., seconds]
[., hours, ,, converted, ), ;, fields, ., minutes, =, convertField, (, fields, ., minutes, ,, converted, ), ;, fields]
[), ;, fields, ., minutes, =, convertField, (, fields, ., minutes, ,, converted, ), ;, fields, ., seconds, =, convertField]
[=, convertField, (, fields, ., minutes, ,, converted, ), ;, fields, ., seconds, =, convertField, (, fields, ., seconds, ,]
[., minutes, =, convertField, (, fields, ., minutes, ,, converted, ), ;, fields, ., seconds, =, convertField, (, fields, .]
[;, fields, ., seconds, =, convertField, (, fields, ., seconds, ,, converted, ), ;, fields, ., millis, =, convertField, (]
[,, converted, ), ;, fields, ., seconds, =, convertField, (, fields, ., seconds, ,, converted, ), ;, fields, ., millis]
[., minutes, ,, converted, ), ;, fields, ., seconds, =, convertField, (, fields, ., seconds, ,, converted, ), ;, fields]
[), ;, fields, ., seconds, =, convertField, (, fields, ., seconds, ,, converted, ), ;, fields, ., millis, =, convertField]
[=, convertField, (, fields, ., seconds, ,, converted, ), ;, fields, ., millis, =, convertField, (, fields, ., millis, ,]
[., seconds, =, convertField, (, fields, ., seconds, ,, converted, ), ;, fields, ., millis, =, convertField, (, fields, .]
[;, fields, ., millis, =, convertField, (, fields, ., millis, ,, converted, ), ;, fields, ., year, =, convertField, (]
[,, converted, ), ;, fields, ., millis, =, convertField, (, fields, ., millis, ,, converted, ), ;, fields, ., year]
[., seconds, ,, converted, ), ;, fields, ., millis, =, convertField, (, fields, ., millis, ,, converted, ), ;, fields]
[), ;, fields, ., millis, =, convertField, (, fields, ., millis, ,, converted, ), ;, fields, ., year, =, convertField]
[=, convertField, (, fields, ., millis, ,, converted, ), ;, fields, ., year, =, convertField, (, fields, ., year, ,]
[., millis, =, convertField, (, fields, ., millis, ,, converted, ), ;, fields, ., year, =, convertField, (, fields, .]
[;, fields, ., year, =, convertField, (, fields, ., year, ,, converted, ), ;, fields, ., yearOfEra, =, convertField, (]
[,, converted, ), ;, fields, ., year, =, convertField, (, fields, ., year, ,, converted, ), ;, fields, ., yearOfEra]
[., millis, ,, converted, ), ;, fields, ., year, =, convertField, (, fields, ., year, ,, converted, ), ;, fields]
[), ;, fields, ., year, =, convertField, (, fields, ., year, ,, converted, ), ;, fields, ., yearOfEra, =, convertField]
[=, convertField, (, fields, ., year, ,, converted, ), ;, fields, ., yearOfEra, =, convertField, (, fields, ., yearOfEra, ,]
[., year, =, convertField, (, fields, ., year, ,, converted, ), ;, fields, ., yearOfEra, =, convertField, (, fields, .]
[;, fields, ., yearOfEra, =, convertField, (, fields, ., yearOfEra, ,, converted, ), ;, fields, ., yearOfCentury, =, convertField, (]
[,, converted, ), ;, fields, ., yearOfEra, =, convertField, (, fields, ., yearOfEra, ,, converted, ), ;, fields, ., yearOfCentury]
[., year, ,, converted, ), ;, fields, ., yearOfEra, =, convertField, (, fields, ., yearOfEra, ,, converted, ), ;, fields]
[), ;, fields, ., yearOfEra, =, convertField, (, fields, ., yearOfEra, ,, converted, ), ;, fields, ., yearOfCentury, =, convertField]
[=, convertField, (, fields, ., yearOfEra, ,, converted, ), ;, fields, ., yearOfCentury, =, convertField, (, fields, ., yearOfCentury, ,]
[., yearOfEra, =, convertField, (, fields, ., yearOfEra, ,, converted, ), ;, fields, ., yearOfCentury, =, convertField, (, fields, .]
[;, fields, ., yearOfCentury, =, convertField, (, fields, ., yearOfCentury, ,, converted, ), ;, fields, ., centuryOfEra, =, convertField, (]
[,, converted, ), ;, fields, ., yearOfCentury, =, convertField, (, fields, ., yearOfCentury, ,, converted, ), ;, fields, ., centuryOfEra]
[., yearOfEra, ,, converted, ), ;, fields, ., yearOfCentury, =, convertField, (, fields, ., yearOfCentury, ,, converted, ), ;, fields]
[), ;, fields, ., yearOfCentury, =, convertField, (, fields, ., yearOfCentury, ,, converted, ), ;, fields, ., centuryOfEra, =, convertField]
[=, convertField, (, fields, ., yearOfCentury, ,, converted, ), ;, fields, ., centuryOfEra, =, convertField, (, fields, ., centuryOfEra, ,]
[., yearOfCentury, =, convertField, (, fields, ., yearOfCentury, ,, converted, ), ;, fields, ., centuryOfEra, =, convertField, (, fields, .]
[;, fields, ., centuryOfEra, =, convertField, (, fields, ., centuryOfEra, ,, converted, ), ;, fields, ., era, =, convertField, (]
[,, converted, ), ;, fields, ., centuryOfEra, =, convertField, (, fields, ., centuryOfEra, ,, converted, ), ;, fields, ., era]
[., yearOfCentury, ,, converted, ), ;, fields, ., centuryOfEra, =, convertField, (, fields, ., centuryOfEra, ,, converted, ), ;, fields]
[), ;, fields, ., centuryOfEra, =, convertField, (, fields, ., centuryOfEra, ,, converted, ), ;, fields, ., era, =, convertField]
[=, convertField, (, fields, ., centuryOfEra, ,, converted, ), ;, fields, ., era, =, convertField, (, fields, ., era, ,]
[., centuryOfEra, =, convertField, (, fields, ., centuryOfEra, ,, converted, ), ;, fields, ., era, =, convertField, (, fields, .]
[;, fields, ., era, =, convertField, (, fields, ., era, ,, converted, ), ;, fields, ., dayOfWeek, =, convertField, (]
[,, converted, ), ;, fields, ., era, =, convertField, (, fields, ., era, ,, converted, ), ;, fields, ., dayOfWeek]
[., centuryOfEra, ,, converted, ), ;, fields, ., era, =, convertField, (, fields, ., era, ,, converted, ), ;, fields]
[), ;, fields, ., era, =, convertField, (, fields, ., era, ,, converted, ), ;, fields, ., dayOfWeek, =, convertField]
[=, convertField, (, fields, ., era, ,, converted, ), ;, fields, ., dayOfWeek, =, convertField, (, fields, ., dayOfWeek, ,]
[., era, =, convertField, (, fields, ., era, ,, converted, ), ;, fields, ., dayOfWeek, =, convertField, (, fields, .]
[;, fields, ., dayOfWeek, =, convertField, (, fields, ., dayOfWeek, ,, converted, ), ;, fields, ., dayOfMonth, =, convertField, (]
[,, converted, ), ;, fields, ., dayOfWeek, =, convertField, (, fields, ., dayOfWeek, ,, converted, ), ;, fields, ., dayOfMonth]
[., era, ,, converted, ), ;, fields, ., dayOfWeek, =, convertField, (, fields, ., dayOfWeek, ,, converted, ), ;, fields]
[), ;, fields, ., dayOfWeek, =, convertField, (, fields, ., dayOfWeek, ,, converted, ), ;, fields, ., dayOfMonth, =, convertField]
[=, convertField, (, fields, ., dayOfWeek, ,, converted, ), ;, fields, ., dayOfMonth, =, convertField, (, fields, ., dayOfMonth, ,]
[., dayOfWeek, =, convertField, (, fields, ., dayOfWeek, ,, converted, ), ;, fields, ., dayOfMonth, =, convertField, (, fields, .]
[;, fields, ., dayOfMonth, =, convertField, (, fields, ., dayOfMonth, ,, converted, ), ;, fields, ., dayOfYear, =, convertField, (]
[,, converted, ), ;, fields, ., dayOfMonth, =, convertField, (, fields, ., dayOfMonth, ,, converted, ), ;, fields, ., dayOfYear]
[., dayOfWeek, ,, converted, ), ;, fields, ., dayOfMonth, =, convertField, (, fields, ., dayOfMonth, ,, converted, ), ;, fields]
[), ;, fields, ., dayOfMonth, =, convertField, (, fields, ., dayOfMonth, ,, converted, ), ;, fields, ., dayOfYear, =, convertField]
[=, convertField, (, fields, ., dayOfMonth, ,, converted, ), ;, fields, ., dayOfYear, =, convertField, (, fields, ., dayOfYear, ,]
[., dayOfMonth, =, convertField, (, fields, ., dayOfMonth, ,, converted, ), ;, fields, ., dayOfYear, =, convertField, (, fields, .]
[;, fields, ., dayOfYear, =, convertField, (, fields, ., dayOfYear, ,, converted, ), ;, fields, ., monthOfYear, =, convertField, (]
[,, converted, ), ;, fields, ., dayOfYear, =, convertField, (, fields, ., dayOfYear, ,, converted, ), ;, fields, ., monthOfYear]
[., dayOfMonth, ,, converted, ), ;, fields, ., dayOfYear, =, convertField, (, fields, ., dayOfYear, ,, converted, ), ;, fields]
[), ;, fields, ., dayOfYear, =, convertField, (, fields, ., dayOfYear, ,, converted, ), ;, fields, ., monthOfYear, =, convertField]
[=, convertField, (, fields, ., dayOfYear, ,, converted, ), ;, fields, ., monthOfYear, =, convertField, (, fields, ., monthOfYear, ,]
[., dayOfYear, =, convertField, (, fields, ., dayOfYear, ,, converted, ), ;, fields, ., monthOfYear, =, convertField, (, fields, .]
[;, fields, ., monthOfYear, =, convertField, (, fields, ., monthOfYear, ,, converted, ), ;, fields, ., weekOfWeekyear, =, convertField, (]
[,, converted, ), ;, fields, ., monthOfYear, =, convertField, (, fields, ., monthOfYear, ,, converted, ), ;, fields, ., weekOfWeekyear]
[., dayOfYear, ,, converted, ), ;, fields, ., monthOfYear, =, convertField, (, fields, ., monthOfYear, ,, converted, ), ;, fields]
[), ;, fields, ., monthOfYear, =, convertField, (, fields, ., monthOfYear, ,, converted, ), ;, fields, ., weekOfWeekyear, =, convertField]
[=, convertField, (, fields, ., monthOfYear, ,, converted, ), ;, fields, ., weekOfWeekyear, =, convertField, (, fields, ., weekOfWeekyear, ,]
[., monthOfYear, =, convertField, (, fields, ., monthOfYear, ,, converted, ), ;, fields, ., weekOfWeekyear, =, convertField, (, fields, .]
[;, fields, ., weekOfWeekyear, =, convertField, (, fields, ., weekOfWeekyear, ,, converted, ), ;, fields, ., weekyear, =, convertField, (]
[,, converted, ), ;, fields, ., weekOfWeekyear, =, convertField, (, fields, ., weekOfWeekyear, ,, converted, ), ;, fields, ., weekyear]
[., monthOfYear, ,, converted, ), ;, fields, ., weekOfWeekyear, =, convertField, (, fields, ., weekOfWeekyear, ,, converted, ), ;, fields]
[), ;, fields, ., weekOfWeekyear, =, convertField, (, fields, ., weekOfWeekyear, ,, converted, ), ;, fields, ., weekyear, =, convertField]
[=, convertField, (, fields, ., weekOfWeekyear, ,, converted, ), ;, fields, ., weekyear, =, convertField, (, fields, ., weekyear, ,]
[., weekOfWeekyear, =, convertField, (, fields, ., weekOfWeekyear, ,, converted, ), ;, fields, ., weekyear, =, convertField, (, fields, .]
[;, fields, ., weekyear, =, convertField, (, fields, ., weekyear, ,, converted, ), ;, fields, ., weekyearOfCentury, =, convertField, (]
[,, converted, ), ;, fields, ., weekyear, =, convertField, (, fields, ., weekyear, ,, converted, ), ;, fields, ., weekyearOfCentury]
[., weekOfWeekyear, ,, converted, ), ;, fields, ., weekyear, =, convertField, (, fields, ., weekyear, ,, converted, ), ;, fields]
[), ;, fields, ., weekyear, =, convertField, (, fields, ., weekyear, ,, converted, ), ;, fields, ., weekyearOfCentury, =, convertField]
[=, convertField, (, fields, ., weekyear, ,, converted, ), ;, fields, ., weekyearOfCentury, =, convertField, (, fields, ., weekyearOfCentury, ,]
[., weekyear, =, convertField, (, fields, ., weekyear, ,, converted, ), ;, fields, ., weekyearOfCentury, =, convertField, (, fields, .]
[;, fields, ., weekyearOfCentury, =, convertField, (, fields, ., weekyearOfCentury, ,, converted, ), ;, fields, ., millisOfSecond, =, convertField, (]
[,, converted, ), ;, fields, ., weekyearOfCentury, =, convertField, (, fields, ., weekyearOfCentury, ,, converted, ), ;, fields, ., millisOfSecond]
[., weekyear, ,, converted, ), ;, fields, ., weekyearOfCentury, =, convertField, (, fields, ., weekyearOfCentury, ,, converted, ), ;, fields]
[), ;, fields, ., weekyearOfCentury, =, convertField, (, fields, ., weekyearOfCentury, ,, converted, ), ;, fields, ., millisOfSecond, =, convertField]
[=, convertField, (, fields, ., weekyearOfCentury, ,, converted, ), ;, fields, ., millisOfSecond, =, convertField, (, fields, ., millisOfSecond, ,]
[., weekyearOfCentury, =, convertField, (, fields, ., weekyearOfCentury, ,, converted, ), ;, fields, ., millisOfSecond, =, convertField, (, fields, .]
[;, fields, ., millisOfSecond, =, convertField, (, fields, ., millisOfSecond, ,, converted, ), ;, fields, ., millisOfDay, =, convertField, (]
[,, converted, ), ;, fields, ., millisOfSecond, =, convertField, (, fields, ., millisOfSecond, ,, converted, ), ;, fields, ., millisOfDay]
[., weekyearOfCentury, ,, converted, ), ;, fields, ., millisOfSecond, =, convertField, (, fields, ., millisOfSecond, ,, converted, ), ;, fields]
[), ;, fields, ., millisOfSecond, =, convertField, (, fields, ., millisOfSecond, ,, converted, ), ;, fields, ., millisOfDay, =, convertField]
[=, convertField, (, fields, ., millisOfSecond, ,, converted, ), ;, fields, ., millisOfDay, =, convertField, (, fields, ., millisOfDay, ,]
[., millisOfSecond, =, convertField, (, fields, ., millisOfSecond, ,, converted, ), ;, fields, ., millisOfDay, =, convertField, (, fields, .]
[;, fields, ., millisOfDay, =, convertField, (, fields, ., millisOfDay, ,, converted, ), ;, fields, ., secondOfMinute, =, convertField, (]
[,, converted, ), ;, fields, ., millisOfDay, =, convertField, (, fields, ., millisOfDay, ,, converted, ), ;, fields, ., secondOfMinute]
[., millisOfSecond, ,, converted, ), ;, fields, ., millisOfDay, =, convertField, (, fields, ., millisOfDay, ,, converted, ), ;, fields]
[), ;, fields, ., millisOfDay, =, convertField, (, fields, ., millisOfDay, ,, converted, ), ;, fields, ., secondOfMinute, =, convertField]
[=, convertField, (, fields, ., millisOfDay, ,, converted, ), ;, fields, ., secondOfMinute, =, convertField, (, fields, ., secondOfMinute, ,]
[., millisOfDay, =, convertField, (, fields, ., millisOfDay, ,, converted, ), ;, fields, ., secondOfMinute, =, convertField, (, fields, .]
[;, fields, ., secondOfMinute, =, convertField, (, fields, ., secondOfMinute, ,, converted, ), ;, fields, ., secondOfDay, =, convertField, (]
[,, converted, ), ;, fields, ., secondOfMinute, =, convertField, (, fields, ., secondOfMinute, ,, converted, ), ;, fields, ., secondOfDay]
[., millisOfDay, ,, converted, ), ;, fields, ., secondOfMinute, =, convertField, (, fields, ., secondOfMinute, ,, converted, ), ;, fields]
[), ;, fields, ., secondOfMinute, =, convertField, (, fields, ., secondOfMinute, ,, converted, ), ;, fields, ., secondOfDay, =, convertField]
[=, convertField, (, fields, ., secondOfMinute, ,, converted, ), ;, fields, ., secondOfDay, =, convertField, (, fields, ., secondOfDay, ,]
[., secondOfMinute, =, convertField, (, fields, ., secondOfMinute, ,, converted, ), ;, fields, ., secondOfDay, =, convertField, (, fields, .]
[;, fields, ., secondOfDay, =, convertField, (, fields, ., secondOfDay, ,, converted, ), ;, fields, ., minuteOfHour, =, convertField, (]
[,, converted, ), ;, fields, ., secondOfDay, =, convertField, (, fields, ., secondOfDay, ,, converted, ), ;, fields, ., minuteOfHour]
[., secondOfMinute, ,, converted, ), ;, fields, ., secondOfDay, =, convertField, (, fields, ., secondOfDay, ,, converted, ), ;, fields]
[), ;, fields, ., secondOfDay, =, convertField, (, fields, ., secondOfDay, ,, converted, ), ;, fields, ., minuteOfHour, =, convertField]
[=, convertField, (, fields, ., secondOfDay, ,, converted, ), ;, fields, ., minuteOfHour, =, convertField, (, fields, ., minuteOfHour, ,]
[., secondOfDay, =, convertField, (, fields, ., secondOfDay, ,, converted, ), ;, fields, ., minuteOfHour, =, convertField, (, fields, .]
[;, fields, ., minuteOfHour, =, convertField, (, fields, ., minuteOfHour, ,, converted, ), ;, fields, ., minuteOfDay, =, convertField, (]
[,, converted, ), ;, fields, ., minuteOfHour, =, convertField, (, fields, ., minuteOfHour, ,, converted, ), ;, fields, ., minuteOfDay]
[., secondOfDay, ,, converted, ), ;, fields, ., minuteOfHour, =, convertField, (, fields, ., minuteOfHour, ,, converted, ), ;, fields]
[), ;, fields, ., minuteOfHour, =, convertField, (, fields, ., minuteOfHour, ,, converted, ), ;, fields, ., minuteOfDay, =, convertField]
[=, convertField, (, fields, ., minuteOfHour, ,, converted, ), ;, fields, ., minuteOfDay, =, convertField, (, fields, ., minuteOfDay, ,]
[., minuteOfHour, =, convertField, (, fields, ., minuteOfHour, ,, converted, ), ;, fields, ., minuteOfDay, =, convertField, (, fields, .]
[;, fields, ., minuteOfDay, =, convertField, (, fields, ., minuteOfDay, ,, converted, ), ;, fields, ., hourOfDay, =, convertField, (]
[,, converted, ), ;, fields, ., minuteOfDay, =, convertField, (, fields, ., minuteOfDay, ,, converted, ), ;, fields, ., hourOfDay]
[., minuteOfHour, ,, converted, ), ;, fields, ., minuteOfDay, =, convertField, (, fields, ., minuteOfDay, ,, converted, ), ;, fields]
[), ;, fields, ., minuteOfDay, =, convertField, (, fields, ., minuteOfDay, ,, converted, ), ;, fields, ., hourOfDay, =, convertField]
[=, convertField, (, fields, ., minuteOfDay, ,, converted, ), ;, fields, ., hourOfDay, =, convertField, (, fields, ., hourOfDay, ,]
[., minuteOfDay, =, convertField, (, fields, ., minuteOfDay, ,, converted, ), ;, fields, ., hourOfDay, =, convertField, (, fields, .]
[;, fields, ., hourOfDay, =, convertField, (, fields, ., hourOfDay, ,, converted, ), ;, fields, ., hourOfHalfday, =, convertField, (]
[,, converted, ), ;, fields, ., hourOfDay, =, convertField, (, fields, ., hourOfDay, ,, converted, ), ;, fields, ., hourOfHalfday]
[., minuteOfDay, ,, converted, ), ;, fields, ., hourOfDay, =, convertField, (, fields, ., hourOfDay, ,, converted, ), ;, fields]
[), ;, fields, ., hourOfDay, =, convertField, (, fields, ., hourOfDay, ,, converted, ), ;, fields, ., hourOfHalfday, =, convertField]
[=, convertField, (, fields, ., hourOfDay, ,, converted, ), ;, fields, ., hourOfHalfday, =, convertField, (, fields, ., hourOfHalfday, ,]
[., hourOfDay, =, convertField, (, fields, ., hourOfDay, ,, converted, ), ;, fields, ., hourOfHalfday, =, convertField, (, fields, .]
[;, fields, ., hourOfHalfday, =, convertField, (, fields, ., hourOfHalfday, ,, converted, ), ;, fields, ., clockhourOfDay, =, convertField, (]
[,, converted, ), ;, fields, ., hourOfHalfday, =, convertField, (, fields, ., hourOfHalfday, ,, converted, ), ;, fields, ., clockhourOfDay]
[., hourOfDay, ,, converted, ), ;, fields, ., hourOfHalfday, =, convertField, (, fields, ., hourOfHalfday, ,, converted, ), ;, fields]
[), ;, fields, ., hourOfHalfday, =, convertField, (, fields, ., hourOfHalfday, ,, converted, ), ;, fields, ., clockhourOfDay, =, convertField]
[=, convertField, (, fields, ., hourOfHalfday, ,, converted, ), ;, fields, ., clockhourOfDay, =, convertField, (, fields, ., clockhourOfDay, ,]
[., hourOfHalfday, =, convertField, (, fields, ., hourOfHalfday, ,, converted, ), ;, fields, ., clockhourOfDay, =, convertField, (, fields, .]
[;, fields, ., clockhourOfDay, =, convertField, (, fields, ., clockhourOfDay, ,, converted, ), ;, fields, ., clockhourOfHalfday, =, convertField, (]
[,, converted, ), ;, fields, ., clockhourOfDay, =, convertField, (, fields, ., clockhourOfDay, ,, converted, ), ;, fields, ., clockhourOfHalfday]
[., hourOfHalfday, ,, converted, ), ;, fields, ., clockhourOfDay, =, convertField, (, fields, ., clockhourOfDay, ,, converted, ), ;, fields]
[), ;, fields, ., clockhourOfDay, =, convertField, (, fields, ., clockhourOfDay, ,, converted, ), ;, fields, ., clockhourOfHalfday, =, convertField]
[=, convertField, (, fields, ., clockhourOfDay, ,, converted, ), ;, fields, ., clockhourOfHalfday, =, convertField, (, fields, ., clockhourOfHalfday, ,]
[., clockhourOfDay, =, convertField, (, fields, ., clockhourOfDay, ,, converted, ), ;, fields, ., clockhourOfHalfday, =, convertField, (, fields, .]
[;, fields, ., clockhourOfHalfday, =, convertField, (, fields, ., clockhourOfHalfday, ,, converted, ), ;, fields, ., halfdayOfDay, =, convertField, (]
[,, converted, ), ;, fields, ., clockhourOfHalfday, =, convertField, (, fields, ., clockhourOfHalfday, ,, converted, ), ;, fields, ., halfdayOfDay]
[., clockhourOfDay, ,, converted, ), ;, fields, ., clockhourOfHalfday, =, convertField, (, fields, ., clockhourOfHalfday, ,, converted, ), ;, fields]
[), ;, fields, ., clockhourOfHalfday, =, convertField, (, fields, ., clockhourOfHalfday, ,, converted, ), ;, fields, ., halfdayOfDay, =, convertField]
[=, convertField, (, fields, ., clockhourOfHalfday, ,, converted, ), ;, fields, ., halfdayOfDay, =, convertField, (, fields, ., halfdayOfDay, ,]
[., clockhourOfHalfday, =, convertField, (, fields, ., clockhourOfHalfday, ,, converted, ), ;, fields, ., halfdayOfDay, =, convertField, (, fields, .]
[;, fields, ., halfdayOfDay, =, convertField, (, fields, ., halfdayOfDay, ,, converted, ), ;, }, private, DurationField, convertField, (, DurationField]
[,, converted, ), ;, fields, ., halfdayOfDay, =, convertField, (, fields, ., halfdayOfDay, ,, converted, ), ;, }, private, DurationField]
[., clockhourOfHalfday, ,, converted, ), ;, fields, ., halfdayOfDay, =, convertField, (, fields, ., halfdayOfDay, ,, converted, ), ;, }]
[), ;, fields, ., halfdayOfDay, =, convertField, (, fields, ., halfdayOfDay, ,, converted, ), ;, }, private, DurationField, convertField, (]
[=, convertField, (, fields, ., halfdayOfDay, ,, converted, ), ;, }, private, DurationField, convertField, (, DurationField, field, ,, HashMap, <]
[., halfdayOfDay, =, convertField, (, fields, ., halfdayOfDay, ,, converted, ), ;, }, private, DurationField, convertField, (, DurationField, field, ,]
[;, }, private, DurationField, convertField, (, DurationField, field, ,, HashMap, <, Object, ,, Object, >, converted, ), {, if, (]
[,, converted, ), ;, }, private, DurationField, convertField, (, DurationField, field, ,, HashMap, <, Object, ,, Object, >, converted, )]
[., halfdayOfDay, ,, converted, ), ;, }, private, DurationField, convertField, (, DurationField, field, ,, HashMap, <, Object, ,, Object, >]
[), ;, }, private, DurationField, convertField, (, DurationField, field, ,, HashMap, <, Object, ,, Object, >, converted, ), {, if]
[), {, return, field, ;, }, if, (, converted, ., containsKey, (, field, ), ), {, return, (, DurationField, )]
[||, !, field, ., isSupported, (, ), ), {, return, field, ;, }, if, (, converted, ., containsKey, (, field]
[==, null, ||, !, field, ., isSupported, (, ), ), {, return, field, ;, }, if, (, converted, ., containsKey]
[||, !, field, ., isSupported, (, ), ), {, return, field, ;, }, if, (, converted, ., containsKey, (, field]
[), {, return, field, ;, }, if, (, converted, ., containsKey, (, field, ), ), {, return, (, DurationField, )]
[), {, return, field, ;, }, if, (, converted, ., containsKey, (, field, ), ), {, return, (, DurationField, )]
[., isSupported, (, ), ), {, return, field, ;, }, if, (, converted, ., containsKey, (, field, ), ), {]
[;, }, if, (, converted, ., containsKey, (, field, ), ), {, return, (, DurationField, ), converted, ., get, (]
[), {, return, (, DurationField, ), converted, ., get, (, field, ), ;, }, ZonedDurationField, zonedField, =, new, ZonedDurationField, (]
[., containsKey, (, field, ), ), {, return, (, DurationField, ), converted, ., get, (, field, ), ;, }, ZonedDurationField]
[), ), {, return, (, DurationField, ), converted, ., get, (, field, ), ;, }, ZonedDurationField, zonedField, =, new, ZonedDurationField]
[;, }, ZonedDurationField, zonedField, =, new, ZonedDurationField, (, field, ,, getZone, (, ), ), ;, converted, ., put, (, field]
[;, }, ZonedDurationField, zonedField, =, new, ZonedDurationField, (, field, ,, getZone, (, ), ), ;, converted, ., put, (, field]
[., get, (, field, ), ;, }, ZonedDurationField, zonedField, =, new, ZonedDurationField, (, field, ,, getZone, (, ), ), ;]
[), ;, }, ZonedDurationField, zonedField, =, new, ZonedDurationField, (, field, ,, getZone, (, ), ), ;, converted, ., put, (]
[;, converted, ., put, (, field, ,, zonedField, ), ;, return, zonedField, ;, }, private, DateTimeField, convertField, (, DateTimeField, field]
[,, getZone, (, ), ), ;, converted, ., put, (, field, ,, zonedField, ), ;, return, zonedField, ;, }, private]
[), ;, converted, ., put, (, field, ,, zonedField, ), ;, return, zonedField, ;, }, private, DateTimeField, convertField, (, DateTimeField]
[;, return, zonedField, ;, }, private, DateTimeField, convertField, (, DateTimeField, field, ,, HashMap, <, Object, ,, Object, >, converted, )]
[., put, (, field, ,, zonedField, ), ;, return, zonedField, ;, }, private, DateTimeField, convertField, (, DateTimeField, field, ,, HashMap]
[,, zonedField, ), ;, return, zonedField, ;, }, private, DateTimeField, convertField, (, DateTimeField, field, ,, HashMap, <, Object, ,, Object]
[), ;, return, zonedField, ;, }, private, DateTimeField, convertField, (, DateTimeField, field, ,, HashMap, <, Object, ,, Object, >, converted]
[;, }, private, DateTimeField, convertField, (, DateTimeField, field, ,, HashMap, <, Object, ,, Object, >, converted, ), {, if, (]
[), {, return, field, ;, }, if, (, converted, ., containsKey, (, field, ), ), {, return, (, DateTimeField, )]
[||, !, field, ., isSupported, (, ), ), {, return, field, ;, }, if, (, converted, ., containsKey, (, field]
[==, null, ||, !, field, ., isSupported, (, ), ), {, return, field, ;, }, if, (, converted, ., containsKey]
[||, !, field, ., isSupported, (, ), ), {, return, field, ;, }, if, (, converted, ., containsKey, (, field]
[), {, return, field, ;, }, if, (, converted, ., containsKey, (, field, ), ), {, return, (, DateTimeField, )]
[), {, return, field, ;, }, if, (, converted, ., containsKey, (, field, ), ), {, return, (, DateTimeField, )]
[., isSupported, (, ), ), {, return, field, ;, }, if, (, converted, ., containsKey, (, field, ), ), {]
[;, }, if, (, converted, ., containsKey, (, field, ), ), {, return, (, DateTimeField, ), converted, ., get, (]
[), {, return, (, DateTimeField, ), converted, ., get, (, field, ), ;, }, ZonedDateTimeField, zonedField, =, new, ZonedDateTimeField, (]
[., containsKey, (, field, ), ), {, return, (, DateTimeField, ), converted, ., get, (, field, ), ;, }, ZonedDateTimeField]
[), ), {, return, (, DateTimeField, ), converted, ., get, (, field, ), ;, }, ZonedDateTimeField, zonedField, =, new, ZonedDateTimeField]
[;, }, ZonedDateTimeField, zonedField, =, new, ZonedDateTimeField, (, field, ,, getZone, (, ), ,, convertField, (, field, ., getDurationField, (]
[;, }, ZonedDateTimeField, zonedField, =, new, ZonedDateTimeField, (, field, ,, getZone, (, ), ,, convertField, (, field, ., getDurationField, (]
[., get, (, field, ), ;, }, ZonedDateTimeField, zonedField, =, new, ZonedDateTimeField, (, field, ,, getZone, (, ), ,, convertField]
[), ;, }, ZonedDateTimeField, zonedField, =, new, ZonedDateTimeField, (, field, ,, getZone, (, ), ,, convertField, (, field, ., getDurationField]
[;, converted, ., put, (, field, ,, zonedField, ), ;, return, zonedField, ;, }, public, boolean, equals, (, Object, obj]
[,, getZone, (, ), ,, convertField, (, field, ., getDurationField, (, ), ,, converted, ), ,, convertField, (, field, .]
[,, convertField, (, field, ., getDurationField, (, ), ,, converted, ), ,, convertField, (, field, ., getRangeDurationField, (, ), ,]
[,, convertField, (, field, ., getRangeDurationField, (, ), ,, converted, ), ,, convertField, (, field, ., getLeapDurationField, (, ), ,]
[,, converted, ), ,, convertField, (, field, ., getRangeDurationField, (, ), ,, converted, ), ,, convertField, (, field, ., getLeapDurationField]
[., getDurationField, (, ), ,, converted, ), ,, convertField, (, field, ., getRangeDurationField, (, ), ,, converted, ), ,, convertField]
[), ,, convertField, (, field, ., getRangeDurationField, (, ), ,, converted, ), ,, convertField, (, field, ., getLeapDurationField, (, )]
[,, convertField, (, field, ., getLeapDurationField, (, ), ,, converted, ), ), ;, converted, ., put, (, field, ,, zonedField]
[,, converted, ), ,, convertField, (, field, ., getLeapDurationField, (, ), ,, converted, ), ), ;, converted, ., put, (]
[., getRangeDurationField, (, ), ,, converted, ), ,, convertField, (, field, ., getLeapDurationField, (, ), ,, converted, ), ), ;]
[), ,, convertField, (, field, ., getLeapDurationField, (, ), ,, converted, ), ), ;, converted, ., put, (, field, ,]
[), ;, converted, ., put, (, field, ,, zonedField, ), ;, return, zonedField, ;, }, public, boolean, equals, (, Object]
[,, converted, ), ), ;, converted, ., put, (, field, ,, zonedField, ), ;, return, zonedField, ;, }, public, boolean]
[., getLeapDurationField, (, ), ,, converted, ), ), ;, converted, ., put, (, field, ,, zonedField, ), ;, return, zonedField]
[), ), ;, converted, ., put, (, field, ,, zonedField, ), ;, return, zonedField, ;, }, public, boolean, equals, (]
[;, return, zonedField, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, this, ==, obj, ), {]
[., put, (, field, ,, zonedField, ), ;, return, zonedField, ;, }, public, boolean, equals, (, Object, obj, ), {]
[,, zonedField, ), ;, return, zonedField, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, this, ==]
[), ;, return, zonedField, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, this, ==, obj, )]
[;, }, public, boolean, equals, (, Object, obj, ), {, if, (, this, ==, obj, ), {, return, true, ;]
[), {, return, true, ;, }, if, (, obj, instanceof, ZonedChronology, ==, false, ), {, return, false, ;, }, ZonedChronology]
[==, obj, ), {, return, true, ;, }, if, (, obj, instanceof, ZonedChronology, ==, false, ), {, return, false, ;]
[), {, return, true, ;, }, if, (, obj, instanceof, ZonedChronology, ==, false, ), {, return, false, ;, }, ZonedChronology]
[;, }, if, (, obj, instanceof, ZonedChronology, ==, false, ), {, return, false, ;, }, ZonedChronology, chrono, =, (, ZonedChronology]
[), {, return, false, ;, }, ZonedChronology, chrono, =, (, ZonedChronology, ), obj, ;, return, getBase, (, ), ., equals]
[==, false, ), {, return, false, ;, }, ZonedChronology, chrono, =, (, ZonedChronology, ), obj, ;, return, getBase, (, )]
[instanceof, ZonedChronology, ==, false, ), {, return, false, ;, }, ZonedChronology, chrono, =, (, ZonedChronology, ), obj, ;, return, getBase]
[), {, return, false, ;, }, ZonedChronology, chrono, =, (, ZonedChronology, ), obj, ;, return, getBase, (, ), ., equals]
[;, }, ZonedChronology, chrono, =, (, ZonedChronology, ), obj, ;, return, getBase, (, ), ., equals, (, chrono, ., getBase]
[;, return, getBase, (, ), ., equals, (, chrono, ., getBase, (, ), ), &&, getZone, (, ), ., equals]
[;, return, getBase, (, ), ., equals, (, chrono, ., getBase, (, ), ), &&, getZone, (, ), ., equals]
[;, }, public, int, hashCode, (, ), {, return, 326565, +, getZone, (, ), ., hashCode, (, ), *, 11]
[&&, getZone, (, ), ., equals, (, chrono, ., getZone, (, ), ), ;, }, public, int, hashCode, (, )]
[., equals, (, chrono, ., getBase, (, ), ), &&, getZone, (, ), ., equals, (, chrono, ., getZone, (]
[), &&, getZone, (, ), ., equals, (, chrono, ., getZone, (, ), ), ;, }, public, int, hashCode, (]
[., getBase, (, ), ), &&, getZone, (, ), ., equals, (, chrono, ., getZone, (, ), ), ;, }]
[;, }, public, int, hashCode, (, ), {, return, 326565, +, getZone, (, ), ., hashCode, (, ), *, 11]
[., equals, (, chrono, ., getZone, (, ), ), ;, }, public, int, hashCode, (, ), {, return, 326565, +]
[), ;, }, public, int, hashCode, (, ), {, return, 326565, +, getZone, (, ), ., hashCode, (, ), *]
[., getZone, (, ), ), ;, }, public, int, hashCode, (, ), {, return, 326565, +, getZone, (, ), .]
[;, }, public, String, toString, (, ), {, return, "ZonedChronology[", +, getBase, (, ), +, ", ", +, getZone, (, )]
[+, getBase, (, ), ., hashCode, (, ), *, 7, ;, }, public, String, toString, (, ), {, return, "ZonedChronology["]
[+, getZone, (, ), ., hashCode, (, ), *, 11, +, getBase, (, ), ., hashCode, (, ), *, 7]
[+, getBase, (, ), ., hashCode, (, ), *, 7, ;, }, public, String, toString, (, ), {, return, "ZonedChronology["]
[*, 11, +, getBase, (, ), ., hashCode, (, ), *, 7, ;, }, public, String, toString, (, ), {]
[., hashCode, (, ), *, 11, +, getBase, (, ), ., hashCode, (, ), *, 7, ;, }, public, String]
[+, getBase, (, ), ., hashCode, (, ), *, 7, ;, }, public, String, toString, (, ), {, return, "ZonedChronology["]
[;, }, public, String, toString, (, ), {, return, "ZonedChronology[", +, getBase, (, ), +, ", ", +, getZone, (, )]
[*, 7, ;, }, public, String, toString, (, ), {, return, "ZonedChronology[", +, getBase, (, ), +, ", ", +, getZone]
[., hashCode, (, ), *, 7, ;, }, public, String, toString, (, ), {, return, "ZonedChronology[", +, getBase, (, )]
[;, }, public, String, toString, (, ), {, return, "ZonedChronology[", +, getBase, (, ), +, ", ", +, getZone, (, )]
[;, }, static, class, ZonedDurationField, extends, BaseDurationField, {, private, static, final, long, serialVersionUID, =, -, 485345310999208286L, ;, final, DurationField, iField]
[+, ']', ;, }, static, class, ZonedDurationField, extends, BaseDurationField, {, private, static, final, long, serialVersionUID, =, -, 485345310999208286L, ;, final]
[+, getZone, (, ), ., getID, (, ), +, ']', ;, }, static, class, ZonedDurationField, extends, BaseDurationField, {, private, static]
[+, ", ", +, getZone, (, ), ., getID, (, ), +, ']', ;, }, static, class, ZonedDurationField, extends, BaseDurationField, {]
[+, getBase, (, ), +, ", ", +, getZone, (, ), ., getID, (, ), +, ']', ;, }, static, class]
[+, ", ", +, getZone, (, ), ., getID, (, ), +, ']', ;, }, static, class, ZonedDurationField, extends, BaseDurationField, {]
[+, getZone, (, ), ., getID, (, ), +, ']', ;, }, static, class, ZonedDurationField, extends, BaseDurationField, {, private, static]
[+, ']', ;, }, static, class, ZonedDurationField, extends, BaseDurationField, {, private, static, final, long, serialVersionUID, =, -, 485345310999208286L, ;, final]
[., getID, (, ), +, ']', ;, }, static, class, ZonedDurationField, extends, BaseDurationField, {, private, static, final, long, serialVersionUID, =]
[;, }, static, class, ZonedDurationField, extends, BaseDurationField, {, private, static, final, long, serialVersionUID, =, -, 485345310999208286L, ;, final, DurationField, iField]
[;, final, DurationField, iField, ;, final, boolean, iTimeField, ;, final, DateTimeZone, iZone, ;, ZonedDurationField, (, DurationField, field, ,, DateTimeZone, zone]
[;, final, DurationField, iField, ;, final, boolean, iTimeField, ;, final, DateTimeZone, iZone, ;, ZonedDurationField, (, DurationField, field, ,, DateTimeZone, zone]
[), ;, if, (, !, field, ., isSupported, (, ), ), {, throw, new, IllegalArgumentException, (, ), ;, }, iField]
[., getType, (, ), ), ;, if, (, !, field, ., isSupported, (, ), ), {, throw, new, IllegalArgumentException, (]
[), {, throw, new, IllegalArgumentException, (, ), ;, }, iField, =, field, ;, iTimeField, =, useTimeArithmetic, (, field, ), ;]
[), {, throw, new, IllegalArgumentException, (, ), ;, }, iField, =, field, ;, iTimeField, =, useTimeArithmetic, (, field, ), ;]
[., isSupported, (, ), ), {, throw, new, IllegalArgumentException, (, ), ;, }, iField, =, field, ;, iTimeField, =, useTimeArithmetic]
[;, }, iField, =, field, ;, iTimeField, =, useTimeArithmetic, (, field, ), ;, iZone, =, zone, ;, }, public, boolean]
[=, field, ;, iTimeField, =, useTimeArithmetic, (, field, ), ;, iZone, =, zone, ;, }, public, boolean, isPrecise, (, )]
[;, iTimeField, =, useTimeArithmetic, (, field, ), ;, iZone, =, zone, ;, }, public, boolean, isPrecise, (, ), {, return]
[=, useTimeArithmetic, (, field, ), ;, iZone, =, zone, ;, }, public, boolean, isPrecise, (, ), {, return, iTimeField, ?]
[;, iZone, =, zone, ;, }, public, boolean, isPrecise, (, ), {, return, iTimeField, ?, iField, ., isPrecise, (, )]
[), ;, iZone, =, zone, ;, }, public, boolean, isPrecise, (, ), {, return, iTimeField, ?, iField, ., isPrecise, (]
[=, zone, ;, }, public, boolean, isPrecise, (, ), {, return, iTimeField, ?, iField, ., isPrecise, (, ), :, iField]
[;, }, public, boolean, isPrecise, (, ), {, return, iTimeField, ?, iField, ., isPrecise, (, ), :, iField, ., isPrecise]
[;, }, public, long, getUnitMillis, (, ), {, return, iField, ., getUnitMillis, (, ), ;, }, public, int, getValue, (]
[?, iField, ., isPrecise, (, ), :, iField, ., isPrecise, (, ), &&, this, ., iZone, ., isFixed, (, )]
[:, iField, ., isPrecise, (, ), &&, this, ., iZone, ., isFixed, (, ), ;, }, public, long, getUnitMillis, (]
[., isPrecise, (, ), :, iField, ., isPrecise, (, ), &&, this, ., iZone, ., isFixed, (, ), ;, }]
[;, }, public, long, getUnitMillis, (, ), {, return, iField, ., getUnitMillis, (, ), ;, }, public, int, getValue, (]
[&&, this, ., iZone, ., isFixed, (, ), ;, }, public, long, getUnitMillis, (, ), {, return, iField, ., getUnitMillis]
[., isPrecise, (, ), &&, this, ., iZone, ., isFixed, (, ), ;, }, public, long, getUnitMillis, (, ), {]
[;, }, public, long, getUnitMillis, (, ), {, return, iField, ., getUnitMillis, (, ), ;, }, public, int, getValue, (]
[., isFixed, (, ), ;, }, public, long, getUnitMillis, (, ), {, return, iField, ., getUnitMillis, (, ), ;, }]
[., iZone, ., isFixed, (, ), ;, }, public, long, getUnitMillis, (, ), {, return, iField, ., getUnitMillis, (, )]
[;, }, public, int, getValue, (, long, duration, ,, long, instant, ), {, return, iField, ., getValue, (, duration, ,]
[., getUnitMillis, (, ), ;, }, public, int, getValue, (, long, duration, ,, long, instant, ), {, return, iField, .]
[;, }, public, long, getValueAsLong, (, long, duration, ,, long, instant, ), {, return, iField, ., getValueAsLong, (, duration, ,]
[., getValue, (, duration, ,, addOffset, (, instant, ), ), ;, }, public, long, getValueAsLong, (, long, duration, ,, long]
[,, addOffset, (, instant, ), ), ;, }, public, long, getValueAsLong, (, long, duration, ,, long, instant, ), {, return]
[), ;, }, public, long, getValueAsLong, (, long, duration, ,, long, instant, ), {, return, iField, ., getValueAsLong, (, duration]
[), ), ;, }, public, long, getValueAsLong, (, long, duration, ,, long, instant, ), {, return, iField, ., getValueAsLong, (]
[;, }, public, long, getMillis, (, int, value, ,, long, instant, ), {, return, iField, ., getMillis, (, value, ,]
[., getValueAsLong, (, duration, ,, addOffset, (, instant, ), ), ;, }, public, long, getMillis, (, int, value, ,, long]
[,, addOffset, (, instant, ), ), ;, }, public, long, getMillis, (, int, value, ,, long, instant, ), {, return]
[), ;, }, public, long, getMillis, (, int, value, ,, long, instant, ), {, return, iField, ., getMillis, (, value]
[), ), ;, }, public, long, getMillis, (, int, value, ,, long, instant, ), {, return, iField, ., getMillis, (]
[;, }, public, long, getMillis, (, long, value, ,, long, instant, ), {, return, iField, ., getMillis, (, value, ,]
[., getMillis, (, value, ,, addOffset, (, instant, ), ), ;, }, public, long, getMillis, (, long, value, ,, long]
[,, addOffset, (, instant, ), ), ;, }, public, long, getMillis, (, long, value, ,, long, instant, ), {, return]
[), ;, }, public, long, getMillis, (, long, value, ,, long, instant, ), {, return, iField, ., getMillis, (, value]
[), ), ;, }, public, long, getMillis, (, long, value, ,, long, instant, ), {, return, iField, ., getMillis, (]
[;, }, public, long, add, (, long, instant, ,, int, value, ), {, int, offset, =, getOffsetToAdd, (, instant, )]
[., getMillis, (, value, ,, addOffset, (, instant, ), ), ;, }, public, long, add, (, long, instant, ,, int]
[,, addOffset, (, instant, ), ), ;, }, public, long, add, (, long, instant, ,, int, value, ), {, int]
[), ;, }, public, long, add, (, long, instant, ,, int, value, ), {, int, offset, =, getOffsetToAdd, (, instant]
[), ), ;, }, public, long, add, (, long, instant, ,, int, value, ), {, int, offset, =, getOffsetToAdd, (]
[;, instant, =, iField, ., add, (, instant, +, offset, ,, value, ), ;, return, instant, -, (, iTimeField, ?]
[), ;, instant, =, iField, ., add, (, instant, +, offset, ,, value, ), ;, return, instant, -, (, iTimeField]
[=, iField, ., add, (, instant, +, offset, ,, value, ), ;, return, instant, -, (, iTimeField, ?, offset, :]
[;, return, instant, -, (, iTimeField, ?, offset, :, getOffsetFromLocalToSubtract, (, instant, ), ), ;, }, public, long, add, (]
[., add, (, instant, +, offset, ,, value, ), ;, return, instant, -, (, iTimeField, ?, offset, :, getOffsetFromLocalToSubtract, (]
[,, value, ), ;, return, instant, -, (, iTimeField, ?, offset, :, getOffsetFromLocalToSubtract, (, instant, ), ), ;, }, public]
[+, offset, ,, value, ), ;, return, instant, -, (, iTimeField, ?, offset, :, getOffsetFromLocalToSubtract, (, instant, ), ), ;]
[,, value, ), ;, return, instant, -, (, iTimeField, ?, offset, :, getOffsetFromLocalToSubtract, (, instant, ), ), ;, }, public]
[), ;, return, instant, -, (, iTimeField, ?, offset, :, getOffsetFromLocalToSubtract, (, instant, ), ), ;, }, public, long, add]
[;, }, public, long, add, (, long, instant, ,, long, value, ), {, int, offset, =, getOffsetToAdd, (, instant, )]
[-, (, iTimeField, ?, offset, :, getOffsetFromLocalToSubtract, (, instant, ), ), ;, }, public, long, add, (, long, instant, ,]
[;, }, public, long, add, (, long, instant, ,, long, value, ), {, int, offset, =, getOffsetToAdd, (, instant, )]
[), ;, }, public, long, add, (, long, instant, ,, long, value, ), {, int, offset, =, getOffsetToAdd, (, instant]
[?, offset, :, getOffsetFromLocalToSubtract, (, instant, ), ), ;, }, public, long, add, (, long, instant, ,, long, value, )]
[:, getOffsetFromLocalToSubtract, (, instant, ), ), ;, }, public, long, add, (, long, instant, ,, long, value, ), {, int]
[), ;, }, public, long, add, (, long, instant, ,, long, value, ), {, int, offset, =, getOffsetToAdd, (, instant]
[), ), ;, }, public, long, add, (, long, instant, ,, long, value, ), {, int, offset, =, getOffsetToAdd, (]
[;, instant, =, iField, ., add, (, instant, +, offset, ,, value, ), ;, return, instant, -, (, iTimeField, ?]
[), ;, instant, =, iField, ., add, (, instant, +, offset, ,, value, ), ;, return, instant, -, (, iTimeField]
[=, iField, ., add, (, instant, +, offset, ,, value, ), ;, return, instant, -, (, iTimeField, ?, offset, :]
[;, return, instant, -, (, iTimeField, ?, offset, :, getOffsetFromLocalToSubtract, (, instant, ), ), ;, }, public, int, getDifference, (]
[., add, (, instant, +, offset, ,, value, ), ;, return, instant, -, (, iTimeField, ?, offset, :, getOffsetFromLocalToSubtract, (]
[,, value, ), ;, return, instant, -, (, iTimeField, ?, offset, :, getOffsetFromLocalToSubtract, (, instant, ), ), ;, }, public]
[+, offset, ,, value, ), ;, return, instant, -, (, iTimeField, ?, offset, :, getOffsetFromLocalToSubtract, (, instant, ), ), ;]
[,, value, ), ;, return, instant, -, (, iTimeField, ?, offset, :, getOffsetFromLocalToSubtract, (, instant, ), ), ;, }, public]
[), ;, return, instant, -, (, iTimeField, ?, offset, :, getOffsetFromLocalToSubtract, (, instant, ), ), ;, }, public, int, getDifference]
[;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd, (, subtrahendInstant, )]
[-, (, iTimeField, ?, offset, :, getOffsetFromLocalToSubtract, (, instant, ), ), ;, }, public, int, getDifference, (, long, minuendInstant, ,]
[;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd, (, subtrahendInstant, )]
[), ;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd, (, subtrahendInstant]
[?, offset, :, getOffsetFromLocalToSubtract, (, instant, ), ), ;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, )]
[:, getOffsetFromLocalToSubtract, (, instant, ), ), ;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, int]
[), ;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd, (, subtrahendInstant]
[), ), ;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd, (]
[;, return, iField, ., getDifference, (, minuendInstant, +, (, iTimeField, ?, offset, :, getOffsetToAdd, (, minuendInstant, ), ), ,, subtrahendInstant]
[), ;, return, iField, ., getDifference, (, minuendInstant, +, (, iTimeField, ?, offset, :, getOffsetToAdd, (, minuendInstant, ), ), ,]
[;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd, (, subtrahendInstant, )]
[., getDifference, (, minuendInstant, +, (, iTimeField, ?, offset, :, getOffsetToAdd, (, minuendInstant, ), ), ,, subtrahendInstant, +, offset, )]
[,, subtrahendInstant, +, offset, ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, int, offset]
[+, (, iTimeField, ?, offset, :, getOffsetToAdd, (, minuendInstant, ), ), ,, subtrahendInstant, +, offset, ), ;, }, public, long]
[,, subtrahendInstant, +, offset, ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, int, offset]
[), ,, subtrahendInstant, +, offset, ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, int]
[?, offset, :, getOffsetToAdd, (, minuendInstant, ), ), ,, subtrahendInstant, +, offset, ), ;, }, public, long, getDifferenceAsLong, (, long]
[:, getOffsetToAdd, (, minuendInstant, ), ), ,, subtrahendInstant, +, offset, ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,]
[), ,, subtrahendInstant, +, offset, ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, int]
[), ), ,, subtrahendInstant, +, offset, ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {]
[), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd, (, subtrahendInstant]
[+, offset, ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd]
[), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd, (, subtrahendInstant]
[;, return, iField, ., getDifferenceAsLong, (, minuendInstant, +, (, iTimeField, ?, offset, :, getOffsetToAdd, (, minuendInstant, ), ), ,, subtrahendInstant]
[), ;, return, iField, ., getDifferenceAsLong, (, minuendInstant, +, (, iTimeField, ?, offset, :, getOffsetToAdd, (, minuendInstant, ), ), ,]
[;, }, private, int, getOffsetToAdd, (, long, instant, ), {, int, offset, =, this, ., iZone, ., getOffset, (, instant]
[., getDifferenceAsLong, (, minuendInstant, +, (, iTimeField, ?, offset, :, getOffsetToAdd, (, minuendInstant, ), ), ,, subtrahendInstant, +, offset, )]
[,, subtrahendInstant, +, offset, ), ;, }, private, int, getOffsetToAdd, (, long, instant, ), {, int, offset, =, this, .]
[+, (, iTimeField, ?, offset, :, getOffsetToAdd, (, minuendInstant, ), ), ,, subtrahendInstant, +, offset, ), ;, }, private, int]
[,, subtrahendInstant, +, offset, ), ;, }, private, int, getOffsetToAdd, (, long, instant, ), {, int, offset, =, this, .]
[), ,, subtrahendInstant, +, offset, ), ;, }, private, int, getOffsetToAdd, (, long, instant, ), {, int, offset, =, this]
[?, offset, :, getOffsetToAdd, (, minuendInstant, ), ), ,, subtrahendInstant, +, offset, ), ;, }, private, int, getOffsetToAdd, (, long]
[:, getOffsetToAdd, (, minuendInstant, ), ), ,, subtrahendInstant, +, offset, ), ;, }, private, int, getOffsetToAdd, (, long, instant, )]
[), ,, subtrahendInstant, +, offset, ), ;, }, private, int, getOffsetToAdd, (, long, instant, ), {, int, offset, =, this]
[), ), ,, subtrahendInstant, +, offset, ), ;, }, private, int, getOffsetToAdd, (, long, instant, ), {, int, offset, =]
[), ;, }, private, int, getOffsetToAdd, (, long, instant, ), {, int, offset, =, this, ., iZone, ., getOffset, (]
[+, offset, ), ;, }, private, int, getOffsetToAdd, (, long, instant, ), {, int, offset, =, this, ., iZone, .]
[), ;, }, private, int, getOffsetToAdd, (, long, instant, ), {, int, offset, =, this, ., iZone, ., getOffset, (]
[;, long, sum, =, instant, +, offset, ;, if, (, (, instant, ^, sum, ), <, 0, &&, (, instant]
[., getOffset, (, instant, ), ;, long, sum, =, instant, +, offset, ;, if, (, (, instant, ^, sum, )]
[., iZone, ., getOffset, (, instant, ), ;, long, sum, =, instant, +, offset, ;, if, (, (, instant, ^]
[), ;, long, sum, =, instant, +, offset, ;, if, (, (, instant, ^, sum, ), <, 0, &&, (]
[;, if, (, (, instant, ^, sum, ), <, 0, &&, (, instant, ^, offset, ), >=, 0, ), {]
[+, offset, ;, if, (, (, instant, ^, sum, ), <, 0, &&, (, instant, ^, offset, ), >=, 0]
[;, if, (, (, instant, ^, sum, ), <, 0, &&, (, instant, ^, offset, ), >=, 0, ), {]
[), {, throw, new, ArithmeticException, (, "Adding time zone offset caused overflow", ), ;, }, return, offset, ;, }, private, int, getOffsetFromLocalToSubtract, (, long, instant]
[&&, (, instant, ^, offset, ), >=, 0, ), {, throw, new, ArithmeticException, (, "Adding time zone offset caused overflow", ), ;, }, return, offset]
[<, 0, &&, (, instant, ^, offset, ), >=, 0, ), {, throw, new, ArithmeticException, (, "Adding time zone offset caused overflow", ), ;, }]
[), <, 0, &&, (, instant, ^, offset, ), >=, 0, ), {, throw, new, ArithmeticException, (, "Adding time zone offset caused overflow", ), ;]
[^, sum, ), <, 0, &&, (, instant, ^, offset, ), >=, 0, ), {, throw, new, ArithmeticException, (, "Adding time zone offset caused overflow"]
[), <, 0, &&, (, instant, ^, offset, ), >=, 0, ), {, throw, new, ArithmeticException, (, "Adding time zone offset caused overflow", ), ;]
[&&, (, instant, ^, offset, ), >=, 0, ), {, throw, new, ArithmeticException, (, "Adding time zone offset caused overflow", ), ;, }, return, offset]
[), {, throw, new, ArithmeticException, (, "Adding time zone offset caused overflow", ), ;, }, return, offset, ;, }, private, int, getOffsetFromLocalToSubtract, (, long, instant]
[>=, 0, ), {, throw, new, ArithmeticException, (, "Adding time zone offset caused overflow", ), ;, }, return, offset, ;, }, private, int, getOffsetFromLocalToSubtract, (]
[), >=, 0, ), {, throw, new, ArithmeticException, (, "Adding time zone offset caused overflow", ), ;, }, return, offset, ;, }, private, int, getOffsetFromLocalToSubtract]
[^, offset, ), >=, 0, ), {, throw, new, ArithmeticException, (, "Adding time zone offset caused overflow", ), ;, }, return, offset, ;, }, private]
[), >=, 0, ), {, throw, new, ArithmeticException, (, "Adding time zone offset caused overflow", ), ;, }, return, offset, ;, }, private, int, getOffsetFromLocalToSubtract]
[), {, throw, new, ArithmeticException, (, "Adding time zone offset caused overflow", ), ;, }, return, offset, ;, }, private, int, getOffsetFromLocalToSubtract, (, long, instant]
[;, }, return, offset, ;, }, private, int, getOffsetFromLocalToSubtract, (, long, instant, ), {, int, offset, =, this, ., iZone]
[), ;, }, return, offset, ;, }, private, int, getOffsetFromLocalToSubtract, (, long, instant, ), {, int, offset, =, this, .]
[;, }, private, int, getOffsetFromLocalToSubtract, (, long, instant, ), {, int, offset, =, this, ., iZone, ., getOffsetFromLocal, (, instant]
[;, long, diff, =, instant, -, offset, ;, if, (, (, instant, ^, diff, ), <, 0, &&, (, instant]
[., getOffsetFromLocal, (, instant, ), ;, long, diff, =, instant, -, offset, ;, if, (, (, instant, ^, diff, )]
[., iZone, ., getOffsetFromLocal, (, instant, ), ;, long, diff, =, instant, -, offset, ;, if, (, (, instant, ^]
[), ;, long, diff, =, instant, -, offset, ;, if, (, (, instant, ^, diff, ), <, 0, &&, (]
[;, if, (, (, instant, ^, diff, ), <, 0, &&, (, instant, ^, offset, ), <, 0, ), {]
[-, offset, ;, if, (, (, instant, ^, diff, ), <, 0, &&, (, instant, ^, offset, ), <, 0]
[;, if, (, (, instant, ^, diff, ), <, 0, &&, (, instant, ^, offset, ), <, 0, ), {]
[), {, throw, new, ArithmeticException, (, "Subtracting time zone offset caused overflow", ), ;, }, return, offset, ;, }, private, long, addOffset, (, long, instant]
[&&, (, instant, ^, offset, ), <, 0, ), {, throw, new, ArithmeticException, (, "Subtracting time zone offset caused overflow", ), ;, }, return, offset]
[<, 0, &&, (, instant, ^, offset, ), <, 0, ), {, throw, new, ArithmeticException, (, "Subtracting time zone offset caused overflow", ), ;, }]
[), <, 0, &&, (, instant, ^, offset, ), <, 0, ), {, throw, new, ArithmeticException, (, "Subtracting time zone offset caused overflow", ), ;]
[^, diff, ), <, 0, &&, (, instant, ^, offset, ), <, 0, ), {, throw, new, ArithmeticException, (, "Subtracting time zone offset caused overflow"]
[), <, 0, &&, (, instant, ^, offset, ), <, 0, ), {, throw, new, ArithmeticException, (, "Subtracting time zone offset caused overflow", ), ;]
[&&, (, instant, ^, offset, ), <, 0, ), {, throw, new, ArithmeticException, (, "Subtracting time zone offset caused overflow", ), ;, }, return, offset]
[), {, throw, new, ArithmeticException, (, "Subtracting time zone offset caused overflow", ), ;, }, return, offset, ;, }, private, long, addOffset, (, long, instant]
[<, 0, ), {, throw, new, ArithmeticException, (, "Subtracting time zone offset caused overflow", ), ;, }, return, offset, ;, }, private, long, addOffset, (]
[), <, 0, ), {, throw, new, ArithmeticException, (, "Subtracting time zone offset caused overflow", ), ;, }, return, offset, ;, }, private, long, addOffset]
[^, offset, ), <, 0, ), {, throw, new, ArithmeticException, (, "Subtracting time zone offset caused overflow", ), ;, }, return, offset, ;, }, private]
[), <, 0, ), {, throw, new, ArithmeticException, (, "Subtracting time zone offset caused overflow", ), ;, }, return, offset, ;, }, private, long, addOffset]
[), {, throw, new, ArithmeticException, (, "Subtracting time zone offset caused overflow", ), ;, }, return, offset, ;, }, private, long, addOffset, (, long, instant]
[;, }, return, offset, ;, }, private, long, addOffset, (, long, instant, ), {, return, iZone, ., convertUTCToLocal, (, instant]
[), ;, }, return, offset, ;, }, private, long, addOffset, (, long, instant, ), {, return, iZone, ., convertUTCToLocal, (]
[;, }, private, long, addOffset, (, long, instant, ), {, return, iZone, ., convertUTCToLocal, (, instant, ), ;, }, @]
[;, }, @, Override, public, boolean, equals, (, Object, obj, ), {, if, (, this, ==, obj, ), {, return]
[., convertUTCToLocal, (, instant, ), ;, }, @, Override, public, boolean, equals, (, Object, obj, ), {, if, (, this]
[), ;, }, @, Override, public, boolean, equals, (, Object, obj, ), {, if, (, this, ==, obj, ), {]
[), {, return, true, ;, }, else, if, (, obj, instanceof, ZonedDurationField, ), {, ZonedDurationField, other, =, (, ZonedDurationField, )]
[==, obj, ), {, return, true, ;, }, else, if, (, obj, instanceof, ZonedDurationField, ), {, ZonedDurationField, other, =, (]
[), {, return, true, ;, }, else, if, (, obj, instanceof, ZonedDurationField, ), {, ZonedDurationField, other, =, (, ZonedDurationField, )]
[;, }, else, if, (, obj, instanceof, ZonedDurationField, ), {, ZonedDurationField, other, =, (, ZonedDurationField, ), obj, ;, return, iField]
[), {, ZonedDurationField, other, =, (, ZonedDurationField, ), obj, ;, return, iField, ., equals, (, other, ., iField, ), &&]
[instanceof, ZonedDurationField, ), {, ZonedDurationField, other, =, (, ZonedDurationField, ), obj, ;, return, iField, ., equals, (, other, ., iField]
[;, return, iField, ., equals, (, other, ., iField, ), &&, iZone, ., equals, (, other, ., iZone, ), ;]
[;, return, iField, ., equals, (, other, ., iField, ), &&, iZone, ., equals, (, other, ., iZone, ), ;]
[;, }, return, false, ;, }, @, Override, public, int, hashCode, (, ), {, return, iField, ., hashCode, (, )]
[&&, iZone, ., equals, (, other, ., iZone, ), ;, }, return, false, ;, }, @, Override, public, int, hashCode]
[., equals, (, other, ., iField, ), &&, iZone, ., equals, (, other, ., iZone, ), ;, }, return, false]
[), &&, iZone, ., equals, (, other, ., iZone, ), ;, }, return, false, ;, }, @, Override, public, int]
[., iField, ), &&, iZone, ., equals, (, other, ., iZone, ), ;, }, return, false, ;, }, @, Override]
[;, }, return, false, ;, }, @, Override, public, int, hashCode, (, ), {, return, iField, ., hashCode, (, )]
[., equals, (, other, ., iZone, ), ;, }, return, false, ;, }, @, Override, public, int, hashCode, (, )]
[), ;, }, return, false, ;, }, @, Override, public, int, hashCode, (, ), {, return, iField, ., hashCode, (]
[., iZone, ), ;, }, return, false, ;, }, @, Override, public, int, hashCode, (, ), {, return, iField, .]
[;, }, @, Override, public, int, hashCode, (, ), {, return, iField, ., hashCode, (, ), ^, iZone, ., hashCode]
[;, }, }, static, final, class, ZonedDateTimeField, extends, BaseDateTimeField, {, @, SuppressWarnings, (, "unused", ), private, static, final, long, serialVersionUID]
[^, iZone, ., hashCode, (, ), ;, }, }, static, final, class, ZonedDateTimeField, extends, BaseDateTimeField, {, @, SuppressWarnings, (, "unused"]
[., hashCode, (, ), ^, iZone, ., hashCode, (, ), ;, }, }, static, final, class, ZonedDateTimeField, extends, BaseDateTimeField, {]
[;, }, }, static, final, class, ZonedDateTimeField, extends, BaseDateTimeField, {, @, SuppressWarnings, (, "unused", ), private, static, final, long, serialVersionUID]
[., hashCode, (, ), ;, }, }, static, final, class, ZonedDateTimeField, extends, BaseDateTimeField, {, @, SuppressWarnings, (, "unused", ), private]
[private, static, final, long, serialVersionUID, =, -, 3968986277775529794L, ;, final, DateTimeField, iField, ;, final, DateTimeZone, iZone, ;, final, DurationField, iDurationField]
[), private, static, final, long, serialVersionUID, =, -, 3968986277775529794L, ;, final, DateTimeField, iField, ;, final, DateTimeZone, iZone, ;, final, DurationField]
[;, final, DateTimeField, iField, ;, final, DateTimeZone, iZone, ;, final, DurationField, iDurationField, ;, final, boolean, iTimeField, ;, final, DurationField, iRangeDurationField]
[;, final, DateTimeField, iField, ;, final, DateTimeZone, iZone, ;, final, DurationField, iDurationField, ;, final, boolean, iTimeField, ;, final, DurationField, iRangeDurationField]
[), ;, if, (, !, field, ., isSupported, (, ), ), {, throw, new, IllegalArgumentException, (, ), ;, }, iField]
[., getType, (, ), ), ;, if, (, !, field, ., isSupported, (, ), ), {, throw, new, IllegalArgumentException, (]
[), {, throw, new, IllegalArgumentException, (, ), ;, }, iField, =, field, ;, iZone, =, zone, ;, iDurationField, =, durationField]
[), {, throw, new, IllegalArgumentException, (, ), ;, }, iField, =, field, ;, iZone, =, zone, ;, iDurationField, =, durationField]
[., isSupported, (, ), ), {, throw, new, IllegalArgumentException, (, ), ;, }, iField, =, field, ;, iZone, =, zone]
[;, }, iField, =, field, ;, iZone, =, zone, ;, iDurationField, =, durationField, ;, iTimeField, =, useTimeArithmetic, (, durationField, )]
[=, field, ;, iZone, =, zone, ;, iDurationField, =, durationField, ;, iTimeField, =, useTimeArithmetic, (, durationField, ), ;, iRangeDurationField, =]
[;, iZone, =, zone, ;, iDurationField, =, durationField, ;, iTimeField, =, useTimeArithmetic, (, durationField, ), ;, iRangeDurationField, =, rangeDurationField, ;]
[=, zone, ;, iDurationField, =, durationField, ;, iTimeField, =, useTimeArithmetic, (, durationField, ), ;, iRangeDurationField, =, rangeDurationField, ;, iLeapDurationField, =]
[;, iDurationField, =, durationField, ;, iTimeField, =, useTimeArithmetic, (, durationField, ), ;, iRangeDurationField, =, rangeDurationField, ;, iLeapDurationField, =, leapDurationField, ;]
[=, durationField, ;, iTimeField, =, useTimeArithmetic, (, durationField, ), ;, iRangeDurationField, =, rangeDurationField, ;, iLeapDurationField, =, leapDurationField, ;, }, public]
[;, iTimeField, =, useTimeArithmetic, (, durationField, ), ;, iRangeDurationField, =, rangeDurationField, ;, iLeapDurationField, =, leapDurationField, ;, }, public, boolean, isLenient]
[=, useTimeArithmetic, (, durationField, ), ;, iRangeDurationField, =, rangeDurationField, ;, iLeapDurationField, =, leapDurationField, ;, }, public, boolean, isLenient, (, )]
[;, iRangeDurationField, =, rangeDurationField, ;, iLeapDurationField, =, leapDurationField, ;, }, public, boolean, isLenient, (, ), {, return, iField, ., isLenient]
[), ;, iRangeDurationField, =, rangeDurationField, ;, iLeapDurationField, =, leapDurationField, ;, }, public, boolean, isLenient, (, ), {, return, iField, .]
[=, rangeDurationField, ;, iLeapDurationField, =, leapDurationField, ;, }, public, boolean, isLenient, (, ), {, return, iField, ., isLenient, (, )]
[;, iLeapDurationField, =, leapDurationField, ;, }, public, boolean, isLenient, (, ), {, return, iField, ., isLenient, (, ), ;, }]
[=, leapDurationField, ;, }, public, boolean, isLenient, (, ), {, return, iField, ., isLenient, (, ), ;, }, public, int]
[;, }, public, boolean, isLenient, (, ), {, return, iField, ., isLenient, (, ), ;, }, public, int, get, (]
[;, }, public, int, get, (, long, instant, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;]
[., isLenient, (, ), ;, }, public, int, get, (, long, instant, ), {, long, localInstant, =, iZone, ., convertUTCToLocal]
[;, return, iField, ., get, (, localInstant, ), ;, }, public, String, getAsText, (, long, instant, ,, Locale, locale, )]
[., convertUTCToLocal, (, instant, ), ;, return, iField, ., get, (, localInstant, ), ;, }, public, String, getAsText, (, long]
[), ;, return, iField, ., get, (, localInstant, ), ;, }, public, String, getAsText, (, long, instant, ,, Locale, locale]
[;, }, public, String, getAsText, (, long, instant, ,, Locale, locale, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (]
[., get, (, localInstant, ), ;, }, public, String, getAsText, (, long, instant, ,, Locale, locale, ), {, long, localInstant]
[), ;, }, public, String, getAsText, (, long, instant, ,, Locale, locale, ), {, long, localInstant, =, iZone, ., convertUTCToLocal]
[;, return, iField, ., getAsText, (, localInstant, ,, locale, ), ;, }, public, String, getAsShortText, (, long, instant, ,, Locale]
[., convertUTCToLocal, (, instant, ), ;, return, iField, ., getAsText, (, localInstant, ,, locale, ), ;, }, public, String, getAsShortText]
[), ;, return, iField, ., getAsText, (, localInstant, ,, locale, ), ;, }, public, String, getAsShortText, (, long, instant, ,]
[;, }, public, String, getAsShortText, (, long, instant, ,, Locale, locale, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (]
[., getAsText, (, localInstant, ,, locale, ), ;, }, public, String, getAsShortText, (, long, instant, ,, Locale, locale, ), {]
[,, locale, ), ;, }, public, String, getAsShortText, (, long, instant, ,, Locale, locale, ), {, long, localInstant, =, iZone]
[), ;, }, public, String, getAsShortText, (, long, instant, ,, Locale, locale, ), {, long, localInstant, =, iZone, ., convertUTCToLocal]
[;, return, iField, ., getAsShortText, (, localInstant, ,, locale, ), ;, }, public, String, getAsText, (, int, fieldValue, ,, Locale]
[., convertUTCToLocal, (, instant, ), ;, return, iField, ., getAsShortText, (, localInstant, ,, locale, ), ;, }, public, String, getAsText]
[), ;, return, iField, ., getAsShortText, (, localInstant, ,, locale, ), ;, }, public, String, getAsText, (, int, fieldValue, ,]
[;, }, public, String, getAsText, (, int, fieldValue, ,, Locale, locale, ), {, return, iField, ., getAsText, (, fieldValue, ,]
[., getAsShortText, (, localInstant, ,, locale, ), ;, }, public, String, getAsText, (, int, fieldValue, ,, Locale, locale, ), {]
[,, locale, ), ;, }, public, String, getAsText, (, int, fieldValue, ,, Locale, locale, ), {, return, iField, ., getAsText]
[), ;, }, public, String, getAsText, (, int, fieldValue, ,, Locale, locale, ), {, return, iField, ., getAsText, (, fieldValue]
[;, }, public, String, getAsShortText, (, int, fieldValue, ,, Locale, locale, ), {, return, iField, ., getAsShortText, (, fieldValue, ,]
[., getAsText, (, fieldValue, ,, locale, ), ;, }, public, String, getAsShortText, (, int, fieldValue, ,, Locale, locale, ), {]
[,, locale, ), ;, }, public, String, getAsShortText, (, int, fieldValue, ,, Locale, locale, ), {, return, iField, ., getAsShortText]
[), ;, }, public, String, getAsShortText, (, int, fieldValue, ,, Locale, locale, ), {, return, iField, ., getAsShortText, (, fieldValue]
[;, }, public, long, add, (, long, instant, ,, int, value, ), {, if, (, iTimeField, ), {, int, offset]
[., getAsShortText, (, fieldValue, ,, locale, ), ;, }, public, long, add, (, long, instant, ,, int, value, ), {]
[,, locale, ), ;, }, public, long, add, (, long, instant, ,, int, value, ), {, if, (, iTimeField, )]
[), ;, }, public, long, add, (, long, instant, ,, int, value, ), {, if, (, iTimeField, ), {, int]
[), {, int, offset, =, getOffsetToAdd, (, instant, ), ;, long, localInstant, =, iField, ., add, (, instant, +, offset]
[;, long, localInstant, =, iField, ., add, (, instant, +, offset, ,, value, ), ;, return, localInstant, -, offset, ;]
[), ;, long, localInstant, =, iField, ., add, (, instant, +, offset, ,, value, ), ;, return, localInstant, -, offset]
[;, return, localInstant, -, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant]
[., add, (, instant, +, offset, ,, value, ), ;, return, localInstant, -, offset, ;, }, else, {, long, localInstant]
[,, value, ), ;, return, localInstant, -, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant]
[+, offset, ,, value, ), ;, return, localInstant, -, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal]
[,, value, ), ;, return, localInstant, -, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant]
[), ;, return, localInstant, -, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;]
[;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, ., add, (]
[-, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, .]
[;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, ., add, (]
[;, localInstant, =, iField, ., add, (, localInstant, ,, value, ), ;, return, iZone, ., convertLocalToUTC, (, localInstant, ,, false]
[., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, ., add, (, localInstant, ,, value, ), ;, return, iZone, .]
[), ;, localInstant, =, iField, ., add, (, localInstant, ,, value, ), ;, return, iZone, ., convertLocalToUTC, (, localInstant, ,]
[=, iField, ., add, (, localInstant, ,, value, ), ;, return, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,, instant]
[;, return, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,, instant, ), ;, }, }, public, long, add, (, long]
[., add, (, localInstant, ,, value, ), ;, return, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,, instant, ), ;]
[,, value, ), ;, return, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,, instant, ), ;, }, }, public, long]
[), ;, return, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,, instant, ), ;, }, }, public, long, add, (]
[;, }, }, public, long, add, (, long, instant, ,, long, value, ), {, if, (, iTimeField, ), {, int]
[., convertLocalToUTC, (, localInstant, ,, false, ,, instant, ), ;, }, }, public, long, add, (, long, instant, ,, long]
[,, false, ,, instant, ), ;, }, }, public, long, add, (, long, instant, ,, long, value, ), {, if]
[,, instant, ), ;, }, }, public, long, add, (, long, instant, ,, long, value, ), {, if, (, iTimeField]
[), ;, }, }, public, long, add, (, long, instant, ,, long, value, ), {, if, (, iTimeField, ), {]
[), {, int, offset, =, getOffsetToAdd, (, instant, ), ;, long, localInstant, =, iField, ., add, (, instant, +, offset]
[;, long, localInstant, =, iField, ., add, (, instant, +, offset, ,, value, ), ;, return, localInstant, -, offset, ;]
[), ;, long, localInstant, =, iField, ., add, (, instant, +, offset, ,, value, ), ;, return, localInstant, -, offset]
[;, return, localInstant, -, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant]
[., add, (, instant, +, offset, ,, value, ), ;, return, localInstant, -, offset, ;, }, else, {, long, localInstant]
[,, value, ), ;, return, localInstant, -, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant]
[+, offset, ,, value, ), ;, return, localInstant, -, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal]
[,, value, ), ;, return, localInstant, -, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant]
[), ;, return, localInstant, -, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;]
[;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, ., add, (]
[-, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, .]
[;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, ., add, (]
[;, localInstant, =, iField, ., add, (, localInstant, ,, value, ), ;, return, iZone, ., convertLocalToUTC, (, localInstant, ,, false]
[., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, ., add, (, localInstant, ,, value, ), ;, return, iZone, .]
[), ;, localInstant, =, iField, ., add, (, localInstant, ,, value, ), ;, return, iZone, ., convertLocalToUTC, (, localInstant, ,]
[=, iField, ., add, (, localInstant, ,, value, ), ;, return, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,, instant]
[;, return, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,, instant, ), ;, }, }, public, long, addWrapField, (, long]
[., add, (, localInstant, ,, value, ), ;, return, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,, instant, ), ;]
[,, value, ), ;, return, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,, instant, ), ;, }, }, public, long]
[), ;, return, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,, instant, ), ;, }, }, public, long, addWrapField, (]
[;, }, }, public, long, addWrapField, (, long, instant, ,, int, value, ), {, if, (, iTimeField, ), {, int]
[., convertLocalToUTC, (, localInstant, ,, false, ,, instant, ), ;, }, }, public, long, addWrapField, (, long, instant, ,, int]
[,, false, ,, instant, ), ;, }, }, public, long, addWrapField, (, long, instant, ,, int, value, ), {, if]
[,, instant, ), ;, }, }, public, long, addWrapField, (, long, instant, ,, int, value, ), {, if, (, iTimeField]
[), ;, }, }, public, long, addWrapField, (, long, instant, ,, int, value, ), {, if, (, iTimeField, ), {]
[), {, int, offset, =, getOffsetToAdd, (, instant, ), ;, long, localInstant, =, iField, ., addWrapField, (, instant, +, offset]
[;, long, localInstant, =, iField, ., addWrapField, (, instant, +, offset, ,, value, ), ;, return, localInstant, -, offset, ;]
[), ;, long, localInstant, =, iField, ., addWrapField, (, instant, +, offset, ,, value, ), ;, return, localInstant, -, offset]
[;, return, localInstant, -, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant]
[., addWrapField, (, instant, +, offset, ,, value, ), ;, return, localInstant, -, offset, ;, }, else, {, long, localInstant]
[,, value, ), ;, return, localInstant, -, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant]
[+, offset, ,, value, ), ;, return, localInstant, -, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal]
[,, value, ), ;, return, localInstant, -, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant]
[), ;, return, localInstant, -, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;]
[;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, ., addWrapField, (]
[-, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, .]
[;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, ., addWrapField, (]
[;, localInstant, =, iField, ., addWrapField, (, localInstant, ,, value, ), ;, return, iZone, ., convertLocalToUTC, (, localInstant, ,, false]
[., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, ., addWrapField, (, localInstant, ,, value, ), ;, return, iZone, .]
[), ;, localInstant, =, iField, ., addWrapField, (, localInstant, ,, value, ), ;, return, iZone, ., convertLocalToUTC, (, localInstant, ,]
[=, iField, ., addWrapField, (, localInstant, ,, value, ), ;, return, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,, instant]
[;, return, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,, instant, ), ;, }, }, public, long, set, (, long]
[., addWrapField, (, localInstant, ,, value, ), ;, return, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,, instant, ), ;]
[,, value, ), ;, return, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,, instant, ), ;, }, }, public, long]
[), ;, return, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,, instant, ), ;, }, }, public, long, set, (]
[;, }, }, public, long, set, (, long, instant, ,, int, value, ), {, long, localInstant, =, iZone, ., convertUTCToLocal]
[., convertLocalToUTC, (, localInstant, ,, false, ,, instant, ), ;, }, }, public, long, set, (, long, instant, ,, int]
[,, false, ,, instant, ), ;, }, }, public, long, set, (, long, instant, ,, int, value, ), {, long]
[,, instant, ), ;, }, }, public, long, set, (, long, instant, ,, int, value, ), {, long, localInstant, =]
[), ;, }, }, public, long, set, (, long, instant, ,, int, value, ), {, long, localInstant, =, iZone, .]
[;, localInstant, =, iField, ., set, (, localInstant, ,, value, ), ;, long, result, =, iZone, ., convertLocalToUTC, (, localInstant]
[., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, ., set, (, localInstant, ,, value, ), ;, long, result, =]
[), ;, localInstant, =, iField, ., set, (, localInstant, ,, value, ), ;, long, result, =, iZone, ., convertLocalToUTC, (]
[=, iField, ., set, (, localInstant, ,, value, ), ;, long, result, =, iZone, ., convertLocalToUTC, (, localInstant, ,, false]
[;, long, result, =, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,, instant, ), ;, if, (, get, (, result]
[., set, (, localInstant, ,, value, ), ;, long, result, =, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,, instant]
[,, value, ), ;, long, result, =, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,, instant, ), ;, if, (]
[), ;, long, result, =, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,, instant, ), ;, if, (, get, (]
[;, if, (, get, (, result, ), !=, value, ), {, IllegalInstantException, cause, =, new, IllegalInstantException, (, localInstant, ,, iZone]
[., convertLocalToUTC, (, localInstant, ,, false, ,, instant, ), ;, if, (, get, (, result, ), !=, value, ), {]
[,, false, ,, instant, ), ;, if, (, get, (, result, ), !=, value, ), {, IllegalInstantException, cause, =, new]
[,, instant, ), ;, if, (, get, (, result, ), !=, value, ), {, IllegalInstantException, cause, =, new, IllegalInstantException, (]
[), ;, if, (, get, (, result, ), !=, value, ), {, IllegalInstantException, cause, =, new, IllegalInstantException, (, localInstant, ,]
[), {, IllegalInstantException, cause, =, new, IllegalInstantException, (, localInstant, ,, iZone, ., getID, (, ), ), ;, IllegalFieldValueException, ex, =]
[!=, value, ), {, IllegalInstantException, cause, =, new, IllegalInstantException, (, localInstant, ,, iZone, ., getID, (, ), ), ;, IllegalFieldValueException]
[), !=, value, ), {, IllegalInstantException, cause, =, new, IllegalInstantException, (, localInstant, ,, iZone, ., getID, (, ), ), ;]
[), {, IllegalInstantException, cause, =, new, IllegalInstantException, (, localInstant, ,, iZone, ., getID, (, ), ), ;, IllegalFieldValueException, ex, =]
[;, IllegalFieldValueException, ex, =, new, IllegalFieldValueException, (, iField, ., getType, (, ), ,, Integer, ., valueOf, (, value, ), ,]
[,, iZone, ., getID, (, ), ), ;, IllegalFieldValueException, ex, =, new, IllegalFieldValueException, (, iField, ., getType, (, ), ,]
[), ;, IllegalFieldValueException, ex, =, new, IllegalFieldValueException, (, iField, ., getType, (, ), ,, Integer, ., valueOf, (, value, )]
[., getID, (, ), ), ;, IllegalFieldValueException, ex, =, new, IllegalFieldValueException, (, iField, ., getType, (, ), ,, Integer, .]
[;, ex, ., initCause, (, cause, ), ;, throw, ex, ;, }, return, result, ;, }, public, long, set, (]
[,, Integer, ., valueOf, (, value, ), ,, cause, ., getMessage, (, ), ), ;, ex, ., initCause, (, cause]
[., getType, (, ), ,, Integer, ., valueOf, (, value, ), ,, cause, ., getMessage, (, ), ), ;, ex]
[,, cause, ., getMessage, (, ), ), ;, ex, ., initCause, (, cause, ), ;, throw, ex, ;, }, return]
[., valueOf, (, value, ), ,, cause, ., getMessage, (, ), ), ;, ex, ., initCause, (, cause, ), ;]
[), ,, cause, ., getMessage, (, ), ), ;, ex, ., initCause, (, cause, ), ;, throw, ex, ;, }]
[), ;, ex, ., initCause, (, cause, ), ;, throw, ex, ;, }, return, result, ;, }, public, long, set]
[., getMessage, (, ), ), ;, ex, ., initCause, (, cause, ), ;, throw, ex, ;, }, return, result, ;]
[;, throw, ex, ;, }, return, result, ;, }, public, long, set, (, long, instant, ,, String, text, ,, Locale]
[., initCause, (, cause, ), ;, throw, ex, ;, }, return, result, ;, }, public, long, set, (, long, instant]
[), ;, throw, ex, ;, }, return, result, ;, }, public, long, set, (, long, instant, ,, String, text, ,]
[;, }, return, result, ;, }, public, long, set, (, long, instant, ,, String, text, ,, Locale, locale, ), {]
[;, }, public, long, set, (, long, instant, ,, String, text, ,, Locale, locale, ), {, long, localInstant, =, iZone]
[;, localInstant, =, iField, ., set, (, localInstant, ,, text, ,, locale, ), ;, return, iZone, ., convertLocalToUTC, (, localInstant]
[., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, ., set, (, localInstant, ,, text, ,, locale, ), ;, return]
[), ;, localInstant, =, iField, ., set, (, localInstant, ,, text, ,, locale, ), ;, return, iZone, ., convertLocalToUTC, (]
[=, iField, ., set, (, localInstant, ,, text, ,, locale, ), ;, return, iZone, ., convertLocalToUTC, (, localInstant, ,, false]
[;, return, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,, instant, ), ;, }, public, int, getDifference, (, long, minuendInstant]
[., set, (, localInstant, ,, text, ,, locale, ), ;, return, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,, instant]
[,, text, ,, locale, ), ;, return, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,, instant, ), ;, }, public]
[,, locale, ), ;, return, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,, instant, ), ;, }, public, int, getDifference]
[), ;, return, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,, instant, ), ;, }, public, int, getDifference, (, long]
[;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd, (, subtrahendInstant, )]
[., convertLocalToUTC, (, localInstant, ,, false, ,, instant, ), ;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant]
[,, false, ,, instant, ), ;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, int, offset]
[,, instant, ), ;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd]
[), ;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd, (, subtrahendInstant]
[;, return, iField, ., getDifference, (, minuendInstant, +, (, iTimeField, ?, offset, :, getOffsetToAdd, (, minuendInstant, ), ), ,, subtrahendInstant]
[), ;, return, iField, ., getDifference, (, minuendInstant, +, (, iTimeField, ?, offset, :, getOffsetToAdd, (, minuendInstant, ), ), ,]
[;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd, (, subtrahendInstant, )]
[., getDifference, (, minuendInstant, +, (, iTimeField, ?, offset, :, getOffsetToAdd, (, minuendInstant, ), ), ,, subtrahendInstant, +, offset, )]
[,, subtrahendInstant, +, offset, ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, int, offset]
[+, (, iTimeField, ?, offset, :, getOffsetToAdd, (, minuendInstant, ), ), ,, subtrahendInstant, +, offset, ), ;, }, public, long]
[,, subtrahendInstant, +, offset, ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, int, offset]
[), ,, subtrahendInstant, +, offset, ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, int]
[?, offset, :, getOffsetToAdd, (, minuendInstant, ), ), ,, subtrahendInstant, +, offset, ), ;, }, public, long, getDifferenceAsLong, (, long]
[:, getOffsetToAdd, (, minuendInstant, ), ), ,, subtrahendInstant, +, offset, ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,]
[), ,, subtrahendInstant, +, offset, ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, int]
[), ), ,, subtrahendInstant, +, offset, ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {]
[), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd, (, subtrahendInstant]
[+, offset, ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd]
[), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd, (, subtrahendInstant]
[;, return, iField, ., getDifferenceAsLong, (, minuendInstant, +, (, iTimeField, ?, offset, :, getOffsetToAdd, (, minuendInstant, ), ), ,, subtrahendInstant]
[), ;, return, iField, ., getDifferenceAsLong, (, minuendInstant, +, (, iTimeField, ?, offset, :, getOffsetToAdd, (, minuendInstant, ), ), ,]
[;, }, public, final, DurationField, getDurationField, (, ), {, return, iDurationField, ;, }, public, final, DurationField, getRangeDurationField, (, ), {]
[., getDifferenceAsLong, (, minuendInstant, +, (, iTimeField, ?, offset, :, getOffsetToAdd, (, minuendInstant, ), ), ,, subtrahendInstant, +, offset, )]
[,, subtrahendInstant, +, offset, ), ;, }, public, final, DurationField, getDurationField, (, ), {, return, iDurationField, ;, }, public, final]
[+, (, iTimeField, ?, offset, :, getOffsetToAdd, (, minuendInstant, ), ), ,, subtrahendInstant, +, offset, ), ;, }, public, final]
[,, subtrahendInstant, +, offset, ), ;, }, public, final, DurationField, getDurationField, (, ), {, return, iDurationField, ;, }, public, final]
[), ,, subtrahendInstant, +, offset, ), ;, }, public, final, DurationField, getDurationField, (, ), {, return, iDurationField, ;, }, public]
[?, offset, :, getOffsetToAdd, (, minuendInstant, ), ), ,, subtrahendInstant, +, offset, ), ;, }, public, final, DurationField, getDurationField, (]
[:, getOffsetToAdd, (, minuendInstant, ), ), ,, subtrahendInstant, +, offset, ), ;, }, public, final, DurationField, getDurationField, (, ), {]
[), ,, subtrahendInstant, +, offset, ), ;, }, public, final, DurationField, getDurationField, (, ), {, return, iDurationField, ;, }, public]
[), ), ,, subtrahendInstant, +, offset, ), ;, }, public, final, DurationField, getDurationField, (, ), {, return, iDurationField, ;, }]
[), ;, }, public, final, DurationField, getDurationField, (, ), {, return, iDurationField, ;, }, public, final, DurationField, getRangeDurationField, (, )]
[+, offset, ), ;, }, public, final, DurationField, getDurationField, (, ), {, return, iDurationField, ;, }, public, final, DurationField, getRangeDurationField]
[), ;, }, public, final, DurationField, getDurationField, (, ), {, return, iDurationField, ;, }, public, final, DurationField, getRangeDurationField, (, )]
[;, }, public, final, DurationField, getRangeDurationField, (, ), {, return, iRangeDurationField, ;, }, public, boolean, isLeap, (, long, instant, )]
[;, }, public, boolean, isLeap, (, long, instant, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;]
[;, return, iField, ., isLeap, (, localInstant, ), ;, }, public, int, getLeapAmount, (, long, instant, ), {, long, localInstant]
[., convertUTCToLocal, (, instant, ), ;, return, iField, ., isLeap, (, localInstant, ), ;, }, public, int, getLeapAmount, (, long]
[), ;, return, iField, ., isLeap, (, localInstant, ), ;, }, public, int, getLeapAmount, (, long, instant, ), {, long]
[;, }, public, int, getLeapAmount, (, long, instant, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;]
[., isLeap, (, localInstant, ), ;, }, public, int, getLeapAmount, (, long, instant, ), {, long, localInstant, =, iZone, .]
[), ;, }, public, int, getLeapAmount, (, long, instant, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, )]
[;, return, iField, ., getLeapAmount, (, localInstant, ), ;, }, public, final, DurationField, getLeapDurationField, (, ), {, return, iLeapDurationField, ;]
[., convertUTCToLocal, (, instant, ), ;, return, iField, ., getLeapAmount, (, localInstant, ), ;, }, public, final, DurationField, getLeapDurationField, (]
[), ;, return, iField, ., getLeapAmount, (, localInstant, ), ;, }, public, final, DurationField, getLeapDurationField, (, ), {, return, iLeapDurationField]
[;, }, public, final, DurationField, getLeapDurationField, (, ), {, return, iLeapDurationField, ;, }, public, long, roundFloor, (, long, instant, )]
[., getLeapAmount, (, localInstant, ), ;, }, public, final, DurationField, getLeapDurationField, (, ), {, return, iLeapDurationField, ;, }, public, long]
[), ;, }, public, final, DurationField, getLeapDurationField, (, ), {, return, iLeapDurationField, ;, }, public, long, roundFloor, (, long, instant]
[;, }, public, long, roundFloor, (, long, instant, ), {, if, (, iTimeField, ), {, int, offset, =, getOffsetToAdd, (]
[), {, int, offset, =, getOffsetToAdd, (, instant, ), ;, instant, =, iField, ., roundFloor, (, instant, +, offset, )]
[;, instant, =, iField, ., roundFloor, (, instant, +, offset, ), ;, return, instant, -, offset, ;, }, else, {]
[), ;, instant, =, iField, ., roundFloor, (, instant, +, offset, ), ;, return, instant, -, offset, ;, }, else]
[=, iField, ., roundFloor, (, instant, +, offset, ), ;, return, instant, -, offset, ;, }, else, {, long, localInstant]
[;, return, instant, -, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant]
[., roundFloor, (, instant, +, offset, ), ;, return, instant, -, offset, ;, }, else, {, long, localInstant, =, iZone]
[), ;, return, instant, -, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;]
[+, offset, ), ;, return, instant, -, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant]
[), ;, return, instant, -, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;]
[;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, ., roundFloor, (]
[-, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, .]
[;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, ., roundFloor, (]
[;, localInstant, =, iField, ., roundFloor, (, localInstant, ), ;, return, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,, instant]
[., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, ., roundFloor, (, localInstant, ), ;, return, iZone, ., convertLocalToUTC, (]
[), ;, localInstant, =, iField, ., roundFloor, (, localInstant, ), ;, return, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,]
[=, iField, ., roundFloor, (, localInstant, ), ;, return, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,, instant, ), ;]
[;, return, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,, instant, ), ;, }, }, public, long, roundCeiling, (, long]
[., roundFloor, (, localInstant, ), ;, return, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,, instant, ), ;, }, }]
[), ;, return, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,, instant, ), ;, }, }, public, long, roundCeiling, (]
[;, }, }, public, long, roundCeiling, (, long, instant, ), {, if, (, iTimeField, ), {, int, offset, =, getOffsetToAdd]
[., convertLocalToUTC, (, localInstant, ,, false, ,, instant, ), ;, }, }, public, long, roundCeiling, (, long, instant, ), {]
[,, false, ,, instant, ), ;, }, }, public, long, roundCeiling, (, long, instant, ), {, if, (, iTimeField, )]
[,, instant, ), ;, }, }, public, long, roundCeiling, (, long, instant, ), {, if, (, iTimeField, ), {, int]
[), ;, }, }, public, long, roundCeiling, (, long, instant, ), {, if, (, iTimeField, ), {, int, offset, =]
[), {, int, offset, =, getOffsetToAdd, (, instant, ), ;, instant, =, iField, ., roundCeiling, (, instant, +, offset, )]
[;, instant, =, iField, ., roundCeiling, (, instant, +, offset, ), ;, return, instant, -, offset, ;, }, else, {]
[), ;, instant, =, iField, ., roundCeiling, (, instant, +, offset, ), ;, return, instant, -, offset, ;, }, else]
[=, iField, ., roundCeiling, (, instant, +, offset, ), ;, return, instant, -, offset, ;, }, else, {, long, localInstant]
[;, return, instant, -, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant]
[., roundCeiling, (, instant, +, offset, ), ;, return, instant, -, offset, ;, }, else, {, long, localInstant, =, iZone]
[), ;, return, instant, -, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;]
[+, offset, ), ;, return, instant, -, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant]
[), ;, return, instant, -, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;]
[;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, ., roundCeiling, (]
[-, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, .]
[;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, ., roundCeiling, (]
[;, localInstant, =, iField, ., roundCeiling, (, localInstant, ), ;, return, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,, instant]
[., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, ., roundCeiling, (, localInstant, ), ;, return, iZone, ., convertLocalToUTC, (]
[), ;, localInstant, =, iField, ., roundCeiling, (, localInstant, ), ;, return, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,]
[=, iField, ., roundCeiling, (, localInstant, ), ;, return, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,, instant, ), ;]
[;, return, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,, instant, ), ;, }, }, public, long, remainder, (, long]
[., roundCeiling, (, localInstant, ), ;, return, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,, instant, ), ;, }, }]
[), ;, return, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,, instant, ), ;, }, }, public, long, remainder, (]
[;, }, }, public, long, remainder, (, long, instant, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, )]
[., convertLocalToUTC, (, localInstant, ,, false, ,, instant, ), ;, }, }, public, long, remainder, (, long, instant, ), {]
[,, false, ,, instant, ), ;, }, }, public, long, remainder, (, long, instant, ), {, long, localInstant, =, iZone]
[,, instant, ), ;, }, }, public, long, remainder, (, long, instant, ), {, long, localInstant, =, iZone, ., convertUTCToLocal]
[), ;, }, }, public, long, remainder, (, long, instant, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant]
[;, return, iField, ., remainder, (, localInstant, ), ;, }, public, int, getMinimumValue, (, ), {, return, iField, ., getMinimumValue]
[., convertUTCToLocal, (, instant, ), ;, return, iField, ., remainder, (, localInstant, ), ;, }, public, int, getMinimumValue, (, )]
[), ;, return, iField, ., remainder, (, localInstant, ), ;, }, public, int, getMinimumValue, (, ), {, return, iField, .]
[;, }, public, int, getMinimumValue, (, ), {, return, iField, ., getMinimumValue, (, ), ;, }, public, int, getMinimumValue, (]
[., remainder, (, localInstant, ), ;, }, public, int, getMinimumValue, (, ), {, return, iField, ., getMinimumValue, (, ), ;]
[), ;, }, public, int, getMinimumValue, (, ), {, return, iField, ., getMinimumValue, (, ), ;, }, public, int, getMinimumValue]
[;, }, public, int, getMinimumValue, (, long, instant, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;]
[., getMinimumValue, (, ), ;, }, public, int, getMinimumValue, (, long, instant, ), {, long, localInstant, =, iZone, ., convertUTCToLocal]
[;, return, iField, ., getMinimumValue, (, localInstant, ), ;, }, public, int, getMinimumValue, (, ReadablePartial, instant, ), {, return, iField]
[., convertUTCToLocal, (, instant, ), ;, return, iField, ., getMinimumValue, (, localInstant, ), ;, }, public, int, getMinimumValue, (, ReadablePartial]
[), ;, return, iField, ., getMinimumValue, (, localInstant, ), ;, }, public, int, getMinimumValue, (, ReadablePartial, instant, ), {, return]
[;, }, public, int, getMinimumValue, (, ReadablePartial, instant, ), {, return, iField, ., getMinimumValue, (, instant, ), ;, }, public]
[., getMinimumValue, (, localInstant, ), ;, }, public, int, getMinimumValue, (, ReadablePartial, instant, ), {, return, iField, ., getMinimumValue, (]
[), ;, }, public, int, getMinimumValue, (, ReadablePartial, instant, ), {, return, iField, ., getMinimumValue, (, instant, ), ;, }]
[;, }, public, int, getMinimumValue, (, ReadablePartial, instant, ,, int, [, ], values, ), {, return, iField, ., getMinimumValue, (]
[., getMinimumValue, (, instant, ), ;, }, public, int, getMinimumValue, (, ReadablePartial, instant, ,, int, [, ], values, ), {]
[), ;, }, public, int, getMinimumValue, (, ReadablePartial, instant, ,, int, [, ], values, ), {, return, iField, ., getMinimumValue]
[;, }, public, int, getMaximumValue, (, ), {, return, iField, ., getMaximumValue, (, ), ;, }, public, int, getMaximumValue, (]
[., getMinimumValue, (, instant, ,, values, ), ;, }, public, int, getMaximumValue, (, ), {, return, iField, ., getMaximumValue, (]
[,, values, ), ;, }, public, int, getMaximumValue, (, ), {, return, iField, ., getMaximumValue, (, ), ;, }, public]
[), ;, }, public, int, getMaximumValue, (, ), {, return, iField, ., getMaximumValue, (, ), ;, }, public, int, getMaximumValue]
[;, }, public, int, getMaximumValue, (, long, instant, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;]
[., getMaximumValue, (, ), ;, }, public, int, getMaximumValue, (, long, instant, ), {, long, localInstant, =, iZone, ., convertUTCToLocal]
[;, return, iField, ., getMaximumValue, (, localInstant, ), ;, }, public, int, getMaximumValue, (, ReadablePartial, instant, ), {, return, iField]
[., convertUTCToLocal, (, instant, ), ;, return, iField, ., getMaximumValue, (, localInstant, ), ;, }, public, int, getMaximumValue, (, ReadablePartial]
[), ;, return, iField, ., getMaximumValue, (, localInstant, ), ;, }, public, int, getMaximumValue, (, ReadablePartial, instant, ), {, return]
[;, }, public, int, getMaximumValue, (, ReadablePartial, instant, ), {, return, iField, ., getMaximumValue, (, instant, ), ;, }, public]
[., getMaximumValue, (, localInstant, ), ;, }, public, int, getMaximumValue, (, ReadablePartial, instant, ), {, return, iField, ., getMaximumValue, (]
[), ;, }, public, int, getMaximumValue, (, ReadablePartial, instant, ), {, return, iField, ., getMaximumValue, (, instant, ), ;, }]
[;, }, public, int, getMaximumValue, (, ReadablePartial, instant, ,, int, [, ], values, ), {, return, iField, ., getMaximumValue, (]
[., getMaximumValue, (, instant, ), ;, }, public, int, getMaximumValue, (, ReadablePartial, instant, ,, int, [, ], values, ), {]
[), ;, }, public, int, getMaximumValue, (, ReadablePartial, instant, ,, int, [, ], values, ), {, return, iField, ., getMaximumValue]
[;, }, public, int, getMaximumTextLength, (, Locale, locale, ), {, return, iField, ., getMaximumTextLength, (, locale, ), ;, }, public]
[., getMaximumValue, (, instant, ,, values, ), ;, }, public, int, getMaximumTextLength, (, Locale, locale, ), {, return, iField, .]
[,, values, ), ;, }, public, int, getMaximumTextLength, (, Locale, locale, ), {, return, iField, ., getMaximumTextLength, (, locale, )]
[), ;, }, public, int, getMaximumTextLength, (, Locale, locale, ), {, return, iField, ., getMaximumTextLength, (, locale, ), ;, }]
[;, }, public, int, getMaximumShortTextLength, (, Locale, locale, ), {, return, iField, ., getMaximumShortTextLength, (, locale, ), ;, }, private]
[., getMaximumTextLength, (, locale, ), ;, }, public, int, getMaximumShortTextLength, (, Locale, locale, ), {, return, iField, ., getMaximumShortTextLength, (]
[), ;, }, public, int, getMaximumShortTextLength, (, Locale, locale, ), {, return, iField, ., getMaximumShortTextLength, (, locale, ), ;, }]
[;, }, private, int, getOffsetToAdd, (, long, instant, ), {, int, offset, =, this, ., iZone, ., getOffset, (, instant]
[., getMaximumShortTextLength, (, locale, ), ;, }, private, int, getOffsetToAdd, (, long, instant, ), {, int, offset, =, this, .]
[), ;, }, private, int, getOffsetToAdd, (, long, instant, ), {, int, offset, =, this, ., iZone, ., getOffset, (]
[;, long, sum, =, instant, +, offset, ;, if, (, (, instant, ^, sum, ), <, 0, &&, (, instant]
[., getOffset, (, instant, ), ;, long, sum, =, instant, +, offset, ;, if, (, (, instant, ^, sum, )]
[., iZone, ., getOffset, (, instant, ), ;, long, sum, =, instant, +, offset, ;, if, (, (, instant, ^]
[), ;, long, sum, =, instant, +, offset, ;, if, (, (, instant, ^, sum, ), <, 0, &&, (]
[;, if, (, (, instant, ^, sum, ), <, 0, &&, (, instant, ^, offset, ), >=, 0, ), {]
[+, offset, ;, if, (, (, instant, ^, sum, ), <, 0, &&, (, instant, ^, offset, ), >=, 0]
[;, if, (, (, instant, ^, sum, ), <, 0, &&, (, instant, ^, offset, ), >=, 0, ), {]
[), {, throw, new, ArithmeticException, (, "Adding time zone offset caused overflow", ), ;, }, return, offset, ;, }, @, Override, public, boolean, equals, (]
[&&, (, instant, ^, offset, ), >=, 0, ), {, throw, new, ArithmeticException, (, "Adding time zone offset caused overflow", ), ;, }, return, offset]
[<, 0, &&, (, instant, ^, offset, ), >=, 0, ), {, throw, new, ArithmeticException, (, "Adding time zone offset caused overflow", ), ;, }]
[), <, 0, &&, (, instant, ^, offset, ), >=, 0, ), {, throw, new, ArithmeticException, (, "Adding time zone offset caused overflow", ), ;]
[^, sum, ), <, 0, &&, (, instant, ^, offset, ), >=, 0, ), {, throw, new, ArithmeticException, (, "Adding time zone offset caused overflow"]
[), <, 0, &&, (, instant, ^, offset, ), >=, 0, ), {, throw, new, ArithmeticException, (, "Adding time zone offset caused overflow", ), ;]
[&&, (, instant, ^, offset, ), >=, 0, ), {, throw, new, ArithmeticException, (, "Adding time zone offset caused overflow", ), ;, }, return, offset]
[), {, throw, new, ArithmeticException, (, "Adding time zone offset caused overflow", ), ;, }, return, offset, ;, }, @, Override, public, boolean, equals, (]
[>=, 0, ), {, throw, new, ArithmeticException, (, "Adding time zone offset caused overflow", ), ;, }, return, offset, ;, }, @, Override, public, boolean]
[), >=, 0, ), {, throw, new, ArithmeticException, (, "Adding time zone offset caused overflow", ), ;, }, return, offset, ;, }, @, Override, public]
[^, offset, ), >=, 0, ), {, throw, new, ArithmeticException, (, "Adding time zone offset caused overflow", ), ;, }, return, offset, ;, }, @]
[), >=, 0, ), {, throw, new, ArithmeticException, (, "Adding time zone offset caused overflow", ), ;, }, return, offset, ;, }, @, Override, public]
[), {, throw, new, ArithmeticException, (, "Adding time zone offset caused overflow", ), ;, }, return, offset, ;, }, @, Override, public, boolean, equals, (]
[;, }, return, offset, ;, }, @, Override, public, boolean, equals, (, Object, obj, ), {, if, (, this, ==]
[), ;, }, return, offset, ;, }, @, Override, public, boolean, equals, (, Object, obj, ), {, if, (, this]
[;, }, @, Override, public, boolean, equals, (, Object, obj, ), {, if, (, this, ==, obj, ), {, return]
[), {, return, true, ;, }, else, if, (, obj, instanceof, ZonedDateTimeField, ), {, ZonedDateTimeField, other, =, (, ZonedDateTimeField, )]
[==, obj, ), {, return, true, ;, }, else, if, (, obj, instanceof, ZonedDateTimeField, ), {, ZonedDateTimeField, other, =, (]
[), {, return, true, ;, }, else, if, (, obj, instanceof, ZonedDateTimeField, ), {, ZonedDateTimeField, other, =, (, ZonedDateTimeField, )]
[;, }, else, if, (, obj, instanceof, ZonedDateTimeField, ), {, ZonedDateTimeField, other, =, (, ZonedDateTimeField, ), obj, ;, return, iField]
[), {, ZonedDateTimeField, other, =, (, ZonedDateTimeField, ), obj, ;, return, iField, ., equals, (, other, ., iField, ), &&]
[instanceof, ZonedDateTimeField, ), {, ZonedDateTimeField, other, =, (, ZonedDateTimeField, ), obj, ;, return, iField, ., equals, (, other, ., iField]
[;, return, iField, ., equals, (, other, ., iField, ), &&, iZone, ., equals, (, other, ., iZone, ), &&]
[;, return, iField, ., equals, (, other, ., iField, ), &&, iZone, ., equals, (, other, ., iZone, ), &&]
[;, }, return, false, ;, }, @, Override, public, int, hashCode, (, ), {, return, iField, ., hashCode, (, )]
[&&, iRangeDurationField, ., equals, (, other, ., iRangeDurationField, ), ;, }, return, false, ;, }, @, Override, public, int, hashCode]
[&&, iDurationField, ., equals, (, other, ., iDurationField, ), &&, iRangeDurationField, ., equals, (, other, ., iRangeDurationField, ), ;, }]
[&&, iZone, ., equals, (, other, ., iZone, ), &&, iDurationField, ., equals, (, other, ., iDurationField, ), &&, iRangeDurationField]
[., equals, (, other, ., iField, ), &&, iZone, ., equals, (, other, ., iZone, ), &&, iDurationField, ., equals]
[), &&, iZone, ., equals, (, other, ., iZone, ), &&, iDurationField, ., equals, (, other, ., iDurationField, ), &&]
[., iField, ), &&, iZone, ., equals, (, other, ., iZone, ), &&, iDurationField, ., equals, (, other, ., iDurationField]
[&&, iDurationField, ., equals, (, other, ., iDurationField, ), &&, iRangeDurationField, ., equals, (, other, ., iRangeDurationField, ), ;, }]
[., equals, (, other, ., iZone, ), &&, iDurationField, ., equals, (, other, ., iDurationField, ), &&, iRangeDurationField, ., equals]
[), &&, iDurationField, ., equals, (, other, ., iDurationField, ), &&, iRangeDurationField, ., equals, (, other, ., iRangeDurationField, ), ;]
[., iZone, ), &&, iDurationField, ., equals, (, other, ., iDurationField, ), &&, iRangeDurationField, ., equals, (, other, ., iRangeDurationField]
[&&, iRangeDurationField, ., equals, (, other, ., iRangeDurationField, ), ;, }, return, false, ;, }, @, Override, public, int, hashCode]
[., equals, (, other, ., iDurationField, ), &&, iRangeDurationField, ., equals, (, other, ., iRangeDurationField, ), ;, }, return, false]
[), &&, iRangeDurationField, ., equals, (, other, ., iRangeDurationField, ), ;, }, return, false, ;, }, @, Override, public, int]
[., iDurationField, ), &&, iRangeDurationField, ., equals, (, other, ., iRangeDurationField, ), ;, }, return, false, ;, }, @, Override]
[;, }, return, false, ;, }, @, Override, public, int, hashCode, (, ), {, return, iField, ., hashCode, (, )]
[., equals, (, other, ., iRangeDurationField, ), ;, }, return, false, ;, }, @, Override, public, int, hashCode, (, )]
[), ;, }, return, false, ;, }, @, Override, public, int, hashCode, (, ), {, return, iField, ., hashCode, (]
[., iRangeDurationField, ), ;, }, return, false, ;, }, @, Override, public, int, hashCode, (, ), {, return, iField, .]
[;, }, @, Override, public, int, hashCode, (, ), {, return, iField, ., hashCode, (, ), ^, iZone, ., hashCode]
[;, }, }, }]
[^, iZone, ., hashCode, (, ), ;, }, }, }]
[., hashCode, (, ), ^, iZone, ., hashCode, (, ), ;, }, }, }]
[;, }, }, }]
[., hashCode, (, ), ;, }, }, }]
