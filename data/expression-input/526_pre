[class, DefaultIntervalXYDataset, extends, AbstractIntervalXYDataset, implements, PublicCloneable, {, private, List, seriesKeys, ;, private, List, seriesList, ;, public, DefaultIntervalXYDataset, (, ), {]
[class, DefaultIntervalXYDataset, extends, AbstractIntervalXYDataset, implements, PublicCloneable, {, private, List, seriesKeys, ;, private, List, seriesList, ;, public, DefaultIntervalXYDataset, (, ), {]
[implements, PublicCloneable, {, private, List, seriesKeys, ;, private, List, seriesList, ;, public, DefaultIntervalXYDataset, (, ), {, this, ., seriesKeys, =]
[seriesList, ;, public, DefaultIntervalXYDataset, (, ), {, this, ., seriesKeys, =, new, java, ., util, ., ArrayList, (, ), ;]
[seriesList, ;, public, DefaultIntervalXYDataset, (, ), {, this, ., seriesKeys, =, new, java, ., util, ., ArrayList, (, ), ;]
[(, ), {, this, ., seriesKeys, =, new, java, ., util, ., ArrayList, (, ), ;, this, ., seriesList, =]
[., seriesList, =, new, java, ., util, ., ArrayList, (, ), ;, }, public, int, getSeriesCount, (, ), {, return]
[., seriesList, =, new, java, ., util, ., ArrayList, (, ), ;, }, public, int, getSeriesCount, (, ), {, return]
[., seriesList, =, new, java, ., util, ., ArrayList, (, ), ;, }, public, int, getSeriesCount, (, ), {, return]
[return, this, ., seriesList, ., size, (, ), ;, }, public, Comparable, getSeriesKey, (, int, series, ), {, if, (]
[return, this, ., seriesList, ., size, (, ), ;, }, public, Comparable, getSeriesKey, (, int, series, ), {, if, (]
[this, ., seriesList, ., size, (, ), ;, }, public, Comparable, getSeriesKey, (, int, series, ), {, if, (, (]
[this, ., seriesList, ., size, (, ), ;, }, public, Comparable, getSeriesKey, (, int, series, ), {, if, (, (]
[seriesList, ., size, (, ), ;, }, public, Comparable, getSeriesKey, (, int, series, ), {, if, (, (, series, <]
[(, ), ;, }, public, Comparable, getSeriesKey, (, int, series, ), {, if, (, (, series, <, 0, ), ||]
[), ;, }, public, Comparable, getSeriesKey, (, int, series, ), {, if, (, (, series, <, 0, ), ||, (]
[), ;, }, public, Comparable, getSeriesKey, (, int, series, ), {, if, (, (, series, <, 0, ), ||, (]
[}, public, Comparable, getSeriesKey, (, int, series, ), {, if, (, (, series, <, 0, ), ||, (, series, >=]
[), {, if, (, (, series, <, 0, ), ||, (, series, >=, getSeriesCount, (, ), ), ), {, throw]
[(, (, series, <, 0, ), ||, (, series, >=, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (]
[), ||, (, series, >=, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (, "Series index out of bounds", ), ;, }, return]
[series, >=, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (, "Series index out of bounds", ), ;, }, return, (, Comparable, )]
[series, >=, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (, "Series index out of bounds", ), ;, }, return, (, Comparable, )]
[series, >=, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (, "Series index out of bounds", ), ;, }, return, (, Comparable, )]
[), {, throw, new, IllegalArgumentException, (, "Series index out of bounds", ), ;, }, return, (, Comparable, ), this, ., seriesKeys, ., get, (]
[this, ., seriesKeys, ., get, (, series, ), ;, }, public, int, getItemCount, (, int, series, ), {, if, (]
[this, ., seriesKeys, ., get, (, series, ), ;, }, public, int, getItemCount, (, int, series, ), {, if, (]
[., seriesKeys, ., get, (, series, ), ;, }, public, int, getItemCount, (, int, series, ), {, if, (, (]
[., seriesKeys, ., get, (, series, ), ;, }, public, int, getItemCount, (, int, series, ), {, if, (, (]
[., get, (, series, ), ;, }, public, int, getItemCount, (, int, series, ), {, if, (, (, series, <]
[series, ), ;, }, public, int, getItemCount, (, int, series, ), {, if, (, (, series, <, 0, ), ||]
[), ;, }, public, int, getItemCount, (, int, series, ), {, if, (, (, series, <, 0, ), ||, (]
[), ;, }, public, int, getItemCount, (, int, series, ), {, if, (, (, series, <, 0, ), ||, (]
[}, public, int, getItemCount, (, int, series, ), {, if, (, (, series, <, 0, ), ||, (, series, >=]
[), {, if, (, (, series, <, 0, ), ||, (, series, >=, getSeriesCount, (, ), ), ), {, throw]
[(, (, series, <, 0, ), ||, (, series, >=, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (]
[(, ), ), ), {, throw, new, IllegalArgumentException, (, "Series index out of bounds", ), ;, }, double, [, ], [, ], seriesArray, =]
[IllegalArgumentException, (, "Series index out of bounds", ), ;, }, double, [, ], [, ], seriesArray, =, (, double, [, ], [, ], )]
[IllegalArgumentException, (, "Series index out of bounds", ), ;, }, double, [, ], [, ], seriesArray, =, (, double, [, ], [, ], )]
[IllegalArgumentException, (, "Series index out of bounds", ), ;, }, double, [, ], [, ], seriesArray, =, (, double, [, ], [, ], )]
[double, [, ], [, ], seriesArray, =, (, double, [, ], [, ], ), this, ., seriesList, ., get, (]
[], seriesArray, =, (, double, [, ], [, ], ), this, ., seriesList, ., get, (, series, ), ;, return]
[], seriesArray, =, (, double, [, ], [, ], ), this, ., seriesList, ., get, (, series, ), ;, return]
[], seriesArray, =, (, double, [, ], [, ], ), this, ., seriesList, ., get, (, series, ), ;, return]
[=, (, double, [, ], [, ], ), this, ., seriesList, ., get, (, series, ), ;, return, seriesArray, []
[;, }, public, double, getXValue, (, int, series, ,, int, item, ), {, double, [, ], [, ], seriesData, =]
[series, ,, int, item, ), {, double, [, ], [, ], seriesData, =, (, double, [, ], [, ], )]
[series, ,, int, item, ), {, double, [, ], [, ], seriesData, =, (, double, [, ], [, ], )]
[series, ,, int, item, ), {, double, [, ], [, ], seriesData, =, (, double, [, ], [, ], )]
[double, [, ], [, ], seriesData, =, (, double, [, ], [, ], ), this, ., seriesList, ., get, (]
[], seriesData, =, (, double, [, ], [, ], ), this, ., seriesList, ., get, (, series, ), ;, return]
[], seriesData, =, (, double, [, ], [, ], ), this, ., seriesList, ., get, (, series, ), ;, return]
[], seriesData, =, (, double, [, ], [, ], ), this, ., seriesList, ., get, (, series, ), ;, return]
[=, (, double, [, ], [, ], ), this, ., seriesList, ., get, (, series, ), ;, return, seriesData, []
[[, ], [, ], ), this, ., seriesList, ., get, (, series, ), ;, return, seriesData, [, 0, ], []
[;, }, public, double, getYValue, (, int, series, ,, int, item, ), {, double, [, ], [, ], seriesData, =]
[series, ,, int, item, ), {, double, [, ], [, ], seriesData, =, (, double, [, ], [, ], )]
[series, ,, int, item, ), {, double, [, ], [, ], seriesData, =, (, double, [, ], [, ], )]
[series, ,, int, item, ), {, double, [, ], [, ], seriesData, =, (, double, [, ], [, ], )]
[double, [, ], [, ], seriesData, =, (, double, [, ], [, ], ), this, ., seriesList, ., get, (]
[], seriesData, =, (, double, [, ], [, ], ), this, ., seriesList, ., get, (, series, ), ;, return]
[], seriesData, =, (, double, [, ], [, ], ), this, ., seriesList, ., get, (, series, ), ;, return]
[], seriesData, =, (, double, [, ], [, ], ), this, ., seriesList, ., get, (, series, ), ;, return]
[=, (, double, [, ], [, ], ), this, ., seriesList, ., get, (, series, ), ;, return, seriesData, []
[[, ], [, ], ), this, ., seriesList, ., get, (, series, ), ;, return, seriesData, [, 3, ], []
[;, }, public, double, getStartXValue, (, int, series, ,, int, item, ), {, double, [, ], [, ], seriesData, =]
[series, ,, int, item, ), {, double, [, ], [, ], seriesData, =, (, double, [, ], [, ], )]
[series, ,, int, item, ), {, double, [, ], [, ], seriesData, =, (, double, [, ], [, ], )]
[series, ,, int, item, ), {, double, [, ], [, ], seriesData, =, (, double, [, ], [, ], )]
[double, [, ], [, ], seriesData, =, (, double, [, ], [, ], ), this, ., seriesList, ., get, (]
[], seriesData, =, (, double, [, ], [, ], ), this, ., seriesList, ., get, (, series, ), ;, return]
[], seriesData, =, (, double, [, ], [, ], ), this, ., seriesList, ., get, (, series, ), ;, return]
[], seriesData, =, (, double, [, ], [, ], ), this, ., seriesList, ., get, (, series, ), ;, return]
[=, (, double, [, ], [, ], ), this, ., seriesList, ., get, (, series, ), ;, return, seriesData, []
[[, ], [, ], ), this, ., seriesList, ., get, (, series, ), ;, return, seriesData, [, 1, ], []
[;, }, public, double, getEndXValue, (, int, series, ,, int, item, ), {, double, [, ], [, ], seriesData, =]
[series, ,, int, item, ), {, double, [, ], [, ], seriesData, =, (, double, [, ], [, ], )]
[series, ,, int, item, ), {, double, [, ], [, ], seriesData, =, (, double, [, ], [, ], )]
[series, ,, int, item, ), {, double, [, ], [, ], seriesData, =, (, double, [, ], [, ], )]
[double, [, ], [, ], seriesData, =, (, double, [, ], [, ], ), this, ., seriesList, ., get, (]
[], seriesData, =, (, double, [, ], [, ], ), this, ., seriesList, ., get, (, series, ), ;, return]
[], seriesData, =, (, double, [, ], [, ], ), this, ., seriesList, ., get, (, series, ), ;, return]
[], seriesData, =, (, double, [, ], [, ], ), this, ., seriesList, ., get, (, series, ), ;, return]
[=, (, double, [, ], [, ], ), this, ., seriesList, ., get, (, series, ), ;, return, seriesData, []
[[, ], [, ], ), this, ., seriesList, ., get, (, series, ), ;, return, seriesData, [, 2, ], []
[;, }, public, double, getStartYValue, (, int, series, ,, int, item, ), {, double, [, ], [, ], seriesData, =]
[series, ,, int, item, ), {, double, [, ], [, ], seriesData, =, (, double, [, ], [, ], )]
[series, ,, int, item, ), {, double, [, ], [, ], seriesData, =, (, double, [, ], [, ], )]
[series, ,, int, item, ), {, double, [, ], [, ], seriesData, =, (, double, [, ], [, ], )]
[double, [, ], [, ], seriesData, =, (, double, [, ], [, ], ), this, ., seriesList, ., get, (]
[], seriesData, =, (, double, [, ], [, ], ), this, ., seriesList, ., get, (, series, ), ;, return]
[], seriesData, =, (, double, [, ], [, ], ), this, ., seriesList, ., get, (, series, ), ;, return]
[], seriesData, =, (, double, [, ], [, ], ), this, ., seriesList, ., get, (, series, ), ;, return]
[=, (, double, [, ], [, ], ), this, ., seriesList, ., get, (, series, ), ;, return, seriesData, []
[[, ], [, ], ), this, ., seriesList, ., get, (, series, ), ;, return, seriesData, [, 4, ], []
[;, }, public, double, getEndYValue, (, int, series, ,, int, item, ), {, double, [, ], [, ], seriesData, =]
[series, ,, int, item, ), {, double, [, ], [, ], seriesData, =, (, double, [, ], [, ], )]
[series, ,, int, item, ), {, double, [, ], [, ], seriesData, =, (, double, [, ], [, ], )]
[series, ,, int, item, ), {, double, [, ], [, ], seriesData, =, (, double, [, ], [, ], )]
[double, [, ], [, ], seriesData, =, (, double, [, ], [, ], ), this, ., seriesList, ., get, (]
[], seriesData, =, (, double, [, ], [, ], ), this, ., seriesList, ., get, (, series, ), ;, return]
[], seriesData, =, (, double, [, ], [, ], ), this, ., seriesList, ., get, (, series, ), ;, return]
[], seriesData, =, (, double, [, ], [, ], ), this, ., seriesList, ., get, (, series, ), ;, return]
[=, (, double, [, ], [, ], ), this, ., seriesList, ., get, (, series, ), ;, return, seriesData, []
[[, ], [, ], ), this, ., seriesList, ., get, (, series, ), ;, return, seriesData, [, 5, ], []
[[, 5, ], [, item, ], ;, }, public, Number, getEndX, (, int, series, ,, int, item, ), {, return]
[[, item, ], ;, }, public, Number, getEndX, (, int, series, ,, int, item, ), {, return, new, Double, (]
[], ;, }, public, Number, getEndX, (, int, series, ,, int, item, ), {, return, new, Double, (, getEndXValue, (]
[}, public, Number, getEndX, (, int, series, ,, int, item, ), {, return, new, Double, (, getEndXValue, (, series, ,]
[(, series, ,, item, ), ), ;, }, public, Number, getEndY, (, int, series, ,, int, item, ), {, return]
[item, ), ), ;, }, public, Number, getEndY, (, int, series, ,, int, item, ), {, return, new, Double, (]
[), ;, }, public, Number, getEndY, (, int, series, ,, int, item, ), {, return, new, Double, (, getEndYValue, (]
[}, public, Number, getEndY, (, int, series, ,, int, item, ), {, return, new, Double, (, getEndYValue, (, series, ,]
[(, series, ,, item, ), ), ;, }, public, Number, getStartX, (, int, series, ,, int, item, ), {, return]
[item, ), ), ;, }, public, Number, getStartX, (, int, series, ,, int, item, ), {, return, new, Double, (]
[), ;, }, public, Number, getStartX, (, int, series, ,, int, item, ), {, return, new, Double, (, getStartXValue, (]
[}, public, Number, getStartX, (, int, series, ,, int, item, ), {, return, new, Double, (, getStartXValue, (, series, ,]
[(, series, ,, item, ), ), ;, }, public, Number, getStartY, (, int, series, ,, int, item, ), {, return]
[item, ), ), ;, }, public, Number, getStartY, (, int, series, ,, int, item, ), {, return, new, Double, (]
[), ;, }, public, Number, getStartY, (, int, series, ,, int, item, ), {, return, new, Double, (, getStartYValue, (]
[}, public, Number, getStartY, (, int, series, ,, int, item, ), {, return, new, Double, (, getStartYValue, (, series, ,]
[(, series, ,, item, ), ), ;, }, public, Number, getX, (, int, series, ,, int, item, ), {, return]
[item, ), ), ;, }, public, Number, getX, (, int, series, ,, int, item, ), {, return, new, Double, (]
[), ;, }, public, Number, getX, (, int, series, ,, int, item, ), {, return, new, Double, (, getXValue, (]
[}, public, Number, getX, (, int, series, ,, int, item, ), {, return, new, Double, (, getXValue, (, series, ,]
[(, series, ,, item, ), ), ;, }, public, Number, getY, (, int, series, ,, int, item, ), {, return]
[item, ), ), ;, }, public, Number, getY, (, int, series, ,, int, item, ), {, return, new, Double, (]
[), ;, }, public, Number, getY, (, int, series, ,, int, item, ), {, return, new, Double, (, getYValue, (]
[}, public, Number, getY, (, int, series, ,, int, item, ), {, return, new, Double, (, getYValue, (, series, ,]
[), ;, }, public, void, addSeries, (, Comparable, seriesKey, ,, double, [, ], [, ], data, ), {, if, (]
[), ;, }, public, void, addSeries, (, Comparable, seriesKey, ,, double, [, ], [, ], data, ), {, if, (]
[}, public, void, addSeries, (, Comparable, seriesKey, ,, double, [, ], [, ], data, ), {, if, (, seriesKey, ==]
[(, Comparable, seriesKey, ,, double, [, ], [, ], data, ), {, if, (, seriesKey, ==, null, ), {, throw]
[,, double, [, ], [, ], data, ), {, if, (, seriesKey, ==, null, ), {, throw, new, IllegalArgumentException, (]
[data, ), {, if, (, seriesKey, ==, null, ), {, throw, new, IllegalArgumentException, (, "The 'seriesKey' cannot be null.", ), ;, }, if, (]
[data, ), {, if, (, seriesKey, ==, null, ), {, throw, new, IllegalArgumentException, (, "The 'seriesKey' cannot be null.", ), ;, }, if, (]
[{, if, (, seriesKey, ==, null, ), {, throw, new, IllegalArgumentException, (, "The 'seriesKey' cannot be null.", ), ;, }, if, (, data, ==]
[==, null, ), {, throw, new, IllegalArgumentException, (, "The 'seriesKey' cannot be null.", ), ;, }, if, (, data, ==, null, ), {, throw]
[{, throw, new, IllegalArgumentException, (, "The 'seriesKey' cannot be null.", ), ;, }, if, (, data, ==, null, ), {, throw, new, IllegalArgumentException, (]
[), ;, }, if, (, data, ==, null, ), {, throw, new, IllegalArgumentException, (, "The 'data' is null.", ), ;, }, if, (]
[), ;, }, if, (, data, ==, null, ), {, throw, new, IllegalArgumentException, (, "The 'data' is null.", ), ;, }, if, (]
[), ;, }, if, (, data, ==, null, ), {, throw, new, IllegalArgumentException, (, "The 'data' is null.", ), ;, }, if, (]
[(, data, ==, null, ), {, throw, new, IllegalArgumentException, (, "The 'data' is null.", ), ;, }, if, (, data, ., length, !=]
[), {, throw, new, IllegalArgumentException, (, "The 'data' is null.", ), ;, }, if, (, data, ., length, !=, 6, ), {, throw]
[new, IllegalArgumentException, (, "The 'data' is null.", ), ;, }, if, (, data, ., length, !=, 6, ), {, throw, new, IllegalArgumentException, (]
[if, (, data, ., length, !=, 6, ), {, throw, new, IllegalArgumentException, (, "The 'data' array must have length == 6.", ), ;, }, int, length, =]
[if, (, data, ., length, !=, 6, ), {, throw, new, IllegalArgumentException, (, "The 'data' array must have length == 6.", ), ;, }, int, length, =]
[if, (, data, ., length, !=, 6, ), {, throw, new, IllegalArgumentException, (, "The 'data' array must have length == 6.", ), ;, }, int, length, =]
[data, ., length, !=, 6, ), {, throw, new, IllegalArgumentException, (, "The 'data' array must have length == 6.", ), ;, }, int, length, =, data, []
[throw, new, IllegalArgumentException, (, "The 'data' array must have length == 6.", ), ;, }, int, length, =, data, [, 0, ], ., length, ;, if, (]
[throw, new, IllegalArgumentException, (, "The 'data' array must have length == 6.", ), ;, }, int, length, =, data, [, 0, ], ., length, ;, if, (]
[throw, new, IllegalArgumentException, (, "The 'data' array must have length == 6.", ), ;, }, int, length, =, data, [, 0, ], ., length, ;, if, (]
[throw, new, IllegalArgumentException, (, "The 'data' array must have length == 6.", ), ;, }, int, length, =, data, [, 0, ], ., length, ;, if, (]
[throw, new, IllegalArgumentException, (, "The 'data' array must have length == 6.", ), ;, }, int, length, =, data, [, 0, ], ., length, ;, if, (]
[throw, new, IllegalArgumentException, (, "The 'data' array must have length == 6.", ), ;, }, int, length, =, data, [, 0, ], ., length, ;, if, (]
[IllegalArgumentException, (, "The 'data' array must have length == 6.", ), ;, }, int, length, =, data, [, 0, ], ., length, ;, if, (, length, !=]
[IllegalArgumentException, (, "The 'data' array must have length == 6.", ), ;, }, int, length, =, data, [, 0, ], ., length, ;, if, (, length, !=]
[IllegalArgumentException, (, "The 'data' array must have length == 6.", ), ;, }, int, length, =, data, [, 0, ], ., length, ;, if, (, length, !=]
["The 'data' array must have length == 6.", ), ;, }, int, length, =, data, [, 0, ], ., length, ;, if, (, length, !=, data, []
[length, =, data, [, 0, ], ., length, ;, if, (, length, !=, data, [, 1, ], ., length, ||]
[length, =, data, [, 0, ], ., length, ;, if, (, length, !=, data, [, 1, ], ., length, ||]
[data, [, 0, ], ., length, ;, if, (, length, !=, data, [, 1, ], ., length, ||, length, !=]
[data, [, 0, ], ., length, ;, if, (, length, !=, data, [, 1, ], ., length, ||, length, !=]
[data, [, 0, ], ., length, ;, if, (, length, !=, data, [, 1, ], ., length, ||, length, !=]
[0, ], ., length, ;, if, (, length, !=, data, [, 1, ], ., length, ||, length, !=, data, []
[if, (, length, !=, data, [, 1, ], ., length, ||, length, !=, data, [, 2, ], ., length, ||]
[if, (, length, !=, data, [, 1, ], ., length, ||, length, !=, data, [, 2, ], ., length, ||]
[length, !=, data, [, 1, ], ., length, ||, length, !=, data, [, 2, ], ., length, ||, length, !=]
[length, !=, data, [, 1, ], ., length, ||, length, !=, data, [, 2, ], ., length, ||, length, !=]
[length, !=, data, [, 1, ], ., length, ||, length, !=, data, [, 2, ], ., length, ||, length, !=]
[data, [, 1, ], ., length, ||, length, !=, data, [, 2, ], ., length, ||, length, !=, data, []
[length, ||, length, !=, data, [, 2, ], ., length, ||, length, !=, data, [, 3, ], ., length, ||]
[length, ||, length, !=, data, [, 2, ], ., length, ||, length, !=, data, [, 3, ], ., length, ||]
[length, !=, data, [, 2, ], ., length, ||, length, !=, data, [, 3, ], ., length, ||, length, !=]
[length, !=, data, [, 2, ], ., length, ||, length, !=, data, [, 3, ], ., length, ||, length, !=]
[length, !=, data, [, 2, ], ., length, ||, length, !=, data, [, 3, ], ., length, ||, length, !=]
[data, [, 2, ], ., length, ||, length, !=, data, [, 3, ], ., length, ||, length, !=, data, []
[length, ||, length, !=, data, [, 3, ], ., length, ||, length, !=, data, [, 4, ], ., length, ||]
[length, ||, length, !=, data, [, 3, ], ., length, ||, length, !=, data, [, 4, ], ., length, ||]
[length, !=, data, [, 3, ], ., length, ||, length, !=, data, [, 4, ], ., length, ||, length, !=]
[length, !=, data, [, 3, ], ., length, ||, length, !=, data, [, 4, ], ., length, ||, length, !=]
[length, !=, data, [, 3, ], ., length, ||, length, !=, data, [, 4, ], ., length, ||, length, !=]
[data, [, 3, ], ., length, ||, length, !=, data, [, 4, ], ., length, ||, length, !=, data, []
[length, !=, data, [, 4, ], ., length, ||, length, !=, data, [, 5, ], ., length, ), {, throw]
[[, 4, ], ., length, ||, length, !=, data, [, 5, ], ., length, ), {, throw, new, IllegalArgumentException, (]
[!=, data, [, 5, ], ., length, ), {, throw, new, IllegalArgumentException, (, "The 'data' array must contain six arrays with equal length.", ), ;, }, int, seriesIndex, =]
[[, 5, ], ., length, ), {, throw, new, IllegalArgumentException, (, "The 'data' array must contain six arrays with equal length.", ), ;, }, int, seriesIndex, =, indexOf, (]
[), {, throw, new, IllegalArgumentException, (, "The 'data' array must contain six arrays with equal length.", ), ;, }, int, seriesIndex, =, indexOf, (, seriesKey, ), ;, if, (]
[), {, throw, new, IllegalArgumentException, (, "The 'data' array must contain six arrays with equal length.", ), ;, }, int, seriesIndex, =, indexOf, (, seriesKey, ), ;, if, (]
[throw, new, IllegalArgumentException, (, "The 'data' array must contain six arrays with equal length.", ), ;, }, int, seriesIndex, =, indexOf, (, seriesKey, ), ;, if, (, seriesIndex, ==]
[new, IllegalArgumentException, (, "The 'data' array must contain six arrays with equal length.", ), ;, }, int, seriesIndex, =, indexOf, (, seriesKey, ), ;, if, (, seriesIndex, ==, -]
["The 'data' array must contain six arrays with equal length.", ), ;, }, int, seriesIndex, =, indexOf, (, seriesKey, ), ;, if, (, seriesIndex, ==, -, 1, ), {]
["The 'data' array must contain six arrays with equal length.", ), ;, }, int, seriesIndex, =, indexOf, (, seriesKey, ), ;, if, (, seriesIndex, ==, -, 1, ), {]
["The 'data' array must contain six arrays with equal length.", ), ;, }, int, seriesIndex, =, indexOf, (, seriesKey, ), ;, if, (, seriesIndex, ==, -, 1, ), {]
[=, indexOf, (, seriesKey, ), ;, if, (, seriesIndex, ==, -, 1, ), {, this, ., seriesKeys, ., add, (]
[seriesKey, ), ;, if, (, seriesIndex, ==, -, 1, ), {, this, ., seriesKeys, ., add, (, seriesKey, ), ;]
[seriesKey, ), ;, if, (, seriesIndex, ==, -, 1, ), {, this, ., seriesKeys, ., add, (, seriesKey, ), ;]
[seriesKey, ), ;, if, (, seriesIndex, ==, -, 1, ), {, this, ., seriesKeys, ., add, (, seriesKey, ), ;]
[==, -, 1, ), {, this, ., seriesKeys, ., add, (, seriesKey, ), ;, this, ., seriesList, ., add, (]
[., seriesKeys, ., add, (, seriesKey, ), ;, this, ., seriesList, ., add, (, data, ), ;, }, else, {]
[., seriesKeys, ., add, (, seriesKey, ), ;, this, ., seriesList, ., add, (, data, ), ;, }, else, {]
[., seriesKeys, ., add, (, seriesKey, ), ;, this, ., seriesList, ., add, (, data, ), ;, }, else, {]
[), ;, this, ., seriesList, ., add, (, data, ), ;, }, else, {, this, ., seriesList, ., remove, (]
[., seriesList, ., add, (, data, ), ;, }, else, {, this, ., seriesList, ., remove, (, seriesIndex, ), ;]
[., seriesList, ., add, (, data, ), ;, }, else, {, this, ., seriesList, ., remove, (, seriesIndex, ), ;]
[., seriesList, ., add, (, data, ), ;, }, else, {, this, ., seriesList, ., remove, (, seriesIndex, ), ;]
[), ;, }, else, {, this, ., seriesList, ., remove, (, seriesIndex, ), ;, this, ., seriesList, ., add, (]
[}, else, {, this, ., seriesList, ., remove, (, seriesIndex, ), ;, this, ., seriesList, ., add, (, seriesIndex, ,]
[., seriesList, ., remove, (, seriesIndex, ), ;, this, ., seriesList, ., add, (, seriesIndex, ,, data, ), ;, }]
[., remove, (, seriesIndex, ), ;, this, ., seriesList, ., add, (, seriesIndex, ,, data, ), ;, }, fireDatasetChanged, (]
[}, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[}, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[(, new, DatasetChangeInfo, (, ), ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[), ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, DefaultIntervalXYDataset, ), ), {, return]
[true, ;, }, if, (, !, (, obj, instanceof, DefaultIntervalXYDataset, ), ), {, return, false, ;, }, DefaultIntervalXYDataset, that, =]
[if, (, !, (, obj, instanceof, DefaultIntervalXYDataset, ), ), {, return, false, ;, }, DefaultIntervalXYDataset, that, =, (, DefaultIntervalXYDataset, )]
[obj, instanceof, DefaultIntervalXYDataset, ), ), {, return, false, ;, }, DefaultIntervalXYDataset, that, =, (, DefaultIntervalXYDataset, ), obj, ;, if, (]
[instanceof, DefaultIntervalXYDataset, ), ), {, return, false, ;, }, DefaultIntervalXYDataset, that, =, (, DefaultIntervalXYDataset, ), obj, ;, if, (, !]
[instanceof, DefaultIntervalXYDataset, ), ), {, return, false, ;, }, DefaultIntervalXYDataset, that, =, (, DefaultIntervalXYDataset, ), obj, ;, if, (, !]
[instanceof, DefaultIntervalXYDataset, ), ), {, return, false, ;, }, DefaultIntervalXYDataset, that, =, (, DefaultIntervalXYDataset, ), obj, ;, if, (, !]
[false, ;, }, DefaultIntervalXYDataset, that, =, (, DefaultIntervalXYDataset, ), obj, ;, if, (, !, this, ., seriesKeys, ., equals, (]
[false, ;, }, DefaultIntervalXYDataset, that, =, (, DefaultIntervalXYDataset, ), obj, ;, if, (, !, this, ., seriesKeys, ., equals, (]
[DefaultIntervalXYDataset, ), obj, ;, if, (, !, this, ., seriesKeys, ., equals, (, that, ., seriesKeys, ), ), {, return]
[., seriesKeys, ., equals, (, that, ., seriesKeys, ), ), {, return, false, ;, }, for, (, int, i, =]
[., equals, (, that, ., seriesKeys, ), ), {, return, false, ;, }, for, (, int, i, =, 0, ;]
[., equals, (, that, ., seriesKeys, ), ), {, return, false, ;, }, for, (, int, i, =, 0, ;]
[(, that, ., seriesKeys, ), ), {, return, false, ;, }, for, (, int, i, =, 0, ;, i, <]
[(, that, ., seriesKeys, ), ), {, return, false, ;, }, for, (, int, i, =, 0, ;, i, <]
[(, that, ., seriesKeys, ), ), {, return, false, ;, }, for, (, int, i, =, 0, ;, i, <]
[false, ;, }, for, (, int, i, =, 0, ;, i, <, this, ., seriesList, ., size, (, ), ;]
[false, ;, }, for, (, int, i, =, 0, ;, i, <, this, ., seriesList, ., size, (, ), ;]
[<, this, ., seriesList, ., size, (, ), ;, i, ++, ), {, double, [, ], [, ], d1, =]
[), ;, i, ++, ), {, double, [, ], [, ], d1, =, (, double, [, ], [, ], )]
[), ;, i, ++, ), {, double, [, ], [, ], d1, =, (, double, [, ], [, ], )]
[), ;, i, ++, ), {, double, [, ], [, ], d1, =, (, double, [, ], [, ], )]
[double, [, ], [, ], d1, =, (, double, [, ], [, ], ), this, ., seriesList, ., get, (]
[], [, ], ), this, ., seriesList, ., get, (, i, ), ;, double, [, ], [, ], d2, =]
[., get, (, i, ), ;, double, [, ], [, ], d2, =, (, double, [, ], [, ], )]
[., get, (, i, ), ;, double, [, ], [, ], d2, =, (, double, [, ], [, ], )]
[., get, (, i, ), ;, double, [, ], [, ], d2, =, (, double, [, ], [, ], )]
[double, [, ], [, ], d2, =, (, double, [, ], [, ], ), that, ., seriesList, ., get, (]
[double, [, ], [, ], ), that, ., seriesList, ., get, (, i, ), ;, double, [, ], d1x, =]
[double, [, ], [, ], ), that, ., seriesList, ., get, (, i, ), ;, double, [, ], d1x, =]
[], [, ], ), that, ., seriesList, ., get, (, i, ), ;, double, [, ], d1x, =, d1, []
[get, (, i, ), ;, double, [, ], d1x, =, d1, [, 0, ], ;, double, [, ], d2x, =]
[get, (, i, ), ;, double, [, ], d1x, =, d1, [, 0, ], ;, double, [, ], d2x, =]
[i, ), ;, double, [, ], d1x, =, d1, [, 0, ], ;, double, [, ], d2x, =, d2, []
[], d1x, =, d1, [, 0, ], ;, double, [, ], d2x, =, d2, [, 0, ], ;, if, (]
[d1x, =, d1, [, 0, ], ;, double, [, ], d2x, =, d2, [, 0, ], ;, if, (, !]
[d1x, =, d1, [, 0, ], ;, double, [, ], d2x, =, d2, [, 0, ], ;, if, (, !]
[0, ], ;, double, [, ], d2x, =, d2, [, 0, ], ;, if, (, !, Arrays, ., equals, (]
[;, double, [, ], d2x, =, d2, [, 0, ], ;, if, (, !, Arrays, ., equals, (, d1x, ,]
[=, d2, [, 0, ], ;, if, (, !, Arrays, ., equals, (, d1x, ,, d2x, ), ), {, return]
[!, Arrays, ., equals, (, d1x, ,, d2x, ), ), {, return, false, ;, }, double, [, ], d1xs, =]
[!, Arrays, ., equals, (, d1x, ,, d2x, ), ), {, return, false, ;, }, double, [, ], d1xs, =]
[., equals, (, d1x, ,, d2x, ), ), {, return, false, ;, }, double, [, ], d1xs, =, d1, []
[{, return, false, ;, }, double, [, ], d1xs, =, d1, [, 1, ], ;, double, [, ], d2xs, =]
[{, return, false, ;, }, double, [, ], d1xs, =, d1, [, 1, ], ;, double, [, ], d2xs, =]
[false, ;, }, double, [, ], d1xs, =, d1, [, 1, ], ;, double, [, ], d2xs, =, d2, []
[], d1xs, =, d1, [, 1, ], ;, double, [, ], d2xs, =, d2, [, 1, ], ;, if, (]
[d1xs, =, d1, [, 1, ], ;, double, [, ], d2xs, =, d2, [, 1, ], ;, if, (, !]
[d1xs, =, d1, [, 1, ], ;, double, [, ], d2xs, =, d2, [, 1, ], ;, if, (, !]
[1, ], ;, double, [, ], d2xs, =, d2, [, 1, ], ;, if, (, !, Arrays, ., equals, (]
[;, double, [, ], d2xs, =, d2, [, 1, ], ;, if, (, !, Arrays, ., equals, (, d1xs, ,]
[=, d2, [, 1, ], ;, if, (, !, Arrays, ., equals, (, d1xs, ,, d2xs, ), ), {, return]
[!, Arrays, ., equals, (, d1xs, ,, d2xs, ), ), {, return, false, ;, }, double, [, ], d1xe, =]
[!, Arrays, ., equals, (, d1xs, ,, d2xs, ), ), {, return, false, ;, }, double, [, ], d1xe, =]
[., equals, (, d1xs, ,, d2xs, ), ), {, return, false, ;, }, double, [, ], d1xe, =, d1, []
[{, return, false, ;, }, double, [, ], d1xe, =, d1, [, 2, ], ;, double, [, ], d2xe, =]
[{, return, false, ;, }, double, [, ], d1xe, =, d1, [, 2, ], ;, double, [, ], d2xe, =]
[false, ;, }, double, [, ], d1xe, =, d1, [, 2, ], ;, double, [, ], d2xe, =, d2, []
[], d1xe, =, d1, [, 2, ], ;, double, [, ], d2xe, =, d2, [, 2, ], ;, if, (]
[d1xe, =, d1, [, 2, ], ;, double, [, ], d2xe, =, d2, [, 2, ], ;, if, (, !]
[d1xe, =, d1, [, 2, ], ;, double, [, ], d2xe, =, d2, [, 2, ], ;, if, (, !]
[2, ], ;, double, [, ], d2xe, =, d2, [, 2, ], ;, if, (, !, Arrays, ., equals, (]
[;, double, [, ], d2xe, =, d2, [, 2, ], ;, if, (, !, Arrays, ., equals, (, d1xe, ,]
[=, d2, [, 2, ], ;, if, (, !, Arrays, ., equals, (, d1xe, ,, d2xe, ), ), {, return]
[!, Arrays, ., equals, (, d1xe, ,, d2xe, ), ), {, return, false, ;, }, double, [, ], d1y, =]
[!, Arrays, ., equals, (, d1xe, ,, d2xe, ), ), {, return, false, ;, }, double, [, ], d1y, =]
[., equals, (, d1xe, ,, d2xe, ), ), {, return, false, ;, }, double, [, ], d1y, =, d1, []
[{, return, false, ;, }, double, [, ], d1y, =, d1, [, 3, ], ;, double, [, ], d2y, =]
[{, return, false, ;, }, double, [, ], d1y, =, d1, [, 3, ], ;, double, [, ], d2y, =]
[false, ;, }, double, [, ], d1y, =, d1, [, 3, ], ;, double, [, ], d2y, =, d2, []
[], d1y, =, d1, [, 3, ], ;, double, [, ], d2y, =, d2, [, 3, ], ;, if, (]
[d1y, =, d1, [, 3, ], ;, double, [, ], d2y, =, d2, [, 3, ], ;, if, (, !]
[d1y, =, d1, [, 3, ], ;, double, [, ], d2y, =, d2, [, 3, ], ;, if, (, !]
[3, ], ;, double, [, ], d2y, =, d2, [, 3, ], ;, if, (, !, Arrays, ., equals, (]
[;, double, [, ], d2y, =, d2, [, 3, ], ;, if, (, !, Arrays, ., equals, (, d1y, ,]
[=, d2, [, 3, ], ;, if, (, !, Arrays, ., equals, (, d1y, ,, d2y, ), ), {, return]
[!, Arrays, ., equals, (, d1y, ,, d2y, ), ), {, return, false, ;, }, double, [, ], d1ys, =]
[!, Arrays, ., equals, (, d1y, ,, d2y, ), ), {, return, false, ;, }, double, [, ], d1ys, =]
[., equals, (, d1y, ,, d2y, ), ), {, return, false, ;, }, double, [, ], d1ys, =, d1, []
[{, return, false, ;, }, double, [, ], d1ys, =, d1, [, 4, ], ;, double, [, ], d2ys, =]
[{, return, false, ;, }, double, [, ], d1ys, =, d1, [, 4, ], ;, double, [, ], d2ys, =]
[false, ;, }, double, [, ], d1ys, =, d1, [, 4, ], ;, double, [, ], d2ys, =, d2, []
[], d1ys, =, d1, [, 4, ], ;, double, [, ], d2ys, =, d2, [, 4, ], ;, if, (]
[d1ys, =, d1, [, 4, ], ;, double, [, ], d2ys, =, d2, [, 4, ], ;, if, (, !]
[d1ys, =, d1, [, 4, ], ;, double, [, ], d2ys, =, d2, [, 4, ], ;, if, (, !]
[4, ], ;, double, [, ], d2ys, =, d2, [, 4, ], ;, if, (, !, Arrays, ., equals, (]
[;, double, [, ], d2ys, =, d2, [, 4, ], ;, if, (, !, Arrays, ., equals, (, d1ys, ,]
[=, d2, [, 4, ], ;, if, (, !, Arrays, ., equals, (, d1ys, ,, d2ys, ), ), {, return]
[!, Arrays, ., equals, (, d1ys, ,, d2ys, ), ), {, return, false, ;, }, double, [, ], d1ye, =]
[!, Arrays, ., equals, (, d1ys, ,, d2ys, ), ), {, return, false, ;, }, double, [, ], d1ye, =]
[., equals, (, d1ys, ,, d2ys, ), ), {, return, false, ;, }, double, [, ], d1ye, =, d1, []
[{, return, false, ;, }, double, [, ], d1ye, =, d1, [, 5, ], ;, double, [, ], d2ye, =]
[{, return, false, ;, }, double, [, ], d1ye, =, d1, [, 5, ], ;, double, [, ], d2ye, =]
[false, ;, }, double, [, ], d1ye, =, d1, [, 5, ], ;, double, [, ], d2ye, =, d2, []
[], d1ye, =, d1, [, 5, ], ;, double, [, ], d2ye, =, d2, [, 5, ], ;, if, (]
[d1ye, =, d1, [, 5, ], ;, double, [, ], d2ye, =, d2, [, 5, ], ;, if, (, !]
[d1ye, =, d1, [, 5, ], ;, double, [, ], d2ye, =, d2, [, 5, ], ;, if, (, !]
[5, ], ;, double, [, ], d2ye, =, d2, [, 5, ], ;, if, (, !, Arrays, ., equals, (]
[;, double, [, ], d2ye, =, d2, [, 5, ], ;, if, (, !, Arrays, ., equals, (, d1ye, ,]
[=, d2, [, 5, ], ;, if, (, !, Arrays, ., equals, (, d1ye, ,, d2ye, ), ), {, return]
[;, if, (, !, Arrays, ., equals, (, d1ye, ,, d2ye, ), ), {, return, false, ;, }, }, return]
[), {, return, false, ;, }, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, ;]
[return, false, ;, }, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, ;, result, =]
[return, false, ;, }, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, ;, result, =]
[return, false, ;, }, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, ;, result, =]
[}, public, int, hashCode, (, ), {, int, result, ;, result, =, this, ., seriesKeys, ., hashCode, (, ), ;]
[int, hashCode, (, ), {, int, result, ;, result, =, this, ., seriesKeys, ., hashCode, (, ), ;, result, =]
[int, hashCode, (, ), {, int, result, ;, result, =, this, ., seriesKeys, ., hashCode, (, ), ;, result, =]
[int, hashCode, (, ), {, int, result, ;, result, =, this, ., seriesKeys, ., hashCode, (, ), ;, result, =]
[(, ), {, int, result, ;, result, =, this, ., seriesKeys, ., hashCode, (, ), ;, result, =, 29, *]
[{, int, result, ;, result, =, this, ., seriesKeys, ., hashCode, (, ), ;, result, =, 29, *, result, +]
[{, int, result, ;, result, =, this, ., seriesKeys, ., hashCode, (, ), ;, result, =, 29, *, result, +]
[{, int, result, ;, result, =, this, ., seriesKeys, ., hashCode, (, ), ;, result, =, 29, *, result, +]
[., hashCode, (, ), ;, result, =, 29, *, result, +, this, ., seriesList, ., hashCode, (, ), ;, return]
[., hashCode, (, ), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, DefaultIntervalXYDataset, clone, =]
[), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, DefaultIntervalXYDataset, clone, =, (, DefaultIntervalXYDataset, )]
[), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, DefaultIntervalXYDataset, clone, =, (, DefaultIntervalXYDataset, )]
[public, Object, clone, (, ), throws, CloneNotSupportedException, {, DefaultIntervalXYDataset, clone, =, (, DefaultIntervalXYDataset, ), super, ., clone, (, ), ;]
[public, Object, clone, (, ), throws, CloneNotSupportedException, {, DefaultIntervalXYDataset, clone, =, (, DefaultIntervalXYDataset, ), super, ., clone, (, ), ;]
[), throws, CloneNotSupportedException, {, DefaultIntervalXYDataset, clone, =, (, DefaultIntervalXYDataset, ), super, ., clone, (, ), ;, clone, ., seriesKeys, =]
[(, DefaultIntervalXYDataset, ), super, ., clone, (, ), ;, clone, ., seriesKeys, =, new, java, ., util, ., ArrayList, (]
[(, DefaultIntervalXYDataset, ), super, ., clone, (, ), ;, clone, ., seriesKeys, =, new, java, ., util, ., ArrayList, (]
[clone, (, ), ;, clone, ., seriesKeys, =, new, java, ., util, ., ArrayList, (, this, ., seriesKeys, ), ;]
[clone, (, ), ;, clone, ., seriesKeys, =, new, java, ., util, ., ArrayList, (, this, ., seriesKeys, ), ;]
[clone, ., seriesKeys, =, new, java, ., util, ., ArrayList, (, this, ., seriesKeys, ), ;, clone, ., seriesList, =]
[=, new, java, ., util, ., ArrayList, (, this, ., seriesKeys, ), ;, clone, ., seriesList, =, new, ArrayList, (]
[=, new, java, ., util, ., ArrayList, (, this, ., seriesKeys, ), ;, clone, ., seriesList, =, new, ArrayList, (]
[=, new, java, ., util, ., ArrayList, (, this, ., seriesKeys, ), ;, clone, ., seriesList, =, new, ArrayList, (]
[., seriesList, =, new, ArrayList, (, this, ., seriesList, ., size, (, ), ), ;, for, (, int, i, =]
[=, new, ArrayList, (, this, ., seriesList, ., size, (, ), ), ;, for, (, int, i, =, 0, ;]
[=, new, ArrayList, (, this, ., seriesList, ., size, (, ), ), ;, for, (, int, i, =, 0, ;]
[ArrayList, (, this, ., seriesList, ., size, (, ), ), ;, for, (, int, i, =, 0, ;, i, <]
[ArrayList, (, this, ., seriesList, ., size, (, ), ), ;, for, (, int, i, =, 0, ;, i, <]
[ArrayList, (, this, ., seriesList, ., size, (, ), ), ;, for, (, int, i, =, 0, ;, i, <]
[), ), ;, for, (, int, i, =, 0, ;, i, <, this, ., seriesList, ., size, (, ), ;]
[), ), ;, for, (, int, i, =, 0, ;, i, <, this, ., seriesList, ., size, (, ), ;]
[<, this, ., seriesList, ., size, (, ), ;, i, ++, ), {, double, [, ], [, ], data, =]
[), ;, i, ++, ), {, double, [, ], [, ], data, =, (, double, [, ], [, ], )]
[), ;, i, ++, ), {, double, [, ], [, ], data, =, (, double, [, ], [, ], )]
[), ;, i, ++, ), {, double, [, ], [, ], data, =, (, double, [, ], [, ], )]
[double, [, ], [, ], data, =, (, double, [, ], [, ], ), this, ., seriesList, ., get, (]
[double, [, ], [, ], ), this, ., seriesList, ., get, (, i, ), ;, double, [, ], x, =]
[double, [, ], [, ], ), this, ., seriesList, ., get, (, i, ), ;, double, [, ], x, =]
[], [, ], ), this, ., seriesList, ., get, (, i, ), ;, double, [, ], x, =, data, []
[get, (, i, ), ;, double, [, ], x, =, data, [, 0, ], ;, double, [, ], xStart, =]
[get, (, i, ), ;, double, [, ], x, =, data, [, 0, ], ;, double, [, ], xStart, =]
[i, ), ;, double, [, ], x, =, data, [, 0, ], ;, double, [, ], xStart, =, data, []
[data, [, 0, ], ;, double, [, ], xStart, =, data, [, 1, ], ;, double, [, ], xEnd, =]
[data, [, 0, ], ;, double, [, ], xStart, =, data, [, 1, ], ;, double, [, ], xEnd, =]
[0, ], ;, double, [, ], xStart, =, data, [, 1, ], ;, double, [, ], xEnd, =, data, []
[data, [, 1, ], ;, double, [, ], xEnd, =, data, [, 2, ], ;, double, [, ], y, =]
[data, [, 1, ], ;, double, [, ], xEnd, =, data, [, 2, ], ;, double, [, ], y, =]
[1, ], ;, double, [, ], xEnd, =, data, [, 2, ], ;, double, [, ], y, =, data, []
[data, [, 2, ], ;, double, [, ], y, =, data, [, 3, ], ;, double, [, ], yStart, =]
[data, [, 2, ], ;, double, [, ], y, =, data, [, 3, ], ;, double, [, ], yStart, =]
[2, ], ;, double, [, ], y, =, data, [, 3, ], ;, double, [, ], yStart, =, data, []
[data, [, 3, ], ;, double, [, ], yStart, =, data, [, 4, ], ;, double, [, ], yEnd, =]
[data, [, 3, ], ;, double, [, ], yStart, =, data, [, 4, ], ;, double, [, ], yEnd, =]
[3, ], ;, double, [, ], yStart, =, data, [, 4, ], ;, double, [, ], yEnd, =, data, []
[data, [, 4, ], ;, double, [, ], yEnd, =, data, [, 5, ], ;, double, [, ], xx, =]
[], ;, double, [, ], yEnd, =, data, [, 5, ], ;, double, [, ], xx, =, new, double, []
[], ;, double, [, ], yEnd, =, data, [, 5, ], ;, double, [, ], xx, =, new, double, []
[], ;, double, [, ], xx, =, new, double, [, x, ., length, ], ;, double, [, ], xxStart, =]
[[, ], xx, =, new, double, [, x, ., length, ], ;, double, [, ], xxStart, =, new, double, []
[[, ], xx, =, new, double, [, x, ., length, ], ;, double, [, ], xxStart, =, new, double, []
[], ;, double, [, ], xxStart, =, new, double, [, xStart, ., length, ], ;, double, [, ], xxEnd, =]
[[, ], xxStart, =, new, double, [, xStart, ., length, ], ;, double, [, ], xxEnd, =, new, double, []
[[, ], xxStart, =, new, double, [, xStart, ., length, ], ;, double, [, ], xxEnd, =, new, double, []
[], ;, double, [, ], xxEnd, =, new, double, [, xEnd, ., length, ], ;, double, [, ], yy, =]
[[, ], xxEnd, =, new, double, [, xEnd, ., length, ], ;, double, [, ], yy, =, new, double, []
[[, ], xxEnd, =, new, double, [, xEnd, ., length, ], ;, double, [, ], yy, =, new, double, []
[], ;, double, [, ], yy, =, new, double, [, y, ., length, ], ;, double, [, ], yyStart, =]
[[, ], yy, =, new, double, [, y, ., length, ], ;, double, [, ], yyStart, =, new, double, []
[[, ], yy, =, new, double, [, y, ., length, ], ;, double, [, ], yyStart, =, new, double, []
[], ;, double, [, ], yyStart, =, new, double, [, yStart, ., length, ], ;, double, [, ], yyEnd, =]
[[, ], yyStart, =, new, double, [, yStart, ., length, ], ;, double, [, ], yyEnd, =, new, double, []
[[, ], yyStart, =, new, double, [, yStart, ., length, ], ;, double, [, ], yyEnd, =, new, double, []
[double, [, yStart, ., length, ], ;, double, [, ], yyEnd, =, new, double, [, yEnd, ., length, ], ;]
[double, [, yStart, ., length, ], ;, double, [, ], yyEnd, =, new, double, [, yEnd, ., length, ], ;]
[length, ], ;, double, [, ], yyEnd, =, new, double, [, yEnd, ., length, ], ;, System, ., arraycopy, (]
[;, double, [, ], yyEnd, =, new, double, [, yEnd, ., length, ], ;, System, ., arraycopy, (, x, ,]
[[, ], yyEnd, =, new, double, [, yEnd, ., length, ], ;, System, ., arraycopy, (, x, ,, 0, ,]
[yyEnd, =, new, double, [, yEnd, ., length, ], ;, System, ., arraycopy, (, x, ,, 0, ,, xx, ,]
[new, double, [, yEnd, ., length, ], ;, System, ., arraycopy, (, x, ,, 0, ,, xx, ,, 0, ,]
[new, double, [, yEnd, ., length, ], ;, System, ., arraycopy, (, x, ,, 0, ,, xx, ,, 0, ,]
[length, ], ;, System, ., arraycopy, (, x, ,, 0, ,, xx, ,, 0, ,, x, ., length, ), ;]
[length, ], ;, System, ., arraycopy, (, x, ,, 0, ,, xx, ,, 0, ,, x, ., length, ), ;]
[., arraycopy, (, x, ,, 0, ,, xx, ,, 0, ,, x, ., length, ), ;, System, ., arraycopy, (]
[(, x, ,, 0, ,, xx, ,, 0, ,, x, ., length, ), ;, System, ., arraycopy, (, xStart, ,]
[,, 0, ,, xx, ,, 0, ,, x, ., length, ), ;, System, ., arraycopy, (, xStart, ,, 0, ,]
[,, xx, ,, 0, ,, x, ., length, ), ;, System, ., arraycopy, (, xStart, ,, 0, ,, xxStart, ,]
[,, 0, ,, x, ., length, ), ;, System, ., arraycopy, (, xStart, ,, 0, ,, xxStart, ,, 0, ,]
[,, 0, ,, x, ., length, ), ;, System, ., arraycopy, (, xStart, ,, 0, ,, xxStart, ,, 0, ,]
[length, ), ;, System, ., arraycopy, (, xStart, ,, 0, ,, xxStart, ,, 0, ,, xStart, ., length, ), ;]
[length, ), ;, System, ., arraycopy, (, xStart, ,, 0, ,, xxStart, ,, 0, ,, xStart, ., length, ), ;]
[., arraycopy, (, xStart, ,, 0, ,, xxStart, ,, 0, ,, xStart, ., length, ), ;, System, ., arraycopy, (]
[(, xStart, ,, 0, ,, xxStart, ,, 0, ,, xStart, ., length, ), ;, System, ., arraycopy, (, xEnd, ,]
[,, 0, ,, xxStart, ,, 0, ,, xStart, ., length, ), ;, System, ., arraycopy, (, xEnd, ,, 0, ,]
[,, xxStart, ,, 0, ,, xStart, ., length, ), ;, System, ., arraycopy, (, xEnd, ,, 0, ,, xxEnd, ,]
[,, 0, ,, xStart, ., length, ), ;, System, ., arraycopy, (, xEnd, ,, 0, ,, xxEnd, ,, 0, ,]
[,, 0, ,, xStart, ., length, ), ;, System, ., arraycopy, (, xEnd, ,, 0, ,, xxEnd, ,, 0, ,]
[length, ), ;, System, ., arraycopy, (, xEnd, ,, 0, ,, xxEnd, ,, 0, ,, xEnd, ., length, ), ;]
[length, ), ;, System, ., arraycopy, (, xEnd, ,, 0, ,, xxEnd, ,, 0, ,, xEnd, ., length, ), ;]
[., arraycopy, (, xEnd, ,, 0, ,, xxEnd, ,, 0, ,, xEnd, ., length, ), ;, System, ., arraycopy, (]
[(, xEnd, ,, 0, ,, xxEnd, ,, 0, ,, xEnd, ., length, ), ;, System, ., arraycopy, (, y, ,]
[,, 0, ,, xxEnd, ,, 0, ,, xEnd, ., length, ), ;, System, ., arraycopy, (, y, ,, 0, ,]
[,, xxEnd, ,, 0, ,, xEnd, ., length, ), ;, System, ., arraycopy, (, y, ,, 0, ,, yy, ,]
[,, 0, ,, xEnd, ., length, ), ;, System, ., arraycopy, (, y, ,, 0, ,, yy, ,, 0, ,]
[,, 0, ,, xEnd, ., length, ), ;, System, ., arraycopy, (, y, ,, 0, ,, yy, ,, 0, ,]
[length, ), ;, System, ., arraycopy, (, y, ,, 0, ,, yy, ,, 0, ,, y, ., length, ), ;]
[length, ), ;, System, ., arraycopy, (, y, ,, 0, ,, yy, ,, 0, ,, y, ., length, ), ;]
[., arraycopy, (, y, ,, 0, ,, yy, ,, 0, ,, y, ., length, ), ;, System, ., arraycopy, (]
[(, y, ,, 0, ,, yy, ,, 0, ,, y, ., length, ), ;, System, ., arraycopy, (, yStart, ,]
[,, 0, ,, yy, ,, 0, ,, y, ., length, ), ;, System, ., arraycopy, (, yStart, ,, 0, ,]
[,, yy, ,, 0, ,, y, ., length, ), ;, System, ., arraycopy, (, yStart, ,, 0, ,, yyStart, ,]
[,, 0, ,, y, ., length, ), ;, System, ., arraycopy, (, yStart, ,, 0, ,, yyStart, ,, 0, ,]
[,, 0, ,, y, ., length, ), ;, System, ., arraycopy, (, yStart, ,, 0, ,, yyStart, ,, 0, ,]
[length, ), ;, System, ., arraycopy, (, yStart, ,, 0, ,, yyStart, ,, 0, ,, yStart, ., length, ), ;]
[length, ), ;, System, ., arraycopy, (, yStart, ,, 0, ,, yyStart, ,, 0, ,, yStart, ., length, ), ;]
[., arraycopy, (, yStart, ,, 0, ,, yyStart, ,, 0, ,, yStart, ., length, ), ;, System, ., arraycopy, (]
[(, yStart, ,, 0, ,, yyStart, ,, 0, ,, yStart, ., length, ), ;, System, ., arraycopy, (, yEnd, ,]
[,, 0, ,, yyStart, ,, 0, ,, yStart, ., length, ), ;, System, ., arraycopy, (, yEnd, ,, 0, ,]
[,, yyStart, ,, 0, ,, yStart, ., length, ), ;, System, ., arraycopy, (, yEnd, ,, 0, ,, yyEnd, ,]
[,, 0, ,, yStart, ., length, ), ;, System, ., arraycopy, (, yEnd, ,, 0, ,, yyEnd, ,, 0, ,]
[,, 0, ,, yStart, ., length, ), ;, System, ., arraycopy, (, yEnd, ,, 0, ,, yyEnd, ,, 0, ,]
[length, ), ;, System, ., arraycopy, (, yEnd, ,, 0, ,, yyEnd, ,, 0, ,, yEnd, ., length, ), ;]
[length, ), ;, System, ., arraycopy, (, yEnd, ,, 0, ,, yyEnd, ,, 0, ,, yEnd, ., length, ), ;]
[length, ), ;, System, ., arraycopy, (, yEnd, ,, 0, ,, yyEnd, ,, 0, ,, yEnd, ., length, ), ;]
[(, yEnd, ,, 0, ,, yyEnd, ,, 0, ,, yEnd, ., length, ), ;, clone, ., seriesList, ., add, (]
[,, 0, ,, yyEnd, ,, 0, ,, yEnd, ., length, ), ;, clone, ., seriesList, ., add, (, i, ,]
[,, yEnd, ., length, ), ;, clone, ., seriesList, ., add, (, i, ,, new, double, [, ], [, ]]
[yEnd, ., length, ), ;, clone, ., seriesList, ., add, (, i, ,, new, double, [, ], [, ], {]
[length, ), ;, clone, ., seriesList, ., add, (, i, ,, new, double, [, ], [, ], {, xx, ,]
[;, clone, ., seriesList, ., add, (, i, ,, new, double, [, ], [, ], {, xx, ,, xxStart, ,]
[., seriesList, ., add, (, i, ,, new, double, [, ], [, ], {, xx, ,, xxStart, ,, xxEnd, ,]
[., add, (, i, ,, new, double, [, ], [, ], {, xx, ,, xxStart, ,, xxEnd, ,, yy, ,]
[(, i, ,, new, double, [, ], [, ], {, xx, ,, xxStart, ,, xxEnd, ,, yy, ,, yyStart, ,]
[], [, ], {, xx, ,, xxStart, ,, xxEnd, ,, yy, ,, yyStart, ,, yyEnd, }, ), ;, }, return]
