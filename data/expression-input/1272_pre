[extends, AbstractXYDataset, implements, WindDataset, ,, PublicCloneable, {, private, List, seriesKeys, ;, private, List, allSeriesData, ;, public, DefaultWindDataset, (, ), {]
[extends, AbstractXYDataset, implements, WindDataset, ,, PublicCloneable, {, private, List, seriesKeys, ;, private, List, allSeriesData, ;, public, DefaultWindDataset, (, ), {]
[,, PublicCloneable, {, private, List, seriesKeys, ;, private, List, allSeriesData, ;, public, DefaultWindDataset, (, ), {, this, ., seriesKeys, =]
[allSeriesData, ;, public, DefaultWindDataset, (, ), {, this, ., seriesKeys, =, new, java, ., util, ., ArrayList, (, ), ;]
[allSeriesData, ;, public, DefaultWindDataset, (, ), {, this, ., seriesKeys, =, new, java, ., util, ., ArrayList, (, ), ;]
[(, ), {, this, ., seriesKeys, =, new, java, ., util, ., ArrayList, (, ), ;, this, ., allSeriesData, =]
[ArrayList, (, ), ;, }, public, DefaultWindDataset, (, Object, [, ], [, ], [, ], data, ), {, this, (]
[), ;, }, public, DefaultWindDataset, (, Object, [, ], [, ], [, ], data, ), {, this, (, seriesNameListFromDataArray, (]
[public, DefaultWindDataset, (, Object, [, ], [, ], [, ], data, ), {, this, (, seriesNameListFromDataArray, (, data, ), ,]
[public, DefaultWindDataset, (, String, [, ], seriesNames, ,, Object, [, ], [, ], [, ], data, ), {, this, (]
[public, DefaultWindDataset, (, String, [, ], seriesNames, ,, Object, [, ], [, ], [, ], data, ), {, this, (]
[[, ], seriesNames, ,, Object, [, ], [, ], [, ], data, ), {, this, (, Arrays, ., asList, (]
[,, Object, [, ], [, ], [, ], data, ), {, this, (, Arrays, ., asList, (, seriesNames, ), ,]
[;, }, public, DefaultWindDataset, (, List, seriesKeys, ,, Object, [, ], [, ], [, ], data, ), {, if, (]
[;, }, public, DefaultWindDataset, (, List, seriesKeys, ,, Object, [, ], [, ], [, ], data, ), {, if, (]
[public, DefaultWindDataset, (, List, seriesKeys, ,, Object, [, ], [, ], [, ], data, ), {, if, (, seriesKeys, ==]
[seriesKeys, ,, Object, [, ], [, ], [, ], data, ), {, if, (, seriesKeys, ==, null, ), {, throw]
[[, ], [, ], [, ], data, ), {, if, (, seriesKeys, ==, null, ), {, throw, new, IllegalArgumentException, (]
[data, ), {, if, (, seriesKeys, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'seriesKeys' argument.", ), ;, }, if, (]
[data, ), {, if, (, seriesKeys, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'seriesKeys' argument.", ), ;, }, if, (]
[data, ), {, if, (, seriesKeys, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'seriesKeys' argument.", ), ;, }, if, (]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'seriesKeys' argument.", ), ;, }, if, (, seriesKeys, ., size, (, ), !=]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'seriesKeys' argument.", ), ;, }, if, (, seriesKeys, ., size, (, ), !=]
[IllegalArgumentException, (, "Null 'seriesKeys' argument.", ), ;, }, if, (, seriesKeys, ., size, (, ), !=, data, ., length, ), {, throw]
[), ;, }, if, (, seriesKeys, ., size, (, ), !=, data, ., length, ), {, throw, new, IllegalArgumentException, (]
[), ;, }, if, (, seriesKeys, ., size, (, ), !=, data, ., length, ), {, throw, new, IllegalArgumentException, (]
[}, if, (, seriesKeys, ., size, (, ), !=, data, ., length, ), {, throw, new, IllegalArgumentException, (, "The number of series keys does ", +]
[., size, (, ), !=, data, ., length, ), {, throw, new, IllegalArgumentException, (, "The number of series keys does ", +, "not match the number of series in the data array.", ), ;, }]
[., size, (, ), !=, data, ., length, ), {, throw, new, IllegalArgumentException, (, "The number of series keys does ", +, "not match the number of series in the data array.", ), ;, }]
[!=, data, ., length, ), {, throw, new, IllegalArgumentException, (, "The number of series keys does ", +, "not match the number of series in the data array.", ), ;, }, this, ., seriesKeys, =]
[{, throw, new, IllegalArgumentException, (, "The number of series keys does ", +, "not match the number of series in the data array.", ), ;, }, this, ., seriesKeys, =, seriesKeys, ;, int, seriesCount, =]
[{, throw, new, IllegalArgumentException, (, "The number of series keys does ", +, "not match the number of series in the data array.", ), ;, }, this, ., seriesKeys, =, seriesKeys, ;, int, seriesCount, =]
[(, "The number of series keys does ", +, "not match the number of series in the data array.", ), ;, }, this, ., seriesKeys, =, seriesKeys, ;, int, seriesCount, =, data, ., length, ;]
[(, "The number of series keys does ", +, "not match the number of series in the data array.", ), ;, }, this, ., seriesKeys, =, seriesKeys, ;, int, seriesCount, =, data, ., length, ;]
[), ;, }, this, ., seriesKeys, =, seriesKeys, ;, int, seriesCount, =, data, ., length, ;, this, ., allSeriesData, =]
[seriesKeys, ;, int, seriesCount, =, data, ., length, ;, this, ., allSeriesData, =, new, java, ., util, ., ArrayList, (]
[;, this, ., allSeriesData, =, new, java, ., util, ., ArrayList, (, seriesCount, ), ;, for, (, int, seriesIndex, =]
[., allSeriesData, =, new, java, ., util, ., ArrayList, (, seriesCount, ), ;, for, (, int, seriesIndex, =, 0, ;]
[., allSeriesData, =, new, java, ., util, ., ArrayList, (, seriesCount, ), ;, for, (, int, seriesIndex, =, 0, ;]
[=, new, java, ., util, ., ArrayList, (, seriesCount, ), ;, for, (, int, seriesIndex, =, 0, ;, seriesIndex, <]
[java, ., util, ., ArrayList, (, seriesCount, ), ;, for, (, int, seriesIndex, =, 0, ;, seriesIndex, <, seriesCount, ;]
[java, ., util, ., ArrayList, (, seriesCount, ), ;, for, (, int, seriesIndex, =, 0, ;, seriesIndex, <, seriesCount, ;]
[), ;, for, (, int, seriesIndex, =, 0, ;, seriesIndex, <, seriesCount, ;, seriesIndex, ++, ), {, List, oneSeriesData, =]
[;, seriesIndex, ++, ), {, List, oneSeriesData, =, new, java, ., util, ., ArrayList, (, ), ;, int, maxItemCount, =]
[;, seriesIndex, ++, ), {, List, oneSeriesData, =, new, java, ., util, ., ArrayList, (, ), ;, int, maxItemCount, =]
[;, seriesIndex, ++, ), {, List, oneSeriesData, =, new, java, ., util, ., ArrayList, (, ), ;, int, maxItemCount, =]
[++, ), {, List, oneSeriesData, =, new, java, ., util, ., ArrayList, (, ), ;, int, maxItemCount, =, data, []
[., ArrayList, (, ), ;, int, maxItemCount, =, data, [, seriesIndex, ], ., length, ;, for, (, int, itemIndex, =]
[(, ), ;, int, maxItemCount, =, data, [, seriesIndex, ], ., length, ;, for, (, int, itemIndex, =, 0, ;]
[(, ), ;, int, maxItemCount, =, data, [, seriesIndex, ], ., length, ;, for, (, int, itemIndex, =, 0, ;]
[;, int, maxItemCount, =, data, [, seriesIndex, ], ., length, ;, for, (, int, itemIndex, =, 0, ;, itemIndex, <]
[maxItemCount, =, data, [, seriesIndex, ], ., length, ;, for, (, int, itemIndex, =, 0, ;, itemIndex, <, maxItemCount, ;]
[maxItemCount, =, data, [, seriesIndex, ], ., length, ;, for, (, int, itemIndex, =, 0, ;, itemIndex, <, maxItemCount, ;]
[length, ;, for, (, int, itemIndex, =, 0, ;, itemIndex, <, maxItemCount, ;, itemIndex, ++, ), {, Object, xObject, =]
[length, ;, for, (, int, itemIndex, =, 0, ;, itemIndex, <, maxItemCount, ;, itemIndex, ++, ), {, Object, xObject, =]
[length, ;, for, (, int, itemIndex, =, 0, ;, itemIndex, <, maxItemCount, ;, itemIndex, ++, ), {, Object, xObject, =]
[length, ;, for, (, int, itemIndex, =, 0, ;, itemIndex, <, maxItemCount, ;, itemIndex, ++, ), {, Object, xObject, =]
[for, (, int, itemIndex, =, 0, ;, itemIndex, <, maxItemCount, ;, itemIndex, ++, ), {, Object, xObject, =, data, []
[itemIndex, =, 0, ;, itemIndex, <, maxItemCount, ;, itemIndex, ++, ), {, Object, xObject, =, data, [, seriesIndex, ], []
[;, itemIndex, <, maxItemCount, ;, itemIndex, ++, ), {, Object, xObject, =, data, [, seriesIndex, ], [, itemIndex, ], []
[itemIndex, ++, ), {, Object, xObject, =, data, [, seriesIndex, ], [, itemIndex, ], [, 0, ], ;, if, (]
[itemIndex, ++, ), {, Object, xObject, =, data, [, seriesIndex, ], [, itemIndex, ], [, 0, ], ;, if, (]
[), {, Object, xObject, =, data, [, seriesIndex, ], [, itemIndex, ], [, 0, ], ;, if, (, xObject, !=]
[], [, itemIndex, ], [, 0, ], ;, if, (, xObject, !=, null, ), {, Number, xNumber, ;, if, (]
[], [, itemIndex, ], [, 0, ], ;, if, (, xObject, !=, null, ), {, Number, xNumber, ;, if, (]
[0, ], ;, if, (, xObject, !=, null, ), {, Number, xNumber, ;, if, (, xObject, instanceof, Number, ), {]
[;, if, (, xObject, !=, null, ), {, Number, xNumber, ;, if, (, xObject, instanceof, Number, ), {, xNumber, =]
[xObject, !=, null, ), {, Number, xNumber, ;, if, (, xObject, instanceof, Number, ), {, xNumber, =, (, Number, )]
[;, if, (, xObject, instanceof, Number, ), {, xNumber, =, (, Number, ), xObject, ;, }, else, {, if, (]
[;, if, (, xObject, instanceof, Number, ), {, xNumber, =, (, Number, ), xObject, ;, }, else, {, if, (]
[xNumber, =, (, Number, ), xObject, ;, }, else, {, if, (, xObject, instanceof, Date, ), {, Date, xDate, =]
[Number, ), xObject, ;, }, else, {, if, (, xObject, instanceof, Date, ), {, Date, xDate, =, (, Date, )]
[xObject, ;, }, else, {, if, (, xObject, instanceof, Date, ), {, Date, xDate, =, (, Date, ), xObject, ;]
[}, else, {, if, (, xObject, instanceof, Date, ), {, Date, xDate, =, (, Date, ), xObject, ;, xNumber, =]
[if, (, xObject, instanceof, Date, ), {, Date, xDate, =, (, Date, ), xObject, ;, xNumber, =, new, Long, (]
[if, (, xObject, instanceof, Date, ), {, Date, xDate, =, (, Date, ), xObject, ;, xNumber, =, new, Long, (]
[(, Date, ), xObject, ;, xNumber, =, new, Long, (, xDate, ., getTime, (, ), ), ;, }, else, {]
[), xObject, ;, xNumber, =, new, Long, (, xDate, ., getTime, (, ), ), ;, }, else, {, xNumber, =]
[xNumber, =, new, Long, (, xDate, ., getTime, (, ), ), ;, }, else, {, xNumber, =, new, Integer, (]
[(, ), ), ;, }, else, {, xNumber, =, new, Integer, (, 0, ), ;, }, }, Number, windDir, =]
[;, }, else, {, xNumber, =, new, Integer, (, 0, ), ;, }, }, Number, windDir, =, (, Number, )]
[;, }, else, {, xNumber, =, new, Integer, (, 0, ), ;, }, }, Number, windDir, =, (, Number, )]
[;, }, else, {, xNumber, =, new, Integer, (, 0, ), ;, }, }, Number, windDir, =, (, Number, )]
[;, }, else, {, xNumber, =, new, Integer, (, 0, ), ;, }, }, Number, windDir, =, (, Number, )]
[else, {, xNumber, =, new, Integer, (, 0, ), ;, }, }, Number, windDir, =, (, Number, ), data, []
[=, new, Integer, (, 0, ), ;, }, }, Number, windDir, =, (, Number, ), data, [, seriesIndex, ], []
[(, 0, ), ;, }, }, Number, windDir, =, (, Number, ), data, [, seriesIndex, ], [, itemIndex, ], []
[Number, windDir, =, (, Number, ), data, [, seriesIndex, ], [, itemIndex, ], [, 1, ], ;, Number, windForce, =]
[(, Number, ), data, [, seriesIndex, ], [, itemIndex, ], [, 1, ], ;, Number, windForce, =, (, Number, )]
[(, Number, ), data, [, seriesIndex, ], [, itemIndex, ], [, 1, ], ;, Number, windForce, =, (, Number, )]
[(, Number, ), data, [, seriesIndex, ], [, itemIndex, ], [, 1, ], ;, Number, windForce, =, (, Number, )]
[(, Number, ), data, [, seriesIndex, ], [, itemIndex, ], [, 1, ], ;, Number, windForce, =, (, Number, )]
[), data, [, seriesIndex, ], [, itemIndex, ], [, 1, ], ;, Number, windForce, =, (, Number, ), data, []
[seriesIndex, ], [, itemIndex, ], [, 1, ], ;, Number, windForce, =, (, Number, ), data, [, seriesIndex, ], []
[itemIndex, ], [, 1, ], ;, Number, windForce, =, (, Number, ), data, [, seriesIndex, ], [, itemIndex, ], []
[1, ], ;, Number, windForce, =, (, Number, ), data, [, seriesIndex, ], [, itemIndex, ], [, 2, ], ;]
[1, ], ;, Number, windForce, =, (, Number, ), data, [, seriesIndex, ], [, itemIndex, ], [, 2, ], ;]
[windForce, =, (, Number, ), data, [, seriesIndex, ], [, itemIndex, ], [, 2, ], ;, oneSeriesData, ., add, (]
[Number, ), data, [, seriesIndex, ], [, itemIndex, ], [, 2, ], ;, oneSeriesData, ., add, (, new, WindDataItem, (]
[data, [, seriesIndex, ], [, itemIndex, ], [, 2, ], ;, oneSeriesData, ., add, (, new, WindDataItem, (, xNumber, ,]
[seriesIndex, ], [, itemIndex, ], [, 2, ], ;, oneSeriesData, ., add, (, new, WindDataItem, (, xNumber, ,, windDir, ,]
[2, ], ;, oneSeriesData, ., add, (, new, WindDataItem, (, xNumber, ,, windDir, ,, windForce, ), ), ;, }, }]
[2, ], ;, oneSeriesData, ., add, (, new, WindDataItem, (, xNumber, ,, windDir, ,, windForce, ), ), ;, }, }]
[., add, (, new, WindDataItem, (, xNumber, ,, windDir, ,, windForce, ), ), ;, }, }, Collections, ., sort, (]
[new, WindDataItem, (, xNumber, ,, windDir, ,, windForce, ), ), ;, }, }, Collections, ., sort, (, oneSeriesData, ), ;]
[new, WindDataItem, (, xNumber, ,, windDir, ,, windForce, ), ), ;, }, }, Collections, ., sort, (, oneSeriesData, ), ;]
[new, WindDataItem, (, xNumber, ,, windDir, ,, windForce, ), ), ;, }, }, Collections, ., sort, (, oneSeriesData, ), ;]
[,, windForce, ), ), ;, }, }, Collections, ., sort, (, oneSeriesData, ), ;, this, ., allSeriesData, ., add, (]
[), ), ;, }, }, Collections, ., sort, (, oneSeriesData, ), ;, this, ., allSeriesData, ., add, (, seriesIndex, ,]
[this, ., allSeriesData, ., add, (, seriesIndex, ,, oneSeriesData, ), ;, }, }, public, int, getSeriesCount, (, ), {, return]
[this, ., allSeriesData, ., add, (, seriesIndex, ,, oneSeriesData, ), ;, }, }, public, int, getSeriesCount, (, ), {, return]
[this, ., allSeriesData, ., add, (, seriesIndex, ,, oneSeriesData, ), ;, }, }, public, int, getSeriesCount, (, ), {, return]
[return, this, ., allSeriesData, ., size, (, ), ;, }, public, int, getItemCount, (, int, series, ), {, if, (]
[return, this, ., allSeriesData, ., size, (, ), ;, }, public, int, getItemCount, (, int, series, ), {, if, (]
[return, this, ., allSeriesData, ., size, (, ), ;, }, public, int, getItemCount, (, int, series, ), {, if, (]
[., allSeriesData, ., size, (, ), ;, }, public, int, getItemCount, (, int, series, ), {, if, (, series, <]
[., size, (, ), ;, }, public, int, getItemCount, (, int, series, ), {, if, (, series, <, 0, ||]
[., size, (, ), ;, }, public, int, getItemCount, (, int, series, ), {, if, (, series, <, 0, ||]
[(, ), ;, }, public, int, getItemCount, (, int, series, ), {, if, (, series, <, 0, ||, series, >=]
[getItemCount, (, int, series, ), {, if, (, series, <, 0, ||, series, >=, getSeriesCount, (, ), ), {, throw]
[series, ), {, if, (, series, <, 0, ||, series, >=, getSeriesCount, (, ), ), {, throw, new, IllegalArgumentException, (]
[series, ), {, if, (, series, <, 0, ||, series, >=, getSeriesCount, (, ), ), {, throw, new, IllegalArgumentException, (]
[{, if, (, series, <, 0, ||, series, >=, getSeriesCount, (, ), ), {, throw, new, IllegalArgumentException, (, "Invalid series index: ", +]
[series, >=, getSeriesCount, (, ), ), {, throw, new, IllegalArgumentException, (, "Invalid series index: ", +, series, ), ;, }, List, oneSeriesData, =]
[(, ), ), {, throw, new, IllegalArgumentException, (, "Invalid series index: ", +, series, ), ;, }, List, oneSeriesData, =, (, List, )]
[(, ), ), {, throw, new, IllegalArgumentException, (, "Invalid series index: ", +, series, ), ;, }, List, oneSeriesData, =, (, List, )]
[(, ), ), {, throw, new, IllegalArgumentException, (, "Invalid series index: ", +, series, ), ;, }, List, oneSeriesData, =, (, List, )]
[IllegalArgumentException, (, "Invalid series index: ", +, series, ), ;, }, List, oneSeriesData, =, (, List, ), this, ., allSeriesData, ., get, (]
[series, ), ;, }, List, oneSeriesData, =, (, List, ), this, ., allSeriesData, ., get, (, series, ), ;, return]
[series, ), ;, }, List, oneSeriesData, =, (, List, ), this, ., allSeriesData, ., get, (, series, ), ;, return]
[), ;, return, oneSeriesData, ., size, (, ), ;, }, public, Comparable, getSeriesKey, (, int, series, ), {, if, (]
[), ;, return, oneSeriesData, ., size, (, ), ;, }, public, Comparable, getSeriesKey, (, int, series, ), {, if, (]
[), ;, return, oneSeriesData, ., size, (, ), ;, }, public, Comparable, getSeriesKey, (, int, series, ), {, if, (]
[return, oneSeriesData, ., size, (, ), ;, }, public, Comparable, getSeriesKey, (, int, series, ), {, if, (, series, <]
[., size, (, ), ;, }, public, Comparable, getSeriesKey, (, int, series, ), {, if, (, series, <, 0, ||]
[., size, (, ), ;, }, public, Comparable, getSeriesKey, (, int, series, ), {, if, (, series, <, 0, ||]
[(, ), ;, }, public, Comparable, getSeriesKey, (, int, series, ), {, if, (, series, <, 0, ||, series, >=]
[getSeriesKey, (, int, series, ), {, if, (, series, <, 0, ||, series, >=, getSeriesCount, (, ), ), {, throw]
[series, ), {, if, (, series, <, 0, ||, series, >=, getSeriesCount, (, ), ), {, throw, new, IllegalArgumentException, (]
[series, ), {, if, (, series, <, 0, ||, series, >=, getSeriesCount, (, ), ), {, throw, new, IllegalArgumentException, (]
[{, if, (, series, <, 0, ||, series, >=, getSeriesCount, (, ), ), {, throw, new, IllegalArgumentException, (, "Invalid series index: ", +]
[0, ||, series, >=, getSeriesCount, (, ), ), {, throw, new, IllegalArgumentException, (, "Invalid series index: ", +, series, ), ;, }, return]
[>=, getSeriesCount, (, ), ), {, throw, new, IllegalArgumentException, (, "Invalid series index: ", +, series, ), ;, }, return, (, Comparable, )]
[>=, getSeriesCount, (, ), ), {, throw, new, IllegalArgumentException, (, "Invalid series index: ", +, series, ), ;, }, return, (, Comparable, )]
[>=, getSeriesCount, (, ), ), {, throw, new, IllegalArgumentException, (, "Invalid series index: ", +, series, ), ;, }, return, (, Comparable, )]
[throw, new, IllegalArgumentException, (, "Invalid series index: ", +, series, ), ;, }, return, (, Comparable, ), this, ., seriesKeys, ., get, (]
[get, (, series, ), ;, }, public, Number, getX, (, int, series, ,, int, item, ), {, List, oneSeriesData, =]
[), ;, }, public, Number, getX, (, int, series, ,, int, item, ), {, List, oneSeriesData, =, (, List, )]
[), ;, }, public, Number, getX, (, int, series, ,, int, item, ), {, List, oneSeriesData, =, (, List, )]
[), ;, }, public, Number, getX, (, int, series, ,, int, item, ), {, List, oneSeriesData, =, (, List, )]
[(, int, series, ,, int, item, ), {, List, oneSeriesData, =, (, List, ), this, ., allSeriesData, ., get, (]
[), {, List, oneSeriesData, =, (, List, ), this, ., allSeriesData, ., get, (, series, ), ;, WindDataItem, windItem, =]
[oneSeriesData, =, (, List, ), this, ., allSeriesData, ., get, (, series, ), ;, WindDataItem, windItem, =, (, WindDataItem, )]
[oneSeriesData, =, (, List, ), this, ., allSeriesData, ., get, (, series, ), ;, WindDataItem, windItem, =, (, WindDataItem, )]
[), this, ., allSeriesData, ., get, (, series, ), ;, WindDataItem, windItem, =, (, WindDataItem, ), oneSeriesData, ., get, (]
[., get, (, series, ), ;, WindDataItem, windItem, =, (, WindDataItem, ), oneSeriesData, ., get, (, item, ), ;, return]
[., get, (, series, ), ;, WindDataItem, windItem, =, (, WindDataItem, ), oneSeriesData, ., get, (, item, ), ;, return]
[return, windItem, ., getX, (, ), ;, }, public, Number, getY, (, int, series, ,, int, item, ), {, return]
[., getX, (, ), ;, }, public, Number, getY, (, int, series, ,, int, item, ), {, return, getWindForce, (]
[(, ), ;, }, public, Number, getY, (, int, series, ,, int, item, ), {, return, getWindForce, (, series, ,]
[series, ,, item, ), ;, }, public, Number, getWindDirection, (, int, series, ,, int, item, ), {, List, oneSeriesData, =]
[), ;, }, public, Number, getWindDirection, (, int, series, ,, int, item, ), {, List, oneSeriesData, =, (, List, )]
[), ;, }, public, Number, getWindDirection, (, int, series, ,, int, item, ), {, List, oneSeriesData, =, (, List, )]
[), ;, }, public, Number, getWindDirection, (, int, series, ,, int, item, ), {, List, oneSeriesData, =, (, List, )]
[(, int, series, ,, int, item, ), {, List, oneSeriesData, =, (, List, ), this, ., allSeriesData, ., get, (]
[), {, List, oneSeriesData, =, (, List, ), this, ., allSeriesData, ., get, (, series, ), ;, WindDataItem, windItem, =]
[oneSeriesData, =, (, List, ), this, ., allSeriesData, ., get, (, series, ), ;, WindDataItem, windItem, =, (, WindDataItem, )]
[oneSeriesData, =, (, List, ), this, ., allSeriesData, ., get, (, series, ), ;, WindDataItem, windItem, =, (, WindDataItem, )]
[), this, ., allSeriesData, ., get, (, series, ), ;, WindDataItem, windItem, =, (, WindDataItem, ), oneSeriesData, ., get, (]
[., get, (, series, ), ;, WindDataItem, windItem, =, (, WindDataItem, ), oneSeriesData, ., get, (, item, ), ;, return]
[., get, (, series, ), ;, WindDataItem, windItem, =, (, WindDataItem, ), oneSeriesData, ., get, (, item, ), ;, return]
[., getWindDirection, (, ), ;, }, public, Number, getWindForce, (, int, series, ,, int, item, ), {, List, oneSeriesData, =]
[), ;, }, public, Number, getWindForce, (, int, series, ,, int, item, ), {, List, oneSeriesData, =, (, List, )]
[), ;, }, public, Number, getWindForce, (, int, series, ,, int, item, ), {, List, oneSeriesData, =, (, List, )]
[), ;, }, public, Number, getWindForce, (, int, series, ,, int, item, ), {, List, oneSeriesData, =, (, List, )]
[(, int, series, ,, int, item, ), {, List, oneSeriesData, =, (, List, ), this, ., allSeriesData, ., get, (]
[), {, List, oneSeriesData, =, (, List, ), this, ., allSeriesData, ., get, (, series, ), ;, WindDataItem, windItem, =]
[oneSeriesData, =, (, List, ), this, ., allSeriesData, ., get, (, series, ), ;, WindDataItem, windItem, =, (, WindDataItem, )]
[oneSeriesData, =, (, List, ), this, ., allSeriesData, ., get, (, series, ), ;, WindDataItem, windItem, =, (, WindDataItem, )]
[), this, ., allSeriesData, ., get, (, series, ), ;, WindDataItem, windItem, =, (, WindDataItem, ), oneSeriesData, ., get, (]
[., get, (, series, ), ;, WindDataItem, windItem, =, (, WindDataItem, ), oneSeriesData, ., get, (, item, ), ;, return]
[., get, (, series, ), ;, WindDataItem, windItem, =, (, WindDataItem, ), oneSeriesData, ., get, (, item, ), ;, return]
[(, ), ;, }, public, static, List, seriesNameListFromDataArray, (, Object, [, ], [, ], data, ), {, int, seriesCount, =]
[(, ), ;, }, public, static, List, seriesNameListFromDataArray, (, Object, [, ], [, ], data, ), {, int, seriesCount, =]
[seriesNameListFromDataArray, (, Object, [, ], [, ], data, ), {, int, seriesCount, =, data, ., length, ;, List, seriesNameList, =]
[data, ), {, int, seriesCount, =, data, ., length, ;, List, seriesNameList, =, new, java, ., util, ., ArrayList, (]
[length, ;, List, seriesNameList, =, new, java, ., util, ., ArrayList, (, seriesCount, ), ;, for, (, int, i, =]
[List, seriesNameList, =, new, java, ., util, ., ArrayList, (, seriesCount, ), ;, for, (, int, i, =, 0, ;]
[List, seriesNameList, =, new, java, ., util, ., ArrayList, (, seriesCount, ), ;, for, (, int, i, =, 0, ;]
[=, new, java, ., util, ., ArrayList, (, seriesCount, ), ;, for, (, int, i, =, 0, ;, i, <]
[java, ., util, ., ArrayList, (, seriesCount, ), ;, for, (, int, i, =, 0, ;, i, <, seriesCount, ;]
[java, ., util, ., ArrayList, (, seriesCount, ), ;, for, (, int, i, =, 0, ;, i, <, seriesCount, ;]
[ArrayList, (, seriesCount, ), ;, for, (, int, i, =, 0, ;, i, <, seriesCount, ;, i, ++, ), {]
[ArrayList, (, seriesCount, ), ;, for, (, int, i, =, 0, ;, i, <, seriesCount, ;, i, ++, ), {]
[;, for, (, int, i, =, 0, ;, i, <, seriesCount, ;, i, ++, ), {, seriesNameList, ., add, (]
[;, for, (, int, i, =, 0, ;, i, <, seriesCount, ;, i, ++, ), {, seriesNameList, ., add, (]
[(, int, i, =, 0, ;, i, <, seriesCount, ;, i, ++, ), {, seriesNameList, ., add, (, "Series ", +]
[int, i, =, 0, ;, i, <, seriesCount, ;, i, ++, ), {, seriesNameList, ., add, (, "Series ", +, (]
[int, i, =, 0, ;, i, <, seriesCount, ;, i, ++, ), {, seriesNameList, ., add, (, "Series ", +, (]
[=, 0, ;, i, <, seriesCount, ;, i, ++, ), {, seriesNameList, ., add, (, "Series ", +, (, i, +]
[;, i, ++, ), {, seriesNameList, ., add, (, "Series ", +, (, i, +, 1, ), ), ;, }, return]
[+, 1, ), ), ;, }, return, seriesNameList, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[+, 1, ), ), ;, }, return, seriesNameList, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[), ), ;, }, return, seriesNameList, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, this, ==]
[return, seriesNameList, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, this, ==, obj, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, this, ==, obj, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, this, ==, obj, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, this, ==, obj, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, this, ==, obj, ), {, return, true, ;, }, if, (, !, (]
[this, ==, obj, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, DefaultWindDataset, ), ), {, return]
[true, ;, }, if, (, !, (, obj, instanceof, DefaultWindDataset, ), ), {, return, false, ;, }, DefaultWindDataset, that, =]
[if, (, !, (, obj, instanceof, DefaultWindDataset, ), ), {, return, false, ;, }, DefaultWindDataset, that, =, (, DefaultWindDataset, )]
[obj, instanceof, DefaultWindDataset, ), ), {, return, false, ;, }, DefaultWindDataset, that, =, (, DefaultWindDataset, ), obj, ;, if, (]
[instanceof, DefaultWindDataset, ), ), {, return, false, ;, }, DefaultWindDataset, that, =, (, DefaultWindDataset, ), obj, ;, if, (, !]
[instanceof, DefaultWindDataset, ), ), {, return, false, ;, }, DefaultWindDataset, that, =, (, DefaultWindDataset, ), obj, ;, if, (, !]
[instanceof, DefaultWindDataset, ), ), {, return, false, ;, }, DefaultWindDataset, that, =, (, DefaultWindDataset, ), obj, ;, if, (, !]
[false, ;, }, DefaultWindDataset, that, =, (, DefaultWindDataset, ), obj, ;, if, (, !, this, ., seriesKeys, ., equals, (]
[false, ;, }, DefaultWindDataset, that, =, (, DefaultWindDataset, ), obj, ;, if, (, !, this, ., seriesKeys, ., equals, (]
[DefaultWindDataset, ), obj, ;, if, (, !, this, ., seriesKeys, ., equals, (, that, ., seriesKeys, ), ), {, return]
[(, !, this, ., seriesKeys, ., equals, (, that, ., seriesKeys, ), ), {, return, false, ;, }, if, (]
[!, this, ., seriesKeys, ., equals, (, that, ., seriesKeys, ), ), {, return, false, ;, }, if, (, !]
[!, this, ., seriesKeys, ., equals, (, that, ., seriesKeys, ), ), {, return, false, ;, }, if, (, !]
[!, this, ., seriesKeys, ., equals, (, that, ., seriesKeys, ), ), {, return, false, ;, }, if, (, !]
[(, that, ., seriesKeys, ), ), {, return, false, ;, }, if, (, !, this, ., allSeriesData, ., equals, (]
[(, that, ., seriesKeys, ), ), {, return, false, ;, }, if, (, !, this, ., allSeriesData, ., equals, (]
[return, false, ;, }, if, (, !, this, ., allSeriesData, ., equals, (, that, ., allSeriesData, ), ), {, return]
[if, (, !, this, ., allSeriesData, ., equals, (, that, ., allSeriesData, ), ), {, return, false, ;, }, return]
[Number, windDir, ;, private, Number, windForce, ;, public, WindDataItem, (, Number, x, ,, Number, windDir, ,, Number, windForce, ), {]
[Number, windDir, ;, private, Number, windForce, ;, public, WindDataItem, (, Number, x, ,, Number, windDir, ,, Number, windForce, ), {]
[Number, windForce, ;, public, WindDataItem, (, Number, x, ,, Number, windDir, ,, Number, windForce, ), {, this, ., x, =]
[;, public, WindDataItem, (, Number, x, ,, Number, windDir, ,, Number, windForce, ), {, this, ., x, =, x, ;]
[;, public, WindDataItem, (, Number, x, ,, Number, windDir, ,, Number, windForce, ), {, this, ., x, =, x, ;]
[Number, x, ,, Number, windDir, ,, Number, windForce, ), {, this, ., x, =, x, ;, this, ., windDir, =]
[,, Number, windDir, ,, Number, windForce, ), {, this, ., x, =, x, ;, this, ., windDir, =, windDir, ;]
[,, Number, windDir, ,, Number, windForce, ), {, this, ., x, =, x, ;, this, ., windDir, =, windDir, ;]
[Number, windForce, ), {, this, ., x, =, x, ;, this, ., windDir, =, windDir, ;, this, ., windForce, =]
[this, ., windDir, =, windDir, ;, this, ., windForce, =, windForce, ;, }, public, Number, getX, (, ), {, return]
[this, ., windDir, =, windDir, ;, this, ., windForce, =, windForce, ;, }, public, Number, getX, (, ), {, return]
[}, public, Number, getX, (, ), {, return, this, ., x, ;, }, public, Number, getWindDirection, (, ), {, return]
[}, public, Number, getX, (, ), {, return, this, ., x, ;, }, public, Number, getWindDirection, (, ), {, return]
[}, public, Number, getWindDirection, (, ), {, return, this, ., windDir, ;, }, public, Number, getWindForce, (, ), {, return]
[}, public, Number, getWindDirection, (, ), {, return, this, ., windDir, ;, }, public, Number, getWindForce, (, ), {, return]
[getWindForce, (, ), {, return, this, ., windForce, ;, }, public, int, compareTo, (, Object, object, ), {, if, (]
[getWindForce, (, ), {, return, this, ., windForce, ;, }, public, int, compareTo, (, Object, object, ), {, if, (]
[;, }, public, int, compareTo, (, Object, object, ), {, if, (, object, instanceof, WindDataItem, ), {, WindDataItem, item, =]
[int, compareTo, (, Object, object, ), {, if, (, object, instanceof, WindDataItem, ), {, WindDataItem, item, =, (, WindDataItem, )]
[object, ), {, if, (, object, instanceof, WindDataItem, ), {, WindDataItem, item, =, (, WindDataItem, ), object, ;, if, (]
[object, ), {, if, (, object, instanceof, WindDataItem, ), {, WindDataItem, item, =, (, WindDataItem, ), object, ;, if, (]
[object, ), {, if, (, object, instanceof, WindDataItem, ), {, WindDataItem, item, =, (, WindDataItem, ), object, ;, if, (]
[object, ), {, if, (, object, instanceof, WindDataItem, ), {, WindDataItem, item, =, (, WindDataItem, ), object, ;, if, (]
[), {, WindDataItem, item, =, (, WindDataItem, ), object, ;, if, (, this, ., x, ., doubleValue, (, ), >]
[), {, WindDataItem, item, =, (, WindDataItem, ), object, ;, if, (, this, ., x, ., doubleValue, (, ), >]
[), {, WindDataItem, item, =, (, WindDataItem, ), object, ;, if, (, this, ., x, ., doubleValue, (, ), >]
[if, (, this, ., x, ., doubleValue, (, ), >, item, ., x, ., doubleValue, (, ), ), {, return]
[doubleValue, (, ), >, item, ., x, ., doubleValue, (, ), ), {, return, 1, ;, }, else, if, (]
[doubleValue, (, ), >, item, ., x, ., doubleValue, (, ), ), {, return, 1, ;, }, else, if, (]
[doubleValue, (, ), >, item, ., x, ., doubleValue, (, ), ), {, return, 1, ;, }, else, if, (]
[x, ., doubleValue, (, ), ), {, return, 1, ;, }, else, if, (, this, ., x, ., equals, (]
[x, ., doubleValue, (, ), ), {, return, 1, ;, }, else, if, (, this, ., x, ., equals, (]
[return, 1, ;, }, else, if, (, this, ., x, ., equals, (, item, ., x, ), ), {, return]
[(, this, ., x, ., equals, (, item, ., x, ), ), {, return, 0, ;, }, else, {, return]
[this, ., x, ., equals, (, item, ., x, ), ), {, return, 0, ;, }, else, {, return, -]
[., x, ), ), {, return, 0, ;, }, else, {, return, -, 1, ;, }, }, else, {, throw]
[), {, return, 0, ;, }, else, {, return, -, 1, ;, }, }, else, {, throw, new, ClassCastException, (]
[{, throw, new, ClassCastException, (, "WindDataItem.compareTo(error)", ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[{, throw, new, ClassCastException, (, "WindDataItem.compareTo(error)", ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[new, ClassCastException, (, "WindDataItem.compareTo(error)", ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, this, ==]
[), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, this, ==, obj, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, this, ==, obj, ), {, return, false, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, this, ==, obj, ), {, return, false, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, this, ==, obj, ), {, return, false, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, this, ==, obj, ), {, return, false, ;, }, if, (, !, (]
[this, ==, obj, ), {, return, false, ;, }, if, (, !, (, obj, instanceof, WindDataItem, ), ), {, return]
[false, ;, }, if, (, !, (, obj, instanceof, WindDataItem, ), ), {, return, false, ;, }, WindDataItem, that, =]
[if, (, !, (, obj, instanceof, WindDataItem, ), ), {, return, false, ;, }, WindDataItem, that, =, (, WindDataItem, )]
[obj, instanceof, WindDataItem, ), ), {, return, false, ;, }, WindDataItem, that, =, (, WindDataItem, ), obj, ;, if, (]
[instanceof, WindDataItem, ), ), {, return, false, ;, }, WindDataItem, that, =, (, WindDataItem, ), obj, ;, if, (, !]
[instanceof, WindDataItem, ), ), {, return, false, ;, }, WindDataItem, that, =, (, WindDataItem, ), obj, ;, if, (, !]
[instanceof, WindDataItem, ), ), {, return, false, ;, }, WindDataItem, that, =, (, WindDataItem, ), obj, ;, if, (, !]
[false, ;, }, WindDataItem, that, =, (, WindDataItem, ), obj, ;, if, (, !, this, ., x, ., equals, (]
[false, ;, }, WindDataItem, that, =, (, WindDataItem, ), obj, ;, if, (, !, this, ., x, ., equals, (]
[WindDataItem, ), obj, ;, if, (, !, this, ., x, ., equals, (, that, ., x, ), ), {, return]
[(, !, this, ., x, ., equals, (, that, ., x, ), ), {, return, false, ;, }, if, (]
[!, this, ., x, ., equals, (, that, ., x, ), ), {, return, false, ;, }, if, (, !]
[!, this, ., x, ., equals, (, that, ., x, ), ), {, return, false, ;, }, if, (, !]
[!, this, ., x, ., equals, (, that, ., x, ), ), {, return, false, ;, }, if, (, !]
[(, that, ., x, ), ), {, return, false, ;, }, if, (, !, this, ., windDir, ., equals, (]
[(, that, ., x, ), ), {, return, false, ;, }, if, (, !, this, ., windDir, ., equals, (]
[return, false, ;, }, if, (, !, this, ., windDir, ., equals, (, that, ., windDir, ), ), {, return]
[(, !, this, ., windDir, ., equals, (, that, ., windDir, ), ), {, return, false, ;, }, if, (]
[!, this, ., windDir, ., equals, (, that, ., windDir, ), ), {, return, false, ;, }, if, (, !]
[!, this, ., windDir, ., equals, (, that, ., windDir, ), ), {, return, false, ;, }, if, (, !]
[!, this, ., windDir, ., equals, (, that, ., windDir, ), ), {, return, false, ;, }, if, (, !]
[(, that, ., windDir, ), ), {, return, false, ;, }, if, (, !, this, ., windForce, ., equals, (]
[(, that, ., windDir, ), ), {, return, false, ;, }, if, (, !, this, ., windForce, ., equals, (]
[return, false, ;, }, if, (, !, this, ., windForce, ., equals, (, that, ., windForce, ), ), {, return]
[if, (, !, this, ., windForce, ., equals, (, that, ., windForce, ), ), {, return, false, ;, }, return]
