[math3, ., util, ., MathUtils, ;, public, class, StandardDeviation, extends, AbstractStorelessUnivariateStatistic, implements, Serializable, {, private, static, final, long, serialVersionUID, =]
[public, class, StandardDeviation, extends, AbstractStorelessUnivariateStatistic, implements, Serializable, {, private, static, final, long, serialVersionUID, =, 5728716329662425188L, ;, private, Variance, variance, =]
[{, private, static, final, long, serialVersionUID, =, 5728716329662425188L, ;, private, Variance, variance, =, null, ;, public, StandardDeviation, (, ), {]
[static, final, long, serialVersionUID, =, 5728716329662425188L, ;, private, Variance, variance, =, null, ;, public, StandardDeviation, (, ), {, variance, =]
[StandardDeviation, (, ), {, variance, =, new, Variance, (, ), ;, }, public, StandardDeviation, (, final, SecondMoment, m2, ), {]
[), {, variance, =, new, Variance, (, ), ;, }, public, StandardDeviation, (, final, SecondMoment, m2, ), {, variance, =]
[=, new, Variance, (, ), ;, }, public, StandardDeviation, (, final, SecondMoment, m2, ), {, variance, =, new, Variance, (]
[), {, variance, =, new, Variance, (, m2, ), ;, }, public, StandardDeviation, (, StandardDeviation, original, ), throws, NullArgumentException, {]
[variance, =, new, Variance, (, m2, ), ;, }, public, StandardDeviation, (, StandardDeviation, original, ), throws, NullArgumentException, {, copy, (]
[new, Variance, (, m2, ), ;, }, public, StandardDeviation, (, StandardDeviation, original, ), throws, NullArgumentException, {, copy, (, original, ,]
[original, ), throws, NullArgumentException, {, copy, (, original, ,, this, ), ;, }, public, StandardDeviation, (, boolean, isBiasCorrected, ), {]
[throws, NullArgumentException, {, copy, (, original, ,, this, ), ;, }, public, StandardDeviation, (, boolean, isBiasCorrected, ), {, variance, =]
[copy, (, original, ,, this, ), ;, }, public, StandardDeviation, (, boolean, isBiasCorrected, ), {, variance, =, new, Variance, (]
[{, variance, =, new, Variance, (, isBiasCorrected, ), ;, }, public, StandardDeviation, (, boolean, isBiasCorrected, ,, SecondMoment, m2, ), {]
[=, new, Variance, (, isBiasCorrected, ), ;, }, public, StandardDeviation, (, boolean, isBiasCorrected, ,, SecondMoment, m2, ), {, variance, =]
[(, isBiasCorrected, ), ;, }, public, StandardDeviation, (, boolean, isBiasCorrected, ,, SecondMoment, m2, ), {, variance, =, new, Variance, (]
[), ;, }, public, StandardDeviation, (, boolean, isBiasCorrected, ,, SecondMoment, m2, ), {, variance, =, new, Variance, (, isBiasCorrected, ,]
[new, Variance, (, isBiasCorrected, ,, m2, ), ;, }, @, Override, public, void, increment, (, final, double, d, ), {]
[new, Variance, (, isBiasCorrected, ,, m2, ), ;, }, @, Override, public, void, increment, (, final, double, d, ), {]
[,, m2, ), ;, }, @, Override, public, void, increment, (, final, double, d, ), {, variance, ., increment, (]
[final, double, d, ), {, variance, ., increment, (, d, ), ;, }, public, long, getN, (, ), {, return]
[final, double, d, ), {, variance, ., increment, (, d, ), ;, }, public, long, getN, (, ), {, return]
[(, ), {, return, variance, ., getN, (, ), ;, }, @, Override, public, double, getResult, (, ), {, return]
[(, ), {, return, variance, ., getN, (, ), ;, }, @, Override, public, double, getResult, (, ), {, return]
[variance, ., getN, (, ), ;, }, @, Override, public, double, getResult, (, ), {, return, FastMath, ., sqrt, (]
[variance, ., getN, (, ), ;, }, @, Override, public, double, getResult, (, ), {, return, FastMath, ., sqrt, (]
[FastMath, ., sqrt, (, variance, ., getResult, (, ), ), ;, }, @, Override, public, void, clear, (, ), {]
[FastMath, ., sqrt, (, variance, ., getResult, (, ), ), ;, }, @, Override, public, void, clear, (, ), {]
[(, ), ;, }, @, Override, public, double, evaluate, (, final, double, [, ], values, ), throws, MathIllegalArgumentException, {, return]
[(, ), ;, }, @, Override, public, double, evaluate, (, final, double, [, ], values, ), throws, MathIllegalArgumentException, {, return]
[@, Override, public, double, evaluate, (, final, double, [, ], values, ), throws, MathIllegalArgumentException, {, return, FastMath, ., sqrt, (]
[@, Override, public, double, evaluate, (, final, double, [, ], values, ), throws, MathIllegalArgumentException, {, return, FastMath, ., sqrt, (]
[evaluate, (, final, double, [, ], values, ), throws, MathIllegalArgumentException, {, return, FastMath, ., sqrt, (, variance, ., evaluate, (]
[evaluate, (, final, double, [, ], values, ,, final, int, begin, ,, final, int, length, ), throws, MathIllegalArgumentException, {, return]
[evaluate, (, final, double, [, ], values, ,, final, int, begin, ,, final, int, length, ), throws, MathIllegalArgumentException, {, return]
[[, ], values, ,, final, int, begin, ,, final, int, length, ), throws, MathIllegalArgumentException, {, return, FastMath, ., sqrt, (]
[[, ], values, ,, final, int, begin, ,, final, int, length, ), throws, MathIllegalArgumentException, {, return, FastMath, ., sqrt, (]
[final, int, begin, ,, final, int, length, ), throws, MathIllegalArgumentException, {, return, FastMath, ., sqrt, (, variance, ., evaluate, (]
[begin, ,, final, int, length, ), throws, MathIllegalArgumentException, {, return, FastMath, ., sqrt, (, variance, ., evaluate, (, values, ,]
[final, int, length, ), throws, MathIllegalArgumentException, {, return, FastMath, ., sqrt, (, variance, ., evaluate, (, values, ,, begin, ,]
[[, ], values, ,, final, double, mean, ,, final, int, begin, ,, final, int, length, ), throws, MathIllegalArgumentException, {, return]
[[, ], values, ,, final, double, mean, ,, final, int, begin, ,, final, int, length, ), throws, MathIllegalArgumentException, {, return]
[final, double, mean, ,, final, int, begin, ,, final, int, length, ), throws, MathIllegalArgumentException, {, return, FastMath, ., sqrt, (]
[final, double, mean, ,, final, int, begin, ,, final, int, length, ), throws, MathIllegalArgumentException, {, return, FastMath, ., sqrt, (]
[final, int, begin, ,, final, int, length, ), throws, MathIllegalArgumentException, {, return, FastMath, ., sqrt, (, variance, ., evaluate, (]
[begin, ,, final, int, length, ), throws, MathIllegalArgumentException, {, return, FastMath, ., sqrt, (, variance, ., evaluate, (, values, ,]
[final, int, length, ), throws, MathIllegalArgumentException, {, return, FastMath, ., sqrt, (, variance, ., evaluate, (, values, ,, mean, ,]
[length, ), throws, MathIllegalArgumentException, {, return, FastMath, ., sqrt, (, variance, ., evaluate, (, values, ,, mean, ,, begin, ,]
[;, }, public, double, evaluate, (, final, double, [, ], values, ,, final, double, mean, ), throws, MathIllegalArgumentException, {, return]
[;, }, public, double, evaluate, (, final, double, [, ], values, ,, final, double, mean, ), throws, MathIllegalArgumentException, {, return]
[evaluate, (, final, double, [, ], values, ,, final, double, mean, ), throws, MathIllegalArgumentException, {, return, FastMath, ., sqrt, (]
[evaluate, (, final, double, [, ], values, ,, final, double, mean, ), throws, MathIllegalArgumentException, {, return, FastMath, ., sqrt, (]
[[, ], values, ,, final, double, mean, ), throws, MathIllegalArgumentException, {, return, FastMath, ., sqrt, (, variance, ., evaluate, (]
[values, ,, final, double, mean, ), throws, MathIllegalArgumentException, {, return, FastMath, ., sqrt, (, variance, ., evaluate, (, values, ,]
[sqrt, (, variance, ., evaluate, (, values, ,, mean, ), ), ;, }, public, boolean, isBiasCorrected, (, ), {, return]
[sqrt, (, variance, ., evaluate, (, values, ,, mean, ), ), ;, }, public, boolean, isBiasCorrected, (, ), {, return]
[isBiasCorrected, (, ), {, return, variance, ., isBiasCorrected, (, ), ;, }, public, void, setBiasCorrected, (, boolean, isBiasCorrected, ), {]
[isBiasCorrected, (, ), {, return, variance, ., isBiasCorrected, (, ), ;, }, public, void, setBiasCorrected, (, boolean, isBiasCorrected, ), {]
[return, variance, ., isBiasCorrected, (, ), ;, }, public, void, setBiasCorrected, (, boolean, isBiasCorrected, ), {, variance, ., setBiasCorrected, (]
[{, variance, ., setBiasCorrected, (, isBiasCorrected, ), ;, }, @, Override, public, StandardDeviation, copy, (, ), {, StandardDeviation, result, =]
[isBiasCorrected, ), ;, }, @, Override, public, StandardDeviation, copy, (, ), {, StandardDeviation, result, =, new, StandardDeviation, (, ), ;]
[;, }, @, Override, public, StandardDeviation, copy, (, ), {, StandardDeviation, result, =, new, StandardDeviation, (, ), ;, copy, (]
[@, Override, public, StandardDeviation, copy, (, ), {, StandardDeviation, result, =, new, StandardDeviation, (, ), ;, copy, (, this, ,]
[copy, (, ), {, StandardDeviation, result, =, new, StandardDeviation, (, ), ;, copy, (, this, ,, result, ), ;, return]
[), ;, return, result, ;, }, public, static, void, copy, (, StandardDeviation, source, ,, StandardDeviation, dest, ), throws, NullArgumentException, {]
[), ;, return, result, ;, }, public, static, void, copy, (, StandardDeviation, source, ,, StandardDeviation, dest, ), throws, NullArgumentException, {]
[;, }, public, static, void, copy, (, StandardDeviation, source, ,, StandardDeviation, dest, ), throws, NullArgumentException, {, MathUtils, ., checkNotNull, (]
[static, void, copy, (, StandardDeviation, source, ,, StandardDeviation, dest, ), throws, NullArgumentException, {, MathUtils, ., checkNotNull, (, source, ), ;]
[static, void, copy, (, StandardDeviation, source, ,, StandardDeviation, dest, ), throws, NullArgumentException, {, MathUtils, ., checkNotNull, (, source, ), ;]
[StandardDeviation, source, ,, StandardDeviation, dest, ), throws, NullArgumentException, {, MathUtils, ., checkNotNull, (, source, ), ;, MathUtils, ., checkNotNull, (]
[StandardDeviation, dest, ), throws, NullArgumentException, {, MathUtils, ., checkNotNull, (, source, ), ;, MathUtils, ., checkNotNull, (, dest, ), ;]
[StandardDeviation, dest, ), throws, NullArgumentException, {, MathUtils, ., checkNotNull, (, source, ), ;, MathUtils, ., checkNotNull, (, dest, ), ;]
[NullArgumentException, {, MathUtils, ., checkNotNull, (, source, ), ;, MathUtils, ., checkNotNull, (, dest, ), ;, dest, ., setData, (]
[NullArgumentException, {, MathUtils, ., checkNotNull, (, source, ), ;, MathUtils, ., checkNotNull, (, dest, ), ;, dest, ., setData, (]
[), ;, MathUtils, ., checkNotNull, (, dest, ), ;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;]
[), ;, MathUtils, ., checkNotNull, (, dest, ), ;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;]
[checkNotNull, (, dest, ), ;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;, dest, ., variance, =]
[checkNotNull, (, dest, ), ;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;, dest, ., variance, =]
[checkNotNull, (, dest, ), ;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;, dest, ., variance, =]
