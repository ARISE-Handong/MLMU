[private, static, final, long, serialVersionUID, =, 7037524068969447317L, ;, static, final, DateTimeField, INSTANCE, =, new, ISOYearOfEraDateTimeField, (, ), ;, private, ISOYearOfEraDateTimeField]
[), private, static, final, long, serialVersionUID, =, 7037524068969447317L, ;, static, final, DateTimeField, INSTANCE, =, new, ISOYearOfEraDateTimeField, (, ), ;, private]
[;, static, final, DateTimeField, INSTANCE, =, new, ISOYearOfEraDateTimeField, (, ), ;, private, ISOYearOfEraDateTimeField, (, ), {, super, (, GregorianChronology, .]
[;, private, ISOYearOfEraDateTimeField, (, ), {, super, (, GregorianChronology, ., getInstanceUTC, (, ), ., year, (, ), ,, DateTimeFieldType, .]
[,, DateTimeFieldType, ., yearOfEra, (, ), ), ;, }, @, Override, public, DurationField, getRangeDurationField, (, ), {, return, GregorianChronology, .]
[., year, (, ), ,, DateTimeFieldType, ., yearOfEra, (, ), ), ;, }, @, Override, public, DurationField, getRangeDurationField, (, )]
[., getInstanceUTC, (, ), ., year, (, ), ,, DateTimeFieldType, ., yearOfEra, (, ), ), ;, }, @, Override, public]
[), ;, }, @, Override, public, DurationField, getRangeDurationField, (, ), {, return, GregorianChronology, ., getInstanceUTC, (, ), ., eras, (]
[., yearOfEra, (, ), ), ;, }, @, Override, public, DurationField, getRangeDurationField, (, ), {, return, GregorianChronology, ., getInstanceUTC, (]
[;, }, public, int, get, (, long, instant, ), {, int, year, =, getWrappedField, (, ), ., get, (, instant]
[., eras, (, ), ;, }, public, int, get, (, long, instant, ), {, int, year, =, getWrappedField, (, )]
[., getInstanceUTC, (, ), ., eras, (, ), ;, }, public, int, get, (, long, instant, ), {, int, year]
[;, return, year, <, 0, ?, -, year, :, year, ;, }, public, long, add, (, long, instant, ,, int]
[., get, (, instant, ), ;, return, year, <, 0, ?, -, year, :, year, ;, }, public, long, add]
[), ;, return, year, <, 0, ?, -, year, :, year, ;, }, public, long, add, (, long, instant, ,]
[;, }, public, long, add, (, long, instant, ,, int, years, ), {, return, getWrappedField, (, ), ., add, (]
[?, -, year, :, year, ;, }, public, long, add, (, long, instant, ,, int, years, ), {, return, getWrappedField]
[<, 0, ?, -, year, :, year, ;, }, public, long, add, (, long, instant, ,, int, years, ), {]
[?, -, year, :, year, ;, }, public, long, add, (, long, instant, ,, int, years, ), {, return, getWrappedField]
[:, year, ;, }, public, long, add, (, long, instant, ,, int, years, ), {, return, getWrappedField, (, ), .]
[:, year, ;, }, public, long, add, (, long, instant, ,, int, years, ), {, return, getWrappedField, (, ), .]
[;, }, public, long, add, (, long, instant, ,, int, years, ), {, return, getWrappedField, (, ), ., add, (]
[;, }, public, long, add, (, long, instant, ,, long, years, ), {, return, getWrappedField, (, ), ., add, (]
[., add, (, instant, ,, years, ), ;, }, public, long, add, (, long, instant, ,, long, years, ), {]
[,, years, ), ;, }, public, long, add, (, long, instant, ,, long, years, ), {, return, getWrappedField, (, )]
[), ;, }, public, long, add, (, long, instant, ,, long, years, ), {, return, getWrappedField, (, ), ., add]
[;, }, public, long, addWrapField, (, long, instant, ,, int, years, ), {, return, getWrappedField, (, ), ., addWrapField, (]
[., add, (, instant, ,, years, ), ;, }, public, long, addWrapField, (, long, instant, ,, int, years, ), {]
[,, years, ), ;, }, public, long, addWrapField, (, long, instant, ,, int, years, ), {, return, getWrappedField, (, )]
[), ;, }, public, long, addWrapField, (, long, instant, ,, int, years, ), {, return, getWrappedField, (, ), ., addWrapField]
[;, }, public, int, [, ], addWrapField, (, ReadablePartial, instant, ,, int, fieldIndex, ,, int, [, ], values, ,, int]
[., addWrapField, (, instant, ,, years, ), ;, }, public, int, [, ], addWrapField, (, ReadablePartial, instant, ,, int, fieldIndex]
[,, years, ), ;, }, public, int, [, ], addWrapField, (, ReadablePartial, instant, ,, int, fieldIndex, ,, int, [, ]]
[), ;, }, public, int, [, ], addWrapField, (, ReadablePartial, instant, ,, int, fieldIndex, ,, int, [, ], values, ,]
[;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, getWrappedField, (, ), ., getDifference, (]
[., addWrapField, (, instant, ,, fieldIndex, ,, values, ,, years, ), ;, }, public, int, getDifference, (, long, minuendInstant, ,]
[,, fieldIndex, ,, values, ,, years, ), ;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {]
[,, values, ,, years, ), ;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, getWrappedField]
[,, years, ), ;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, getWrappedField, (, )]
[), ;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, getWrappedField, (, ), ., getDifference]
[;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, getWrappedField, (, ), ., getDifferenceAsLong, (]
[., getDifference, (, minuendInstant, ,, subtrahendInstant, ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {]
[,, subtrahendInstant, ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, getWrappedField, (, )]
[), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, getWrappedField, (, ), ., getDifferenceAsLong]
[;, }, public, long, set, (, long, instant, ,, int, year, ), {, FieldUtils, ., verifyValueBounds, (, this, ,, year]
[., getDifferenceAsLong, (, minuendInstant, ,, subtrahendInstant, ), ;, }, public, long, set, (, long, instant, ,, int, year, ), {]
[,, subtrahendInstant, ), ;, }, public, long, set, (, long, instant, ,, int, year, ), {, FieldUtils, ., verifyValueBounds, (]
[), ;, }, public, long, set, (, long, instant, ,, int, year, ), {, FieldUtils, ., verifyValueBounds, (, this, ,]
[;, if, (, getWrappedField, (, ), ., get, (, instant, ), <, 0, ), {, year, =, -, year, ;]
[., verifyValueBounds, (, this, ,, year, ,, 0, ,, getMaximumValue, (, ), ), ;, if, (, getWrappedField, (, ), .]
[,, year, ,, 0, ,, getMaximumValue, (, ), ), ;, if, (, getWrappedField, (, ), ., get, (, instant, )]
[,, 0, ,, getMaximumValue, (, ), ), ;, if, (, getWrappedField, (, ), ., get, (, instant, ), <, 0]
[,, getMaximumValue, (, ), ), ;, if, (, getWrappedField, (, ), ., get, (, instant, ), <, 0, ), {]
[), ;, if, (, getWrappedField, (, ), ., get, (, instant, ), <, 0, ), {, year, =, -, year]
[), {, year, =, -, year, ;, }, return, super, ., set, (, instant, ,, year, ), ;, }, public]
[<, 0, ), {, year, =, -, year, ;, }, return, super, ., set, (, instant, ,, year, ), ;]
[., get, (, instant, ), <, 0, ), {, year, =, -, year, ;, }, return, super, ., set, (]
[), <, 0, ), {, year, =, -, year, ;, }, return, super, ., set, (, instant, ,, year, )]
[), {, year, =, -, year, ;, }, return, super, ., set, (, instant, ,, year, ), ;, }, public]
[=, -, year, ;, }, return, super, ., set, (, instant, ,, year, ), ;, }, public, int, getMinimumValue, (]
[;, }, return, super, ., set, (, instant, ,, year, ), ;, }, public, int, getMinimumValue, (, ), {, return]
[;, }, return, super, ., set, (, instant, ,, year, ), ;, }, public, int, getMinimumValue, (, ), {, return]
[;, }, public, int, getMinimumValue, (, ), {, return, 0, ;, }, public, int, getMaximumValue, (, ), {, return, getWrappedField]
[., set, (, instant, ,, year, ), ;, }, public, int, getMinimumValue, (, ), {, return, 0, ;, }, public]
[,, year, ), ;, }, public, int, getMinimumValue, (, ), {, return, 0, ;, }, public, int, getMaximumValue, (, )]
[), ;, }, public, int, getMinimumValue, (, ), {, return, 0, ;, }, public, int, getMaximumValue, (, ), {, return]
[;, }, public, int, getMaximumValue, (, ), {, return, getWrappedField, (, ), ., getMaximumValue, (, ), ;, }, public, long]
[;, }, public, long, roundFloor, (, long, instant, ), {, return, getWrappedField, (, ), ., roundFloor, (, instant, ), ;]
[., getMaximumValue, (, ), ;, }, public, long, roundFloor, (, long, instant, ), {, return, getWrappedField, (, ), ., roundFloor]
[;, }, public, long, roundCeiling, (, long, instant, ), {, return, getWrappedField, (, ), ., roundCeiling, (, instant, ), ;]
[., roundFloor, (, instant, ), ;, }, public, long, roundCeiling, (, long, instant, ), {, return, getWrappedField, (, ), .]
[), ;, }, public, long, roundCeiling, (, long, instant, ), {, return, getWrappedField, (, ), ., roundCeiling, (, instant, )]
[;, }, public, long, remainder, (, long, instant, ), {, return, getWrappedField, (, ), ., remainder, (, instant, ), ;]
[., roundCeiling, (, instant, ), ;, }, public, long, remainder, (, long, instant, ), {, return, getWrappedField, (, ), .]
[), ;, }, public, long, remainder, (, long, instant, ), {, return, getWrappedField, (, ), ., remainder, (, instant, )]
[;, }, private, Object, readResolve, (, ), {, return, INSTANCE, ;, }, }]
[., remainder, (, instant, ), ;, }, private, Object, readResolve, (, ), {, return, INSTANCE, ;, }, }]
[), ;, }, private, Object, readResolve, (, ), {, return, INSTANCE, ;, }, }]
[;, }, }]
