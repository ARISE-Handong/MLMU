[., util, ., Enumeration, ;, class, PluginLoader, {, private, final, PluginSwitch, pluginSwitch, ;, public, PluginLoader, (, PluginSwitch, pluginSwitch, ), {]
[., util, ., Enumeration, ;, class, PluginLoader, {, private, final, PluginSwitch, pluginSwitch, ;, public, PluginLoader, (, PluginSwitch, pluginSwitch, ), {]
[;, class, PluginLoader, {, private, final, PluginSwitch, pluginSwitch, ;, public, PluginLoader, (, PluginSwitch, pluginSwitch, ), {, this, ., pluginSwitch, =]
[}, <, T, >, T, loadPlugin, (, Class, <, T, >, pluginType, ,, String, defaultPluginClassName, ), {, T, plugin, =]
[T, >, T, loadPlugin, (, Class, <, T, >, pluginType, ,, String, defaultPluginClassName, ), {, T, plugin, =, loadImpl, (]
[Class, <, T, >, pluginType, ,, String, defaultPluginClassName, ), {, T, plugin, =, loadImpl, (, pluginType, ), ;, if, (]
[Class, <, T, >, pluginType, ,, String, defaultPluginClassName, ), {, T, plugin, =, loadImpl, (, pluginType, ), ;, if, (]
[T, >, pluginType, ,, String, defaultPluginClassName, ), {, T, plugin, =, loadImpl, (, pluginType, ), ;, if, (, plugin, !=]
[String, defaultPluginClassName, ), {, T, plugin, =, loadImpl, (, pluginType, ), ;, if, (, plugin, !=, null, ), {, return]
[=, loadImpl, (, pluginType, ), ;, if, (, plugin, !=, null, ), {, return, plugin, ;, }, try, {, return]
[=, loadImpl, (, pluginType, ), ;, if, (, plugin, !=, null, ), {, return, plugin, ;, }, try, {, return]
[), ;, if, (, plugin, !=, null, ), {, return, plugin, ;, }, try, {, return, pluginType, ., cast, (]
[), ;, if, (, plugin, !=, null, ), {, return, plugin, ;, }, try, {, return, pluginType, ., cast, (]
[), ;, if, (, plugin, !=, null, ), {, return, plugin, ;, }, try, {, return, pluginType, ., cast, (]
[plugin, !=, null, ), {, return, plugin, ;, }, try, {, return, pluginType, ., cast, (, Class, ., forName, (]
[Class, ., forName, (, defaultPluginClassName, ), ., newInstance, (, ), ), ;, }, catch, (, Exception, e, ), {, throw]
[(, defaultPluginClassName, ), ., newInstance, (, ), ), ;, }, catch, (, Exception, e, ), {, throw, new, MockitoException, (]
[(, defaultPluginClassName, ), ., newInstance, (, ), ), ;, }, catch, (, Exception, e, ), {, throw, new, MockitoException, (]
[(, defaultPluginClassName, ), ., newInstance, (, ), ), ;, }, catch, (, Exception, e, ), {, throw, new, MockitoException, (]
[(, defaultPluginClassName, ), ., newInstance, (, ), ), ;, }, catch, (, Exception, e, ), {, throw, new, MockitoException, (]
[), ., newInstance, (, ), ), ;, }, catch, (, Exception, e, ), {, throw, new, MockitoException, (, "Internal problem occurred, please report it. ", +]
[newInstance, (, ), ), ;, }, catch, (, Exception, e, ), {, throw, new, MockitoException, (, "Internal problem occurred, please report it. ", +, "Mockito is unable to load the default implementation of class that is a part of Mockito distribution. ", +]
[), ), ;, }, catch, (, Exception, e, ), {, throw, new, MockitoException, (, "Internal problem occurred, please report it. ", +, "Mockito is unable to load the default implementation of class that is a part of Mockito distribution. ", +, "Failed to load ", +]
[;, }, catch, (, Exception, e, ), {, throw, new, MockitoException, (, "Internal problem occurred, please report it. ", +, "Mockito is unable to load the default implementation of class that is a part of Mockito distribution. ", +, "Failed to load ", +, pluginType, ,]
[), ;, }, }, <, T, >, T, loadImpl, (, Class, <, T, >, service, ), {, ClassLoader, loader, =]
[), ;, }, }, <, T, >, T, loadImpl, (, Class, <, T, >, service, ), {, ClassLoader, loader, =]
[), ;, }, }, <, T, >, T, loadImpl, (, Class, <, T, >, service, ), {, ClassLoader, loader, =]
[T, >, service, ), {, ClassLoader, loader, =, Thread, ., currentThread, (, ), ., getContextClassLoader, (, ), ;, if, (]
[T, >, service, ), {, ClassLoader, loader, =, Thread, ., currentThread, (, ), ., getContextClassLoader, (, ), ;, if, (]
[service, ), {, ClassLoader, loader, =, Thread, ., currentThread, (, ), ., getContextClassLoader, (, ), ;, if, (, loader, ==]
[ClassLoader, loader, =, Thread, ., currentThread, (, ), ., getContextClassLoader, (, ), ;, if, (, loader, ==, null, ), {]
[=, Thread, ., currentThread, (, ), ., getContextClassLoader, (, ), ;, if, (, loader, ==, null, ), {, loader, =]
[=, Thread, ., currentThread, (, ), ., getContextClassLoader, (, ), ;, if, (, loader, ==, null, ), {, loader, =]
[null, ), {, loader, =, ClassLoader, ., getSystemClassLoader, (, ), ;, }, Enumeration, <, URL, >, resources, ;, try, {]
[{, loader, =, ClassLoader, ., getSystemClassLoader, (, ), ;, }, Enumeration, <, URL, >, resources, ;, try, {, resources, =]
[{, loader, =, ClassLoader, ., getSystemClassLoader, (, ), ;, }, Enumeration, <, URL, >, resources, ;, try, {, resources, =]
[., getSystemClassLoader, (, ), ;, }, Enumeration, <, URL, >, resources, ;, try, {, resources, =, loader, ., getResources, (]
[., getSystemClassLoader, (, ), ;, }, Enumeration, <, URL, >, resources, ;, try, {, resources, =, loader, ., getResources, (]
[(, ), ;, }, Enumeration, <, URL, >, resources, ;, try, {, resources, =, loader, ., getResources, (, "mockito-extensions/", +]
[(, ), ;, }, Enumeration, <, URL, >, resources, ;, try, {, resources, =, loader, ., getResources, (, "mockito-extensions/", +]
[., getResources, (, "mockito-extensions/", +, service, ., getName, (, ), ), ;, }, catch, (, IOException, e, ), {, throw]
["mockito-extensions/", +, service, ., getName, (, ), ), ;, }, catch, (, IOException, e, ), {, throw, new, MockitoException, (]
["mockito-extensions/", +, service, ., getName, (, ), ), ;, }, catch, (, IOException, e, ), {, throw, new, MockitoException, (]
[service, ., getName, (, ), ), ;, }, catch, (, IOException, e, ), {, throw, new, MockitoException, (, "Failed to load ", +]
[getName, (, ), ), ;, }, catch, (, IOException, e, ), {, throw, new, MockitoException, (, "Failed to load ", +, service, ,]
[e, ), {, throw, new, MockitoException, (, "Failed to load ", +, service, ,, e, ), ;, }, try, {, String, foundPluginClass, =]
[e, ), {, throw, new, MockitoException, (, "Failed to load ", +, service, ,, e, ), ;, }, try, {, String, foundPluginClass, =]
[throw, new, MockitoException, (, "Failed to load ", +, service, ,, e, ), ;, }, try, {, String, foundPluginClass, =, new, PluginFinder, (]
[+, service, ,, e, ), ;, }, try, {, String, foundPluginClass, =, new, PluginFinder, (, pluginSwitch, ), ., findPluginClass, (]
[+, service, ,, e, ), ;, }, try, {, String, foundPluginClass, =, new, PluginFinder, (, pluginSwitch, ), ., findPluginClass, (]
[), ;, }, try, {, String, foundPluginClass, =, new, PluginFinder, (, pluginSwitch, ), ., findPluginClass, (, Iterables, ., toIterable, (]
[foundPluginClass, =, new, PluginFinder, (, pluginSwitch, ), ., findPluginClass, (, Iterables, ., toIterable, (, resources, ), ), ;, if, (]
[foundPluginClass, =, new, PluginFinder, (, pluginSwitch, ), ., findPluginClass, (, Iterables, ., toIterable, (, resources, ), ), ;, if, (]
[new, PluginFinder, (, pluginSwitch, ), ., findPluginClass, (, Iterables, ., toIterable, (, resources, ), ), ;, if, (, foundPluginClass, !=]
[., toIterable, (, resources, ), ), ;, if, (, foundPluginClass, !=, null, ), {, Class, <, ?, >, pluginClass, =]
[., toIterable, (, resources, ), ), ;, if, (, foundPluginClass, !=, null, ), {, Class, <, ?, >, pluginClass, =]
[), ), ;, if, (, foundPluginClass, !=, null, ), {, Class, <, ?, >, pluginClass, =, loader, ., loadClass, (]
[!=, null, ), {, Class, <, ?, >, pluginClass, =, loader, ., loadClass, (, foundPluginClass, ), ;, Object, plugin, =]
[!=, null, ), {, Class, <, ?, >, pluginClass, =, loader, ., loadClass, (, foundPluginClass, ), ;, Object, plugin, =]
[>, pluginClass, =, loader, ., loadClass, (, foundPluginClass, ), ;, Object, plugin, =, pluginClass, ., newInstance, (, ), ;, return]
[>, pluginClass, =, loader, ., loadClass, (, foundPluginClass, ), ;, Object, plugin, =, pluginClass, ., newInstance, (, ), ;, return]
[., loadClass, (, foundPluginClass, ), ;, Object, plugin, =, pluginClass, ., newInstance, (, ), ;, return, service, ., cast, (]
[;, Object, plugin, =, pluginClass, ., newInstance, (, ), ;, return, service, ., cast, (, plugin, ), ;, }, return]
[return, service, ., cast, (, plugin, ), ;, }, return, null, ;, }, catch, (, Exception, e, ), {, throw]
[cast, (, plugin, ), ;, }, return, null, ;, }, catch, (, Exception, e, ), {, throw, new, MockitoConfigurationException, (]
[cast, (, plugin, ), ;, }, return, null, ;, }, catch, (, Exception, e, ), {, throw, new, MockitoConfigurationException, (]
[cast, (, plugin, ), ;, }, return, null, ;, }, catch, (, Exception, e, ), {, throw, new, MockitoConfigurationException, (]
[cast, (, plugin, ), ;, }, return, null, ;, }, catch, (, Exception, e, ), {, throw, new, MockitoConfigurationException, (]
[plugin, ), ;, }, return, null, ;, }, catch, (, Exception, e, ), {, throw, new, MockitoConfigurationException, (, "Failed to load ", +]
[;, }, return, null, ;, }, catch, (, Exception, e, ), {, throw, new, MockitoConfigurationException, (, "Failed to load ", +, service, +]
[return, null, ;, }, catch, (, Exception, e, ), {, throw, new, MockitoConfigurationException, (, "Failed to load ", +, service, +, " implementation declared in ", +]
[;, }, catch, (, Exception, e, ), {, throw, new, MockitoConfigurationException, (, "Failed to load ", +, service, +, " implementation declared in ", +, resources, ,]
