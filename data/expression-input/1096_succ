[;, CheckProvides, (, AbstractCompiler, compiler, ,, CheckLevel, checkLevel, ), {, this, ., compiler, =, compiler, ;, this, ., checkLevel, =]
[., disabled, (, "JSC_MISSING_PROVIDE", ,, "missing goog.provide(''{0}'')", ), ;, CheckProvides, (, AbstractCompiler, compiler, ,, CheckLevel, checkLevel, ), {, this, ., compiler]
[,, "missing goog.provide(''{0}'')", ), ;, CheckProvides, (, AbstractCompiler, compiler, ,, CheckLevel, checkLevel, ), {, this, ., compiler, =, compiler, ;, this]
[), ;, CheckProvides, (, AbstractCompiler, compiler, ,, CheckLevel, checkLevel, ), {, this, ., compiler, =, compiler, ;, this, ., checkLevel]
[=, compiler, ;, this, ., checkLevel, =, checkLevel, ;, this, ., codingConvention, =, compiler, ., getCodingConvention, (, ), ;, }]
[., compiler, =, compiler, ;, this, ., checkLevel, =, checkLevel, ;, this, ., codingConvention, =, compiler, ., getCodingConvention, (, )]
[;, this, ., checkLevel, =, checkLevel, ;, this, ., codingConvention, =, compiler, ., getCodingConvention, (, ), ;, }, @, Override]
[=, checkLevel, ;, this, ., codingConvention, =, compiler, ., getCodingConvention, (, ), ;, }, @, Override, public, void, process, (]
[., checkLevel, =, checkLevel, ;, this, ., codingConvention, =, compiler, ., getCodingConvention, (, ), ;, }, @, Override, public, void]
[;, this, ., codingConvention, =, compiler, ., getCodingConvention, (, ), ;, }, @, Override, public, void, process, (, Node, externs]
[=, compiler, ., getCodingConvention, (, ), ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, )]
[., codingConvention, =, compiler, ., getCodingConvention, (, ), ;, }, @, Override, public, void, process, (, Node, externs, ,, Node]
[;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, hotSwapScript, (, root, ,, null]
[., getCodingConvention, (, ), ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, hotSwapScript]
[;, }, @, Override, public, void, hotSwapScript, (, Node, scriptRoot, ,, Node, originalRoot, ), {, CheckProvidesCallback, callback, =, new, CheckProvidesCallback]
[,, null, ), ;, }, @, Override, public, void, hotSwapScript, (, Node, scriptRoot, ,, Node, originalRoot, ), {, CheckProvidesCallback, callback]
[), ;, }, @, Override, public, void, hotSwapScript, (, Node, scriptRoot, ,, Node, originalRoot, ), {, CheckProvidesCallback, callback, =, new]
[;, new, NodeTraversal, (, compiler, ,, callback, ), ., traverse, (, scriptRoot, ), ;, }, private, class, CheckProvidesCallback, extends, AbstractShallowCallback]
[), ;, new, NodeTraversal, (, compiler, ,, callback, ), ., traverse, (, scriptRoot, ), ;, }, private, class, CheckProvidesCallback, extends]
[;, }, private, class, CheckProvidesCallback, extends, AbstractShallowCallback, {, private, final, Map, <, String, ,, Node, >, provides, =, Maps, .]
[., traverse, (, scriptRoot, ), ;, }, private, class, CheckProvidesCallback, extends, AbstractShallowCallback, {, private, final, Map, <, String, ,, Node]
[,, callback, ), ., traverse, (, scriptRoot, ), ;, }, private, class, CheckProvidesCallback, extends, AbstractShallowCallback, {, private, final, Map, <]
[), ., traverse, (, scriptRoot, ), ;, }, private, class, CheckProvidesCallback, extends, AbstractShallowCallback, {, private, final, Map, <, String, ,]
[), ;, }, private, class, CheckProvidesCallback, extends, AbstractShallowCallback, {, private, final, Map, <, String, ,, Node, >, provides, =, Maps]
[;, private, final, Map, <, String, ,, Node, >, ctors, =, Maps, ., newHashMap, (, ), ;, private, final, CodingConvention]
[., newHashMap, (, ), ;, private, final, Map, <, String, ,, Node, >, ctors, =, Maps, ., newHashMap, (, )]
[;, private, final, CodingConvention, convention, ;, CheckProvidesCallback, (, CodingConvention, convention, ), {, this, ., convention, =, convention, ;, }, @]
[., newHashMap, (, ), ;, private, final, CodingConvention, convention, ;, CheckProvidesCallback, (, CodingConvention, convention, ), {, this, ., convention, =]
[=, convention, ;, }, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {]
[., convention, =, convention, ;, }, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent]
[;, }, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, switch, (]
[), {, case, Token, ., CALL, :, String, providedClassName, =, codingConvention, ., extractClassNameIfProvide, (, n, ,, parent, ), ;, if]
[., getType, (, ), ), {, case, Token, ., CALL, :, String, providedClassName, =, codingConvention, ., extractClassNameIfProvide, (, n, ,]
[:, String, providedClassName, =, codingConvention, ., extractClassNameIfProvide, (, n, ,, parent, ), ;, if, (, providedClassName, !=, null, ), {]
[., CALL, :, String, providedClassName, =, codingConvention, ., extractClassNameIfProvide, (, n, ,, parent, ), ;, if, (, providedClassName, !=, null]
[;, if, (, providedClassName, !=, null, ), {, provides, ., put, (, providedClassName, ,, n, ), ;, }, break, ;]
[., extractClassNameIfProvide, (, n, ,, parent, ), ;, if, (, providedClassName, !=, null, ), {, provides, ., put, (, providedClassName]
[,, parent, ), ;, if, (, providedClassName, !=, null, ), {, provides, ., put, (, providedClassName, ,, n, ), ;]
[), ;, if, (, providedClassName, !=, null, ), {, provides, ., put, (, providedClassName, ,, n, ), ;, }, break]
[), {, provides, ., put, (, providedClassName, ,, n, ), ;, }, break, ;, case, Token, ., FUNCTION, :, visitFunctionNode]
[!=, null, ), {, provides, ., put, (, providedClassName, ,, n, ), ;, }, break, ;, case, Token, ., FUNCTION]
[), {, provides, ., put, (, providedClassName, ,, n, ), ;, }, break, ;, case, Token, ., FUNCTION, :, visitFunctionNode]
[;, }, break, ;, case, Token, ., FUNCTION, :, visitFunctionNode, (, n, ,, parent, ), ;, break, ;, case, Token]
[., put, (, providedClassName, ,, n, ), ;, }, break, ;, case, Token, ., FUNCTION, :, visitFunctionNode, (, n, ,]
[,, n, ), ;, }, break, ;, case, Token, ., FUNCTION, :, visitFunctionNode, (, n, ,, parent, ), ;, break]
[), ;, }, break, ;, case, Token, ., FUNCTION, :, visitFunctionNode, (, n, ,, parent, ), ;, break, ;, case]
[:, visitFunctionNode, (, n, ,, parent, ), ;, break, ;, case, Token, ., SCRIPT, :, visitScriptNode, (, t, ,, n]
[., FUNCTION, :, visitFunctionNode, (, n, ,, parent, ), ;, break, ;, case, Token, ., SCRIPT, :, visitScriptNode, (, t]
[;, break, ;, case, Token, ., SCRIPT, :, visitScriptNode, (, t, ,, n, ), ;, }, }, private, void, visitFunctionNode]
[,, parent, ), ;, break, ;, case, Token, ., SCRIPT, :, visitScriptNode, (, t, ,, n, ), ;, }, }]
[), ;, break, ;, case, Token, ., SCRIPT, :, visitScriptNode, (, t, ,, n, ), ;, }, }, private, void]
[:, visitScriptNode, (, t, ,, n, ), ;, }, }, private, void, visitFunctionNode, (, Node, n, ,, Node, parent, )]
[., SCRIPT, :, visitScriptNode, (, t, ,, n, ), ;, }, }, private, void, visitFunctionNode, (, Node, n, ,, Node]
[;, }, }, private, void, visitFunctionNode, (, Node, n, ,, Node, parent, ), {, Node, name, =, null, ;, JSDocInfo]
[,, n, ), ;, }, }, private, void, visitFunctionNode, (, Node, n, ,, Node, parent, ), {, Node, name, =]
[), ;, }, }, private, void, visitFunctionNode, (, Node, n, ,, Node, parent, ), {, Node, name, =, null, ;]
[;, JSDocInfo, info, =, parent, ., getJSDocInfo, (, ), ;, if, (, info, !=, null, &&, info, ., isConstructor, (]
[;, if, (, info, !=, null, &&, info, ., isConstructor, (, ), ), {, name, =, parent, ., getFirstChild, (]
[., getJSDocInfo, (, ), ;, if, (, info, !=, null, &&, info, ., isConstructor, (, ), ), {, name, =]
[), {, name, =, parent, ., getFirstChild, (, ), ;, }, else, {, info, =, n, ., getJSDocInfo, (, )]
[&&, info, ., isConstructor, (, ), ), {, name, =, parent, ., getFirstChild, (, ), ;, }, else, {, info]
[!=, null, &&, info, ., isConstructor, (, ), ), {, name, =, parent, ., getFirstChild, (, ), ;, }, else]
[&&, info, ., isConstructor, (, ), ), {, name, =, parent, ., getFirstChild, (, ), ;, }, else, {, info]
[), {, name, =, parent, ., getFirstChild, (, ), ;, }, else, {, info, =, n, ., getJSDocInfo, (, )]
[., isConstructor, (, ), ), {, name, =, parent, ., getFirstChild, (, ), ;, }, else, {, info, =, n]
[=, parent, ., getFirstChild, (, ), ;, }, else, {, info, =, n, ., getJSDocInfo, (, ), ;, if, (]
[;, }, else, {, info, =, n, ., getJSDocInfo, (, ), ;, if, (, info, !=, null, &&, info, .]
[., getFirstChild, (, ), ;, }, else, {, info, =, n, ., getJSDocInfo, (, ), ;, if, (, info, !=]
[=, n, ., getJSDocInfo, (, ), ;, if, (, info, !=, null, &&, info, ., isConstructor, (, ), ), {]
[;, if, (, info, !=, null, &&, info, ., isConstructor, (, ), ), {, name, =, n, ., getFirstChild, (]
[., getJSDocInfo, (, ), ;, if, (, info, !=, null, &&, info, ., isConstructor, (, ), ), {, name, =]
[), {, name, =, n, ., getFirstChild, (, ), ;, }, }, if, (, name, !=, null, &&, name, .]
[&&, info, ., isConstructor, (, ), ), {, name, =, n, ., getFirstChild, (, ), ;, }, }, if, (]
[!=, null, &&, info, ., isConstructor, (, ), ), {, name, =, n, ., getFirstChild, (, ), ;, }, }]
[&&, info, ., isConstructor, (, ), ), {, name, =, n, ., getFirstChild, (, ), ;, }, }, if, (]
[), {, name, =, n, ., getFirstChild, (, ), ;, }, }, if, (, name, !=, null, &&, name, .]
[., isConstructor, (, ), ), {, name, =, n, ., getFirstChild, (, ), ;, }, }, if, (, name, !=]
[=, n, ., getFirstChild, (, ), ;, }, }, if, (, name, !=, null, &&, name, ., isQualifiedName, (, )]
[;, }, }, if, (, name, !=, null, &&, name, ., isQualifiedName, (, ), ), {, String, qualifiedName, =, name]
[., getFirstChild, (, ), ;, }, }, if, (, name, !=, null, &&, name, ., isQualifiedName, (, ), ), {]
[), {, String, qualifiedName, =, name, ., getQualifiedName, (, ), ;, if, (, !, this, ., convention, ., isPrivate, (]
[&&, name, ., isQualifiedName, (, ), ), {, String, qualifiedName, =, name, ., getQualifiedName, (, ), ;, if, (, !]
[!=, null, &&, name, ., isQualifiedName, (, ), ), {, String, qualifiedName, =, name, ., getQualifiedName, (, ), ;, if]
[&&, name, ., isQualifiedName, (, ), ), {, String, qualifiedName, =, name, ., getQualifiedName, (, ), ;, if, (, !]
[), {, String, qualifiedName, =, name, ., getQualifiedName, (, ), ;, if, (, !, this, ., convention, ., isPrivate, (]
[., isQualifiedName, (, ), ), {, String, qualifiedName, =, name, ., getQualifiedName, (, ), ;, if, (, !, this, .]
[;, if, (, !, this, ., convention, ., isPrivate, (, qualifiedName, ), ), {, Visibility, visibility, =, info, ., getVisibility]
[., getQualifiedName, (, ), ;, if, (, !, this, ., convention, ., isPrivate, (, qualifiedName, ), ), {, Visibility, visibility]
[), {, Visibility, visibility, =, info, ., getVisibility, (, ), ;, if, (, !, visibility, ., equals, (, JSDocInfo, .]
[), {, Visibility, visibility, =, info, ., getVisibility, (, ), ;, if, (, !, visibility, ., equals, (, JSDocInfo, .]
[., isPrivate, (, qualifiedName, ), ), {, Visibility, visibility, =, info, ., getVisibility, (, ), ;, if, (, !, visibility]
[., convention, ., isPrivate, (, qualifiedName, ), ), {, Visibility, visibility, =, info, ., getVisibility, (, ), ;, if, (]
[), ), {, Visibility, visibility, =, info, ., getVisibility, (, ), ;, if, (, !, visibility, ., equals, (, JSDocInfo]
[;, if, (, !, visibility, ., equals, (, JSDocInfo, ., Visibility, ., PRIVATE, ), ), {, ctors, ., put, (]
[., getVisibility, (, ), ;, if, (, !, visibility, ., equals, (, JSDocInfo, ., Visibility, ., PRIVATE, ), ), {]
[), {, ctors, ., put, (, qualifiedName, ,, name, ), ;, }, }, }, }, private, void, visitScriptNode, (, NodeTraversal]
[), {, ctors, ., put, (, qualifiedName, ,, name, ), ;, }, }, }, }, private, void, visitScriptNode, (, NodeTraversal]
[., equals, (, JSDocInfo, ., Visibility, ., PRIVATE, ), ), {, ctors, ., put, (, qualifiedName, ,, name, ), ;]
[), ), {, ctors, ., put, (, qualifiedName, ,, name, ), ;, }, }, }, }, private, void, visitScriptNode, (]
[., PRIVATE, ), ), {, ctors, ., put, (, qualifiedName, ,, name, ), ;, }, }, }, }, private, void]
[., Visibility, ., PRIVATE, ), ), {, ctors, ., put, (, qualifiedName, ,, name, ), ;, }, }, }, }]
[;, }, }, }, }, private, void, visitScriptNode, (, NodeTraversal, t, ,, Node, n, ), {, for, (, Map, .]
[., put, (, qualifiedName, ,, name, ), ;, }, }, }, }, private, void, visitScriptNode, (, NodeTraversal, t, ,, Node]
[,, name, ), ;, }, }, }, }, private, void, visitScriptNode, (, NodeTraversal, t, ,, Node, n, ), {, for]
[), ;, }, }, }, }, private, void, visitScriptNode, (, NodeTraversal, t, ,, Node, n, ), {, for, (, Map]
[), {, String, ctor, =, ctorEntry, ., getKey, (, ), ;, int, index, =, -, 1, ;, boolean, found, =]
[., entrySet, (, ), ), {, String, ctor, =, ctorEntry, ., getKey, (, ), ;, int, index, =, -, 1]
[;, int, index, =, -, 1, ;, boolean, found, =, false, ;, do, {, index, =, ctor, ., indexOf, (]
[., getKey, (, ), ;, int, index, =, -, 1, ;, boolean, found, =, false, ;, do, {, index, =]
[;, boolean, found, =, false, ;, do, {, index, =, ctor, ., indexOf, (, '.', ,, index, +, 1, )]
[;, boolean, found, =, false, ;, do, {, index, =, ctor, ., indexOf, (, '.', ,, index, +, 1, )]
[;, do, {, index, =, ctor, ., indexOf, (, '.', ,, index, +, 1, ), ;, String, provideKey, =, index]
[=, ctor, ., indexOf, (, '.', ,, index, +, 1, ), ;, String, provideKey, =, index, ==, -, 1, ?]
[;, String, provideKey, =, index, ==, -, 1, ?, ctor, :, ctor, ., substring, (, 0, ,, index, ), ;]
[., indexOf, (, '.', ,, index, +, 1, ), ;, String, provideKey, =, index, ==, -, 1, ?, ctor, :]
[,, index, +, 1, ), ;, String, provideKey, =, index, ==, -, 1, ?, ctor, :, ctor, ., substring, (]
[), ;, String, provideKey, =, index, ==, -, 1, ?, ctor, :, ctor, ., substring, (, 0, ,, index, )]
[+, 1, ), ;, String, provideKey, =, index, ==, -, 1, ?, ctor, :, ctor, ., substring, (, 0, ,]
[), ;, String, provideKey, =, index, ==, -, 1, ?, ctor, :, ctor, ., substring, (, 0, ,, index, )]
[;, if, (, provides, ., containsKey, (, provideKey, ), ), {, found, =, true, ;, break, ;, }, }, while]
[?, ctor, :, ctor, ., substring, (, 0, ,, index, ), ;, if, (, provides, ., containsKey, (, provideKey, )]
[==, -, 1, ?, ctor, :, ctor, ., substring, (, 0, ,, index, ), ;, if, (, provides, ., containsKey]
[?, ctor, :, ctor, ., substring, (, 0, ,, index, ), ;, if, (, provides, ., containsKey, (, provideKey, )]
[?, ctor, :, ctor, ., substring, (, 0, ,, index, ), ;, if, (, provides, ., containsKey, (, provideKey, )]
[:, ctor, ., substring, (, 0, ,, index, ), ;, if, (, provides, ., containsKey, (, provideKey, ), ), {]
[;, if, (, provides, ., containsKey, (, provideKey, ), ), {, found, =, true, ;, break, ;, }, }, while]
[., substring, (, 0, ,, index, ), ;, if, (, provides, ., containsKey, (, provideKey, ), ), {, found, =]
[,, index, ), ;, if, (, provides, ., containsKey, (, provideKey, ), ), {, found, =, true, ;, break, ;]
[), ;, if, (, provides, ., containsKey, (, provideKey, ), ), {, found, =, true, ;, break, ;, }, }]
[), {, found, =, true, ;, break, ;, }, }, while, (, index, !=, -, 1, ), ;, if, (]
[., containsKey, (, provideKey, ), ), {, found, =, true, ;, break, ;, }, }, while, (, index, !=, -]
[), ), {, found, =, true, ;, break, ;, }, }, while, (, index, !=, -, 1, ), ;, if]
[=, true, ;, break, ;, }, }, while, (, index, !=, -, 1, ), ;, if, (, !, found, )]
[;, break, ;, }, }, while, (, index, !=, -, 1, ), ;, if, (, !, found, ), {, compiler]
[), ;, if, (, !, found, ), {, compiler, ., report, (, t, ., makeError, (, ctorEntry, ., getValue, (]
[!=, -, 1, ), ;, if, (, !, found, ), {, compiler, ., report, (, t, ., makeError, (, ctorEntry]
[), ;, if, (, !, found, ), {, compiler, ., report, (, t, ., makeError, (, ctorEntry, ., getValue, (]
[), ;, if, (, !, found, ), {, compiler, ., report, (, t, ., makeError, (, ctorEntry, ., getValue, (]
[), {, compiler, ., report, (, t, ., makeError, (, ctorEntry, ., getValue, (, ), ,, checkLevel, ,, MISSING_PROVIDE_WARNING, ,]
[), {, compiler, ., report, (, t, ., makeError, (, ctorEntry, ., getValue, (, ), ,, checkLevel, ,, MISSING_PROVIDE_WARNING, ,]
[;, }, }, provides, ., clear, (, ), ;, ctors, ., clear, (, ), ;, }, }, }]
[., report, (, t, ., makeError, (, ctorEntry, ., getValue, (, ), ,, checkLevel, ,, MISSING_PROVIDE_WARNING, ,, ctorEntry, ., getKey]
[), ;, }, }, provides, ., clear, (, ), ;, ctors, ., clear, (, ), ;, }, }, }]
[., makeError, (, ctorEntry, ., getValue, (, ), ,, checkLevel, ,, MISSING_PROVIDE_WARNING, ,, ctorEntry, ., getKey, (, ), ), )]
[,, checkLevel, ,, MISSING_PROVIDE_WARNING, ,, ctorEntry, ., getKey, (, ), ), ), ;, }, }, provides, ., clear, (, )]
[., getValue, (, ), ,, checkLevel, ,, MISSING_PROVIDE_WARNING, ,, ctorEntry, ., getKey, (, ), ), ), ;, }, }, provides]
[,, MISSING_PROVIDE_WARNING, ,, ctorEntry, ., getKey, (, ), ), ), ;, }, }, provides, ., clear, (, ), ;, ctors]
[,, ctorEntry, ., getKey, (, ), ), ), ;, }, }, provides, ., clear, (, ), ;, ctors, ., clear]
[), ), ;, }, }, provides, ., clear, (, ), ;, ctors, ., clear, (, ), ;, }, }, }]
[., getKey, (, ), ), ), ;, }, }, provides, ., clear, (, ), ;, ctors, ., clear, (, )]
[;, ctors, ., clear, (, ), ;, }, }, }]
[., clear, (, ), ;, ctors, ., clear, (, ), ;, }, }, }]
[;, }, }, }]
[., clear, (, ), ;, }, }, }]
