[BoxAndWhiskerCategoryDataset, ;, public, class, BoxAndWhiskerRenderer, extends, AbstractCategoryItemRenderer, implements, Cloneable, ,, PublicCloneable, ,, Serializable, {, private, static, final, long, serialVersionUID, =]
[double, itemMargin, ;, private, double, maximumBarWidth, ;, private, boolean, medianVisible, ;, private, boolean, meanVisible, ;, public, BoxAndWhiskerRenderer, (, ), {]
[double, itemMargin, ;, private, double, maximumBarWidth, ;, private, boolean, medianVisible, ;, private, boolean, meanVisible, ;, public, BoxAndWhiskerRenderer, (, ), {]
[double, maximumBarWidth, ;, private, boolean, medianVisible, ;, private, boolean, meanVisible, ;, public, BoxAndWhiskerRenderer, (, ), {, this, ., artifactPaint, =]
[double, maximumBarWidth, ;, private, boolean, medianVisible, ;, private, boolean, meanVisible, ;, public, BoxAndWhiskerRenderer, (, ), {, this, ., artifactPaint, =]
[boolean, medianVisible, ;, private, boolean, meanVisible, ;, public, BoxAndWhiskerRenderer, (, ), {, this, ., artifactPaint, =, Color, ., black, ;]
[boolean, medianVisible, ;, private, boolean, meanVisible, ;, public, BoxAndWhiskerRenderer, (, ), {, this, ., artifactPaint, =, Color, ., black, ;]
[boolean, meanVisible, ;, public, BoxAndWhiskerRenderer, (, ), {, this, ., artifactPaint, =, Color, ., black, ;, this, ., fillBox, =]
[;, public, BoxAndWhiskerRenderer, (, ), {, this, ., artifactPaint, =, Color, ., black, ;, this, ., fillBox, =, true, ;]
[;, public, BoxAndWhiskerRenderer, (, ), {, this, ., artifactPaint, =, Color, ., black, ;, this, ., fillBox, =, true, ;]
[), {, this, ., artifactPaint, =, Color, ., black, ;, this, ., fillBox, =, true, ;, this, ., itemMargin, =]
[this, ., artifactPaint, =, Color, ., black, ;, this, ., fillBox, =, true, ;, this, ., itemMargin, =, 0.20, ;]
[this, ., artifactPaint, =, Color, ., black, ;, this, ., fillBox, =, true, ;, this, ., itemMargin, =, 0.20, ;]
[Color, ., black, ;, this, ., fillBox, =, true, ;, this, ., itemMargin, =, 0.20, ;, this, ., maximumBarWidth, =]
[black, ;, this, ., fillBox, =, true, ;, this, ., itemMargin, =, 0.20, ;, this, ., maximumBarWidth, =, 1.0, ;]
[black, ;, this, ., fillBox, =, true, ;, this, ., itemMargin, =, 0.20, ;, this, ., maximumBarWidth, =, 1.0, ;]
[fillBox, =, true, ;, this, ., itemMargin, =, 0.20, ;, this, ., maximumBarWidth, =, 1.0, ;, this, ., medianVisible, =]
[true, ;, this, ., itemMargin, =, 0.20, ;, this, ., maximumBarWidth, =, 1.0, ;, this, ., medianVisible, =, true, ;]
[true, ;, this, ., itemMargin, =, 0.20, ;, this, ., maximumBarWidth, =, 1.0, ;, this, ., medianVisible, =, true, ;]
[itemMargin, =, 0.20, ;, this, ., maximumBarWidth, =, 1.0, ;, this, ., medianVisible, =, true, ;, this, ., meanVisible, =]
[0.20, ;, this, ., maximumBarWidth, =, 1.0, ;, this, ., medianVisible, =, true, ;, this, ., meanVisible, =, false, ;]
[this, ., maximumBarWidth, =, 1.0, ;, this, ., medianVisible, =, true, ;, this, ., meanVisible, =, false, ;, setBaseLegendShape, (]
[;, this, ., medianVisible, =, true, ;, this, ., meanVisible, =, false, ;, setBaseLegendShape, (, new, Rectangle2D, ., Double, (]
[this, ., medianVisible, =, true, ;, this, ., meanVisible, =, false, ;, setBaseLegendShape, (, new, Rectangle2D, ., Double, (, -]
[medianVisible, =, true, ;, this, ., meanVisible, =, false, ;, setBaseLegendShape, (, new, Rectangle2D, ., Double, (, -, 4.0, ,]
[=, true, ;, this, ., meanVisible, =, false, ;, setBaseLegendShape, (, new, Rectangle2D, ., Double, (, -, 4.0, ,, -]
[;, this, ., meanVisible, =, false, ;, setBaseLegendShape, (, new, Rectangle2D, ., Double, (, -, 4.0, ,, -, 4.0, ,]
[., meanVisible, =, false, ;, setBaseLegendShape, (, new, Rectangle2D, ., Double, (, -, 4.0, ,, -, 4.0, ,, 8.0, ,]
[-, 4.0, ,, -, 4.0, ,, 8.0, ,, 8.0, ), ), ;, }, public, Paint, getArtifactPaint, (, ), {, return]
[-, 4.0, ,, -, 4.0, ,, 8.0, ,, 8.0, ), ), ;, }, public, Paint, getArtifactPaint, (, ), {, return]
[getArtifactPaint, (, ), {, return, this, ., artifactPaint, ;, }, public, void, setArtifactPaint, (, Paint, paint, ), {, if, (]
[getArtifactPaint, (, ), {, return, this, ., artifactPaint, ;, }, public, void, setArtifactPaint, (, Paint, paint, ), {, if, (]
[), {, return, this, ., artifactPaint, ;, }, public, void, setArtifactPaint, (, Paint, paint, ), {, if, (, paint, ==]
[., artifactPaint, ;, }, public, void, setArtifactPaint, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw]
[}, public, void, setArtifactPaint, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }]
[(, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }]
[{, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., artifactPaint, =]
[(, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., artifactPaint, =, paint, ;]
[;, }, this, ., artifactPaint, =, paint, ;, fireChangeEvent, (, ), ;, }, public, boolean, getFillBox, (, ), {, return]
[;, }, this, ., artifactPaint, =, paint, ;, fireChangeEvent, (, ), ;, }, public, boolean, getFillBox, (, ), {, return]
[public, boolean, getFillBox, (, ), {, return, this, ., fillBox, ;, }, public, void, setFillBox, (, boolean, flag, ), {]
[public, boolean, getFillBox, (, ), {, return, this, ., fillBox, ;, }, public, void, setFillBox, (, boolean, flag, ), {]
[), {, return, this, ., fillBox, ;, }, public, void, setFillBox, (, boolean, flag, ), {, this, ., fillBox, =]
[return, this, ., fillBox, ;, }, public, void, setFillBox, (, boolean, flag, ), {, this, ., fillBox, =, flag, ;]
[), {, this, ., fillBox, =, flag, ;, fireChangeEvent, (, ), ;, }, public, double, getItemMargin, (, ), {, return]
[), {, this, ., fillBox, =, flag, ;, fireChangeEvent, (, ), ;, }, public, double, getItemMargin, (, ), {, return]
[public, double, getItemMargin, (, ), {, return, this, ., itemMargin, ;, }, public, void, setItemMargin, (, double, margin, ), {]
[public, double, getItemMargin, (, ), {, return, this, ., itemMargin, ;, }, public, void, setItemMargin, (, double, margin, ), {]
[), {, return, this, ., itemMargin, ;, }, public, void, setItemMargin, (, double, margin, ), {, this, ., itemMargin, =]
[return, this, ., itemMargin, ;, }, public, void, setItemMargin, (, double, margin, ), {, this, ., itemMargin, =, margin, ;]
[), {, this, ., itemMargin, =, margin, ;, fireChangeEvent, (, ), ;, }, public, double, getMaximumBarWidth, (, ), {, return]
[), {, this, ., itemMargin, =, margin, ;, fireChangeEvent, (, ), ;, }, public, double, getMaximumBarWidth, (, ), {, return]
[public, double, getMaximumBarWidth, (, ), {, return, this, ., maximumBarWidth, ;, }, public, void, setMaximumBarWidth, (, double, percent, ), {]
[public, double, getMaximumBarWidth, (, ), {, return, this, ., maximumBarWidth, ;, }, public, void, setMaximumBarWidth, (, double, percent, ), {]
[), {, return, this, ., maximumBarWidth, ;, }, public, void, setMaximumBarWidth, (, double, percent, ), {, this, ., maximumBarWidth, =]
[return, this, ., maximumBarWidth, ;, }, public, void, setMaximumBarWidth, (, double, percent, ), {, this, ., maximumBarWidth, =, percent, ;]
[), {, this, ., maximumBarWidth, =, percent, ;, fireChangeEvent, (, ), ;, }, public, boolean, isMeanVisible, (, ), {, return]
[), {, this, ., maximumBarWidth, =, percent, ;, fireChangeEvent, (, ), ;, }, public, boolean, isMeanVisible, (, ), {, return]
[isMeanVisible, (, ), {, return, this, ., meanVisible, ;, }, public, void, setMeanVisible, (, boolean, visible, ), {, if, (]
[isMeanVisible, (, ), {, return, this, ., meanVisible, ;, }, public, void, setMeanVisible, (, boolean, visible, ), {, if, (]
[isMeanVisible, (, ), {, return, this, ., meanVisible, ;, }, public, void, setMeanVisible, (, boolean, visible, ), {, if, (]
[return, this, ., meanVisible, ;, }, public, void, setMeanVisible, (, boolean, visible, ), {, if, (, this, ., meanVisible, ==]
[public, void, setMeanVisible, (, boolean, visible, ), {, if, (, this, ., meanVisible, ==, visible, ), {, return, ;, }]
[public, void, setMeanVisible, (, boolean, visible, ), {, if, (, this, ., meanVisible, ==, visible, ), {, return, ;, }]
[boolean, visible, ), {, if, (, this, ., meanVisible, ==, visible, ), {, return, ;, }, this, ., meanVisible, =]
[), {, if, (, this, ., meanVisible, ==, visible, ), {, return, ;, }, this, ., meanVisible, =, visible, ;]
[;, }, this, ., meanVisible, =, visible, ;, fireChangeEvent, (, ), ;, }, public, boolean, isMedianVisible, (, ), {, return]
[;, }, this, ., meanVisible, =, visible, ;, fireChangeEvent, (, ), ;, }, public, boolean, isMedianVisible, (, ), {, return]
[public, boolean, isMedianVisible, (, ), {, return, this, ., medianVisible, ;, }, public, void, setMedianVisible, (, boolean, visible, ), {]
[public, boolean, isMedianVisible, (, ), {, return, this, ., medianVisible, ;, }, public, void, setMedianVisible, (, boolean, visible, ), {]
[), {, return, this, ., medianVisible, ;, }, public, void, setMedianVisible, (, boolean, visible, ), {, this, ., medianVisible, =]
[., medianVisible, =, visible, ;, }, public, LegendItem, getLegendItem, (, int, datasetIndex, ,, int, series, ), {, CategoryPlot, cp, =]
[public, LegendItem, getLegendItem, (, int, datasetIndex, ,, int, series, ), {, CategoryPlot, cp, =, getPlot, (, ), ;, if, (]
[public, LegendItem, getLegendItem, (, int, datasetIndex, ,, int, series, ), {, CategoryPlot, cp, =, getPlot, (, ), ;, if, (]
[getLegendItem, (, int, datasetIndex, ,, int, series, ), {, CategoryPlot, cp, =, getPlot, (, ), ;, if, (, cp, ==]
[,, int, series, ), {, CategoryPlot, cp, =, getPlot, (, ), ;, if, (, cp, ==, null, ), {, return]
[CategoryPlot, cp, =, getPlot, (, ), ;, if, (, cp, ==, null, ), {, return, null, ;, }, if, (]
[CategoryPlot, cp, =, getPlot, (, ), ;, if, (, cp, ==, null, ), {, return, null, ;, }, if, (]
[cp, =, getPlot, (, ), ;, if, (, cp, ==, null, ), {, return, null, ;, }, if, (, !]
[getPlot, (, ), ;, if, (, cp, ==, null, ), {, return, null, ;, }, if, (, !, isSeriesVisible, (]
[;, if, (, cp, ==, null, ), {, return, null, ;, }, if, (, !, isSeriesVisible, (, series, ), ||]
[if, (, cp, ==, null, ), {, return, null, ;, }, if, (, !, isSeriesVisible, (, series, ), ||, !]
[cp, ==, null, ), {, return, null, ;, }, if, (, !, isSeriesVisible, (, series, ), ||, !, isSeriesVisibleInLegend, (]
[return, null, ;, }, if, (, !, isSeriesVisible, (, series, ), ||, !, isSeriesVisibleInLegend, (, series, ), ), {, return]
[!, isSeriesVisible, (, series, ), ||, !, isSeriesVisibleInLegend, (, series, ), ), {, return, null, ;, }, CategoryDataset, dataset, =]
[!, isSeriesVisible, (, series, ), ||, !, isSeriesVisibleInLegend, (, series, ), ), {, return, null, ;, }, CategoryDataset, dataset, =]
[), ||, !, isSeriesVisibleInLegend, (, series, ), ), {, return, null, ;, }, CategoryDataset, dataset, =, cp, ., getDataset, (]
[), ), {, return, null, ;, }, CategoryDataset, dataset, =, cp, ., getDataset, (, datasetIndex, ), ;, String, label, =]
[), ), {, return, null, ;, }, CategoryDataset, dataset, =, cp, ., getDataset, (, datasetIndex, ), ;, String, label, =]
[}, CategoryDataset, dataset, =, cp, ., getDataset, (, datasetIndex, ), ;, String, label, =, getLegendItemLabelGenerator, (, ), ., generateLabel, (]
[dataset, =, cp, ., getDataset, (, datasetIndex, ), ;, String, label, =, getLegendItemLabelGenerator, (, ), ., generateLabel, (, dataset, ,]
[datasetIndex, ), ;, String, label, =, getLegendItemLabelGenerator, (, ), ., generateLabel, (, dataset, ,, series, ), ;, String, description, =]
[=, getLegendItemLabelGenerator, (, ), ., generateLabel, (, dataset, ,, series, ), ;, String, description, =, label, ;, String, toolTipText, =]
[., generateLabel, (, dataset, ,, series, ), ;, String, description, =, label, ;, String, toolTipText, =, null, ;, if, (]
[., generateLabel, (, dataset, ,, series, ), ;, String, description, =, label, ;, String, toolTipText, =, null, ;, if, (]
[,, series, ), ;, String, description, =, label, ;, String, toolTipText, =, null, ;, if, (, getLegendItemToolTipGenerator, (, ), !=]
[;, String, description, =, label, ;, String, toolTipText, =, null, ;, if, (, getLegendItemToolTipGenerator, (, ), !=, null, ), {]
[description, =, label, ;, String, toolTipText, =, null, ;, if, (, getLegendItemToolTipGenerator, (, ), !=, null, ), {, toolTipText, =]
[description, =, label, ;, String, toolTipText, =, null, ;, if, (, getLegendItemToolTipGenerator, (, ), !=, null, ), {, toolTipText, =]
[=, null, ;, if, (, getLegendItemToolTipGenerator, (, ), !=, null, ), {, toolTipText, =, getLegendItemToolTipGenerator, (, ), ., generateLabel, (]
[;, if, (, getLegendItemToolTipGenerator, (, ), !=, null, ), {, toolTipText, =, getLegendItemToolTipGenerator, (, ), ., generateLabel, (, dataset, ,]
[null, ), {, toolTipText, =, getLegendItemToolTipGenerator, (, ), ., generateLabel, (, dataset, ,, series, ), ;, }, String, urlText, =]
[=, getLegendItemToolTipGenerator, (, ), ., generateLabel, (, dataset, ,, series, ), ;, }, String, urlText, =, null, ;, if, (]
[=, getLegendItemToolTipGenerator, (, ), ., generateLabel, (, dataset, ,, series, ), ;, }, String, urlText, =, null, ;, if, (]
[., generateLabel, (, dataset, ,, series, ), ;, }, String, urlText, =, null, ;, if, (, getLegendItemURLGenerator, (, ), !=]
[dataset, ,, series, ), ;, }, String, urlText, =, null, ;, if, (, getLegendItemURLGenerator, (, ), !=, null, ), {]
[series, ), ;, }, String, urlText, =, null, ;, if, (, getLegendItemURLGenerator, (, ), !=, null, ), {, urlText, =]
[series, ), ;, }, String, urlText, =, null, ;, if, (, getLegendItemURLGenerator, (, ), !=, null, ), {, urlText, =]
[=, null, ;, if, (, getLegendItemURLGenerator, (, ), !=, null, ), {, urlText, =, getLegendItemURLGenerator, (, ), ., generateLabel, (]
[;, if, (, getLegendItemURLGenerator, (, ), !=, null, ), {, urlText, =, getLegendItemURLGenerator, (, ), ., generateLabel, (, dataset, ,]
[null, ), {, urlText, =, getLegendItemURLGenerator, (, ), ., generateLabel, (, dataset, ,, series, ), ;, }, Shape, shape, =]
[{, urlText, =, getLegendItemURLGenerator, (, ), ., generateLabel, (, dataset, ,, series, ), ;, }, Shape, shape, =, lookupLegendShape, (]
[., generateLabel, (, dataset, ,, series, ), ;, }, Shape, shape, =, lookupLegendShape, (, series, ), ;, Paint, paint, =]
[(, dataset, ,, series, ), ;, }, Shape, shape, =, lookupLegendShape, (, series, ), ;, Paint, paint, =, lookupSeriesPaint, (]
[}, Shape, shape, =, lookupLegendShape, (, series, ), ;, Paint, paint, =, lookupSeriesPaint, (, series, ), ;, Paint, outlinePaint, =]
[shape, =, lookupLegendShape, (, series, ), ;, Paint, paint, =, lookupSeriesPaint, (, series, ), ;, Paint, outlinePaint, =, lookupSeriesOutlinePaint, (]
[;, Paint, paint, =, lookupSeriesPaint, (, series, ), ;, Paint, outlinePaint, =, lookupSeriesOutlinePaint, (, series, ), ;, Stroke, outlineStroke, =]
[paint, =, lookupSeriesPaint, (, series, ), ;, Paint, outlinePaint, =, lookupSeriesOutlinePaint, (, series, ), ;, Stroke, outlineStroke, =, lookupSeriesOutlineStroke, (]
[;, Paint, outlinePaint, =, lookupSeriesOutlinePaint, (, series, ), ;, Stroke, outlineStroke, =, lookupSeriesOutlineStroke, (, series, ), ;, LegendItem, result, =]
[=, lookupSeriesOutlinePaint, (, series, ), ;, Stroke, outlineStroke, =, lookupSeriesOutlineStroke, (, series, ), ;, LegendItem, result, =, new, LegendItem, (]
[(, series, ), ;, Stroke, outlineStroke, =, lookupSeriesOutlineStroke, (, series, ), ;, LegendItem, result, =, new, LegendItem, (, label, ,]
[), ;, Stroke, outlineStroke, =, lookupSeriesOutlineStroke, (, series, ), ;, LegendItem, result, =, new, LegendItem, (, label, ,, description, ,]
[Stroke, outlineStroke, =, lookupSeriesOutlineStroke, (, series, ), ;, LegendItem, result, =, new, LegendItem, (, label, ,, description, ,, toolTipText, ,]
[=, lookupSeriesOutlineStroke, (, series, ), ;, LegendItem, result, =, new, LegendItem, (, label, ,, description, ,, toolTipText, ,, urlText, ,]
[(, series, ), ;, LegendItem, result, =, new, LegendItem, (, label, ,, description, ,, toolTipText, ,, urlText, ,, shape, ,]
[), ;, LegendItem, result, =, new, LegendItem, (, label, ,, description, ,, toolTipText, ,, urlText, ,, shape, ,, paint, ,]
[LegendItem, result, =, new, LegendItem, (, label, ,, description, ,, toolTipText, ,, urlText, ,, shape, ,, paint, ,, outlineStroke, ,]
[new, LegendItem, (, label, ,, description, ,, toolTipText, ,, urlText, ,, shape, ,, paint, ,, outlineStroke, ,, outlinePaint, ), ;]
[new, LegendItem, (, label, ,, description, ,, toolTipText, ,, urlText, ,, shape, ,, paint, ,, outlineStroke, ,, outlinePaint, ), ;]
[,, description, ,, toolTipText, ,, urlText, ,, shape, ,, paint, ,, outlineStroke, ,, outlinePaint, ), ;, result, ., setLabelFont, (]
[,, toolTipText, ,, urlText, ,, shape, ,, paint, ,, outlineStroke, ,, outlinePaint, ), ;, result, ., setLabelFont, (, lookupLegendTextFont, (]
[paint, ,, outlineStroke, ,, outlinePaint, ), ;, result, ., setLabelFont, (, lookupLegendTextFont, (, series, ), ), ;, Paint, labelPaint, =]
[outlineStroke, ,, outlinePaint, ), ;, result, ., setLabelFont, (, lookupLegendTextFont, (, series, ), ), ;, Paint, labelPaint, =, lookupLegendTextPaint, (]
[result, ., setLabelFont, (, lookupLegendTextFont, (, series, ), ), ;, Paint, labelPaint, =, lookupLegendTextPaint, (, series, ), ;, if, (]
[result, ., setLabelFont, (, lookupLegendTextFont, (, series, ), ), ;, Paint, labelPaint, =, lookupLegendTextPaint, (, series, ), ;, if, (]
[setLabelFont, (, lookupLegendTextFont, (, series, ), ), ;, Paint, labelPaint, =, lookupLegendTextPaint, (, series, ), ;, if, (, labelPaint, !=]
[(, series, ), ), ;, Paint, labelPaint, =, lookupLegendTextPaint, (, series, ), ;, if, (, labelPaint, !=, null, ), {]
[(, series, ), ), ;, Paint, labelPaint, =, lookupLegendTextPaint, (, series, ), ;, if, (, labelPaint, !=, null, ), {]
[;, Paint, labelPaint, =, lookupLegendTextPaint, (, series, ), ;, if, (, labelPaint, !=, null, ), {, result, ., setLabelPaint, (]
[lookupLegendTextPaint, (, series, ), ;, if, (, labelPaint, !=, null, ), {, result, ., setLabelPaint, (, labelPaint, ), ;, }]
[lookupLegendTextPaint, (, series, ), ;, if, (, labelPaint, !=, null, ), {, result, ., setLabelPaint, (, labelPaint, ), ;, }]
[;, if, (, labelPaint, !=, null, ), {, result, ., setLabelPaint, (, labelPaint, ), ;, }, result, ., setDataset, (]
[labelPaint, !=, null, ), {, result, ., setLabelPaint, (, labelPaint, ), ;, }, result, ., setDataset, (, dataset, ), ;]
[labelPaint, !=, null, ), {, result, ., setLabelPaint, (, labelPaint, ), ;, }, result, ., setDataset, (, dataset, ), ;]
[{, result, ., setLabelPaint, (, labelPaint, ), ;, }, result, ., setDataset, (, dataset, ), ;, result, ., setDatasetIndex, (]
[setLabelPaint, (, labelPaint, ), ;, }, result, ., setDataset, (, dataset, ), ;, result, ., setDatasetIndex, (, datasetIndex, ), ;]
[setLabelPaint, (, labelPaint, ), ;, }, result, ., setDataset, (, dataset, ), ;, result, ., setDatasetIndex, (, datasetIndex, ), ;]
[;, }, result, ., setDataset, (, dataset, ), ;, result, ., setDatasetIndex, (, datasetIndex, ), ;, result, ., setSeriesKey, (]
[;, }, result, ., setDataset, (, dataset, ), ;, result, ., setDatasetIndex, (, datasetIndex, ), ;, result, ., setSeriesKey, (]
[setDataset, (, dataset, ), ;, result, ., setDatasetIndex, (, datasetIndex, ), ;, result, ., setSeriesKey, (, dataset, ., getRowKey, (]
[;, result, ., setDatasetIndex, (, datasetIndex, ), ;, result, ., setSeriesKey, (, dataset, ., getRowKey, (, series, ), ), ;]
[;, result, ., setDatasetIndex, (, datasetIndex, ), ;, result, ., setSeriesKey, (, dataset, ., getRowKey, (, series, ), ), ;]
[(, datasetIndex, ), ;, result, ., setSeriesKey, (, dataset, ., getRowKey, (, series, ), ), ;, result, ., setSeriesIndex, (]
[result, ., setSeriesKey, (, dataset, ., getRowKey, (, series, ), ), ;, result, ., setSeriesIndex, (, series, ), ;, return]
[(, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, CategoryPlot, plot, ,, CategoryDataset, dataset, ,, PlotRenderingInfo, info, ), {, CategoryItemRendererState, state, =]
[(, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, CategoryPlot, plot, ,, CategoryDataset, dataset, ,, PlotRenderingInfo, info, ), {, CategoryItemRendererState, state, =]
[Rectangle2D, dataArea, ,, CategoryPlot, plot, ,, CategoryDataset, dataset, ,, PlotRenderingInfo, info, ), {, CategoryItemRendererState, state, =, super, ., initialise, (]
[,, CategoryPlot, plot, ,, CategoryDataset, dataset, ,, PlotRenderingInfo, info, ), {, CategoryItemRendererState, state, =, super, ., initialise, (, g2, ,]
[plot, ,, CategoryDataset, dataset, ,, PlotRenderingInfo, info, ), {, CategoryItemRendererState, state, =, super, ., initialise, (, g2, ,, dataArea, ,]
[CategoryDataset, dataset, ,, PlotRenderingInfo, info, ), {, CategoryItemRendererState, state, =, super, ., initialise, (, g2, ,, dataArea, ,, plot, ,]
[,, PlotRenderingInfo, info, ), {, CategoryItemRendererState, state, =, super, ., initialise, (, g2, ,, dataArea, ,, plot, ,, dataset, ,]
[state, =, super, ., initialise, (, g2, ,, dataArea, ,, plot, ,, dataset, ,, info, ), ;, CategoryAxis, domainAxis, =]
[super, ., initialise, (, g2, ,, dataArea, ,, plot, ,, dataset, ,, info, ), ;, CategoryAxis, domainAxis, =, getDomainAxis, (]
[initialise, (, g2, ,, dataArea, ,, plot, ,, dataset, ,, info, ), ;, CategoryAxis, domainAxis, =, getDomainAxis, (, plot, ,]
[,, plot, ,, dataset, ,, info, ), ;, CategoryAxis, domainAxis, =, getDomainAxis, (, plot, ,, dataset, ), ;, if, (]
[,, plot, ,, dataset, ,, info, ), ;, CategoryAxis, domainAxis, =, getDomainAxis, (, plot, ,, dataset, ), ;, if, (]
[,, dataset, ,, info, ), ;, CategoryAxis, domainAxis, =, getDomainAxis, (, plot, ,, dataset, ), ;, if, (, dataset, !=]
[CategoryAxis, domainAxis, =, getDomainAxis, (, plot, ,, dataset, ), ;, if, (, dataset, !=, null, ), {, int, columns, =]
[CategoryAxis, domainAxis, =, getDomainAxis, (, plot, ,, dataset, ), ;, if, (, dataset, !=, null, ), {, int, columns, =]
[;, if, (, dataset, !=, null, ), {, int, columns, =, dataset, ., getColumnCount, (, ), ;, int, rows, =]
[;, if, (, dataset, !=, null, ), {, int, columns, =, dataset, ., getColumnCount, (, ), ;, int, rows, =]
[columns, =, dataset, ., getColumnCount, (, ), ;, int, rows, =, dataset, ., getRowCount, (, ), ;, double, space, =]
[(, ), ;, int, rows, =, dataset, ., getRowCount, (, ), ;, double, space, =, 0.0, ;, PlotOrientation, orientation, =]
[(, ), ;, int, rows, =, dataset, ., getRowCount, (, ), ;, double, space, =, 0.0, ;, PlotOrientation, orientation, =]
[getRowCount, (, ), ;, double, space, =, 0.0, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (]
[getRowCount, (, ), ;, double, space, =, 0.0, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (]
[), ;, double, space, =, 0.0, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ==]
[), ;, double, space, =, 0.0, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ==]
[0.0, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {]
[PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space, =]
[PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space, =]
[(, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, if, (]
[(, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, if, (]
[==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==]
[==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==]
[{, space, =, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {]
[=, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, space, =]
[=, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, space, =]
[(, orientation, ==, PlotOrientation, ., VERTICAL, ), {, space, =, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =]
[(, orientation, ==, PlotOrientation, ., VERTICAL, ), {, space, =, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =]
[==, PlotOrientation, ., VERTICAL, ), {, space, =, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =, space, *]
[=, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =, space, *, getMaximumBarWidth, (, ), ;, double, categoryMargin, =]
[), ;, }, double, maxWidth, =, space, *, getMaximumBarWidth, (, ), ;, double, categoryMargin, =, 0.0, ;, double, currentItemMargin, =]
[maxWidth, =, space, *, getMaximumBarWidth, (, ), ;, double, categoryMargin, =, 0.0, ;, double, currentItemMargin, =, 0.0, ;, if, (]
[maxWidth, =, space, *, getMaximumBarWidth, (, ), ;, double, categoryMargin, =, 0.0, ;, double, currentItemMargin, =, 0.0, ;, if, (]
[space, *, getMaximumBarWidth, (, ), ;, double, categoryMargin, =, 0.0, ;, double, currentItemMargin, =, 0.0, ;, if, (, columns, >]
[(, ), ;, double, categoryMargin, =, 0.0, ;, double, currentItemMargin, =, 0.0, ;, if, (, columns, >, 1, ), {]
[;, double, categoryMargin, =, 0.0, ;, double, currentItemMargin, =, 0.0, ;, if, (, columns, >, 1, ), {, categoryMargin, =]
[;, double, categoryMargin, =, 0.0, ;, double, currentItemMargin, =, 0.0, ;, if, (, columns, >, 1, ), {, categoryMargin, =]
[0.0, ;, if, (, columns, >, 1, ), {, categoryMargin, =, domainAxis, ., getCategoryMargin, (, ), ;, }, if, (]
[0.0, ;, if, (, columns, >, 1, ), {, categoryMargin, =, domainAxis, ., getCategoryMargin, (, ), ;, }, if, (]
[if, (, columns, >, 1, ), {, categoryMargin, =, domainAxis, ., getCategoryMargin, (, ), ;, }, if, (, rows, >]
[>, 1, ), {, categoryMargin, =, domainAxis, ., getCategoryMargin, (, ), ;, }, if, (, rows, >, 1, ), {]
[), {, categoryMargin, =, domainAxis, ., getCategoryMargin, (, ), ;, }, if, (, rows, >, 1, ), {, currentItemMargin, =]
[), ;, }, if, (, rows, >, 1, ), {, currentItemMargin, =, getItemMargin, (, ), ;, }, double, used, =]
[), ;, }, if, (, rows, >, 1, ), {, currentItemMargin, =, getItemMargin, (, ), ;, }, double, used, =]
[}, if, (, rows, >, 1, ), {, currentItemMargin, =, getItemMargin, (, ), ;, }, double, used, =, space, *]
[if, (, rows, >, 1, ), {, currentItemMargin, =, getItemMargin, (, ), ;, }, double, used, =, space, *, (]
[if, (, rows, >, 1, ), {, currentItemMargin, =, getItemMargin, (, ), ;, }, double, used, =, space, *, (]
[if, (, rows, >, 1, ), {, currentItemMargin, =, getItemMargin, (, ), ;, }, double, used, =, space, *, (]
[if, (, rows, >, 1, ), {, currentItemMargin, =, getItemMargin, (, ), ;, }, double, used, =, space, *, (]
[if, (, rows, >, 1, ), {, currentItemMargin, =, getItemMargin, (, ), ;, }, double, used, =, space, *, (]
[rows, >, 1, ), {, currentItemMargin, =, getItemMargin, (, ), ;, }, double, used, =, space, *, (, 1, -]
[rows, >, 1, ), {, currentItemMargin, =, getItemMargin, (, ), ;, }, double, used, =, space, *, (, 1, -]
[=, getItemMargin, (, ), ;, }, double, used, =, space, *, (, 1, -, domainAxis, ., getLowerMargin, (, ), -]
[=, getItemMargin, (, ), ;, }, double, used, =, space, *, (, 1, -, domainAxis, ., getLowerMargin, (, ), -]
[double, used, =, space, *, (, 1, -, domainAxis, ., getLowerMargin, (, ), -, domainAxis, ., getUpperMargin, (, ), -]
[=, space, *, (, 1, -, domainAxis, ., getLowerMargin, (, ), -, domainAxis, ., getUpperMargin, (, ), -, categoryMargin, -]
[-, domainAxis, ., getLowerMargin, (, ), -, domainAxis, ., getUpperMargin, (, ), -, categoryMargin, -, currentItemMargin, ), ;, if, (]
[-, domainAxis, ., getLowerMargin, (, ), -, domainAxis, ., getUpperMargin, (, ), -, categoryMargin, -, currentItemMargin, ), ;, if, (]
[domainAxis, ., getLowerMargin, (, ), -, domainAxis, ., getUpperMargin, (, ), -, categoryMargin, -, currentItemMargin, ), ;, if, (, (]
[domainAxis, ., getLowerMargin, (, ), -, domainAxis, ., getUpperMargin, (, ), -, categoryMargin, -, currentItemMargin, ), ;, if, (, (]
[getLowerMargin, (, ), -, domainAxis, ., getUpperMargin, (, ), -, categoryMargin, -, currentItemMargin, ), ;, if, (, (, rows, *]
[-, domainAxis, ., getUpperMargin, (, ), -, categoryMargin, -, currentItemMargin, ), ;, if, (, (, rows, *, columns, ), >]
[getUpperMargin, (, ), -, categoryMargin, -, currentItemMargin, ), ;, if, (, (, rows, *, columns, ), >, 0, ), {]
[getUpperMargin, (, ), -, categoryMargin, -, currentItemMargin, ), ;, if, (, (, rows, *, columns, ), >, 0, ), {]
[categoryMargin, -, currentItemMargin, ), ;, if, (, (, rows, *, columns, ), >, 0, ), {, state, ., setBarWidth, (]
[categoryMargin, -, currentItemMargin, ), ;, if, (, (, rows, *, columns, ), >, 0, ), {, state, ., setBarWidth, (]
[;, if, (, (, rows, *, columns, ), >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (]
[;, if, (, (, rows, *, columns, ), >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (]
[(, (, rows, *, columns, ), >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (, used, /]
[(, rows, *, columns, ), >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (, used, /, (]
[(, rows, *, columns, ), >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (, used, /, (]
[(, rows, *, columns, ), >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (, used, /, (]
[0, ), {, state, ., setBarWidth, (, Math, ., min, (, used, /, (, dataset, ., getColumnCount, (, ), *]
[0, ), {, state, ., setBarWidth, (, Math, ., min, (, used, /, (, dataset, ., getColumnCount, (, ), *]
[Math, ., min, (, used, /, (, dataset, ., getColumnCount, (, ), *, dataset, ., getRowCount, (, ), ), ,]
[dataset, ., getColumnCount, (, ), *, dataset, ., getRowCount, (, ), ), ,, maxWidth, ), ), ;, }, else, {]
[dataset, ., getColumnCount, (, ), *, dataset, ., getRowCount, (, ), ), ,, maxWidth, ), ), ;, }, else, {]
[), *, dataset, ., getRowCount, (, ), ), ,, maxWidth, ), ), ;, }, else, {, state, ., setBarWidth, (]
[), *, dataset, ., getRowCount, (, ), ), ,, maxWidth, ), ), ;, }, else, {, state, ., setBarWidth, (]
[getRowCount, (, ), ), ,, maxWidth, ), ), ;, }, else, {, state, ., setBarWidth, (, Math, ., min, (]
[), ), ,, maxWidth, ), ), ;, }, else, {, state, ., setBarWidth, (, Math, ., min, (, used, ,]
[}, else, {, state, ., setBarWidth, (, Math, ., min, (, used, ,, maxWidth, ), ), ;, }, }, return]
[rangeAxis, ,, CategoryDataset, dataset, ,, int, row, ,, int, column, ,, boolean, selected, ,, int, pass, ), {, if, (]
[,, CategoryDataset, dataset, ,, int, row, ,, int, column, ,, boolean, selected, ,, int, pass, ), {, if, (, !]
[dataset, ,, int, row, ,, int, column, ,, boolean, selected, ,, int, pass, ), {, if, (, !, getItemVisible, (]
[int, row, ,, int, column, ,, boolean, selected, ,, int, pass, ), {, if, (, !, getItemVisible, (, row, ,]
[int, pass, ), {, if, (, !, getItemVisible, (, row, ,, column, ), ), {, return, ;, }, if, (]
[pass, ), {, if, (, !, getItemVisible, (, row, ,, column, ), ), {, return, ;, }, if, (, !]
[), {, if, (, !, getItemVisible, (, row, ,, column, ), ), {, return, ;, }, if, (, !, (]
[), {, if, (, !, getItemVisible, (, row, ,, column, ), ), {, return, ;, }, if, (, !, (]
[row, ,, column, ), ), {, return, ;, }, if, (, !, (, dataset, instanceof, BoxAndWhiskerCategoryDataset, ), ), {, throw]
[), ), {, return, ;, }, if, (, !, (, dataset, instanceof, BoxAndWhiskerCategoryDataset, ), ), {, throw, new, IllegalArgumentException, (]
[), ), {, return, ;, }, if, (, !, (, dataset, instanceof, BoxAndWhiskerCategoryDataset, ), ), {, throw, new, IllegalArgumentException, (]
[{, return, ;, }, if, (, !, (, dataset, instanceof, BoxAndWhiskerCategoryDataset, ), ), {, throw, new, IllegalArgumentException, (, "BoxAndWhiskerRenderer.drawItem() : the data should be ", +]
[(, dataset, instanceof, BoxAndWhiskerCategoryDataset, ), ), {, throw, new, IllegalArgumentException, (, "BoxAndWhiskerRenderer.drawItem() : the data should be ", +, "of type BoxAndWhiskerCategoryDataset only.", ), ;, }, PlotOrientation, orientation, =]
[(, dataset, instanceof, BoxAndWhiskerCategoryDataset, ), ), {, throw, new, IllegalArgumentException, (, "BoxAndWhiskerRenderer.drawItem() : the data should be ", +, "of type BoxAndWhiskerCategoryDataset only.", ), ;, }, PlotOrientation, orientation, =]
[new, IllegalArgumentException, (, "BoxAndWhiskerRenderer.drawItem() : the data should be ", +, "of type BoxAndWhiskerCategoryDataset only.", ), ;, }, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (]
[new, IllegalArgumentException, (, "BoxAndWhiskerRenderer.drawItem() : the data should be ", +, "of type BoxAndWhiskerCategoryDataset only.", ), ;, }, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (]
[(, "BoxAndWhiskerRenderer.drawItem() : the data should be ", +, "of type BoxAndWhiskerCategoryDataset only.", ), ;, }, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ==]
[(, "BoxAndWhiskerRenderer.drawItem() : the data should be ", +, "of type BoxAndWhiskerCategoryDataset only.", ), ;, }, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ==]
[;, }, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {]
[PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, drawHorizontalItem, (]
[=, plot, ., getOrientation, (, ), ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, drawHorizontalItem, (, g2, ,]
[., getOrientation, (, ), ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, drawHorizontalItem, (, g2, ,, state, ,]
[(, ), ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, drawHorizontalItem, (, g2, ,, state, ,, dataArea, ,]
[;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, drawHorizontalItem, (, g2, ,, state, ,, dataArea, ,, plot, ,]
[(, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, drawHorizontalItem, (, g2, ,, state, ,, dataArea, ,, plot, ,, domainAxis, ,]
[==, PlotOrientation, ., HORIZONTAL, ), {, drawHorizontalItem, (, g2, ,, state, ,, dataArea, ,, plot, ,, domainAxis, ,, rangeAxis, ,]
[., HORIZONTAL, ), {, drawHorizontalItem, (, g2, ,, state, ,, dataArea, ,, plot, ,, domainAxis, ,, rangeAxis, ,, dataset, ,]
[), {, drawHorizontalItem, (, g2, ,, state, ,, dataArea, ,, plot, ,, domainAxis, ,, rangeAxis, ,, dataset, ,, row, ,]
[drawHorizontalItem, (, g2, ,, state, ,, dataArea, ,, plot, ,, domainAxis, ,, rangeAxis, ,, dataset, ,, row, ,, column, ,]
[g2, ,, state, ,, dataArea, ,, plot, ,, domainAxis, ,, rangeAxis, ,, dataset, ,, row, ,, column, ,, selected, ,]
[,, domainAxis, ,, rangeAxis, ,, dataset, ,, row, ,, column, ,, selected, ,, pass, ), ;, }, else, if, (]
[,, domainAxis, ,, rangeAxis, ,, dataset, ,, row, ,, column, ,, selected, ,, pass, ), ;, }, else, if, (]
[,, rangeAxis, ,, dataset, ,, row, ,, column, ,, selected, ,, pass, ), ;, }, else, if, (, orientation, ==]
[,, rangeAxis, ,, dataset, ,, row, ,, column, ,, selected, ,, pass, ), ;, }, else, if, (, orientation, ==]
[row, ,, column, ,, selected, ,, pass, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {]
[column, ,, selected, ,, pass, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, drawVerticalItem, (]
[selected, ,, pass, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, drawVerticalItem, (, g2, ,]
[pass, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, drawVerticalItem, (, g2, ,, state, ,]
[;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, drawVerticalItem, (, g2, ,, state, ,, dataArea, ,]
[else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, drawVerticalItem, (, g2, ,, state, ,, dataArea, ,, plot, ,]
[(, orientation, ==, PlotOrientation, ., VERTICAL, ), {, drawVerticalItem, (, g2, ,, state, ,, dataArea, ,, plot, ,, domainAxis, ,]
[==, PlotOrientation, ., VERTICAL, ), {, drawVerticalItem, (, g2, ,, state, ,, dataArea, ,, plot, ,, domainAxis, ,, rangeAxis, ,]
[., VERTICAL, ), {, drawVerticalItem, (, g2, ,, state, ,, dataArea, ,, plot, ,, domainAxis, ,, rangeAxis, ,, dataset, ,]
[), {, drawVerticalItem, (, g2, ,, state, ,, dataArea, ,, plot, ,, domainAxis, ,, rangeAxis, ,, dataset, ,, row, ,]
[drawVerticalItem, (, g2, ,, state, ,, dataArea, ,, plot, ,, domainAxis, ,, rangeAxis, ,, dataset, ,, row, ,, column, ,]
[g2, ,, state, ,, dataArea, ,, plot, ,, domainAxis, ,, rangeAxis, ,, dataset, ,, row, ,, column, ,, selected, ,]
[,, CategoryDataset, dataset, ,, int, row, ,, int, column, ,, boolean, selected, ,, int, pass, ), {, BoxAndWhiskerCategoryDataset, bawDataset, =]
[,, int, row, ,, int, column, ,, boolean, selected, ,, int, pass, ), {, BoxAndWhiskerCategoryDataset, bawDataset, =, (, BoxAndWhiskerCategoryDataset, )]
[column, ,, boolean, selected, ,, int, pass, ), {, BoxAndWhiskerCategoryDataset, bawDataset, =, (, BoxAndWhiskerCategoryDataset, ), dataset, ;, double, categoryEnd, =]
[column, ,, boolean, selected, ,, int, pass, ), {, BoxAndWhiskerCategoryDataset, bawDataset, =, (, BoxAndWhiskerCategoryDataset, ), dataset, ;, double, categoryEnd, =]
[,, int, pass, ), {, BoxAndWhiskerCategoryDataset, bawDataset, =, (, BoxAndWhiskerCategoryDataset, ), dataset, ;, double, categoryEnd, =, domainAxis, ., getCategoryEnd, (]
[pass, ), {, BoxAndWhiskerCategoryDataset, bawDataset, =, (, BoxAndWhiskerCategoryDataset, ), dataset, ;, double, categoryEnd, =, domainAxis, ., getCategoryEnd, (, column, ,]
[bawDataset, =, (, BoxAndWhiskerCategoryDataset, ), dataset, ;, double, categoryEnd, =, domainAxis, ., getCategoryEnd, (, column, ,, getColumnCount, (, ), ,]
[(, BoxAndWhiskerCategoryDataset, ), dataset, ;, double, categoryEnd, =, domainAxis, ., getCategoryEnd, (, column, ,, getColumnCount, (, ), ,, dataArea, ,]
[(, BoxAndWhiskerCategoryDataset, ), dataset, ;, double, categoryEnd, =, domainAxis, ., getCategoryEnd, (, column, ,, getColumnCount, (, ), ,, dataArea, ,]
[getCategoryEnd, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, categoryStart, =]
[getCategoryEnd, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, categoryStart, =]
[getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, categoryStart, =, domainAxis, ., getCategoryStart, (]
[), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, categoryStart, =, domainAxis, ., getCategoryStart, (, column, ,]
[plot, ., getDomainAxisEdge, (, ), ), ;, double, categoryStart, =, domainAxis, ., getCategoryStart, (, column, ,, getColumnCount, (, ), ,]
[getDomainAxisEdge, (, ), ), ;, double, categoryStart, =, domainAxis, ., getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,]
[getDomainAxisEdge, (, ), ), ;, double, categoryStart, =, domainAxis, ., getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,]
[getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, categoryWidth, =]
[getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, categoryWidth, =]
[getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, categoryWidth, =, Math, ., abs, (]
[getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, categoryWidth, =, Math, ., abs, (]
[), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, categoryWidth, =, Math, ., abs, (, categoryEnd, -]
[getDomainAxisEdge, (, ), ), ;, double, categoryWidth, =, Math, ., abs, (, categoryEnd, -, categoryStart, ), ;, double, yy, =]
[double, categoryWidth, =, Math, ., abs, (, categoryEnd, -, categoryStart, ), ;, double, yy, =, categoryStart, ;, int, seriesCount, =]
[categoryEnd, -, categoryStart, ), ;, double, yy, =, categoryStart, ;, int, seriesCount, =, getRowCount, (, ), ;, int, categoryCount, =]
[yy, =, categoryStart, ;, int, seriesCount, =, getRowCount, (, ), ;, int, categoryCount, =, getColumnCount, (, ), ;, if, (]
[yy, =, categoryStart, ;, int, seriesCount, =, getRowCount, (, ), ;, int, categoryCount, =, getColumnCount, (, ), ;, if, (]
[categoryStart, ;, int, seriesCount, =, getRowCount, (, ), ;, int, categoryCount, =, getColumnCount, (, ), ;, if, (, seriesCount, >]
[(, ), ;, int, categoryCount, =, getColumnCount, (, ), ;, if, (, seriesCount, >, 1, ), {, double, seriesGap, =]
[(, ), ;, int, categoryCount, =, getColumnCount, (, ), ;, if, (, seriesCount, >, 1, ), {, double, seriesGap, =]
[(, ), ;, int, categoryCount, =, getColumnCount, (, ), ;, if, (, seriesCount, >, 1, ), {, double, seriesGap, =]
[(, ), ;, int, categoryCount, =, getColumnCount, (, ), ;, if, (, seriesCount, >, 1, ), {, double, seriesGap, =]
[getColumnCount, (, ), ;, if, (, seriesCount, >, 1, ), {, double, seriesGap, =, dataArea, ., getHeight, (, ), *]
[if, (, seriesCount, >, 1, ), {, double, seriesGap, =, dataArea, ., getHeight, (, ), *, getItemMargin, (, ), /]
[(, seriesCount, >, 1, ), {, double, seriesGap, =, dataArea, ., getHeight, (, ), *, getItemMargin, (, ), /, (]
[(, seriesCount, >, 1, ), {, double, seriesGap, =, dataArea, ., getHeight, (, ), *, getItemMargin, (, ), /, (]
[>, 1, ), {, double, seriesGap, =, dataArea, ., getHeight, (, ), *, getItemMargin, (, ), /, (, categoryCount, *]
[1, ), {, double, seriesGap, =, dataArea, ., getHeight, (, ), *, getItemMargin, (, ), /, (, categoryCount, *, (]
[1, ), {, double, seriesGap, =, dataArea, ., getHeight, (, ), *, getItemMargin, (, ), /, (, categoryCount, *, (]
[{, double, seriesGap, =, dataArea, ., getHeight, (, ), *, getItemMargin, (, ), /, (, categoryCount, *, (, seriesCount, -]
[(, ), *, getItemMargin, (, ), /, (, categoryCount, *, (, seriesCount, -, 1, ), ), ;, double, usedWidth, =]
[(, ), *, getItemMargin, (, ), /, (, categoryCount, *, (, seriesCount, -, 1, ), ), ;, double, usedWidth, =]
[), *, getItemMargin, (, ), /, (, categoryCount, *, (, seriesCount, -, 1, ), ), ;, double, usedWidth, =, (]
[), *, getItemMargin, (, ), /, (, categoryCount, *, (, seriesCount, -, 1, ), ), ;, double, usedWidth, =, (]
[), *, getItemMargin, (, ), /, (, categoryCount, *, (, seriesCount, -, 1, ), ), ;, double, usedWidth, =, (]
[(, categoryCount, *, (, seriesCount, -, 1, ), ), ;, double, usedWidth, =, (, state, ., getBarWidth, (, ), *]
[(, seriesCount, -, 1, ), ), ;, double, usedWidth, =, (, state, ., getBarWidth, (, ), *, seriesCount, ), +]
[seriesCount, -, 1, ), ), ;, double, usedWidth, =, (, state, ., getBarWidth, (, ), *, seriesCount, ), +, (]
[seriesCount, -, 1, ), ), ;, double, usedWidth, =, (, state, ., getBarWidth, (, ), *, seriesCount, ), +, (]
[1, ), ), ;, double, usedWidth, =, (, state, ., getBarWidth, (, ), *, seriesCount, ), +, (, seriesGap, *]
[), ), ;, double, usedWidth, =, (, state, ., getBarWidth, (, ), *, seriesCount, ), +, (, seriesGap, *, (]
[), ), ;, double, usedWidth, =, (, state, ., getBarWidth, (, ), *, seriesCount, ), +, (, seriesGap, *, (]
[;, double, usedWidth, =, (, state, ., getBarWidth, (, ), *, seriesCount, ), +, (, seriesGap, *, (, seriesCount, -]
[getBarWidth, (, ), *, seriesCount, ), +, (, seriesGap, *, (, seriesCount, -, 1, ), ), ;, double, offset, =]
[getBarWidth, (, ), *, seriesCount, ), +, (, seriesGap, *, (, seriesCount, -, 1, ), ), ;, double, offset, =]
[(, ), *, seriesCount, ), +, (, seriesGap, *, (, seriesCount, -, 1, ), ), ;, double, offset, =, (]
[(, ), *, seriesCount, ), +, (, seriesGap, *, (, seriesCount, -, 1, ), ), ;, double, offset, =, (]
[*, seriesCount, ), +, (, seriesGap, *, (, seriesCount, -, 1, ), ), ;, double, offset, =, (, categoryWidth, -]
[+, (, seriesGap, *, (, seriesCount, -, 1, ), ), ;, double, offset, =, (, categoryWidth, -, usedWidth, ), /]
[seriesGap, *, (, seriesCount, -, 1, ), ), ;, double, offset, =, (, categoryWidth, -, usedWidth, ), /, 2, ;]
[(, seriesCount, -, 1, ), ), ;, double, offset, =, (, categoryWidth, -, usedWidth, ), /, 2, ;, yy, =]
[(, seriesCount, -, 1, ), ), ;, double, offset, =, (, categoryWidth, -, usedWidth, ), /, 2, ;, yy, =]
[(, seriesCount, -, 1, ), ), ;, double, offset, =, (, categoryWidth, -, usedWidth, ), /, 2, ;, yy, =]
[-, 1, ), ), ;, double, offset, =, (, categoryWidth, -, usedWidth, ), /, 2, ;, yy, =, yy, +]
[), ), ;, double, offset, =, (, categoryWidth, -, usedWidth, ), /, 2, ;, yy, =, yy, +, offset, +]
[), ;, double, offset, =, (, categoryWidth, -, usedWidth, ), /, 2, ;, yy, =, yy, +, offset, +, (]
[), ;, double, offset, =, (, categoryWidth, -, usedWidth, ), /, 2, ;, yy, =, yy, +, offset, +, (]
[double, offset, =, (, categoryWidth, -, usedWidth, ), /, 2, ;, yy, =, yy, +, offset, +, (, row, *]
[offset, =, (, categoryWidth, -, usedWidth, ), /, 2, ;, yy, =, yy, +, offset, +, (, row, *, (]
[offset, =, (, categoryWidth, -, usedWidth, ), /, 2, ;, yy, =, yy, +, offset, +, (, row, *, (]
[offset, =, (, categoryWidth, -, usedWidth, ), /, 2, ;, yy, =, yy, +, offset, +, (, row, *, (]
[), /, 2, ;, yy, =, yy, +, offset, +, (, row, *, (, state, ., getBarWidth, (, ), +]
[(, row, *, (, state, ., getBarWidth, (, ), +, seriesGap, ), ), ;, }, else, {, double, offset, =]
[(, row, *, (, state, ., getBarWidth, (, ), +, seriesGap, ), ), ;, }, else, {, double, offset, =]
[row, *, (, state, ., getBarWidth, (, ), +, seriesGap, ), ), ;, }, else, {, double, offset, =, (]
[row, *, (, state, ., getBarWidth, (, ), +, seriesGap, ), ), ;, }, else, {, double, offset, =, (]
[(, state, ., getBarWidth, (, ), +, seriesGap, ), ), ;, }, else, {, double, offset, =, (, categoryWidth, -]
[(, state, ., getBarWidth, (, ), +, seriesGap, ), ), ;, }, else, {, double, offset, =, (, categoryWidth, -]
[seriesGap, ), ), ;, }, else, {, double, offset, =, (, categoryWidth, -, state, ., getBarWidth, (, ), ), /]
[), ;, }, else, {, double, offset, =, (, categoryWidth, -, state, ., getBarWidth, (, ), ), /, 2, ;]
[}, else, {, double, offset, =, (, categoryWidth, -, state, ., getBarWidth, (, ), ), /, 2, ;, yy, =]
[}, else, {, double, offset, =, (, categoryWidth, -, state, ., getBarWidth, (, ), ), /, 2, ;, yy, =]
[{, double, offset, =, (, categoryWidth, -, state, ., getBarWidth, (, ), ), /, 2, ;, yy, =, yy, +]
[=, (, categoryWidth, -, state, ., getBarWidth, (, ), ), /, 2, ;, yy, =, yy, +, offset, ;, }]
[=, (, categoryWidth, -, state, ., getBarWidth, (, ), ), /, 2, ;, yy, =, yy, +, offset, ;, }]
[state, ., getBarWidth, (, ), ), /, 2, ;, yy, =, yy, +, offset, ;, }, g2, ., setPaint, (]
[getBarWidth, (, ), ), /, 2, ;, yy, =, yy, +, offset, ;, }, g2, ., setPaint, (, getItemPaint, (]
[), ), /, 2, ;, yy, =, yy, +, offset, ;, }, g2, ., setPaint, (, getItemPaint, (, row, ,]
[/, 2, ;, yy, =, yy, +, offset, ;, }, g2, ., setPaint, (, getItemPaint, (, row, ,, column, ,]
[offset, ;, }, g2, ., setPaint, (, getItemPaint, (, row, ,, column, ,, selected, ), ), ;, Stroke, s, =]
[}, g2, ., setPaint, (, getItemPaint, (, row, ,, column, ,, selected, ), ), ;, Stroke, s, =, getItemStroke, (]
[., setPaint, (, getItemPaint, (, row, ,, column, ,, selected, ), ), ;, Stroke, s, =, getItemStroke, (, row, ,]
[(, getItemPaint, (, row, ,, column, ,, selected, ), ), ;, Stroke, s, =, getItemStroke, (, row, ,, column, ,]
[row, ,, column, ,, selected, ), ), ;, Stroke, s, =, getItemStroke, (, row, ,, column, ,, selected, ), ;]
[row, ,, column, ,, selected, ), ), ;, Stroke, s, =, getItemStroke, (, row, ,, column, ,, selected, ), ;]
[selected, ), ), ;, Stroke, s, =, getItemStroke, (, row, ,, column, ,, selected, ), ;, g2, ., setStroke, (]
[=, getItemStroke, (, row, ,, column, ,, selected, ), ;, g2, ., setStroke, (, s, ), ;, RectangleEdge, location, =]
[=, getItemStroke, (, row, ,, column, ,, selected, ), ;, g2, ., setStroke, (, s, ), ;, RectangleEdge, location, =]
[;, g2, ., setStroke, (, s, ), ;, RectangleEdge, location, =, plot, ., getRangeAxisEdge, (, ), ;, Number, xQ1, =]
[;, g2, ., setStroke, (, s, ), ;, RectangleEdge, location, =, plot, ., getRangeAxisEdge, (, ), ;, Number, xQ1, =]
[(, s, ), ;, RectangleEdge, location, =, plot, ., getRangeAxisEdge, (, ), ;, Number, xQ1, =, bawDataset, ., getQ1Value, (]
[), ;, RectangleEdge, location, =, plot, ., getRangeAxisEdge, (, ), ;, Number, xQ1, =, bawDataset, ., getQ1Value, (, row, ,]
[., getRangeAxisEdge, (, ), ;, Number, xQ1, =, bawDataset, ., getQ1Value, (, row, ,, column, ), ;, Number, xQ3, =]
[., getRangeAxisEdge, (, ), ;, Number, xQ1, =, bawDataset, ., getQ1Value, (, row, ,, column, ), ;, Number, xQ3, =]
[;, Number, xQ1, =, bawDataset, ., getQ1Value, (, row, ,, column, ), ;, Number, xQ3, =, bawDataset, ., getQ3Value, (]
[xQ1, =, bawDataset, ., getQ1Value, (, row, ,, column, ), ;, Number, xQ3, =, bawDataset, ., getQ3Value, (, row, ,]
[row, ,, column, ), ;, Number, xQ3, =, bawDataset, ., getQ3Value, (, row, ,, column, ), ;, Number, xMax, =]
[row, ,, column, ), ;, Number, xQ3, =, bawDataset, ., getQ3Value, (, row, ,, column, ), ;, Number, xMax, =]
[;, Number, xQ3, =, bawDataset, ., getQ3Value, (, row, ,, column, ), ;, Number, xMax, =, bawDataset, ., getMaxRegularValue, (]
[xQ3, =, bawDataset, ., getQ3Value, (, row, ,, column, ), ;, Number, xMax, =, bawDataset, ., getMaxRegularValue, (, row, ,]
[row, ,, column, ), ;, Number, xMax, =, bawDataset, ., getMaxRegularValue, (, row, ,, column, ), ;, Number, xMin, =]
[row, ,, column, ), ;, Number, xMax, =, bawDataset, ., getMaxRegularValue, (, row, ,, column, ), ;, Number, xMin, =]
[;, Number, xMax, =, bawDataset, ., getMaxRegularValue, (, row, ,, column, ), ;, Number, xMin, =, bawDataset, ., getMinRegularValue, (]
[xMax, =, bawDataset, ., getMaxRegularValue, (, row, ,, column, ), ;, Number, xMin, =, bawDataset, ., getMinRegularValue, (, row, ,]
[row, ,, column, ), ;, Number, xMin, =, bawDataset, ., getMinRegularValue, (, row, ,, column, ), ;, Shape, box, =]
[;, Number, xMin, =, bawDataset, ., getMinRegularValue, (, row, ,, column, ), ;, Shape, box, =, null, ;, if, (]
[;, Number, xMin, =, bawDataset, ., getMinRegularValue, (, row, ,, column, ), ;, Shape, box, =, null, ;, if, (]
[;, Number, xMin, =, bawDataset, ., getMinRegularValue, (, row, ,, column, ), ;, Shape, box, =, null, ;, if, (]
[;, Number, xMin, =, bawDataset, ., getMinRegularValue, (, row, ,, column, ), ;, Shape, box, =, null, ;, if, (]
[;, Number, xMin, =, bawDataset, ., getMinRegularValue, (, row, ,, column, ), ;, Shape, box, =, null, ;, if, (]
[xMin, =, bawDataset, ., getMinRegularValue, (, row, ,, column, ), ;, Shape, box, =, null, ;, if, (, xQ1, !=]
[bawDataset, ., getMinRegularValue, (, row, ,, column, ), ;, Shape, box, =, null, ;, if, (, xQ1, !=, null, &&]
[bawDataset, ., getMinRegularValue, (, row, ,, column, ), ;, Shape, box, =, null, ;, if, (, xQ1, !=, null, &&]
[getMinRegularValue, (, row, ,, column, ), ;, Shape, box, =, null, ;, if, (, xQ1, !=, null, &&, xQ3, !=]
[row, ,, column, ), ;, Shape, box, =, null, ;, if, (, xQ1, !=, null, &&, xQ3, !=, null, &&]
[row, ,, column, ), ;, Shape, box, =, null, ;, if, (, xQ1, !=, null, &&, xQ3, !=, null, &&]
[column, ), ;, Shape, box, =, null, ;, if, (, xQ1, !=, null, &&, xQ3, !=, null, &&, xMax, !=]
[;, Shape, box, =, null, ;, if, (, xQ1, !=, null, &&, xQ3, !=, null, &&, xMax, !=, null, &&]
[;, Shape, box, =, null, ;, if, (, xQ1, !=, null, &&, xQ3, !=, null, &&, xMax, !=, null, &&]
[box, =, null, ;, if, (, xQ1, !=, null, &&, xQ3, !=, null, &&, xMax, !=, null, &&, xMin, !=]
[xQ1, !=, null, &&, xQ3, !=, null, &&, xMax, !=, null, &&, xMin, !=, null, ), {, double, xxQ1, =]
[xQ1, !=, null, &&, xQ3, !=, null, &&, xMax, !=, null, &&, xMin, !=, null, ), {, double, xxQ1, =]
[xQ3, !=, null, &&, xMax, !=, null, &&, xMin, !=, null, ), {, double, xxQ1, =, rangeAxis, ., valueToJava2D, (]
[xQ3, !=, null, &&, xMax, !=, null, &&, xMin, !=, null, ), {, double, xxQ1, =, rangeAxis, ., valueToJava2D, (]
[null, &&, xMin, !=, null, ), {, double, xxQ1, =, rangeAxis, ., valueToJava2D, (, xQ1, ., doubleValue, (, ), ,]
[xMin, !=, null, ), {, double, xxQ1, =, rangeAxis, ., valueToJava2D, (, xQ1, ., doubleValue, (, ), ,, dataArea, ,]
[xxQ1, =, rangeAxis, ., valueToJava2D, (, xQ1, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;, double, xxQ3, =]
[xxQ1, =, rangeAxis, ., valueToJava2D, (, xQ1, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;, double, xxQ3, =]
[valueToJava2D, (, xQ1, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;, double, xxQ3, =, rangeAxis, ., valueToJava2D, (]
[valueToJava2D, (, xQ1, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;, double, xxQ3, =, rangeAxis, ., valueToJava2D, (]
[), ,, dataArea, ,, location, ), ;, double, xxQ3, =, rangeAxis, ., valueToJava2D, (, xQ3, ., doubleValue, (, ), ,]
[dataArea, ,, location, ), ;, double, xxQ3, =, rangeAxis, ., valueToJava2D, (, xQ3, ., doubleValue, (, ), ,, dataArea, ,]
[xxQ3, =, rangeAxis, ., valueToJava2D, (, xQ3, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;, double, xxMax, =]
[xxQ3, =, rangeAxis, ., valueToJava2D, (, xQ3, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;, double, xxMax, =]
[valueToJava2D, (, xQ3, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;, double, xxMax, =, rangeAxis, ., valueToJava2D, (]
[valueToJava2D, (, xQ3, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;, double, xxMax, =, rangeAxis, ., valueToJava2D, (]
[), ,, dataArea, ,, location, ), ;, double, xxMax, =, rangeAxis, ., valueToJava2D, (, xMax, ., doubleValue, (, ), ,]
[dataArea, ,, location, ), ;, double, xxMax, =, rangeAxis, ., valueToJava2D, (, xMax, ., doubleValue, (, ), ,, dataArea, ,]
[xxMax, =, rangeAxis, ., valueToJava2D, (, xMax, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;, double, xxMin, =]
[xxMax, =, rangeAxis, ., valueToJava2D, (, xMax, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;, double, xxMin, =]
[valueToJava2D, (, xMax, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;, double, xxMin, =, rangeAxis, ., valueToJava2D, (]
[valueToJava2D, (, xMax, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;, double, xxMin, =, rangeAxis, ., valueToJava2D, (]
[), ,, dataArea, ,, location, ), ;, double, xxMin, =, rangeAxis, ., valueToJava2D, (, xMin, ., doubleValue, (, ), ,]
[dataArea, ,, location, ), ;, double, xxMin, =, rangeAxis, ., valueToJava2D, (, xMin, ., doubleValue, (, ), ,, dataArea, ,]
[xxMin, =, rangeAxis, ., valueToJava2D, (, xMin, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;, double, yymid, =]
[xxMin, =, rangeAxis, ., valueToJava2D, (, xMin, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;, double, yymid, =]
[rangeAxis, ., valueToJava2D, (, xMin, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;, double, yymid, =, yy, +]
[rangeAxis, ., valueToJava2D, (, xMin, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;, double, yymid, =, yy, +]
[rangeAxis, ., valueToJava2D, (, xMin, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;, double, yymid, =, yy, +]
[doubleValue, (, ), ,, dataArea, ,, location, ), ;, double, yymid, =, yy, +, state, ., getBarWidth, (, ), /]
[), ,, dataArea, ,, location, ), ;, double, yymid, =, yy, +, state, ., getBarWidth, (, ), /, 2.0, ;]
[), ,, dataArea, ,, location, ), ;, double, yymid, =, yy, +, state, ., getBarWidth, (, ), /, 2.0, ;]
[location, ), ;, double, yymid, =, yy, +, state, ., getBarWidth, (, ), /, 2.0, ;, g2, ., draw, (]
[=, yy, +, state, ., getBarWidth, (, ), /, 2.0, ;, g2, ., draw, (, new, Line2D, ., Double, (]
[+, state, ., getBarWidth, (, ), /, 2.0, ;, g2, ., draw, (, new, Line2D, ., Double, (, xxMax, ,]
[., getBarWidth, (, ), /, 2.0, ;, g2, ., draw, (, new, Line2D, ., Double, (, xxMax, ,, yymid, ,]
[(, ), /, 2.0, ;, g2, ., draw, (, new, Line2D, ., Double, (, xxMax, ,, yymid, ,, xxQ3, ,]
[;, g2, ., draw, (, new, Line2D, ., Double, (, xxMax, ,, yymid, ,, xxQ3, ,, yymid, ), ), ;]
[;, g2, ., draw, (, new, Line2D, ., Double, (, xxMax, ,, yymid, ,, xxQ3, ,, yymid, ), ), ;]
[(, new, Line2D, ., Double, (, xxMax, ,, yymid, ,, xxQ3, ,, yymid, ), ), ;, g2, ., draw, (]
[(, xxMax, ,, yymid, ,, xxQ3, ,, yymid, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (]
[,, yymid, ,, xxQ3, ,, yymid, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xxMax, ,]
[,, xxQ3, ,, yymid, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xxMax, ,, yy, ,]
[,, yymid, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xxMax, ,, yy, ,, xxMax, ,]
[,, yymid, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xxMax, ,, yy, ,, xxMax, ,]
[), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xxMax, ,, yy, ,, xxMax, ,, yy, +]
[), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xxMax, ,, yy, ,, xxMax, ,, yy, +]
[Line2D, ., Double, (, xxMax, ,, yy, ,, xxMax, ,, yy, +, state, ., getBarWidth, (, ), ), ), ;]
[Line2D, ., Double, (, xxMax, ,, yy, ,, xxMax, ,, yy, +, state, ., getBarWidth, (, ), ), ), ;]
[xxMax, ,, yy, ,, xxMax, ,, yy, +, state, ., getBarWidth, (, ), ), ), ;, g2, ., draw, (]
[,, yy, +, state, ., getBarWidth, (, ), ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (]
[+, state, ., getBarWidth, (, ), ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xxMin, ,]
[., getBarWidth, (, ), ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xxMin, ,, yymid, ,]
[(, ), ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xxMin, ,, yymid, ,, xxQ1, ,]
[;, g2, ., draw, (, new, Line2D, ., Double, (, xxMin, ,, yymid, ,, xxQ1, ,, yymid, ), ), ;]
[;, g2, ., draw, (, new, Line2D, ., Double, (, xxMin, ,, yymid, ,, xxQ1, ,, yymid, ), ), ;]
[(, new, Line2D, ., Double, (, xxMin, ,, yymid, ,, xxQ1, ,, yymid, ), ), ;, g2, ., draw, (]
[(, xxMin, ,, yymid, ,, xxQ1, ,, yymid, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (]
[,, yymid, ,, xxQ1, ,, yymid, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xxMin, ,]
[,, xxQ1, ,, yymid, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xxMin, ,, yy, ,]
[,, yymid, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xxMin, ,, yy, ,, xxMin, ,]
[,, yymid, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xxMin, ,, yy, ,, xxMin, ,]
[), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xxMin, ,, yy, ,, xxMin, ,, yy, +]
[), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xxMin, ,, yy, ,, xxMin, ,, yy, +]
[Line2D, ., Double, (, xxMin, ,, yy, ,, xxMin, ,, yy, +, state, ., getBarWidth, (, ), ), ), ;]
[Double, (, xxMin, ,, yy, ,, xxMin, ,, yy, +, state, ., getBarWidth, (, ), ), ), ;, box, =]
[,, xxMin, ,, yy, +, state, ., getBarWidth, (, ), ), ), ;, box, =, new, Rectangle2D, ., Double, (]
[,, xxMin, ,, yy, +, state, ., getBarWidth, (, ), ), ), ;, box, =, new, Rectangle2D, ., Double, (]
[+, state, ., getBarWidth, (, ), ), ), ;, box, =, new, Rectangle2D, ., Double, (, Math, ., min, (]
[., getBarWidth, (, ), ), ), ;, box, =, new, Rectangle2D, ., Double, (, Math, ., min, (, xxQ1, ,]
[), ), ), ;, box, =, new, Rectangle2D, ., Double, (, Math, ., min, (, xxQ1, ,, xxQ3, ), ,]
[), ;, box, =, new, Rectangle2D, ., Double, (, Math, ., min, (, xxQ1, ,, xxQ3, ), ,, yy, ,]
[), ;, box, =, new, Rectangle2D, ., Double, (, Math, ., min, (, xxQ1, ,, xxQ3, ), ,, yy, ,]
[new, Rectangle2D, ., Double, (, Math, ., min, (, xxQ1, ,, xxQ3, ), ,, yy, ,, Math, ., abs, (]
[new, Rectangle2D, ., Double, (, Math, ., min, (, xxQ1, ,, xxQ3, ), ,, yy, ,, Math, ., abs, (]
[., Double, (, Math, ., min, (, xxQ1, ,, xxQ3, ), ,, yy, ,, Math, ., abs, (, xxQ1, -]
[Math, ., min, (, xxQ1, ,, xxQ3, ), ,, yy, ,, Math, ., abs, (, xxQ1, -, xxQ3, ), ,]
[Math, ., min, (, xxQ1, ,, xxQ3, ), ,, yy, ,, Math, ., abs, (, xxQ1, -, xxQ3, ), ,]
[yy, ,, Math, ., abs, (, xxQ1, -, xxQ3, ), ,, state, ., getBarWidth, (, ), ), ;, if, (]
[yy, ,, Math, ., abs, (, xxQ1, -, xxQ3, ), ,, state, ., getBarWidth, (, ), ), ;, if, (]
[(, xxQ1, -, xxQ3, ), ,, state, ., getBarWidth, (, ), ), ;, if, (, this, ., fillBox, ), {]
[(, xxQ1, -, xxQ3, ), ,, state, ., getBarWidth, (, ), ), ;, if, (, this, ., fillBox, ), {]
[), ,, state, ., getBarWidth, (, ), ), ;, if, (, this, ., fillBox, ), {, g2, ., fill, (]
[getBarWidth, (, ), ), ;, if, (, this, ., fillBox, ), {, g2, ., fill, (, box, ), ;, }]
[getBarWidth, (, ), ), ;, if, (, this, ., fillBox, ), {, g2, ., fill, (, box, ), ;, }]
[;, if, (, this, ., fillBox, ), {, g2, ., fill, (, box, ), ;, }, g2, ., setStroke, (]
[(, this, ., fillBox, ), {, g2, ., fill, (, box, ), ;, }, g2, ., setStroke, (, getItemOutlineStroke, (]
[., fillBox, ), {, g2, ., fill, (, box, ), ;, }, g2, ., setStroke, (, getItemOutlineStroke, (, row, ,]
[), {, g2, ., fill, (, box, ), ;, }, g2, ., setStroke, (, getItemOutlineStroke, (, row, ,, column, ,]
[fill, (, box, ), ;, }, g2, ., setStroke, (, getItemOutlineStroke, (, row, ,, column, ,, selected, ), ), ;]
[fill, (, box, ), ;, }, g2, ., setStroke, (, getItemOutlineStroke, (, row, ,, column, ,, selected, ), ), ;]
[;, }, g2, ., setStroke, (, getItemOutlineStroke, (, row, ,, column, ,, selected, ), ), ;, g2, ., setPaint, (]
[g2, ., setStroke, (, getItemOutlineStroke, (, row, ,, column, ,, selected, ), ), ;, g2, ., setPaint, (, getItemOutlinePaint, (]
[setStroke, (, getItemOutlineStroke, (, row, ,, column, ,, selected, ), ), ;, g2, ., setPaint, (, getItemOutlinePaint, (, row, ,]
[getItemOutlineStroke, (, row, ,, column, ,, selected, ), ), ;, g2, ., setPaint, (, getItemOutlinePaint, (, row, ,, column, ,]
[column, ,, selected, ), ), ;, g2, ., setPaint, (, getItemOutlinePaint, (, row, ,, column, ,, selected, ), ), ;]
[column, ,, selected, ), ), ;, g2, ., setPaint, (, getItemOutlinePaint, (, row, ,, column, ,, selected, ), ), ;]
[), ;, g2, ., setPaint, (, getItemOutlinePaint, (, row, ,, column, ,, selected, ), ), ;, g2, ., draw, (]
[setPaint, (, getItemOutlinePaint, (, row, ,, column, ,, selected, ), ), ;, g2, ., draw, (, box, ), ;, }]
[setPaint, (, getItemOutlinePaint, (, row, ,, column, ,, selected, ), ), ;, g2, ., draw, (, box, ), ;, }]
[row, ,, column, ,, selected, ), ), ;, g2, ., draw, (, box, ), ;, }, g2, ., setPaint, (]
[row, ,, column, ,, selected, ), ), ;, g2, ., draw, (, box, ), ;, }, g2, ., setPaint, (]
[g2, ., draw, (, box, ), ;, }, g2, ., setPaint, (, this, ., artifactPaint, ), ;, double, aRadius, =]
[box, ), ;, }, g2, ., setPaint, (, this, ., artifactPaint, ), ;, double, aRadius, =, 0, ;, if, (]
[box, ), ;, }, g2, ., setPaint, (, this, ., artifactPaint, ), ;, double, aRadius, =, 0, ;, if, (]
[this, ., artifactPaint, ), ;, double, aRadius, =, 0, ;, if, (, this, ., meanVisible, ), {, Number, xMean, =]
[this, ., artifactPaint, ), ;, double, aRadius, =, 0, ;, if, (, this, ., meanVisible, ), {, Number, xMean, =]
[;, double, aRadius, =, 0, ;, if, (, this, ., meanVisible, ), {, Number, xMean, =, bawDataset, ., getMeanValue, (]
[aRadius, =, 0, ;, if, (, this, ., meanVisible, ), {, Number, xMean, =, bawDataset, ., getMeanValue, (, row, ,]
[(, this, ., meanVisible, ), {, Number, xMean, =, bawDataset, ., getMeanValue, (, row, ,, column, ), ;, if, (]
[(, this, ., meanVisible, ), {, Number, xMean, =, bawDataset, ., getMeanValue, (, row, ,, column, ), ;, if, (]
[., meanVisible, ), {, Number, xMean, =, bawDataset, ., getMeanValue, (, row, ,, column, ), ;, if, (, xMean, !=]
[=, bawDataset, ., getMeanValue, (, row, ,, column, ), ;, if, (, xMean, !=, null, ), {, double, xxMean, =]
[=, bawDataset, ., getMeanValue, (, row, ,, column, ), ;, if, (, xMean, !=, null, ), {, double, xxMean, =]
[(, row, ,, column, ), ;, if, (, xMean, !=, null, ), {, double, xxMean, =, rangeAxis, ., valueToJava2D, (]
[(, row, ,, column, ), ;, if, (, xMean, !=, null, ), {, double, xxMean, =, rangeAxis, ., valueToJava2D, (]
[if, (, xMean, !=, null, ), {, double, xxMean, =, rangeAxis, ., valueToJava2D, (, xMean, ., doubleValue, (, ), ,]
[xMean, !=, null, ), {, double, xxMean, =, rangeAxis, ., valueToJava2D, (, xMean, ., doubleValue, (, ), ,, dataArea, ,]
[), {, double, xxMean, =, rangeAxis, ., valueToJava2D, (, xMean, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;]
[double, xxMean, =, rangeAxis, ., valueToJava2D, (, xMean, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;, aRadius, =]
[double, xxMean, =, rangeAxis, ., valueToJava2D, (, xMean, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;, aRadius, =]
[double, xxMean, =, rangeAxis, ., valueToJava2D, (, xMean, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;, aRadius, =]
[(, xMean, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;, aRadius, =, state, ., getBarWidth, (, ), /]
[(, ), ,, dataArea, ,, location, ), ;, aRadius, =, state, ., getBarWidth, (, ), /, 4, ;, if, (]
[(, ), ,, dataArea, ,, location, ), ;, aRadius, =, state, ., getBarWidth, (, ), /, 4, ;, if, (]
[), ,, dataArea, ,, location, ), ;, aRadius, =, state, ., getBarWidth, (, ), /, 4, ;, if, (, (]
[), ,, dataArea, ,, location, ), ;, aRadius, =, state, ., getBarWidth, (, ), /, 4, ;, if, (, (]
[dataArea, ,, location, ), ;, aRadius, =, state, ., getBarWidth, (, ), /, 4, ;, if, (, (, xxMean, >]
[,, location, ), ;, aRadius, =, state, ., getBarWidth, (, ), /, 4, ;, if, (, (, xxMean, >, (]
[,, location, ), ;, aRadius, =, state, ., getBarWidth, (, ), /, 4, ;, if, (, (, xxMean, >, (]
[,, location, ), ;, aRadius, =, state, ., getBarWidth, (, ), /, 4, ;, if, (, (, xxMean, >, (]
[state, ., getBarWidth, (, ), /, 4, ;, if, (, (, xxMean, >, (, dataArea, ., getMinX, (, ), -]
[), /, 4, ;, if, (, (, xxMean, >, (, dataArea, ., getMinX, (, ), -, aRadius, ), ), &&]
[/, 4, ;, if, (, (, xxMean, >, (, dataArea, ., getMinX, (, ), -, aRadius, ), ), &&, (]
[/, 4, ;, if, (, (, xxMean, >, (, dataArea, ., getMinX, (, ), -, aRadius, ), ), &&, (]
[;, if, (, (, xxMean, >, (, dataArea, ., getMinX, (, ), -, aRadius, ), ), &&, (, xxMean, <]
[if, (, (, xxMean, >, (, dataArea, ., getMinX, (, ), -, aRadius, ), ), &&, (, xxMean, <, (]
[if, (, (, xxMean, >, (, dataArea, ., getMinX, (, ), -, aRadius, ), ), &&, (, xxMean, <, (]
[if, (, (, xxMean, >, (, dataArea, ., getMinX, (, ), -, aRadius, ), ), &&, (, xxMean, <, (]
[dataArea, ., getMinX, (, ), -, aRadius, ), ), &&, (, xxMean, <, (, dataArea, ., getMaxX, (, ), +]
[(, xxMean, <, (, dataArea, ., getMaxX, (, ), +, aRadius, ), ), ), {, Ellipse2D, ., Double, avgEllipse, =]
[., getMaxX, (, ), +, aRadius, ), ), ), {, Ellipse2D, ., Double, avgEllipse, =, new, Ellipse2D, ., Double, (]
[., getMaxX, (, ), +, aRadius, ), ), ), {, Ellipse2D, ., Double, avgEllipse, =, new, Ellipse2D, ., Double, (]
[(, ), +, aRadius, ), ), ), {, Ellipse2D, ., Double, avgEllipse, =, new, Ellipse2D, ., Double, (, xxMean, -]
[+, aRadius, ), ), ), {, Ellipse2D, ., Double, avgEllipse, =, new, Ellipse2D, ., Double, (, xxMean, -, aRadius, ,]
[+, aRadius, ), ), ), {, Ellipse2D, ., Double, avgEllipse, =, new, Ellipse2D, ., Double, (, xxMean, -, aRadius, ,]
[), ), ), {, Ellipse2D, ., Double, avgEllipse, =, new, Ellipse2D, ., Double, (, xxMean, -, aRadius, ,, yy, +]
[), {, Ellipse2D, ., Double, avgEllipse, =, new, Ellipse2D, ., Double, (, xxMean, -, aRadius, ,, yy, +, aRadius, ,]
[), {, Ellipse2D, ., Double, avgEllipse, =, new, Ellipse2D, ., Double, (, xxMean, -, aRadius, ,, yy, +, aRadius, ,]
[Ellipse2D, ., Double, avgEllipse, =, new, Ellipse2D, ., Double, (, xxMean, -, aRadius, ,, yy, +, aRadius, ,, aRadius, *]
[Double, avgEllipse, =, new, Ellipse2D, ., Double, (, xxMean, -, aRadius, ,, yy, +, aRadius, ,, aRadius, *, 2, ,]
[Double, avgEllipse, =, new, Ellipse2D, ., Double, (, xxMean, -, aRadius, ,, yy, +, aRadius, ,, aRadius, *, 2, ,]
[=, new, Ellipse2D, ., Double, (, xxMean, -, aRadius, ,, yy, +, aRadius, ,, aRadius, *, 2, ,, aRadius, *]
[., Double, (, xxMean, -, aRadius, ,, yy, +, aRadius, ,, aRadius, *, 2, ,, aRadius, *, 2, ), ;]
[., Double, (, xxMean, -, aRadius, ,, yy, +, aRadius, ,, aRadius, *, 2, ,, aRadius, *, 2, ), ;]
[-, aRadius, ,, yy, +, aRadius, ,, aRadius, *, 2, ,, aRadius, *, 2, ), ;, g2, ., fill, (]
[yy, +, aRadius, ,, aRadius, *, 2, ,, aRadius, *, 2, ), ;, g2, ., fill, (, avgEllipse, ), ;]
[yy, +, aRadius, ,, aRadius, *, 2, ,, aRadius, *, 2, ), ;, g2, ., fill, (, avgEllipse, ), ;]
[aRadius, *, 2, ,, aRadius, *, 2, ), ;, g2, ., fill, (, avgEllipse, ), ;, g2, ., draw, (]
[;, g2, ., fill, (, avgEllipse, ), ;, g2, ., draw, (, avgEllipse, ), ;, }, }, }, if, (]
[;, g2, ., fill, (, avgEllipse, ), ;, g2, ., draw, (, avgEllipse, ), ;, }, }, }, if, (]
[g2, ., draw, (, avgEllipse, ), ;, }, }, }, if, (, this, ., medianVisible, ), {, Number, xMedian, =]
[g2, ., draw, (, avgEllipse, ), ;, }, }, }, if, (, this, ., medianVisible, ), {, Number, xMedian, =]
[avgEllipse, ), ;, }, }, }, if, (, this, ., medianVisible, ), {, Number, xMedian, =, bawDataset, ., getMedianValue, (]
[;, }, }, }, if, (, this, ., medianVisible, ), {, Number, xMedian, =, bawDataset, ., getMedianValue, (, row, ,]
[(, this, ., medianVisible, ), {, Number, xMedian, =, bawDataset, ., getMedianValue, (, row, ,, column, ), ;, if, (]
[(, this, ., medianVisible, ), {, Number, xMedian, =, bawDataset, ., getMedianValue, (, row, ,, column, ), ;, if, (]
[., medianVisible, ), {, Number, xMedian, =, bawDataset, ., getMedianValue, (, row, ,, column, ), ;, if, (, xMedian, !=]
[=, bawDataset, ., getMedianValue, (, row, ,, column, ), ;, if, (, xMedian, !=, null, ), {, double, xxMedian, =]
[=, bawDataset, ., getMedianValue, (, row, ,, column, ), ;, if, (, xMedian, !=, null, ), {, double, xxMedian, =]
[(, row, ,, column, ), ;, if, (, xMedian, !=, null, ), {, double, xxMedian, =, rangeAxis, ., valueToJava2D, (]
[(, row, ,, column, ), ;, if, (, xMedian, !=, null, ), {, double, xxMedian, =, rangeAxis, ., valueToJava2D, (]
[if, (, xMedian, !=, null, ), {, double, xxMedian, =, rangeAxis, ., valueToJava2D, (, xMedian, ., doubleValue, (, ), ,]
[xMedian, !=, null, ), {, double, xxMedian, =, rangeAxis, ., valueToJava2D, (, xMedian, ., doubleValue, (, ), ,, dataArea, ,]
[), {, double, xxMedian, =, rangeAxis, ., valueToJava2D, (, xMedian, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;]
[), {, double, xxMedian, =, rangeAxis, ., valueToJava2D, (, xMedian, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;]
[=, rangeAxis, ., valueToJava2D, (, xMedian, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;, g2, ., draw, (]
[xMedian, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;, g2, ., draw, (, new, Line2D, ., Double, (]
[doubleValue, (, ), ,, dataArea, ,, location, ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xxMedian, ,]
[), ,, dataArea, ,, location, ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xxMedian, ,, yy, ,]
[dataArea, ,, location, ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xxMedian, ,, yy, ,, xxMedian, ,]
[dataArea, ,, location, ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xxMedian, ,, yy, ,, xxMedian, ,]
[location, ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xxMedian, ,, yy, ,, xxMedian, ,, yy, +]
[location, ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xxMedian, ,, yy, ,, xxMedian, ,, yy, +]
[xxMedian, ,, yy, ,, xxMedian, ,, yy, +, state, ., getBarWidth, (, ), ), ), ;, }, }, if, (]
[xxMedian, ,, yy, ,, xxMedian, ,, yy, +, state, ., getBarWidth, (, ), ), ), ;, }, }, if, (]
[xxMedian, ,, yy, ,, xxMedian, ,, yy, +, state, ., getBarWidth, (, ), ), ), ;, }, }, if, (]
[xxMedian, ,, yy, ,, xxMedian, ,, yy, +, state, ., getBarWidth, (, ), ), ), ;, }, }, if, (]
[yy, +, state, ., getBarWidth, (, ), ), ), ;, }, }, if, (, state, ., getInfo, (, ), !=]
[state, ., getBarWidth, (, ), ), ), ;, }, }, if, (, state, ., getInfo, (, ), !=, null, &&]
[state, ., getBarWidth, (, ), ), ), ;, }, }, if, (, state, ., getInfo, (, ), !=, null, &&]
[getBarWidth, (, ), ), ), ;, }, }, if, (, state, ., getInfo, (, ), !=, null, &&, box, !=]
[}, }, if, (, state, ., getInfo, (, ), !=, null, &&, box, !=, null, ), {, EntityCollection, entities, =]
[}, }, if, (, state, ., getInfo, (, ), !=, null, &&, box, !=, null, ), {, EntityCollection, entities, =]
[), !=, null, &&, box, !=, null, ), {, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (]
[), !=, null, &&, box, !=, null, ), {, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (]
[null, &&, box, !=, null, ), {, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=]
[!=, null, ), {, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {]
[), {, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (]
[EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,]
[=, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, box, ,]
[., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, box, ,, dataset, ,]
[(, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, box, ,, dataset, ,, row, ,]
[;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, box, ,, dataset, ,, row, ,, column, ,]
[,, CategoryDataset, dataset, ,, int, row, ,, int, column, ,, boolean, selected, ,, int, pass, ), {, BoxAndWhiskerCategoryDataset, bawDataset, =]
[,, int, row, ,, int, column, ,, boolean, selected, ,, int, pass, ), {, BoxAndWhiskerCategoryDataset, bawDataset, =, (, BoxAndWhiskerCategoryDataset, )]
[column, ,, boolean, selected, ,, int, pass, ), {, BoxAndWhiskerCategoryDataset, bawDataset, =, (, BoxAndWhiskerCategoryDataset, ), dataset, ;, double, categoryEnd, =]
[column, ,, boolean, selected, ,, int, pass, ), {, BoxAndWhiskerCategoryDataset, bawDataset, =, (, BoxAndWhiskerCategoryDataset, ), dataset, ;, double, categoryEnd, =]
[,, int, pass, ), {, BoxAndWhiskerCategoryDataset, bawDataset, =, (, BoxAndWhiskerCategoryDataset, ), dataset, ;, double, categoryEnd, =, domainAxis, ., getCategoryEnd, (]
[pass, ), {, BoxAndWhiskerCategoryDataset, bawDataset, =, (, BoxAndWhiskerCategoryDataset, ), dataset, ;, double, categoryEnd, =, domainAxis, ., getCategoryEnd, (, column, ,]
[bawDataset, =, (, BoxAndWhiskerCategoryDataset, ), dataset, ;, double, categoryEnd, =, domainAxis, ., getCategoryEnd, (, column, ,, getColumnCount, (, ), ,]
[(, BoxAndWhiskerCategoryDataset, ), dataset, ;, double, categoryEnd, =, domainAxis, ., getCategoryEnd, (, column, ,, getColumnCount, (, ), ,, dataArea, ,]
[(, BoxAndWhiskerCategoryDataset, ), dataset, ;, double, categoryEnd, =, domainAxis, ., getCategoryEnd, (, column, ,, getColumnCount, (, ), ,, dataArea, ,]
[getCategoryEnd, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, categoryStart, =]
[getCategoryEnd, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, categoryStart, =]
[getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, categoryStart, =, domainAxis, ., getCategoryStart, (]
[), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, categoryStart, =, domainAxis, ., getCategoryStart, (, column, ,]
[plot, ., getDomainAxisEdge, (, ), ), ;, double, categoryStart, =, domainAxis, ., getCategoryStart, (, column, ,, getColumnCount, (, ), ,]
[getDomainAxisEdge, (, ), ), ;, double, categoryStart, =, domainAxis, ., getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,]
[getDomainAxisEdge, (, ), ), ;, double, categoryStart, =, domainAxis, ., getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,]
[getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, categoryWidth, =]
[getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, categoryWidth, =]
[column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, categoryWidth, =, categoryEnd, -]
[,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, categoryWidth, =, categoryEnd, -, categoryStart, ;, double, xx, =]
[getDomainAxisEdge, (, ), ), ;, double, categoryWidth, =, categoryEnd, -, categoryStart, ;, double, xx, =, categoryStart, ;, int, seriesCount, =]
[=, categoryEnd, -, categoryStart, ;, double, xx, =, categoryStart, ;, int, seriesCount, =, getRowCount, (, ), ;, int, categoryCount, =]
[xx, =, categoryStart, ;, int, seriesCount, =, getRowCount, (, ), ;, int, categoryCount, =, getColumnCount, (, ), ;, if, (]
[xx, =, categoryStart, ;, int, seriesCount, =, getRowCount, (, ), ;, int, categoryCount, =, getColumnCount, (, ), ;, if, (]
[categoryStart, ;, int, seriesCount, =, getRowCount, (, ), ;, int, categoryCount, =, getColumnCount, (, ), ;, if, (, seriesCount, >]
[(, ), ;, int, categoryCount, =, getColumnCount, (, ), ;, if, (, seriesCount, >, 1, ), {, double, seriesGap, =]
[(, ), ;, int, categoryCount, =, getColumnCount, (, ), ;, if, (, seriesCount, >, 1, ), {, double, seriesGap, =]
[(, ), ;, int, categoryCount, =, getColumnCount, (, ), ;, if, (, seriesCount, >, 1, ), {, double, seriesGap, =]
[(, ), ;, int, categoryCount, =, getColumnCount, (, ), ;, if, (, seriesCount, >, 1, ), {, double, seriesGap, =]
[getColumnCount, (, ), ;, if, (, seriesCount, >, 1, ), {, double, seriesGap, =, dataArea, ., getWidth, (, ), *]
[if, (, seriesCount, >, 1, ), {, double, seriesGap, =, dataArea, ., getWidth, (, ), *, getItemMargin, (, ), /]
[(, seriesCount, >, 1, ), {, double, seriesGap, =, dataArea, ., getWidth, (, ), *, getItemMargin, (, ), /, (]
[(, seriesCount, >, 1, ), {, double, seriesGap, =, dataArea, ., getWidth, (, ), *, getItemMargin, (, ), /, (]
[>, 1, ), {, double, seriesGap, =, dataArea, ., getWidth, (, ), *, getItemMargin, (, ), /, (, categoryCount, *]
[1, ), {, double, seriesGap, =, dataArea, ., getWidth, (, ), *, getItemMargin, (, ), /, (, categoryCount, *, (]
[1, ), {, double, seriesGap, =, dataArea, ., getWidth, (, ), *, getItemMargin, (, ), /, (, categoryCount, *, (]
[{, double, seriesGap, =, dataArea, ., getWidth, (, ), *, getItemMargin, (, ), /, (, categoryCount, *, (, seriesCount, -]
[(, ), *, getItemMargin, (, ), /, (, categoryCount, *, (, seriesCount, -, 1, ), ), ;, double, usedWidth, =]
[(, ), *, getItemMargin, (, ), /, (, categoryCount, *, (, seriesCount, -, 1, ), ), ;, double, usedWidth, =]
[), *, getItemMargin, (, ), /, (, categoryCount, *, (, seriesCount, -, 1, ), ), ;, double, usedWidth, =, (]
[), *, getItemMargin, (, ), /, (, categoryCount, *, (, seriesCount, -, 1, ), ), ;, double, usedWidth, =, (]
[), *, getItemMargin, (, ), /, (, categoryCount, *, (, seriesCount, -, 1, ), ), ;, double, usedWidth, =, (]
[(, categoryCount, *, (, seriesCount, -, 1, ), ), ;, double, usedWidth, =, (, state, ., getBarWidth, (, ), *]
[(, seriesCount, -, 1, ), ), ;, double, usedWidth, =, (, state, ., getBarWidth, (, ), *, seriesCount, ), +]
[seriesCount, -, 1, ), ), ;, double, usedWidth, =, (, state, ., getBarWidth, (, ), *, seriesCount, ), +, (]
[seriesCount, -, 1, ), ), ;, double, usedWidth, =, (, state, ., getBarWidth, (, ), *, seriesCount, ), +, (]
[1, ), ), ;, double, usedWidth, =, (, state, ., getBarWidth, (, ), *, seriesCount, ), +, (, seriesGap, *]
[), ), ;, double, usedWidth, =, (, state, ., getBarWidth, (, ), *, seriesCount, ), +, (, seriesGap, *, (]
[), ), ;, double, usedWidth, =, (, state, ., getBarWidth, (, ), *, seriesCount, ), +, (, seriesGap, *, (]
[;, double, usedWidth, =, (, state, ., getBarWidth, (, ), *, seriesCount, ), +, (, seriesGap, *, (, seriesCount, -]
[getBarWidth, (, ), *, seriesCount, ), +, (, seriesGap, *, (, seriesCount, -, 1, ), ), ;, double, offset, =]
[getBarWidth, (, ), *, seriesCount, ), +, (, seriesGap, *, (, seriesCount, -, 1, ), ), ;, double, offset, =]
[(, ), *, seriesCount, ), +, (, seriesGap, *, (, seriesCount, -, 1, ), ), ;, double, offset, =, (]
[(, ), *, seriesCount, ), +, (, seriesGap, *, (, seriesCount, -, 1, ), ), ;, double, offset, =, (]
[*, seriesCount, ), +, (, seriesGap, *, (, seriesCount, -, 1, ), ), ;, double, offset, =, (, categoryWidth, -]
[+, (, seriesGap, *, (, seriesCount, -, 1, ), ), ;, double, offset, =, (, categoryWidth, -, usedWidth, ), /]
[seriesGap, *, (, seriesCount, -, 1, ), ), ;, double, offset, =, (, categoryWidth, -, usedWidth, ), /, 2, ;]
[(, seriesCount, -, 1, ), ), ;, double, offset, =, (, categoryWidth, -, usedWidth, ), /, 2, ;, xx, =]
[(, seriesCount, -, 1, ), ), ;, double, offset, =, (, categoryWidth, -, usedWidth, ), /, 2, ;, xx, =]
[(, seriesCount, -, 1, ), ), ;, double, offset, =, (, categoryWidth, -, usedWidth, ), /, 2, ;, xx, =]
[-, 1, ), ), ;, double, offset, =, (, categoryWidth, -, usedWidth, ), /, 2, ;, xx, =, xx, +]
[), ), ;, double, offset, =, (, categoryWidth, -, usedWidth, ), /, 2, ;, xx, =, xx, +, offset, +]
[), ;, double, offset, =, (, categoryWidth, -, usedWidth, ), /, 2, ;, xx, =, xx, +, offset, +, (]
[), ;, double, offset, =, (, categoryWidth, -, usedWidth, ), /, 2, ;, xx, =, xx, +, offset, +, (]
[double, offset, =, (, categoryWidth, -, usedWidth, ), /, 2, ;, xx, =, xx, +, offset, +, (, row, *]
[offset, =, (, categoryWidth, -, usedWidth, ), /, 2, ;, xx, =, xx, +, offset, +, (, row, *, (]
[offset, =, (, categoryWidth, -, usedWidth, ), /, 2, ;, xx, =, xx, +, offset, +, (, row, *, (]
[offset, =, (, categoryWidth, -, usedWidth, ), /, 2, ;, xx, =, xx, +, offset, +, (, row, *, (]
[), /, 2, ;, xx, =, xx, +, offset, +, (, row, *, (, state, ., getBarWidth, (, ), +]
[(, row, *, (, state, ., getBarWidth, (, ), +, seriesGap, ), ), ;, }, else, {, double, offset, =]
[(, row, *, (, state, ., getBarWidth, (, ), +, seriesGap, ), ), ;, }, else, {, double, offset, =]
[row, *, (, state, ., getBarWidth, (, ), +, seriesGap, ), ), ;, }, else, {, double, offset, =, (]
[row, *, (, state, ., getBarWidth, (, ), +, seriesGap, ), ), ;, }, else, {, double, offset, =, (]
[(, state, ., getBarWidth, (, ), +, seriesGap, ), ), ;, }, else, {, double, offset, =, (, categoryWidth, -]
[(, state, ., getBarWidth, (, ), +, seriesGap, ), ), ;, }, else, {, double, offset, =, (, categoryWidth, -]
[seriesGap, ), ), ;, }, else, {, double, offset, =, (, categoryWidth, -, state, ., getBarWidth, (, ), ), /]
[), ;, }, else, {, double, offset, =, (, categoryWidth, -, state, ., getBarWidth, (, ), ), /, 2, ;]
[}, else, {, double, offset, =, (, categoryWidth, -, state, ., getBarWidth, (, ), ), /, 2, ;, xx, =]
[}, else, {, double, offset, =, (, categoryWidth, -, state, ., getBarWidth, (, ), ), /, 2, ;, xx, =]
[{, double, offset, =, (, categoryWidth, -, state, ., getBarWidth, (, ), ), /, 2, ;, xx, =, xx, +]
[-, state, ., getBarWidth, (, ), ), /, 2, ;, xx, =, xx, +, offset, ;, }, double, yyAverage, =]
[2, ;, xx, =, xx, +, offset, ;, }, double, yyAverage, =, 0.0, ;, double, yyOutlier, ;, Paint, itemPaint, =]
[xx, =, xx, +, offset, ;, }, double, yyAverage, =, 0.0, ;, double, yyOutlier, ;, Paint, itemPaint, =, getItemPaint, (]
[xx, +, offset, ;, }, double, yyAverage, =, 0.0, ;, double, yyOutlier, ;, Paint, itemPaint, =, getItemPaint, (, row, ,]
[offset, ;, }, double, yyAverage, =, 0.0, ;, double, yyOutlier, ;, Paint, itemPaint, =, getItemPaint, (, row, ,, column, ,]
[double, yyAverage, =, 0.0, ;, double, yyOutlier, ;, Paint, itemPaint, =, getItemPaint, (, row, ,, column, ,, selected, ), ;]
[double, yyAverage, =, 0.0, ;, double, yyOutlier, ;, Paint, itemPaint, =, getItemPaint, (, row, ,, column, ,, selected, ), ;]
[;, double, yyOutlier, ;, Paint, itemPaint, =, getItemPaint, (, row, ,, column, ,, selected, ), ;, g2, ., setPaint, (]
[=, getItemPaint, (, row, ,, column, ,, selected, ), ;, g2, ., setPaint, (, itemPaint, ), ;, Stroke, s, =]
[(, row, ,, column, ,, selected, ), ;, g2, ., setPaint, (, itemPaint, ), ;, Stroke, s, =, getItemStroke, (]
[,, column, ,, selected, ), ;, g2, ., setPaint, (, itemPaint, ), ;, Stroke, s, =, getItemStroke, (, row, ,]
[,, selected, ), ;, g2, ., setPaint, (, itemPaint, ), ;, Stroke, s, =, getItemStroke, (, row, ,, column, ,]
[;, g2, ., setPaint, (, itemPaint, ), ;, Stroke, s, =, getItemStroke, (, row, ,, column, ,, selected, ), ;]
[;, g2, ., setPaint, (, itemPaint, ), ;, Stroke, s, =, getItemStroke, (, row, ,, column, ,, selected, ), ;]
[(, itemPaint, ), ;, Stroke, s, =, getItemStroke, (, row, ,, column, ,, selected, ), ;, g2, ., setStroke, (]
[=, getItemStroke, (, row, ,, column, ,, selected, ), ;, g2, ., setStroke, (, s, ), ;, double, aRadius, =]
[column, ,, selected, ), ;, g2, ., setStroke, (, s, ), ;, double, aRadius, =, 0, ;, RectangleEdge, location, =]
[column, ,, selected, ), ;, g2, ., setStroke, (, s, ), ;, double, aRadius, =, 0, ;, RectangleEdge, location, =]
[s, ), ;, double, aRadius, =, 0, ;, RectangleEdge, location, =, plot, ., getRangeAxisEdge, (, ), ;, Number, yQ1, =]
[s, ), ;, double, aRadius, =, 0, ;, RectangleEdge, location, =, plot, ., getRangeAxisEdge, (, ), ;, Number, yQ1, =]
[aRadius, =, 0, ;, RectangleEdge, location, =, plot, ., getRangeAxisEdge, (, ), ;, Number, yQ1, =, bawDataset, ., getQ1Value, (]
[0, ;, RectangleEdge, location, =, plot, ., getRangeAxisEdge, (, ), ;, Number, yQ1, =, bawDataset, ., getQ1Value, (, row, ,]
[., getRangeAxisEdge, (, ), ;, Number, yQ1, =, bawDataset, ., getQ1Value, (, row, ,, column, ), ;, Number, yQ3, =]
[., getRangeAxisEdge, (, ), ;, Number, yQ1, =, bawDataset, ., getQ1Value, (, row, ,, column, ), ;, Number, yQ3, =]
[;, Number, yQ1, =, bawDataset, ., getQ1Value, (, row, ,, column, ), ;, Number, yQ3, =, bawDataset, ., getQ3Value, (]
[yQ1, =, bawDataset, ., getQ1Value, (, row, ,, column, ), ;, Number, yQ3, =, bawDataset, ., getQ3Value, (, row, ,]
[row, ,, column, ), ;, Number, yQ3, =, bawDataset, ., getQ3Value, (, row, ,, column, ), ;, Number, yMax, =]
[row, ,, column, ), ;, Number, yQ3, =, bawDataset, ., getQ3Value, (, row, ,, column, ), ;, Number, yMax, =]
[;, Number, yQ3, =, bawDataset, ., getQ3Value, (, row, ,, column, ), ;, Number, yMax, =, bawDataset, ., getMaxRegularValue, (]
[yQ3, =, bawDataset, ., getQ3Value, (, row, ,, column, ), ;, Number, yMax, =, bawDataset, ., getMaxRegularValue, (, row, ,]
[row, ,, column, ), ;, Number, yMax, =, bawDataset, ., getMaxRegularValue, (, row, ,, column, ), ;, Number, yMin, =]
[row, ,, column, ), ;, Number, yMax, =, bawDataset, ., getMaxRegularValue, (, row, ,, column, ), ;, Number, yMin, =]
[;, Number, yMax, =, bawDataset, ., getMaxRegularValue, (, row, ,, column, ), ;, Number, yMin, =, bawDataset, ., getMinRegularValue, (]
[yMax, =, bawDataset, ., getMaxRegularValue, (, row, ,, column, ), ;, Number, yMin, =, bawDataset, ., getMinRegularValue, (, row, ,]
[row, ,, column, ), ;, Number, yMin, =, bawDataset, ., getMinRegularValue, (, row, ,, column, ), ;, Shape, box, =]
[;, Number, yMin, =, bawDataset, ., getMinRegularValue, (, row, ,, column, ), ;, Shape, box, =, null, ;, if, (]
[;, Number, yMin, =, bawDataset, ., getMinRegularValue, (, row, ,, column, ), ;, Shape, box, =, null, ;, if, (]
[;, Number, yMin, =, bawDataset, ., getMinRegularValue, (, row, ,, column, ), ;, Shape, box, =, null, ;, if, (]
[;, Number, yMin, =, bawDataset, ., getMinRegularValue, (, row, ,, column, ), ;, Shape, box, =, null, ;, if, (]
[;, Number, yMin, =, bawDataset, ., getMinRegularValue, (, row, ,, column, ), ;, Shape, box, =, null, ;, if, (]
[yMin, =, bawDataset, ., getMinRegularValue, (, row, ,, column, ), ;, Shape, box, =, null, ;, if, (, yQ1, !=]
[bawDataset, ., getMinRegularValue, (, row, ,, column, ), ;, Shape, box, =, null, ;, if, (, yQ1, !=, null, &&]
[bawDataset, ., getMinRegularValue, (, row, ,, column, ), ;, Shape, box, =, null, ;, if, (, yQ1, !=, null, &&]
[getMinRegularValue, (, row, ,, column, ), ;, Shape, box, =, null, ;, if, (, yQ1, !=, null, &&, yQ3, !=]
[row, ,, column, ), ;, Shape, box, =, null, ;, if, (, yQ1, !=, null, &&, yQ3, !=, null, &&]
[row, ,, column, ), ;, Shape, box, =, null, ;, if, (, yQ1, !=, null, &&, yQ3, !=, null, &&]
[column, ), ;, Shape, box, =, null, ;, if, (, yQ1, !=, null, &&, yQ3, !=, null, &&, yMax, !=]
[;, Shape, box, =, null, ;, if, (, yQ1, !=, null, &&, yQ3, !=, null, &&, yMax, !=, null, &&]
[;, Shape, box, =, null, ;, if, (, yQ1, !=, null, &&, yQ3, !=, null, &&, yMax, !=, null, &&]
[box, =, null, ;, if, (, yQ1, !=, null, &&, yQ3, !=, null, &&, yMax, !=, null, &&, yMin, !=]
[yQ1, !=, null, &&, yQ3, !=, null, &&, yMax, !=, null, &&, yMin, !=, null, ), {, double, yyQ1, =]
[yQ1, !=, null, &&, yQ3, !=, null, &&, yMax, !=, null, &&, yMin, !=, null, ), {, double, yyQ1, =]
[yQ3, !=, null, &&, yMax, !=, null, &&, yMin, !=, null, ), {, double, yyQ1, =, rangeAxis, ., valueToJava2D, (]
[yQ3, !=, null, &&, yMax, !=, null, &&, yMin, !=, null, ), {, double, yyQ1, =, rangeAxis, ., valueToJava2D, (]
[null, &&, yMin, !=, null, ), {, double, yyQ1, =, rangeAxis, ., valueToJava2D, (, yQ1, ., doubleValue, (, ), ,]
[yMin, !=, null, ), {, double, yyQ1, =, rangeAxis, ., valueToJava2D, (, yQ1, ., doubleValue, (, ), ,, dataArea, ,]
[yyQ1, =, rangeAxis, ., valueToJava2D, (, yQ1, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;, double, yyQ3, =]
[yyQ1, =, rangeAxis, ., valueToJava2D, (, yQ1, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;, double, yyQ3, =]
[valueToJava2D, (, yQ1, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;, double, yyQ3, =, rangeAxis, ., valueToJava2D, (]
[valueToJava2D, (, yQ1, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;, double, yyQ3, =, rangeAxis, ., valueToJava2D, (]
[), ,, dataArea, ,, location, ), ;, double, yyQ3, =, rangeAxis, ., valueToJava2D, (, yQ3, ., doubleValue, (, ), ,]
[dataArea, ,, location, ), ;, double, yyQ3, =, rangeAxis, ., valueToJava2D, (, yQ3, ., doubleValue, (, ), ,, dataArea, ,]
[yyQ3, =, rangeAxis, ., valueToJava2D, (, yQ3, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;, double, yyMax, =]
[yyQ3, =, rangeAxis, ., valueToJava2D, (, yQ3, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;, double, yyMax, =]
[valueToJava2D, (, yQ3, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;, double, yyMax, =, rangeAxis, ., valueToJava2D, (]
[valueToJava2D, (, yQ3, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;, double, yyMax, =, rangeAxis, ., valueToJava2D, (]
[), ,, dataArea, ,, location, ), ;, double, yyMax, =, rangeAxis, ., valueToJava2D, (, yMax, ., doubleValue, (, ), ,]
[dataArea, ,, location, ), ;, double, yyMax, =, rangeAxis, ., valueToJava2D, (, yMax, ., doubleValue, (, ), ,, dataArea, ,]
[yyMax, =, rangeAxis, ., valueToJava2D, (, yMax, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;, double, yyMin, =]
[yyMax, =, rangeAxis, ., valueToJava2D, (, yMax, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;, double, yyMin, =]
[valueToJava2D, (, yMax, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;, double, yyMin, =, rangeAxis, ., valueToJava2D, (]
[valueToJava2D, (, yMax, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;, double, yyMin, =, rangeAxis, ., valueToJava2D, (]
[), ,, dataArea, ,, location, ), ;, double, yyMin, =, rangeAxis, ., valueToJava2D, (, yMin, ., doubleValue, (, ), ,]
[dataArea, ,, location, ), ;, double, yyMin, =, rangeAxis, ., valueToJava2D, (, yMin, ., doubleValue, (, ), ,, dataArea, ,]
[yyMin, =, rangeAxis, ., valueToJava2D, (, yMin, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;, double, xxmid, =]
[yyMin, =, rangeAxis, ., valueToJava2D, (, yMin, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;, double, xxmid, =]
[rangeAxis, ., valueToJava2D, (, yMin, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;, double, xxmid, =, xx, +]
[rangeAxis, ., valueToJava2D, (, yMin, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;, double, xxmid, =, xx, +]
[rangeAxis, ., valueToJava2D, (, yMin, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;, double, xxmid, =, xx, +]
[doubleValue, (, ), ,, dataArea, ,, location, ), ;, double, xxmid, =, xx, +, state, ., getBarWidth, (, ), /]
[), ,, dataArea, ,, location, ), ;, double, xxmid, =, xx, +, state, ., getBarWidth, (, ), /, 2.0, ;]
[), ,, dataArea, ,, location, ), ;, double, xxmid, =, xx, +, state, ., getBarWidth, (, ), /, 2.0, ;]
[location, ), ;, double, xxmid, =, xx, +, state, ., getBarWidth, (, ), /, 2.0, ;, g2, ., draw, (]
[=, xx, +, state, ., getBarWidth, (, ), /, 2.0, ;, g2, ., draw, (, new, Line2D, ., Double, (]
[+, state, ., getBarWidth, (, ), /, 2.0, ;, g2, ., draw, (, new, Line2D, ., Double, (, xxmid, ,]
[., getBarWidth, (, ), /, 2.0, ;, g2, ., draw, (, new, Line2D, ., Double, (, xxmid, ,, yyMax, ,]
[(, ), /, 2.0, ;, g2, ., draw, (, new, Line2D, ., Double, (, xxmid, ,, yyMax, ,, xxmid, ,]
[;, g2, ., draw, (, new, Line2D, ., Double, (, xxmid, ,, yyMax, ,, xxmid, ,, yyQ3, ), ), ;]
[;, g2, ., draw, (, new, Line2D, ., Double, (, xxmid, ,, yyMax, ,, xxmid, ,, yyQ3, ), ), ;]
[(, new, Line2D, ., Double, (, xxmid, ,, yyMax, ,, xxmid, ,, yyQ3, ), ), ;, g2, ., draw, (]
[(, xxmid, ,, yyMax, ,, xxmid, ,, yyQ3, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (]
[,, yyMax, ,, xxmid, ,, yyQ3, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, ,]
[,, xxmid, ,, yyQ3, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, ,, yyMax, ,]
[,, xxmid, ,, yyQ3, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, ,, yyMax, ,]
[,, yyQ3, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, ,, yyMax, ,, xx, +]
[,, yyQ3, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, ,, yyMax, ,, xx, +]
[., draw, (, new, Line2D, ., Double, (, xx, ,, yyMax, ,, xx, +, state, ., getBarWidth, (, ), ,]
[Line2D, ., Double, (, xx, ,, yyMax, ,, xx, +, state, ., getBarWidth, (, ), ,, yyMax, ), ), ;]
[Line2D, ., Double, (, xx, ,, yyMax, ,, xx, +, state, ., getBarWidth, (, ), ,, yyMax, ), ), ;]
[xx, ,, yyMax, ,, xx, +, state, ., getBarWidth, (, ), ,, yyMax, ), ), ;, g2, ., draw, (]
[+, state, ., getBarWidth, (, ), ,, yyMax, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (]
[., getBarWidth, (, ), ,, yyMax, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xxmid, ,]
[(, ), ,, yyMax, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xxmid, ,, yyMin, ,]
[,, yyMax, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xxmid, ,, yyMin, ,, xxmid, ,]
[;, g2, ., draw, (, new, Line2D, ., Double, (, xxmid, ,, yyMin, ,, xxmid, ,, yyQ1, ), ), ;]
[;, g2, ., draw, (, new, Line2D, ., Double, (, xxmid, ,, yyMin, ,, xxmid, ,, yyQ1, ), ), ;]
[(, new, Line2D, ., Double, (, xxmid, ,, yyMin, ,, xxmid, ,, yyQ1, ), ), ;, g2, ., draw, (]
[(, xxmid, ,, yyMin, ,, xxmid, ,, yyQ1, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (]
[,, yyMin, ,, xxmid, ,, yyQ1, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, ,]
[,, xxmid, ,, yyQ1, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, ,, yyMin, ,]
[,, xxmid, ,, yyQ1, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, ,, yyMin, ,]
[,, yyQ1, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, ,, yyMin, ,, xx, +]
[,, yyQ1, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, ,, yyMin, ,, xx, +]
[., draw, (, new, Line2D, ., Double, (, xx, ,, yyMin, ,, xx, +, state, ., getBarWidth, (, ), ,]
[Line2D, ., Double, (, xx, ,, yyMin, ,, xx, +, state, ., getBarWidth, (, ), ,, yyMin, ), ), ;]
[Double, (, xx, ,, yyMin, ,, xx, +, state, ., getBarWidth, (, ), ,, yyMin, ), ), ;, box, =]
[,, xx, +, state, ., getBarWidth, (, ), ,, yyMin, ), ), ;, box, =, new, Rectangle2D, ., Double, (]
[+, state, ., getBarWidth, (, ), ,, yyMin, ), ), ;, box, =, new, Rectangle2D, ., Double, (, xx, ,]
[+, state, ., getBarWidth, (, ), ,, yyMin, ), ), ;, box, =, new, Rectangle2D, ., Double, (, xx, ,]
[(, ), ,, yyMin, ), ), ;, box, =, new, Rectangle2D, ., Double, (, xx, ,, Math, ., min, (]
[,, yyMin, ), ), ;, box, =, new, Rectangle2D, ., Double, (, xx, ,, Math, ., min, (, yyQ1, ,]
[), ;, box, =, new, Rectangle2D, ., Double, (, xx, ,, Math, ., min, (, yyQ1, ,, yyQ3, ), ,]
[), ;, box, =, new, Rectangle2D, ., Double, (, xx, ,, Math, ., min, (, yyQ1, ,, yyQ3, ), ,]
[., Double, (, xx, ,, Math, ., min, (, yyQ1, ,, yyQ3, ), ,, state, ., getBarWidth, (, ), ,]
[., Double, (, xx, ,, Math, ., min, (, yyQ1, ,, yyQ3, ), ,, state, ., getBarWidth, (, ), ,]
[,, Math, ., min, (, yyQ1, ,, yyQ3, ), ,, state, ., getBarWidth, (, ), ,, Math, ., abs, (]
[,, Math, ., min, (, yyQ1, ,, yyQ3, ), ,, state, ., getBarWidth, (, ), ,, Math, ., abs, (]
[., min, (, yyQ1, ,, yyQ3, ), ,, state, ., getBarWidth, (, ), ,, Math, ., abs, (, yyQ1, -]
[), ,, state, ., getBarWidth, (, ), ,, Math, ., abs, (, yyQ1, -, yyQ3, ), ), ;, if, (]
[), ,, state, ., getBarWidth, (, ), ,, Math, ., abs, (, yyQ1, -, yyQ3, ), ), ;, if, (]
[(, ), ,, Math, ., abs, (, yyQ1, -, yyQ3, ), ), ;, if, (, this, ., fillBox, ), {]
[(, ), ,, Math, ., abs, (, yyQ1, -, yyQ3, ), ), ;, if, (, this, ., fillBox, ), {]
[., abs, (, yyQ1, -, yyQ3, ), ), ;, if, (, this, ., fillBox, ), {, g2, ., fill, (]
[-, yyQ3, ), ), ;, if, (, this, ., fillBox, ), {, g2, ., fill, (, box, ), ;, }]
[-, yyQ3, ), ), ;, if, (, this, ., fillBox, ), {, g2, ., fill, (, box, ), ;, }]
[;, if, (, this, ., fillBox, ), {, g2, ., fill, (, box, ), ;, }, g2, ., setStroke, (]
[(, this, ., fillBox, ), {, g2, ., fill, (, box, ), ;, }, g2, ., setStroke, (, getItemOutlineStroke, (]
[., fillBox, ), {, g2, ., fill, (, box, ), ;, }, g2, ., setStroke, (, getItemOutlineStroke, (, row, ,]
[), {, g2, ., fill, (, box, ), ;, }, g2, ., setStroke, (, getItemOutlineStroke, (, row, ,, column, ,]
[fill, (, box, ), ;, }, g2, ., setStroke, (, getItemOutlineStroke, (, row, ,, column, ,, selected, ), ), ;]
[fill, (, box, ), ;, }, g2, ., setStroke, (, getItemOutlineStroke, (, row, ,, column, ,, selected, ), ), ;]
[;, }, g2, ., setStroke, (, getItemOutlineStroke, (, row, ,, column, ,, selected, ), ), ;, g2, ., setPaint, (]
[g2, ., setStroke, (, getItemOutlineStroke, (, row, ,, column, ,, selected, ), ), ;, g2, ., setPaint, (, getItemOutlinePaint, (]
[setStroke, (, getItemOutlineStroke, (, row, ,, column, ,, selected, ), ), ;, g2, ., setPaint, (, getItemOutlinePaint, (, row, ,]
[getItemOutlineStroke, (, row, ,, column, ,, selected, ), ), ;, g2, ., setPaint, (, getItemOutlinePaint, (, row, ,, column, ,]
[column, ,, selected, ), ), ;, g2, ., setPaint, (, getItemOutlinePaint, (, row, ,, column, ,, selected, ), ), ;]
[column, ,, selected, ), ), ;, g2, ., setPaint, (, getItemOutlinePaint, (, row, ,, column, ,, selected, ), ), ;]
[), ;, g2, ., setPaint, (, getItemOutlinePaint, (, row, ,, column, ,, selected, ), ), ;, g2, ., draw, (]
[setPaint, (, getItemOutlinePaint, (, row, ,, column, ,, selected, ), ), ;, g2, ., draw, (, box, ), ;, }]
[setPaint, (, getItemOutlinePaint, (, row, ,, column, ,, selected, ), ), ;, g2, ., draw, (, box, ), ;, }]
[row, ,, column, ,, selected, ), ), ;, g2, ., draw, (, box, ), ;, }, g2, ., setPaint, (]
[row, ,, column, ,, selected, ), ), ;, g2, ., draw, (, box, ), ;, }, g2, ., setPaint, (]
[;, g2, ., draw, (, box, ), ;, }, g2, ., setPaint, (, this, ., artifactPaint, ), ;, if, (]
[;, g2, ., draw, (, box, ), ;, }, g2, ., setPaint, (, this, ., artifactPaint, ), ;, if, (]
[}, g2, ., setPaint, (, this, ., artifactPaint, ), ;, if, (, this, ., meanVisible, ), {, Number, yMean, =]
[}, g2, ., setPaint, (, this, ., artifactPaint, ), ;, if, (, this, ., meanVisible, ), {, Number, yMean, =]
[(, this, ., artifactPaint, ), ;, if, (, this, ., meanVisible, ), {, Number, yMean, =, bawDataset, ., getMeanValue, (]
[., artifactPaint, ), ;, if, (, this, ., meanVisible, ), {, Number, yMean, =, bawDataset, ., getMeanValue, (, row, ,]
[(, this, ., meanVisible, ), {, Number, yMean, =, bawDataset, ., getMeanValue, (, row, ,, column, ), ;, if, (]
[(, this, ., meanVisible, ), {, Number, yMean, =, bawDataset, ., getMeanValue, (, row, ,, column, ), ;, if, (]
[., meanVisible, ), {, Number, yMean, =, bawDataset, ., getMeanValue, (, row, ,, column, ), ;, if, (, yMean, !=]
[{, Number, yMean, =, bawDataset, ., getMeanValue, (, row, ,, column, ), ;, if, (, yMean, !=, null, ), {]
[yMean, =, bawDataset, ., getMeanValue, (, row, ,, column, ), ;, if, (, yMean, !=, null, ), {, yyAverage, =]
[yMean, =, bawDataset, ., getMeanValue, (, row, ,, column, ), ;, if, (, yMean, !=, null, ), {, yyAverage, =]
[getMeanValue, (, row, ,, column, ), ;, if, (, yMean, !=, null, ), {, yyAverage, =, rangeAxis, ., valueToJava2D, (]
[getMeanValue, (, row, ,, column, ), ;, if, (, yMean, !=, null, ), {, yyAverage, =, rangeAxis, ., valueToJava2D, (]
[;, if, (, yMean, !=, null, ), {, yyAverage, =, rangeAxis, ., valueToJava2D, (, yMean, ., doubleValue, (, ), ,]
[(, yMean, !=, null, ), {, yyAverage, =, rangeAxis, ., valueToJava2D, (, yMean, ., doubleValue, (, ), ,, dataArea, ,]
[null, ), {, yyAverage, =, rangeAxis, ., valueToJava2D, (, yMean, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;]
[{, yyAverage, =, rangeAxis, ., valueToJava2D, (, yMean, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;, aRadius, =]
[{, yyAverage, =, rangeAxis, ., valueToJava2D, (, yMean, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;, aRadius, =]
[{, yyAverage, =, rangeAxis, ., valueToJava2D, (, yMean, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;, aRadius, =]
[(, yMean, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;, aRadius, =, state, ., getBarWidth, (, ), /]
[(, ), ,, dataArea, ,, location, ), ;, aRadius, =, state, ., getBarWidth, (, ), /, 4, ;, if, (]
[(, ), ,, dataArea, ,, location, ), ;, aRadius, =, state, ., getBarWidth, (, ), /, 4, ;, if, (]
[), ,, dataArea, ,, location, ), ;, aRadius, =, state, ., getBarWidth, (, ), /, 4, ;, if, (, (]
[), ,, dataArea, ,, location, ), ;, aRadius, =, state, ., getBarWidth, (, ), /, 4, ;, if, (, (]
[dataArea, ,, location, ), ;, aRadius, =, state, ., getBarWidth, (, ), /, 4, ;, if, (, (, yyAverage, >]
[,, location, ), ;, aRadius, =, state, ., getBarWidth, (, ), /, 4, ;, if, (, (, yyAverage, >, (]
[,, location, ), ;, aRadius, =, state, ., getBarWidth, (, ), /, 4, ;, if, (, (, yyAverage, >, (]
[,, location, ), ;, aRadius, =, state, ., getBarWidth, (, ), /, 4, ;, if, (, (, yyAverage, >, (]
[state, ., getBarWidth, (, ), /, 4, ;, if, (, (, yyAverage, >, (, dataArea, ., getMinY, (, ), -]
[), /, 4, ;, if, (, (, yyAverage, >, (, dataArea, ., getMinY, (, ), -, aRadius, ), ), &&]
[/, 4, ;, if, (, (, yyAverage, >, (, dataArea, ., getMinY, (, ), -, aRadius, ), ), &&, (]
[/, 4, ;, if, (, (, yyAverage, >, (, dataArea, ., getMinY, (, ), -, aRadius, ), ), &&, (]
[;, if, (, (, yyAverage, >, (, dataArea, ., getMinY, (, ), -, aRadius, ), ), &&, (, yyAverage, <]
[if, (, (, yyAverage, >, (, dataArea, ., getMinY, (, ), -, aRadius, ), ), &&, (, yyAverage, <, (]
[if, (, (, yyAverage, >, (, dataArea, ., getMinY, (, ), -, aRadius, ), ), &&, (, yyAverage, <, (]
[if, (, (, yyAverage, >, (, dataArea, ., getMinY, (, ), -, aRadius, ), ), &&, (, yyAverage, <, (]
[dataArea, ., getMinY, (, ), -, aRadius, ), ), &&, (, yyAverage, <, (, dataArea, ., getMaxY, (, ), +]
[(, yyAverage, <, (, dataArea, ., getMaxY, (, ), +, aRadius, ), ), ), {, Ellipse2D, ., Double, avgEllipse, =]
[., getMaxY, (, ), +, aRadius, ), ), ), {, Ellipse2D, ., Double, avgEllipse, =, new, Ellipse2D, ., Double, (]
[., getMaxY, (, ), +, aRadius, ), ), ), {, Ellipse2D, ., Double, avgEllipse, =, new, Ellipse2D, ., Double, (]
[(, ), +, aRadius, ), ), ), {, Ellipse2D, ., Double, avgEllipse, =, new, Ellipse2D, ., Double, (, xx, +]
[+, aRadius, ), ), ), {, Ellipse2D, ., Double, avgEllipse, =, new, Ellipse2D, ., Double, (, xx, +, aRadius, ,]
[+, aRadius, ), ), ), {, Ellipse2D, ., Double, avgEllipse, =, new, Ellipse2D, ., Double, (, xx, +, aRadius, ,]
[), ), ), {, Ellipse2D, ., Double, avgEllipse, =, new, Ellipse2D, ., Double, (, xx, +, aRadius, ,, yyAverage, -]
[), {, Ellipse2D, ., Double, avgEllipse, =, new, Ellipse2D, ., Double, (, xx, +, aRadius, ,, yyAverage, -, aRadius, ,]
[), {, Ellipse2D, ., Double, avgEllipse, =, new, Ellipse2D, ., Double, (, xx, +, aRadius, ,, yyAverage, -, aRadius, ,]
[Ellipse2D, ., Double, avgEllipse, =, new, Ellipse2D, ., Double, (, xx, +, aRadius, ,, yyAverage, -, aRadius, ,, aRadius, *]
[Double, avgEllipse, =, new, Ellipse2D, ., Double, (, xx, +, aRadius, ,, yyAverage, -, aRadius, ,, aRadius, *, 2, ,]
[Double, avgEllipse, =, new, Ellipse2D, ., Double, (, xx, +, aRadius, ,, yyAverage, -, aRadius, ,, aRadius, *, 2, ,]
[=, new, Ellipse2D, ., Double, (, xx, +, aRadius, ,, yyAverage, -, aRadius, ,, aRadius, *, 2, ,, aRadius, *]
[., Double, (, xx, +, aRadius, ,, yyAverage, -, aRadius, ,, aRadius, *, 2, ,, aRadius, *, 2, ), ;]
[., Double, (, xx, +, aRadius, ,, yyAverage, -, aRadius, ,, aRadius, *, 2, ,, aRadius, *, 2, ), ;]
[+, aRadius, ,, yyAverage, -, aRadius, ,, aRadius, *, 2, ,, aRadius, *, 2, ), ;, g2, ., fill, (]
[yyAverage, -, aRadius, ,, aRadius, *, 2, ,, aRadius, *, 2, ), ;, g2, ., fill, (, avgEllipse, ), ;]
[yyAverage, -, aRadius, ,, aRadius, *, 2, ,, aRadius, *, 2, ), ;, g2, ., fill, (, avgEllipse, ), ;]
[aRadius, *, 2, ,, aRadius, *, 2, ), ;, g2, ., fill, (, avgEllipse, ), ;, g2, ., draw, (]
[;, g2, ., fill, (, avgEllipse, ), ;, g2, ., draw, (, avgEllipse, ), ;, }, }, }, if, (]
[;, g2, ., fill, (, avgEllipse, ), ;, g2, ., draw, (, avgEllipse, ), ;, }, }, }, if, (]
[g2, ., draw, (, avgEllipse, ), ;, }, }, }, if, (, this, ., medianVisible, ), {, Number, yMedian, =]
[g2, ., draw, (, avgEllipse, ), ;, }, }, }, if, (, this, ., medianVisible, ), {, Number, yMedian, =]
[avgEllipse, ), ;, }, }, }, if, (, this, ., medianVisible, ), {, Number, yMedian, =, bawDataset, ., getMedianValue, (]
[;, }, }, }, if, (, this, ., medianVisible, ), {, Number, yMedian, =, bawDataset, ., getMedianValue, (, row, ,]
[(, this, ., medianVisible, ), {, Number, yMedian, =, bawDataset, ., getMedianValue, (, row, ,, column, ), ;, if, (]
[(, this, ., medianVisible, ), {, Number, yMedian, =, bawDataset, ., getMedianValue, (, row, ,, column, ), ;, if, (]
[., medianVisible, ), {, Number, yMedian, =, bawDataset, ., getMedianValue, (, row, ,, column, ), ;, if, (, yMedian, !=]
[=, bawDataset, ., getMedianValue, (, row, ,, column, ), ;, if, (, yMedian, !=, null, ), {, double, yyMedian, =]
[=, bawDataset, ., getMedianValue, (, row, ,, column, ), ;, if, (, yMedian, !=, null, ), {, double, yyMedian, =]
[(, row, ,, column, ), ;, if, (, yMedian, !=, null, ), {, double, yyMedian, =, rangeAxis, ., valueToJava2D, (]
[(, row, ,, column, ), ;, if, (, yMedian, !=, null, ), {, double, yyMedian, =, rangeAxis, ., valueToJava2D, (]
[if, (, yMedian, !=, null, ), {, double, yyMedian, =, rangeAxis, ., valueToJava2D, (, yMedian, ., doubleValue, (, ), ,]
[yMedian, !=, null, ), {, double, yyMedian, =, rangeAxis, ., valueToJava2D, (, yMedian, ., doubleValue, (, ), ,, dataArea, ,]
[), {, double, yyMedian, =, rangeAxis, ., valueToJava2D, (, yMedian, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;]
[), {, double, yyMedian, =, rangeAxis, ., valueToJava2D, (, yMedian, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;]
[=, rangeAxis, ., valueToJava2D, (, yMedian, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;, g2, ., draw, (]
[yMedian, ., doubleValue, (, ), ,, dataArea, ,, location, ), ;, g2, ., draw, (, new, Line2D, ., Double, (]
[doubleValue, (, ), ,, dataArea, ,, location, ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, ,]
[), ,, dataArea, ,, location, ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, ,, yyMedian, ,]
[), ,, dataArea, ,, location, ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, ,, yyMedian, ,]
[dataArea, ,, location, ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, ,, yyMedian, ,, xx, +]
[dataArea, ,, location, ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, ,, yyMedian, ,, xx, +]
[., draw, (, new, Line2D, ., Double, (, xx, ,, yyMedian, ,, xx, +, state, ., getBarWidth, (, ), ,]
[,, yyMedian, ,, xx, +, state, ., getBarWidth, (, ), ,, yyMedian, ), ), ;, }, }, double, maxAxisValue, =]
[,, yyMedian, ,, xx, +, state, ., getBarWidth, (, ), ,, yyMedian, ), ), ;, }, }, double, maxAxisValue, =]
[,, yyMedian, ,, xx, +, state, ., getBarWidth, (, ), ,, yyMedian, ), ), ;, }, }, double, maxAxisValue, =]
[+, state, ., getBarWidth, (, ), ,, yyMedian, ), ), ;, }, }, double, maxAxisValue, =, rangeAxis, ., valueToJava2D, (]
[+, state, ., getBarWidth, (, ), ,, yyMedian, ), ), ;, }, }, double, maxAxisValue, =, rangeAxis, ., valueToJava2D, (]
[,, yyMedian, ), ), ;, }, }, double, maxAxisValue, =, rangeAxis, ., valueToJava2D, (, rangeAxis, ., getUpperBound, (, ), ,]
[), ), ;, }, }, double, maxAxisValue, =, rangeAxis, ., valueToJava2D, (, rangeAxis, ., getUpperBound, (, ), ,, dataArea, ,]
[}, }, double, maxAxisValue, =, rangeAxis, ., valueToJava2D, (, rangeAxis, ., getUpperBound, (, ), ,, dataArea, ,, location, ), +]
[rangeAxis, ., valueToJava2D, (, rangeAxis, ., getUpperBound, (, ), ,, dataArea, ,, location, ), +, aRadius, ;, double, minAxisValue, =]
[rangeAxis, ., valueToJava2D, (, rangeAxis, ., getUpperBound, (, ), ,, dataArea, ,, location, ), +, aRadius, ;, double, minAxisValue, =]
[rangeAxis, ., valueToJava2D, (, rangeAxis, ., getUpperBound, (, ), ,, dataArea, ,, location, ), +, aRadius, ;, double, minAxisValue, =]
[rangeAxis, ., getUpperBound, (, ), ,, dataArea, ,, location, ), +, aRadius, ;, double, minAxisValue, =, rangeAxis, ., valueToJava2D, (]
[rangeAxis, ., getUpperBound, (, ), ,, dataArea, ,, location, ), +, aRadius, ;, double, minAxisValue, =, rangeAxis, ., valueToJava2D, (]
[dataArea, ,, location, ), +, aRadius, ;, double, minAxisValue, =, rangeAxis, ., valueToJava2D, (, rangeAxis, ., getLowerBound, (, ), ,]
[location, ), +, aRadius, ;, double, minAxisValue, =, rangeAxis, ., valueToJava2D, (, rangeAxis, ., getLowerBound, (, ), ,, dataArea, ,]
[aRadius, ;, double, minAxisValue, =, rangeAxis, ., valueToJava2D, (, rangeAxis, ., getLowerBound, (, ), ,, dataArea, ,, location, ), -]
[double, minAxisValue, =, rangeAxis, ., valueToJava2D, (, rangeAxis, ., getLowerBound, (, ), ,, dataArea, ,, location, ), -, aRadius, ;]
[double, minAxisValue, =, rangeAxis, ., valueToJava2D, (, rangeAxis, ., getLowerBound, (, ), ,, dataArea, ,, location, ), -, aRadius, ;]
[., valueToJava2D, (, rangeAxis, ., getLowerBound, (, ), ,, dataArea, ,, location, ), -, aRadius, ;, g2, ., setPaint, (]
[(, ), ,, dataArea, ,, location, ), -, aRadius, ;, g2, ., setPaint, (, itemPaint, ), ;, double, oRadius, =]
[(, ), ,, dataArea, ,, location, ), -, aRadius, ;, g2, ., setPaint, (, itemPaint, ), ;, double, oRadius, =]
[(, ), ,, dataArea, ,, location, ), -, aRadius, ;, g2, ., setPaint, (, itemPaint, ), ;, double, oRadius, =]
[), -, aRadius, ;, g2, ., setPaint, (, itemPaint, ), ;, double, oRadius, =, state, ., getBarWidth, (, ), /]
[., setPaint, (, itemPaint, ), ;, double, oRadius, =, state, ., getBarWidth, (, ), /, 3, ;, List, outliers, =]
[=, state, ., getBarWidth, (, ), /, 3, ;, List, outliers, =, new, ArrayList, (, ), ;, OutlierListCollection, outlierListCollection, =]
[;, List, outliers, =, new, ArrayList, (, ), ;, OutlierListCollection, outlierListCollection, =, new, OutlierListCollection, (, ), ;, List, yOutliers, =]
[;, List, outliers, =, new, ArrayList, (, ), ;, OutlierListCollection, outlierListCollection, =, new, OutlierListCollection, (, ), ;, List, yOutliers, =]
[new, ArrayList, (, ), ;, OutlierListCollection, outlierListCollection, =, new, OutlierListCollection, (, ), ;, List, yOutliers, =, bawDataset, ., getOutliers, (]
[(, ), ;, OutlierListCollection, outlierListCollection, =, new, OutlierListCollection, (, ), ;, List, yOutliers, =, bawDataset, ., getOutliers, (, row, ,]
[=, new, OutlierListCollection, (, ), ;, List, yOutliers, =, bawDataset, ., getOutliers, (, row, ,, column, ), ;, if, (]
[=, new, OutlierListCollection, (, ), ;, List, yOutliers, =, bawDataset, ., getOutliers, (, row, ,, column, ), ;, if, (]
[OutlierListCollection, (, ), ;, List, yOutliers, =, bawDataset, ., getOutliers, (, row, ,, column, ), ;, if, (, yOutliers, !=]
[., getOutliers, (, row, ,, column, ), ;, if, (, yOutliers, !=, null, ), {, for, (, int, i, =]
[(, row, ,, column, ), ;, if, (, yOutliers, !=, null, ), {, for, (, int, i, =, 0, ;]
[(, row, ,, column, ), ;, if, (, yOutliers, !=, null, ), {, for, (, int, i, =, 0, ;]
[,, column, ), ;, if, (, yOutliers, !=, null, ), {, for, (, int, i, =, 0, ;, i, <]
[,, column, ), ;, if, (, yOutliers, !=, null, ), {, for, (, int, i, =, 0, ;, i, <]
[yOutliers, !=, null, ), {, for, (, int, i, =, 0, ;, i, <, yOutliers, ., size, (, ), ;]
[yOutliers, !=, null, ), {, for, (, int, i, =, 0, ;, i, <, yOutliers, ., size, (, ), ;]
[int, i, =, 0, ;, i, <, yOutliers, ., size, (, ), ;, i, ++, ), {, double, outlier, =]
[int, i, =, 0, ;, i, <, yOutliers, ., size, (, ), ;, i, ++, ), {, double, outlier, =]
[i, =, 0, ;, i, <, yOutliers, ., size, (, ), ;, i, ++, ), {, double, outlier, =, (]
[;, i, <, yOutliers, ., size, (, ), ;, i, ++, ), {, double, outlier, =, (, (, Number, )]
[;, i, <, yOutliers, ., size, (, ), ;, i, ++, ), {, double, outlier, =, (, (, Number, )]
[., size, (, ), ;, i, ++, ), {, double, outlier, =, (, (, Number, ), yOutliers, ., get, (]
[=, (, (, Number, ), yOutliers, ., get, (, i, ), ), ., doubleValue, (, ), ;, Number, minOutlier, =]
[=, (, (, Number, ), yOutliers, ., get, (, i, ), ), ., doubleValue, (, ), ;, Number, minOutlier, =]
[), yOutliers, ., get, (, i, ), ), ., doubleValue, (, ), ;, Number, minOutlier, =, bawDataset, ., getMinOutlier, (]
[., get, (, i, ), ), ., doubleValue, (, ), ;, Number, minOutlier, =, bawDataset, ., getMinOutlier, (, row, ,]
[., doubleValue, (, ), ;, Number, minOutlier, =, bawDataset, ., getMinOutlier, (, row, ,, column, ), ;, Number, maxOutlier, =]
[., doubleValue, (, ), ;, Number, minOutlier, =, bawDataset, ., getMinOutlier, (, row, ,, column, ), ;, Number, maxOutlier, =]
[;, Number, minOutlier, =, bawDataset, ., getMinOutlier, (, row, ,, column, ), ;, Number, maxOutlier, =, bawDataset, ., getMaxOutlier, (]
[minOutlier, =, bawDataset, ., getMinOutlier, (, row, ,, column, ), ;, Number, maxOutlier, =, bawDataset, ., getMaxOutlier, (, row, ,]
[row, ,, column, ), ;, Number, maxOutlier, =, bawDataset, ., getMaxOutlier, (, row, ,, column, ), ;, Number, minRegular, =]
[row, ,, column, ), ;, Number, maxOutlier, =, bawDataset, ., getMaxOutlier, (, row, ,, column, ), ;, Number, minRegular, =]
[;, Number, maxOutlier, =, bawDataset, ., getMaxOutlier, (, row, ,, column, ), ;, Number, minRegular, =, bawDataset, ., getMinRegularValue, (]
[maxOutlier, =, bawDataset, ., getMaxOutlier, (, row, ,, column, ), ;, Number, minRegular, =, bawDataset, ., getMinRegularValue, (, row, ,]
[row, ,, column, ), ;, Number, minRegular, =, bawDataset, ., getMinRegularValue, (, row, ,, column, ), ;, Number, maxRegular, =]
[row, ,, column, ), ;, Number, minRegular, =, bawDataset, ., getMinRegularValue, (, row, ,, column, ), ;, Number, maxRegular, =]
[;, Number, minRegular, =, bawDataset, ., getMinRegularValue, (, row, ,, column, ), ;, Number, maxRegular, =, bawDataset, ., getMaxRegularValue, (]
[minRegular, =, bawDataset, ., getMinRegularValue, (, row, ,, column, ), ;, Number, maxRegular, =, bawDataset, ., getMaxRegularValue, (, row, ,]
[(, row, ,, column, ), ;, Number, maxRegular, =, bawDataset, ., getMaxRegularValue, (, row, ,, column, ), ;, if, (]
[(, row, ,, column, ), ;, Number, maxRegular, =, bawDataset, ., getMaxRegularValue, (, row, ,, column, ), ;, if, (]
[,, column, ), ;, Number, maxRegular, =, bawDataset, ., getMaxRegularValue, (, row, ,, column, ), ;, if, (, outlier, >]
[,, column, ), ;, Number, maxRegular, =, bawDataset, ., getMaxRegularValue, (, row, ,, column, ), ;, if, (, outlier, >]
[bawDataset, ., getMaxRegularValue, (, row, ,, column, ), ;, if, (, outlier, >, maxOutlier, ., doubleValue, (, ), ), {]
[bawDataset, ., getMaxRegularValue, (, row, ,, column, ), ;, if, (, outlier, >, maxOutlier, ., doubleValue, (, ), ), {]
[row, ,, column, ), ;, if, (, outlier, >, maxOutlier, ., doubleValue, (, ), ), {, outlierListCollection, ., setHighFarOut, (]
[outlier, >, maxOutlier, ., doubleValue, (, ), ), {, outlierListCollection, ., setHighFarOut, (, true, ), ;, }, else, if, (]
[outlier, >, maxOutlier, ., doubleValue, (, ), ), {, outlierListCollection, ., setHighFarOut, (, true, ), ;, }, else, if, (]
[maxOutlier, ., doubleValue, (, ), ), {, outlierListCollection, ., setHighFarOut, (, true, ), ;, }, else, if, (, outlier, <]
[maxOutlier, ., doubleValue, (, ), ), {, outlierListCollection, ., setHighFarOut, (, true, ), ;, }, else, if, (, outlier, <]
[outlierListCollection, ., setHighFarOut, (, true, ), ;, }, else, if, (, outlier, <, minOutlier, ., doubleValue, (, ), ), {]
[outlierListCollection, ., setHighFarOut, (, true, ), ;, }, else, if, (, outlier, <, minOutlier, ., doubleValue, (, ), ), {]
[true, ), ;, }, else, if, (, outlier, <, minOutlier, ., doubleValue, (, ), ), {, outlierListCollection, ., setLowFarOut, (]
[outlier, <, minOutlier, ., doubleValue, (, ), ), {, outlierListCollection, ., setLowFarOut, (, true, ), ;, }, else, if, (]
[outlier, <, minOutlier, ., doubleValue, (, ), ), {, outlierListCollection, ., setLowFarOut, (, true, ), ;, }, else, if, (]
[minOutlier, ., doubleValue, (, ), ), {, outlierListCollection, ., setLowFarOut, (, true, ), ;, }, else, if, (, outlier, >]
[minOutlier, ., doubleValue, (, ), ), {, outlierListCollection, ., setLowFarOut, (, true, ), ;, }, else, if, (, outlier, >]
[outlierListCollection, ., setLowFarOut, (, true, ), ;, }, else, if, (, outlier, >, maxRegular, ., doubleValue, (, ), ), {]
[setLowFarOut, (, true, ), ;, }, else, if, (, outlier, >, maxRegular, ., doubleValue, (, ), ), {, yyOutlier, =]
[setLowFarOut, (, true, ), ;, }, else, if, (, outlier, >, maxRegular, ., doubleValue, (, ), ), {, yyOutlier, =]
[;, }, else, if, (, outlier, >, maxRegular, ., doubleValue, (, ), ), {, yyOutlier, =, rangeAxis, ., valueToJava2D, (]
[else, if, (, outlier, >, maxRegular, ., doubleValue, (, ), ), {, yyOutlier, =, rangeAxis, ., valueToJava2D, (, outlier, ,]
[(, outlier, >, maxRegular, ., doubleValue, (, ), ), {, yyOutlier, =, rangeAxis, ., valueToJava2D, (, outlier, ,, dataArea, ,]
[maxRegular, ., doubleValue, (, ), ), {, yyOutlier, =, rangeAxis, ., valueToJava2D, (, outlier, ,, dataArea, ,, location, ), ;]
[maxRegular, ., doubleValue, (, ), ), {, yyOutlier, =, rangeAxis, ., valueToJava2D, (, outlier, ,, dataArea, ,, location, ), ;]
[), ), {, yyOutlier, =, rangeAxis, ., valueToJava2D, (, outlier, ,, dataArea, ,, location, ), ;, outliers, ., add, (]
[yyOutlier, =, rangeAxis, ., valueToJava2D, (, outlier, ,, dataArea, ,, location, ), ;, outliers, ., add, (, new, Outlier, (]
[yyOutlier, =, rangeAxis, ., valueToJava2D, (, outlier, ,, dataArea, ,, location, ), ;, outliers, ., add, (, new, Outlier, (]
[rangeAxis, ., valueToJava2D, (, outlier, ,, dataArea, ,, location, ), ;, outliers, ., add, (, new, Outlier, (, xx, +]
[rangeAxis, ., valueToJava2D, (, outlier, ,, dataArea, ,, location, ), ;, outliers, ., add, (, new, Outlier, (, xx, +]
[rangeAxis, ., valueToJava2D, (, outlier, ,, dataArea, ,, location, ), ;, outliers, ., add, (, new, Outlier, (, xx, +]
[dataArea, ,, location, ), ;, outliers, ., add, (, new, Outlier, (, xx, +, state, ., getBarWidth, (, ), /]
[location, ), ;, outliers, ., add, (, new, Outlier, (, xx, +, state, ., getBarWidth, (, ), /, 2.0, ,]
[;, outliers, ., add, (, new, Outlier, (, xx, +, state, ., getBarWidth, (, ), /, 2.0, ,, yyOutlier, ,]
[xx, +, state, ., getBarWidth, (, ), /, 2.0, ,, yyOutlier, ,, oRadius, ), ), ;, }, else, if, (]
[xx, +, state, ., getBarWidth, (, ), /, 2.0, ,, yyOutlier, ,, oRadius, ), ), ;, }, else, if, (]
[state, ., getBarWidth, (, ), /, 2.0, ,, yyOutlier, ,, oRadius, ), ), ;, }, else, if, (, outlier, <]
[state, ., getBarWidth, (, ), /, 2.0, ,, yyOutlier, ,, oRadius, ), ), ;, }, else, if, (, outlier, <]
[,, yyOutlier, ,, oRadius, ), ), ;, }, else, if, (, outlier, <, minRegular, ., doubleValue, (, ), ), {]
[,, oRadius, ), ), ;, }, else, if, (, outlier, <, minRegular, ., doubleValue, (, ), ), {, yyOutlier, =]
[,, oRadius, ), ), ;, }, else, if, (, outlier, <, minRegular, ., doubleValue, (, ), ), {, yyOutlier, =]
[;, }, else, if, (, outlier, <, minRegular, ., doubleValue, (, ), ), {, yyOutlier, =, rangeAxis, ., valueToJava2D, (]
[else, if, (, outlier, <, minRegular, ., doubleValue, (, ), ), {, yyOutlier, =, rangeAxis, ., valueToJava2D, (, outlier, ,]
[(, outlier, <, minRegular, ., doubleValue, (, ), ), {, yyOutlier, =, rangeAxis, ., valueToJava2D, (, outlier, ,, dataArea, ,]
[minRegular, ., doubleValue, (, ), ), {, yyOutlier, =, rangeAxis, ., valueToJava2D, (, outlier, ,, dataArea, ,, location, ), ;]
[minRegular, ., doubleValue, (, ), ), {, yyOutlier, =, rangeAxis, ., valueToJava2D, (, outlier, ,, dataArea, ,, location, ), ;]
[), ), {, yyOutlier, =, rangeAxis, ., valueToJava2D, (, outlier, ,, dataArea, ,, location, ), ;, outliers, ., add, (]
[yyOutlier, =, rangeAxis, ., valueToJava2D, (, outlier, ,, dataArea, ,, location, ), ;, outliers, ., add, (, new, Outlier, (]
[yyOutlier, =, rangeAxis, ., valueToJava2D, (, outlier, ,, dataArea, ,, location, ), ;, outliers, ., add, (, new, Outlier, (]
[rangeAxis, ., valueToJava2D, (, outlier, ,, dataArea, ,, location, ), ;, outliers, ., add, (, new, Outlier, (, xx, +]
[rangeAxis, ., valueToJava2D, (, outlier, ,, dataArea, ,, location, ), ;, outliers, ., add, (, new, Outlier, (, xx, +]
[rangeAxis, ., valueToJava2D, (, outlier, ,, dataArea, ,, location, ), ;, outliers, ., add, (, new, Outlier, (, xx, +]
[dataArea, ,, location, ), ;, outliers, ., add, (, new, Outlier, (, xx, +, state, ., getBarWidth, (, ), /]
[location, ), ;, outliers, ., add, (, new, Outlier, (, xx, +, state, ., getBarWidth, (, ), /, 2.0, ,]
[;, outliers, ., add, (, new, Outlier, (, xx, +, state, ., getBarWidth, (, ), /, 2.0, ,, yyOutlier, ,]
[new, Outlier, (, xx, +, state, ., getBarWidth, (, ), /, 2.0, ,, yyOutlier, ,, oRadius, ), ), ;, }]
[new, Outlier, (, xx, +, state, ., getBarWidth, (, ), /, 2.0, ,, yyOutlier, ,, oRadius, ), ), ;, }]
[+, state, ., getBarWidth, (, ), /, 2.0, ,, yyOutlier, ,, oRadius, ), ), ;, }, Collections, ., sort, (]
[yyOutlier, ,, oRadius, ), ), ;, }, Collections, ., sort, (, outliers, ), ;, }, for, (, Iterator, iterator, =]
[yyOutlier, ,, oRadius, ), ), ;, }, Collections, ., sort, (, outliers, ), ;, }, for, (, Iterator, iterator, =]
[}, Collections, ., sort, (, outliers, ), ;, }, for, (, Iterator, iterator, =, outliers, ., iterator, (, ), ;]
[}, Collections, ., sort, (, outliers, ), ;, }, for, (, Iterator, iterator, =, outliers, ., iterator, (, ), ;]
[Iterator, iterator, =, outliers, ., iterator, (, ), ;, iterator, ., hasNext, (, ), ;, ), {, Outlier, outlier, =]
[outliers, ., iterator, (, ), ;, iterator, ., hasNext, (, ), ;, ), {, Outlier, outlier, =, (, Outlier, )]
[outliers, ., iterator, (, ), ;, iterator, ., hasNext, (, ), ;, ), {, Outlier, outlier, =, (, Outlier, )]
[iterator, ., hasNext, (, ), ;, ), {, Outlier, outlier, =, (, Outlier, ), iterator, ., next, (, ), ;]
[iterator, ., hasNext, (, ), ;, ), {, Outlier, outlier, =, (, Outlier, ), iterator, ., next, (, ), ;]
[), ;, ), {, Outlier, outlier, =, (, Outlier, ), iterator, ., next, (, ), ;, outlierListCollection, ., add, (]
[), iterator, ., next, (, ), ;, outlierListCollection, ., add, (, outlier, ), ;, }, for, (, Iterator, iterator, =]
[), iterator, ., next, (, ), ;, outlierListCollection, ., add, (, outlier, ), ;, }, for, (, Iterator, iterator, =]
[;, outlierListCollection, ., add, (, outlier, ), ;, }, for, (, Iterator, iterator, =, outlierListCollection, ., iterator, (, ), ;]
[;, outlierListCollection, ., add, (, outlier, ), ;, }, for, (, Iterator, iterator, =, outlierListCollection, ., iterator, (, ), ;]
[Iterator, iterator, =, outlierListCollection, ., iterator, (, ), ;, iterator, ., hasNext, (, ), ;, ), {, OutlierList, list, =]
[outlierListCollection, ., iterator, (, ), ;, iterator, ., hasNext, (, ), ;, ), {, OutlierList, list, =, (, OutlierList, )]
[outlierListCollection, ., iterator, (, ), ;, iterator, ., hasNext, (, ), ;, ), {, OutlierList, list, =, (, OutlierList, )]
[(, ), ;, ), {, OutlierList, list, =, (, OutlierList, ), iterator, ., next, (, ), ;, Outlier, outlier, =]
[(, ), ;, ), {, OutlierList, list, =, (, OutlierList, ), iterator, ., next, (, ), ;, Outlier, outlier, =]
[OutlierList, ), iterator, ., next, (, ), ;, Outlier, outlier, =, list, ., getAveragedOutlier, (, ), ;, Point2D, point, =]
[OutlierList, ), iterator, ., next, (, ), ;, Outlier, outlier, =, list, ., getAveragedOutlier, (, ), ;, Point2D, point, =]
[Outlier, outlier, =, list, ., getAveragedOutlier, (, ), ;, Point2D, point, =, outlier, ., getPoint, (, ), ;, if, (]
[Outlier, outlier, =, list, ., getAveragedOutlier, (, ), ;, Point2D, point, =, outlier, ., getPoint, (, ), ;, if, (]
[), ;, Point2D, point, =, outlier, ., getPoint, (, ), ;, if, (, list, ., isMultiple, (, ), ), {]
[Point2D, point, =, outlier, ., getPoint, (, ), ;, if, (, list, ., isMultiple, (, ), ), {, drawMultipleEllipse, (]
[=, outlier, ., getPoint, (, ), ;, if, (, list, ., isMultiple, (, ), ), {, drawMultipleEllipse, (, point, ,]
[=, outlier, ., getPoint, (, ), ;, if, (, list, ., isMultiple, (, ), ), {, drawMultipleEllipse, (, point, ,]
[;, if, (, list, ., isMultiple, (, ), ), {, drawMultipleEllipse, (, point, ,, state, ., getBarWidth, (, ), ,]
[(, list, ., isMultiple, (, ), ), {, drawMultipleEllipse, (, point, ,, state, ., getBarWidth, (, ), ,, oRadius, ,]
[), {, drawMultipleEllipse, (, point, ,, state, ., getBarWidth, (, ), ,, oRadius, ,, g2, ), ;, }, else, {]
[drawMultipleEllipse, (, point, ,, state, ., getBarWidth, (, ), ,, oRadius, ,, g2, ), ;, }, else, {, drawEllipse, (]
[point, ,, state, ., getBarWidth, (, ), ,, oRadius, ,, g2, ), ;, }, else, {, drawEllipse, (, point, ,]
[state, ., getBarWidth, (, ), ,, oRadius, ,, g2, ), ;, }, else, {, drawEllipse, (, point, ,, oRadius, ,]
[,, g2, ), ;, }, else, {, drawEllipse, (, point, ,, oRadius, ,, g2, ), ;, }, }, if, (]
[,, g2, ), ;, }, else, {, drawEllipse, (, point, ,, oRadius, ,, g2, ), ;, }, }, if, (]
[drawEllipse, (, point, ,, oRadius, ,, g2, ), ;, }, }, if, (, outlierListCollection, ., isHighFarOut, (, ), ), {]
[point, ,, oRadius, ,, g2, ), ;, }, }, if, (, outlierListCollection, ., isHighFarOut, (, ), ), {, drawHighFarOut, (]
[point, ,, oRadius, ,, g2, ), ;, }, }, if, (, outlierListCollection, ., isHighFarOut, (, ), ), {, drawHighFarOut, (]
[oRadius, ,, g2, ), ;, }, }, if, (, outlierListCollection, ., isHighFarOut, (, ), ), {, drawHighFarOut, (, aRadius, /]
[g2, ), ;, }, }, if, (, outlierListCollection, ., isHighFarOut, (, ), ), {, drawHighFarOut, (, aRadius, /, 2.0, ,]
[;, }, }, if, (, outlierListCollection, ., isHighFarOut, (, ), ), {, drawHighFarOut, (, aRadius, /, 2.0, ,, g2, ,]
[;, }, }, if, (, outlierListCollection, ., isHighFarOut, (, ), ), {, drawHighFarOut, (, aRadius, /, 2.0, ,, g2, ,]
[}, if, (, outlierListCollection, ., isHighFarOut, (, ), ), {, drawHighFarOut, (, aRadius, /, 2.0, ,, g2, ,, xx, +]
[}, if, (, outlierListCollection, ., isHighFarOut, (, ), ), {, drawHighFarOut, (, aRadius, /, 2.0, ,, g2, ,, xx, +]
[}, if, (, outlierListCollection, ., isHighFarOut, (, ), ), {, drawHighFarOut, (, aRadius, /, 2.0, ,, g2, ,, xx, +]
[(, ), ), {, drawHighFarOut, (, aRadius, /, 2.0, ,, g2, ,, xx, +, state, ., getBarWidth, (, ), /]
[), {, drawHighFarOut, (, aRadius, /, 2.0, ,, g2, ,, xx, +, state, ., getBarWidth, (, ), /, 2.0, ,]
[2.0, ,, g2, ,, xx, +, state, ., getBarWidth, (, ), /, 2.0, ,, maxAxisValue, ), ;, }, if, (]
[2.0, ,, g2, ,, xx, +, state, ., getBarWidth, (, ), /, 2.0, ,, maxAxisValue, ), ;, }, if, (]
[., getBarWidth, (, ), /, 2.0, ,, maxAxisValue, ), ;, }, if, (, outlierListCollection, ., isLowFarOut, (, ), ), {]
[(, ), /, 2.0, ,, maxAxisValue, ), ;, }, if, (, outlierListCollection, ., isLowFarOut, (, ), ), {, drawLowFarOut, (]
[(, ), /, 2.0, ,, maxAxisValue, ), ;, }, if, (, outlierListCollection, ., isLowFarOut, (, ), ), {, drawLowFarOut, (]
[/, 2.0, ,, maxAxisValue, ), ;, }, if, (, outlierListCollection, ., isLowFarOut, (, ), ), {, drawLowFarOut, (, aRadius, /]
[,, maxAxisValue, ), ;, }, if, (, outlierListCollection, ., isLowFarOut, (, ), ), {, drawLowFarOut, (, aRadius, /, 2.0, ,]
[), ;, }, if, (, outlierListCollection, ., isLowFarOut, (, ), ), {, drawLowFarOut, (, aRadius, /, 2.0, ,, g2, ,]
[), ;, }, if, (, outlierListCollection, ., isLowFarOut, (, ), ), {, drawLowFarOut, (, aRadius, /, 2.0, ,, g2, ,]
[}, if, (, outlierListCollection, ., isLowFarOut, (, ), ), {, drawLowFarOut, (, aRadius, /, 2.0, ,, g2, ,, xx, +]
[}, if, (, outlierListCollection, ., isLowFarOut, (, ), ), {, drawLowFarOut, (, aRadius, /, 2.0, ,, g2, ,, xx, +]
[}, if, (, outlierListCollection, ., isLowFarOut, (, ), ), {, drawLowFarOut, (, aRadius, /, 2.0, ,, g2, ,, xx, +]
[(, ), ), {, drawLowFarOut, (, aRadius, /, 2.0, ,, g2, ,, xx, +, state, ., getBarWidth, (, ), /]
[), {, drawLowFarOut, (, aRadius, /, 2.0, ,, g2, ,, xx, +, state, ., getBarWidth, (, ), /, 2.0, ,]
[,, g2, ,, xx, +, state, ., getBarWidth, (, ), /, 2.0, ,, minAxisValue, ), ;, }, }, if, (]
[,, g2, ,, xx, +, state, ., getBarWidth, (, ), /, 2.0, ,, minAxisValue, ), ;, }, }, if, (]
[,, g2, ,, xx, +, state, ., getBarWidth, (, ), /, 2.0, ,, minAxisValue, ), ;, }, }, if, (]
[,, g2, ,, xx, +, state, ., getBarWidth, (, ), /, 2.0, ,, minAxisValue, ), ;, }, }, if, (]
[., getBarWidth, (, ), /, 2.0, ,, minAxisValue, ), ;, }, }, if, (, state, ., getInfo, (, ), !=]
[(, ), /, 2.0, ,, minAxisValue, ), ;, }, }, if, (, state, ., getInfo, (, ), !=, null, &&]
[(, ), /, 2.0, ,, minAxisValue, ), ;, }, }, if, (, state, ., getInfo, (, ), !=, null, &&]
[/, 2.0, ,, minAxisValue, ), ;, }, }, if, (, state, ., getInfo, (, ), !=, null, &&, box, !=]
[}, }, if, (, state, ., getInfo, (, ), !=, null, &&, box, !=, null, ), {, EntityCollection, entities, =]
[}, }, if, (, state, ., getInfo, (, ), !=, null, &&, box, !=, null, ), {, EntityCollection, entities, =]
[), !=, null, &&, box, !=, null, ), {, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (]
[), !=, null, &&, box, !=, null, ), {, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (]
[null, &&, box, !=, null, ), {, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=]
[!=, null, ), {, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {]
[), {, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (]
[EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,]
[=, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, box, ,]
[., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, box, ,, dataset, ,]
[(, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, box, ,, dataset, ,, row, ,]
[;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, box, ,, dataset, ,, row, ,, column, ,]
[}, }, }, private, void, drawEllipse, (, Point2D, point, ,, double, oRadius, ,, Graphics2D, g2, ), {, Ellipse2D, dot, =]
[drawEllipse, (, Point2D, point, ,, double, oRadius, ,, Graphics2D, g2, ), {, Ellipse2D, dot, =, new, Ellipse2D, ., Double, (]
[drawEllipse, (, Point2D, point, ,, double, oRadius, ,, Graphics2D, g2, ), {, Ellipse2D, dot, =, new, Ellipse2D, ., Double, (]
[drawEllipse, (, Point2D, point, ,, double, oRadius, ,, Graphics2D, g2, ), {, Ellipse2D, dot, =, new, Ellipse2D, ., Double, (]
[oRadius, ,, Graphics2D, g2, ), {, Ellipse2D, dot, =, new, Ellipse2D, ., Double, (, point, ., getX, (, ), +]
[oRadius, ,, Graphics2D, g2, ), {, Ellipse2D, dot, =, new, Ellipse2D, ., Double, (, point, ., getX, (, ), +]
[Graphics2D, g2, ), {, Ellipse2D, dot, =, new, Ellipse2D, ., Double, (, point, ., getX, (, ), +, oRadius, /]
[), {, Ellipse2D, dot, =, new, Ellipse2D, ., Double, (, point, ., getX, (, ), +, oRadius, /, 2, ,]
[), {, Ellipse2D, dot, =, new, Ellipse2D, ., Double, (, point, ., getX, (, ), +, oRadius, /, 2, ,]
[Ellipse2D, ., Double, (, point, ., getX, (, ), +, oRadius, /, 2, ,, point, ., getY, (, ), ,]
[Double, (, point, ., getX, (, ), +, oRadius, /, 2, ,, point, ., getY, (, ), ,, oRadius, ,]
[., getX, (, ), +, oRadius, /, 2, ,, point, ., getY, (, ), ,, oRadius, ,, oRadius, ), ;]
[., getX, (, ), +, oRadius, /, 2, ,, point, ., getY, (, ), ,, oRadius, ,, oRadius, ), ;]
[+, oRadius, /, 2, ,, point, ., getY, (, ), ,, oRadius, ,, oRadius, ), ;, g2, ., draw, (]
[private, void, drawMultipleEllipse, (, Point2D, point, ,, double, boxWidth, ,, double, oRadius, ,, Graphics2D, g2, ), {, Ellipse2D, dot1, =]
[point, ,, double, boxWidth, ,, double, oRadius, ,, Graphics2D, g2, ), {, Ellipse2D, dot1, =, new, Ellipse2D, ., Double, (]
[point, ,, double, boxWidth, ,, double, oRadius, ,, Graphics2D, g2, ), {, Ellipse2D, dot1, =, new, Ellipse2D, ., Double, (]
[point, ,, double, boxWidth, ,, double, oRadius, ,, Graphics2D, g2, ), {, Ellipse2D, dot1, =, new, Ellipse2D, ., Double, (]
[point, ,, double, boxWidth, ,, double, oRadius, ,, Graphics2D, g2, ), {, Ellipse2D, dot1, =, new, Ellipse2D, ., Double, (]
[oRadius, ,, Graphics2D, g2, ), {, Ellipse2D, dot1, =, new, Ellipse2D, ., Double, (, point, ., getX, (, ), -]
[,, Graphics2D, g2, ), {, Ellipse2D, dot1, =, new, Ellipse2D, ., Double, (, point, ., getX, (, ), -, (]
[,, Graphics2D, g2, ), {, Ellipse2D, dot1, =, new, Ellipse2D, ., Double, (, point, ., getX, (, ), -, (]
[g2, ), {, Ellipse2D, dot1, =, new, Ellipse2D, ., Double, (, point, ., getX, (, ), -, (, boxWidth, /]
[Ellipse2D, dot1, =, new, Ellipse2D, ., Double, (, point, ., getX, (, ), -, (, boxWidth, /, 2, ), +]
[=, new, Ellipse2D, ., Double, (, point, ., getX, (, ), -, (, boxWidth, /, 2, ), +, oRadius, ,]
[=, new, Ellipse2D, ., Double, (, point, ., getX, (, ), -, (, boxWidth, /, 2, ), +, oRadius, ,]
[point, ., getX, (, ), -, (, boxWidth, /, 2, ), +, oRadius, ,, point, ., getY, (, ), ,]
[getX, (, ), -, (, boxWidth, /, 2, ), +, oRadius, ,, point, ., getY, (, ), ,, oRadius, ,]
[/, 2, ), +, oRadius, ,, point, ., getY, (, ), ,, oRadius, ,, oRadius, ), ;, Ellipse2D, dot2, =]
[,, point, ., getY, (, ), ,, oRadius, ,, oRadius, ), ;, Ellipse2D, dot2, =, new, Ellipse2D, ., Double, (]
[,, point, ., getY, (, ), ,, oRadius, ,, oRadius, ), ;, Ellipse2D, dot2, =, new, Ellipse2D, ., Double, (]
[,, point, ., getY, (, ), ,, oRadius, ,, oRadius, ), ;, Ellipse2D, dot2, =, new, Ellipse2D, ., Double, (]
[,, oRadius, ,, oRadius, ), ;, Ellipse2D, dot2, =, new, Ellipse2D, ., Double, (, point, ., getX, (, ), +]
[oRadius, ,, oRadius, ), ;, Ellipse2D, dot2, =, new, Ellipse2D, ., Double, (, point, ., getX, (, ), +, (]
[oRadius, ,, oRadius, ), ;, Ellipse2D, dot2, =, new, Ellipse2D, ., Double, (, point, ., getX, (, ), +, (]
[oRadius, ), ;, Ellipse2D, dot2, =, new, Ellipse2D, ., Double, (, point, ., getX, (, ), +, (, boxWidth, /]
[Ellipse2D, dot2, =, new, Ellipse2D, ., Double, (, point, ., getX, (, ), +, (, boxWidth, /, 2, ), ,]
[Ellipse2D, dot2, =, new, Ellipse2D, ., Double, (, point, ., getX, (, ), +, (, boxWidth, /, 2, ), ,]
[Double, (, point, ., getX, (, ), +, (, boxWidth, /, 2, ), ,, point, ., getY, (, ), ,]
[point, ., getX, (, ), +, (, boxWidth, /, 2, ), ,, point, ., getY, (, ), ,, oRadius, ,]
[(, ), +, (, boxWidth, /, 2, ), ,, point, ., getY, (, ), ,, oRadius, ,, oRadius, ), ;]
[(, ), +, (, boxWidth, /, 2, ), ,, point, ., getY, (, ), ,, oRadius, ,, oRadius, ), ;]
[boxWidth, /, 2, ), ,, point, ., getY, (, ), ,, oRadius, ,, oRadius, ), ;, g2, ., draw, (]
[), ,, point, ., getY, (, ), ,, oRadius, ,, oRadius, ), ;, g2, ., draw, (, dot1, ), ;]
[), ,, point, ., getY, (, ), ,, oRadius, ,, oRadius, ), ;, g2, ., draw, (, dot1, ), ;]
[getY, (, ), ,, oRadius, ,, oRadius, ), ;, g2, ., draw, (, dot1, ), ;, g2, ., draw, (]
[private, void, drawHighFarOut, (, double, aRadius, ,, Graphics2D, g2, ,, double, xx, ,, double, m, ), {, double, side, =]
[private, void, drawHighFarOut, (, double, aRadius, ,, Graphics2D, g2, ,, double, xx, ,, double, m, ), {, double, side, =]
[drawHighFarOut, (, double, aRadius, ,, Graphics2D, g2, ,, double, xx, ,, double, m, ), {, double, side, =, aRadius, *]
[double, aRadius, ,, Graphics2D, g2, ,, double, xx, ,, double, m, ), {, double, side, =, aRadius, *, 2, ;]
[double, aRadius, ,, Graphics2D, g2, ,, double, xx, ,, double, m, ), {, double, side, =, aRadius, *, 2, ;]
[g2, ,, double, xx, ,, double, m, ), {, double, side, =, aRadius, *, 2, ;, g2, ., draw, (]
[double, m, ), {, double, side, =, aRadius, *, 2, ;, g2, ., draw, (, new, Line2D, ., Double, (]
[double, m, ), {, double, side, =, aRadius, *, 2, ;, g2, ., draw, (, new, Line2D, ., Double, (]
[), {, double, side, =, aRadius, *, 2, ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, -]
[double, side, =, aRadius, *, 2, ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, -, side, ,]
[double, side, =, aRadius, *, 2, ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, -, side, ,]
[=, aRadius, *, 2, ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, -, side, ,, m, +]
[*, 2, ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, -, side, ,, m, +, side, ,]
[*, 2, ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, -, side, ,, m, +, side, ,]
[;, g2, ., draw, (, new, Line2D, ., Double, (, xx, -, side, ,, m, +, side, ,, xx, +]
[., draw, (, new, Line2D, ., Double, (, xx, -, side, ,, m, +, side, ,, xx, +, side, ,]
[., draw, (, new, Line2D, ., Double, (, xx, -, side, ,, m, +, side, ,, xx, +, side, ,]
[(, new, Line2D, ., Double, (, xx, -, side, ,, m, +, side, ,, xx, +, side, ,, m, +]
[Double, (, xx, -, side, ,, m, +, side, ,, xx, +, side, ,, m, +, side, ), ), ;]
[Double, (, xx, -, side, ,, m, +, side, ,, xx, +, side, ,, m, +, side, ), ), ;]
[side, ,, m, +, side, ,, xx, +, side, ,, m, +, side, ), ), ;, g2, ., draw, (]
[,, xx, +, side, ,, m, +, side, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (]
[,, xx, +, side, ,, m, +, side, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (]
[+, side, ,, m, +, side, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, -]
[,, m, +, side, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, -, side, ,]
[,, m, +, side, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, -, side, ,]
[+, side, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, -, side, ,, m, +]
[), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, -, side, ,, m, +, side, ,]
[;, g2, ., draw, (, new, Line2D, ., Double, (, xx, -, side, ,, m, +, side, ,, xx, ,]
[(, new, Line2D, ., Double, (, xx, -, side, ,, m, +, side, ,, xx, ,, m, ), ), ;]
[(, new, Line2D, ., Double, (, xx, -, side, ,, m, +, side, ,, xx, ,, m, ), ), ;]
[Double, (, xx, -, side, ,, m, +, side, ,, xx, ,, m, ), ), ;, g2, ., draw, (]
[,, m, +, side, ,, xx, ,, m, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (]
[,, m, +, side, ,, xx, ,, m, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (]
[+, side, ,, xx, ,, m, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, +]
[,, xx, ,, m, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, +, side, ,]
[,, xx, ,, m, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, +, side, ,]
[,, m, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, +, side, ,, m, +]
[), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, +, side, ,, m, +, side, ,]
[;, g2, ., draw, (, new, Line2D, ., Double, (, xx, +, side, ,, m, +, side, ,, xx, ,]
[private, void, drawLowFarOut, (, double, aRadius, ,, Graphics2D, g2, ,, double, xx, ,, double, m, ), {, double, side, =]
[private, void, drawLowFarOut, (, double, aRadius, ,, Graphics2D, g2, ,, double, xx, ,, double, m, ), {, double, side, =]
[drawLowFarOut, (, double, aRadius, ,, Graphics2D, g2, ,, double, xx, ,, double, m, ), {, double, side, =, aRadius, *]
[double, aRadius, ,, Graphics2D, g2, ,, double, xx, ,, double, m, ), {, double, side, =, aRadius, *, 2, ;]
[double, aRadius, ,, Graphics2D, g2, ,, double, xx, ,, double, m, ), {, double, side, =, aRadius, *, 2, ;]
[g2, ,, double, xx, ,, double, m, ), {, double, side, =, aRadius, *, 2, ;, g2, ., draw, (]
[double, m, ), {, double, side, =, aRadius, *, 2, ;, g2, ., draw, (, new, Line2D, ., Double, (]
[double, m, ), {, double, side, =, aRadius, *, 2, ;, g2, ., draw, (, new, Line2D, ., Double, (]
[), {, double, side, =, aRadius, *, 2, ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, -]
[double, side, =, aRadius, *, 2, ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, -, side, ,]
[double, side, =, aRadius, *, 2, ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, -, side, ,]
[=, aRadius, *, 2, ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, -, side, ,, m, -]
[*, 2, ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, -, side, ,, m, -, side, ,]
[*, 2, ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, -, side, ,, m, -, side, ,]
[;, g2, ., draw, (, new, Line2D, ., Double, (, xx, -, side, ,, m, -, side, ,, xx, +]
[., draw, (, new, Line2D, ., Double, (, xx, -, side, ,, m, -, side, ,, xx, +, side, ,]
[., draw, (, new, Line2D, ., Double, (, xx, -, side, ,, m, -, side, ,, xx, +, side, ,]
[(, new, Line2D, ., Double, (, xx, -, side, ,, m, -, side, ,, xx, +, side, ,, m, -]
[Double, (, xx, -, side, ,, m, -, side, ,, xx, +, side, ,, m, -, side, ), ), ;]
[Double, (, xx, -, side, ,, m, -, side, ,, xx, +, side, ,, m, -, side, ), ), ;]
[side, ,, m, -, side, ,, xx, +, side, ,, m, -, side, ), ), ;, g2, ., draw, (]
[,, xx, +, side, ,, m, -, side, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (]
[,, xx, +, side, ,, m, -, side, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (]
[+, side, ,, m, -, side, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, -]
[,, m, -, side, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, -, side, ,]
[,, m, -, side, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, -, side, ,]
[-, side, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, -, side, ,, m, -]
[), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, -, side, ,, m, -, side, ,]
[;, g2, ., draw, (, new, Line2D, ., Double, (, xx, -, side, ,, m, -, side, ,, xx, ,]
[(, new, Line2D, ., Double, (, xx, -, side, ,, m, -, side, ,, xx, ,, m, ), ), ;]
[(, new, Line2D, ., Double, (, xx, -, side, ,, m, -, side, ,, xx, ,, m, ), ), ;]
[Double, (, xx, -, side, ,, m, -, side, ,, xx, ,, m, ), ), ;, g2, ., draw, (]
[,, m, -, side, ,, xx, ,, m, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (]
[,, m, -, side, ,, xx, ,, m, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (]
[-, side, ,, xx, ,, m, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, +]
[,, xx, ,, m, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, +, side, ,]
[,, xx, ,, m, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, +, side, ,]
[,, m, ), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, +, side, ,, m, -]
[), ), ;, g2, ., draw, (, new, Line2D, ., Double, (, xx, +, side, ,, m, -, side, ,]
[;, g2, ., draw, (, new, Line2D, ., Double, (, xx, +, side, ,, m, -, side, ,, xx, ,]
[-, side, ,, xx, ,, m, ), ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[-, side, ,, xx, ,, m, ), ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[,, xx, ,, m, ), ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[), ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, BoxAndWhiskerRenderer, ), ), {, return]
[true, ;, }, if, (, !, (, obj, instanceof, BoxAndWhiskerRenderer, ), ), {, return, false, ;, }, BoxAndWhiskerRenderer, that, =]
[if, (, !, (, obj, instanceof, BoxAndWhiskerRenderer, ), ), {, return, false, ;, }, BoxAndWhiskerRenderer, that, =, (, BoxAndWhiskerRenderer, )]
[obj, instanceof, BoxAndWhiskerRenderer, ), ), {, return, false, ;, }, BoxAndWhiskerRenderer, that, =, (, BoxAndWhiskerRenderer, ), obj, ;, if, (]
[obj, instanceof, BoxAndWhiskerRenderer, ), ), {, return, false, ;, }, BoxAndWhiskerRenderer, that, =, (, BoxAndWhiskerRenderer, ), obj, ;, if, (]
[obj, instanceof, BoxAndWhiskerRenderer, ), ), {, return, false, ;, }, BoxAndWhiskerRenderer, that, =, (, BoxAndWhiskerRenderer, ), obj, ;, if, (]
[), {, return, false, ;, }, BoxAndWhiskerRenderer, that, =, (, BoxAndWhiskerRenderer, ), obj, ;, if, (, this, ., fillBox, !=]
[), {, return, false, ;, }, BoxAndWhiskerRenderer, that, =, (, BoxAndWhiskerRenderer, ), obj, ;, if, (, this, ., fillBox, !=]
[BoxAndWhiskerRenderer, that, =, (, BoxAndWhiskerRenderer, ), obj, ;, if, (, this, ., fillBox, !=, that, ., fillBox, ), {, return]
[), obj, ;, if, (, this, ., fillBox, !=, that, ., fillBox, ), {, return, false, ;, }, if, (]
[), obj, ;, if, (, this, ., fillBox, !=, that, ., fillBox, ), {, return, false, ;, }, if, (]
[), obj, ;, if, (, this, ., fillBox, !=, that, ., fillBox, ), {, return, false, ;, }, if, (]
[(, this, ., fillBox, !=, that, ., fillBox, ), {, return, false, ;, }, if, (, this, ., itemMargin, !=]
[(, this, ., fillBox, !=, that, ., fillBox, ), {, return, false, ;, }, if, (, this, ., itemMargin, !=]
[., fillBox, ), {, return, false, ;, }, if, (, this, ., itemMargin, !=, that, ., itemMargin, ), {, return]
[false, ;, }, if, (, this, ., itemMargin, !=, that, ., itemMargin, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., itemMargin, !=, that, ., itemMargin, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., itemMargin, !=, that, ., itemMargin, ), {, return, false, ;, }, if, (]
[(, this, ., itemMargin, !=, that, ., itemMargin, ), {, return, false, ;, }, if, (, this, ., maximumBarWidth, !=]
[(, this, ., itemMargin, !=, that, ., itemMargin, ), {, return, false, ;, }, if, (, this, ., maximumBarWidth, !=]
[., itemMargin, ), {, return, false, ;, }, if, (, this, ., maximumBarWidth, !=, that, ., maximumBarWidth, ), {, return]
[false, ;, }, if, (, this, ., maximumBarWidth, !=, that, ., maximumBarWidth, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., maximumBarWidth, !=, that, ., maximumBarWidth, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., maximumBarWidth, !=, that, ., maximumBarWidth, ), {, return, false, ;, }, if, (]
[(, this, ., maximumBarWidth, !=, that, ., maximumBarWidth, ), {, return, false, ;, }, if, (, this, ., meanVisible, !=]
[(, this, ., maximumBarWidth, !=, that, ., maximumBarWidth, ), {, return, false, ;, }, if, (, this, ., meanVisible, !=]
[., maximumBarWidth, ), {, return, false, ;, }, if, (, this, ., meanVisible, !=, that, ., meanVisible, ), {, return]
[false, ;, }, if, (, this, ., meanVisible, !=, that, ., meanVisible, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., meanVisible, !=, that, ., meanVisible, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., meanVisible, !=, that, ., meanVisible, ), {, return, false, ;, }, if, (]
[(, this, ., meanVisible, !=, that, ., meanVisible, ), {, return, false, ;, }, if, (, this, ., medianVisible, !=]
[(, this, ., meanVisible, !=, that, ., meanVisible, ), {, return, false, ;, }, if, (, this, ., medianVisible, !=]
[., meanVisible, ), {, return, false, ;, }, if, (, this, ., medianVisible, !=, that, ., medianVisible, ), {, return]
[false, ;, }, if, (, this, ., medianVisible, !=, that, ., medianVisible, ), {, return, false, ;, }, if, (]
[;, }, if, (, this, ., medianVisible, !=, that, ., medianVisible, ), {, return, false, ;, }, if, (, !]
[;, }, if, (, this, ., medianVisible, !=, that, ., medianVisible, ), {, return, false, ;, }, if, (, !]
[this, ., medianVisible, !=, that, ., medianVisible, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (]
[this, ., medianVisible, !=, that, ., medianVisible, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (]
[that, ., medianVisible, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., artifactPaint, ,]
[that, ., medianVisible, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., artifactPaint, ,]
[;, }, if, (, !, PaintUtilities, ., equal, (, this, ., artifactPaint, ,, that, ., artifactPaint, ), ), {, return]
[!, PaintUtilities, ., equal, (, this, ., artifactPaint, ,, that, ., artifactPaint, ), ), {, return, false, ;, }, return]
[!, PaintUtilities, ., equal, (, this, ., artifactPaint, ,, that, ., artifactPaint, ), ), {, return, false, ;, }, return]
[(, this, ., artifactPaint, ,, that, ., artifactPaint, ), ), {, return, false, ;, }, return, super, ., equals, (]
[}, return, super, ., equals, (, obj, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {]
[}, return, super, ., equals, (, obj, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {]
[obj, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;]
[obj, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;]
[private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (]
[private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (]
[ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (, this, ., artifactPaint, ,]
[this, ., artifactPaint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {]
[this, ., artifactPaint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {]
[;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;]
[;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;]
[readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., artifactPaint, =]
[readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., artifactPaint, =]
[), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., artifactPaint, =, SerialUtilities, ., readPaint, (]
