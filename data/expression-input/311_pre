[., math3, ., util, ., MathUtils, ;, class, FourthMoment, extends, ThirdMoment, implements, Serializable, {, private, static, final, long, serialVersionUID, =]
[static, final, long, serialVersionUID, =, 4763990447117157611L, ;, private, double, m4, ;, public, FourthMoment, (, ), {, super, (, ), ;]
[long, serialVersionUID, =, 4763990447117157611L, ;, private, double, m4, ;, public, FourthMoment, (, ), {, super, (, ), ;, m4, =]
[long, serialVersionUID, =, 4763990447117157611L, ;, private, double, m4, ;, public, FourthMoment, (, ), {, super, (, ), ;, m4, =]
[m4, =, Double, ., NaN, ;, }, public, FourthMoment, (, FourthMoment, original, ), throws, NullArgumentException, {, super, (, ), ;]
[Double, ., NaN, ;, }, public, FourthMoment, (, FourthMoment, original, ), throws, NullArgumentException, {, super, (, ), ;, copy, (]
[NaN, ;, }, public, FourthMoment, (, FourthMoment, original, ), throws, NullArgumentException, {, super, (, ), ;, copy, (, original, ,]
[(, original, ,, this, ), ;, }, @, Override, public, void, increment, (, final, double, d, ), {, if, (]
[(, original, ,, this, ), ;, }, @, Override, public, void, increment, (, final, double, d, ), {, if, (]
[,, this, ), ;, }, @, Override, public, void, increment, (, final, double, d, ), {, if, (, n, <]
[;, }, @, Override, public, void, increment, (, final, double, d, ), {, if, (, n, <, 1, ), {]
[@, Override, public, void, increment, (, final, double, d, ), {, if, (, n, <, 1, ), {, m4, =]
[public, void, increment, (, final, double, d, ), {, if, (, n, <, 1, ), {, m4, =, 0.0, ;]
[increment, (, final, double, d, ), {, if, (, n, <, 1, ), {, m4, =, 0.0, ;, m3, =]
[final, double, d, ), {, if, (, n, <, 1, ), {, m4, =, 0.0, ;, m3, =, 0.0, ;]
[d, ), {, if, (, n, <, 1, ), {, m4, =, 0.0, ;, m3, =, 0.0, ;, m2, =]
[{, if, (, n, <, 1, ), {, m4, =, 0.0, ;, m3, =, 0.0, ;, m2, =, 0.0, ;]
[(, n, <, 1, ), {, m4, =, 0.0, ;, m3, =, 0.0, ;, m2, =, 0.0, ;, m1, =]
[m4, =, 0.0, ;, m3, =, 0.0, ;, m2, =, 0.0, ;, m1, =, 0.0, ;, }, double, prevM3, =]
[=, 0.0, ;, m2, =, 0.0, ;, m1, =, 0.0, ;, }, double, prevM3, =, m3, ;, double, prevM2, =]
[;, m2, =, 0.0, ;, m1, =, 0.0, ;, }, double, prevM3, =, m3, ;, double, prevM2, =, m2, ;]
[;, m2, =, 0.0, ;, m1, =, 0.0, ;, }, double, prevM3, =, m3, ;, double, prevM2, =, m2, ;]
[;, m1, =, 0.0, ;, }, double, prevM3, =, m3, ;, double, prevM2, =, m2, ;, super, ., increment, (]
[double, prevM3, =, m3, ;, double, prevM2, =, m2, ;, super, ., increment, (, d, ), ;, double, n0, =]
[=, m3, ;, double, prevM2, =, m2, ;, super, ., increment, (, d, ), ;, double, n0, =, n, ;]
[;, double, prevM2, =, m2, ;, super, ., increment, (, d, ), ;, double, n0, =, n, ;, m4, =]
[;, double, prevM2, =, m2, ;, super, ., increment, (, d, ), ;, double, n0, =, n, ;, m4, =]
[;, double, prevM2, =, m2, ;, super, ., increment, (, d, ), ;, double, n0, =, n, ;, m4, =]
[;, double, prevM2, =, m2, ;, super, ., increment, (, d, ), ;, double, n0, =, n, ;, m4, =]
[prevM2, =, m2, ;, super, ., increment, (, d, ), ;, double, n0, =, n, ;, m4, =, m4, -]
[prevM2, =, m2, ;, super, ., increment, (, d, ), ;, double, n0, =, n, ;, m4, =, m4, -]
[prevM2, =, m2, ;, super, ., increment, (, d, ), ;, double, n0, =, n, ;, m4, =, m4, -]
[m2, ;, super, ., increment, (, d, ), ;, double, n0, =, n, ;, m4, =, m4, -, 4.0, *]
[super, ., increment, (, d, ), ;, double, n0, =, n, ;, m4, =, m4, -, 4.0, *, nDev, *]
[increment, (, d, ), ;, double, n0, =, n, ;, m4, =, m4, -, 4.0, *, nDev, *, prevM3, +]
[increment, (, d, ), ;, double, n0, =, n, ;, m4, =, m4, -, 4.0, *, nDev, *, prevM3, +]
[increment, (, d, ), ;, double, n0, =, n, ;, m4, =, m4, -, 4.0, *, nDev, *, prevM3, +]
[d, ), ;, double, n0, =, n, ;, m4, =, m4, -, 4.0, *, nDev, *, prevM3, +, 6.0, *]
[;, double, n0, =, n, ;, m4, =, m4, -, 4.0, *, nDev, *, prevM3, +, 6.0, *, nDevSq, *]
[n0, =, n, ;, m4, =, m4, -, 4.0, *, nDev, *, prevM3, +, 6.0, *, nDevSq, *, prevM2, +]
[n0, =, n, ;, m4, =, m4, -, 4.0, *, nDev, *, prevM3, +, 6.0, *, nDevSq, *, prevM2, +]
[=, n, ;, m4, =, m4, -, 4.0, *, nDev, *, prevM3, +, 6.0, *, nDevSq, *, prevM2, +, (]
[=, n, ;, m4, =, m4, -, 4.0, *, nDev, *, prevM3, +, 6.0, *, nDevSq, *, prevM2, +, (]
[n, ;, m4, =, m4, -, 4.0, *, nDev, *, prevM3, +, 6.0, *, nDevSq, *, prevM2, +, (, (]
[n, ;, m4, =, m4, -, 4.0, *, nDev, *, prevM3, +, 6.0, *, nDevSq, *, prevM2, +, (, (]
[m4, =, m4, -, 4.0, *, nDev, *, prevM3, +, 6.0, *, nDevSq, *, prevM2, +, (, (, n0, *]
[-, 4.0, *, nDev, *, prevM3, +, 6.0, *, nDevSq, *, prevM2, +, (, (, n0, *, n0, ), -]
[-, 4.0, *, nDev, *, prevM3, +, 6.0, *, nDevSq, *, prevM2, +, (, (, n0, *, n0, ), -]
[*, nDev, *, prevM3, +, 6.0, *, nDevSq, *, prevM2, +, (, (, n0, *, n0, ), -, 3, *]
[nDev, *, prevM3, +, 6.0, *, nDevSq, *, prevM2, +, (, (, n0, *, n0, ), -, 3, *, (]
[nDev, *, prevM3, +, 6.0, *, nDevSq, *, prevM2, +, (, (, n0, *, n0, ), -, 3, *, (]
[prevM3, +, 6.0, *, nDevSq, *, prevM2, +, (, (, n0, *, n0, ), -, 3, *, (, n0, -]
[nDevSq, *, prevM2, +, (, (, n0, *, n0, ), -, 3, *, (, n0, -, 1, ), ), *]
[*, prevM2, +, (, (, n0, *, n0, ), -, 3, *, (, n0, -, 1, ), ), *, (]
[*, prevM2, +, (, (, n0, *, n0, ), -, 3, *, (, n0, -, 1, ), ), *, (]
[*, prevM2, +, (, (, n0, *, n0, ), -, 3, *, (, n0, -, 1, ), ), *, (]
[*, prevM2, +, (, (, n0, *, n0, ), -, 3, *, (, n0, -, 1, ), ), *, (]
[+, (, (, n0, *, n0, ), -, 3, *, (, n0, -, 1, ), ), *, (, nDevSq, *]
[(, n0, *, n0, ), -, 3, *, (, n0, -, 1, ), ), *, (, nDevSq, *, nDevSq, *]
[n0, *, n0, ), -, 3, *, (, n0, -, 1, ), ), *, (, nDevSq, *, nDevSq, *, (]
[n0, *, n0, ), -, 3, *, (, n0, -, 1, ), ), *, (, nDevSq, *, nDevSq, *, (]
[n0, ), -, 3, *, (, n0, -, 1, ), ), *, (, nDevSq, *, nDevSq, *, (, n0, -]
[3, *, (, n0, -, 1, ), ), *, (, nDevSq, *, nDevSq, *, (, n0, -, 1, ), *]
[*, (, n0, -, 1, ), *, n0, ), ;, }, @, Override, public, double, getResult, (, ), {, return]
[@, Override, public, double, getResult, (, ), {, return, m4, ;, }, @, Override, public, void, clear, (, ), {]
[@, Override, public, double, getResult, (, ), {, return, m4, ;, }, @, Override, public, void, clear, (, ), {]
[), {, return, m4, ;, }, @, Override, public, void, clear, (, ), {, super, ., clear, (, ), ;]
[return, m4, ;, }, @, Override, public, void, clear, (, ), {, super, ., clear, (, ), ;, m4, =]
[return, m4, ;, }, @, Override, public, void, clear, (, ), {, super, ., clear, (, ), ;, m4, =]
[), ;, m4, =, Double, ., NaN, ;, }, @, Override, public, FourthMoment, copy, (, ), {, FourthMoment, result, =]
[., NaN, ;, }, @, Override, public, FourthMoment, copy, (, ), {, FourthMoment, result, =, new, FourthMoment, (, ), ;]
[;, }, @, Override, public, FourthMoment, copy, (, ), {, FourthMoment, result, =, new, FourthMoment, (, ), ;, copy, (]
[@, Override, public, FourthMoment, copy, (, ), {, FourthMoment, result, =, new, FourthMoment, (, ), ;, copy, (, this, ,]
[copy, (, ), {, FourthMoment, result, =, new, FourthMoment, (, ), ;, copy, (, this, ,, result, ), ;, return]
[), ;, return, result, ;, }, public, static, void, copy, (, FourthMoment, source, ,, FourthMoment, dest, ), throws, NullArgumentException, {]
[), ;, return, result, ;, }, public, static, void, copy, (, FourthMoment, source, ,, FourthMoment, dest, ), throws, NullArgumentException, {]
[;, }, public, static, void, copy, (, FourthMoment, source, ,, FourthMoment, dest, ), throws, NullArgumentException, {, MathUtils, ., checkNotNull, (]
[static, void, copy, (, FourthMoment, source, ,, FourthMoment, dest, ), throws, NullArgumentException, {, MathUtils, ., checkNotNull, (, source, ), ;]
[static, void, copy, (, FourthMoment, source, ,, FourthMoment, dest, ), throws, NullArgumentException, {, MathUtils, ., checkNotNull, (, source, ), ;]
[FourthMoment, source, ,, FourthMoment, dest, ), throws, NullArgumentException, {, MathUtils, ., checkNotNull, (, source, ), ;, MathUtils, ., checkNotNull, (]
[FourthMoment, dest, ), throws, NullArgumentException, {, MathUtils, ., checkNotNull, (, source, ), ;, MathUtils, ., checkNotNull, (, dest, ), ;]
[FourthMoment, dest, ), throws, NullArgumentException, {, MathUtils, ., checkNotNull, (, source, ), ;, MathUtils, ., checkNotNull, (, dest, ), ;]
[NullArgumentException, {, MathUtils, ., checkNotNull, (, source, ), ;, MathUtils, ., checkNotNull, (, dest, ), ;, ThirdMoment, ., copy, (]
[MathUtils, ., checkNotNull, (, source, ), ;, MathUtils, ., checkNotNull, (, dest, ), ;, ThirdMoment, ., copy, (, source, ,]
[(, source, ), ;, MathUtils, ., checkNotNull, (, dest, ), ;, ThirdMoment, ., copy, (, source, ,, dest, ), ;]
[(, source, ), ;, MathUtils, ., checkNotNull, (, dest, ), ;, ThirdMoment, ., copy, (, source, ,, dest, ), ;]
[MathUtils, ., checkNotNull, (, dest, ), ;, ThirdMoment, ., copy, (, source, ,, dest, ), ;, dest, ., m4, =]
[MathUtils, ., checkNotNull, (, dest, ), ;, ThirdMoment, ., copy, (, source, ,, dest, ), ;, dest, ., m4, =]
