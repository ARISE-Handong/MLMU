[DescribedInvocation, ;, import, org, ., mockito, ., invocation, ., Invocation, ;, import, org, ., mockito, ., invocation, ., Location, ;]
[org, ., mockito, ., invocation, ., Invocation, ;, import, org, ., mockito, ., invocation, ., Location, ;, @, SuppressWarnings, (]
[SuppressWarnings, (, "unchecked", ), public, class, InvocationMatcher, implements, DescribedInvocation, ,, CapturesArgumensFromInvocation, ,, Serializable, {, private, static, final, long, serialVersionUID, =]
[(, "unchecked", ), public, class, InvocationMatcher, implements, DescribedInvocation, ,, CapturesArgumensFromInvocation, ,, Serializable, {, private, static, final, long, serialVersionUID, =, -]
[final, List, <, Matcher, >, matchers, ;, public, InvocationMatcher, (, Invocation, invocation, ,, List, <, Matcher, >, matchers, ), {]
[final, List, <, Matcher, >, matchers, ;, public, InvocationMatcher, (, Invocation, invocation, ,, List, <, Matcher, >, matchers, ), {]
[>, matchers, ;, public, InvocationMatcher, (, Invocation, invocation, ,, List, <, Matcher, >, matchers, ), {, this, ., invocation, =]
[InvocationMatcher, (, Invocation, invocation, ,, List, <, Matcher, >, matchers, ), {, this, ., invocation, =, invocation, ;, if, (]
[InvocationMatcher, (, Invocation, invocation, ,, List, <, Matcher, >, matchers, ), {, this, ., invocation, =, invocation, ;, if, (]
[Matcher, >, matchers, ), {, this, ., invocation, =, invocation, ;, if, (, matchers, ., isEmpty, (, ), ), {]
[Matcher, >, matchers, ), {, this, ., invocation, =, invocation, ;, if, (, matchers, ., isEmpty, (, ), ), {]
[{, this, ., invocation, =, invocation, ;, if, (, matchers, ., isEmpty, (, ), ), {, this, ., matchers, =]
[{, this, ., invocation, =, invocation, ;, if, (, matchers, ., isEmpty, (, ), ), {, this, ., matchers, =]
[=, invocation, ;, if, (, matchers, ., isEmpty, (, ), ), {, this, ., matchers, =, ArgumentsProcessor, ., argumentsToMatchers, (]
[=, invocation, ;, if, (, matchers, ., isEmpty, (, ), ), {, this, ., matchers, =, ArgumentsProcessor, ., argumentsToMatchers, (]
[), {, this, ., matchers, =, ArgumentsProcessor, ., argumentsToMatchers, (, invocation, ., getArguments, (, ), ), ;, }, else, {]
[), {, this, ., matchers, =, ArgumentsProcessor, ., argumentsToMatchers, (, invocation, ., getArguments, (, ), ), ;, }, else, {]
[matchers, =, ArgumentsProcessor, ., argumentsToMatchers, (, invocation, ., getArguments, (, ), ), ;, }, else, {, this, ., matchers, =]
[}, else, {, this, ., matchers, =, matchers, ;, }, }, public, InvocationMatcher, (, Invocation, invocation, ), {, this, (]
[{, this, ., matchers, =, matchers, ;, }, }, public, InvocationMatcher, (, Invocation, invocation, ), {, this, (, invocation, ,]
[{, this, ., matchers, =, matchers, ;, }, }, public, InvocationMatcher, (, Invocation, invocation, ), {, this, (, invocation, ,]
[invocation, ,, Collections, ., <, Matcher, >, emptyList, (, ), ), ;, }, public, Method, getMethod, (, ), {, return]
[invocation, ,, Collections, ., <, Matcher, >, emptyList, (, ), ), ;, }, public, Method, getMethod, (, ), {, return]
[Method, getMethod, (, ), {, return, invocation, ., getMethod, (, ), ;, }, public, Invocation, getInvocation, (, ), {, return]
[Method, getMethod, (, ), {, return, invocation, ., getMethod, (, ), ;, }, public, Invocation, getInvocation, (, ), {, return]
[getInvocation, (, ), {, return, this, ., invocation, ;, }, public, List, <, Matcher, >, getMatchers, (, ), {, return]
[getInvocation, (, ), {, return, this, ., invocation, ;, }, public, List, <, Matcher, >, getMatchers, (, ), {, return]
[<, Matcher, >, getMatchers, (, ), {, return, this, ., matchers, ;, }, public, String, toString, (, ), {, return]
[<, Matcher, >, getMatchers, (, ), {, return, this, ., matchers, ;, }, public, String, toString, (, ), {, return]
[return, this, ., matchers, ;, }, public, String, toString, (, ), {, return, new, PrintSettings, (, ), ., print, (]
[., matchers, ;, }, public, String, toString, (, ), {, return, new, PrintSettings, (, ), ., print, (, matchers, ,]
[(, ), ., print, (, matchers, ,, invocation, ), ;, }, public, boolean, matches, (, Invocation, actual, ), {, return]
[(, ), ., print, (, matchers, ,, invocation, ), ;, }, public, boolean, matches, (, Invocation, actual, ), {, return]
[(, ), ., print, (, matchers, ,, invocation, ), ;, }, public, boolean, matches, (, Invocation, actual, ), {, return]
[(, ), ., print, (, matchers, ,, invocation, ), ;, }, public, boolean, matches, (, Invocation, actual, ), {, return]
[(, ), ., print, (, matchers, ,, invocation, ), ;, }, public, boolean, matches, (, Invocation, actual, ), {, return]
[), ;, }, public, boolean, matches, (, Invocation, actual, ), {, return, invocation, ., getMock, (, ), ., equals, (]
[), ;, }, public, boolean, matches, (, Invocation, actual, ), {, return, invocation, ., getMock, (, ), ., equals, (]
[Invocation, actual, ), {, return, invocation, ., getMock, (, ), ., equals, (, actual, ., getMock, (, ), ), &&]
[), {, return, invocation, ., getMock, (, ), ., equals, (, actual, ., getMock, (, ), ), &&, hasSameMethod, (]
[invocation, ., getMock, (, ), ., equals, (, actual, ., getMock, (, ), ), &&, hasSameMethod, (, actual, ), &&]
[invocation, ., getMock, (, ), ., equals, (, actual, ., getMock, (, ), ), &&, hasSameMethod, (, actual, ), &&]
[(, actual, ., getMock, (, ), ), &&, hasSameMethod, (, actual, ), &&, new, ArgumentsComparator, (, ), ., argumentsMatch, (]
[., getMock, (, ), ), &&, hasSameMethod, (, actual, ), &&, new, ArgumentsComparator, (, ), ., argumentsMatch, (, this, ,]
[(, this, ,, actual, ), ;, }, private, boolean, safelyArgumentsMatch, (, Object, [, ], actualArgs, ), {, try, {, return]
[(, this, ,, actual, ), ;, }, private, boolean, safelyArgumentsMatch, (, Object, [, ], actualArgs, ), {, try, {, return]
[private, boolean, safelyArgumentsMatch, (, Object, [, ], actualArgs, ), {, try, {, return, new, ArgumentsComparator, (, ), ., argumentsMatch, (]
[safelyArgumentsMatch, (, Object, [, ], actualArgs, ), {, try, {, return, new, ArgumentsComparator, (, ), ., argumentsMatch, (, this, ,]
[new, ArgumentsComparator, (, ), ., argumentsMatch, (, this, ,, actualArgs, ), ;, }, catch, (, Throwable, t, ), {, return]
[Throwable, t, ), {, return, false, ;, }, }, public, boolean, hasSimilarMethod, (, Invocation, candidate, ), {, String, wantedMethodName, =]
[Throwable, t, ), {, return, false, ;, }, }, public, boolean, hasSimilarMethod, (, Invocation, candidate, ), {, String, wantedMethodName, =]
[hasSimilarMethod, (, Invocation, candidate, ), {, String, wantedMethodName, =, getMethod, (, ), ., getName, (, ), ;, String, currentMethodName, =]
[hasSimilarMethod, (, Invocation, candidate, ), {, String, wantedMethodName, =, getMethod, (, ), ., getName, (, ), ;, String, currentMethodName, =]
[hasSimilarMethod, (, Invocation, candidate, ), {, String, wantedMethodName, =, getMethod, (, ), ., getName, (, ), ;, String, currentMethodName, =]
[(, ), ;, String, currentMethodName, =, candidate, ., getMethod, (, ), ., getName, (, ), ;, final, boolean, methodNameEquals, =]
[(, ), ;, String, currentMethodName, =, candidate, ., getMethod, (, ), ., getName, (, ), ;, final, boolean, methodNameEquals, =]
[currentMethodName, =, candidate, ., getMethod, (, ), ., getName, (, ), ;, final, boolean, methodNameEquals, =, wantedMethodName, ., equals, (]
[., getName, (, ), ;, final, boolean, methodNameEquals, =, wantedMethodName, ., equals, (, currentMethodName, ), ;, final, boolean, isUnverified, =]
[getName, (, ), ;, final, boolean, methodNameEquals, =, wantedMethodName, ., equals, (, currentMethodName, ), ;, final, boolean, isUnverified, =, !]
[getName, (, ), ;, final, boolean, methodNameEquals, =, wantedMethodName, ., equals, (, currentMethodName, ), ;, final, boolean, isUnverified, =, !]
[equals, (, currentMethodName, ), ;, final, boolean, isUnverified, =, !, candidate, ., isVerified, (, ), ;, final, boolean, mockIsTheSame, =]
[equals, (, currentMethodName, ), ;, final, boolean, isUnverified, =, !, candidate, ., isVerified, (, ), ;, final, boolean, mockIsTheSame, =]
[equals, (, currentMethodName, ), ;, final, boolean, isUnverified, =, !, candidate, ., isVerified, (, ), ;, final, boolean, mockIsTheSame, =]
[=, !, candidate, ., isVerified, (, ), ;, final, boolean, mockIsTheSame, =, getInvocation, (, ), ., getMock, (, ), ==]
[=, !, candidate, ., isVerified, (, ), ;, final, boolean, mockIsTheSame, =, getInvocation, (, ), ., getMock, (, ), ==]
[mockIsTheSame, =, getInvocation, (, ), ., getMock, (, ), ==, candidate, ., getMock, (, ), ;, final, boolean, methodEquals, =]
[getInvocation, (, ), ., getMock, (, ), ==, candidate, ., getMock, (, ), ;, final, boolean, methodEquals, =, hasSameMethod, (]
[(, ), ==, candidate, ., getMock, (, ), ;, final, boolean, methodEquals, =, hasSameMethod, (, candidate, ), ;, if, (]
[(, ), ==, candidate, ., getMock, (, ), ;, final, boolean, methodEquals, =, hasSameMethod, (, candidate, ), ;, if, (]
[(, ), ==, candidate, ., getMock, (, ), ;, final, boolean, methodEquals, =, hasSameMethod, (, candidate, ), ;, if, (]
[), ==, candidate, ., getMock, (, ), ;, final, boolean, methodEquals, =, hasSameMethod, (, candidate, ), ;, if, (, !]
[candidate, ., getMock, (, ), ;, final, boolean, methodEquals, =, hasSameMethod, (, candidate, ), ;, if, (, !, methodNameEquals, ||]
[., getMock, (, ), ;, final, boolean, methodEquals, =, hasSameMethod, (, candidate, ), ;, if, (, !, methodNameEquals, ||, !]
[(, ), ;, final, boolean, methodEquals, =, hasSameMethod, (, candidate, ), ;, if, (, !, methodNameEquals, ||, !, isUnverified, ||]
[), ;, final, boolean, methodEquals, =, hasSameMethod, (, candidate, ), ;, if, (, !, methodNameEquals, ||, !, isUnverified, ||, !]
[methodEquals, =, hasSameMethod, (, candidate, ), ;, if, (, !, methodNameEquals, ||, !, isUnverified, ||, !, mockIsTheSame, ), {, return]
[if, (, !, methodNameEquals, ||, !, isUnverified, ||, !, mockIsTheSame, ), {, return, false, ;, }, final, boolean, overloadedButSameArgs, =]
[if, (, !, methodNameEquals, ||, !, isUnverified, ||, !, mockIsTheSame, ), {, return, false, ;, }, final, boolean, overloadedButSameArgs, =]
[(, !, methodNameEquals, ||, !, isUnverified, ||, !, mockIsTheSame, ), {, return, false, ;, }, final, boolean, overloadedButSameArgs, =, !]
[methodNameEquals, ||, !, isUnverified, ||, !, mockIsTheSame, ), {, return, false, ;, }, final, boolean, overloadedButSameArgs, =, !, methodEquals, &&]
[!, isUnverified, ||, !, mockIsTheSame, ), {, return, false, ;, }, final, boolean, overloadedButSameArgs, =, !, methodEquals, &&, safelyArgumentsMatch, (]
[!, isUnverified, ||, !, mockIsTheSame, ), {, return, false, ;, }, final, boolean, overloadedButSameArgs, =, !, methodEquals, &&, safelyArgumentsMatch, (]
[false, ;, }, final, boolean, overloadedButSameArgs, =, !, methodEquals, &&, safelyArgumentsMatch, (, candidate, ., getArguments, (, ), ), ;, return]
[;, }, final, boolean, overloadedButSameArgs, =, !, methodEquals, &&, safelyArgumentsMatch, (, candidate, ., getArguments, (, ), ), ;, return, !]
[(, ), ), ;, return, !, overloadedButSameArgs, ;, }, public, boolean, hasSameMethod, (, Invocation, candidate, ), {, Method, m1, =]
[(, ), ), ;, return, !, overloadedButSameArgs, ;, }, public, boolean, hasSameMethod, (, Invocation, candidate, ), {, Method, m1, =]
[public, boolean, hasSameMethod, (, Invocation, candidate, ), {, Method, m1, =, invocation, ., getMethod, (, ), ;, Method, m2, =]
[public, boolean, hasSameMethod, (, Invocation, candidate, ), {, Method, m1, =, invocation, ., getMethod, (, ), ;, Method, m2, =]
[Method, m1, =, invocation, ., getMethod, (, ), ;, Method, m2, =, candidate, ., getMethod, (, ), ;, if, (]
[Method, m1, =, invocation, ., getMethod, (, ), ;, Method, m2, =, candidate, ., getMethod, (, ), ;, if, (]
[Method, m1, =, invocation, ., getMethod, (, ), ;, Method, m2, =, candidate, ., getMethod, (, ), ;, if, (]
[Method, m1, =, invocation, ., getMethod, (, ), ;, Method, m2, =, candidate, ., getMethod, (, ), ;, if, (]
[(, ), ;, Method, m2, =, candidate, ., getMethod, (, ), ;, if, (, m1, ., getName, (, ), !=]
[;, Method, m2, =, candidate, ., getMethod, (, ), ;, if, (, m1, ., getName, (, ), !=, null, &&]
[;, Method, m2, =, candidate, ., getMethod, (, ), ;, if, (, m1, ., getName, (, ), !=, null, &&]
[;, Method, m2, =, candidate, ., getMethod, (, ), ;, if, (, m1, ., getName, (, ), !=, null, &&]
[), ;, if, (, m1, ., getName, (, ), !=, null, &&, m1, ., getName, (, ), ., equals, (]
[), ;, if, (, m1, ., getName, (, ), !=, null, &&, m1, ., getName, (, ), ., equals, (]
[., getName, (, ), ., equals, (, m2, ., getName, (, ), ), ), {, Class, [, ], params1, =]
[., getName, (, ), ., equals, (, m2, ., getName, (, ), ), ), {, Class, [, ], params1, =]
[), ), ), {, Class, [, ], params1, =, m1, ., getParameterTypes, (, ), ;, Class, [, ], params2, =]
[), ), ), {, Class, [, ], params1, =, m1, ., getParameterTypes, (, ), ;, Class, [, ], params2, =]
[=, m1, ., getParameterTypes, (, ), ;, Class, [, ], params2, =, m2, ., getParameterTypes, (, ), ;, if, (]
[=, m1, ., getParameterTypes, (, ), ;, Class, [, ], params2, =, m2, ., getParameterTypes, (, ), ;, if, (]
[=, m1, ., getParameterTypes, (, ), ;, Class, [, ], params2, =, m2, ., getParameterTypes, (, ), ;, if, (]
[(, ), ;, Class, [, ], params2, =, m2, ., getParameterTypes, (, ), ;, if, (, params1, ., length, ==]
[(, ), ;, Class, [, ], params2, =, m2, ., getParameterTypes, (, ), ;, if, (, params1, ., length, ==]
[getParameterTypes, (, ), ;, if, (, params1, ., length, ==, params2, ., length, ), {, for, (, int, i, =]
[), ;, if, (, params1, ., length, ==, params2, ., length, ), {, for, (, int, i, =, 0, ;]
[), ;, if, (, params1, ., length, ==, params2, ., length, ), {, for, (, int, i, =, 0, ;]
[if, (, params1, ., length, ==, params2, ., length, ), {, for, (, int, i, =, 0, ;, i, <]
[if, (, params1, ., length, ==, params2, ., length, ), {, for, (, int, i, =, 0, ;, i, <]
[length, ==, params2, ., length, ), {, for, (, int, i, =, 0, ;, i, <, params1, ., length, ;]
[length, ==, params2, ., length, ), {, for, (, int, i, =, 0, ;, i, <, params1, ., length, ;]
[{, for, (, int, i, =, 0, ;, i, <, params1, ., length, ;, i, ++, ), {, if, (]
[{, for, (, int, i, =, 0, ;, i, <, params1, ., length, ;, i, ++, ), {, if, (]
[{, for, (, int, i, =, 0, ;, i, <, params1, ., length, ;, i, ++, ), {, if, (]
[(, int, i, =, 0, ;, i, <, params1, ., length, ;, i, ++, ), {, if, (, params1, []
[=, 0, ;, i, <, params1, ., length, ;, i, ++, ), {, if, (, params1, [, i, ], !=]
[=, 0, ;, i, <, params1, ., length, ;, i, ++, ), {, if, (, params1, [, i, ], !=]
[;, i, <, params1, ., length, ;, i, ++, ), {, if, (, params1, [, i, ], !=, params2, []
[., length, ;, i, ++, ), {, if, (, params1, [, i, ], !=, params2, [, i, ], ), return]
[++, ), {, if, (, params1, [, i, ], !=, params2, [, i, ], ), return, false, ;, }, return]
[params1, [, i, ], !=, params2, [, i, ], ), return, false, ;, }, return, true, ;, }, }, return]
[return, false, ;, }, return, true, ;, }, }, return, false, ;, }, public, Location, getLocation, (, ), {, return]
[return, false, ;, }, return, true, ;, }, }, return, false, ;, }, public, Location, getLocation, (, ), {, return]
[), {, return, invocation, ., getLocation, (, ), ;, }, public, void, captureArgumentsFrom, (, Invocation, invocation, ), {, if, (]
[), {, return, invocation, ., getLocation, (, ), ;, }, public, void, captureArgumentsFrom, (, Invocation, invocation, ), {, if, (]
[), {, return, invocation, ., getLocation, (, ), ;, }, public, void, captureArgumentsFrom, (, Invocation, invocation, ), {, if, (]
[Invocation, invocation, ), {, if, (, invocation, ., getMethod, (, ), ., isVarArgs, (, ), ), {, int, indexOfVararg, =]
[Invocation, invocation, ), {, if, (, invocation, ., getMethod, (, ), ., isVarArgs, (, ), ), {, int, indexOfVararg, =]
[Invocation, invocation, ), {, if, (, invocation, ., getMethod, (, ), ., isVarArgs, (, ), ), {, int, indexOfVararg, =]
[Invocation, invocation, ), {, if, (, invocation, ., getMethod, (, ), ., isVarArgs, (, ), ), {, int, indexOfVararg, =]
[getMethod, (, ), ., isVarArgs, (, ), ), {, int, indexOfVararg, =, invocation, ., getRawArguments, (, ), ., length, -]
[., isVarArgs, (, ), ), {, int, indexOfVararg, =, invocation, ., getRawArguments, (, ), ., length, -, 1, ;, throw]
[), ., length, -, 1, ;, throw, new, UnsupportedOperationException, (, ), ;, }, else, {, for, (, int, position, =]
[length, -, 1, ;, throw, new, UnsupportedOperationException, (, ), ;, }, else, {, for, (, int, position, =, 0, ;]
[length, -, 1, ;, throw, new, UnsupportedOperationException, (, ), ;, }, else, {, for, (, int, position, =, 0, ;]
[1, ;, throw, new, UnsupportedOperationException, (, ), ;, }, else, {, for, (, int, position, =, 0, ;, position, <]
[1, ;, throw, new, UnsupportedOperationException, (, ), ;, }, else, {, for, (, int, position, =, 0, ;, position, <]
[), ;, }, else, {, for, (, int, position, =, 0, ;, position, <, matchers, ., size, (, ), ;]
[), ;, }, else, {, for, (, int, position, =, 0, ;, position, <, matchers, ., size, (, ), ;]
[int, position, =, 0, ;, position, <, matchers, ., size, (, ), ;, position, ++, ), {, Matcher, m, =]
[int, position, =, 0, ;, position, <, matchers, ., size, (, ), ;, position, ++, ), {, Matcher, m, =]
[;, position, <, matchers, ., size, (, ), ;, position, ++, ), {, Matcher, m, =, matchers, ., get, (]
[size, (, ), ;, position, ++, ), {, Matcher, m, =, matchers, ., get, (, position, ), ;, if, (]
[size, (, ), ;, position, ++, ), {, Matcher, m, =, matchers, ., get, (, position, ), ;, if, (]
[++, ), {, Matcher, m, =, matchers, ., get, (, position, ), ;, if, (, m, instanceof, CapturesArguments, ), {]
[++, ), {, Matcher, m, =, matchers, ., get, (, position, ), ;, if, (, m, instanceof, CapturesArguments, ), {]
[), {, Matcher, m, =, matchers, ., get, (, position, ), ;, if, (, m, instanceof, CapturesArguments, ), {, (]
[m, =, matchers, ., get, (, position, ), ;, if, (, m, instanceof, CapturesArguments, ), {, (, (, CapturesArguments, )]
[(, position, ), ;, if, (, m, instanceof, CapturesArguments, ), {, (, (, CapturesArguments, ), m, ), ., captureFrom, (]
[(, position, ), ;, if, (, m, instanceof, CapturesArguments, ), {, (, (, CapturesArguments, ), m, ), ., captureFrom, (]
[if, (, m, instanceof, CapturesArguments, ), {, (, (, CapturesArguments, ), m, ), ., captureFrom, (, invocation, ., getArgumentAt, (]
[m, instanceof, CapturesArguments, ), {, (, (, CapturesArguments, ), m, ), ., captureFrom, (, invocation, ., getArgumentAt, (, position, ,]
[., class, ), ), ;, }, }, }, }, private, boolean, isVarargMatcher, (, Matcher, matcher, ), {, Matcher, actualMatcher, =]
[;, }, }, }, }, private, boolean, isVarargMatcher, (, Matcher, matcher, ), {, Matcher, actualMatcher, =, matcher, ;, if, (]
[;, }, }, }, }, private, boolean, isVarargMatcher, (, Matcher, matcher, ), {, Matcher, actualMatcher, =, matcher, ;, if, (]
[private, boolean, isVarargMatcher, (, Matcher, matcher, ), {, Matcher, actualMatcher, =, matcher, ;, if, (, actualMatcher, instanceof, MatcherDecorator, ), {]
[isVarargMatcher, (, Matcher, matcher, ), {, Matcher, actualMatcher, =, matcher, ;, if, (, actualMatcher, instanceof, MatcherDecorator, ), {, actualMatcher, =]
[isVarargMatcher, (, Matcher, matcher, ), {, Matcher, actualMatcher, =, matcher, ;, if, (, actualMatcher, instanceof, MatcherDecorator, ), {, actualMatcher, =]
[(, Matcher, matcher, ), {, Matcher, actualMatcher, =, matcher, ;, if, (, actualMatcher, instanceof, MatcherDecorator, ), {, actualMatcher, =, (]
[), {, Matcher, actualMatcher, =, matcher, ;, if, (, actualMatcher, instanceof, MatcherDecorator, ), {, actualMatcher, =, (, (, MatcherDecorator, )]
[actualMatcher, instanceof, MatcherDecorator, ), {, actualMatcher, =, (, (, MatcherDecorator, ), actualMatcher, ), ., getActualMatcher, (, ), ;, }, return]
[actualMatcher, instanceof, MatcherDecorator, ), {, actualMatcher, =, (, (, MatcherDecorator, ), actualMatcher, ), ., getActualMatcher, (, ), ;, }, return]
[;, }, return, actualMatcher, instanceof, VarargMatcher, ;, }, private, boolean, isVariableArgument, (, Invocation, invocation, ,, int, position, ), {, return]
[;, }, return, actualMatcher, instanceof, VarargMatcher, ;, }, private, boolean, isVariableArgument, (, Invocation, invocation, ,, int, position, ), {, return]
[;, }, return, actualMatcher, instanceof, VarargMatcher, ;, }, private, boolean, isVariableArgument, (, Invocation, invocation, ,, int, position, ), {, return]
[;, }, return, actualMatcher, instanceof, VarargMatcher, ;, }, private, boolean, isVariableArgument, (, Invocation, invocation, ,, int, position, ), {, return]
[;, }, return, actualMatcher, instanceof, VarargMatcher, ;, }, private, boolean, isVariableArgument, (, Invocation, invocation, ,, int, position, ), {, return]
[;, }, return, actualMatcher, instanceof, VarargMatcher, ;, }, private, boolean, isVariableArgument, (, Invocation, invocation, ,, int, position, ), {, return]
[;, }, return, actualMatcher, instanceof, VarargMatcher, ;, }, private, boolean, isVariableArgument, (, Invocation, invocation, ,, int, position, ), {, return]
[;, }, return, actualMatcher, instanceof, VarargMatcher, ;, }, private, boolean, isVariableArgument, (, Invocation, invocation, ,, int, position, ), {, return]
[private, boolean, isVariableArgument, (, Invocation, invocation, ,, int, position, ), {, return, invocation, ., getRawArguments, (, ), ., length, -]
[isVariableArgument, (, Invocation, invocation, ,, int, position, ), {, return, invocation, ., getRawArguments, (, ), ., length, -, 1, ==]
[Invocation, invocation, ,, int, position, ), {, return, invocation, ., getRawArguments, (, ), ., length, -, 1, ==, position, &&]
[Invocation, invocation, ,, int, position, ), {, return, invocation, ., getRawArguments, (, ), ., length, -, 1, ==, position, &&]
[Invocation, invocation, ,, int, position, ), {, return, invocation, ., getRawArguments, (, ), ., length, -, 1, ==, position, &&]
[Invocation, invocation, ,, int, position, ), {, return, invocation, ., getRawArguments, (, ), ., length, -, 1, ==, position, &&]
[{, return, invocation, ., getRawArguments, (, ), ., length, -, 1, ==, position, &&, invocation, ., getRawArguments, (, ), []
[., getRawArguments, (, ), ., length, -, 1, ==, position, &&, invocation, ., getRawArguments, (, ), [, position, ], !=]
[(, ), ., length, -, 1, ==, position, &&, invocation, ., getRawArguments, (, ), [, position, ], !=, null, &&]
[(, ), ., length, -, 1, ==, position, &&, invocation, ., getRawArguments, (, ), [, position, ], !=, null, &&]
[(, ), ., length, -, 1, ==, position, &&, invocation, ., getRawArguments, (, ), [, position, ], !=, null, &&]
[(, ), ., length, -, 1, ==, position, &&, invocation, ., getRawArguments, (, ), [, position, ], !=, null, &&]
[(, ), ., length, -, 1, ==, position, &&, invocation, ., getRawArguments, (, ), [, position, ], !=, null, &&]
[==, position, &&, invocation, ., getRawArguments, (, ), [, position, ], !=, null, &&, invocation, ., getRawArguments, (, ), []
[!=, null, &&, invocation, ., getRawArguments, (, ), [, position, ], ., getClass, (, ), ., isArray, (, ), &&]
[!=, null, &&, invocation, ., getRawArguments, (, ), [, position, ], ., getClass, (, ), ., isArray, (, ), &&]
[!=, null, &&, invocation, ., getRawArguments, (, ), [, position, ], ., getClass, (, ), ., isArray, (, ), &&]
[static, List, <, InvocationMatcher, >, createFrom, (, List, <, Invocation, >, invocations, ), {, LinkedList, <, InvocationMatcher, >, out, =]
[{, LinkedList, <, InvocationMatcher, >, out, =, new, LinkedList, <, InvocationMatcher, >, (, ), ;, for, (, Invocation, i, :]
[InvocationMatcher, >, out, =, new, LinkedList, <, InvocationMatcher, >, (, ), ;, for, (, Invocation, i, :, invocations, ), {]
[InvocationMatcher, >, out, =, new, LinkedList, <, InvocationMatcher, >, (, ), ;, for, (, Invocation, i, :, invocations, ), {]
[new, LinkedList, <, InvocationMatcher, >, (, ), ;, for, (, Invocation, i, :, invocations, ), {, out, ., add, (]
[InvocationMatcher, >, (, ), ;, for, (, Invocation, i, :, invocations, ), {, out, ., add, (, new, InvocationMatcher, (]
[(, Invocation, i, :, invocations, ), {, out, ., add, (, new, InvocationMatcher, (, i, ), ), ;, }, return]
