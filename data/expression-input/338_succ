[;, public, CategoryAxis3D, (, ), {, this, (, null, ), ;, }, public, CategoryAxis3D, (, String, label, ), {, super]
[), ;, }, public, CategoryAxis3D, (, String, label, ), {, super, (, label, ), ;, }, public, AxisState, draw, (]
[), ;, }, public, AxisState, draw, (, Graphics2D, g2, ,, double, cursor, ,, Rectangle2D, plotArea, ,, Rectangle2D, dataArea, ,, RectangleEdge]
[), {, return, new, AxisState, (, cursor, ), ;, }, CategoryPlot, plot, =, (, CategoryPlot, ), getPlot, (, ), ;]
[), {, return, new, AxisState, (, cursor, ), ;, }, CategoryPlot, plot, =, (, CategoryPlot, ), getPlot, (, ), ;]
[;, }, CategoryPlot, plot, =, (, CategoryPlot, ), getPlot, (, ), ;, Rectangle2D, adjustedDataArea, =, new, Rectangle2D, ., Double, (]
[), ;, }, CategoryPlot, plot, =, (, CategoryPlot, ), getPlot, (, ), ;, Rectangle2D, adjustedDataArea, =, new, Rectangle2D, ., Double]
[;, Rectangle2D, adjustedDataArea, =, new, Rectangle2D, ., Double, (, ), ;, if, (, plot, ., getRenderer, (, ), instanceof, Effect3D]
[;, Rectangle2D, adjustedDataArea, =, new, Rectangle2D, ., Double, (, ), ;, if, (, plot, ., getRenderer, (, ), instanceof, Effect3D]
[;, if, (, plot, ., getRenderer, (, ), instanceof, Effect3D, ), {, Effect3D, e3D, =, (, Effect3D, ), plot, .]
[), {, Effect3D, e3D, =, (, Effect3D, ), plot, ., getRenderer, (, ), ;, double, adjustedX, =, dataArea, ., getMinX]
[instanceof, Effect3D, ), {, Effect3D, e3D, =, (, Effect3D, ), plot, ., getRenderer, (, ), ;, double, adjustedX, =, dataArea]
[., getRenderer, (, ), instanceof, Effect3D, ), {, Effect3D, e3D, =, (, Effect3D, ), plot, ., getRenderer, (, ), ;]
[;, double, adjustedX, =, dataArea, ., getMinX, (, ), ;, double, adjustedY, =, dataArea, ., getMinY, (, ), ;, double]
[;, double, adjustedX, =, dataArea, ., getMinX, (, ), ;, double, adjustedY, =, dataArea, ., getMinY, (, ), ;, double]
[., getRenderer, (, ), ;, double, adjustedX, =, dataArea, ., getMinX, (, ), ;, double, adjustedY, =, dataArea, ., getMinY]
[;, double, adjustedY, =, dataArea, ., getMinY, (, ), ;, double, adjustedW, =, dataArea, ., getWidth, (, ), -, e3D]
[., getMinX, (, ), ;, double, adjustedY, =, dataArea, ., getMinY, (, ), ;, double, adjustedW, =, dataArea, ., getWidth]
[;, double, adjustedW, =, dataArea, ., getWidth, (, ), -, e3D, ., getXOffset, (, ), ;, double, adjustedH, =, dataArea]
[., getMinY, (, ), ;, double, adjustedW, =, dataArea, ., getWidth, (, ), -, e3D, ., getXOffset, (, ), ;]
[;, double, adjustedH, =, dataArea, ., getHeight, (, ), -, e3D, ., getYOffset, (, ), ;, if, (, edge, ==]
[-, e3D, ., getXOffset, (, ), ;, double, adjustedH, =, dataArea, ., getHeight, (, ), -, e3D, ., getYOffset, (]
[., getWidth, (, ), -, e3D, ., getXOffset, (, ), ;, double, adjustedH, =, dataArea, ., getHeight, (, ), -]
[;, double, adjustedH, =, dataArea, ., getHeight, (, ), -, e3D, ., getYOffset, (, ), ;, if, (, edge, ==]
[., getXOffset, (, ), ;, double, adjustedH, =, dataArea, ., getHeight, (, ), -, e3D, ., getYOffset, (, ), ;]
[;, if, (, edge, ==, RectangleEdge, ., LEFT, ||, edge, ==, RectangleEdge, ., BOTTOM, ), {, adjustedY, +=, e3D, .]
[-, e3D, ., getYOffset, (, ), ;, if, (, edge, ==, RectangleEdge, ., LEFT, ||, edge, ==, RectangleEdge, ., BOTTOM]
[., getHeight, (, ), -, e3D, ., getYOffset, (, ), ;, if, (, edge, ==, RectangleEdge, ., LEFT, ||, edge]
[;, if, (, edge, ==, RectangleEdge, ., LEFT, ||, edge, ==, RectangleEdge, ., BOTTOM, ), {, adjustedY, +=, e3D, .]
[., getYOffset, (, ), ;, if, (, edge, ==, RectangleEdge, ., LEFT, ||, edge, ==, RectangleEdge, ., BOTTOM, ), {]
[), {, adjustedY, +=, e3D, ., getYOffset, (, ), ;, }, else, if, (, edge, ==, RectangleEdge, ., RIGHT, ||]
[||, edge, ==, RectangleEdge, ., BOTTOM, ), {, adjustedY, +=, e3D, ., getYOffset, (, ), ;, }, else, if, (]
[==, RectangleEdge, ., LEFT, ||, edge, ==, RectangleEdge, ., BOTTOM, ), {, adjustedY, +=, e3D, ., getYOffset, (, ), ;]
[||, edge, ==, RectangleEdge, ., BOTTOM, ), {, adjustedY, +=, e3D, ., getYOffset, (, ), ;, }, else, if, (]
[., LEFT, ||, edge, ==, RectangleEdge, ., BOTTOM, ), {, adjustedY, +=, e3D, ., getYOffset, (, ), ;, }, else]
[), {, adjustedY, +=, e3D, ., getYOffset, (, ), ;, }, else, if, (, edge, ==, RectangleEdge, ., RIGHT, ||]
[==, RectangleEdge, ., BOTTOM, ), {, adjustedY, +=, e3D, ., getYOffset, (, ), ;, }, else, if, (, edge, ==]
[), {, adjustedY, +=, e3D, ., getYOffset, (, ), ;, }, else, if, (, edge, ==, RectangleEdge, ., RIGHT, ||]
[., BOTTOM, ), {, adjustedY, +=, e3D, ., getYOffset, (, ), ;, }, else, if, (, edge, ==, RectangleEdge, .]
[+=, e3D, ., getYOffset, (, ), ;, }, else, if, (, edge, ==, RectangleEdge, ., RIGHT, ||, edge, ==, RectangleEdge]
[;, }, else, if, (, edge, ==, RectangleEdge, ., RIGHT, ||, edge, ==, RectangleEdge, ., TOP, ), {, adjustedX, +=]
[., getYOffset, (, ), ;, }, else, if, (, edge, ==, RectangleEdge, ., RIGHT, ||, edge, ==, RectangleEdge, ., TOP]
[), {, adjustedX, +=, e3D, ., getXOffset, (, ), ;, }, adjustedDataArea, ., setRect, (, adjustedX, ,, adjustedY, ,, adjustedW]
[||, edge, ==, RectangleEdge, ., TOP, ), {, adjustedX, +=, e3D, ., getXOffset, (, ), ;, }, adjustedDataArea, ., setRect]
[==, RectangleEdge, ., RIGHT, ||, edge, ==, RectangleEdge, ., TOP, ), {, adjustedX, +=, e3D, ., getXOffset, (, ), ;]
[||, edge, ==, RectangleEdge, ., TOP, ), {, adjustedX, +=, e3D, ., getXOffset, (, ), ;, }, adjustedDataArea, ., setRect]
[., RIGHT, ||, edge, ==, RectangleEdge, ., TOP, ), {, adjustedX, +=, e3D, ., getXOffset, (, ), ;, }, adjustedDataArea]
[), {, adjustedX, +=, e3D, ., getXOffset, (, ), ;, }, adjustedDataArea, ., setRect, (, adjustedX, ,, adjustedY, ,, adjustedW]
[==, RectangleEdge, ., TOP, ), {, adjustedX, +=, e3D, ., getXOffset, (, ), ;, }, adjustedDataArea, ., setRect, (, adjustedX]
[), {, adjustedX, +=, e3D, ., getXOffset, (, ), ;, }, adjustedDataArea, ., setRect, (, adjustedX, ,, adjustedY, ,, adjustedW]
[., TOP, ), {, adjustedX, +=, e3D, ., getXOffset, (, ), ;, }, adjustedDataArea, ., setRect, (, adjustedX, ,, adjustedY]
[+=, e3D, ., getXOffset, (, ), ;, }, adjustedDataArea, ., setRect, (, adjustedX, ,, adjustedY, ,, adjustedW, ,, adjustedH, )]
[;, }, adjustedDataArea, ., setRect, (, adjustedX, ,, adjustedY, ,, adjustedW, ,, adjustedH, ), ;, }, else, {, adjustedDataArea, .]
[., getXOffset, (, ), ;, }, adjustedDataArea, ., setRect, (, adjustedX, ,, adjustedY, ,, adjustedW, ,, adjustedH, ), ;, }]
[;, }, else, {, adjustedDataArea, ., setRect, (, dataArea, ), ;, }, if, (, isAxisLineVisible, (, ), ), {, drawAxisLine]
[., setRect, (, adjustedX, ,, adjustedY, ,, adjustedW, ,, adjustedH, ), ;, }, else, {, adjustedDataArea, ., setRect, (, dataArea]
[,, adjustedY, ,, adjustedW, ,, adjustedH, ), ;, }, else, {, adjustedDataArea, ., setRect, (, dataArea, ), ;, }, if]
[,, adjustedW, ,, adjustedH, ), ;, }, else, {, adjustedDataArea, ., setRect, (, dataArea, ), ;, }, if, (, isAxisLineVisible]
[,, adjustedH, ), ;, }, else, {, adjustedDataArea, ., setRect, (, dataArea, ), ;, }, if, (, isAxisLineVisible, (, )]
[), ;, }, else, {, adjustedDataArea, ., setRect, (, dataArea, ), ;, }, if, (, isAxisLineVisible, (, ), ), {]
[;, }, if, (, isAxisLineVisible, (, ), ), {, drawAxisLine, (, g2, ,, cursor, ,, adjustedDataArea, ,, edge, ), ;]
[., setRect, (, dataArea, ), ;, }, if, (, isAxisLineVisible, (, ), ), {, drawAxisLine, (, g2, ,, cursor, ,]
[), ;, }, if, (, isAxisLineVisible, (, ), ), {, drawAxisLine, (, g2, ,, cursor, ,, adjustedDataArea, ,, edge, )]
[), {, drawAxisLine, (, g2, ,, cursor, ,, adjustedDataArea, ,, edge, ), ;, }, AxisState, state, =, new, AxisState, (]
[;, }, AxisState, state, =, new, AxisState, (, cursor, ), ;, if, (, isTickMarksVisible, (, ), ), {, drawTickMarks, (]
[,, cursor, ,, adjustedDataArea, ,, edge, ), ;, }, AxisState, state, =, new, AxisState, (, cursor, ), ;, if, (]
[,, adjustedDataArea, ,, edge, ), ;, }, AxisState, state, =, new, AxisState, (, cursor, ), ;, if, (, isTickMarksVisible, (]
[,, edge, ), ;, }, AxisState, state, =, new, AxisState, (, cursor, ), ;, if, (, isTickMarksVisible, (, ), )]
[), ;, }, AxisState, state, =, new, AxisState, (, cursor, ), ;, if, (, isTickMarksVisible, (, ), ), {, drawTickMarks]
[;, if, (, isTickMarksVisible, (, ), ), {, drawTickMarks, (, g2, ,, cursor, ,, adjustedDataArea, ,, edge, ,, state, )]
[), ;, if, (, isTickMarksVisible, (, ), ), {, drawTickMarks, (, g2, ,, cursor, ,, adjustedDataArea, ,, edge, ,, state]
[), {, drawTickMarks, (, g2, ,, cursor, ,, adjustedDataArea, ,, edge, ,, state, ), ;, }, state, =, drawCategoryLabels, (]
[;, }, state, =, drawCategoryLabels, (, g2, ,, plotArea, ,, adjustedDataArea, ,, edge, ,, state, ,, plotState, ), ;, state]
[,, cursor, ,, adjustedDataArea, ,, edge, ,, state, ), ;, }, state, =, drawCategoryLabels, (, g2, ,, plotArea, ,, adjustedDataArea]
[,, adjustedDataArea, ,, edge, ,, state, ), ;, }, state, =, drawCategoryLabels, (, g2, ,, plotArea, ,, adjustedDataArea, ,, edge]
[,, edge, ,, state, ), ;, }, state, =, drawCategoryLabels, (, g2, ,, plotArea, ,, adjustedDataArea, ,, edge, ,, state]
[,, state, ), ;, }, state, =, drawCategoryLabels, (, g2, ,, plotArea, ,, adjustedDataArea, ,, edge, ,, state, ,, plotState]
[), ;, }, state, =, drawCategoryLabels, (, g2, ,, plotArea, ,, adjustedDataArea, ,, edge, ,, state, ,, plotState, ), ;]
[=, drawCategoryLabels, (, g2, ,, plotArea, ,, adjustedDataArea, ,, edge, ,, state, ,, plotState, ), ;, state, =, drawLabel, (]
[;, state, =, drawLabel, (, getLabel, (, ), ,, g2, ,, plotArea, ,, dataArea, ,, edge, ,, state, ,, plotState]
[,, plotArea, ,, adjustedDataArea, ,, edge, ,, state, ,, plotState, ), ;, state, =, drawLabel, (, getLabel, (, ), ,]
[,, adjustedDataArea, ,, edge, ,, state, ,, plotState, ), ;, state, =, drawLabel, (, getLabel, (, ), ,, g2, ,]
[,, edge, ,, state, ,, plotState, ), ;, state, =, drawLabel, (, getLabel, (, ), ,, g2, ,, plotArea, ,]
[,, state, ,, plotState, ), ;, state, =, drawLabel, (, getLabel, (, ), ,, g2, ,, plotArea, ,, dataArea, ,]
[,, plotState, ), ;, state, =, drawLabel, (, getLabel, (, ), ,, g2, ,, plotArea, ,, dataArea, ,, edge, ,]
[), ;, state, =, drawLabel, (, getLabel, (, ), ,, g2, ,, plotArea, ,, dataArea, ,, edge, ,, state, ,]
[=, drawLabel, (, getLabel, (, ), ,, g2, ,, plotArea, ,, dataArea, ,, edge, ,, state, ,, plotState, ), ;]
[;, return, state, ;, }, public, double, getCategoryJava2DCoordinate, (, CategoryAnchor, anchor, ,, int, category, ,, int, categoryCount, ,, Rectangle2D, area]
[,, g2, ,, plotArea, ,, dataArea, ,, edge, ,, state, ,, plotState, ), ;, return, state, ;, }, public, double]
[,, plotArea, ,, dataArea, ,, edge, ,, state, ,, plotState, ), ;, return, state, ;, }, public, double, getCategoryJava2DCoordinate, (]
[,, dataArea, ,, edge, ,, state, ,, plotState, ), ;, return, state, ;, }, public, double, getCategoryJava2DCoordinate, (, CategoryAnchor, anchor]
[,, edge, ,, state, ,, plotState, ), ;, return, state, ;, }, public, double, getCategoryJava2DCoordinate, (, CategoryAnchor, anchor, ,, int]
[,, state, ,, plotState, ), ;, return, state, ;, }, public, double, getCategoryJava2DCoordinate, (, CategoryAnchor, anchor, ,, int, category, ,]
[,, plotState, ), ;, return, state, ;, }, public, double, getCategoryJava2DCoordinate, (, CategoryAnchor, anchor, ,, int, category, ,, int, categoryCount]
[), ;, return, state, ;, }, public, double, getCategoryJava2DCoordinate, (, CategoryAnchor, anchor, ,, int, category, ,, int, categoryCount, ,, Rectangle2D]
[;, }, public, double, getCategoryJava2DCoordinate, (, CategoryAnchor, anchor, ,, int, category, ,, int, categoryCount, ,, Rectangle2D, area, ,, RectangleEdge, edge]
[;, Rectangle2D, adjustedArea, =, area, ;, CategoryPlot, plot, =, (, CategoryPlot, ), getPlot, (, ), ;, CategoryItemRenderer, renderer, =, plot]
[;, CategoryPlot, plot, =, (, CategoryPlot, ), getPlot, (, ), ;, CategoryItemRenderer, renderer, =, plot, ., getRenderer, (, ), ;]
[;, CategoryItemRenderer, renderer, =, plot, ., getRenderer, (, ), ;, if, (, renderer, instanceof, Effect3D, ), {, Effect3D, e3D, =]
[;, CategoryItemRenderer, renderer, =, plot, ., getRenderer, (, ), ;, if, (, renderer, instanceof, Effect3D, ), {, Effect3D, e3D, =]
[;, if, (, renderer, instanceof, Effect3D, ), {, Effect3D, e3D, =, (, Effect3D, ), renderer, ;, double, adjustedX, =, area]
[., getRenderer, (, ), ;, if, (, renderer, instanceof, Effect3D, ), {, Effect3D, e3D, =, (, Effect3D, ), renderer, ;]
[), {, Effect3D, e3D, =, (, Effect3D, ), renderer, ;, double, adjustedX, =, area, ., getMinX, (, ), ;, double]
[instanceof, Effect3D, ), {, Effect3D, e3D, =, (, Effect3D, ), renderer, ;, double, adjustedX, =, area, ., getMinX, (, )]
[;, double, adjustedX, =, area, ., getMinX, (, ), ;, double, adjustedY, =, area, ., getMinY, (, ), ;, double]
[;, double, adjustedX, =, area, ., getMinX, (, ), ;, double, adjustedY, =, area, ., getMinY, (, ), ;, double]
[;, double, adjustedY, =, area, ., getMinY, (, ), ;, double, adjustedW, =, area, ., getWidth, (, ), -, e3D]
[., getMinX, (, ), ;, double, adjustedY, =, area, ., getMinY, (, ), ;, double, adjustedW, =, area, ., getWidth]
[;, double, adjustedW, =, area, ., getWidth, (, ), -, e3D, ., getXOffset, (, ), ;, double, adjustedH, =, area]
[., getMinY, (, ), ;, double, adjustedW, =, area, ., getWidth, (, ), -, e3D, ., getXOffset, (, ), ;]
[;, double, adjustedH, =, area, ., getHeight, (, ), -, e3D, ., getYOffset, (, ), ;, if, (, edge, ==]
[-, e3D, ., getXOffset, (, ), ;, double, adjustedH, =, area, ., getHeight, (, ), -, e3D, ., getYOffset, (]
[., getWidth, (, ), -, e3D, ., getXOffset, (, ), ;, double, adjustedH, =, area, ., getHeight, (, ), -]
[;, double, adjustedH, =, area, ., getHeight, (, ), -, e3D, ., getYOffset, (, ), ;, if, (, edge, ==]
[., getXOffset, (, ), ;, double, adjustedH, =, area, ., getHeight, (, ), -, e3D, ., getYOffset, (, ), ;]
[;, if, (, edge, ==, RectangleEdge, ., LEFT, ||, edge, ==, RectangleEdge, ., BOTTOM, ), {, adjustedY, +=, e3D, .]
[-, e3D, ., getYOffset, (, ), ;, if, (, edge, ==, RectangleEdge, ., LEFT, ||, edge, ==, RectangleEdge, ., BOTTOM]
[., getHeight, (, ), -, e3D, ., getYOffset, (, ), ;, if, (, edge, ==, RectangleEdge, ., LEFT, ||, edge]
[;, if, (, edge, ==, RectangleEdge, ., LEFT, ||, edge, ==, RectangleEdge, ., BOTTOM, ), {, adjustedY, +=, e3D, .]
[., getYOffset, (, ), ;, if, (, edge, ==, RectangleEdge, ., LEFT, ||, edge, ==, RectangleEdge, ., BOTTOM, ), {]
[), {, adjustedY, +=, e3D, ., getYOffset, (, ), ;, }, else, if, (, edge, ==, RectangleEdge, ., RIGHT, ||]
[||, edge, ==, RectangleEdge, ., BOTTOM, ), {, adjustedY, +=, e3D, ., getYOffset, (, ), ;, }, else, if, (]
[==, RectangleEdge, ., LEFT, ||, edge, ==, RectangleEdge, ., BOTTOM, ), {, adjustedY, +=, e3D, ., getYOffset, (, ), ;]
[||, edge, ==, RectangleEdge, ., BOTTOM, ), {, adjustedY, +=, e3D, ., getYOffset, (, ), ;, }, else, if, (]
[., LEFT, ||, edge, ==, RectangleEdge, ., BOTTOM, ), {, adjustedY, +=, e3D, ., getYOffset, (, ), ;, }, else]
[), {, adjustedY, +=, e3D, ., getYOffset, (, ), ;, }, else, if, (, edge, ==, RectangleEdge, ., RIGHT, ||]
[==, RectangleEdge, ., BOTTOM, ), {, adjustedY, +=, e3D, ., getYOffset, (, ), ;, }, else, if, (, edge, ==]
[), {, adjustedY, +=, e3D, ., getYOffset, (, ), ;, }, else, if, (, edge, ==, RectangleEdge, ., RIGHT, ||]
[., BOTTOM, ), {, adjustedY, +=, e3D, ., getYOffset, (, ), ;, }, else, if, (, edge, ==, RectangleEdge, .]
[+=, e3D, ., getYOffset, (, ), ;, }, else, if, (, edge, ==, RectangleEdge, ., RIGHT, ||, edge, ==, RectangleEdge]
[;, }, else, if, (, edge, ==, RectangleEdge, ., RIGHT, ||, edge, ==, RectangleEdge, ., TOP, ), {, adjustedX, +=]
[., getYOffset, (, ), ;, }, else, if, (, edge, ==, RectangleEdge, ., RIGHT, ||, edge, ==, RectangleEdge, ., TOP]
[), {, adjustedX, +=, e3D, ., getXOffset, (, ), ;, }, adjustedArea, =, new, Rectangle2D, ., Double, (, adjustedX, ,]
[||, edge, ==, RectangleEdge, ., TOP, ), {, adjustedX, +=, e3D, ., getXOffset, (, ), ;, }, adjustedArea, =, new]
[==, RectangleEdge, ., RIGHT, ||, edge, ==, RectangleEdge, ., TOP, ), {, adjustedX, +=, e3D, ., getXOffset, (, ), ;]
[||, edge, ==, RectangleEdge, ., TOP, ), {, adjustedX, +=, e3D, ., getXOffset, (, ), ;, }, adjustedArea, =, new]
[., RIGHT, ||, edge, ==, RectangleEdge, ., TOP, ), {, adjustedX, +=, e3D, ., getXOffset, (, ), ;, }, adjustedArea]
[), {, adjustedX, +=, e3D, ., getXOffset, (, ), ;, }, adjustedArea, =, new, Rectangle2D, ., Double, (, adjustedX, ,]
[==, RectangleEdge, ., TOP, ), {, adjustedX, +=, e3D, ., getXOffset, (, ), ;, }, adjustedArea, =, new, Rectangle2D, .]
[), {, adjustedX, +=, e3D, ., getXOffset, (, ), ;, }, adjustedArea, =, new, Rectangle2D, ., Double, (, adjustedX, ,]
[., TOP, ), {, adjustedX, +=, e3D, ., getXOffset, (, ), ;, }, adjustedArea, =, new, Rectangle2D, ., Double, (]
[+=, e3D, ., getXOffset, (, ), ;, }, adjustedArea, =, new, Rectangle2D, ., Double, (, adjustedX, ,, adjustedY, ,, adjustedW]
[;, }, adjustedArea, =, new, Rectangle2D, ., Double, (, adjustedX, ,, adjustedY, ,, adjustedW, ,, adjustedH, ), ;, }, if]
[., getXOffset, (, ), ;, }, adjustedArea, =, new, Rectangle2D, ., Double, (, adjustedX, ,, adjustedY, ,, adjustedW, ,, adjustedH]
[=, new, Rectangle2D, ., Double, (, adjustedX, ,, adjustedY, ,, adjustedW, ,, adjustedH, ), ;, }, if, (, anchor, ==]
[;, }, if, (, anchor, ==, CategoryAnchor, ., START, ), {, result, =, getCategoryStart, (, category, ,, categoryCount, ,, adjustedArea]
[,, adjustedY, ,, adjustedW, ,, adjustedH, ), ;, }, if, (, anchor, ==, CategoryAnchor, ., START, ), {, result, =]
[,, adjustedW, ,, adjustedH, ), ;, }, if, (, anchor, ==, CategoryAnchor, ., START, ), {, result, =, getCategoryStart, (]
[,, adjustedH, ), ;, }, if, (, anchor, ==, CategoryAnchor, ., START, ), {, result, =, getCategoryStart, (, category, ,]
[), ;, }, if, (, anchor, ==, CategoryAnchor, ., START, ), {, result, =, getCategoryStart, (, category, ,, categoryCount, ,]
[), {, result, =, getCategoryStart, (, category, ,, categoryCount, ,, adjustedArea, ,, edge, ), ;, }, else, if, (, anchor]
[==, CategoryAnchor, ., START, ), {, result, =, getCategoryStart, (, category, ,, categoryCount, ,, adjustedArea, ,, edge, ), ;, }]
[), {, result, =, getCategoryStart, (, category, ,, categoryCount, ,, adjustedArea, ,, edge, ), ;, }, else, if, (, anchor]
[., START, ), {, result, =, getCategoryStart, (, category, ,, categoryCount, ,, adjustedArea, ,, edge, ), ;, }, else, if]
[=, getCategoryStart, (, category, ,, categoryCount, ,, adjustedArea, ,, edge, ), ;, }, else, if, (, anchor, ==, CategoryAnchor, .]
[;, }, else, if, (, anchor, ==, CategoryAnchor, ., MIDDLE, ), {, result, =, getCategoryMiddle, (, category, ,, categoryCount, ,]
[,, categoryCount, ,, adjustedArea, ,, edge, ), ;, }, else, if, (, anchor, ==, CategoryAnchor, ., MIDDLE, ), {, result]
[,, adjustedArea, ,, edge, ), ;, }, else, if, (, anchor, ==, CategoryAnchor, ., MIDDLE, ), {, result, =, getCategoryMiddle]
[,, edge, ), ;, }, else, if, (, anchor, ==, CategoryAnchor, ., MIDDLE, ), {, result, =, getCategoryMiddle, (, category]
[), ;, }, else, if, (, anchor, ==, CategoryAnchor, ., MIDDLE, ), {, result, =, getCategoryMiddle, (, category, ,, categoryCount]
[), {, result, =, getCategoryMiddle, (, category, ,, categoryCount, ,, adjustedArea, ,, edge, ), ;, }, else, if, (, anchor]
[==, CategoryAnchor, ., MIDDLE, ), {, result, =, getCategoryMiddle, (, category, ,, categoryCount, ,, adjustedArea, ,, edge, ), ;, }]
[), {, result, =, getCategoryMiddle, (, category, ,, categoryCount, ,, adjustedArea, ,, edge, ), ;, }, else, if, (, anchor]
[., MIDDLE, ), {, result, =, getCategoryMiddle, (, category, ,, categoryCount, ,, adjustedArea, ,, edge, ), ;, }, else, if]
[=, getCategoryMiddle, (, category, ,, categoryCount, ,, adjustedArea, ,, edge, ), ;, }, else, if, (, anchor, ==, CategoryAnchor, .]
[;, }, else, if, (, anchor, ==, CategoryAnchor, ., END, ), {, result, =, getCategoryEnd, (, category, ,, categoryCount, ,]
[,, categoryCount, ,, adjustedArea, ,, edge, ), ;, }, else, if, (, anchor, ==, CategoryAnchor, ., END, ), {, result]
[,, adjustedArea, ,, edge, ), ;, }, else, if, (, anchor, ==, CategoryAnchor, ., END, ), {, result, =, getCategoryEnd]
[,, edge, ), ;, }, else, if, (, anchor, ==, CategoryAnchor, ., END, ), {, result, =, getCategoryEnd, (, category]
[), ;, }, else, if, (, anchor, ==, CategoryAnchor, ., END, ), {, result, =, getCategoryEnd, (, category, ,, categoryCount]
[), {, result, =, getCategoryEnd, (, category, ,, categoryCount, ,, adjustedArea, ,, edge, ), ;, }, return, result, ;, }]
[==, CategoryAnchor, ., END, ), {, result, =, getCategoryEnd, (, category, ,, categoryCount, ,, adjustedArea, ,, edge, ), ;, }]
[), {, result, =, getCategoryEnd, (, category, ,, categoryCount, ,, adjustedArea, ,, edge, ), ;, }, return, result, ;, }]
[., END, ), {, result, =, getCategoryEnd, (, category, ,, categoryCount, ,, adjustedArea, ,, edge, ), ;, }, return, result]
[=, getCategoryEnd, (, category, ,, categoryCount, ,, adjustedArea, ,, edge, ), ;, }, return, result, ;, }, public, Object, clone]
[;, }, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (, )]
[,, categoryCount, ,, adjustedArea, ,, edge, ), ;, }, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException]
[,, adjustedArea, ,, edge, ), ;, }, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return]
[,, edge, ), ;, }, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, .]
[), ;, }, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (]
[;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (, ), ;, }, }]
[;, }, }]
[., clone, (, ), ;, }, }]
