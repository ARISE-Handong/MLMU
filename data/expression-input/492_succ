[;, private, static, final, int, PROPERTY_CHECKING_UNION_SIZE, =, 3000, ;, private, final, transient, ErrorReporter, reporter, ;, private, final, JSType, [, ]]
[;, private, final, transient, ErrorReporter, reporter, ;, private, final, JSType, [, ], nativeTypes, ;, private, final, Map, <, String, ,]
[;, private, final, Set, <, String, >, nonNullableTypeNames, =, new, HashSet, <, String, >, (, ), ;, private, final, Set]
[;, private, final, Set, <, String, >, forwardDeclaredTypes, =, new, HashSet, <, String, >, (, ), ;, private, final, Map]
[;, private, final, Map, <, String, ,, UnionTypeBuilder, >, typesIndexedByProperty, =, Maps, ., newHashMap, (, ), ;, private, final, Map]
[;, private, final, Map, <, String, ,, Map, <, String, ,, ObjectType, >, >, eachRefTypeIndexedByProperty, =, Maps, ., newHashMap, (]
[., newHashMap, (, ), ;, private, final, Map, <, String, ,, Map, <, String, ,, ObjectType, >, >, eachRefTypeIndexedByProperty, =]
[;, private, final, Map, <, String, ,, JSType, >, greatestSubtypeByProperty, =, Maps, ., newHashMap, (, ), ;, private, final, Multimap]
[., newHashMap, (, ), ;, private, final, Map, <, String, ,, JSType, >, greatestSubtypeByProperty, =, Maps, ., newHashMap, (, )]
[;, private, final, Multimap, <, String, ,, FunctionType, >, interfaceToImplementors, =, LinkedHashMultimap, ., create, (, ), ;, private, final, Multimap]
[., newHashMap, (, ), ;, private, final, Multimap, <, String, ,, FunctionType, >, interfaceToImplementors, =, LinkedHashMultimap, ., create, (, )]
[;, private, final, Multimap, <, StaticScope, <, JSType, >, ,, NamedType, >, unresolvedNamedTypes, =, ArrayListMultimap, ., create, (, ), ;]
[., create, (, ), ;, private, final, Multimap, <, StaticScope, <, JSType, >, ,, NamedType, >, unresolvedNamedTypes, =, ArrayListMultimap, .]
[;, private, final, Multimap, <, StaticScope, <, JSType, >, ,, NamedType, >, resolvedNamedTypes, =, ArrayListMultimap, ., create, (, ), ;]
[., create, (, ), ;, private, final, Multimap, <, StaticScope, <, JSType, >, ,, NamedType, >, resolvedNamedTypes, =, ArrayListMultimap, .]
[;, private, boolean, lastGeneration, =, true, ;, private, Map, <, String, ,, TemplateType, >, templateTypes, =, Maps, ., newHashMap, (]
[., create, (, ), ;, private, boolean, lastGeneration, =, true, ;, private, Map, <, String, ,, TemplateType, >, templateTypes, =]
[;, private, Map, <, String, ,, TemplateType, >, templateTypes, =, Maps, ., newHashMap, (, ), ;, private, final, boolean, tolerateUndefinedValues]
[;, private, final, boolean, tolerateUndefinedValues, ;, public, static, enum, ResolveMode, {, LAZY_EXPRESSIONS, ,, LAZY_NAMES, ,, IMMEDIATE, }, private, ResolveMode, resolveMode]
[., newHashMap, (, ), ;, private, final, boolean, tolerateUndefinedValues, ;, public, static, enum, ResolveMode, {, LAZY_EXPRESSIONS, ,, LAZY_NAMES, ,, IMMEDIATE]
[;, public, JSTypeRegistry, (, ErrorReporter, reporter, ), {, this, (, reporter, ,, false, ), ;, }, public, JSTypeRegistry, (, ErrorReporter]
[., LAZY_NAMES, ;, public, JSTypeRegistry, (, ErrorReporter, reporter, ), {, this, (, reporter, ,, false, ), ;, }, public, JSTypeRegistry]
[,, false, ), ;, }, public, JSTypeRegistry, (, ErrorReporter, reporter, ,, boolean, tolerateUndefinedValues, ), {, this, ., reporter, =, reporter]
[), ;, }, public, JSTypeRegistry, (, ErrorReporter, reporter, ,, boolean, tolerateUndefinedValues, ), {, this, ., reporter, =, reporter, ;, nativeTypes]
[=, reporter, ;, nativeTypes, =, new, JSType, [, JSTypeNative, ., values, (, ), ., length, ], ;, namesToTypes, =, new]
[., reporter, =, reporter, ;, nativeTypes, =, new, JSType, [, JSTypeNative, ., values, (, ), ., length, ], ;, namesToTypes]
[;, nativeTypes, =, new, JSType, [, JSTypeNative, ., values, (, ), ., length, ], ;, namesToTypes, =, new, HashMap, <]
[=, new, JSType, [, JSTypeNative, ., values, (, ), ., length, ], ;, namesToTypes, =, new, HashMap, <, String, ,]
[;, namesToTypes, =, new, HashMap, <, String, ,, JSType, >, (, ), ;, resetForTypeCheck, (, ), ;, this, ., tolerateUndefinedValues]
[], ;, namesToTypes, =, new, HashMap, <, String, ,, JSType, >, (, ), ;, resetForTypeCheck, (, ), ;, this, .]
[., length, ], ;, namesToTypes, =, new, HashMap, <, String, ,, JSType, >, (, ), ;, resetForTypeCheck, (, ), ;]
[., values, (, ), ., length, ], ;, namesToTypes, =, new, HashMap, <, String, ,, JSType, >, (, ), ;]
[=, new, HashMap, <, String, ,, JSType, >, (, ), ;, resetForTypeCheck, (, ), ;, this, ., tolerateUndefinedValues, =, tolerateUndefinedValues]
[;, resetForTypeCheck, (, ), ;, this, ., tolerateUndefinedValues, =, tolerateUndefinedValues, ;, }, public, void, setResolveMode, (, ResolveMode, mode, ), {]
[;, this, ., tolerateUndefinedValues, =, tolerateUndefinedValues, ;, }, public, void, setResolveMode, (, ResolveMode, mode, ), {, this, ., resolveMode, =]
[=, tolerateUndefinedValues, ;, }, public, void, setResolveMode, (, ResolveMode, mode, ), {, this, ., resolveMode, =, mode, ;, }, ResolveMode]
[., tolerateUndefinedValues, =, tolerateUndefinedValues, ;, }, public, void, setResolveMode, (, ResolveMode, mode, ), {, this, ., resolveMode, =, mode, ;]
[;, }, public, void, setResolveMode, (, ResolveMode, mode, ), {, this, ., resolveMode, =, mode, ;, }, ResolveMode, getResolveMode, (]
[=, mode, ;, }, ResolveMode, getResolveMode, (, ), {, return, resolveMode, ;, }, public, ErrorReporter, getErrorReporter, (, ), {, return]
[., resolveMode, =, mode, ;, }, ResolveMode, getResolveMode, (, ), {, return, resolveMode, ;, }, public, ErrorReporter, getErrorReporter, (, )]
[;, }, ResolveMode, getResolveMode, (, ), {, return, resolveMode, ;, }, public, ErrorReporter, getErrorReporter, (, ), {, return, reporter, ;]
[;, }, public, ErrorReporter, getErrorReporter, (, ), {, return, reporter, ;, }, public, boolean, shouldTolerateUndefinedValues, (, ), {, return, tolerateUndefinedValues]
[;, }, public, boolean, shouldTolerateUndefinedValues, (, ), {, return, tolerateUndefinedValues, ;, }, public, void, resetForTypeCheck, (, ), {, typesIndexedByProperty, .]
[;, }, public, void, resetForTypeCheck, (, ), {, typesIndexedByProperty, ., clear, (, ), ;, eachRefTypeIndexedByProperty, ., clear, (, ), ;]
[;, eachRefTypeIndexedByProperty, ., clear, (, ), ;, initializeBuiltInTypes, (, ), ;, namesToTypes, ., clear, (, ), ;, namespaces, ., clear]
[., clear, (, ), ;, eachRefTypeIndexedByProperty, ., clear, (, ), ;, initializeBuiltInTypes, (, ), ;, namesToTypes, ., clear, (, )]
[;, initializeBuiltInTypes, (, ), ;, namesToTypes, ., clear, (, ), ;, namespaces, ., clear, (, ), ;, initializeRegistry, (, )]
[., clear, (, ), ;, initializeBuiltInTypes, (, ), ;, namesToTypes, ., clear, (, ), ;, namespaces, ., clear, (, )]
[;, namesToTypes, ., clear, (, ), ;, namespaces, ., clear, (, ), ;, initializeRegistry, (, ), ;, }, private, void]
[;, namespaces, ., clear, (, ), ;, initializeRegistry, (, ), ;, }, private, void, initializeBuiltInTypes, (, ), {, BooleanType, BOOLEAN_TYPE]
[., clear, (, ), ;, namespaces, ., clear, (, ), ;, initializeRegistry, (, ), ;, }, private, void, initializeBuiltInTypes, (]
[;, initializeRegistry, (, ), ;, }, private, void, initializeBuiltInTypes, (, ), {, BooleanType, BOOLEAN_TYPE, =, new, BooleanType, (, this, )]
[., clear, (, ), ;, initializeRegistry, (, ), ;, }, private, void, initializeBuiltInTypes, (, ), {, BooleanType, BOOLEAN_TYPE, =, new]
[;, }, private, void, initializeBuiltInTypes, (, ), {, BooleanType, BOOLEAN_TYPE, =, new, BooleanType, (, this, ), ;, registerNativeType, (, JSTypeNative]
[;, registerNativeType, (, JSTypeNative, ., BOOLEAN_TYPE, ,, BOOLEAN_TYPE, ), ;, NullType, NULL_TYPE, =, new, NullType, (, this, ), ;, registerNativeType]
[), ;, registerNativeType, (, JSTypeNative, ., BOOLEAN_TYPE, ,, BOOLEAN_TYPE, ), ;, NullType, NULL_TYPE, =, new, NullType, (, this, ), ;]
[;, NullType, NULL_TYPE, =, new, NullType, (, this, ), ;, registerNativeType, (, JSTypeNative, ., NULL_TYPE, ,, NULL_TYPE, ), ;, NumberType]
[,, BOOLEAN_TYPE, ), ;, NullType, NULL_TYPE, =, new, NullType, (, this, ), ;, registerNativeType, (, JSTypeNative, ., NULL_TYPE, ,, NULL_TYPE]
[., BOOLEAN_TYPE, ,, BOOLEAN_TYPE, ), ;, NullType, NULL_TYPE, =, new, NullType, (, this, ), ;, registerNativeType, (, JSTypeNative, ., NULL_TYPE]
[), ;, NullType, NULL_TYPE, =, new, NullType, (, this, ), ;, registerNativeType, (, JSTypeNative, ., NULL_TYPE, ,, NULL_TYPE, ), ;]
[;, registerNativeType, (, JSTypeNative, ., NULL_TYPE, ,, NULL_TYPE, ), ;, NumberType, NUMBER_TYPE, =, new, NumberType, (, this, ), ;, registerNativeType]
[), ;, registerNativeType, (, JSTypeNative, ., NULL_TYPE, ,, NULL_TYPE, ), ;, NumberType, NUMBER_TYPE, =, new, NumberType, (, this, ), ;]
[;, NumberType, NUMBER_TYPE, =, new, NumberType, (, this, ), ;, registerNativeType, (, JSTypeNative, ., NUMBER_TYPE, ,, NUMBER_TYPE, ), ;, StringType]
[,, NULL_TYPE, ), ;, NumberType, NUMBER_TYPE, =, new, NumberType, (, this, ), ;, registerNativeType, (, JSTypeNative, ., NUMBER_TYPE, ,, NUMBER_TYPE]
[., NULL_TYPE, ,, NULL_TYPE, ), ;, NumberType, NUMBER_TYPE, =, new, NumberType, (, this, ), ;, registerNativeType, (, JSTypeNative, ., NUMBER_TYPE]
[), ;, NumberType, NUMBER_TYPE, =, new, NumberType, (, this, ), ;, registerNativeType, (, JSTypeNative, ., NUMBER_TYPE, ,, NUMBER_TYPE, ), ;]
[;, registerNativeType, (, JSTypeNative, ., NUMBER_TYPE, ,, NUMBER_TYPE, ), ;, StringType, STRING_TYPE, =, new, StringType, (, this, ), ;, registerNativeType]
[), ;, registerNativeType, (, JSTypeNative, ., NUMBER_TYPE, ,, NUMBER_TYPE, ), ;, StringType, STRING_TYPE, =, new, StringType, (, this, ), ;]
[;, StringType, STRING_TYPE, =, new, StringType, (, this, ), ;, registerNativeType, (, JSTypeNative, ., STRING_TYPE, ,, STRING_TYPE, ), ;, UnknownType]
[,, NUMBER_TYPE, ), ;, StringType, STRING_TYPE, =, new, StringType, (, this, ), ;, registerNativeType, (, JSTypeNative, ., STRING_TYPE, ,, STRING_TYPE]
[., NUMBER_TYPE, ,, NUMBER_TYPE, ), ;, StringType, STRING_TYPE, =, new, StringType, (, this, ), ;, registerNativeType, (, JSTypeNative, ., STRING_TYPE]
[), ;, StringType, STRING_TYPE, =, new, StringType, (, this, ), ;, registerNativeType, (, JSTypeNative, ., STRING_TYPE, ,, STRING_TYPE, ), ;]
[;, registerNativeType, (, JSTypeNative, ., STRING_TYPE, ,, STRING_TYPE, ), ;, UnknownType, UNKNOWN_TYPE, =, new, UnknownType, (, this, ,, false, )]
[), ;, registerNativeType, (, JSTypeNative, ., STRING_TYPE, ,, STRING_TYPE, ), ;, UnknownType, UNKNOWN_TYPE, =, new, UnknownType, (, this, ,, false]
[;, UnknownType, UNKNOWN_TYPE, =, new, UnknownType, (, this, ,, false, ), ;, registerNativeType, (, JSTypeNative, ., UNKNOWN_TYPE, ,, UNKNOWN_TYPE, )]
[,, STRING_TYPE, ), ;, UnknownType, UNKNOWN_TYPE, =, new, UnknownType, (, this, ,, false, ), ;, registerNativeType, (, JSTypeNative, ., UNKNOWN_TYPE]
[., STRING_TYPE, ,, STRING_TYPE, ), ;, UnknownType, UNKNOWN_TYPE, =, new, UnknownType, (, this, ,, false, ), ;, registerNativeType, (, JSTypeNative]
[), ;, UnknownType, UNKNOWN_TYPE, =, new, UnknownType, (, this, ,, false, ), ;, registerNativeType, (, JSTypeNative, ., UNKNOWN_TYPE, ,, UNKNOWN_TYPE]
[;, registerNativeType, (, JSTypeNative, ., UNKNOWN_TYPE, ,, UNKNOWN_TYPE, ), ;, UnknownType, checkedUnknownType, =, new, UnknownType, (, this, ,, true, )]
[,, false, ), ;, registerNativeType, (, JSTypeNative, ., UNKNOWN_TYPE, ,, UNKNOWN_TYPE, ), ;, UnknownType, checkedUnknownType, =, new, UnknownType, (, this]
[), ;, registerNativeType, (, JSTypeNative, ., UNKNOWN_TYPE, ,, UNKNOWN_TYPE, ), ;, UnknownType, checkedUnknownType, =, new, UnknownType, (, this, ,, true]
[;, UnknownType, checkedUnknownType, =, new, UnknownType, (, this, ,, true, ), ;, registerNativeType, (, JSTypeNative, ., CHECKED_UNKNOWN_TYPE, ,, checkedUnknownType, )]
[,, UNKNOWN_TYPE, ), ;, UnknownType, checkedUnknownType, =, new, UnknownType, (, this, ,, true, ), ;, registerNativeType, (, JSTypeNative, ., CHECKED_UNKNOWN_TYPE]
[., UNKNOWN_TYPE, ,, UNKNOWN_TYPE, ), ;, UnknownType, checkedUnknownType, =, new, UnknownType, (, this, ,, true, ), ;, registerNativeType, (, JSTypeNative]
[), ;, UnknownType, checkedUnknownType, =, new, UnknownType, (, this, ,, true, ), ;, registerNativeType, (, JSTypeNative, ., CHECKED_UNKNOWN_TYPE, ,, checkedUnknownType]
[;, registerNativeType, (, JSTypeNative, ., CHECKED_UNKNOWN_TYPE, ,, checkedUnknownType, ), ;, VoidType, VOID_TYPE, =, new, VoidType, (, this, ), ;, registerNativeType]
[,, true, ), ;, registerNativeType, (, JSTypeNative, ., CHECKED_UNKNOWN_TYPE, ,, checkedUnknownType, ), ;, VoidType, VOID_TYPE, =, new, VoidType, (, this]
[), ;, registerNativeType, (, JSTypeNative, ., CHECKED_UNKNOWN_TYPE, ,, checkedUnknownType, ), ;, VoidType, VOID_TYPE, =, new, VoidType, (, this, ), ;]
[;, VoidType, VOID_TYPE, =, new, VoidType, (, this, ), ;, registerNativeType, (, JSTypeNative, ., VOID_TYPE, ,, VOID_TYPE, ), ;, AllType]
[,, checkedUnknownType, ), ;, VoidType, VOID_TYPE, =, new, VoidType, (, this, ), ;, registerNativeType, (, JSTypeNative, ., VOID_TYPE, ,, VOID_TYPE]
[., CHECKED_UNKNOWN_TYPE, ,, checkedUnknownType, ), ;, VoidType, VOID_TYPE, =, new, VoidType, (, this, ), ;, registerNativeType, (, JSTypeNative, ., VOID_TYPE]
[), ;, VoidType, VOID_TYPE, =, new, VoidType, (, this, ), ;, registerNativeType, (, JSTypeNative, ., VOID_TYPE, ,, VOID_TYPE, ), ;]
[;, registerNativeType, (, JSTypeNative, ., VOID_TYPE, ,, VOID_TYPE, ), ;, AllType, ALL_TYPE, =, new, AllType, (, this, ), ;, registerNativeType]
[), ;, registerNativeType, (, JSTypeNative, ., VOID_TYPE, ,, VOID_TYPE, ), ;, AllType, ALL_TYPE, =, new, AllType, (, this, ), ;]
[;, AllType, ALL_TYPE, =, new, AllType, (, this, ), ;, registerNativeType, (, JSTypeNative, ., ALL_TYPE, ,, ALL_TYPE, ), ;, PrototypeObjectType]
[,, VOID_TYPE, ), ;, AllType, ALL_TYPE, =, new, AllType, (, this, ), ;, registerNativeType, (, JSTypeNative, ., ALL_TYPE, ,, ALL_TYPE]
[., VOID_TYPE, ,, VOID_TYPE, ), ;, AllType, ALL_TYPE, =, new, AllType, (, this, ), ;, registerNativeType, (, JSTypeNative, ., ALL_TYPE]
[), ;, AllType, ALL_TYPE, =, new, AllType, (, this, ), ;, registerNativeType, (, JSTypeNative, ., ALL_TYPE, ,, ALL_TYPE, ), ;]
[;, registerNativeType, (, JSTypeNative, ., ALL_TYPE, ,, ALL_TYPE, ), ;, PrototypeObjectType, TOP_LEVEL_PROTOTYPE, =, new, PrototypeObjectType, (, this, ,, null, ,]
[), ;, registerNativeType, (, JSTypeNative, ., ALL_TYPE, ,, ALL_TYPE, ), ;, PrototypeObjectType, TOP_LEVEL_PROTOTYPE, =, new, PrototypeObjectType, (, this, ,, null]
[;, PrototypeObjectType, TOP_LEVEL_PROTOTYPE, =, new, PrototypeObjectType, (, this, ,, null, ,, null, ,, true, ,, null, ,, null, ), ;]
[,, ALL_TYPE, ), ;, PrototypeObjectType, TOP_LEVEL_PROTOTYPE, =, new, PrototypeObjectType, (, this, ,, null, ,, null, ,, true, ,, null, ,]
[., ALL_TYPE, ,, ALL_TYPE, ), ;, PrototypeObjectType, TOP_LEVEL_PROTOTYPE, =, new, PrototypeObjectType, (, this, ,, null, ,, null, ,, true, ,]
[), ;, PrototypeObjectType, TOP_LEVEL_PROTOTYPE, =, new, PrototypeObjectType, (, this, ,, null, ,, null, ,, true, ,, null, ,, null, )]
[;, registerNativeType, (, JSTypeNative, ., TOP_LEVEL_PROTOTYPE, ,, TOP_LEVEL_PROTOTYPE, ), ;, FunctionType, OBJECT_FUNCTION_TYPE, =, new, FunctionType, (, this, ,, "Object", ,]
[,, null, ,, null, ,, true, ,, null, ,, null, ), ;, registerNativeType, (, JSTypeNative, ., TOP_LEVEL_PROTOTYPE, ,, TOP_LEVEL_PROTOTYPE, )]
[,, null, ,, true, ,, null, ,, null, ), ;, registerNativeType, (, JSTypeNative, ., TOP_LEVEL_PROTOTYPE, ,, TOP_LEVEL_PROTOTYPE, ), ;, FunctionType]
[,, true, ,, null, ,, null, ), ;, registerNativeType, (, JSTypeNative, ., TOP_LEVEL_PROTOTYPE, ,, TOP_LEVEL_PROTOTYPE, ), ;, FunctionType, OBJECT_FUNCTION_TYPE, =]
[,, null, ,, null, ), ;, registerNativeType, (, JSTypeNative, ., TOP_LEVEL_PROTOTYPE, ,, TOP_LEVEL_PROTOTYPE, ), ;, FunctionType, OBJECT_FUNCTION_TYPE, =, new, FunctionType]
[,, null, ), ;, registerNativeType, (, JSTypeNative, ., TOP_LEVEL_PROTOTYPE, ,, TOP_LEVEL_PROTOTYPE, ), ;, FunctionType, OBJECT_FUNCTION_TYPE, =, new, FunctionType, (, this]
[), ;, registerNativeType, (, JSTypeNative, ., TOP_LEVEL_PROTOTYPE, ,, TOP_LEVEL_PROTOTYPE, ), ;, FunctionType, OBJECT_FUNCTION_TYPE, =, new, FunctionType, (, this, ,, "Object"]
[;, FunctionType, OBJECT_FUNCTION_TYPE, =, new, FunctionType, (, this, ,, "Object", ,, null, ,, createArrowType, (, createOptionalParameters, (, ALL_TYPE, ), ,]
[,, TOP_LEVEL_PROTOTYPE, ), ;, FunctionType, OBJECT_FUNCTION_TYPE, =, new, FunctionType, (, this, ,, "Object", ,, null, ,, createArrowType, (, createOptionalParameters, (]
[., TOP_LEVEL_PROTOTYPE, ,, TOP_LEVEL_PROTOTYPE, ), ;, FunctionType, OBJECT_FUNCTION_TYPE, =, new, FunctionType, (, this, ,, "Object", ,, null, ,, createArrowType, (]
[), ;, FunctionType, OBJECT_FUNCTION_TYPE, =, new, FunctionType, (, this, ,, "Object", ,, null, ,, createArrowType, (, createOptionalParameters, (, ALL_TYPE, )]
[;, OBJECT_FUNCTION_TYPE, ., setPrototype, (, TOP_LEVEL_PROTOTYPE, ,, null, ), ;, registerNativeType, (, JSTypeNative, ., OBJECT_FUNCTION_TYPE, ,, OBJECT_FUNCTION_TYPE, ), ;, ObjectType]
[,, "Object", ,, null, ,, createArrowType, (, createOptionalParameters, (, ALL_TYPE, ), ,, UNKNOWN_TYPE, ), ,, null, ,, null, ,, true]
[,, null, ,, createArrowType, (, createOptionalParameters, (, ALL_TYPE, ), ,, UNKNOWN_TYPE, ), ,, null, ,, null, ,, true, ,, true]
[,, createArrowType, (, createOptionalParameters, (, ALL_TYPE, ), ,, UNKNOWN_TYPE, ), ,, null, ,, null, ,, true, ,, true, ), ;]
[,, null, ,, null, ,, true, ,, true, ), ;, OBJECT_FUNCTION_TYPE, ., setPrototype, (, TOP_LEVEL_PROTOTYPE, ,, null, ), ;, registerNativeType]
[,, UNKNOWN_TYPE, ), ,, null, ,, null, ,, true, ,, true, ), ;, OBJECT_FUNCTION_TYPE, ., setPrototype, (, TOP_LEVEL_PROTOTYPE, ,, null]
[), ,, UNKNOWN_TYPE, ), ,, null, ,, null, ,, true, ,, true, ), ;, OBJECT_FUNCTION_TYPE, ., setPrototype, (, TOP_LEVEL_PROTOTYPE, ,]
[), ,, null, ,, null, ,, true, ,, true, ), ;, OBJECT_FUNCTION_TYPE, ., setPrototype, (, TOP_LEVEL_PROTOTYPE, ,, null, ), ;]
[,, null, ,, true, ,, true, ), ;, OBJECT_FUNCTION_TYPE, ., setPrototype, (, TOP_LEVEL_PROTOTYPE, ,, null, ), ;, registerNativeType, (, JSTypeNative]
[,, true, ,, true, ), ;, OBJECT_FUNCTION_TYPE, ., setPrototype, (, TOP_LEVEL_PROTOTYPE, ,, null, ), ;, registerNativeType, (, JSTypeNative, ., OBJECT_FUNCTION_TYPE]
[,, true, ), ;, OBJECT_FUNCTION_TYPE, ., setPrototype, (, TOP_LEVEL_PROTOTYPE, ,, null, ), ;, registerNativeType, (, JSTypeNative, ., OBJECT_FUNCTION_TYPE, ,, OBJECT_FUNCTION_TYPE]
[), ;, OBJECT_FUNCTION_TYPE, ., setPrototype, (, TOP_LEVEL_PROTOTYPE, ,, null, ), ;, registerNativeType, (, JSTypeNative, ., OBJECT_FUNCTION_TYPE, ,, OBJECT_FUNCTION_TYPE, ), ;]
[;, registerNativeType, (, JSTypeNative, ., OBJECT_FUNCTION_TYPE, ,, OBJECT_FUNCTION_TYPE, ), ;, ObjectType, OBJECT_TYPE, =, OBJECT_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType]
[., setPrototype, (, TOP_LEVEL_PROTOTYPE, ,, null, ), ;, registerNativeType, (, JSTypeNative, ., OBJECT_FUNCTION_TYPE, ,, OBJECT_FUNCTION_TYPE, ), ;, ObjectType, OBJECT_TYPE, =]
[,, null, ), ;, registerNativeType, (, JSTypeNative, ., OBJECT_FUNCTION_TYPE, ,, OBJECT_FUNCTION_TYPE, ), ;, ObjectType, OBJECT_TYPE, =, OBJECT_FUNCTION_TYPE, ., getInstanceType, (]
[), ;, registerNativeType, (, JSTypeNative, ., OBJECT_FUNCTION_TYPE, ,, OBJECT_FUNCTION_TYPE, ), ;, ObjectType, OBJECT_TYPE, =, OBJECT_FUNCTION_TYPE, ., getInstanceType, (, ), ;]
[;, ObjectType, OBJECT_TYPE, =, OBJECT_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., OBJECT_TYPE, ,, OBJECT_TYPE, ), ;, ObjectType]
[,, OBJECT_FUNCTION_TYPE, ), ;, ObjectType, OBJECT_TYPE, =, OBJECT_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., OBJECT_TYPE, ,, OBJECT_TYPE]
[., OBJECT_FUNCTION_TYPE, ,, OBJECT_FUNCTION_TYPE, ), ;, ObjectType, OBJECT_TYPE, =, OBJECT_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., OBJECT_TYPE]
[), ;, ObjectType, OBJECT_TYPE, =, OBJECT_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., OBJECT_TYPE, ,, OBJECT_TYPE, ), ;]
[;, registerNativeType, (, JSTypeNative, ., OBJECT_TYPE, ,, OBJECT_TYPE, ), ;, ObjectType, OBJECT_PROTOTYPE, =, OBJECT_FUNCTION_TYPE, ., getPrototype, (, ), ;, registerNativeType]
[., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., OBJECT_TYPE, ,, OBJECT_TYPE, ), ;, ObjectType, OBJECT_PROTOTYPE, =, OBJECT_FUNCTION_TYPE, ., getPrototype]
[;, ObjectType, OBJECT_PROTOTYPE, =, OBJECT_FUNCTION_TYPE, ., getPrototype, (, ), ;, registerNativeType, (, JSTypeNative, ., OBJECT_PROTOTYPE, ,, OBJECT_PROTOTYPE, ), ;, FunctionType]
[,, OBJECT_TYPE, ), ;, ObjectType, OBJECT_PROTOTYPE, =, OBJECT_FUNCTION_TYPE, ., getPrototype, (, ), ;, registerNativeType, (, JSTypeNative, ., OBJECT_PROTOTYPE, ,, OBJECT_PROTOTYPE]
[., OBJECT_TYPE, ,, OBJECT_TYPE, ), ;, ObjectType, OBJECT_PROTOTYPE, =, OBJECT_FUNCTION_TYPE, ., getPrototype, (, ), ;, registerNativeType, (, JSTypeNative, ., OBJECT_PROTOTYPE]
[), ;, ObjectType, OBJECT_PROTOTYPE, =, OBJECT_FUNCTION_TYPE, ., getPrototype, (, ), ;, registerNativeType, (, JSTypeNative, ., OBJECT_PROTOTYPE, ,, OBJECT_PROTOTYPE, ), ;]
[;, registerNativeType, (, JSTypeNative, ., OBJECT_PROTOTYPE, ,, OBJECT_PROTOTYPE, ), ;, FunctionType, FUNCTION_FUNCTION_TYPE, =, new, FunctionType, (, this, ,, "Function", ,]
[., getPrototype, (, ), ;, registerNativeType, (, JSTypeNative, ., OBJECT_PROTOTYPE, ,, OBJECT_PROTOTYPE, ), ;, FunctionType, FUNCTION_FUNCTION_TYPE, =, new, FunctionType, (]
[;, FunctionType, FUNCTION_FUNCTION_TYPE, =, new, FunctionType, (, this, ,, "Function", ,, null, ,, createArrowType, (, createParametersWithVarArgs, (, ALL_TYPE, ), ,]
[,, OBJECT_PROTOTYPE, ), ;, FunctionType, FUNCTION_FUNCTION_TYPE, =, new, FunctionType, (, this, ,, "Function", ,, null, ,, createArrowType, (, createParametersWithVarArgs, (]
[., OBJECT_PROTOTYPE, ,, OBJECT_PROTOTYPE, ), ;, FunctionType, FUNCTION_FUNCTION_TYPE, =, new, FunctionType, (, this, ,, "Function", ,, null, ,, createArrowType, (]
[), ;, FunctionType, FUNCTION_FUNCTION_TYPE, =, new, FunctionType, (, this, ,, "Function", ,, null, ,, createArrowType, (, createParametersWithVarArgs, (, ALL_TYPE, )]
[;, FUNCTION_FUNCTION_TYPE, ., setPrototypeBasedOn, (, OBJECT_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., FUNCTION_FUNCTION_TYPE, ,, FUNCTION_FUNCTION_TYPE, ), ;, ObjectType, FUNCTION_PROTOTYPE, =]
[,, "Function", ,, null, ,, createArrowType, (, createParametersWithVarArgs, (, ALL_TYPE, ), ,, UNKNOWN_TYPE, ), ,, null, ,, null, ,, true]
[,, null, ,, createArrowType, (, createParametersWithVarArgs, (, ALL_TYPE, ), ,, UNKNOWN_TYPE, ), ,, null, ,, null, ,, true, ,, true]
[,, createArrowType, (, createParametersWithVarArgs, (, ALL_TYPE, ), ,, UNKNOWN_TYPE, ), ,, null, ,, null, ,, true, ,, true, ), ;]
[,, null, ,, null, ,, true, ,, true, ), ;, FUNCTION_FUNCTION_TYPE, ., setPrototypeBasedOn, (, OBJECT_TYPE, ), ;, registerNativeType, (, JSTypeNative]
[,, UNKNOWN_TYPE, ), ,, null, ,, null, ,, true, ,, true, ), ;, FUNCTION_FUNCTION_TYPE, ., setPrototypeBasedOn, (, OBJECT_TYPE, ), ;]
[), ,, UNKNOWN_TYPE, ), ,, null, ,, null, ,, true, ,, true, ), ;, FUNCTION_FUNCTION_TYPE, ., setPrototypeBasedOn, (, OBJECT_TYPE, )]
[), ,, null, ,, null, ,, true, ,, true, ), ;, FUNCTION_FUNCTION_TYPE, ., setPrototypeBasedOn, (, OBJECT_TYPE, ), ;, registerNativeType, (]
[,, null, ,, true, ,, true, ), ;, FUNCTION_FUNCTION_TYPE, ., setPrototypeBasedOn, (, OBJECT_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., FUNCTION_FUNCTION_TYPE]
[,, true, ,, true, ), ;, FUNCTION_FUNCTION_TYPE, ., setPrototypeBasedOn, (, OBJECT_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., FUNCTION_FUNCTION_TYPE, ,, FUNCTION_FUNCTION_TYPE]
[,, true, ), ;, FUNCTION_FUNCTION_TYPE, ., setPrototypeBasedOn, (, OBJECT_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., FUNCTION_FUNCTION_TYPE, ,, FUNCTION_FUNCTION_TYPE, ), ;]
[), ;, FUNCTION_FUNCTION_TYPE, ., setPrototypeBasedOn, (, OBJECT_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., FUNCTION_FUNCTION_TYPE, ,, FUNCTION_FUNCTION_TYPE, ), ;, ObjectType, FUNCTION_PROTOTYPE]
[;, registerNativeType, (, JSTypeNative, ., FUNCTION_FUNCTION_TYPE, ,, FUNCTION_FUNCTION_TYPE, ), ;, ObjectType, FUNCTION_PROTOTYPE, =, FUNCTION_FUNCTION_TYPE, ., getPrototype, (, ), ;, registerNativeType]
[., setPrototypeBasedOn, (, OBJECT_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., FUNCTION_FUNCTION_TYPE, ,, FUNCTION_FUNCTION_TYPE, ), ;, ObjectType, FUNCTION_PROTOTYPE, =, FUNCTION_FUNCTION_TYPE, .]
[), ;, registerNativeType, (, JSTypeNative, ., FUNCTION_FUNCTION_TYPE, ,, FUNCTION_FUNCTION_TYPE, ), ;, ObjectType, FUNCTION_PROTOTYPE, =, FUNCTION_FUNCTION_TYPE, ., getPrototype, (, ), ;]
[;, ObjectType, FUNCTION_PROTOTYPE, =, FUNCTION_FUNCTION_TYPE, ., getPrototype, (, ), ;, registerNativeType, (, JSTypeNative, ., FUNCTION_PROTOTYPE, ,, FUNCTION_PROTOTYPE, ), ;, NoType]
[,, FUNCTION_FUNCTION_TYPE, ), ;, ObjectType, FUNCTION_PROTOTYPE, =, FUNCTION_FUNCTION_TYPE, ., getPrototype, (, ), ;, registerNativeType, (, JSTypeNative, ., FUNCTION_PROTOTYPE, ,, FUNCTION_PROTOTYPE]
[., FUNCTION_FUNCTION_TYPE, ,, FUNCTION_FUNCTION_TYPE, ), ;, ObjectType, FUNCTION_PROTOTYPE, =, FUNCTION_FUNCTION_TYPE, ., getPrototype, (, ), ;, registerNativeType, (, JSTypeNative, ., FUNCTION_PROTOTYPE]
[), ;, ObjectType, FUNCTION_PROTOTYPE, =, FUNCTION_FUNCTION_TYPE, ., getPrototype, (, ), ;, registerNativeType, (, JSTypeNative, ., FUNCTION_PROTOTYPE, ,, FUNCTION_PROTOTYPE, ), ;]
[;, registerNativeType, (, JSTypeNative, ., FUNCTION_PROTOTYPE, ,, FUNCTION_PROTOTYPE, ), ;, NoType, NO_TYPE, =, new, NoType, (, this, ), ;, registerNativeType]
[., getPrototype, (, ), ;, registerNativeType, (, JSTypeNative, ., FUNCTION_PROTOTYPE, ,, FUNCTION_PROTOTYPE, ), ;, NoType, NO_TYPE, =, new, NoType, (]
[;, NoType, NO_TYPE, =, new, NoType, (, this, ), ;, registerNativeType, (, JSTypeNative, ., NO_TYPE, ,, NO_TYPE, ), ;, NoObjectType]
[,, FUNCTION_PROTOTYPE, ), ;, NoType, NO_TYPE, =, new, NoType, (, this, ), ;, registerNativeType, (, JSTypeNative, ., NO_TYPE, ,, NO_TYPE]
[., FUNCTION_PROTOTYPE, ,, FUNCTION_PROTOTYPE, ), ;, NoType, NO_TYPE, =, new, NoType, (, this, ), ;, registerNativeType, (, JSTypeNative, ., NO_TYPE]
[), ;, NoType, NO_TYPE, =, new, NoType, (, this, ), ;, registerNativeType, (, JSTypeNative, ., NO_TYPE, ,, NO_TYPE, ), ;]
[;, registerNativeType, (, JSTypeNative, ., NO_TYPE, ,, NO_TYPE, ), ;, NoObjectType, NO_OBJECT_TYPE, =, new, NoObjectType, (, this, ), ;, registerNativeType]
[), ;, registerNativeType, (, JSTypeNative, ., NO_TYPE, ,, NO_TYPE, ), ;, NoObjectType, NO_OBJECT_TYPE, =, new, NoObjectType, (, this, ), ;]
[;, NoObjectType, NO_OBJECT_TYPE, =, new, NoObjectType, (, this, ), ;, registerNativeType, (, JSTypeNative, ., NO_OBJECT_TYPE, ,, NO_OBJECT_TYPE, ), ;, NoObjectType]
[,, NO_TYPE, ), ;, NoObjectType, NO_OBJECT_TYPE, =, new, NoObjectType, (, this, ), ;, registerNativeType, (, JSTypeNative, ., NO_OBJECT_TYPE, ,, NO_OBJECT_TYPE]
[., NO_TYPE, ,, NO_TYPE, ), ;, NoObjectType, NO_OBJECT_TYPE, =, new, NoObjectType, (, this, ), ;, registerNativeType, (, JSTypeNative, ., NO_OBJECT_TYPE]
[), ;, NoObjectType, NO_OBJECT_TYPE, =, new, NoObjectType, (, this, ), ;, registerNativeType, (, JSTypeNative, ., NO_OBJECT_TYPE, ,, NO_OBJECT_TYPE, ), ;]
[;, registerNativeType, (, JSTypeNative, ., NO_OBJECT_TYPE, ,, NO_OBJECT_TYPE, ), ;, NoObjectType, NO_RESOLVED_TYPE, =, new, NoResolvedType, (, this, ), ;, registerNativeType]
[), ;, registerNativeType, (, JSTypeNative, ., NO_OBJECT_TYPE, ,, NO_OBJECT_TYPE, ), ;, NoObjectType, NO_RESOLVED_TYPE, =, new, NoResolvedType, (, this, ), ;]
[;, NoObjectType, NO_RESOLVED_TYPE, =, new, NoResolvedType, (, this, ), ;, registerNativeType, (, JSTypeNative, ., NO_RESOLVED_TYPE, ,, NO_RESOLVED_TYPE, ), ;, FunctionType]
[,, NO_OBJECT_TYPE, ), ;, NoObjectType, NO_RESOLVED_TYPE, =, new, NoResolvedType, (, this, ), ;, registerNativeType, (, JSTypeNative, ., NO_RESOLVED_TYPE, ,, NO_RESOLVED_TYPE]
[., NO_OBJECT_TYPE, ,, NO_OBJECT_TYPE, ), ;, NoObjectType, NO_RESOLVED_TYPE, =, new, NoResolvedType, (, this, ), ;, registerNativeType, (, JSTypeNative, ., NO_RESOLVED_TYPE]
[), ;, NoObjectType, NO_RESOLVED_TYPE, =, new, NoResolvedType, (, this, ), ;, registerNativeType, (, JSTypeNative, ., NO_RESOLVED_TYPE, ,, NO_RESOLVED_TYPE, ), ;]
[;, registerNativeType, (, JSTypeNative, ., NO_RESOLVED_TYPE, ,, NO_RESOLVED_TYPE, ), ;, FunctionType, ARRAY_FUNCTION_TYPE, =, new, FunctionType, (, this, ,, "Array", ,]
[), ;, registerNativeType, (, JSTypeNative, ., NO_RESOLVED_TYPE, ,, NO_RESOLVED_TYPE, ), ;, FunctionType, ARRAY_FUNCTION_TYPE, =, new, FunctionType, (, this, ,, "Array"]
[;, FunctionType, ARRAY_FUNCTION_TYPE, =, new, FunctionType, (, this, ,, "Array", ,, null, ,, createArrowType, (, createParametersWithVarArgs, (, ALL_TYPE, ), ,]
[,, NO_RESOLVED_TYPE, ), ;, FunctionType, ARRAY_FUNCTION_TYPE, =, new, FunctionType, (, this, ,, "Array", ,, null, ,, createArrowType, (, createParametersWithVarArgs, (]
[., NO_RESOLVED_TYPE, ,, NO_RESOLVED_TYPE, ), ;, FunctionType, ARRAY_FUNCTION_TYPE, =, new, FunctionType, (, this, ,, "Array", ,, null, ,, createArrowType, (]
[), ;, FunctionType, ARRAY_FUNCTION_TYPE, =, new, FunctionType, (, this, ,, "Array", ,, null, ,, createArrowType, (, createParametersWithVarArgs, (, ALL_TYPE, )]
[;, ARRAY_FUNCTION_TYPE, ., getInternalArrowType, (, ), ., returnType, =, ARRAY_FUNCTION_TYPE, ., getInstanceType, (, ), ;, ObjectType, arrayPrototype, =, ARRAY_FUNCTION_TYPE, .]
[,, "Array", ,, null, ,, createArrowType, (, createParametersWithVarArgs, (, ALL_TYPE, ), ,, null, ), ,, null, ,, null, ,, true]
[,, null, ,, createArrowType, (, createParametersWithVarArgs, (, ALL_TYPE, ), ,, null, ), ,, null, ,, null, ,, true, ,, true]
[,, createArrowType, (, createParametersWithVarArgs, (, ALL_TYPE, ), ,, null, ), ,, null, ,, null, ,, true, ,, true, ), ;]
[,, null, ,, null, ,, true, ,, true, ), ;, ARRAY_FUNCTION_TYPE, ., getInternalArrowType, (, ), ., returnType, =, ARRAY_FUNCTION_TYPE, .]
[,, null, ), ,, null, ,, null, ,, true, ,, true, ), ;, ARRAY_FUNCTION_TYPE, ., getInternalArrowType, (, ), ., returnType]
[), ,, null, ), ,, null, ,, null, ,, true, ,, true, ), ;, ARRAY_FUNCTION_TYPE, ., getInternalArrowType, (, ), .]
[), ,, null, ,, null, ,, true, ,, true, ), ;, ARRAY_FUNCTION_TYPE, ., getInternalArrowType, (, ), ., returnType, =, ARRAY_FUNCTION_TYPE]
[,, null, ,, true, ,, true, ), ;, ARRAY_FUNCTION_TYPE, ., getInternalArrowType, (, ), ., returnType, =, ARRAY_FUNCTION_TYPE, ., getInstanceType, (]
[,, true, ,, true, ), ;, ARRAY_FUNCTION_TYPE, ., getInternalArrowType, (, ), ., returnType, =, ARRAY_FUNCTION_TYPE, ., getInstanceType, (, ), ;]
[,, true, ), ;, ARRAY_FUNCTION_TYPE, ., getInternalArrowType, (, ), ., returnType, =, ARRAY_FUNCTION_TYPE, ., getInstanceType, (, ), ;, ObjectType, arrayPrototype]
[), ;, ARRAY_FUNCTION_TYPE, ., getInternalArrowType, (, ), ., returnType, =, ARRAY_FUNCTION_TYPE, ., getInstanceType, (, ), ;, ObjectType, arrayPrototype, =, ARRAY_FUNCTION_TYPE]
[=, ARRAY_FUNCTION_TYPE, ., getInstanceType, (, ), ;, ObjectType, arrayPrototype, =, ARRAY_FUNCTION_TYPE, ., getPrototype, (, ), ;, registerNativeType, (, JSTypeNative, .]
[., returnType, =, ARRAY_FUNCTION_TYPE, ., getInstanceType, (, ), ;, ObjectType, arrayPrototype, =, ARRAY_FUNCTION_TYPE, ., getPrototype, (, ), ;, registerNativeType, (]
[., getInternalArrowType, (, ), ., returnType, =, ARRAY_FUNCTION_TYPE, ., getInstanceType, (, ), ;, ObjectType, arrayPrototype, =, ARRAY_FUNCTION_TYPE, ., getPrototype, (]
[;, ObjectType, arrayPrototype, =, ARRAY_FUNCTION_TYPE, ., getPrototype, (, ), ;, registerNativeType, (, JSTypeNative, ., ARRAY_FUNCTION_TYPE, ,, ARRAY_FUNCTION_TYPE, ), ;, ObjectType]
[., getInstanceType, (, ), ;, ObjectType, arrayPrototype, =, ARRAY_FUNCTION_TYPE, ., getPrototype, (, ), ;, registerNativeType, (, JSTypeNative, ., ARRAY_FUNCTION_TYPE, ,]
[;, registerNativeType, (, JSTypeNative, ., ARRAY_FUNCTION_TYPE, ,, ARRAY_FUNCTION_TYPE, ), ;, ObjectType, ARRAY_TYPE, =, ARRAY_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType]
[., getPrototype, (, ), ;, registerNativeType, (, JSTypeNative, ., ARRAY_FUNCTION_TYPE, ,, ARRAY_FUNCTION_TYPE, ), ;, ObjectType, ARRAY_TYPE, =, ARRAY_FUNCTION_TYPE, ., getInstanceType]
[;, ObjectType, ARRAY_TYPE, =, ARRAY_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., ARRAY_TYPE, ,, ARRAY_TYPE, ), ;, FunctionType]
[,, ARRAY_FUNCTION_TYPE, ), ;, ObjectType, ARRAY_TYPE, =, ARRAY_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., ARRAY_TYPE, ,, ARRAY_TYPE]
[., ARRAY_FUNCTION_TYPE, ,, ARRAY_FUNCTION_TYPE, ), ;, ObjectType, ARRAY_TYPE, =, ARRAY_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., ARRAY_TYPE]
[), ;, ObjectType, ARRAY_TYPE, =, ARRAY_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., ARRAY_TYPE, ,, ARRAY_TYPE, ), ;]
[;, registerNativeType, (, JSTypeNative, ., ARRAY_TYPE, ,, ARRAY_TYPE, ), ;, FunctionType, BOOLEAN_OBJECT_FUNCTION_TYPE, =, new, FunctionType, (, this, ,, "Boolean", ,]
[., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., ARRAY_TYPE, ,, ARRAY_TYPE, ), ;, FunctionType, BOOLEAN_OBJECT_FUNCTION_TYPE, =, new, FunctionType, (]
[;, FunctionType, BOOLEAN_OBJECT_FUNCTION_TYPE, =, new, FunctionType, (, this, ,, "Boolean", ,, null, ,, createArrowType, (, createOptionalParameters, (, ALL_TYPE, ), ,]
[,, ARRAY_TYPE, ), ;, FunctionType, BOOLEAN_OBJECT_FUNCTION_TYPE, =, new, FunctionType, (, this, ,, "Boolean", ,, null, ,, createArrowType, (, createOptionalParameters, (]
[., ARRAY_TYPE, ,, ARRAY_TYPE, ), ;, FunctionType, BOOLEAN_OBJECT_FUNCTION_TYPE, =, new, FunctionType, (, this, ,, "Boolean", ,, null, ,, createArrowType, (]
[), ;, FunctionType, BOOLEAN_OBJECT_FUNCTION_TYPE, =, new, FunctionType, (, this, ,, "Boolean", ,, null, ,, createArrowType, (, createOptionalParameters, (, ALL_TYPE, )]
[;, ObjectType, booleanPrototype, =, BOOLEAN_OBJECT_FUNCTION_TYPE, ., getPrototype, (, ), ;, registerNativeType, (, JSTypeNative, ., BOOLEAN_OBJECT_FUNCTION_TYPE, ,, BOOLEAN_OBJECT_FUNCTION_TYPE, ), ;, ObjectType]
[,, "Boolean", ,, null, ,, createArrowType, (, createOptionalParameters, (, ALL_TYPE, ), ,, BOOLEAN_TYPE, ), ,, null, ,, null, ,, true]
[,, null, ,, createArrowType, (, createOptionalParameters, (, ALL_TYPE, ), ,, BOOLEAN_TYPE, ), ,, null, ,, null, ,, true, ,, true]
[,, createArrowType, (, createOptionalParameters, (, ALL_TYPE, ), ,, BOOLEAN_TYPE, ), ,, null, ,, null, ,, true, ,, true, ), ;]
[,, null, ,, null, ,, true, ,, true, ), ;, ObjectType, booleanPrototype, =, BOOLEAN_OBJECT_FUNCTION_TYPE, ., getPrototype, (, ), ;, registerNativeType]
[,, BOOLEAN_TYPE, ), ,, null, ,, null, ,, true, ,, true, ), ;, ObjectType, booleanPrototype, =, BOOLEAN_OBJECT_FUNCTION_TYPE, ., getPrototype, (]
[), ,, BOOLEAN_TYPE, ), ,, null, ,, null, ,, true, ,, true, ), ;, ObjectType, booleanPrototype, =, BOOLEAN_OBJECT_FUNCTION_TYPE, ., getPrototype]
[), ,, null, ,, null, ,, true, ,, true, ), ;, ObjectType, booleanPrototype, =, BOOLEAN_OBJECT_FUNCTION_TYPE, ., getPrototype, (, ), ;]
[,, null, ,, true, ,, true, ), ;, ObjectType, booleanPrototype, =, BOOLEAN_OBJECT_FUNCTION_TYPE, ., getPrototype, (, ), ;, registerNativeType, (, JSTypeNative]
[,, true, ,, true, ), ;, ObjectType, booleanPrototype, =, BOOLEAN_OBJECT_FUNCTION_TYPE, ., getPrototype, (, ), ;, registerNativeType, (, JSTypeNative, ., BOOLEAN_OBJECT_FUNCTION_TYPE]
[,, true, ), ;, ObjectType, booleanPrototype, =, BOOLEAN_OBJECT_FUNCTION_TYPE, ., getPrototype, (, ), ;, registerNativeType, (, JSTypeNative, ., BOOLEAN_OBJECT_FUNCTION_TYPE, ,, BOOLEAN_OBJECT_FUNCTION_TYPE]
[), ;, ObjectType, booleanPrototype, =, BOOLEAN_OBJECT_FUNCTION_TYPE, ., getPrototype, (, ), ;, registerNativeType, (, JSTypeNative, ., BOOLEAN_OBJECT_FUNCTION_TYPE, ,, BOOLEAN_OBJECT_FUNCTION_TYPE, ), ;]
[;, registerNativeType, (, JSTypeNative, ., BOOLEAN_OBJECT_FUNCTION_TYPE, ,, BOOLEAN_OBJECT_FUNCTION_TYPE, ), ;, ObjectType, BOOLEAN_OBJECT_TYPE, =, BOOLEAN_OBJECT_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType]
[., getPrototype, (, ), ;, registerNativeType, (, JSTypeNative, ., BOOLEAN_OBJECT_FUNCTION_TYPE, ,, BOOLEAN_OBJECT_FUNCTION_TYPE, ), ;, ObjectType, BOOLEAN_OBJECT_TYPE, =, BOOLEAN_OBJECT_FUNCTION_TYPE, ., getInstanceType]
[;, ObjectType, BOOLEAN_OBJECT_TYPE, =, BOOLEAN_OBJECT_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., BOOLEAN_OBJECT_TYPE, ,, BOOLEAN_OBJECT_TYPE, ), ;, FunctionType]
[,, BOOLEAN_OBJECT_FUNCTION_TYPE, ), ;, ObjectType, BOOLEAN_OBJECT_TYPE, =, BOOLEAN_OBJECT_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., BOOLEAN_OBJECT_TYPE, ,, BOOLEAN_OBJECT_TYPE]
[., BOOLEAN_OBJECT_FUNCTION_TYPE, ,, BOOLEAN_OBJECT_FUNCTION_TYPE, ), ;, ObjectType, BOOLEAN_OBJECT_TYPE, =, BOOLEAN_OBJECT_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., BOOLEAN_OBJECT_TYPE]
[), ;, ObjectType, BOOLEAN_OBJECT_TYPE, =, BOOLEAN_OBJECT_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., BOOLEAN_OBJECT_TYPE, ,, BOOLEAN_OBJECT_TYPE, ), ;]
[;, registerNativeType, (, JSTypeNative, ., BOOLEAN_OBJECT_TYPE, ,, BOOLEAN_OBJECT_TYPE, ), ;, FunctionType, DATE_FUNCTION_TYPE, =, new, FunctionType, (, this, ,, "Date", ,]
[., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., BOOLEAN_OBJECT_TYPE, ,, BOOLEAN_OBJECT_TYPE, ), ;, FunctionType, DATE_FUNCTION_TYPE, =, new, FunctionType, (]
[;, FunctionType, DATE_FUNCTION_TYPE, =, new, FunctionType, (, this, ,, "Date", ,, null, ,, createArrowType, (, createOptionalParameters, (, UNKNOWN_TYPE, ,, UNKNOWN_TYPE]
[,, BOOLEAN_OBJECT_TYPE, ), ;, FunctionType, DATE_FUNCTION_TYPE, =, new, FunctionType, (, this, ,, "Date", ,, null, ,, createArrowType, (, createOptionalParameters, (]
[., BOOLEAN_OBJECT_TYPE, ,, BOOLEAN_OBJECT_TYPE, ), ;, FunctionType, DATE_FUNCTION_TYPE, =, new, FunctionType, (, this, ,, "Date", ,, null, ,, createArrowType, (]
[), ;, FunctionType, DATE_FUNCTION_TYPE, =, new, FunctionType, (, this, ,, "Date", ,, null, ,, createArrowType, (, createOptionalParameters, (, UNKNOWN_TYPE, ,]
[;, ObjectType, datePrototype, =, DATE_FUNCTION_TYPE, ., getPrototype, (, ), ;, registerNativeType, (, JSTypeNative, ., DATE_FUNCTION_TYPE, ,, DATE_FUNCTION_TYPE, ), ;, ObjectType]
[,, "Date", ,, null, ,, createArrowType, (, createOptionalParameters, (, UNKNOWN_TYPE, ,, UNKNOWN_TYPE, ,, UNKNOWN_TYPE, ,, UNKNOWN_TYPE, ,, UNKNOWN_TYPE, ,, UNKNOWN_TYPE]
[,, null, ,, createArrowType, (, createOptionalParameters, (, UNKNOWN_TYPE, ,, UNKNOWN_TYPE, ,, UNKNOWN_TYPE, ,, UNKNOWN_TYPE, ,, UNKNOWN_TYPE, ,, UNKNOWN_TYPE, ,, UNKNOWN_TYPE]
[,, createArrowType, (, createOptionalParameters, (, UNKNOWN_TYPE, ,, UNKNOWN_TYPE, ,, UNKNOWN_TYPE, ,, UNKNOWN_TYPE, ,, UNKNOWN_TYPE, ,, UNKNOWN_TYPE, ,, UNKNOWN_TYPE, ), ,]
[,, null, ,, null, ,, true, ,, true, ), ;, ObjectType, datePrototype, =, DATE_FUNCTION_TYPE, ., getPrototype, (, ), ;, registerNativeType]
[,, STRING_TYPE, ), ,, null, ,, null, ,, true, ,, true, ), ;, ObjectType, datePrototype, =, DATE_FUNCTION_TYPE, ., getPrototype, (]
[,, UNKNOWN_TYPE, ,, UNKNOWN_TYPE, ,, UNKNOWN_TYPE, ,, UNKNOWN_TYPE, ,, UNKNOWN_TYPE, ,, UNKNOWN_TYPE, ), ,, STRING_TYPE, ), ,, null, ,, null]
[,, UNKNOWN_TYPE, ,, UNKNOWN_TYPE, ,, UNKNOWN_TYPE, ,, UNKNOWN_TYPE, ,, UNKNOWN_TYPE, ), ,, STRING_TYPE, ), ,, null, ,, null, ,, true]
[,, UNKNOWN_TYPE, ,, UNKNOWN_TYPE, ,, UNKNOWN_TYPE, ,, UNKNOWN_TYPE, ), ,, STRING_TYPE, ), ,, null, ,, null, ,, true, ,, true]
[,, UNKNOWN_TYPE, ,, UNKNOWN_TYPE, ,, UNKNOWN_TYPE, ), ,, STRING_TYPE, ), ,, null, ,, null, ,, true, ,, true, ), ;]
[,, UNKNOWN_TYPE, ,, UNKNOWN_TYPE, ), ,, STRING_TYPE, ), ,, null, ,, null, ,, true, ,, true, ), ;, ObjectType, datePrototype]
[,, UNKNOWN_TYPE, ), ,, STRING_TYPE, ), ,, null, ,, null, ,, true, ,, true, ), ;, ObjectType, datePrototype, =, DATE_FUNCTION_TYPE]
[), ,, STRING_TYPE, ), ,, null, ,, null, ,, true, ,, true, ), ;, ObjectType, datePrototype, =, DATE_FUNCTION_TYPE, ., getPrototype]
[), ,, null, ,, null, ,, true, ,, true, ), ;, ObjectType, datePrototype, =, DATE_FUNCTION_TYPE, ., getPrototype, (, ), ;]
[,, null, ,, true, ,, true, ), ;, ObjectType, datePrototype, =, DATE_FUNCTION_TYPE, ., getPrototype, (, ), ;, registerNativeType, (, JSTypeNative]
[,, true, ,, true, ), ;, ObjectType, datePrototype, =, DATE_FUNCTION_TYPE, ., getPrototype, (, ), ;, registerNativeType, (, JSTypeNative, ., DATE_FUNCTION_TYPE]
[,, true, ), ;, ObjectType, datePrototype, =, DATE_FUNCTION_TYPE, ., getPrototype, (, ), ;, registerNativeType, (, JSTypeNative, ., DATE_FUNCTION_TYPE, ,, DATE_FUNCTION_TYPE]
[), ;, ObjectType, datePrototype, =, DATE_FUNCTION_TYPE, ., getPrototype, (, ), ;, registerNativeType, (, JSTypeNative, ., DATE_FUNCTION_TYPE, ,, DATE_FUNCTION_TYPE, ), ;]
[;, registerNativeType, (, JSTypeNative, ., DATE_FUNCTION_TYPE, ,, DATE_FUNCTION_TYPE, ), ;, ObjectType, DATE_TYPE, =, DATE_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType]
[., getPrototype, (, ), ;, registerNativeType, (, JSTypeNative, ., DATE_FUNCTION_TYPE, ,, DATE_FUNCTION_TYPE, ), ;, ObjectType, DATE_TYPE, =, DATE_FUNCTION_TYPE, ., getInstanceType]
[;, ObjectType, DATE_TYPE, =, DATE_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., DATE_TYPE, ,, DATE_TYPE, ), ;, FunctionType]
[,, DATE_FUNCTION_TYPE, ), ;, ObjectType, DATE_TYPE, =, DATE_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., DATE_TYPE, ,, DATE_TYPE]
[., DATE_FUNCTION_TYPE, ,, DATE_FUNCTION_TYPE, ), ;, ObjectType, DATE_TYPE, =, DATE_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., DATE_TYPE]
[), ;, ObjectType, DATE_TYPE, =, DATE_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., DATE_TYPE, ,, DATE_TYPE, ), ;]
[;, registerNativeType, (, JSTypeNative, ., DATE_TYPE, ,, DATE_TYPE, ), ;, FunctionType, ERROR_FUNCTION_TYPE, =, new, ErrorFunctionType, (, this, ,, "Error", )]
[., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., DATE_TYPE, ,, DATE_TYPE, ), ;, FunctionType, ERROR_FUNCTION_TYPE, =, new, ErrorFunctionType, (]
[;, FunctionType, ERROR_FUNCTION_TYPE, =, new, ErrorFunctionType, (, this, ,, "Error", ), ;, registerNativeType, (, JSTypeNative, ., ERROR_FUNCTION_TYPE, ,, ERROR_FUNCTION_TYPE, )]
[,, DATE_TYPE, ), ;, FunctionType, ERROR_FUNCTION_TYPE, =, new, ErrorFunctionType, (, this, ,, "Error", ), ;, registerNativeType, (, JSTypeNative, ., ERROR_FUNCTION_TYPE]
[., DATE_TYPE, ,, DATE_TYPE, ), ;, FunctionType, ERROR_FUNCTION_TYPE, =, new, ErrorFunctionType, (, this, ,, "Error", ), ;, registerNativeType, (, JSTypeNative]
[), ;, FunctionType, ERROR_FUNCTION_TYPE, =, new, ErrorFunctionType, (, this, ,, "Error", ), ;, registerNativeType, (, JSTypeNative, ., ERROR_FUNCTION_TYPE, ,, ERROR_FUNCTION_TYPE]
[;, registerNativeType, (, JSTypeNative, ., ERROR_FUNCTION_TYPE, ,, ERROR_FUNCTION_TYPE, ), ;, ObjectType, ERROR_TYPE, =, ERROR_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType]
[,, "Error", ), ;, registerNativeType, (, JSTypeNative, ., ERROR_FUNCTION_TYPE, ,, ERROR_FUNCTION_TYPE, ), ;, ObjectType, ERROR_TYPE, =, ERROR_FUNCTION_TYPE, ., getInstanceType, (]
[), ;, registerNativeType, (, JSTypeNative, ., ERROR_FUNCTION_TYPE, ,, ERROR_FUNCTION_TYPE, ), ;, ObjectType, ERROR_TYPE, =, ERROR_FUNCTION_TYPE, ., getInstanceType, (, ), ;]
[;, ObjectType, ERROR_TYPE, =, ERROR_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., ERROR_TYPE, ,, ERROR_TYPE, ), ;, FunctionType]
[,, ERROR_FUNCTION_TYPE, ), ;, ObjectType, ERROR_TYPE, =, ERROR_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., ERROR_TYPE, ,, ERROR_TYPE]
[., ERROR_FUNCTION_TYPE, ,, ERROR_FUNCTION_TYPE, ), ;, ObjectType, ERROR_TYPE, =, ERROR_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., ERROR_TYPE]
[), ;, ObjectType, ERROR_TYPE, =, ERROR_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., ERROR_TYPE, ,, ERROR_TYPE, ), ;]
[;, registerNativeType, (, JSTypeNative, ., ERROR_TYPE, ,, ERROR_TYPE, ), ;, FunctionType, EVAL_ERROR_FUNCTION_TYPE, =, new, ErrorFunctionType, (, this, ,, "EvalError", )]
[., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., ERROR_TYPE, ,, ERROR_TYPE, ), ;, FunctionType, EVAL_ERROR_FUNCTION_TYPE, =, new, ErrorFunctionType, (]
[;, FunctionType, EVAL_ERROR_FUNCTION_TYPE, =, new, ErrorFunctionType, (, this, ,, "EvalError", ), ;, EVAL_ERROR_FUNCTION_TYPE, ., setPrototypeBasedOn, (, ERROR_TYPE, ), ;, registerNativeType]
[,, ERROR_TYPE, ), ;, FunctionType, EVAL_ERROR_FUNCTION_TYPE, =, new, ErrorFunctionType, (, this, ,, "EvalError", ), ;, EVAL_ERROR_FUNCTION_TYPE, ., setPrototypeBasedOn, (, ERROR_TYPE]
[., ERROR_TYPE, ,, ERROR_TYPE, ), ;, FunctionType, EVAL_ERROR_FUNCTION_TYPE, =, new, ErrorFunctionType, (, this, ,, "EvalError", ), ;, EVAL_ERROR_FUNCTION_TYPE, ., setPrototypeBasedOn]
[), ;, FunctionType, EVAL_ERROR_FUNCTION_TYPE, =, new, ErrorFunctionType, (, this, ,, "EvalError", ), ;, EVAL_ERROR_FUNCTION_TYPE, ., setPrototypeBasedOn, (, ERROR_TYPE, ), ;]
[;, EVAL_ERROR_FUNCTION_TYPE, ., setPrototypeBasedOn, (, ERROR_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., EVAL_ERROR_FUNCTION_TYPE, ,, EVAL_ERROR_FUNCTION_TYPE, ), ;, ObjectType, EVAL_ERROR_TYPE, =]
[,, "EvalError", ), ;, EVAL_ERROR_FUNCTION_TYPE, ., setPrototypeBasedOn, (, ERROR_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., EVAL_ERROR_FUNCTION_TYPE, ,, EVAL_ERROR_FUNCTION_TYPE, ), ;]
[), ;, EVAL_ERROR_FUNCTION_TYPE, ., setPrototypeBasedOn, (, ERROR_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., EVAL_ERROR_FUNCTION_TYPE, ,, EVAL_ERROR_FUNCTION_TYPE, ), ;, ObjectType, EVAL_ERROR_TYPE]
[;, registerNativeType, (, JSTypeNative, ., EVAL_ERROR_FUNCTION_TYPE, ,, EVAL_ERROR_FUNCTION_TYPE, ), ;, ObjectType, EVAL_ERROR_TYPE, =, EVAL_ERROR_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType]
[., setPrototypeBasedOn, (, ERROR_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., EVAL_ERROR_FUNCTION_TYPE, ,, EVAL_ERROR_FUNCTION_TYPE, ), ;, ObjectType, EVAL_ERROR_TYPE, =, EVAL_ERROR_FUNCTION_TYPE, .]
[), ;, registerNativeType, (, JSTypeNative, ., EVAL_ERROR_FUNCTION_TYPE, ,, EVAL_ERROR_FUNCTION_TYPE, ), ;, ObjectType, EVAL_ERROR_TYPE, =, EVAL_ERROR_FUNCTION_TYPE, ., getInstanceType, (, ), ;]
[;, ObjectType, EVAL_ERROR_TYPE, =, EVAL_ERROR_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., EVAL_ERROR_TYPE, ,, EVAL_ERROR_TYPE, ), ;, FunctionType]
[,, EVAL_ERROR_FUNCTION_TYPE, ), ;, ObjectType, EVAL_ERROR_TYPE, =, EVAL_ERROR_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., EVAL_ERROR_TYPE, ,, EVAL_ERROR_TYPE]
[., EVAL_ERROR_FUNCTION_TYPE, ,, EVAL_ERROR_FUNCTION_TYPE, ), ;, ObjectType, EVAL_ERROR_TYPE, =, EVAL_ERROR_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., EVAL_ERROR_TYPE]
[), ;, ObjectType, EVAL_ERROR_TYPE, =, EVAL_ERROR_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., EVAL_ERROR_TYPE, ,, EVAL_ERROR_TYPE, ), ;]
[;, registerNativeType, (, JSTypeNative, ., EVAL_ERROR_TYPE, ,, EVAL_ERROR_TYPE, ), ;, FunctionType, RANGE_ERROR_FUNCTION_TYPE, =, new, ErrorFunctionType, (, this, ,, "RangeError", )]
[., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., EVAL_ERROR_TYPE, ,, EVAL_ERROR_TYPE, ), ;, FunctionType, RANGE_ERROR_FUNCTION_TYPE, =, new, ErrorFunctionType, (]
[;, FunctionType, RANGE_ERROR_FUNCTION_TYPE, =, new, ErrorFunctionType, (, this, ,, "RangeError", ), ;, RANGE_ERROR_FUNCTION_TYPE, ., setPrototypeBasedOn, (, ERROR_TYPE, ), ;, registerNativeType]
[,, EVAL_ERROR_TYPE, ), ;, FunctionType, RANGE_ERROR_FUNCTION_TYPE, =, new, ErrorFunctionType, (, this, ,, "RangeError", ), ;, RANGE_ERROR_FUNCTION_TYPE, ., setPrototypeBasedOn, (, ERROR_TYPE]
[., EVAL_ERROR_TYPE, ,, EVAL_ERROR_TYPE, ), ;, FunctionType, RANGE_ERROR_FUNCTION_TYPE, =, new, ErrorFunctionType, (, this, ,, "RangeError", ), ;, RANGE_ERROR_FUNCTION_TYPE, ., setPrototypeBasedOn]
[), ;, FunctionType, RANGE_ERROR_FUNCTION_TYPE, =, new, ErrorFunctionType, (, this, ,, "RangeError", ), ;, RANGE_ERROR_FUNCTION_TYPE, ., setPrototypeBasedOn, (, ERROR_TYPE, ), ;]
[;, RANGE_ERROR_FUNCTION_TYPE, ., setPrototypeBasedOn, (, ERROR_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., RANGE_ERROR_FUNCTION_TYPE, ,, RANGE_ERROR_FUNCTION_TYPE, ), ;, ObjectType, RANGE_ERROR_TYPE, =]
[,, "RangeError", ), ;, RANGE_ERROR_FUNCTION_TYPE, ., setPrototypeBasedOn, (, ERROR_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., RANGE_ERROR_FUNCTION_TYPE, ,, RANGE_ERROR_FUNCTION_TYPE, ), ;]
[), ;, RANGE_ERROR_FUNCTION_TYPE, ., setPrototypeBasedOn, (, ERROR_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., RANGE_ERROR_FUNCTION_TYPE, ,, RANGE_ERROR_FUNCTION_TYPE, ), ;, ObjectType, RANGE_ERROR_TYPE]
[;, registerNativeType, (, JSTypeNative, ., RANGE_ERROR_FUNCTION_TYPE, ,, RANGE_ERROR_FUNCTION_TYPE, ), ;, ObjectType, RANGE_ERROR_TYPE, =, RANGE_ERROR_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType]
[., setPrototypeBasedOn, (, ERROR_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., RANGE_ERROR_FUNCTION_TYPE, ,, RANGE_ERROR_FUNCTION_TYPE, ), ;, ObjectType, RANGE_ERROR_TYPE, =, RANGE_ERROR_FUNCTION_TYPE, .]
[), ;, registerNativeType, (, JSTypeNative, ., RANGE_ERROR_FUNCTION_TYPE, ,, RANGE_ERROR_FUNCTION_TYPE, ), ;, ObjectType, RANGE_ERROR_TYPE, =, RANGE_ERROR_FUNCTION_TYPE, ., getInstanceType, (, ), ;]
[;, ObjectType, RANGE_ERROR_TYPE, =, RANGE_ERROR_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., RANGE_ERROR_TYPE, ,, RANGE_ERROR_TYPE, ), ;, FunctionType]
[,, RANGE_ERROR_FUNCTION_TYPE, ), ;, ObjectType, RANGE_ERROR_TYPE, =, RANGE_ERROR_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., RANGE_ERROR_TYPE, ,, RANGE_ERROR_TYPE]
[., RANGE_ERROR_FUNCTION_TYPE, ,, RANGE_ERROR_FUNCTION_TYPE, ), ;, ObjectType, RANGE_ERROR_TYPE, =, RANGE_ERROR_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., RANGE_ERROR_TYPE]
[), ;, ObjectType, RANGE_ERROR_TYPE, =, RANGE_ERROR_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., RANGE_ERROR_TYPE, ,, RANGE_ERROR_TYPE, ), ;]
[;, registerNativeType, (, JSTypeNative, ., RANGE_ERROR_TYPE, ,, RANGE_ERROR_TYPE, ), ;, FunctionType, REFERENCE_ERROR_FUNCTION_TYPE, =, new, ErrorFunctionType, (, this, ,, "ReferenceError", )]
[., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., RANGE_ERROR_TYPE, ,, RANGE_ERROR_TYPE, ), ;, FunctionType, REFERENCE_ERROR_FUNCTION_TYPE, =, new, ErrorFunctionType, (]
[;, FunctionType, REFERENCE_ERROR_FUNCTION_TYPE, =, new, ErrorFunctionType, (, this, ,, "ReferenceError", ), ;, REFERENCE_ERROR_FUNCTION_TYPE, ., setPrototypeBasedOn, (, ERROR_TYPE, ), ;, registerNativeType]
[,, RANGE_ERROR_TYPE, ), ;, FunctionType, REFERENCE_ERROR_FUNCTION_TYPE, =, new, ErrorFunctionType, (, this, ,, "ReferenceError", ), ;, REFERENCE_ERROR_FUNCTION_TYPE, ., setPrototypeBasedOn, (, ERROR_TYPE]
[., RANGE_ERROR_TYPE, ,, RANGE_ERROR_TYPE, ), ;, FunctionType, REFERENCE_ERROR_FUNCTION_TYPE, =, new, ErrorFunctionType, (, this, ,, "ReferenceError", ), ;, REFERENCE_ERROR_FUNCTION_TYPE, ., setPrototypeBasedOn]
[), ;, FunctionType, REFERENCE_ERROR_FUNCTION_TYPE, =, new, ErrorFunctionType, (, this, ,, "ReferenceError", ), ;, REFERENCE_ERROR_FUNCTION_TYPE, ., setPrototypeBasedOn, (, ERROR_TYPE, ), ;]
[;, REFERENCE_ERROR_FUNCTION_TYPE, ., setPrototypeBasedOn, (, ERROR_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., REFERENCE_ERROR_FUNCTION_TYPE, ,, REFERENCE_ERROR_FUNCTION_TYPE, ), ;, ObjectType, REFERENCE_ERROR_TYPE, =]
[,, "ReferenceError", ), ;, REFERENCE_ERROR_FUNCTION_TYPE, ., setPrototypeBasedOn, (, ERROR_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., REFERENCE_ERROR_FUNCTION_TYPE, ,, REFERENCE_ERROR_FUNCTION_TYPE, ), ;]
[), ;, REFERENCE_ERROR_FUNCTION_TYPE, ., setPrototypeBasedOn, (, ERROR_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., REFERENCE_ERROR_FUNCTION_TYPE, ,, REFERENCE_ERROR_FUNCTION_TYPE, ), ;, ObjectType, REFERENCE_ERROR_TYPE]
[;, registerNativeType, (, JSTypeNative, ., REFERENCE_ERROR_FUNCTION_TYPE, ,, REFERENCE_ERROR_FUNCTION_TYPE, ), ;, ObjectType, REFERENCE_ERROR_TYPE, =, REFERENCE_ERROR_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType]
[., setPrototypeBasedOn, (, ERROR_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., REFERENCE_ERROR_FUNCTION_TYPE, ,, REFERENCE_ERROR_FUNCTION_TYPE, ), ;, ObjectType, REFERENCE_ERROR_TYPE, =, REFERENCE_ERROR_FUNCTION_TYPE, .]
[), ;, registerNativeType, (, JSTypeNative, ., REFERENCE_ERROR_FUNCTION_TYPE, ,, REFERENCE_ERROR_FUNCTION_TYPE, ), ;, ObjectType, REFERENCE_ERROR_TYPE, =, REFERENCE_ERROR_FUNCTION_TYPE, ., getInstanceType, (, ), ;]
[;, ObjectType, REFERENCE_ERROR_TYPE, =, REFERENCE_ERROR_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., REFERENCE_ERROR_TYPE, ,, REFERENCE_ERROR_TYPE, ), ;, FunctionType]
[,, REFERENCE_ERROR_FUNCTION_TYPE, ), ;, ObjectType, REFERENCE_ERROR_TYPE, =, REFERENCE_ERROR_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., REFERENCE_ERROR_TYPE, ,, REFERENCE_ERROR_TYPE]
[., REFERENCE_ERROR_FUNCTION_TYPE, ,, REFERENCE_ERROR_FUNCTION_TYPE, ), ;, ObjectType, REFERENCE_ERROR_TYPE, =, REFERENCE_ERROR_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., REFERENCE_ERROR_TYPE]
[), ;, ObjectType, REFERENCE_ERROR_TYPE, =, REFERENCE_ERROR_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., REFERENCE_ERROR_TYPE, ,, REFERENCE_ERROR_TYPE, ), ;]
[;, registerNativeType, (, JSTypeNative, ., REFERENCE_ERROR_TYPE, ,, REFERENCE_ERROR_TYPE, ), ;, FunctionType, SYNTAX_ERROR_FUNCTION_TYPE, =, new, ErrorFunctionType, (, this, ,, "SyntaxError", )]
[., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., REFERENCE_ERROR_TYPE, ,, REFERENCE_ERROR_TYPE, ), ;, FunctionType, SYNTAX_ERROR_FUNCTION_TYPE, =, new, ErrorFunctionType, (]
[;, FunctionType, SYNTAX_ERROR_FUNCTION_TYPE, =, new, ErrorFunctionType, (, this, ,, "SyntaxError", ), ;, SYNTAX_ERROR_FUNCTION_TYPE, ., setPrototypeBasedOn, (, ERROR_TYPE, ), ;, registerNativeType]
[,, REFERENCE_ERROR_TYPE, ), ;, FunctionType, SYNTAX_ERROR_FUNCTION_TYPE, =, new, ErrorFunctionType, (, this, ,, "SyntaxError", ), ;, SYNTAX_ERROR_FUNCTION_TYPE, ., setPrototypeBasedOn, (, ERROR_TYPE]
[., REFERENCE_ERROR_TYPE, ,, REFERENCE_ERROR_TYPE, ), ;, FunctionType, SYNTAX_ERROR_FUNCTION_TYPE, =, new, ErrorFunctionType, (, this, ,, "SyntaxError", ), ;, SYNTAX_ERROR_FUNCTION_TYPE, ., setPrototypeBasedOn]
[), ;, FunctionType, SYNTAX_ERROR_FUNCTION_TYPE, =, new, ErrorFunctionType, (, this, ,, "SyntaxError", ), ;, SYNTAX_ERROR_FUNCTION_TYPE, ., setPrototypeBasedOn, (, ERROR_TYPE, ), ;]
[;, SYNTAX_ERROR_FUNCTION_TYPE, ., setPrototypeBasedOn, (, ERROR_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., SYNTAX_ERROR_FUNCTION_TYPE, ,, SYNTAX_ERROR_FUNCTION_TYPE, ), ;, ObjectType, SYNTAX_ERROR_TYPE, =]
[,, "SyntaxError", ), ;, SYNTAX_ERROR_FUNCTION_TYPE, ., setPrototypeBasedOn, (, ERROR_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., SYNTAX_ERROR_FUNCTION_TYPE, ,, SYNTAX_ERROR_FUNCTION_TYPE, ), ;]
[), ;, SYNTAX_ERROR_FUNCTION_TYPE, ., setPrototypeBasedOn, (, ERROR_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., SYNTAX_ERROR_FUNCTION_TYPE, ,, SYNTAX_ERROR_FUNCTION_TYPE, ), ;, ObjectType, SYNTAX_ERROR_TYPE]
[;, registerNativeType, (, JSTypeNative, ., SYNTAX_ERROR_FUNCTION_TYPE, ,, SYNTAX_ERROR_FUNCTION_TYPE, ), ;, ObjectType, SYNTAX_ERROR_TYPE, =, SYNTAX_ERROR_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType]
[., setPrototypeBasedOn, (, ERROR_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., SYNTAX_ERROR_FUNCTION_TYPE, ,, SYNTAX_ERROR_FUNCTION_TYPE, ), ;, ObjectType, SYNTAX_ERROR_TYPE, =, SYNTAX_ERROR_FUNCTION_TYPE, .]
[), ;, registerNativeType, (, JSTypeNative, ., SYNTAX_ERROR_FUNCTION_TYPE, ,, SYNTAX_ERROR_FUNCTION_TYPE, ), ;, ObjectType, SYNTAX_ERROR_TYPE, =, SYNTAX_ERROR_FUNCTION_TYPE, ., getInstanceType, (, ), ;]
[;, ObjectType, SYNTAX_ERROR_TYPE, =, SYNTAX_ERROR_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., SYNTAX_ERROR_TYPE, ,, SYNTAX_ERROR_TYPE, ), ;, FunctionType]
[,, SYNTAX_ERROR_FUNCTION_TYPE, ), ;, ObjectType, SYNTAX_ERROR_TYPE, =, SYNTAX_ERROR_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., SYNTAX_ERROR_TYPE, ,, SYNTAX_ERROR_TYPE]
[., SYNTAX_ERROR_FUNCTION_TYPE, ,, SYNTAX_ERROR_FUNCTION_TYPE, ), ;, ObjectType, SYNTAX_ERROR_TYPE, =, SYNTAX_ERROR_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., SYNTAX_ERROR_TYPE]
[), ;, ObjectType, SYNTAX_ERROR_TYPE, =, SYNTAX_ERROR_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., SYNTAX_ERROR_TYPE, ,, SYNTAX_ERROR_TYPE, ), ;]
[;, registerNativeType, (, JSTypeNative, ., SYNTAX_ERROR_TYPE, ,, SYNTAX_ERROR_TYPE, ), ;, FunctionType, TYPE_ERROR_FUNCTION_TYPE, =, new, ErrorFunctionType, (, this, ,, "TypeError", )]
[., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., SYNTAX_ERROR_TYPE, ,, SYNTAX_ERROR_TYPE, ), ;, FunctionType, TYPE_ERROR_FUNCTION_TYPE, =, new, ErrorFunctionType, (]
[;, FunctionType, TYPE_ERROR_FUNCTION_TYPE, =, new, ErrorFunctionType, (, this, ,, "TypeError", ), ;, TYPE_ERROR_FUNCTION_TYPE, ., setPrototypeBasedOn, (, ERROR_TYPE, ), ;, registerNativeType]
[,, SYNTAX_ERROR_TYPE, ), ;, FunctionType, TYPE_ERROR_FUNCTION_TYPE, =, new, ErrorFunctionType, (, this, ,, "TypeError", ), ;, TYPE_ERROR_FUNCTION_TYPE, ., setPrototypeBasedOn, (, ERROR_TYPE]
[., SYNTAX_ERROR_TYPE, ,, SYNTAX_ERROR_TYPE, ), ;, FunctionType, TYPE_ERROR_FUNCTION_TYPE, =, new, ErrorFunctionType, (, this, ,, "TypeError", ), ;, TYPE_ERROR_FUNCTION_TYPE, ., setPrototypeBasedOn]
[), ;, FunctionType, TYPE_ERROR_FUNCTION_TYPE, =, new, ErrorFunctionType, (, this, ,, "TypeError", ), ;, TYPE_ERROR_FUNCTION_TYPE, ., setPrototypeBasedOn, (, ERROR_TYPE, ), ;]
[;, TYPE_ERROR_FUNCTION_TYPE, ., setPrototypeBasedOn, (, ERROR_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., TYPE_ERROR_FUNCTION_TYPE, ,, TYPE_ERROR_FUNCTION_TYPE, ), ;, ObjectType, TYPE_ERROR_TYPE, =]
[,, "TypeError", ), ;, TYPE_ERROR_FUNCTION_TYPE, ., setPrototypeBasedOn, (, ERROR_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., TYPE_ERROR_FUNCTION_TYPE, ,, TYPE_ERROR_FUNCTION_TYPE, ), ;]
[), ;, TYPE_ERROR_FUNCTION_TYPE, ., setPrototypeBasedOn, (, ERROR_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., TYPE_ERROR_FUNCTION_TYPE, ,, TYPE_ERROR_FUNCTION_TYPE, ), ;, ObjectType, TYPE_ERROR_TYPE]
[;, registerNativeType, (, JSTypeNative, ., TYPE_ERROR_FUNCTION_TYPE, ,, TYPE_ERROR_FUNCTION_TYPE, ), ;, ObjectType, TYPE_ERROR_TYPE, =, TYPE_ERROR_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType]
[., setPrototypeBasedOn, (, ERROR_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., TYPE_ERROR_FUNCTION_TYPE, ,, TYPE_ERROR_FUNCTION_TYPE, ), ;, ObjectType, TYPE_ERROR_TYPE, =, TYPE_ERROR_FUNCTION_TYPE, .]
[), ;, registerNativeType, (, JSTypeNative, ., TYPE_ERROR_FUNCTION_TYPE, ,, TYPE_ERROR_FUNCTION_TYPE, ), ;, ObjectType, TYPE_ERROR_TYPE, =, TYPE_ERROR_FUNCTION_TYPE, ., getInstanceType, (, ), ;]
[;, ObjectType, TYPE_ERROR_TYPE, =, TYPE_ERROR_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., TYPE_ERROR_TYPE, ,, TYPE_ERROR_TYPE, ), ;, FunctionType]
[,, TYPE_ERROR_FUNCTION_TYPE, ), ;, ObjectType, TYPE_ERROR_TYPE, =, TYPE_ERROR_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., TYPE_ERROR_TYPE, ,, TYPE_ERROR_TYPE]
[., TYPE_ERROR_FUNCTION_TYPE, ,, TYPE_ERROR_FUNCTION_TYPE, ), ;, ObjectType, TYPE_ERROR_TYPE, =, TYPE_ERROR_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., TYPE_ERROR_TYPE]
[), ;, ObjectType, TYPE_ERROR_TYPE, =, TYPE_ERROR_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., TYPE_ERROR_TYPE, ,, TYPE_ERROR_TYPE, ), ;]
[;, registerNativeType, (, JSTypeNative, ., TYPE_ERROR_TYPE, ,, TYPE_ERROR_TYPE, ), ;, FunctionType, URI_ERROR_FUNCTION_TYPE, =, new, ErrorFunctionType, (, this, ,, "URIError", )]
[., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., TYPE_ERROR_TYPE, ,, TYPE_ERROR_TYPE, ), ;, FunctionType, URI_ERROR_FUNCTION_TYPE, =, new, ErrorFunctionType, (]
[;, FunctionType, URI_ERROR_FUNCTION_TYPE, =, new, ErrorFunctionType, (, this, ,, "URIError", ), ;, URI_ERROR_FUNCTION_TYPE, ., setPrototypeBasedOn, (, ERROR_TYPE, ), ;, registerNativeType]
[,, TYPE_ERROR_TYPE, ), ;, FunctionType, URI_ERROR_FUNCTION_TYPE, =, new, ErrorFunctionType, (, this, ,, "URIError", ), ;, URI_ERROR_FUNCTION_TYPE, ., setPrototypeBasedOn, (, ERROR_TYPE]
[., TYPE_ERROR_TYPE, ,, TYPE_ERROR_TYPE, ), ;, FunctionType, URI_ERROR_FUNCTION_TYPE, =, new, ErrorFunctionType, (, this, ,, "URIError", ), ;, URI_ERROR_FUNCTION_TYPE, ., setPrototypeBasedOn]
[), ;, FunctionType, URI_ERROR_FUNCTION_TYPE, =, new, ErrorFunctionType, (, this, ,, "URIError", ), ;, URI_ERROR_FUNCTION_TYPE, ., setPrototypeBasedOn, (, ERROR_TYPE, ), ;]
[;, URI_ERROR_FUNCTION_TYPE, ., setPrototypeBasedOn, (, ERROR_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., URI_ERROR_FUNCTION_TYPE, ,, URI_ERROR_FUNCTION_TYPE, ), ;, ObjectType, URI_ERROR_TYPE, =]
[,, "URIError", ), ;, URI_ERROR_FUNCTION_TYPE, ., setPrototypeBasedOn, (, ERROR_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., URI_ERROR_FUNCTION_TYPE, ,, URI_ERROR_FUNCTION_TYPE, ), ;]
[), ;, URI_ERROR_FUNCTION_TYPE, ., setPrototypeBasedOn, (, ERROR_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., URI_ERROR_FUNCTION_TYPE, ,, URI_ERROR_FUNCTION_TYPE, ), ;, ObjectType, URI_ERROR_TYPE]
[;, registerNativeType, (, JSTypeNative, ., URI_ERROR_FUNCTION_TYPE, ,, URI_ERROR_FUNCTION_TYPE, ), ;, ObjectType, URI_ERROR_TYPE, =, URI_ERROR_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType]
[., setPrototypeBasedOn, (, ERROR_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., URI_ERROR_FUNCTION_TYPE, ,, URI_ERROR_FUNCTION_TYPE, ), ;, ObjectType, URI_ERROR_TYPE, =, URI_ERROR_FUNCTION_TYPE, .]
[), ;, registerNativeType, (, JSTypeNative, ., URI_ERROR_FUNCTION_TYPE, ,, URI_ERROR_FUNCTION_TYPE, ), ;, ObjectType, URI_ERROR_TYPE, =, URI_ERROR_FUNCTION_TYPE, ., getInstanceType, (, ), ;]
[;, ObjectType, URI_ERROR_TYPE, =, URI_ERROR_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., URI_ERROR_TYPE, ,, URI_ERROR_TYPE, ), ;, FunctionType]
[,, URI_ERROR_FUNCTION_TYPE, ), ;, ObjectType, URI_ERROR_TYPE, =, URI_ERROR_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., URI_ERROR_TYPE, ,, URI_ERROR_TYPE]
[., URI_ERROR_FUNCTION_TYPE, ,, URI_ERROR_FUNCTION_TYPE, ), ;, ObjectType, URI_ERROR_TYPE, =, URI_ERROR_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., URI_ERROR_TYPE]
[), ;, ObjectType, URI_ERROR_TYPE, =, URI_ERROR_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., URI_ERROR_TYPE, ,, URI_ERROR_TYPE, ), ;]
[;, registerNativeType, (, JSTypeNative, ., URI_ERROR_TYPE, ,, URI_ERROR_TYPE, ), ;, FunctionType, NUMBER_OBJECT_FUNCTION_TYPE, =, new, FunctionType, (, this, ,, "Number", ,]
[., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., URI_ERROR_TYPE, ,, URI_ERROR_TYPE, ), ;, FunctionType, NUMBER_OBJECT_FUNCTION_TYPE, =, new, FunctionType, (]
[;, FunctionType, NUMBER_OBJECT_FUNCTION_TYPE, =, new, FunctionType, (, this, ,, "Number", ,, null, ,, createArrowType, (, createOptionalParameters, (, ALL_TYPE, ), ,]
[,, URI_ERROR_TYPE, ), ;, FunctionType, NUMBER_OBJECT_FUNCTION_TYPE, =, new, FunctionType, (, this, ,, "Number", ,, null, ,, createArrowType, (, createOptionalParameters, (]
[., URI_ERROR_TYPE, ,, URI_ERROR_TYPE, ), ;, FunctionType, NUMBER_OBJECT_FUNCTION_TYPE, =, new, FunctionType, (, this, ,, "Number", ,, null, ,, createArrowType, (]
[), ;, FunctionType, NUMBER_OBJECT_FUNCTION_TYPE, =, new, FunctionType, (, this, ,, "Number", ,, null, ,, createArrowType, (, createOptionalParameters, (, ALL_TYPE, )]
[;, ObjectType, numberPrototype, =, NUMBER_OBJECT_FUNCTION_TYPE, ., getPrototype, (, ), ;, registerNativeType, (, JSTypeNative, ., NUMBER_OBJECT_FUNCTION_TYPE, ,, NUMBER_OBJECT_FUNCTION_TYPE, ), ;, ObjectType]
[,, "Number", ,, null, ,, createArrowType, (, createOptionalParameters, (, ALL_TYPE, ), ,, NUMBER_TYPE, ), ,, null, ,, null, ,, true]
[,, null, ,, createArrowType, (, createOptionalParameters, (, ALL_TYPE, ), ,, NUMBER_TYPE, ), ,, null, ,, null, ,, true, ,, true]
[,, createArrowType, (, createOptionalParameters, (, ALL_TYPE, ), ,, NUMBER_TYPE, ), ,, null, ,, null, ,, true, ,, true, ), ;]
[,, null, ,, null, ,, true, ,, true, ), ;, ObjectType, numberPrototype, =, NUMBER_OBJECT_FUNCTION_TYPE, ., getPrototype, (, ), ;, registerNativeType]
[,, NUMBER_TYPE, ), ,, null, ,, null, ,, true, ,, true, ), ;, ObjectType, numberPrototype, =, NUMBER_OBJECT_FUNCTION_TYPE, ., getPrototype, (]
[), ,, NUMBER_TYPE, ), ,, null, ,, null, ,, true, ,, true, ), ;, ObjectType, numberPrototype, =, NUMBER_OBJECT_FUNCTION_TYPE, ., getPrototype]
[), ,, null, ,, null, ,, true, ,, true, ), ;, ObjectType, numberPrototype, =, NUMBER_OBJECT_FUNCTION_TYPE, ., getPrototype, (, ), ;]
[,, null, ,, true, ,, true, ), ;, ObjectType, numberPrototype, =, NUMBER_OBJECT_FUNCTION_TYPE, ., getPrototype, (, ), ;, registerNativeType, (, JSTypeNative]
[,, true, ,, true, ), ;, ObjectType, numberPrototype, =, NUMBER_OBJECT_FUNCTION_TYPE, ., getPrototype, (, ), ;, registerNativeType, (, JSTypeNative, ., NUMBER_OBJECT_FUNCTION_TYPE]
[,, true, ), ;, ObjectType, numberPrototype, =, NUMBER_OBJECT_FUNCTION_TYPE, ., getPrototype, (, ), ;, registerNativeType, (, JSTypeNative, ., NUMBER_OBJECT_FUNCTION_TYPE, ,, NUMBER_OBJECT_FUNCTION_TYPE]
[), ;, ObjectType, numberPrototype, =, NUMBER_OBJECT_FUNCTION_TYPE, ., getPrototype, (, ), ;, registerNativeType, (, JSTypeNative, ., NUMBER_OBJECT_FUNCTION_TYPE, ,, NUMBER_OBJECT_FUNCTION_TYPE, ), ;]
[;, registerNativeType, (, JSTypeNative, ., NUMBER_OBJECT_FUNCTION_TYPE, ,, NUMBER_OBJECT_FUNCTION_TYPE, ), ;, ObjectType, NUMBER_OBJECT_TYPE, =, NUMBER_OBJECT_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType]
[., getPrototype, (, ), ;, registerNativeType, (, JSTypeNative, ., NUMBER_OBJECT_FUNCTION_TYPE, ,, NUMBER_OBJECT_FUNCTION_TYPE, ), ;, ObjectType, NUMBER_OBJECT_TYPE, =, NUMBER_OBJECT_FUNCTION_TYPE, ., getInstanceType]
[;, ObjectType, NUMBER_OBJECT_TYPE, =, NUMBER_OBJECT_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., NUMBER_OBJECT_TYPE, ,, NUMBER_OBJECT_TYPE, ), ;, FunctionType]
[,, NUMBER_OBJECT_FUNCTION_TYPE, ), ;, ObjectType, NUMBER_OBJECT_TYPE, =, NUMBER_OBJECT_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., NUMBER_OBJECT_TYPE, ,, NUMBER_OBJECT_TYPE]
[., NUMBER_OBJECT_FUNCTION_TYPE, ,, NUMBER_OBJECT_FUNCTION_TYPE, ), ;, ObjectType, NUMBER_OBJECT_TYPE, =, NUMBER_OBJECT_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., NUMBER_OBJECT_TYPE]
[), ;, ObjectType, NUMBER_OBJECT_TYPE, =, NUMBER_OBJECT_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., NUMBER_OBJECT_TYPE, ,, NUMBER_OBJECT_TYPE, ), ;]
[;, registerNativeType, (, JSTypeNative, ., NUMBER_OBJECT_TYPE, ,, NUMBER_OBJECT_TYPE, ), ;, FunctionType, REGEXP_FUNCTION_TYPE, =, new, FunctionType, (, this, ,, "RegExp", ,]
[., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., NUMBER_OBJECT_TYPE, ,, NUMBER_OBJECT_TYPE, ), ;, FunctionType, REGEXP_FUNCTION_TYPE, =, new, FunctionType, (]
[;, FunctionType, REGEXP_FUNCTION_TYPE, =, new, FunctionType, (, this, ,, "RegExp", ,, null, ,, createArrowType, (, createOptionalParameters, (, ALL_TYPE, ,, ALL_TYPE]
[,, NUMBER_OBJECT_TYPE, ), ;, FunctionType, REGEXP_FUNCTION_TYPE, =, new, FunctionType, (, this, ,, "RegExp", ,, null, ,, createArrowType, (, createOptionalParameters, (]
[., NUMBER_OBJECT_TYPE, ,, NUMBER_OBJECT_TYPE, ), ;, FunctionType, REGEXP_FUNCTION_TYPE, =, new, FunctionType, (, this, ,, "RegExp", ,, null, ,, createArrowType, (]
[), ;, FunctionType, REGEXP_FUNCTION_TYPE, =, new, FunctionType, (, this, ,, "RegExp", ,, null, ,, createArrowType, (, createOptionalParameters, (, ALL_TYPE, ,]
[;, REGEXP_FUNCTION_TYPE, ., getInternalArrowType, (, ), ., returnType, =, REGEXP_FUNCTION_TYPE, ., getInstanceType, (, ), ;, ObjectType, regexpPrototype, =, REGEXP_FUNCTION_TYPE, .]
[,, "RegExp", ,, null, ,, createArrowType, (, createOptionalParameters, (, ALL_TYPE, ,, ALL_TYPE, ), ), ,, null, ,, null, ,, true]
[,, null, ,, createArrowType, (, createOptionalParameters, (, ALL_TYPE, ,, ALL_TYPE, ), ), ,, null, ,, null, ,, true, ,, true]
[,, createArrowType, (, createOptionalParameters, (, ALL_TYPE, ,, ALL_TYPE, ), ), ,, null, ,, null, ,, true, ,, true, ), ;]
[,, null, ,, null, ,, true, ,, true, ), ;, REGEXP_FUNCTION_TYPE, ., getInternalArrowType, (, ), ., returnType, =, REGEXP_FUNCTION_TYPE, .]
[), ,, null, ,, null, ,, true, ,, true, ), ;, REGEXP_FUNCTION_TYPE, ., getInternalArrowType, (, ), ., returnType, =, REGEXP_FUNCTION_TYPE]
[,, ALL_TYPE, ), ), ,, null, ,, null, ,, true, ,, true, ), ;, REGEXP_FUNCTION_TYPE, ., getInternalArrowType, (, ), .]
[), ), ,, null, ,, null, ,, true, ,, true, ), ;, REGEXP_FUNCTION_TYPE, ., getInternalArrowType, (, ), ., returnType, =]
[,, null, ,, true, ,, true, ), ;, REGEXP_FUNCTION_TYPE, ., getInternalArrowType, (, ), ., returnType, =, REGEXP_FUNCTION_TYPE, ., getInstanceType, (]
[,, true, ,, true, ), ;, REGEXP_FUNCTION_TYPE, ., getInternalArrowType, (, ), ., returnType, =, REGEXP_FUNCTION_TYPE, ., getInstanceType, (, ), ;]
[,, true, ), ;, REGEXP_FUNCTION_TYPE, ., getInternalArrowType, (, ), ., returnType, =, REGEXP_FUNCTION_TYPE, ., getInstanceType, (, ), ;, ObjectType, regexpPrototype]
[), ;, REGEXP_FUNCTION_TYPE, ., getInternalArrowType, (, ), ., returnType, =, REGEXP_FUNCTION_TYPE, ., getInstanceType, (, ), ;, ObjectType, regexpPrototype, =, REGEXP_FUNCTION_TYPE]
[=, REGEXP_FUNCTION_TYPE, ., getInstanceType, (, ), ;, ObjectType, regexpPrototype, =, REGEXP_FUNCTION_TYPE, ., getPrototype, (, ), ;, registerNativeType, (, JSTypeNative, .]
[., returnType, =, REGEXP_FUNCTION_TYPE, ., getInstanceType, (, ), ;, ObjectType, regexpPrototype, =, REGEXP_FUNCTION_TYPE, ., getPrototype, (, ), ;, registerNativeType, (]
[., getInternalArrowType, (, ), ., returnType, =, REGEXP_FUNCTION_TYPE, ., getInstanceType, (, ), ;, ObjectType, regexpPrototype, =, REGEXP_FUNCTION_TYPE, ., getPrototype, (]
[;, ObjectType, regexpPrototype, =, REGEXP_FUNCTION_TYPE, ., getPrototype, (, ), ;, registerNativeType, (, JSTypeNative, ., REGEXP_FUNCTION_TYPE, ,, REGEXP_FUNCTION_TYPE, ), ;, ObjectType]
[., getInstanceType, (, ), ;, ObjectType, regexpPrototype, =, REGEXP_FUNCTION_TYPE, ., getPrototype, (, ), ;, registerNativeType, (, JSTypeNative, ., REGEXP_FUNCTION_TYPE, ,]
[;, registerNativeType, (, JSTypeNative, ., REGEXP_FUNCTION_TYPE, ,, REGEXP_FUNCTION_TYPE, ), ;, ObjectType, REGEXP_TYPE, =, REGEXP_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType]
[., getPrototype, (, ), ;, registerNativeType, (, JSTypeNative, ., REGEXP_FUNCTION_TYPE, ,, REGEXP_FUNCTION_TYPE, ), ;, ObjectType, REGEXP_TYPE, =, REGEXP_FUNCTION_TYPE, ., getInstanceType]
[;, ObjectType, REGEXP_TYPE, =, REGEXP_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., REGEXP_TYPE, ,, REGEXP_TYPE, ), ;, FunctionType]
[,, REGEXP_FUNCTION_TYPE, ), ;, ObjectType, REGEXP_TYPE, =, REGEXP_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., REGEXP_TYPE, ,, REGEXP_TYPE]
[., REGEXP_FUNCTION_TYPE, ,, REGEXP_FUNCTION_TYPE, ), ;, ObjectType, REGEXP_TYPE, =, REGEXP_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., REGEXP_TYPE]
[), ;, ObjectType, REGEXP_TYPE, =, REGEXP_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., REGEXP_TYPE, ,, REGEXP_TYPE, ), ;]
[;, registerNativeType, (, JSTypeNative, ., REGEXP_TYPE, ,, REGEXP_TYPE, ), ;, FunctionType, STRING_OBJECT_FUNCTION_TYPE, =, new, FunctionType, (, this, ,, "String", ,]
[., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., REGEXP_TYPE, ,, REGEXP_TYPE, ), ;, FunctionType, STRING_OBJECT_FUNCTION_TYPE, =, new, FunctionType, (]
[;, FunctionType, STRING_OBJECT_FUNCTION_TYPE, =, new, FunctionType, (, this, ,, "String", ,, null, ,, createArrowType, (, createOptionalParameters, (, ALL_TYPE, ), ,]
[,, REGEXP_TYPE, ), ;, FunctionType, STRING_OBJECT_FUNCTION_TYPE, =, new, FunctionType, (, this, ,, "String", ,, null, ,, createArrowType, (, createOptionalParameters, (]
[., REGEXP_TYPE, ,, REGEXP_TYPE, ), ;, FunctionType, STRING_OBJECT_FUNCTION_TYPE, =, new, FunctionType, (, this, ,, "String", ,, null, ,, createArrowType, (]
[), ;, FunctionType, STRING_OBJECT_FUNCTION_TYPE, =, new, FunctionType, (, this, ,, "String", ,, null, ,, createArrowType, (, createOptionalParameters, (, ALL_TYPE, )]
[;, ObjectType, stringPrototype, =, STRING_OBJECT_FUNCTION_TYPE, ., getPrototype, (, ), ;, registerNativeType, (, JSTypeNative, ., STRING_OBJECT_FUNCTION_TYPE, ,, STRING_OBJECT_FUNCTION_TYPE, ), ;, ObjectType]
[,, "String", ,, null, ,, createArrowType, (, createOptionalParameters, (, ALL_TYPE, ), ,, STRING_TYPE, ), ,, null, ,, null, ,, true]
[,, null, ,, createArrowType, (, createOptionalParameters, (, ALL_TYPE, ), ,, STRING_TYPE, ), ,, null, ,, null, ,, true, ,, true]
[,, createArrowType, (, createOptionalParameters, (, ALL_TYPE, ), ,, STRING_TYPE, ), ,, null, ,, null, ,, true, ,, true, ), ;]
[,, null, ,, null, ,, true, ,, true, ), ;, ObjectType, stringPrototype, =, STRING_OBJECT_FUNCTION_TYPE, ., getPrototype, (, ), ;, registerNativeType]
[,, STRING_TYPE, ), ,, null, ,, null, ,, true, ,, true, ), ;, ObjectType, stringPrototype, =, STRING_OBJECT_FUNCTION_TYPE, ., getPrototype, (]
[), ,, STRING_TYPE, ), ,, null, ,, null, ,, true, ,, true, ), ;, ObjectType, stringPrototype, =, STRING_OBJECT_FUNCTION_TYPE, ., getPrototype]
[), ,, null, ,, null, ,, true, ,, true, ), ;, ObjectType, stringPrototype, =, STRING_OBJECT_FUNCTION_TYPE, ., getPrototype, (, ), ;]
[,, null, ,, true, ,, true, ), ;, ObjectType, stringPrototype, =, STRING_OBJECT_FUNCTION_TYPE, ., getPrototype, (, ), ;, registerNativeType, (, JSTypeNative]
[,, true, ,, true, ), ;, ObjectType, stringPrototype, =, STRING_OBJECT_FUNCTION_TYPE, ., getPrototype, (, ), ;, registerNativeType, (, JSTypeNative, ., STRING_OBJECT_FUNCTION_TYPE]
[,, true, ), ;, ObjectType, stringPrototype, =, STRING_OBJECT_FUNCTION_TYPE, ., getPrototype, (, ), ;, registerNativeType, (, JSTypeNative, ., STRING_OBJECT_FUNCTION_TYPE, ,, STRING_OBJECT_FUNCTION_TYPE]
[), ;, ObjectType, stringPrototype, =, STRING_OBJECT_FUNCTION_TYPE, ., getPrototype, (, ), ;, registerNativeType, (, JSTypeNative, ., STRING_OBJECT_FUNCTION_TYPE, ,, STRING_OBJECT_FUNCTION_TYPE, ), ;]
[;, registerNativeType, (, JSTypeNative, ., STRING_OBJECT_FUNCTION_TYPE, ,, STRING_OBJECT_FUNCTION_TYPE, ), ;, ObjectType, STRING_OBJECT_TYPE, =, STRING_OBJECT_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType]
[., getPrototype, (, ), ;, registerNativeType, (, JSTypeNative, ., STRING_OBJECT_FUNCTION_TYPE, ,, STRING_OBJECT_FUNCTION_TYPE, ), ;, ObjectType, STRING_OBJECT_TYPE, =, STRING_OBJECT_FUNCTION_TYPE, ., getInstanceType]
[;, ObjectType, STRING_OBJECT_TYPE, =, STRING_OBJECT_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., STRING_OBJECT_TYPE, ,, STRING_OBJECT_TYPE, ), ;, JSType]
[,, STRING_OBJECT_FUNCTION_TYPE, ), ;, ObjectType, STRING_OBJECT_TYPE, =, STRING_OBJECT_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., STRING_OBJECT_TYPE, ,, STRING_OBJECT_TYPE]
[., STRING_OBJECT_FUNCTION_TYPE, ,, STRING_OBJECT_FUNCTION_TYPE, ), ;, ObjectType, STRING_OBJECT_TYPE, =, STRING_OBJECT_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., STRING_OBJECT_TYPE]
[), ;, ObjectType, STRING_OBJECT_TYPE, =, STRING_OBJECT_FUNCTION_TYPE, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., STRING_OBJECT_TYPE, ,, STRING_OBJECT_TYPE, ), ;]
[;, registerNativeType, (, JSTypeNative, ., STRING_OBJECT_TYPE, ,, STRING_OBJECT_TYPE, ), ;, JSType, NULL_VOID, =, createUnionType, (, NULL_TYPE, ,, VOID_TYPE, ), ;]
[., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., STRING_OBJECT_TYPE, ,, STRING_OBJECT_TYPE, ), ;, JSType, NULL_VOID, =, createUnionType, (, NULL_TYPE]
[;, JSType, NULL_VOID, =, createUnionType, (, NULL_TYPE, ,, VOID_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., NULL_VOID, ,, NULL_VOID, ), ;]
[,, STRING_OBJECT_TYPE, ), ;, JSType, NULL_VOID, =, createUnionType, (, NULL_TYPE, ,, VOID_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., NULL_VOID, ,]
[., STRING_OBJECT_TYPE, ,, STRING_OBJECT_TYPE, ), ;, JSType, NULL_VOID, =, createUnionType, (, NULL_TYPE, ,, VOID_TYPE, ), ;, registerNativeType, (, JSTypeNative, .]
[), ;, JSType, NULL_VOID, =, createUnionType, (, NULL_TYPE, ,, VOID_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., NULL_VOID, ,, NULL_VOID, )]
[;, registerNativeType, (, JSTypeNative, ., NULL_VOID, ,, NULL_VOID, ), ;, JSType, OBJECT_NUMBER_STRING, =, createUnionType, (, OBJECT_TYPE, ,, NUMBER_TYPE, ,, STRING_TYPE]
[,, VOID_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., NULL_VOID, ,, NULL_VOID, ), ;, JSType, OBJECT_NUMBER_STRING, =, createUnionType, (, OBJECT_TYPE, ,]
[), ;, registerNativeType, (, JSTypeNative, ., NULL_VOID, ,, NULL_VOID, ), ;, JSType, OBJECT_NUMBER_STRING, =, createUnionType, (, OBJECT_TYPE, ,, NUMBER_TYPE, ,]
[;, JSType, OBJECT_NUMBER_STRING, =, createUnionType, (, OBJECT_TYPE, ,, NUMBER_TYPE, ,, STRING_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., OBJECT_NUMBER_STRING, ,, OBJECT_NUMBER_STRING]
[,, NULL_VOID, ), ;, JSType, OBJECT_NUMBER_STRING, =, createUnionType, (, OBJECT_TYPE, ,, NUMBER_TYPE, ,, STRING_TYPE, ), ;, registerNativeType, (, JSTypeNative, .]
[., NULL_VOID, ,, NULL_VOID, ), ;, JSType, OBJECT_NUMBER_STRING, =, createUnionType, (, OBJECT_TYPE, ,, NUMBER_TYPE, ,, STRING_TYPE, ), ;, registerNativeType, (]
[), ;, JSType, OBJECT_NUMBER_STRING, =, createUnionType, (, OBJECT_TYPE, ,, NUMBER_TYPE, ,, STRING_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., OBJECT_NUMBER_STRING, ,]
[;, registerNativeType, (, JSTypeNative, ., OBJECT_NUMBER_STRING, ,, OBJECT_NUMBER_STRING, ), ;, JSType, OBJECT_NUMBER_STRING_BOOLEAN, =, createUnionType, (, OBJECT_TYPE, ,, NUMBER_TYPE, ,, STRING_TYPE]
[,, NUMBER_TYPE, ,, STRING_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., OBJECT_NUMBER_STRING, ,, OBJECT_NUMBER_STRING, ), ;, JSType, OBJECT_NUMBER_STRING_BOOLEAN, =, createUnionType, (]
[,, STRING_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., OBJECT_NUMBER_STRING, ,, OBJECT_NUMBER_STRING, ), ;, JSType, OBJECT_NUMBER_STRING_BOOLEAN, =, createUnionType, (, OBJECT_TYPE, ,]
[), ;, registerNativeType, (, JSTypeNative, ., OBJECT_NUMBER_STRING, ,, OBJECT_NUMBER_STRING, ), ;, JSType, OBJECT_NUMBER_STRING_BOOLEAN, =, createUnionType, (, OBJECT_TYPE, ,, NUMBER_TYPE, ,]
[;, JSType, OBJECT_NUMBER_STRING_BOOLEAN, =, createUnionType, (, OBJECT_TYPE, ,, NUMBER_TYPE, ,, STRING_TYPE, ,, BOOLEAN_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., OBJECT_NUMBER_STRING_BOOLEAN]
[,, OBJECT_NUMBER_STRING, ), ;, JSType, OBJECT_NUMBER_STRING_BOOLEAN, =, createUnionType, (, OBJECT_TYPE, ,, NUMBER_TYPE, ,, STRING_TYPE, ,, BOOLEAN_TYPE, ), ;, registerNativeType, (]
[., OBJECT_NUMBER_STRING, ,, OBJECT_NUMBER_STRING, ), ;, JSType, OBJECT_NUMBER_STRING_BOOLEAN, =, createUnionType, (, OBJECT_TYPE, ,, NUMBER_TYPE, ,, STRING_TYPE, ,, BOOLEAN_TYPE, ), ;]
[), ;, JSType, OBJECT_NUMBER_STRING_BOOLEAN, =, createUnionType, (, OBJECT_TYPE, ,, NUMBER_TYPE, ,, STRING_TYPE, ,, BOOLEAN_TYPE, ), ;, registerNativeType, (, JSTypeNative, .]
[;, registerNativeType, (, JSTypeNative, ., OBJECT_NUMBER_STRING_BOOLEAN, ,, OBJECT_NUMBER_STRING_BOOLEAN, ), ;, JSType, NUMBER_STRING_BOOLEAN, =, createUnionType, (, NUMBER_TYPE, ,, STRING_TYPE, ,, BOOLEAN_TYPE]
[,, NUMBER_TYPE, ,, STRING_TYPE, ,, BOOLEAN_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., OBJECT_NUMBER_STRING_BOOLEAN, ,, OBJECT_NUMBER_STRING_BOOLEAN, ), ;, JSType, NUMBER_STRING_BOOLEAN, =]
[,, STRING_TYPE, ,, BOOLEAN_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., OBJECT_NUMBER_STRING_BOOLEAN, ,, OBJECT_NUMBER_STRING_BOOLEAN, ), ;, JSType, NUMBER_STRING_BOOLEAN, =, createUnionType, (]
[,, BOOLEAN_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., OBJECT_NUMBER_STRING_BOOLEAN, ,, OBJECT_NUMBER_STRING_BOOLEAN, ), ;, JSType, NUMBER_STRING_BOOLEAN, =, createUnionType, (, NUMBER_TYPE, ,]
[), ;, registerNativeType, (, JSTypeNative, ., OBJECT_NUMBER_STRING_BOOLEAN, ,, OBJECT_NUMBER_STRING_BOOLEAN, ), ;, JSType, NUMBER_STRING_BOOLEAN, =, createUnionType, (, NUMBER_TYPE, ,, STRING_TYPE, ,]
[;, JSType, NUMBER_STRING_BOOLEAN, =, createUnionType, (, NUMBER_TYPE, ,, STRING_TYPE, ,, BOOLEAN_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., NUMBER_STRING_BOOLEAN, ,, NUMBER_STRING_BOOLEAN]
[,, OBJECT_NUMBER_STRING_BOOLEAN, ), ;, JSType, NUMBER_STRING_BOOLEAN, =, createUnionType, (, NUMBER_TYPE, ,, STRING_TYPE, ,, BOOLEAN_TYPE, ), ;, registerNativeType, (, JSTypeNative, .]
[., OBJECT_NUMBER_STRING_BOOLEAN, ,, OBJECT_NUMBER_STRING_BOOLEAN, ), ;, JSType, NUMBER_STRING_BOOLEAN, =, createUnionType, (, NUMBER_TYPE, ,, STRING_TYPE, ,, BOOLEAN_TYPE, ), ;, registerNativeType, (]
[), ;, JSType, NUMBER_STRING_BOOLEAN, =, createUnionType, (, NUMBER_TYPE, ,, STRING_TYPE, ,, BOOLEAN_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., NUMBER_STRING_BOOLEAN, ,]
[;, registerNativeType, (, JSTypeNative, ., NUMBER_STRING_BOOLEAN, ,, NUMBER_STRING_BOOLEAN, ), ;, JSType, NUMBER_STRING, =, createUnionType, (, NUMBER_TYPE, ,, STRING_TYPE, ), ;]
[,, STRING_TYPE, ,, BOOLEAN_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., NUMBER_STRING_BOOLEAN, ,, NUMBER_STRING_BOOLEAN, ), ;, JSType, NUMBER_STRING, =, createUnionType, (]
[,, BOOLEAN_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., NUMBER_STRING_BOOLEAN, ,, NUMBER_STRING_BOOLEAN, ), ;, JSType, NUMBER_STRING, =, createUnionType, (, NUMBER_TYPE, ,]
[), ;, registerNativeType, (, JSTypeNative, ., NUMBER_STRING_BOOLEAN, ,, NUMBER_STRING_BOOLEAN, ), ;, JSType, NUMBER_STRING, =, createUnionType, (, NUMBER_TYPE, ,, STRING_TYPE, )]
[;, JSType, NUMBER_STRING, =, createUnionType, (, NUMBER_TYPE, ,, STRING_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., NUMBER_STRING, ,, NUMBER_STRING, ), ;]
[,, NUMBER_STRING_BOOLEAN, ), ;, JSType, NUMBER_STRING, =, createUnionType, (, NUMBER_TYPE, ,, STRING_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., NUMBER_STRING, ,]
[., NUMBER_STRING_BOOLEAN, ,, NUMBER_STRING_BOOLEAN, ), ;, JSType, NUMBER_STRING, =, createUnionType, (, NUMBER_TYPE, ,, STRING_TYPE, ), ;, registerNativeType, (, JSTypeNative, .]
[), ;, JSType, NUMBER_STRING, =, createUnionType, (, NUMBER_TYPE, ,, STRING_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., NUMBER_STRING, ,, NUMBER_STRING, )]
[;, registerNativeType, (, JSTypeNative, ., NUMBER_STRING, ,, NUMBER_STRING, ), ;, JSType, STRING_VALUE_OR_OBJECT_TYPE, =, createUnionType, (, STRING_OBJECT_TYPE, ,, STRING_TYPE, ), ;]
[,, STRING_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., NUMBER_STRING, ,, NUMBER_STRING, ), ;, JSType, STRING_VALUE_OR_OBJECT_TYPE, =, createUnionType, (, STRING_OBJECT_TYPE, ,]
[), ;, registerNativeType, (, JSTypeNative, ., NUMBER_STRING, ,, NUMBER_STRING, ), ;, JSType, STRING_VALUE_OR_OBJECT_TYPE, =, createUnionType, (, STRING_OBJECT_TYPE, ,, STRING_TYPE, )]
[;, JSType, STRING_VALUE_OR_OBJECT_TYPE, =, createUnionType, (, STRING_OBJECT_TYPE, ,, STRING_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., STRING_VALUE_OR_OBJECT_TYPE, ,, STRING_VALUE_OR_OBJECT_TYPE, ), ;]
[,, NUMBER_STRING, ), ;, JSType, STRING_VALUE_OR_OBJECT_TYPE, =, createUnionType, (, STRING_OBJECT_TYPE, ,, STRING_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., STRING_VALUE_OR_OBJECT_TYPE, ,]
[., NUMBER_STRING, ,, NUMBER_STRING, ), ;, JSType, STRING_VALUE_OR_OBJECT_TYPE, =, createUnionType, (, STRING_OBJECT_TYPE, ,, STRING_TYPE, ), ;, registerNativeType, (, JSTypeNative, .]
[), ;, JSType, STRING_VALUE_OR_OBJECT_TYPE, =, createUnionType, (, STRING_OBJECT_TYPE, ,, STRING_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., STRING_VALUE_OR_OBJECT_TYPE, ,, STRING_VALUE_OR_OBJECT_TYPE, )]
[;, registerNativeType, (, JSTypeNative, ., STRING_VALUE_OR_OBJECT_TYPE, ,, STRING_VALUE_OR_OBJECT_TYPE, ), ;, JSType, NUMBER_VALUE_OR_OBJECT_TYPE, =, createUnionType, (, NUMBER_OBJECT_TYPE, ,, NUMBER_TYPE, ), ;]
[,, STRING_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., STRING_VALUE_OR_OBJECT_TYPE, ,, STRING_VALUE_OR_OBJECT_TYPE, ), ;, JSType, NUMBER_VALUE_OR_OBJECT_TYPE, =, createUnionType, (, NUMBER_OBJECT_TYPE, ,]
[), ;, registerNativeType, (, JSTypeNative, ., STRING_VALUE_OR_OBJECT_TYPE, ,, STRING_VALUE_OR_OBJECT_TYPE, ), ;, JSType, NUMBER_VALUE_OR_OBJECT_TYPE, =, createUnionType, (, NUMBER_OBJECT_TYPE, ,, NUMBER_TYPE, )]
[;, JSType, NUMBER_VALUE_OR_OBJECT_TYPE, =, createUnionType, (, NUMBER_OBJECT_TYPE, ,, NUMBER_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., NUMBER_VALUE_OR_OBJECT_TYPE, ,, NUMBER_VALUE_OR_OBJECT_TYPE, ), ;]
[,, STRING_VALUE_OR_OBJECT_TYPE, ), ;, JSType, NUMBER_VALUE_OR_OBJECT_TYPE, =, createUnionType, (, NUMBER_OBJECT_TYPE, ,, NUMBER_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., NUMBER_VALUE_OR_OBJECT_TYPE, ,]
[., STRING_VALUE_OR_OBJECT_TYPE, ,, STRING_VALUE_OR_OBJECT_TYPE, ), ;, JSType, NUMBER_VALUE_OR_OBJECT_TYPE, =, createUnionType, (, NUMBER_OBJECT_TYPE, ,, NUMBER_TYPE, ), ;, registerNativeType, (, JSTypeNative, .]
[), ;, JSType, NUMBER_VALUE_OR_OBJECT_TYPE, =, createUnionType, (, NUMBER_OBJECT_TYPE, ,, NUMBER_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., NUMBER_VALUE_OR_OBJECT_TYPE, ,, NUMBER_VALUE_OR_OBJECT_TYPE, )]
[;, registerNativeType, (, JSTypeNative, ., NUMBER_VALUE_OR_OBJECT_TYPE, ,, NUMBER_VALUE_OR_OBJECT_TYPE, ), ;, FunctionType, U2U_FUNCTION_TYPE, =, createFunctionType, (, UNKNOWN_TYPE, ,, true, ,, UNKNOWN_TYPE]
[,, NUMBER_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., NUMBER_VALUE_OR_OBJECT_TYPE, ,, NUMBER_VALUE_OR_OBJECT_TYPE, ), ;, FunctionType, U2U_FUNCTION_TYPE, =, createFunctionType, (, UNKNOWN_TYPE, ,]
[), ;, registerNativeType, (, JSTypeNative, ., NUMBER_VALUE_OR_OBJECT_TYPE, ,, NUMBER_VALUE_OR_OBJECT_TYPE, ), ;, FunctionType, U2U_FUNCTION_TYPE, =, createFunctionType, (, UNKNOWN_TYPE, ,, true, ,]
[;, FunctionType, U2U_FUNCTION_TYPE, =, createFunctionType, (, UNKNOWN_TYPE, ,, true, ,, UNKNOWN_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., U2U_FUNCTION_TYPE, ,, U2U_FUNCTION_TYPE]
[,, NUMBER_VALUE_OR_OBJECT_TYPE, ), ;, FunctionType, U2U_FUNCTION_TYPE, =, createFunctionType, (, UNKNOWN_TYPE, ,, true, ,, UNKNOWN_TYPE, ), ;, registerNativeType, (, JSTypeNative, .]
[., NUMBER_VALUE_OR_OBJECT_TYPE, ,, NUMBER_VALUE_OR_OBJECT_TYPE, ), ;, FunctionType, U2U_FUNCTION_TYPE, =, createFunctionType, (, UNKNOWN_TYPE, ,, true, ,, UNKNOWN_TYPE, ), ;, registerNativeType, (]
[), ;, FunctionType, U2U_FUNCTION_TYPE, =, createFunctionType, (, UNKNOWN_TYPE, ,, true, ,, UNKNOWN_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., U2U_FUNCTION_TYPE, ,]
[;, registerNativeType, (, JSTypeNative, ., U2U_FUNCTION_TYPE, ,, U2U_FUNCTION_TYPE, ), ;, FunctionType, U2U_CONSTRUCTOR_TYPE, =, new, FunctionType, (, this, ,, "Function", ,]
[,, true, ,, UNKNOWN_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., U2U_FUNCTION_TYPE, ,, U2U_FUNCTION_TYPE, ), ;, FunctionType, U2U_CONSTRUCTOR_TYPE, =, new, FunctionType]
[,, UNKNOWN_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., U2U_FUNCTION_TYPE, ,, U2U_FUNCTION_TYPE, ), ;, FunctionType, U2U_CONSTRUCTOR_TYPE, =, new, FunctionType, (, this]
[), ;, registerNativeType, (, JSTypeNative, ., U2U_FUNCTION_TYPE, ,, U2U_FUNCTION_TYPE, ), ;, FunctionType, U2U_CONSTRUCTOR_TYPE, =, new, FunctionType, (, this, ,, "Function"]
[;, FunctionType, U2U_CONSTRUCTOR_TYPE, =, new, FunctionType, (, this, ,, "Function", ,, null, ,, createArrowType, (, createParametersWithVarArgs, (, UNKNOWN_TYPE, ), ,]
[,, U2U_FUNCTION_TYPE, ), ;, FunctionType, U2U_CONSTRUCTOR_TYPE, =, new, FunctionType, (, this, ,, "Function", ,, null, ,, createArrowType, (, createParametersWithVarArgs, (]
[., U2U_FUNCTION_TYPE, ,, U2U_FUNCTION_TYPE, ), ;, FunctionType, U2U_CONSTRUCTOR_TYPE, =, new, FunctionType, (, this, ,, "Function", ,, null, ,, createArrowType, (]
[), ;, FunctionType, U2U_CONSTRUCTOR_TYPE, =, new, FunctionType, (, this, ,, "Function", ,, null, ,, createArrowType, (, createParametersWithVarArgs, (, UNKNOWN_TYPE, )]
[;, registerNativeType, (, JSTypeNative, ., U2U_CONSTRUCTOR_TYPE, ,, U2U_CONSTRUCTOR_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ,, U2U_CONSTRUCTOR_TYPE, ), ;, FUNCTION_FUNCTION_TYPE]
[,, "Function", ,, null, ,, createArrowType, (, createParametersWithVarArgs, (, UNKNOWN_TYPE, ), ,, UNKNOWN_TYPE, ), ,, UNKNOWN_TYPE, ,, null, ,, true]
[,, null, ,, createArrowType, (, createParametersWithVarArgs, (, UNKNOWN_TYPE, ), ,, UNKNOWN_TYPE, ), ,, UNKNOWN_TYPE, ,, null, ,, true, ,, true]
[,, createArrowType, (, createParametersWithVarArgs, (, UNKNOWN_TYPE, ), ,, UNKNOWN_TYPE, ), ,, UNKNOWN_TYPE, ,, null, ,, true, ,, true, ), {]
[,, UNKNOWN_TYPE, ,, null, ,, true, ,, true, ), {, private, static, final, long, serialVersionUID, =, 1L, ;, @, Override]
[,, UNKNOWN_TYPE, ), ,, UNKNOWN_TYPE, ,, null, ,, true, ,, true, ), {, private, static, final, long, serialVersionUID, =, 1L]
[), ,, UNKNOWN_TYPE, ), ,, UNKNOWN_TYPE, ,, null, ,, true, ,, true, ), {, private, static, final, long, serialVersionUID, =]
[), ,, UNKNOWN_TYPE, ,, null, ,, true, ,, true, ), {, private, static, final, long, serialVersionUID, =, 1L, ;, @]
[,, null, ,, true, ,, true, ), {, private, static, final, long, serialVersionUID, =, 1L, ;, @, Override, public, FunctionType]
[,, true, ,, true, ), {, private, static, final, long, serialVersionUID, =, 1L, ;, @, Override, public, FunctionType, getConstructor, (]
[,, true, ), {, private, static, final, long, serialVersionUID, =, 1L, ;, @, Override, public, FunctionType, getConstructor, (, ), {]
[), {, private, static, final, long, serialVersionUID, =, 1L, ;, @, Override, public, FunctionType, getConstructor, (, ), {, return, registry]
[;, @, Override, public, FunctionType, getConstructor, (, ), {, return, registry, ., getNativeFunctionType, (, JSTypeNative, ., FUNCTION_FUNCTION_TYPE, ), ;, }]
[;, }, }, ;, registerNativeType, (, JSTypeNative, ., U2U_CONSTRUCTOR_TYPE, ,, U2U_CONSTRUCTOR_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ,, U2U_CONSTRUCTOR_TYPE]
[., getNativeFunctionType, (, JSTypeNative, ., FUNCTION_FUNCTION_TYPE, ), ;, }, }, ;, registerNativeType, (, JSTypeNative, ., U2U_CONSTRUCTOR_TYPE, ,, U2U_CONSTRUCTOR_TYPE, ), ;]
[), ;, }, }, ;, registerNativeType, (, JSTypeNative, ., U2U_CONSTRUCTOR_TYPE, ,, U2U_CONSTRUCTOR_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ,]
[., FUNCTION_FUNCTION_TYPE, ), ;, }, }, ;, registerNativeType, (, JSTypeNative, ., U2U_CONSTRUCTOR_TYPE, ,, U2U_CONSTRUCTOR_TYPE, ), ;, registerNativeType, (, JSTypeNative, .]
[;, registerNativeType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ,, U2U_CONSTRUCTOR_TYPE, ), ;, FUNCTION_FUNCTION_TYPE, ., setInstanceType, (, U2U_CONSTRUCTOR_TYPE, ), ;, U2U_CONSTRUCTOR_TYPE, ., setImplicitPrototype]
[,, U2U_CONSTRUCTOR_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ,, U2U_CONSTRUCTOR_TYPE, ), ;, FUNCTION_FUNCTION_TYPE, ., setInstanceType, (, U2U_CONSTRUCTOR_TYPE, ), ;]
[., U2U_CONSTRUCTOR_TYPE, ,, U2U_CONSTRUCTOR_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ,, U2U_CONSTRUCTOR_TYPE, ), ;, FUNCTION_FUNCTION_TYPE, ., setInstanceType, (, U2U_CONSTRUCTOR_TYPE]
[), ;, registerNativeType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ,, U2U_CONSTRUCTOR_TYPE, ), ;, FUNCTION_FUNCTION_TYPE, ., setInstanceType, (, U2U_CONSTRUCTOR_TYPE, ), ;, U2U_CONSTRUCTOR_TYPE, .]
[;, FUNCTION_FUNCTION_TYPE, ., setInstanceType, (, U2U_CONSTRUCTOR_TYPE, ), ;, U2U_CONSTRUCTOR_TYPE, ., setImplicitPrototype, (, FUNCTION_PROTOTYPE, ), ;, FunctionType, LEAST_FUNCTION_TYPE, =, createNativeFunctionTypeWithVarArgs, (]
[,, U2U_CONSTRUCTOR_TYPE, ), ;, FUNCTION_FUNCTION_TYPE, ., setInstanceType, (, U2U_CONSTRUCTOR_TYPE, ), ;, U2U_CONSTRUCTOR_TYPE, ., setImplicitPrototype, (, FUNCTION_PROTOTYPE, ), ;, FunctionType, LEAST_FUNCTION_TYPE]
[., FUNCTION_INSTANCE_TYPE, ,, U2U_CONSTRUCTOR_TYPE, ), ;, FUNCTION_FUNCTION_TYPE, ., setInstanceType, (, U2U_CONSTRUCTOR_TYPE, ), ;, U2U_CONSTRUCTOR_TYPE, ., setImplicitPrototype, (, FUNCTION_PROTOTYPE, ), ;]
[), ;, FUNCTION_FUNCTION_TYPE, ., setInstanceType, (, U2U_CONSTRUCTOR_TYPE, ), ;, U2U_CONSTRUCTOR_TYPE, ., setImplicitPrototype, (, FUNCTION_PROTOTYPE, ), ;, FunctionType, LEAST_FUNCTION_TYPE, =, createNativeFunctionTypeWithVarArgs]
[;, U2U_CONSTRUCTOR_TYPE, ., setImplicitPrototype, (, FUNCTION_PROTOTYPE, ), ;, FunctionType, LEAST_FUNCTION_TYPE, =, createNativeFunctionTypeWithVarArgs, (, NO_TYPE, ,, ALL_TYPE, ), ;, registerNativeType, (]
[., setInstanceType, (, U2U_CONSTRUCTOR_TYPE, ), ;, U2U_CONSTRUCTOR_TYPE, ., setImplicitPrototype, (, FUNCTION_PROTOTYPE, ), ;, FunctionType, LEAST_FUNCTION_TYPE, =, createNativeFunctionTypeWithVarArgs, (, NO_TYPE, ,]
[), ;, U2U_CONSTRUCTOR_TYPE, ., setImplicitPrototype, (, FUNCTION_PROTOTYPE, ), ;, FunctionType, LEAST_FUNCTION_TYPE, =, createNativeFunctionTypeWithVarArgs, (, NO_TYPE, ,, ALL_TYPE, ), ;, registerNativeType]
[;, FunctionType, LEAST_FUNCTION_TYPE, =, createNativeFunctionTypeWithVarArgs, (, NO_TYPE, ,, ALL_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., LEAST_FUNCTION_TYPE, ,, LEAST_FUNCTION_TYPE, ), ;]
[., setImplicitPrototype, (, FUNCTION_PROTOTYPE, ), ;, FunctionType, LEAST_FUNCTION_TYPE, =, createNativeFunctionTypeWithVarArgs, (, NO_TYPE, ,, ALL_TYPE, ), ;, registerNativeType, (, JSTypeNative, .]
[), ;, FunctionType, LEAST_FUNCTION_TYPE, =, createNativeFunctionTypeWithVarArgs, (, NO_TYPE, ,, ALL_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., LEAST_FUNCTION_TYPE, ,, LEAST_FUNCTION_TYPE, )]
[;, registerNativeType, (, JSTypeNative, ., LEAST_FUNCTION_TYPE, ,, LEAST_FUNCTION_TYPE, ), ;, FunctionType, GLOBAL_THIS_CTOR, =, new, FunctionType, (, this, ,, "global this", ,]
[,, ALL_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., LEAST_FUNCTION_TYPE, ,, LEAST_FUNCTION_TYPE, ), ;, FunctionType, GLOBAL_THIS_CTOR, =, new, FunctionType, (, this]
[), ;, registerNativeType, (, JSTypeNative, ., LEAST_FUNCTION_TYPE, ,, LEAST_FUNCTION_TYPE, ), ;, FunctionType, GLOBAL_THIS_CTOR, =, new, FunctionType, (, this, ,, "global this"]
[;, FunctionType, GLOBAL_THIS_CTOR, =, new, FunctionType, (, this, ,, "global this", ,, null, ,, createArrowType, (, createParameters, (, false, ,, ALL_TYPE]
[,, LEAST_FUNCTION_TYPE, ), ;, FunctionType, GLOBAL_THIS_CTOR, =, new, FunctionType, (, this, ,, "global this", ,, null, ,, createArrowType, (, createParameters, (]
[., LEAST_FUNCTION_TYPE, ,, LEAST_FUNCTION_TYPE, ), ;, FunctionType, GLOBAL_THIS_CTOR, =, new, FunctionType, (, this, ,, "global this", ,, null, ,, createArrowType, (]
[), ;, FunctionType, GLOBAL_THIS_CTOR, =, new, FunctionType, (, this, ,, "global this", ,, null, ,, createArrowType, (, createParameters, (, false, ,]
[;, ObjectType, GLOBAL_THIS, =, GLOBAL_THIS_CTOR, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., GLOBAL_THIS, ,, GLOBAL_THIS, ), ;, FunctionType]
[,, "global this", ,, null, ,, createArrowType, (, createParameters, (, false, ,, ALL_TYPE, ), ,, NUMBER_TYPE, ), ,, null, ,, null]
[,, null, ,, createArrowType, (, createParameters, (, false, ,, ALL_TYPE, ), ,, NUMBER_TYPE, ), ,, null, ,, null, ,, true]
[,, createArrowType, (, createParameters, (, false, ,, ALL_TYPE, ), ,, NUMBER_TYPE, ), ,, null, ,, null, ,, true, ,, true]
[,, null, ,, null, ,, true, ,, true, ), ;, ObjectType, GLOBAL_THIS, =, GLOBAL_THIS_CTOR, ., getInstanceType, (, ), ;, registerNativeType]
[,, NUMBER_TYPE, ), ,, null, ,, null, ,, true, ,, true, ), ;, ObjectType, GLOBAL_THIS, =, GLOBAL_THIS_CTOR, ., getInstanceType, (]
[,, ALL_TYPE, ), ,, NUMBER_TYPE, ), ,, null, ,, null, ,, true, ,, true, ), ;, ObjectType, GLOBAL_THIS, =, GLOBAL_THIS_CTOR]
[), ,, NUMBER_TYPE, ), ,, null, ,, null, ,, true, ,, true, ), ;, ObjectType, GLOBAL_THIS, =, GLOBAL_THIS_CTOR, ., getInstanceType]
[), ,, null, ,, null, ,, true, ,, true, ), ;, ObjectType, GLOBAL_THIS, =, GLOBAL_THIS_CTOR, ., getInstanceType, (, ), ;]
[,, null, ,, true, ,, true, ), ;, ObjectType, GLOBAL_THIS, =, GLOBAL_THIS_CTOR, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative]
[,, true, ,, true, ), ;, ObjectType, GLOBAL_THIS, =, GLOBAL_THIS_CTOR, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., GLOBAL_THIS]
[,, true, ), ;, ObjectType, GLOBAL_THIS, =, GLOBAL_THIS_CTOR, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., GLOBAL_THIS, ,, GLOBAL_THIS]
[), ;, ObjectType, GLOBAL_THIS, =, GLOBAL_THIS_CTOR, ., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., GLOBAL_THIS, ,, GLOBAL_THIS, ), ;]
[;, registerNativeType, (, JSTypeNative, ., GLOBAL_THIS, ,, GLOBAL_THIS, ), ;, FunctionType, GREATEST_FUNCTION_TYPE, =, createNativeFunctionTypeWithVarArgs, (, ALL_TYPE, ,, NO_TYPE, ), ;]
[., getInstanceType, (, ), ;, registerNativeType, (, JSTypeNative, ., GLOBAL_THIS, ,, GLOBAL_THIS, ), ;, FunctionType, GREATEST_FUNCTION_TYPE, =, createNativeFunctionTypeWithVarArgs, (, ALL_TYPE]
[;, FunctionType, GREATEST_FUNCTION_TYPE, =, createNativeFunctionTypeWithVarArgs, (, ALL_TYPE, ,, NO_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., GREATEST_FUNCTION_TYPE, ,, GREATEST_FUNCTION_TYPE, ), ;]
[,, GLOBAL_THIS, ), ;, FunctionType, GREATEST_FUNCTION_TYPE, =, createNativeFunctionTypeWithVarArgs, (, ALL_TYPE, ,, NO_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., GREATEST_FUNCTION_TYPE, ,]
[., GLOBAL_THIS, ,, GLOBAL_THIS, ), ;, FunctionType, GREATEST_FUNCTION_TYPE, =, createNativeFunctionTypeWithVarArgs, (, ALL_TYPE, ,, NO_TYPE, ), ;, registerNativeType, (, JSTypeNative, .]
[), ;, FunctionType, GREATEST_FUNCTION_TYPE, =, createNativeFunctionTypeWithVarArgs, (, ALL_TYPE, ,, NO_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., GREATEST_FUNCTION_TYPE, ,, GREATEST_FUNCTION_TYPE, )]
[;, registerNativeType, (, JSTypeNative, ., GREATEST_FUNCTION_TYPE, ,, GREATEST_FUNCTION_TYPE, ), ;, registerPropertyOnType, (, "prototype", ,, OBJECT_FUNCTION_TYPE, ), ;, }, private, void]
[,, NO_TYPE, ), ;, registerNativeType, (, JSTypeNative, ., GREATEST_FUNCTION_TYPE, ,, GREATEST_FUNCTION_TYPE, ), ;, registerPropertyOnType, (, "prototype", ,, OBJECT_FUNCTION_TYPE, ), ;]
[), ;, registerNativeType, (, JSTypeNative, ., GREATEST_FUNCTION_TYPE, ,, GREATEST_FUNCTION_TYPE, ), ;, registerPropertyOnType, (, "prototype", ,, OBJECT_FUNCTION_TYPE, ), ;, }, private]
[;, registerPropertyOnType, (, "prototype", ,, OBJECT_FUNCTION_TYPE, ), ;, }, private, void, initializeRegistry, (, ), {, register, (, getNativeType, (, JSTypeNative]
[,, GREATEST_FUNCTION_TYPE, ), ;, registerPropertyOnType, (, "prototype", ,, OBJECT_FUNCTION_TYPE, ), ;, }, private, void, initializeRegistry, (, ), {, register, (]
[., GREATEST_FUNCTION_TYPE, ,, GREATEST_FUNCTION_TYPE, ), ;, registerPropertyOnType, (, "prototype", ,, OBJECT_FUNCTION_TYPE, ), ;, }, private, void, initializeRegistry, (, ), {]
[), ;, registerPropertyOnType, (, "prototype", ,, OBJECT_FUNCTION_TYPE, ), ;, }, private, void, initializeRegistry, (, ), {, register, (, getNativeType, (]
[;, }, private, void, initializeRegistry, (, ), {, register, (, getNativeType, (, JSTypeNative, ., ARRAY_TYPE, ), ), ;, register, (]
[,, OBJECT_FUNCTION_TYPE, ), ;, }, private, void, initializeRegistry, (, ), {, register, (, getNativeType, (, JSTypeNative, ., ARRAY_TYPE, ), )]
[), ;, }, private, void, initializeRegistry, (, ), {, register, (, getNativeType, (, JSTypeNative, ., ARRAY_TYPE, ), ), ;, register]
[;, register, (, getNativeType, (, JSTypeNative, ., BOOLEAN_OBJECT_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., BOOLEAN_TYPE, ), )]
[), ;, register, (, getNativeType, (, JSTypeNative, ., BOOLEAN_OBJECT_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., BOOLEAN_TYPE, )]
[), ), ;, register, (, getNativeType, (, JSTypeNative, ., BOOLEAN_OBJECT_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., BOOLEAN_TYPE]
[., ARRAY_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., BOOLEAN_OBJECT_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative]
[;, register, (, getNativeType, (, JSTypeNative, ., BOOLEAN_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., DATE_TYPE, ), )]
[), ;, register, (, getNativeType, (, JSTypeNative, ., BOOLEAN_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., DATE_TYPE, )]
[), ), ;, register, (, getNativeType, (, JSTypeNative, ., BOOLEAN_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., DATE_TYPE]
[., BOOLEAN_OBJECT_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., BOOLEAN_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative]
[;, register, (, getNativeType, (, JSTypeNative, ., DATE_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., NULL_TYPE, ), )]
[), ;, register, (, getNativeType, (, JSTypeNative, ., DATE_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., NULL_TYPE, )]
[), ), ;, register, (, getNativeType, (, JSTypeNative, ., DATE_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., NULL_TYPE]
[., BOOLEAN_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., DATE_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative]
[;, register, (, getNativeType, (, JSTypeNative, ., NULL_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., NULL_TYPE, ), ,]
[), ;, register, (, getNativeType, (, JSTypeNative, ., NULL_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., NULL_TYPE, )]
[), ), ;, register, (, getNativeType, (, JSTypeNative, ., NULL_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., NULL_TYPE]
[., DATE_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., NULL_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative]
[;, register, (, getNativeType, (, JSTypeNative, ., NULL_TYPE, ), ,, "Null", ), ;, register, (, getNativeType, (, JSTypeNative, ., NUMBER_OBJECT_TYPE]
[), ;, register, (, getNativeType, (, JSTypeNative, ., NULL_TYPE, ), ,, "Null", ), ;, register, (, getNativeType, (, JSTypeNative, .]
[), ), ;, register, (, getNativeType, (, JSTypeNative, ., NULL_TYPE, ), ,, "Null", ), ;, register, (, getNativeType, (, JSTypeNative]
[., NULL_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., NULL_TYPE, ), ,, "Null", ), ;, register, (, getNativeType]
[;, register, (, getNativeType, (, JSTypeNative, ., NUMBER_OBJECT_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., NUMBER_TYPE, ), )]
[,, "Null", ), ;, register, (, getNativeType, (, JSTypeNative, ., NUMBER_OBJECT_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, .]
[), ,, "Null", ), ;, register, (, getNativeType, (, JSTypeNative, ., NUMBER_OBJECT_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative]
[., NULL_TYPE, ), ,, "Null", ), ;, register, (, getNativeType, (, JSTypeNative, ., NUMBER_OBJECT_TYPE, ), ), ;, register, (, getNativeType]
[), ;, register, (, getNativeType, (, JSTypeNative, ., NUMBER_OBJECT_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., NUMBER_TYPE, )]
[;, register, (, getNativeType, (, JSTypeNative, ., NUMBER_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., OBJECT_TYPE, ), )]
[), ;, register, (, getNativeType, (, JSTypeNative, ., NUMBER_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., OBJECT_TYPE, )]
[), ), ;, register, (, getNativeType, (, JSTypeNative, ., NUMBER_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., OBJECT_TYPE]
[., NUMBER_OBJECT_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., NUMBER_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative]
[;, register, (, getNativeType, (, JSTypeNative, ., OBJECT_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., ERROR_TYPE, ), )]
[), ;, register, (, getNativeType, (, JSTypeNative, ., OBJECT_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., ERROR_TYPE, )]
[), ), ;, register, (, getNativeType, (, JSTypeNative, ., OBJECT_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., ERROR_TYPE]
[., NUMBER_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., OBJECT_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative]
[;, register, (, getNativeType, (, JSTypeNative, ., ERROR_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., URI_ERROR_TYPE, ), )]
[), ;, register, (, getNativeType, (, JSTypeNative, ., ERROR_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., URI_ERROR_TYPE, )]
[), ), ;, register, (, getNativeType, (, JSTypeNative, ., ERROR_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., URI_ERROR_TYPE]
[., OBJECT_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., ERROR_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative]
[;, register, (, getNativeType, (, JSTypeNative, ., URI_ERROR_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., EVAL_ERROR_TYPE, ), )]
[), ;, register, (, getNativeType, (, JSTypeNative, ., URI_ERROR_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., EVAL_ERROR_TYPE, )]
[), ), ;, register, (, getNativeType, (, JSTypeNative, ., URI_ERROR_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., EVAL_ERROR_TYPE]
[., ERROR_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., URI_ERROR_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative]
[;, register, (, getNativeType, (, JSTypeNative, ., EVAL_ERROR_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., TYPE_ERROR_TYPE, ), )]
[), ;, register, (, getNativeType, (, JSTypeNative, ., EVAL_ERROR_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., TYPE_ERROR_TYPE, )]
[), ), ;, register, (, getNativeType, (, JSTypeNative, ., EVAL_ERROR_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., TYPE_ERROR_TYPE]
[., URI_ERROR_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., EVAL_ERROR_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative]
[;, register, (, getNativeType, (, JSTypeNative, ., TYPE_ERROR_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., RANGE_ERROR_TYPE, ), )]
[), ;, register, (, getNativeType, (, JSTypeNative, ., TYPE_ERROR_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., RANGE_ERROR_TYPE, )]
[), ), ;, register, (, getNativeType, (, JSTypeNative, ., TYPE_ERROR_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., RANGE_ERROR_TYPE]
[., EVAL_ERROR_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., TYPE_ERROR_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative]
[;, register, (, getNativeType, (, JSTypeNative, ., RANGE_ERROR_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., REFERENCE_ERROR_TYPE, ), )]
[), ;, register, (, getNativeType, (, JSTypeNative, ., RANGE_ERROR_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., REFERENCE_ERROR_TYPE, )]
[), ), ;, register, (, getNativeType, (, JSTypeNative, ., RANGE_ERROR_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., REFERENCE_ERROR_TYPE]
[., TYPE_ERROR_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., RANGE_ERROR_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative]
[;, register, (, getNativeType, (, JSTypeNative, ., REFERENCE_ERROR_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., SYNTAX_ERROR_TYPE, ), )]
[), ;, register, (, getNativeType, (, JSTypeNative, ., REFERENCE_ERROR_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., SYNTAX_ERROR_TYPE, )]
[), ), ;, register, (, getNativeType, (, JSTypeNative, ., REFERENCE_ERROR_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., SYNTAX_ERROR_TYPE]
[., RANGE_ERROR_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., REFERENCE_ERROR_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative]
[;, register, (, getNativeType, (, JSTypeNative, ., SYNTAX_ERROR_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., REGEXP_TYPE, ), )]
[), ;, register, (, getNativeType, (, JSTypeNative, ., SYNTAX_ERROR_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., REGEXP_TYPE, )]
[), ), ;, register, (, getNativeType, (, JSTypeNative, ., SYNTAX_ERROR_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., REGEXP_TYPE]
[., REFERENCE_ERROR_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., SYNTAX_ERROR_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative]
[;, register, (, getNativeType, (, JSTypeNative, ., REGEXP_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., STRING_OBJECT_TYPE, ), )]
[), ;, register, (, getNativeType, (, JSTypeNative, ., REGEXP_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., STRING_OBJECT_TYPE, )]
[), ), ;, register, (, getNativeType, (, JSTypeNative, ., REGEXP_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., STRING_OBJECT_TYPE]
[., SYNTAX_ERROR_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., REGEXP_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative]
[;, register, (, getNativeType, (, JSTypeNative, ., STRING_OBJECT_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., STRING_TYPE, ), )]
[), ;, register, (, getNativeType, (, JSTypeNative, ., STRING_OBJECT_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., STRING_TYPE, )]
[), ), ;, register, (, getNativeType, (, JSTypeNative, ., STRING_OBJECT_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., STRING_TYPE]
[., REGEXP_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., STRING_OBJECT_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative]
[;, register, (, getNativeType, (, JSTypeNative, ., STRING_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., VOID_TYPE, ), )]
[), ;, register, (, getNativeType, (, JSTypeNative, ., STRING_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., VOID_TYPE, )]
[), ), ;, register, (, getNativeType, (, JSTypeNative, ., STRING_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., VOID_TYPE]
[., STRING_OBJECT_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., STRING_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative]
[;, register, (, getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ,]
[), ;, register, (, getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., VOID_TYPE, )]
[), ), ;, register, (, getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., VOID_TYPE]
[., STRING_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative]
[;, register, (, getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ,, "Undefined", ), ;, register, (, getNativeType, (, JSTypeNative, ., VOID_TYPE]
[), ;, register, (, getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ,, "Undefined", ), ;, register, (, getNativeType, (, JSTypeNative, .]
[), ), ;, register, (, getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ,, "Undefined", ), ;, register, (, getNativeType, (, JSTypeNative]
[., VOID_TYPE, ), ), ;, register, (, getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ,, "Undefined", ), ;, register, (, getNativeType]
[;, register, (, getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ,, "void", ), ;, register, (, getNativeType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE]
[,, "Undefined", ), ;, register, (, getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ,, "void", ), ;, register, (, getNativeType, (]
[), ,, "Undefined", ), ;, register, (, getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ,, "void", ), ;, register, (, getNativeType]
[., VOID_TYPE, ), ,, "Undefined", ), ;, register, (, getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ,, "void", ), ;, register]
[), ;, register, (, getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ,, "void", ), ;, register, (, getNativeType, (, JSTypeNative, .]
[;, register, (, getNativeType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ,, "Function", ), ;, }, private, void, register, (, JSType, type]
[,, "void", ), ;, register, (, getNativeType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ,, "Function", ), ;, }, private, void, register]
[), ,, "void", ), ;, register, (, getNativeType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ,, "Function", ), ;, }, private, void]
[., VOID_TYPE, ), ,, "void", ), ;, register, (, getNativeType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ,, "Function", ), ;, }]
[), ;, register, (, getNativeType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ,, "Function", ), ;, }, private, void, register, (, JSType]
[;, }, private, void, register, (, JSType, type, ), {, register, (, type, ,, type, ., toString, (, ), )]
[,, "Function", ), ;, }, private, void, register, (, JSType, type, ), {, register, (, type, ,, type, ., toString]
[), ,, "Function", ), ;, }, private, void, register, (, JSType, type, ), {, register, (, type, ,, type, .]
[., FUNCTION_INSTANCE_TYPE, ), ,, "Function", ), ;, }, private, void, register, (, JSType, type, ), {, register, (, type, ,]
[), ;, }, private, void, register, (, JSType, type, ), {, register, (, type, ,, type, ., toString, (, )]
[;, }, private, void, register, (, JSType, type, ,, String, name, ), {, Preconditions, ., checkArgument, (, !, name, .]
[,, type, ., toString, (, ), ), ;, }, private, void, register, (, JSType, type, ,, String, name, ), {]
[), ;, }, private, void, register, (, JSType, type, ,, String, name, ), {, Preconditions, ., checkArgument, (, !, name]
[., toString, (, ), ), ;, }, private, void, register, (, JSType, type, ,, String, name, ), {, Preconditions, .]
[;, namesToTypes, ., put, (, name, ,, type, ), ;, while, (, name, ., indexOf, (, '.', ), >, 0]
[., checkArgument, (, !, name, ., contains, (, "<", ), ,, "Type names cannot contain template annotations.", ), ;, namesToTypes, ., put, (, name, ,]
[,, "Type names cannot contain template annotations.", ), ;, namesToTypes, ., put, (, name, ,, type, ), ;, while, (, name, ., indexOf, (, '.']
[,, "Type names cannot contain template annotations.", ), ;, namesToTypes, ., put, (, name, ,, type, ), ;, while, (, name, ., indexOf, (, '.']
[., contains, (, "<", ), ,, "Type names cannot contain template annotations.", ), ;, namesToTypes, ., put, (, name, ,, type, ), ;, while, (]
[), ,, "Type names cannot contain template annotations.", ), ;, namesToTypes, ., put, (, name, ,, type, ), ;, while, (, name, ., indexOf, (]
[), ;, namesToTypes, ., put, (, name, ,, type, ), ;, while, (, name, ., indexOf, (, '.', ), >]
[;, while, (, name, ., indexOf, (, '.', ), >, 0, ), {, name, =, name, ., substring, (, 0]
[., put, (, name, ,, type, ), ;, while, (, name, ., indexOf, (, '.', ), >, 0, ), {]
[,, type, ), ;, while, (, name, ., indexOf, (, '.', ), >, 0, ), {, name, =, name, .]
[), ;, while, (, name, ., indexOf, (, '.', ), >, 0, ), {, name, =, name, ., substring, (]
[), {, name, =, name, ., substring, (, 0, ,, name, ., lastIndexOf, (, '.', ), ), ;, namespaces, .]
[>, 0, ), {, name, =, name, ., substring, (, 0, ,, name, ., lastIndexOf, (, '.', ), ), ;]
[., indexOf, (, '.', ), >, 0, ), {, name, =, name, ., substring, (, 0, ,, name, ., lastIndexOf]
[), >, 0, ), {, name, =, name, ., substring, (, 0, ,, name, ., lastIndexOf, (, '.', ), )]
[), {, name, =, name, ., substring, (, 0, ,, name, ., lastIndexOf, (, '.', ), ), ;, namespaces, .]
[=, name, ., substring, (, 0, ,, name, ., lastIndexOf, (, '.', ), ), ;, namespaces, ., add, (, name]
[;, namespaces, ., add, (, name, ), ;, }, }, private, void, registerNativeType, (, JSTypeNative, typeId, ,, JSType, type, )]
[., substring, (, 0, ,, name, ., lastIndexOf, (, '.', ), ), ;, namespaces, ., add, (, name, ), ;]
[,, name, ., lastIndexOf, (, '.', ), ), ;, namespaces, ., add, (, name, ), ;, }, }, private, void]
[), ;, namespaces, ., add, (, name, ), ;, }, }, private, void, registerNativeType, (, JSTypeNative, typeId, ,, JSType, type]
[., lastIndexOf, (, '.', ), ), ;, namespaces, ., add, (, name, ), ;, }, }, private, void, registerNativeType, (]
[), ), ;, namespaces, ., add, (, name, ), ;, }, }, private, void, registerNativeType, (, JSTypeNative, typeId, ,, JSType]
[;, }, }, private, void, registerNativeType, (, JSTypeNative, typeId, ,, JSType, type, ), {, nativeTypes, [, typeId, ., ordinal, (]
[., add, (, name, ), ;, }, }, private, void, registerNativeType, (, JSTypeNative, typeId, ,, JSType, type, ), {, nativeTypes]
[), ;, }, }, private, void, registerNativeType, (, JSTypeNative, typeId, ,, JSType, type, ), {, nativeTypes, [, typeId, ., ordinal]
[=, type, ;, }, public, void, registerPropertyOnType, (, String, propertyName, ,, JSType, type, ), {, UnionTypeBuilder, typeSet, =, typesIndexedByProperty, .]
[[, typeId, ., ordinal, (, ), ], =, type, ;, }, public, void, registerPropertyOnType, (, String, propertyName, ,, JSType, type]
[], =, type, ;, }, public, void, registerPropertyOnType, (, String, propertyName, ,, JSType, type, ), {, UnionTypeBuilder, typeSet, =, typesIndexedByProperty]
[., ordinal, (, ), ], =, type, ;, }, public, void, registerPropertyOnType, (, String, propertyName, ,, JSType, type, ), {]
[;, }, public, void, registerPropertyOnType, (, String, propertyName, ,, JSType, type, ), {, UnionTypeBuilder, typeSet, =, typesIndexedByProperty, ., get, (]
[;, if, (, typeSet, ==, null, ), {, typeSet, =, new, UnionTypeBuilder, (, this, ,, PROPERTY_CHECKING_UNION_SIZE, ), ;, typesIndexedByProperty, .]
[., get, (, propertyName, ), ;, if, (, typeSet, ==, null, ), {, typeSet, =, new, UnionTypeBuilder, (, this, ,]
[), ;, if, (, typeSet, ==, null, ), {, typeSet, =, new, UnionTypeBuilder, (, this, ,, PROPERTY_CHECKING_UNION_SIZE, ), ;, typesIndexedByProperty]
[), {, typeSet, =, new, UnionTypeBuilder, (, this, ,, PROPERTY_CHECKING_UNION_SIZE, ), ;, typesIndexedByProperty, ., put, (, propertyName, ,, typeSet, )]
[==, null, ), {, typeSet, =, new, UnionTypeBuilder, (, this, ,, PROPERTY_CHECKING_UNION_SIZE, ), ;, typesIndexedByProperty, ., put, (, propertyName, ,]
[), {, typeSet, =, new, UnionTypeBuilder, (, this, ,, PROPERTY_CHECKING_UNION_SIZE, ), ;, typesIndexedByProperty, ., put, (, propertyName, ,, typeSet, )]
[=, new, UnionTypeBuilder, (, this, ,, PROPERTY_CHECKING_UNION_SIZE, ), ;, typesIndexedByProperty, ., put, (, propertyName, ,, typeSet, ), ;, }, typeSet]
[;, typesIndexedByProperty, ., put, (, propertyName, ,, typeSet, ), ;, }, typeSet, ., addAlternate, (, type, ), ;, addReferenceTypeIndexedByProperty, (]
[,, PROPERTY_CHECKING_UNION_SIZE, ), ;, typesIndexedByProperty, ., put, (, propertyName, ,, typeSet, ), ;, }, typeSet, ., addAlternate, (, type, )]
[), ;, typesIndexedByProperty, ., put, (, propertyName, ,, typeSet, ), ;, }, typeSet, ., addAlternate, (, type, ), ;, addReferenceTypeIndexedByProperty]
[;, }, typeSet, ., addAlternate, (, type, ), ;, addReferenceTypeIndexedByProperty, (, propertyName, ,, type, ), ;, greatestSubtypeByProperty, ., remove, (]
[., put, (, propertyName, ,, typeSet, ), ;, }, typeSet, ., addAlternate, (, type, ), ;, addReferenceTypeIndexedByProperty, (, propertyName, ,]
[,, typeSet, ), ;, }, typeSet, ., addAlternate, (, type, ), ;, addReferenceTypeIndexedByProperty, (, propertyName, ,, type, ), ;, greatestSubtypeByProperty]
[), ;, }, typeSet, ., addAlternate, (, type, ), ;, addReferenceTypeIndexedByProperty, (, propertyName, ,, type, ), ;, greatestSubtypeByProperty, ., remove]
[;, addReferenceTypeIndexedByProperty, (, propertyName, ,, type, ), ;, greatestSubtypeByProperty, ., remove, (, propertyName, ), ;, }, private, void, addReferenceTypeIndexedByProperty, (]
[., addAlternate, (, type, ), ;, addReferenceTypeIndexedByProperty, (, propertyName, ,, type, ), ;, greatestSubtypeByProperty, ., remove, (, propertyName, ), ;]
[), ;, addReferenceTypeIndexedByProperty, (, propertyName, ,, type, ), ;, greatestSubtypeByProperty, ., remove, (, propertyName, ), ;, }, private, void, addReferenceTypeIndexedByProperty]
[;, greatestSubtypeByProperty, ., remove, (, propertyName, ), ;, }, private, void, addReferenceTypeIndexedByProperty, (, String, propertyName, ,, JSType, type, ), {]
[,, type, ), ;, greatestSubtypeByProperty, ., remove, (, propertyName, ), ;, }, private, void, addReferenceTypeIndexedByProperty, (, String, propertyName, ,, JSType]
[), ;, greatestSubtypeByProperty, ., remove, (, propertyName, ), ;, }, private, void, addReferenceTypeIndexedByProperty, (, String, propertyName, ,, JSType, type, )]
[;, }, private, void, addReferenceTypeIndexedByProperty, (, String, propertyName, ,, JSType, type, ), {, if, (, type, instanceof, ObjectType, &&, (]
[., remove, (, propertyName, ), ;, }, private, void, addReferenceTypeIndexedByProperty, (, String, propertyName, ,, JSType, type, ), {, if, (]
[), ;, }, private, void, addReferenceTypeIndexedByProperty, (, String, propertyName, ,, JSType, type, ), {, if, (, type, instanceof, ObjectType, &&]
[), {, Map, <, String, ,, ObjectType, >, typeSet, =, eachRefTypeIndexedByProperty, ., get, (, propertyName, ), ;, if, (, typeSet]
[&&, (, (, ObjectType, ), type, ), ., hasReferenceName, (, ), ), {, Map, <, String, ,, ObjectType, >, typeSet]
[instanceof, ObjectType, &&, (, (, ObjectType, ), type, ), ., hasReferenceName, (, ), ), {, Map, <, String, ,, ObjectType]
[), {, Map, <, String, ,, ObjectType, >, typeSet, =, eachRefTypeIndexedByProperty, ., get, (, propertyName, ), ;, if, (, typeSet]
[., hasReferenceName, (, ), ), {, Map, <, String, ,, ObjectType, >, typeSet, =, eachRefTypeIndexedByProperty, ., get, (, propertyName, )]
[), ., hasReferenceName, (, ), ), {, Map, <, String, ,, ObjectType, >, typeSet, =, eachRefTypeIndexedByProperty, ., get, (, propertyName]
[), ., hasReferenceName, (, ), ), {, Map, <, String, ,, ObjectType, >, typeSet, =, eachRefTypeIndexedByProperty, ., get, (, propertyName]
[;, if, (, typeSet, ==, null, ), {, typeSet, =, Maps, ., newHashMap, (, ), ;, eachRefTypeIndexedByProperty, ., put, (]
[., get, (, propertyName, ), ;, if, (, typeSet, ==, null, ), {, typeSet, =, Maps, ., newHashMap, (, )]
[), ;, if, (, typeSet, ==, null, ), {, typeSet, =, Maps, ., newHashMap, (, ), ;, eachRefTypeIndexedByProperty, ., put]
[), {, typeSet, =, Maps, ., newHashMap, (, ), ;, eachRefTypeIndexedByProperty, ., put, (, propertyName, ,, typeSet, ), ;, }]
[==, null, ), {, typeSet, =, Maps, ., newHashMap, (, ), ;, eachRefTypeIndexedByProperty, ., put, (, propertyName, ,, typeSet, )]
[), {, typeSet, =, Maps, ., newHashMap, (, ), ;, eachRefTypeIndexedByProperty, ., put, (, propertyName, ,, typeSet, ), ;, }]
[=, Maps, ., newHashMap, (, ), ;, eachRefTypeIndexedByProperty, ., put, (, propertyName, ,, typeSet, ), ;, }, ObjectType, objType, =]
[;, eachRefTypeIndexedByProperty, ., put, (, propertyName, ,, typeSet, ), ;, }, ObjectType, objType, =, (, ObjectType, ), type, ;, typeSet]
[., newHashMap, (, ), ;, eachRefTypeIndexedByProperty, ., put, (, propertyName, ,, typeSet, ), ;, }, ObjectType, objType, =, (, ObjectType]
[;, }, ObjectType, objType, =, (, ObjectType, ), type, ;, typeSet, ., put, (, objType, ., getReferenceName, (, ), ,]
[., put, (, propertyName, ,, typeSet, ), ;, }, ObjectType, objType, =, (, ObjectType, ), type, ;, typeSet, ., put]
[,, typeSet, ), ;, }, ObjectType, objType, =, (, ObjectType, ), type, ;, typeSet, ., put, (, objType, ., getReferenceName]
[), ;, }, ObjectType, objType, =, (, ObjectType, ), type, ;, typeSet, ., put, (, objType, ., getReferenceName, (, )]
[;, typeSet, ., put, (, objType, ., getReferenceName, (, ), ,, objType, ), ;, }, else, if, (, type, instanceof]
[;, typeSet, ., put, (, objType, ., getReferenceName, (, ), ,, objType, ), ;, }, else, if, (, type, instanceof]
[;, }, else, if, (, type, instanceof, NamedType, ), {, addReferenceTypeIndexedByProperty, (, propertyName, ,, (, (, NamedType, ), type, )]
[., put, (, objType, ., getReferenceName, (, ), ,, objType, ), ;, }, else, if, (, type, instanceof, NamedType, )]
[,, objType, ), ;, }, else, if, (, type, instanceof, NamedType, ), {, addReferenceTypeIndexedByProperty, (, propertyName, ,, (, (, NamedType]
[., getReferenceName, (, ), ,, objType, ), ;, }, else, if, (, type, instanceof, NamedType, ), {, addReferenceTypeIndexedByProperty, (, propertyName]
[), ;, }, else, if, (, type, instanceof, NamedType, ), {, addReferenceTypeIndexedByProperty, (, propertyName, ,, (, (, NamedType, ), type]
[), {, addReferenceTypeIndexedByProperty, (, propertyName, ,, (, (, NamedType, ), type, ), ., getReferencedType, (, ), ), ;, }, else]
[instanceof, NamedType, ), {, addReferenceTypeIndexedByProperty, (, propertyName, ,, (, (, NamedType, ), type, ), ., getReferencedType, (, ), ), ;]
[;, }, else, if, (, type, ., isUnionType, (, ), ), {, for, (, JSType, alternate, :, type, ., toMaybeUnionType]
[,, (, (, NamedType, ), type, ), ., getReferencedType, (, ), ), ;, }, else, if, (, type, ., isUnionType]
[), ;, }, else, if, (, type, ., isUnionType, (, ), ), {, for, (, JSType, alternate, :, type, .]
[., getReferencedType, (, ), ), ;, }, else, if, (, type, ., isUnionType, (, ), ), {, for, (, JSType]
[), ., getReferencedType, (, ), ), ;, }, else, if, (, type, ., isUnionType, (, ), ), {, for, (]
[), ., getReferencedType, (, ), ), ;, }, else, if, (, type, ., isUnionType, (, ), ), {, for, (]
[), {, for, (, JSType, alternate, :, type, ., toMaybeUnionType, (, ), ., getAlternates, (, ), ), {, addReferenceTypeIndexedByProperty, (]
[., isUnionType, (, ), ), {, for, (, JSType, alternate, :, type, ., toMaybeUnionType, (, ), ., getAlternates, (, )]
[), {, addReferenceTypeIndexedByProperty, (, propertyName, ,, alternate, ), ;, }, }, }, public, void, unregisterPropertyOnType, (, String, propertyName, ,, JSType]
[., getAlternates, (, ), ), {, addReferenceTypeIndexedByProperty, (, propertyName, ,, alternate, ), ;, }, }, }, public, void, unregisterPropertyOnType, (]
[., toMaybeUnionType, (, ), ., getAlternates, (, ), ), {, addReferenceTypeIndexedByProperty, (, propertyName, ,, alternate, ), ;, }, }, }]
[;, }, }, }, public, void, unregisterPropertyOnType, (, String, propertyName, ,, JSType, type, ), {, Map, <, String, ,, ObjectType]
[,, alternate, ), ;, }, }, }, public, void, unregisterPropertyOnType, (, String, propertyName, ,, JSType, type, ), {, Map, <]
[), ;, }, }, }, public, void, unregisterPropertyOnType, (, String, propertyName, ,, JSType, type, ), {, Map, <, String, ,]
[;, if, (, typeSet, !=, null, ), {, typeSet, ., remove, (, type, ., toObjectType, (, ), ., getReferenceName, (]
[., get, (, propertyName, ), ;, if, (, typeSet, !=, null, ), {, typeSet, ., remove, (, type, ., toObjectType]
[), ;, if, (, typeSet, !=, null, ), {, typeSet, ., remove, (, type, ., toObjectType, (, ), ., getReferenceName]
[), {, typeSet, ., remove, (, type, ., toObjectType, (, ), ., getReferenceName, (, ), ), ;, }, }, public]
[!=, null, ), {, typeSet, ., remove, (, type, ., toObjectType, (, ), ., getReferenceName, (, ), ), ;, }]
[), {, typeSet, ., remove, (, type, ., toObjectType, (, ), ., getReferenceName, (, ), ), ;, }, }, public]
[;, }, }, public, JSType, getGreatestSubtypeWithProperty, (, JSType, type, ,, String, propertyName, ), {, if, (, greatestSubtypeByProperty, ., containsKey, (]
[., remove, (, type, ., toObjectType, (, ), ., getReferenceName, (, ), ), ;, }, }, public, JSType, getGreatestSubtypeWithProperty, (]
[), ;, }, }, public, JSType, getGreatestSubtypeWithProperty, (, JSType, type, ,, String, propertyName, ), {, if, (, greatestSubtypeByProperty, ., containsKey]
[., getReferenceName, (, ), ), ;, }, }, public, JSType, getGreatestSubtypeWithProperty, (, JSType, type, ,, String, propertyName, ), {, if]
[., toObjectType, (, ), ., getReferenceName, (, ), ), ;, }, }, public, JSType, getGreatestSubtypeWithProperty, (, JSType, type, ,, String]
[), {, return, greatestSubtypeByProperty, ., get, (, propertyName, ), ., getGreatestSubtype, (, type, ), ;, }, if, (, typesIndexedByProperty, .]
[., containsKey, (, propertyName, ), ), {, return, greatestSubtypeByProperty, ., get, (, propertyName, ), ., getGreatestSubtype, (, type, ), ;]
[), ), {, return, greatestSubtypeByProperty, ., get, (, propertyName, ), ., getGreatestSubtype, (, type, ), ;, }, if, (, typesIndexedByProperty]
[;, }, if, (, typesIndexedByProperty, ., containsKey, (, propertyName, ), ), {, JSType, built, =, typesIndexedByProperty, ., get, (, propertyName]
[., getGreatestSubtype, (, type, ), ;, }, if, (, typesIndexedByProperty, ., containsKey, (, propertyName, ), ), {, JSType, built, =]
[., get, (, propertyName, ), ., getGreatestSubtype, (, type, ), ;, }, if, (, typesIndexedByProperty, ., containsKey, (, propertyName, )]
[), ., getGreatestSubtype, (, type, ), ;, }, if, (, typesIndexedByProperty, ., containsKey, (, propertyName, ), ), {, JSType, built]
[), ;, }, if, (, typesIndexedByProperty, ., containsKey, (, propertyName, ), ), {, JSType, built, =, typesIndexedByProperty, ., get, (]
[), {, JSType, built, =, typesIndexedByProperty, ., get, (, propertyName, ), ., build, (, ), ;, greatestSubtypeByProperty, ., put, (]
[., containsKey, (, propertyName, ), ), {, JSType, built, =, typesIndexedByProperty, ., get, (, propertyName, ), ., build, (, )]
[), ), {, JSType, built, =, typesIndexedByProperty, ., get, (, propertyName, ), ., build, (, ), ;, greatestSubtypeByProperty, ., put]
[;, greatestSubtypeByProperty, ., put, (, propertyName, ,, built, ), ;, return, built, ., getGreatestSubtype, (, type, ), ;, }, return]
[., build, (, ), ;, greatestSubtypeByProperty, ., put, (, propertyName, ,, built, ), ;, return, built, ., getGreatestSubtype, (, type]
[., get, (, propertyName, ), ., build, (, ), ;, greatestSubtypeByProperty, ., put, (, propertyName, ,, built, ), ;, return]
[), ., build, (, ), ;, greatestSubtypeByProperty, ., put, (, propertyName, ,, built, ), ;, return, built, ., getGreatestSubtype, (]
[;, return, built, ., getGreatestSubtype, (, type, ), ;, }, return, getNativeType, (, NO_TYPE, ), ;, }, public, boolean, canPropertyBeDefined]
[., put, (, propertyName, ,, built, ), ;, return, built, ., getGreatestSubtype, (, type, ), ;, }, return, getNativeType, (]
[,, built, ), ;, return, built, ., getGreatestSubtype, (, type, ), ;, }, return, getNativeType, (, NO_TYPE, ), ;, }]
[), ;, return, built, ., getGreatestSubtype, (, type, ), ;, }, return, getNativeType, (, NO_TYPE, ), ;, }, public, boolean]
[;, }, return, getNativeType, (, NO_TYPE, ), ;, }, public, boolean, canPropertyBeDefined, (, JSType, type, ,, String, propertyName, ), {]
[., getGreatestSubtype, (, type, ), ;, }, return, getNativeType, (, NO_TYPE, ), ;, }, public, boolean, canPropertyBeDefined, (, JSType, type]
[), ;, }, return, getNativeType, (, NO_TYPE, ), ;, }, public, boolean, canPropertyBeDefined, (, JSType, type, ,, String, propertyName, )]
[;, }, public, boolean, canPropertyBeDefined, (, JSType, type, ,, String, propertyName, ), {, if, (, typesIndexedByProperty, ., containsKey, (, propertyName]
[), ;, }, public, boolean, canPropertyBeDefined, (, JSType, type, ,, String, propertyName, ), {, if, (, typesIndexedByProperty, ., containsKey, (]
[), {, for, (, JSType, alt, :, typesIndexedByProperty, ., get, (, propertyName, ), ., getAlternates, (, ), ), {, JSType]
[., containsKey, (, propertyName, ), ), {, for, (, JSType, alt, :, typesIndexedByProperty, ., get, (, propertyName, ), ., getAlternates]
[), ), {, for, (, JSType, alt, :, typesIndexedByProperty, ., get, (, propertyName, ), ., getAlternates, (, ), ), {]
[), {, JSType, greatestSubtype, =, alt, ., getGreatestSubtype, (, type, ), ;, if, (, !, greatestSubtype, ., isEmptyType, (, )]
[., getAlternates, (, ), ), {, JSType, greatestSubtype, =, alt, ., getGreatestSubtype, (, type, ), ;, if, (, !, greatestSubtype]
[., get, (, propertyName, ), ., getAlternates, (, ), ), {, JSType, greatestSubtype, =, alt, ., getGreatestSubtype, (, type, )]
[), ., getAlternates, (, ), ), {, JSType, greatestSubtype, =, alt, ., getGreatestSubtype, (, type, ), ;, if, (, !]
[;, if, (, !, greatestSubtype, ., isEmptyType, (, ), ), {, RecordType, maybeRecordType, =, greatestSubtype, ., toMaybeRecordType, (, ), ;]
[., getGreatestSubtype, (, type, ), ;, if, (, !, greatestSubtype, ., isEmptyType, (, ), ), {, RecordType, maybeRecordType, =, greatestSubtype]
[), ;, if, (, !, greatestSubtype, ., isEmptyType, (, ), ), {, RecordType, maybeRecordType, =, greatestSubtype, ., toMaybeRecordType, (, )]
[), {, RecordType, maybeRecordType, =, greatestSubtype, ., toMaybeRecordType, (, ), ;, if, (, maybeRecordType, !=, null, &&, maybeRecordType, ., isSynthetic]
[), {, RecordType, maybeRecordType, =, greatestSubtype, ., toMaybeRecordType, (, ), ;, if, (, maybeRecordType, !=, null, &&, maybeRecordType, ., isSynthetic]
[., isEmptyType, (, ), ), {, RecordType, maybeRecordType, =, greatestSubtype, ., toMaybeRecordType, (, ), ;, if, (, maybeRecordType, !=, null]
[;, if, (, maybeRecordType, !=, null, &&, maybeRecordType, ., isSynthetic, (, ), ), {, continue, ;, }, return, true, ;]
[., toMaybeRecordType, (, ), ;, if, (, maybeRecordType, !=, null, &&, maybeRecordType, ., isSynthetic, (, ), ), {, continue, ;]
[), {, continue, ;, }, return, true, ;, }, }, }, return, false, ;, }, public, Iterable, <, JSType, >]
[&&, maybeRecordType, ., isSynthetic, (, ), ), {, continue, ;, }, return, true, ;, }, }, }, return, false, ;]
[!=, null, &&, maybeRecordType, ., isSynthetic, (, ), ), {, continue, ;, }, return, true, ;, }, }, }, return]
[&&, maybeRecordType, ., isSynthetic, (, ), ), {, continue, ;, }, return, true, ;, }, }, }, return, false, ;]
[), {, continue, ;, }, return, true, ;, }, }, }, return, false, ;, }, public, Iterable, <, JSType, >]
[., isSynthetic, (, ), ), {, continue, ;, }, return, true, ;, }, }, }, return, false, ;, }, public]
[;, }, }, }, return, false, ;, }, public, Iterable, <, JSType, >, getTypesWithProperty, (, String, propertyName, ), {, if]
[;, }, public, Iterable, <, JSType, >, getTypesWithProperty, (, String, propertyName, ), {, if, (, typesIndexedByProperty, ., containsKey, (, propertyName]
[), {, return, typesIndexedByProperty, ., get, (, propertyName, ), ., getAlternates, (, ), ;, }, else, {, return, ImmutableList, .]
[., containsKey, (, propertyName, ), ), {, return, typesIndexedByProperty, ., get, (, propertyName, ), ., getAlternates, (, ), ;, }]
[), ), {, return, typesIndexedByProperty, ., get, (, propertyName, ), ., getAlternates, (, ), ;, }, else, {, return, ImmutableList]
[;, }, else, {, return, ImmutableList, ., of, (, ), ;, }, }, public, Iterable, <, ObjectType, >, getEachReferenceTypeWithProperty, (]
[., getAlternates, (, ), ;, }, else, {, return, ImmutableList, ., of, (, ), ;, }, }, public, Iterable, <]
[., get, (, propertyName, ), ., getAlternates, (, ), ;, }, else, {, return, ImmutableList, ., of, (, ), ;]
[), ., getAlternates, (, ), ;, }, else, {, return, ImmutableList, ., of, (, ), ;, }, }, public, Iterable]
[;, }, }, public, Iterable, <, ObjectType, >, getEachReferenceTypeWithProperty, (, String, propertyName, ), {, if, (, eachRefTypeIndexedByProperty, ., containsKey, (]
[., of, (, ), ;, }, }, public, Iterable, <, ObjectType, >, getEachReferenceTypeWithProperty, (, String, propertyName, ), {, if, (]
[), {, return, eachRefTypeIndexedByProperty, ., get, (, propertyName, ), ., values, (, ), ;, }, else, {, return, ImmutableList, .]
[., containsKey, (, propertyName, ), ), {, return, eachRefTypeIndexedByProperty, ., get, (, propertyName, ), ., values, (, ), ;, }]
[), ), {, return, eachRefTypeIndexedByProperty, ., get, (, propertyName, ), ., values, (, ), ;, }, else, {, return, ImmutableList]
[;, }, else, {, return, ImmutableList, ., of, (, ), ;, }, }, ObjectType, findCommonSuperObject, (, ObjectType, a, ,, ObjectType]
[., values, (, ), ;, }, else, {, return, ImmutableList, ., of, (, ), ;, }, }, ObjectType, findCommonSuperObject, (]
[., get, (, propertyName, ), ., values, (, ), ;, }, else, {, return, ImmutableList, ., of, (, ), ;]
[), ., values, (, ), ;, }, else, {, return, ImmutableList, ., of, (, ), ;, }, }, ObjectType, findCommonSuperObject]
[;, }, }, ObjectType, findCommonSuperObject, (, ObjectType, a, ,, ObjectType, b, ), {, List, <, ObjectType, >, stackA, =, getSuperStack]
[., of, (, ), ;, }, }, ObjectType, findCommonSuperObject, (, ObjectType, a, ,, ObjectType, b, ), {, List, <, ObjectType]
[;, List, <, ObjectType, >, stackB, =, getSuperStack, (, b, ), ;, ObjectType, result, =, getNativeObjectType, (, JSTypeNative, ., OBJECT_TYPE]
[), ;, List, <, ObjectType, >, stackB, =, getSuperStack, (, b, ), ;, ObjectType, result, =, getNativeObjectType, (, JSTypeNative, .]
[;, ObjectType, result, =, getNativeObjectType, (, JSTypeNative, ., OBJECT_TYPE, ), ;, while, (, !, stackA, ., isEmpty, (, ), &&]
[), ;, ObjectType, result, =, getNativeObjectType, (, JSTypeNative, ., OBJECT_TYPE, ), ;, while, (, !, stackA, ., isEmpty, (, )]
[;, while, (, !, stackA, ., isEmpty, (, ), &&, !, stackB, ., isEmpty, (, ), ), {, ObjectType, currentA]
[), ;, while, (, !, stackA, ., isEmpty, (, ), &&, !, stackB, ., isEmpty, (, ), ), {, ObjectType]
[., OBJECT_TYPE, ), ;, while, (, !, stackA, ., isEmpty, (, ), &&, !, stackB, ., isEmpty, (, ), )]
[), {, ObjectType, currentA, =, stackA, ., remove, (, stackA, ., size, (, ), -, 1, ), ;, ObjectType, currentB]
[&&, !, stackB, ., isEmpty, (, ), ), {, ObjectType, currentA, =, stackA, ., remove, (, stackA, ., size, (]
[&&, !, stackB, ., isEmpty, (, ), ), {, ObjectType, currentA, =, stackA, ., remove, (, stackA, ., size, (]
[., isEmpty, (, ), &&, !, stackB, ., isEmpty, (, ), ), {, ObjectType, currentA, =, stackA, ., remove, (]
[), {, ObjectType, currentA, =, stackA, ., remove, (, stackA, ., size, (, ), -, 1, ), ;, ObjectType, currentB]
[), {, ObjectType, currentA, =, stackA, ., remove, (, stackA, ., size, (, ), -, 1, ), ;, ObjectType, currentB]
[., isEmpty, (, ), ), {, ObjectType, currentA, =, stackA, ., remove, (, stackA, ., size, (, ), -, 1]
[;, ObjectType, currentB, =, stackB, ., remove, (, stackB, ., size, (, ), -, 1, ), ;, if, (, currentA]
[., remove, (, stackA, ., size, (, ), -, 1, ), ;, ObjectType, currentB, =, stackB, ., remove, (, stackB]
[), ;, ObjectType, currentB, =, stackB, ., remove, (, stackB, ., size, (, ), -, 1, ), ;, if, (]
[-, 1, ), ;, ObjectType, currentB, =, stackB, ., remove, (, stackB, ., size, (, ), -, 1, ), ;]
[., size, (, ), -, 1, ), ;, ObjectType, currentB, =, stackB, ., remove, (, stackB, ., size, (, )]
[), ;, ObjectType, currentB, =, stackB, ., remove, (, stackB, ., size, (, ), -, 1, ), ;, if, (]
[;, if, (, currentA, ., isEquivalentTo, (, currentB, ), ), {, result, =, currentA, ;, }, else, {, return, result]
[., remove, (, stackB, ., size, (, ), -, 1, ), ;, if, (, currentA, ., isEquivalentTo, (, currentB, )]
[), ;, if, (, currentA, ., isEquivalentTo, (, currentB, ), ), {, result, =, currentA, ;, }, else, {, return]
[-, 1, ), ;, if, (, currentA, ., isEquivalentTo, (, currentB, ), ), {, result, =, currentA, ;, }, else]
[., size, (, ), -, 1, ), ;, if, (, currentA, ., isEquivalentTo, (, currentB, ), ), {, result, =]
[), ;, if, (, currentA, ., isEquivalentTo, (, currentB, ), ), {, result, =, currentA, ;, }, else, {, return]
[), {, result, =, currentA, ;, }, else, {, return, result, ;, }, }, return, result, ;, }, private, static]
[., isEquivalentTo, (, currentB, ), ), {, result, =, currentA, ;, }, else, {, return, result, ;, }, }, return]
[), ), {, result, =, currentA, ;, }, else, {, return, result, ;, }, }, return, result, ;, }, private]
[=, currentA, ;, }, else, {, return, result, ;, }, }, return, result, ;, }, private, static, List, <, ObjectType]
[;, }, else, {, return, result, ;, }, }, return, result, ;, }, private, static, List, <, ObjectType, >, getSuperStack]
[;, }, }, return, result, ;, }, private, static, List, <, ObjectType, >, getSuperStack, (, ObjectType, a, ), {, List]
[;, }, private, static, List, <, ObjectType, >, getSuperStack, (, ObjectType, a, ), {, List, <, ObjectType, >, stack, =]
[;, for, (, ObjectType, current, =, a, ;, current, !=, null, ;, current, =, current, ., getImplicitPrototype, (, ), )]
[., newArrayListWithExpectedSize, (, 5, ), ;, for, (, ObjectType, current, =, a, ;, current, !=, null, ;, current, =, current]
[), ;, for, (, ObjectType, current, =, a, ;, current, !=, null, ;, current, =, current, ., getImplicitPrototype, (, )]
[;, current, !=, null, ;, current, =, current, ., getImplicitPrototype, (, ), ), {, stack, ., add, (, current, )]
[;, current, =, current, ., getImplicitPrototype, (, ), ), {, stack, ., add, (, current, ), ;, }, return, stack]
[!=, null, ;, current, =, current, ., getImplicitPrototype, (, ), ), {, stack, ., add, (, current, ), ;, }]
[;, current, =, current, ., getImplicitPrototype, (, ), ), {, stack, ., add, (, current, ), ;, }, return, stack]
[=, current, ., getImplicitPrototype, (, ), ), {, stack, ., add, (, current, ), ;, }, return, stack, ;, }]
[), {, stack, ., add, (, current, ), ;, }, return, stack, ;, }, public, void, incrementGeneration, (, ), {]
[., getImplicitPrototype, (, ), ), {, stack, ., add, (, current, ), ;, }, return, stack, ;, }, public, void]
[;, }, return, stack, ;, }, public, void, incrementGeneration, (, ), {, for, (, NamedType, type, :, resolvedNamedTypes, ., values]
[., add, (, current, ), ;, }, return, stack, ;, }, public, void, incrementGeneration, (, ), {, for, (, NamedType]
[), ;, }, return, stack, ;, }, public, void, incrementGeneration, (, ), {, for, (, NamedType, type, :, resolvedNamedTypes, .]
[;, }, public, void, incrementGeneration, (, ), {, for, (, NamedType, type, :, resolvedNamedTypes, ., values, (, ), ), {]
[), {, type, ., clearResolved, (, ), ;, }, unresolvedNamedTypes, ., putAll, (, resolvedNamedTypes, ), ;, resolvedNamedTypes, ., clear, (]
[., values, (, ), ), {, type, ., clearResolved, (, ), ;, }, unresolvedNamedTypes, ., putAll, (, resolvedNamedTypes, ), ;]
[;, }, unresolvedNamedTypes, ., putAll, (, resolvedNamedTypes, ), ;, resolvedNamedTypes, ., clear, (, ), ;, }, boolean, isLastGeneration, (, )]
[., clearResolved, (, ), ;, }, unresolvedNamedTypes, ., putAll, (, resolvedNamedTypes, ), ;, resolvedNamedTypes, ., clear, (, ), ;, }]
[;, resolvedNamedTypes, ., clear, (, ), ;, }, boolean, isLastGeneration, (, ), {, return, lastGeneration, ;, }, public, void, setLastGeneration]
[., putAll, (, resolvedNamedTypes, ), ;, resolvedNamedTypes, ., clear, (, ), ;, }, boolean, isLastGeneration, (, ), {, return, lastGeneration]
[), ;, resolvedNamedTypes, ., clear, (, ), ;, }, boolean, isLastGeneration, (, ), {, return, lastGeneration, ;, }, public, void]
[;, }, boolean, isLastGeneration, (, ), {, return, lastGeneration, ;, }, public, void, setLastGeneration, (, boolean, lastGeneration, ), {, this]
[., clear, (, ), ;, }, boolean, isLastGeneration, (, ), {, return, lastGeneration, ;, }, public, void, setLastGeneration, (, boolean]
[;, }, public, void, setLastGeneration, (, boolean, lastGeneration, ), {, this, ., lastGeneration, =, lastGeneration, ;, }, void, registerTypeImplementingInterface, (]
[=, lastGeneration, ;, }, void, registerTypeImplementingInterface, (, FunctionType, type, ,, ObjectType, interfaceInstance, ), {, interfaceToImplementors, ., put, (, interfaceInstance, .]
[., lastGeneration, =, lastGeneration, ;, }, void, registerTypeImplementingInterface, (, FunctionType, type, ,, ObjectType, interfaceInstance, ), {, interfaceToImplementors, ., put, (]
[;, }, void, registerTypeImplementingInterface, (, FunctionType, type, ,, ObjectType, interfaceInstance, ), {, interfaceToImplementors, ., put, (, interfaceInstance, ., getReferenceName, (]
[;, }, public, Collection, <, FunctionType, >, getDirectImplementors, (, ObjectType, interfaceInstance, ), {, return, interfaceToImplementors, ., get, (, interfaceInstance, .]
[., put, (, interfaceInstance, ., getReferenceName, (, ), ,, type, ), ;, }, public, Collection, <, FunctionType, >, getDirectImplementors, (]
[,, type, ), ;, }, public, Collection, <, FunctionType, >, getDirectImplementors, (, ObjectType, interfaceInstance, ), {, return, interfaceToImplementors, ., get]
[., getReferenceName, (, ), ,, type, ), ;, }, public, Collection, <, FunctionType, >, getDirectImplementors, (, ObjectType, interfaceInstance, ), {]
[), ;, }, public, Collection, <, FunctionType, >, getDirectImplementors, (, ObjectType, interfaceInstance, ), {, return, interfaceToImplementors, ., get, (, interfaceInstance]
[;, }, public, boolean, declareType, (, String, name, ,, JSType, t, ), {, if, (, namesToTypes, ., containsKey, (, name]
[., get, (, interfaceInstance, ., getReferenceName, (, ), ), ;, }, public, boolean, declareType, (, String, name, ,, JSType, t]
[), ;, }, public, boolean, declareType, (, String, name, ,, JSType, t, ), {, if, (, namesToTypes, ., containsKey, (]
[., getReferenceName, (, ), ), ;, }, public, boolean, declareType, (, String, name, ,, JSType, t, ), {, if, (]
[), {, return, false, ;, }, register, (, t, ,, name, ), ;, return, true, ;, }, public, void, overwriteDeclaredType]
[., containsKey, (, name, ), ), {, return, false, ;, }, register, (, t, ,, name, ), ;, return, true]
[), ), {, return, false, ;, }, register, (, t, ,, name, ), ;, return, true, ;, }, public, void]
[;, }, register, (, t, ,, name, ), ;, return, true, ;, }, public, void, overwriteDeclaredType, (, String, name, ,]
[;, return, true, ;, }, public, void, overwriteDeclaredType, (, String, name, ,, JSType, t, ), {, Preconditions, ., checkState, (]
[,, name, ), ;, return, true, ;, }, public, void, overwriteDeclaredType, (, String, name, ,, JSType, t, ), {, Preconditions]
[), ;, return, true, ;, }, public, void, overwriteDeclaredType, (, String, name, ,, JSType, t, ), {, Preconditions, ., checkState]
[;, }, public, void, overwriteDeclaredType, (, String, name, ,, JSType, t, ), {, Preconditions, ., checkState, (, namesToTypes, ., containsKey]
[;, register, (, t, ,, name, ), ;, }, public, void, forwardDeclareType, (, String, name, ), {, forwardDeclaredTypes, ., add]
[., checkState, (, namesToTypes, ., containsKey, (, name, ), ), ;, register, (, t, ,, name, ), ;, }, public]
[), ;, register, (, t, ,, name, ), ;, }, public, void, forwardDeclareType, (, String, name, ), {, forwardDeclaredTypes, .]
[., containsKey, (, name, ), ), ;, register, (, t, ,, name, ), ;, }, public, void, forwardDeclareType, (, String]
[), ), ;, register, (, t, ,, name, ), ;, }, public, void, forwardDeclareType, (, String, name, ), {, forwardDeclaredTypes]
[;, }, public, void, forwardDeclareType, (, String, name, ), {, forwardDeclaredTypes, ., add, (, name, ), ;, }, public, boolean]
[,, name, ), ;, }, public, void, forwardDeclareType, (, String, name, ), {, forwardDeclaredTypes, ., add, (, name, ), ;]
[), ;, }, public, void, forwardDeclareType, (, String, name, ), {, forwardDeclaredTypes, ., add, (, name, ), ;, }, public]
[;, }, public, boolean, isForwardDeclaredType, (, String, name, ), {, return, forwardDeclaredTypes, ., contains, (, name, ), ;, }, public]
[., add, (, name, ), ;, }, public, boolean, isForwardDeclaredType, (, String, name, ), {, return, forwardDeclaredTypes, ., contains, (]
[), ;, }, public, boolean, isForwardDeclaredType, (, String, name, ), {, return, forwardDeclaredTypes, ., contains, (, name, ), ;, }]
[;, }, public, boolean, hasNamespace, (, String, name, ), {, return, namespaces, ., contains, (, name, ), ;, }, public]
[., contains, (, name, ), ;, }, public, boolean, hasNamespace, (, String, name, ), {, return, namespaces, ., contains, (]
[), ;, }, public, boolean, hasNamespace, (, String, name, ), {, return, namespaces, ., contains, (, name, ), ;, }]
[;, }, public, JSType, getType, (, String, jsTypeName, ), {, TemplateType, templateType, =, templateTypes, ., get, (, jsTypeName, ), ;]
[., contains, (, name, ), ;, }, public, JSType, getType, (, String, jsTypeName, ), {, TemplateType, templateType, =, templateTypes, .]
[), ;, }, public, JSType, getType, (, String, jsTypeName, ), {, TemplateType, templateType, =, templateTypes, ., get, (, jsTypeName, )]
[;, if, (, templateType, !=, null, ), {, return, templateType, ;, }, return, namesToTypes, ., get, (, jsTypeName, ), ;]
[., get, (, jsTypeName, ), ;, if, (, templateType, !=, null, ), {, return, templateType, ;, }, return, namesToTypes, .]
[), ;, if, (, templateType, !=, null, ), {, return, templateType, ;, }, return, namesToTypes, ., get, (, jsTypeName, )]
[), {, return, templateType, ;, }, return, namesToTypes, ., get, (, jsTypeName, ), ;, }, public, JSType, getNativeType, (, JSTypeNative]
[!=, null, ), {, return, templateType, ;, }, return, namesToTypes, ., get, (, jsTypeName, ), ;, }, public, JSType, getNativeType]
[), {, return, templateType, ;, }, return, namesToTypes, ., get, (, jsTypeName, ), ;, }, public, JSType, getNativeType, (, JSTypeNative]
[;, }, return, namesToTypes, ., get, (, jsTypeName, ), ;, }, public, JSType, getNativeType, (, JSTypeNative, typeId, ), {, return]
[;, }, public, JSType, getNativeType, (, JSTypeNative, typeId, ), {, return, nativeTypes, [, typeId, ., ordinal, (, ), ], ;]
[., get, (, jsTypeName, ), ;, }, public, JSType, getNativeType, (, JSTypeNative, typeId, ), {, return, nativeTypes, [, typeId, .]
[), ;, }, public, JSType, getNativeType, (, JSTypeNative, typeId, ), {, return, nativeTypes, [, typeId, ., ordinal, (, ), ]]
[;, }, public, ObjectType, getNativeObjectType, (, JSTypeNative, typeId, ), {, return, (, ObjectType, ), getNativeType, (, typeId, ), ;, }]
[[, typeId, ., ordinal, (, ), ], ;, }, public, ObjectType, getNativeObjectType, (, JSTypeNative, typeId, ), {, return, (, ObjectType]
[], ;, }, public, ObjectType, getNativeObjectType, (, JSTypeNative, typeId, ), {, return, (, ObjectType, ), getNativeType, (, typeId, ), ;]
[., ordinal, (, ), ], ;, }, public, ObjectType, getNativeObjectType, (, JSTypeNative, typeId, ), {, return, (, ObjectType, ), getNativeType]
[;, }, public, FunctionType, getNativeFunctionType, (, JSTypeNative, typeId, ), {, return, (, FunctionType, ), getNativeType, (, typeId, ), ;, }]
[;, }, public, FunctionType, getNativeFunctionType, (, JSTypeNative, typeId, ), {, return, (, FunctionType, ), getNativeType, (, typeId, ), ;, }]
[), ;, }, public, FunctionType, getNativeFunctionType, (, JSTypeNative, typeId, ), {, return, (, FunctionType, ), getNativeType, (, typeId, ), ;]
[;, }, public, JSType, getType, (, StaticScope, <, JSType, >, scope, ,, String, jsTypeName, ,, String, sourceName, ,, int, lineno]
[;, }, public, JSType, getType, (, StaticScope, <, JSType, >, scope, ,, String, jsTypeName, ,, String, sourceName, ,, int, lineno]
[), ;, }, public, JSType, getType, (, StaticScope, <, JSType, >, scope, ,, String, jsTypeName, ,, String, sourceName, ,, int]
[;, if, (, type, ==, null, ), {, NamedType, namedType, =, new, NamedType, (, this, ,, jsTypeName, ,, sourceName, ,]
[), ;, if, (, type, ==, null, ), {, NamedType, namedType, =, new, NamedType, (, this, ,, jsTypeName, ,, sourceName]
[), {, NamedType, namedType, =, new, NamedType, (, this, ,, jsTypeName, ,, sourceName, ,, lineno, ,, charno, ), ;, unresolvedNamedTypes]
[==, null, ), {, NamedType, namedType, =, new, NamedType, (, this, ,, jsTypeName, ,, sourceName, ,, lineno, ,, charno, )]
[), {, NamedType, namedType, =, new, NamedType, (, this, ,, jsTypeName, ,, sourceName, ,, lineno, ,, charno, ), ;, unresolvedNamedTypes]
[;, unresolvedNamedTypes, ., put, (, scope, ,, namedType, ), ;, type, =, namedType, ;, }, return, type, ;, }, public]
[,, jsTypeName, ,, sourceName, ,, lineno, ,, charno, ), ;, unresolvedNamedTypes, ., put, (, scope, ,, namedType, ), ;, type]
[,, sourceName, ,, lineno, ,, charno, ), ;, unresolvedNamedTypes, ., put, (, scope, ,, namedType, ), ;, type, =, namedType]
[,, lineno, ,, charno, ), ;, unresolvedNamedTypes, ., put, (, scope, ,, namedType, ), ;, type, =, namedType, ;, }]
[,, charno, ), ;, unresolvedNamedTypes, ., put, (, scope, ,, namedType, ), ;, type, =, namedType, ;, }, return, type]
[), ;, unresolvedNamedTypes, ., put, (, scope, ,, namedType, ), ;, type, =, namedType, ;, }, return, type, ;, }]
[;, type, =, namedType, ;, }, return, type, ;, }, public, void, clearNamedTypes, (, ), {, resolvedNamedTypes, ., clear, (]
[., put, (, scope, ,, namedType, ), ;, type, =, namedType, ;, }, return, type, ;, }, public, void, clearNamedTypes]
[,, namedType, ), ;, type, =, namedType, ;, }, return, type, ;, }, public, void, clearNamedTypes, (, ), {, resolvedNamedTypes]
[), ;, type, =, namedType, ;, }, return, type, ;, }, public, void, clearNamedTypes, (, ), {, resolvedNamedTypes, ., clear]
[=, namedType, ;, }, return, type, ;, }, public, void, clearNamedTypes, (, ), {, resolvedNamedTypes, ., clear, (, ), ;]
[;, }, return, type, ;, }, public, void, clearNamedTypes, (, ), {, resolvedNamedTypes, ., clear, (, ), ;, unresolvedNamedTypes, .]
[;, }, public, void, clearNamedTypes, (, ), {, resolvedNamedTypes, ., clear, (, ), ;, unresolvedNamedTypes, ., clear, (, ), ;]
[;, unresolvedNamedTypes, ., clear, (, ), ;, }, public, void, resolveTypesInScope, (, StaticScope, <, JSType, >, scope, ), {, for]
[., clear, (, ), ;, unresolvedNamedTypes, ., clear, (, ), ;, }, public, void, resolveTypesInScope, (, StaticScope, <, JSType, >]
[;, }, public, void, resolveTypesInScope, (, StaticScope, <, JSType, >, scope, ), {, for, (, NamedType, type, :, unresolvedNamedTypes, .]
[., clear, (, ), ;, }, public, void, resolveTypesInScope, (, StaticScope, <, JSType, >, scope, ), {, for, (, NamedType]
[), {, type, ., resolve, (, reporter, ,, scope, ), ;, }, resolvedNamedTypes, ., putAll, (, scope, ,, unresolvedNamedTypes, .]
[., get, (, scope, ), ), {, type, ., resolve, (, reporter, ,, scope, ), ;, }, resolvedNamedTypes, ., putAll]
[), ), {, type, ., resolve, (, reporter, ,, scope, ), ;, }, resolvedNamedTypes, ., putAll, (, scope, ,, unresolvedNamedTypes]
[;, }, resolvedNamedTypes, ., putAll, (, scope, ,, unresolvedNamedTypes, ., removeAll, (, scope, ), ), ;, if, (, scope, !=]
[., resolve, (, reporter, ,, scope, ), ;, }, resolvedNamedTypes, ., putAll, (, scope, ,, unresolvedNamedTypes, ., removeAll, (, scope]
[,, scope, ), ;, }, resolvedNamedTypes, ., putAll, (, scope, ,, unresolvedNamedTypes, ., removeAll, (, scope, ), ), ;, if]
[), ;, }, resolvedNamedTypes, ., putAll, (, scope, ,, unresolvedNamedTypes, ., removeAll, (, scope, ), ), ;, if, (, scope]
[;, if, (, scope, !=, null, &&, scope, ., getParentScope, (, ), ==, null, ), {, PrototypeObjectType, globalThis, =, (]
[., putAll, (, scope, ,, unresolvedNamedTypes, ., removeAll, (, scope, ), ), ;, if, (, scope, !=, null, &&, scope]
[,, unresolvedNamedTypes, ., removeAll, (, scope, ), ), ;, if, (, scope, !=, null, &&, scope, ., getParentScope, (, )]
[), ;, if, (, scope, !=, null, &&, scope, ., getParentScope, (, ), ==, null, ), {, PrototypeObjectType, globalThis, =]
[., removeAll, (, scope, ), ), ;, if, (, scope, !=, null, &&, scope, ., getParentScope, (, ), ==, null]
[), ), ;, if, (, scope, !=, null, &&, scope, ., getParentScope, (, ), ==, null, ), {, PrototypeObjectType, globalThis]
[), {, PrototypeObjectType, globalThis, =, (, PrototypeObjectType, ), getNativeType, (, JSTypeNative, ., GLOBAL_THIS, ), ;, JSType, windowType, =, getType, (]
[&&, scope, ., getParentScope, (, ), ==, null, ), {, PrototypeObjectType, globalThis, =, (, PrototypeObjectType, ), getNativeType, (, JSTypeNative, .]
[!=, null, &&, scope, ., getParentScope, (, ), ==, null, ), {, PrototypeObjectType, globalThis, =, (, PrototypeObjectType, ), getNativeType, (]
[&&, scope, ., getParentScope, (, ), ==, null, ), {, PrototypeObjectType, globalThis, =, (, PrototypeObjectType, ), getNativeType, (, JSTypeNative, .]
[), {, PrototypeObjectType, globalThis, =, (, PrototypeObjectType, ), getNativeType, (, JSTypeNative, ., GLOBAL_THIS, ), ;, JSType, windowType, =, getType, (]
[==, null, ), {, PrototypeObjectType, globalThis, =, (, PrototypeObjectType, ), getNativeType, (, JSTypeNative, ., GLOBAL_THIS, ), ;, JSType, windowType, =]
[., getParentScope, (, ), ==, null, ), {, PrototypeObjectType, globalThis, =, (, PrototypeObjectType, ), getNativeType, (, JSTypeNative, ., GLOBAL_THIS, )]
[), {, PrototypeObjectType, globalThis, =, (, PrototypeObjectType, ), getNativeType, (, JSTypeNative, ., GLOBAL_THIS, ), ;, JSType, windowType, =, getType, (]
[;, JSType, windowType, =, getType, (, "Window", ), ;, if, (, globalThis, ., isUnknownType, (, ), ), {, ObjectType, windowObjType]
[;, JSType, windowType, =, getType, (, "Window", ), ;, if, (, globalThis, ., isUnknownType, (, ), ), {, ObjectType, windowObjType]
[), ;, JSType, windowType, =, getType, (, "Window", ), ;, if, (, globalThis, ., isUnknownType, (, ), ), {, ObjectType]
[., GLOBAL_THIS, ), ;, JSType, windowType, =, getType, (, "Window", ), ;, if, (, globalThis, ., isUnknownType, (, ), )]
[;, if, (, globalThis, ., isUnknownType, (, ), ), {, ObjectType, windowObjType, =, ObjectType, ., cast, (, windowType, ), ;]
[), ;, if, (, globalThis, ., isUnknownType, (, ), ), {, ObjectType, windowObjType, =, ObjectType, ., cast, (, windowType, )]
[), {, ObjectType, windowObjType, =, ObjectType, ., cast, (, windowType, ), ;, if, (, windowObjType, !=, null, ), {, globalThis]
[., isUnknownType, (, ), ), {, ObjectType, windowObjType, =, ObjectType, ., cast, (, windowType, ), ;, if, (, windowObjType, !=]
[;, if, (, windowObjType, !=, null, ), {, globalThis, ., setImplicitPrototype, (, windowObjType, ), ;, }, else, {, globalThis, .]
[., cast, (, windowType, ), ;, if, (, windowObjType, !=, null, ), {, globalThis, ., setImplicitPrototype, (, windowObjType, ), ;]
[), ;, if, (, windowObjType, !=, null, ), {, globalThis, ., setImplicitPrototype, (, windowObjType, ), ;, }, else, {, globalThis]
[), {, globalThis, ., setImplicitPrototype, (, windowObjType, ), ;, }, else, {, globalThis, ., setImplicitPrototype, (, getNativeObjectType, (, JSTypeNative, .]
[!=, null, ), {, globalThis, ., setImplicitPrototype, (, windowObjType, ), ;, }, else, {, globalThis, ., setImplicitPrototype, (, getNativeObjectType, (]
[), {, globalThis, ., setImplicitPrototype, (, windowObjType, ), ;, }, else, {, globalThis, ., setImplicitPrototype, (, getNativeObjectType, (, JSTypeNative, .]
[;, }, else, {, globalThis, ., setImplicitPrototype, (, getNativeObjectType, (, JSTypeNative, ., OBJECT_TYPE, ), ), ;, }, }, }, }]
[., setImplicitPrototype, (, windowObjType, ), ;, }, else, {, globalThis, ., setImplicitPrototype, (, getNativeObjectType, (, JSTypeNative, ., OBJECT_TYPE, ), )]
[), ;, }, else, {, globalThis, ., setImplicitPrototype, (, getNativeObjectType, (, JSTypeNative, ., OBJECT_TYPE, ), ), ;, }, }, }]
[;, }, }, }, }, public, JSType, createOptionalType, (, JSType, type, ), {, if, (, type, instanceof, UnknownType, ||, type]
[., setImplicitPrototype, (, getNativeObjectType, (, JSTypeNative, ., OBJECT_TYPE, ), ), ;, }, }, }, }, public, JSType, createOptionalType, (, JSType]
[), ;, }, }, }, }, public, JSType, createOptionalType, (, JSType, type, ), {, if, (, type, instanceof, UnknownType, ||]
[), ), ;, }, }, }, }, public, JSType, createOptionalType, (, JSType, type, ), {, if, (, type, instanceof, UnknownType]
[., OBJECT_TYPE, ), ), ;, }, }, }, }, public, JSType, createOptionalType, (, JSType, type, ), {, if, (, type]
[), {, return, type, ;, }, else, {, return, createUnionType, (, type, ,, getNativeType, (, JSTypeNative, ., VOID_TYPE, ), )]
[||, type, ., isAllType, (, ), ), {, return, type, ;, }, else, {, return, createUnionType, (, type, ,, getNativeType]
[instanceof, UnknownType, ||, type, ., isAllType, (, ), ), {, return, type, ;, }, else, {, return, createUnionType, (, type]
[), {, return, type, ;, }, else, {, return, createUnionType, (, type, ,, getNativeType, (, JSTypeNative, ., VOID_TYPE, ), )]
[., isAllType, (, ), ), {, return, type, ;, }, else, {, return, createUnionType, (, type, ,, getNativeType, (, JSTypeNative]
[;, }, else, {, return, createUnionType, (, type, ,, getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ), ;, }, }, public]
[;, }, }, public, JSType, createDefaultObjectUnion, (, JSType, type, ), {, if, (, type, ., isTemplateType, (, ), ), {]
[,, getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ), ;, }, }, public, JSType, createDefaultObjectUnion, (, JSType, type, ), {, if]
[), ;, }, }, public, JSType, createDefaultObjectUnion, (, JSType, type, ), {, if, (, type, ., isTemplateType, (, ), )]
[), ), ;, }, }, public, JSType, createDefaultObjectUnion, (, JSType, type, ), {, if, (, type, ., isTemplateType, (, )]
[., VOID_TYPE, ), ), ;, }, }, public, JSType, createDefaultObjectUnion, (, JSType, type, ), {, if, (, type, ., isTemplateType]
[), {, return, type, ;, }, else, {, return, shouldTolerateUndefinedValues, (, ), ?, createOptionalNullableType, (, type, ), :, createNullableType, (]
[., isTemplateType, (, ), ), {, return, type, ;, }, else, {, return, shouldTolerateUndefinedValues, (, ), ?, createOptionalNullableType, (, type]
[;, }, else, {, return, shouldTolerateUndefinedValues, (, ), ?, createOptionalNullableType, (, type, ), :, createNullableType, (, type, ), ;, }]
[;, }, }, public, JSType, createNullableType, (, JSType, type, ), {, return, createUnionType, (, type, ,, getNativeType, (, JSTypeNative, .]
[?, createOptionalNullableType, (, type, ), :, createNullableType, (, type, ), ;, }, }, public, JSType, createNullableType, (, JSType, type, )]
[:, createNullableType, (, type, ), ;, }, }, public, JSType, createNullableType, (, JSType, type, ), {, return, createUnionType, (, type]
[), :, createNullableType, (, type, ), ;, }, }, public, JSType, createNullableType, (, JSType, type, ), {, return, createUnionType, (]
[;, }, }, public, JSType, createNullableType, (, JSType, type, ), {, return, createUnionType, (, type, ,, getNativeType, (, JSTypeNative, .]
[), ;, }, }, public, JSType, createNullableType, (, JSType, type, ), {, return, createUnionType, (, type, ,, getNativeType, (, JSTypeNative]
[;, }, public, JSType, createOptionalNullableType, (, JSType, type, ), {, return, createUnionType, (, type, ,, getNativeType, (, JSTypeNative, ., VOID_TYPE]
[,, getNativeType, (, JSTypeNative, ., NULL_TYPE, ), ), ;, }, public, JSType, createOptionalNullableType, (, JSType, type, ), {, return, createUnionType]
[), ;, }, public, JSType, createOptionalNullableType, (, JSType, type, ), {, return, createUnionType, (, type, ,, getNativeType, (, JSTypeNative, .]
[), ), ;, }, public, JSType, createOptionalNullableType, (, JSType, type, ), {, return, createUnionType, (, type, ,, getNativeType, (, JSTypeNative]
[., NULL_TYPE, ), ), ;, }, public, JSType, createOptionalNullableType, (, JSType, type, ), {, return, createUnionType, (, type, ,, getNativeType]
[;, }, public, JSType, createUnionType, (, JSType, ..., variants, ), {, UnionTypeBuilder, builder, =, new, UnionTypeBuilder, (, this, ), ;]
[,, getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ,, getNativeType, (, JSTypeNative, ., NULL_TYPE, ), ), ;, }, public, JSType, createUnionType]
[,, getNativeType, (, JSTypeNative, ., NULL_TYPE, ), ), ;, }, public, JSType, createUnionType, (, JSType, ..., variants, ), {, UnionTypeBuilder]
[), ,, getNativeType, (, JSTypeNative, ., NULL_TYPE, ), ), ;, }, public, JSType, createUnionType, (, JSType, ..., variants, ), {]
[., VOID_TYPE, ), ,, getNativeType, (, JSTypeNative, ., NULL_TYPE, ), ), ;, }, public, JSType, createUnionType, (, JSType, ..., variants]
[), ;, }, public, JSType, createUnionType, (, JSType, ..., variants, ), {, UnionTypeBuilder, builder, =, new, UnionTypeBuilder, (, this, )]
[), ), ;, }, public, JSType, createUnionType, (, JSType, ..., variants, ), {, UnionTypeBuilder, builder, =, new, UnionTypeBuilder, (, this]
[., NULL_TYPE, ), ), ;, }, public, JSType, createUnionType, (, JSType, ..., variants, ), {, UnionTypeBuilder, builder, =, new, UnionTypeBuilder]
[;, for, (, JSType, type, :, variants, ), {, builder, ., addAlternate, (, type, ), ;, }, return, builder, .]
[), ;, for, (, JSType, type, :, variants, ), {, builder, ., addAlternate, (, type, ), ;, }, return, builder]
[), {, builder, ., addAlternate, (, type, ), ;, }, return, builder, ., build, (, ), ;, }, public, JSType]
[;, }, return, builder, ., build, (, ), ;, }, public, JSType, createUnionType, (, JSTypeNative, ..., variants, ), {, UnionTypeBuilder]
[., addAlternate, (, type, ), ;, }, return, builder, ., build, (, ), ;, }, public, JSType, createUnionType, (, JSTypeNative]
[), ;, }, return, builder, ., build, (, ), ;, }, public, JSType, createUnionType, (, JSTypeNative, ..., variants, ), {]
[;, }, public, JSType, createUnionType, (, JSTypeNative, ..., variants, ), {, UnionTypeBuilder, builder, =, new, UnionTypeBuilder, (, this, ), ;]
[., build, (, ), ;, }, public, JSType, createUnionType, (, JSTypeNative, ..., variants, ), {, UnionTypeBuilder, builder, =, new, UnionTypeBuilder]
[;, for, (, JSTypeNative, typeId, :, variants, ), {, builder, ., addAlternate, (, getNativeType, (, typeId, ), ), ;, }]
[), ;, for, (, JSTypeNative, typeId, :, variants, ), {, builder, ., addAlternate, (, getNativeType, (, typeId, ), ), ;]
[), {, builder, ., addAlternate, (, getNativeType, (, typeId, ), ), ;, }, return, builder, ., build, (, ), ;]
[;, }, return, builder, ., build, (, ), ;, }, public, EnumType, createEnumType, (, String, name, ,, Node, source, ,]
[., addAlternate, (, getNativeType, (, typeId, ), ), ;, }, return, builder, ., build, (, ), ;, }, public, EnumType]
[), ;, }, return, builder, ., build, (, ), ;, }, public, EnumType, createEnumType, (, String, name, ,, Node, source]
[), ), ;, }, return, builder, ., build, (, ), ;, }, public, EnumType, createEnumType, (, String, name, ,, Node]
[;, }, public, EnumType, createEnumType, (, String, name, ,, Node, source, ,, JSType, elementsType, ), {, return, new, EnumType, (]
[., build, (, ), ;, }, public, EnumType, createEnumType, (, String, name, ,, Node, source, ,, JSType, elementsType, ), {]
[;, }, ArrowType, createArrowType, (, Node, parametersNode, ,, JSType, returnType, ), {, return, new, ArrowType, (, this, ,, parametersNode, ,]
[,, name, ,, source, ,, elementsType, ), ;, }, ArrowType, createArrowType, (, Node, parametersNode, ,, JSType, returnType, ), {, return]
[,, source, ,, elementsType, ), ;, }, ArrowType, createArrowType, (, Node, parametersNode, ,, JSType, returnType, ), {, return, new, ArrowType]
[,, elementsType, ), ;, }, ArrowType, createArrowType, (, Node, parametersNode, ,, JSType, returnType, ), {, return, new, ArrowType, (, this]
[), ;, }, ArrowType, createArrowType, (, Node, parametersNode, ,, JSType, returnType, ), {, return, new, ArrowType, (, this, ,, parametersNode]
[;, }, ArrowType, createArrowType, (, Node, parametersNode, ), {, return, new, ArrowType, (, this, ,, parametersNode, ,, null, ), ;]
[,, parametersNode, ,, returnType, ), ;, }, ArrowType, createArrowType, (, Node, parametersNode, ), {, return, new, ArrowType, (, this, ,]
[,, returnType, ), ;, }, ArrowType, createArrowType, (, Node, parametersNode, ), {, return, new, ArrowType, (, this, ,, parametersNode, ,]
[), ;, }, ArrowType, createArrowType, (, Node, parametersNode, ), {, return, new, ArrowType, (, this, ,, parametersNode, ,, null, )]
[;, }, public, FunctionType, createFunctionType, (, JSType, returnType, ,, JSType, ..., parameterTypes, ), {, return, createFunctionType, (, returnType, ,, createParameters]
[,, parametersNode, ,, null, ), ;, }, public, FunctionType, createFunctionType, (, JSType, returnType, ,, JSType, ..., parameterTypes, ), {, return]
[,, null, ), ;, }, public, FunctionType, createFunctionType, (, JSType, returnType, ,, JSType, ..., parameterTypes, ), {, return, createFunctionType, (]
[), ;, }, public, FunctionType, createFunctionType, (, JSType, returnType, ,, JSType, ..., parameterTypes, ), {, return, createFunctionType, (, returnType, ,]
[;, }, public, FunctionType, createFunctionTypeWithVarArgs, (, JSType, returnType, ,, List, <, JSType, >, parameterTypes, ), {, return, createFunctionType, (, returnType]
[,, createParameters, (, parameterTypes, ), ), ;, }, public, FunctionType, createFunctionTypeWithVarArgs, (, JSType, returnType, ,, List, <, JSType, >, parameterTypes]
[), ;, }, public, FunctionType, createFunctionTypeWithVarArgs, (, JSType, returnType, ,, List, <, JSType, >, parameterTypes, ), {, return, createFunctionType, (]
[), ), ;, }, public, FunctionType, createFunctionTypeWithVarArgs, (, JSType, returnType, ,, List, <, JSType, >, parameterTypes, ), {, return, createFunctionType]
[;, }, public, FunctionType, createFunctionType, (, JSType, returnType, ,, List, <, JSType, >, parameterTypes, ), {, return, createFunctionType, (, returnType]
[,, createParametersWithVarArgs, (, parameterTypes, ), ), ;, }, public, FunctionType, createFunctionType, (, JSType, returnType, ,, List, <, JSType, >, parameterTypes]
[), ;, }, public, FunctionType, createFunctionType, (, JSType, returnType, ,, List, <, JSType, >, parameterTypes, ), {, return, createFunctionType, (]
[), ), ;, }, public, FunctionType, createFunctionType, (, JSType, returnType, ,, List, <, JSType, >, parameterTypes, ), {, return, createFunctionType]
[;, }, public, FunctionType, createFunctionTypeWithVarArgs, (, JSType, returnType, ,, JSType, ..., parameterTypes, ), {, return, createFunctionType, (, returnType, ,, createParametersWithVarArgs]
[,, createParameters, (, parameterTypes, ), ), ;, }, public, FunctionType, createFunctionTypeWithVarArgs, (, JSType, returnType, ,, JSType, ..., parameterTypes, ), {]
[), ;, }, public, FunctionType, createFunctionTypeWithVarArgs, (, JSType, returnType, ,, JSType, ..., parameterTypes, ), {, return, createFunctionType, (, returnType, ,]
[), ), ;, }, public, FunctionType, createFunctionTypeWithVarArgs, (, JSType, returnType, ,, JSType, ..., parameterTypes, ), {, return, createFunctionType, (, returnType]
[;, }, private, FunctionType, createNativeFunctionTypeWithVarArgs, (, JSType, returnType, ,, JSType, ..., parameterTypes, ), {, return, createNativeFunctionType, (, returnType, ,, createParametersWithVarArgs]
[,, createParametersWithVarArgs, (, parameterTypes, ), ), ;, }, private, FunctionType, createNativeFunctionTypeWithVarArgs, (, JSType, returnType, ,, JSType, ..., parameterTypes, ), {]
[), ;, }, private, FunctionType, createNativeFunctionTypeWithVarArgs, (, JSType, returnType, ,, JSType, ..., parameterTypes, ), {, return, createNativeFunctionType, (, returnType, ,]
[), ), ;, }, private, FunctionType, createNativeFunctionTypeWithVarArgs, (, JSType, returnType, ,, JSType, ..., parameterTypes, ), {, return, createNativeFunctionType, (, returnType]
[;, }, public, FunctionType, createConstructorType, (, JSType, returnType, ,, JSType, ..., parameterTypes, ), {, return, createConstructorType, (, null, ,, null]
[,, createParametersWithVarArgs, (, parameterTypes, ), ), ;, }, public, FunctionType, createConstructorType, (, JSType, returnType, ,, JSType, ..., parameterTypes, ), {]
[), ;, }, public, FunctionType, createConstructorType, (, JSType, returnType, ,, JSType, ..., parameterTypes, ), {, return, createConstructorType, (, null, ,]
[), ), ;, }, public, FunctionType, createConstructorType, (, JSType, returnType, ,, JSType, ..., parameterTypes, ), {, return, createConstructorType, (, null]
[;, }, private, FunctionType, createConstructorTypeWithVarArgs, (, JSType, returnType, ,, JSType, ..., parameterTypes, ), {, return, createConstructorType, (, null, ,, null]
[,, null, ,, createParameters, (, parameterTypes, ), ,, returnType, ,, null, ), ;, }, private, FunctionType, createConstructorTypeWithVarArgs, (, JSType, returnType]
[,, createParameters, (, parameterTypes, ), ,, returnType, ,, null, ), ;, }, private, FunctionType, createConstructorTypeWithVarArgs, (, JSType, returnType, ,, JSType]
[,, returnType, ,, null, ), ;, }, private, FunctionType, createConstructorTypeWithVarArgs, (, JSType, returnType, ,, JSType, ..., parameterTypes, ), {, return]
[), ,, returnType, ,, null, ), ;, }, private, FunctionType, createConstructorTypeWithVarArgs, (, JSType, returnType, ,, JSType, ..., parameterTypes, ), {]
[,, null, ), ;, }, private, FunctionType, createConstructorTypeWithVarArgs, (, JSType, returnType, ,, JSType, ..., parameterTypes, ), {, return, createConstructorType, (]
[), ;, }, private, FunctionType, createConstructorTypeWithVarArgs, (, JSType, returnType, ,, JSType, ..., parameterTypes, ), {, return, createConstructorType, (, null, ,]
[;, }, public, JSType, createFunctionType, (, ObjectType, instanceType, ,, JSType, returnType, ,, List, <, JSType, >, parameterTypes, ), {, return]
[,, null, ,, createParametersWithVarArgs, (, parameterTypes, ), ,, returnType, ,, null, ), ;, }, public, JSType, createFunctionType, (, ObjectType, instanceType]
[,, createParametersWithVarArgs, (, parameterTypes, ), ,, returnType, ,, null, ), ;, }, public, JSType, createFunctionType, (, ObjectType, instanceType, ,, JSType]
[,, returnType, ,, null, ), ;, }, public, JSType, createFunctionType, (, ObjectType, instanceType, ,, JSType, returnType, ,, List, <, JSType]
[), ,, returnType, ,, null, ), ;, }, public, JSType, createFunctionType, (, ObjectType, instanceType, ,, JSType, returnType, ,, List, <]
[,, null, ), ;, }, public, JSType, createFunctionType, (, ObjectType, instanceType, ,, JSType, returnType, ,, List, <, JSType, >, parameterTypes]
[), ;, }, public, JSType, createFunctionType, (, ObjectType, instanceType, ,, JSType, returnType, ,, List, <, JSType, >, parameterTypes, ), {]
[;, }, public, JSType, createFunctionTypeWithVarArgs, (, ObjectType, instanceType, ,, JSType, returnType, ,, List, <, JSType, >, parameterTypes, ), {, return]
[., build, (, ), ;, }, public, JSType, createFunctionTypeWithVarArgs, (, ObjectType, instanceType, ,, JSType, returnType, ,, List, <, JSType, >]
[., withTypeOfThis, (, instanceType, ), ., build, (, ), ;, }, public, JSType, createFunctionTypeWithVarArgs, (, ObjectType, instanceType, ,, JSType, returnType]
[., withReturnType, (, returnType, ), ., withTypeOfThis, (, instanceType, ), ., build, (, ), ;, }, public, JSType, createFunctionTypeWithVarArgs, (]
[., withParamsNode, (, createParameters, (, parameterTypes, ), ), ., withReturnType, (, returnType, ), ., withTypeOfThis, (, instanceType, ), ., build]
[), ., withParamsNode, (, createParameters, (, parameterTypes, ), ), ., withReturnType, (, returnType, ), ., withTypeOfThis, (, instanceType, ), .]
[), ., withReturnType, (, returnType, ), ., withTypeOfThis, (, instanceType, ), ., build, (, ), ;, }, public, JSType, createFunctionTypeWithVarArgs]
[), ), ., withReturnType, (, returnType, ), ., withTypeOfThis, (, instanceType, ), ., build, (, ), ;, }, public, JSType]
[), ., withTypeOfThis, (, instanceType, ), ., build, (, ), ;, }, public, JSType, createFunctionTypeWithVarArgs, (, ObjectType, instanceType, ,, JSType]
[), ., build, (, ), ;, }, public, JSType, createFunctionTypeWithVarArgs, (, ObjectType, instanceType, ,, JSType, returnType, ,, List, <, JSType]
[;, }, public, Node, createParameters, (, List, <, JSType, >, parameterTypes, ), {, return, createParameters, (, parameterTypes, ., toArray, (]
[., build, (, ), ;, }, public, Node, createParameters, (, List, <, JSType, >, parameterTypes, ), {, return, createParameters, (]
[., withTypeOfThis, (, instanceType, ), ., build, (, ), ;, }, public, Node, createParameters, (, List, <, JSType, >, parameterTypes]
[., withReturnType, (, returnType, ), ., withTypeOfThis, (, instanceType, ), ., build, (, ), ;, }, public, Node, createParameters, (]
[., withParamsNode, (, createParametersWithVarArgs, (, parameterTypes, ), ), ., withReturnType, (, returnType, ), ., withTypeOfThis, (, instanceType, ), ., build]
[), ., withParamsNode, (, createParametersWithVarArgs, (, parameterTypes, ), ), ., withReturnType, (, returnType, ), ., withTypeOfThis, (, instanceType, ), .]
[), ., withReturnType, (, returnType, ), ., withTypeOfThis, (, instanceType, ), ., build, (, ), ;, }, public, Node, createParameters]
[), ), ., withReturnType, (, returnType, ), ., withTypeOfThis, (, instanceType, ), ., build, (, ), ;, }, public, Node]
[), ., withTypeOfThis, (, instanceType, ), ., build, (, ), ;, }, public, Node, createParameters, (, List, <, JSType, >]
[), ., build, (, ), ;, }, public, Node, createParameters, (, List, <, JSType, >, parameterTypes, ), {, return, createParameters]
[;, }, public, Node, createParametersWithVarArgs, (, List, <, JSType, >, parameterTypes, ), {, return, createParametersWithVarArgs, (, parameterTypes, ., toArray, (]
[), ;, }, public, Node, createParametersWithVarArgs, (, List, <, JSType, >, parameterTypes, ), {, return, createParametersWithVarArgs, (, parameterTypes, ., toArray]
[., toArray, (, new, JSType, [, parameterTypes, ., size, (, ), ], ), ), ;, }, public, Node, createParametersWithVarArgs, (]
[), ), ;, }, public, Node, createParametersWithVarArgs, (, List, <, JSType, >, parameterTypes, ), {, return, createParametersWithVarArgs, (, parameterTypes, .]
[], ), ), ;, }, public, Node, createParametersWithVarArgs, (, List, <, JSType, >, parameterTypes, ), {, return, createParametersWithVarArgs, (, parameterTypes]
[., size, (, ), ], ), ), ;, }, public, Node, createParametersWithVarArgs, (, List, <, JSType, >, parameterTypes, ), {]
[;, }, public, Node, createParameters, (, JSType, ..., parameterTypes, ), {, return, createParameters, (, false, ,, parameterTypes, ), ;, }]
[), ;, }, public, Node, createParameters, (, JSType, ..., parameterTypes, ), {, return, createParameters, (, false, ,, parameterTypes, ), ;]
[., toArray, (, new, JSType, [, parameterTypes, ., size, (, ), ], ), ), ;, }, public, Node, createParameters, (]
[), ), ;, }, public, Node, createParameters, (, JSType, ..., parameterTypes, ), {, return, createParameters, (, false, ,, parameterTypes, )]
[], ), ), ;, }, public, Node, createParameters, (, JSType, ..., parameterTypes, ), {, return, createParameters, (, false, ,, parameterTypes]
[., size, (, ), ], ), ), ;, }, public, Node, createParameters, (, JSType, ..., parameterTypes, ), {, return, createParameters]
[;, }, public, Node, createParametersWithVarArgs, (, JSType, ..., parameterTypes, ), {, return, createParameters, (, true, ,, parameterTypes, ), ;, }]
[,, parameterTypes, ), ;, }, public, Node, createParametersWithVarArgs, (, JSType, ..., parameterTypes, ), {, return, createParameters, (, true, ,, parameterTypes]
[), ;, }, public, Node, createParametersWithVarArgs, (, JSType, ..., parameterTypes, ), {, return, createParameters, (, true, ,, parameterTypes, ), ;]
[;, }, public, Node, createOptionalParameters, (, JSType, ..., parameterTypes, ), {, FunctionParamBuilder, builder, =, new, FunctionParamBuilder, (, this, ), ;]
[,, parameterTypes, ), ;, }, public, Node, createOptionalParameters, (, JSType, ..., parameterTypes, ), {, FunctionParamBuilder, builder, =, new, FunctionParamBuilder, (]
[), ;, }, public, Node, createOptionalParameters, (, JSType, ..., parameterTypes, ), {, FunctionParamBuilder, builder, =, new, FunctionParamBuilder, (, this, )]
[;, builder, ., addOptionalParams, (, parameterTypes, ), ;, return, builder, ., build, (, ), ;, }, private, Node, createParameters, (]
[), ;, builder, ., addOptionalParams, (, parameterTypes, ), ;, return, builder, ., build, (, ), ;, }, private, Node, createParameters]
[;, return, builder, ., build, (, ), ;, }, private, Node, createParameters, (, boolean, lastVarArgs, ,, JSType, ..., parameterTypes, )]
[., addOptionalParams, (, parameterTypes, ), ;, return, builder, ., build, (, ), ;, }, private, Node, createParameters, (, boolean, lastVarArgs]
[), ;, return, builder, ., build, (, ), ;, }, private, Node, createParameters, (, boolean, lastVarArgs, ,, JSType, ..., parameterTypes]
[;, }, private, Node, createParameters, (, boolean, lastVarArgs, ,, JSType, ..., parameterTypes, ), {, FunctionParamBuilder, builder, =, new, FunctionParamBuilder, (]
[., build, (, ), ;, }, private, Node, createParameters, (, boolean, lastVarArgs, ,, JSType, ..., parameterTypes, ), {, FunctionParamBuilder, builder]
[;, int, max, =, parameterTypes, ., length, -, 1, ;, for, (, int, i, =, 0, ;, i, <=, max]
[), ;, int, max, =, parameterTypes, ., length, -, 1, ;, for, (, int, i, =, 0, ;, i, <=]
[;, for, (, int, i, =, 0, ;, i, <=, max, ;, i, ++, ), {, if, (, lastVarArgs, &&]
[-, 1, ;, for, (, int, i, =, 0, ;, i, <=, max, ;, i, ++, ), {, if, (]
[., length, -, 1, ;, for, (, int, i, =, 0, ;, i, <=, max, ;, i, ++, ), {]
[;, for, (, int, i, =, 0, ;, i, <=, max, ;, i, ++, ), {, if, (, lastVarArgs, &&]
[;, i, <=, max, ;, i, ++, ), {, if, (, lastVarArgs, &&, i, ==, max, ), {, builder, .]
[;, i, ++, ), {, if, (, lastVarArgs, &&, i, ==, max, ), {, builder, ., addVarArgs, (, parameterTypes, []
[<=, max, ;, i, ++, ), {, if, (, lastVarArgs, &&, i, ==, max, ), {, builder, ., addVarArgs, (]
[;, i, ++, ), {, if, (, lastVarArgs, &&, i, ==, max, ), {, builder, ., addVarArgs, (, parameterTypes, []
[), {, if, (, lastVarArgs, &&, i, ==, max, ), {, builder, ., addVarArgs, (, parameterTypes, [, i, ], )]
[++, ), {, if, (, lastVarArgs, &&, i, ==, max, ), {, builder, ., addVarArgs, (, parameterTypes, [, i, ]]
[), {, builder, ., addVarArgs, (, parameterTypes, [, i, ], ), ;, }, else, {, builder, ., addRequiredParams, (, parameterTypes]
[&&, i, ==, max, ), {, builder, ., addVarArgs, (, parameterTypes, [, i, ], ), ;, }, else, {, builder]
[), {, builder, ., addVarArgs, (, parameterTypes, [, i, ], ), ;, }, else, {, builder, ., addRequiredParams, (, parameterTypes]
[==, max, ), {, builder, ., addVarArgs, (, parameterTypes, [, i, ], ), ;, }, else, {, builder, ., addRequiredParams]
[), {, builder, ., addVarArgs, (, parameterTypes, [, i, ], ), ;, }, else, {, builder, ., addRequiredParams, (, parameterTypes]
[;, }, else, {, builder, ., addRequiredParams, (, parameterTypes, [, i, ], ), ;, }, }, return, builder, ., build]
[., addVarArgs, (, parameterTypes, [, i, ], ), ;, }, else, {, builder, ., addRequiredParams, (, parameterTypes, [, i, ]]
[), ;, }, else, {, builder, ., addRequiredParams, (, parameterTypes, [, i, ], ), ;, }, }, return, builder, .]
[[, i, ], ), ;, }, else, {, builder, ., addRequiredParams, (, parameterTypes, [, i, ], ), ;, }, }]
[], ), ;, }, else, {, builder, ., addRequiredParams, (, parameterTypes, [, i, ], ), ;, }, }, return, builder]
[;, }, }, return, builder, ., build, (, ), ;, }, public, FunctionType, createFunctionType, (, JSType, returnType, ,, boolean, lastVarArgs]
[., addRequiredParams, (, parameterTypes, [, i, ], ), ;, }, }, return, builder, ., build, (, ), ;, }, public]
[), ;, }, }, return, builder, ., build, (, ), ;, }, public, FunctionType, createFunctionType, (, JSType, returnType, ,, boolean]
[[, i, ], ), ;, }, }, return, builder, ., build, (, ), ;, }, public, FunctionType, createFunctionType, (, JSType]
[], ), ;, }, }, return, builder, ., build, (, ), ;, }, public, FunctionType, createFunctionType, (, JSType, returnType, ,]
[;, }, public, FunctionType, createFunctionType, (, JSType, returnType, ,, boolean, lastVarArgs, ,, JSType, ..., parameterTypes, ), {, if, (, lastVarArgs]
[., build, (, ), ;, }, public, FunctionType, createFunctionType, (, JSType, returnType, ,, boolean, lastVarArgs, ,, JSType, ..., parameterTypes, )]
[), {, return, createFunctionTypeWithVarArgs, (, returnType, ,, parameterTypes, ), ;, }, else, {, return, createFunctionType, (, returnType, ,, parameterTypes, )]
[;, }, else, {, return, createFunctionType, (, returnType, ,, parameterTypes, ), ;, }, }, public, FunctionType, createFunctionTypeWithNewReturnType, (, FunctionType, existingFunctionType]
[,, parameterTypes, ), ;, }, else, {, return, createFunctionType, (, returnType, ,, parameterTypes, ), ;, }, }, public, FunctionType, createFunctionTypeWithNewReturnType]
[), ;, }, else, {, return, createFunctionType, (, returnType, ,, parameterTypes, ), ;, }, }, public, FunctionType, createFunctionTypeWithNewReturnType, (, FunctionType]
[;, }, }, public, FunctionType, createFunctionTypeWithNewReturnType, (, FunctionType, existingFunctionType, ,, JSType, returnType, ), {, return, new, FunctionBuilder, (, this, )]
[,, parameterTypes, ), ;, }, }, public, FunctionType, createFunctionTypeWithNewReturnType, (, FunctionType, existingFunctionType, ,, JSType, returnType, ), {, return, new, FunctionBuilder]
[), ;, }, }, public, FunctionType, createFunctionTypeWithNewReturnType, (, FunctionType, existingFunctionType, ,, JSType, returnType, ), {, return, new, FunctionBuilder, (, this]
[;, }, public, FunctionType, createFunctionTypeWithNewThisType, (, FunctionType, existingFunctionType, ,, ObjectType, thisType, ), {, return, new, FunctionBuilder, (, this, ), .]
[., build, (, ), ;, }, public, FunctionType, createFunctionTypeWithNewThisType, (, FunctionType, existingFunctionType, ,, ObjectType, thisType, ), {, return, new, FunctionBuilder]
[., withReturnType, (, returnType, ), ., build, (, ), ;, }, public, FunctionType, createFunctionTypeWithNewThisType, (, FunctionType, existingFunctionType, ,, ObjectType, thisType]
[., copyFromOtherFunction, (, existingFunctionType, ), ., withReturnType, (, returnType, ), ., build, (, ), ;, }, public, FunctionType, createFunctionTypeWithNewThisType, (]
[), ., copyFromOtherFunction, (, existingFunctionType, ), ., withReturnType, (, returnType, ), ., build, (, ), ;, }, public, FunctionType, createFunctionTypeWithNewThisType]
[), ., withReturnType, (, returnType, ), ., build, (, ), ;, }, public, FunctionType, createFunctionTypeWithNewThisType, (, FunctionType, existingFunctionType, ,, ObjectType]
[), ., build, (, ), ;, }, public, FunctionType, createFunctionTypeWithNewThisType, (, FunctionType, existingFunctionType, ,, ObjectType, thisType, ), {, return, new]
[;, }, public, FunctionType, createFunctionType, (, JSType, returnType, ,, Node, parameters, ), {, return, new, FunctionBuilder, (, this, ), .]
[., build, (, ), ;, }, public, FunctionType, createFunctionType, (, JSType, returnType, ,, Node, parameters, ), {, return, new, FunctionBuilder]
[., withTypeOfThis, (, thisType, ), ., build, (, ), ;, }, public, FunctionType, createFunctionType, (, JSType, returnType, ,, Node, parameters]
[., copyFromOtherFunction, (, existingFunctionType, ), ., withTypeOfThis, (, thisType, ), ., build, (, ), ;, }, public, FunctionType, createFunctionType, (]
[), ., copyFromOtherFunction, (, existingFunctionType, ), ., withTypeOfThis, (, thisType, ), ., build, (, ), ;, }, public, FunctionType, createFunctionType]
[), ., withTypeOfThis, (, thisType, ), ., build, (, ), ;, }, public, FunctionType, createFunctionType, (, JSType, returnType, ,, Node]
[), ., build, (, ), ;, }, public, FunctionType, createFunctionType, (, JSType, returnType, ,, Node, parameters, ), {, return, new]
[;, }, private, FunctionType, createNativeFunctionType, (, JSType, returnType, ,, Node, parameters, ), {, return, new, FunctionBuilder, (, this, ), .]
[., build, (, ), ;, }, private, FunctionType, createNativeFunctionType, (, JSType, returnType, ,, Node, parameters, ), {, return, new, FunctionBuilder]
[., withReturnType, (, returnType, ), ., build, (, ), ;, }, private, FunctionType, createNativeFunctionType, (, JSType, returnType, ,, Node, parameters]
[., withParamsNode, (, parameters, ), ., withReturnType, (, returnType, ), ., build, (, ), ;, }, private, FunctionType, createNativeFunctionType, (]
[), ., withParamsNode, (, parameters, ), ., withReturnType, (, returnType, ), ., build, (, ), ;, }, private, FunctionType, createNativeFunctionType]
[), ., withReturnType, (, returnType, ), ., build, (, ), ;, }, private, FunctionType, createNativeFunctionType, (, JSType, returnType, ,, Node]
[), ., build, (, ), ;, }, private, FunctionType, createNativeFunctionType, (, JSType, returnType, ,, Node, parameters, ), {, return, new]
[;, }, public, FunctionType, createConstructorType, (, JSType, returnType, ,, boolean, lastVarArgs, ,, JSType, ..., parameterTypes, ), {, if, (, lastVarArgs]
[., build, (, ), ;, }, public, FunctionType, createConstructorType, (, JSType, returnType, ,, boolean, lastVarArgs, ,, JSType, ..., parameterTypes, )]
[., forNativeType, (, ), ., build, (, ), ;, }, public, FunctionType, createConstructorType, (, JSType, returnType, ,, boolean, lastVarArgs, ,]
[., withReturnType, (, returnType, ), ., forNativeType, (, ), ., build, (, ), ;, }, public, FunctionType, createConstructorType, (, JSType]
[., withParamsNode, (, parameters, ), ., withReturnType, (, returnType, ), ., forNativeType, (, ), ., build, (, ), ;, }]
[), ., withParamsNode, (, parameters, ), ., withReturnType, (, returnType, ), ., forNativeType, (, ), ., build, (, ), ;]
[), ., withReturnType, (, returnType, ), ., forNativeType, (, ), ., build, (, ), ;, }, public, FunctionType, createConstructorType, (]
[), ., forNativeType, (, ), ., build, (, ), ;, }, public, FunctionType, createConstructorType, (, JSType, returnType, ,, boolean, lastVarArgs]
[), {, return, createConstructorTypeWithVarArgs, (, returnType, ,, parameterTypes, ), ;, }, else, {, return, createConstructorType, (, returnType, ,, parameterTypes, )]
[;, }, else, {, return, createConstructorType, (, returnType, ,, parameterTypes, ), ;, }, }, public, ObjectType, createObjectType, (, ObjectType, implicitPrototype]
[,, parameterTypes, ), ;, }, else, {, return, createConstructorType, (, returnType, ,, parameterTypes, ), ;, }, }, public, ObjectType, createObjectType]
[), ;, }, else, {, return, createConstructorType, (, returnType, ,, parameterTypes, ), ;, }, }, public, ObjectType, createObjectType, (, ObjectType]
[;, }, }, public, ObjectType, createObjectType, (, ObjectType, implicitPrototype, ), {, return, createObjectType, (, null, ,, null, ,, implicitPrototype, )]
[,, parameterTypes, ), ;, }, }, public, ObjectType, createObjectType, (, ObjectType, implicitPrototype, ), {, return, createObjectType, (, null, ,, null]
[), ;, }, }, public, ObjectType, createObjectType, (, ObjectType, implicitPrototype, ), {, return, createObjectType, (, null, ,, null, ,, implicitPrototype]
[;, }, public, RecordType, createRecordType, (, Map, <, String, ,, RecordProperty, >, properties, ), {, return, new, RecordType, (, this]
[,, null, ,, implicitPrototype, ), ;, }, public, RecordType, createRecordType, (, Map, <, String, ,, RecordProperty, >, properties, ), {]
[,, implicitPrototype, ), ;, }, public, RecordType, createRecordType, (, Map, <, String, ,, RecordProperty, >, properties, ), {, return, new]
[), ;, }, public, RecordType, createRecordType, (, Map, <, String, ,, RecordProperty, >, properties, ), {, return, new, RecordType, (]
[;, }, public, ObjectType, createObjectType, (, String, name, ,, Node, n, ,, ObjectType, implicitPrototype, ), {, return, new, PrototypeObjectType, (]
[,, properties, ), ;, }, public, ObjectType, createObjectType, (, String, name, ,, Node, n, ,, ObjectType, implicitPrototype, ), {, return]
[), ;, }, public, ObjectType, createObjectType, (, String, name, ,, Node, n, ,, ObjectType, implicitPrototype, ), {, return, new, PrototypeObjectType]
[;, }, public, ObjectType, createAnonymousObjectType, (, JSDocInfo, info, ), {, PrototypeObjectType, type, =, new, PrototypeObjectType, (, this, ,, null, ,]
[,, name, ,, implicitPrototype, ), ;, }, public, ObjectType, createAnonymousObjectType, (, JSDocInfo, info, ), {, PrototypeObjectType, type, =, new, PrototypeObjectType]
[,, implicitPrototype, ), ;, }, public, ObjectType, createAnonymousObjectType, (, JSDocInfo, info, ), {, PrototypeObjectType, type, =, new, PrototypeObjectType, (, this]
[), ;, }, public, ObjectType, createAnonymousObjectType, (, JSDocInfo, info, ), {, PrototypeObjectType, type, =, new, PrototypeObjectType, (, this, ,, null]
[;, type, ., setPrettyPrint, (, true, ), ;, type, ., setJSDocInfo, (, info, ), ;, return, type, ;, }, public]
[,, null, ,, null, ), ;, type, ., setPrettyPrint, (, true, ), ;, type, ., setJSDocInfo, (, info, ), ;]
[,, null, ), ;, type, ., setPrettyPrint, (, true, ), ;, type, ., setJSDocInfo, (, info, ), ;, return, type]
[), ;, type, ., setPrettyPrint, (, true, ), ;, type, ., setJSDocInfo, (, info, ), ;, return, type, ;, }]
[;, type, ., setJSDocInfo, (, info, ), ;, return, type, ;, }, public, boolean, resetImplicitPrototype, (, JSType, type, ,, ObjectType]
[., setPrettyPrint, (, true, ), ;, type, ., setJSDocInfo, (, info, ), ;, return, type, ;, }, public, boolean, resetImplicitPrototype]
[), ;, type, ., setJSDocInfo, (, info, ), ;, return, type, ;, }, public, boolean, resetImplicitPrototype, (, JSType, type, ,]
[;, return, type, ;, }, public, boolean, resetImplicitPrototype, (, JSType, type, ,, ObjectType, newImplicitProto, ), {, if, (, type, instanceof]
[., setJSDocInfo, (, info, ), ;, return, type, ;, }, public, boolean, resetImplicitPrototype, (, JSType, type, ,, ObjectType, newImplicitProto, )]
[), ;, return, type, ;, }, public, boolean, resetImplicitPrototype, (, JSType, type, ,, ObjectType, newImplicitProto, ), {, if, (, type]
[;, }, public, boolean, resetImplicitPrototype, (, JSType, type, ,, ObjectType, newImplicitProto, ), {, if, (, type, instanceof, PrototypeObjectType, ), {]
[), {, PrototypeObjectType, poType, =, (, PrototypeObjectType, ), type, ;, poType, ., clearCachedValues, (, ), ;, poType, ., setImplicitPrototype, (]
[instanceof, PrototypeObjectType, ), {, PrototypeObjectType, poType, =, (, PrototypeObjectType, ), type, ;, poType, ., clearCachedValues, (, ), ;, poType, .]
[;, poType, ., clearCachedValues, (, ), ;, poType, ., setImplicitPrototype, (, newImplicitProto, ), ;, return, true, ;, }, return, false]
[;, poType, ., clearCachedValues, (, ), ;, poType, ., setImplicitPrototype, (, newImplicitProto, ), ;, return, true, ;, }, return, false]
[;, poType, ., setImplicitPrototype, (, newImplicitProto, ), ;, return, true, ;, }, return, false, ;, }, ObjectType, createNativeAnonymousObjectType, (, )]
[., clearCachedValues, (, ), ;, poType, ., setImplicitPrototype, (, newImplicitProto, ), ;, return, true, ;, }, return, false, ;, }]
[;, return, true, ;, }, return, false, ;, }, ObjectType, createNativeAnonymousObjectType, (, ), {, PrototypeObjectType, type, =, new, PrototypeObjectType, (]
[., setImplicitPrototype, (, newImplicitProto, ), ;, return, true, ;, }, return, false, ;, }, ObjectType, createNativeAnonymousObjectType, (, ), {, PrototypeObjectType]
[), ;, return, true, ;, }, return, false, ;, }, ObjectType, createNativeAnonymousObjectType, (, ), {, PrototypeObjectType, type, =, new, PrototypeObjectType]
[;, }, return, false, ;, }, ObjectType, createNativeAnonymousObjectType, (, ), {, PrototypeObjectType, type, =, new, PrototypeObjectType, (, this, ,, null]
[;, }, ObjectType, createNativeAnonymousObjectType, (, ), {, PrototypeObjectType, type, =, new, PrototypeObjectType, (, this, ,, null, ,, null, ,, true]
[;, type, ., setPrettyPrint, (, true, ), ;, return, type, ;, }, public, FunctionType, createConstructorType, (, String, name, ,, Node]
[,, null, ,, null, ,, true, ,, null, ,, null, ), ;, type, ., setPrettyPrint, (, true, ), ;, return]
[,, null, ,, true, ,, null, ,, null, ), ;, type, ., setPrettyPrint, (, true, ), ;, return, type, ;]
[,, true, ,, null, ,, null, ), ;, type, ., setPrettyPrint, (, true, ), ;, return, type, ;, }, public]
[,, null, ,, null, ), ;, type, ., setPrettyPrint, (, true, ), ;, return, type, ;, }, public, FunctionType, createConstructorType]
[,, null, ), ;, type, ., setPrettyPrint, (, true, ), ;, return, type, ;, }, public, FunctionType, createConstructorType, (, String]
[), ;, type, ., setPrettyPrint, (, true, ), ;, return, type, ;, }, public, FunctionType, createConstructorType, (, String, name, ,]
[;, return, type, ;, }, public, FunctionType, createConstructorType, (, String, name, ,, Node, source, ,, Node, parameters, ,, JSType, returnType]
[., setPrettyPrint, (, true, ), ;, return, type, ;, }, public, FunctionType, createConstructorType, (, String, name, ,, Node, source, ,]
[), ;, return, type, ;, }, public, FunctionType, createConstructorType, (, String, name, ,, Node, source, ,, Node, parameters, ,, JSType]
[;, }, public, FunctionType, createConstructorType, (, String, name, ,, Node, source, ,, Node, parameters, ,, JSType, returnType, ,, ImmutableList, <]
[;, }, public, FunctionType, createInterfaceType, (, String, name, ,, Node, source, ), {, return, FunctionType, ., forInterface, (, this, ,]
[,, name, ,, source, ,, createArrowType, (, parameters, ,, returnType, ), ,, null, ,, templateKeys, ,, true, ,, false, )]
[,, source, ,, createArrowType, (, parameters, ,, returnType, ), ,, null, ,, templateKeys, ,, true, ,, false, ), ;, }]
[,, createArrowType, (, parameters, ,, returnType, ), ,, null, ,, templateKeys, ,, true, ,, false, ), ;, }, public, FunctionType]
[,, null, ,, templateKeys, ,, true, ,, false, ), ;, }, public, FunctionType, createInterfaceType, (, String, name, ,, Node, source]
[,, returnType, ), ,, null, ,, templateKeys, ,, true, ,, false, ), ;, }, public, FunctionType, createInterfaceType, (, String, name]
[), ,, null, ,, templateKeys, ,, true, ,, false, ), ;, }, public, FunctionType, createInterfaceType, (, String, name, ,, Node]
[,, templateKeys, ,, true, ,, false, ), ;, }, public, FunctionType, createInterfaceType, (, String, name, ,, Node, source, ), {]
[,, true, ,, false, ), ;, }, public, FunctionType, createInterfaceType, (, String, name, ,, Node, source, ), {, return, FunctionType]
[,, false, ), ;, }, public, FunctionType, createInterfaceType, (, String, name, ,, Node, source, ), {, return, FunctionType, ., forInterface]
[), ;, }, public, FunctionType, createInterfaceType, (, String, name, ,, Node, source, ), {, return, FunctionType, ., forInterface, (, this]
[;, }, public, ParameterizedType, createParameterizedType, (, ObjectType, objectType, ,, JSType, parameterType, ), {, return, new, ParameterizedType, (, this, ,, objectType]
[., forInterface, (, this, ,, name, ,, source, ), ;, }, public, ParameterizedType, createParameterizedType, (, ObjectType, objectType, ,, JSType, parameterType]
[,, name, ,, source, ), ;, }, public, ParameterizedType, createParameterizedType, (, ObjectType, objectType, ,, JSType, parameterType, ), {, return, new]
[,, source, ), ;, }, public, ParameterizedType, createParameterizedType, (, ObjectType, objectType, ,, JSType, parameterType, ), {, return, new, ParameterizedType, (]
[), ;, }, public, ParameterizedType, createParameterizedType, (, ObjectType, objectType, ,, JSType, parameterType, ), {, return, new, ParameterizedType, (, this, ,]
[;, }, public, JSType, createTemplatizedType, (, JSType, baseType, ,, ImmutableList, <, JSType, >, templatizedTypes, ), {, if, (, baseType, instanceof]
[,, objectType, ,, parameterType, ), ;, }, public, JSType, createTemplatizedType, (, JSType, baseType, ,, ImmutableList, <, JSType, >, templatizedTypes, )]
[,, parameterType, ), ;, }, public, JSType, createTemplatizedType, (, JSType, baseType, ,, ImmutableList, <, JSType, >, templatizedTypes, ), {, if]
[), ;, }, public, JSType, createTemplatizedType, (, JSType, baseType, ,, ImmutableList, <, JSType, >, templatizedTypes, ), {, if, (, baseType]
[), {, ObjectType, baseObjType, =, baseType, ., toObjectType, (, ), ;, return, new, InstanceObjectType, (, this, ,, baseObjType, ., getConstructor]
[instanceof, InstanceObjectType, ), {, ObjectType, baseObjType, =, baseType, ., toObjectType, (, ), ;, return, new, InstanceObjectType, (, this, ,, baseObjType]
[;, return, new, InstanceObjectType, (, this, ,, baseObjType, ., getConstructor, (, ), ,, baseObjType, ., isNativeObjectType, (, ), ,, templatizedTypes]
[., toObjectType, (, ), ;, return, new, InstanceObjectType, (, this, ,, baseObjType, ., getConstructor, (, ), ,, baseObjType, ., isNativeObjectType]
[;, }, else, {, throw, new, IllegalArgumentException, (, "Only instance object types can be templatized", ), ;, }, }, @, VisibleForTesting, public, JSType, createNamedType, (, String]
[,, baseObjType, ., getConstructor, (, ), ,, baseObjType, ., isNativeObjectType, (, ), ,, templatizedTypes, ), ;, }, else, {, throw]
[,, baseObjType, ., isNativeObjectType, (, ), ,, templatizedTypes, ), ;, }, else, {, throw, new, IllegalArgumentException, (, "Only instance object types can be templatized", ), ;]
[., getConstructor, (, ), ,, baseObjType, ., isNativeObjectType, (, ), ,, templatizedTypes, ), ;, }, else, {, throw, new, IllegalArgumentException]
[,, templatizedTypes, ), ;, }, else, {, throw, new, IllegalArgumentException, (, "Only instance object types can be templatized", ), ;, }, }, @, VisibleForTesting, public, JSType]
[., isNativeObjectType, (, ), ,, templatizedTypes, ), ;, }, else, {, throw, new, IllegalArgumentException, (, "Only instance object types can be templatized", ), ;, }, }]
[), ;, }, else, {, throw, new, IllegalArgumentException, (, "Only instance object types can be templatized", ), ;, }, }, @, VisibleForTesting, public, JSType, createNamedType, (]
[;, }, }, @, VisibleForTesting, public, JSType, createNamedType, (, String, reference, ,, String, sourceName, ,, int, lineno, ,, int, charno]
[), ;, }, }, @, VisibleForTesting, public, JSType, createNamedType, (, String, reference, ,, String, sourceName, ,, int, lineno, ,, int]
[;, }, public, void, identifyNonNullableName, (, String, name, ), {, Preconditions, ., checkNotNull, (, name, ), ;, nonNullableTypeNames, ., add]
[,, reference, ,, sourceName, ,, lineno, ,, charno, ), ;, }, public, void, identifyNonNullableName, (, String, name, ), {, Preconditions]
[,, sourceName, ,, lineno, ,, charno, ), ;, }, public, void, identifyNonNullableName, (, String, name, ), {, Preconditions, ., checkNotNull]
[,, lineno, ,, charno, ), ;, }, public, void, identifyNonNullableName, (, String, name, ), {, Preconditions, ., checkNotNull, (, name]
[,, charno, ), ;, }, public, void, identifyNonNullableName, (, String, name, ), {, Preconditions, ., checkNotNull, (, name, ), ;]
[), ;, }, public, void, identifyNonNullableName, (, String, name, ), {, Preconditions, ., checkNotNull, (, name, ), ;, nonNullableTypeNames, .]
[;, nonNullableTypeNames, ., add, (, name, ), ;, }, public, JSType, createFromTypeNodes, (, Node, n, ,, String, sourceName, ,, StaticScope]
[., checkNotNull, (, name, ), ;, nonNullableTypeNames, ., add, (, name, ), ;, }, public, JSType, createFromTypeNodes, (, Node, n]
[), ;, nonNullableTypeNames, ., add, (, name, ), ;, }, public, JSType, createFromTypeNodes, (, Node, n, ,, String, sourceName, ,]
[;, }, public, JSType, createFromTypeNodes, (, Node, n, ,, String, sourceName, ,, StaticScope, <, JSType, >, scope, ), {, if]
[., add, (, name, ), ;, }, public, JSType, createFromTypeNodes, (, Node, n, ,, String, sourceName, ,, StaticScope, <, JSType]
[), ;, }, public, JSType, createFromTypeNodes, (, Node, n, ,, String, sourceName, ,, StaticScope, <, JSType, >, scope, ), {]
[), {, boolean, hasNames, =, hasTypeName, (, n, ), ;, if, (, hasNames, ), {, return, new, UnresolvedTypeExpression, (, this]
[==, ResolveMode, ., LAZY_EXPRESSIONS, ), {, boolean, hasNames, =, hasTypeName, (, n, ), ;, if, (, hasNames, ), {, return]
[), {, boolean, hasNames, =, hasTypeName, (, n, ), ;, if, (, hasNames, ), {, return, new, UnresolvedTypeExpression, (, this]
[., LAZY_EXPRESSIONS, ), {, boolean, hasNames, =, hasTypeName, (, n, ), ;, if, (, hasNames, ), {, return, new, UnresolvedTypeExpression]
[;, if, (, hasNames, ), {, return, new, UnresolvedTypeExpression, (, this, ,, n, ,, sourceName, ), ;, }, }, return]
[), ;, if, (, hasNames, ), {, return, new, UnresolvedTypeExpression, (, this, ,, n, ,, sourceName, ), ;, }, }]
[), {, return, new, UnresolvedTypeExpression, (, this, ,, n, ,, sourceName, ), ;, }, }, return, createFromTypeNodesInternal, (, n, ,]
[;, }, }, return, createFromTypeNodesInternal, (, n, ,, sourceName, ,, scope, ), ;, }, private, boolean, hasTypeName, (, Node, n]
[,, n, ,, sourceName, ), ;, }, }, return, createFromTypeNodesInternal, (, n, ,, sourceName, ,, scope, ), ;, }, private]
[,, sourceName, ), ;, }, }, return, createFromTypeNodesInternal, (, n, ,, sourceName, ,, scope, ), ;, }, private, boolean, hasTypeName]
[), ;, }, }, return, createFromTypeNodesInternal, (, n, ,, sourceName, ,, scope, ), ;, }, private, boolean, hasTypeName, (, Node]
[;, }, private, boolean, hasTypeName, (, Node, n, ), {, if, (, n, ., getType, (, ), ==, Token, .]
[,, sourceName, ,, scope, ), ;, }, private, boolean, hasTypeName, (, Node, n, ), {, if, (, n, ., getType]
[,, scope, ), ;, }, private, boolean, hasTypeName, (, Node, n, ), {, if, (, n, ., getType, (, )]
[), ;, }, private, boolean, hasTypeName, (, Node, n, ), {, if, (, n, ., getType, (, ), ==, Token]
[), {, return, true, ;, }, for, (, Node, child, =, n, ., getFirstChild, (, ), ;, child, !=, null]
[==, Token, ., STRING, ), {, return, true, ;, }, for, (, Node, child, =, n, ., getFirstChild, (, )]
[., getType, (, ), ==, Token, ., STRING, ), {, return, true, ;, }, for, (, Node, child, =, n]
[), {, return, true, ;, }, for, (, Node, child, =, n, ., getFirstChild, (, ), ;, child, !=, null]
[., STRING, ), {, return, true, ;, }, for, (, Node, child, =, n, ., getFirstChild, (, ), ;, child]
[;, }, for, (, Node, child, =, n, ., getFirstChild, (, ), ;, child, !=, null, ;, child, =, child]
[;, child, !=, null, ;, child, =, child, ., getNext, (, ), ), {, if, (, hasTypeName, (, child, )]
[., getFirstChild, (, ), ;, child, !=, null, ;, child, =, child, ., getNext, (, ), ), {, if, (]
[;, child, =, child, ., getNext, (, ), ), {, if, (, hasTypeName, (, child, ), ), {, return, true]
[!=, null, ;, child, =, child, ., getNext, (, ), ), {, if, (, hasTypeName, (, child, ), ), {]
[;, child, =, child, ., getNext, (, ), ), {, if, (, hasTypeName, (, child, ), ), {, return, true]
[=, child, ., getNext, (, ), ), {, if, (, hasTypeName, (, child, ), ), {, return, true, ;, }]
[), {, if, (, hasTypeName, (, child, ), ), {, return, true, ;, }, }, return, false, ;, }, private]
[., getNext, (, ), ), {, if, (, hasTypeName, (, child, ), ), {, return, true, ;, }, }, return]
[), {, return, true, ;, }, }, return, false, ;, }, private, JSType, createFromTypeNodesInternal, (, Node, n, ,, String, sourceName]
[), ), {, return, true, ;, }, }, return, false, ;, }, private, JSType, createFromTypeNodesInternal, (, Node, n, ,, String]
[;, }, }, return, false, ;, }, private, JSType, createFromTypeNodesInternal, (, Node, n, ,, String, sourceName, ,, StaticScope, <, JSType]
[;, }, private, JSType, createFromTypeNodesInternal, (, Node, n, ,, String, sourceName, ,, StaticScope, <, JSType, >, scope, ), {, switch]
[), {, case, Token, ., LC, :, return, createRecordTypeFromNodes, (, n, ., getFirstChild, (, ), ,, sourceName, ,, scope, )]
[., getType, (, ), ), {, case, Token, ., LC, :, return, createRecordTypeFromNodes, (, n, ., getFirstChild, (, ), ,]
[:, return, createRecordTypeFromNodes, (, n, ., getFirstChild, (, ), ,, sourceName, ,, scope, ), ;, case, Token, ., BANG, :]
[., LC, :, return, createRecordTypeFromNodes, (, n, ., getFirstChild, (, ), ,, sourceName, ,, scope, ), ;, case, Token, .]
[;, case, Token, ., BANG, :, return, createFromTypeNodesInternal, (, n, ., getFirstChild, (, ), ,, sourceName, ,, scope, ), .]
[,, sourceName, ,, scope, ), ;, case, Token, ., BANG, :, return, createFromTypeNodesInternal, (, n, ., getFirstChild, (, ), ,]
[., getFirstChild, (, ), ,, sourceName, ,, scope, ), ;, case, Token, ., BANG, :, return, createFromTypeNodesInternal, (, n, .]
[,, scope, ), ;, case, Token, ., BANG, :, return, createFromTypeNodesInternal, (, n, ., getFirstChild, (, ), ,, sourceName, ,]
[), ;, case, Token, ., BANG, :, return, createFromTypeNodesInternal, (, n, ., getFirstChild, (, ), ,, sourceName, ,, scope, )]
[:, return, createFromTypeNodesInternal, (, n, ., getFirstChild, (, ), ,, sourceName, ,, scope, ), ., restrictByNotNullOrUndefined, (, ), ;, case]
[., BANG, :, return, createFromTypeNodesInternal, (, n, ., getFirstChild, (, ), ,, sourceName, ,, scope, ), ., restrictByNotNullOrUndefined, (, )]
[;, case, Token, ., QMARK, :, Node, firstChild, =, n, ., getFirstChild, (, ), ;, if, (, firstChild, ==, null]
[., restrictByNotNullOrUndefined, (, ), ;, case, Token, ., QMARK, :, Node, firstChild, =, n, ., getFirstChild, (, ), ;, if]
[,, sourceName, ,, scope, ), ., restrictByNotNullOrUndefined, (, ), ;, case, Token, ., QMARK, :, Node, firstChild, =, n, .]
[., getFirstChild, (, ), ,, sourceName, ,, scope, ), ., restrictByNotNullOrUndefined, (, ), ;, case, Token, ., QMARK, :, Node]
[,, scope, ), ., restrictByNotNullOrUndefined, (, ), ;, case, Token, ., QMARK, :, Node, firstChild, =, n, ., getFirstChild, (]
[), ., restrictByNotNullOrUndefined, (, ), ;, case, Token, ., QMARK, :, Node, firstChild, =, n, ., getFirstChild, (, ), ;]
[:, Node, firstChild, =, n, ., getFirstChild, (, ), ;, if, (, firstChild, ==, null, ), {, return, getNativeType, (]
[., QMARK, :, Node, firstChild, =, n, ., getFirstChild, (, ), ;, if, (, firstChild, ==, null, ), {, return]
[;, if, (, firstChild, ==, null, ), {, return, getNativeType, (, UNKNOWN_TYPE, ), ;, }, return, createDefaultObjectUnion, (, createFromTypeNodesInternal, (]
[., getFirstChild, (, ), ;, if, (, firstChild, ==, null, ), {, return, getNativeType, (, UNKNOWN_TYPE, ), ;, }, return]
[), {, return, getNativeType, (, UNKNOWN_TYPE, ), ;, }, return, createDefaultObjectUnion, (, createFromTypeNodesInternal, (, firstChild, ,, sourceName, ,, scope, )]
[==, null, ), {, return, getNativeType, (, UNKNOWN_TYPE, ), ;, }, return, createDefaultObjectUnion, (, createFromTypeNodesInternal, (, firstChild, ,, sourceName, ,]
[), {, return, getNativeType, (, UNKNOWN_TYPE, ), ;, }, return, createDefaultObjectUnion, (, createFromTypeNodesInternal, (, firstChild, ,, sourceName, ,, scope, )]
[;, }, return, createDefaultObjectUnion, (, createFromTypeNodesInternal, (, firstChild, ,, sourceName, ,, scope, ), ), ;, case, Token, ., EQUALS, :]
[), ;, }, return, createDefaultObjectUnion, (, createFromTypeNodesInternal, (, firstChild, ,, sourceName, ,, scope, ), ), ;, case, Token, ., EQUALS]
[;, case, Token, ., EQUALS, :, return, createOptionalType, (, createFromTypeNodesInternal, (, n, ., getFirstChild, (, ), ,, sourceName, ,, scope]
[), ;, case, Token, ., EQUALS, :, return, createOptionalType, (, createFromTypeNodesInternal, (, n, ., getFirstChild, (, ), ,, sourceName, ,]
[,, sourceName, ,, scope, ), ), ;, case, Token, ., EQUALS, :, return, createOptionalType, (, createFromTypeNodesInternal, (, n, ., getFirstChild]
[,, scope, ), ), ;, case, Token, ., EQUALS, :, return, createOptionalType, (, createFromTypeNodesInternal, (, n, ., getFirstChild, (, )]
[), ), ;, case, Token, ., EQUALS, :, return, createOptionalType, (, createFromTypeNodesInternal, (, n, ., getFirstChild, (, ), ,, sourceName]
[:, return, createOptionalType, (, createFromTypeNodesInternal, (, n, ., getFirstChild, (, ), ,, sourceName, ,, scope, ), ), ;, case, Token]
[., EQUALS, :, return, createOptionalType, (, createFromTypeNodesInternal, (, n, ., getFirstChild, (, ), ,, sourceName, ,, scope, ), ), ;]
[;, case, Token, ., ELLIPSIS, :, return, createOptionalType, (, createFromTypeNodesInternal, (, n, ., getFirstChild, (, ), ,, sourceName, ,, scope]
[), ;, case, Token, ., ELLIPSIS, :, return, createOptionalType, (, createFromTypeNodesInternal, (, n, ., getFirstChild, (, ), ,, sourceName, ,]
[,, sourceName, ,, scope, ), ), ;, case, Token, ., ELLIPSIS, :, return, createOptionalType, (, createFromTypeNodesInternal, (, n, ., getFirstChild]
[., getFirstChild, (, ), ,, sourceName, ,, scope, ), ), ;, case, Token, ., ELLIPSIS, :, return, createOptionalType, (, createFromTypeNodesInternal]
[,, scope, ), ), ;, case, Token, ., ELLIPSIS, :, return, createOptionalType, (, createFromTypeNodesInternal, (, n, ., getFirstChild, (, )]
[), ), ;, case, Token, ., ELLIPSIS, :, return, createOptionalType, (, createFromTypeNodesInternal, (, n, ., getFirstChild, (, ), ,, sourceName]
[:, return, createOptionalType, (, createFromTypeNodesInternal, (, n, ., getFirstChild, (, ), ,, sourceName, ,, scope, ), ), ;, case, Token]
[., ELLIPSIS, :, return, createOptionalType, (, createFromTypeNodesInternal, (, n, ., getFirstChild, (, ), ,, sourceName, ,, scope, ), ), ;]
[;, case, Token, ., STAR, :, return, getNativeType, (, ALL_TYPE, ), ;, case, Token, ., LB, :, return, getNativeType, (]
[), ;, case, Token, ., STAR, :, return, getNativeType, (, ALL_TYPE, ), ;, case, Token, ., LB, :, return, getNativeType]
[,, sourceName, ,, scope, ), ), ;, case, Token, ., STAR, :, return, getNativeType, (, ALL_TYPE, ), ;, case, Token]
[., getFirstChild, (, ), ,, sourceName, ,, scope, ), ), ;, case, Token, ., STAR, :, return, getNativeType, (, ALL_TYPE]
[,, scope, ), ), ;, case, Token, ., STAR, :, return, getNativeType, (, ALL_TYPE, ), ;, case, Token, ., LB]
[), ), ;, case, Token, ., STAR, :, return, getNativeType, (, ALL_TYPE, ), ;, case, Token, ., LB, :, return]
[:, return, getNativeType, (, ALL_TYPE, ), ;, case, Token, ., LB, :, return, getNativeType, (, ARRAY_TYPE, ), ;, case, Token]
[., STAR, :, return, getNativeType, (, ALL_TYPE, ), ;, case, Token, ., LB, :, return, getNativeType, (, ARRAY_TYPE, ), ;]
[;, case, Token, ., LB, :, return, getNativeType, (, ARRAY_TYPE, ), ;, case, Token, ., PIPE, :, UnionTypeBuilder, builder, =]
[), ;, case, Token, ., LB, :, return, getNativeType, (, ARRAY_TYPE, ), ;, case, Token, ., PIPE, :, UnionTypeBuilder, builder]
[:, return, getNativeType, (, ARRAY_TYPE, ), ;, case, Token, ., PIPE, :, UnionTypeBuilder, builder, =, new, UnionTypeBuilder, (, this, )]
[., LB, :, return, getNativeType, (, ARRAY_TYPE, ), ;, case, Token, ., PIPE, :, UnionTypeBuilder, builder, =, new, UnionTypeBuilder, (]
[;, case, Token, ., PIPE, :, UnionTypeBuilder, builder, =, new, UnionTypeBuilder, (, this, ), ;, for, (, Node, child, =]
[), ;, case, Token, ., PIPE, :, UnionTypeBuilder, builder, =, new, UnionTypeBuilder, (, this, ), ;, for, (, Node, child]
[:, UnionTypeBuilder, builder, =, new, UnionTypeBuilder, (, this, ), ;, for, (, Node, child, =, n, ., getFirstChild, (, )]
[., PIPE, :, UnionTypeBuilder, builder, =, new, UnionTypeBuilder, (, this, ), ;, for, (, Node, child, =, n, ., getFirstChild]
[;, for, (, Node, child, =, n, ., getFirstChild, (, ), ;, child, !=, null, ;, child, =, child, .]
[), ;, for, (, Node, child, =, n, ., getFirstChild, (, ), ;, child, !=, null, ;, child, =, child]
[;, child, !=, null, ;, child, =, child, ., getNext, (, ), ), {, builder, ., addAlternate, (, createFromTypeNodesInternal, (]
[., getFirstChild, (, ), ;, child, !=, null, ;, child, =, child, ., getNext, (, ), ), {, builder, .]
[;, child, =, child, ., getNext, (, ), ), {, builder, ., addAlternate, (, createFromTypeNodesInternal, (, child, ,, sourceName, ,]
[!=, null, ;, child, =, child, ., getNext, (, ), ), {, builder, ., addAlternate, (, createFromTypeNodesInternal, (, child, ,]
[;, child, =, child, ., getNext, (, ), ), {, builder, ., addAlternate, (, createFromTypeNodesInternal, (, child, ,, sourceName, ,]
[=, child, ., getNext, (, ), ), {, builder, ., addAlternate, (, createFromTypeNodesInternal, (, child, ,, sourceName, ,, scope, )]
[), {, builder, ., addAlternate, (, createFromTypeNodesInternal, (, child, ,, sourceName, ,, scope, ), ), ;, }, return, builder, .]
[., getNext, (, ), ), {, builder, ., addAlternate, (, createFromTypeNodesInternal, (, child, ,, sourceName, ,, scope, ), ), ;]
[;, }, return, builder, ., build, (, ), ;, case, Token, ., EMPTY, :, return, getNativeType, (, UNKNOWN_TYPE, ), ;]
[., addAlternate, (, createFromTypeNodesInternal, (, child, ,, sourceName, ,, scope, ), ), ;, }, return, builder, ., build, (, )]
[), ;, }, return, builder, ., build, (, ), ;, case, Token, ., EMPTY, :, return, getNativeType, (, UNKNOWN_TYPE, )]
[,, sourceName, ,, scope, ), ), ;, }, return, builder, ., build, (, ), ;, case, Token, ., EMPTY, :]
[,, scope, ), ), ;, }, return, builder, ., build, (, ), ;, case, Token, ., EMPTY, :, return, getNativeType]
[), ), ;, }, return, builder, ., build, (, ), ;, case, Token, ., EMPTY, :, return, getNativeType, (, UNKNOWN_TYPE]
[;, case, Token, ., EMPTY, :, return, getNativeType, (, UNKNOWN_TYPE, ), ;, case, Token, ., VOID, :, return, getNativeType, (]
[., build, (, ), ;, case, Token, ., EMPTY, :, return, getNativeType, (, UNKNOWN_TYPE, ), ;, case, Token, ., VOID]
[:, return, getNativeType, (, UNKNOWN_TYPE, ), ;, case, Token, ., VOID, :, return, getNativeType, (, VOID_TYPE, ), ;, case, Token]
[., EMPTY, :, return, getNativeType, (, UNKNOWN_TYPE, ), ;, case, Token, ., VOID, :, return, getNativeType, (, VOID_TYPE, ), ;]
[;, case, Token, ., VOID, :, return, getNativeType, (, VOID_TYPE, ), ;, case, Token, ., STRING, :, JSType, namedType, =]
[), ;, case, Token, ., VOID, :, return, getNativeType, (, VOID_TYPE, ), ;, case, Token, ., STRING, :, JSType, namedType]
[:, return, getNativeType, (, VOID_TYPE, ), ;, case, Token, ., STRING, :, JSType, namedType, =, getType, (, scope, ,, n]
[., VOID, :, return, getNativeType, (, VOID_TYPE, ), ;, case, Token, ., STRING, :, JSType, namedType, =, getType, (, scope]
[;, case, Token, ., STRING, :, JSType, namedType, =, getType, (, scope, ,, n, ., getString, (, ), ,, sourceName]
[), ;, case, Token, ., STRING, :, JSType, namedType, =, getType, (, scope, ,, n, ., getString, (, ), ,]
[:, JSType, namedType, =, getType, (, scope, ,, n, ., getString, (, ), ,, sourceName, ,, n, ., getLineno, (]
[., STRING, :, JSType, namedType, =, getType, (, scope, ,, n, ., getString, (, ), ,, sourceName, ,, n, .]
[;, if, (, resolveMode, !=, ResolveMode, ., LAZY_NAMES, ), {, namedType, =, namedType, ., resolveInternal, (, reporter, ,, scope, )]
[,, n, ., getString, (, ), ,, sourceName, ,, n, ., getLineno, (, ), ,, n, ., getCharno, (, )]
[,, sourceName, ,, n, ., getLineno, (, ), ,, n, ., getCharno, (, ), ), ;, if, (, resolveMode, !=]
[., getString, (, ), ,, sourceName, ,, n, ., getLineno, (, ), ,, n, ., getCharno, (, ), ), ;]
[,, n, ., getLineno, (, ), ,, n, ., getCharno, (, ), ), ;, if, (, resolveMode, !=, ResolveMode, .]
[,, n, ., getCharno, (, ), ), ;, if, (, resolveMode, !=, ResolveMode, ., LAZY_NAMES, ), {, namedType, =, namedType]
[., getLineno, (, ), ,, n, ., getCharno, (, ), ), ;, if, (, resolveMode, !=, ResolveMode, ., LAZY_NAMES, )]
[), ;, if, (, resolveMode, !=, ResolveMode, ., LAZY_NAMES, ), {, namedType, =, namedType, ., resolveInternal, (, reporter, ,, scope]
[., getCharno, (, ), ), ;, if, (, resolveMode, !=, ResolveMode, ., LAZY_NAMES, ), {, namedType, =, namedType, ., resolveInternal]
[), {, namedType, =, namedType, ., resolveInternal, (, reporter, ,, scope, ), ;, }, if, (, (, namedType, instanceof, ObjectType]
[!=, ResolveMode, ., LAZY_NAMES, ), {, namedType, =, namedType, ., resolveInternal, (, reporter, ,, scope, ), ;, }, if, (]
[), {, namedType, =, namedType, ., resolveInternal, (, reporter, ,, scope, ), ;, }, if, (, (, namedType, instanceof, ObjectType]
[., LAZY_NAMES, ), {, namedType, =, namedType, ., resolveInternal, (, reporter, ,, scope, ), ;, }, if, (, (, namedType]
[=, namedType, ., resolveInternal, (, reporter, ,, scope, ), ;, }, if, (, (, namedType, instanceof, ObjectType, ), &&, !]
[;, }, if, (, (, namedType, instanceof, ObjectType, ), &&, !, (, nonNullableTypeNames, ., contains, (, n, ., getString, (]
[., resolveInternal, (, reporter, ,, scope, ), ;, }, if, (, (, namedType, instanceof, ObjectType, ), &&, !, (, nonNullableTypeNames]
[,, scope, ), ;, }, if, (, (, namedType, instanceof, ObjectType, ), &&, !, (, nonNullableTypeNames, ., contains, (, n]
[), ;, }, if, (, (, namedType, instanceof, ObjectType, ), &&, !, (, nonNullableTypeNames, ., contains, (, n, ., getString]
[), {, Node, typeList, =, n, ., getFirstChild, (, ), ;, if, (, typeList, !=, null, &&, (, "Array", .]
[&&, !, (, nonNullableTypeNames, ., contains, (, n, ., getString, (, ), ), ), ), {, Node, typeList, =, n]
[), &&, !, (, nonNullableTypeNames, ., contains, (, n, ., getString, (, ), ), ), ), {, Node, typeList, =]
[instanceof, ObjectType, ), &&, !, (, nonNullableTypeNames, ., contains, (, n, ., getString, (, ), ), ), ), {, Node]
[), {, Node, typeList, =, n, ., getFirstChild, (, ), ;, if, (, typeList, !=, null, &&, (, "Array", .]
[), {, Node, typeList, =, n, ., getFirstChild, (, ), ;, if, (, typeList, !=, null, &&, (, "Array", .]
[), ), {, Node, typeList, =, n, ., getFirstChild, (, ), ;, if, (, typeList, !=, null, &&, (, "Array"]
[., contains, (, n, ., getString, (, ), ), ), ), {, Node, typeList, =, n, ., getFirstChild, (, )]
[), ), ), {, Node, typeList, =, n, ., getFirstChild, (, ), ;, if, (, typeList, !=, null, &&, (]
[., getString, (, ), ), ), ), {, Node, typeList, =, n, ., getFirstChild, (, ), ;, if, (, typeList]
[;, if, (, typeList, !=, null, &&, (, "Array", ., equals, (, n, ., getString, (, ), ), ||, "Object"]
[., getFirstChild, (, ), ;, if, (, typeList, !=, null, &&, (, "Array", ., equals, (, n, ., getString, (]
[), {, JSType, parameterType, =, createFromTypeNodesInternal, (, typeList, ., getLastChild, (, ), ,, sourceName, ,, scope, ), ;, namedType, =]
[&&, (, "Array", ., equals, (, n, ., getString, (, ), ), ||, "Object", ., equals, (, n, ., getString]
[!=, null, &&, (, "Array", ., equals, (, n, ., getString, (, ), ), ||, "Object", ., equals, (, n]
[&&, (, "Array", ., equals, (, n, ., getString, (, ), ), ||, "Object", ., equals, (, n, ., getString]
[), {, JSType, parameterType, =, createFromTypeNodesInternal, (, typeList, ., getLastChild, (, ), ,, sourceName, ,, scope, ), ;, namedType, =]
[), ), {, JSType, parameterType, =, createFromTypeNodesInternal, (, typeList, ., getLastChild, (, ), ,, sourceName, ,, scope, ), ;, namedType]
[||, "Object", ., equals, (, n, ., getString, (, ), ), ), ), {, JSType, parameterType, =, createFromTypeNodesInternal, (, typeList]
[., equals, (, n, ., getString, (, ), ), ||, "Object", ., equals, (, n, ., getString, (, ), )]
[), ||, "Object", ., equals, (, n, ., getString, (, ), ), ), ), {, JSType, parameterType, =, createFromTypeNodesInternal, (]
[., getString, (, ), ), ||, "Object", ., equals, (, n, ., getString, (, ), ), ), ), {, JSType]
[), ), {, JSType, parameterType, =, createFromTypeNodesInternal, (, typeList, ., getLastChild, (, ), ,, sourceName, ,, scope, ), ;, namedType]
[., equals, (, n, ., getString, (, ), ), ), ), {, JSType, parameterType, =, createFromTypeNodesInternal, (, typeList, ., getLastChild]
[), ), ), {, JSType, parameterType, =, createFromTypeNodesInternal, (, typeList, ., getLastChild, (, ), ,, sourceName, ,, scope, ), ;]
[., getString, (, ), ), ), ), {, JSType, parameterType, =, createFromTypeNodesInternal, (, typeList, ., getLastChild, (, ), ,, sourceName]
[;, namedType, =, new, ParameterizedType, (, this, ,, (, ObjectType, ), namedType, ,, parameterType, ), ;, if, (, typeList, .]
[,, sourceName, ,, scope, ), ;, namedType, =, new, ParameterizedType, (, this, ,, (, ObjectType, ), namedType, ,, parameterType, )]
[., getLastChild, (, ), ,, sourceName, ,, scope, ), ;, namedType, =, new, ParameterizedType, (, this, ,, (, ObjectType, )]
[,, scope, ), ;, namedType, =, new, ParameterizedType, (, this, ,, (, ObjectType, ), namedType, ,, parameterType, ), ;, if]
[), ;, namedType, =, new, ParameterizedType, (, this, ,, (, ObjectType, ), namedType, ,, parameterType, ), ;, if, (, typeList]
[=, new, ParameterizedType, (, this, ,, (, ObjectType, ), namedType, ,, parameterType, ), ;, if, (, typeList, ., hasMoreThanOneChild, (]
[;, if, (, typeList, ., hasMoreThanOneChild, (, ), ), {, JSType, indexType, =, createFromTypeNodesInternal, (, typeList, ., getFirstChild, (, )]
[,, (, ObjectType, ), namedType, ,, parameterType, ), ;, if, (, typeList, ., hasMoreThanOneChild, (, ), ), {, JSType, indexType]
[,, parameterType, ), ;, if, (, typeList, ., hasMoreThanOneChild, (, ), ), {, JSType, indexType, =, createFromTypeNodesInternal, (, typeList, .]
[,, parameterType, ), ;, if, (, typeList, ., hasMoreThanOneChild, (, ), ), {, JSType, indexType, =, createFromTypeNodesInternal, (, typeList, .]
[), ;, if, (, typeList, ., hasMoreThanOneChild, (, ), ), {, JSType, indexType, =, createFromTypeNodesInternal, (, typeList, ., getFirstChild, (]
[), {, JSType, indexType, =, createFromTypeNodesInternal, (, typeList, ., getFirstChild, (, ), ,, sourceName, ,, scope, ), ;, namedType, =]
[., hasMoreThanOneChild, (, ), ), {, JSType, indexType, =, createFromTypeNodesInternal, (, typeList, ., getFirstChild, (, ), ,, sourceName, ,, scope]
[;, namedType, =, new, IndexedType, (, this, ,, (, ObjectType, ), namedType, ,, indexType, ), ;, }, }, return, createDefaultObjectUnion]
[,, sourceName, ,, scope, ), ;, namedType, =, new, IndexedType, (, this, ,, (, ObjectType, ), namedType, ,, indexType, )]
[., getFirstChild, (, ), ,, sourceName, ,, scope, ), ;, namedType, =, new, IndexedType, (, this, ,, (, ObjectType, )]
[,, scope, ), ;, namedType, =, new, IndexedType, (, this, ,, (, ObjectType, ), namedType, ,, indexType, ), ;, }]
[), ;, namedType, =, new, IndexedType, (, this, ,, (, ObjectType, ), namedType, ,, indexType, ), ;, }, }, return]
[=, new, IndexedType, (, this, ,, (, ObjectType, ), namedType, ,, indexType, ), ;, }, }, return, createDefaultObjectUnion, (, namedType]
[;, }, }, return, createDefaultObjectUnion, (, namedType, ), ;, }, else, {, return, namedType, ;, }, case, Token, ., FUNCTION]
[,, (, ObjectType, ), namedType, ,, indexType, ), ;, }, }, return, createDefaultObjectUnion, (, namedType, ), ;, }, else, {]
[,, indexType, ), ;, }, }, return, createDefaultObjectUnion, (, namedType, ), ;, }, else, {, return, namedType, ;, }, case]
[,, indexType, ), ;, }, }, return, createDefaultObjectUnion, (, namedType, ), ;, }, else, {, return, namedType, ;, }, case]
[), ;, }, }, return, createDefaultObjectUnion, (, namedType, ), ;, }, else, {, return, namedType, ;, }, case, Token, .]
[;, }, else, {, return, namedType, ;, }, case, Token, ., FUNCTION, :, ObjectType, thisType, =, null, ;, boolean, isConstructor]
[), ;, }, else, {, return, namedType, ;, }, case, Token, ., FUNCTION, :, ObjectType, thisType, =, null, ;, boolean]
[;, }, case, Token, ., FUNCTION, :, ObjectType, thisType, =, null, ;, boolean, isConstructor, =, false, ;, Node, current, =]
[:, ObjectType, thisType, =, null, ;, boolean, isConstructor, =, false, ;, Node, current, =, n, ., getFirstChild, (, ), ;]
[., FUNCTION, :, ObjectType, thisType, =, null, ;, boolean, isConstructor, =, false, ;, Node, current, =, n, ., getFirstChild, (]
[;, boolean, isConstructor, =, false, ;, Node, current, =, n, ., getFirstChild, (, ), ;, if, (, current, ., getType]
[;, Node, current, =, n, ., getFirstChild, (, ), ;, if, (, current, ., getType, (, ), ==, Token, .]
[;, if, (, current, ., getType, (, ), ==, Token, ., THIS, ||, current, ., getType, (, ), ==, Token]
[., getFirstChild, (, ), ;, if, (, current, ., getType, (, ), ==, Token, ., THIS, ||, current, ., getType]
[), {, Node, contextNode, =, current, ., getFirstChild, (, ), ;, thisType, =, ObjectType, ., cast, (, createFromTypeNodesInternal, (, contextNode]
[||, current, ., getType, (, ), ==, Token, ., NEW, ), {, Node, contextNode, =, current, ., getFirstChild, (, )]
[==, Token, ., THIS, ||, current, ., getType, (, ), ==, Token, ., NEW, ), {, Node, contextNode, =, current]
[., getType, (, ), ==, Token, ., THIS, ||, current, ., getType, (, ), ==, Token, ., NEW, ), {]
[||, current, ., getType, (, ), ==, Token, ., NEW, ), {, Node, contextNode, =, current, ., getFirstChild, (, )]
[., THIS, ||, current, ., getType, (, ), ==, Token, ., NEW, ), {, Node, contextNode, =, current, ., getFirstChild]
[), {, Node, contextNode, =, current, ., getFirstChild, (, ), ;, thisType, =, ObjectType, ., cast, (, createFromTypeNodesInternal, (, contextNode]
[==, Token, ., NEW, ), {, Node, contextNode, =, current, ., getFirstChild, (, ), ;, thisType, =, ObjectType, ., cast]
[., getType, (, ), ==, Token, ., NEW, ), {, Node, contextNode, =, current, ., getFirstChild, (, ), ;, thisType]
[), {, Node, contextNode, =, current, ., getFirstChild, (, ), ;, thisType, =, ObjectType, ., cast, (, createFromTypeNodesInternal, (, contextNode]
[., NEW, ), {, Node, contextNode, =, current, ., getFirstChild, (, ), ;, thisType, =, ObjectType, ., cast, (, createFromTypeNodesInternal]
[;, thisType, =, ObjectType, ., cast, (, createFromTypeNodesInternal, (, contextNode, ,, sourceName, ,, scope, ), ., restrictByNotNullOrUndefined, (, ), )]
[., getFirstChild, (, ), ;, thisType, =, ObjectType, ., cast, (, createFromTypeNodesInternal, (, contextNode, ,, sourceName, ,, scope, ), .]
[=, ObjectType, ., cast, (, createFromTypeNodesInternal, (, contextNode, ,, sourceName, ,, scope, ), ., restrictByNotNullOrUndefined, (, ), ), ;, if]
[;, if, (, thisType, ==, null, ), {, reporter, ., warning, (, ScriptRuntime, ., getMessage0, (, current, ., getType, (]
[., cast, (, createFromTypeNodesInternal, (, contextNode, ,, sourceName, ,, scope, ), ., restrictByNotNullOrUndefined, (, ), ), ;, if, (, thisType]
[), ;, if, (, thisType, ==, null, ), {, reporter, ., warning, (, ScriptRuntime, ., getMessage0, (, current, ., getType]
[., restrictByNotNullOrUndefined, (, ), ), ;, if, (, thisType, ==, null, ), {, reporter, ., warning, (, ScriptRuntime, ., getMessage0]
[,, sourceName, ,, scope, ), ., restrictByNotNullOrUndefined, (, ), ), ;, if, (, thisType, ==, null, ), {, reporter, .]
[,, scope, ), ., restrictByNotNullOrUndefined, (, ), ), ;, if, (, thisType, ==, null, ), {, reporter, ., warning, (]
[), ., restrictByNotNullOrUndefined, (, ), ), ;, if, (, thisType, ==, null, ), {, reporter, ., warning, (, ScriptRuntime, .]
[), {, reporter, ., warning, (, ScriptRuntime, ., getMessage0, (, current, ., getType, (, ), ==, Token, ., THIS, ?]
[==, null, ), {, reporter, ., warning, (, ScriptRuntime, ., getMessage0, (, current, ., getType, (, ), ==, Token, .]
[), {, reporter, ., warning, (, ScriptRuntime, ., getMessage0, (, current, ., getType, (, ), ==, Token, ., THIS, ?]
[;, }, isConstructor, =, current, ., getType, (, ), ==, Token, ., NEW, ;, current, =, current, ., getNext, (]
[., warning, (, ScriptRuntime, ., getMessage0, (, current, ., getType, (, ), ==, Token, ., THIS, ?, "msg.jsdoc.function.thisnotobject", :, "msg.jsdoc.function.newnotobject"]
[,, sourceName, ,, contextNode, ., getLineno, (, ), ,, contextNode, ., getCharno, (, ), ), ;, }, isConstructor, =, current]
[., getMessage0, (, current, ., getType, (, ), ==, Token, ., THIS, ?, "msg.jsdoc.function.thisnotobject", :, "msg.jsdoc.function.newnotobject", ), ,, sourceName, ,]
[), ,, sourceName, ,, contextNode, ., getLineno, (, ), ,, contextNode, ., getCharno, (, ), ), ;, }, isConstructor, =]
[?, "msg.jsdoc.function.thisnotobject", :, "msg.jsdoc.function.newnotobject", ), ,, sourceName, ,, contextNode, ., getLineno, (, ), ,, contextNode, ., getCharno, (, ), )]
[==, Token, ., THIS, ?, "msg.jsdoc.function.thisnotobject", :, "msg.jsdoc.function.newnotobject", ), ,, sourceName, ,, contextNode, ., getLineno, (, ), ,, contextNode, .]
[., getType, (, ), ==, Token, ., THIS, ?, "msg.jsdoc.function.thisnotobject", :, "msg.jsdoc.function.newnotobject", ), ,, sourceName, ,, contextNode, ., getLineno, (]
[?, "msg.jsdoc.function.thisnotobject", :, "msg.jsdoc.function.newnotobject", ), ,, sourceName, ,, contextNode, ., getLineno, (, ), ,, contextNode, ., getCharno, (, ), )]
[., THIS, ?, "msg.jsdoc.function.thisnotobject", :, "msg.jsdoc.function.newnotobject", ), ,, sourceName, ,, contextNode, ., getLineno, (, ), ,, contextNode, ., getCharno, (]
[:, "msg.jsdoc.function.newnotobject", ), ,, sourceName, ,, contextNode, ., getLineno, (, ), ,, contextNode, ., getCharno, (, ), ), ;, }]
[), ,, sourceName, ,, contextNode, ., getLineno, (, ), ,, contextNode, ., getCharno, (, ), ), ;, }, isConstructor, =]
[,, contextNode, ., getLineno, (, ), ,, contextNode, ., getCharno, (, ), ), ;, }, isConstructor, =, current, ., getType]
[,, contextNode, ., getCharno, (, ), ), ;, }, isConstructor, =, current, ., getType, (, ), ==, Token, ., NEW]
[., getLineno, (, ), ,, contextNode, ., getCharno, (, ), ), ;, }, isConstructor, =, current, ., getType, (, )]
[), ;, }, isConstructor, =, current, ., getType, (, ), ==, Token, ., NEW, ;, current, =, current, ., getNext]
[., getCharno, (, ), ), ;, }, isConstructor, =, current, ., getType, (, ), ==, Token, ., NEW, ;, current]
[=, current, ., getType, (, ), ==, Token, ., NEW, ;, current, =, current, ., getNext, (, ), ;, }]
[;, current, =, current, ., getNext, (, ), ;, }, FunctionParamBuilder, paramBuilder, =, new, FunctionParamBuilder, (, this, ), ;, if]
[==, Token, ., NEW, ;, current, =, current, ., getNext, (, ), ;, }, FunctionParamBuilder, paramBuilder, =, new, FunctionParamBuilder, (]
[., getType, (, ), ==, Token, ., NEW, ;, current, =, current, ., getNext, (, ), ;, }, FunctionParamBuilder, paramBuilder]
[;, current, =, current, ., getNext, (, ), ;, }, FunctionParamBuilder, paramBuilder, =, new, FunctionParamBuilder, (, this, ), ;, if]
[., NEW, ;, current, =, current, ., getNext, (, ), ;, }, FunctionParamBuilder, paramBuilder, =, new, FunctionParamBuilder, (, this, )]
[=, current, ., getNext, (, ), ;, }, FunctionParamBuilder, paramBuilder, =, new, FunctionParamBuilder, (, this, ), ;, if, (, current]
[;, }, FunctionParamBuilder, paramBuilder, =, new, FunctionParamBuilder, (, this, ), ;, if, (, current, ., getType, (, ), ==, Token]
[., getNext, (, ), ;, }, FunctionParamBuilder, paramBuilder, =, new, FunctionParamBuilder, (, this, ), ;, if, (, current, ., getType]
[;, if, (, current, ., getType, (, ), ==, Token, ., PARAM_LIST, ), {, Node, args, =, current, ., getFirstChild]
[), ;, if, (, current, ., getType, (, ), ==, Token, ., PARAM_LIST, ), {, Node, args, =, current, .]
[), {, Node, args, =, current, ., getFirstChild, (, ), ;, for, (, Node, arg, =, current, ., getFirstChild, (]
[==, Token, ., PARAM_LIST, ), {, Node, args, =, current, ., getFirstChild, (, ), ;, for, (, Node, arg, =]
[., getType, (, ), ==, Token, ., PARAM_LIST, ), {, Node, args, =, current, ., getFirstChild, (, ), ;, for]
[), {, Node, args, =, current, ., getFirstChild, (, ), ;, for, (, Node, arg, =, current, ., getFirstChild, (]
[., PARAM_LIST, ), {, Node, args, =, current, ., getFirstChild, (, ), ;, for, (, Node, arg, =, current, .]
[;, for, (, Node, arg, =, current, ., getFirstChild, (, ), ;, arg, !=, null, ;, arg, =, arg, .]
[., getFirstChild, (, ), ;, for, (, Node, arg, =, current, ., getFirstChild, (, ), ;, arg, !=, null, ;]
[;, arg, !=, null, ;, arg, =, arg, ., getNext, (, ), ), {, if, (, arg, ., getType, (]
[., getFirstChild, (, ), ;, arg, !=, null, ;, arg, =, arg, ., getNext, (, ), ), {, if, (]
[;, arg, =, arg, ., getNext, (, ), ), {, if, (, arg, ., getType, (, ), ==, Token, .]
[!=, null, ;, arg, =, arg, ., getNext, (, ), ), {, if, (, arg, ., getType, (, ), ==]
[;, arg, =, arg, ., getNext, (, ), ), {, if, (, arg, ., getType, (, ), ==, Token, .]
[=, arg, ., getNext, (, ), ), {, if, (, arg, ., getType, (, ), ==, Token, ., ELLIPSIS, )]
[), {, if, (, arg, ., getType, (, ), ==, Token, ., ELLIPSIS, ), {, if, (, arg, ., getChildCount]
[., getNext, (, ), ), {, if, (, arg, ., getType, (, ), ==, Token, ., ELLIPSIS, ), {, if]
[), {, if, (, arg, ., getChildCount, (, ), ==, 0, ), {, paramBuilder, ., addVarArgs, (, getNativeType, (, UNKNOWN_TYPE]
[==, Token, ., ELLIPSIS, ), {, if, (, arg, ., getChildCount, (, ), ==, 0, ), {, paramBuilder, ., addVarArgs]
[., getType, (, ), ==, Token, ., ELLIPSIS, ), {, if, (, arg, ., getChildCount, (, ), ==, 0, )]
[), {, if, (, arg, ., getChildCount, (, ), ==, 0, ), {, paramBuilder, ., addVarArgs, (, getNativeType, (, UNKNOWN_TYPE]
[., ELLIPSIS, ), {, if, (, arg, ., getChildCount, (, ), ==, 0, ), {, paramBuilder, ., addVarArgs, (, getNativeType]
[), {, paramBuilder, ., addVarArgs, (, getNativeType, (, UNKNOWN_TYPE, ), ), ;, }, else, {, paramBuilder, ., addVarArgs, (, createFromTypeNodesInternal]
[==, 0, ), {, paramBuilder, ., addVarArgs, (, getNativeType, (, UNKNOWN_TYPE, ), ), ;, }, else, {, paramBuilder, ., addVarArgs]
[., getChildCount, (, ), ==, 0, ), {, paramBuilder, ., addVarArgs, (, getNativeType, (, UNKNOWN_TYPE, ), ), ;, }, else]
[), {, paramBuilder, ., addVarArgs, (, getNativeType, (, UNKNOWN_TYPE, ), ), ;, }, else, {, paramBuilder, ., addVarArgs, (, createFromTypeNodesInternal]
[;, }, else, {, paramBuilder, ., addVarArgs, (, createFromTypeNodesInternal, (, arg, ., getFirstChild, (, ), ,, sourceName, ,, scope, )]
[., addVarArgs, (, getNativeType, (, UNKNOWN_TYPE, ), ), ;, }, else, {, paramBuilder, ., addVarArgs, (, createFromTypeNodesInternal, (, arg, .]
[), ;, }, else, {, paramBuilder, ., addVarArgs, (, createFromTypeNodesInternal, (, arg, ., getFirstChild, (, ), ,, sourceName, ,, scope]
[), ), ;, }, else, {, paramBuilder, ., addVarArgs, (, createFromTypeNodesInternal, (, arg, ., getFirstChild, (, ), ,, sourceName, ,]
[;, }, }, else, {, JSType, type, =, createFromTypeNodesInternal, (, arg, ,, sourceName, ,, scope, ), ;, if, (, arg]
[., addVarArgs, (, createFromTypeNodesInternal, (, arg, ., getFirstChild, (, ), ,, sourceName, ,, scope, ), ), ;, }, }, else]
[), ;, }, }, else, {, JSType, type, =, createFromTypeNodesInternal, (, arg, ,, sourceName, ,, scope, ), ;, if, (]
[,, sourceName, ,, scope, ), ), ;, }, }, else, {, JSType, type, =, createFromTypeNodesInternal, (, arg, ,, sourceName, ,]
[., getFirstChild, (, ), ,, sourceName, ,, scope, ), ), ;, }, }, else, {, JSType, type, =, createFromTypeNodesInternal, (]
[,, scope, ), ), ;, }, }, else, {, JSType, type, =, createFromTypeNodesInternal, (, arg, ,, sourceName, ,, scope, )]
[), ), ;, }, }, else, {, JSType, type, =, createFromTypeNodesInternal, (, arg, ,, sourceName, ,, scope, ), ;, if]
[;, if, (, arg, ., getType, (, ), ==, Token, ., EQUALS, ), {, boolean, addSuccess, =, paramBuilder, ., addOptionalParams]
[,, sourceName, ,, scope, ), ;, if, (, arg, ., getType, (, ), ==, Token, ., EQUALS, ), {, boolean]
[,, scope, ), ;, if, (, arg, ., getType, (, ), ==, Token, ., EQUALS, ), {, boolean, addSuccess, =]
[), ;, if, (, arg, ., getType, (, ), ==, Token, ., EQUALS, ), {, boolean, addSuccess, =, paramBuilder, .]
[), {, boolean, addSuccess, =, paramBuilder, ., addOptionalParams, (, type, ), ;, if, (, !, addSuccess, ), {, reporter, .]
[==, Token, ., EQUALS, ), {, boolean, addSuccess, =, paramBuilder, ., addOptionalParams, (, type, ), ;, if, (, !, addSuccess]
[., getType, (, ), ==, Token, ., EQUALS, ), {, boolean, addSuccess, =, paramBuilder, ., addOptionalParams, (, type, ), ;]
[), {, boolean, addSuccess, =, paramBuilder, ., addOptionalParams, (, type, ), ;, if, (, !, addSuccess, ), {, reporter, .]
[., EQUALS, ), {, boolean, addSuccess, =, paramBuilder, ., addOptionalParams, (, type, ), ;, if, (, !, addSuccess, ), {]
[;, if, (, !, addSuccess, ), {, reporter, ., warning, (, ScriptRuntime, ., getMessage0, (, "msg.jsdoc.function.varargs", ), ,, sourceName, ,]
[., addOptionalParams, (, type, ), ;, if, (, !, addSuccess, ), {, reporter, ., warning, (, ScriptRuntime, ., getMessage0, (]
[), ;, if, (, !, addSuccess, ), {, reporter, ., warning, (, ScriptRuntime, ., getMessage0, (, "msg.jsdoc.function.varargs", ), ,, sourceName]
[), {, reporter, ., warning, (, ScriptRuntime, ., getMessage0, (, "msg.jsdoc.function.varargs", ), ,, sourceName, ,, arg, ., getLineno, (, )]
[), {, reporter, ., warning, (, ScriptRuntime, ., getMessage0, (, "msg.jsdoc.function.varargs", ), ,, sourceName, ,, arg, ., getLineno, (, )]
[;, }, }, else, {, paramBuilder, ., addRequiredParams, (, type, ), ;, }, }, }, current, =, current, ., getNext]
[., warning, (, ScriptRuntime, ., getMessage0, (, "msg.jsdoc.function.varargs", ), ,, sourceName, ,, arg, ., getLineno, (, ), ,, arg, .]
[,, sourceName, ,, arg, ., getLineno, (, ), ,, arg, ., getCharno, (, ), ), ;, }, }, else, {]
[., getMessage0, (, "msg.jsdoc.function.varargs", ), ,, sourceName, ,, arg, ., getLineno, (, ), ,, arg, ., getCharno, (, ), )]
[), ,, sourceName, ,, arg, ., getLineno, (, ), ,, arg, ., getCharno, (, ), ), ;, }, }, else]
[,, arg, ., getLineno, (, ), ,, arg, ., getCharno, (, ), ), ;, }, }, else, {, paramBuilder, .]
[,, arg, ., getCharno, (, ), ), ;, }, }, else, {, paramBuilder, ., addRequiredParams, (, type, ), ;, }]
[., getLineno, (, ), ,, arg, ., getCharno, (, ), ), ;, }, }, else, {, paramBuilder, ., addRequiredParams, (]
[), ;, }, }, else, {, paramBuilder, ., addRequiredParams, (, type, ), ;, }, }, }, current, =, current, .]
[., getCharno, (, ), ), ;, }, }, else, {, paramBuilder, ., addRequiredParams, (, type, ), ;, }, }, }]
[;, }, }, }, current, =, current, ., getNext, (, ), ;, }, JSType, returnType, =, createFromTypeNodesInternal, (, current, ,]
[., addRequiredParams, (, type, ), ;, }, }, }, current, =, current, ., getNext, (, ), ;, }, JSType, returnType]
[), ;, }, }, }, current, =, current, ., getNext, (, ), ;, }, JSType, returnType, =, createFromTypeNodesInternal, (, current]
[=, current, ., getNext, (, ), ;, }, JSType, returnType, =, createFromTypeNodesInternal, (, current, ,, sourceName, ,, scope, ), ;]
[;, }, JSType, returnType, =, createFromTypeNodesInternal, (, current, ,, sourceName, ,, scope, ), ;, return, new, FunctionBuilder, (, this, )]
[., getNext, (, ), ;, }, JSType, returnType, =, createFromTypeNodesInternal, (, current, ,, sourceName, ,, scope, ), ;, return, new]
[;, return, new, FunctionBuilder, (, this, ), ., withParams, (, paramBuilder, ), ., withReturnType, (, returnType, ), ., withTypeOfThis, (]
[,, sourceName, ,, scope, ), ;, return, new, FunctionBuilder, (, this, ), ., withParams, (, paramBuilder, ), ., withReturnType, (]
[,, scope, ), ;, return, new, FunctionBuilder, (, this, ), ., withParams, (, paramBuilder, ), ., withReturnType, (, returnType, )]
[), ;, return, new, FunctionBuilder, (, this, ), ., withParams, (, paramBuilder, ), ., withReturnType, (, returnType, ), ., withTypeOfThis]
[;, }, throw, new, IllegalStateException, (, "Unexpected node in type expression: ", +, n, ., toString, (, ), ), ;, }, private, JSType, createRecordTypeFromNodes, (]
[., build, (, ), ;, }, throw, new, IllegalStateException, (, "Unexpected node in type expression: ", +, n, ., toString, (, ), ), ;, }]
[., setIsConstructor, (, isConstructor, ), ., build, (, ), ;, }, throw, new, IllegalStateException, (, "Unexpected node in type expression: ", +, n, ., toString]
[., withTypeOfThis, (, thisType, ), ., setIsConstructor, (, isConstructor, ), ., build, (, ), ;, }, throw, new, IllegalStateException, (]
[., withReturnType, (, returnType, ), ., withTypeOfThis, (, thisType, ), ., setIsConstructor, (, isConstructor, ), ., build, (, ), ;]
[., withParams, (, paramBuilder, ), ., withReturnType, (, returnType, ), ., withTypeOfThis, (, thisType, ), ., setIsConstructor, (, isConstructor, )]
[), ., withParams, (, paramBuilder, ), ., withReturnType, (, returnType, ), ., withTypeOfThis, (, thisType, ), ., setIsConstructor, (, isConstructor]
[), ., withReturnType, (, returnType, ), ., withTypeOfThis, (, thisType, ), ., setIsConstructor, (, isConstructor, ), ., build, (, )]
[), ., withTypeOfThis, (, thisType, ), ., setIsConstructor, (, isConstructor, ), ., build, (, ), ;, }, throw, new, IllegalStateException]
[), ., setIsConstructor, (, isConstructor, ), ., build, (, ), ;, }, throw, new, IllegalStateException, (, "Unexpected node in type expression: ", +, n, .]
[), ., build, (, ), ;, }, throw, new, IllegalStateException, (, "Unexpected node in type expression: ", +, n, ., toString, (, ), ), ;]
[;, }, private, JSType, createRecordTypeFromNodes, (, Node, n, ,, String, sourceName, ,, StaticScope, <, JSType, >, scope, ), {, RecordTypeBuilder]
[), ;, }, private, JSType, createRecordTypeFromNodes, (, Node, n, ,, String, sourceName, ,, StaticScope, <, JSType, >, scope, ), {]
[+, n, ., toString, (, ), ), ;, }, private, JSType, createRecordTypeFromNodes, (, Node, n, ,, String, sourceName, ,, StaticScope]
[), ;, }, private, JSType, createRecordTypeFromNodes, (, Node, n, ,, String, sourceName, ,, StaticScope, <, JSType, >, scope, ), {]
[., toString, (, ), ), ;, }, private, JSType, createRecordTypeFromNodes, (, Node, n, ,, String, sourceName, ,, StaticScope, <, JSType]
[;, for, (, Node, fieldTypeNode, =, n, ., getFirstChild, (, ), ;, fieldTypeNode, !=, null, ;, fieldTypeNode, =, fieldTypeNode, .]
[), ;, for, (, Node, fieldTypeNode, =, n, ., getFirstChild, (, ), ;, fieldTypeNode, !=, null, ;, fieldTypeNode, =, fieldTypeNode]
[;, fieldTypeNode, !=, null, ;, fieldTypeNode, =, fieldTypeNode, ., getNext, (, ), ), {, Node, fieldNameNode, =, fieldTypeNode, ;, boolean]
[., getFirstChild, (, ), ;, fieldTypeNode, !=, null, ;, fieldTypeNode, =, fieldTypeNode, ., getNext, (, ), ), {, Node, fieldNameNode]
[;, fieldTypeNode, =, fieldTypeNode, ., getNext, (, ), ), {, Node, fieldNameNode, =, fieldTypeNode, ;, boolean, hasType, =, false, ;]
[!=, null, ;, fieldTypeNode, =, fieldTypeNode, ., getNext, (, ), ), {, Node, fieldNameNode, =, fieldTypeNode, ;, boolean, hasType, =]
[;, fieldTypeNode, =, fieldTypeNode, ., getNext, (, ), ), {, Node, fieldNameNode, =, fieldTypeNode, ;, boolean, hasType, =, false, ;]
[=, fieldTypeNode, ., getNext, (, ), ), {, Node, fieldNameNode, =, fieldTypeNode, ;, boolean, hasType, =, false, ;, if, (]
[), {, Node, fieldNameNode, =, fieldTypeNode, ;, boolean, hasType, =, false, ;, if, (, fieldTypeNode, ., getType, (, ), ==]
[., getNext, (, ), ), {, Node, fieldNameNode, =, fieldTypeNode, ;, boolean, hasType, =, false, ;, if, (, fieldTypeNode, .]
[;, boolean, hasType, =, false, ;, if, (, fieldTypeNode, ., getType, (, ), ==, Token, ., COLON, ), {, fieldNameNode]
[;, if, (, fieldTypeNode, ., getType, (, ), ==, Token, ., COLON, ), {, fieldNameNode, =, fieldTypeNode, ., getFirstChild, (]
[), {, fieldNameNode, =, fieldTypeNode, ., getFirstChild, (, ), ;, hasType, =, true, ;, }, String, fieldName, =, fieldNameNode, .]
[==, Token, ., COLON, ), {, fieldNameNode, =, fieldTypeNode, ., getFirstChild, (, ), ;, hasType, =, true, ;, }, String]
[., getType, (, ), ==, Token, ., COLON, ), {, fieldNameNode, =, fieldTypeNode, ., getFirstChild, (, ), ;, hasType, =]
[), {, fieldNameNode, =, fieldTypeNode, ., getFirstChild, (, ), ;, hasType, =, true, ;, }, String, fieldName, =, fieldNameNode, .]
[., COLON, ), {, fieldNameNode, =, fieldTypeNode, ., getFirstChild, (, ), ;, hasType, =, true, ;, }, String, fieldName, =]
[=, fieldTypeNode, ., getFirstChild, (, ), ;, hasType, =, true, ;, }, String, fieldName, =, fieldNameNode, ., getString, (, )]
[;, hasType, =, true, ;, }, String, fieldName, =, fieldNameNode, ., getString, (, ), ;, if, (, fieldName, ., startsWith]
[., getFirstChild, (, ), ;, hasType, =, true, ;, }, String, fieldName, =, fieldNameNode, ., getString, (, ), ;, if]
[=, true, ;, }, String, fieldName, =, fieldNameNode, ., getString, (, ), ;, if, (, fieldName, ., startsWith, (, "'"]
[;, }, String, fieldName, =, fieldNameNode, ., getString, (, ), ;, if, (, fieldName, ., startsWith, (, "'", ), ||]
[;, if, (, fieldName, ., startsWith, (, "'", ), ||, fieldName, ., startsWith, (, "\"", ), ), {, fieldName, =]
[., getString, (, ), ;, if, (, fieldName, ., startsWith, (, "'", ), ||, fieldName, ., startsWith, (, "\"", )]
[), {, fieldName, =, fieldName, ., substring, (, 1, ,, fieldName, ., length, (, ), -, 1, ), ;, }]
[||, fieldName, ., startsWith, (, "\"", ), ), {, fieldName, =, fieldName, ., substring, (, 1, ,, fieldName, ., length]
[., startsWith, (, "'", ), ||, fieldName, ., startsWith, (, "\"", ), ), {, fieldName, =, fieldName, ., substring, (]
[), ||, fieldName, ., startsWith, (, "\"", ), ), {, fieldName, =, fieldName, ., substring, (, 1, ,, fieldName, .]
[), {, fieldName, =, fieldName, ., substring, (, 1, ,, fieldName, ., length, (, ), -, 1, ), ;, }]
[., startsWith, (, "\"", ), ), {, fieldName, =, fieldName, ., substring, (, 1, ,, fieldName, ., length, (, )]
[), ), {, fieldName, =, fieldName, ., substring, (, 1, ,, fieldName, ., length, (, ), -, 1, ), ;]
[=, fieldName, ., substring, (, 1, ,, fieldName, ., length, (, ), -, 1, ), ;, }, JSType, fieldType, =]
[;, }, JSType, fieldType, =, null, ;, if, (, hasType, ), {, fieldType, =, createFromTypeNodesInternal, (, fieldTypeNode, ., getLastChild, (]
[., substring, (, 1, ,, fieldName, ., length, (, ), -, 1, ), ;, }, JSType, fieldType, =, null, ;]
[,, fieldName, ., length, (, ), -, 1, ), ;, }, JSType, fieldType, =, null, ;, if, (, hasType, )]
[), ;, }, JSType, fieldType, =, null, ;, if, (, hasType, ), {, fieldType, =, createFromTypeNodesInternal, (, fieldTypeNode, ., getLastChild]
[-, 1, ), ;, }, JSType, fieldType, =, null, ;, if, (, hasType, ), {, fieldType, =, createFromTypeNodesInternal, (, fieldTypeNode]
[., length, (, ), -, 1, ), ;, }, JSType, fieldType, =, null, ;, if, (, hasType, ), {, fieldType]
[), ;, }, JSType, fieldType, =, null, ;, if, (, hasType, ), {, fieldType, =, createFromTypeNodesInternal, (, fieldTypeNode, ., getLastChild]
[;, if, (, hasType, ), {, fieldType, =, createFromTypeNodesInternal, (, fieldTypeNode, ., getLastChild, (, ), ,, sourceName, ,, scope, )]
[), {, fieldType, =, createFromTypeNodesInternal, (, fieldTypeNode, ., getLastChild, (, ), ,, sourceName, ,, scope, ), ;, }, else, {]
[=, createFromTypeNodesInternal, (, fieldTypeNode, ., getLastChild, (, ), ,, sourceName, ,, scope, ), ;, }, else, {, fieldType, =, getNativeType]
[;, }, else, {, fieldType, =, getNativeType, (, JSTypeNative, ., UNKNOWN_TYPE, ), ;, }, if, (, builder, ., addProperty, (]
[,, sourceName, ,, scope, ), ;, }, else, {, fieldType, =, getNativeType, (, JSTypeNative, ., UNKNOWN_TYPE, ), ;, }, if]
[., getLastChild, (, ), ,, sourceName, ,, scope, ), ;, }, else, {, fieldType, =, getNativeType, (, JSTypeNative, ., UNKNOWN_TYPE]
[,, scope, ), ;, }, else, {, fieldType, =, getNativeType, (, JSTypeNative, ., UNKNOWN_TYPE, ), ;, }, if, (, builder]
[), ;, }, else, {, fieldType, =, getNativeType, (, JSTypeNative, ., UNKNOWN_TYPE, ), ;, }, if, (, builder, ., addProperty]
[=, getNativeType, (, JSTypeNative, ., UNKNOWN_TYPE, ), ;, }, if, (, builder, ., addProperty, (, fieldName, ,, fieldType, ,, fieldNameNode]
[;, }, if, (, builder, ., addProperty, (, fieldName, ,, fieldType, ,, fieldNameNode, ), ==, null, ), {, reporter, .]
[), ;, }, if, (, builder, ., addProperty, (, fieldName, ,, fieldType, ,, fieldNameNode, ), ==, null, ), {, reporter]
[., UNKNOWN_TYPE, ), ;, }, if, (, builder, ., addProperty, (, fieldName, ,, fieldType, ,, fieldNameNode, ), ==, null, )]
[), {, reporter, ., warning, (, "Duplicate record field ", +, fieldName, ,, sourceName, ,, n, ., getLineno, (, ), ,, fieldNameNode, .]
[==, null, ), {, reporter, ., warning, (, "Duplicate record field ", +, fieldName, ,, sourceName, ,, n, ., getLineno, (, ), ,]
[., addProperty, (, fieldName, ,, fieldType, ,, fieldNameNode, ), ==, null, ), {, reporter, ., warning, (, "Duplicate record field ", +, fieldName]
[,, fieldType, ,, fieldNameNode, ), ==, null, ), {, reporter, ., warning, (, "Duplicate record field ", +, fieldName, ,, sourceName, ,, n]
[,, fieldNameNode, ), ==, null, ), {, reporter, ., warning, (, "Duplicate record field ", +, fieldName, ,, sourceName, ,, n, ., getLineno]
[), ==, null, ), {, reporter, ., warning, (, "Duplicate record field ", +, fieldName, ,, sourceName, ,, n, ., getLineno, (, )]
[), {, reporter, ., warning, (, "Duplicate record field ", +, fieldName, ,, sourceName, ,, n, ., getLineno, (, ), ,, fieldNameNode, .]
[;, }, }, return, builder, ., build, (, ), ;, }, public, void, setTemplateTypeNames, (, List, <, String, >, names]
[., warning, (, "Duplicate record field ", +, fieldName, ,, sourceName, ,, n, ., getLineno, (, ), ,, fieldNameNode, ., getCharno, (, )]
[,, sourceName, ,, n, ., getLineno, (, ), ,, fieldNameNode, ., getCharno, (, ), ), ;, }, }, return, builder]
[+, fieldName, ,, sourceName, ,, n, ., getLineno, (, ), ,, fieldNameNode, ., getCharno, (, ), ), ;, }, }]
[,, sourceName, ,, n, ., getLineno, (, ), ,, fieldNameNode, ., getCharno, (, ), ), ;, }, }, return, builder]
[,, n, ., getLineno, (, ), ,, fieldNameNode, ., getCharno, (, ), ), ;, }, }, return, builder, ., build]
[,, fieldNameNode, ., getCharno, (, ), ), ;, }, }, return, builder, ., build, (, ), ;, }, public, void]
[., getLineno, (, ), ,, fieldNameNode, ., getCharno, (, ), ), ;, }, }, return, builder, ., build, (, )]
[), ;, }, }, return, builder, ., build, (, ), ;, }, public, void, setTemplateTypeNames, (, List, <, String, >]
[., getCharno, (, ), ), ;, }, }, return, builder, ., build, (, ), ;, }, public, void, setTemplateTypeNames, (]
[;, }, public, void, setTemplateTypeNames, (, List, <, String, >, names, ), {, Preconditions, ., checkNotNull, (, names, ), ;]
[., build, (, ), ;, }, public, void, setTemplateTypeNames, (, List, <, String, >, names, ), {, Preconditions, ., checkNotNull]
[;, for, (, String, name, :, names, ), {, templateTypes, ., put, (, name, ,, new, TemplateType, (, this, ,]
[., checkNotNull, (, names, ), ;, for, (, String, name, :, names, ), {, templateTypes, ., put, (, name, ,]
[), ;, for, (, String, name, :, names, ), {, templateTypes, ., put, (, name, ,, new, TemplateType, (, this]
[), {, templateTypes, ., put, (, name, ,, new, TemplateType, (, this, ,, name, ), ), ;, }, }, public]
[;, }, }, public, void, clearTemplateTypeNames, (, ), {, templateTypes, ., clear, (, ), ;, }, }]
[., put, (, name, ,, new, TemplateType, (, this, ,, name, ), ), ;, }, }, public, void, clearTemplateTypeNames, (]
[,, new, TemplateType, (, this, ,, name, ), ), ;, }, }, public, void, clearTemplateTypeNames, (, ), {, templateTypes, .]
[), ;, }, }, public, void, clearTemplateTypeNames, (, ), {, templateTypes, ., clear, (, ), ;, }, }]
[,, name, ), ), ;, }, }, public, void, clearTemplateTypeNames, (, ), {, templateTypes, ., clear, (, ), ;, }]
[), ), ;, }, }, public, void, clearTemplateTypeNames, (, ), {, templateTypes, ., clear, (, ), ;, }, }]
[;, }, }]
[., clear, (, ), ;, }, }]
