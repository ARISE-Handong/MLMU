[public, class, LenientCopyTool, {, FieldCopier, fieldCopier, =, new, FieldCopier, (, ), ;, public, <, T, >, void, copyToMock, (, T]
[), public, class, LenientCopyTool, {, FieldCopier, fieldCopier, =, new, FieldCopier, (, ), ;, public, <, T, >, void, copyToMock, (]
[;, public, <, T, >, void, copyToMock, (, T, from, ,, T, mock, ), {, copy, (, from, ,, mock]
[;, }, public, <, T, >, void, copyToRealObject, (, T, from, ,, T, to, ), {, copy, (, from, ,]
[,, mock, ,, from, ., getClass, (, ), ,, mock, ., getClass, (, ), ., getSuperclass, (, ), ), ;]
[,, from, ., getClass, (, ), ,, mock, ., getClass, (, ), ., getSuperclass, (, ), ), ;, }, public]
[,, mock, ., getClass, (, ), ., getSuperclass, (, ), ), ;, }, public, <, T, >, void, copyToRealObject, (]
[., getClass, (, ), ,, mock, ., getClass, (, ), ., getSuperclass, (, ), ), ;, }, public, <, T]
[), ;, }, public, <, T, >, void, copyToRealObject, (, T, from, ,, T, to, ), {, copy, (, from]
[., getSuperclass, (, ), ), ;, }, public, <, T, >, void, copyToRealObject, (, T, from, ,, T, to, )]
[., getClass, (, ), ., getSuperclass, (, ), ), ;, }, public, <, T, >, void, copyToRealObject, (, T, from]
[;, }, private, <, T, >, void, copy, (, T, from, ,, T, to, ,, Class, fromClazz, ,, Class, toClass]
[,, to, ,, from, ., getClass, (, ), ,, to, ., getClass, (, ), ), ;, }, private, <, T]
[,, from, ., getClass, (, ), ,, to, ., getClass, (, ), ), ;, }, private, <, T, >, void]
[,, to, ., getClass, (, ), ), ;, }, private, <, T, >, void, copy, (, T, from, ,, T]
[., getClass, (, ), ,, to, ., getClass, (, ), ), ;, }, private, <, T, >, void, copy, (]
[), ;, }, private, <, T, >, void, copy, (, T, from, ,, T, to, ,, Class, fromClazz, ,, Class]
[., getClass, (, ), ), ;, }, private, <, T, >, void, copy, (, T, from, ,, T, to, ,]
[), {, copyValues, (, from, ,, to, ,, fromClazz, ), ;, fromClazz, =, fromClazz, ., getSuperclass, (, ), ;, }]
[!=, Object, ., class, ), {, copyValues, (, from, ,, to, ,, fromClazz, ), ;, fromClazz, =, fromClazz, ., getSuperclass]
[), {, copyValues, (, from, ,, to, ,, fromClazz, ), ;, fromClazz, =, fromClazz, ., getSuperclass, (, ), ;, }]
[;, fromClazz, =, fromClazz, ., getSuperclass, (, ), ;, }, }, private, <, T, >, void, copyValues, (, T, from]
[,, to, ,, fromClazz, ), ;, fromClazz, =, fromClazz, ., getSuperclass, (, ), ;, }, }, private, <, T, >]
[,, fromClazz, ), ;, fromClazz, =, fromClazz, ., getSuperclass, (, ), ;, }, }, private, <, T, >, void, copyValues]
[), ;, fromClazz, =, fromClazz, ., getSuperclass, (, ), ;, }, }, private, <, T, >, void, copyValues, (, T]
[=, fromClazz, ., getSuperclass, (, ), ;, }, }, private, <, T, >, void, copyValues, (, T, from, ,, T]
[;, }, }, private, <, T, >, void, copyValues, (, T, from, ,, T, mock, ,, Class, classFrom, ), {]
[., getSuperclass, (, ), ;, }, }, private, <, T, >, void, copyValues, (, T, from, ,, T, mock, ,]
[;, for, (, int, i, =, 0, ;, i, <, fields, ., length, ;, i, ++, ), {, Field, field]
[., getDeclaredFields, (, ), ;, for, (, int, i, =, 0, ;, i, <, fields, ., length, ;, i, ++]
[;, i, <, fields, ., length, ;, i, ++, ), {, Field, field, =, fields, [, i, ], ;, if]
[;, i, ++, ), {, Field, field, =, fields, [, i, ], ;, if, (, Modifier, ., isStatic, (, field]
[<, fields, ., length, ;, i, ++, ), {, Field, field, =, fields, [, i, ], ;, if, (, Modifier]
[;, i, ++, ), {, Field, field, =, fields, [, i, ], ;, if, (, Modifier, ., isStatic, (, field]
[., length, ;, i, ++, ), {, Field, field, =, fields, [, i, ], ;, if, (, Modifier, ., isStatic]
[), {, Field, field, =, fields, [, i, ], ;, if, (, Modifier, ., isStatic, (, field, ., getModifiers, (]
[++, ), {, Field, field, =, fields, [, i, ], ;, if, (, Modifier, ., isStatic, (, field, ., getModifiers]
[;, if, (, Modifier, ., isStatic, (, field, ., getModifiers, (, ), ), ), {, continue, ;, }, AccessibilityChanger, accessibilityChanger]
[[, i, ], ;, if, (, Modifier, ., isStatic, (, field, ., getModifiers, (, ), ), ), {, continue, ;]
[], ;, if, (, Modifier, ., isStatic, (, field, ., getModifiers, (, ), ), ), {, continue, ;, }, AccessibilityChanger]
[), {, continue, ;, }, AccessibilityChanger, accessibilityChanger, =, new, AccessibilityChanger, (, ), ;, try, {, accessibilityChanger, ., enableAccess, (, field]
[., isStatic, (, field, ., getModifiers, (, ), ), ), {, continue, ;, }, AccessibilityChanger, accessibilityChanger, =, new, AccessibilityChanger, (]
[), ), {, continue, ;, }, AccessibilityChanger, accessibilityChanger, =, new, AccessibilityChanger, (, ), ;, try, {, accessibilityChanger, ., enableAccess, (]
[., getModifiers, (, ), ), ), {, continue, ;, }, AccessibilityChanger, accessibilityChanger, =, new, AccessibilityChanger, (, ), ;, try, {]
[;, try, {, accessibilityChanger, ., enableAccess, (, field, ), ;, fieldCopier, ., copyValue, (, from, ,, mock, ,, field, )]
[;, fieldCopier, ., copyValue, (, from, ,, mock, ,, field, ), ;, }, catch, (, Throwable, t, ), {, }]
[., enableAccess, (, field, ), ;, fieldCopier, ., copyValue, (, from, ,, mock, ,, field, ), ;, }, catch, (]
[), ;, fieldCopier, ., copyValue, (, from, ,, mock, ,, field, ), ;, }, catch, (, Throwable, t, ), {]
[;, }, catch, (, Throwable, t, ), {, }, finally, {, accessibilityChanger, ., safelyDisableAccess, (, field, ), ;, }, }]
[., copyValue, (, from, ,, mock, ,, field, ), ;, }, catch, (, Throwable, t, ), {, }, finally, {]
[,, mock, ,, field, ), ;, }, catch, (, Throwable, t, ), {, }, finally, {, accessibilityChanger, ., safelyDisableAccess, (]
[,, field, ), ;, }, catch, (, Throwable, t, ), {, }, finally, {, accessibilityChanger, ., safelyDisableAccess, (, field, )]
[), ;, }, catch, (, Throwable, t, ), {, }, finally, {, accessibilityChanger, ., safelyDisableAccess, (, field, ), ;, }]
[;, }, }, }, }]
[., safelyDisableAccess, (, field, ), ;, }, }, }, }]
[), ;, }, }, }, }]
