[Entry, ;, public, class, JsonML, {, private, final, TagType, type, ;, private, Map, <, TagAttr, ,, Object, >, attributes, =]
[TagType, type, ;, private, Map, <, TagAttr, ,, Object, >, attributes, =, new, EnumMap, <, TagAttr, ,, Object, >, (]
[new, EnumMap, <, TagAttr, ,, Object, >, (, TagAttr, ., class, ), ;, private, List, <, JsonML, >, children, =]
[<, JsonML, >, children, =, new, ArrayList, <, JsonML, >, (, ), ;, public, JsonML, (, TagType, type, ), {]
[<, JsonML, >, children, =, new, ArrayList, <, JsonML, >, (, ), ;, public, JsonML, (, TagType, type, ), {]
[=, new, ArrayList, <, JsonML, >, (, ), ;, public, JsonML, (, TagType, type, ), {, this, ., type, =]
[this, ., type, =, type, ;, }, public, JsonML, (, TagType, type, ,, JsonML, ..., children, ), {, this, (]
[type, =, type, ;, }, public, JsonML, (, TagType, type, ,, JsonML, ..., children, ), {, this, (, type, ,]
[type, =, type, ;, }, public, JsonML, (, TagType, type, ,, JsonML, ..., children, ), {, this, (, type, ,]
[}, public, JsonML, (, TagType, type, ,, JsonML, ..., children, ), {, this, (, type, ,, Arrays, ., asList, (]
[), ;, }, public, JsonML, (, TagType, type, ,, List, <, ?, extends, JsonML, >, children, ), {, this, (]
[}, public, JsonML, (, TagType, type, ,, List, <, ?, extends, JsonML, >, children, ), {, this, (, type, ,]
[}, public, JsonML, (, TagType, type, ,, List, <, ?, extends, JsonML, >, children, ), {, this, (, type, ,]
[JsonML, >, children, ), {, this, (, type, ,, Collections, ., <, TagAttr, ,, Object, >, emptyMap, (, ), ,]
[}, public, JsonML, (, TagType, type, ,, Map, <, ?, extends, TagAttr, ,, ?, >, attributes, ), {, this, (]
[JsonML, (, TagType, type, ,, Map, <, ?, extends, TagAttr, ,, ?, >, attributes, ), {, this, (, type, ,]
[TagType, type, ,, Map, <, ?, extends, TagAttr, ,, ?, >, attributes, ), {, this, (, type, ,, attributes, ,]
[TagType, type, ,, Map, <, ?, extends, TagAttr, ,, ?, >, attributes, ), {, this, (, type, ,, attributes, ,]
[,, Map, <, ?, extends, TagAttr, ,, ?, >, attributes, ,, List, <, ?, extends, JsonML, >, children, ), {]
[,, Map, <, ?, extends, TagAttr, ,, ?, >, attributes, ,, List, <, ?, extends, JsonML, >, children, ), {]
[extends, TagAttr, ,, ?, >, attributes, ,, List, <, ?, extends, JsonML, >, children, ), {, this, ., type, =]
[,, ?, >, attributes, ,, List, <, ?, extends, JsonML, >, children, ), {, this, ., type, =, type, ;]
[,, ?, >, attributes, ,, List, <, ?, extends, JsonML, >, children, ), {, this, ., type, =, type, ;]
[,, ?, >, attributes, ,, List, <, ?, extends, JsonML, >, children, ), {, this, ., type, =, type, ;]
[<, ?, extends, JsonML, >, children, ), {, this, ., type, =, type, ;, this, ., attributes, ., putAll, (]
[JsonML, >, children, ), {, this, ., type, =, type, ;, this, ., attributes, ., putAll, (, attributes, ), ;]
[children, ), {, this, ., type, =, type, ;, this, ., attributes, ., putAll, (, attributes, ), ;, appendChildren, (]
[attributes, ), ;, appendChildren, (, children, ), ;, }, public, void, addChild, (, int, index, ,, JsonML, element, ), {]
[attributes, ), ;, appendChildren, (, children, ), ;, }, public, void, addChild, (, int, index, ,, JsonML, element, ), {]
[(, children, ), ;, }, public, void, addChild, (, int, index, ,, JsonML, element, ), {, children, ., add, (]
[), ;, }, public, void, addChild, (, int, index, ,, JsonML, element, ), {, children, ., add, (, index, ,]
[), {, children, ., add, (, index, ,, element, ), ;, }, public, void, appendChild, (, JsonML, element, ), {]
[), {, children, ., add, (, index, ,, element, ), ;, }, public, void, appendChild, (, JsonML, element, ), {]
[add, (, index, ,, element, ), ;, }, public, void, appendChild, (, JsonML, element, ), {, children, ., add, (]
[., add, (, element, ), ;, }, public, void, appendChildren, (, Collection, <, ?, extends, JsonML, >, elements, ), {]
[., add, (, element, ), ;, }, public, void, appendChildren, (, Collection, <, ?, extends, JsonML, >, elements, ), {]
[), ;, }, public, void, appendChildren, (, Collection, <, ?, extends, JsonML, >, elements, ), {, children, ., addAll, (]
[JsonML, >, elements, ), {, children, ., addAll, (, elements, ), ;, }, public, int, childrenSize, (, ), {, return]
[JsonML, >, elements, ), {, children, ., addAll, (, elements, ), ;, }, public, int, childrenSize, (, ), {, return]
[public, int, childrenSize, (, ), {, return, children, ., size, (, ), ;, }, public, void, clearChildren, (, ), {]
[public, void, clearChildren, (, ), {, setChildren, (, ), ;, }, public, Object, getAttribute, (, TagAttr, name, ), {, return]
[public, void, clearChildren, (, ), {, setChildren, (, ), ;, }, public, Object, getAttribute, (, TagAttr, name, ), {, return]
[), {, setChildren, (, ), ;, }, public, Object, getAttribute, (, TagAttr, name, ), {, return, attributes, ., get, (]
[attributes, ., get, (, name, ), ;, }, public, Map, <, TagAttr, ,, Object, >, getAttributes, (, ), {, return]
[,, Object, >, getAttributes, (, ), {, return, attributes, ;, }, public, JsonML, getChild, (, int, index, ), {, return]
[,, Object, >, getAttributes, (, ), {, return, attributes, ;, }, public, JsonML, getChild, (, int, index, ), {, return]
[(, ), {, return, attributes, ;, }, public, JsonML, getChild, (, int, index, ), {, return, children, ., get, (]
[{, return, children, ., get, (, index, ), ;, }, public, List, <, JsonML, >, getChildren, (, ), {, return]
[{, return, children, ;, }, public, List, <, JsonML, >, getChildren, (, int, fromIndex, ,, int, toIndex, ), {, return]
[{, return, children, ;, }, public, List, <, JsonML, >, getChildren, (, int, fromIndex, ,, int, toIndex, ), {, return]
[}, public, List, <, JsonML, >, getChildren, (, int, fromIndex, ,, int, toIndex, ), {, return, children, ., subList, (]
[List, <, JsonML, >, getChildren, (, int, fromIndex, ,, int, toIndex, ), {, return, children, ., subList, (, fromIndex, ,]
[), {, return, children, ., subList, (, fromIndex, ,, toIndex, ), ;, }, public, TagType, getType, (, ), {, return]
[), ;, }, public, TagType, getType, (, ), {, return, type, ;, }, public, boolean, hasChildren, (, ), {, return]
[;, }, public, TagType, getType, (, ), {, return, type, ;, }, public, boolean, hasChildren, (, ), {, return, !]
[;, }, public, TagType, getType, (, ), {, return, type, ;, }, public, boolean, hasChildren, (, ), {, return, !]
[return, !, children, ., isEmpty, (, ), ;, }, public, void, setAttribute, (, TagAttr, name, ,, Object, value, ), {]
[return, !, children, ., isEmpty, (, ), ;, }, public, void, setAttribute, (, TagAttr, name, ,, Object, value, ), {]
[isEmpty, (, ), ;, }, public, void, setAttribute, (, TagAttr, name, ,, Object, value, ), {, attributes, ., put, (]
[), ;, }, public, void, setAttribute, (, TagAttr, name, ,, Object, value, ), {, attributes, ., put, (, name, ,]
[(, name, ,, value, ), ;, }, public, void, setAttributes, (, Map, <, TagAttr, ,, Object, >, attributes, ), {]
[(, name, ,, value, ), ;, }, public, void, setAttributes, (, Map, <, TagAttr, ,, Object, >, attributes, ), {]
[), ;, }, public, void, setAttributes, (, Map, <, TagAttr, ,, Object, >, attributes, ), {, this, ., attributes, =]
[), {, this, ., attributes, =, attributes, ;, }, public, void, setChild, (, int, index, ,, JsonML, element, ), {]
[), {, this, ., attributes, =, attributes, ;, }, public, void, setChild, (, int, index, ,, JsonML, element, ), {]
[attributes, =, attributes, ;, }, public, void, setChild, (, int, index, ,, JsonML, element, ), {, children, ., set, (]
[attributes, ;, }, public, void, setChild, (, int, index, ,, JsonML, element, ), {, children, ., set, (, index, ,]
[{, children, ., set, (, index, ,, element, ), ;, }, public, void, setChildren, (, JsonML, ..., children, ), {]
[{, children, ., set, (, index, ,, element, ), ;, }, public, void, setChildren, (, JsonML, ..., children, ), {]
[{, children, ., set, (, index, ,, element, ), ;, }, public, void, setChildren, (, JsonML, ..., children, ), {]
[), ;, }, public, void, setChildren, (, JsonML, ..., children, ), {, this, ., children, ., clear, (, ), ;]
[), ;, }, public, void, setChildren, (, JsonML, ..., children, ), {, this, ., children, ., clear, (, ), ;]
[), ;, }, public, void, setChildren, (, JsonML, ..., children, ), {, this, ., children, ., clear, (, ), ;]
[(, JsonML, ..., children, ), {, this, ., children, ., clear, (, ), ;, this, ., children, ., addAll, (]
[(, JsonML, ..., children, ), {, this, ., children, ., clear, (, ), ;, this, ., children, ., addAll, (]
[), {, this, ., children, ., clear, (, ), ;, this, ., children, ., addAll, (, Arrays, ., asList, (]
[Arrays, ., asList, (, children, ), ), ;, }, public, void, setChildren, (, List, <, JsonML, >, children, ), {]
[Arrays, ., asList, (, children, ), ), ;, }, public, void, setChildren, (, List, <, JsonML, >, children, ), {]
[children, ), ), ;, }, public, void, setChildren, (, List, <, JsonML, >, children, ), {, this, ., children, =]
[), {, this, ., children, =, children, ;, }, @, Override, public, String, toString, (, ), {, StringBuilder, sb, =]
[=, children, ;, }, @, Override, public, String, toString, (, ), {, StringBuilder, sb, =, new, StringBuilder, (, ), ;]
[;, }, @, Override, public, String, toString, (, ), {, StringBuilder, sb, =, new, StringBuilder, (, ), ;, toString, (]
[@, Override, public, String, toString, (, ), {, StringBuilder, sb, =, new, StringBuilder, (, ), ;, toString, (, sb, ,]
[public, String, toString, (, ), {, StringBuilder, sb, =, new, StringBuilder, (, ), ;, toString, (, sb, ,, true, ,]
[), {, StringBuilder, sb, =, new, StringBuilder, (, ), ;, toString, (, sb, ,, true, ,, true, ), ;, return]
[), {, StringBuilder, sb, =, new, StringBuilder, (, ), ;, toString, (, sb, ,, true, ,, true, ), ;, return]
[., toString, (, ), ;, }, private, void, toString, (, StringBuilder, sb, ,, boolean, printAttributes, ,, boolean, printChildren, ), {]
[., toString, (, ), ;, }, private, void, toString, (, StringBuilder, sb, ,, boolean, printAttributes, ,, boolean, printChildren, ), {]
[;, }, private, void, toString, (, StringBuilder, sb, ,, boolean, printAttributes, ,, boolean, printChildren, ), {, sb, ., append, (]
[void, toString, (, StringBuilder, sb, ,, boolean, printAttributes, ,, boolean, printChildren, ), {, sb, ., append, (, "[\"", ), ;]
[(, StringBuilder, sb, ,, boolean, printAttributes, ,, boolean, printChildren, ), {, sb, ., append, (, "[\"", ), ;, escapeStringOnto, (]
[(, StringBuilder, sb, ,, boolean, printAttributes, ,, boolean, printChildren, ), {, sb, ., append, (, "[\"", ), ;, escapeStringOnto, (]
[,, boolean, printChildren, ), {, sb, ., append, (, "[\"", ), ;, escapeStringOnto, (, type, ., name, (, ), ,]
[), {, sb, ., append, (, "[\"", ), ;, escapeStringOnto, (, type, ., name, (, ), ,, sb, ), ;]
[), {, sb, ., append, (, "[\"", ), ;, escapeStringOnto, (, type, ., name, (, ), ,, sb, ), ;]
[append, (, "[\"", ), ;, escapeStringOnto, (, type, ., name, (, ), ,, sb, ), ;, sb, ., append, (]
[escapeStringOnto, (, type, ., name, (, ), ,, sb, ), ;, sb, ., append, (, '"', ), ;, if, (]
[., name, (, ), ,, sb, ), ;, sb, ., append, (, '"', ), ;, if, (, printAttributes, ), {]
[., name, (, ), ,, sb, ), ;, sb, ., append, (, '"', ), ;, if, (, printAttributes, ), {]
[,, sb, ), ;, sb, ., append, (, '"', ), ;, if, (, printAttributes, ), {, sb, ., append, (]
[append, (, '"', ), ;, if, (, printAttributes, ), {, sb, ., append, (, ", {", ), ;, boolean, first, =]
[append, (, ", {", ), ;, boolean, first, =, true, ;, for, (, Entry, <, TagAttr, ,, Object, >, entry, :]
[append, (, ", {", ), ;, boolean, first, =, true, ;, for, (, Entry, <, TagAttr, ,, Object, >, entry, :]
[;, for, (, Entry, <, TagAttr, ,, Object, >, entry, :, attributes, ., entrySet, (, ), ), {, if, (]
[Entry, <, TagAttr, ,, Object, >, entry, :, attributes, ., entrySet, (, ), ), {, if, (, first, ), {]
[TagAttr, ,, Object, >, entry, :, attributes, ., entrySet, (, ), ), {, if, (, first, ), {, first, =]
[:, attributes, ., entrySet, (, ), ), {, if, (, first, ), {, first, =, false, ;, }, else, {]
[:, attributes, ., entrySet, (, ), ), {, if, (, first, ), {, first, =, false, ;, }, else, {]
[(, ), ), {, if, (, first, ), {, first, =, false, ;, }, else, {, sb, ., append, (]
[if, (, first, ), {, first, =, false, ;, }, else, {, sb, ., append, (, ", ", ), ;, }]
[if, (, first, ), {, first, =, false, ;, }, else, {, sb, ., append, (, ", ", ), ;, }]
[{, first, =, false, ;, }, else, {, sb, ., append, (, ", ", ), ;, }, sb, ., append, (]
[false, ;, }, else, {, sb, ., append, (, ", ", ), ;, }, sb, ., append, (, '"', ), ;]
[}, else, {, sb, ., append, (, ", ", ), ;, }, sb, ., append, (, '"', ), ;, escapeStringOnto, (]
[}, else, {, sb, ., append, (, ", ", ), ;, }, sb, ., append, (, '"', ), ;, escapeStringOnto, (]
[}, else, {, sb, ., append, (, ", ", ), ;, }, sb, ., append, (, '"', ), ;, escapeStringOnto, (]
[}, sb, ., append, (, '"', ), ;, escapeStringOnto, (, entry, ., getKey, (, ), ., toString, (, ), ,]
[append, (, '"', ), ;, escapeStringOnto, (, entry, ., getKey, (, ), ., toString, (, ), ,, sb, ), ;]
[append, (, '"', ), ;, escapeStringOnto, (, entry, ., getKey, (, ), ., toString, (, ), ,, sb, ), ;]
[;, escapeStringOnto, (, entry, ., getKey, (, ), ., toString, (, ), ,, sb, ), ;, sb, ., append, (]
[(, ), ., toString, (, ), ,, sb, ), ;, sb, ., append, (, "\": ", ), ;, Object, value, =]
[(, ), ., toString, (, ), ,, sb, ), ;, sb, ., append, (, "\": ", ), ;, Object, value, =]
[), ;, sb, ., append, (, "\": ", ), ;, Object, value, =, entry, ., getValue, (, ), ;, if, (]
[), ;, sb, ., append, (, "\": ", ), ;, Object, value, =, entry, ., getValue, (, ), ;, if, (]
[sb, ., append, (, "\": ", ), ;, Object, value, =, entry, ., getValue, (, ), ;, if, (, value, ==]
[(, "\": ", ), ;, Object, value, =, entry, ., getValue, (, ), ;, if, (, value, ==, null, ), {]
[(, "\": ", ), ;, Object, value, =, entry, ., getValue, (, ), ;, if, (, value, ==, null, ), {]
[Object, value, =, entry, ., getValue, (, ), ;, if, (, value, ==, null, ), {, sb, ., append, (]
[), ;, if, (, value, ==, null, ), {, sb, ., append, (, "null", ), ;, }, else, if, (]
[), ;, if, (, value, ==, null, ), {, sb, ., append, (, "null", ), ;, }, else, if, (]
[==, null, ), {, sb, ., append, (, "null", ), ;, }, else, if, (, value, instanceof, String, ), {]
[==, null, ), {, sb, ., append, (, "null", ), ;, }, else, if, (, value, instanceof, String, ), {]
[sb, ., append, (, "null", ), ;, }, else, if, (, value, instanceof, String, ), {, sb, ., append, (]
[(, "null", ), ;, }, else, if, (, value, instanceof, String, ), {, sb, ., append, (, '"', ), ;]
[), ;, }, else, if, (, value, instanceof, String, ), {, sb, ., append, (, '"', ), ;, escapeStringOnto, (]
[else, if, (, value, instanceof, String, ), {, sb, ., append, (, '"', ), ;, escapeStringOnto, (, (, String, )]
[(, value, instanceof, String, ), {, sb, ., append, (, '"', ), ;, escapeStringOnto, (, (, String, ), value, ,]
[String, ), {, sb, ., append, (, '"', ), ;, escapeStringOnto, (, (, String, ), value, ,, sb, ), ;]
[String, ), {, sb, ., append, (, '"', ), ;, escapeStringOnto, (, (, String, ), value, ,, sb, ), ;]
[., append, (, '"', ), ;, escapeStringOnto, (, (, String, ), value, ,, sb, ), ;, sb, ., append, (]
[escapeStringOnto, (, (, String, ), value, ,, sb, ), ;, sb, ., append, (, '"', ), ;, }, else, {]
[escapeStringOnto, (, (, String, ), value, ,, sb, ), ;, sb, ., append, (, '"', ), ;, }, else, {]
[), value, ,, sb, ), ;, sb, ., append, (, '"', ), ;, }, else, {, sb, ., append, (]
[;, sb, ., append, (, '"', ), ;, }, else, {, sb, ., append, (, value, ), ;, }, }]
[;, sb, ., append, (, '"', ), ;, }, else, {, sb, ., append, (, value, ), ;, }, }]
[(, '"', ), ;, }, else, {, sb, ., append, (, value, ), ;, }, }, sb, ., append, (]
[{, sb, ., append, (, value, ), ;, }, }, sb, ., append, (, "}", ), ;, }, if, (]
[}, }, sb, ., append, (, "}", ), ;, }, if, (, printChildren, ), {, for, (, JsonML, child, :]
[., append, (, "}", ), ;, }, if, (, printChildren, ), {, for, (, JsonML, child, :, children, ), {]
[., append, (, "}", ), ;, }, if, (, printChildren, ), {, for, (, JsonML, child, :, children, ), {]
[), ;, }, if, (, printChildren, ), {, for, (, JsonML, child, :, children, ), {, sb, ., append, (]
[if, (, printChildren, ), {, for, (, JsonML, child, :, children, ), {, sb, ., append, (, ", ", ), ;]
[if, (, printChildren, ), {, for, (, JsonML, child, :, children, ), {, sb, ., append, (, ", ", ), ;]
[{, for, (, JsonML, child, :, children, ), {, sb, ., append, (, ", ", ), ;, sb, ., append, (]
[{, for, (, JsonML, child, :, children, ), {, sb, ., append, (, ", ", ), ;, sb, ., append, (]
[sb, ., append, (, ", ", ), ;, sb, ., append, (, child, ., toString, (, ), ), ;, }, }]
[sb, ., append, (, ", ", ), ;, sb, ., append, (, child, ., toString, (, ), ), ;, }, }]
[", ", ), ;, sb, ., append, (, child, ., toString, (, ), ), ;, }, }, sb, ., append, (]
[(, ']', ), ;, }, private, static, void, escapeStringOnto, (, String, s, ,, StringBuilder, sb, ), {, int, pos, =]
[}, private, static, void, escapeStringOnto, (, String, s, ,, StringBuilder, sb, ), {, int, pos, =, 0, ,, n, =]
[}, private, static, void, escapeStringOnto, (, String, s, ,, StringBuilder, sb, ), {, int, pos, =, 0, ,, n, =]
[), {, int, pos, =, 0, ,, n, =, s, ., length, (, ), ;, for, (, int, i, =]
[int, pos, =, 0, ,, n, =, s, ., length, (, ), ;, for, (, int, i, =, 0, ;]
[int, pos, =, 0, ,, n, =, s, ., length, (, ), ;, for, (, int, i, =, 0, ;]
[=, 0, ,, n, =, s, ., length, (, ), ;, for, (, int, i, =, 0, ;, i, <]
[,, n, =, s, ., length, (, ), ;, for, (, int, i, =, 0, ;, i, <, n, ;]
[n, =, s, ., length, (, ), ;, for, (, int, i, =, 0, ;, i, <, n, ;, ++]
[), ;, for, (, int, i, =, 0, ;, i, <, n, ;, ++, i, ), {, char, ch, =]
[), ;, for, (, int, i, =, 0, ;, i, <, n, ;, ++, i, ), {, char, ch, =]
[int, i, =, 0, ;, i, <, n, ;, ++, i, ), {, char, ch, =, s, ., charAt, (]
[i, <, n, ;, ++, i, ), {, char, ch, =, s, ., charAt, (, i, ), ;, switch, (]
[++, i, ), {, char, ch, =, s, ., charAt, (, i, ), ;, switch, (, ch, ), {, case]
[{, char, ch, =, s, ., charAt, (, i, ), ;, switch, (, ch, ), {, case, '\r', :, case]
[=, s, ., charAt, (, i, ), ;, switch, (, ch, ), {, case, '\r', :, case, '\n', :, case]
[charAt, (, i, ), ;, switch, (, ch, ), {, case, '\r', :, case, '\n', :, case, '"', :, case]
[), ;, switch, (, ch, ), {, case, '\r', :, case, '\n', :, case, '"', :, case, '\\', :, case]
[(, ch, ), {, case, '\r', :, case, '\n', :, case, '"', :, case, '\\', :, case, '\u2028', :, case]
['\r', :, case, '\n', :, case, '"', :, case, '\\', :, case, '\u2028', :, case, '\u2029', :, String, hex, =]
['\r', :, case, '\n', :, case, '"', :, case, '\\', :, case, '\u2028', :, case, '\u2029', :, String, hex, =]
[:, case, '"', :, case, '\\', :, case, '\u2028', :, case, '\u2029', :, String, hex, =, Integer, ., toString, (]
['"', :, case, '\\', :, case, '\u2028', :, case, '\u2029', :, String, hex, =, Integer, ., toString, (, ch, ,]
['\\', :, case, '\u2028', :, case, '\u2029', :, String, hex, =, Integer, ., toString, (, ch, ,, 16, ), ;]
['\\', :, case, '\u2028', :, case, '\u2029', :, String, hex, =, Integer, ., toString, (, ch, ,, 16, ), ;]
['\\', :, case, '\u2028', :, case, '\u2029', :, String, hex, =, Integer, ., toString, (, ch, ,, 16, ), ;]
['\\', :, case, '\u2028', :, case, '\u2029', :, String, hex, =, Integer, ., toString, (, ch, ,, 16, ), ;]
['\\', :, case, '\u2028', :, case, '\u2029', :, String, hex, =, Integer, ., toString, (, ch, ,, 16, ), ;]
[:, case, '\u2029', :, String, hex, =, Integer, ., toString, (, ch, ,, 16, ), ;, sb, ., append, (]
['\u2029', :, String, hex, =, Integer, ., toString, (, ch, ,, 16, ), ;, sb, ., append, (, s, ,]
[String, hex, =, Integer, ., toString, (, ch, ,, 16, ), ;, sb, ., append, (, s, ,, pos, ,]
[toString, (, ch, ,, 16, ), ;, sb, ., append, (, s, ,, pos, ,, i, ), ., append, (]
[), ;, sb, ., append, (, s, ,, pos, ,, i, ), ., append, (, "\\u", ), ., append, (]
[sb, ., append, (, s, ,, pos, ,, i, ), ., append, (, "\\u", ), ., append, (, "0000", ,]
[sb, ., append, (, s, ,, pos, ,, i, ), ., append, (, "\\u", ), ., append, (, "0000", ,]
[pos, ,, i, ), ., append, (, "\\u", ), ., append, (, "0000", ,, hex, ., length, (, ), ,]
[append, (, "\\u", ), ., append, (, "0000", ,, hex, ., length, (, ), ,, 4, ), ., append, (]
[), ., append, (, "0000", ,, hex, ., length, (, ), ,, 4, ), ., append, (, hex, ), ;]
[append, (, "0000", ,, hex, ., length, (, ), ,, 4, ), ., append, (, hex, ), ;, pos, =]
[append, (, "0000", ,, hex, ., length, (, ), ,, 4, ), ., append, (, hex, ), ;, pos, =]
["0000", ,, hex, ., length, (, ), ,, 4, ), ., append, (, hex, ), ;, pos, =, i, +]
[), ,, 4, ), ., append, (, hex, ), ;, pos, =, i, +, 1, ;, break, ;, }, }]
[), ,, 4, ), ., append, (, hex, ), ;, pos, =, i, +, 1, ;, break, ;, }, }]
[., append, (, hex, ), ;, pos, =, i, +, 1, ;, break, ;, }, }, sb, ., append, (]
[(, hex, ), ;, pos, =, i, +, 1, ;, break, ;, }, }, sb, ., append, (, s, ,]
[), ;, pos, =, i, +, 1, ;, break, ;, }, }, sb, ., append, (, s, ,, pos, ,]
[(, s, ,, pos, ,, n, ), ;, }, public, String, toStringTree, (, ), {, try, {, StringBuilder, s, =]
[n, ), ;, }, public, String, toStringTree, (, ), {, try, {, StringBuilder, s, =, new, StringBuilder, (, ), ;]
[;, }, public, String, toStringTree, (, ), {, try, {, StringBuilder, s, =, new, StringBuilder, (, ), ;, toStringTreeHelper, (]
[public, String, toStringTree, (, ), {, try, {, StringBuilder, s, =, new, StringBuilder, (, ), ;, toStringTreeHelper, (, this, ,]
[toStringTree, (, ), {, try, {, StringBuilder, s, =, new, StringBuilder, (, ), ;, toStringTreeHelper, (, this, ,, 0, ,]
[try, {, StringBuilder, s, =, new, StringBuilder, (, ), ;, toStringTreeHelper, (, this, ,, 0, ,, s, ), ;, return]
[try, {, StringBuilder, s, =, new, StringBuilder, (, ), ;, toStringTreeHelper, (, this, ,, 0, ,, s, ), ;, return]
[0, ,, s, ), ;, return, s, ., toString, (, ), ;, }, catch, (, IOException, e, ), {, throw]
[), ;, return, s, ., toString, (, ), ;, }, catch, (, IOException, e, ), {, throw, new, RuntimeException, (]
[), ;, return, s, ., toString, (, ), ;, }, catch, (, IOException, e, ), {, throw, new, RuntimeException, (]
[return, s, ., toString, (, ), ;, }, catch, (, IOException, e, ), {, throw, new, RuntimeException, (, "Should not happen\n", +]
[void, toStringTreeHelper, (, JsonML, element, ,, int, level, ,, StringBuilder, sb, ), throws, IOException, {, for, (, int, i, =]
[(, JsonML, element, ,, int, level, ,, StringBuilder, sb, ), throws, IOException, {, for, (, int, i, =, 0, ;]
[(, JsonML, element, ,, int, level, ,, StringBuilder, sb, ), throws, IOException, {, for, (, int, i, =, 0, ;]
[element, ,, int, level, ,, StringBuilder, sb, ), throws, IOException, {, for, (, int, i, =, 0, ;, i, <]
[int, level, ,, StringBuilder, sb, ), throws, IOException, {, for, (, int, i, =, 0, ;, i, <, level, ;]
[level, ,, StringBuilder, sb, ), throws, IOException, {, for, (, int, i, =, 0, ;, i, <, level, ;, ++]
[sb, ), throws, IOException, {, for, (, int, i, =, 0, ;, i, <, level, ;, ++, i, ), {]
[sb, ), throws, IOException, {, for, (, int, i, =, 0, ;, i, <, level, ;, ++, i, ), {]
[{, for, (, int, i, =, 0, ;, i, <, level, ;, ++, i, ), {, sb, ., append, (]
[i, =, 0, ;, i, <, level, ;, ++, i, ), {, sb, ., append, (, "    ", ), ;, }]
[i, =, 0, ;, i, <, level, ;, ++, i, ), {, sb, ., append, (, "    ", ), ;, }]
[i, <, level, ;, ++, i, ), {, sb, ., append, (, "    ", ), ;, }, element, ., toString, (]
[level, ;, ++, i, ), {, sb, ., append, (, "    ", ), ;, }, element, ., toString, (, sb, ,]
[++, i, ), {, sb, ., append, (, "    ", ), ;, }, element, ., toString, (, sb, ,, true, ,]
[{, sb, ., append, (, "    ", ), ;, }, element, ., toString, (, sb, ,, true, ,, false, ), ;]
[{, sb, ., append, (, "    ", ), ;, }, element, ., toString, (, sb, ,, true, ,, false, ), ;]
[(, "    ", ), ;, }, element, ., toString, (, sb, ,, true, ,, false, ), ;, sb, ., append, (]
[(, sb, ,, true, ,, false, ), ;, sb, ., append, (, "\n", ), ;, for, (, JsonML, child, :]
[(, sb, ,, true, ,, false, ), ;, sb, ., append, (, "\n", ), ;, for, (, JsonML, child, :]
[;, sb, ., append, (, "\n", ), ;, for, (, JsonML, child, :, element, ., getChildren, (, ), ), {]
[., append, (, "\n", ), ;, for, (, JsonML, child, :, element, ., getChildren, (, ), ), {, toStringTreeHelper, (]
[(, "\n", ), ;, for, (, JsonML, child, :, element, ., getChildren, (, ), ), {, toStringTreeHelper, (, child, ,]
[(, "\n", ), ;, for, (, JsonML, child, :, element, ., getChildren, (, ), ), {, toStringTreeHelper, (, child, ,]
[), ;, for, (, JsonML, child, :, element, ., getChildren, (, ), ), {, toStringTreeHelper, (, child, ,, level, +]
[for, (, JsonML, child, :, element, ., getChildren, (, ), ), {, toStringTreeHelper, (, child, ,, level, +, 1, ,]
