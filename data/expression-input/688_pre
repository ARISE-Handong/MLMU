[BitField, {, private, final, int, _mask, ;, private, final, int, _shift_count, ;, public, BitField, (, final, int, mask, ), {]
[private, final, int, _mask, ;, private, final, int, _shift_count, ;, public, BitField, (, final, int, mask, ), {, _mask, =]
[private, final, int, _shift_count, ;, public, BitField, (, final, int, mask, ), {, _mask, =, mask, ;, int, count, =]
[public, BitField, (, final, int, mask, ), {, _mask, =, mask, ;, int, count, =, 0, ;, int, bit_pattern, =]
[int, mask, ), {, _mask, =, mask, ;, int, count, =, 0, ;, int, bit_pattern, =, mask, ;, if, (]
[int, mask, ), {, _mask, =, mask, ;, int, count, =, 0, ;, int, bit_pattern, =, mask, ;, if, (]
[), {, _mask, =, mask, ;, int, count, =, 0, ;, int, bit_pattern, =, mask, ;, if, (, bit_pattern, !=]
[;, int, count, =, 0, ;, int, bit_pattern, =, mask, ;, if, (, bit_pattern, !=, 0, ), {, while, (]
[;, int, count, =, 0, ;, int, bit_pattern, =, mask, ;, if, (, bit_pattern, !=, 0, ), {, while, (]
[int, count, =, 0, ;, int, bit_pattern, =, mask, ;, if, (, bit_pattern, !=, 0, ), {, while, (, (]
[int, count, =, 0, ;, int, bit_pattern, =, mask, ;, if, (, bit_pattern, !=, 0, ), {, while, (, (]
[=, 0, ;, int, bit_pattern, =, mask, ;, if, (, bit_pattern, !=, 0, ), {, while, (, (, bit_pattern, &]
[int, bit_pattern, =, mask, ;, if, (, bit_pattern, !=, 0, ), {, while, (, (, bit_pattern, &, 1, ), ==]
[mask, ;, if, (, bit_pattern, !=, 0, ), {, while, (, (, bit_pattern, &, 1, ), ==, 0, ), {]
[mask, ;, if, (, bit_pattern, !=, 0, ), {, while, (, (, bit_pattern, &, 1, ), ==, 0, ), {]
[(, bit_pattern, !=, 0, ), {, while, (, (, bit_pattern, &, 1, ), ==, 0, ), {, count, ++, ;]
[!=, 0, ), {, while, (, (, bit_pattern, &, 1, ), ==, 0, ), {, count, ++, ;, bit_pattern, >>=]
[while, (, (, bit_pattern, &, 1, ), ==, 0, ), {, count, ++, ;, bit_pattern, >>=, 1, ;, }, }]
[(, bit_pattern, &, 1, ), ==, 0, ), {, count, ++, ;, bit_pattern, >>=, 1, ;, }, }, _shift_count, =]
[>>=, 1, ;, }, }, _shift_count, =, count, ;, }, public, int, getValue, (, final, int, holder, ), {, return]
[>>=, 1, ;, }, }, _shift_count, =, count, ;, }, public, int, getValue, (, final, int, holder, ), {, return]
[;, }, }, _shift_count, =, count, ;, }, public, int, getValue, (, final, int, holder, ), {, return, getRawValue, (]
[=, count, ;, }, public, int, getValue, (, final, int, holder, ), {, return, getRawValue, (, holder, ), >, >]
[return, getRawValue, (, holder, ), >, >, _shift_count, ;, }, public, short, getShortValue, (, final, short, holder, ), {, return]
[holder, ), >, >, _shift_count, ;, }, public, short, getShortValue, (, final, short, holder, ), {, return, (, short, )]
[>, >, _shift_count, ;, }, public, short, getShortValue, (, final, short, holder, ), {, return, (, short, ), getValue, (]
[return, (, short, ), getValue, (, holder, ), ;, }, public, int, getRawValue, (, final, int, holder, ), {, return]
[return, (, short, ), getValue, (, holder, ), ;, }, public, int, getRawValue, (, final, int, holder, ), {, return]
[short, ), getValue, (, holder, ), ;, }, public, int, getRawValue, (, final, int, holder, ), {, return, holder, &]
[int, holder, ), {, return, holder, &, _mask, ;, }, public, short, getShortRawValue, (, final, short, holder, ), {, return]
[{, return, holder, &, _mask, ;, }, public, short, getShortRawValue, (, final, short, holder, ), {, return, (, short, )]
[holder, &, _mask, ;, }, public, short, getShortRawValue, (, final, short, holder, ), {, return, (, short, ), getRawValue, (]
[return, (, short, ), getRawValue, (, holder, ), ;, }, public, boolean, isSet, (, final, int, holder, ), {, return]
[return, (, short, ), getRawValue, (, holder, ), ;, }, public, boolean, isSet, (, final, int, holder, ), {, return]
[(, short, ), getRawValue, (, holder, ), ;, }, public, boolean, isSet, (, final, int, holder, ), {, return, (]
[(, short, ), getRawValue, (, holder, ), ;, }, public, boolean, isSet, (, final, int, holder, ), {, return, (]
[), getRawValue, (, holder, ), ;, }, public, boolean, isSet, (, final, int, holder, ), {, return, (, holder, &]
[holder, ), ;, }, public, boolean, isSet, (, final, int, holder, ), {, return, (, holder, &, _mask, ), !=]
[return, (, holder, &, _mask, ), !=, 0, ;, }, public, boolean, isAllSet, (, final, int, holder, ), {, return]
[return, (, holder, &, _mask, ), !=, 0, ;, }, public, boolean, isAllSet, (, final, int, holder, ), {, return]
[(, holder, &, _mask, ), !=, 0, ;, }, public, boolean, isAllSet, (, final, int, holder, ), {, return, (]
[(, holder, &, _mask, ), !=, 0, ;, }, public, boolean, isAllSet, (, final, int, holder, ), {, return, (]
[&, _mask, ), !=, 0, ;, }, public, boolean, isAllSet, (, final, int, holder, ), {, return, (, holder, &]
[!=, 0, ;, }, public, boolean, isAllSet, (, final, int, holder, ), {, return, (, holder, &, _mask, ), ==]
[_mask, ), ==, _mask, ;, }, public, int, setValue, (, final, int, holder, ,, final, int, value, ), {, return]
[_mask, ), ==, _mask, ;, }, public, int, setValue, (, final, int, holder, ,, final, int, value, ), {, return]
[), ==, _mask, ;, }, public, int, setValue, (, final, int, holder, ,, final, int, value, ), {, return, (]
[), ==, _mask, ;, }, public, int, setValue, (, final, int, holder, ,, final, int, value, ), {, return, (]
[_mask, ;, }, public, int, setValue, (, final, int, holder, ,, final, int, value, ), {, return, (, holder, &]
[;, }, public, int, setValue, (, final, int, holder, ,, final, int, value, ), {, return, (, holder, &, ~]
[int, setValue, (, final, int, holder, ,, final, int, value, ), {, return, (, holder, &, ~, _mask, ), |]
[setValue, (, final, int, holder, ,, final, int, value, ), {, return, (, holder, &, ~, _mask, ), |, (]
[setValue, (, final, int, holder, ,, final, int, value, ), {, return, (, holder, &, ~, _mask, ), |, (]
[(, final, int, holder, ,, final, int, value, ), {, return, (, holder, &, ~, _mask, ), |, (, (]
[(, final, int, holder, ,, final, int, value, ), {, return, (, holder, &, ~, _mask, ), |, (, (]
[int, holder, ,, final, int, value, ), {, return, (, holder, &, ~, _mask, ), |, (, (, value, <<]
[final, int, value, ), {, return, (, holder, &, ~, _mask, ), |, (, (, value, <<, _shift_count, ), &]
[), &, _mask, ), ;, }, public, short, setShortValue, (, final, short, holder, ,, final, short, value, ), {, return]
[), ;, }, public, short, setShortValue, (, final, short, holder, ,, final, short, value, ), {, return, (, short, )]
[}, public, short, setShortValue, (, final, short, holder, ,, final, short, value, ), {, return, (, short, ), setValue, (]
[short, setShortValue, (, final, short, holder, ,, final, short, value, ), {, return, (, short, ), setValue, (, holder, ,]
[short, ), setValue, (, holder, ,, value, ), ;, }, public, int, clear, (, final, int, holder, ), {, return]
[short, ), setValue, (, holder, ,, value, ), ;, }, public, int, clear, (, final, int, holder, ), {, return]
[setValue, (, holder, ,, value, ), ;, }, public, int, clear, (, final, int, holder, ), {, return, holder, &]
[(, holder, ,, value, ), ;, }, public, int, clear, (, final, int, holder, ), {, return, holder, &, ~]
[holder, ), {, return, holder, &, ~, _mask, ;, }, public, short, clearShort, (, final, short, holder, ), {, return]
[return, holder, &, ~, _mask, ;, }, public, short, clearShort, (, final, short, holder, ), {, return, (, short, )]
[&, ~, _mask, ;, }, public, short, clearShort, (, final, short, holder, ), {, return, (, short, ), clear, (]
[return, (, short, ), clear, (, holder, ), ;, }, public, byte, clearByte, (, final, byte, holder, ), {, return]
[), clear, (, holder, ), ;, }, public, byte, clearByte, (, final, byte, holder, ), {, return, (, byte, )]
[(, holder, ), ;, }, public, byte, clearByte, (, final, byte, holder, ), {, return, (, byte, ), clear, (]
[return, (, byte, ), clear, (, holder, ), ;, }, public, int, set, (, final, int, holder, ), {, return]
[return, (, byte, ), clear, (, holder, ), ;, }, public, int, set, (, final, int, holder, ), {, return]
[byte, ), clear, (, holder, ), ;, }, public, int, set, (, final, int, holder, ), {, return, holder, |]
[int, holder, ), {, return, holder, |, _mask, ;, }, public, short, setShort, (, final, short, holder, ), {, return]
[{, return, holder, |, _mask, ;, }, public, short, setShort, (, final, short, holder, ), {, return, (, short, )]
[holder, |, _mask, ;, }, public, short, setShort, (, final, short, holder, ), {, return, (, short, ), set, (]
[return, (, short, ), set, (, holder, ), ;, }, public, byte, setByte, (, final, byte, holder, ), {, return]
[), set, (, holder, ), ;, }, public, byte, setByte, (, final, byte, holder, ), {, return, (, byte, )]
[(, holder, ), ;, }, public, byte, setByte, (, final, byte, holder, ), {, return, (, byte, ), set, (]
[set, (, holder, ), ;, }, public, int, setBoolean, (, final, int, holder, ,, final, boolean, flag, ), {, return]
[set, (, holder, ), ;, }, public, int, setBoolean, (, final, int, holder, ,, final, boolean, flag, ), {, return]
[holder, ), ;, }, public, int, setBoolean, (, final, int, holder, ,, final, boolean, flag, ), {, return, flag, ?]
[;, }, public, int, setBoolean, (, final, int, holder, ,, final, boolean, flag, ), {, return, flag, ?, set, (]
[int, setBoolean, (, final, int, holder, ,, final, boolean, flag, ), {, return, flag, ?, set, (, holder, ), :]
[(, final, int, holder, ,, final, boolean, flag, ), {, return, flag, ?, set, (, holder, ), :, clear, (]
[clear, (, holder, ), ;, }, public, short, setShortBoolean, (, final, short, holder, ,, final, boolean, flag, ), {, return]
[clear, (, holder, ), ;, }, public, short, setShortBoolean, (, final, short, holder, ,, final, boolean, flag, ), {, return]
[holder, ), ;, }, public, short, setShortBoolean, (, final, short, holder, ,, final, boolean, flag, ), {, return, flag, ?]
[;, }, public, short, setShortBoolean, (, final, short, holder, ,, final, boolean, flag, ), {, return, flag, ?, setShort, (]
[short, setShortBoolean, (, final, short, holder, ,, final, boolean, flag, ), {, return, flag, ?, setShort, (, holder, ), :]
[(, final, short, holder, ,, final, boolean, flag, ), {, return, flag, ?, setShort, (, holder, ), :, clearShort, (]
[clearShort, (, holder, ), ;, }, public, byte, setByteBoolean, (, final, byte, holder, ,, final, boolean, flag, ), {, return]
[clearShort, (, holder, ), ;, }, public, byte, setByteBoolean, (, final, byte, holder, ,, final, boolean, flag, ), {, return]
[holder, ), ;, }, public, byte, setByteBoolean, (, final, byte, holder, ,, final, boolean, flag, ), {, return, flag, ?]
[;, }, public, byte, setByteBoolean, (, final, byte, holder, ,, final, boolean, flag, ), {, return, flag, ?, setByte, (]
[byte, setByteBoolean, (, final, byte, holder, ,, final, boolean, flag, ), {, return, flag, ?, setByte, (, holder, ), :]
[(, final, byte, holder, ,, final, boolean, flag, ), {, return, flag, ?, setByte, (, holder, ), :, clearByte, (]
