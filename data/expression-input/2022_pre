[., VerificationAwareInvocation, ;, public, class, ScenarioPrinter, {, public, String, print, (, List, <, VerificationAwareInvocation, >, invocations, ), {, if, (]
[., VerificationAwareInvocation, ;, public, class, ScenarioPrinter, {, public, String, print, (, List, <, VerificationAwareInvocation, >, invocations, ), {, if, (]
[., VerificationAwareInvocation, ;, public, class, ScenarioPrinter, {, public, String, print, (, List, <, VerificationAwareInvocation, >, invocations, ), {, if, (]
[{, public, String, print, (, List, <, VerificationAwareInvocation, >, invocations, ), {, if, (, invocations, ., size, (, ), ==]
[(, List, <, VerificationAwareInvocation, >, invocations, ), {, if, (, invocations, ., size, (, ), ==, 1, ), {, return]
[), {, if, (, invocations, ., size, (, ), ==, 1, ), {, return, "Actually, above is the only interaction with this mock.", ;, }, StringBuilder, sb, =]
[(, invocations, ., size, (, ), ==, 1, ), {, return, "Actually, above is the only interaction with this mock.", ;, }, StringBuilder, sb, =, new, StringBuilder, (]
[(, invocations, ., size, (, ), ==, 1, ), {, return, "Actually, above is the only interaction with this mock.", ;, }, StringBuilder, sb, =, new, StringBuilder, (]
[., size, (, ), ==, 1, ), {, return, "Actually, above is the only interaction with this mock.", ;, }, StringBuilder, sb, =, new, StringBuilder, (, "***\n", +]
[), {, return, "Actually, above is the only interaction with this mock.", ;, }, StringBuilder, sb, =, new, StringBuilder, (, "***\n", +, "For your reference, here is the list of all invocations ([?] - means unverified).\n", ), ;, int, counter, =]
[sb, =, new, StringBuilder, (, "***\n", +, "For your reference, here is the list of all invocations ([?] - means unverified).\n", ), ;, int, counter, =, 0, ;, for, (, VerificationAwareInvocation, i, :]
[StringBuilder, (, "***\n", +, "For your reference, here is the list of all invocations ([?] - means unverified).\n", ), ;, int, counter, =, 0, ;, for, (, VerificationAwareInvocation, i, :, invocations, ), {]
[StringBuilder, (, "***\n", +, "For your reference, here is the list of all invocations ([?] - means unverified).\n", ), ;, int, counter, =, 0, ;, for, (, VerificationAwareInvocation, i, :, invocations, ), {]
["For your reference, here is the list of all invocations ([?] - means unverified).\n", ), ;, int, counter, =, 0, ;, for, (, VerificationAwareInvocation, i, :, invocations, ), {, sb, ., append, (]
["For your reference, here is the list of all invocations ([?] - means unverified).\n", ), ;, int, counter, =, 0, ;, for, (, VerificationAwareInvocation, i, :, invocations, ), {, sb, ., append, (]
[), ;, int, counter, =, 0, ;, for, (, VerificationAwareInvocation, i, :, invocations, ), {, sb, ., append, (, ++]
[int, counter, =, 0, ;, for, (, VerificationAwareInvocation, i, :, invocations, ), {, sb, ., append, (, ++, counter, +]
[for, (, VerificationAwareInvocation, i, :, invocations, ), {, sb, ., append, (, ++, counter, +, ". ", ), ;, if, (]
[(, VerificationAwareInvocation, i, :, invocations, ), {, sb, ., append, (, ++, counter, +, ". ", ), ;, if, (, !]
[(, VerificationAwareInvocation, i, :, invocations, ), {, sb, ., append, (, ++, counter, +, ". ", ), ;, if, (, !]
[sb, ., append, (, ++, counter, +, ". ", ), ;, if, (, !, i, ., isVerified, (, ), ), {]
[sb, ., append, (, ++, counter, +, ". ", ), ;, if, (, !, i, ., isVerified, (, ), ), {]
[++, counter, +, ". ", ), ;, if, (, !, i, ., isVerified, (, ), ), {, sb, ., append, (]
[), ;, if, (, !, i, ., isVerified, (, ), ), {, sb, ., append, (, "[?]", ), ;, }]
[), ;, if, (, !, i, ., isVerified, (, ), ), {, sb, ., append, (, "[?]", ), ;, }]
[!, i, ., isVerified, (, ), ), {, sb, ., append, (, "[?]", ), ;, }, sb, ., append, (]
[!, i, ., isVerified, (, ), ), {, sb, ., append, (, "[?]", ), ;, }, sb, ., append, (]
[!, i, ., isVerified, (, ), ), {, sb, ., append, (, "[?]", ), ;, }, sb, ., append, (]
[), {, sb, ., append, (, "[?]", ), ;, }, sb, ., append, (, i, ., getLocation, (, ), +]
[), ;, }, sb, ., append, (, i, ., getLocation, (, ), +, "\n", ), ;, }, String, scenario, =]
[), ;, }, sb, ., append, (, i, ., getLocation, (, ), +, "\n", ), ;, }, String, scenario, =]
[i, ., getLocation, (, ), +, "\n", ), ;, }, String, scenario, =, sb, ., toString, (, ), ;, return]
