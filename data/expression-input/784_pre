[., optimization, ., PointValuePair, ;, @, Deprecated, public, abstract, class, AbstractLinearOptimizer, implements, LinearOptimizer, {, public, static, final, int, DEFAULT_MAX_ITERATIONS, =]
[GoalType, goal, ;, private, boolean, nonNegative, ;, private, int, maxIterations, ;, private, int, iterations, ;, protected, AbstractLinearOptimizer, (, ), {]
[;, private, boolean, nonNegative, ;, private, int, maxIterations, ;, private, int, iterations, ;, protected, AbstractLinearOptimizer, (, ), {, setMaxIterations, (]
[iterations, ;, protected, AbstractLinearOptimizer, (, ), {, setMaxIterations, (, DEFAULT_MAX_ITERATIONS, ), ;, }, protected, boolean, restrictToNonNegative, (, ), {, return]
[), ;, }, protected, boolean, restrictToNonNegative, (, ), {, return, nonNegative, ;, }, protected, GoalType, getGoalType, (, ), {, return]
[nonNegative, ;, }, protected, GoalType, getGoalType, (, ), {, return, goal, ;, }, protected, LinearObjectiveFunction, getFunction, (, ), {, return]
[protected, LinearObjectiveFunction, getFunction, (, ), {, return, function, ;, }, protected, Collection, <, LinearConstraint, >, getConstraints, (, ), {, return]
[protected, LinearObjectiveFunction, getFunction, (, ), {, return, function, ;, }, protected, Collection, <, LinearConstraint, >, getConstraints, (, ), {, return]
[), {, return, function, ;, }, protected, Collection, <, LinearConstraint, >, getConstraints, (, ), {, return, Collections, ., unmodifiableCollection, (]
[(, ), {, return, Collections, ., unmodifiableCollection, (, linearConstraints, ), ;, }, public, void, setMaxIterations, (, int, maxIterations, ), {]
[(, ), {, return, Collections, ., unmodifiableCollection, (, linearConstraints, ), ;, }, public, void, setMaxIterations, (, int, maxIterations, ), {]
[Collections, ., unmodifiableCollection, (, linearConstraints, ), ;, }, public, void, setMaxIterations, (, int, maxIterations, ), {, this, ., maxIterations, =]
[setMaxIterations, (, int, maxIterations, ), {, this, ., maxIterations, =, maxIterations, ;, }, public, int, getMaxIterations, (, ), {, return]
[maxIterations, ;, }, public, int, getMaxIterations, (, ), {, return, maxIterations, ;, }, public, int, getIterations, (, ), {, return]
[public, int, getIterations, (, ), {, return, iterations, ;, }, protected, void, incrementIterationsCounter, (, ), throws, MaxCountExceededException, {, if, (]
[public, int, getIterations, (, ), {, return, iterations, ;, }, protected, void, incrementIterationsCounter, (, ), throws, MaxCountExceededException, {, if, (]
[int, getIterations, (, ), {, return, iterations, ;, }, protected, void, incrementIterationsCounter, (, ), throws, MaxCountExceededException, {, if, (, ++]
[(, ), {, return, iterations, ;, }, protected, void, incrementIterationsCounter, (, ), throws, MaxCountExceededException, {, if, (, ++, iterations, >]
[iterations, ;, }, protected, void, incrementIterationsCounter, (, ), throws, MaxCountExceededException, {, if, (, ++, iterations, >, maxIterations, ), {, throw]
[protected, void, incrementIterationsCounter, (, ), throws, MaxCountExceededException, {, if, (, ++, iterations, >, maxIterations, ), {, throw, new, MaxCountExceededException, (]
[f, ,, final, Collection, <, LinearConstraint, >, constraints, ,, final, GoalType, goalType, ,, final, boolean, restrictToNonNegative, ), throws, MathIllegalStateException, {]
[f, ,, final, Collection, <, LinearConstraint, >, constraints, ,, final, GoalType, goalType, ,, final, boolean, restrictToNonNegative, ), throws, MathIllegalStateException, {]
[<, LinearConstraint, >, constraints, ,, final, GoalType, goalType, ,, final, boolean, restrictToNonNegative, ), throws, MathIllegalStateException, {, this, ., function, =]
[>, constraints, ,, final, GoalType, goalType, ,, final, boolean, restrictToNonNegative, ), throws, MathIllegalStateException, {, this, ., function, =, f, ;]
[>, constraints, ,, final, GoalType, goalType, ,, final, boolean, restrictToNonNegative, ), throws, MathIllegalStateException, {, this, ., function, =, f, ;]
[GoalType, goalType, ,, final, boolean, restrictToNonNegative, ), throws, MathIllegalStateException, {, this, ., function, =, f, ;, this, ., linearConstraints, =]
[,, final, boolean, restrictToNonNegative, ), throws, MathIllegalStateException, {, this, ., function, =, f, ;, this, ., linearConstraints, =, constraints, ;]
[,, final, boolean, restrictToNonNegative, ), throws, MathIllegalStateException, {, this, ., function, =, f, ;, this, ., linearConstraints, =, constraints, ;]
[), throws, MathIllegalStateException, {, this, ., function, =, f, ;, this, ., linearConstraints, =, constraints, ;, this, ., goal, =]
[MathIllegalStateException, {, this, ., function, =, f, ;, this, ., linearConstraints, =, constraints, ;, this, ., goal, =, goalType, ;]
[MathIllegalStateException, {, this, ., function, =, f, ;, this, ., linearConstraints, =, constraints, ;, this, ., goal, =, goalType, ;]
[function, =, f, ;, this, ., linearConstraints, =, constraints, ;, this, ., goal, =, goalType, ;, this, ., nonNegative, =]
[f, ;, this, ., linearConstraints, =, constraints, ;, this, ., goal, =, goalType, ;, this, ., nonNegative, =, restrictToNonNegative, ;]
[this, ., linearConstraints, =, constraints, ;, this, ., goal, =, goalType, ;, this, ., nonNegative, =, restrictToNonNegative, ;, iterations, =]
[=, constraints, ;, this, ., goal, =, goalType, ;, this, ., nonNegative, =, restrictToNonNegative, ;, iterations, =, 0, ;, return]
