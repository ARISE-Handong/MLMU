[import, javax, ., imageio, ., ImageIO, ;, public, class, SunPNGEncoderAdapter, implements, ImageEncoder, {, public, float, getQuality, (, ), {, return]
[return, 0.0f, ;, }, public, void, setQuality, (, float, quality, ), {, }, public, boolean, isEncodingAlpha, (, ), {, return]
[boolean, encodingAlpha, ), {, }, public, byte, [, ], encode, (, BufferedImage, bufferedImage, ), throws, IOException, {, ByteArrayOutputStream, outputStream, =]
[public, byte, [, ], encode, (, BufferedImage, bufferedImage, ), throws, IOException, {, ByteArrayOutputStream, outputStream, =, new, ByteArrayOutputStream, (, ), ;]
[[, ], encode, (, BufferedImage, bufferedImage, ), throws, IOException, {, ByteArrayOutputStream, outputStream, =, new, ByteArrayOutputStream, (, ), ;, encode, (]
[encode, (, BufferedImage, bufferedImage, ), throws, IOException, {, ByteArrayOutputStream, outputStream, =, new, ByteArrayOutputStream, (, ), ;, encode, (, bufferedImage, ,]
[), throws, IOException, {, ByteArrayOutputStream, outputStream, =, new, ByteArrayOutputStream, (, ), ;, encode, (, bufferedImage, ,, outputStream, ), ;, return]
[), throws, IOException, {, ByteArrayOutputStream, outputStream, =, new, ByteArrayOutputStream, (, ), ;, encode, (, bufferedImage, ,, outputStream, ), ;, return]
[toByteArray, (, ), ;, }, public, void, encode, (, BufferedImage, bufferedImage, ,, OutputStream, outputStream, ), throws, IOException, {, if, (]
[toByteArray, (, ), ;, }, public, void, encode, (, BufferedImage, bufferedImage, ,, OutputStream, outputStream, ), throws, IOException, {, if, (]
[), ;, }, public, void, encode, (, BufferedImage, bufferedImage, ,, OutputStream, outputStream, ), throws, IOException, {, if, (, bufferedImage, ==]
[void, encode, (, BufferedImage, bufferedImage, ,, OutputStream, outputStream, ), throws, IOException, {, if, (, bufferedImage, ==, null, ), {, throw]
[BufferedImage, bufferedImage, ,, OutputStream, outputStream, ), throws, IOException, {, if, (, bufferedImage, ==, null, ), {, throw, new, IllegalArgumentException, (]
[throws, IOException, {, if, (, bufferedImage, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'image' argument.", ), ;, }, if, (]
[throws, IOException, {, if, (, bufferedImage, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'image' argument.", ), ;, }, if, (]
[{, if, (, bufferedImage, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'image' argument.", ), ;, }, if, (, outputStream, ==]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'image' argument.", ), ;, }, if, (, outputStream, ==, null, ), {, throw]
[{, throw, new, IllegalArgumentException, (, "Null 'image' argument.", ), ;, }, if, (, outputStream, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, "Null 'image' argument.", ), ;, }, if, (, outputStream, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'outputStream' argument.", ), ;, }]
[(, "Null 'image' argument.", ), ;, }, if, (, outputStream, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'outputStream' argument.", ), ;, }]
[}, if, (, outputStream, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'outputStream' argument.", ), ;, }, ImageIO, ., write, (]
[(, outputStream, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'outputStream' argument.", ), ;, }, ImageIO, ., write, (, bufferedImage, ,]
[(, outputStream, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'outputStream' argument.", ), ;, }, ImageIO, ., write, (, bufferedImage, ,]
[), {, throw, new, IllegalArgumentException, (, "Null 'outputStream' argument.", ), ;, }, ImageIO, ., write, (, bufferedImage, ,, ImageFormat, ., PNG, ,]
