[jfree, ., data, ., pie, ., PieDataset, ;, public, class, AbstractPieItemLabelGenerator, implements, Serializable, {, private, static, final, long, serialVersionUID, =]
[;, private, NumberFormat, percentFormat, ;, protected, AbstractPieItemLabelGenerator, (, String, labelFormat, ,, NumberFormat, numberFormat, ,, NumberFormat, percentFormat, ), {, if, (]
[;, private, NumberFormat, percentFormat, ;, protected, AbstractPieItemLabelGenerator, (, String, labelFormat, ,, NumberFormat, numberFormat, ,, NumberFormat, percentFormat, ), {, if, (]
[NumberFormat, percentFormat, ;, protected, AbstractPieItemLabelGenerator, (, String, labelFormat, ,, NumberFormat, numberFormat, ,, NumberFormat, percentFormat, ), {, if, (, labelFormat, ==]
[AbstractPieItemLabelGenerator, (, String, labelFormat, ,, NumberFormat, numberFormat, ,, NumberFormat, percentFormat, ), {, if, (, labelFormat, ==, null, ), {, throw]
[labelFormat, ,, NumberFormat, numberFormat, ,, NumberFormat, percentFormat, ), {, if, (, labelFormat, ==, null, ), {, throw, new, IllegalArgumentException, (]
[percentFormat, ), {, if, (, labelFormat, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'labelFormat' argument.", ), ;, }, if, (]
[percentFormat, ), {, if, (, labelFormat, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'labelFormat' argument.", ), ;, }, if, (]
[{, if, (, labelFormat, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'labelFormat' argument.", ), ;, }, if, (, numberFormat, ==]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'labelFormat' argument.", ), ;, }, if, (, numberFormat, ==, null, ), {, throw]
[{, throw, new, IllegalArgumentException, (, "Null 'labelFormat' argument.", ), ;, }, if, (, numberFormat, ==, null, ), {, throw, new, IllegalArgumentException, (]
[), ;, }, if, (, numberFormat, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'numberFormat' argument.", ), ;, }, if, (]
[), ;, }, if, (, numberFormat, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'numberFormat' argument.", ), ;, }, if, (]
[}, if, (, numberFormat, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'numberFormat' argument.", ), ;, }, if, (, percentFormat, ==]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'numberFormat' argument.", ), ;, }, if, (, percentFormat, ==, null, ), {, throw]
[{, throw, new, IllegalArgumentException, (, "Null 'numberFormat' argument.", ), ;, }, if, (, percentFormat, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, "Null 'numberFormat' argument.", ), ;, }, if, (, percentFormat, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'percentFormat' argument.", ), ;, }]
[(, "Null 'numberFormat' argument.", ), ;, }, if, (, percentFormat, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'percentFormat' argument.", ), ;, }]
[}, if, (, percentFormat, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'percentFormat' argument.", ), ;, }, this, ., labelFormat, =]
[(, percentFormat, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'percentFormat' argument.", ), ;, }, this, ., labelFormat, =, labelFormat, ;]
[(, percentFormat, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'percentFormat' argument.", ), ;, }, this, ., labelFormat, =, labelFormat, ;]
[), {, throw, new, IllegalArgumentException, (, "Null 'percentFormat' argument.", ), ;, }, this, ., labelFormat, =, labelFormat, ;, this, ., numberFormat, =]
[throw, new, IllegalArgumentException, (, "Null 'percentFormat' argument.", ), ;, }, this, ., labelFormat, =, labelFormat, ;, this, ., numberFormat, =, numberFormat, ;]
[throw, new, IllegalArgumentException, (, "Null 'percentFormat' argument.", ), ;, }, this, ., labelFormat, =, labelFormat, ;, this, ., numberFormat, =, numberFormat, ;]
["Null 'percentFormat' argument.", ), ;, }, this, ., labelFormat, =, labelFormat, ;, this, ., numberFormat, =, numberFormat, ;, this, ., percentFormat, =]
[this, ., numberFormat, =, numberFormat, ;, this, ., percentFormat, =, percentFormat, ;, }, public, String, getLabelFormat, (, ), {, return]
[this, ., numberFormat, =, numberFormat, ;, this, ., percentFormat, =, percentFormat, ;, }, public, String, getLabelFormat, (, ), {, return]
[}, public, String, getLabelFormat, (, ), {, return, this, ., labelFormat, ;, }, public, NumberFormat, getNumberFormat, (, ), {, return]
[}, public, String, getLabelFormat, (, ), {, return, this, ., labelFormat, ;, }, public, NumberFormat, getNumberFormat, (, ), {, return]
[}, public, NumberFormat, getNumberFormat, (, ), {, return, this, ., numberFormat, ;, }, public, NumberFormat, getPercentFormat, (, ), {, return]
[}, public, NumberFormat, getNumberFormat, (, ), {, return, this, ., numberFormat, ;, }, public, NumberFormat, getPercentFormat, (, ), {, return]
[;, }, protected, Object, [, ], createItemArray, (, PieDataset, dataset, ,, Comparable, key, ), {, Object, [, ], result, =]
[Object, [, ], createItemArray, (, PieDataset, dataset, ,, Comparable, key, ), {, Object, [, ], result, =, new, Object, []
[dataset, ,, Comparable, key, ), {, Object, [, ], result, =, new, Object, [, 4, ], ;, double, total, =]
[dataset, ,, Comparable, key, ), {, Object, [, ], result, =, new, Object, [, 4, ], ;, double, total, =]
[), {, Object, [, ], result, =, new, Object, [, 4, ], ;, double, total, =, DatasetUtilities, ., calculatePieDatasetTotal, (]
[[, ], result, =, new, Object, [, 4, ], ;, double, total, =, DatasetUtilities, ., calculatePieDatasetTotal, (, dataset, ), ;]
[[, ], result, =, new, Object, [, 4, ], ;, double, total, =, DatasetUtilities, ., calculatePieDatasetTotal, (, dataset, ), ;]
[result, =, new, Object, [, 4, ], ;, double, total, =, DatasetUtilities, ., calculatePieDatasetTotal, (, dataset, ), ;, result, []
[Object, [, 4, ], ;, double, total, =, DatasetUtilities, ., calculatePieDatasetTotal, (, dataset, ), ;, result, [, 0, ], =]
[Object, [, 4, ], ;, double, total, =, DatasetUtilities, ., calculatePieDatasetTotal, (, dataset, ), ;, result, [, 0, ], =]
[., calculatePieDatasetTotal, (, dataset, ), ;, result, [, 0, ], =, key, ., toString, (, ), ;, Number, value, =]
[., calculatePieDatasetTotal, (, dataset, ), ;, result, [, 0, ], =, key, ., toString, (, ), ;, Number, value, =]
[), ;, result, [, 0, ], =, key, ., toString, (, ), ;, Number, value, =, dataset, ., getValue, (]
[], =, key, ., toString, (, ), ;, Number, value, =, dataset, ., getValue, (, key, ), ;, if, (]
[], =, key, ., toString, (, ), ;, Number, value, =, dataset, ., getValue, (, key, ), ;, if, (]
[key, ., toString, (, ), ;, Number, value, =, dataset, ., getValue, (, key, ), ;, if, (, value, !=]
[(, ), ;, Number, value, =, dataset, ., getValue, (, key, ), ;, if, (, value, !=, null, ), {]
[(, ), ;, Number, value, =, dataset, ., getValue, (, key, ), ;, if, (, value, !=, null, ), {]
[;, Number, value, =, dataset, ., getValue, (, key, ), ;, if, (, value, !=, null, ), {, result, []
[=, dataset, ., getValue, (, key, ), ;, if, (, value, !=, null, ), {, result, [, 1, ], =]
[=, dataset, ., getValue, (, key, ), ;, if, (, value, !=, null, ), {, result, [, 1, ], =]
[=, dataset, ., getValue, (, key, ), ;, if, (, value, !=, null, ), {, result, [, 1, ], =]
[), ;, if, (, value, !=, null, ), {, result, [, 1, ], =, this, ., numberFormat, ., format, (]
[null, ), {, result, [, 1, ], =, this, ., numberFormat, ., format, (, value, ), ;, }, else, {]
[null, ), {, result, [, 1, ], =, this, ., numberFormat, ., format, (, value, ), ;, }, else, {]
[{, result, [, 1, ], =, this, ., numberFormat, ., format, (, value, ), ;, }, else, {, result, []
[1, ], =, this, ., numberFormat, ., format, (, value, ), ;, }, else, {, result, [, 1, ], =]
[., format, (, value, ), ;, }, else, {, result, [, 1, ], =, "null", ;, }, double, percent, =]
[), ;, }, else, {, result, [, 1, ], =, "null", ;, }, double, percent, =, 0.0, ;, if, (]
[), ;, }, else, {, result, [, 1, ], =, "null", ;, }, double, percent, =, 0.0, ;, if, (]
[}, else, {, result, [, 1, ], =, "null", ;, }, double, percent, =, 0.0, ;, if, (, value, !=]
[], =, "null", ;, }, double, percent, =, 0.0, ;, if, (, value, !=, null, ), {, double, v, =]
[], =, "null", ;, }, double, percent, =, 0.0, ;, if, (, value, !=, null, ), {, double, v, =]
[0.0, ;, if, (, value, !=, null, ), {, double, v, =, value, ., doubleValue, (, ), ;, if, (]
[0.0, ;, if, (, value, !=, null, ), {, double, v, =, value, ., doubleValue, (, ), ;, if, (]
[if, (, value, !=, null, ), {, double, v, =, value, ., doubleValue, (, ), ;, if, (, v, >]
[!=, null, ), {, double, v, =, value, ., doubleValue, (, ), ;, if, (, v, >, 0.0, ), {]
[), {, double, v, =, value, ., doubleValue, (, ), ;, if, (, v, >, 0.0, ), {, percent, =]
[), {, double, v, =, value, ., doubleValue, (, ), ;, if, (, v, >, 0.0, ), {, percent, =]
[double, v, =, value, ., doubleValue, (, ), ;, if, (, v, >, 0.0, ), {, percent, =, v, /]
[., doubleValue, (, ), ;, if, (, v, >, 0.0, ), {, percent, =, v, /, total, ;, }, }]
[., doubleValue, (, ), ;, if, (, v, >, 0.0, ), {, percent, =, v, /, total, ;, }, }]
[(, ), ;, if, (, v, >, 0.0, ), {, percent, =, v, /, total, ;, }, }, result, []
[if, (, v, >, 0.0, ), {, percent, =, v, /, total, ;, }, }, result, [, 2, ], =]
[if, (, v, >, 0.0, ), {, percent, =, v, /, total, ;, }, }, result, [, 2, ], =]
[if, (, v, >, 0.0, ), {, percent, =, v, /, total, ;, }, }, result, [, 2, ], =]
[{, percent, =, v, /, total, ;, }, }, result, [, 2, ], =, this, ., percentFormat, ., format, (]
[v, /, total, ;, }, }, result, [, 2, ], =, this, ., percentFormat, ., format, (, percent, ), ;]
[v, /, total, ;, }, }, result, [, 2, ], =, this, ., percentFormat, ., format, (, percent, ), ;]
[total, ;, }, }, result, [, 2, ], =, this, ., percentFormat, ., format, (, percent, ), ;, result, []
[}, result, [, 2, ], =, this, ., percentFormat, ., format, (, percent, ), ;, result, [, 3, ], =]
[}, result, [, 2, ], =, this, ., percentFormat, ., format, (, percent, ), ;, result, [, 3, ], =]
[}, result, [, 2, ], =, this, ., percentFormat, ., format, (, percent, ), ;, result, [, 3, ], =]
[this, ., percentFormat, ., format, (, percent, ), ;, result, [, 3, ], =, this, ., numberFormat, ., format, (]
[format, (, percent, ), ;, result, [, 3, ], =, this, ., numberFormat, ., format, (, total, ), ;, return]
[), ;, return, result, ;, }, protected, String, generateSectionLabel, (, PieDataset, dataset, ,, Comparable, key, ), {, String, result, =]
[;, }, protected, String, generateSectionLabel, (, PieDataset, dataset, ,, Comparable, key, ), {, String, result, =, null, ;, if, (]
[;, }, protected, String, generateSectionLabel, (, PieDataset, dataset, ,, Comparable, key, ), {, String, result, =, null, ;, if, (]
[protected, String, generateSectionLabel, (, PieDataset, dataset, ,, Comparable, key, ), {, String, result, =, null, ;, if, (, dataset, !=]
[key, ), {, String, result, =, null, ;, if, (, dataset, !=, null, ), {, Object, [, ], items, =]
[{, String, result, =, null, ;, if, (, dataset, !=, null, ), {, Object, [, ], items, =, createItemArray, (]
[result, =, null, ;, if, (, dataset, !=, null, ), {, Object, [, ], items, =, createItemArray, (, dataset, ,]
[;, if, (, dataset, !=, null, ), {, Object, [, ], items, =, createItemArray, (, dataset, ,, key, ), ;]
[(, dataset, !=, null, ), {, Object, [, ], items, =, createItemArray, (, dataset, ,, key, ), ;, result, =]
[(, dataset, !=, null, ), {, Object, [, ], items, =, createItemArray, (, dataset, ,, key, ), ;, result, =]
[), {, Object, [, ], items, =, createItemArray, (, dataset, ,, key, ), ;, result, =, MessageFormat, ., format, (]
[), {, Object, [, ], items, =, createItemArray, (, dataset, ,, key, ), ;, result, =, MessageFormat, ., format, (]
[], items, =, createItemArray, (, dataset, ,, key, ), ;, result, =, MessageFormat, ., format, (, this, ., labelFormat, ,]
[dataset, ,, key, ), ;, result, =, MessageFormat, ., format, (, this, ., labelFormat, ,, items, ), ;, }, return]
[labelFormat, ,, items, ), ;, }, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[labelFormat, ,, items, ), ;, }, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[items, ), ;, }, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, AbstractPieItemLabelGenerator, ), ), {, return]
[true, ;, }, if, (, !, (, obj, instanceof, AbstractPieItemLabelGenerator, ), ), {, return, false, ;, }, AbstractPieItemLabelGenerator, that, =]
[if, (, !, (, obj, instanceof, AbstractPieItemLabelGenerator, ), ), {, return, false, ;, }, AbstractPieItemLabelGenerator, that, =, (, AbstractPieItemLabelGenerator, )]
[obj, instanceof, AbstractPieItemLabelGenerator, ), ), {, return, false, ;, }, AbstractPieItemLabelGenerator, that, =, (, AbstractPieItemLabelGenerator, ), obj, ;, if, (]
[instanceof, AbstractPieItemLabelGenerator, ), ), {, return, false, ;, }, AbstractPieItemLabelGenerator, that, =, (, AbstractPieItemLabelGenerator, ), obj, ;, if, (, !]
[instanceof, AbstractPieItemLabelGenerator, ), ), {, return, false, ;, }, AbstractPieItemLabelGenerator, that, =, (, AbstractPieItemLabelGenerator, ), obj, ;, if, (, !]
[instanceof, AbstractPieItemLabelGenerator, ), ), {, return, false, ;, }, AbstractPieItemLabelGenerator, that, =, (, AbstractPieItemLabelGenerator, ), obj, ;, if, (, !]
[false, ;, }, AbstractPieItemLabelGenerator, that, =, (, AbstractPieItemLabelGenerator, ), obj, ;, if, (, !, this, ., labelFormat, ., equals, (]
[false, ;, }, AbstractPieItemLabelGenerator, that, =, (, AbstractPieItemLabelGenerator, ), obj, ;, if, (, !, this, ., labelFormat, ., equals, (]
[AbstractPieItemLabelGenerator, ), obj, ;, if, (, !, this, ., labelFormat, ., equals, (, that, ., labelFormat, ), ), {, return]
[(, !, this, ., labelFormat, ., equals, (, that, ., labelFormat, ), ), {, return, false, ;, }, if, (]
[!, this, ., labelFormat, ., equals, (, that, ., labelFormat, ), ), {, return, false, ;, }, if, (, !]
[!, this, ., labelFormat, ., equals, (, that, ., labelFormat, ), ), {, return, false, ;, }, if, (, !]
[!, this, ., labelFormat, ., equals, (, that, ., labelFormat, ), ), {, return, false, ;, }, if, (, !]
[(, that, ., labelFormat, ), ), {, return, false, ;, }, if, (, !, this, ., numberFormat, ., equals, (]
[(, that, ., labelFormat, ), ), {, return, false, ;, }, if, (, !, this, ., numberFormat, ., equals, (]
[return, false, ;, }, if, (, !, this, ., numberFormat, ., equals, (, that, ., numberFormat, ), ), {, return]
[(, !, this, ., numberFormat, ., equals, (, that, ., numberFormat, ), ), {, return, false, ;, }, if, (]
[!, this, ., numberFormat, ., equals, (, that, ., numberFormat, ), ), {, return, false, ;, }, if, (, !]
[!, this, ., numberFormat, ., equals, (, that, ., numberFormat, ), ), {, return, false, ;, }, if, (, !]
[!, this, ., numberFormat, ., equals, (, that, ., numberFormat, ), ), {, return, false, ;, }, if, (, !]
[(, that, ., numberFormat, ), ), {, return, false, ;, }, if, (, !, this, ., percentFormat, ., equals, (]
[(, that, ., numberFormat, ), ), {, return, false, ;, }, if, (, !, this, ., percentFormat, ., equals, (]
[return, false, ;, }, if, (, !, this, ., percentFormat, ., equals, (, that, ., percentFormat, ), ), {, return]
[if, (, !, this, ., percentFormat, ., equals, (, that, ., percentFormat, ), ), {, return, false, ;, }, return]
[), ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, =]
[{, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, =, 127, ;]
[false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, =, 127, ;, result, =]
[false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, =, 127, ;, result, =]
[true, ;, }, public, int, hashCode, (, ), {, int, result, =, 127, ;, result, =, HashUtilities, ., hashCode, (]
[}, public, int, hashCode, (, ), {, int, result, =, 127, ;, result, =, HashUtilities, ., hashCode, (, result, ,]
[}, public, int, hashCode, (, ), {, int, result, =, 127, ;, result, =, HashUtilities, ., hashCode, (, result, ,]
[), {, int, result, =, 127, ;, result, =, HashUtilities, ., hashCode, (, result, ,, this, ., labelFormat, ), ;]
[int, result, =, 127, ;, result, =, HashUtilities, ., hashCode, (, result, ,, this, ., labelFormat, ), ;, result, =]
[int, result, =, 127, ;, result, =, HashUtilities, ., hashCode, (, result, ,, this, ., labelFormat, ), ;, result, =]
[;, result, =, HashUtilities, ., hashCode, (, result, ,, this, ., labelFormat, ), ;, result, =, HashUtilities, ., hashCode, (]
[=, HashUtilities, ., hashCode, (, result, ,, this, ., labelFormat, ), ;, result, =, HashUtilities, ., hashCode, (, result, ,]
[=, HashUtilities, ., hashCode, (, result, ,, this, ., labelFormat, ), ;, result, =, HashUtilities, ., hashCode, (, result, ,]
[result, ,, this, ., labelFormat, ), ;, result, =, HashUtilities, ., hashCode, (, result, ,, this, ., numberFormat, ), ;]
[this, ., labelFormat, ), ;, result, =, HashUtilities, ., hashCode, (, result, ,, this, ., numberFormat, ), ;, result, =]
[this, ., labelFormat, ), ;, result, =, HashUtilities, ., hashCode, (, result, ,, this, ., numberFormat, ), ;, result, =]
[;, result, =, HashUtilities, ., hashCode, (, result, ,, this, ., numberFormat, ), ;, result, =, HashUtilities, ., hashCode, (]
[=, HashUtilities, ., hashCode, (, result, ,, this, ., numberFormat, ), ;, result, =, HashUtilities, ., hashCode, (, result, ,]
[=, HashUtilities, ., hashCode, (, result, ,, this, ., numberFormat, ), ;, result, =, HashUtilities, ., hashCode, (, result, ,]
[,, this, ., numberFormat, ), ;, result, =, HashUtilities, ., hashCode, (, result, ,, this, ., percentFormat, ), ;, return]
[this, ., percentFormat, ), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, AbstractPieItemLabelGenerator, clone, =]
[), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, AbstractPieItemLabelGenerator, clone, =, (, AbstractPieItemLabelGenerator, )]
[), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, AbstractPieItemLabelGenerator, clone, =, (, AbstractPieItemLabelGenerator, )]
[clone, (, ), throws, CloneNotSupportedException, {, AbstractPieItemLabelGenerator, clone, =, (, AbstractPieItemLabelGenerator, ), super, ., clone, (, ), ;, if, (]
[clone, (, ), throws, CloneNotSupportedException, {, AbstractPieItemLabelGenerator, clone, =, (, AbstractPieItemLabelGenerator, ), super, ., clone, (, ), ;, if, (]
[clone, (, ), throws, CloneNotSupportedException, {, AbstractPieItemLabelGenerator, clone, =, (, AbstractPieItemLabelGenerator, ), super, ., clone, (, ), ;, if, (]
[CloneNotSupportedException, {, AbstractPieItemLabelGenerator, clone, =, (, AbstractPieItemLabelGenerator, ), super, ., clone, (, ), ;, if, (, this, ., numberFormat, !=]
[clone, =, (, AbstractPieItemLabelGenerator, ), super, ., clone, (, ), ;, if, (, this, ., numberFormat, !=, null, ), {]
[clone, =, (, AbstractPieItemLabelGenerator, ), super, ., clone, (, ), ;, if, (, this, ., numberFormat, !=, null, ), {]
[), super, ., clone, (, ), ;, if, (, this, ., numberFormat, !=, null, ), {, clone, ., numberFormat, =]
[clone, (, ), ;, if, (, this, ., numberFormat, !=, null, ), {, clone, ., numberFormat, =, (, NumberFormat, )]
[clone, (, ), ;, if, (, this, ., numberFormat, !=, null, ), {, clone, ., numberFormat, =, (, NumberFormat, )]
[clone, (, ), ;, if, (, this, ., numberFormat, !=, null, ), {, clone, ., numberFormat, =, (, NumberFormat, )]
[), {, clone, ., numberFormat, =, (, NumberFormat, ), this, ., numberFormat, ., clone, (, ), ;, }, if, (]
[), {, clone, ., numberFormat, =, (, NumberFormat, ), this, ., numberFormat, ., clone, (, ), ;, }, if, (]
[), {, clone, ., numberFormat, =, (, NumberFormat, ), this, ., numberFormat, ., clone, (, ), ;, }, if, (]
[numberFormat, =, (, NumberFormat, ), this, ., numberFormat, ., clone, (, ), ;, }, if, (, this, ., percentFormat, !=]
[NumberFormat, ), this, ., numberFormat, ., clone, (, ), ;, }, if, (, this, ., percentFormat, !=, null, ), {]
[NumberFormat, ), this, ., numberFormat, ., clone, (, ), ;, }, if, (, this, ., percentFormat, !=, null, ), {]
[numberFormat, ., clone, (, ), ;, }, if, (, this, ., percentFormat, !=, null, ), {, clone, ., percentFormat, =]
[(, ), ;, }, if, (, this, ., percentFormat, !=, null, ), {, clone, ., percentFormat, =, (, NumberFormat, )]
[(, ), ;, }, if, (, this, ., percentFormat, !=, null, ), {, clone, ., percentFormat, =, (, NumberFormat, )]
[(, ), ;, }, if, (, this, ., percentFormat, !=, null, ), {, clone, ., percentFormat, =, (, NumberFormat, )]
[null, ), {, clone, ., percentFormat, =, (, NumberFormat, ), this, ., percentFormat, ., clone, (, ), ;, }, return]
