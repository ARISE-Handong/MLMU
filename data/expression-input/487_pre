[class, ModificationVisitor, implements, Visitor, <, JSType, >, {, private, final, JSTypeRegistry, registry, ;, public, ModificationVisitor, (, JSTypeRegistry, registry, ), {]
[class, ModificationVisitor, implements, Visitor, <, JSType, >, {, private, final, JSTypeRegistry, registry, ;, public, ModificationVisitor, (, JSTypeRegistry, registry, ), {]
[<, JSType, >, {, private, final, JSTypeRegistry, registry, ;, public, ModificationVisitor, (, JSTypeRegistry, registry, ), {, this, ., registry, =]
[JSTypeRegistry, registry, ), {, this, ., registry, =, registry, ;, }, @, Override, public, JSType, caseNoType, (, ), {, return]
[), {, this, ., registry, =, registry, ;, }, @, Override, public, JSType, caseNoType, (, ), {, return, getNativeType, (]
[), {, this, ., registry, =, registry, ;, }, @, Override, public, JSType, caseNoType, (, ), {, return, getNativeType, (]
[return, getNativeType, (, JSTypeNative, ., NO_TYPE, ), ;, }, @, Override, public, JSType, caseEnumElementType, (, EnumElementType, type, ), {, return]
[JSType, caseEnumElementType, (, EnumElementType, type, ), {, return, type, ;, }, @, Override, public, JSType, caseAllType, (, ), {, return]
[(, EnumElementType, type, ), {, return, type, ;, }, @, Override, public, JSType, caseAllType, (, ), {, return, getNativeType, (]
[(, EnumElementType, type, ), {, return, type, ;, }, @, Override, public, JSType, caseAllType, (, ), {, return, getNativeType, (]
[), {, return, getNativeType, (, JSTypeNative, ., ALL_TYPE, ), ;, }, @, Override, public, JSType, caseBooleanType, (, ), {, return]
[return, getNativeType, (, JSTypeNative, ., ALL_TYPE, ), ;, }, @, Override, public, JSType, caseBooleanType, (, ), {, return, getNativeType, (]
[return, getNativeType, (, JSTypeNative, ., ALL_TYPE, ), ;, }, @, Override, public, JSType, caseBooleanType, (, ), {, return, getNativeType, (]
[), {, return, getNativeType, (, JSTypeNative, ., BOOLEAN_TYPE, ), ;, }, @, Override, public, JSType, caseNoObjectType, (, ), {, return]
[return, getNativeType, (, JSTypeNative, ., BOOLEAN_TYPE, ), ;, }, @, Override, public, JSType, caseNoObjectType, (, ), {, return, getNativeType, (]
[return, getNativeType, (, JSTypeNative, ., BOOLEAN_TYPE, ), ;, }, @, Override, public, JSType, caseNoObjectType, (, ), {, return, getNativeType, (]
[getNativeType, (, JSTypeNative, ., NO_OBJECT_TYPE, ), ;, }, @, Override, public, JSType, caseFunctionType, (, FunctionType, type, ), {, if, (]
[JSTypeNative, ., NO_OBJECT_TYPE, ), ;, }, @, Override, public, JSType, caseFunctionType, (, FunctionType, type, ), {, if, (, isNativeFunctionType, (]
[}, @, Override, public, JSType, caseFunctionType, (, FunctionType, type, ), {, if, (, isNativeFunctionType, (, type, ), ), {, return]
[caseFunctionType, (, FunctionType, type, ), {, if, (, isNativeFunctionType, (, type, ), ), {, return, type, ;, }, if, (]
[(, FunctionType, type, ), {, if, (, isNativeFunctionType, (, type, ), ), {, return, type, ;, }, if, (, !]
[(, FunctionType, type, ), {, if, (, isNativeFunctionType, (, type, ), ), {, return, type, ;, }, if, (, !]
[(, type, ), ), {, return, type, ;, }, if, (, !, type, ., isOrdinaryFunction, (, ), ), {, return]
[type, ;, }, if, (, !, type, ., isOrdinaryFunction, (, ), ), {, return, type, ;, }, boolean, changed, =]
[!, type, ., isOrdinaryFunction, (, ), ), {, return, type, ;, }, boolean, changed, =, false, ;, JSType, beforeThis, =]
[!, type, ., isOrdinaryFunction, (, ), ), {, return, type, ;, }, boolean, changed, =, false, ;, JSType, beforeThis, =]
[type, ;, }, boolean, changed, =, false, ;, JSType, beforeThis, =, type, ., getTypeOfThis, (, ), ;, JSType, afterThis, =]
[}, boolean, changed, =, false, ;, JSType, beforeThis, =, type, ., getTypeOfThis, (, ), ;, JSType, afterThis, =, coerseToThisType, (]
[}, boolean, changed, =, false, ;, JSType, beforeThis, =, type, ., getTypeOfThis, (, ), ;, JSType, afterThis, =, coerseToThisType, (]
[false, ;, JSType, beforeThis, =, type, ., getTypeOfThis, (, ), ;, JSType, afterThis, =, coerseToThisType, (, beforeThis, ., visit, (]
[., getTypeOfThis, (, ), ;, JSType, afterThis, =, coerseToThisType, (, beforeThis, ., visit, (, this, ), ), ;, if, (]
[., getTypeOfThis, (, ), ;, JSType, afterThis, =, coerseToThisType, (, beforeThis, ., visit, (, this, ), ), ;, if, (]
[(, ), ;, JSType, afterThis, =, coerseToThisType, (, beforeThis, ., visit, (, this, ), ), ;, if, (, beforeThis, !=]
[JSType, afterThis, =, coerseToThisType, (, beforeThis, ., visit, (, this, ), ), ;, if, (, beforeThis, !=, afterThis, ), {]
[=, coerseToThisType, (, beforeThis, ., visit, (, this, ), ), ;, if, (, beforeThis, !=, afterThis, ), {, changed, =]
[(, this, ), ), ;, if, (, beforeThis, !=, afterThis, ), {, changed, =, true, ;, }, JSType, beforeReturn, =]
[(, this, ), ), ;, if, (, beforeThis, !=, afterThis, ), {, changed, =, true, ;, }, JSType, beforeReturn, =]
[afterThis, ), {, changed, =, true, ;, }, JSType, beforeReturn, =, type, ., getReturnType, (, ), ;, JSType, afterReturn, =]
[afterThis, ), {, changed, =, true, ;, }, JSType, beforeReturn, =, type, ., getReturnType, (, ), ;, JSType, afterReturn, =]
[=, true, ;, }, JSType, beforeReturn, =, type, ., getReturnType, (, ), ;, JSType, afterReturn, =, beforeReturn, ., visit, (]
[beforeReturn, =, type, ., getReturnType, (, ), ;, JSType, afterReturn, =, beforeReturn, ., visit, (, this, ), ;, if, (]
[beforeReturn, =, type, ., getReturnType, (, ), ;, JSType, afterReturn, =, beforeReturn, ., visit, (, this, ), ;, if, (]
[type, ., getReturnType, (, ), ;, JSType, afterReturn, =, beforeReturn, ., visit, (, this, ), ;, if, (, beforeReturn, !=]
[(, ), ;, JSType, afterReturn, =, beforeReturn, ., visit, (, this, ), ;, if, (, beforeReturn, !=, afterReturn, ), {]
[;, JSType, afterReturn, =, beforeReturn, ., visit, (, this, ), ;, if, (, beforeReturn, !=, afterReturn, ), {, changed, =]
[visit, (, this, ), ;, if, (, beforeReturn, !=, afterReturn, ), {, changed, =, true, ;, }, FunctionParamBuilder, paramBuilder, =]
[), ;, if, (, beforeReturn, !=, afterReturn, ), {, changed, =, true, ;, }, FunctionParamBuilder, paramBuilder, =, new, FunctionParamBuilder, (]
[{, changed, =, true, ;, }, FunctionParamBuilder, paramBuilder, =, new, FunctionParamBuilder, (, registry, ), ;, for, (, Node, paramNode, :]
[{, changed, =, true, ;, }, FunctionParamBuilder, paramBuilder, =, new, FunctionParamBuilder, (, registry, ), ;, for, (, Node, paramNode, :]
[FunctionParamBuilder, (, registry, ), ;, for, (, Node, paramNode, :, type, ., getParameters, (, ), ), {, JSType, beforeParamType, =]
[FunctionParamBuilder, (, registry, ), ;, for, (, Node, paramNode, :, type, ., getParameters, (, ), ), {, JSType, beforeParamType, =]
[:, type, ., getParameters, (, ), ), {, JSType, beforeParamType, =, paramNode, ., getJSType, (, ), ;, JSType, afterParamType, =]
[:, type, ., getParameters, (, ), ), {, JSType, beforeParamType, =, paramNode, ., getJSType, (, ), ;, JSType, afterParamType, =]
[(, ), ), {, JSType, beforeParamType, =, paramNode, ., getJSType, (, ), ;, JSType, afterParamType, =, beforeParamType, ., visit, (]
[beforeParamType, =, paramNode, ., getJSType, (, ), ;, JSType, afterParamType, =, beforeParamType, ., visit, (, this, ), ;, if, (]
[beforeParamType, =, paramNode, ., getJSType, (, ), ;, JSType, afterParamType, =, beforeParamType, ., visit, (, this, ), ;, if, (]
[paramNode, ., getJSType, (, ), ;, JSType, afterParamType, =, beforeParamType, ., visit, (, this, ), ;, if, (, beforeParamType, !=]
[(, ), ;, JSType, afterParamType, =, beforeParamType, ., visit, (, this, ), ;, if, (, beforeParamType, !=, afterParamType, ), {]
[;, JSType, afterParamType, =, beforeParamType, ., visit, (, this, ), ;, if, (, beforeParamType, !=, afterParamType, ), {, changed, =]
[., visit, (, this, ), ;, if, (, beforeParamType, !=, afterParamType, ), {, changed, =, true, ;, }, if, (]
[., visit, (, this, ), ;, if, (, beforeParamType, !=, afterParamType, ), {, changed, =, true, ;, }, if, (]
[(, beforeParamType, !=, afterParamType, ), {, changed, =, true, ;, }, if, (, paramNode, ., isOptionalArg, (, ), ), {]
[(, beforeParamType, !=, afterParamType, ), {, changed, =, true, ;, }, if, (, paramNode, ., isOptionalArg, (, ), ), {]
[), {, changed, =, true, ;, }, if, (, paramNode, ., isOptionalArg, (, ), ), {, paramBuilder, ., addOptionalParams, (]
[if, (, paramNode, ., isOptionalArg, (, ), ), {, paramBuilder, ., addOptionalParams, (, afterParamType, ), ;, }, else, if, (]
[if, (, paramNode, ., isOptionalArg, (, ), ), {, paramBuilder, ., addOptionalParams, (, afterParamType, ), ;, }, else, if, (]
[), {, paramBuilder, ., addOptionalParams, (, afterParamType, ), ;, }, else, if, (, paramNode, ., isVarArgs, (, ), ), {]
[), {, paramBuilder, ., addOptionalParams, (, afterParamType, ), ;, }, else, if, (, paramNode, ., isVarArgs, (, ), ), {]
[addOptionalParams, (, afterParamType, ), ;, }, else, if, (, paramNode, ., isVarArgs, (, ), ), {, paramBuilder, ., addVarArgs, (]
[else, if, (, paramNode, ., isVarArgs, (, ), ), {, paramBuilder, ., addVarArgs, (, afterParamType, ), ;, }, else, {]
[else, if, (, paramNode, ., isVarArgs, (, ), ), {, paramBuilder, ., addVarArgs, (, afterParamType, ), ;, }, else, {]
[., isVarArgs, (, ), ), {, paramBuilder, ., addVarArgs, (, afterParamType, ), ;, }, else, {, paramBuilder, ., addRequiredParams, (]
[., addVarArgs, (, afterParamType, ), ;, }, else, {, paramBuilder, ., addRequiredParams, (, afterParamType, ), ;, }, }, if, (]
[}, else, {, paramBuilder, ., addRequiredParams, (, afterParamType, ), ;, }, }, if, (, changed, ), {, FunctionBuilder, builder, =]
[paramBuilder, ., addRequiredParams, (, afterParamType, ), ;, }, }, if, (, changed, ), {, FunctionBuilder, builder, =, new, FunctionBuilder, (]
[(, afterParamType, ), ;, }, }, if, (, changed, ), {, FunctionBuilder, builder, =, new, FunctionBuilder, (, registry, ), ;]
[(, afterParamType, ), ;, }, }, if, (, changed, ), {, FunctionBuilder, builder, =, new, FunctionBuilder, (, registry, ), ;]
[}, }, if, (, changed, ), {, FunctionBuilder, builder, =, new, FunctionBuilder, (, registry, ), ;, builder, ., withParams, (]
[(, changed, ), {, FunctionBuilder, builder, =, new, FunctionBuilder, (, registry, ), ;, builder, ., withParams, (, paramBuilder, ), ;]
[(, changed, ), {, FunctionBuilder, builder, =, new, FunctionBuilder, (, registry, ), ;, builder, ., withParams, (, paramBuilder, ), ;]
[FunctionBuilder, builder, =, new, FunctionBuilder, (, registry, ), ;, builder, ., withParams, (, paramBuilder, ), ;, builder, ., withReturnType, (]
[new, FunctionBuilder, (, registry, ), ;, builder, ., withParams, (, paramBuilder, ), ;, builder, ., withReturnType, (, afterReturn, ), ;]
[new, FunctionBuilder, (, registry, ), ;, builder, ., withParams, (, paramBuilder, ), ;, builder, ., withReturnType, (, afterReturn, ), ;]
[), ;, builder, ., withParams, (, paramBuilder, ), ;, builder, ., withReturnType, (, afterReturn, ), ;, builder, ., withTypeOfThis, (]
[withParams, (, paramBuilder, ), ;, builder, ., withReturnType, (, afterReturn, ), ;, builder, ., withTypeOfThis, (, afterThis, ), ;, return]
[withParams, (, paramBuilder, ), ;, builder, ., withReturnType, (, afterReturn, ), ;, builder, ., withTypeOfThis, (, afterThis, ), ;, return]
[(, afterReturn, ), ;, builder, ., withTypeOfThis, (, afterThis, ), ;, return, builder, ., build, (, ), ;, }, return]
[builder, ., build, (, ), ;, }, return, type, ;, }, private, JSType, coerseToThisType, (, JSType, type, ), {, return]
[builder, ., build, (, ), ;, }, return, type, ;, }, private, JSType, coerseToThisType, (, JSType, type, ), {, return]
[builder, ., build, (, ), ;, }, return, type, ;, }, private, JSType, coerseToThisType, (, JSType, type, ), {, return]
[build, (, ), ;, }, return, type, ;, }, private, JSType, coerseToThisType, (, JSType, type, ), {, return, type, !=]
[), ;, }, return, type, ;, }, private, JSType, coerseToThisType, (, JSType, type, ), {, return, type, !=, null, ?]
[}, return, type, ;, }, private, JSType, coerseToThisType, (, JSType, type, ), {, return, type, !=, null, ?, type, :]
[}, return, type, ;, }, private, JSType, coerseToThisType, (, JSType, type, ), {, return, type, !=, null, ?, type, :]
[}, private, JSType, coerseToThisType, (, JSType, type, ), {, return, type, !=, null, ?, type, :, registry, ., getNativeObjectType, (]
[}, private, JSType, coerseToThisType, (, JSType, type, ), {, return, type, !=, null, ?, type, :, registry, ., getNativeObjectType, (]
[getNativeObjectType, (, JSTypeNative, ., UNKNOWN_TYPE, ), ;, }, @, Override, public, JSType, caseObjectType, (, ObjectType, objType, ), {, if, (]
[getNativeObjectType, (, JSTypeNative, ., UNKNOWN_TYPE, ), ;, }, @, Override, public, JSType, caseObjectType, (, ObjectType, objType, ), {, if, (]
[objType, ), {, if, (, objType, ., isTemplatized, (, ), ), {, ImmutableList, ., Builder, <, JSType, >, builder, =]
[objType, ), {, if, (, objType, ., isTemplatized, (, ), ), {, ImmutableList, ., Builder, <, JSType, >, builder, =]
[{, ImmutableList, ., Builder, <, JSType, >, builder, =, ImmutableList, ., builder, (, ), ;, for, (, JSType, templatizedType, :]
[{, ImmutableList, ., Builder, <, JSType, >, builder, =, ImmutableList, ., builder, (, ), ;, for, (, JSType, templatizedType, :]
[builder, =, ImmutableList, ., builder, (, ), ;, for, (, JSType, templatizedType, :, objType, ., getTemplatizedTypes, (, ), ), {]
[builder, =, ImmutableList, ., builder, (, ), ;, for, (, JSType, templatizedType, :, objType, ., getTemplatizedTypes, (, ), ), {]
[builder, (, ), ;, for, (, JSType, templatizedType, :, objType, ., getTemplatizedTypes, (, ), ), {, builder, ., add, (]
[builder, (, ), ;, for, (, JSType, templatizedType, :, objType, ., getTemplatizedTypes, (, ), ), {, builder, ., add, (]
[for, (, JSType, templatizedType, :, objType, ., getTemplatizedTypes, (, ), ), {, builder, ., add, (, templatizedType, ., visit, (]
[., getTemplatizedTypes, (, ), ), {, builder, ., add, (, templatizedType, ., visit, (, this, ), ), ;, }, return]
[., getTemplatizedTypes, (, ), ), {, builder, ., add, (, templatizedType, ., visit, (, this, ), ), ;, }, return]
[), {, builder, ., add, (, templatizedType, ., visit, (, this, ), ), ;, }, return, registry, ., createTemplatizedType, (]
[builder, ., add, (, templatizedType, ., visit, (, this, ), ), ;, }, return, registry, ., createTemplatizedType, (, objType, ,]
[builder, ., add, (, templatizedType, ., visit, (, this, ), ), ;, }, return, registry, ., createTemplatizedType, (, objType, ,]
[;, }, return, registry, ., createTemplatizedType, (, objType, ,, builder, ., build, (, ), ), ;, }, else, {, return]
[else, {, return, objType, ;, }, }, @, Override, public, JSType, caseParameterizedType, (, ParameterizedType, type, ), {, ObjectType, genericType, =]
[else, {, return, objType, ;, }, }, @, Override, public, JSType, caseParameterizedType, (, ParameterizedType, type, ), {, ObjectType, genericType, =]
[;, }, }, @, Override, public, JSType, caseParameterizedType, (, ParameterizedType, type, ), {, ObjectType, genericType, =, ObjectType, ., cast, (]
[;, }, }, @, Override, public, JSType, caseParameterizedType, (, ParameterizedType, type, ), {, ObjectType, genericType, =, ObjectType, ., cast, (]
[;, }, }, @, Override, public, JSType, caseParameterizedType, (, ParameterizedType, type, ), {, ObjectType, genericType, =, ObjectType, ., cast, (]
[(, ParameterizedType, type, ), {, ObjectType, genericType, =, ObjectType, ., cast, (, type, ., getReferencedTypeInternal, (, ), ., visit, (]
[=, ObjectType, ., cast, (, type, ., getReferencedTypeInternal, (, ), ., visit, (, this, ), ), ;, JSType, paramType, =]
[=, ObjectType, ., cast, (, type, ., getReferencedTypeInternal, (, ), ., visit, (, this, ), ), ;, JSType, paramType, =]
[=, ObjectType, ., cast, (, type, ., getReferencedTypeInternal, (, ), ., visit, (, this, ), ), ;, JSType, paramType, =]
[(, ), ., visit, (, this, ), ), ;, JSType, paramType, =, type, ., getParameterType, (, ), ., visit, (]
[this, ), ), ;, JSType, paramType, =, type, ., getParameterType, (, ), ., visit, (, this, ), ;, if, (]
[this, ), ), ;, JSType, paramType, =, type, ., getParameterType, (, ), ., visit, (, this, ), ;, if, (]
[this, ), ), ;, JSType, paramType, =, type, ., getParameterType, (, ), ., visit, (, this, ), ;, if, (]
[this, ), ), ;, JSType, paramType, =, type, ., getParameterType, (, ), ., visit, (, this, ), ;, if, (]
[=, type, ., getParameterType, (, ), ., visit, (, this, ), ;, if, (, type, ., getReferencedTypeInternal, (, ), !=]
[., getParameterType, (, ), ., visit, (, this, ), ;, if, (, type, ., getReferencedTypeInternal, (, ), !=, genericType, ||]
[., getParameterType, (, ), ., visit, (, this, ), ;, if, (, type, ., getReferencedTypeInternal, (, ), !=, genericType, ||]
[., getParameterType, (, ), ., visit, (, this, ), ;, if, (, type, ., getReferencedTypeInternal, (, ), !=, genericType, ||]
[(, this, ), ;, if, (, type, ., getReferencedTypeInternal, (, ), !=, genericType, ||, type, ., getParameterType, (, ), !=]
[;, if, (, type, ., getReferencedTypeInternal, (, ), !=, genericType, ||, type, ., getParameterType, (, ), !=, paramType, ), {]
[(, type, ., getReferencedTypeInternal, (, ), !=, genericType, ||, type, ., getParameterType, (, ), !=, paramType, ), {, type, =]
[(, type, ., getReferencedTypeInternal, (, ), !=, genericType, ||, type, ., getParameterType, (, ), !=, paramType, ), {, type, =]
[(, ), !=, genericType, ||, type, ., getParameterType, (, ), !=, paramType, ), {, type, =, registry, ., createParameterizedType, (]
[!=, genericType, ||, type, ., getParameterType, (, ), !=, paramType, ), {, type, =, registry, ., createParameterizedType, (, genericType, ,]
[getParameterType, (, ), !=, paramType, ), {, type, =, registry, ., createParameterizedType, (, genericType, ,, paramType, ), ;, }, return]
[(, genericType, ,, paramType, ), ;, }, return, type, ;, }, @, Override, public, JSType, caseUnknownType, (, ), {, return]
[,, paramType, ), ;, }, return, type, ;, }, @, Override, public, JSType, caseUnknownType, (, ), {, return, getNativeType, (]
[,, paramType, ), ;, }, return, type, ;, }, @, Override, public, JSType, caseUnknownType, (, ), {, return, getNativeType, (]
[), {, return, getNativeType, (, JSTypeNative, ., UNKNOWN_TYPE, ), ;, }, @, Override, public, JSType, caseNullType, (, ), {, return]
[return, getNativeType, (, JSTypeNative, ., UNKNOWN_TYPE, ), ;, }, @, Override, public, JSType, caseNullType, (, ), {, return, getNativeType, (]
[return, getNativeType, (, JSTypeNative, ., UNKNOWN_TYPE, ), ;, }, @, Override, public, JSType, caseNullType, (, ), {, return, getNativeType, (]
[), {, return, getNativeType, (, JSTypeNative, ., NULL_TYPE, ), ;, }, @, Override, public, JSType, caseNumberType, (, ), {, return]
[return, getNativeType, (, JSTypeNative, ., NULL_TYPE, ), ;, }, @, Override, public, JSType, caseNumberType, (, ), {, return, getNativeType, (]
[return, getNativeType, (, JSTypeNative, ., NULL_TYPE, ), ;, }, @, Override, public, JSType, caseNumberType, (, ), {, return, getNativeType, (]
[), {, return, getNativeType, (, JSTypeNative, ., NUMBER_TYPE, ), ;, }, @, Override, public, JSType, caseStringType, (, ), {, return]
[return, getNativeType, (, JSTypeNative, ., NUMBER_TYPE, ), ;, }, @, Override, public, JSType, caseStringType, (, ), {, return, getNativeType, (]
[return, getNativeType, (, JSTypeNative, ., NUMBER_TYPE, ), ;, }, @, Override, public, JSType, caseStringType, (, ), {, return, getNativeType, (]
[), {, return, getNativeType, (, JSTypeNative, ., STRING_TYPE, ), ;, }, @, Override, public, JSType, caseVoidType, (, ), {, return]
[return, getNativeType, (, JSTypeNative, ., STRING_TYPE, ), ;, }, @, Override, public, JSType, caseVoidType, (, ), {, return, getNativeType, (]
[return, getNativeType, (, JSTypeNative, ., STRING_TYPE, ), ;, }, @, Override, public, JSType, caseVoidType, (, ), {, return, getNativeType, (]
[(, JSTypeNative, ., VOID_TYPE, ), ;, }, @, Override, public, JSType, caseUnionType, (, UnionType, type, ), {, boolean, changed, =]
[Override, public, JSType, caseUnionType, (, UnionType, type, ), {, boolean, changed, =, false, ;, List, <, JSType, >, results, =]
[Override, public, JSType, caseUnionType, (, UnionType, type, ), {, boolean, changed, =, false, ;, List, <, JSType, >, results, =]
[=, false, ;, List, <, JSType, >, results, =, Lists, ., newArrayList, (, ), ;, for, (, JSType, alternative, :]
[=, false, ;, List, <, JSType, >, results, =, Lists, ., newArrayList, (, ), ;, for, (, JSType, alternative, :]
[., newArrayList, (, ), ;, for, (, JSType, alternative, :, type, ., getAlternates, (, ), ), {, JSType, replacement, =]
[., newArrayList, (, ), ;, for, (, JSType, alternative, :, type, ., getAlternates, (, ), ), {, JSType, replacement, =]
[;, for, (, JSType, alternative, :, type, ., getAlternates, (, ), ), {, JSType, replacement, =, alternative, ., visit, (]
[:, type, ., getAlternates, (, ), ), {, JSType, replacement, =, alternative, ., visit, (, this, ), ;, if, (]
[:, type, ., getAlternates, (, ), ), {, JSType, replacement, =, alternative, ., visit, (, this, ), ;, if, (]
[., getAlternates, (, ), ), {, JSType, replacement, =, alternative, ., visit, (, this, ), ;, if, (, replacement, !=]
[), ), {, JSType, replacement, =, alternative, ., visit, (, this, ), ;, if, (, replacement, !=, alternative, ), {]
[{, JSType, replacement, =, alternative, ., visit, (, this, ), ;, if, (, replacement, !=, alternative, ), {, changed, =]
[=, alternative, ., visit, (, this, ), ;, if, (, replacement, !=, alternative, ), {, changed, =, true, ;, }]
[=, alternative, ., visit, (, this, ), ;, if, (, replacement, !=, alternative, ), {, changed, =, true, ;, }]
[(, this, ), ;, if, (, replacement, !=, alternative, ), {, changed, =, true, ;, }, results, ., add, (]
[replacement, !=, alternative, ), {, changed, =, true, ;, }, results, ., add, (, replacement, ), ;, }, if, (]
[=, true, ;, }, results, ., add, (, replacement, ), ;, }, if, (, changed, ), {, UnionTypeBuilder, builder, =]
[}, results, ., add, (, replacement, ), ;, }, if, (, changed, ), {, UnionTypeBuilder, builder, =, new, UnionTypeBuilder, (]
[}, if, (, changed, ), {, UnionTypeBuilder, builder, =, new, UnionTypeBuilder, (, registry, ), ;, for, (, JSType, alternate, :]
[changed, ), {, UnionTypeBuilder, builder, =, new, UnionTypeBuilder, (, registry, ), ;, for, (, JSType, alternate, :, results, ), {]
[changed, ), {, UnionTypeBuilder, builder, =, new, UnionTypeBuilder, (, registry, ), ;, for, (, JSType, alternate, :, results, ), {]
[builder, =, new, UnionTypeBuilder, (, registry, ), ;, for, (, JSType, alternate, :, results, ), {, builder, ., addAlternate, (]
[registry, ), ;, for, (, JSType, alternate, :, results, ), {, builder, ., addAlternate, (, alternate, ), ;, }, return]
[registry, ), ;, for, (, JSType, alternate, :, results, ), {, builder, ., addAlternate, (, alternate, ), ;, }, return]
[results, ), {, builder, ., addAlternate, (, alternate, ), ;, }, return, builder, ., build, (, ), ;, }, return]
[build, (, ), ;, }, return, type, ;, }, @, Override, public, JSType, caseTemplateType, (, TemplateType, type, ), {, return]
[JSType, caseTemplateType, (, TemplateType, type, ), {, return, type, ;, }, private, JSType, getNativeType, (, JSTypeNative, nativeType, ), {, return]
[JSType, caseTemplateType, (, TemplateType, type, ), {, return, type, ;, }, private, JSType, getNativeType, (, JSTypeNative, nativeType, ), {, return]
[type, ), {, return, type, ;, }, private, JSType, getNativeType, (, JSTypeNative, nativeType, ), {, return, registry, ., getNativeType, (]
[), {, return, registry, ., getNativeType, (, nativeType, ), ;, }, private, boolean, isNativeFunctionType, (, FunctionType, type, ), {, return]
[), {, return, registry, ., getNativeType, (, nativeType, ), ;, }, private, boolean, isNativeFunctionType, (, FunctionType, type, ), {, return]
