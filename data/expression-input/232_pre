[., FieldUtils, ;, import, org, ., joda, ., time, ., field, ., ImpreciseDateTimeField, ;, final, class, BasicWeekyearDateTimeField, extends, ImpreciseDateTimeField, {]
[import, org, ., joda, ., time, ., field, ., ImpreciseDateTimeField, ;, final, class, BasicWeekyearDateTimeField, extends, ImpreciseDateTimeField, {, @, SuppressWarnings, (]
[., ImpreciseDateTimeField, ;, final, class, BasicWeekyearDateTimeField, extends, ImpreciseDateTimeField, {, @, SuppressWarnings, (, "unused", ), private, static, final, long, serialVersionUID, =]
[{, @, SuppressWarnings, (, "unused", ), private, static, final, long, serialVersionUID, =, 6215066916806820644L, ;, private, static, final, long, WEEK_53, =]
[{, @, SuppressWarnings, (, "unused", ), private, static, final, long, serialVersionUID, =, 6215066916806820644L, ;, private, static, final, long, WEEK_53, =]
[@, SuppressWarnings, (, "unused", ), private, static, final, long, serialVersionUID, =, 6215066916806820644L, ;, private, static, final, long, WEEK_53, =, (]
[@, SuppressWarnings, (, "unused", ), private, static, final, long, serialVersionUID, =, 6215066916806820644L, ;, private, static, final, long, WEEK_53, =, (]
[(, "unused", ), private, static, final, long, serialVersionUID, =, 6215066916806820644L, ;, private, static, final, long, WEEK_53, =, (, 53L, -]
[private, static, final, long, serialVersionUID, =, 6215066916806820644L, ;, private, static, final, long, WEEK_53, =, (, 53L, -, 1, ), *]
[private, static, final, long, serialVersionUID, =, 6215066916806820644L, ;, private, static, final, long, WEEK_53, =, (, 53L, -, 1, ), *]
[1, ), *, DateTimeConstants, ., MILLIS_PER_WEEK, ;, private, final, BasicChronology, iChronology, ;, BasicWeekyearDateTimeField, (, BasicChronology, chronology, ), {, super, (]
[1, ), *, DateTimeConstants, ., MILLIS_PER_WEEK, ;, private, final, BasicChronology, iChronology, ;, BasicWeekyearDateTimeField, (, BasicChronology, chronology, ), {, super, (]
[;, private, final, BasicChronology, iChronology, ;, BasicWeekyearDateTimeField, (, BasicChronology, chronology, ), {, super, (, DateTimeFieldType, ., weekyear, (, ), ,]
[;, private, final, BasicChronology, iChronology, ;, BasicWeekyearDateTimeField, (, BasicChronology, chronology, ), {, super, (, DateTimeFieldType, ., weekyear, (, ), ,]
[(, BasicChronology, chronology, ), {, super, (, DateTimeFieldType, ., weekyear, (, ), ,, chronology, ., getAverageMillisPerYear, (, ), ), ;]
[chronology, ), {, super, (, DateTimeFieldType, ., weekyear, (, ), ,, chronology, ., getAverageMillisPerYear, (, ), ), ;, iChronology, =]
[,, chronology, ., getAverageMillisPerYear, (, ), ), ;, iChronology, =, chronology, ;, }, public, boolean, isLenient, (, ), {, return]
[}, public, boolean, isLenient, (, ), {, return, false, ;, }, public, int, get, (, long, instant, ), {, return]
[}, public, boolean, isLenient, (, ), {, return, false, ;, }, public, int, get, (, long, instant, ), {, return]
[(, ), {, return, false, ;, }, public, int, get, (, long, instant, ), {, return, iChronology, ., getWeekyear, (]
[., getWeekyear, (, instant, ), ;, }, public, long, add, (, long, instant, ,, int, years, ), {, if, (]
[., getWeekyear, (, instant, ), ;, }, public, long, add, (, long, instant, ,, int, years, ), {, if, (]
[(, instant, ), ;, }, public, long, add, (, long, instant, ,, int, years, ), {, if, (, years, ==]
[}, public, long, add, (, long, instant, ,, int, years, ), {, if, (, years, ==, 0, ), {, return]
[(, long, instant, ,, int, years, ), {, if, (, years, ==, 0, ), {, return, instant, ;, }, return]
[instant, ,, int, years, ), {, if, (, years, ==, 0, ), {, return, instant, ;, }, return, set, (]
[int, years, ), {, if, (, years, ==, 0, ), {, return, instant, ;, }, return, set, (, instant, ,]
[int, years, ), {, if, (, years, ==, 0, ), {, return, instant, ;, }, return, set, (, instant, ,]
[), {, if, (, years, ==, 0, ), {, return, instant, ;, }, return, set, (, instant, ,, get, (]
[(, years, ==, 0, ), {, return, instant, ;, }, return, set, (, instant, ,, get, (, instant, ), +]
[(, instant, ), +, years, ), ;, }, public, long, add, (, long, instant, ,, long, value, ), {, return]
[), +, years, ), ;, }, public, long, add, (, long, instant, ,, long, value, ), {, return, add, (]
[years, ), ;, }, public, long, add, (, long, instant, ,, long, value, ), {, return, add, (, instant, ,]
[years, ), ;, }, public, long, add, (, long, instant, ,, long, value, ), {, return, add, (, instant, ,]
[public, long, add, (, long, instant, ,, long, value, ), {, return, add, (, instant, ,, FieldUtils, ., safeToInt, (]
[., safeToInt, (, value, ), ), ;, }, public, long, addWrapField, (, long, instant, ,, int, years, ), {, return]
[(, value, ), ), ;, }, public, long, addWrapField, (, long, instant, ,, int, years, ), {, return, add, (]
[), ), ;, }, public, long, addWrapField, (, long, instant, ,, int, years, ), {, return, add, (, instant, ,]
[(, instant, ,, years, ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, if, (]
[(, instant, ,, years, ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, if, (]
[,, years, ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, if, (, minuendInstant, <]
[}, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, if, (, minuendInstant, <, subtrahendInstant, ), {, return]
[public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, if, (, minuendInstant, <, subtrahendInstant, ), {, return, -]
[getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, if, (, minuendInstant, <, subtrahendInstant, ), {, return, -, getDifference, (]
[long, minuendInstant, ,, long, subtrahendInstant, ), {, if, (, minuendInstant, <, subtrahendInstant, ), {, return, -, getDifference, (, subtrahendInstant, ,]
[if, (, minuendInstant, <, subtrahendInstant, ), {, return, -, getDifference, (, subtrahendInstant, ,, minuendInstant, ), ;, }, int, minuendWeekyear, =]
[minuendInstant, <, subtrahendInstant, ), {, return, -, getDifference, (, subtrahendInstant, ,, minuendInstant, ), ;, }, int, minuendWeekyear, =, get, (]
[-, getDifference, (, subtrahendInstant, ,, minuendInstant, ), ;, }, int, minuendWeekyear, =, get, (, minuendInstant, ), ;, int, subtrahendWeekyear, =]
[(, subtrahendInstant, ,, minuendInstant, ), ;, }, int, minuendWeekyear, =, get, (, minuendInstant, ), ;, int, subtrahendWeekyear, =, get, (]
[}, int, minuendWeekyear, =, get, (, minuendInstant, ), ;, int, subtrahendWeekyear, =, get, (, subtrahendInstant, ), ;, long, minuendRem, =]
[minuendWeekyear, =, get, (, minuendInstant, ), ;, int, subtrahendWeekyear, =, get, (, subtrahendInstant, ), ;, long, minuendRem, =, remainder, (]
[;, int, subtrahendWeekyear, =, get, (, subtrahendInstant, ), ;, long, minuendRem, =, remainder, (, minuendInstant, ), ;, long, subtrahendRem, =]
[subtrahendWeekyear, =, get, (, subtrahendInstant, ), ;, long, minuendRem, =, remainder, (, minuendInstant, ), ;, long, subtrahendRem, =, remainder, (]
[), ;, long, minuendRem, =, remainder, (, minuendInstant, ), ;, long, subtrahendRem, =, remainder, (, subtrahendInstant, ), ;, if, (]
[), ;, long, minuendRem, =, remainder, (, minuendInstant, ), ;, long, subtrahendRem, =, remainder, (, subtrahendInstant, ), ;, if, (]
[), ;, long, minuendRem, =, remainder, (, minuendInstant, ), ;, long, subtrahendRem, =, remainder, (, subtrahendInstant, ), ;, if, (]
[long, minuendRem, =, remainder, (, minuendInstant, ), ;, long, subtrahendRem, =, remainder, (, subtrahendInstant, ), ;, if, (, subtrahendRem, >=]
[=, remainder, (, minuendInstant, ), ;, long, subtrahendRem, =, remainder, (, subtrahendInstant, ), ;, if, (, subtrahendRem, >=, WEEK_53, &&]
[=, remainder, (, minuendInstant, ), ;, long, subtrahendRem, =, remainder, (, subtrahendInstant, ), ;, if, (, subtrahendRem, >=, WEEK_53, &&]
[=, remainder, (, minuendInstant, ), ;, long, subtrahendRem, =, remainder, (, subtrahendInstant, ), ;, if, (, subtrahendRem, >=, WEEK_53, &&]
[), ;, long, subtrahendRem, =, remainder, (, subtrahendInstant, ), ;, if, (, subtrahendRem, >=, WEEK_53, &&, iChronology, ., getWeeksInYear, (]
[subtrahendRem, =, remainder, (, subtrahendInstant, ), ;, if, (, subtrahendRem, >=, WEEK_53, &&, iChronology, ., getWeeksInYear, (, minuendWeekyear, ), <=]
[(, subtrahendInstant, ), ;, if, (, subtrahendRem, >=, WEEK_53, &&, iChronology, ., getWeeksInYear, (, minuendWeekyear, ), <=, 52, ), {]
[), ;, if, (, subtrahendRem, >=, WEEK_53, &&, iChronology, ., getWeeksInYear, (, minuendWeekyear, ), <=, 52, ), {, subtrahendRem, -=]
[), ;, if, (, subtrahendRem, >=, WEEK_53, &&, iChronology, ., getWeeksInYear, (, minuendWeekyear, ), <=, 52, ), {, subtrahendRem, -=]
[iChronology, ., getWeeksInYear, (, minuendWeekyear, ), <=, 52, ), {, subtrahendRem, -=, DateTimeConstants, ., MILLIS_PER_WEEK, ;, }, int, difference, =]
[iChronology, ., getWeeksInYear, (, minuendWeekyear, ), <=, 52, ), {, subtrahendRem, -=, DateTimeConstants, ., MILLIS_PER_WEEK, ;, }, int, difference, =]
[getWeeksInYear, (, minuendWeekyear, ), <=, 52, ), {, subtrahendRem, -=, DateTimeConstants, ., MILLIS_PER_WEEK, ;, }, int, difference, =, minuendWeekyear, -]
[<=, 52, ), {, subtrahendRem, -=, DateTimeConstants, ., MILLIS_PER_WEEK, ;, }, int, difference, =, minuendWeekyear, -, subtrahendWeekyear, ;, if, (]
[<=, 52, ), {, subtrahendRem, -=, DateTimeConstants, ., MILLIS_PER_WEEK, ;, }, int, difference, =, minuendWeekyear, -, subtrahendWeekyear, ;, if, (]
[), {, subtrahendRem, -=, DateTimeConstants, ., MILLIS_PER_WEEK, ;, }, int, difference, =, minuendWeekyear, -, subtrahendWeekyear, ;, if, (, minuendRem, <]
[-=, DateTimeConstants, ., MILLIS_PER_WEEK, ;, }, int, difference, =, minuendWeekyear, -, subtrahendWeekyear, ;, if, (, minuendRem, <, subtrahendRem, ), {]
[-=, DateTimeConstants, ., MILLIS_PER_WEEK, ;, }, int, difference, =, minuendWeekyear, -, subtrahendWeekyear, ;, if, (, minuendRem, <, subtrahendRem, ), {]
[}, int, difference, =, minuendWeekyear, -, subtrahendWeekyear, ;, if, (, minuendRem, <, subtrahendRem, ), {, difference, --, ;, }, return]
[{, difference, --, ;, }, return, difference, ;, }, public, long, set, (, long, instant, ,, int, year, ), {]
[{, difference, --, ;, }, return, difference, ;, }, public, long, set, (, long, instant, ,, int, year, ), {]
[}, return, difference, ;, }, public, long, set, (, long, instant, ,, int, year, ), {, FieldUtils, ., verifyValueBounds, (]
[difference, ;, }, public, long, set, (, long, instant, ,, int, year, ), {, FieldUtils, ., verifyValueBounds, (, this, ,]
[difference, ;, }, public, long, set, (, long, instant, ,, int, year, ), {, FieldUtils, ., verifyValueBounds, (, this, ,]
[long, set, (, long, instant, ,, int, year, ), {, FieldUtils, ., verifyValueBounds, (, this, ,, Math, ., abs, (]
[long, instant, ,, int, year, ), {, FieldUtils, ., verifyValueBounds, (, this, ,, Math, ., abs, (, year, ), ,]
[long, instant, ,, int, year, ), {, FieldUtils, ., verifyValueBounds, (, this, ,, Math, ., abs, (, year, ), ,]
[{, FieldUtils, ., verifyValueBounds, (, this, ,, Math, ., abs, (, year, ), ,, iChronology, ., getMinYear, (, ), ,]
[{, FieldUtils, ., verifyValueBounds, (, this, ,, Math, ., abs, (, year, ), ,, iChronology, ., getMinYear, (, ), ,]
[(, year, ), ,, iChronology, ., getMinYear, (, ), ,, iChronology, ., getMaxYear, (, ), ), ;, int, thisWeekyear, =]
[), ,, iChronology, ., getMinYear, (, ), ,, iChronology, ., getMaxYear, (, ), ), ;, int, thisWeekyear, =, get, (]
[(, ), ,, iChronology, ., getMaxYear, (, ), ), ;, int, thisWeekyear, =, get, (, instant, ), ;, if, (]
[(, ), ,, iChronology, ., getMaxYear, (, ), ), ;, int, thisWeekyear, =, get, (, instant, ), ;, if, (]
[,, iChronology, ., getMaxYear, (, ), ), ;, int, thisWeekyear, =, get, (, instant, ), ;, if, (, thisWeekyear, ==]
[(, ), ), ;, int, thisWeekyear, =, get, (, instant, ), ;, if, (, thisWeekyear, ==, year, ), {, return]
[=, get, (, instant, ), ;, if, (, thisWeekyear, ==, year, ), {, return, instant, ;, }, int, thisDow, =]
[=, get, (, instant, ), ;, if, (, thisWeekyear, ==, year, ), {, return, instant, ;, }, int, thisDow, =]
[), ;, if, (, thisWeekyear, ==, year, ), {, return, instant, ;, }, int, thisDow, =, iChronology, ., getDayOfWeek, (]
[year, ), {, return, instant, ;, }, int, thisDow, =, iChronology, ., getDayOfWeek, (, instant, ), ;, int, weeksInFromYear, =]
[year, ), {, return, instant, ;, }, int, thisDow, =, iChronology, ., getDayOfWeek, (, instant, ), ;, int, weeksInFromYear, =]
[instant, ;, }, int, thisDow, =, iChronology, ., getDayOfWeek, (, instant, ), ;, int, weeksInFromYear, =, iChronology, ., getWeeksInYear, (]
[iChronology, ., getDayOfWeek, (, instant, ), ;, int, weeksInFromYear, =, iChronology, ., getWeeksInYear, (, thisWeekyear, ), ;, int, weeksInToYear, =]
[iChronology, ., getDayOfWeek, (, instant, ), ;, int, weeksInFromYear, =, iChronology, ., getWeeksInYear, (, thisWeekyear, ), ;, int, weeksInToYear, =]
[instant, ), ;, int, weeksInFromYear, =, iChronology, ., getWeeksInYear, (, thisWeekyear, ), ;, int, weeksInToYear, =, iChronology, ., getWeeksInYear, (]
[iChronology, ., getWeeksInYear, (, thisWeekyear, ), ;, int, weeksInToYear, =, iChronology, ., getWeeksInYear, (, year, ), ;, int, maxOutWeeks, =]
[iChronology, ., getWeeksInYear, (, thisWeekyear, ), ;, int, weeksInToYear, =, iChronology, ., getWeeksInYear, (, year, ), ;, int, maxOutWeeks, =]
[., getWeeksInYear, (, thisWeekyear, ), ;, int, weeksInToYear, =, iChronology, ., getWeeksInYear, (, year, ), ;, int, maxOutWeeks, =, (]
[., getWeeksInYear, (, thisWeekyear, ), ;, int, weeksInToYear, =, iChronology, ., getWeeksInYear, (, year, ), ;, int, maxOutWeeks, =, (]
[(, thisWeekyear, ), ;, int, weeksInToYear, =, iChronology, ., getWeeksInYear, (, year, ), ;, int, maxOutWeeks, =, (, weeksInToYear, <]
[;, int, weeksInToYear, =, iChronology, ., getWeeksInYear, (, year, ), ;, int, maxOutWeeks, =, (, weeksInToYear, <, weeksInFromYear, ), ?]
[weeksInToYear, =, iChronology, ., getWeeksInYear, (, year, ), ;, int, maxOutWeeks, =, (, weeksInToYear, <, weeksInFromYear, ), ?, weeksInToYear, :]
[(, year, ), ;, int, maxOutWeeks, =, (, weeksInToYear, <, weeksInFromYear, ), ?, weeksInToYear, :, weeksInFromYear, ;, int, setToWeek, =]
[(, year, ), ;, int, maxOutWeeks, =, (, weeksInToYear, <, weeksInFromYear, ), ?, weeksInToYear, :, weeksInFromYear, ;, int, setToWeek, =]
[int, maxOutWeeks, =, (, weeksInToYear, <, weeksInFromYear, ), ?, weeksInToYear, :, weeksInFromYear, ;, int, setToWeek, =, iChronology, ., getWeekOfWeekyear, (]
[<, weeksInFromYear, ), ?, weeksInToYear, :, weeksInFromYear, ;, int, setToWeek, =, iChronology, ., getWeekOfWeekyear, (, instant, ), ;, if, (]
[<, weeksInFromYear, ), ?, weeksInToYear, :, weeksInFromYear, ;, int, setToWeek, =, iChronology, ., getWeekOfWeekyear, (, instant, ), ;, if, (]
[), ?, weeksInToYear, :, weeksInFromYear, ;, int, setToWeek, =, iChronology, ., getWeekOfWeekyear, (, instant, ), ;, if, (, setToWeek, >]
[:, weeksInFromYear, ;, int, setToWeek, =, iChronology, ., getWeekOfWeekyear, (, instant, ), ;, if, (, setToWeek, >, maxOutWeeks, ), {]
[;, int, setToWeek, =, iChronology, ., getWeekOfWeekyear, (, instant, ), ;, if, (, setToWeek, >, maxOutWeeks, ), {, setToWeek, =]
[getWeekOfWeekyear, (, instant, ), ;, if, (, setToWeek, >, maxOutWeeks, ), {, setToWeek, =, maxOutWeeks, ;, }, long, workInstant, =]
[instant, ), ;, if, (, setToWeek, >, maxOutWeeks, ), {, setToWeek, =, maxOutWeeks, ;, }, long, workInstant, =, instant, ;]
[;, if, (, setToWeek, >, maxOutWeeks, ), {, setToWeek, =, maxOutWeeks, ;, }, long, workInstant, =, instant, ;, workInstant, =]
[;, if, (, setToWeek, >, maxOutWeeks, ), {, setToWeek, =, maxOutWeeks, ;, }, long, workInstant, =, instant, ;, workInstant, =]
[>, maxOutWeeks, ), {, setToWeek, =, maxOutWeeks, ;, }, long, workInstant, =, instant, ;, workInstant, =, iChronology, ., setYear, (]
[), {, setToWeek, =, maxOutWeeks, ;, }, long, workInstant, =, instant, ;, workInstant, =, iChronology, ., setYear, (, workInstant, ,]
[}, long, workInstant, =, instant, ;, workInstant, =, iChronology, ., setYear, (, workInstant, ,, year, ), ;, int, workWoyYear, =]
[workInstant, =, instant, ;, workInstant, =, iChronology, ., setYear, (, workInstant, ,, year, ), ;, int, workWoyYear, =, get, (]
[=, iChronology, ., setYear, (, workInstant, ,, year, ), ;, int, workWoyYear, =, get, (, workInstant, ), ;, if, (]
[=, iChronology, ., setYear, (, workInstant, ,, year, ), ;, int, workWoyYear, =, get, (, workInstant, ), ;, if, (]
[., setYear, (, workInstant, ,, year, ), ;, int, workWoyYear, =, get, (, workInstant, ), ;, if, (, workWoyYear, <]
[workInstant, ,, year, ), ;, int, workWoyYear, =, get, (, workInstant, ), ;, if, (, workWoyYear, <, year, ), {]
[year, ), ;, int, workWoyYear, =, get, (, workInstant, ), ;, if, (, workWoyYear, <, year, ), {, workInstant, +=]
[year, ), ;, int, workWoyYear, =, get, (, workInstant, ), ;, if, (, workWoyYear, <, year, ), {, workInstant, +=]
[workInstant, ), ;, if, (, workWoyYear, <, year, ), {, workInstant, +=, DateTimeConstants, ., MILLIS_PER_WEEK, ;, }, else, if, (]
[workInstant, ), ;, if, (, workWoyYear, <, year, ), {, workInstant, +=, DateTimeConstants, ., MILLIS_PER_WEEK, ;, }, else, if, (]
[;, if, (, workWoyYear, <, year, ), {, workInstant, +=, DateTimeConstants, ., MILLIS_PER_WEEK, ;, }, else, if, (, workWoyYear, >]
[workWoyYear, <, year, ), {, workInstant, +=, DateTimeConstants, ., MILLIS_PER_WEEK, ;, }, else, if, (, workWoyYear, >, year, ), {]
[year, ), {, workInstant, +=, DateTimeConstants, ., MILLIS_PER_WEEK, ;, }, else, if, (, workWoyYear, >, year, ), {, workInstant, -=]
[year, ), {, workInstant, +=, DateTimeConstants, ., MILLIS_PER_WEEK, ;, }, else, if, (, workWoyYear, >, year, ), {, workInstant, -=]
[;, }, else, if, (, workWoyYear, >, year, ), {, workInstant, -=, DateTimeConstants, ., MILLIS_PER_WEEK, ;, }, int, currentWoyWeek, =]
[;, }, else, if, (, workWoyYear, >, year, ), {, workInstant, -=, DateTimeConstants, ., MILLIS_PER_WEEK, ;, }, int, currentWoyWeek, =]
[(, workWoyYear, >, year, ), {, workInstant, -=, DateTimeConstants, ., MILLIS_PER_WEEK, ;, }, int, currentWoyWeek, =, iChronology, ., getWeekOfWeekyear, (]
[year, ), {, workInstant, -=, DateTimeConstants, ., MILLIS_PER_WEEK, ;, }, int, currentWoyWeek, =, iChronology, ., getWeekOfWeekyear, (, workInstant, ), ;]
[{, workInstant, -=, DateTimeConstants, ., MILLIS_PER_WEEK, ;, }, int, currentWoyWeek, =, iChronology, ., getWeekOfWeekyear, (, workInstant, ), ;, workInstant, =]
[{, workInstant, -=, DateTimeConstants, ., MILLIS_PER_WEEK, ;, }, int, currentWoyWeek, =, iChronology, ., getWeekOfWeekyear, (, workInstant, ), ;, workInstant, =]
[-=, DateTimeConstants, ., MILLIS_PER_WEEK, ;, }, int, currentWoyWeek, =, iChronology, ., getWeekOfWeekyear, (, workInstant, ), ;, workInstant, =, workInstant, +]
[-=, DateTimeConstants, ., MILLIS_PER_WEEK, ;, }, int, currentWoyWeek, =, iChronology, ., getWeekOfWeekyear, (, workInstant, ), ;, workInstant, =, workInstant, +]
[DateTimeConstants, ., MILLIS_PER_WEEK, ;, }, int, currentWoyWeek, =, iChronology, ., getWeekOfWeekyear, (, workInstant, ), ;, workInstant, =, workInstant, +, (]
[DateTimeConstants, ., MILLIS_PER_WEEK, ;, }, int, currentWoyWeek, =, iChronology, ., getWeekOfWeekyear, (, workInstant, ), ;, workInstant, =, workInstant, +, (]
[MILLIS_PER_WEEK, ;, }, int, currentWoyWeek, =, iChronology, ., getWeekOfWeekyear, (, workInstant, ), ;, workInstant, =, workInstant, +, (, setToWeek, -]
[int, currentWoyWeek, =, iChronology, ., getWeekOfWeekyear, (, workInstant, ), ;, workInstant, =, workInstant, +, (, setToWeek, -, currentWoyWeek, ), *]
[iChronology, ., getWeekOfWeekyear, (, workInstant, ), ;, workInstant, =, workInstant, +, (, setToWeek, -, currentWoyWeek, ), *, (, long, )]
[iChronology, ., getWeekOfWeekyear, (, workInstant, ), ;, workInstant, =, workInstant, +, (, setToWeek, -, currentWoyWeek, ), *, (, long, )]
[workInstant, ), ;, workInstant, =, workInstant, +, (, setToWeek, -, currentWoyWeek, ), *, (, long, ), DateTimeConstants, ., MILLIS_PER_WEEK, ;]
[;, workInstant, =, workInstant, +, (, setToWeek, -, currentWoyWeek, ), *, (, long, ), DateTimeConstants, ., MILLIS_PER_WEEK, ;, workInstant, =]
[;, workInstant, =, workInstant, +, (, setToWeek, -, currentWoyWeek, ), *, (, long, ), DateTimeConstants, ., MILLIS_PER_WEEK, ;, workInstant, =]
[;, workInstant, =, workInstant, +, (, setToWeek, -, currentWoyWeek, ), *, (, long, ), DateTimeConstants, ., MILLIS_PER_WEEK, ;, workInstant, =]
[currentWoyWeek, ), *, (, long, ), DateTimeConstants, ., MILLIS_PER_WEEK, ;, workInstant, =, iChronology, ., dayOfWeek, (, ), ., set, (]
[*, (, long, ), DateTimeConstants, ., MILLIS_PER_WEEK, ;, workInstant, =, iChronology, ., dayOfWeek, (, ), ., set, (, workInstant, ,]
[DateTimeConstants, ., MILLIS_PER_WEEK, ;, workInstant, =, iChronology, ., dayOfWeek, (, ), ., set, (, workInstant, ,, thisDow, ), ;, return]
[), ., set, (, workInstant, ,, thisDow, ), ;, return, workInstant, ;, }, public, DurationField, getRangeDurationField, (, ), {, return]
[}, public, DurationField, getRangeDurationField, (, ), {, return, null, ;, }, public, boolean, isLeap, (, long, instant, ), {, return]
[}, public, DurationField, getRangeDurationField, (, ), {, return, null, ;, }, public, boolean, isLeap, (, long, instant, ), {, return]
[}, public, DurationField, getRangeDurationField, (, ), {, return, null, ;, }, public, boolean, isLeap, (, long, instant, ), {, return]
[(, ), {, return, null, ;, }, public, boolean, isLeap, (, long, instant, ), {, return, iChronology, ., getWeeksInYear, (]
[(, ), {, return, null, ;, }, public, boolean, isLeap, (, long, instant, ), {, return, iChronology, ., getWeeksInYear, (]
[null, ;, }, public, boolean, isLeap, (, long, instant, ), {, return, iChronology, ., getWeeksInYear, (, iChronology, ., getWeekyear, (]
[boolean, isLeap, (, long, instant, ), {, return, iChronology, ., getWeeksInYear, (, iChronology, ., getWeekyear, (, instant, ), ), >]
[iChronology, ., getWeekyear, (, instant, ), ), >, 52, ;, }, public, int, getLeapAmount, (, long, instant, ), {, return]
[iChronology, ., getWeekyear, (, instant, ), ), >, 52, ;, }, public, int, getLeapAmount, (, long, instant, ), {, return]
[iChronology, ., getWeekyear, (, instant, ), ), >, 52, ;, }, public, int, getLeapAmount, (, long, instant, ), {, return]
[instant, ), ), >, 52, ;, }, public, int, getLeapAmount, (, long, instant, ), {, return, iChronology, ., getWeeksInYear, (]
[instant, ), ), >, 52, ;, }, public, int, getLeapAmount, (, long, instant, ), {, return, iChronology, ., getWeeksInYear, (]
[52, ;, }, public, int, getLeapAmount, (, long, instant, ), {, return, iChronology, ., getWeeksInYear, (, iChronology, ., getWeekyear, (]
[int, getLeapAmount, (, long, instant, ), {, return, iChronology, ., getWeeksInYear, (, iChronology, ., getWeekyear, (, instant, ), ), -]
[getWeeksInYear, (, iChronology, ., getWeekyear, (, instant, ), ), -, 52, ;, }, public, DurationField, getLeapDurationField, (, ), {, return]
[getWeeksInYear, (, iChronology, ., getWeekyear, (, instant, ), ), -, 52, ;, }, public, DurationField, getLeapDurationField, (, ), {, return]
[DurationField, getLeapDurationField, (, ), {, return, iChronology, ., weeks, (, ), ;, }, public, int, getMinimumValue, (, ), {, return]
[DurationField, getLeapDurationField, (, ), {, return, iChronology, ., weeks, (, ), ;, }, public, int, getMinimumValue, (, ), {, return]
[int, getMinimumValue, (, ), {, return, iChronology, ., getMinYear, (, ), ;, }, public, int, getMaximumValue, (, ), {, return]
[int, getMinimumValue, (, ), {, return, iChronology, ., getMinYear, (, ), ;, }, public, int, getMaximumValue, (, ), {, return]
[getMaximumValue, (, ), {, return, iChronology, ., getMaxYear, (, ), ;, }, public, long, roundFloor, (, long, instant, ), {]
[), {, return, iChronology, ., getMaxYear, (, ), ;, }, public, long, roundFloor, (, long, instant, ), {, instant, =]
[), {, return, iChronology, ., getMaxYear, (, ), ;, }, public, long, roundFloor, (, long, instant, ), {, instant, =]
[), {, return, iChronology, ., getMaxYear, (, ), ;, }, public, long, roundFloor, (, long, instant, ), {, instant, =]
[;, }, public, long, roundFloor, (, long, instant, ), {, instant, =, iChronology, ., weekOfWeekyear, (, ), ., roundFloor, (]
[long, instant, ), {, instant, =, iChronology, ., weekOfWeekyear, (, ), ., roundFloor, (, instant, ), ;, int, wow, =]
[long, instant, ), {, instant, =, iChronology, ., weekOfWeekyear, (, ), ., roundFloor, (, instant, ), ;, int, wow, =]
[instant, =, iChronology, ., weekOfWeekyear, (, ), ., roundFloor, (, instant, ), ;, int, wow, =, iChronology, ., getWeekOfWeekyear, (]
[(, ), ., roundFloor, (, instant, ), ;, int, wow, =, iChronology, ., getWeekOfWeekyear, (, instant, ), ;, if, (]
[(, ), ., roundFloor, (, instant, ), ;, int, wow, =, iChronology, ., getWeekOfWeekyear, (, instant, ), ;, if, (]
[., roundFloor, (, instant, ), ;, int, wow, =, iChronology, ., getWeekOfWeekyear, (, instant, ), ;, if, (, wow, >]
[instant, ), ;, int, wow, =, iChronology, ., getWeekOfWeekyear, (, instant, ), ;, if, (, wow, >, 1, ), {]
[;, int, wow, =, iChronology, ., getWeekOfWeekyear, (, instant, ), ;, if, (, wow, >, 1, ), {, instant, -=]
[;, int, wow, =, iChronology, ., getWeekOfWeekyear, (, instant, ), ;, if, (, wow, >, 1, ), {, instant, -=]
[int, wow, =, iChronology, ., getWeekOfWeekyear, (, instant, ), ;, if, (, wow, >, 1, ), {, instant, -=, (]
[iChronology, ., getWeekOfWeekyear, (, instant, ), ;, if, (, wow, >, 1, ), {, instant, -=, (, (, long, )]
[iChronology, ., getWeekOfWeekyear, (, instant, ), ;, if, (, wow, >, 1, ), {, instant, -=, (, (, long, )]
[), ;, if, (, wow, >, 1, ), {, instant, -=, (, (, long, ), DateTimeConstants, ., MILLIS_PER_WEEK, ), *]
[;, if, (, wow, >, 1, ), {, instant, -=, (, (, long, ), DateTimeConstants, ., MILLIS_PER_WEEK, ), *, (]
[;, if, (, wow, >, 1, ), {, instant, -=, (, (, long, ), DateTimeConstants, ., MILLIS_PER_WEEK, ), *, (]
[(, wow, >, 1, ), {, instant, -=, (, (, long, ), DateTimeConstants, ., MILLIS_PER_WEEK, ), *, (, wow, -]
[{, instant, -=, (, (, long, ), DateTimeConstants, ., MILLIS_PER_WEEK, ), *, (, wow, -, 1, ), ;, }, return]
[(, wow, -, 1, ), ;, }, return, instant, ;, }, public, long, remainder, (, long, instant, ), {, return]
[(, wow, -, 1, ), ;, }, return, instant, ;, }, public, long, remainder, (, long, instant, ), {, return]
[-, 1, ), ;, }, return, instant, ;, }, public, long, remainder, (, long, instant, ), {, return, instant, -]
[), ;, }, return, instant, ;, }, public, long, remainder, (, long, instant, ), {, return, instant, -, roundFloor, (]
[long, instant, ), {, return, instant, -, roundFloor, (, instant, ), ;, }, private, Object, readResolve, (, ), {, return]
[long, instant, ), {, return, instant, -, roundFloor, (, instant, ), ;, }, private, Object, readResolve, (, ), {, return]
