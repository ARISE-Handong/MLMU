[;, private, static, final, int, DEFAULT_ULPS, =, 10, ;, private, static, final, double, CUTOFF_THRESHOLD, =, 1e-12, ;, private, static, final]
[;, private, static, final, double, CUTOFF_THRESHOLD, =, 1e-12, ;, private, static, final, long, serialVersionUID, =, -, 1369660067587938365L, ;, private, final]
[;, private, static, final, long, serialVersionUID, =, -, 1369660067587938365L, ;, private, final, LinearObjectiveFunction, f, ;, private, final, List, <, LinearConstraint]
[;, private, final, LinearObjectiveFunction, f, ;, private, final, List, <, LinearConstraint, >, constraints, ;, private, final, boolean, restrictToNonNegative, ;, private]
[;, private, final, LinearObjectiveFunction, f, ;, private, final, List, <, LinearConstraint, >, constraints, ;, private, final, boolean, restrictToNonNegative, ;, private]
[;, private, transient, RealMatrix, tableau, ;, private, final, int, numDecisionVariables, ;, private, final, int, numSlackVariables, ;, private, int, numArtificialVariables, ;]
[,, constraints, ,, goalType, ,, restrictToNonNegative, ,, epsilon, ,, DEFAULT_ULPS, ), ;, }, SimplexTableau, (, final, LinearObjectiveFunction, f, ,, final]
[,, goalType, ,, restrictToNonNegative, ,, epsilon, ,, DEFAULT_ULPS, ), ;, }, SimplexTableau, (, final, LinearObjectiveFunction, f, ,, final, Collection, <]
[,, restrictToNonNegative, ,, epsilon, ,, DEFAULT_ULPS, ), ;, }, SimplexTableau, (, final, LinearObjectiveFunction, f, ,, final, Collection, <, LinearConstraint, >]
[,, epsilon, ,, DEFAULT_ULPS, ), ;, }, SimplexTableau, (, final, LinearObjectiveFunction, f, ,, final, Collection, <, LinearConstraint, >, constraints, ,]
[,, DEFAULT_ULPS, ), ;, }, SimplexTableau, (, final, LinearObjectiveFunction, f, ,, final, Collection, <, LinearConstraint, >, constraints, ,, final, GoalType]
[), ;, }, SimplexTableau, (, final, LinearObjectiveFunction, f, ,, final, Collection, <, LinearConstraint, >, constraints, ,, final, GoalType, goalType, ,]
[=, f, ;, this, ., constraints, =, normalizeConstraints, (, constraints, ), ;, this, ., restrictToNonNegative, =, restrictToNonNegative, ;, this, .]
[., f, =, f, ;, this, ., constraints, =, normalizeConstraints, (, constraints, ), ;, this, ., restrictToNonNegative, =, restrictToNonNegative, ;]
[;, this, ., constraints, =, normalizeConstraints, (, constraints, ), ;, this, ., restrictToNonNegative, =, restrictToNonNegative, ;, this, ., epsilon, =]
[=, normalizeConstraints, (, constraints, ), ;, this, ., restrictToNonNegative, =, restrictToNonNegative, ;, this, ., epsilon, =, epsilon, ;, this, .]
[., constraints, =, normalizeConstraints, (, constraints, ), ;, this, ., restrictToNonNegative, =, restrictToNonNegative, ;, this, ., epsilon, =, epsilon, ;]
[;, this, ., restrictToNonNegative, =, restrictToNonNegative, ;, this, ., epsilon, =, epsilon, ;, this, ., maxUlps, =, maxUlps, ;, this]
[), ;, this, ., restrictToNonNegative, =, restrictToNonNegative, ;, this, ., epsilon, =, epsilon, ;, this, ., maxUlps, =, maxUlps, ;]
[=, restrictToNonNegative, ;, this, ., epsilon, =, epsilon, ;, this, ., maxUlps, =, maxUlps, ;, this, ., numDecisionVariables, =, f]
[., restrictToNonNegative, =, restrictToNonNegative, ;, this, ., epsilon, =, epsilon, ;, this, ., maxUlps, =, maxUlps, ;, this, ., numDecisionVariables]
[;, this, ., epsilon, =, epsilon, ;, this, ., maxUlps, =, maxUlps, ;, this, ., numDecisionVariables, =, f, ., getCoefficients]
[=, epsilon, ;, this, ., maxUlps, =, maxUlps, ;, this, ., numDecisionVariables, =, f, ., getCoefficients, (, ), ., getDimension]
[., epsilon, =, epsilon, ;, this, ., maxUlps, =, maxUlps, ;, this, ., numDecisionVariables, =, f, ., getCoefficients, (, )]
[;, this, ., maxUlps, =, maxUlps, ;, this, ., numDecisionVariables, =, f, ., getCoefficients, (, ), ., getDimension, (, )]
[=, maxUlps, ;, this, ., numDecisionVariables, =, f, ., getCoefficients, (, ), ., getDimension, (, ), +, (, restrictToNonNegative, ?]
[., maxUlps, =, maxUlps, ;, this, ., numDecisionVariables, =, f, ., getCoefficients, (, ), ., getDimension, (, ), +, (]
[;, this, ., numDecisionVariables, =, f, ., getCoefficients, (, ), ., getDimension, (, ), +, (, restrictToNonNegative, ?, 0, :]
[=, f, ., getCoefficients, (, ), ., getDimension, (, ), +, (, restrictToNonNegative, ?, 0, :, 1, ), ;, this]
[., numDecisionVariables, =, f, ., getCoefficients, (, ), ., getDimension, (, ), +, (, restrictToNonNegative, ?, 0, :, 1, )]
[;, this, ., numSlackVariables, =, getConstraintTypeCounts, (, Relationship, ., LEQ, ), +, getConstraintTypeCounts, (, Relationship, ., GEQ, ), ;, this]
[+, (, restrictToNonNegative, ?, 0, :, 1, ), ;, this, ., numSlackVariables, =, getConstraintTypeCounts, (, Relationship, ., LEQ, ), +]
[., getDimension, (, ), +, (, restrictToNonNegative, ?, 0, :, 1, ), ;, this, ., numSlackVariables, =, getConstraintTypeCounts, (, Relationship]
[., getCoefficients, (, ), ., getDimension, (, ), +, (, restrictToNonNegative, ?, 0, :, 1, ), ;, this, ., numSlackVariables]
[;, this, ., numSlackVariables, =, getConstraintTypeCounts, (, Relationship, ., LEQ, ), +, getConstraintTypeCounts, (, Relationship, ., GEQ, ), ;, this]
[), ;, this, ., numSlackVariables, =, getConstraintTypeCounts, (, Relationship, ., LEQ, ), +, getConstraintTypeCounts, (, Relationship, ., GEQ, ), ;]
[?, 0, :, 1, ), ;, this, ., numSlackVariables, =, getConstraintTypeCounts, (, Relationship, ., LEQ, ), +, getConstraintTypeCounts, (, Relationship]
[:, 1, ), ;, this, ., numSlackVariables, =, getConstraintTypeCounts, (, Relationship, ., LEQ, ), +, getConstraintTypeCounts, (, Relationship, ., GEQ]
[), ;, this, ., numSlackVariables, =, getConstraintTypeCounts, (, Relationship, ., LEQ, ), +, getConstraintTypeCounts, (, Relationship, ., GEQ, ), ;]
[=, getConstraintTypeCounts, (, Relationship, ., LEQ, ), +, getConstraintTypeCounts, (, Relationship, ., GEQ, ), ;, this, ., numArtificialVariables, =, getConstraintTypeCounts]
[., numSlackVariables, =, getConstraintTypeCounts, (, Relationship, ., LEQ, ), +, getConstraintTypeCounts, (, Relationship, ., GEQ, ), ;, this, ., numArtificialVariables]
[;, this, ., numArtificialVariables, =, getConstraintTypeCounts, (, Relationship, ., EQ, ), +, getConstraintTypeCounts, (, Relationship, ., GEQ, ), ;, this]
[+, getConstraintTypeCounts, (, Relationship, ., GEQ, ), ;, this, ., numArtificialVariables, =, getConstraintTypeCounts, (, Relationship, ., EQ, ), +, getConstraintTypeCounts]
[), +, getConstraintTypeCounts, (, Relationship, ., GEQ, ), ;, this, ., numArtificialVariables, =, getConstraintTypeCounts, (, Relationship, ., EQ, ), +]
[., LEQ, ), +, getConstraintTypeCounts, (, Relationship, ., GEQ, ), ;, this, ., numArtificialVariables, =, getConstraintTypeCounts, (, Relationship, ., EQ]
[;, this, ., numArtificialVariables, =, getConstraintTypeCounts, (, Relationship, ., EQ, ), +, getConstraintTypeCounts, (, Relationship, ., GEQ, ), ;, this]
[), ;, this, ., numArtificialVariables, =, getConstraintTypeCounts, (, Relationship, ., EQ, ), +, getConstraintTypeCounts, (, Relationship, ., GEQ, ), ;]
[., GEQ, ), ;, this, ., numArtificialVariables, =, getConstraintTypeCounts, (, Relationship, ., EQ, ), +, getConstraintTypeCounts, (, Relationship, ., GEQ]
[=, getConstraintTypeCounts, (, Relationship, ., EQ, ), +, getConstraintTypeCounts, (, Relationship, ., GEQ, ), ;, this, ., tableau, =, createTableau]
[., numArtificialVariables, =, getConstraintTypeCounts, (, Relationship, ., EQ, ), +, getConstraintTypeCounts, (, Relationship, ., GEQ, ), ;, this, ., tableau]
[;, this, ., tableau, =, createTableau, (, goalType, ==, GoalType, ., MAXIMIZE, ), ;, initializeColumnLabels, (, ), ;, }, protected]
[+, getConstraintTypeCounts, (, Relationship, ., GEQ, ), ;, this, ., tableau, =, createTableau, (, goalType, ==, GoalType, ., MAXIMIZE, )]
[), +, getConstraintTypeCounts, (, Relationship, ., GEQ, ), ;, this, ., tableau, =, createTableau, (, goalType, ==, GoalType, ., MAXIMIZE]
[., EQ, ), +, getConstraintTypeCounts, (, Relationship, ., GEQ, ), ;, this, ., tableau, =, createTableau, (, goalType, ==, GoalType]
[;, this, ., tableau, =, createTableau, (, goalType, ==, GoalType, ., MAXIMIZE, ), ;, initializeColumnLabels, (, ), ;, }, protected]
[), ;, this, ., tableau, =, createTableau, (, goalType, ==, GoalType, ., MAXIMIZE, ), ;, initializeColumnLabels, (, ), ;, }]
[., GEQ, ), ;, this, ., tableau, =, createTableau, (, goalType, ==, GoalType, ., MAXIMIZE, ), ;, initializeColumnLabels, (, )]
[=, createTableau, (, goalType, ==, GoalType, ., MAXIMIZE, ), ;, initializeColumnLabels, (, ), ;, }, protected, void, initializeColumnLabels, (, )]
[., tableau, =, createTableau, (, goalType, ==, GoalType, ., MAXIMIZE, ), ;, initializeColumnLabels, (, ), ;, }, protected, void, initializeColumnLabels]
[;, initializeColumnLabels, (, ), ;, }, protected, void, initializeColumnLabels, (, ), {, if, (, getNumObjectiveFunctions, (, ), ==, 2, )]
[), ;, initializeColumnLabels, (, ), ;, }, protected, void, initializeColumnLabels, (, ), {, if, (, getNumObjectiveFunctions, (, ), ==, 2]
[==, GoalType, ., MAXIMIZE, ), ;, initializeColumnLabels, (, ), ;, }, protected, void, initializeColumnLabels, (, ), {, if, (, getNumObjectiveFunctions]
[), ;, initializeColumnLabels, (, ), ;, }, protected, void, initializeColumnLabels, (, ), {, if, (, getNumObjectiveFunctions, (, ), ==, 2]
[., MAXIMIZE, ), ;, initializeColumnLabels, (, ), ;, }, protected, void, initializeColumnLabels, (, ), {, if, (, getNumObjectiveFunctions, (, )]
[;, }, protected, void, initializeColumnLabels, (, ), {, if, (, getNumObjectiveFunctions, (, ), ==, 2, ), {, columnLabels, ., add]
[), {, columnLabels, ., add, (, "W", ), ;, }, columnLabels, ., add, (, "Z", ), ;, for, (, int]
[==, 2, ), {, columnLabels, ., add, (, "W", ), ;, }, columnLabels, ., add, (, "Z", ), ;, for]
[), {, columnLabels, ., add, (, "W", ), ;, }, columnLabels, ., add, (, "Z", ), ;, for, (, int]
[;, }, columnLabels, ., add, (, "Z", ), ;, for, (, int, i, =, 0, ;, i, <, getOriginalNumDecisionVariables, (]
[., add, (, "W", ), ;, }, columnLabels, ., add, (, "Z", ), ;, for, (, int, i, =, 0]
[), ;, }, columnLabels, ., add, (, "Z", ), ;, for, (, int, i, =, 0, ;, i, <, getOriginalNumDecisionVariables]
[;, for, (, int, i, =, 0, ;, i, <, getOriginalNumDecisionVariables, (, ), ;, i, ++, ), {, columnLabels, .]
[., add, (, "Z", ), ;, for, (, int, i, =, 0, ;, i, <, getOriginalNumDecisionVariables, (, ), ;, i]
[), ;, for, (, int, i, =, 0, ;, i, <, getOriginalNumDecisionVariables, (, ), ;, i, ++, ), {, columnLabels]
[;, i, <, getOriginalNumDecisionVariables, (, ), ;, i, ++, ), {, columnLabels, ., add, (, "x", +, i, ), ;]
[;, i, ++, ), {, columnLabels, ., add, (, "x", +, i, ), ;, }, if, (, !, restrictToNonNegative, )]
[<, getOriginalNumDecisionVariables, (, ), ;, i, ++, ), {, columnLabels, ., add, (, "x", +, i, ), ;, }, if]
[;, i, ++, ), {, columnLabels, ., add, (, "x", +, i, ), ;, }, if, (, !, restrictToNonNegative, )]
[), {, columnLabels, ., add, (, "x", +, i, ), ;, }, if, (, !, restrictToNonNegative, ), {, columnLabels, .]
[++, ), {, columnLabels, ., add, (, "x", +, i, ), ;, }, if, (, !, restrictToNonNegative, ), {, columnLabels]
[;, }, if, (, !, restrictToNonNegative, ), {, columnLabels, ., add, (, NEGATIVE_VAR_COLUMN_LABEL, ), ;, }, for, (, int, i]
[., add, (, "x", +, i, ), ;, }, if, (, !, restrictToNonNegative, ), {, columnLabels, ., add, (, NEGATIVE_VAR_COLUMN_LABEL]
[), ;, }, if, (, !, restrictToNonNegative, ), {, columnLabels, ., add, (, NEGATIVE_VAR_COLUMN_LABEL, ), ;, }, for, (, int]
[+, i, ), ;, }, if, (, !, restrictToNonNegative, ), {, columnLabels, ., add, (, NEGATIVE_VAR_COLUMN_LABEL, ), ;, }, for]
[), ;, }, if, (, !, restrictToNonNegative, ), {, columnLabels, ., add, (, NEGATIVE_VAR_COLUMN_LABEL, ), ;, }, for, (, int]
[), {, columnLabels, ., add, (, NEGATIVE_VAR_COLUMN_LABEL, ), ;, }, for, (, int, i, =, 0, ;, i, <, getNumSlackVariables]
[), {, columnLabels, ., add, (, NEGATIVE_VAR_COLUMN_LABEL, ), ;, }, for, (, int, i, =, 0, ;, i, <, getNumSlackVariables]
[;, }, for, (, int, i, =, 0, ;, i, <, getNumSlackVariables, (, ), ;, i, ++, ), {, columnLabels]
[., add, (, NEGATIVE_VAR_COLUMN_LABEL, ), ;, }, for, (, int, i, =, 0, ;, i, <, getNumSlackVariables, (, ), ;]
[), ;, }, for, (, int, i, =, 0, ;, i, <, getNumSlackVariables, (, ), ;, i, ++, ), {]
[;, i, <, getNumSlackVariables, (, ), ;, i, ++, ), {, columnLabels, ., add, (, "s", +, i, ), ;]
[;, i, ++, ), {, columnLabels, ., add, (, "s", +, i, ), ;, }, for, (, int, i, =]
[<, getNumSlackVariables, (, ), ;, i, ++, ), {, columnLabels, ., add, (, "s", +, i, ), ;, }, for]
[;, i, ++, ), {, columnLabels, ., add, (, "s", +, i, ), ;, }, for, (, int, i, =]
[), {, columnLabels, ., add, (, "s", +, i, ), ;, }, for, (, int, i, =, 0, ;, i]
[++, ), {, columnLabels, ., add, (, "s", +, i, ), ;, }, for, (, int, i, =, 0, ;]
[;, }, for, (, int, i, =, 0, ;, i, <, getNumArtificialVariables, (, ), ;, i, ++, ), {, columnLabels]
[., add, (, "s", +, i, ), ;, }, for, (, int, i, =, 0, ;, i, <, getNumArtificialVariables, (]
[), ;, }, for, (, int, i, =, 0, ;, i, <, getNumArtificialVariables, (, ), ;, i, ++, ), {]
[+, i, ), ;, }, for, (, int, i, =, 0, ;, i, <, getNumArtificialVariables, (, ), ;, i, ++]
[), ;, }, for, (, int, i, =, 0, ;, i, <, getNumArtificialVariables, (, ), ;, i, ++, ), {]
[;, i, <, getNumArtificialVariables, (, ), ;, i, ++, ), {, columnLabels, ., add, (, "a", +, i, ), ;]
[;, i, ++, ), {, columnLabels, ., add, (, "a", +, i, ), ;, }, columnLabels, ., add, (, "RHS"]
[<, getNumArtificialVariables, (, ), ;, i, ++, ), {, columnLabels, ., add, (, "a", +, i, ), ;, }, columnLabels]
[;, i, ++, ), {, columnLabels, ., add, (, "a", +, i, ), ;, }, columnLabels, ., add, (, "RHS"]
[), {, columnLabels, ., add, (, "a", +, i, ), ;, }, columnLabels, ., add, (, "RHS", ), ;, }]
[++, ), {, columnLabels, ., add, (, "a", +, i, ), ;, }, columnLabels, ., add, (, "RHS", ), ;]
[;, }, columnLabels, ., add, (, "RHS", ), ;, }, protected, RealMatrix, createTableau, (, final, boolean, maximize, ), {, int]
[., add, (, "a", +, i, ), ;, }, columnLabels, ., add, (, "RHS", ), ;, }, protected, RealMatrix, createTableau]
[), ;, }, columnLabels, ., add, (, "RHS", ), ;, }, protected, RealMatrix, createTableau, (, final, boolean, maximize, ), {]
[+, i, ), ;, }, columnLabels, ., add, (, "RHS", ), ;, }, protected, RealMatrix, createTableau, (, final, boolean, maximize]
[), ;, }, columnLabels, ., add, (, "RHS", ), ;, }, protected, RealMatrix, createTableau, (, final, boolean, maximize, ), {]
[;, }, protected, RealMatrix, createTableau, (, final, boolean, maximize, ), {, int, width, =, numDecisionVariables, +, numSlackVariables, +, numArtificialVariables, +]
[., add, (, "RHS", ), ;, }, protected, RealMatrix, createTableau, (, final, boolean, maximize, ), {, int, width, =, numDecisionVariables]
[), ;, }, protected, RealMatrix, createTableau, (, final, boolean, maximize, ), {, int, width, =, numDecisionVariables, +, numSlackVariables, +, numArtificialVariables]
[;, int, height, =, constraints, ., size, (, ), +, getNumObjectiveFunctions, (, ), ;, Array2DRowRealMatrix, matrix, =, new, Array2DRowRealMatrix, (]
[+, 1, ;, int, height, =, constraints, ., size, (, ), +, getNumObjectiveFunctions, (, ), ;, Array2DRowRealMatrix, matrix, =, new]
[+, getNumObjectiveFunctions, (, ), +, 1, ;, int, height, =, constraints, ., size, (, ), +, getNumObjectiveFunctions, (, ), ;]
[+, numArtificialVariables, +, getNumObjectiveFunctions, (, ), +, 1, ;, int, height, =, constraints, ., size, (, ), +, getNumObjectiveFunctions, (]
[+, numSlackVariables, +, numArtificialVariables, +, getNumObjectiveFunctions, (, ), +, 1, ;, int, height, =, constraints, ., size, (, ), +]
[+, numArtificialVariables, +, getNumObjectiveFunctions, (, ), +, 1, ;, int, height, =, constraints, ., size, (, ), +, getNumObjectiveFunctions, (]
[+, getNumObjectiveFunctions, (, ), +, 1, ;, int, height, =, constraints, ., size, (, ), +, getNumObjectiveFunctions, (, ), ;]
[+, 1, ;, int, height, =, constraints, ., size, (, ), +, getNumObjectiveFunctions, (, ), ;, Array2DRowRealMatrix, matrix, =, new]
[;, int, height, =, constraints, ., size, (, ), +, getNumObjectiveFunctions, (, ), ;, Array2DRowRealMatrix, matrix, =, new, Array2DRowRealMatrix, (]
[;, Array2DRowRealMatrix, matrix, =, new, Array2DRowRealMatrix, (, height, ,, width, ), ;, if, (, getNumObjectiveFunctions, (, ), ==, 2, )]
[+, getNumObjectiveFunctions, (, ), ;, Array2DRowRealMatrix, matrix, =, new, Array2DRowRealMatrix, (, height, ,, width, ), ;, if, (, getNumObjectiveFunctions, (]
[., size, (, ), +, getNumObjectiveFunctions, (, ), ;, Array2DRowRealMatrix, matrix, =, new, Array2DRowRealMatrix, (, height, ,, width, ), ;]
[;, Array2DRowRealMatrix, matrix, =, new, Array2DRowRealMatrix, (, height, ,, width, ), ;, if, (, getNumObjectiveFunctions, (, ), ==, 2, )]
[;, if, (, getNumObjectiveFunctions, (, ), ==, 2, ), {, matrix, ., setEntry, (, 0, ,, 0, ,, -, 1]
[,, width, ), ;, if, (, getNumObjectiveFunctions, (, ), ==, 2, ), {, matrix, ., setEntry, (, 0, ,, 0]
[), ;, if, (, getNumObjectiveFunctions, (, ), ==, 2, ), {, matrix, ., setEntry, (, 0, ,, 0, ,, -]
[), {, matrix, ., setEntry, (, 0, ,, 0, ,, -, 1, ), ;, }, int, zIndex, =, (, getNumObjectiveFunctions]
[==, 2, ), {, matrix, ., setEntry, (, 0, ,, 0, ,, -, 1, ), ;, }, int, zIndex, =]
[), {, matrix, ., setEntry, (, 0, ,, 0, ,, -, 1, ), ;, }, int, zIndex, =, (, getNumObjectiveFunctions]
[;, }, int, zIndex, =, (, getNumObjectiveFunctions, (, ), ==, 1, ), ?, 0, :, 1, ;, matrix, ., setEntry]
[., setEntry, (, 0, ,, 0, ,, -, 1, ), ;, }, int, zIndex, =, (, getNumObjectiveFunctions, (, ), ==]
[,, 0, ,, -, 1, ), ;, }, int, zIndex, =, (, getNumObjectiveFunctions, (, ), ==, 1, ), ?, 0]
[,, -, 1, ), ;, }, int, zIndex, =, (, getNumObjectiveFunctions, (, ), ==, 1, ), ?, 0, :, 1]
[), ;, }, int, zIndex, =, (, getNumObjectiveFunctions, (, ), ==, 1, ), ?, 0, :, 1, ;, matrix, .]
[), ;, }, int, zIndex, =, (, getNumObjectiveFunctions, (, ), ==, 1, ), ?, 0, :, 1, ;, matrix, .]
[;, matrix, ., setEntry, (, zIndex, ,, zIndex, ,, maximize, ?, 1, :, -, 1, ), ;, RealVector, objectiveCoefficients, =]
[?, 0, :, 1, ;, matrix, ., setEntry, (, zIndex, ,, zIndex, ,, maximize, ?, 1, :, -, 1, )]
[), ?, 0, :, 1, ;, matrix, ., setEntry, (, zIndex, ,, zIndex, ,, maximize, ?, 1, :, -, 1]
[==, 1, ), ?, 0, :, 1, ;, matrix, ., setEntry, (, zIndex, ,, zIndex, ,, maximize, ?, 1, :]
[), ?, 0, :, 1, ;, matrix, ., setEntry, (, zIndex, ,, zIndex, ,, maximize, ?, 1, :, -, 1]
[:, 1, ;, matrix, ., setEntry, (, zIndex, ,, zIndex, ,, maximize, ?, 1, :, -, 1, ), ;, RealVector]
[;, matrix, ., setEntry, (, zIndex, ,, zIndex, ,, maximize, ?, 1, :, -, 1, ), ;, RealVector, objectiveCoefficients, =]
[;, RealVector, objectiveCoefficients, =, maximize, ?, f, ., getCoefficients, (, ), ., mapMultiply, (, -, 1, ), :, f, .]
[., setEntry, (, zIndex, ,, zIndex, ,, maximize, ?, 1, :, -, 1, ), ;, RealVector, objectiveCoefficients, =, maximize, ?]
[,, zIndex, ,, maximize, ?, 1, :, -, 1, ), ;, RealVector, objectiveCoefficients, =, maximize, ?, f, ., getCoefficients, (]
[,, maximize, ?, 1, :, -, 1, ), ;, RealVector, objectiveCoefficients, =, maximize, ?, f, ., getCoefficients, (, ), .]
[), ;, RealVector, objectiveCoefficients, =, maximize, ?, f, ., getCoefficients, (, ), ., mapMultiply, (, -, 1, ), :, f]
[?, 1, :, -, 1, ), ;, RealVector, objectiveCoefficients, =, maximize, ?, f, ., getCoefficients, (, ), ., mapMultiply, (]
[:, -, 1, ), ;, RealVector, objectiveCoefficients, =, maximize, ?, f, ., getCoefficients, (, ), ., mapMultiply, (, -, 1]
[), ;, RealVector, objectiveCoefficients, =, maximize, ?, f, ., getCoefficients, (, ), ., mapMultiply, (, -, 1, ), :, f]
[), ;, RealVector, objectiveCoefficients, =, maximize, ?, f, ., getCoefficients, (, ), ., mapMultiply, (, -, 1, ), :, f]
[;, copyArray, (, objectiveCoefficients, ., toArray, (, ), ,, matrix, ., getDataRef, (, ), [, zIndex, ], ), ;, matrix]
[?, f, ., getCoefficients, (, ), ., mapMultiply, (, -, 1, ), :, f, ., getCoefficients, (, ), ;, copyArray]
[:, f, ., getCoefficients, (, ), ;, copyArray, (, objectiveCoefficients, ., toArray, (, ), ,, matrix, ., getDataRef, (, )]
[., mapMultiply, (, -, 1, ), :, f, ., getCoefficients, (, ), ;, copyArray, (, objectiveCoefficients, ., toArray, (, )]
[., getCoefficients, (, ), ., mapMultiply, (, -, 1, ), :, f, ., getCoefficients, (, ), ;, copyArray, (, objectiveCoefficients]
[), :, f, ., getCoefficients, (, ), ;, copyArray, (, objectiveCoefficients, ., toArray, (, ), ,, matrix, ., getDataRef, (]
[), :, f, ., getCoefficients, (, ), ;, copyArray, (, objectiveCoefficients, ., toArray, (, ), ,, matrix, ., getDataRef, (]
[;, copyArray, (, objectiveCoefficients, ., toArray, (, ), ,, matrix, ., getDataRef, (, ), [, zIndex, ], ), ;, matrix]
[., getCoefficients, (, ), ;, copyArray, (, objectiveCoefficients, ., toArray, (, ), ,, matrix, ., getDataRef, (, ), [, zIndex]
[;, matrix, ., setEntry, (, zIndex, ,, width, -, 1, ,, maximize, ?, f, ., getConstantTerm, (, ), :, -]
[,, matrix, ., getDataRef, (, ), [, zIndex, ], ), ;, matrix, ., setEntry, (, zIndex, ,, width, -, 1]
[., toArray, (, ), ,, matrix, ., getDataRef, (, ), [, zIndex, ], ), ;, matrix, ., setEntry, (, zIndex]
[), ;, matrix, ., setEntry, (, zIndex, ,, width, -, 1, ,, maximize, ?, f, ., getConstantTerm, (, ), :]
[[, zIndex, ], ), ;, matrix, ., setEntry, (, zIndex, ,, width, -, 1, ,, maximize, ?, f, ., getConstantTerm]
[., getDataRef, (, ), [, zIndex, ], ), ;, matrix, ., setEntry, (, zIndex, ,, width, -, 1, ,, maximize]
[], ), ;, matrix, ., setEntry, (, zIndex, ,, width, -, 1, ,, maximize, ?, f, ., getConstantTerm, (, )]
[;, if, (, !, restrictToNonNegative, ), {, matrix, ., setEntry, (, zIndex, ,, getSlackVariableOffset, (, ), -, 1, ,, getInvertedCoefficientSum]
[., setEntry, (, zIndex, ,, width, -, 1, ,, maximize, ?, f, ., getConstantTerm, (, ), :, -, 1, *]
[,, width, -, 1, ,, maximize, ?, f, ., getConstantTerm, (, ), :, -, 1, *, f, ., getConstantTerm, (]
[,, maximize, ?, f, ., getConstantTerm, (, ), :, -, 1, *, f, ., getConstantTerm, (, ), ), ;, if]
[-, 1, ,, maximize, ?, f, ., getConstantTerm, (, ), :, -, 1, *, f, ., getConstantTerm, (, ), )]
[,, maximize, ?, f, ., getConstantTerm, (, ), :, -, 1, *, f, ., getConstantTerm, (, ), ), ;, if]
[), ;, if, (, !, restrictToNonNegative, ), {, matrix, ., setEntry, (, zIndex, ,, getSlackVariableOffset, (, ), -, 1, ,]
[?, f, ., getConstantTerm, (, ), :, -, 1, *, f, ., getConstantTerm, (, ), ), ;, if, (, !]
[:, -, 1, *, f, ., getConstantTerm, (, ), ), ;, if, (, !, restrictToNonNegative, ), {, matrix, ., setEntry]
[., getConstantTerm, (, ), :, -, 1, *, f, ., getConstantTerm, (, ), ), ;, if, (, !, restrictToNonNegative, )]
[), ;, if, (, !, restrictToNonNegative, ), {, matrix, ., setEntry, (, zIndex, ,, getSlackVariableOffset, (, ), -, 1, ,]
[*, f, ., getConstantTerm, (, ), ), ;, if, (, !, restrictToNonNegative, ), {, matrix, ., setEntry, (, zIndex, ,]
[*, f, ., getConstantTerm, (, ), ), ;, if, (, !, restrictToNonNegative, ), {, matrix, ., setEntry, (, zIndex, ,]
[), ;, if, (, !, restrictToNonNegative, ), {, matrix, ., setEntry, (, zIndex, ,, getSlackVariableOffset, (, ), -, 1, ,]
[., getConstantTerm, (, ), ), ;, if, (, !, restrictToNonNegative, ), {, matrix, ., setEntry, (, zIndex, ,, getSlackVariableOffset, (]
[), {, matrix, ., setEntry, (, zIndex, ,, getSlackVariableOffset, (, ), -, 1, ,, getInvertedCoefficientSum, (, objectiveCoefficients, ), ), ;]
[), {, matrix, ., setEntry, (, zIndex, ,, getSlackVariableOffset, (, ), -, 1, ,, getInvertedCoefficientSum, (, objectiveCoefficients, ), ), ;]
[;, }, int, slackVar, =, 0, ;, int, artificialVar, =, 0, ;, for, (, int, i, =, 0, ;, i]
[., setEntry, (, zIndex, ,, getSlackVariableOffset, (, ), -, 1, ,, getInvertedCoefficientSum, (, objectiveCoefficients, ), ), ;, }, int, slackVar]
[,, getSlackVariableOffset, (, ), -, 1, ,, getInvertedCoefficientSum, (, objectiveCoefficients, ), ), ;, }, int, slackVar, =, 0, ;, int]
[,, getInvertedCoefficientSum, (, objectiveCoefficients, ), ), ;, }, int, slackVar, =, 0, ;, int, artificialVar, =, 0, ;, for, (]
[-, 1, ,, getInvertedCoefficientSum, (, objectiveCoefficients, ), ), ;, }, int, slackVar, =, 0, ;, int, artificialVar, =, 0, ;]
[,, getInvertedCoefficientSum, (, objectiveCoefficients, ), ), ;, }, int, slackVar, =, 0, ;, int, artificialVar, =, 0, ;, for, (]
[), ;, }, int, slackVar, =, 0, ;, int, artificialVar, =, 0, ;, for, (, int, i, =, 0, ;]
[), ), ;, }, int, slackVar, =, 0, ;, int, artificialVar, =, 0, ;, for, (, int, i, =, 0]
[;, int, artificialVar, =, 0, ;, for, (, int, i, =, 0, ;, i, <, constraints, ., size, (, )]
[;, for, (, int, i, =, 0, ;, i, <, constraints, ., size, (, ), ;, i, ++, ), {]
[;, i, <, constraints, ., size, (, ), ;, i, ++, ), {, LinearConstraint, constraint, =, constraints, ., get, (]
[;, i, ++, ), {, LinearConstraint, constraint, =, constraints, ., get, (, i, ), ;, int, row, =, getNumObjectiveFunctions, (]
[<, constraints, ., size, (, ), ;, i, ++, ), {, LinearConstraint, constraint, =, constraints, ., get, (, i, )]
[;, i, ++, ), {, LinearConstraint, constraint, =, constraints, ., get, (, i, ), ;, int, row, =, getNumObjectiveFunctions, (]
[., size, (, ), ;, i, ++, ), {, LinearConstraint, constraint, =, constraints, ., get, (, i, ), ;, int]
[), {, LinearConstraint, constraint, =, constraints, ., get, (, i, ), ;, int, row, =, getNumObjectiveFunctions, (, ), +, i]
[++, ), {, LinearConstraint, constraint, =, constraints, ., get, (, i, ), ;, int, row, =, getNumObjectiveFunctions, (, ), +]
[;, int, row, =, getNumObjectiveFunctions, (, ), +, i, ;, copyArray, (, constraint, ., getCoefficients, (, ), ., toArray, (]
[., get, (, i, ), ;, int, row, =, getNumObjectiveFunctions, (, ), +, i, ;, copyArray, (, constraint, ., getCoefficients]
[), ;, int, row, =, getNumObjectiveFunctions, (, ), +, i, ;, copyArray, (, constraint, ., getCoefficients, (, ), ., toArray]
[;, copyArray, (, constraint, ., getCoefficients, (, ), ., toArray, (, ), ,, matrix, ., getDataRef, (, ), [, row]
[+, i, ;, copyArray, (, constraint, ., getCoefficients, (, ), ., toArray, (, ), ,, matrix, ., getDataRef, (, )]
[;, copyArray, (, constraint, ., getCoefficients, (, ), ., toArray, (, ), ,, matrix, ., getDataRef, (, ), [, row]
[;, if, (, !, restrictToNonNegative, ), {, matrix, ., setEntry, (, row, ,, getSlackVariableOffset, (, ), -, 1, ,, getInvertedCoefficientSum]
[,, matrix, ., getDataRef, (, ), [, row, ], ), ;, if, (, !, restrictToNonNegative, ), {, matrix, ., setEntry]
[., toArray, (, ), ,, matrix, ., getDataRef, (, ), [, row, ], ), ;, if, (, !, restrictToNonNegative, )]
[., getCoefficients, (, ), ., toArray, (, ), ,, matrix, ., getDataRef, (, ), [, row, ], ), ;, if]
[), ;, if, (, !, restrictToNonNegative, ), {, matrix, ., setEntry, (, row, ,, getSlackVariableOffset, (, ), -, 1, ,]
[[, row, ], ), ;, if, (, !, restrictToNonNegative, ), {, matrix, ., setEntry, (, row, ,, getSlackVariableOffset, (, )]
[., getDataRef, (, ), [, row, ], ), ;, if, (, !, restrictToNonNegative, ), {, matrix, ., setEntry, (, row]
[], ), ;, if, (, !, restrictToNonNegative, ), {, matrix, ., setEntry, (, row, ,, getSlackVariableOffset, (, ), -, 1]
[), {, matrix, ., setEntry, (, row, ,, getSlackVariableOffset, (, ), -, 1, ,, getInvertedCoefficientSum, (, constraint, ., getCoefficients, (]
[), {, matrix, ., setEntry, (, row, ,, getSlackVariableOffset, (, ), -, 1, ,, getInvertedCoefficientSum, (, constraint, ., getCoefficients, (]
[;, }, matrix, ., setEntry, (, row, ,, width, -, 1, ,, constraint, ., getValue, (, ), ), ;, if]
[., setEntry, (, row, ,, getSlackVariableOffset, (, ), -, 1, ,, getInvertedCoefficientSum, (, constraint, ., getCoefficients, (, ), ), )]
[,, getSlackVariableOffset, (, ), -, 1, ,, getInvertedCoefficientSum, (, constraint, ., getCoefficients, (, ), ), ), ;, }, matrix, .]
[,, getInvertedCoefficientSum, (, constraint, ., getCoefficients, (, ), ), ), ;, }, matrix, ., setEntry, (, row, ,, width, -]
[-, 1, ,, getInvertedCoefficientSum, (, constraint, ., getCoefficients, (, ), ), ), ;, }, matrix, ., setEntry, (, row, ,]
[,, getInvertedCoefficientSum, (, constraint, ., getCoefficients, (, ), ), ), ;, }, matrix, ., setEntry, (, row, ,, width, -]
[), ;, }, matrix, ., setEntry, (, row, ,, width, -, 1, ,, constraint, ., getValue, (, ), ), ;]
[), ), ;, }, matrix, ., setEntry, (, row, ,, width, -, 1, ,, constraint, ., getValue, (, ), )]
[., getCoefficients, (, ), ), ), ;, }, matrix, ., setEntry, (, row, ,, width, -, 1, ,, constraint, .]
[;, if, (, constraint, ., getRelationship, (, ), ==, Relationship, ., LEQ, ), {, matrix, ., setEntry, (, row, ,]
[., setEntry, (, row, ,, width, -, 1, ,, constraint, ., getValue, (, ), ), ;, if, (, constraint, .]
[,, width, -, 1, ,, constraint, ., getValue, (, ), ), ;, if, (, constraint, ., getRelationship, (, ), ==]
[,, constraint, ., getValue, (, ), ), ;, if, (, constraint, ., getRelationship, (, ), ==, Relationship, ., LEQ, )]
[-, 1, ,, constraint, ., getValue, (, ), ), ;, if, (, constraint, ., getRelationship, (, ), ==, Relationship, .]
[,, constraint, ., getValue, (, ), ), ;, if, (, constraint, ., getRelationship, (, ), ==, Relationship, ., LEQ, )]
[), ;, if, (, constraint, ., getRelationship, (, ), ==, Relationship, ., LEQ, ), {, matrix, ., setEntry, (, row]
[., getValue, (, ), ), ;, if, (, constraint, ., getRelationship, (, ), ==, Relationship, ., LEQ, ), {, matrix]
[), {, matrix, ., setEntry, (, row, ,, getSlackVariableOffset, (, ), +, slackVar, ++, ,, 1, ), ;, }, else]
[==, Relationship, ., LEQ, ), {, matrix, ., setEntry, (, row, ,, getSlackVariableOffset, (, ), +, slackVar, ++, ,, 1]
[., getRelationship, (, ), ==, Relationship, ., LEQ, ), {, matrix, ., setEntry, (, row, ,, getSlackVariableOffset, (, ), +]
[), {, matrix, ., setEntry, (, row, ,, getSlackVariableOffset, (, ), +, slackVar, ++, ,, 1, ), ;, }, else]
[., LEQ, ), {, matrix, ., setEntry, (, row, ,, getSlackVariableOffset, (, ), +, slackVar, ++, ,, 1, ), ;]
[;, }, else, if, (, constraint, ., getRelationship, (, ), ==, Relationship, ., GEQ, ), {, matrix, ., setEntry, (]
[., setEntry, (, row, ,, getSlackVariableOffset, (, ), +, slackVar, ++, ,, 1, ), ;, }, else, if, (, constraint]
[,, getSlackVariableOffset, (, ), +, slackVar, ++, ,, 1, ), ;, }, else, if, (, constraint, ., getRelationship, (, )]
[,, 1, ), ;, }, else, if, (, constraint, ., getRelationship, (, ), ==, Relationship, ., GEQ, ), {, matrix]
[+, slackVar, ++, ,, 1, ), ;, }, else, if, (, constraint, ., getRelationship, (, ), ==, Relationship, ., GEQ]
[,, 1, ), ;, }, else, if, (, constraint, ., getRelationship, (, ), ==, Relationship, ., GEQ, ), {, matrix]
[++, ,, 1, ), ;, }, else, if, (, constraint, ., getRelationship, (, ), ==, Relationship, ., GEQ, ), {]
[), ;, }, else, if, (, constraint, ., getRelationship, (, ), ==, Relationship, ., GEQ, ), {, matrix, ., setEntry]
[), {, matrix, ., setEntry, (, row, ,, getSlackVariableOffset, (, ), +, slackVar, ++, ,, -, 1, ), ;, }]
[==, Relationship, ., GEQ, ), {, matrix, ., setEntry, (, row, ,, getSlackVariableOffset, (, ), +, slackVar, ++, ,, -]
[., getRelationship, (, ), ==, Relationship, ., GEQ, ), {, matrix, ., setEntry, (, row, ,, getSlackVariableOffset, (, ), +]
[), {, matrix, ., setEntry, (, row, ,, getSlackVariableOffset, (, ), +, slackVar, ++, ,, -, 1, ), ;, }]
[., GEQ, ), {, matrix, ., setEntry, (, row, ,, getSlackVariableOffset, (, ), +, slackVar, ++, ,, -, 1, )]
[;, }, if, (, (, constraint, ., getRelationship, (, ), ==, Relationship, ., EQ, ), ||, (, constraint, ., getRelationship]
[., setEntry, (, row, ,, getSlackVariableOffset, (, ), +, slackVar, ++, ,, -, 1, ), ;, }, if, (, (]
[,, getSlackVariableOffset, (, ), +, slackVar, ++, ,, -, 1, ), ;, }, if, (, (, constraint, ., getRelationship, (]
[,, -, 1, ), ;, }, if, (, (, constraint, ., getRelationship, (, ), ==, Relationship, ., EQ, ), ||]
[+, slackVar, ++, ,, -, 1, ), ;, }, if, (, (, constraint, ., getRelationship, (, ), ==, Relationship, .]
[,, -, 1, ), ;, }, if, (, (, constraint, ., getRelationship, (, ), ==, Relationship, ., EQ, ), ||]
[++, ,, -, 1, ), ;, }, if, (, (, constraint, ., getRelationship, (, ), ==, Relationship, ., EQ, )]
[), ;, }, if, (, (, constraint, ., getRelationship, (, ), ==, Relationship, ., EQ, ), ||, (, constraint, .]
[), ;, }, if, (, (, constraint, ., getRelationship, (, ), ==, Relationship, ., EQ, ), ||, (, constraint, .]
[), {, matrix, ., setEntry, (, 0, ,, getArtificialVariableOffset, (, ), +, artificialVar, ,, 1, ), ;, matrix, ., setEntry]
[||, (, constraint, ., getRelationship, (, ), ==, Relationship, ., GEQ, ), ), {, matrix, ., setEntry, (, 0, ,]
[), ||, (, constraint, ., getRelationship, (, ), ==, Relationship, ., GEQ, ), ), {, matrix, ., setEntry, (, 0]
[==, Relationship, ., EQ, ), ||, (, constraint, ., getRelationship, (, ), ==, Relationship, ., GEQ, ), ), {, matrix]
[., getRelationship, (, ), ==, Relationship, ., EQ, ), ||, (, constraint, ., getRelationship, (, ), ==, Relationship, ., GEQ]
[), ||, (, constraint, ., getRelationship, (, ), ==, Relationship, ., GEQ, ), ), {, matrix, ., setEntry, (, 0]
[., EQ, ), ||, (, constraint, ., getRelationship, (, ), ==, Relationship, ., GEQ, ), ), {, matrix, ., setEntry]
[), {, matrix, ., setEntry, (, 0, ,, getArtificialVariableOffset, (, ), +, artificialVar, ,, 1, ), ;, matrix, ., setEntry]
[), ), {, matrix, ., setEntry, (, 0, ,, getArtificialVariableOffset, (, ), +, artificialVar, ,, 1, ), ;, matrix, .]
[==, Relationship, ., GEQ, ), ), {, matrix, ., setEntry, (, 0, ,, getArtificialVariableOffset, (, ), +, artificialVar, ,, 1]
[., getRelationship, (, ), ==, Relationship, ., GEQ, ), ), {, matrix, ., setEntry, (, 0, ,, getArtificialVariableOffset, (, )]
[), ), {, matrix, ., setEntry, (, 0, ,, getArtificialVariableOffset, (, ), +, artificialVar, ,, 1, ), ;, matrix, .]
[., GEQ, ), ), {, matrix, ., setEntry, (, 0, ,, getArtificialVariableOffset, (, ), +, artificialVar, ,, 1, ), ;]
[;, matrix, ., setEntry, (, row, ,, getArtificialVariableOffset, (, ), +, artificialVar, ++, ,, 1, ), ;, matrix, ., setRowVector]
[., setEntry, (, 0, ,, getArtificialVariableOffset, (, ), +, artificialVar, ,, 1, ), ;, matrix, ., setEntry, (, row, ,]
[,, getArtificialVariableOffset, (, ), +, artificialVar, ,, 1, ), ;, matrix, ., setEntry, (, row, ,, getArtificialVariableOffset, (, ), +]
[,, 1, ), ;, matrix, ., setEntry, (, row, ,, getArtificialVariableOffset, (, ), +, artificialVar, ++, ,, 1, ), ;]
[+, artificialVar, ,, 1, ), ;, matrix, ., setEntry, (, row, ,, getArtificialVariableOffset, (, ), +, artificialVar, ++, ,, 1]
[,, 1, ), ;, matrix, ., setEntry, (, row, ,, getArtificialVariableOffset, (, ), +, artificialVar, ++, ,, 1, ), ;]
[), ;, matrix, ., setEntry, (, row, ,, getArtificialVariableOffset, (, ), +, artificialVar, ++, ,, 1, ), ;, matrix, .]
[;, matrix, ., setRowVector, (, 0, ,, matrix, ., getRowVector, (, 0, ), ., subtract, (, matrix, ., getRowVector, (]
[., setEntry, (, row, ,, getArtificialVariableOffset, (, ), +, artificialVar, ++, ,, 1, ), ;, matrix, ., setRowVector, (, 0]
[,, getArtificialVariableOffset, (, ), +, artificialVar, ++, ,, 1, ), ;, matrix, ., setRowVector, (, 0, ,, matrix, ., getRowVector]
[,, 1, ), ;, matrix, ., setRowVector, (, 0, ,, matrix, ., getRowVector, (, 0, ), ., subtract, (, matrix]
[+, artificialVar, ++, ,, 1, ), ;, matrix, ., setRowVector, (, 0, ,, matrix, ., getRowVector, (, 0, ), .]
[,, 1, ), ;, matrix, ., setRowVector, (, 0, ,, matrix, ., getRowVector, (, 0, ), ., subtract, (, matrix]
[++, ,, 1, ), ;, matrix, ., setRowVector, (, 0, ,, matrix, ., getRowVector, (, 0, ), ., subtract, (]
[), ;, matrix, ., setRowVector, (, 0, ,, matrix, ., getRowVector, (, 0, ), ., subtract, (, matrix, ., getRowVector]
[;, }, }, return, matrix, ;, }, public, List, <, LinearConstraint, >, normalizeConstraints, (, Collection, <, LinearConstraint, >, originalConstraints, )]
[., setRowVector, (, 0, ,, matrix, ., getRowVector, (, 0, ), ., subtract, (, matrix, ., getRowVector, (, row, )]
[,, matrix, ., getRowVector, (, 0, ), ., subtract, (, matrix, ., getRowVector, (, row, ), ), ), ;, }]
[), ;, }, }, return, matrix, ;, }, public, List, <, LinearConstraint, >, normalizeConstraints, (, Collection, <, LinearConstraint, >, originalConstraints]
[., subtract, (, matrix, ., getRowVector, (, row, ), ), ), ;, }, }, return, matrix, ;, }, public, List]
[., getRowVector, (, 0, ), ., subtract, (, matrix, ., getRowVector, (, row, ), ), ), ;, }, }, return]
[), ., subtract, (, matrix, ., getRowVector, (, row, ), ), ), ;, }, }, return, matrix, ;, }, public]
[), ), ;, }, }, return, matrix, ;, }, public, List, <, LinearConstraint, >, normalizeConstraints, (, Collection, <, LinearConstraint, >]
[., getRowVector, (, row, ), ), ), ;, }, }, return, matrix, ;, }, public, List, <, LinearConstraint, >, normalizeConstraints]
[), ), ), ;, }, }, return, matrix, ;, }, public, List, <, LinearConstraint, >, normalizeConstraints, (, Collection, <, LinearConstraint]
[;, }, public, List, <, LinearConstraint, >, normalizeConstraints, (, Collection, <, LinearConstraint, >, originalConstraints, ), {, List, <, LinearConstraint, >]
[;, for, (, LinearConstraint, constraint, :, originalConstraints, ), {, normalized, ., add, (, normalize, (, constraint, ), ), ;, }]
[), ;, for, (, LinearConstraint, constraint, :, originalConstraints, ), {, normalized, ., add, (, normalize, (, constraint, ), ), ;]
[., size, (, ), ), ;, for, (, LinearConstraint, constraint, :, originalConstraints, ), {, normalized, ., add, (, normalize, (]
[), {, normalized, ., add, (, normalize, (, constraint, ), ), ;, }, return, normalized, ;, }, private, LinearConstraint, normalize]
[;, }, return, normalized, ;, }, private, LinearConstraint, normalize, (, final, LinearConstraint, constraint, ), {, if, (, constraint, ., getValue]
[., add, (, normalize, (, constraint, ), ), ;, }, return, normalized, ;, }, private, LinearConstraint, normalize, (, final, LinearConstraint]
[), ;, }, return, normalized, ;, }, private, LinearConstraint, normalize, (, final, LinearConstraint, constraint, ), {, if, (, constraint, .]
[), ), ;, }, return, normalized, ;, }, private, LinearConstraint, normalize, (, final, LinearConstraint, constraint, ), {, if, (, constraint]
[;, }, private, LinearConstraint, normalize, (, final, LinearConstraint, constraint, ), {, if, (, constraint, ., getValue, (, ), <, 0]
[), {, return, new, LinearConstraint, (, constraint, ., getCoefficients, (, ), ., mapMultiply, (, -, 1, ), ,, constraint, .]
[<, 0, ), {, return, new, LinearConstraint, (, constraint, ., getCoefficients, (, ), ., mapMultiply, (, -, 1, ), ,]
[., getValue, (, ), <, 0, ), {, return, new, LinearConstraint, (, constraint, ., getCoefficients, (, ), ., mapMultiply, (]
[), {, return, new, LinearConstraint, (, constraint, ., getCoefficients, (, ), ., mapMultiply, (, -, 1, ), ,, constraint, .]
[;, }, return, new, LinearConstraint, (, constraint, ., getCoefficients, (, ), ,, constraint, ., getRelationship, (, ), ,, constraint, .]
[,, constraint, ., getRelationship, (, ), ., oppositeRelationship, (, ), ,, -, 1, *, constraint, ., getValue, (, ), )]
[., mapMultiply, (, -, 1, ), ,, constraint, ., getRelationship, (, ), ., oppositeRelationship, (, ), ,, -, 1, *]
[., getCoefficients, (, ), ., mapMultiply, (, -, 1, ), ,, constraint, ., getRelationship, (, ), ., oppositeRelationship, (, )]
[), ,, constraint, ., getRelationship, (, ), ., oppositeRelationship, (, ), ,, -, 1, *, constraint, ., getValue, (, )]
[), ,, constraint, ., getRelationship, (, ), ., oppositeRelationship, (, ), ,, -, 1, *, constraint, ., getValue, (, )]
[,, -, 1, *, constraint, ., getValue, (, ), ), ;, }, return, new, LinearConstraint, (, constraint, ., getCoefficients, (]
[., oppositeRelationship, (, ), ,, -, 1, *, constraint, ., getValue, (, ), ), ;, }, return, new, LinearConstraint, (]
[., getRelationship, (, ), ., oppositeRelationship, (, ), ,, -, 1, *, constraint, ., getValue, (, ), ), ;, }]
[), ;, }, return, new, LinearConstraint, (, constraint, ., getCoefficients, (, ), ,, constraint, ., getRelationship, (, ), ,, constraint]
[*, constraint, ., getValue, (, ), ), ;, }, return, new, LinearConstraint, (, constraint, ., getCoefficients, (, ), ,, constraint]
[*, constraint, ., getValue, (, ), ), ;, }, return, new, LinearConstraint, (, constraint, ., getCoefficients, (, ), ,, constraint]
[), ;, }, return, new, LinearConstraint, (, constraint, ., getCoefficients, (, ), ,, constraint, ., getRelationship, (, ), ,, constraint]
[., getValue, (, ), ), ;, }, return, new, LinearConstraint, (, constraint, ., getCoefficients, (, ), ,, constraint, ., getRelationship]
[;, }, protected, final, int, getNumObjectiveFunctions, (, ), {, return, this, ., numArtificialVariables, >, 0, ?, 2, :, 1, ;]
[,, constraint, ., getRelationship, (, ), ,, constraint, ., getValue, (, ), ), ;, }, protected, final, int, getNumObjectiveFunctions, (]
[., getCoefficients, (, ), ,, constraint, ., getRelationship, (, ), ,, constraint, ., getValue, (, ), ), ;, }, protected]
[,, constraint, ., getValue, (, ), ), ;, }, protected, final, int, getNumObjectiveFunctions, (, ), {, return, this, ., numArtificialVariables]
[., getRelationship, (, ), ,, constraint, ., getValue, (, ), ), ;, }, protected, final, int, getNumObjectiveFunctions, (, ), {]
[), ;, }, protected, final, int, getNumObjectiveFunctions, (, ), {, return, this, ., numArtificialVariables, >, 0, ?, 2, :, 1]
[., getValue, (, ), ), ;, }, protected, final, int, getNumObjectiveFunctions, (, ), {, return, this, ., numArtificialVariables, >, 0]
[;, }, private, int, getConstraintTypeCounts, (, final, Relationship, relationship, ), {, int, count, =, 0, ;, for, (, final, LinearConstraint]
[?, 2, :, 1, ;, }, private, int, getConstraintTypeCounts, (, final, Relationship, relationship, ), {, int, count, =, 0, ;]
[>, 0, ?, 2, :, 1, ;, }, private, int, getConstraintTypeCounts, (, final, Relationship, relationship, ), {, int, count, =]
[., numArtificialVariables, >, 0, ?, 2, :, 1, ;, }, private, int, getConstraintTypeCounts, (, final, Relationship, relationship, ), {, int]
[?, 2, :, 1, ;, }, private, int, getConstraintTypeCounts, (, final, Relationship, relationship, ), {, int, count, =, 0, ;]
[:, 1, ;, }, private, int, getConstraintTypeCounts, (, final, Relationship, relationship, ), {, int, count, =, 0, ;, for, (]
[;, }, private, int, getConstraintTypeCounts, (, final, Relationship, relationship, ), {, int, count, =, 0, ;, for, (, final, LinearConstraint]
[;, for, (, final, LinearConstraint, constraint, :, constraints, ), {, if, (, constraint, ., getRelationship, (, ), ==, relationship, )]
[), {, if, (, constraint, ., getRelationship, (, ), ==, relationship, ), {, ++, count, ;, }, }, return, count]
[), {, ++, count, ;, }, }, return, count, ;, }, protected, static, double, getInvertedCoefficientSum, (, final, RealVector, coefficients, )]
[==, relationship, ), {, ++, count, ;, }, }, return, count, ;, }, protected, static, double, getInvertedCoefficientSum, (, final, RealVector]
[., getRelationship, (, ), ==, relationship, ), {, ++, count, ;, }, }, return, count, ;, }, protected, static, double]
[), {, ++, count, ;, }, }, return, count, ;, }, protected, static, double, getInvertedCoefficientSum, (, final, RealVector, coefficients, )]
[;, }, }, return, count, ;, }, protected, static, double, getInvertedCoefficientSum, (, final, RealVector, coefficients, ), {, double, sum, =]
[;, }, }, return, count, ;, }, protected, static, double, getInvertedCoefficientSum, (, final, RealVector, coefficients, ), {, double, sum, =]
[;, }, protected, static, double, getInvertedCoefficientSum, (, final, RealVector, coefficients, ), {, double, sum, =, 0, ;, for, (, double]
[;, for, (, double, coefficient, :, coefficients, ., toArray, (, ), ), {, sum, -=, coefficient, ;, }, return, sum]
[), {, sum, -=, coefficient, ;, }, return, sum, ;, }, protected, Integer, getBasicRow, (, final, int, col, ), {]
[., toArray, (, ), ), {, sum, -=, coefficient, ;, }, return, sum, ;, }, protected, Integer, getBasicRow, (, final]
[-=, coefficient, ;, }, return, sum, ;, }, protected, Integer, getBasicRow, (, final, int, col, ), {, Integer, row, =]
[;, }, return, sum, ;, }, protected, Integer, getBasicRow, (, final, int, col, ), {, Integer, row, =, null, ;]
[;, }, protected, Integer, getBasicRow, (, final, int, col, ), {, Integer, row, =, null, ;, for, (, int, i]
[;, for, (, int, i, =, 0, ;, i, <, getHeight, (, ), ;, i, ++, ), {, final, double]
[;, i, <, getHeight, (, ), ;, i, ++, ), {, final, double, entry, =, getEntry, (, i, ,, col]
[;, i, ++, ), {, final, double, entry, =, getEntry, (, i, ,, col, ), ;, if, (, Precision, .]
[<, getHeight, (, ), ;, i, ++, ), {, final, double, entry, =, getEntry, (, i, ,, col, ), ;]
[;, i, ++, ), {, final, double, entry, =, getEntry, (, i, ,, col, ), ;, if, (, Precision, .]
[), {, final, double, entry, =, getEntry, (, i, ,, col, ), ;, if, (, Precision, ., equals, (, entry]
[++, ), {, final, double, entry, =, getEntry, (, i, ,, col, ), ;, if, (, Precision, ., equals, (]
[;, if, (, Precision, ., equals, (, entry, ,, 1d, ,, maxUlps, ), &&, (, row, ==, null, ), )]
[,, col, ), ;, if, (, Precision, ., equals, (, entry, ,, 1d, ,, maxUlps, ), &&, (, row, ==]
[), ;, if, (, Precision, ., equals, (, entry, ,, 1d, ,, maxUlps, ), &&, (, row, ==, null, )]
[), {, row, =, i, ;, }, else, if, (, !, Precision, ., equals, (, entry, ,, 0d, ,, maxUlps]
[&&, (, row, ==, null, ), ), {, row, =, i, ;, }, else, if, (, !, Precision, ., equals]
[., equals, (, entry, ,, 1d, ,, maxUlps, ), &&, (, row, ==, null, ), ), {, row, =, i]
[,, 1d, ,, maxUlps, ), &&, (, row, ==, null, ), ), {, row, =, i, ;, }, else, if]
[,, maxUlps, ), &&, (, row, ==, null, ), ), {, row, =, i, ;, }, else, if, (, !]
[), &&, (, row, ==, null, ), ), {, row, =, i, ;, }, else, if, (, !, Precision, .]
[), {, row, =, i, ;, }, else, if, (, !, Precision, ., equals, (, entry, ,, 0d, ,, maxUlps]
[), ), {, row, =, i, ;, }, else, if, (, !, Precision, ., equals, (, entry, ,, 0d, ,]
[==, null, ), ), {, row, =, i, ;, }, else, if, (, !, Precision, ., equals, (, entry, ,]
[), ), {, row, =, i, ;, }, else, if, (, !, Precision, ., equals, (, entry, ,, 0d, ,]
[=, i, ;, }, else, if, (, !, Precision, ., equals, (, entry, ,, 0d, ,, maxUlps, ), ), {]
[;, }, else, if, (, !, Precision, ., equals, (, entry, ,, 0d, ,, maxUlps, ), ), {, return, null]
[), {, return, null, ;, }, }, return, row, ;, }, protected, void, dropPhase1Objective, (, ), {, if, (, getNumObjectiveFunctions]
[), {, return, null, ;, }, }, return, row, ;, }, protected, void, dropPhase1Objective, (, ), {, if, (, getNumObjectiveFunctions]
[., equals, (, entry, ,, 0d, ,, maxUlps, ), ), {, return, null, ;, }, }, return, row, ;, }]
[,, 0d, ,, maxUlps, ), ), {, return, null, ;, }, }, return, row, ;, }, protected, void, dropPhase1Objective, (]
[,, maxUlps, ), ), {, return, null, ;, }, }, return, row, ;, }, protected, void, dropPhase1Objective, (, ), {]
[), ), {, return, null, ;, }, }, return, row, ;, }, protected, void, dropPhase1Objective, (, ), {, if, (]
[;, }, }, return, row, ;, }, protected, void, dropPhase1Objective, (, ), {, if, (, getNumObjectiveFunctions, (, ), ==, 1]
[;, }, protected, void, dropPhase1Objective, (, ), {, if, (, getNumObjectiveFunctions, (, ), ==, 1, ), {, return, ;, }]
[), {, return, ;, }, Set, <, Integer, >, columnsToDrop, =, new, TreeSet, <, Integer, >, (, ), ;, columnsToDrop]
[==, 1, ), {, return, ;, }, Set, <, Integer, >, columnsToDrop, =, new, TreeSet, <, Integer, >, (, )]
[), {, return, ;, }, Set, <, Integer, >, columnsToDrop, =, new, TreeSet, <, Integer, >, (, ), ;, columnsToDrop]
[;, columnsToDrop, ., add, (, 0, ), ;, for, (, int, i, =, getNumObjectiveFunctions, (, ), ;, i, <, getArtificialVariableOffset]
[;, for, (, int, i, =, getNumObjectiveFunctions, (, ), ;, i, <, getArtificialVariableOffset, (, ), ;, i, ++, ), {]
[., add, (, 0, ), ;, for, (, int, i, =, getNumObjectiveFunctions, (, ), ;, i, <, getArtificialVariableOffset, (, )]
[), ;, for, (, int, i, =, getNumObjectiveFunctions, (, ), ;, i, <, getArtificialVariableOffset, (, ), ;, i, ++, )]
[;, i, <, getArtificialVariableOffset, (, ), ;, i, ++, ), {, final, double, entry, =, tableau, ., getEntry, (, 0]
[;, i, ++, ), {, final, double, entry, =, tableau, ., getEntry, (, 0, ,, i, ), ;, if, (]
[<, getArtificialVariableOffset, (, ), ;, i, ++, ), {, final, double, entry, =, tableau, ., getEntry, (, 0, ,, i]
[;, i, ++, ), {, final, double, entry, =, tableau, ., getEntry, (, 0, ,, i, ), ;, if, (]
[), {, final, double, entry, =, tableau, ., getEntry, (, 0, ,, i, ), ;, if, (, Precision, ., compareTo]
[++, ), {, final, double, entry, =, tableau, ., getEntry, (, 0, ,, i, ), ;, if, (, Precision, .]
[;, if, (, Precision, ., compareTo, (, entry, ,, 0d, ,, epsilon, ), >, 0, ), {, columnsToDrop, ., add]
[., getEntry, (, 0, ,, i, ), ;, if, (, Precision, ., compareTo, (, entry, ,, 0d, ,, epsilon, )]
[,, i, ), ;, if, (, Precision, ., compareTo, (, entry, ,, 0d, ,, epsilon, ), >, 0, ), {]
[), ;, if, (, Precision, ., compareTo, (, entry, ,, 0d, ,, epsilon, ), >, 0, ), {, columnsToDrop, .]
[), {, columnsToDrop, ., add, (, i, ), ;, }, }, for, (, int, i, =, 0, ;, i, <]
[>, 0, ), {, columnsToDrop, ., add, (, i, ), ;, }, }, for, (, int, i, =, 0, ;]
[., compareTo, (, entry, ,, 0d, ,, epsilon, ), >, 0, ), {, columnsToDrop, ., add, (, i, ), ;]
[,, 0d, ,, epsilon, ), >, 0, ), {, columnsToDrop, ., add, (, i, ), ;, }, }, for, (]
[,, epsilon, ), >, 0, ), {, columnsToDrop, ., add, (, i, ), ;, }, }, for, (, int, i]
[), >, 0, ), {, columnsToDrop, ., add, (, i, ), ;, }, }, for, (, int, i, =, 0]
[), {, columnsToDrop, ., add, (, i, ), ;, }, }, for, (, int, i, =, 0, ;, i, <]
[;, }, }, for, (, int, i, =, 0, ;, i, <, getNumArtificialVariables, (, ), ;, i, ++, ), {]
[., add, (, i, ), ;, }, }, for, (, int, i, =, 0, ;, i, <, getNumArtificialVariables, (, )]
[), ;, }, }, for, (, int, i, =, 0, ;, i, <, getNumArtificialVariables, (, ), ;, i, ++, )]
[;, i, <, getNumArtificialVariables, (, ), ;, i, ++, ), {, int, col, =, i, +, getArtificialVariableOffset, (, ), ;]
[;, i, ++, ), {, int, col, =, i, +, getArtificialVariableOffset, (, ), ;, if, (, getBasicRow, (, col, )]
[<, getNumArtificialVariables, (, ), ;, i, ++, ), {, int, col, =, i, +, getArtificialVariableOffset, (, ), ;, if, (]
[;, i, ++, ), {, int, col, =, i, +, getArtificialVariableOffset, (, ), ;, if, (, getBasicRow, (, col, )]
[), {, int, col, =, i, +, getArtificialVariableOffset, (, ), ;, if, (, getBasicRow, (, col, ), ==, null, )]
[++, ), {, int, col, =, i, +, getArtificialVariableOffset, (, ), ;, if, (, getBasicRow, (, col, ), ==, null]
[;, if, (, getBasicRow, (, col, ), ==, null, ), {, columnsToDrop, ., add, (, col, ), ;, }, }]
[+, getArtificialVariableOffset, (, ), ;, if, (, getBasicRow, (, col, ), ==, null, ), {, columnsToDrop, ., add, (, col]
[;, if, (, getBasicRow, (, col, ), ==, null, ), {, columnsToDrop, ., add, (, col, ), ;, }, }]
[), {, columnsToDrop, ., add, (, col, ), ;, }, }, double, [, ], [, ], matrix, =, new, double]
[==, null, ), {, columnsToDrop, ., add, (, col, ), ;, }, }, double, [, ], [, ], matrix, =]
[), ==, null, ), {, columnsToDrop, ., add, (, col, ), ;, }, }, double, [, ], [, ], matrix]
[), {, columnsToDrop, ., add, (, col, ), ;, }, }, double, [, ], [, ], matrix, =, new, double]
[;, }, }, double, [, ], [, ], matrix, =, new, double, [, getHeight, (, ), -, 1, ], []
[., add, (, col, ), ;, }, }, double, [, ], [, ], matrix, =, new, double, [, getHeight, (]
[), ;, }, }, double, [, ], [, ], matrix, =, new, double, [, getHeight, (, ), -, 1, ]]
[;, for, (, int, i, =, 1, ;, i, <, getHeight, (, ), ;, i, ++, ), {, int, col]
[], [, getWidth, (, ), -, columnsToDrop, ., size, (, ), ], ;, for, (, int, i, =, 1, ;]
[-, 1, ], [, getWidth, (, ), -, columnsToDrop, ., size, (, ), ], ;, for, (, int, i, =]
[], [, getWidth, (, ), -, columnsToDrop, ., size, (, ), ], ;, for, (, int, i, =, 1, ;]
[], ;, for, (, int, i, =, 1, ;, i, <, getHeight, (, ), ;, i, ++, ), {, int]
[-, columnsToDrop, ., size, (, ), ], ;, for, (, int, i, =, 1, ;, i, <, getHeight, (, )]
[], ;, for, (, int, i, =, 1, ;, i, <, getHeight, (, ), ;, i, ++, ), {, int]
[., size, (, ), ], ;, for, (, int, i, =, 1, ;, i, <, getHeight, (, ), ;, i]
[;, i, <, getHeight, (, ), ;, i, ++, ), {, int, col, =, 0, ;, for, (, int, j]
[;, i, ++, ), {, int, col, =, 0, ;, for, (, int, j, =, 0, ;, j, <, getWidth]
[<, getHeight, (, ), ;, i, ++, ), {, int, col, =, 0, ;, for, (, int, j, =, 0]
[;, i, ++, ), {, int, col, =, 0, ;, for, (, int, j, =, 0, ;, j, <, getWidth]
[), {, int, col, =, 0, ;, for, (, int, j, =, 0, ;, j, <, getWidth, (, ), ;]
[++, ), {, int, col, =, 0, ;, for, (, int, j, =, 0, ;, j, <, getWidth, (, )]
[;, for, (, int, j, =, 0, ;, j, <, getWidth, (, ), ;, j, ++, ), {, if, (]
[;, j, <, getWidth, (, ), ;, j, ++, ), {, if, (, !, columnsToDrop, ., contains, (, j, )]
[;, j, ++, ), {, if, (, !, columnsToDrop, ., contains, (, j, ), ), {, matrix, [, i, -]
[<, getWidth, (, ), ;, j, ++, ), {, if, (, !, columnsToDrop, ., contains, (, j, ), ), {]
[;, j, ++, ), {, if, (, !, columnsToDrop, ., contains, (, j, ), ), {, matrix, [, i, -]
[), {, if, (, !, columnsToDrop, ., contains, (, j, ), ), {, matrix, [, i, -, 1, ], []
[++, ), {, if, (, !, columnsToDrop, ., contains, (, j, ), ), {, matrix, [, i, -, 1, ]]
[), {, matrix, [, i, -, 1, ], [, col, ++, ], =, tableau, ., getEntry, (, i, ,, j]
[), {, matrix, [, i, -, 1, ], [, col, ++, ], =, tableau, ., getEntry, (, i, ,, j]
[., contains, (, j, ), ), {, matrix, [, i, -, 1, ], [, col, ++, ], =, tableau, .]
[), ), {, matrix, [, i, -, 1, ], [, col, ++, ], =, tableau, ., getEntry, (, i, ,]
[=, tableau, ., getEntry, (, i, ,, j, ), ;, }, }, }, Integer, [, ], drop, =, columnsToDrop, .]
[[, col, ++, ], =, tableau, ., getEntry, (, i, ,, j, ), ;, }, }, }, Integer, [, ]]
[[, i, -, 1, ], [, col, ++, ], =, tableau, ., getEntry, (, i, ,, j, ), ;, }]
[], [, col, ++, ], =, tableau, ., getEntry, (, i, ,, j, ), ;, }, }, }, Integer, []
[-, 1, ], [, col, ++, ], =, tableau, ., getEntry, (, i, ,, j, ), ;, }, }, }]
[], [, col, ++, ], =, tableau, ., getEntry, (, i, ,, j, ), ;, }, }, }, Integer, []
[], =, tableau, ., getEntry, (, i, ,, j, ), ;, }, }, }, Integer, [, ], drop, =, columnsToDrop]
[++, ], =, tableau, ., getEntry, (, i, ,, j, ), ;, }, }, }, Integer, [, ], drop, =]
[;, }, }, }, Integer, [, ], drop, =, columnsToDrop, ., toArray, (, new, Integer, [, columnsToDrop, ., size, (]
[., getEntry, (, i, ,, j, ), ;, }, }, }, Integer, [, ], drop, =, columnsToDrop, ., toArray, (]
[,, j, ), ;, }, }, }, Integer, [, ], drop, =, columnsToDrop, ., toArray, (, new, Integer, [, columnsToDrop]
[), ;, }, }, }, Integer, [, ], drop, =, columnsToDrop, ., toArray, (, new, Integer, [, columnsToDrop, ., size]
[;, for, (, int, i, =, drop, ., length, -, 1, ;, i, >=, 0, ;, i, --, ), {]
[., toArray, (, new, Integer, [, columnsToDrop, ., size, (, ), ], ), ;, for, (, int, i, =, drop]
[), ;, for, (, int, i, =, drop, ., length, -, 1, ;, i, >=, 0, ;, i, --, )]
[], ), ;, for, (, int, i, =, drop, ., length, -, 1, ;, i, >=, 0, ;, i, --]
[., size, (, ), ], ), ;, for, (, int, i, =, drop, ., length, -, 1, ;, i, >=]
[;, i, >=, 0, ;, i, --, ), {, columnLabels, ., remove, (, (, int, ), drop, [, i, ]]
[-, 1, ;, i, >=, 0, ;, i, --, ), {, columnLabels, ., remove, (, (, int, ), drop, []
[., length, -, 1, ;, i, >=, 0, ;, i, --, ), {, columnLabels, ., remove, (, (, int, )]
[;, i, >=, 0, ;, i, --, ), {, columnLabels, ., remove, (, (, int, ), drop, [, i, ]]
[;, i, --, ), {, columnLabels, ., remove, (, (, int, ), drop, [, i, ], ), ;, }, this]
[>=, 0, ;, i, --, ), {, columnLabels, ., remove, (, (, int, ), drop, [, i, ], ), ;]
[;, i, --, ), {, columnLabels, ., remove, (, (, int, ), drop, [, i, ], ), ;, }, this]
[), {, columnLabels, ., remove, (, (, int, ), drop, [, i, ], ), ;, }, this, ., tableau, =]
[--, ), {, columnLabels, ., remove, (, (, int, ), drop, [, i, ], ), ;, }, this, ., tableau]
[;, }, this, ., tableau, =, new, Array2DRowRealMatrix, (, matrix, ), ;, this, ., numArtificialVariables, =, 0, ;, }, private]
[., remove, (, (, int, ), drop, [, i, ], ), ;, }, this, ., tableau, =, new, Array2DRowRealMatrix, (]
[), ;, }, this, ., tableau, =, new, Array2DRowRealMatrix, (, matrix, ), ;, this, ., numArtificialVariables, =, 0, ;, }]
[), ;, }, this, ., tableau, =, new, Array2DRowRealMatrix, (, matrix, ), ;, this, ., numArtificialVariables, =, 0, ;, }]
[[, i, ], ), ;, }, this, ., tableau, =, new, Array2DRowRealMatrix, (, matrix, ), ;, this, ., numArtificialVariables, =]
[], ), ;, }, this, ., tableau, =, new, Array2DRowRealMatrix, (, matrix, ), ;, this, ., numArtificialVariables, =, 0, ;]
[=, new, Array2DRowRealMatrix, (, matrix, ), ;, this, ., numArtificialVariables, =, 0, ;, }, private, void, copyArray, (, final, double]
[., tableau, =, new, Array2DRowRealMatrix, (, matrix, ), ;, this, ., numArtificialVariables, =, 0, ;, }, private, void, copyArray, (]
[;, this, ., numArtificialVariables, =, 0, ;, }, private, void, copyArray, (, final, double, [, ], src, ,, final, double]
[), ;, this, ., numArtificialVariables, =, 0, ;, }, private, void, copyArray, (, final, double, [, ], src, ,, final]
[=, 0, ;, }, private, void, copyArray, (, final, double, [, ], src, ,, final, double, [, ], dest, )]
[., numArtificialVariables, =, 0, ;, }, private, void, copyArray, (, final, double, [, ], src, ,, final, double, [, ]]
[;, }, private, void, copyArray, (, final, double, [, ], src, ,, final, double, [, ], dest, ), {, System]
[;, }, boolean, isOptimal, (, ), {, for, (, int, i, =, getNumObjectiveFunctions, (, ), ;, i, <, getWidth, (]
[., arraycopy, (, src, ,, 0, ,, dest, ,, getNumObjectiveFunctions, (, ), ,, src, ., length, ), ;, }, boolean]
[,, 0, ,, dest, ,, getNumObjectiveFunctions, (, ), ,, src, ., length, ), ;, }, boolean, isOptimal, (, ), {]
[,, dest, ,, getNumObjectiveFunctions, (, ), ,, src, ., length, ), ;, }, boolean, isOptimal, (, ), {, for, (]
[,, getNumObjectiveFunctions, (, ), ,, src, ., length, ), ;, }, boolean, isOptimal, (, ), {, for, (, int, i]
[,, src, ., length, ), ;, }, boolean, isOptimal, (, ), {, for, (, int, i, =, getNumObjectiveFunctions, (, )]
[), ;, }, boolean, isOptimal, (, ), {, for, (, int, i, =, getNumObjectiveFunctions, (, ), ;, i, <, getWidth]
[., length, ), ;, }, boolean, isOptimal, (, ), {, for, (, int, i, =, getNumObjectiveFunctions, (, ), ;, i]
[;, i, <, getWidth, (, ), -, 1, ;, i, ++, ), {, final, double, entry, =, tableau, ., getEntry]
[;, i, ++, ), {, final, double, entry, =, tableau, ., getEntry, (, 0, ,, i, ), ;, if, (]
[<, getWidth, (, ), -, 1, ;, i, ++, ), {, final, double, entry, =, tableau, ., getEntry, (, 0]
[;, i, ++, ), {, final, double, entry, =, tableau, ., getEntry, (, 0, ,, i, ), ;, if, (]
[-, 1, ;, i, ++, ), {, final, double, entry, =, tableau, ., getEntry, (, 0, ,, i, ), ;]
[;, i, ++, ), {, final, double, entry, =, tableau, ., getEntry, (, 0, ,, i, ), ;, if, (]
[), {, final, double, entry, =, tableau, ., getEntry, (, 0, ,, i, ), ;, if, (, Precision, ., compareTo]
[++, ), {, final, double, entry, =, tableau, ., getEntry, (, 0, ,, i, ), ;, if, (, Precision, .]
[;, if, (, Precision, ., compareTo, (, entry, ,, 0d, ,, epsilon, ), <, 0, ), {, return, false, ;]
[., getEntry, (, 0, ,, i, ), ;, if, (, Precision, ., compareTo, (, entry, ,, 0d, ,, epsilon, )]
[,, i, ), ;, if, (, Precision, ., compareTo, (, entry, ,, 0d, ,, epsilon, ), <, 0, ), {]
[), ;, if, (, Precision, ., compareTo, (, entry, ,, 0d, ,, epsilon, ), <, 0, ), {, return, false]
[), {, return, false, ;, }, }, return, true, ;, }, protected, PointValuePair, getSolution, (, ), {, int, negativeVarColumn, =]
[<, 0, ), {, return, false, ;, }, }, return, true, ;, }, protected, PointValuePair, getSolution, (, ), {, int]
[., compareTo, (, entry, ,, 0d, ,, epsilon, ), <, 0, ), {, return, false, ;, }, }, return, true]
[,, 0d, ,, epsilon, ), <, 0, ), {, return, false, ;, }, }, return, true, ;, }, protected, PointValuePair]
[,, epsilon, ), <, 0, ), {, return, false, ;, }, }, return, true, ;, }, protected, PointValuePair, getSolution, (]
[), <, 0, ), {, return, false, ;, }, }, return, true, ;, }, protected, PointValuePair, getSolution, (, ), {]
[), {, return, false, ;, }, }, return, true, ;, }, protected, PointValuePair, getSolution, (, ), {, int, negativeVarColumn, =]
[;, }, }, return, true, ;, }, protected, PointValuePair, getSolution, (, ), {, int, negativeVarColumn, =, columnLabels, ., indexOf, (]
[;, }, protected, PointValuePair, getSolution, (, ), {, int, negativeVarColumn, =, columnLabels, ., indexOf, (, NEGATIVE_VAR_COLUMN_LABEL, ), ;, Integer, negativeVarBasicRow]
[;, Integer, negativeVarBasicRow, =, negativeVarColumn, >, 0, ?, getBasicRow, (, negativeVarColumn, ), :, null, ;, double, mostNegative, =, negativeVarBasicRow, ==]
[., indexOf, (, NEGATIVE_VAR_COLUMN_LABEL, ), ;, Integer, negativeVarBasicRow, =, negativeVarColumn, >, 0, ?, getBasicRow, (, negativeVarColumn, ), :, null, ;]
[), ;, Integer, negativeVarBasicRow, =, negativeVarColumn, >, 0, ?, getBasicRow, (, negativeVarColumn, ), :, null, ;, double, mostNegative, =, negativeVarBasicRow]
[;, double, mostNegative, =, negativeVarBasicRow, ==, null, ?, 0, :, getEntry, (, negativeVarBasicRow, ,, getRhsOffset, (, ), ), ;, Set]
[?, getBasicRow, (, negativeVarColumn, ), :, null, ;, double, mostNegative, =, negativeVarBasicRow, ==, null, ?, 0, :, getEntry, (, negativeVarBasicRow]
[>, 0, ?, getBasicRow, (, negativeVarColumn, ), :, null, ;, double, mostNegative, =, negativeVarBasicRow, ==, null, ?, 0, :, getEntry]
[?, getBasicRow, (, negativeVarColumn, ), :, null, ;, double, mostNegative, =, negativeVarBasicRow, ==, null, ?, 0, :, getEntry, (, negativeVarBasicRow]
[:, null, ;, double, mostNegative, =, negativeVarBasicRow, ==, null, ?, 0, :, getEntry, (, negativeVarBasicRow, ,, getRhsOffset, (, ), )]
[), :, null, ;, double, mostNegative, =, negativeVarBasicRow, ==, null, ?, 0, :, getEntry, (, negativeVarBasicRow, ,, getRhsOffset, (, )]
[;, double, mostNegative, =, negativeVarBasicRow, ==, null, ?, 0, :, getEntry, (, negativeVarBasicRow, ,, getRhsOffset, (, ), ), ;, Set]
[;, Set, <, Integer, >, basicRows, =, new, HashSet, <, Integer, >, (, ), ;, double, [, ], coefficients, =]
[?, 0, :, getEntry, (, negativeVarBasicRow, ,, getRhsOffset, (, ), ), ;, Set, <, Integer, >, basicRows, =, new, HashSet]
[==, null, ?, 0, :, getEntry, (, negativeVarBasicRow, ,, getRhsOffset, (, ), ), ;, Set, <, Integer, >, basicRows, =]
[?, 0, :, getEntry, (, negativeVarBasicRow, ,, getRhsOffset, (, ), ), ;, Set, <, Integer, >, basicRows, =, new, HashSet]
[:, getEntry, (, negativeVarBasicRow, ,, getRhsOffset, (, ), ), ;, Set, <, Integer, >, basicRows, =, new, HashSet, <, Integer]
[;, Set, <, Integer, >, basicRows, =, new, HashSet, <, Integer, >, (, ), ;, double, [, ], coefficients, =]
[,, getRhsOffset, (, ), ), ;, Set, <, Integer, >, basicRows, =, new, HashSet, <, Integer, >, (, ), ;]
[), ;, Set, <, Integer, >, basicRows, =, new, HashSet, <, Integer, >, (, ), ;, double, [, ], coefficients]
[;, double, [, ], coefficients, =, new, double, [, getOriginalNumDecisionVariables, (, ), ], ;, for, (, int, i, =, 0]
[;, for, (, int, i, =, 0, ;, i, <, coefficients, ., length, ;, i, ++, ), {, int, colIndex]
[], ;, for, (, int, i, =, 0, ;, i, <, coefficients, ., length, ;, i, ++, ), {, int]
[;, i, <, coefficients, ., length, ;, i, ++, ), {, int, colIndex, =, columnLabels, ., indexOf, (, "x", +]
[;, i, ++, ), {, int, colIndex, =, columnLabels, ., indexOf, (, "x", +, i, ), ;, if, (, colIndex]
[<, coefficients, ., length, ;, i, ++, ), {, int, colIndex, =, columnLabels, ., indexOf, (, "x", +, i, )]
[;, i, ++, ), {, int, colIndex, =, columnLabels, ., indexOf, (, "x", +, i, ), ;, if, (, colIndex]
[., length, ;, i, ++, ), {, int, colIndex, =, columnLabels, ., indexOf, (, "x", +, i, ), ;, if]
[), {, int, colIndex, =, columnLabels, ., indexOf, (, "x", +, i, ), ;, if, (, colIndex, <, 0, )]
[++, ), {, int, colIndex, =, columnLabels, ., indexOf, (, "x", +, i, ), ;, if, (, colIndex, <, 0]
[;, if, (, colIndex, <, 0, ), {, coefficients, [, i, ], =, 0, ;, continue, ;, }, Integer, basicRow]
[., indexOf, (, "x", +, i, ), ;, if, (, colIndex, <, 0, ), {, coefficients, [, i, ], =]
[), ;, if, (, colIndex, <, 0, ), {, coefficients, [, i, ], =, 0, ;, continue, ;, }, Integer]
[+, i, ), ;, if, (, colIndex, <, 0, ), {, coefficients, [, i, ], =, 0, ;, continue, ;]
[), ;, if, (, colIndex, <, 0, ), {, coefficients, [, i, ], =, 0, ;, continue, ;, }, Integer]
[), {, coefficients, [, i, ], =, 0, ;, continue, ;, }, Integer, basicRow, =, getBasicRow, (, colIndex, ), ;]
[<, 0, ), {, coefficients, [, i, ], =, 0, ;, continue, ;, }, Integer, basicRow, =, getBasicRow, (, colIndex]
[), {, coefficients, [, i, ], =, 0, ;, continue, ;, }, Integer, basicRow, =, getBasicRow, (, colIndex, ), ;]
[=, 0, ;, continue, ;, }, Integer, basicRow, =, getBasicRow, (, colIndex, ), ;, if, (, basicRow, !=, null, &&]
[[, i, ], =, 0, ;, continue, ;, }, Integer, basicRow, =, getBasicRow, (, colIndex, ), ;, if, (, basicRow]
[], =, 0, ;, continue, ;, }, Integer, basicRow, =, getBasicRow, (, colIndex, ), ;, if, (, basicRow, !=, null]
[;, continue, ;, }, Integer, basicRow, =, getBasicRow, (, colIndex, ), ;, if, (, basicRow, !=, null, &&, basicRow, ==]
[;, if, (, basicRow, !=, null, &&, basicRow, ==, 0, ), {, coefficients, [, i, ], =, 0, ;, }]
[), ;, if, (, basicRow, !=, null, &&, basicRow, ==, 0, ), {, coefficients, [, i, ], =, 0, ;]
[), {, coefficients, [, i, ], =, 0, ;, }, else, if, (, basicRows, ., contains, (, basicRow, ), )]
[&&, basicRow, ==, 0, ), {, coefficients, [, i, ], =, 0, ;, }, else, if, (, basicRows, ., contains]
[!=, null, &&, basicRow, ==, 0, ), {, coefficients, [, i, ], =, 0, ;, }, else, if, (, basicRows]
[&&, basicRow, ==, 0, ), {, coefficients, [, i, ], =, 0, ;, }, else, if, (, basicRows, ., contains]
[), {, coefficients, [, i, ], =, 0, ;, }, else, if, (, basicRows, ., contains, (, basicRow, ), )]
[==, 0, ), {, coefficients, [, i, ], =, 0, ;, }, else, if, (, basicRows, ., contains, (, basicRow]
[), {, coefficients, [, i, ], =, 0, ;, }, else, if, (, basicRows, ., contains, (, basicRow, ), )]
[=, 0, ;, }, else, if, (, basicRows, ., contains, (, basicRow, ), ), {, coefficients, [, i, ], =]
[[, i, ], =, 0, ;, }, else, if, (, basicRows, ., contains, (, basicRow, ), ), {, coefficients, []
[], =, 0, ;, }, else, if, (, basicRows, ., contains, (, basicRow, ), ), {, coefficients, [, i, ]]
[;, }, else, if, (, basicRows, ., contains, (, basicRow, ), ), {, coefficients, [, i, ], =, 0, -]
[), {, coefficients, [, i, ], =, 0, -, (, restrictToNonNegative, ?, 0, :, mostNegative, ), ;, }, else, {]
[., contains, (, basicRow, ), ), {, coefficients, [, i, ], =, 0, -, (, restrictToNonNegative, ?, 0, :, mostNegative]
[), ), {, coefficients, [, i, ], =, 0, -, (, restrictToNonNegative, ?, 0, :, mostNegative, ), ;, }, else]
[=, 0, -, (, restrictToNonNegative, ?, 0, :, mostNegative, ), ;, }, else, {, basicRows, ., add, (, basicRow, )]
[[, i, ], =, 0, -, (, restrictToNonNegative, ?, 0, :, mostNegative, ), ;, }, else, {, basicRows, ., add]
[], =, 0, -, (, restrictToNonNegative, ?, 0, :, mostNegative, ), ;, }, else, {, basicRows, ., add, (, basicRow]
[;, }, else, {, basicRows, ., add, (, basicRow, ), ;, coefficients, [, i, ], =, (, basicRow, ==, null]
[-, (, restrictToNonNegative, ?, 0, :, mostNegative, ), ;, }, else, {, basicRows, ., add, (, basicRow, ), ;, coefficients]
[;, }, else, {, basicRows, ., add, (, basicRow, ), ;, coefficients, [, i, ], =, (, basicRow, ==, null]
[), ;, }, else, {, basicRows, ., add, (, basicRow, ), ;, coefficients, [, i, ], =, (, basicRow, ==]
[?, 0, :, mostNegative, ), ;, }, else, {, basicRows, ., add, (, basicRow, ), ;, coefficients, [, i, ]]
[:, mostNegative, ), ;, }, else, {, basicRows, ., add, (, basicRow, ), ;, coefficients, [, i, ], =, (]
[), ;, }, else, {, basicRows, ., add, (, basicRow, ), ;, coefficients, [, i, ], =, (, basicRow, ==]
[;, coefficients, [, i, ], =, (, basicRow, ==, null, ?, 0, :, getEntry, (, basicRow, ,, getRhsOffset, (, )]
[., add, (, basicRow, ), ;, coefficients, [, i, ], =, (, basicRow, ==, null, ?, 0, :, getEntry, (]
[), ;, coefficients, [, i, ], =, (, basicRow, ==, null, ?, 0, :, getEntry, (, basicRow, ,, getRhsOffset, (]
[=, (, basicRow, ==, null, ?, 0, :, getEntry, (, basicRow, ,, getRhsOffset, (, ), ), ), -, (, restrictToNonNegative]
[[, i, ], =, (, basicRow, ==, null, ?, 0, :, getEntry, (, basicRow, ,, getRhsOffset, (, ), ), )]
[], =, (, basicRow, ==, null, ?, 0, :, getEntry, (, basicRow, ,, getRhsOffset, (, ), ), ), -, (]
[;, }, }, return, new, PointValuePair, (, coefficients, ,, f, ., getValue, (, coefficients, ), ), ;, }, protected, void]
[-, (, restrictToNonNegative, ?, 0, :, mostNegative, ), ;, }, }, return, new, PointValuePair, (, coefficients, ,, f, ., getValue]
[), -, (, restrictToNonNegative, ?, 0, :, mostNegative, ), ;, }, }, return, new, PointValuePair, (, coefficients, ,, f, .]
[?, 0, :, getEntry, (, basicRow, ,, getRhsOffset, (, ), ), ), -, (, restrictToNonNegative, ?, 0, :, mostNegative, )]
[==, null, ?, 0, :, getEntry, (, basicRow, ,, getRhsOffset, (, ), ), ), -, (, restrictToNonNegative, ?, 0, :]
[?, 0, :, getEntry, (, basicRow, ,, getRhsOffset, (, ), ), ), -, (, restrictToNonNegative, ?, 0, :, mostNegative, )]
[:, getEntry, (, basicRow, ,, getRhsOffset, (, ), ), ), -, (, restrictToNonNegative, ?, 0, :, mostNegative, ), ;, }]
[), -, (, restrictToNonNegative, ?, 0, :, mostNegative, ), ;, }, }, return, new, PointValuePair, (, coefficients, ,, f, .]
[,, getRhsOffset, (, ), ), ), -, (, restrictToNonNegative, ?, 0, :, mostNegative, ), ;, }, }, return, new, PointValuePair]
[), ), -, (, restrictToNonNegative, ?, 0, :, mostNegative, ), ;, }, }, return, new, PointValuePair, (, coefficients, ,, f]
[;, }, }, return, new, PointValuePair, (, coefficients, ,, f, ., getValue, (, coefficients, ), ), ;, }, protected, void]
[), ;, }, }, return, new, PointValuePair, (, coefficients, ,, f, ., getValue, (, coefficients, ), ), ;, }, protected]
[?, 0, :, mostNegative, ), ;, }, }, return, new, PointValuePair, (, coefficients, ,, f, ., getValue, (, coefficients, )]
[:, mostNegative, ), ;, }, }, return, new, PointValuePair, (, coefficients, ,, f, ., getValue, (, coefficients, ), ), ;]
[), ;, }, }, return, new, PointValuePair, (, coefficients, ,, f, ., getValue, (, coefficients, ), ), ;, }, protected]
[;, }, protected, void, divideRow, (, final, int, dividendRow, ,, final, double, divisor, ), {, for, (, int, j, =]
[,, f, ., getValue, (, coefficients, ), ), ;, }, protected, void, divideRow, (, final, int, dividendRow, ,, final, double]
[), ;, }, protected, void, divideRow, (, final, int, dividendRow, ,, final, double, divisor, ), {, for, (, int, j]
[., getValue, (, coefficients, ), ), ;, }, protected, void, divideRow, (, final, int, dividendRow, ,, final, double, divisor, )]
[), ), ;, }, protected, void, divideRow, (, final, int, dividendRow, ,, final, double, divisor, ), {, for, (, int]
[;, j, <, getWidth, (, ), ;, j, ++, ), {, tableau, ., setEntry, (, dividendRow, ,, j, ,, tableau]
[;, j, ++, ), {, tableau, ., setEntry, (, dividendRow, ,, j, ,, tableau, ., getEntry, (, dividendRow, ,, j]
[<, getWidth, (, ), ;, j, ++, ), {, tableau, ., setEntry, (, dividendRow, ,, j, ,, tableau, ., getEntry]
[;, j, ++, ), {, tableau, ., setEntry, (, dividendRow, ,, j, ,, tableau, ., getEntry, (, dividendRow, ,, j]
[), {, tableau, ., setEntry, (, dividendRow, ,, j, ,, tableau, ., getEntry, (, dividendRow, ,, j, ), /, divisor]
[++, ), {, tableau, ., setEntry, (, dividendRow, ,, j, ,, tableau, ., getEntry, (, dividendRow, ,, j, ), /]
[;, }, }, protected, void, subtractRow, (, final, int, minuendRow, ,, final, int, subtrahendRow, ,, final, double, multiple, ), {]
[., setEntry, (, dividendRow, ,, j, ,, tableau, ., getEntry, (, dividendRow, ,, j, ), /, divisor, ), ;, }]
[,, j, ,, tableau, ., getEntry, (, dividendRow, ,, j, ), /, divisor, ), ;, }, }, protected, void, subtractRow]
[,, tableau, ., getEntry, (, dividendRow, ,, j, ), /, divisor, ), ;, }, }, protected, void, subtractRow, (, final]
[), ;, }, }, protected, void, subtractRow, (, final, int, minuendRow, ,, final, int, subtrahendRow, ,, final, double, multiple, )]
[/, divisor, ), ;, }, }, protected, void, subtractRow, (, final, int, minuendRow, ,, final, int, subtrahendRow, ,, final, double]
[., getEntry, (, dividendRow, ,, j, ), /, divisor, ), ;, }, }, protected, void, subtractRow, (, final, int, minuendRow]
[,, j, ), /, divisor, ), ;, }, }, protected, void, subtractRow, (, final, int, minuendRow, ,, final, int, subtrahendRow]
[), /, divisor, ), ;, }, }, protected, void, subtractRow, (, final, int, minuendRow, ,, final, int, subtrahendRow, ,, final]
[), ;, }, }, protected, void, subtractRow, (, final, int, minuendRow, ,, final, int, subtrahendRow, ,, final, double, multiple, )]
[;, i, <, getWidth, (, ), ;, i, ++, ), {, double, result, =, tableau, ., getEntry, (, minuendRow, ,]
[;, i, ++, ), {, double, result, =, tableau, ., getEntry, (, minuendRow, ,, i, ), -, tableau, ., getEntry]
[<, getWidth, (, ), ;, i, ++, ), {, double, result, =, tableau, ., getEntry, (, minuendRow, ,, i, )]
[;, i, ++, ), {, double, result, =, tableau, ., getEntry, (, minuendRow, ,, i, ), -, tableau, ., getEntry]
[), {, double, result, =, tableau, ., getEntry, (, minuendRow, ,, i, ), -, tableau, ., getEntry, (, subtrahendRow, ,]
[++, ), {, double, result, =, tableau, ., getEntry, (, minuendRow, ,, i, ), -, tableau, ., getEntry, (, subtrahendRow]
[;, if, (, FastMath, ., abs, (, result, ), <, CUTOFF_THRESHOLD, ), {, result, =, 0.0, ;, }, tableau, .]
[-, tableau, ., getEntry, (, subtrahendRow, ,, i, ), *, multiple, ;, if, (, FastMath, ., abs, (, result, )]
[., getEntry, (, minuendRow, ,, i, ), -, tableau, ., getEntry, (, subtrahendRow, ,, i, ), *, multiple, ;, if]
[,, i, ), -, tableau, ., getEntry, (, subtrahendRow, ,, i, ), *, multiple, ;, if, (, FastMath, ., abs]
[), -, tableau, ., getEntry, (, subtrahendRow, ,, i, ), *, multiple, ;, if, (, FastMath, ., abs, (, result]
[;, if, (, FastMath, ., abs, (, result, ), <, CUTOFF_THRESHOLD, ), {, result, =, 0.0, ;, }, tableau, .]
[*, multiple, ;, if, (, FastMath, ., abs, (, result, ), <, CUTOFF_THRESHOLD, ), {, result, =, 0.0, ;, }]
[., getEntry, (, subtrahendRow, ,, i, ), *, multiple, ;, if, (, FastMath, ., abs, (, result, ), <, CUTOFF_THRESHOLD]
[,, i, ), *, multiple, ;, if, (, FastMath, ., abs, (, result, ), <, CUTOFF_THRESHOLD, ), {, result, =]
[), *, multiple, ;, if, (, FastMath, ., abs, (, result, ), <, CUTOFF_THRESHOLD, ), {, result, =, 0.0, ;]
[;, if, (, FastMath, ., abs, (, result, ), <, CUTOFF_THRESHOLD, ), {, result, =, 0.0, ;, }, tableau, .]
[), {, result, =, 0.0, ;, }, tableau, ., setEntry, (, minuendRow, ,, i, ,, result, ), ;, }, }]
[<, CUTOFF_THRESHOLD, ), {, result, =, 0.0, ;, }, tableau, ., setEntry, (, minuendRow, ,, i, ,, result, ), ;]
[., abs, (, result, ), <, CUTOFF_THRESHOLD, ), {, result, =, 0.0, ;, }, tableau, ., setEntry, (, minuendRow, ,]
[), <, CUTOFF_THRESHOLD, ), {, result, =, 0.0, ;, }, tableau, ., setEntry, (, minuendRow, ,, i, ,, result, )]
[), {, result, =, 0.0, ;, }, tableau, ., setEntry, (, minuendRow, ,, i, ,, result, ), ;, }, }]
[=, 0.0, ;, }, tableau, ., setEntry, (, minuendRow, ,, i, ,, result, ), ;, }, }, protected, final, int]
[;, }, tableau, ., setEntry, (, minuendRow, ,, i, ,, result, ), ;, }, }, protected, final, int, getWidth, (]
[;, }, }, protected, final, int, getWidth, (, ), {, return, tableau, ., getColumnDimension, (, ), ;, }, protected, final]
[., setEntry, (, minuendRow, ,, i, ,, result, ), ;, }, }, protected, final, int, getWidth, (, ), {, return]
[,, i, ,, result, ), ;, }, }, protected, final, int, getWidth, (, ), {, return, tableau, ., getColumnDimension, (]
[,, result, ), ;, }, }, protected, final, int, getWidth, (, ), {, return, tableau, ., getColumnDimension, (, ), ;]
[), ;, }, }, protected, final, int, getWidth, (, ), {, return, tableau, ., getColumnDimension, (, ), ;, }, protected]
[;, }, protected, final, int, getHeight, (, ), {, return, tableau, ., getRowDimension, (, ), ;, }, protected, final, double]
[., getColumnDimension, (, ), ;, }, protected, final, int, getHeight, (, ), {, return, tableau, ., getRowDimension, (, ), ;]
[;, }, protected, final, double, getEntry, (, final, int, row, ,, final, int, column, ), {, return, tableau, ., getEntry]
[., getRowDimension, (, ), ;, }, protected, final, double, getEntry, (, final, int, row, ,, final, int, column, ), {]
[;, }, protected, final, void, setEntry, (, final, int, row, ,, final, int, column, ,, final, double, value, ), {]
[., getEntry, (, row, ,, column, ), ;, }, protected, final, void, setEntry, (, final, int, row, ,, final, int]
[,, column, ), ;, }, protected, final, void, setEntry, (, final, int, row, ,, final, int, column, ,, final, double]
[), ;, }, protected, final, void, setEntry, (, final, int, row, ,, final, int, column, ,, final, double, value, )]
[;, }, protected, final, int, getSlackVariableOffset, (, ), {, return, getNumObjectiveFunctions, (, ), +, numDecisionVariables, ;, }, protected, final, int]
[., setEntry, (, row, ,, column, ,, value, ), ;, }, protected, final, int, getSlackVariableOffset, (, ), {, return, getNumObjectiveFunctions]
[,, column, ,, value, ), ;, }, protected, final, int, getSlackVariableOffset, (, ), {, return, getNumObjectiveFunctions, (, ), +, numDecisionVariables]
[,, value, ), ;, }, protected, final, int, getSlackVariableOffset, (, ), {, return, getNumObjectiveFunctions, (, ), +, numDecisionVariables, ;, }]
[), ;, }, protected, final, int, getSlackVariableOffset, (, ), {, return, getNumObjectiveFunctions, (, ), +, numDecisionVariables, ;, }, protected, final]
[;, }, protected, final, int, getArtificialVariableOffset, (, ), {, return, getNumObjectiveFunctions, (, ), +, numDecisionVariables, +, numSlackVariables, ;, }, protected]
[+, numDecisionVariables, ;, }, protected, final, int, getArtificialVariableOffset, (, ), {, return, getNumObjectiveFunctions, (, ), +, numDecisionVariables, +, numSlackVariables, ;]
[;, }, protected, final, int, getArtificialVariableOffset, (, ), {, return, getNumObjectiveFunctions, (, ), +, numDecisionVariables, +, numSlackVariables, ;, }, protected]
[;, }, protected, final, int, getRhsOffset, (, ), {, return, getWidth, (, ), -, 1, ;, }, protected, final, int]
[+, numSlackVariables, ;, }, protected, final, int, getRhsOffset, (, ), {, return, getWidth, (, ), -, 1, ;, }, protected]
[+, numDecisionVariables, +, numSlackVariables, ;, }, protected, final, int, getRhsOffset, (, ), {, return, getWidth, (, ), -, 1, ;]
[+, numSlackVariables, ;, }, protected, final, int, getRhsOffset, (, ), {, return, getWidth, (, ), -, 1, ;, }, protected]
[;, }, protected, final, int, getRhsOffset, (, ), {, return, getWidth, (, ), -, 1, ;, }, protected, final, int]
[;, }, protected, final, int, getNumDecisionVariables, (, ), {, return, numDecisionVariables, ;, }, protected, final, int, getOriginalNumDecisionVariables, (, ), {]
[-, 1, ;, }, protected, final, int, getNumDecisionVariables, (, ), {, return, numDecisionVariables, ;, }, protected, final, int, getOriginalNumDecisionVariables, (]
[;, }, protected, final, int, getNumDecisionVariables, (, ), {, return, numDecisionVariables, ;, }, protected, final, int, getOriginalNumDecisionVariables, (, ), {]
[;, }, protected, final, int, getOriginalNumDecisionVariables, (, ), {, return, f, ., getCoefficients, (, ), ., getDimension, (, ), ;]
[;, }, protected, final, int, getNumSlackVariables, (, ), {, return, numSlackVariables, ;, }, protected, final, int, getNumArtificialVariables, (, ), {]
[., getDimension, (, ), ;, }, protected, final, int, getNumSlackVariables, (, ), {, return, numSlackVariables, ;, }, protected, final, int]
[., getCoefficients, (, ), ., getDimension, (, ), ;, }, protected, final, int, getNumSlackVariables, (, ), {, return, numSlackVariables, ;]
[;, }, protected, final, int, getNumArtificialVariables, (, ), {, return, numArtificialVariables, ;, }, protected, final, double, [, ], [, ]]
[;, }, protected, final, double, [, ], [, ], getData, (, ), {, return, tableau, ., getData, (, ), ;]
[;, }, @, Override, public, boolean, equals, (, Object, other, ), {, if, (, this, ==, other, ), {, return]
[., getData, (, ), ;, }, @, Override, public, boolean, equals, (, Object, other, ), {, if, (, this, ==]
[), {, return, true, ;, }, if, (, other, instanceof, SimplexTableau, ), {, SimplexTableau, rhs, =, (, SimplexTableau, ), other]
[==, other, ), {, return, true, ;, }, if, (, other, instanceof, SimplexTableau, ), {, SimplexTableau, rhs, =, (, SimplexTableau]
[), {, return, true, ;, }, if, (, other, instanceof, SimplexTableau, ), {, SimplexTableau, rhs, =, (, SimplexTableau, ), other]
[;, }, if, (, other, instanceof, SimplexTableau, ), {, SimplexTableau, rhs, =, (, SimplexTableau, ), other, ;, return, (, restrictToNonNegative]
[), {, SimplexTableau, rhs, =, (, SimplexTableau, ), other, ;, return, (, restrictToNonNegative, ==, rhs, ., restrictToNonNegative, ), &&, (]
[instanceof, SimplexTableau, ), {, SimplexTableau, rhs, =, (, SimplexTableau, ), other, ;, return, (, restrictToNonNegative, ==, rhs, ., restrictToNonNegative, )]
[;, return, (, restrictToNonNegative, ==, rhs, ., restrictToNonNegative, ), &&, (, numDecisionVariables, ==, rhs, ., numDecisionVariables, ), &&, (, numSlackVariables]
[;, return, (, restrictToNonNegative, ==, rhs, ., restrictToNonNegative, ), &&, (, numDecisionVariables, ==, rhs, ., numDecisionVariables, ), &&, (, numSlackVariables]
[;, }, return, false, ;, }, @, Override, public, int, hashCode, (, ), {, return, Boolean, ., valueOf, (, restrictToNonNegative]
[&&, tableau, ., equals, (, rhs, ., tableau, ), ;, }, return, false, ;, }, @, Override, public, int, hashCode]
[&&, constraints, ., equals, (, rhs, ., constraints, ), &&, tableau, ., equals, (, rhs, ., tableau, ), ;, }]
[&&, f, ., equals, (, rhs, ., f, ), &&, constraints, ., equals, (, rhs, ., constraints, ), &&, tableau]
[&&, (, maxUlps, ==, rhs, ., maxUlps, ), &&, f, ., equals, (, rhs, ., f, ), &&, constraints, .]
[&&, (, epsilon, ==, rhs, ., epsilon, ), &&, (, maxUlps, ==, rhs, ., maxUlps, ), &&, f, ., equals]
[&&, (, numArtificialVariables, ==, rhs, ., numArtificialVariables, ), &&, (, epsilon, ==, rhs, ., epsilon, ), &&, (, maxUlps, ==]
[&&, (, numSlackVariables, ==, rhs, ., numSlackVariables, ), &&, (, numArtificialVariables, ==, rhs, ., numArtificialVariables, ), &&, (, epsilon, ==]
[&&, (, numDecisionVariables, ==, rhs, ., numDecisionVariables, ), &&, (, numSlackVariables, ==, rhs, ., numSlackVariables, ), &&, (, numArtificialVariables, ==]
[), &&, (, numDecisionVariables, ==, rhs, ., numDecisionVariables, ), &&, (, numSlackVariables, ==, rhs, ., numSlackVariables, ), &&, (, numArtificialVariables]
[==, rhs, ., restrictToNonNegative, ), &&, (, numDecisionVariables, ==, rhs, ., numDecisionVariables, ), &&, (, numSlackVariables, ==, rhs, ., numSlackVariables]
[), &&, (, numDecisionVariables, ==, rhs, ., numDecisionVariables, ), &&, (, numSlackVariables, ==, rhs, ., numSlackVariables, ), &&, (, numArtificialVariables]
[., restrictToNonNegative, ), &&, (, numDecisionVariables, ==, rhs, ., numDecisionVariables, ), &&, (, numSlackVariables, ==, rhs, ., numSlackVariables, ), &&]
[&&, (, numSlackVariables, ==, rhs, ., numSlackVariables, ), &&, (, numArtificialVariables, ==, rhs, ., numArtificialVariables, ), &&, (, epsilon, ==]
[), &&, (, numSlackVariables, ==, rhs, ., numSlackVariables, ), &&, (, numArtificialVariables, ==, rhs, ., numArtificialVariables, ), &&, (, epsilon]
[==, rhs, ., numDecisionVariables, ), &&, (, numSlackVariables, ==, rhs, ., numSlackVariables, ), &&, (, numArtificialVariables, ==, rhs, ., numArtificialVariables]
[), &&, (, numSlackVariables, ==, rhs, ., numSlackVariables, ), &&, (, numArtificialVariables, ==, rhs, ., numArtificialVariables, ), &&, (, epsilon]
[., numDecisionVariables, ), &&, (, numSlackVariables, ==, rhs, ., numSlackVariables, ), &&, (, numArtificialVariables, ==, rhs, ., numArtificialVariables, ), &&]
[&&, (, numArtificialVariables, ==, rhs, ., numArtificialVariables, ), &&, (, epsilon, ==, rhs, ., epsilon, ), &&, (, maxUlps, ==]
[), &&, (, numArtificialVariables, ==, rhs, ., numArtificialVariables, ), &&, (, epsilon, ==, rhs, ., epsilon, ), &&, (, maxUlps]
[==, rhs, ., numSlackVariables, ), &&, (, numArtificialVariables, ==, rhs, ., numArtificialVariables, ), &&, (, epsilon, ==, rhs, ., epsilon]
[), &&, (, numArtificialVariables, ==, rhs, ., numArtificialVariables, ), &&, (, epsilon, ==, rhs, ., epsilon, ), &&, (, maxUlps]
[., numSlackVariables, ), &&, (, numArtificialVariables, ==, rhs, ., numArtificialVariables, ), &&, (, epsilon, ==, rhs, ., epsilon, ), &&]
[&&, (, epsilon, ==, rhs, ., epsilon, ), &&, (, maxUlps, ==, rhs, ., maxUlps, ), &&, f, ., equals]
[), &&, (, epsilon, ==, rhs, ., epsilon, ), &&, (, maxUlps, ==, rhs, ., maxUlps, ), &&, f, .]
[==, rhs, ., numArtificialVariables, ), &&, (, epsilon, ==, rhs, ., epsilon, ), &&, (, maxUlps, ==, rhs, ., maxUlps]
[), &&, (, epsilon, ==, rhs, ., epsilon, ), &&, (, maxUlps, ==, rhs, ., maxUlps, ), &&, f, .]
[., numArtificialVariables, ), &&, (, epsilon, ==, rhs, ., epsilon, ), &&, (, maxUlps, ==, rhs, ., maxUlps, ), &&]
[&&, (, maxUlps, ==, rhs, ., maxUlps, ), &&, f, ., equals, (, rhs, ., f, ), &&, constraints, .]
[), &&, (, maxUlps, ==, rhs, ., maxUlps, ), &&, f, ., equals, (, rhs, ., f, ), &&, constraints]
[==, rhs, ., epsilon, ), &&, (, maxUlps, ==, rhs, ., maxUlps, ), &&, f, ., equals, (, rhs, .]
[), &&, (, maxUlps, ==, rhs, ., maxUlps, ), &&, f, ., equals, (, rhs, ., f, ), &&, constraints]
[., epsilon, ), &&, (, maxUlps, ==, rhs, ., maxUlps, ), &&, f, ., equals, (, rhs, ., f, )]
[&&, f, ., equals, (, rhs, ., f, ), &&, constraints, ., equals, (, rhs, ., constraints, ), &&, tableau]
[), &&, f, ., equals, (, rhs, ., f, ), &&, constraints, ., equals, (, rhs, ., constraints, ), &&]
[==, rhs, ., maxUlps, ), &&, f, ., equals, (, rhs, ., f, ), &&, constraints, ., equals, (, rhs]
[), &&, f, ., equals, (, rhs, ., f, ), &&, constraints, ., equals, (, rhs, ., constraints, ), &&]
[., maxUlps, ), &&, f, ., equals, (, rhs, ., f, ), &&, constraints, ., equals, (, rhs, ., constraints]
[&&, constraints, ., equals, (, rhs, ., constraints, ), &&, tableau, ., equals, (, rhs, ., tableau, ), ;, }]
[., equals, (, rhs, ., f, ), &&, constraints, ., equals, (, rhs, ., constraints, ), &&, tableau, ., equals]
[), &&, constraints, ., equals, (, rhs, ., constraints, ), &&, tableau, ., equals, (, rhs, ., tableau, ), ;]
[., f, ), &&, constraints, ., equals, (, rhs, ., constraints, ), &&, tableau, ., equals, (, rhs, ., tableau]
[&&, tableau, ., equals, (, rhs, ., tableau, ), ;, }, return, false, ;, }, @, Override, public, int, hashCode]
[., equals, (, rhs, ., constraints, ), &&, tableau, ., equals, (, rhs, ., tableau, ), ;, }, return, false]
[), &&, tableau, ., equals, (, rhs, ., tableau, ), ;, }, return, false, ;, }, @, Override, public, int]
[., constraints, ), &&, tableau, ., equals, (, rhs, ., tableau, ), ;, }, return, false, ;, }, @, Override]
[;, }, return, false, ;, }, @, Override, public, int, hashCode, (, ), {, return, Boolean, ., valueOf, (, restrictToNonNegative]
[., equals, (, rhs, ., tableau, ), ;, }, return, false, ;, }, @, Override, public, int, hashCode, (, )]
[), ;, }, return, false, ;, }, @, Override, public, int, hashCode, (, ), {, return, Boolean, ., valueOf, (]
[., tableau, ), ;, }, return, false, ;, }, @, Override, public, int, hashCode, (, ), {, return, Boolean, .]
[;, }, @, Override, public, int, hashCode, (, ), {, return, Boolean, ., valueOf, (, restrictToNonNegative, ), ., hashCode, (]
[;, }, private, void, writeObject, (, ObjectOutputStream, oos, ), throws, IOException, {, oos, ., defaultWriteObject, (, ), ;, MatrixUtils, .]
[^, tableau, ., hashCode, (, ), ;, }, private, void, writeObject, (, ObjectOutputStream, oos, ), throws, IOException, {, oos, .]
[^, constraints, ., hashCode, (, ), ^, tableau, ., hashCode, (, ), ;, }, private, void, writeObject, (, ObjectOutputStream, oos]
[^, f, ., hashCode, (, ), ^, constraints, ., hashCode, (, ), ^, tableau, ., hashCode, (, ), ;, }]
[^, maxUlps, ^, f, ., hashCode, (, ), ^, constraints, ., hashCode, (, ), ^, tableau, ., hashCode, (, )]
[^, Double, ., valueOf, (, epsilon, ), ., hashCode, (, ), ^, maxUlps, ^, f, ., hashCode, (, ), ^]
[^, numArtificialVariables, ^, Double, ., valueOf, (, epsilon, ), ., hashCode, (, ), ^, maxUlps, ^, f, ., hashCode, (]
[^, numSlackVariables, ^, numArtificialVariables, ^, Double, ., valueOf, (, epsilon, ), ., hashCode, (, ), ^, maxUlps, ^, f, .]
[^, numDecisionVariables, ^, numSlackVariables, ^, numArtificialVariables, ^, Double, ., valueOf, (, epsilon, ), ., hashCode, (, ), ^, maxUlps, ^]
[., hashCode, (, ), ^, numDecisionVariables, ^, numSlackVariables, ^, numArtificialVariables, ^, Double, ., valueOf, (, epsilon, ), ., hashCode, (]
[., valueOf, (, restrictToNonNegative, ), ., hashCode, (, ), ^, numDecisionVariables, ^, numSlackVariables, ^, numArtificialVariables, ^, Double, ., valueOf, (]
[), ., hashCode, (, ), ^, numDecisionVariables, ^, numSlackVariables, ^, numArtificialVariables, ^, Double, ., valueOf, (, epsilon, ), ., hashCode]
[^, numSlackVariables, ^, numArtificialVariables, ^, Double, ., valueOf, (, epsilon, ), ., hashCode, (, ), ^, maxUlps, ^, f, .]
[^, numArtificialVariables, ^, Double, ., valueOf, (, epsilon, ), ., hashCode, (, ), ^, maxUlps, ^, f, ., hashCode, (]
[^, Double, ., valueOf, (, epsilon, ), ., hashCode, (, ), ^, maxUlps, ^, f, ., hashCode, (, ), ^]
[^, maxUlps, ^, f, ., hashCode, (, ), ^, constraints, ., hashCode, (, ), ^, tableau, ., hashCode, (, )]
[., hashCode, (, ), ^, maxUlps, ^, f, ., hashCode, (, ), ^, constraints, ., hashCode, (, ), ^, tableau]
[., valueOf, (, epsilon, ), ., hashCode, (, ), ^, maxUlps, ^, f, ., hashCode, (, ), ^, constraints, .]
[), ., hashCode, (, ), ^, maxUlps, ^, f, ., hashCode, (, ), ^, constraints, ., hashCode, (, ), ^]
[^, f, ., hashCode, (, ), ^, constraints, ., hashCode, (, ), ^, tableau, ., hashCode, (, ), ;, }]
[^, constraints, ., hashCode, (, ), ^, tableau, ., hashCode, (, ), ;, }, private, void, writeObject, (, ObjectOutputStream, oos]
[., hashCode, (, ), ^, constraints, ., hashCode, (, ), ^, tableau, ., hashCode, (, ), ;, }, private, void]
[^, tableau, ., hashCode, (, ), ;, }, private, void, writeObject, (, ObjectOutputStream, oos, ), throws, IOException, {, oos, .]
[., hashCode, (, ), ^, tableau, ., hashCode, (, ), ;, }, private, void, writeObject, (, ObjectOutputStream, oos, ), throws]
[;, }, private, void, writeObject, (, ObjectOutputStream, oos, ), throws, IOException, {, oos, ., defaultWriteObject, (, ), ;, MatrixUtils, .]
[., hashCode, (, ), ;, }, private, void, writeObject, (, ObjectOutputStream, oos, ), throws, IOException, {, oos, ., defaultWriteObject, (]
[;, MatrixUtils, ., serializeRealMatrix, (, tableau, ,, oos, ), ;, }, private, void, readObject, (, ObjectInputStream, ois, ), throws, ClassNotFoundException]
[., defaultWriteObject, (, ), ;, MatrixUtils, ., serializeRealMatrix, (, tableau, ,, oos, ), ;, }, private, void, readObject, (, ObjectInputStream]
[;, }, private, void, readObject, (, ObjectInputStream, ois, ), throws, ClassNotFoundException, ,, IOException, {, ois, ., defaultReadObject, (, ), ;]
[., serializeRealMatrix, (, tableau, ,, oos, ), ;, }, private, void, readObject, (, ObjectInputStream, ois, ), throws, ClassNotFoundException, ,, IOException]
[,, oos, ), ;, }, private, void, readObject, (, ObjectInputStream, ois, ), throws, ClassNotFoundException, ,, IOException, {, ois, ., defaultReadObject]
[), ;, }, private, void, readObject, (, ObjectInputStream, ois, ), throws, ClassNotFoundException, ,, IOException, {, ois, ., defaultReadObject, (, )]
[;, MatrixUtils, ., deserializeRealMatrix, (, this, ,, "tableau", ,, ois, ), ;, }, }]
[., defaultReadObject, (, ), ;, MatrixUtils, ., deserializeRealMatrix, (, this, ,, "tableau", ,, ois, ), ;, }, }]
[;, }, }]
[., deserializeRealMatrix, (, this, ,, "tableau", ,, ois, ), ;, }, }]
[,, "tableau", ,, ois, ), ;, }, }]
[,, ois, ), ;, }, }]
[), ;, }, }]
