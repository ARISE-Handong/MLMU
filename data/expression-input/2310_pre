[>, nameDefinitionMultimap, ;, private, final, Multimap, <, String, ,, UseSite, >, nameUseSiteMultimap, ;, public, SimpleDefinitionFinder, (, AbstractCompiler, compiler, ), {]
[>, nameDefinitionMultimap, ;, private, final, Multimap, <, String, ,, UseSite, >, nameUseSiteMultimap, ;, public, SimpleDefinitionFinder, (, AbstractCompiler, compiler, ), {]
[final, Multimap, <, String, ,, UseSite, >, nameUseSiteMultimap, ;, public, SimpleDefinitionFinder, (, AbstractCompiler, compiler, ), {, this, ., compiler, =]
[<, String, ,, UseSite, >, nameUseSiteMultimap, ;, public, SimpleDefinitionFinder, (, AbstractCompiler, compiler, ), {, this, ., compiler, =, compiler, ;]
[<, String, ,, UseSite, >, nameUseSiteMultimap, ;, public, SimpleDefinitionFinder, (, AbstractCompiler, compiler, ), {, this, ., compiler, =, compiler, ;]
[>, nameUseSiteMultimap, ;, public, SimpleDefinitionFinder, (, AbstractCompiler, compiler, ), {, this, ., compiler, =, compiler, ;, this, ., definitionSiteMap, =]
[>, nameUseSiteMultimap, ;, public, SimpleDefinitionFinder, (, AbstractCompiler, compiler, ), {, this, ., compiler, =, compiler, ;, this, ., definitionSiteMap, =]
[AbstractCompiler, compiler, ), {, this, ., compiler, =, compiler, ;, this, ., definitionSiteMap, =, Maps, ., newLinkedHashMap, (, ), ;]
[AbstractCompiler, compiler, ), {, this, ., compiler, =, compiler, ;, this, ., definitionSiteMap, =, Maps, ., newLinkedHashMap, (, ), ;]
[this, ., compiler, =, compiler, ;, this, ., definitionSiteMap, =, Maps, ., newLinkedHashMap, (, ), ;, this, ., nameDefinitionMultimap, =]
[this, ., compiler, =, compiler, ;, this, ., definitionSiteMap, =, Maps, ., newLinkedHashMap, (, ), ;, this, ., nameDefinitionMultimap, =]
[this, ., definitionSiteMap, =, Maps, ., newLinkedHashMap, (, ), ;, this, ., nameDefinitionMultimap, =, LinkedHashMultimap, ., create, (, ), ;]
[this, ., definitionSiteMap, =, Maps, ., newLinkedHashMap, (, ), ;, this, ., nameDefinitionMultimap, =, LinkedHashMultimap, ., create, (, ), ;]
[Maps, ., newLinkedHashMap, (, ), ;, this, ., nameDefinitionMultimap, =, LinkedHashMultimap, ., create, (, ), ;, this, ., nameUseSiteMultimap, =]
[Maps, ., newLinkedHashMap, (, ), ;, this, ., nameDefinitionMultimap, =, LinkedHashMultimap, ., create, (, ), ;, this, ., nameUseSiteMultimap, =]
[., nameUseSiteMultimap, =, LinkedHashMultimap, ., create, (, ), ;, }, public, Collection, <, DefinitionSite, >, getDefinitionSites, (, ), {, return]
[., nameUseSiteMultimap, =, LinkedHashMultimap, ., create, (, ), ;, }, public, Collection, <, DefinitionSite, >, getDefinitionSites, (, ), {, return]
[(, ), {, return, definitionSiteMap, ., values, (, ), ;, }, private, DefinitionSite, getDefinitionAt, (, Node, node, ), {, return]
[(, ), {, return, definitionSiteMap, ., values, (, ), ;, }, private, DefinitionSite, getDefinitionAt, (, Node, node, ), {, return]
[definitionSiteMap, ., values, (, ), ;, }, private, DefinitionSite, getDefinitionAt, (, Node, node, ), {, return, definitionSiteMap, ., get, (]
[Node, node, ), {, return, definitionSiteMap, ., get, (, node, ), ;, }, DefinitionSite, getDefinitionForFunction, (, Node, function, ), {]
[Node, node, ), {, return, definitionSiteMap, ., get, (, node, ), ;, }, DefinitionSite, getDefinitionForFunction, (, Node, function, ), {]
[return, definitionSiteMap, ., get, (, node, ), ;, }, DefinitionSite, getDefinitionForFunction, (, Node, function, ), {, Preconditions, ., checkState, (]
[return, definitionSiteMap, ., get, (, node, ), ;, }, DefinitionSite, getDefinitionForFunction, (, Node, function, ), {, Preconditions, ., checkState, (]
[}, DefinitionSite, getDefinitionForFunction, (, Node, function, ), {, Preconditions, ., checkState, (, function, ., isFunction, (, ), ), ;, return]
[getDefinitionForFunction, (, Node, function, ), {, Preconditions, ., checkState, (, function, ., isFunction, (, ), ), ;, return, getDefinitionAt, (]
[Node, function, ), {, Preconditions, ., checkState, (, function, ., isFunction, (, ), ), ;, return, getDefinitionAt, (, getNameNodeFromFunctionNode, (]
[function, ), ), ;, }, @, Override, public, Collection, <, Definition, >, getDefinitionsReferencedAt, (, Node, useSite, ), {, if, (]
[function, ), ), ;, }, @, Override, public, Collection, <, Definition, >, getDefinitionsReferencedAt, (, Node, useSite, ), {, if, (]
[}, @, Override, public, Collection, <, Definition, >, getDefinitionsReferencedAt, (, Node, useSite, ), {, if, (, definitionSiteMap, ., containsKey, (]
[<, Definition, >, getDefinitionsReferencedAt, (, Node, useSite, ), {, if, (, definitionSiteMap, ., containsKey, (, useSite, ), ), {, return]
[Node, useSite, ), {, if, (, definitionSiteMap, ., containsKey, (, useSite, ), ), {, return, null, ;, }, if, (]
[Node, useSite, ), {, if, (, definitionSiteMap, ., containsKey, (, useSite, ), ), {, return, null, ;, }, if, (]
[useSite, ), ), {, return, null, ;, }, if, (, useSite, ., isGetProp, (, ), ), {, String, propName, =]
[useSite, ), ), {, return, null, ;, }, if, (, useSite, ., isGetProp, (, ), ), {, String, propName, =]
[useSite, ), ), {, return, null, ;, }, if, (, useSite, ., isGetProp, (, ), ), {, String, propName, =]
[isGetProp, (, ), ), {, String, propName, =, useSite, ., getLastChild, (, ), ., getString, (, ), ;, if, (]
[isGetProp, (, ), ), {, String, propName, =, useSite, ., getLastChild, (, ), ., getString, (, ), ;, if, (]
[isGetProp, (, ), ), {, String, propName, =, useSite, ., getLastChild, (, ), ., getString, (, ), ;, if, (]
[{, String, propName, =, useSite, ., getLastChild, (, ), ., getString, (, ), ;, if, (, propName, ., equals, (]
[=, useSite, ., getLastChild, (, ), ., getString, (, ), ;, if, (, propName, ., equals, (, "apply", ), ||]
[=, useSite, ., getLastChild, (, ), ., getString, (, ), ;, if, (, propName, ., equals, (, "apply", ), ||]
[(, ), ., getString, (, ), ;, if, (, propName, ., equals, (, "apply", ), ||, propName, ., equals, (]
[(, ), ;, if, (, propName, ., equals, (, "apply", ), ||, propName, ., equals, (, "call", ), ), {]
[;, if, (, propName, ., equals, (, "apply", ), ||, propName, ., equals, (, "call", ), ), {, useSite, =]
[;, if, (, propName, ., equals, (, "apply", ), ||, propName, ., equals, (, "call", ), ), {, useSite, =]
[., equals, (, "call", ), ), {, useSite, =, useSite, ., getFirstChild, (, ), ;, }, }, String, name, =]
[(, "call", ), ), {, useSite, =, useSite, ., getFirstChild, (, ), ;, }, }, String, name, =, getSimplifiedName, (]
[useSite, =, useSite, ., getFirstChild, (, ), ;, }, }, String, name, =, getSimplifiedName, (, useSite, ), ;, if, (]
[useSite, =, useSite, ., getFirstChild, (, ), ;, }, }, String, name, =, getSimplifiedName, (, useSite, ), ;, if, (]
[useSite, ., getFirstChild, (, ), ;, }, }, String, name, =, getSimplifiedName, (, useSite, ), ;, if, (, name, !=]
[name, =, getSimplifiedName, (, useSite, ), ;, if, (, name, !=, null, ), {, Collection, <, Definition, >, defs, =]
[name, =, getSimplifiedName, (, useSite, ), ;, if, (, name, !=, null, ), {, Collection, <, Definition, >, defs, =]
[useSite, ), ;, if, (, name, !=, null, ), {, Collection, <, Definition, >, defs, =, nameDefinitionMultimap, ., get, (]
[name, !=, null, ), {, Collection, <, Definition, >, defs, =, nameDefinitionMultimap, ., get, (, name, ), ;, if, (]
[!=, null, ), {, Collection, <, Definition, >, defs, =, nameDefinitionMultimap, ., get, (, name, ), ;, if, (, !]
[!=, null, ), {, Collection, <, Definition, >, defs, =, nameDefinitionMultimap, ., get, (, name, ), ;, if, (, !]
[defs, =, nameDefinitionMultimap, ., get, (, name, ), ;, if, (, !, defs, ., isEmpty, (, ), ), {, return]
[name, ), ;, if, (, !, defs, ., isEmpty, (, ), ), {, return, defs, ;, }, else, {, return]
[., isEmpty, (, ), ), {, return, defs, ;, }, else, {, return, null, ;, }, }, else, {, return]
[else, {, return, null, ;, }, }, @, Override, public, void, process, (, Node, externs, ,, Node, source, ), {]
[else, {, return, null, ;, }, }, @, Override, public, void, process, (, Node, externs, ,, Node, source, ), {]
[;, }, }, @, Override, public, void, process, (, Node, externs, ,, Node, source, ), {, NodeTraversal, ., traverse, (]
[}, @, Override, public, void, process, (, Node, externs, ,, Node, source, ), {, NodeTraversal, ., traverse, (, compiler, ,]
[Override, public, void, process, (, Node, externs, ,, Node, source, ), {, NodeTraversal, ., traverse, (, compiler, ,, externs, ,]
[process, (, Node, externs, ,, Node, source, ), {, NodeTraversal, ., traverse, (, compiler, ,, externs, ,, new, DefinitionGatheringCallback, (]
[,, Node, source, ), {, NodeTraversal, ., traverse, (, compiler, ,, externs, ,, new, DefinitionGatheringCallback, (, true, ), ), ;]
[,, Node, source, ), {, NodeTraversal, ., traverse, (, compiler, ,, externs, ,, new, DefinitionGatheringCallback, (, true, ), ), ;]
[{, NodeTraversal, ., traverse, (, compiler, ,, externs, ,, new, DefinitionGatheringCallback, (, true, ), ), ;, NodeTraversal, ., traverse, (]
[., traverse, (, compiler, ,, externs, ,, new, DefinitionGatheringCallback, (, true, ), ), ;, NodeTraversal, ., traverse, (, compiler, ,]
[(, compiler, ,, externs, ,, new, DefinitionGatheringCallback, (, true, ), ), ;, NodeTraversal, ., traverse, (, compiler, ,, source, ,]
[externs, ,, new, DefinitionGatheringCallback, (, true, ), ), ;, NodeTraversal, ., traverse, (, compiler, ,, source, ,, new, DefinitionGatheringCallback, (]
[(, true, ), ), ;, NodeTraversal, ., traverse, (, compiler, ,, source, ,, new, DefinitionGatheringCallback, (, false, ), ), ;]
[(, true, ), ), ;, NodeTraversal, ., traverse, (, compiler, ,, source, ,, new, DefinitionGatheringCallback, (, false, ), ), ;]
[;, NodeTraversal, ., traverse, (, compiler, ,, source, ,, new, DefinitionGatheringCallback, (, false, ), ), ;, NodeTraversal, ., traverse, (]
[., traverse, (, compiler, ,, source, ,, new, DefinitionGatheringCallback, (, false, ), ), ;, NodeTraversal, ., traverse, (, compiler, ,]
[(, compiler, ,, source, ,, new, DefinitionGatheringCallback, (, false, ), ), ;, NodeTraversal, ., traverse, (, compiler, ,, source, ,]
[new, UseSiteGatheringCallback, (, ), ), ;, }, Collection, <, UseSite, >, getUseSites, (, Definition, definition, ), {, String, name, =]
[(, ), ), ;, }, Collection, <, UseSite, >, getUseSites, (, Definition, definition, ), {, String, name, =, getSimplifiedName, (]
[(, ), ), ;, }, Collection, <, UseSite, >, getUseSites, (, Definition, definition, ), {, String, name, =, getSimplifiedName, (]
[>, getUseSites, (, Definition, definition, ), {, String, name, =, getSimplifiedName, (, definition, ., getLValue, (, ), ), ;, return]
[>, getUseSites, (, Definition, definition, ), {, String, name, =, getSimplifiedName, (, definition, ., getLValue, (, ), ), ;, return]
[definition, ), {, String, name, =, getSimplifiedName, (, definition, ., getLValue, (, ), ), ;, return, nameUseSiteMultimap, ., get, (]
[return, nameUseSiteMultimap, ., get, (, name, ), ;, }, private, static, String, getSimplifiedName, (, Node, node, ), {, if, (]
[return, nameUseSiteMultimap, ., get, (, name, ), ;, }, private, static, String, getSimplifiedName, (, Node, node, ), {, if, (]
[static, String, getSimplifiedName, (, Node, node, ), {, if, (, node, ., isName, (, ), ), {, String, name, =]
[static, String, getSimplifiedName, (, Node, node, ), {, if, (, node, ., isName, (, ), ), {, String, name, =]
[if, (, node, ., isName, (, ), ), {, String, name, =, node, ., getString, (, ), ;, if, (]
[if, (, node, ., isName, (, ), ), {, String, name, =, node, ., getString, (, ), ;, if, (]
[if, (, node, ., isName, (, ), ), {, String, name, =, node, ., getString, (, ), ;, if, (]
[node, ., isName, (, ), ), {, String, name, =, node, ., getString, (, ), ;, if, (, name, !=]
[isName, (, ), ), {, String, name, =, node, ., getString, (, ), ;, if, (, name, !=, null, &&]
[(, ), ), {, String, name, =, node, ., getString, (, ), ;, if, (, name, !=, null, &&, !]
[(, ), ), {, String, name, =, node, ., getString, (, ), ;, if, (, name, !=, null, &&, !]
[., getString, (, ), ;, if, (, name, !=, null, &&, !, name, ., isEmpty, (, ), ), {, return]
[(, name, !=, null, &&, !, name, ., isEmpty, (, ), ), {, return, name, ;, }, else, {, return]
[., isEmpty, (, ), ), {, return, name, ;, }, else, {, return, null, ;, }, }, else, if, (]
[., isEmpty, (, ), ), {, return, name, ;, }, else, {, return, null, ;, }, }, else, if, (]
[;, }, else, {, return, null, ;, }, }, else, if, (, node, ., isGetProp, (, ), ), {, return]
[;, }, else, {, return, null, ;, }, }, else, if, (, node, ., isGetProp, (, ), ), {, return]
[else, {, return, null, ;, }, }, else, if, (, node, ., isGetProp, (, ), ), {, return, "this.", +]
[else, {, return, null, ;, }, }, else, if, (, node, ., isGetProp, (, ), ), {, return, "this.", +]
[else, {, return, null, ;, }, }, else, if, (, node, ., isGetProp, (, ), ), {, return, "this.", +]
[isGetProp, (, ), ), {, return, "this.", +, node, ., getLastChild, (, ), ., getString, (, ), ;, }, return]
[return, null, ;, }, private, class, DefinitionGatheringCallback, extends, AbstractPostOrderCallback, {, private, boolean, inExterns, ;, DefinitionGatheringCallback, (, boolean, inExterns, ), {]
[return, null, ;, }, private, class, DefinitionGatheringCallback, extends, AbstractPostOrderCallback, {, private, boolean, inExterns, ;, DefinitionGatheringCallback, (, boolean, inExterns, ), {]
[private, class, DefinitionGatheringCallback, extends, AbstractPostOrderCallback, {, private, boolean, inExterns, ;, DefinitionGatheringCallback, (, boolean, inExterns, ), {, this, ., inExterns, =]
[;, }, @, Override, public, void, visit, (, NodeTraversal, traversal, ,, Node, node, ,, Node, parent, ), {, if, (]
[;, }, @, Override, public, void, visit, (, NodeTraversal, traversal, ,, Node, node, ,, Node, parent, ), {, if, (]
[;, }, @, Override, public, void, visit, (, NodeTraversal, traversal, ,, Node, node, ,, Node, parent, ), {, if, (]
[@, Override, public, void, visit, (, NodeTraversal, traversal, ,, Node, node, ,, Node, parent, ), {, if, (, inExterns, &&]
[@, Override, public, void, visit, (, NodeTraversal, traversal, ,, Node, node, ,, Node, parent, ), {, if, (, inExterns, &&]
[NodeTraversal, traversal, ,, Node, node, ,, Node, parent, ), {, if, (, inExterns, &&, node, ., isName, (, ), &&]
[NodeTraversal, traversal, ,, Node, node, ,, Node, parent, ), {, if, (, inExterns, &&, node, ., isName, (, ), &&]
[&&, node, ., isName, (, ), &&, parent, ., isParamList, (, ), ), {, return, ;, }, Definition, def, =]
[&&, node, ., isName, (, ), &&, parent, ., isParamList, (, ), ), {, return, ;, }, Definition, def, =]
[(, ), &&, parent, ., isParamList, (, ), ), {, return, ;, }, Definition, def, =, DefinitionsRemover, ., getDefinition, (]
[&&, parent, ., isParamList, (, ), ), {, return, ;, }, Definition, def, =, DefinitionsRemover, ., getDefinition, (, node, ,]
[), ), {, return, ;, }, Definition, def, =, DefinitionsRemover, ., getDefinition, (, node, ,, inExterns, ), ;, if, (]
[), ), {, return, ;, }, Definition, def, =, DefinitionsRemover, ., getDefinition, (, node, ,, inExterns, ), ;, if, (]
[{, return, ;, }, Definition, def, =, DefinitionsRemover, ., getDefinition, (, node, ,, inExterns, ), ;, if, (, def, !=]
[=, DefinitionsRemover, ., getDefinition, (, node, ,, inExterns, ), ;, if, (, def, !=, null, ), {, String, name, =]
[., getDefinition, (, node, ,, inExterns, ), ;, if, (, def, !=, null, ), {, String, name, =, getSimplifiedName, (]
[., getDefinition, (, node, ,, inExterns, ), ;, if, (, def, !=, null, ), {, String, name, =, getSimplifiedName, (]
[(, def, !=, null, ), {, String, name, =, getSimplifiedName, (, def, ., getLValue, (, ), ), ;, if, (]
[(, def, !=, null, ), {, String, name, =, getSimplifiedName, (, def, ., getLValue, (, ), ), ;, if, (]
[!=, null, ), {, String, name, =, getSimplifiedName, (, def, ., getLValue, (, ), ), ;, if, (, name, !=]
[=, getSimplifiedName, (, def, ., getLValue, (, ), ), ;, if, (, name, !=, null, ), {, Node, rValue, =]
[=, getSimplifiedName, (, def, ., getLValue, (, ), ), ;, if, (, name, !=, null, ), {, Node, rValue, =]
[), ;, if, (, name, !=, null, ), {, Node, rValue, =, def, ., getRValue, (, ), ;, if, (]
[), ;, if, (, name, !=, null, ), {, Node, rValue, =, def, ., getRValue, (, ), ;, if, (]
[), ;, if, (, name, !=, null, ), {, Node, rValue, =, def, ., getRValue, (, ), ;, if, (]
[;, if, (, name, !=, null, ), {, Node, rValue, =, def, ., getRValue, (, ), ;, if, (, (]
[;, if, (, name, !=, null, ), {, Node, rValue, =, def, ., getRValue, (, ), ;, if, (, (]
[(, name, !=, null, ), {, Node, rValue, =, def, ., getRValue, (, ), ;, if, (, (, rValue, !=]
[null, ), {, Node, rValue, =, def, ., getRValue, (, ), ;, if, (, (, rValue, !=, null, ), &&]
[), {, Node, rValue, =, def, ., getRValue, (, ), ;, if, (, (, rValue, !=, null, ), &&, !]
[), {, Node, rValue, =, def, ., getRValue, (, ), ;, if, (, (, rValue, !=, null, ), &&, !]
[=, def, ., getRValue, (, ), ;, if, (, (, rValue, !=, null, ), &&, !, NodeUtil, ., isImmutableValue, (]
[getRValue, (, ), ;, if, (, (, rValue, !=, null, ), &&, !, NodeUtil, ., isImmutableValue, (, rValue, ), &&]
[(, ), ;, if, (, (, rValue, !=, null, ), &&, !, NodeUtil, ., isImmutableValue, (, rValue, ), &&, !]
[(, ), ;, if, (, (, rValue, !=, null, ), &&, !, NodeUtil, ., isImmutableValue, (, rValue, ), &&, !]
[&&, !, NodeUtil, ., isImmutableValue, (, rValue, ), &&, !, rValue, ., isFunction, (, ), ), {, Definition, unknownDef, =]
[., isImmutableValue, (, rValue, ), &&, !, rValue, ., isFunction, (, ), ), {, Definition, unknownDef, =, new, UnknownDefinition, (]
[., isImmutableValue, (, rValue, ), &&, !, rValue, ., isFunction, (, ), ), {, Definition, unknownDef, =, new, UnknownDefinition, (]
[!, rValue, ., isFunction, (, ), ), {, Definition, unknownDef, =, new, UnknownDefinition, (, def, ., getLValue, (, ), ,]
[isFunction, (, ), ), {, Definition, unknownDef, =, new, UnknownDefinition, (, def, ., getLValue, (, ), ,, inExterns, ), ;]
[), ), {, Definition, unknownDef, =, new, UnknownDefinition, (, def, ., getLValue, (, ), ,, inExterns, ), ;, def, =]
[=, new, UnknownDefinition, (, def, ., getLValue, (, ), ,, inExterns, ), ;, def, =, unknownDef, ;, }, if, (]
[,, inExterns, ), ;, def, =, unknownDef, ;, }, if, (, inExterns, ), {, List, <, Definition, >, stubsToRemove, =]
[,, inExterns, ), ;, def, =, unknownDef, ;, }, if, (, inExterns, ), {, List, <, Definition, >, stubsToRemove, =]
[if, (, inExterns, ), {, List, <, Definition, >, stubsToRemove, =, Lists, ., newArrayList, (, ), ;, String, qualifiedName, =]
[if, (, inExterns, ), {, List, <, Definition, >, stubsToRemove, =, Lists, ., newArrayList, (, ), ;, String, qualifiedName, =]
[>, stubsToRemove, =, Lists, ., newArrayList, (, ), ;, String, qualifiedName, =, node, ., getQualifiedName, (, ), ;, if, (]
[>, stubsToRemove, =, Lists, ., newArrayList, (, ), ;, String, qualifiedName, =, node, ., getQualifiedName, (, ), ;, if, (]
[=, Lists, ., newArrayList, (, ), ;, String, qualifiedName, =, node, ., getQualifiedName, (, ), ;, if, (, qualifiedName, !=]
[qualifiedName, =, node, ., getQualifiedName, (, ), ;, if, (, qualifiedName, !=, null, ), {, for, (, Definition, prevDef, :]
[qualifiedName, =, node, ., getQualifiedName, (, ), ;, if, (, qualifiedName, !=, null, ), {, for, (, Definition, prevDef, :]
[getQualifiedName, (, ), ;, if, (, qualifiedName, !=, null, ), {, for, (, Definition, prevDef, :, nameDefinitionMultimap, ., get, (]
[qualifiedName, !=, null, ), {, for, (, Definition, prevDef, :, nameDefinitionMultimap, ., get, (, name, ), ), {, if, (]
[qualifiedName, !=, null, ), {, for, (, Definition, prevDef, :, nameDefinitionMultimap, ., get, (, name, ), ), {, if, (]
[qualifiedName, !=, null, ), {, for, (, Definition, prevDef, :, nameDefinitionMultimap, ., get, (, name, ), ), {, if, (]
[{, for, (, Definition, prevDef, :, nameDefinitionMultimap, ., get, (, name, ), ), {, if, (, prevDef, instanceof, ExternalNameOnlyDefinition, &&]
[for, (, Definition, prevDef, :, nameDefinitionMultimap, ., get, (, name, ), ), {, if, (, prevDef, instanceof, ExternalNameOnlyDefinition, &&, !]
[Definition, prevDef, :, nameDefinitionMultimap, ., get, (, name, ), ), {, if, (, prevDef, instanceof, ExternalNameOnlyDefinition, &&, !, jsdocContainsDeclarations, (]
[name, ), ), {, if, (, prevDef, instanceof, ExternalNameOnlyDefinition, &&, !, jsdocContainsDeclarations, (, node, ), ), {, String, prevName, =]
[name, ), ), {, if, (, prevDef, instanceof, ExternalNameOnlyDefinition, &&, !, jsdocContainsDeclarations, (, node, ), ), {, String, prevName, =]
[name, ), ), {, if, (, prevDef, instanceof, ExternalNameOnlyDefinition, &&, !, jsdocContainsDeclarations, (, node, ), ), {, String, prevName, =]
[(, node, ), ), {, String, prevName, =, prevDef, ., getLValue, (, ), ., getQualifiedName, (, ), ;, if, (]
[(, node, ), ), {, String, prevName, =, prevDef, ., getLValue, (, ), ., getQualifiedName, (, ), ;, if, (]
[{, String, prevName, =, prevDef, ., getLValue, (, ), ., getQualifiedName, (, ), ;, if, (, qualifiedName, ., equals, (]
[prevDef, ., getLValue, (, ), ., getQualifiedName, (, ), ;, if, (, qualifiedName, ., equals, (, prevName, ), ), {]
[prevDef, ., getLValue, (, ), ., getQualifiedName, (, ), ;, if, (, qualifiedName, ., equals, (, prevName, ), ), {]
[), ., getQualifiedName, (, ), ;, if, (, qualifiedName, ., equals, (, prevName, ), ), {, stubsToRemove, ., add, (]
[(, prevName, ), ), {, stubsToRemove, ., add, (, prevDef, ), ;, }, }, }, for, (, Definition, prevDef, :]
[), {, stubsToRemove, ., add, (, prevDef, ), ;, }, }, }, for, (, Definition, prevDef, :, stubsToRemove, ), {]
[), {, stubsToRemove, ., add, (, prevDef, ), ;, }, }, }, for, (, Definition, prevDef, :, stubsToRemove, ), {]
[add, (, prevDef, ), ;, }, }, }, for, (, Definition, prevDef, :, stubsToRemove, ), {, nameDefinitionMultimap, ., remove, (]
[prevDef, ), ;, }, }, }, for, (, Definition, prevDef, :, stubsToRemove, ), {, nameDefinitionMultimap, ., remove, (, name, ,]
[for, (, Definition, prevDef, :, stubsToRemove, ), {, nameDefinitionMultimap, ., remove, (, name, ,, prevDef, ), ;, }, }, }]
[for, (, Definition, prevDef, :, stubsToRemove, ), {, nameDefinitionMultimap, ., remove, (, name, ,, prevDef, ), ;, }, }, }]
[:, stubsToRemove, ), {, nameDefinitionMultimap, ., remove, (, name, ,, prevDef, ), ;, }, }, }, nameDefinitionMultimap, ., put, (]
[), {, nameDefinitionMultimap, ., remove, (, name, ,, prevDef, ), ;, }, }, }, nameDefinitionMultimap, ., put, (, name, ,]
[., remove, (, name, ,, prevDef, ), ;, }, }, }, nameDefinitionMultimap, ., put, (, name, ,, def, ), ;]
[., remove, (, name, ,, prevDef, ), ;, }, }, }, nameDefinitionMultimap, ., put, (, name, ,, def, ), ;]
[,, prevDef, ), ;, }, }, }, nameDefinitionMultimap, ., put, (, name, ,, def, ), ;, definitionSiteMap, ., put, (]
[), ;, }, }, }, nameDefinitionMultimap, ., put, (, name, ,, def, ), ;, definitionSiteMap, ., put, (, node, ,]
[}, }, nameDefinitionMultimap, ., put, (, name, ,, def, ), ;, definitionSiteMap, ., put, (, node, ,, new, DefinitionSite, (]
[nameDefinitionMultimap, ., put, (, name, ,, def, ), ;, definitionSiteMap, ., put, (, node, ,, new, DefinitionSite, (, node, ,]
[put, (, name, ,, def, ), ;, definitionSiteMap, ., put, (, node, ,, new, DefinitionSite, (, node, ,, def, ,]
[put, (, name, ,, def, ), ;, definitionSiteMap, ., put, (, node, ,, new, DefinitionSite, (, node, ,, def, ,]
[;, definitionSiteMap, ., put, (, node, ,, new, DefinitionSite, (, node, ,, def, ,, traversal, ., getModule, (, ), ,]
[;, definitionSiteMap, ., put, (, node, ,, new, DefinitionSite, (, node, ,, def, ,, traversal, ., getModule, (, ), ,]
[,, new, DefinitionSite, (, node, ,, def, ,, traversal, ., getModule, (, ), ,, traversal, ., inGlobalScope, (, ), ,]
[traversal, ., getModule, (, ), ,, traversal, ., inGlobalScope, (, ), ,, inExterns, ), ), ;, }, }, if, (]
[traversal, ., getModule, (, ), ,, traversal, ., inGlobalScope, (, ), ,, inExterns, ), ), ;, }, }, if, (]
[traversal, ., getModule, (, ), ,, traversal, ., inGlobalScope, (, ), ,, inExterns, ), ), ;, }, }, if, (]
[getModule, (, ), ,, traversal, ., inGlobalScope, (, ), ,, inExterns, ), ), ;, }, }, if, (, inExterns, &&]
[(, ), ,, traversal, ., inGlobalScope, (, ), ,, inExterns, ), ), ;, }, }, if, (, inExterns, &&, (]
[(, ), ,, traversal, ., inGlobalScope, (, ), ,, inExterns, ), ), ;, }, }, if, (, inExterns, &&, (]
[,, traversal, ., inGlobalScope, (, ), ,, inExterns, ), ), ;, }, }, if, (, inExterns, &&, (, parent, !=]
[inGlobalScope, (, ), ,, inExterns, ), ), ;, }, }, if, (, inExterns, &&, (, parent, !=, null, ), &&]
[inGlobalScope, (, ), ,, inExterns, ), ), ;, }, }, if, (, inExterns, &&, (, parent, !=, null, ), &&]
[if, (, inExterns, &&, (, parent, !=, null, ), &&, parent, ., isExprResult, (, ), ), {, String, name, =]
[inExterns, &&, (, parent, !=, null, ), &&, parent, ., isExprResult, (, ), ), {, String, name, =, getSimplifiedName, (]
[null, ), &&, parent, ., isExprResult, (, ), ), {, String, name, =, getSimplifiedName, (, node, ), ;, if, (]
[null, ), &&, parent, ., isExprResult, (, ), ), {, String, name, =, getSimplifiedName, (, node, ), ;, if, (]
[&&, parent, ., isExprResult, (, ), ), {, String, name, =, getSimplifiedName, (, node, ), ;, if, (, name, !=]
[), {, String, name, =, getSimplifiedName, (, node, ), ;, if, (, name, !=, null, ), {, boolean, dropStub, =]
[=, getSimplifiedName, (, node, ), ;, if, (, name, !=, null, ), {, boolean, dropStub, =, false, ;, if, (]
[getSimplifiedName, (, node, ), ;, if, (, name, !=, null, ), {, boolean, dropStub, =, false, ;, if, (, !]
[node, ), ;, if, (, name, !=, null, ), {, boolean, dropStub, =, false, ;, if, (, !, jsdocContainsDeclarations, (]
[null, ), {, boolean, dropStub, =, false, ;, if, (, !, jsdocContainsDeclarations, (, node, ), ), {, String, qualifiedName, =]
[null, ), {, boolean, dropStub, =, false, ;, if, (, !, jsdocContainsDeclarations, (, node, ), ), {, String, qualifiedName, =]
[if, (, !, jsdocContainsDeclarations, (, node, ), ), {, String, qualifiedName, =, node, ., getQualifiedName, (, ), ;, if, (]
[if, (, !, jsdocContainsDeclarations, (, node, ), ), {, String, qualifiedName, =, node, ., getQualifiedName, (, ), ;, if, (]
[!, jsdocContainsDeclarations, (, node, ), ), {, String, qualifiedName, =, node, ., getQualifiedName, (, ), ;, if, (, qualifiedName, !=]
[qualifiedName, =, node, ., getQualifiedName, (, ), ;, if, (, qualifiedName, !=, null, ), {, for, (, Definition, prevDef, :]
[qualifiedName, =, node, ., getQualifiedName, (, ), ;, if, (, qualifiedName, !=, null, ), {, for, (, Definition, prevDef, :]
[getQualifiedName, (, ), ;, if, (, qualifiedName, !=, null, ), {, for, (, Definition, prevDef, :, nameDefinitionMultimap, ., get, (]
[!=, null, ), {, for, (, Definition, prevDef, :, nameDefinitionMultimap, ., get, (, name, ), ), {, String, prevName, =]
[!=, null, ), {, for, (, Definition, prevDef, :, nameDefinitionMultimap, ., get, (, name, ), ), {, String, prevName, =]
[!=, null, ), {, for, (, Definition, prevDef, :, nameDefinitionMultimap, ., get, (, name, ), ), {, String, prevName, =]
[(, name, ), ), {, String, prevName, =, prevDef, ., getLValue, (, ), ., getQualifiedName, (, ), ;, if, (]
[(, name, ), ), {, String, prevName, =, prevDef, ., getLValue, (, ), ., getQualifiedName, (, ), ;, if, (]
[{, String, prevName, =, prevDef, ., getLValue, (, ), ., getQualifiedName, (, ), ;, if, (, qualifiedName, ., equals, (]
[prevDef, ., getLValue, (, ), ., getQualifiedName, (, ), ;, if, (, qualifiedName, ., equals, (, prevName, ), ), {]
[getLValue, (, ), ., getQualifiedName, (, ), ;, if, (, qualifiedName, ., equals, (, prevName, ), ), {, dropStub, =]
[qualifiedName, ., equals, (, prevName, ), ), {, dropStub, =, true, ;, break, ;, }, }, }, }, if, (]
[., equals, (, prevName, ), ), {, dropStub, =, true, ;, break, ;, }, }, }, }, if, (, !]
[{, dropStub, =, true, ;, break, ;, }, }, }, }, if, (, !, dropStub, ), {, Definition, definition, =]
[true, ;, break, ;, }, }, }, }, if, (, !, dropStub, ), {, Definition, definition, =, new, ExternalNameOnlyDefinition, (]
[;, }, }, }, }, if, (, !, dropStub, ), {, Definition, definition, =, new, ExternalNameOnlyDefinition, (, node, ), ;]
[;, }, }, }, }, if, (, !, dropStub, ), {, Definition, definition, =, new, ExternalNameOnlyDefinition, (, node, ), ;]
[}, if, (, !, dropStub, ), {, Definition, definition, =, new, ExternalNameOnlyDefinition, (, node, ), ;, nameDefinitionMultimap, ., put, (]
[(, !, dropStub, ), {, Definition, definition, =, new, ExternalNameOnlyDefinition, (, node, ), ;, nameDefinitionMultimap, ., put, (, name, ,]
[), {, Definition, definition, =, new, ExternalNameOnlyDefinition, (, node, ), ;, nameDefinitionMultimap, ., put, (, name, ,, definition, ), ;]
[), {, Definition, definition, =, new, ExternalNameOnlyDefinition, (, node, ), ;, nameDefinitionMultimap, ., put, (, name, ,, definition, ), ;]
[=, new, ExternalNameOnlyDefinition, (, node, ), ;, nameDefinitionMultimap, ., put, (, name, ,, definition, ), ;, definitionSiteMap, ., put, (]
[ExternalNameOnlyDefinition, (, node, ), ;, nameDefinitionMultimap, ., put, (, name, ,, definition, ), ;, definitionSiteMap, ., put, (, node, ,]
[), ;, nameDefinitionMultimap, ., put, (, name, ,, definition, ), ;, definitionSiteMap, ., put, (, node, ,, new, DefinitionSite, (]
[nameDefinitionMultimap, ., put, (, name, ,, definition, ), ;, definitionSiteMap, ., put, (, node, ,, new, DefinitionSite, (, node, ,]
[put, (, name, ,, definition, ), ;, definitionSiteMap, ., put, (, node, ,, new, DefinitionSite, (, node, ,, definition, ,]
[put, (, name, ,, definition, ), ;, definitionSiteMap, ., put, (, node, ,, new, DefinitionSite, (, node, ,, definition, ,]
[;, definitionSiteMap, ., put, (, node, ,, new, DefinitionSite, (, node, ,, definition, ,, traversal, ., getModule, (, ), ,]
[;, definitionSiteMap, ., put, (, node, ,, new, DefinitionSite, (, node, ,, definition, ,, traversal, ., getModule, (, ), ,]
[,, new, DefinitionSite, (, node, ,, definition, ,, traversal, ., getModule, (, ), ,, traversal, ., inGlobalScope, (, ), ,]
[,, inExterns, ), ), ;, }, }, }, }, private, boolean, jsdocContainsDeclarations, (, Node, node, ), {, JSDocInfo, info, =]
[,, inExterns, ), ), ;, }, }, }, }, private, boolean, jsdocContainsDeclarations, (, Node, node, ), {, JSDocInfo, info, =]
[}, }, private, boolean, jsdocContainsDeclarations, (, Node, node, ), {, JSDocInfo, info, =, node, ., getJSDocInfo, (, ), ;, return]
[}, private, boolean, jsdocContainsDeclarations, (, Node, node, ), {, JSDocInfo, info, =, node, ., getJSDocInfo, (, ), ;, return, (]
[}, private, boolean, jsdocContainsDeclarations, (, Node, node, ), {, JSDocInfo, info, =, node, ., getJSDocInfo, (, ), ;, return, (]
[}, private, boolean, jsdocContainsDeclarations, (, Node, node, ), {, JSDocInfo, info, =, node, ., getJSDocInfo, (, ), ;, return, (]
[boolean, jsdocContainsDeclarations, (, Node, node, ), {, JSDocInfo, info, =, node, ., getJSDocInfo, (, ), ;, return, (, info, !=]
[(, Node, node, ), {, JSDocInfo, info, =, node, ., getJSDocInfo, (, ), ;, return, (, info, !=, null, &&]
[(, Node, node, ), {, JSDocInfo, info, =, node, ., getJSDocInfo, (, ), ;, return, (, info, !=, null, &&]
[public, void, visit, (, NodeTraversal, traversal, ,, Node, node, ,, Node, parent, ), {, Collection, <, Definition, >, defs, =]
[visit, (, NodeTraversal, traversal, ,, Node, node, ,, Node, parent, ), {, Collection, <, Definition, >, defs, =, getDefinitionsReferencedAt, (]
[Node, node, ,, Node, parent, ), {, Collection, <, Definition, >, defs, =, getDefinitionsReferencedAt, (, node, ), ;, if, (]
[Node, node, ,, Node, parent, ), {, Collection, <, Definition, >, defs, =, getDefinitionsReferencedAt, (, node, ), ;, if, (]
[,, Node, parent, ), {, Collection, <, Definition, >, defs, =, getDefinitionsReferencedAt, (, node, ), ;, if, (, defs, ==]
[defs, =, getDefinitionsReferencedAt, (, node, ), ;, if, (, defs, ==, null, ), {, return, ;, }, Definition, first, =]
[defs, =, getDefinitionsReferencedAt, (, node, ), ;, if, (, defs, ==, null, ), {, return, ;, }, Definition, first, =]
[defs, =, getDefinitionsReferencedAt, (, node, ), ;, if, (, defs, ==, null, ), {, return, ;, }, Definition, first, =]
[{, return, ;, }, Definition, first, =, defs, ., iterator, (, ), ., next, (, ), ;, String, name, =]
[;, }, Definition, first, =, defs, ., iterator, (, ), ., next, (, ), ;, String, name, =, getSimplifiedName, (]
[;, }, Definition, first, =, defs, ., iterator, (, ), ., next, (, ), ;, String, name, =, getSimplifiedName, (]
[iterator, (, ), ., next, (, ), ;, String, name, =, getSimplifiedName, (, first, ., getLValue, (, ), ), ;]
[iterator, (, ), ., next, (, ), ;, String, name, =, getSimplifiedName, (, first, ., getLValue, (, ), ), ;]
[next, (, ), ;, String, name, =, getSimplifiedName, (, first, ., getLValue, (, ), ), ;, Preconditions, ., checkNotNull, (]
[;, String, name, =, getSimplifiedName, (, first, ., getLValue, (, ), ), ;, Preconditions, ., checkNotNull, (, name, ), ;]
[;, String, name, =, getSimplifiedName, (, first, ., getLValue, (, ), ), ;, Preconditions, ., checkNotNull, (, name, ), ;]
[getSimplifiedName, (, first, ., getLValue, (, ), ), ;, Preconditions, ., checkNotNull, (, name, ), ;, nameUseSiteMultimap, ., put, (]
[first, ., getLValue, (, ), ), ;, Preconditions, ., checkNotNull, (, name, ), ;, nameUseSiteMultimap, ., put, (, name, ,]
[(, ), ), ;, Preconditions, ., checkNotNull, (, name, ), ;, nameUseSiteMultimap, ., put, (, name, ,, new, UseSite, (]
[), ;, Preconditions, ., checkNotNull, (, name, ), ;, nameUseSiteMultimap, ., put, (, name, ,, new, UseSite, (, node, ,]
[), ;, Preconditions, ., checkNotNull, (, name, ), ;, nameUseSiteMultimap, ., put, (, name, ,, new, UseSite, (, node, ,]
[name, ), ;, nameUseSiteMultimap, ., put, (, name, ,, new, UseSite, (, node, ,, traversal, ., getScope, (, ), ,]
[name, ), ;, nameUseSiteMultimap, ., put, (, name, ,, new, UseSite, (, node, ,, traversal, ., getScope, (, ), ,]
[., getModule, (, ), ), ), ;, }, }, static, boolean, isCallOrNewSite, (, UseSite, use, ), {, Node, call, =]
[., getModule, (, ), ), ), ;, }, }, static, boolean, isCallOrNewSite, (, UseSite, use, ), {, Node, call, =]
[., getModule, (, ), ), ), ;, }, }, static, boolean, isCallOrNewSite, (, UseSite, use, ), {, Node, call, =]
[boolean, isCallOrNewSite, (, UseSite, use, ), {, Node, call, =, use, ., node, ., getParent, (, ), ;, if, (]
[boolean, isCallOrNewSite, (, UseSite, use, ), {, Node, call, =, use, ., node, ., getParent, (, ), ;, if, (]
[(, UseSite, use, ), {, Node, call, =, use, ., node, ., getParent, (, ), ;, if, (, call, ==]
[{, Node, call, =, use, ., node, ., getParent, (, ), ;, if, (, call, ==, null, ), {, return]
[use, ., node, ., getParent, (, ), ;, if, (, call, ==, null, ), {, return, false, ;, }, return]
[use, ., node, ., getParent, (, ), ;, if, (, call, ==, null, ), {, return, false, ;, }, return]
[use, ., node, ., getParent, (, ), ;, if, (, call, ==, null, ), {, return, false, ;, }, return]
[getParent, (, ), ;, if, (, call, ==, null, ), {, return, false, ;, }, return, NodeUtil, ., isCallOrNew, (]
[;, if, (, call, ==, null, ), {, return, false, ;, }, return, NodeUtil, ., isCallOrNew, (, call, ), &&]
[;, if, (, call, ==, null, ), {, return, false, ;, }, return, NodeUtil, ., isCallOrNew, (, call, ), &&]
[;, if, (, call, ==, null, ), {, return, false, ;, }, return, NodeUtil, ., isCallOrNew, (, call, ), &&]
[), {, return, false, ;, }, return, NodeUtil, ., isCallOrNew, (, call, ), &&, call, ., getFirstChild, (, ), ==]
[), {, return, false, ;, }, return, NodeUtil, ., isCallOrNew, (, call, ), &&, call, ., getFirstChild, (, ), ==]
[call, ., getFirstChild, (, ), ==, use, ., node, ;, }, boolean, canModifyDefinition, (, Definition, definition, ), {, if, (]
[getFirstChild, (, ), ==, use, ., node, ;, }, boolean, canModifyDefinition, (, Definition, definition, ), {, if, (, isExported, (]
[., node, ;, }, boolean, canModifyDefinition, (, Definition, definition, ), {, if, (, isExported, (, definition, ), ), {, return]
[), {, if, (, isExported, (, definition, ), ), {, return, false, ;, }, Collection, <, UseSite, >, useSites, =]
[if, (, isExported, (, definition, ), ), {, return, false, ;, }, Collection, <, UseSite, >, useSites, =, getUseSites, (]
[), ), {, return, false, ;, }, Collection, <, UseSite, >, useSites, =, getUseSites, (, definition, ), ;, if, (]
[), ), {, return, false, ;, }, Collection, <, UseSite, >, useSites, =, getUseSites, (, definition, ), ;, if, (]
[<, UseSite, >, useSites, =, getUseSites, (, definition, ), ;, if, (, useSites, ., isEmpty, (, ), ), {, return]
[), ;, if, (, useSites, ., isEmpty, (, ), ), {, return, false, ;, }, for, (, UseSite, site, :]
[isEmpty, (, ), ), {, return, false, ;, }, for, (, UseSite, site, :, useSites, ), {, Node, nameNode, =]
[isEmpty, (, ), ), {, return, false, ;, }, for, (, UseSite, site, :, useSites, ), {, Node, nameNode, =]
[(, UseSite, site, :, useSites, ), {, Node, nameNode, =, site, ., node, ;, Collection, <, Definition, >, singleSiteDefinitions, =]
[site, :, useSites, ), {, Node, nameNode, =, site, ., node, ;, Collection, <, Definition, >, singleSiteDefinitions, =, getDefinitionsReferencedAt, (]
[Node, nameNode, =, site, ., node, ;, Collection, <, Definition, >, singleSiteDefinitions, =, getDefinitionsReferencedAt, (, nameNode, ), ;, if, (]
[Node, nameNode, =, site, ., node, ;, Collection, <, Definition, >, singleSiteDefinitions, =, getDefinitionsReferencedAt, (, nameNode, ), ;, if, (]
[Node, nameNode, =, site, ., node, ;, Collection, <, Definition, >, singleSiteDefinitions, =, getDefinitionsReferencedAt, (, nameNode, ), ;, if, (]
[;, Collection, <, Definition, >, singleSiteDefinitions, =, getDefinitionsReferencedAt, (, nameNode, ), ;, if, (, singleSiteDefinitions, ., size, (, ), >]
[>, singleSiteDefinitions, =, getDefinitionsReferencedAt, (, nameNode, ), ;, if, (, singleSiteDefinitions, ., size, (, ), >, 1, ), {, return]
[getDefinitionsReferencedAt, (, nameNode, ), ;, if, (, singleSiteDefinitions, ., size, (, ), >, 1, ), {, return, false, ;, }]
[getDefinitionsReferencedAt, (, nameNode, ), ;, if, (, singleSiteDefinitions, ., size, (, ), >, 1, ), {, return, false, ;, }]
[;, if, (, singleSiteDefinitions, ., size, (, ), >, 1, ), {, return, false, ;, }, Preconditions, ., checkState, (]
[if, (, singleSiteDefinitions, ., size, (, ), >, 1, ), {, return, false, ;, }, Preconditions, ., checkState, (, !]
[if, (, singleSiteDefinitions, ., size, (, ), >, 1, ), {, return, false, ;, }, Preconditions, ., checkState, (, !]
[>, 1, ), {, return, false, ;, }, Preconditions, ., checkState, (, !, singleSiteDefinitions, ., isEmpty, (, ), ), ;]
[>, 1, ), {, return, false, ;, }, Preconditions, ., checkState, (, !, singleSiteDefinitions, ., isEmpty, (, ), ), ;]
[return, false, ;, }, Preconditions, ., checkState, (, !, singleSiteDefinitions, ., isEmpty, (, ), ), ;, Preconditions, ., checkState, (]
[return, false, ;, }, Preconditions, ., checkState, (, !, singleSiteDefinitions, ., isEmpty, (, ), ), ;, Preconditions, ., checkState, (]
[Preconditions, ., checkState, (, !, singleSiteDefinitions, ., isEmpty, (, ), ), ;, Preconditions, ., checkState, (, singleSiteDefinitions, ., contains, (]
[., isEmpty, (, ), ), ;, Preconditions, ., checkState, (, singleSiteDefinitions, ., contains, (, definition, ), ), ;, }, return]
[definition, ), ), ;, }, return, true, ;, }, private, boolean, isExported, (, Definition, definition, ), {, Node, lValue, =]
[definition, ), ), ;, }, return, true, ;, }, private, boolean, isExported, (, Definition, definition, ), {, Node, lValue, =]
[}, private, boolean, isExported, (, Definition, definition, ), {, Node, lValue, =, definition, ., getLValue, (, ), ;, if, (]
[}, private, boolean, isExported, (, Definition, definition, ), {, Node, lValue, =, definition, ., getLValue, (, ), ;, if, (]
[boolean, isExported, (, Definition, definition, ), {, Node, lValue, =, definition, ., getLValue, (, ), ;, if, (, lValue, ==]
[definition, ), {, Node, lValue, =, definition, ., getLValue, (, ), ;, if, (, lValue, ==, null, ), {, return]
[getLValue, (, ), ;, if, (, lValue, ==, null, ), {, return, true, ;, }, String, partialName, ;, if, (]
[getLValue, (, ), ;, if, (, lValue, ==, null, ), {, return, true, ;, }, String, partialName, ;, if, (]
[==, null, ), {, return, true, ;, }, String, partialName, ;, if, (, lValue, ., isGetProp, (, ), ), {]
[), {, return, true, ;, }, String, partialName, ;, if, (, lValue, ., isGetProp, (, ), ), {, partialName, =]
[), {, return, true, ;, }, String, partialName, ;, if, (, lValue, ., isGetProp, (, ), ), {, partialName, =]
[), {, return, true, ;, }, String, partialName, ;, if, (, lValue, ., isGetProp, (, ), ), {, partialName, =]
[(, ), ), {, partialName, =, lValue, ., getLastChild, (, ), ., getString, (, ), ;, }, else, if, (]
[(, ), ), {, partialName, =, lValue, ., getLastChild, (, ), ., getString, (, ), ;, }, else, if, (]
[., getLastChild, (, ), ., getString, (, ), ;, }, else, if, (, lValue, ., isName, (, ), ), {]
[(, ), ., getString, (, ), ;, }, else, if, (, lValue, ., isName, (, ), ), {, partialName, =]
[(, ), ., getString, (, ), ;, }, else, if, (, lValue, ., isName, (, ), ), {, partialName, =]
[(, lValue, ., isName, (, ), ), {, partialName, =, lValue, ., getString, (, ), ;, }, else, {, return]
[), {, partialName, =, lValue, ., getString, (, ), ;, }, else, {, return, true, ;, }, CodingConvention, codingConvention, =]
[), {, partialName, =, lValue, ., getString, (, ), ;, }, else, {, return, true, ;, }, CodingConvention, codingConvention, =]
[), ;, }, else, {, return, true, ;, }, CodingConvention, codingConvention, =, compiler, ., getCodingConvention, (, ), ;, if, (]
[), ;, }, else, {, return, true, ;, }, CodingConvention, codingConvention, =, compiler, ., getCodingConvention, (, ), ;, if, (]
[{, return, true, ;, }, CodingConvention, codingConvention, =, compiler, ., getCodingConvention, (, ), ;, if, (, codingConvention, ., isExported, (]
[CodingConvention, codingConvention, =, compiler, ., getCodingConvention, (, ), ;, if, (, codingConvention, ., isExported, (, partialName, ), ), {, return]
[., getCodingConvention, (, ), ;, if, (, codingConvention, ., isExported, (, partialName, ), ), {, return, true, ;, }, return]
[{, return, true, ;, }, return, false, ;, }, static, boolean, isSimpleFunctionDeclaration, (, Node, fn, ), {, Node, parent, =]
[{, return, true, ;, }, return, false, ;, }, static, boolean, isSimpleFunctionDeclaration, (, Node, fn, ), {, Node, parent, =]
[static, boolean, isSimpleFunctionDeclaration, (, Node, fn, ), {, Node, parent, =, fn, ., getParent, (, ), ;, Node, gramps, =]
[static, boolean, isSimpleFunctionDeclaration, (, Node, fn, ), {, Node, parent, =, fn, ., getParent, (, ), ;, Node, gramps, =]
[parent, =, fn, ., getParent, (, ), ;, Node, gramps, =, parent, ., getParent, (, ), ;, Node, nameNode, =]
[parent, =, fn, ., getParent, (, ), ;, Node, gramps, =, parent, ., getParent, (, ), ;, Node, nameNode, =]
[getParent, (, ), ;, Node, gramps, =, parent, ., getParent, (, ), ;, Node, nameNode, =, SimpleDefinitionFinder, ., getNameNodeFromFunctionNode, (]
[gramps, =, parent, ., getParent, (, ), ;, Node, nameNode, =, SimpleDefinitionFinder, ., getNameNodeFromFunctionNode, (, fn, ), ;, if, (]
[gramps, =, parent, ., getParent, (, ), ;, Node, nameNode, =, SimpleDefinitionFinder, ., getNameNodeFromFunctionNode, (, fn, ), ;, if, (]
[gramps, =, parent, ., getParent, (, ), ;, Node, nameNode, =, SimpleDefinitionFinder, ., getNameNodeFromFunctionNode, (, fn, ), ;, if, (]
[parent, ., getParent, (, ), ;, Node, nameNode, =, SimpleDefinitionFinder, ., getNameNodeFromFunctionNode, (, fn, ), ;, if, (, nameNode, !=]
[getParent, (, ), ;, Node, nameNode, =, SimpleDefinitionFinder, ., getNameNodeFromFunctionNode, (, fn, ), ;, if, (, nameNode, !=, null, &&]
[getParent, (, ), ;, Node, nameNode, =, SimpleDefinitionFinder, ., getNameNodeFromFunctionNode, (, fn, ), ;, if, (, nameNode, !=, null, &&]
[(, fn, ), ;, if, (, nameNode, !=, null, &&, nameNode, ., isName, (, ), ), {, String, name, =]
[(, fn, ), ;, if, (, nameNode, !=, null, &&, nameNode, ., isName, (, ), ), {, String, name, =]
[null, &&, nameNode, ., isName, (, ), ), {, String, name, =, nameNode, ., getString, (, ), ;, if, (]
[null, &&, nameNode, ., isName, (, ), ), {, String, name, =, nameNode, ., getString, (, ), ;, if, (]
[null, &&, nameNode, ., isName, (, ), ), {, String, name, =, nameNode, ., getString, (, ), ;, if, (]
[isName, (, ), ), {, String, name, =, nameNode, ., getString, (, ), ;, if, (, name, ., equals, (]
[isName, (, ), ), {, String, name, =, nameNode, ., getString, (, ), ;, if, (, name, ., equals, (]
[String, name, =, nameNode, ., getString, (, ), ;, if, (, name, ., equals, (, NodeUtil, ., JSC_PROPERTY_NAME_FN, ), ||]
[String, name, =, nameNode, ., getString, (, ), ;, if, (, name, ., equals, (, NodeUtil, ., JSC_PROPERTY_NAME_FN, ), ||]
[., getString, (, ), ;, if, (, name, ., equals, (, NodeUtil, ., JSC_PROPERTY_NAME_FN, ), ||, name, ., equals, (]
[., getString, (, ), ;, if, (, name, ., equals, (, NodeUtil, ., JSC_PROPERTY_NAME_FN, ), ||, name, ., equals, (]
[name, ., equals, (, NodeUtil, ., JSC_PROPERTY_NAME_FN, ), ||, name, ., equals, (, ObjectPropertyStringPreprocess, ., EXTERN_OBJECT_PROPERTY_STRING, ), ), {, return]
[JSC_PROPERTY_NAME_FN, ), ||, name, ., equals, (, ObjectPropertyStringPreprocess, ., EXTERN_OBJECT_PROPERTY_STRING, ), ), {, return, false, ;, }, }, if, (]
[JSC_PROPERTY_NAME_FN, ), ||, name, ., equals, (, ObjectPropertyStringPreprocess, ., EXTERN_OBJECT_PROPERTY_STRING, ), ), {, return, false, ;, }, }, if, (]
[., equals, (, ObjectPropertyStringPreprocess, ., EXTERN_OBJECT_PROPERTY_STRING, ), ), {, return, false, ;, }, }, if, (, NodeUtil, ., isFunctionDeclaration, (]
[EXTERN_OBJECT_PROPERTY_STRING, ), ), {, return, false, ;, }, }, if, (, NodeUtil, ., isFunctionDeclaration, (, fn, ), ), {, return]
[false, ;, }, }, if, (, NodeUtil, ., isFunctionDeclaration, (, fn, ), ), {, return, true, ;, }, if, (]
[false, ;, }, }, if, (, NodeUtil, ., isFunctionDeclaration, (, fn, ), ), {, return, true, ;, }, if, (]
[false, ;, }, }, if, (, NodeUtil, ., isFunctionDeclaration, (, fn, ), ), {, return, true, ;, }, if, (]
[false, ;, }, }, if, (, NodeUtil, ., isFunctionDeclaration, (, fn, ), ), {, return, true, ;, }, if, (]
[false, ;, }, }, if, (, NodeUtil, ., isFunctionDeclaration, (, fn, ), ), {, return, true, ;, }, if, (]
[return, true, ;, }, if, (, fn, ., getFirstChild, (, ), ., getString, (, ), ., isEmpty, (, ), &&]
[true, ;, }, if, (, fn, ., getFirstChild, (, ), ., getString, (, ), ., isEmpty, (, ), &&, (]
[true, ;, }, if, (, fn, ., getFirstChild, (, ), ., getString, (, ), ., isEmpty, (, ), &&, (]
[true, ;, }, if, (, fn, ., getFirstChild, (, ), ., getString, (, ), ., isEmpty, (, ), &&, (]
[(, fn, ., getFirstChild, (, ), ., getString, (, ), ., isEmpty, (, ), &&, (, NodeUtil, ., isExprAssign, (]
[getFirstChild, (, ), ., getString, (, ), ., isEmpty, (, ), &&, (, NodeUtil, ., isExprAssign, (, gramps, ), ||]
[getFirstChild, (, ), ., getString, (, ), ., isEmpty, (, ), &&, (, NodeUtil, ., isExprAssign, (, gramps, ), ||]
[(, ), &&, (, NodeUtil, ., isExprAssign, (, gramps, ), ||, parent, ., isName, (, ), ), ), {, return]
[NodeUtil, ., isExprAssign, (, gramps, ), ||, parent, ., isName, (, ), ), ), {, return, true, ;, }, return]
[), ), ), {, return, true, ;, }, return, false, ;, }, static, Node, getNameNodeFromFunctionNode, (, Node, function, ), {]
[), ), ), {, return, true, ;, }, return, false, ;, }, static, Node, getNameNodeFromFunctionNode, (, Node, function, ), {]
[return, true, ;, }, return, false, ;, }, static, Node, getNameNodeFromFunctionNode, (, Node, function, ), {, Preconditions, ., checkState, (]
[return, true, ;, }, return, false, ;, }, static, Node, getNameNodeFromFunctionNode, (, Node, function, ), {, Preconditions, ., checkState, (]
[Node, getNameNodeFromFunctionNode, (, Node, function, ), {, Preconditions, ., checkState, (, function, ., isFunction, (, ), ), ;, if, (]
[Node, getNameNodeFromFunctionNode, (, Node, function, ), {, Preconditions, ., checkState, (, function, ., isFunction, (, ), ), ;, if, (]
[function, ), {, Preconditions, ., checkState, (, function, ., isFunction, (, ), ), ;, if, (, NodeUtil, ., isFunctionDeclaration, (]
[checkState, (, function, ., isFunction, (, ), ), ;, if, (, NodeUtil, ., isFunctionDeclaration, (, function, ), ), {, return]
[checkState, (, function, ., isFunction, (, ), ), ;, if, (, NodeUtil, ., isFunctionDeclaration, (, function, ), ), {, return]
[., isFunctionDeclaration, (, function, ), ), {, return, function, ., getFirstChild, (, ), ;, }, else, {, Node, parent, =]
[., isFunctionDeclaration, (, function, ), ), {, return, function, ., getFirstChild, (, ), ;, }, else, {, Node, parent, =]
[function, ., getFirstChild, (, ), ;, }, else, {, Node, parent, =, function, ., getParent, (, ), ;, if, (]
[function, ., getFirstChild, (, ), ;, }, else, {, Node, parent, =, function, ., getParent, (, ), ;, if, (]
[), ;, }, else, {, Node, parent, =, function, ., getParent, (, ), ;, if, (, NodeUtil, ., isVarDeclaration, (]
[Node, parent, =, function, ., getParent, (, ), ;, if, (, NodeUtil, ., isVarDeclaration, (, parent, ), ), {, return]
[(, ), ;, if, (, NodeUtil, ., isVarDeclaration, (, parent, ), ), {, return, parent, ;, }, else, if, (]
[(, ), ;, if, (, NodeUtil, ., isVarDeclaration, (, parent, ), ), {, return, parent, ;, }, else, if, (]
[(, parent, ), ), {, return, parent, ;, }, else, if, (, parent, ., isAssign, (, ), ), {, return]
[(, parent, ), ), {, return, parent, ;, }, else, if, (, parent, ., isAssign, (, ), ), {, return]
[if, (, parent, ., isAssign, (, ), ), {, return, parent, ., getFirstChild, (, ), ;, }, else, if, (]
[if, (, parent, ., isAssign, (, ), ), {, return, parent, ., getFirstChild, (, ), ;, }, else, if, (]
[isAssign, (, ), ), {, return, parent, ., getFirstChild, (, ), ;, }, else, if, (, NodeUtil, ., isObjectLitKey, (]
[), ), {, return, parent, ., getFirstChild, (, ), ;, }, else, if, (, NodeUtil, ., isObjectLitKey, (, parent, ,]
[), ), {, return, parent, ., getFirstChild, (, ), ;, }, else, if, (, NodeUtil, ., isObjectLitKey, (, parent, ,]
[;, }, else, if, (, NodeUtil, ., isObjectLitKey, (, parent, ,, parent, ., getParent, (, ), ), ), {, return]
[NodeUtil, ., isObjectLitKey, (, parent, ,, parent, ., getParent, (, ), ), ), {, return, parent, ;, }, }, return]
[), {, return, parent, ;, }, }, return, null, ;, }, void, removeReferences, (, Node, node, ), {, if, (]
[), {, return, parent, ;, }, }, return, null, ;, }, void, removeReferences, (, Node, node, ), {, if, (]
[;, }, }, return, null, ;, }, void, removeReferences, (, Node, node, ), {, if, (, DefinitionsRemover, ., isDefinitionNode, (]
[void, removeReferences, (, Node, node, ), {, if, (, DefinitionsRemover, ., isDefinitionNode, (, node, ), ), {, DefinitionSite, defSite, =]
[void, removeReferences, (, Node, node, ), {, if, (, DefinitionsRemover, ., isDefinitionNode, (, node, ), ), {, DefinitionSite, defSite, =]
[node, ), {, if, (, DefinitionsRemover, ., isDefinitionNode, (, node, ), ), {, DefinitionSite, defSite, =, definitionSiteMap, ., get, (]
[DefinitionsRemover, ., isDefinitionNode, (, node, ), ), {, DefinitionSite, defSite, =, definitionSiteMap, ., get, (, node, ), ;, if, (]
[DefinitionsRemover, ., isDefinitionNode, (, node, ), ), {, DefinitionSite, defSite, =, definitionSiteMap, ., get, (, node, ), ;, if, (]
[isDefinitionNode, (, node, ), ), {, DefinitionSite, defSite, =, definitionSiteMap, ., get, (, node, ), ;, if, (, defSite, !=]
[DefinitionSite, defSite, =, definitionSiteMap, ., get, (, node, ), ;, if, (, defSite, !=, null, ), {, Definition, def, =]
[DefinitionSite, defSite, =, definitionSiteMap, ., get, (, node, ), ;, if, (, defSite, !=, null, ), {, Definition, def, =]
[node, ), ;, if, (, defSite, !=, null, ), {, Definition, def, =, defSite, ., definition, ;, String, name, =]
[;, if, (, defSite, !=, null, ), {, Definition, def, =, defSite, ., definition, ;, String, name, =, getSimplifiedName, (]
[;, if, (, defSite, !=, null, ), {, Definition, def, =, defSite, ., definition, ;, String, name, =, getSimplifiedName, (]
[def, =, defSite, ., definition, ;, String, name, =, getSimplifiedName, (, def, ., getLValue, (, ), ), ;, if, (]
[def, =, defSite, ., definition, ;, String, name, =, getSimplifiedName, (, def, ., getLValue, (, ), ), ;, if, (]
[defSite, ., definition, ;, String, name, =, getSimplifiedName, (, def, ., getLValue, (, ), ), ;, if, (, name, !=]
[;, String, name, =, getSimplifiedName, (, def, ., getLValue, (, ), ), ;, if, (, name, !=, null, ), {]
[;, String, name, =, getSimplifiedName, (, def, ., getLValue, (, ), ), ;, if, (, name, !=, null, ), {]
[;, String, name, =, getSimplifiedName, (, def, ., getLValue, (, ), ), ;, if, (, name, !=, null, ), {]
[def, ., getLValue, (, ), ), ;, if, (, name, !=, null, ), {, this, ., definitionSiteMap, ., remove, (]
[(, ), ), ;, if, (, name, !=, null, ), {, this, ., definitionSiteMap, ., remove, (, node, ), ;]
[(, ), ), ;, if, (, name, !=, null, ), {, this, ., definitionSiteMap, ., remove, (, node, ), ;]
[(, ), ), ;, if, (, name, !=, null, ), {, this, ., definitionSiteMap, ., remove, (, node, ), ;]
[name, !=, null, ), {, this, ., definitionSiteMap, ., remove, (, node, ), ;, this, ., nameDefinitionMultimap, ., remove, (]
[null, ), {, this, ., definitionSiteMap, ., remove, (, node, ), ;, this, ., nameDefinitionMultimap, ., remove, (, name, ,]
[;, this, ., nameDefinitionMultimap, ., remove, (, name, ,, node, ), ;, }, }, }, else, {, Node, useSite, =]
[., remove, (, name, ,, node, ), ;, }, }, }, else, {, Node, useSite, =, node, ;, if, (]
[., remove, (, name, ,, node, ), ;, }, }, }, else, {, Node, useSite, =, node, ;, if, (]
[}, else, {, Node, useSite, =, node, ;, if, (, useSite, ., isGetProp, (, ), ), {, String, propName, =]
[}, else, {, Node, useSite, =, node, ;, if, (, useSite, ., isGetProp, (, ), ), {, String, propName, =]
[}, else, {, Node, useSite, =, node, ;, if, (, useSite, ., isGetProp, (, ), ), {, String, propName, =]
[isGetProp, (, ), ), {, String, propName, =, useSite, ., getLastChild, (, ), ., getString, (, ), ;, if, (]
[isGetProp, (, ), ), {, String, propName, =, useSite, ., getLastChild, (, ), ., getString, (, ), ;, if, (]
[isGetProp, (, ), ), {, String, propName, =, useSite, ., getLastChild, (, ), ., getString, (, ), ;, if, (]
[{, String, propName, =, useSite, ., getLastChild, (, ), ., getString, (, ), ;, if, (, propName, ., equals, (]
[=, useSite, ., getLastChild, (, ), ., getString, (, ), ;, if, (, propName, ., equals, (, "apply", ), ||]
[=, useSite, ., getLastChild, (, ), ., getString, (, ), ;, if, (, propName, ., equals, (, "apply", ), ||]
[(, ), ., getString, (, ), ;, if, (, propName, ., equals, (, "apply", ), ||, propName, ., equals, (]
[(, ), ;, if, (, propName, ., equals, (, "apply", ), ||, propName, ., equals, (, "call", ), ), {]
[;, if, (, propName, ., equals, (, "apply", ), ||, propName, ., equals, (, "call", ), ), {, useSite, =]
[;, if, (, propName, ., equals, (, "apply", ), ||, propName, ., equals, (, "call", ), ), {, useSite, =]
[., equals, (, "call", ), ), {, useSite, =, useSite, ., getFirstChild, (, ), ;, }, }, String, name, =]
[(, "call", ), ), {, useSite, =, useSite, ., getFirstChild, (, ), ;, }, }, String, name, =, getSimplifiedName, (]
[useSite, =, useSite, ., getFirstChild, (, ), ;, }, }, String, name, =, getSimplifiedName, (, useSite, ), ;, if, (]
[useSite, =, useSite, ., getFirstChild, (, ), ;, }, }, String, name, =, getSimplifiedName, (, useSite, ), ;, if, (]
[useSite, ., getFirstChild, (, ), ;, }, }, String, name, =, getSimplifiedName, (, useSite, ), ;, if, (, name, !=]
[(, ), ;, }, }, String, name, =, getSimplifiedName, (, useSite, ), ;, if, (, name, !=, null, ), {]
[(, ), ;, }, }, String, name, =, getSimplifiedName, (, useSite, ), ;, if, (, name, !=, null, ), {]
[(, ), ;, }, }, String, name, =, getSimplifiedName, (, useSite, ), ;, if, (, name, !=, null, ), {]
[name, =, getSimplifiedName, (, useSite, ), ;, if, (, name, !=, null, ), {, this, ., nameUseSiteMultimap, ., remove, (]
[getSimplifiedName, (, useSite, ), ;, if, (, name, !=, null, ), {, this, ., nameUseSiteMultimap, ., remove, (, name, ,]
[), ;, if, (, name, !=, null, ), {, this, ., nameUseSiteMultimap, ., remove, (, name, ,, new, UseSite, (]
[if, (, name, !=, null, ), {, this, ., nameUseSiteMultimap, ., remove, (, name, ,, new, UseSite, (, useSite, ,]
[name, !=, null, ), {, this, ., nameUseSiteMultimap, ., remove, (, name, ,, new, UseSite, (, useSite, ,, null, ,]
[name, ,, new, UseSite, (, useSite, ,, null, ,, null, ), ), ;, }, }, for, (, Node, child, :]
[name, ,, new, UseSite, (, useSite, ,, null, ,, null, ), ), ;, }, }, for, (, Node, child, :]
[null, ,, null, ), ), ;, }, }, for, (, Node, child, :, node, ., children, (, ), ), {]
[null, ), ), ;, }, }, for, (, Node, child, :, node, ., children, (, ), ), {, removeReferences, (]
