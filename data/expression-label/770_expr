[20121017L]
["missing required property ", +, key]
["missing required property "]
[key]
['.']
["method"]
["signature"]
["inputFileMask"]
["outputFileMask"]
["from"]
["to"]
["by"]
[signature, ., size, (, )]
[signature]
[Class, ., forName, (, className, ), ., getMethods, (, )]
[Class, ., forName, (, className, )]
[Class]
[className]
[methods]
[method, ., getName, (, ), ., equals, (, methodName, )]
[method, ., getName, (, )]
[method]
[methodName]
[method, ., getParameterTypes, (, )]
[method]
[true]
[parameters, ., length, ==, n]
[parameters, ., length]
[parameters]
[n]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[sameSignature]
[signature, ., get, (, i, ), ., equals, (, parameters, [, i, ], )]
[signature, ., get, (, i, )]
[signature]
[i]
[parameters, [, i, ]]
[parameters]
[i]
[sameSignature]
[method, ., getModifiers, (, )]
[method]
[(, modifiers, &, Modifier, ., STATIC, ), !=, 0]
[(, modifiers, &, Modifier, ., STATIC, )]
[modifiers, &, Modifier, ., STATIC]
[modifiers]
[Modifier, ., STATIC]
[Modifier]
[0]
[method]
["method must be static"]
[new, IllegalArgumentException, (, msg, )]
[msg]
[new, IllegalArgumentException, (, "method not found", )]
["method not found"]
[type, ., equals, (, "boolean", )]
[type]
["boolean"]
[Boolean, ., TYPE]
[Boolean]
[type, ., equals, (, "byte", )]
[type]
["byte"]
[Byte, ., TYPE]
[Byte]
[type, ., equals, (, "char", )]
[type]
["char"]
[Character, ., TYPE]
[Character]
[type, ., equals, (, "double", )]
[type]
["double"]
[Double, ., TYPE]
[Double]
[type, ., equals, (, "float", )]
[type]
["float"]
[Float, ., TYPE]
[Float]
[type, ., equals, (, "int", )]
[type]
["int"]
[Integer, ., TYPE]
[Integer]
[type, ., equals, (, "long", )]
[type]
["long"]
[Long, ., TYPE]
[Long]
[type, ., equals, (, "short", )]
[type]
["short"]
[Short, ., TYPE]
[Short]
[new, StringBuilder, (, )]
[builder, ., append, (, type, ), ., append, (, " is not a primitive type", )]
[builder, ., append, (, type, )]
[builder]
[type]
[" is not a primitive type"]
[new, IllegalArgumentException, (, builder, ., toString, (, ), )]
[builder, ., toString, (, )]
[builder]
[properties, ., getProperty, (, key, )]
[properties]
[key]
[value, ==, null]
[value]
[null]
[new, MissingRequiredPropertyException, (, key, )]
[key]
[value]
[properties, ., getProperty, (, key, )]
[properties]
[key]
[value, ==, null]
[value]
[null]
[new, MissingRequiredPropertyException, (, key, )]
[key]
[Integer, ., parseInt, (, value, )]
[Integer]
[value]
[this, ., inputFileMask]
[this]
[inputFileMask]
[this, ., outputFileMask]
[this]
[outputFileMask]
[this, ., from]
[this]
[from]
[this, ., to]
[this]
[to]
[this, ., by]
[this]
[by]
[signature, ., split, (, ",", )]
[signature]
[","]
[new, ArrayList, <, Class, <, ?, >, >, (, )]
[types]
[parameterTypes, ., add, (, parsePrimitiveType, (, type, ., trim, (, ), ), )]
[parameterTypes]
[parsePrimitiveType, (, type, ., trim, (, ), )]
[type, ., trim, (, )]
[type]
[fullyQualifiedName, ., lastIndexOf, (, DOT, )]
[fullyQualifiedName]
[DOT]
[className]
[fullyQualifiedName, ., substring, (, 0, ,, index, )]
[fullyQualifiedName]
[0]
[index]
[methodName]
[fullyQualifiedName, ., substring, (, index, +, 1, )]
[fullyQualifiedName]
[index, +, 1]
[index]
[1]
[this, ., method]
[this]
[findStaticMethod, (, className, ,, methodName, ,, parameterTypes, )]
[className]
[methodName]
[parameterTypes]
[new, IllegalArgumentException, (, e, )]
[e]
[methodFullyQualifiedName]
[getPropertyAsString, (, properties, ,, METHOD_KEY, )]
[properties]
[METHOD_KEY]
[signature]
[getPropertyAsString, (, properties, ,, SIGNATURE_KEY, )]
[properties]
[SIGNATURE_KEY]
[inputFileMask]
[getPropertyAsString, (, properties, ,, INPUT_FILE_MASK, )]
[properties]
[INPUT_FILE_MASK]
[outputFileMask]
[getPropertyAsString, (, properties, ,, OUTPUT_FILE_MASK, )]
[properties]
[OUTPUT_FILE_MASK]
[getPropertyAsInteger, (, properties, ,, FROM_KEY, )]
[properties]
[FROM_KEY]
[getPropertyAsInteger, (, properties, ,, TO_KEY, )]
[properties]
[TO_KEY]
[getPropertyAsInteger, (, properties, ,, BY_KEY, )]
[properties]
[BY_KEY]
[new, ApplicationProperties, (, methodFullyQualifiedName, ,, signature, ,, inputFileMask, ,, outputFileMask, ,, from, ,, to, ,, by, )]
[methodFullyQualifiedName]
[signature]
[inputFileMask]
[outputFileMask]
[from]
[to]
[by]
[!, type, ., isPrimitive, (, )]
[type, ., isPrimitive, (, )]
[type]
[new, IllegalArgumentException, (, "type must be primitive", )]
["type must be primitive"]
[type, ., equals, (, Boolean, ., TYPE, )]
[type]
[Boolean, ., TYPE]
[Boolean]
[in, ., readBoolean, (, )]
[in]
[out, ., writeBoolean, (, x, )]
[out]
[x]
[Boolean, ., valueOf, (, x, )]
[Boolean]
[x]
[type, ., equals, (, Byte, ., TYPE, )]
[type]
[Byte, ., TYPE]
[Byte]
[in, ., readByte, (, )]
[in]
[out, ., writeByte, (, x, )]
[out]
[x]
[Byte, ., valueOf, (, x, )]
[Byte]
[x]
[type, ., equals, (, Character, ., TYPE, )]
[type]
[Character, ., TYPE]
[Character]
[in, ., readChar, (, )]
[in]
[out, ., writeChar, (, x, )]
[out]
[x]
[Character, ., valueOf, (, x, )]
[Character]
[x]
[type, ., equals, (, Double, ., TYPE, )]
[type]
[Double, ., TYPE]
[Double]
[in, ., readDouble, (, )]
[in]
[out, ., writeDouble, (, x, )]
[out]
[x]
[Double, ., valueOf, (, x, )]
[Double]
[x]
[type, ., equals, (, Float, ., TYPE, )]
[type]
[Float, ., TYPE]
[Float]
[in, ., readFloat, (, )]
[in]
[out, ., writeFloat, (, x, )]
[out]
[x]
[Float, ., valueOf, (, x, )]
[Float]
[x]
[type, ., equals, (, Integer, ., TYPE, )]
[type]
[Integer, ., TYPE]
[Integer]
[in, ., readInt, (, )]
[in]
[out, ., writeInt, (, x, )]
[out]
[x]
[Integer, ., valueOf, (, x, )]
[Integer]
[x]
[type, ., equals, (, Long, ., TYPE, )]
[type]
[Long, ., TYPE]
[Long]
[in, ., readLong, (, )]
[in]
[out, ., writeLong, (, x, )]
[out]
[x]
[Long, ., valueOf, (, x, )]
[Long]
[x]
[type, ., equals, (, Short, ., TYPE, )]
[type]
[Short, ., TYPE]
[Short]
[in, ., readShort, (, )]
[in]
[out, ., writeShort, (, x, )]
[out]
[x]
[Short, ., valueOf, (, x, )]
[Short]
[x]
[new, IllegalStateException, (, )]
[method, ., getReturnType, (, ), !=, Double, ., TYPE]
[method, ., getReturnType, (, )]
[method]
[Double, ., TYPE]
[Double]
[new, IllegalArgumentException, (, "method must return a double", )]
["method must return a double"]
[method, ., getParameterTypes, (, )]
[method]
[0]
[i, <, types, ., length]
[i]
[types, ., length]
[types]
[i, ++]
[i]
[!, types, [, i, ], ., isPrimitive, (, )]
[types, [, i, ], ., isPrimitive, (, )]
[types, [, i, ]]
[types]
[i]
[new, StringBuilder, (, )]
[builder, ., append, (, "argument #", ), ., append, (, i, +, 1, ), ., append, (, " of method ", ), ., append, (, method, ., getName, (, ), ), ., append, (, "must be of primitive of type", )]
[builder, ., append, (, "argument #", ), ., append, (, i, +, 1, ), ., append, (, " of method ", ), ., append, (, method, ., getName, (, ), )]
[builder, ., append, (, "argument #", ), ., append, (, i, +, 1, ), ., append, (, " of method ", )]
[builder, ., append, (, "argument #", ), ., append, (, i, +, 1, )]
[builder, ., append, (, "argument #", )]
[builder]
["argument #"]
[i, +, 1]
[i]
[1]
[" of method "]
[method, ., getName, (, )]
[method]
["must be of primitive of type"]
[new, IllegalArgumentException, (, builder, ., toString, (, ), )]
[builder, ., toString, (, )]
[builder]
[new, SummaryStatistics, (, )]
[new, Object, [, types, ., length, ]]
[types, ., length]
[types]
[true]
[0]
[i, <, parameters, ., length]
[i]
[parameters, ., length]
[parameters]
[i, ++]
[i]
[parameters, [, i, ]]
[parameters]
[i]
[readAndWritePrimitiveValue, (, in, ,, out, ,, types, [, i, ], )]
[in]
[out]
[types, [, i, ]]
[types]
[i]
[in, ., readDouble, (, )]
[in]
[FastMath, ., abs, (, expected, ), >, 1E-16]
[FastMath, ., abs, (, expected, )]
[FastMath]
[expected]
[1E-16]
[method, ., invoke, (, null, ,, parameters, )]
[method]
[null]
[parameters]
[(, (, Double, ), value, ), ., doubleValue, (, )]
[(, (, Double, ), value, )]
[(, Double, ), value]
[value]
[FastMath, ., abs, (, actual, -, expected, )]
[FastMath]
[actual, -, expected]
[actual]
[expected]
[err, /, FastMath, ., ulp, (, expected, )]
[err]
[FastMath, ., ulp, (, expected, )]
[FastMath]
[expected]
[out, ., writeDouble, (, expected, )]
[out]
[expected]
[out, ., writeDouble, (, actual, )]
[out]
[actual]
[out, ., writeDouble, (, ulps, )]
[out]
[ulps]
[stat, ., addValue, (, ulps, )]
[stat]
[ulps]
[stat]
[properties, ., from]
[properties]
[i, <, properties, ., to]
[i]
[properties, ., to]
[properties]
[i]
[properties, ., by]
[properties]
[inputFileName]
[String, ., format, (, properties, ., inputFileMask, ,, i, )]
[String]
[properties, ., inputFileMask]
[properties]
[i]
[outputFileName]
[String, ., format, (, properties, ., outputFileMask, ,, i, )]
[String]
[properties, ., outputFileMask]
[properties]
[i]
[in]
[new, DataInputStream, (, new, FileInputStream, (, inputFileName, ), )]
[new, FileInputStream, (, inputFileName, )]
[inputFileName]
[out]
[new, DataOutputStream, (, new, FileOutputStream, (, outputFileName, ), )]
[new, FileOutputStream, (, outputFileName, )]
[outputFileName]
[stats]
[assessAccuracy, (, properties, ., method, ,, in, ,, out, )]
[properties, ., method]
[properties]
[in]
[out]
[System, ., out, ., println, (, "input file name = ", +, inputFileName, )]
[System, ., out]
[System]
["input file name = ", +, inputFileName]
["input file name = "]
[inputFileName]
[System, ., out, ., println, (, "output file name = ", +, outputFileName, )]
[System, ., out]
[System]
["output file name = ", +, outputFileName]
["output file name = "]
[outputFileName]
[System, ., out, ., println, (, stats, )]
[System, ., out]
[System]
[stats]
[args, ., length, ==, 0]
[args, ., length]
[args]
[0]
["missing required properties file"]
[new, IllegalArgumentException, (, msg, )]
[msg]
[new, FileInputStream, (, args, [, 0, ], )]
[args, [, 0, ]]
[args]
[0]
[new, Properties, (, )]
[properties, ., load, (, in, )]
[properties]
[in]
[in, ., close, (, )]
[in]
[p]
[ApplicationProperties, ., create, (, properties, )]
[ApplicationProperties]
[properties]
[run, (, p, )]
[p]
