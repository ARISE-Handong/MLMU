[-, 353308149220382047L]
[353308149220382047L]
[constraint, ., getWidthConstraintType, (, )]
[constraint]
[constraint, ., getHeightConstraintType, (, )]
[constraint]
[w, ==, LengthConstraintType, ., NONE]
[w]
[LengthConstraintType, ., NONE]
[LengthConstraintType]
[h, ==, LengthConstraintType, ., NONE]
[h]
[LengthConstraintType, ., NONE]
[LengthConstraintType]
[arrangeNN, (, container, ,, g2, )]
[container]
[g2]
[h, ==, LengthConstraintType, ., FIXED]
[h]
[LengthConstraintType, ., FIXED]
[LengthConstraintType]
[new, RuntimeException, (, "Not implemented.", )]
["Not implemented."]
[h, ==, LengthConstraintType, ., RANGE]
[h]
[LengthConstraintType, ., RANGE]
[LengthConstraintType]
[new, RuntimeException, (, "Not implemented.", )]
["Not implemented."]
[w, ==, LengthConstraintType, ., FIXED]
[w]
[LengthConstraintType, ., FIXED]
[LengthConstraintType]
[h, ==, LengthConstraintType, ., NONE]
[h]
[LengthConstraintType, ., NONE]
[LengthConstraintType]
[arrangeFN, (, container, ,, g2, ,, constraint, )]
[container]
[g2]
[constraint]
[h, ==, LengthConstraintType, ., FIXED]
[h]
[LengthConstraintType, ., FIXED]
[LengthConstraintType]
[new, RuntimeException, (, "Not implemented.", )]
["Not implemented."]
[h, ==, LengthConstraintType, ., RANGE]
[h]
[LengthConstraintType, ., RANGE]
[LengthConstraintType]
[new, RuntimeException, (, "Not implemented.", )]
["Not implemented."]
[w, ==, LengthConstraintType, ., RANGE]
[w]
[LengthConstraintType, ., RANGE]
[LengthConstraintType]
[h, ==, LengthConstraintType, ., NONE]
[h]
[LengthConstraintType, ., NONE]
[LengthConstraintType]
[arrangeRN, (, container, ,, g2, ,, constraint, )]
[container]
[g2]
[constraint]
[h, ==, LengthConstraintType, ., FIXED]
[h]
[LengthConstraintType, ., FIXED]
[LengthConstraintType]
[arrangeRF, (, container, ,, g2, ,, constraint, )]
[container]
[g2]
[constraint]
[h, ==, LengthConstraintType, ., RANGE]
[h]
[LengthConstraintType, ., RANGE]
[LengthConstraintType]
[arrangeRR, (, container, ,, g2, ,, constraint, )]
[container]
[g2]
[constraint]
[new, IllegalArgumentException, (, "Unknown LengthConstraintType.", )]
["Unknown LengthConstraintType."]
[container, ., getBlocks, (, )]
[container]
[(, Block, ), blocks, ., get, (, 0, )]
[blocks, ., get, (, 0, )]
[blocks]
[0]
[b, ., arrange, (, g2, ,, RectangleConstraint, ., NONE, )]
[b]
[g2]
[RectangleConstraint, ., NONE]
[RectangleConstraint]
[constraint, ., getWidth, (, )]
[constraint]
[new, Rectangle2D, ., Double, (, (, width, -, s, ., width, ), /, 2.0, ,, 0.0, ,, s, ., width, ,, s, ., height, )]
[(, width, -, s, ., width, ), /, 2.0]
[(, width, -, s, ., width, )]
[width, -, s, ., width]
[width]
[s, ., width]
[s]
[2.0]
[0.0]
[s, ., width]
[s]
[s, ., height]
[s]
[b, ., setBounds, (, bounds, )]
[b]
[bounds]
[new, Size2D, (, (, width, -, s, ., width, ), /, 2.0, ,, s, ., height, )]
[(, width, -, s, ., width, ), /, 2.0]
[(, width, -, s, ., width, )]
[width, -, s, ., width]
[width]
[s, ., width]
[s]
[2.0]
[s, ., height]
[s]
[arrangeFN, (, container, ,, g2, ,, constraint, )]
[container]
[g2]
[constraint]
[constraint, ., getHeightRange, (, ), ., contains, (, s, ., height, )]
[constraint, ., getHeightRange, (, )]
[constraint]
[s, ., height]
[s]
[s]
[constraint, ., toFixedHeight, (, constraint, ., getHeightRange, (, ), ., constrain, (, s, ., getHeight, (, ), ), )]
[constraint]
[constraint, ., getHeightRange, (, ), ., constrain, (, s, ., getHeight, (, ), )]
[constraint, ., getHeightRange, (, )]
[constraint]
[s, ., getHeight, (, )]
[s]
[arrangeFF, (, container, ,, g2, ,, c, )]
[container]
[g2]
[c]
[arrangeFN, (, container, ,, g2, ,, constraint, )]
[container]
[g2]
[constraint]
[arrangeNN, (, container, ,, g2, )]
[container]
[g2]
[constraint, ., getWidthRange, (, ), ., contains, (, s1, ., width, )]
[constraint, ., getWidthRange, (, )]
[constraint]
[s1, ., width]
[s1]
[s1]
[constraint, ., toFixedWidth, (, constraint, ., getWidthRange, (, ), ., getUpperBound, (, ), )]
[constraint]
[constraint, ., getWidthRange, (, ), ., getUpperBound, (, )]
[constraint, ., getWidthRange, (, )]
[constraint]
[arrangeFR, (, container, ,, g2, ,, c, )]
[container]
[g2]
[c]
[arrangeNF, (, container, ,, g2, ,, constraint, )]
[container]
[g2]
[constraint]
[constraint, ., getWidthRange, (, ), ., contains, (, s, ., width, )]
[constraint, ., getWidthRange, (, )]
[constraint]
[s, ., width]
[s]
[s]
[constraint, ., toFixedWidth, (, constraint, ., getWidthRange, (, ), ., constrain, (, s, ., getWidth, (, ), ), )]
[constraint]
[constraint, ., getWidthRange, (, ), ., constrain, (, s, ., getWidth, (, ), )]
[constraint, ., getWidthRange, (, )]
[constraint]
[s, ., getWidth, (, )]
[s]
[arrangeFF, (, container, ,, g2, ,, c, )]
[container]
[g2]
[c]
[arrangeNN, (, container, ,, g2, )]
[container]
[g2]
[constraint, ., getWidthRange, (, ), ., contains, (, s1, ., width, )]
[constraint, ., getWidthRange, (, )]
[constraint]
[s1, ., width]
[s1]
[s1]
[constraint, ., toFixedWidth, (, constraint, ., getWidthRange, (, ), ., getUpperBound, (, ), )]
[constraint]
[constraint, ., getWidthRange, (, ), ., getUpperBound, (, )]
[constraint, ., getWidthRange, (, )]
[constraint]
[arrangeFN, (, container, ,, g2, ,, c, )]
[container]
[g2]
[c]
[container, ., getBlocks, (, )]
[container]
[(, Block, ), blocks, ., get, (, 0, )]
[blocks, ., get, (, 0, )]
[blocks]
[0]
[b, ., arrange, (, g2, ,, RectangleConstraint, ., NONE, )]
[b]
[g2]
[RectangleConstraint, ., NONE]
[RectangleConstraint]
[b, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, 0.0, ,, s, ., width, ,, s, ., height, ), )]
[b]
[new, Rectangle2D, ., Double, (, 0.0, ,, 0.0, ,, s, ., width, ,, s, ., height, )]
[0.0]
[0.0]
[s, ., width]
[s]
[s, ., height]
[s]
[new, Size2D, (, s, ., width, ,, s, ., height, )]
[s, ., width]
[s]
[s, ., height]
[s]
[arrangeNN, (, container, ,, g2, )]
[container]
[g2]
[obj, ==, this]
[obj]
[this]
[true]
[!, (, obj, instanceof, CenterArrangement, )]
[(, obj, instanceof, CenterArrangement, )]
[obj, instanceof, CenterArrangement]
[obj]
[false]
[true]
