[new, ConcreteNoneType, (, )]
[new, ConcreteAll, (, )]
[Lists, ., <, ConcreteFunctionType, >, newArrayList, (, )]
[Lists]
[Lists, ., <, ConcreteInstanceType, >, newArrayList, (, )]
[Lists]
[Lists, ., <, StaticSlot, <, ConcreteType, >, >, newArrayList, (, )]
[Lists]
[types, ==, null, ||, types, ., size, (, ), ==, 0]
[types, ==, null]
[types]
[null]
[types, ., size, (, ), ==, 0]
[types, ., size, (, )]
[types]
[0]
[NONE]
[types, ., size, (, ), ==, 1]
[types, ., size, (, )]
[types]
[1]
[types, ., iterator, (, ), ., next, (, )]
[types, ., iterator, (, )]
[types]
[new, ConcreteUnionType, (, Sets, ., newHashSet, (, types, ), )]
[Sets, ., newHashSet, (, types, )]
[Sets]
[types]
[false]
[false]
[false]
[false]
[false]
[!, isNone, (, ), &&, !, isUnion, (, ), &&, !, isAll, (, )]
[!, isNone, (, ), &&, !, isUnion, (, )]
[!, isNone, (, )]
[isNone, (, )]
[!, isUnion, (, )]
[isUnion, (, )]
[!, isAll, (, )]
[isAll, (, )]
[null]
[null]
[null]
[null]
[Preconditions, ., checkState, (, this, ., isSingleton, (, ), )]
[Preconditions]
[this, ., isSingleton, (, )]
[this]
[!, other, ., isSingleton, (, )]
[other, ., isSingleton, (, )]
[other]
[other, ., unionWith, (, this, )]
[other]
[this]
[equals, (, other, )]
[other]
[this]
[new, ConcreteUnionType, (, this, ,, other, )]
[this]
[other]
[!, other, ., isSingleton, (, )]
[other, ., isSingleton, (, )]
[other]
[other, ., intersectWith, (, this, )]
[other]
[this]
[equals, (, other, )]
[other]
[this]
[NONE]
[null]
[isUnion, (, )]
[Lists, ., newArrayList, (, )]
[Lists]
[toUnion, (, ), ., getAlternatives, (, )]
[toUnion, (, )]
[(, type, =, filter, ., filter, (, alt, ), ), !=, null]
[(, type, =, filter, ., filter, (, alt, ), )]
[type]
[filter, ., filter, (, alt, )]
[filter]
[alt]
[null]
[list, ., add, (, type, )]
[list]
[type]
[list]
[(, type, =, filter, ., filter, (, this, ), ), !=, null]
[(, type, =, filter, ., filter, (, this, ), )]
[type]
[filter, ., filter, (, this, )]
[filter]
[this]
[null]
[Lists, ., newArrayList, (, )]
[Lists]
[list, ., add, (, type, )]
[list]
[type]
[list]
[filter, ., emptyList]
[filter]
[this, ., emptyList]
[this]
[emptyList]
[getMatchingTypes, (, new, TypeFilter, <, ConcreteFunctionType, >, (, NO_FUNCTIONS, ), {, @, Override, public, ConcreteFunctionType, filter, (, ConcreteType, type, ), {, return, type, ., isFunction, (, ), ?, type, ., toFunction, (, ), :, null, ;, }, }, )]
[new, TypeFilter, <, ConcreteFunctionType, >, (, NO_FUNCTIONS, ), {, @, Override, public, ConcreteFunctionType, filter, (, ConcreteType, type, ), {, return, type, ., isFunction, (, ), ?, type, ., toFunction, (, ), :, null, ;, }, }]
[NO_FUNCTIONS]
[type, ., isFunction, (, ), ?, type, ., toFunction, (, ), :, null]
[type, ., isFunction, (, )]
[type]
[type, ., toFunction, (, )]
[type]
[null]
[getMatchingTypes, (, new, TypeFilter, <, ConcreteInstanceType, >, (, NO_INSTANCES, ), {, @, Override, public, ConcreteInstanceType, filter, (, ConcreteType, type, ), {, return, type, ., isInstance, (, ), ?, type, ., toInstance, (, ), :, null, ;, }, }, )]
[new, TypeFilter, <, ConcreteInstanceType, >, (, NO_INSTANCES, ), {, @, Override, public, ConcreteInstanceType, filter, (, ConcreteType, type, ), {, return, type, ., isInstance, (, ), ?, type, ., toInstance, (, ), :, null, ;, }, }]
[NO_INSTANCES]
[type, ., isInstance, (, ), ?, type, ., toInstance, (, ), :, null]
[type, ., isInstance, (, )]
[type]
[type, ., toInstance, (, )]
[type]
[null]
[getMatchingTypes, (, new, TypeFilter, <, ConcreteInstanceType, >, (, NO_INSTANCES, ), {, @, Override, public, ConcreteInstanceType, filter, (, ConcreteType, type, ), {, if, (, type, ., isFunction, (, ), ), {, return, type, ., toFunction, (, ), ., getInstanceType, (, ), ;, }, return, null, ;, }, }, )]
[new, TypeFilter, <, ConcreteInstanceType, >, (, NO_INSTANCES, ), {, @, Override, public, ConcreteInstanceType, filter, (, ConcreteType, type, ), {, if, (, type, ., isFunction, (, ), ), {, return, type, ., toFunction, (, ), ., getInstanceType, (, ), ;, }, return, null, ;, }, }]
[NO_INSTANCES]
[type, ., isFunction, (, )]
[type]
[type, ., toFunction, (, ), ., getInstanceType, (, )]
[type, ., toFunction, (, )]
[type]
[null]
[getMatchingTypes, (, new, TypeFilter, <, ConcreteInstanceType, >, (, NO_INSTANCES, ), {, @, Override, public, ConcreteInstanceType, filter, (, ConcreteType, type, ), {, if, (, type, ., isInstance, (, ), &&, type, ., toInstance, (, ), ., isFunctionPrototype, (, ), ), {, return, type, ., toInstance, (, ), ;, }, return, null, ;, }, }, )]
[new, TypeFilter, <, ConcreteInstanceType, >, (, NO_INSTANCES, ), {, @, Override, public, ConcreteInstanceType, filter, (, ConcreteType, type, ), {, if, (, type, ., isInstance, (, ), &&, type, ., toInstance, (, ), ., isFunctionPrototype, (, ), ), {, return, type, ., toInstance, (, ), ;, }, return, null, ;, }, }]
[NO_INSTANCES]
[type, ., isInstance, (, ), &&, type, ., toInstance, (, ), ., isFunctionPrototype, (, )]
[type, ., isInstance, (, )]
[type]
[type, ., toInstance, (, ), ., isFunctionPrototype, (, )]
[type, ., toInstance, (, )]
[type]
[type, ., toInstance, (, )]
[type]
[null]
[getMatchingTypes, (, new, TypeFilter, <, ConcreteFunctionType, >, (, NO_FUNCTIONS, ), {, @, Override, public, ConcreteFunctionType, filter, (, ConcreteType, type, ), {, return, type, ., isFunction, (, ), &&, type, ., toFunction, (, ), ., getSuperclassType, (, ), !=, null, ?, type, ., toFunction, (, ), ., getSuperclassType, (, ), :, null, ;, }, }, )]
[new, TypeFilter, <, ConcreteFunctionType, >, (, NO_FUNCTIONS, ), {, @, Override, public, ConcreteFunctionType, filter, (, ConcreteType, type, ), {, return, type, ., isFunction, (, ), &&, type, ., toFunction, (, ), ., getSuperclassType, (, ), !=, null, ?, type, ., toFunction, (, ), ., getSuperclassType, (, ), :, null, ;, }, }]
[NO_FUNCTIONS]
[type, ., isFunction, (, ), &&, type, ., toFunction, (, ), ., getSuperclassType, (, ), !=, null, ?, type, ., toFunction, (, ), ., getSuperclassType, (, ), :, null]
[type, ., isFunction, (, ), &&, type, ., toFunction, (, ), ., getSuperclassType, (, ), !=, null]
[type, ., isFunction, (, )]
[type]
[type, ., toFunction, (, ), ., getSuperclassType, (, ), !=, null]
[type, ., toFunction, (, ), ., getSuperclassType, (, )]
[type, ., toFunction, (, )]
[type]
[null]
[type, ., toFunction, (, ), ., getSuperclassType, (, )]
[type, ., toFunction, (, )]
[type]
[null]
[getMatchingTypes, (, new, TypeFilter, <, StaticSlot, <, ConcreteType, >, >, (, NO_SLOTS, ), {, @, Override, public, StaticSlot, <, ConcreteType, >, filter, (, ConcreteType, type, ), {, return, type, ., isFunction, (, ), &&, toFunction, (, ), ., getParameterSlot, (, index, ), !=, null, ?, toFunction, (, ), ., getParameterSlot, (, index, ), :, null, ;, }, }, )]
[new, TypeFilter, <, StaticSlot, <, ConcreteType, >, >, (, NO_SLOTS, ), {, @, Override, public, StaticSlot, <, ConcreteType, >, filter, (, ConcreteType, type, ), {, return, type, ., isFunction, (, ), &&, toFunction, (, ), ., getParameterSlot, (, index, ), !=, null, ?, toFunction, (, ), ., getParameterSlot, (, index, ), :, null, ;, }, }]
[NO_SLOTS]
[type, ., isFunction, (, ), &&, toFunction, (, ), ., getParameterSlot, (, index, ), !=, null, ?, toFunction, (, ), ., getParameterSlot, (, index, ), :, null]
[type, ., isFunction, (, ), &&, toFunction, (, ), ., getParameterSlot, (, index, ), !=, null]
[type, ., isFunction, (, )]
[type]
[toFunction, (, ), ., getParameterSlot, (, index, ), !=, null]
[toFunction, (, ), ., getParameterSlot, (, index, )]
[toFunction, (, )]
[index]
[null]
[toFunction, (, ), ., getParameterSlot, (, index, )]
[toFunction, (, )]
[index]
[null]
[getMatchingTypes, (, new, TypeFilter, <, StaticSlot, <, ConcreteType, >, >, (, NO_SLOTS, ), {, @, Override, public, StaticSlot, <, ConcreteType, >, filter, (, ConcreteType, type, ), {, StaticSlot, <, ConcreteType, >, slot, =, null, ;, if, (, type, ., isInstance, (, ), ), {, slot, =, type, ., toInstance, (, ), ., getPropertySlot, (, name, ), ;, }, return, slot, ;, }, }, )]
[new, TypeFilter, <, StaticSlot, <, ConcreteType, >, >, (, NO_SLOTS, ), {, @, Override, public, StaticSlot, <, ConcreteType, >, filter, (, ConcreteType, type, ), {, StaticSlot, <, ConcreteType, >, slot, =, null, ;, if, (, type, ., isInstance, (, ), ), {, slot, =, type, ., toInstance, (, ), ., getPropertySlot, (, name, ), ;, }, return, slot, ;, }, }]
[NO_SLOTS]
[null]
[type, ., isInstance, (, )]
[type]
[slot]
[type, ., toInstance, (, ), ., getPropertySlot, (, name, )]
[type, ., toInstance, (, )]
[type]
[name]
[slot]
[NONE]
[getPropertySlots, (, name, )]
[name]
[ret]
[ret, ., unionWith, (, slot, ., getType, (, ), )]
[ret]
[slot, ., getType, (, )]
[slot]
[ret]
[true]
[other]
[NONE]
["()"]
[":call"]
[":this"]
[":return"]
[this, ., factory]
[this]
[factory]
[this, ., declaration]
[this]
[declaration]
[this, ., parentScope]
[this]
[parentScope]
[Preconditions, ., checkArgument, (, declaration, ., isFunction, (, ), )]
[Preconditions]
[declaration, ., isFunction, (, )]
[declaration]
[Preconditions, ., checkArgument, (, declaration, ., getJSType, (, ), !=, null, )]
[Preconditions]
[declaration, ., getJSType, (, ), !=, null]
[declaration, ., getJSType, (, )]
[declaration]
[null]
[Preconditions, ., checkArgument, (, declaration, ., getJSType, (, ), ., isFunctionType, (, ), )]
[Preconditions]
[declaration, ., getJSType, (, ), ., isFunctionType, (, )]
[declaration, ., getJSType, (, )]
[declaration]
[true]
[this]
[getScope, (, ), ., getOwnSlot, (, CALL_SLOT_NAME, )]
[getScope, (, )]
[CALL_SLOT_NAME]
[getScope, (, ), ., getOwnSlot, (, THIS_SLOT_NAME, )]
[getScope, (, )]
[THIS_SLOT_NAME]
[getScope, (, ), ., getOwnSlot, (, RETURN_SLOT_NAME, )]
[getScope, (, )]
[RETURN_SLOT_NAME]
[getScope, (, ), ., getOwnSlot, (, getParameterName, (, index, ), )]
[getScope, (, )]
[getParameterName, (, index, )]
[index]
[0]
[getFirstParameter, (, )]
[n, !=, null]
[n]
[null]
[n]
[n, ., getNext, (, )]
[n]
[count, ++, ==, index]
[count, ++]
[count]
[index]
[n, ., getString, (, )]
[n]
[null]
[declaration, ., getFirstChild, (, ), ., getNext, (, ), ., getFirstChild, (, )]
[declaration, ., getFirstChild, (, ), ., getNext, (, )]
[declaration, ., getFirstChild, (, )]
[declaration]
[JSType, ., toMaybeFunctionType, (, declaration, ., getJSType, (, ), )]
[JSType]
[declaration, ., getJSType, (, )]
[declaration]
[instanceType, ==, null]
[instanceType]
[null]
[getJSType, (, ), ., isConstructor, (, )]
[getJSType, (, )]
[instanceType]
[factory, ., createConcreteInstance, (, getJSType, (, ), ., getInstanceType, (, ), )]
[factory]
[getJSType, (, ), ., getInstanceType, (, )]
[getJSType, (, )]
[instanceType]
[prototypeType, ==, null]
[prototypeType]
[null]
[prototypeType]
[factory, ., createConcreteInstance, (, getJSType, (, ), ., getPrototype, (, ), )]
[factory]
[getJSType, (, ), ., getPrototype, (, )]
[getJSType, (, )]
[prototypeType]
[getJSType, (, ), ., getSuperClassConstructor, (, )]
[getJSType, (, )]
[(, superConstructor, !=, null, ), ?, factory, ., getConcreteFunction, (, superConstructor, ), :, null]
[(, superConstructor, !=, null, )]
[superConstructor, !=, null]
[superConstructor]
[null]
[factory, ., getConcreteFunction, (, superConstructor, )]
[factory]
[superConstructor]
[null]
[bodyScope, ==, null]
[bodyScope]
[null]
[bodyScope]
[factory, ., createFunctionScope, (, declaration, ,, parentScope, )]
[factory]
[declaration]
[parentScope]
[bodyScope]
[new, StringBuilder, (, 32, )]
[32]
[b, ., append, (, "function (", )]
[b]
["function ("]
[!, getThisSlot, (, ), ., getType, (, ), ., isNone, (, )]
[getThisSlot, (, ), ., getType, (, ), ., isNone, (, )]
[getThisSlot, (, ), ., getType, (, )]
[getThisSlot, (, )]
[hasKnownTypeOfThis]
[b, ., append, (, "this:", )]
[b]
["this:"]
[b, ., append, (, getThisSlot, (, ), ., getType, (, ), ., toString, (, ), )]
[b]
[getThisSlot, (, ), ., getType, (, ), ., toString, (, )]
[getThisSlot, (, ), ., getType, (, )]
[getThisSlot, (, )]
[getFirstParameter, (, )]
[hasKnownTypeOfThis, &&, n, !=, null]
[hasKnownTypeOfThis]
[n, !=, null]
[n]
[null]
[b, ., append, (, ", ", )]
[b]
[", "]
[0]
[n, !=, null]
[n]
[null]
[++, i]
[i]
[n]
[n, ., getNext, (, )]
[n]
[n, ., getString, (, )]
[n]
[getScope, (, ), ., getOwnSlot, (, paramName, )]
[getScope, (, )]
[paramName]
[b, ., append, (, var, ., getType, (, ), )]
[b]
[var, ., getType, (, )]
[var]
[getParameterSlot, (, i, ), ., getType, (, )]
[getParameterSlot, (, i, )]
[i]
[n, ., getNext, (, ), !=, null]
[n, ., getNext, (, )]
[n]
[null]
[b, ., append, (, ", ", )]
[b]
[", "]
[b, ., append, (, ")", )]
[b]
[")"]
[getReturnSlot, (, ), ., getType, (, ), !=, null]
[getReturnSlot, (, ), ., getType, (, )]
[getReturnSlot, (, )]
[null]
[b, ., append, (, ": ", )]
[b]
[": "]
[b, ., append, (, getReturnSlot, (, ), ., getType, (, ), ., toString, (, ), )]
[b]
[getReturnSlot, (, ), ., getType, (, ), ., toString, (, )]
[getReturnSlot, (, ), ., getType, (, )]
[getReturnSlot, (, )]
[b, ., toString, (, )]
[b]
[this, ., factory]
[this]
[factory]
[this, ., instanceType]
[this]
[instanceType]
[Preconditions, ., checkArgument, (, !, (, instanceType, instanceof, UnknownType, ), )]
[Preconditions]
[!, (, instanceType, instanceof, UnknownType, )]
[(, instanceType, instanceof, UnknownType, )]
[instanceType, instanceof, UnknownType]
[instanceType]
[true]
[this]
[instanceType, ., isFunctionPrototypeType, (, )]
[instanceType]
[getScope, (, ), ., getSlot, (, propName, )]
[getScope, (, )]
[propName]
[getScope, (, ), ., getOwnSlot, (, propName, ), !=, null]
[getScope, (, ), ., getOwnSlot, (, propName, )]
[getScope, (, )]
[propName]
[null]
[instanceType, ., getConstructor, (, ), !=, null]
[instanceType, ., getConstructor, (, )]
[instanceType]
[null]
[getConstructorType, (, ), ., getPrototypeType, (, )]
[getConstructorType, (, )]
[this]
[getImplicitPrototype, (, ), !=, null]
[getImplicitPrototype, (, )]
[null]
[getImplicitPrototype, (, ), ., getInstanceTypeWithProperty, (, propName, )]
[getImplicitPrototype, (, )]
[propName]
[null]
[(, prototype, ==, null, ), &&, (, instanceType, ., getImplicitPrototype, (, ), !=, null, )]
[(, prototype, ==, null, )]
[prototype, ==, null]
[prototype]
[null]
[(, instanceType, ., getImplicitPrototype, (, ), !=, null, )]
[instanceType, ., getImplicitPrototype, (, ), !=, null]
[instanceType, ., getImplicitPrototype, (, )]
[instanceType]
[null]
[instanceType, ., getImplicitPrototype, (, )]
[instanceType]
[(, proto, !=, instanceType, ), &&, !, (, proto, instanceof, UnknownType, )]
[(, proto, !=, instanceType, )]
[proto, !=, instanceType]
[proto]
[instanceType]
[!, (, proto, instanceof, UnknownType, )]
[(, proto, instanceof, UnknownType, )]
[proto, instanceof, UnknownType]
[proto]
[prototype]
[factory, ., createConcreteInstance, (, proto, )]
[factory]
[proto]
[prototype]
[instanceType, ., isFunctionPrototypeType, (, )]
[instanceType]
[factory, ., getConcreteFunction, (, instanceType, ., getOwnerFunction, (, ), )]
[factory]
[instanceType, ., getOwnerFunction, (, )]
[instanceType]
[instanceType, ., getConstructor, (, )]
[instanceType]
[(, constructor, !=, null, ), ?, factory, ., getConcreteFunction, (, constructor, ), :, null]
[(, constructor, !=, null, )]
[constructor, !=, null]
[constructor]
[null]
[factory, ., getConcreteFunction, (, constructor, )]
[factory]
[constructor]
[null]
[scope, ==, null]
[scope]
[null]
[scope]
[factory, ., createInstanceScope, (, instanceType, )]
[factory]
[instanceType]
[scope]
[instanceType, ., toString, (, )]
[instanceType]
[Sets, ., newHashSet, (, alternatives, )]
[Sets]
[alternatives]
[Preconditions, ., checkArgument, (, alternatives, ., size, (, ), >, 1, )]
[Preconditions]
[alternatives, ., size, (, ), >, 1]
[alternatives, ., size, (, )]
[alternatives]
[1]
[this, ., alternatives]
[this]
[alternatives]
[true]
[this]
[other, ., isSingleton, (, )]
[other]
[alternatives, ., contains, (, other, )]
[alternatives]
[other]
[this]
[Sets, ., newHashSet, (, alternatives, )]
[Sets]
[alternatives]
[alts, ., add, (, other, )]
[alts]
[other]
[new, ConcreteUnionType, (, alts, )]
[alts]
[other, ., isUnion, (, )]
[other]
[other, ., toUnion, (, )]
[other]
[alternatives, ., containsAll, (, otherUnion, ., alternatives, )]
[alternatives]
[otherUnion, ., alternatives]
[otherUnion]
[this]
[otherUnion, ., alternatives, ., containsAll, (, alternatives, )]
[otherUnion, ., alternatives]
[otherUnion]
[alternatives]
[otherUnion]
[Sets, ., newHashSet, (, alternatives, )]
[Sets]
[alternatives]
[alts, ., addAll, (, otherUnion, ., alternatives, )]
[alts]
[otherUnion, ., alternatives]
[otherUnion]
[new, ConcreteUnionType, (, alts, )]
[alts]
[Preconditions, ., checkArgument, (, other, ., isNone, (, ), ||, other, ., isAll, (, ), )]
[Preconditions]
[other, ., isNone, (, ), ||, other, ., isAll, (, )]
[other, ., isNone, (, )]
[other]
[other, ., isAll, (, )]
[other]
[other, ., unionWith, (, this, )]
[other]
[this]
[other, ., isSingleton, (, )]
[other]
[alternatives, ., contains, (, other, )]
[alternatives]
[other]
[other]
[NONE]
[other, ., isUnion, (, )]
[other]
[Sets, ., newHashSet, (, alternatives, )]
[Sets]
[alternatives]
[types, ., retainAll, (, other, ., toUnion, (, ), ., alternatives, )]
[types]
[other, ., toUnion, (, ), ., alternatives]
[other, ., toUnion, (, )]
[other]
[createForTypes, (, types, )]
[types]
[Preconditions, ., checkArgument, (, other, ., isNone, (, ), ||, other, ., isAll, (, ), )]
[Preconditions]
[other, ., isNone, (, ), ||, other, ., isAll, (, )]
[other, ., isNone, (, )]
[other]
[other, ., isAll, (, )]
[other]
[other, ., intersectWith, (, this, )]
[other]
[this]
[alternatives]
[(, obj, instanceof, ConcreteUnionType, ), &&, alternatives, ., equals, (, (, (, ConcreteUnionType, ), obj, ), ., alternatives, )]
[(, obj, instanceof, ConcreteUnionType, )]
[obj, instanceof, ConcreteUnionType]
[obj]
[alternatives, ., equals, (, (, (, ConcreteUnionType, ), obj, ), ., alternatives, )]
[alternatives]
[(, (, ConcreteUnionType, ), obj, ), ., alternatives]
[(, (, ConcreteUnionType, ), obj, )]
[(, ConcreteUnionType, ), obj]
[obj]
[alternatives, ., hashCode, (, ), ^, 0x5f6e7d8c]
[alternatives, ., hashCode, (, )]
[alternatives]
[0x5f6e7d8c]
[Lists, ., newArrayList, (, )]
[Lists]
[alternatives]
[names, ., add, (, type, ., toString, (, ), )]
[names]
[type, ., toString, (, )]
[type]
[Collections, ., sort, (, names, )]
[Collections]
[names]
["(", +, Joiner, ., on, (, ",", ), ., join, (, names, ), +, ")"]
["(", +, Joiner, ., on, (, ",", ), ., join, (, names, )]
["("]
[Joiner, ., on, (, ",", ), ., join, (, names, )]
[Joiner, ., on, (, ",", )]
[Joiner]
[","]
[names]
[")"]
[true]
[this]
[other]
["*"]
[this, ., id]
[this]
[id]
[Preconditions, ., checkArgument, (, id, >=, 0, )]
[Preconditions]
[id, >=, 0]
[id]
[0]
[(, o, instanceof, ConcreteUniqueType, ), &&, (, id, ==, (, (, ConcreteUniqueType, ), o, ), ., id, )]
[(, o, instanceof, ConcreteUniqueType, )]
[o, instanceof, ConcreteUniqueType]
[o]
[(, id, ==, (, (, ConcreteUniqueType, ), o, ), ., id, )]
[id, ==, (, (, ConcreteUniqueType, ), o, ), ., id]
[id]
[(, (, ConcreteUniqueType, ), o, ), ., id]
[(, (, ConcreteUniqueType, ), o, )]
[(, ConcreteUniqueType, ), o]
[o]
[ConcreteUniqueType, ., class, ., hashCode, (, ), ^, id]
[ConcreteUniqueType, ., class, ., hashCode, (, )]
[ConcreteUniqueType, ., class]
[id]
["Unique$", +, id]
["Unique$"]
[id]
