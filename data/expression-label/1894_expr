[n, <=, 0]
[n]
[0]
[new, NotStrictlyPositiveException, (, n, )]
[n]
[this, ., k]
[this]
[k]
[this, ., m]
[this]
[m]
[this, ., b]
[this]
[b]
[this, ., q]
[this]
[q]
[this, ., a]
[this]
[a]
[oneOverN]
[1, /, n]
[1]
[n]
[value, (, m, -, x, ,, k, ,, b, ,, q, ,, a, ,, oneOverN, )]
[m, -, x]
[m]
[x]
[k]
[b]
[q]
[a]
[oneOverN]
[FunctionUtils, ., toDifferentiableUnivariateFunction, (, this, ), ., derivative, (, )]
[FunctionUtils, ., toDifferentiableUnivariateFunction, (, this, )]
[FunctionUtils]
[this]
[validateParameters, (, param, )]
[param]
[Logistic, ., value, (, param, [, 1, ], -, x, ,, param, [, 0, ], ,, param, [, 2, ], ,, param, [, 3, ], ,, param, [, 4, ], ,, 1, /, param, [, 5, ], )]
[Logistic]
[param, [, 1, ], -, x]
[param, [, 1, ]]
[param]
[1]
[x]
[param, [, 0, ]]
[param]
[0]
[param, [, 2, ]]
[param]
[2]
[param, [, 3, ]]
[param]
[3]
[param, [, 4, ]]
[param]
[4]
[1, /, param, [, 5, ]]
[1]
[param, [, 5, ]]
[param]
[5]
[validateParameters, (, param, )]
[param]
[param, [, 2, ]]
[param]
[2]
[param, [, 3, ]]
[param]
[3]
[param, [, 1, ], -, x]
[param, [, 1, ]]
[param]
[1]
[x]
[1, /, param, [, 5, ]]
[1]
[param, [, 5, ]]
[param]
[5]
[FastMath, ., exp, (, b, *, mMinusX, )]
[FastMath]
[b, *, mMinusX]
[b]
[mMinusX]
[q, *, exp]
[q]
[exp]
[qExp, +, 1]
[qExp]
[1]
[(, param, [, 0, ], -, param, [, 4, ], ), *, oneOverN, /, FastMath, ., pow, (, qExp1, ,, oneOverN, )]
[(, param, [, 0, ], -, param, [, 4, ], ), *, oneOverN]
[(, param, [, 0, ], -, param, [, 4, ], )]
[param, [, 0, ], -, param, [, 4, ]]
[param, [, 0, ]]
[param]
[0]
[param, [, 4, ]]
[param]
[4]
[oneOverN]
[FastMath, ., pow, (, qExp1, ,, oneOverN, )]
[FastMath]
[qExp1]
[oneOverN]
[-, factor1, /, qExp1]
[-, factor1]
[factor1]
[qExp1]
[Logistic, ., value, (, mMinusX, ,, 1, ,, b, ,, q, ,, 0, ,, oneOverN, )]
[Logistic]
[mMinusX]
[1]
[b]
[q]
[0]
[oneOverN]
[factor2, *, b, *, qExp]
[factor2, *, b]
[factor2]
[b]
[qExp]
[factor2, *, mMinusX, *, qExp]
[factor2, *, mMinusX]
[factor2]
[mMinusX]
[qExp]
[factor2, *, exp]
[factor2]
[exp]
[Logistic, ., value, (, mMinusX, ,, 0, ,, b, ,, q, ,, 1, ,, oneOverN, )]
[Logistic]
[mMinusX]
[0]
[b]
[q]
[1]
[oneOverN]
[factor1, *, Math, ., log, (, qExp1, ), *, oneOverN]
[factor1, *, Math, ., log, (, qExp1, )]
[factor1]
[Math, ., log, (, qExp1, )]
[Math]
[qExp1]
[oneOverN]
[new, double, [, ], {, gk, ,, gm, ,, gb, ,, gq, ,, ga, ,, gn, }]
[{, gk, ,, gm, ,, gb, ,, gq, ,, ga, ,, gn, }]
[gk]
[gm]
[gb]
[gq]
[ga]
[gn]
[param, ==, null]
[param]
[null]
[new, NullArgumentException, (, )]
[param, ., length, !=, 6]
[param, ., length]
[param]
[6]
[new, DimensionMismatchException, (, param, ., length, ,, 6, )]
[param, ., length]
[param]
[6]
[param, [, 5, ], <=, 0]
[param, [, 5, ]]
[param]
[5]
[0]
[new, NotStrictlyPositiveException, (, param, [, 5, ], )]
[param, [, 5, ]]
[param]
[5]
[a, +, (, k, -, a, ), /, FastMath, ., pow, (, 1, +, q, *, FastMath, ., exp, (, b, *, mMinusX, ), ,, oneOverN, )]
[a]
[(, k, -, a, ), /, FastMath, ., pow, (, 1, +, q, *, FastMath, ., exp, (, b, *, mMinusX, ), ,, oneOverN, )]
[(, k, -, a, )]
[k, -, a]
[k]
[a]
[FastMath, ., pow, (, 1, +, q, *, FastMath, ., exp, (, b, *, mMinusX, ), ,, oneOverN, )]
[FastMath]
[1, +, q, *, FastMath, ., exp, (, b, *, mMinusX, )]
[1]
[q, *, FastMath, ., exp, (, b, *, mMinusX, )]
[q]
[FastMath, ., exp, (, b, *, mMinusX, )]
[FastMath]
[b, *, mMinusX]
[b]
[mMinusX]
[oneOverN]
[t, ., negate, (, ), ., add, (, m, ), ., multiply, (, b, ), ., exp, (, ), ., multiply, (, q, ), ., add, (, 1, ), ., pow, (, oneOverN, ), ., reciprocal, (, ), ., multiply, (, k, -, a, ), ., add, (, a, )]
[t, ., negate, (, ), ., add, (, m, ), ., multiply, (, b, ), ., exp, (, ), ., multiply, (, q, ), ., add, (, 1, ), ., pow, (, oneOverN, ), ., reciprocal, (, ), ., multiply, (, k, -, a, )]
[t, ., negate, (, ), ., add, (, m, ), ., multiply, (, b, ), ., exp, (, ), ., multiply, (, q, ), ., add, (, 1, ), ., pow, (, oneOverN, ), ., reciprocal, (, )]
[t, ., negate, (, ), ., add, (, m, ), ., multiply, (, b, ), ., exp, (, ), ., multiply, (, q, ), ., add, (, 1, ), ., pow, (, oneOverN, )]
[t, ., negate, (, ), ., add, (, m, ), ., multiply, (, b, ), ., exp, (, ), ., multiply, (, q, ), ., add, (, 1, )]
[t, ., negate, (, ), ., add, (, m, ), ., multiply, (, b, ), ., exp, (, ), ., multiply, (, q, )]
[t, ., negate, (, ), ., add, (, m, ), ., multiply, (, b, ), ., exp, (, )]
[t, ., negate, (, ), ., add, (, m, ), ., multiply, (, b, )]
[t, ., negate, (, ), ., add, (, m, )]
[t, ., negate, (, )]
[t]
[m]
[b]
[q]
[1]
[oneOverN]
[k, -, a]
[k]
[a]
[a]
