[new, Examples, (, ), ., run, (, )]
[new, Examples, (, )]
[ex, ., printStackTrace, (, )]
[ex]
[runInstant, (, )]
[System, ., out, ., println, (, )]
[System, ., out]
[System]
[runDateTime, (, )]
[System, ., out, ., println, (, )]
[System, ., out]
[System]
[System, ., out, ., println, (, "Instant", )]
[System, ., out]
[System]
["Instant"]
[System, ., out, ., println, (, "=======", )]
[System, ., out]
[System]
["======="]
[System, ., out, ., println, (, "Instant stores a point in the datetime continuum as millisecs from 1970-01-01T00:00:00Z", )]
[System, ., out]
[System]
["Instant stores a point in the datetime continuum as millisecs from 1970-01-01T00:00:00Z"]
[System, ., out, ., println, (, "Instant is immutable and thread-safe", )]
[System, ., out]
[System]
["Instant is immutable and thread-safe"]
[System, ., out, ., println, (, "                      in = new Instant()", )]
[System, ., out]
[System]
["                      in = new Instant()"]
[new, Instant, (, )]
[System, ., out, ., println, (, "Millisecond time:     in.getMillis():           ", +, in, ., getMillis, (, ), )]
[System, ., out]
[System]
["Millisecond time:     in.getMillis():           ", +, in, ., getMillis, (, )]
["Millisecond time:     in.getMillis():           "]
[in, ., getMillis, (, )]
[in]
[System, ., out, ., println, (, "ISO string version:   in.toString():            ", +, in, ., toString, (, ), )]
[System, ., out]
[System]
["ISO string version:   in.toString():            ", +, in, ., toString, (, )]
["ISO string version:   in.toString():            "]
[in, ., toString, (, )]
[in]
[System, ., out, ., println, (, "ISO chronology:       in.getChronology():       ", +, in, ., getChronology, (, ), )]
[System, ., out]
[System]
["ISO chronology:       in.getChronology():       ", +, in, ., getChronology, (, )]
["ISO chronology:       in.getChronology():       "]
[in, ., getChronology, (, )]
[in]
[System, ., out, ., println, (, "UTC time zone:        in.getDateTimeZone():     ", +, in, ., getZone, (, ), )]
[System, ., out]
[System]
["UTC time zone:        in.getDateTimeZone():     ", +, in, ., getZone, (, )]
["UTC time zone:        in.getDateTimeZone():     "]
[in, ., getZone, (, )]
[in]
[System, ., out, ., println, (, "Change millis:        in.withMillis(0):         ", +, in, ., withMillis, (, 0L, ), )]
[System, ., out]
[System]
["Change millis:        in.withMillis(0):         ", +, in, ., withMillis, (, 0L, )]
["Change millis:        in.withMillis(0):         "]
[in, ., withMillis, (, 0L, )]
[in]
[0L]
[System, ., out, ., println, (, "", )]
[System, ., out]
[System]
[""]
[System, ., out, ., println, (, "Convert to Instant:   in.toInstant():           ", +, in, ., toInstant, (, ), )]
[System, ., out]
[System]
["Convert to Instant:   in.toInstant():           ", +, in, ., toInstant, (, )]
["Convert to Instant:   in.toInstant():           "]
[in, ., toInstant, (, )]
[in]
[System, ., out, ., println, (, "Convert to DateTime:  in.toDateTime():          ", +, in, ., toDateTime, (, ), )]
[System, ., out]
[System]
["Convert to DateTime:  in.toDateTime():          ", +, in, ., toDateTime, (, )]
["Convert to DateTime:  in.toDateTime():          "]
[in, ., toDateTime, (, )]
[in]
[System, ., out, ., println, (, "Convert to MutableDT: in.toMutableDateTime():   ", +, in, ., toMutableDateTime, (, ), )]
[System, ., out]
[System]
["Convert to MutableDT: in.toMutableDateTime():   ", +, in, ., toMutableDateTime, (, )]
["Convert to MutableDT: in.toMutableDateTime():   "]
[in, ., toMutableDateTime, (, )]
[in]
[System, ., out, ., println, (, "Convert to Date:      in.toDate():              ", +, in, ., toDate, (, ), )]
[System, ., out]
[System]
["Convert to Date:      in.toDate():              ", +, in, ., toDate, (, )]
["Convert to Date:      in.toDate():              "]
[in, ., toDate, (, )]
[in]
[System, ., out, ., println, (, "", )]
[System, ., out]
[System]
[""]
[System, ., out, ., println, (, "                      in2 = new Instant(in.getMillis() + 10)", )]
[System, ., out]
[System]
["                      in2 = new Instant(in.getMillis() + 10)"]
[new, Instant, (, in, ., getMillis, (, ), +, 10, )]
[in, ., getMillis, (, ), +, 10]
[in, ., getMillis, (, )]
[in]
[10]
[System, ., out, ., println, (, "Equals ms and chrono: in.equals(in2):           ", +, in, ., equals, (, in2, ), )]
[System, ., out]
[System]
["Equals ms and chrono: in.equals(in2):           ", +, in, ., equals, (, in2, )]
["Equals ms and chrono: in.equals(in2):           "]
[in, ., equals, (, in2, )]
[in]
[in2]
[System, ., out, ., println, (, "Compare millisecond:  in.compareTo(in2):        ", +, in, ., compareTo, (, in2, ), )]
[System, ., out]
[System]
["Compare millisecond:  in.compareTo(in2):        ", +, in, ., compareTo, (, in2, )]
["Compare millisecond:  in.compareTo(in2):        "]
[in, ., compareTo, (, in2, )]
[in]
[in2]
[System, ., out, ., println, (, "Compare millisecond:  in.isEqual(in2):          ", +, in, ., isEqual, (, in2, ), )]
[System, ., out]
[System]
["Compare millisecond:  in.isEqual(in2):          ", +, in, ., isEqual, (, in2, )]
["Compare millisecond:  in.isEqual(in2):          "]
[in, ., isEqual, (, in2, )]
[in]
[in2]
[System, ., out, ., println, (, "Compare millisecond:  in.isAfter(in2):          ", +, in, ., isAfter, (, in2, ), )]
[System, ., out]
[System]
["Compare millisecond:  in.isAfter(in2):          ", +, in, ., isAfter, (, in2, )]
["Compare millisecond:  in.isAfter(in2):          "]
[in, ., isAfter, (, in2, )]
[in]
[in2]
[System, ., out, ., println, (, "Compare millisecond:  in.isBefore(in2):         ", +, in, ., isBefore, (, in2, ), )]
[System, ., out]
[System]
["Compare millisecond:  in.isBefore(in2):         ", +, in, ., isBefore, (, in2, )]
["Compare millisecond:  in.isBefore(in2):         "]
[in, ., isBefore, (, in2, )]
[in]
[in2]
[System, ., out, ., println, (, "DateTime", )]
[System, ., out]
[System]
["DateTime"]
[System, ., out, ., println, (, "=======", )]
[System, ., out]
[System]
["======="]
[System, ., out, ., println, (, "DateTime stores a the date and time using millisecs from 1970-01-01T00:00:00Z internally", )]
[System, ., out]
[System]
["DateTime stores a the date and time using millisecs from 1970-01-01T00:00:00Z internally"]
[System, ., out, ., println, (, "DateTime is immutable and thread-safe", )]
[System, ., out]
[System]
["DateTime is immutable and thread-safe"]
[System, ., out, ., println, (, "                      in = new DateTime()", )]
[System, ., out]
[System]
["                      in = new DateTime()"]
[new, DateTime, (, )]
[System, ., out, ., println, (, "Millisecond time:     in.getMillis():           ", +, in, ., getMillis, (, ), )]
[System, ., out]
[System]
["Millisecond time:     in.getMillis():           ", +, in, ., getMillis, (, )]
["Millisecond time:     in.getMillis():           "]
[in, ., getMillis, (, )]
[in]
[System, ., out, ., println, (, "ISO string version:   in.toString():            ", +, in, ., toString, (, ), )]
[System, ., out]
[System]
["ISO string version:   in.toString():            ", +, in, ., toString, (, )]
["ISO string version:   in.toString():            "]
[in, ., toString, (, )]
[in]
[System, ., out, ., println, (, "ISO chronology:       in.getChronology():       ", +, in, ., getChronology, (, ), )]
[System, ., out]
[System]
["ISO chronology:       in.getChronology():       ", +, in, ., getChronology, (, )]
["ISO chronology:       in.getChronology():       "]
[in, ., getChronology, (, )]
[in]
[System, ., out, ., println, (, "Your time zone:       in.getDateTimeZone():     ", +, in, ., getZone, (, ), )]
[System, ., out]
[System]
["Your time zone:       in.getDateTimeZone():     ", +, in, ., getZone, (, )]
["Your time zone:       in.getDateTimeZone():     "]
[in, ., getZone, (, )]
[in]
[System, ., out, ., println, (, "Change millis:        in.withMillis(0):         ", +, in, ., withMillis, (, 0L, ), )]
[System, ., out]
[System]
["Change millis:        in.withMillis(0):         ", +, in, ., withMillis, (, 0L, )]
["Change millis:        in.withMillis(0):         "]
[in, ., withMillis, (, 0L, )]
[in]
[0L]
[System, ., out, ., println, (, "", )]
[System, ., out]
[System]
[""]
[System, ., out, ., println, (, "Get year:             in.getYear():             ", +, in, ., getYear, (, ), )]
[System, ., out]
[System]
["Get year:             in.getYear():             ", +, in, ., getYear, (, )]
["Get year:             in.getYear():             "]
[in, ., getYear, (, )]
[in]
[System, ., out, ., println, (, "Get monthOfYear:      in.getMonthOfYear():      ", +, in, ., getMonthOfYear, (, ), )]
[System, ., out]
[System]
["Get monthOfYear:      in.getMonthOfYear():      ", +, in, ., getMonthOfYear, (, )]
["Get monthOfYear:      in.getMonthOfYear():      "]
[in, ., getMonthOfYear, (, )]
[in]
[System, ., out, ., println, (, "Get dayOfMonth:       in.getDayOfMonth():       ", +, in, ., getDayOfMonth, (, ), )]
[System, ., out]
[System]
["Get dayOfMonth:       in.getDayOfMonth():       ", +, in, ., getDayOfMonth, (, )]
["Get dayOfMonth:       in.getDayOfMonth():       "]
[in, ., getDayOfMonth, (, )]
[in]
[System, ., out, ., println, (, "...", )]
[System, ., out]
[System]
["..."]
[System, ., out, ., println, (, "Property access:      in.dayOfWeek().get():                   ", +, in, ., dayOfWeek, (, ), ., get, (, ), )]
[System, ., out]
[System]
["Property access:      in.dayOfWeek().get():                   ", +, in, ., dayOfWeek, (, ), ., get, (, )]
["Property access:      in.dayOfWeek().get():                   "]
[in, ., dayOfWeek, (, ), ., get, (, )]
[in, ., dayOfWeek, (, )]
[in]
[System, ., out, ., println, (, "Day of week as text:  in.dayOfWeek().getAsText():             ", +, in, ., dayOfWeek, (, ), ., getAsText, (, ), )]
[System, ., out]
[System]
["Day of week as text:  in.dayOfWeek().getAsText():             ", +, in, ., dayOfWeek, (, ), ., getAsText, (, )]
["Day of week as text:  in.dayOfWeek().getAsText():             "]
[in, ., dayOfWeek, (, ), ., getAsText, (, )]
[in, ., dayOfWeek, (, )]
[in]
[System, ., out, ., println, (, "Day as short text:    in.dayOfWeek().getAsShortText():        ", +, in, ., dayOfWeek, (, ), ., getAsShortText, (, ), )]
[System, ., out]
[System]
["Day as short text:    in.dayOfWeek().getAsShortText():        ", +, in, ., dayOfWeek, (, ), ., getAsShortText, (, )]
["Day as short text:    in.dayOfWeek().getAsShortText():        "]
[in, ., dayOfWeek, (, ), ., getAsShortText, (, )]
[in, ., dayOfWeek, (, )]
[in]
[System, ., out, ., println, (, "Day in french:        in.dayOfWeek().getAsText(Locale.FRENCH):", +, in, ., dayOfWeek, (, ), ., getAsText, (, Locale, ., FRENCH, ), )]
[System, ., out]
[System]
["Day in french:        in.dayOfWeek().getAsText(Locale.FRENCH):", +, in, ., dayOfWeek, (, ), ., getAsText, (, Locale, ., FRENCH, )]
["Day in french:        in.dayOfWeek().getAsText(Locale.FRENCH):"]
[in, ., dayOfWeek, (, ), ., getAsText, (, Locale, ., FRENCH, )]
[in, ., dayOfWeek, (, )]
[in]
[Locale, ., FRENCH]
[Locale]
[System, ., out, ., println, (, "Max allowed value:    in.dayOfWeek().getMaximumValue():       ", +, in, ., dayOfWeek, (, ), ., getMaximumValue, (, ), )]
[System, ., out]
[System]
["Max allowed value:    in.dayOfWeek().getMaximumValue():       ", +, in, ., dayOfWeek, (, ), ., getMaximumValue, (, )]
["Max allowed value:    in.dayOfWeek().getMaximumValue():       "]
[in, ., dayOfWeek, (, ), ., getMaximumValue, (, )]
[in, ., dayOfWeek, (, )]
[in]
[System, ., out, ., println, (, "Min allowed value:    in.dayOfWeek().getMinimumValue():       ", +, in, ., dayOfWeek, (, ), ., getMinimumValue, (, ), )]
[System, ., out]
[System]
["Min allowed value:    in.dayOfWeek().getMinimumValue():       ", +, in, ., dayOfWeek, (, ), ., getMinimumValue, (, )]
["Min allowed value:    in.dayOfWeek().getMinimumValue():       "]
[in, ., dayOfWeek, (, ), ., getMinimumValue, (, )]
[in, ., dayOfWeek, (, )]
[in]
[System, ., out, ., println, (, "Copy & set to Jan:    in.monthOfYear().setCopy(1):            ", +, in, ., monthOfYear, (, ), ., setCopy, (, 1, ), )]
[System, ., out]
[System]
["Copy & set to Jan:    in.monthOfYear().setCopy(1):            ", +, in, ., monthOfYear, (, ), ., setCopy, (, 1, )]
["Copy & set to Jan:    in.monthOfYear().setCopy(1):            "]
[in, ., monthOfYear, (, ), ., setCopy, (, 1, )]
[in, ., monthOfYear, (, )]
[in]
[1]
[System, ., out, ., println, (, "Copy & add 14 months: in.monthOfYear().addCopy(14):           ", +, in, ., monthOfYear, (, ), ., addToCopy, (, 14, ), )]
[System, ., out]
[System]
["Copy & add 14 months: in.monthOfYear().addCopy(14):           ", +, in, ., monthOfYear, (, ), ., addToCopy, (, 14, )]
["Copy & add 14 months: in.monthOfYear().addCopy(14):           "]
[in, ., monthOfYear, (, ), ., addToCopy, (, 14, )]
[in, ., monthOfYear, (, )]
[in]
[14]
[System, ., out, ., println, (, "Add 14 mnths in field:in.monthOfYear().addWrapFieldCopy(14):  ", +, in, ., monthOfYear, (, ), ., addWrapFieldToCopy, (, 14, ), )]
[System, ., out]
[System]
["Add 14 mnths in field:in.monthOfYear().addWrapFieldCopy(14):  ", +, in, ., monthOfYear, (, ), ., addWrapFieldToCopy, (, 14, )]
["Add 14 mnths in field:in.monthOfYear().addWrapFieldCopy(14):  "]
[in, ., monthOfYear, (, ), ., addWrapFieldToCopy, (, 14, )]
[in, ., monthOfYear, (, )]
[in]
[14]
[System, ., out, ., println, (, "...", )]
[System, ., out]
[System]
["..."]
[System, ., out, ., println, (, "Convert to Instant:   in.toInstant():           ", +, in, ., toInstant, (, ), )]
[System, ., out]
[System]
["Convert to Instant:   in.toInstant():           ", +, in, ., toInstant, (, )]
["Convert to Instant:   in.toInstant():           "]
[in, ., toInstant, (, )]
[in]
[System, ., out, ., println, (, "Convert to DateTime:  in.toDateTime():          ", +, in, ., toDateTime, (, ), )]
[System, ., out]
[System]
["Convert to DateTime:  in.toDateTime():          ", +, in, ., toDateTime, (, )]
["Convert to DateTime:  in.toDateTime():          "]
[in, ., toDateTime, (, )]
[in]
[System, ., out, ., println, (, "Convert to MutableDT: in.toMutableDateTime():   ", +, in, ., toMutableDateTime, (, ), )]
[System, ., out]
[System]
["Convert to MutableDT: in.toMutableDateTime():   ", +, in, ., toMutableDateTime, (, )]
["Convert to MutableDT: in.toMutableDateTime():   "]
[in, ., toMutableDateTime, (, )]
[in]
[System, ., out, ., println, (, "Convert to Date:      in.toDate():              ", +, in, ., toDate, (, ), )]
[System, ., out]
[System]
["Convert to Date:      in.toDate():              ", +, in, ., toDate, (, )]
["Convert to Date:      in.toDate():              "]
[in, ., toDate, (, )]
[in]
[System, ., out, ., println, (, "Convert to Calendar:  in.toCalendar(Locale.UK): ", +, in, ., toCalendar, (, Locale, ., UK, ), ., toString, (, ), ., substring, (, 0, ,, 46, ), )]
[System, ., out]
[System]
["Convert to Calendar:  in.toCalendar(Locale.UK): ", +, in, ., toCalendar, (, Locale, ., UK, ), ., toString, (, ), ., substring, (, 0, ,, 46, )]
["Convert to Calendar:  in.toCalendar(Locale.UK): "]
[in, ., toCalendar, (, Locale, ., UK, ), ., toString, (, ), ., substring, (, 0, ,, 46, )]
[in, ., toCalendar, (, Locale, ., UK, ), ., toString, (, )]
[in, ., toCalendar, (, Locale, ., UK, )]
[in]
[Locale, ., UK]
[Locale]
[0]
[46]
[System, ., out, ., println, (, "Convert to GregCal:   in.toGregorianCalendar(): ", +, in, ., toGregorianCalendar, (, ), ., toString, (, ), ., substring, (, 0, ,, 46, ), )]
[System, ., out]
[System]
["Convert to GregCal:   in.toGregorianCalendar(): ", +, in, ., toGregorianCalendar, (, ), ., toString, (, ), ., substring, (, 0, ,, 46, )]
["Convert to GregCal:   in.toGregorianCalendar(): "]
[in, ., toGregorianCalendar, (, ), ., toString, (, ), ., substring, (, 0, ,, 46, )]
[in, ., toGregorianCalendar, (, ), ., toString, (, )]
[in, ., toGregorianCalendar, (, )]
[in]
[0]
[46]
[System, ., out, ., println, (, "", )]
[System, ., out]
[System]
[""]
[System, ., out, ., println, (, "                      in2 = new DateTime(in.getMillis() + 10)", )]
[System, ., out]
[System]
["                      in2 = new DateTime(in.getMillis() + 10)"]
[new, DateTime, (, in, ., getMillis, (, ), +, 10, )]
[in, ., getMillis, (, ), +, 10]
[in, ., getMillis, (, )]
[in]
[10]
[System, ., out, ., println, (, "Equals ms and chrono: in.equals(in2):           ", +, in, ., equals, (, in2, ), )]
[System, ., out]
[System]
["Equals ms and chrono: in.equals(in2):           ", +, in, ., equals, (, in2, )]
["Equals ms and chrono: in.equals(in2):           "]
[in, ., equals, (, in2, )]
[in]
[in2]
[System, ., out, ., println, (, "Compare millisecond:  in.compareTo(in2):        ", +, in, ., compareTo, (, in2, ), )]
[System, ., out]
[System]
["Compare millisecond:  in.compareTo(in2):        ", +, in, ., compareTo, (, in2, )]
["Compare millisecond:  in.compareTo(in2):        "]
[in, ., compareTo, (, in2, )]
[in]
[in2]
[System, ., out, ., println, (, "Compare millisecond:  in.isEqual(in2):          ", +, in, ., isEqual, (, in2, ), )]
[System, ., out]
[System]
["Compare millisecond:  in.isEqual(in2):          ", +, in, ., isEqual, (, in2, )]
["Compare millisecond:  in.isEqual(in2):          "]
[in, ., isEqual, (, in2, )]
[in]
[in2]
[System, ., out, ., println, (, "Compare millisecond:  in.isAfter(in2):          ", +, in, ., isAfter, (, in2, ), )]
[System, ., out]
[System]
["Compare millisecond:  in.isAfter(in2):          ", +, in, ., isAfter, (, in2, )]
["Compare millisecond:  in.isAfter(in2):          "]
[in, ., isAfter, (, in2, )]
[in]
[in2]
[System, ., out, ., println, (, "Compare millisecond:  in.isBefore(in2):         ", +, in, ., isBefore, (, in2, ), )]
[System, ., out]
[System]
["Compare millisecond:  in.isBefore(in2):         ", +, in, ., isBefore, (, in2, )]
["Compare millisecond:  in.isBefore(in2):         "]
[in, ., isBefore, (, in2, )]
[in]
[in2]
