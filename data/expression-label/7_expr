[this, ., compiler]
[this]
[compiler]
[NodeTraversal, ., traverse, (, compiler, ,, root, ,, this, )]
[NodeTraversal]
[compiler]
[root]
[this]
[n, ., getType, (, )]
[n]
[Token, ., LABEL]
[Token]
[tryMinimizeExits, (, n, ., getLastChild, (, ), ,, Token, ., BREAK, ,, n, ., getFirstChild, (, ), ., getString, (, ), )]
[n, ., getLastChild, (, )]
[n]
[Token, ., BREAK]
[Token]
[n, ., getFirstChild, (, ), ., getString, (, )]
[n, ., getFirstChild, (, )]
[n]
[Token, ., FOR]
[Token]
[Token, ., WHILE]
[Token]
[tryMinimizeExits, (, NodeUtil, ., getLoopCodeBlock, (, n, ), ,, Token, ., CONTINUE, ,, null, )]
[NodeUtil, ., getLoopCodeBlock, (, n, )]
[NodeUtil]
[n]
[Token, ., CONTINUE]
[Token]
[null]
[Token, ., DO]
[Token]
[tryMinimizeExits, (, NodeUtil, ., getLoopCodeBlock, (, n, ), ,, Token, ., CONTINUE, ,, null, )]
[NodeUtil, ., getLoopCodeBlock, (, n, )]
[NodeUtil]
[n]
[Token, ., CONTINUE]
[Token]
[null]
[NodeUtil, ., getConditionExpression, (, n, )]
[NodeUtil]
[n]
[NodeUtil, ., getImpureBooleanValue, (, cond, ), ==, TernaryValue, ., FALSE]
[NodeUtil, ., getImpureBooleanValue, (, cond, )]
[NodeUtil]
[cond]
[TernaryValue, ., FALSE]
[TernaryValue]
[tryMinimizeExits, (, n, ., getFirstChild, (, ), ,, Token, ., BREAK, ,, null, )]
[n, ., getFirstChild, (, )]
[n]
[Token, ., BREAK]
[Token]
[null]
[Token, ., FUNCTION]
[Token]
[tryMinimizeExits, (, n, ., getLastChild, (, ), ,, Token, ., RETURN, ,, null, )]
[n, ., getLastChild, (, )]
[n]
[Token, ., RETURN]
[Token]
[null]
[matchingExitNode, (, n, ,, exitType, ,, labelName, )]
[n]
[exitType]
[labelName]
[NodeUtil, ., removeChild, (, n, ., getParent, (, ), ,, n, )]
[NodeUtil]
[n, ., getParent, (, )]
[n]
[n]
[compiler, ., reportCodeChange, (, )]
[compiler]
[n, ., isIf, (, )]
[n]
[n, ., getFirstChild, (, ), ., getNext, (, )]
[n, ., getFirstChild, (, )]
[n]
[tryMinimizeExits, (, ifBlock, ,, exitType, ,, labelName, )]
[ifBlock]
[exitType]
[labelName]
[ifBlock, ., getNext, (, )]
[ifBlock]
[elseBlock, !=, null]
[elseBlock]
[null]
[tryMinimizeExits, (, elseBlock, ,, exitType, ,, labelName, )]
[elseBlock]
[exitType]
[labelName]
[n, ., isTry, (, )]
[n]
[n, ., getFirstChild, (, )]
[n]
[tryMinimizeExits, (, tryBlock, ,, exitType, ,, labelName, )]
[tryBlock]
[exitType]
[labelName]
[NodeUtil, ., getCatchBlock, (, n, )]
[NodeUtil]
[n]
[NodeUtil, ., hasCatchHandler, (, allCatchNodes, )]
[NodeUtil]
[allCatchNodes]
[Preconditions, ., checkState, (, allCatchNodes, ., hasOneChild, (, ), )]
[Preconditions]
[allCatchNodes, ., hasOneChild, (, )]
[allCatchNodes]
[allCatchNodes, ., getFirstChild, (, )]
[allCatchNodes]
[catchNode, ., getLastChild, (, )]
[catchNode]
[tryMinimizeExits, (, catchCodeBlock, ,, exitType, ,, labelName, )]
[catchCodeBlock]
[exitType]
[labelName]
[NodeUtil, ., hasFinally, (, n, )]
[NodeUtil]
[n]
[n, ., getLastChild, (, )]
[n]
[tryMinimizeExits, (, finallyBlock, ,, exitType, ,, labelName, )]
[finallyBlock]
[exitType]
[labelName]
[n, ., isLabel, (, )]
[n]
[n, ., getLastChild, (, )]
[n]
[tryMinimizeExits, (, labelBlock, ,, exitType, ,, labelName, )]
[labelBlock]
[exitType]
[labelName]
[!, n, ., isBlock, (, ), ||, n, ., getLastChild, (, ), ==, null]
[!, n, ., isBlock, (, )]
[n, ., isBlock, (, )]
[n]
[n, ., getLastChild, (, ), ==, null]
[n, ., getLastChild, (, )]
[n]
[null]
[n, ., children, (, )]
[n]
[c, ., isIf, (, )]
[c]
[c]
[trueBlock]
[ifTree, ., getFirstChild, (, ), ., getNext, (, )]
[ifTree, ., getFirstChild, (, )]
[ifTree]
[falseBlock]
[trueBlock, ., getNext, (, )]
[trueBlock]
[tryMinimizeIfBlockExits, (, trueBlock, ,, falseBlock, ,, ifTree, ,, exitType, ,, labelName, )]
[trueBlock]
[falseBlock]
[ifTree]
[exitType]
[labelName]
[trueBlock]
[ifTree, ., getFirstChild, (, ), ., getNext, (, )]
[ifTree, ., getFirstChild, (, )]
[ifTree]
[falseBlock]
[trueBlock, ., getNext, (, )]
[trueBlock]
[falseBlock, !=, null]
[falseBlock]
[null]
[tryMinimizeIfBlockExits, (, falseBlock, ,, trueBlock, ,, ifTree, ,, exitType, ,, labelName, )]
[falseBlock]
[trueBlock]
[ifTree]
[exitType]
[labelName]
[c, ==, n, ., getLastChild, (, )]
[c]
[n, ., getLastChild, (, )]
[n]
[n, ., getLastChild, (, )]
[n]
[c, !=, null]
[c]
[null]
[c]
[n, ., getLastChild, (, )]
[n]
[tryMinimizeExits, (, c, ,, exitType, ,, labelName, )]
[c]
[exitType]
[labelName]
[c, ==, n, ., getLastChild, (, )]
[c]
[n, ., getLastChild, (, )]
[n]
[null]
[null]
[srcBlock, ., isBlock, (, )]
[srcBlock]
[!, srcBlock, ., hasChildren, (, )]
[srcBlock, ., hasChildren, (, )]
[srcBlock]
[exitNodeParent]
[srcBlock]
[exitNode]
[exitNodeParent, ., getLastChild, (, )]
[exitNodeParent]
[exitNodeParent]
[ifNode]
[exitNode]
[srcBlock]
[!, matchingExitNode, (, exitNode, ,, exitType, ,, labelName, )]
[matchingExitNode, (, exitNode, ,, exitType, ,, labelName, )]
[exitNode]
[exitType]
[labelName]
[ifNode, ., getNext, (, ), !=, null]
[ifNode, ., getNext, (, )]
[ifNode]
[null]
[IR, ., block, (, ), ., srcref, (, ifNode, )]
[IR, ., block, (, )]
[IR]
[ifNode]
[destBlock, ==, null]
[destBlock]
[null]
[ifNode, ., addChildToBack, (, newDestBlock, )]
[ifNode]
[newDestBlock]
[destBlock, ., isEmpty, (, )]
[destBlock]
[ifNode, ., replaceChild, (, destBlock, ,, newDestBlock, )]
[ifNode]
[destBlock]
[newDestBlock]
[destBlock, ., isBlock, (, )]
[destBlock]
[newDestBlock]
[destBlock]
[ifNode, ., replaceChild, (, destBlock, ,, newDestBlock, )]
[ifNode]
[destBlock]
[newDestBlock]
[newDestBlock, ., addChildToBack, (, destBlock, )]
[newDestBlock]
[destBlock]
[moveAllFollowing, (, ifNode, ,, ifNode, ., getParent, (, ), ,, newDestBlock, )]
[ifNode]
[ifNode, ., getParent, (, )]
[ifNode]
[newDestBlock]
[NodeUtil, ., removeChild, (, exitNodeParent, ,, exitNode, )]
[NodeUtil]
[exitNodeParent]
[exitNode]
[compiler, ., reportCodeChange, (, )]
[compiler]
[n, ., getType, (, ), ==, type]
[n, ., getType, (, )]
[n]
[type]
[type, ==, Token, ., RETURN]
[type]
[Token, ., RETURN]
[Token]
[!, n, ., hasChildren, (, )]
[n, ., hasChildren, (, )]
[n]
[labelName, ==, null]
[labelName]
[null]
[!, n, ., hasChildren, (, )]
[n, ., hasChildren, (, )]
[n]
[n, ., hasChildren, (, ), &&, labelName, ., equals, (, n, ., getFirstChild, (, ), ., getString, (, ), )]
[n, ., hasChildren, (, )]
[n]
[labelName, ., equals, (, n, ., getFirstChild, (, ), ., getString, (, ), )]
[labelName]
[n, ., getFirstChild, (, ), ., getString, (, )]
[n, ., getFirstChild, (, )]
[n]
[false]
[start, ., getNext, (, )]
[start]
[n, !=, null]
[n]
[null]
[n]
[start, ., getNext, (, )]
[start]
[NodeUtil, ., isFunctionDeclaration, (, n, )]
[NodeUtil]
[n]
[srcParent, ., removeChild, (, n, )]
[srcParent]
[n]
[isFunctionDeclaration]
[destParent, ., addChildToFront, (, n, )]
[destParent]
[n]
[destParent, ., addChildToBack, (, n, )]
[destParent]
[n]
