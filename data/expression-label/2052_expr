[-, 2362048321261811743L]
[2362048321261811743L]
[31]
[""]
["''"]
[',']
['}']
['{']
['\'']
[pattern]
[Locale, ., getDefault, (, )]
[Locale]
[pattern]
[locale]
[null]
[pattern]
[Locale, ., getDefault, (, )]
[Locale]
[registry]
[DUMMY_PATTERN]
[setLocale, (, locale, )]
[locale]
[this, ., registry]
[this]
[registry]
[applyPattern, (, pattern, )]
[pattern]
[toPattern]
[registry, ==, null]
[registry]
[null]
[super, ., applyPattern, (, pattern, )]
[super]
[pattern]
[toPattern]
[super, ., toPattern, (, )]
[super]
[new, ArrayList, <, Format, >, (, )]
[new, ArrayList, <, String, >, (, )]
[new, StringBuilder, (, pattern, ., length, (, ), )]
[pattern, ., length, (, )]
[pattern]
[new, ParsePosition, (, 0, )]
[0]
[pattern, ., toCharArray, (, )]
[pattern]
[0]
[pos, ., getIndex, (, ), <, pattern, ., length, (, )]
[pos, ., getIndex, (, )]
[pos]
[pattern, ., length, (, )]
[pattern]
[c, [, pos, ., getIndex, (, ), ]]
[c]
[pos, ., getIndex, (, )]
[pos]
[QUOTE]
[appendQuotedString, (, pattern, ,, pos, ,, stripCustom, ,, true, )]
[pattern]
[pos]
[stripCustom]
[true]
[START_FE]
[fmtCount, ++]
[fmtCount]
[seekNonWs, (, pattern, ,, pos, )]
[pattern]
[pos]
[pos, ., getIndex, (, )]
[pos]
[readArgumentIndex, (, pattern, ,, next, (, pos, ), )]
[pattern]
[next, (, pos, )]
[pos]
[stripCustom, ., append, (, START_FE, ), ., append, (, index, )]
[stripCustom, ., append, (, START_FE, )]
[stripCustom]
[START_FE]
[index]
[seekNonWs, (, pattern, ,, pos, )]
[pattern]
[pos]
[null]
[null]
[c, [, pos, ., getIndex, (, ), ], ==, START_FMT]
[c, [, pos, ., getIndex, (, ), ]]
[c]
[pos, ., getIndex, (, )]
[pos]
[START_FMT]
[formatDescription]
[parseFormatDescription, (, pattern, ,, next, (, pos, ), )]
[pattern]
[next, (, pos, )]
[pos]
[format]
[getFormat, (, formatDescription, )]
[formatDescription]
[format, ==, null]
[format]
[null]
[stripCustom, ., append, (, START_FMT, ), ., append, (, formatDescription, )]
[stripCustom, ., append, (, START_FMT, )]
[stripCustom]
[START_FMT]
[formatDescription]
[foundFormats, ., add, (, format, )]
[foundFormats]
[format]
[foundDescriptions, ., add, (, format, ==, null, ?, null, :, formatDescription, )]
[foundDescriptions]
[format, ==, null, ?, null, :, formatDescription]
[format, ==, null]
[format]
[null]
[null]
[formatDescription]
[Validate, ., isTrue, (, foundFormats, ., size, (, ), ==, fmtCount, )]
[Validate]
[foundFormats, ., size, (, ), ==, fmtCount]
[foundFormats, ., size, (, )]
[foundFormats]
[fmtCount]
[Validate, ., isTrue, (, foundDescriptions, ., size, (, ), ==, fmtCount, )]
[Validate]
[foundDescriptions, ., size, (, ), ==, fmtCount]
[foundDescriptions, ., size, (, )]
[foundDescriptions]
[fmtCount]
[c, [, pos, ., getIndex, (, ), ], !=, END_FE]
[c, [, pos, ., getIndex, (, ), ]]
[c]
[pos, ., getIndex, (, )]
[pos]
[END_FE]
[new, IllegalArgumentException, (, "Unreadable format element at position ", +, start, )]
["Unreadable format element at position ", +, start]
["Unreadable format element at position "]
[start]
[stripCustom, ., append, (, c, [, pos, ., getIndex, (, ), ], )]
[stripCustom]
[c, [, pos, ., getIndex, (, ), ]]
[c]
[pos, ., getIndex, (, )]
[pos]
[next, (, pos, )]
[pos]
[super, ., applyPattern, (, stripCustom, ., toString, (, ), )]
[super]
[stripCustom, ., toString, (, )]
[stripCustom]
[toPattern]
[insertFormats, (, super, ., toPattern, (, ), ,, foundDescriptions, )]
[super, ., toPattern, (, )]
[super]
[foundDescriptions]
[containsElements, (, foundFormats, )]
[foundFormats]
[getFormats, (, )]
[0]
[foundFormats, ., iterator, (, )]
[foundFormats]
[it, ., hasNext, (, )]
[it]
[i, ++]
[i]
[it, ., next, (, )]
[it]
[f, !=, null]
[f]
[null]
[origFormats, [, i, ]]
[origFormats]
[i]
[f]
[super, ., setFormats, (, origFormats, )]
[super]
[origFormats]
[new, UnsupportedOperationException, (, )]
[new, UnsupportedOperationException, (, )]
[new, UnsupportedOperationException, (, )]
[new, UnsupportedOperationException, (, )]
[obj, ==, this]
[obj]
[this]
[true]
[obj, ==, null]
[obj]
[null]
[false]
[!, super, ., equals, (, obj, )]
[super, ., equals, (, obj, )]
[super]
[obj]
[false]
[ObjectUtils, ., notEqual, (, getClass, (, ), ,, obj, ., getClass, (, ), )]
[ObjectUtils]
[getClass, (, )]
[obj, ., getClass, (, )]
[obj]
[false]
[(, ExtendedMessageFormat, ), obj]
[obj]
[ObjectUtils, ., notEqual, (, toPattern, ,, rhs, ., toPattern, )]
[ObjectUtils]
[toPattern]
[rhs, ., toPattern]
[rhs]
[false]
[ObjectUtils, ., notEqual, (, registry, ,, rhs, ., registry, )]
[ObjectUtils]
[registry]
[rhs, ., registry]
[rhs]
[false]
[true]
[super, ., hashCode, (, )]
[super]
[result]
[HASH_SEED, *, result, +, ObjectUtils, ., hashCode, (, registry, )]
[HASH_SEED, *, result]
[HASH_SEED]
[result]
[ObjectUtils, ., hashCode, (, registry, )]
[ObjectUtils]
[registry]
[result]
[HASH_SEED, *, result, +, ObjectUtils, ., hashCode, (, toPattern, )]
[HASH_SEED, *, result]
[HASH_SEED]
[result]
[ObjectUtils, ., hashCode, (, toPattern, )]
[ObjectUtils]
[toPattern]
[result]
[registry, !=, null]
[registry]
[null]
[desc]
[null]
[desc, ., indexOf, (, START_FMT, )]
[desc]
[START_FMT]
[i, >, 0]
[i]
[0]
[name]
[desc, ., substring, (, 0, ,, i, ), ., trim, (, )]
[desc, ., substring, (, 0, ,, i, )]
[desc]
[0]
[i]
[args]
[desc, ., substring, (, i, +, 1, ), ., trim, (, )]
[desc, ., substring, (, i, +, 1, )]
[desc]
[i, +, 1]
[i]
[1]
[registry, ., get, (, name, )]
[registry]
[name]
[factory, !=, null]
[factory]
[null]
[factory, ., getFormat, (, name, ,, args, ,, getLocale, (, ), )]
[factory]
[name]
[args]
[getLocale, (, )]
[null]
[pos, ., getIndex, (, )]
[pos]
[seekNonWs, (, pattern, ,, pos, )]
[pattern]
[pos]
[new, StringBuilder, (, )]
[false]
[!, error, &&, pos, ., getIndex, (, ), <, pattern, ., length, (, )]
[!, error]
[error]
[pos, ., getIndex, (, ), <, pattern, ., length, (, )]
[pos, ., getIndex, (, )]
[pos]
[pattern, ., length, (, )]
[pattern]
[next, (, pos, )]
[pos]
[pattern, ., charAt, (, pos, ., getIndex, (, ), )]
[pattern]
[pos, ., getIndex, (, )]
[pos]
[Character, ., isWhitespace, (, c, )]
[Character]
[c]
[seekNonWs, (, pattern, ,, pos, )]
[pattern]
[pos]
[c]
[pattern, ., charAt, (, pos, ., getIndex, (, ), )]
[pattern]
[pos, ., getIndex, (, )]
[pos]
[c, !=, START_FMT, &&, c, !=, END_FE]
[c, !=, START_FMT]
[c]
[START_FMT]
[c, !=, END_FE]
[c]
[END_FE]
[error]
[true]
[(, c, ==, START_FMT, ||, c, ==, END_FE, ), &&, result, ., length, (, ), >, 0]
[(, c, ==, START_FMT, ||, c, ==, END_FE, )]
[c, ==, START_FMT, ||, c, ==, END_FE]
[c, ==, START_FMT]
[c]
[START_FMT]
[c, ==, END_FE]
[c]
[END_FE]
[result, ., length, (, ), >, 0]
[result, ., length, (, )]
[result]
[0]
[Integer, ., parseInt, (, result, ., toString, (, ), )]
[Integer]
[result, ., toString, (, )]
[result]
[error]
[!, Character, ., isDigit, (, c, )]
[Character, ., isDigit, (, c, )]
[Character]
[c]
[result, ., append, (, c, )]
[result]
[c]
[error]
[new, IllegalArgumentException, (, "Invalid format argument index at position ", +, start, +, ": ", +, pattern, ., substring, (, start, ,, pos, ., getIndex, (, ), ), )]
["Invalid format argument index at position ", +, start, +, ": ", +, pattern, ., substring, (, start, ,, pos, ., getIndex, (, ), )]
["Invalid format argument index at position ", +, start, +, ": "]
["Invalid format argument index at position ", +, start]
["Invalid format argument index at position "]
[start]
[": "]
[pattern, ., substring, (, start, ,, pos, ., getIndex, (, ), )]
[pattern]
[start]
[pos, ., getIndex, (, )]
[pos]
[new, IllegalArgumentException, (, "Unterminated format element at position ", +, start, )]
["Unterminated format element at position ", +, start]
["Unterminated format element at position "]
[start]
[pos, ., getIndex, (, )]
[pos]
[seekNonWs, (, pattern, ,, pos, )]
[pattern]
[pos]
[pos, ., getIndex, (, )]
[pos]
[1]
[pos, ., getIndex, (, ), <, pattern, ., length, (, )]
[pos, ., getIndex, (, )]
[pos]
[pattern, ., length, (, )]
[pattern]
[next, (, pos, )]
[pos]
[pattern, ., charAt, (, pos, ., getIndex, (, ), )]
[pattern]
[pos, ., getIndex, (, )]
[pos]
[START_FE]
[depth, ++]
[depth]
[END_FE]
[depth, --]
[depth]
[depth, ==, 0]
[depth]
[0]
[pattern, ., substring, (, text, ,, pos, ., getIndex, (, ), )]
[pattern]
[text]
[pos, ., getIndex, (, )]
[pos]
[QUOTE]
[getQuotedString, (, pattern, ,, pos, ,, false, )]
[pattern]
[pos]
[false]
[new, IllegalArgumentException, (, "Unterminated format element at position ", +, start, )]
["Unterminated format element at position ", +, start]
["Unterminated format element at position "]
[start]
[!, containsElements, (, customPatterns, )]
[containsElements, (, customPatterns, )]
[customPatterns]
[pattern]
[new, StringBuilder, (, pattern, ., length, (, ), *, 2, )]
[pattern, ., length, (, ), *, 2]
[pattern, ., length, (, )]
[pattern]
[2]
[new, ParsePosition, (, 0, )]
[0]
[-, 1]
[1]
[0]
[pos, ., getIndex, (, ), <, pattern, ., length, (, )]
[pos, ., getIndex, (, )]
[pos]
[pattern, ., length, (, )]
[pattern]
[pattern, ., charAt, (, pos, ., getIndex, (, ), )]
[pattern]
[pos, ., getIndex, (, )]
[pos]
[c]
[QUOTE]
[appendQuotedString, (, pattern, ,, pos, ,, sb, ,, false, )]
[pattern]
[pos]
[sb]
[false]
[START_FE]
[depth, ++]
[depth]
[depth, ==, 1]
[depth]
[1]
[fe, ++]
[fe]
[sb, ., append, (, START_FE, ), ., append, (, readArgumentIndex, (, pattern, ,, next, (, pos, ), ), )]
[sb, ., append, (, START_FE, )]
[sb]
[START_FE]
[readArgumentIndex, (, pattern, ,, next, (, pos, ), )]
[pattern]
[next, (, pos, )]
[pos]
[customPatterns, ., get, (, fe, )]
[customPatterns]
[fe]
[customPattern, !=, null]
[customPattern]
[null]
[sb, ., append, (, START_FMT, ), ., append, (, customPattern, )]
[sb, ., append, (, START_FMT, )]
[sb]
[START_FMT]
[customPattern]
[END_FE]
[depth, --]
[depth]
[sb, ., append, (, c, )]
[sb]
[c]
[next, (, pos, )]
[pos]
[sb, ., toString, (, )]
[sb]
[0]
[pattern, ., toCharArray, (, )]
[pattern]
[len]
[StrMatcher, ., splitMatcher, (, ), ., isMatch, (, buffer, ,, pos, ., getIndex, (, ), )]
[StrMatcher, ., splitMatcher, (, )]
[StrMatcher]
[buffer]
[pos, ., getIndex, (, )]
[pos]
[pos, ., setIndex, (, pos, ., getIndex, (, ), +, len, )]
[pos]
[pos, ., getIndex, (, ), +, len]
[pos, ., getIndex, (, )]
[pos]
[len]
[len, >, 0, &&, pos, ., getIndex, (, ), <, pattern, ., length, (, )]
[len, >, 0]
[len]
[0]
[pos, ., getIndex, (, ), <, pattern, ., length, (, )]
[pos, ., getIndex, (, )]
[pos]
[pattern, ., length, (, )]
[pattern]
[pos, ., setIndex, (, pos, ., getIndex, (, ), +, 1, )]
[pos]
[pos, ., getIndex, (, ), +, 1]
[pos, ., getIndex, (, )]
[pos]
[1]
[pos]
[pos, ., getIndex, (, )]
[pos]
[pattern, ., toCharArray, (, )]
[pattern]
[escapingOn, &&, c, [, start, ], ==, QUOTE]
[escapingOn]
[c, [, start, ], ==, QUOTE]
[c, [, start, ]]
[c]
[start]
[QUOTE]
[next, (, pos, )]
[pos]
[appendTo, ==, null, ?, null, :, appendTo, ., append, (, QUOTE, )]
[appendTo, ==, null]
[appendTo]
[null]
[null]
[appendTo, ., append, (, QUOTE, )]
[appendTo]
[QUOTE]
[start]
[pos, ., getIndex, (, )]
[pos]
[i, <, pattern, ., length, (, )]
[i]
[pattern, ., length, (, )]
[pattern]
[i, ++]
[i]
[escapingOn, &&, pattern, ., substring, (, i, ), ., startsWith, (, ESCAPED_QUOTE, )]
[escapingOn]
[pattern, ., substring, (, i, ), ., startsWith, (, ESCAPED_QUOTE, )]
[pattern, ., substring, (, i, )]
[pattern]
[i]
[ESCAPED_QUOTE]
[appendTo, ., append, (, c, ,, lastHold, ,, pos, ., getIndex, (, ), -, lastHold, ), ., append, (, QUOTE, )]
[appendTo, ., append, (, c, ,, lastHold, ,, pos, ., getIndex, (, ), -, lastHold, )]
[appendTo]
[c]
[lastHold]
[pos, ., getIndex, (, ), -, lastHold]
[pos, ., getIndex, (, )]
[pos]
[lastHold]
[QUOTE]
[pos, ., setIndex, (, i, +, ESCAPED_QUOTE, ., length, (, ), )]
[pos]
[i, +, ESCAPED_QUOTE, ., length, (, )]
[i]
[ESCAPED_QUOTE, ., length, (, )]
[ESCAPED_QUOTE]
[lastHold]
[pos, ., getIndex, (, )]
[pos]
[c, [, pos, ., getIndex, (, ), ]]
[c]
[pos, ., getIndex, (, )]
[pos]
[QUOTE]
[next, (, pos, )]
[pos]
[appendTo, ==, null, ?, null, :, appendTo, ., append, (, c, ,, lastHold, ,, pos, ., getIndex, (, ), -, lastHold, )]
[appendTo, ==, null]
[appendTo]
[null]
[null]
[appendTo, ., append, (, c, ,, lastHold, ,, pos, ., getIndex, (, ), -, lastHold, )]
[appendTo]
[c]
[lastHold]
[pos, ., getIndex, (, ), -, lastHold]
[pos, ., getIndex, (, )]
[pos]
[lastHold]
[next, (, pos, )]
[pos]
[new, IllegalArgumentException, (, "Unterminated quoted string at position ", +, start, )]
["Unterminated quoted string at position ", +, start]
["Unterminated quoted string at position "]
[start]
[appendQuotedString, (, pattern, ,, pos, ,, null, ,, escapingOn, )]
[pattern]
[pos]
[null]
[escapingOn]
[coll, ==, null, ||, coll, ., isEmpty, (, )]
[coll, ==, null]
[coll]
[null]
[coll, ., isEmpty, (, )]
[coll]
[false]
[coll]
[name, !=, null]
[name]
[null]
[true]
[false]
