[compiler]
[checkDuplicatedMessages]
[style]
[idGenerator]
[IR, ., getprop, (, IR, ., name, (, "chrome", ), ,, IR, ., string, (, "i18n", ), )]
[IR]
[IR, ., name, (, "chrome", )]
[IR]
["chrome"]
[IR, ., string, (, "i18n", )]
[IR]
["i18n"]
[IR, ., getprop, (, chromeI18n, ,, IR, ., string, (, "getMessage", ), )]
[IR]
[chromeI18n]
[IR, ., string, (, "getMessage", )]
[IR]
["getMessage"]
[IR, ., call, (, getMessage, ,, IR, ., string, (, messageId, ), )]
[IR]
[getMessage]
[IR, ., string, (, messageId, )]
[IR]
[messageId]
[definition, ., getMessageNode, (, )]
[definition]
[getNewValueNode, (, msgNode, ,, message, )]
[msgNode]
[message]
[newValue, ., copyInformationFromForTree, (, msgNode, )]
[newValue]
[msgNode]
[definition, ., getMessageParentNode, (, ), ., replaceChild, (, msgNode, ,, newValue, )]
[definition, ., getMessageParentNode, (, )]
[definition]
[msgNode]
[newValue]
[compiler, ., reportCodeChange, (, )]
[compiler]
[compiler, ., report, (, JSError, ., make, (, message, ., getSourceName, (, ), ,, e, ., getNode, (, ), ,, MESSAGE_TREE_MALFORMED, ,, e, ., getMessage, (, ), ), )]
[compiler]
[JSError, ., make, (, message, ., getSourceName, (, ), ,, e, ., getNode, (, ), ,, MESSAGE_TREE_MALFORMED, ,, e, ., getMessage, (, ), )]
[JSError]
[message, ., getSourceName, (, )]
[message]
[e, ., getNode, (, )]
[e]
[MESSAGE_TREE_MALFORMED]
[e, ., getMessage, (, )]
[e]
[getChromeI18nGetMessageNode, (, message, ., getId, (, ), )]
[message, ., getId, (, )]
[message]
[!, message, ., placeholders, (, ), ., isEmpty, (, )]
[message, ., placeholders, (, ), ., isEmpty, (, )]
[message, ., placeholders, (, )]
[message]
[origNode, ., getLastChild, (, )]
[origNode]
[checkNode, (, placeholderValues, ,, Token, ., OBJECTLIT, )]
[placeholderValues]
[Token, ., OBJECTLIT]
[Token]
[Lists, ., newArrayList, (, )]
[Lists]
[message, ., parts, (, )]
[message]
[cs, instanceof, PlaceholderReference]
[cs]
[(, (, PlaceholderReference, ), cs, ), ., getName, (, )]
[(, (, PlaceholderReference, ), cs, )]
[(, PlaceholderReference, ), cs]
[cs]
[placeholderNames, ., add, (, placeholderName, )]
[placeholderNames]
[placeholderName]
[Collections, ., sort, (, placeholderNames, )]
[Collections]
[placeholderNames]
[IR, ., arraylit, (, )]
[IR]
[placeholderNames]
[getPlaceholderValue, (, placeholderValues, ,, name, )]
[placeholderValues]
[name]
[value, ==, null]
[value]
[null]
[new, MalformedException, (, "No value was provided for placeholder ", +, name, ,, origNode, )]
["No value was provided for placeholder ", +, name]
["No value was provided for placeholder "]
[name]
[origNode]
[placeholderValueArray, ., addChildToBack, (, value, )]
[placeholderValueArray]
[value]
[newValueNode, ., addChildToBack, (, placeholderValueArray, )]
[newValueNode]
[placeholderValueArray]
[newValueNode, ., copyInformationFromForTree, (, origNode, )]
[newValueNode]
[origNode]
[newValueNode]
[placeholderValues, ., children, (, )]
[placeholderValues]
[key, ., getString, (, ), ., equals, (, placeholderName, )]
[key, ., getString, (, )]
[key]
[placeholderName]
[key, ., getFirstChild, (, ), ., cloneTree, (, )]
[key, ., getFirstChild, (, )]
[key]
[null]
