[null]
[Sets, ., newHashSet, (, )]
[Sets]
[Sets, ., newHashSet, (, )]
[Sets]
[DiagnosticType, ., warning, (, "JSC_UNDEFINED_NAME", ,, "{0} is never defined", )]
[DiagnosticType]
["JSC_UNDEFINED_NAME"]
["{0} is never defined"]
[DiagnosticType, ., warning, (, "JSC_NAME_DEFINED_LATE", ,, "{0} defined before its owner. {1} is defined at {2}:{3}", )]
[DiagnosticType]
["JSC_NAME_DEFINED_LATE"]
["{0} defined before its owner. {1} is defined at {2}:{3}"]
[DiagnosticType, ., disabled, (, "JSC_STRICT_MODULE_DEP_QNAME", ,, "module {0} cannot reference {2}, defined in ", +, "module {1}", )]
[DiagnosticType]
["JSC_STRICT_MODULE_DEP_QNAME"]
["module {0} cannot reference {2}, defined in ", +, "module {1}"]
["module {0} cannot reference {2}, defined in "]
["module {1}"]
[this, ., compiler]
[this]
[compiler]
[this, ., convention]
[this]
[compiler, ., getCodingConvention, (, )]
[compiler]
[this, ., level]
[this]
[level]
[Preconditions, ., checkArgument, (, namespace, ., hasExternsRoot, (, ), )]
[Preconditions]
[namespace, ., hasExternsRoot, (, )]
[namespace]
[this, ., namespace]
[this]
[namespace]
[this]
[namespace, ==, null]
[namespace]
[null]
[namespace]
[new, GlobalNamespace, (, compiler, ,, externs, ,, root, )]
[compiler]
[externs]
[root]
[Preconditions, ., checkState, (, namespace, ., hasExternsRoot, (, ), )]
[Preconditions]
[namespace, ., hasExternsRoot, (, )]
[namespace]
[findPrototypeProps, (, "Object", ,, objectPrototypeProps, )]
["Object"]
[objectPrototypeProps]
[findPrototypeProps, (, "Function", ,, functionPrototypeProps, )]
["Function"]
[functionPrototypeProps]
[objectPrototypeProps, ., addAll, (, convention, ., getIndirectlyDeclaredProperties, (, ), )]
[objectPrototypeProps]
[convention, ., getIndirectlyDeclaredProperties, (, )]
[convention]
[namespace, ., getNameForest, (, )]
[namespace]
[name, ., inExterns]
[name]
[checkDescendantNames, (, name, ,, name, ., globalSets, +, name, ., localSets, >, 0, )]
[name]
[name, ., globalSets, +, name, ., localSets, >, 0]
[name, ., globalSets, +, name, ., localSets]
[name, ., globalSets]
[name]
[name, ., localSets]
[name]
[0]
[namespace, ., getSlot, (, type, )]
[namespace]
[type]
[slot, !=, null]
[slot]
[null]
[slot, ., getRefs, (, )]
[slot]
[ref, ., type, ==, Ref, ., Type, ., PROTOTYPE_GET]
[ref, ., type]
[ref]
[Ref, ., Type, ., PROTOTYPE_GET]
[Ref, ., Type]
[Ref]
[ref, ., getNode, (, ), ., getParent, (, ), ., getParent, (, )]
[ref, ., getNode, (, ), ., getParent, (, )]
[ref, ., getNode, (, )]
[ref]
[fullName, ., isGetProp, (, )]
[fullName]
[props, ., add, (, fullName, ., getLastChild, (, ), ., getString, (, ), )]
[props]
[fullName, ., getLastChild, (, ), ., getString, (, )]
[fullName, ., getLastChild, (, )]
[fullName]
[name, ., props, !=, null]
[name, ., props]
[name]
[null]
[name, ., props]
[name]
[false]
[nameIsDefined]
[propIsDefined]
[(, !, propertyMustBeInitializedByFullName, (, prop, ), ||, prop, ., globalSets, +, prop, ., localSets, >, 0, )]
[!, propertyMustBeInitializedByFullName, (, prop, ), ||, prop, ., globalSets, +, prop, ., localSets, >, 0]
[!, propertyMustBeInitializedByFullName, (, prop, )]
[propertyMustBeInitializedByFullName, (, prop, )]
[prop]
[prop, ., globalSets, +, prop, ., localSets, >, 0]
[prop, ., globalSets, +, prop, ., localSets]
[prop, ., globalSets]
[prop]
[prop, ., localSets]
[prop]
[0]
[validateName, (, prop, ,, propIsDefined, )]
[prop]
[propIsDefined]
[checkDescendantNames, (, prop, ,, propIsDefined, )]
[prop]
[propIsDefined]
[name, ., getDeclaration, (, )]
[name]
[name, ., parent]
[name]
[compiler, ., getModuleGraph, (, )]
[compiler]
[name, ., getRefs, (, )]
[name]
[ref, ., getNode, (, ), ., getParent, (, ), ., isExprResult, (, )]
[ref, ., getNode, (, ), ., getParent, (, )]
[ref, ., getNode, (, )]
[ref]
[!, isDefined, &&, !, isTypedef, (, ref, )]
[!, isDefined]
[isDefined]
[!, isTypedef, (, ref, )]
[isTypedef, (, ref, )]
[ref]
[!, isGlobalExpr]
[isGlobalExpr]
[reportRefToUndefinedName, (, name, ,, ref, )]
[name]
[ref]
[declaration, !=, null, &&, ref, ., getModule, (, ), !=, declaration, ., getModule, (, ), &&, !, moduleGraph, ., dependsOn, (, ref, ., getModule, (, ), ,, declaration, ., getModule, (, ), )]
[declaration, !=, null, &&, ref, ., getModule, (, ), !=, declaration, ., getModule, (, )]
[declaration, !=, null]
[declaration]
[null]
[ref, ., getModule, (, ), !=, declaration, ., getModule, (, )]
[ref, ., getModule, (, )]
[ref]
[declaration, ., getModule, (, )]
[declaration]
[!, moduleGraph, ., dependsOn, (, ref, ., getModule, (, ), ,, declaration, ., getModule, (, ), )]
[moduleGraph, ., dependsOn, (, ref, ., getModule, (, ), ,, declaration, ., getModule, (, ), )]
[moduleGraph]
[ref, ., getModule, (, )]
[ref]
[declaration, ., getModule, (, )]
[declaration]
[reportBadModuleReference, (, name, ,, ref, )]
[name]
[ref]
[ref, ., scope, ., isGlobal, (, )]
[ref, ., scope]
[ref]
[(, ref, ., type, ==, Ref, ., Type, ., PROTOTYPE_GET, )]
[ref, ., type, ==, Ref, ., Type, ., PROTOTYPE_GET]
[ref, ., type]
[ref]
[Ref, ., Type, ., PROTOTYPE_GET]
[Ref, ., Type]
[Ref]
[isPrototypeGet, ?, name, :, parent]
[isPrototypeGet]
[name]
[parent]
[owner, !=, null, &&, owner, ., getDeclaration, (, ), !=, null, &&, owner, ., localSets, ==, 0]
[owner, !=, null, &&, owner, ., getDeclaration, (, ), !=, null]
[owner, !=, null]
[owner]
[null]
[owner, ., getDeclaration, (, ), !=, null]
[owner, ., getDeclaration, (, )]
[owner]
[null]
[owner, ., localSets, ==, 0]
[owner, ., localSets]
[owner]
[0]
[singleGlobalParentDecl, &&, owner, ., getDeclaration, (, ), ., preOrderIndex, >, ref, ., preOrderIndex]
[singleGlobalParentDecl]
[owner, ., getDeclaration, (, ), ., preOrderIndex, >, ref, ., preOrderIndex]
[owner, ., getDeclaration, (, ), ., preOrderIndex]
[owner, ., getDeclaration, (, )]
[owner]
[ref, ., preOrderIndex]
[ref]
[isPrototypeGet, ?, name, ., getFullName, (, ), +, ".prototype", :, name, ., getFullName, (, )]
[isPrototypeGet]
[name, ., getFullName, (, ), +, ".prototype"]
[name, ., getFullName, (, )]
[name]
[".prototype"]
[name, ., getFullName, (, )]
[name]
[compiler, ., report, (, JSError, ., make, (, ref, ., source, ., getName, (, ), ,, ref, ., node, ,, NAME_DEFINED_LATE_WARNING, ,, refName, ,, owner, ., getFullName, (, ), ,, owner, ., getDeclaration, (, ), ., source, ., getName, (, ), ,, String, ., valueOf, (, owner, ., getDeclaration, (, ), ., node, ., getLineno, (, ), ), ), )]
[compiler]
[JSError, ., make, (, ref, ., source, ., getName, (, ), ,, ref, ., node, ,, NAME_DEFINED_LATE_WARNING, ,, refName, ,, owner, ., getFullName, (, ), ,, owner, ., getDeclaration, (, ), ., source, ., getName, (, ), ,, String, ., valueOf, (, owner, ., getDeclaration, (, ), ., node, ., getLineno, (, ), ), )]
[JSError]
[ref, ., source, ., getName, (, )]
[ref, ., source]
[ref]
[ref, ., node]
[ref]
[NAME_DEFINED_LATE_WARNING]
[refName]
[owner, ., getFullName, (, )]
[owner]
[owner, ., getDeclaration, (, ), ., source, ., getName, (, )]
[owner, ., getDeclaration, (, ), ., source]
[owner, ., getDeclaration, (, )]
[owner]
[String, ., valueOf, (, owner, ., getDeclaration, (, ), ., node, ., getLineno, (, ), )]
[String]
[owner, ., getDeclaration, (, ), ., node, ., getLineno, (, )]
[owner, ., getDeclaration, (, ), ., node]
[owner, ., getDeclaration, (, )]
[owner]
[ref, ., node, ., getParent, (, )]
[ref, ., node]
[ref]
[parent, ., isExprResult, (, )]
[parent]
[ref, ., node, ., getJSDocInfo, (, )]
[ref, ., node]
[ref]
[info, !=, null, &&, info, ., hasTypedefType, (, )]
[info, !=, null]
[info]
[null]
[info, ., hasTypedefType, (, )]
[info]
[true]
[false]
[compiler, ., report, (, JSError, ., make, (, ref, ., source, ., getName, (, ), ,, ref, ., node, ,, STRICT_MODULE_DEP_QNAME, ,, ref, ., getModule, (, ), ., getName, (, ), ,, name, ., getDeclaration, (, ), ., getModule, (, ), ., getName, (, ), ,, name, ., getFullName, (, ), ), )]
[compiler]
[JSError, ., make, (, ref, ., source, ., getName, (, ), ,, ref, ., node, ,, STRICT_MODULE_DEP_QNAME, ,, ref, ., getModule, (, ), ., getName, (, ), ,, name, ., getDeclaration, (, ), ., getModule, (, ), ., getName, (, ), ,, name, ., getFullName, (, ), )]
[JSError]
[ref, ., source, ., getName, (, )]
[ref, ., source]
[ref]
[ref, ., node]
[ref]
[STRICT_MODULE_DEP_QNAME]
[ref, ., getModule, (, ), ., getName, (, )]
[ref, ., getModule, (, )]
[ref]
[name, ., getDeclaration, (, ), ., getModule, (, ), ., getName, (, )]
[name, ., getDeclaration, (, ), ., getModule, (, )]
[name, ., getDeclaration, (, )]
[name]
[name, ., getFullName, (, )]
[name]
[name, ., parent, !=, null, &&, name, ., parent, ., globalSets, +, name, ., parent, ., localSets, ==, 0]
[name, ., parent, !=, null]
[name, ., parent]
[name]
[null]
[name, ., parent, ., globalSets, +, name, ., parent, ., localSets, ==, 0]
[name, ., parent, ., globalSets, +, name, ., parent, ., localSets]
[name, ., parent, ., globalSets]
[name, ., parent]
[name]
[name, ., parent, ., localSets]
[name, ., parent]
[name]
[0]
[name]
[name, ., parent]
[name]
[compiler, ., report, (, JSError, ., make, (, ref, ., getSourceName, (, ), ,, ref, ., node, ,, level, ,, UNDEFINED_NAME_WARNING, ,, name, ., getFullName, (, ), ), )]
[compiler]
[JSError, ., make, (, ref, ., getSourceName, (, ), ,, ref, ., node, ,, level, ,, UNDEFINED_NAME_WARNING, ,, name, ., getFullName, (, ), )]
[JSError]
[ref, ., getSourceName, (, )]
[ref]
[ref, ., node]
[ref]
[level]
[UNDEFINED_NAME_WARNING]
[name, ., getFullName, (, )]
[name]
[name, ., parent, ==, null]
[name, ., parent]
[name]
[null]
[false]
[false]
[name, ., parent, ., aliasingGets, >, 0]
[name, ., parent, ., aliasingGets]
[name, ., parent]
[name]
[0]
[name, ., parent, ., getRefs, (, )]
[name, ., parent]
[name]
[ref, ., type, ==, Ref, ., Type, ., ALIASING_GET]
[ref, ., type]
[ref]
[Ref, ., Type, ., ALIASING_GET]
[Ref, ., Type]
[Ref]
[ref, ., getNode, (, ), ., getParent, (, )]
[ref, ., getNode, (, )]
[ref]
[aliaser, ., isCall, (, ), &&, (, convention, ., getClassesDefinedByCall, (, aliaser, ), !=, null, ||, convention, ., getSingletonGetterClassName, (, aliaser, ), !=, null, )]
[aliaser, ., isCall, (, )]
[aliaser]
[(, convention, ., getClassesDefinedByCall, (, aliaser, ), !=, null, ||, convention, ., getSingletonGetterClassName, (, aliaser, ), !=, null, )]
[convention, ., getClassesDefinedByCall, (, aliaser, ), !=, null, ||, convention, ., getSingletonGetterClassName, (, aliaser, ), !=, null]
[convention, ., getClassesDefinedByCall, (, aliaser, ), !=, null]
[convention, ., getClassesDefinedByCall, (, aliaser, )]
[convention]
[aliaser]
[null]
[convention, ., getSingletonGetterClassName, (, aliaser, ), !=, null]
[convention, ., getSingletonGetterClassName, (, aliaser, )]
[convention]
[aliaser]
[null]
[!, isKnownAlias]
[isKnownAlias]
[parentIsAliased]
[true]
[parentIsAliased]
[false]
[objectPrototypeProps, ., contains, (, name, ., getBaseName, (, ), )]
[objectPrototypeProps]
[name, ., getBaseName, (, )]
[name]
[false]
[name, ., parent, ., type, ==, Name, ., Type, ., OBJECTLIT]
[name, ., parent, ., type]
[name, ., parent]
[name]
[Name, ., Type, ., OBJECTLIT]
[Name, ., Type]
[Name]
[true]
[name, ., parent, ., type, ==, Name, ., Type, ., FUNCTION, &&, name, ., parent, ., isDeclaredType, (, ), &&, !, functionPrototypeProps, ., contains, (, name, ., getBaseName, (, ), )]
[name, ., parent, ., type, ==, Name, ., Type, ., FUNCTION, &&, name, ., parent, ., isDeclaredType, (, )]
[name, ., parent, ., type, ==, Name, ., Type, ., FUNCTION]
[name, ., parent, ., type]
[name, ., parent]
[name]
[Name, ., Type, ., FUNCTION]
[Name, ., Type]
[Name]
[name, ., parent, ., isDeclaredType, (, )]
[name, ., parent]
[name]
[!, functionPrototypeProps, ., contains, (, name, ., getBaseName, (, ), )]
[functionPrototypeProps, ., contains, (, name, ., getBaseName, (, ), )]
[functionPrototypeProps]
[name, ., getBaseName, (, )]
[name]
[true]
[false]
