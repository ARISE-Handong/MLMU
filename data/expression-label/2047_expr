[this, ., type]
[this]
[type]
[this, ., value]
[this]
[value]
[new, PropertyInfo, (, null, ,, null, )]
[null]
[null]
[Maps, ., newHashMap, (, )]
[Maps]
[this, ., compiler]
[this]
[compiler]
[buildInvalidatingTypeSet, (, )]
[compiler, ., getTypeRegistry, (, )]
[compiler]
[invalidatingTypes]
[Sets, ., newHashSet, (, registry, ., getNativeType, (, JSTypeNative, ., ALL_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., NO_OBJECT_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., NO_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., NULL_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_FUNCTION_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_PROTOTYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., GLOBAL_THIS, ), ,, registry, ., getNativeType, (, JSTypeNative, ., OBJECT_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., OBJECT_PROTOTYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., OBJECT_FUNCTION_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., TOP_LEVEL_PROTOTYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., UNKNOWN_TYPE, ), )]
[Sets]
[registry, ., getNativeType, (, JSTypeNative, ., ALL_TYPE, )]
[registry]
[JSTypeNative, ., ALL_TYPE]
[JSTypeNative]
[registry, ., getNativeType, (, JSTypeNative, ., NO_OBJECT_TYPE, )]
[registry]
[JSTypeNative, ., NO_OBJECT_TYPE]
[JSTypeNative]
[registry, ., getNativeType, (, JSTypeNative, ., NO_TYPE, )]
[registry]
[JSTypeNative, ., NO_TYPE]
[JSTypeNative]
[registry, ., getNativeType, (, JSTypeNative, ., NULL_TYPE, )]
[registry]
[JSTypeNative, ., NULL_TYPE]
[JSTypeNative]
[registry, ., getNativeType, (, JSTypeNative, ., VOID_TYPE, )]
[registry]
[JSTypeNative, ., VOID_TYPE]
[JSTypeNative]
[registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_FUNCTION_TYPE, )]
[registry]
[JSTypeNative, ., FUNCTION_FUNCTION_TYPE]
[JSTypeNative]
[registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, )]
[registry]
[JSTypeNative, ., FUNCTION_INSTANCE_TYPE]
[JSTypeNative]
[registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_PROTOTYPE, )]
[registry]
[JSTypeNative, ., FUNCTION_PROTOTYPE]
[JSTypeNative]
[registry, ., getNativeType, (, JSTypeNative, ., GLOBAL_THIS, )]
[registry]
[JSTypeNative, ., GLOBAL_THIS]
[JSTypeNative]
[registry, ., getNativeType, (, JSTypeNative, ., OBJECT_TYPE, )]
[registry]
[JSTypeNative, ., OBJECT_TYPE]
[JSTypeNative]
[registry, ., getNativeType, (, JSTypeNative, ., OBJECT_PROTOTYPE, )]
[registry]
[JSTypeNative, ., OBJECT_PROTOTYPE]
[JSTypeNative]
[registry, ., getNativeType, (, JSTypeNative, ., OBJECT_FUNCTION_TYPE, )]
[registry]
[JSTypeNative, ., OBJECT_FUNCTION_TYPE]
[JSTypeNative]
[registry, ., getNativeType, (, JSTypeNative, ., TOP_LEVEL_PROTOTYPE, )]
[registry]
[JSTypeNative, ., TOP_LEVEL_PROTOTYPE]
[JSTypeNative]
[registry, ., getNativeType, (, JSTypeNative, ., UNKNOWN_TYPE, )]
[registry]
[JSTypeNative, ., UNKNOWN_TYPE]
[JSTypeNative]
[compiler, ., getTypeValidator, (, ), ., getMismatches, (, )]
[compiler, ., getTypeValidator, (, )]
[compiler]
[addInvalidatingType, (, mis, ., typeA, )]
[mis, ., typeA]
[mis]
[addInvalidatingType, (, mis, ., typeB, )]
[mis, ., typeB]
[mis]
[type]
[type, ., restrictByNotNullOrUndefined, (, )]
[type]
[type, ., isUnionType, (, )]
[type]
[type, ., toMaybeUnionType, (, ), ., getAlternates, (, )]
[type, ., toMaybeUnionType, (, )]
[type]
[addInvalidatingType, (, alt, )]
[alt]
[invalidatingTypes, ., add, (, type, )]
[invalidatingTypes]
[type]
[ObjectType, ., cast, (, type, )]
[ObjectType]
[type]
[objType, !=, null, &&, objType, ., isInstanceType, (, )]
[objType, !=, null]
[objType]
[null]
[objType, ., isInstanceType, (, )]
[objType]
[invalidatingTypes, ., add, (, objType, ., getImplicitPrototype, (, ), )]
[invalidatingTypes]
[objType, ., getImplicitPrototype, (, )]
[objType]
[type, ., isUnionType, (, )]
[type]
[type]
[type, ., restrictByNotNullOrUndefined, (, )]
[type]
[type, ., isUnionType, (, )]
[type]
[type, ., toMaybeUnionType, (, ), ., getAlternates, (, )]
[type, ., toMaybeUnionType, (, )]
[type]
[isInvalidatingType, (, alt, )]
[alt]
[true]
[false]
[ObjectType, ., cast, (, type, )]
[ObjectType]
[type]
[objType, ==, null, ||, invalidatingTypes, ., contains, (, objType, ), ||, !, objType, ., hasReferenceName, (, ), ||, objType, ., isUnknownType, (, ), ||, objType, ., isEmptyType, (, ), ||, objType, ., isEnumType, (, ), ||, objType, ., autoboxesTo, (, ), !=, null]
[objType, ==, null, ||, invalidatingTypes, ., contains, (, objType, ), ||, !, objType, ., hasReferenceName, (, ), ||, objType, ., isUnknownType, (, ), ||, objType, ., isEmptyType, (, ), ||, objType, ., isEnumType, (, )]
[objType, ==, null, ||, invalidatingTypes, ., contains, (, objType, ), ||, !, objType, ., hasReferenceName, (, ), ||, objType, ., isUnknownType, (, ), ||, objType, ., isEmptyType, (, )]
[objType, ==, null, ||, invalidatingTypes, ., contains, (, objType, ), ||, !, objType, ., hasReferenceName, (, ), ||, objType, ., isUnknownType, (, )]
[objType, ==, null, ||, invalidatingTypes, ., contains, (, objType, ), ||, !, objType, ., hasReferenceName, (, )]
[objType, ==, null, ||, invalidatingTypes, ., contains, (, objType, )]
[objType, ==, null]
[objType]
[null]
[invalidatingTypes, ., contains, (, objType, )]
[invalidatingTypes]
[objType]
[!, objType, ., hasReferenceName, (, )]
[objType, ., hasReferenceName, (, )]
[objType]
[objType, ., isUnknownType, (, )]
[objType]
[objType, ., isEmptyType, (, )]
[objType]
[objType, ., isEnumType, (, )]
[objType]
[objType, ., autoboxesTo, (, ), !=, null]
[objType, ., autoboxesTo, (, )]
[objType]
[null]
[n, ., getJSType, (, )]
[n]
[jsType, ==, null]
[jsType]
[null]
[compiler, ., getTypeRegistry, (, ), ., getNativeType, (, JSTypeNative, ., UNKNOWN_TYPE, )]
[compiler, ., getTypeRegistry, (, )]
[compiler]
[JSTypeNative, ., UNKNOWN_TYPE]
[JSTypeNative]
[jsType]
[NodeTraversal, ., traverseRoots, (, compiler, ,, new, GatherCandidates, (, ), ,, externs, ,, root, )]
[NodeTraversal]
[compiler]
[new, GatherCandidates, (, )]
[externs]
[root]
[NodeTraversal, ., traverseRoots, (, compiler, ,, new, ReplaceCandidates, (, ), ,, externs, ,, root, )]
[NodeTraversal]
[compiler]
[new, ReplaceCandidates, (, )]
[externs]
[root]
[false]
[null]
[n, ., isGetProp, (, )]
[n]
[propName]
[n, ., getLastChild, (, ), ., getString, (, )]
[n, ., getLastChild, (, )]
[n]
[t, ., getInput, (, ), ., isExtern, (, )]
[t, ., getInput, (, )]
[t]
[invalidatingPropRef]
[true]
[parent, ., isAssign, (, )]
[parent]
[invalidatingPropRef]
[!, maybeCandidateDefinition, (, t, ,, n, ,, parent, )]
[maybeCandidateDefinition, (, t, ,, n, ,, parent, )]
[t]
[n]
[parent]
[NodeUtil, ., isLValue, (, n, )]
[NodeUtil]
[n]
[invalidatingPropRef]
[true]
[parent, ., isDelProp, (, )]
[parent]
[invalidatingPropRef]
[true]
[invalidatingPropRef]
[false]
[n, ., isStringKey, (, )]
[n]
[propName]
[n, ., getString, (, )]
[n]
[t, ., getInput, (, ), ., isExtern, (, )]
[t, ., getInput, (, )]
[t]
[invalidatingPropRef]
[true]
[invalidatingPropRef]
[true]
[invalidatingPropRef]
[Preconditions, ., checkNotNull, (, propName, )]
[Preconditions]
[propName]
[invalidateProperty, (, propName, )]
[propName]
[Preconditions, ., checkState, (, n, ., isGetProp, (, ), &&, parent, ., isAssign, (, ), )]
[Preconditions]
[n, ., isGetProp, (, ), &&, parent, ., isAssign, (, )]
[n, ., isGetProp, (, )]
[n]
[parent, ., isAssign, (, )]
[parent]
[false]
[n, ., getFirstChild, (, )]
[n]
[n, ., getLastChild, (, ), ., getString, (, )]
[n, ., getLastChild, (, )]
[n]
[parent, ., getLastChild, (, )]
[parent]
[src, ., isThis, (, )]
[src]
[inContructor, (, t, )]
[t]
[isCandidate]
[maybeStoreCandidateValue, (, getJSType, (, src, ), ,, propName, ,, value, )]
[getJSType, (, src, )]
[src]
[propName]
[value]
[t, ., inGlobalScope, (, ), &&, src, ., isGetProp, (, ), &&, src, ., getLastChild, (, ), ., getString, (, ), ., equals, (, "prototype", )]
[t, ., inGlobalScope, (, ), &&, src, ., isGetProp, (, )]
[t, ., inGlobalScope, (, )]
[t]
[src, ., isGetProp, (, )]
[src]
[src, ., getLastChild, (, ), ., getString, (, ), ., equals, (, "prototype", )]
[src, ., getLastChild, (, ), ., getString, (, )]
[src, ., getLastChild, (, )]
[src]
["prototype"]
[maybeGetInstanceTypeFromPrototypeRef, (, src, )]
[src]
[instanceType, !=, null]
[instanceType]
[null]
[isCandidate]
[maybeStoreCandidateValue, (, instanceType, ,, propName, ,, value, )]
[instanceType]
[propName]
[value]
[isCandidate]
[getJSType, (, src, ., getFirstChild, (, ), )]
[src, ., getFirstChild, (, )]
[src]
[ownerType, ., isFunctionType, (, ), &&, ownerType, ., isConstructor, (, )]
[ownerType, ., isFunctionType, (, )]
[ownerType]
[ownerType, ., isConstructor, (, )]
[ownerType]
[(, (, FunctionType, ), ownerType, )]
[(, FunctionType, ), ownerType]
[ownerType]
[functionType, ., getInstanceType, (, )]
[functionType]
[null]
[props, ., put, (, propName, ,, INVALIDATED, )]
[props]
[propName]
[INVALIDATED]
[Preconditions, ., checkNotNull, (, value, )]
[Preconditions]
[value]
[!, props, ., containsKey, (, propName, ), &&, !, isInvalidatingType, (, type, ), &&, NodeUtil, ., isImmutableValue, (, value, ), &&, NodeUtil, ., isExecutedExactlyOnce, (, value, )]
[!, props, ., containsKey, (, propName, ), &&, !, isInvalidatingType, (, type, ), &&, NodeUtil, ., isImmutableValue, (, value, )]
[!, props, ., containsKey, (, propName, ), &&, !, isInvalidatingType, (, type, )]
[!, props, ., containsKey, (, propName, )]
[props, ., containsKey, (, propName, )]
[props]
[propName]
[!, isInvalidatingType, (, type, )]
[isInvalidatingType, (, type, )]
[type]
[NodeUtil, ., isImmutableValue, (, value, )]
[NodeUtil]
[value]
[NodeUtil, ., isExecutedExactlyOnce, (, value, )]
[NodeUtil]
[value]
[props, ., put, (, propName, ,, new, PropertyInfo, (, type, ,, value, ), )]
[props]
[propName]
[new, PropertyInfo, (, type, ,, value, )]
[type]
[value]
[true]
[false]
[t, ., getScopeRoot, (, )]
[t]
[NodeUtil, ., getBestJSDocInfo, (, root, )]
[NodeUtil]
[root]
[info, !=, null, &&, info, ., isConstructor, (, )]
[info, !=, null]
[info]
[null]
[info, ., isConstructor, (, )]
[info]
[n, ., isGetProp, (, ), &&, !, NodeUtil, ., isLValue, (, n, )]
[n, ., isGetProp, (, )]
[n]
[!, NodeUtil, ., isLValue, (, n, )]
[NodeUtil, ., isLValue, (, n, )]
[NodeUtil]
[n]
[n, ., getFirstChild, (, )]
[n]
[n, ., getLastChild, (, ), ., getString, (, )]
[n, ., getLastChild, (, )]
[n]
[props, ., get, (, propName, )]
[props]
[propName]
[info, !=, null, &&, info, !=, INVALIDATED, &&, isMatchingType, (, target, ,, info, ., type, )]
[info, !=, null, &&, info, !=, INVALIDATED]
[info, !=, null]
[info]
[null]
[info, !=, INVALIDATED]
[info]
[INVALIDATED]
[isMatchingType, (, target, ,, info, ., type, )]
[target]
[info, ., type]
[info]
[info, ., value, ., cloneTree, (, )]
[info, ., value]
[info]
[NodeUtil, ., mayHaveSideEffects, (, n, ., getFirstChild, (, ), ,, compiler, )]
[NodeUtil]
[n, ., getFirstChild, (, )]
[n]
[compiler]
[replacement]
[IR, ., comma, (, n, ., removeFirstChild, (, ), ,, replacement, ), ., srcref, (, n, )]
[IR, ., comma, (, n, ., removeFirstChild, (, ), ,, replacement, )]
[IR]
[n, ., removeFirstChild, (, )]
[n]
[replacement]
[n]
[parent, ., replaceChild, (, n, ,, replacement, )]
[parent]
[n]
[replacement]
[compiler, ., reportCodeChange, (, )]
[compiler]
[src]
[src, ., restrictByNotNullOrUndefined, (, )]
[src]
[getJSType, (, n, ), ., restrictByNotNullOrUndefined, (, )]
[getJSType, (, n, )]
[n]
[!, isInvalidatingType, (, dest, ), &&, dest, ., isSubtype, (, src, )]
[!, isInvalidatingType, (, dest, )]
[isInvalidatingType, (, dest, )]
[dest]
[dest, ., isSubtype, (, src, )]
[dest]
[src]
[true]
[false]
