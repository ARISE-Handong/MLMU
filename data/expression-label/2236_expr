[3698345477322391456L]
[new, Range, (, 0.0, ,, 1.0, )]
[0.0]
[1.0]
[true]
[false]
[0.00000001]
[0.05]
[0.05]
[true]
[500]
[label]
[this, ., positiveArrowVisible]
[this]
[false]
[this, ., negativeArrowVisible]
[this]
[false]
[this, ., range]
[this]
[DEFAULT_RANGE]
[this, ., autoRange]
[this]
[DEFAULT_AUTO_RANGE]
[this, ., defaultAutoRange]
[this]
[DEFAULT_RANGE]
[this, ., inverted]
[this]
[DEFAULT_INVERTED]
[this, ., autoRangeMinimumSize]
[this]
[DEFAULT_AUTO_RANGE_MINIMUM_SIZE]
[this, ., lowerMargin]
[this]
[DEFAULT_LOWER_MARGIN]
[this, ., upperMargin]
[this]
[DEFAULT_UPPER_MARGIN]
[this, ., fixedAutoRange]
[this]
[0.0]
[this, ., autoTickUnitSelection]
[this]
[DEFAULT_AUTO_TICK_UNIT_SELECTION]
[this, ., standardTickUnits]
[this]
[standardTickUnits]
[new, Polygon, (, )]
[p1, ., addPoint, (, 0, ,, 0, )]
[p1]
[0]
[0]
[p1, ., addPoint, (, -, 2, ,, 2, )]
[p1]
[-, 2]
[2]
[2]
[p1, ., addPoint, (, 2, ,, 2, )]
[p1]
[2]
[2]
[this, ., upArrow]
[this]
[p1]
[new, Polygon, (, )]
[p2, ., addPoint, (, 0, ,, 0, )]
[p2]
[0]
[0]
[p2, ., addPoint, (, -, 2, ,, -, 2, )]
[p2]
[-, 2]
[2]
[-, 2]
[2]
[p2, ., addPoint, (, 2, ,, -, 2, )]
[p2]
[2]
[-, 2]
[2]
[this, ., downArrow]
[this]
[p2]
[new, Polygon, (, )]
[p3, ., addPoint, (, 0, ,, 0, )]
[p3]
[0]
[0]
[p3, ., addPoint, (, -, 2, ,, -, 2, )]
[p3]
[-, 2]
[2]
[-, 2]
[2]
[p3, ., addPoint, (, -, 2, ,, 2, )]
[p3]
[-, 2]
[2]
[2]
[this, ., rightArrow]
[this]
[p3]
[new, Polygon, (, )]
[p4, ., addPoint, (, 0, ,, 0, )]
[p4]
[0]
[0]
[p4, ., addPoint, (, 2, ,, -, 2, )]
[p4]
[2]
[-, 2]
[2]
[p4, ., addPoint, (, 2, ,, 2, )]
[p4]
[2]
[2]
[this, ., leftArrow]
[this]
[p4]
[this, ., verticalTickLabels]
[this]
[false]
[this, ., minorTickCount]
[this]
[0]
[this, ., verticalTickLabels]
[this]
[this, ., verticalTickLabels, !=, flag]
[this, ., verticalTickLabels]
[this]
[flag]
[this, ., verticalTickLabels]
[this]
[flag]
[notifyListeners, (, new, AxisChangeEvent, (, this, ), )]
[new, AxisChangeEvent, (, this, )]
[this]
[this, ., positiveArrowVisible]
[this]
[this, ., positiveArrowVisible]
[this]
[visible]
[notifyListeners, (, new, AxisChangeEvent, (, this, ), )]
[new, AxisChangeEvent, (, this, )]
[this]
[this, ., negativeArrowVisible]
[this]
[this, ., negativeArrowVisible]
[this]
[visible]
[notifyListeners, (, new, AxisChangeEvent, (, this, ), )]
[new, AxisChangeEvent, (, this, )]
[this]
[this, ., upArrow]
[this]
[arrow, ==, null]
[arrow]
[null]
[new, IllegalArgumentException, (, "Null 'arrow' argument.", )]
["Null 'arrow' argument."]
[this, ., upArrow]
[this]
[arrow]
[notifyListeners, (, new, AxisChangeEvent, (, this, ), )]
[new, AxisChangeEvent, (, this, )]
[this]
[this, ., downArrow]
[this]
[arrow, ==, null]
[arrow]
[null]
[new, IllegalArgumentException, (, "Null 'arrow' argument.", )]
["Null 'arrow' argument."]
[this, ., downArrow]
[this]
[arrow]
[notifyListeners, (, new, AxisChangeEvent, (, this, ), )]
[new, AxisChangeEvent, (, this, )]
[this]
[this, ., leftArrow]
[this]
[arrow, ==, null]
[arrow]
[null]
[new, IllegalArgumentException, (, "Null 'arrow' argument.", )]
["Null 'arrow' argument."]
[this, ., leftArrow]
[this]
[arrow]
[notifyListeners, (, new, AxisChangeEvent, (, this, ), )]
[new, AxisChangeEvent, (, this, )]
[this]
[this, ., rightArrow]
[this]
[arrow, ==, null]
[arrow]
[null]
[new, IllegalArgumentException, (, "Null 'arrow' argument.", )]
["Null 'arrow' argument."]
[this, ., rightArrow]
[this]
[arrow]
[notifyListeners, (, new, AxisChangeEvent, (, this, ), )]
[new, AxisChangeEvent, (, this, )]
[this]
[null]
[edge, ==, RectangleEdge, ., TOP]
[edge]
[RectangleEdge, ., TOP]
[RectangleEdge]
[axisLine]
[new, Line2D, ., Double, (, dataArea, ., getX, (, ), ,, cursor, ,, dataArea, ., getMaxX, (, ), ,, cursor, )]
[dataArea, ., getX, (, )]
[dataArea]
[cursor]
[dataArea, ., getMaxX, (, )]
[dataArea]
[cursor]
[edge, ==, RectangleEdge, ., BOTTOM]
[edge]
[RectangleEdge, ., BOTTOM]
[RectangleEdge]
[axisLine]
[new, Line2D, ., Double, (, dataArea, ., getX, (, ), ,, cursor, ,, dataArea, ., getMaxX, (, ), ,, cursor, )]
[dataArea, ., getX, (, )]
[dataArea]
[cursor]
[dataArea, ., getMaxX, (, )]
[dataArea]
[cursor]
[edge, ==, RectangleEdge, ., LEFT]
[edge]
[RectangleEdge, ., LEFT]
[RectangleEdge]
[axisLine]
[new, Line2D, ., Double, (, cursor, ,, dataArea, ., getY, (, ), ,, cursor, ,, dataArea, ., getMaxY, (, ), )]
[cursor]
[dataArea, ., getY, (, )]
[dataArea]
[cursor]
[dataArea, ., getMaxY, (, )]
[dataArea]
[edge, ==, RectangleEdge, ., RIGHT]
[edge]
[RectangleEdge, ., RIGHT]
[RectangleEdge]
[axisLine]
[new, Line2D, ., Double, (, cursor, ,, dataArea, ., getY, (, ), ,, cursor, ,, dataArea, ., getMaxY, (, ), )]
[cursor]
[dataArea, ., getY, (, )]
[dataArea]
[cursor]
[dataArea, ., getMaxY, (, )]
[dataArea]
[g2, ., setPaint, (, getAxisLinePaint, (, ), )]
[g2]
[getAxisLinePaint, (, )]
[g2, ., setStroke, (, getAxisLineStroke, (, ), )]
[g2]
[getAxisLineStroke, (, )]
[g2, ., draw, (, axisLine, )]
[g2]
[axisLine]
[false]
[false]
[this, ., positiveArrowVisible]
[this]
[this, ., inverted]
[this]
[drawDownOrLeft]
[true]
[drawUpOrRight]
[true]
[this, ., negativeArrowVisible]
[this]
[this, ., inverted]
[this]
[drawUpOrRight]
[true]
[drawDownOrLeft]
[true]
[drawUpOrRight]
[0.0]
[0.0]
[null]
[edge, ==, RectangleEdge, ., TOP, ||, edge, ==, RectangleEdge, ., BOTTOM]
[edge, ==, RectangleEdge, ., TOP]
[edge]
[RectangleEdge, ., TOP]
[RectangleEdge]
[edge, ==, RectangleEdge, ., BOTTOM]
[edge]
[RectangleEdge, ., BOTTOM]
[RectangleEdge]
[x]
[dataArea, ., getMaxX, (, )]
[dataArea]
[y]
[cursor]
[arrow]
[this, ., rightArrow]
[this]
[edge, ==, RectangleEdge, ., LEFT, ||, edge, ==, RectangleEdge, ., RIGHT]
[edge, ==, RectangleEdge, ., LEFT]
[edge]
[RectangleEdge, ., LEFT]
[RectangleEdge]
[edge, ==, RectangleEdge, ., RIGHT]
[edge]
[RectangleEdge, ., RIGHT]
[RectangleEdge]
[x]
[cursor]
[y]
[dataArea, ., getMinY, (, )]
[dataArea]
[arrow]
[this, ., upArrow]
[this]
[new, AffineTransform, (, )]
[transformer, ., setToTranslation, (, x, ,, y, )]
[transformer]
[x]
[y]
[transformer, ., createTransformedShape, (, arrow, )]
[transformer]
[arrow]
[g2, ., fill, (, shape, )]
[g2]
[shape]
[g2, ., draw, (, shape, )]
[g2]
[shape]
[drawDownOrLeft]
[0.0]
[0.0]
[null]
[edge, ==, RectangleEdge, ., TOP, ||, edge, ==, RectangleEdge, ., BOTTOM]
[edge, ==, RectangleEdge, ., TOP]
[edge]
[RectangleEdge, ., TOP]
[RectangleEdge]
[edge, ==, RectangleEdge, ., BOTTOM]
[edge]
[RectangleEdge, ., BOTTOM]
[RectangleEdge]
[x]
[dataArea, ., getMinX, (, )]
[dataArea]
[y]
[cursor]
[arrow]
[this, ., leftArrow]
[this]
[edge, ==, RectangleEdge, ., LEFT, ||, edge, ==, RectangleEdge, ., RIGHT]
[edge, ==, RectangleEdge, ., LEFT]
[edge]
[RectangleEdge, ., LEFT]
[RectangleEdge]
[edge, ==, RectangleEdge, ., RIGHT]
[edge]
[RectangleEdge, ., RIGHT]
[RectangleEdge]
[x]
[cursor]
[y]
[dataArea, ., getMaxY, (, )]
[dataArea]
[arrow]
[this, ., downArrow]
[this]
[new, AffineTransform, (, )]
[transformer, ., setToTranslation, (, x, ,, y, )]
[transformer]
[x]
[y]
[transformer, ., createTransformedShape, (, arrow, )]
[transformer]
[arrow]
[g2, ., fill, (, shape, )]
[g2]
[shape]
[g2, ., draw, (, shape, )]
[g2]
[shape]
[getTickLabelInsets, (, )]
[new, float, [, 2, ]]
[2]
[edge, ==, RectangleEdge, ., TOP]
[edge]
[RectangleEdge, ., TOP]
[RectangleEdge]
[result, [, 0, ]]
[result]
[0]
[(, float, ), valueToJava2D, (, tick, ., getValue, (, ), ,, dataArea, ,, edge, )]
[valueToJava2D, (, tick, ., getValue, (, ), ,, dataArea, ,, edge, )]
[tick, ., getValue, (, )]
[tick]
[dataArea]
[edge]
[result, [, 1, ]]
[result]
[1]
[(, float, ), (, cursor, -, insets, ., getBottom, (, ), -, 2.0, )]
[(, cursor, -, insets, ., getBottom, (, ), -, 2.0, )]
[cursor, -, insets, ., getBottom, (, ), -, 2.0]
[cursor, -, insets, ., getBottom, (, )]
[cursor]
[insets, ., getBottom, (, )]
[insets]
[2.0]
[edge, ==, RectangleEdge, ., BOTTOM]
[edge]
[RectangleEdge, ., BOTTOM]
[RectangleEdge]
[result, [, 0, ]]
[result]
[0]
[(, float, ), valueToJava2D, (, tick, ., getValue, (, ), ,, dataArea, ,, edge, )]
[valueToJava2D, (, tick, ., getValue, (, ), ,, dataArea, ,, edge, )]
[tick, ., getValue, (, )]
[tick]
[dataArea]
[edge]
[result, [, 1, ]]
[result]
[1]
[(, float, ), (, cursor, +, insets, ., getTop, (, ), +, 2.0, )]
[(, cursor, +, insets, ., getTop, (, ), +, 2.0, )]
[cursor, +, insets, ., getTop, (, ), +, 2.0]
[cursor, +, insets, ., getTop, (, )]
[cursor]
[insets, ., getTop, (, )]
[insets]
[2.0]
[edge, ==, RectangleEdge, ., LEFT]
[edge]
[RectangleEdge, ., LEFT]
[RectangleEdge]
[result, [, 0, ]]
[result]
[0]
[(, float, ), (, cursor, -, insets, ., getLeft, (, ), -, 2.0, )]
[(, cursor, -, insets, ., getLeft, (, ), -, 2.0, )]
[cursor, -, insets, ., getLeft, (, ), -, 2.0]
[cursor, -, insets, ., getLeft, (, )]
[cursor]
[insets, ., getLeft, (, )]
[insets]
[2.0]
[result, [, 1, ]]
[result]
[1]
[(, float, ), valueToJava2D, (, tick, ., getValue, (, ), ,, dataArea, ,, edge, )]
[valueToJava2D, (, tick, ., getValue, (, ), ,, dataArea, ,, edge, )]
[tick, ., getValue, (, )]
[tick]
[dataArea]
[edge]
[edge, ==, RectangleEdge, ., RIGHT]
[edge]
[RectangleEdge, ., RIGHT]
[RectangleEdge]
[result, [, 0, ]]
[result]
[0]
[(, float, ), (, cursor, +, insets, ., getRight, (, ), +, 2.0, )]
[(, cursor, +, insets, ., getRight, (, ), +, 2.0, )]
[cursor, +, insets, ., getRight, (, ), +, 2.0]
[cursor, +, insets, ., getRight, (, )]
[cursor]
[insets, ., getRight, (, )]
[insets]
[2.0]
[result, [, 1, ]]
[result]
[1]
[(, float, ), valueToJava2D, (, tick, ., getValue, (, ), ,, dataArea, ,, edge, )]
[valueToJava2D, (, tick, ., getValue, (, ), ,, dataArea, ,, edge, )]
[tick, ., getValue, (, )]
[tick]
[dataArea]
[edge]
[result]
[new, AxisState, (, cursor, )]
[cursor]
[isAxisLineVisible, (, )]
[drawAxisLine, (, g2, ,, cursor, ,, dataArea, ,, edge, )]
[g2]
[cursor]
[dataArea]
[edge]
[refreshTicks, (, g2, ,, state, ,, dataArea, ,, edge, )]
[g2]
[state]
[dataArea]
[edge]
[state, ., setTicks, (, ticks, )]
[state]
[ticks]
[g2, ., setFont, (, getTickLabelFont, (, ), )]
[g2]
[getTickLabelFont, (, )]
[ticks, ., iterator, (, )]
[ticks]
[iterator, ., hasNext, (, )]
[iterator]
[(, ValueTick, ), iterator, ., next, (, )]
[iterator, ., next, (, )]
[iterator]
[isTickLabelsVisible, (, )]
[g2, ., setPaint, (, getTickLabelPaint, (, ), )]
[g2]
[getTickLabelPaint, (, )]
[calculateAnchorPoint, (, tick, ,, cursor, ,, dataArea, ,, edge, )]
[tick]
[cursor]
[dataArea]
[edge]
[TextUtilities, ., drawRotatedString, (, tick, ., getText, (, ), ,, g2, ,, anchorPoint, [, 0, ], ,, anchorPoint, [, 1, ], ,, tick, ., getTextAnchor, (, ), ,, tick, ., getAngle, (, ), ,, tick, ., getRotationAnchor, (, ), )]
[TextUtilities]
[tick, ., getText, (, )]
[tick]
[g2]
[anchorPoint, [, 0, ]]
[anchorPoint]
[0]
[anchorPoint, [, 1, ]]
[anchorPoint]
[1]
[tick, ., getTextAnchor, (, )]
[tick]
[tick, ., getAngle, (, )]
[tick]
[tick, ., getRotationAnchor, (, )]
[tick]
[(, isTickMarksVisible, (, ), &&, tick, ., getTickType, (, ), ., equals, (, TickType, ., MAJOR, ), ), ||, (, isMinorTickMarksVisible, (, ), &&, tick, ., getTickType, (, ), ., equals, (, TickType, ., MINOR, ), )]
[(, isTickMarksVisible, (, ), &&, tick, ., getTickType, (, ), ., equals, (, TickType, ., MAJOR, ), )]
[isTickMarksVisible, (, ), &&, tick, ., getTickType, (, ), ., equals, (, TickType, ., MAJOR, )]
[isTickMarksVisible, (, )]
[tick, ., getTickType, (, ), ., equals, (, TickType, ., MAJOR, )]
[tick, ., getTickType, (, )]
[tick]
[TickType, ., MAJOR]
[TickType]
[(, isMinorTickMarksVisible, (, ), &&, tick, ., getTickType, (, ), ., equals, (, TickType, ., MINOR, ), )]
[isMinorTickMarksVisible, (, ), &&, tick, ., getTickType, (, ), ., equals, (, TickType, ., MINOR, )]
[isMinorTickMarksVisible, (, )]
[tick, ., getTickType, (, ), ., equals, (, TickType, ., MINOR, )]
[tick, ., getTickType, (, )]
[tick]
[TickType, ., MINOR]
[TickType]
[(, tick, ., getTickType, (, ), ., equals, (, TickType, ., MINOR, ), ), ?, getMinorTickMarkOutsideLength, (, ), :, getTickMarkOutsideLength, (, )]
[(, tick, ., getTickType, (, ), ., equals, (, TickType, ., MINOR, ), )]
[tick, ., getTickType, (, ), ., equals, (, TickType, ., MINOR, )]
[tick, ., getTickType, (, )]
[tick]
[TickType, ., MINOR]
[TickType]
[getMinorTickMarkOutsideLength, (, )]
[getTickMarkOutsideLength, (, )]
[(, tick, ., getTickType, (, ), ., equals, (, TickType, ., MINOR, ), ), ?, getMinorTickMarkInsideLength, (, ), :, getTickMarkInsideLength, (, )]
[(, tick, ., getTickType, (, ), ., equals, (, TickType, ., MINOR, ), )]
[tick, ., getTickType, (, ), ., equals, (, TickType, ., MINOR, )]
[tick, ., getTickType, (, )]
[tick]
[TickType, ., MINOR]
[TickType]
[getMinorTickMarkInsideLength, (, )]
[getTickMarkInsideLength, (, )]
[(, float, ), valueToJava2D, (, tick, ., getValue, (, ), ,, dataArea, ,, edge, )]
[valueToJava2D, (, tick, ., getValue, (, ), ,, dataArea, ,, edge, )]
[tick, ., getValue, (, )]
[tick]
[dataArea]
[edge]
[null]
[g2, ., setStroke, (, getTickMarkStroke, (, ), )]
[g2]
[getTickMarkStroke, (, )]
[g2, ., setPaint, (, getTickMarkPaint, (, ), )]
[g2]
[getTickMarkPaint, (, )]
[edge, ==, RectangleEdge, ., LEFT]
[edge]
[RectangleEdge, ., LEFT]
[RectangleEdge]
[mark]
[new, Line2D, ., Double, (, cursor, -, ol, ,, xx, ,, cursor, +, il, ,, xx, )]
[cursor, -, ol]
[cursor]
[ol]
[xx]
[cursor, +, il]
[cursor]
[il]
[xx]
[edge, ==, RectangleEdge, ., RIGHT]
[edge]
[RectangleEdge, ., RIGHT]
[RectangleEdge]
[mark]
[new, Line2D, ., Double, (, cursor, +, ol, ,, xx, ,, cursor, -, il, ,, xx, )]
[cursor, +, ol]
[cursor]
[ol]
[xx]
[cursor, -, il]
[cursor]
[il]
[xx]
[edge, ==, RectangleEdge, ., TOP]
[edge]
[RectangleEdge, ., TOP]
[RectangleEdge]
[mark]
[new, Line2D, ., Double, (, xx, ,, cursor, -, ol, ,, xx, ,, cursor, +, il, )]
[xx]
[cursor, -, ol]
[cursor]
[ol]
[xx]
[cursor, +, il]
[cursor]
[il]
[edge, ==, RectangleEdge, ., BOTTOM]
[edge]
[RectangleEdge, ., BOTTOM]
[RectangleEdge]
[mark]
[new, Line2D, ., Double, (, xx, ,, cursor, +, ol, ,, xx, ,, cursor, -, il, )]
[xx]
[cursor, +, ol]
[cursor]
[ol]
[xx]
[cursor, -, il]
[cursor]
[il]
[g2, ., draw, (, mark, )]
[g2]
[mark]
[0.0]
[isTickLabelsVisible, (, )]
[edge, ==, RectangleEdge, ., LEFT]
[edge]
[RectangleEdge, ., LEFT]
[RectangleEdge]
[used]
[findMaximumTickLabelWidth, (, ticks, ,, g2, ,, plotArea, ,, isVerticalTickLabels, (, ), )]
[ticks]
[g2]
[plotArea]
[isVerticalTickLabels, (, )]
[state, ., cursorLeft, (, used, )]
[state]
[used]
[edge, ==, RectangleEdge, ., RIGHT]
[edge]
[RectangleEdge, ., RIGHT]
[RectangleEdge]
[used]
[findMaximumTickLabelWidth, (, ticks, ,, g2, ,, plotArea, ,, isVerticalTickLabels, (, ), )]
[ticks]
[g2]
[plotArea]
[isVerticalTickLabels, (, )]
[state, ., cursorRight, (, used, )]
[state]
[used]
[edge, ==, RectangleEdge, ., TOP]
[edge]
[RectangleEdge, ., TOP]
[RectangleEdge]
[used]
[findMaximumTickLabelHeight, (, ticks, ,, g2, ,, plotArea, ,, isVerticalTickLabels, (, ), )]
[ticks]
[g2]
[plotArea]
[isVerticalTickLabels, (, )]
[state, ., cursorUp, (, used, )]
[state]
[used]
[edge, ==, RectangleEdge, ., BOTTOM]
[edge]
[RectangleEdge, ., BOTTOM]
[RectangleEdge]
[used]
[findMaximumTickLabelHeight, (, ticks, ,, g2, ,, plotArea, ,, isVerticalTickLabels, (, ), )]
[ticks]
[g2]
[plotArea]
[isVerticalTickLabels, (, )]
[state, ., cursorDown, (, used, )]
[state]
[used]
[state]
[space, ==, null]
[space]
[null]
[space]
[new, AxisSpace, (, )]
[!, isVisible, (, )]
[isVisible, (, )]
[space]
[getFixedDimension, (, )]
[dimension, >, 0.0]
[dimension]
[0.0]
[space, ., ensureAtLeast, (, dimension, ,, edge, )]
[space]
[dimension]
[edge]
[0.0]
[0.0]
[isTickLabelsVisible, (, )]
[g2, ., setFont, (, getTickLabelFont, (, ), )]
[g2]
[getTickLabelFont, (, )]
[refreshTicks, (, g2, ,, new, AxisState, (, ), ,, plotArea, ,, edge, )]
[g2]
[new, AxisState, (, )]
[plotArea]
[edge]
[RectangleEdge, ., isTopOrBottom, (, edge, )]
[RectangleEdge]
[edge]
[tickLabelHeight]
[findMaximumTickLabelHeight, (, ticks, ,, g2, ,, plotArea, ,, isVerticalTickLabels, (, ), )]
[ticks]
[g2]
[plotArea]
[isVerticalTickLabels, (, )]
[RectangleEdge, ., isLeftOrRight, (, edge, )]
[RectangleEdge]
[edge]
[tickLabelWidth]
[findMaximumTickLabelWidth, (, ticks, ,, g2, ,, plotArea, ,, isVerticalTickLabels, (, ), )]
[ticks]
[g2]
[plotArea]
[isVerticalTickLabels, (, )]
[getLabelEnclosure, (, g2, ,, edge, )]
[g2]
[edge]
[0.0]
[0.0]
[RectangleEdge, ., isTopOrBottom, (, edge, )]
[RectangleEdge]
[edge]
[labelHeight]
[labelEnclosure, ., getHeight, (, )]
[labelEnclosure]
[space, ., add, (, labelHeight, +, tickLabelHeight, ,, edge, )]
[space]
[labelHeight, +, tickLabelHeight]
[labelHeight]
[tickLabelHeight]
[edge]
[RectangleEdge, ., isLeftOrRight, (, edge, )]
[RectangleEdge]
[edge]
[labelWidth]
[labelEnclosure, ., getWidth, (, )]
[labelEnclosure]
[space, ., add, (, labelWidth, +, tickLabelWidth, ,, edge, )]
[space]
[labelWidth, +, tickLabelWidth]
[labelWidth]
[tickLabelWidth]
[edge]
[space]
[getTickLabelInsets, (, )]
[getTickLabelFont, (, )]
[0.0]
[vertical]
[g2, ., getFontMetrics, (, font, )]
[g2]
[font]
[ticks, ., iterator, (, )]
[ticks]
[iterator, ., hasNext, (, )]
[iterator]
[(, Tick, ), iterator, ., next, (, )]
[iterator, ., next, (, )]
[iterator]
[TextUtilities, ., getTextBounds, (, tick, ., getText, (, ), ,, g2, ,, fm, )]
[TextUtilities]
[tick, ., getText, (, )]
[tick]
[g2]
[fm]
[labelBounds, ., getWidth, (, ), +, insets, ., getTop, (, ), +, insets, ., getBottom, (, ), >, maxHeight]
[labelBounds, ., getWidth, (, ), +, insets, ., getTop, (, ), +, insets, ., getBottom, (, )]
[labelBounds, ., getWidth, (, ), +, insets, ., getTop, (, )]
[labelBounds, ., getWidth, (, )]
[labelBounds]
[insets, ., getTop, (, )]
[insets]
[insets, ., getBottom, (, )]
[insets]
[maxHeight]
[maxHeight]
[labelBounds, ., getWidth, (, ), +, insets, ., getTop, (, ), +, insets, ., getBottom, (, )]
[labelBounds, ., getWidth, (, ), +, insets, ., getTop, (, )]
[labelBounds, ., getWidth, (, )]
[labelBounds]
[insets, ., getTop, (, )]
[insets]
[insets, ., getBottom, (, )]
[insets]
[font, ., getLineMetrics, (, "ABCxyz", ,, g2, ., getFontRenderContext, (, ), )]
[font]
["ABCxyz"]
[g2, ., getFontRenderContext, (, )]
[g2]
[maxHeight]
[metrics, ., getHeight, (, ), +, insets, ., getTop, (, ), +, insets, ., getBottom, (, )]
[metrics, ., getHeight, (, ), +, insets, ., getTop, (, )]
[metrics, ., getHeight, (, )]
[metrics]
[insets, ., getTop, (, )]
[insets]
[insets, ., getBottom, (, )]
[insets]
[maxHeight]
[getTickLabelInsets, (, )]
[getTickLabelFont, (, )]
[0.0]
[!, vertical]
[vertical]
[g2, ., getFontMetrics, (, font, )]
[g2]
[font]
[ticks, ., iterator, (, )]
[ticks]
[iterator, ., hasNext, (, )]
[iterator]
[(, Tick, ), iterator, ., next, (, )]
[iterator, ., next, (, )]
[iterator]
[TextUtilities, ., getTextBounds, (, tick, ., getText, (, ), ,, g2, ,, fm, )]
[TextUtilities]
[tick, ., getText, (, )]
[tick]
[g2]
[fm]
[labelBounds, ., getWidth, (, ), +, insets, ., getLeft, (, ), +, insets, ., getRight, (, ), >, maxWidth]
[labelBounds, ., getWidth, (, ), +, insets, ., getLeft, (, ), +, insets, ., getRight, (, )]
[labelBounds, ., getWidth, (, ), +, insets, ., getLeft, (, )]
[labelBounds, ., getWidth, (, )]
[labelBounds]
[insets, ., getLeft, (, )]
[insets]
[insets, ., getRight, (, )]
[insets]
[maxWidth]
[maxWidth]
[labelBounds, ., getWidth, (, ), +, insets, ., getLeft, (, ), +, insets, ., getRight, (, )]
[labelBounds, ., getWidth, (, ), +, insets, ., getLeft, (, )]
[labelBounds, ., getWidth, (, )]
[labelBounds]
[insets, ., getLeft, (, )]
[insets]
[insets, ., getRight, (, )]
[insets]
[font, ., getLineMetrics, (, "ABCxyz", ,, g2, ., getFontRenderContext, (, ), )]
[font]
["ABCxyz"]
[g2, ., getFontRenderContext, (, )]
[g2]
[maxWidth]
[metrics, ., getHeight, (, ), +, insets, ., getTop, (, ), +, insets, ., getBottom, (, )]
[metrics, ., getHeight, (, ), +, insets, ., getTop, (, )]
[metrics, ., getHeight, (, )]
[metrics]
[insets, ., getTop, (, )]
[insets]
[insets, ., getBottom, (, )]
[insets]
[maxWidth]
[this, ., inverted]
[this]
[this, ., inverted, !=, flag]
[this, ., inverted]
[this]
[flag]
[this, ., inverted]
[this]
[flag]
[notifyListeners, (, new, AxisChangeEvent, (, this, ), )]
[new, AxisChangeEvent, (, this, )]
[this]
[this, ., autoRange]
[this]
[setAutoRange, (, auto, ,, true, )]
[auto]
[true]
[this, ., autoRange, !=, auto]
[this, ., autoRange]
[this]
[auto]
[this, ., autoRange]
[this]
[auto]
[this, ., autoRange]
[this]
[autoAdjustRange, (, )]
[notify]
[notifyListeners, (, new, AxisChangeEvent, (, this, ), )]
[new, AxisChangeEvent, (, this, )]
[this]
[this, ., autoRangeMinimumSize]
[this]
[setAutoRangeMinimumSize, (, size, ,, true, )]
[size]
[true]
[size, <=, 0.0]
[size]
[0.0]
[new, IllegalArgumentException, (, "NumberAxis.setAutoRangeMinimumSize(double): must be > 0.0.", )]
["NumberAxis.setAutoRangeMinimumSize(double): must be > 0.0."]
[this, ., autoRangeMinimumSize, !=, size]
[this, ., autoRangeMinimumSize]
[this]
[size]
[this, ., autoRangeMinimumSize]
[this]
[size]
[this, ., autoRange]
[this]
[autoAdjustRange, (, )]
[notify]
[notifyListeners, (, new, AxisChangeEvent, (, this, ), )]
[new, AxisChangeEvent, (, this, )]
[this]
[this, ., defaultAutoRange]
[this]
[range, ==, null]
[range]
[null]
[new, IllegalArgumentException, (, "Null 'range' argument.", )]
["Null 'range' argument."]
[this, ., defaultAutoRange]
[this]
[range]
[notifyListeners, (, new, AxisChangeEvent, (, this, ), )]
[new, AxisChangeEvent, (, this, )]
[this]
[this, ., lowerMargin]
[this]
[this, ., lowerMargin]
[this]
[margin]
[isAutoRange, (, )]
[autoAdjustRange, (, )]
[notifyListeners, (, new, AxisChangeEvent, (, this, ), )]
[new, AxisChangeEvent, (, this, )]
[this]
[this, ., upperMargin]
[this]
[this, ., upperMargin]
[this]
[margin]
[isAutoRange, (, )]
[autoAdjustRange, (, )]
[notifyListeners, (, new, AxisChangeEvent, (, this, ), )]
[new, AxisChangeEvent, (, this, )]
[this]
[this, ., fixedAutoRange]
[this]
[this, ., fixedAutoRange]
[this]
[length]
[isAutoRange, (, )]
[autoAdjustRange, (, )]
[notifyListeners, (, new, AxisChangeEvent, (, this, ), )]
[new, AxisChangeEvent, (, this, )]
[this]
[this, ., range, ., getLowerBound, (, )]
[this, ., range]
[this]
[this, ., range, ., getUpperBound, (, ), >, min]
[this, ., range, ., getUpperBound, (, )]
[this, ., range]
[this]
[min]
[setRange, (, new, Range, (, min, ,, this, ., range, ., getUpperBound, (, ), ), )]
[new, Range, (, min, ,, this, ., range, ., getUpperBound, (, ), )]
[min]
[this, ., range, ., getUpperBound, (, )]
[this, ., range]
[this]
[setRange, (, new, Range, (, min, ,, min, +, 1.0, ), )]
[new, Range, (, min, ,, min, +, 1.0, )]
[min]
[min, +, 1.0]
[min]
[1.0]
[this, ., range, ., getUpperBound, (, )]
[this, ., range]
[this]
[this, ., range, ., getLowerBound, (, ), <, max]
[this, ., range, ., getLowerBound, (, )]
[this, ., range]
[this]
[max]
[setRange, (, new, Range, (, this, ., range, ., getLowerBound, (, ), ,, max, ), )]
[new, Range, (, this, ., range, ., getLowerBound, (, ), ,, max, )]
[this, ., range, ., getLowerBound, (, )]
[this, ., range]
[this]
[max]
[setRange, (, max, -, 1.0, ,, max, )]
[max, -, 1.0]
[max]
[1.0]
[max]
[this, ., range]
[this]
[setRange, (, range, ,, true, ,, true, )]
[range]
[true]
[true]
[range, ==, null]
[range]
[null]
[new, IllegalArgumentException, (, "Null 'range' argument.", )]
["Null 'range' argument."]
[turnOffAutoRange]
[this, ., autoRange]
[this]
[false]
[this, ., range]
[this]
[range]
[notify]
[notifyListeners, (, new, AxisChangeEvent, (, this, ), )]
[new, AxisChangeEvent, (, this, )]
[this]
[setRange, (, new, Range, (, lower, ,, upper, ), )]
[new, Range, (, lower, ,, upper, )]
[lower]
[upper]
[setRangeWithMargins, (, range, ,, true, ,, true, )]
[range]
[true]
[true]
[range, ==, null]
[range]
[null]
[new, IllegalArgumentException, (, "Null 'range' argument.", )]
["Null 'range' argument."]
[setRange, (, Range, ., expand, (, range, ,, getLowerMargin, (, ), ,, getUpperMargin, (, ), ), ,, turnOffAutoRange, ,, notify, )]
[Range, ., expand, (, range, ,, getLowerMargin, (, ), ,, getUpperMargin, (, ), )]
[Range]
[range]
[getLowerMargin, (, )]
[getUpperMargin, (, )]
[turnOffAutoRange]
[notify]
[setRangeWithMargins, (, new, Range, (, lower, ,, upper, ), )]
[new, Range, (, lower, ,, upper, )]
[lower]
[upper]
[setRange, (, new, Range, (, value, -, length, /, 2, ,, value, +, length, /, 2, ), )]
[new, Range, (, value, -, length, /, 2, ,, value, +, length, /, 2, )]
[value, -, length, /, 2]
[value]
[length, /, 2]
[length]
[2]
[value, +, length, /, 2]
[value]
[length, /, 2]
[length]
[2]
[this, ., autoTickUnitSelection]
[this]
[setAutoTickUnitSelection, (, flag, ,, true, )]
[flag]
[true]
[this, ., autoTickUnitSelection, !=, flag]
[this, ., autoTickUnitSelection]
[this]
[flag]
[this, ., autoTickUnitSelection]
[this]
[flag]
[notify]
[notifyListeners, (, new, AxisChangeEvent, (, this, ), )]
[new, AxisChangeEvent, (, this, )]
[this]
[this, ., standardTickUnits]
[this]
[this, ., standardTickUnits]
[this]
[source]
[notifyListeners, (, new, AxisChangeEvent, (, this, ), )]
[new, AxisChangeEvent, (, this, )]
[this]
[this, ., minorTickCount]
[this]
[this, ., minorTickCount]
[this]
[count]
[notifyListeners, (, new, AxisChangeEvent, (, this, ), )]
[new, AxisChangeEvent, (, this, )]
[this]
[valueToJava2D, (, 0.0, ,, area, ,, edge, )]
[0.0]
[area]
[edge]
[valueToJava2D, (, length, ,, area, ,, edge, )]
[length]
[area]
[edge]
[Math, ., abs, (, l, -, zero, )]
[Math]
[l, -, zero]
[l]
[zero]
[this, ., range, ., getCentralValue, (, )]
[this, ., range]
[this]
[new, Range, (, this, ., range, ., getLowerBound, (, ), +, value, -, central, ,, this, ., range, ., getUpperBound, (, ), +, value, -, central, )]
[this, ., range, ., getLowerBound, (, ), +, value, -, central]
[this, ., range, ., getLowerBound, (, ), +, value]
[this, ., range, ., getLowerBound, (, )]
[this, ., range]
[this]
[value]
[central]
[this, ., range, ., getUpperBound, (, ), +, value, -, central]
[this, ., range, ., getUpperBound, (, ), +, value]
[this, ., range, ., getUpperBound, (, )]
[this, ., range]
[this]
[value]
[central]
[setRange, (, adjusted, )]
[adjusted]
[resizeRange, (, percent, ,, this, ., range, ., getCentralValue, (, ), )]
[percent]
[this, ., range, ., getCentralValue, (, )]
[this, ., range]
[this]
[percent, >, 0.0]
[percent]
[0.0]
[this, ., range, ., getLength, (, ), *, percent, /, 2]
[this, ., range, ., getLength, (, ), *, percent]
[this, ., range, ., getLength, (, )]
[this, ., range]
[this]
[percent]
[2]
[new, Range, (, anchorValue, -, halfLength, ,, anchorValue, +, halfLength, )]
[anchorValue, -, halfLength]
[anchorValue]
[halfLength]
[anchorValue, +, halfLength]
[anchorValue]
[halfLength]
[setRange, (, adjusted, )]
[adjusted]
[setAutoRange, (, true, )]
[true]
[percent, >, 0.0]
[percent]
[0.0]
[anchorValue, -, getLowerBound, (, )]
[anchorValue]
[getLowerBound, (, )]
[getUpperBound, (, ), -, anchorValue]
[getUpperBound, (, )]
[anchorValue]
[new, Range, (, anchorValue, -, left, *, percent, ,, anchorValue, +, right, *, percent, )]
[anchorValue, -, left, *, percent]
[anchorValue]
[left, *, percent]
[left]
[percent]
[anchorValue, +, right, *, percent]
[anchorValue]
[right, *, percent]
[right]
[percent]
[setRange, (, adjusted, )]
[adjusted]
[setAutoRange, (, true, )]
[true]
[this, ., range, ., getLowerBound, (, )]
[this, ., range]
[this]
[this, ., range, ., getLength, (, )]
[this, ., range]
[this]
[null]
[isInverted, (, )]
[adjusted]
[new, Range, (, start, +, (, length, *, (, 1, -, upperPercent, ), ), ,, start, +, (, length, *, (, 1, -, lowerPercent, ), ), )]
[start, +, (, length, *, (, 1, -, upperPercent, ), )]
[start]
[(, length, *, (, 1, -, upperPercent, ), )]
[length, *, (, 1, -, upperPercent, )]
[length]
[(, 1, -, upperPercent, )]
[1, -, upperPercent]
[1]
[upperPercent]
[start, +, (, length, *, (, 1, -, lowerPercent, ), )]
[start]
[(, length, *, (, 1, -, lowerPercent, ), )]
[length, *, (, 1, -, lowerPercent, )]
[length]
[(, 1, -, lowerPercent, )]
[1, -, lowerPercent]
[1]
[lowerPercent]
[adjusted]
[new, Range, (, start, +, length, *, lowerPercent, ,, start, +, length, *, upperPercent, )]
[start, +, length, *, lowerPercent]
[start]
[length, *, lowerPercent]
[length]
[lowerPercent]
[start, +, length, *, upperPercent]
[start]
[length, *, upperPercent]
[length]
[upperPercent]
[setRange, (, adjusted, )]
[adjusted]
[getRange, (, )]
[range, ., getLength, (, )]
[range]
[length, *, percent]
[length]
[percent]
[range, ., getLowerBound, (, ), +, adj]
[range, ., getLowerBound, (, )]
[range]
[adj]
[range, ., getUpperBound, (, ), +, adj]
[range, ., getUpperBound, (, )]
[range]
[adj]
[setRange, (, lower, ,, upper, )]
[lower]
[upper]
[this, ., autoTickIndex]
[this]
[this, ., autoTickIndex]
[this]
[index]
[obj, ==, this]
[obj]
[this]
[true]
[!, (, obj, instanceof, ValueAxis, )]
[(, obj, instanceof, ValueAxis, )]
[obj, instanceof, ValueAxis]
[obj]
[false]
[(, ValueAxis, ), obj]
[obj]
[this, ., positiveArrowVisible, !=, that, ., positiveArrowVisible]
[this, ., positiveArrowVisible]
[this]
[that, ., positiveArrowVisible]
[that]
[false]
[this, ., negativeArrowVisible, !=, that, ., negativeArrowVisible]
[this, ., negativeArrowVisible]
[this]
[that, ., negativeArrowVisible]
[that]
[false]
[this, ., inverted, !=, that, ., inverted]
[this, ., inverted]
[this]
[that, ., inverted]
[that]
[false]
[!, this, ., autoRange, &&, !, ObjectUtilities, ., equal, (, this, ., range, ,, that, ., range, )]
[!, this, ., autoRange]
[this, ., autoRange]
[this]
[!, ObjectUtilities, ., equal, (, this, ., range, ,, that, ., range, )]
[ObjectUtilities, ., equal, (, this, ., range, ,, that, ., range, )]
[ObjectUtilities]
[this, ., range]
[this]
[that, ., range]
[that]
[false]
[this, ., autoRange, !=, that, ., autoRange]
[this, ., autoRange]
[this]
[that, ., autoRange]
[that]
[false]
[this, ., autoRangeMinimumSize, !=, that, ., autoRangeMinimumSize]
[this, ., autoRangeMinimumSize]
[this]
[that, ., autoRangeMinimumSize]
[that]
[false]
[!, this, ., defaultAutoRange, ., equals, (, that, ., defaultAutoRange, )]
[this, ., defaultAutoRange, ., equals, (, that, ., defaultAutoRange, )]
[this, ., defaultAutoRange]
[this]
[that, ., defaultAutoRange]
[that]
[false]
[this, ., upperMargin, !=, that, ., upperMargin]
[this, ., upperMargin]
[this]
[that, ., upperMargin]
[that]
[false]
[this, ., lowerMargin, !=, that, ., lowerMargin]
[this, ., lowerMargin]
[this]
[that, ., lowerMargin]
[that]
[false]
[this, ., fixedAutoRange, !=, that, ., fixedAutoRange]
[this, ., fixedAutoRange]
[this]
[that, ., fixedAutoRange]
[that]
[false]
[this, ., autoTickUnitSelection, !=, that, ., autoTickUnitSelection]
[this, ., autoTickUnitSelection]
[this]
[that, ., autoTickUnitSelection]
[that]
[false]
[!, ObjectUtilities, ., equal, (, this, ., standardTickUnits, ,, that, ., standardTickUnits, )]
[ObjectUtilities, ., equal, (, this, ., standardTickUnits, ,, that, ., standardTickUnits, )]
[ObjectUtilities]
[this, ., standardTickUnits]
[this]
[that, ., standardTickUnits]
[that]
[false]
[this, ., verticalTickLabels, !=, that, ., verticalTickLabels]
[this, ., verticalTickLabels]
[this]
[that, ., verticalTickLabels]
[that]
[false]
[this, ., minorTickCount, !=, that, ., minorTickCount]
[this, ., minorTickCount]
[this]
[that, ., minorTickCount]
[that]
[false]
[super, ., equals, (, obj, )]
[super]
[obj]
[(, ValueAxis, ), super, ., clone, (, )]
[super, ., clone, (, )]
[super]
[clone]
[stream, ., defaultWriteObject, (, )]
[stream]
[SerialUtilities, ., writeShape, (, this, ., upArrow, ,, stream, )]
[SerialUtilities]
[this, ., upArrow]
[this]
[stream]
[SerialUtilities, ., writeShape, (, this, ., downArrow, ,, stream, )]
[SerialUtilities]
[this, ., downArrow]
[this]
[stream]
[SerialUtilities, ., writeShape, (, this, ., leftArrow, ,, stream, )]
[SerialUtilities]
[this, ., leftArrow]
[this]
[stream]
[SerialUtilities, ., writeShape, (, this, ., rightArrow, ,, stream, )]
[SerialUtilities]
[this, ., rightArrow]
[this]
[stream]
[stream, ., defaultReadObject, (, )]
[stream]
[this, ., upArrow]
[this]
[SerialUtilities, ., readShape, (, stream, )]
[SerialUtilities]
[stream]
[this, ., downArrow]
[this]
[SerialUtilities, ., readShape, (, stream, )]
[SerialUtilities]
[stream]
[this, ., leftArrow]
[this]
[SerialUtilities, ., readShape, (, stream, )]
[SerialUtilities]
[stream]
[this, ., rightArrow]
[this]
[SerialUtilities, ., readShape, (, stream, )]
[SerialUtilities]
[stream]
