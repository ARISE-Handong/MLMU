[-, 2490732595134766305L]
[2490732595134766305L]
[this, ., top]
[this]
[0.0]
[this, ., bottom]
[this]
[0.0]
[this, ., left]
[this]
[0.0]
[this, ., right]
[this]
[0.0]
[this, ., top]
[this]
[this, ., top]
[this]
[space]
[this, ., bottom]
[this]
[this, ., bottom]
[this]
[space]
[this, ., left]
[this]
[this, ., left]
[this]
[space]
[this, ., right]
[this]
[this, ., right]
[this]
[space]
[edge, ==, null]
[edge]
[null]
[new, IllegalArgumentException, (, "Null 'edge' argument.", )]
["Null 'edge' argument."]
[edge, ==, RectangleEdge, ., TOP]
[edge]
[RectangleEdge, ., TOP]
[RectangleEdge]
[this, ., top]
[this]
[space]
[edge, ==, RectangleEdge, ., BOTTOM]
[edge]
[RectangleEdge, ., BOTTOM]
[RectangleEdge]
[this, ., bottom]
[this]
[space]
[edge, ==, RectangleEdge, ., LEFT]
[edge]
[RectangleEdge, ., LEFT]
[RectangleEdge]
[this, ., left]
[this]
[space]
[edge, ==, RectangleEdge, ., RIGHT]
[edge]
[RectangleEdge, ., RIGHT]
[RectangleEdge]
[this, ., right]
[this]
[space]
[new, IllegalStateException, (, "Unrecognised 'edge' argument.", )]
["Unrecognised 'edge' argument."]
[this, ., top]
[this]
[Math, ., max, (, this, ., top, ,, space, ., top, )]
[Math]
[this, ., top]
[this]
[space, ., top]
[space]
[this, ., bottom]
[this]
[Math, ., max, (, this, ., bottom, ,, space, ., bottom, )]
[Math]
[this, ., bottom]
[this]
[space, ., bottom]
[space]
[this, ., left]
[this]
[Math, ., max, (, this, ., left, ,, space, ., left, )]
[Math]
[this, ., left]
[this]
[space, ., left]
[space]
[this, ., right]
[this]
[Math, ., max, (, this, ., right, ,, space, ., right, )]
[Math]
[this, ., right]
[this]
[space, ., right]
[space]
[edge, ==, RectangleEdge, ., TOP]
[edge]
[RectangleEdge, ., TOP]
[RectangleEdge]
[this, ., top, <, space]
[this, ., top]
[this]
[space]
[this, ., top]
[this]
[space]
[edge, ==, RectangleEdge, ., BOTTOM]
[edge]
[RectangleEdge, ., BOTTOM]
[RectangleEdge]
[this, ., bottom, <, space]
[this, ., bottom]
[this]
[space]
[this, ., bottom]
[this]
[space]
[edge, ==, RectangleEdge, ., LEFT]
[edge]
[RectangleEdge, ., LEFT]
[RectangleEdge]
[this, ., left, <, space]
[this, ., left]
[this]
[space]
[this, ., left]
[this]
[space]
[edge, ==, RectangleEdge, ., RIGHT]
[edge]
[RectangleEdge, ., RIGHT]
[RectangleEdge]
[this, ., right, <, space]
[this, ., right]
[this]
[space]
[this, ., right]
[this]
[space]
[new, IllegalStateException, (, "AxisSpace.ensureAtLeast(): unrecognised AxisLocation.", )]
["AxisSpace.ensureAtLeast(): unrecognised AxisLocation."]
[result, ==, null]
[result]
[null]
[result]
[new, Rectangle2D, ., Double, (, )]
[result, ., setRect, (, area, ., getX, (, ), +, this, ., left, ,, area, ., getY, (, ), +, this, ., top, ,, area, ., getWidth, (, ), -, this, ., left, -, this, ., right, ,, area, ., getHeight, (, ), -, this, ., top, -, this, ., bottom, )]
[result]
[area, ., getX, (, ), +, this, ., left]
[area, ., getX, (, )]
[area]
[this, ., left]
[this]
[area, ., getY, (, ), +, this, ., top]
[area, ., getY, (, )]
[area]
[this, ., top]
[this]
[area, ., getWidth, (, ), -, this, ., left, -, this, ., right]
[area, ., getWidth, (, ), -, this, ., left]
[area, ., getWidth, (, )]
[area]
[this, ., left]
[this]
[this, ., right]
[this]
[area, ., getHeight, (, ), -, this, ., top, -, this, ., bottom]
[area, ., getHeight, (, ), -, this, ., top]
[area, ., getHeight, (, )]
[area]
[this, ., top]
[this]
[this, ., bottom]
[this]
[result]
[result, ==, null]
[result]
[null]
[result]
[new, Rectangle2D, ., Double, (, )]
[result, ., setRect, (, area, ., getX, (, ), -, this, ., left, ,, area, ., getY, (, ), -, this, ., top, ,, area, ., getWidth, (, ), +, this, ., left, +, this, ., right, ,, area, ., getHeight, (, ), +, this, ., top, +, this, ., bottom, )]
[result]
[area, ., getX, (, ), -, this, ., left]
[area, ., getX, (, )]
[area]
[this, ., left]
[this]
[area, ., getY, (, ), -, this, ., top]
[area, ., getY, (, )]
[area]
[this, ., top]
[this]
[area, ., getWidth, (, ), +, this, ., left, +, this, ., right]
[area, ., getWidth, (, ), +, this, ., left]
[area, ., getWidth, (, )]
[area]
[this, ., left]
[this]
[this, ., right]
[this]
[area, ., getHeight, (, ), +, this, ., top, +, this, ., bottom]
[area, ., getHeight, (, ), +, this, ., top]
[area, ., getHeight, (, )]
[area]
[this, ., top]
[this]
[this, ., bottom]
[this]
[result]
[null]
[edge, ==, RectangleEdge, ., TOP]
[edge]
[RectangleEdge, ., TOP]
[RectangleEdge]
[result]
[new, Rectangle2D, ., Double, (, area, ., getX, (, ), ,, area, ., getY, (, ), ,, area, ., getWidth, (, ), ,, this, ., top, )]
[area, ., getX, (, )]
[area]
[area, ., getY, (, )]
[area]
[area, ., getWidth, (, )]
[area]
[this, ., top]
[this]
[edge, ==, RectangleEdge, ., BOTTOM]
[edge]
[RectangleEdge, ., BOTTOM]
[RectangleEdge]
[result]
[new, Rectangle2D, ., Double, (, area, ., getX, (, ), ,, area, ., getMaxY, (, ), -, this, ., top, ,, area, ., getWidth, (, ), ,, this, ., bottom, )]
[area, ., getX, (, )]
[area]
[area, ., getMaxY, (, ), -, this, ., top]
[area, ., getMaxY, (, )]
[area]
[this, ., top]
[this]
[area, ., getWidth, (, )]
[area]
[this, ., bottom]
[this]
[edge, ==, RectangleEdge, ., LEFT]
[edge]
[RectangleEdge, ., LEFT]
[RectangleEdge]
[result]
[new, Rectangle2D, ., Double, (, area, ., getX, (, ), ,, area, ., getY, (, ), ,, this, ., left, ,, area, ., getHeight, (, ), )]
[area, ., getX, (, )]
[area]
[area, ., getY, (, )]
[area]
[this, ., left]
[this]
[area, ., getHeight, (, )]
[area]
[edge, ==, RectangleEdge, ., RIGHT]
[edge]
[RectangleEdge, ., RIGHT]
[RectangleEdge]
[result]
[new, Rectangle2D, ., Double, (, area, ., getMaxX, (, ), -, this, ., right, ,, area, ., getY, (, ), ,, this, ., right, ,, area, ., getHeight, (, ), )]
[area, ., getMaxX, (, ), -, this, ., right]
[area, ., getMaxX, (, )]
[area]
[this, ., right]
[this]
[area, ., getY, (, )]
[area]
[this, ., right]
[this]
[area, ., getHeight, (, )]
[area]
[result]
[super, ., clone, (, )]
[super]
[obj, ==, this]
[obj]
[this]
[true]
[!, (, obj, instanceof, AxisSpace, )]
[(, obj, instanceof, AxisSpace, )]
[obj, instanceof, AxisSpace]
[obj]
[false]
[(, AxisSpace, ), obj]
[obj]
[this, ., top, !=, that, ., top]
[this, ., top]
[this]
[that, ., top]
[that]
[false]
[this, ., bottom, !=, that, ., bottom]
[this, ., bottom]
[this]
[that, ., bottom]
[that]
[false]
[this, ., left, !=, that, ., left]
[this, ., left]
[this]
[that, ., left]
[that]
[false]
[this, ., right, !=, that, ., right]
[this, ., right]
[this]
[that, ., right]
[that]
[false]
[true]
[23]
[Double, ., doubleToLongBits, (, this, ., top, )]
[Double]
[this, ., top]
[this]
[result]
[37, *, result, +, (, int, ), (, l, ^, (, l, >, >, >, 32, ), )]
[37, *, result]
[37]
[result]
[(, int, ), (, l, ^, (, l, >, >, >, 32, ), )]
[(, l, ^, (, l, >, >, >, 32, ), )]
[l, ^, (, l, >, >, >, 32, )]
[l]
[(, l, >, >, >, 32, )]
[l, >, >, >, 32]
[l]
[32]
[l]
[Double, ., doubleToLongBits, (, this, ., bottom, )]
[Double]
[this, ., bottom]
[this]
[result]
[37, *, result, +, (, int, ), (, l, ^, (, l, >, >, >, 32, ), )]
[37, *, result]
[37]
[result]
[(, int, ), (, l, ^, (, l, >, >, >, 32, ), )]
[(, l, ^, (, l, >, >, >, 32, ), )]
[l, ^, (, l, >, >, >, 32, )]
[l]
[(, l, >, >, >, 32, )]
[l, >, >, >, 32]
[l]
[32]
[l]
[Double, ., doubleToLongBits, (, this, ., left, )]
[Double]
[this, ., left]
[this]
[result]
[37, *, result, +, (, int, ), (, l, ^, (, l, >, >, >, 32, ), )]
[37, *, result]
[37]
[result]
[(, int, ), (, l, ^, (, l, >, >, >, 32, ), )]
[(, l, ^, (, l, >, >, >, 32, ), )]
[l, ^, (, l, >, >, >, 32, )]
[l]
[(, l, >, >, >, 32, )]
[l, >, >, >, 32]
[l]
[32]
[l]
[Double, ., doubleToLongBits, (, this, ., right, )]
[Double]
[this, ., right]
[this]
[result]
[37, *, result, +, (, int, ), (, l, ^, (, l, >, >, >, 32, ), )]
[37, *, result]
[37]
[result]
[(, int, ), (, l, ^, (, l, >, >, >, 32, ), )]
[(, l, ^, (, l, >, >, >, 32, ), )]
[l, ^, (, l, >, >, >, 32, )]
[l]
[(, l, >, >, >, 32, )]
[l, >, >, >, 32]
[l]
[32]
[result]
[super, ., toString, (, ), +, "[left=", +, this, ., left, +, ",right=", +, this, ., right, +, ",top=", +, this, ., top, +, ",bottom=", +, this, ., bottom, +, "]"]
[super, ., toString, (, ), +, "[left=", +, this, ., left, +, ",right=", +, this, ., right, +, ",top=", +, this, ., top, +, ",bottom=", +, this, ., bottom]
[super, ., toString, (, ), +, "[left=", +, this, ., left, +, ",right=", +, this, ., right, +, ",top=", +, this, ., top, +, ",bottom="]
[super, ., toString, (, ), +, "[left=", +, this, ., left, +, ",right=", +, this, ., right, +, ",top=", +, this, ., top]
[super, ., toString, (, ), +, "[left=", +, this, ., left, +, ",right=", +, this, ., right, +, ",top="]
[super, ., toString, (, ), +, "[left=", +, this, ., left, +, ",right=", +, this, ., right]
[super, ., toString, (, ), +, "[left=", +, this, ., left, +, ",right="]
[super, ., toString, (, ), +, "[left=", +, this, ., left]
[super, ., toString, (, ), +, "[left="]
[super, ., toString, (, )]
[super]
["[left="]
[this, ., left]
[this]
[",right="]
[this, ., right]
[this]
[",top="]
[this, ., top]
[this]
[",bottom="]
[this, ., bottom]
[this]
["]"]
