[@, SuppressWarnings, (, "unchecked", )]
["unchecked"]
[new, WarningGuardSpec, (, )]
[@, Option, (, name, =, "--help", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Displays this message", )]
["--help"]
[BooleanOptionHandler, ., class]
["Displays this message"]
[false]
[@, Option, (, name, =, "--print_tree", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Prints out the parse tree and exits", )]
["--print_tree"]
[BooleanOptionHandler, ., class]
["Prints out the parse tree and exits"]
[false]
[@, Option, (, name, =, "--print_ast", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Prints a dot file describing the internal abstract syntax", +, " tree and exits", )]
["--print_ast"]
[BooleanOptionHandler, ., class]
["Prints a dot file describing the internal abstract syntax", +, " tree and exits"]
["Prints a dot file describing the internal abstract syntax"]
[" tree and exits"]
[false]
[@, Option, (, name, =, "--print_pass_graph", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Prints a dot file describing the passes that will get run", +, " and exits", )]
["--print_pass_graph"]
[BooleanOptionHandler, ., class]
["Prints a dot file describing the passes that will get run", +, " and exits"]
["Prints a dot file describing the passes that will get run"]
[" and exits"]
[false]
[@, Option, (, name, =, "--jscomp_dev_mode", ,, aliases, =, {, "--dev_mode", }, )]
["--jscomp_dev_mode"]
[{, "--dev_mode", }]
["--dev_mode"]
[CompilerOptions, ., DevMode, ., OFF]
[CompilerOptions, ., DevMode]
[CompilerOptions]
[@, Option, (, name, =, "--logging_level", ,, usage, =, "The logging level (standard java.util.logging.Level", +, " values) for Compiler progress. Does not control errors or", +, " warnings for the JavaScript code under compilation", )]
["--logging_level"]
["The logging level (standard java.util.logging.Level", +, " values) for Compiler progress. Does not control errors or", +, " warnings for the JavaScript code under compilation"]
["The logging level (standard java.util.logging.Level", +, " values) for Compiler progress. Does not control errors or"]
["The logging level (standard java.util.logging.Level"]
[" values) for Compiler progress. Does not control errors or"]
[" warnings for the JavaScript code under compilation"]
[Level, ., WARNING, ., getName, (, )]
[Level, ., WARNING]
[Level]
[@, Option, (, name, =, "--externs", ,, usage, =, "The file containing JavaScript externs. You may specify", +, " multiple", )]
["--externs"]
["The file containing JavaScript externs. You may specify", +, " multiple"]
["The file containing JavaScript externs. You may specify"]
[" multiple"]
[Lists, ., newArrayList, (, )]
[Lists]
[@, Option, (, name, =, "--js", ,, usage, =, "The JavaScript filename. You may specify multiple", )]
["--js"]
["The JavaScript filename. You may specify multiple"]
[Lists, ., newArrayList, (, )]
[Lists]
[@, Option, (, name, =, "--js_output_file", ,, usage, =, "Primary output filename. If not specified, output is ", +, "written to stdout", )]
["--js_output_file"]
["Primary output filename. If not specified, output is ", +, "written to stdout"]
["Primary output filename. If not specified, output is "]
["written to stdout"]
[""]
[@, Option, (, name, =, "--module", ,, usage, =, "A JavaScript module specification. The format is ", +, "<name>:<num-js-files>[:[<dep>,...][:]]]. Module names must be ", +, "unique. Each dep is the name of a module that this module ", +, "depends on. Modules must be listed in dependency order, and JS ", +, "source files must be listed in the corresponding order. Where ", +, "--module flags occur in relation to --js flags is unimportant. ", +, "Provide the value 'auto' to trigger module creation from CommonJS", +, "modules.", )]
["--module"]
["A JavaScript module specification. The format is ", +, "<name>:<num-js-files>[:[<dep>,...][:]]]. Module names must be ", +, "unique. Each dep is the name of a module that this module ", +, "depends on. Modules must be listed in dependency order, and JS ", +, "source files must be listed in the corresponding order. Where ", +, "--module flags occur in relation to --js flags is unimportant. ", +, "Provide the value 'auto' to trigger module creation from CommonJS", +, "modules."]
["A JavaScript module specification. The format is ", +, "<name>:<num-js-files>[:[<dep>,...][:]]]. Module names must be ", +, "unique. Each dep is the name of a module that this module ", +, "depends on. Modules must be listed in dependency order, and JS ", +, "source files must be listed in the corresponding order. Where ", +, "--module flags occur in relation to --js flags is unimportant. ", +, "Provide the value 'auto' to trigger module creation from CommonJS"]
["A JavaScript module specification. The format is ", +, "<name>:<num-js-files>[:[<dep>,...][:]]]. Module names must be ", +, "unique. Each dep is the name of a module that this module ", +, "depends on. Modules must be listed in dependency order, and JS ", +, "source files must be listed in the corresponding order. Where ", +, "--module flags occur in relation to --js flags is unimportant. "]
["A JavaScript module specification. The format is ", +, "<name>:<num-js-files>[:[<dep>,...][:]]]. Module names must be ", +, "unique. Each dep is the name of a module that this module ", +, "depends on. Modules must be listed in dependency order, and JS ", +, "source files must be listed in the corresponding order. Where "]
["A JavaScript module specification. The format is ", +, "<name>:<num-js-files>[:[<dep>,...][:]]]. Module names must be ", +, "unique. Each dep is the name of a module that this module ", +, "depends on. Modules must be listed in dependency order, and JS "]
["A JavaScript module specification. The format is ", +, "<name>:<num-js-files>[:[<dep>,...][:]]]. Module names must be ", +, "unique. Each dep is the name of a module that this module "]
["A JavaScript module specification. The format is ", +, "<name>:<num-js-files>[:[<dep>,...][:]]]. Module names must be "]
["A JavaScript module specification. The format is "]
["<name>:<num-js-files>[:[<dep>,...][:]]]. Module names must be "]
["unique. Each dep is the name of a module that this module "]
["depends on. Modules must be listed in dependency order, and JS "]
["source files must be listed in the corresponding order. Where "]
["--module flags occur in relation to --js flags is unimportant. "]
["Provide the value 'auto' to trigger module creation from CommonJS"]
["modules."]
[Lists, ., newArrayList, (, )]
[Lists]
[@, Option, (, name, =, "--variable_map_input_file", ,, usage, =, "File containing the serialized version of the variable ", +, "renaming map produced by a previous compilation", )]
["--variable_map_input_file"]
["File containing the serialized version of the variable ", +, "renaming map produced by a previous compilation"]
["File containing the serialized version of the variable "]
["renaming map produced by a previous compilation"]
[""]
[@, Option, (, name, =, "--property_map_input_file", ,, usage, =, "File containing the serialized version of the property ", +, "renaming map produced by a previous compilation", )]
["--property_map_input_file"]
["File containing the serialized version of the property ", +, "renaming map produced by a previous compilation"]
["File containing the serialized version of the property "]
["renaming map produced by a previous compilation"]
[""]
[@, Option, (, name, =, "--variable_map_output_file", ,, usage, =, "File where the serialized version of the variable ", +, "renaming map produced should be saved", )]
["--variable_map_output_file"]
["File where the serialized version of the variable ", +, "renaming map produced should be saved"]
["File where the serialized version of the variable "]
["renaming map produced should be saved"]
[""]
[@, Option, (, name, =, "--create_name_map_files", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "If true, variable renaming and property renaming map ", +, "files will be produced as {binary name}_vars_map.out and ", +, "{binary name}_props_map.out. Note that this flag cannot be used ", +, "in conjunction with either variable_map_output_file or ", +, "property_map_output_file", )]
["--create_name_map_files"]
[BooleanOptionHandler, ., class]
["If true, variable renaming and property renaming map ", +, "files will be produced as {binary name}_vars_map.out and ", +, "{binary name}_props_map.out. Note that this flag cannot be used ", +, "in conjunction with either variable_map_output_file or ", +, "property_map_output_file"]
["If true, variable renaming and property renaming map ", +, "files will be produced as {binary name}_vars_map.out and ", +, "{binary name}_props_map.out. Note that this flag cannot be used ", +, "in conjunction with either variable_map_output_file or "]
["If true, variable renaming and property renaming map ", +, "files will be produced as {binary name}_vars_map.out and ", +, "{binary name}_props_map.out. Note that this flag cannot be used "]
["If true, variable renaming and property renaming map ", +, "files will be produced as {binary name}_vars_map.out and "]
["If true, variable renaming and property renaming map "]
["files will be produced as {binary name}_vars_map.out and "]
["{binary name}_props_map.out. Note that this flag cannot be used "]
["in conjunction with either variable_map_output_file or "]
["property_map_output_file"]
[false]
[@, Option, (, name, =, "--property_map_output_file", ,, usage, =, "File where the serialized version of the property ", +, "renaming map produced should be saved", )]
["--property_map_output_file"]
["File where the serialized version of the property ", +, "renaming map produced should be saved"]
["File where the serialized version of the property "]
["renaming map produced should be saved"]
[""]
[@, Option, (, name, =, "--third_party", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Check source validity but do not enforce Closure style ", +, "rules and conventions", )]
["--third_party"]
[BooleanOptionHandler, ., class]
["Check source validity but do not enforce Closure style ", +, "rules and conventions"]
["Check source validity but do not enforce Closure style "]
["rules and conventions"]
[false]
[@, Option, (, name, =, "--summary_detail_level", ,, usage, =, "Controls how detailed the compilation summary is. Values:", +, " 0 (never print summary), 1 (print summary only if there are ", +, "errors or warnings), 2 (print summary if the 'checkTypes' ", +, "diagnostic  group is enabled, see --jscomp_warning), ", +, "3 (always print summary). The default level is 1", )]
["--summary_detail_level"]
["Controls how detailed the compilation summary is. Values:", +, " 0 (never print summary), 1 (print summary only if there are ", +, "errors or warnings), 2 (print summary if the 'checkTypes' ", +, "diagnostic  group is enabled, see --jscomp_warning), ", +, "3 (always print summary). The default level is 1"]
["Controls how detailed the compilation summary is. Values:", +, " 0 (never print summary), 1 (print summary only if there are ", +, "errors or warnings), 2 (print summary if the 'checkTypes' ", +, "diagnostic  group is enabled, see --jscomp_warning), "]
["Controls how detailed the compilation summary is. Values:", +, " 0 (never print summary), 1 (print summary only if there are ", +, "errors or warnings), 2 (print summary if the 'checkTypes' "]
["Controls how detailed the compilation summary is. Values:", +, " 0 (never print summary), 1 (print summary only if there are "]
["Controls how detailed the compilation summary is. Values:"]
[" 0 (never print summary), 1 (print summary only if there are "]
["errors or warnings), 2 (print summary if the 'checkTypes' "]
["diagnostic  group is enabled, see --jscomp_warning), "]
["3 (always print summary). The default level is 1"]
[1]
[@, Option, (, name, =, "--output_wrapper", ,, usage, =, "Interpolate output into this string at the place denoted", +, " by the marker token %output%. Use marker token %output|jsstring%", +, " to do js string escaping on the output.", )]
["--output_wrapper"]
["Interpolate output into this string at the place denoted", +, " by the marker token %output%. Use marker token %output|jsstring%", +, " to do js string escaping on the output."]
["Interpolate output into this string at the place denoted", +, " by the marker token %output%. Use marker token %output|jsstring%"]
["Interpolate output into this string at the place denoted"]
[" by the marker token %output%. Use marker token %output|jsstring%"]
[" to do js string escaping on the output."]
[""]
[@, Option, (, name, =, "--module_wrapper", ,, usage, =, "An output wrapper for a JavaScript module (optional). ", +, "The format is <name>:<wrapper>. The module name must correspond ", +, "with a module specified using --module. The wrapper must ", +, "contain %s as the code placeholder. The %basename% placeholder can ", +, "also be used to substitute the base name of the module output file.", )]
["--module_wrapper"]
["An output wrapper for a JavaScript module (optional). ", +, "The format is <name>:<wrapper>. The module name must correspond ", +, "with a module specified using --module. The wrapper must ", +, "contain %s as the code placeholder. The %basename% placeholder can ", +, "also be used to substitute the base name of the module output file."]
["An output wrapper for a JavaScript module (optional). ", +, "The format is <name>:<wrapper>. The module name must correspond ", +, "with a module specified using --module. The wrapper must ", +, "contain %s as the code placeholder. The %basename% placeholder can "]
["An output wrapper for a JavaScript module (optional). ", +, "The format is <name>:<wrapper>. The module name must correspond ", +, "with a module specified using --module. The wrapper must "]
["An output wrapper for a JavaScript module (optional). ", +, "The format is <name>:<wrapper>. The module name must correspond "]
["An output wrapper for a JavaScript module (optional). "]
["The format is <name>:<wrapper>. The module name must correspond "]
["with a module specified using --module. The wrapper must "]
["contain %s as the code placeholder. The %basename% placeholder can "]
["also be used to substitute the base name of the module output file."]
[Lists, ., newArrayList, (, )]
[Lists]
[@, Option, (, name, =, "--module_output_path_prefix", ,, usage, =, "Prefix for filenames of compiled JS modules. ", +, "<module-name>.js will be appended to this prefix. Directories ", +, "will be created as needed. Use with --module", )]
["--module_output_path_prefix"]
["Prefix for filenames of compiled JS modules. ", +, "<module-name>.js will be appended to this prefix. Directories ", +, "will be created as needed. Use with --module"]
["Prefix for filenames of compiled JS modules. ", +, "<module-name>.js will be appended to this prefix. Directories "]
["Prefix for filenames of compiled JS modules. "]
["<module-name>.js will be appended to this prefix. Directories "]
["will be created as needed. Use with --module"]
["./"]
[@, Option, (, name, =, "--create_source_map", ,, usage, =, "If specified, a source map file mapping the generated ", +, "source files back to the original source file will be ", +, "output to the specified path. The %outname% placeholder will ", +, "expand to the name of the output file that the source map ", +, "corresponds to.", )]
["--create_source_map"]
["If specified, a source map file mapping the generated ", +, "source files back to the original source file will be ", +, "output to the specified path. The %outname% placeholder will ", +, "expand to the name of the output file that the source map ", +, "corresponds to."]
["If specified, a source map file mapping the generated ", +, "source files back to the original source file will be ", +, "output to the specified path. The %outname% placeholder will ", +, "expand to the name of the output file that the source map "]
["If specified, a source map file mapping the generated ", +, "source files back to the original source file will be ", +, "output to the specified path. The %outname% placeholder will "]
["If specified, a source map file mapping the generated ", +, "source files back to the original source file will be "]
["If specified, a source map file mapping the generated "]
["source files back to the original source file will be "]
["output to the specified path. The %outname% placeholder will "]
["expand to the name of the output file that the source map "]
["corresponds to."]
[""]
[@, Option, (, name, =, "--source_map_format", ,, usage, =, "The source map format to produce. ", +, "Options: V1, V2, V3, DEFAULT. DEFAULT produces V2.", )]
["--source_map_format"]
["The source map format to produce. ", +, "Options: V1, V2, V3, DEFAULT. DEFAULT produces V2."]
["The source map format to produce. "]
["Options: V1, V2, V3, DEFAULT. DEFAULT produces V2."]
[SourceMap, ., Format, ., DEFAULT]
[SourceMap, ., Format]
[SourceMap]
[@, SuppressWarnings, (, "unused", )]
["unused"]
[@, Option, (, name, =, "--jscomp_error", ,, handler, =, WarningGuardErrorOptionHandler, ., class, ,, usage, =, "Make the named class of warnings an error. Options:", +, DiagnosticGroups, ., DIAGNOSTIC_GROUP_NAMES, )]
["--jscomp_error"]
[WarningGuardErrorOptionHandler, ., class]
["Make the named class of warnings an error. Options:", +, DiagnosticGroups, ., DIAGNOSTIC_GROUP_NAMES]
["Make the named class of warnings an error. Options:"]
[DiagnosticGroups, ., DIAGNOSTIC_GROUP_NAMES]
[DiagnosticGroups]
[Lists, ., newArrayList, (, )]
[Lists]
[@, SuppressWarnings, (, "unused", )]
["unused"]
[@, Option, (, name, =, "--jscomp_warning", ,, handler, =, WarningGuardWarningOptionHandler, ., class, ,, usage, =, "Make the named class of warnings a normal warning. ", +, "Options:", +, DiagnosticGroups, ., DIAGNOSTIC_GROUP_NAMES, )]
["--jscomp_warning"]
[WarningGuardWarningOptionHandler, ., class]
["Make the named class of warnings a normal warning. ", +, "Options:", +, DiagnosticGroups, ., DIAGNOSTIC_GROUP_NAMES]
["Make the named class of warnings a normal warning. ", +, "Options:"]
["Make the named class of warnings a normal warning. "]
["Options:"]
[DiagnosticGroups, ., DIAGNOSTIC_GROUP_NAMES]
[DiagnosticGroups]
[Lists, ., newArrayList, (, )]
[Lists]
[@, SuppressWarnings, (, "unused", )]
["unused"]
[@, Option, (, name, =, "--jscomp_off", ,, handler, =, WarningGuardOffOptionHandler, ., class, ,, usage, =, "Turn off the named class of warnings. Options:", +, DiagnosticGroups, ., DIAGNOSTIC_GROUP_NAMES, )]
["--jscomp_off"]
[WarningGuardOffOptionHandler, ., class]
["Turn off the named class of warnings. Options:", +, DiagnosticGroups, ., DIAGNOSTIC_GROUP_NAMES]
["Turn off the named class of warnings. Options:"]
[DiagnosticGroups, ., DIAGNOSTIC_GROUP_NAMES]
[DiagnosticGroups]
[Lists, ., newArrayList, (, )]
[Lists]
[@, Option, (, name, =, "--define", ,, aliases, =, {, "--D", ,, "-D", }, ,, usage, =, "Override the value of a variable annotated @define. ", +, "The format is <name>[=<val>], where <name> is the name of a @define ", +, "variable and <val> is a boolean, number, or a single-quoted string ", +, "that contains no single quotes. If [=<val>] is omitted, ", +, "the variable is marked true", )]
["--define"]
[{, "--D", ,, "-D", }]
["--D"]
["-D"]
["Override the value of a variable annotated @define. ", +, "The format is <name>[=<val>], where <name> is the name of a @define ", +, "variable and <val> is a boolean, number, or a single-quoted string ", +, "that contains no single quotes. If [=<val>] is omitted, ", +, "the variable is marked true"]
["Override the value of a variable annotated @define. ", +, "The format is <name>[=<val>], where <name> is the name of a @define ", +, "variable and <val> is a boolean, number, or a single-quoted string ", +, "that contains no single quotes. If [=<val>] is omitted, "]
["Override the value of a variable annotated @define. ", +, "The format is <name>[=<val>], where <name> is the name of a @define ", +, "variable and <val> is a boolean, number, or a single-quoted string "]
["Override the value of a variable annotated @define. ", +, "The format is <name>[=<val>], where <name> is the name of a @define "]
["Override the value of a variable annotated @define. "]
["The format is <name>[=<val>], where <name> is the name of a @define "]
["variable and <val> is a boolean, number, or a single-quoted string "]
["that contains no single quotes. If [=<val>] is omitted, "]
["the variable is marked true"]
[Lists, ., newArrayList, (, )]
[Lists]
[@, Option, (, name, =, "--charset", ,, usage, =, "Input and output charset for all files. By default, we ", +, "accept UTF-8 as input and output US_ASCII", )]
["--charset"]
["Input and output charset for all files. By default, we ", +, "accept UTF-8 as input and output US_ASCII"]
["Input and output charset for all files. By default, we "]
["accept UTF-8 as input and output US_ASCII"]
[""]
[@, Option, (, name, =, "--compilation_level", ,, usage, =, "Specifies the compilation level to use. Options: ", +, "WHITESPACE_ONLY, SIMPLE_OPTIMIZATIONS, ADVANCED_OPTIMIZATIONS", )]
["--compilation_level"]
["Specifies the compilation level to use. Options: ", +, "WHITESPACE_ONLY, SIMPLE_OPTIMIZATIONS, ADVANCED_OPTIMIZATIONS"]
["Specifies the compilation level to use. Options: "]
["WHITESPACE_ONLY, SIMPLE_OPTIMIZATIONS, ADVANCED_OPTIMIZATIONS"]
[CompilationLevel, ., SIMPLE_OPTIMIZATIONS]
[CompilationLevel]
[@, Option, (, name, =, "--use_types_for_optimization", ,, usage, =, "Experimental: perform additional optimizations ", +, "based on available information.  Inaccurate type annotations ", +, "may result in incorrect results.", )]
["--use_types_for_optimization"]
["Experimental: perform additional optimizations ", +, "based on available information.  Inaccurate type annotations ", +, "may result in incorrect results."]
["Experimental: perform additional optimizations ", +, "based on available information.  Inaccurate type annotations "]
["Experimental: perform additional optimizations "]
["based on available information.  Inaccurate type annotations "]
["may result in incorrect results."]
[false]
[@, Option, (, name, =, "--warning_level", ,, usage, =, "Specifies the warning level to use. Options: ", +, "QUIET, DEFAULT, VERBOSE", )]
["--warning_level"]
["Specifies the warning level to use. Options: ", +, "QUIET, DEFAULT, VERBOSE"]
["Specifies the warning level to use. Options: "]
["QUIET, DEFAULT, VERBOSE"]
[WarningLevel, ., DEFAULT]
[WarningLevel]
[@, Option, (, name, =, "--use_only_custom_externs", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Specifies whether the default externs should be excluded", )]
["--use_only_custom_externs"]
[BooleanOptionHandler, ., class]
["Specifies whether the default externs should be excluded"]
[false]
[@, Option, (, name, =, "--debug", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Enable debugging options", )]
["--debug"]
[BooleanOptionHandler, ., class]
["Enable debugging options"]
[false]
[@, Option, (, name, =, "--generate_exports", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Generates export code for those marked with @export", )]
["--generate_exports"]
[BooleanOptionHandler, ., class]
["Generates export code for those marked with @export"]
[false]
[@, Option, (, name, =, "--formatting", ,, usage, =, "Specifies which formatting options, if any, should be ", +, "applied to the output JS. Options: ", +, "PRETTY_PRINT, PRINT_INPUT_DELIMITER, SINGLE_QUOTES", )]
["--formatting"]
["Specifies which formatting options, if any, should be ", +, "applied to the output JS. Options: ", +, "PRETTY_PRINT, PRINT_INPUT_DELIMITER, SINGLE_QUOTES"]
["Specifies which formatting options, if any, should be ", +, "applied to the output JS. Options: "]
["Specifies which formatting options, if any, should be "]
["applied to the output JS. Options: "]
["PRETTY_PRINT, PRINT_INPUT_DELIMITER, SINGLE_QUOTES"]
[Lists, ., newArrayList, (, )]
[Lists]
[@, Option, (, name, =, "--process_common_js_modules", ,, usage, =, "Process CommonJS modules to a concatenable form.", )]
["--process_common_js_modules"]
["Process CommonJS modules to a concatenable form."]
[false]
[@, Option, (, name, =, "--common_js_module_path_prefix", ,, usage, =, "Path prefix to be removed from CommonJS module names.", )]
["--common_js_module_path_prefix"]
["Path prefix to be removed from CommonJS module names."]
[ProcessCommonJSModules, ., DEFAULT_FILENAME_PREFIX]
[ProcessCommonJSModules]
[@, Option, (, name, =, "--common_js_entry_module", ,, usage, =, "Root of your common JS dependency hierarchy. ", +, "Your main script.", )]
["--common_js_entry_module"]
["Root of your common JS dependency hierarchy. ", +, "Your main script."]
["Root of your common JS dependency hierarchy. "]
["Your main script."]
[@, Option, (, name, =, "--transform_amd_modules", ,, usage, =, "Transform AMD to CommonJS modules.", )]
["--transform_amd_modules"]
["Transform AMD to CommonJS modules."]
[false]
[@, Option, (, name, =, "--process_closure_primitives", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Processes built-ins from the Closure library, such as ", +, "goog.require(), goog.provide(), and goog.exportSymbol()", )]
["--process_closure_primitives"]
[BooleanOptionHandler, ., class]
["Processes built-ins from the Closure library, such as ", +, "goog.require(), goog.provide(), and goog.exportSymbol()"]
["Processes built-ins from the Closure library, such as "]
["goog.require(), goog.provide(), and goog.exportSymbol()"]
[true]
[@, Option, (, name, =, "--manage_closure_dependencies", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Automatically sort dependencies so that a file that ", +, "goog.provides symbol X will always come before a file that ", +, "goog.requires symbol X. If an input provides symbols, and ", +, "those symbols are never required, then that input will not ", +, "be included in the compilation.", )]
["--manage_closure_dependencies"]
[BooleanOptionHandler, ., class]
["Automatically sort dependencies so that a file that ", +, "goog.provides symbol X will always come before a file that ", +, "goog.requires symbol X. If an input provides symbols, and ", +, "those symbols are never required, then that input will not ", +, "be included in the compilation."]
["Automatically sort dependencies so that a file that ", +, "goog.provides symbol X will always come before a file that ", +, "goog.requires symbol X. If an input provides symbols, and ", +, "those symbols are never required, then that input will not "]
["Automatically sort dependencies so that a file that ", +, "goog.provides symbol X will always come before a file that ", +, "goog.requires symbol X. If an input provides symbols, and "]
["Automatically sort dependencies so that a file that ", +, "goog.provides symbol X will always come before a file that "]
["Automatically sort dependencies so that a file that "]
["goog.provides symbol X will always come before a file that "]
["goog.requires symbol X. If an input provides symbols, and "]
["those symbols are never required, then that input will not "]
["be included in the compilation."]
[false]
[@, Option, (, name, =, "--only_closure_dependencies", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Only include files in the transitive dependency of the ", +, "entry points (specified by closure_entry_point). Files that do ", +, "not provide dependencies will be removed. This supersedes", +, "manage_closure_dependencies", )]
["--only_closure_dependencies"]
[BooleanOptionHandler, ., class]
["Only include files in the transitive dependency of the ", +, "entry points (specified by closure_entry_point). Files that do ", +, "not provide dependencies will be removed. This supersedes", +, "manage_closure_dependencies"]
["Only include files in the transitive dependency of the ", +, "entry points (specified by closure_entry_point). Files that do ", +, "not provide dependencies will be removed. This supersedes"]
["Only include files in the transitive dependency of the ", +, "entry points (specified by closure_entry_point). Files that do "]
["Only include files in the transitive dependency of the "]
["entry points (specified by closure_entry_point). Files that do "]
["not provide dependencies will be removed. This supersedes"]
["manage_closure_dependencies"]
[false]
[@, Option, (, name, =, "--closure_entry_point", ,, usage, =, "Entry points to the program. Must be goog.provide'd ", +, "symbols. Any goog.provide'd symbols that are not a transitive ", +, "dependency of the entry points will be removed. Files without ", +, "goog.provides, and their dependencies, will always be left in. ", +, "If any entry points are specified, then the ", +, "manage_closure_dependencies option will be set to true and ", +, "all files will be sorted in dependency order.", )]
["--closure_entry_point"]
["Entry points to the program. Must be goog.provide'd ", +, "symbols. Any goog.provide'd symbols that are not a transitive ", +, "dependency of the entry points will be removed. Files without ", +, "goog.provides, and their dependencies, will always be left in. ", +, "If any entry points are specified, then the ", +, "manage_closure_dependencies option will be set to true and ", +, "all files will be sorted in dependency order."]
["Entry points to the program. Must be goog.provide'd ", +, "symbols. Any goog.provide'd symbols that are not a transitive ", +, "dependency of the entry points will be removed. Files without ", +, "goog.provides, and their dependencies, will always be left in. ", +, "If any entry points are specified, then the ", +, "manage_closure_dependencies option will be set to true and "]
["Entry points to the program. Must be goog.provide'd ", +, "symbols. Any goog.provide'd symbols that are not a transitive ", +, "dependency of the entry points will be removed. Files without ", +, "goog.provides, and their dependencies, will always be left in. ", +, "If any entry points are specified, then the "]
["Entry points to the program. Must be goog.provide'd ", +, "symbols. Any goog.provide'd symbols that are not a transitive ", +, "dependency of the entry points will be removed. Files without ", +, "goog.provides, and their dependencies, will always be left in. "]
["Entry points to the program. Must be goog.provide'd ", +, "symbols. Any goog.provide'd symbols that are not a transitive ", +, "dependency of the entry points will be removed. Files without "]
["Entry points to the program. Must be goog.provide'd ", +, "symbols. Any goog.provide'd symbols that are not a transitive "]
["Entry points to the program. Must be goog.provide'd "]
["symbols. Any goog.provide'd symbols that are not a transitive "]
["dependency of the entry points will be removed. Files without "]
["goog.provides, and their dependencies, will always be left in. "]
["If any entry points are specified, then the "]
["manage_closure_dependencies option will be set to true and "]
["all files will be sorted in dependency order."]
[Lists, ., newArrayList, (, )]
[Lists]
[@, Option, (, name, =, "--process_jquery_primitives", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Processes built-ins from the Jquery library, such as ", +, "jQuery.fn and jQuery.extend()", )]
["--process_jquery_primitives"]
[BooleanOptionHandler, ., class]
["Processes built-ins from the Jquery library, such as ", +, "jQuery.fn and jQuery.extend()"]
["Processes built-ins from the Jquery library, such as "]
["jQuery.fn and jQuery.extend()"]
[false]
[@, Option, (, name, =, "--output_manifest", ,, usage, =, "Prints out a list of all the files in the compilation. ", +, "If --manage_closure_dependencies is on, this will not include ", +, "files that got dropped because they were not required. ", +, "The %outname% placeholder expands to the JS output file. ", +, "If you're using modularization, using %outname% will create ", +, "a manifest for each module.", )]
["--output_manifest"]
["Prints out a list of all the files in the compilation. ", +, "If --manage_closure_dependencies is on, this will not include ", +, "files that got dropped because they were not required. ", +, "The %outname% placeholder expands to the JS output file. ", +, "If you're using modularization, using %outname% will create ", +, "a manifest for each module."]
["Prints out a list of all the files in the compilation. ", +, "If --manage_closure_dependencies is on, this will not include ", +, "files that got dropped because they were not required. ", +, "The %outname% placeholder expands to the JS output file. ", +, "If you're using modularization, using %outname% will create "]
["Prints out a list of all the files in the compilation. ", +, "If --manage_closure_dependencies is on, this will not include ", +, "files that got dropped because they were not required. ", +, "The %outname% placeholder expands to the JS output file. "]
["Prints out a list of all the files in the compilation. ", +, "If --manage_closure_dependencies is on, this will not include ", +, "files that got dropped because they were not required. "]
["Prints out a list of all the files in the compilation. ", +, "If --manage_closure_dependencies is on, this will not include "]
["Prints out a list of all the files in the compilation. "]
["If --manage_closure_dependencies is on, this will not include "]
["files that got dropped because they were not required. "]
["The %outname% placeholder expands to the JS output file. "]
["If you're using modularization, using %outname% will create "]
["a manifest for each module."]
[""]
[@, Option, (, name, =, "--output_module_dependencies", ,, usage, =, "Prints out a JSON file of dependencies between modules.", )]
["--output_module_dependencies"]
["Prints out a JSON file of dependencies between modules."]
[""]
[@, Option, (, name, =, "--accept_const_keyword", ,, usage, =, "Allows usage of const keyword.", )]
["--accept_const_keyword"]
["Allows usage of const keyword."]
[false]
[@, Option, (, name, =, "--language_in", ,, usage, =, "Sets what language spec that input sources conform. ", +, "Options: ECMASCRIPT3 (default), ECMASCRIPT5, ECMASCRIPT5_STRICT", )]
["--language_in"]
["Sets what language spec that input sources conform. ", +, "Options: ECMASCRIPT3 (default), ECMASCRIPT5, ECMASCRIPT5_STRICT"]
["Sets what language spec that input sources conform. "]
["Options: ECMASCRIPT3 (default), ECMASCRIPT5, ECMASCRIPT5_STRICT"]
["ECMASCRIPT3"]
[@, Option, (, name, =, "--version", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Prints the compiler version to stderr.", )]
["--version"]
[BooleanOptionHandler, ., class]
["Prints the compiler version to stderr."]
[false]
[@, Option, (, name, =, "--translations_file", ,, usage, =, "Source of translated messages. Currently only supports XTB.", )]
["--translations_file"]
["Source of translated messages. Currently only supports XTB."]
[""]
[@, Option, (, name, =, "--translations_project", ,, usage, =, "Scopes all translations to the specified project.", +, "When specified, we will use different message ids so that messages ", +, "in different projects can have different translations.", )]
["--translations_project"]
["Scopes all translations to the specified project.", +, "When specified, we will use different message ids so that messages ", +, "in different projects can have different translations."]
["Scopes all translations to the specified project.", +, "When specified, we will use different message ids so that messages "]
["Scopes all translations to the specified project."]
["When specified, we will use different message ids so that messages "]
["in different projects can have different translations."]
[null]
[@, Option, (, name, =, "--flagfile", ,, usage, =, "A file containing additional command-line options.", )]
["--flagfile"]
["A file containing additional command-line options."]
[""]
[@, Option, (, name, =, "--warnings_whitelist_file", ,, usage, =, "A file containing warnings to suppress. Each line should be ", +, "of the form\n", +, "<file-name>:<line-number>?  <warning-description>", )]
["--warnings_whitelist_file"]
["A file containing warnings to suppress. Each line should be ", +, "of the form\n", +, "<file-name>:<line-number>?  <warning-description>"]
["A file containing warnings to suppress. Each line should be ", +, "of the form\n"]
["A file containing warnings to suppress. Each line should be "]
["of the form\n"]
["<file-name>:<line-number>?  <warning-description>"]
[""]
[Lists, ., newArrayList, (, )]
[Lists]
[Lists, ., newArrayListWithCapacity, (, js, ., size, (, ), +, arguments, ., size, (, ), )]
[Lists]
[js, ., size, (, ), +, arguments, ., size, (, )]
[js, ., size, (, )]
[js]
[arguments, ., size, (, )]
[arguments]
[allJsInputs, ., addAll, (, js, )]
[allJsInputs]
[js]
[allJsInputs, ., addAll, (, arguments, )]
[allJsInputs]
[arguments]
[allJsInputs]
[Sets, ., newHashSet, (, "true", ,, "on", ,, "yes", ,, "1", )]
[Sets]
["true"]
["on"]
["yes"]
["1"]
[Sets, ., newHashSet, (, "false", ,, "off", ,, "no", ,, "0", )]
[Sets]
["false"]
["off"]
["no"]
["0"]
[parser]
[option]
[setter]
[null]
[param]
[params, ., getParameter, (, 0, )]
[params]
[0]
[param, ==, null]
[param]
[null]
[setter, ., addValue, (, true, )]
[setter]
[true]
[0]
[param, ., toLowerCase, (, )]
[param]
[TRUES, ., contains, (, lowerParam, )]
[TRUES]
[lowerParam]
[setter, ., addValue, (, true, )]
[setter]
[true]
[FALSES, ., contains, (, lowerParam, )]
[FALSES]
[lowerParam]
[setter, ., addValue, (, false, )]
[setter]
[false]
[setter, ., addValue, (, true, )]
[setter]
[true]
[0]
[1]
[null]
[parser]
[option]
[new, WarningGuardSetter, (, setter, ,, CheckLevel, ., ERROR, )]
[setter]
[CheckLevel, ., ERROR]
[CheckLevel]
[parser]
[option]
[new, WarningGuardSetter, (, setter, ,, CheckLevel, ., WARNING, )]
[setter]
[CheckLevel, ., WARNING]
[CheckLevel]
[parser]
[option]
[new, WarningGuardSetter, (, setter, ,, CheckLevel, ., OFF, )]
[setter]
[CheckLevel, ., OFF]
[CheckLevel]
[this, ., proxy]
[this]
[proxy]
[this, ., level]
[this]
[level]
[proxy, ., isMultiValued, (, )]
[proxy]
[(, Class, <, String, >, ), proxy, ., getType, (, )]
[proxy, ., getType, (, )]
[proxy]
[proxy, ., addValue, (, value, )]
[proxy]
[value]
[warningGuardSpec, ., add, (, level, ,, value, )]
[warningGuardSpec]
[level]
[value]
[this]
[PRETTY_PRINT]
[options, ., prettyPrint]
[options]
[true]
[PRINT_INPUT_DELIMITER]
[options, ., printInputDelimiter]
[options]
[true]
[SINGLE_QUOTES]
[options, ., setPreferSingleQuotes, (, true, )]
[options]
[true]
[new, RuntimeException, (, "Unknown formatting option: ", +, this, )]
["Unknown formatting option: ", +, this]
["Unknown formatting option: "]
[this]
[new, Flags, (, )]
[false]
[initConfigFromFlags, (, args, ,, System, ., err, )]
[args]
[System, ., err]
[System]
[out]
[err]
[initConfigFromFlags, (, args, ,, err, )]
[args]
[err]
[Lists, ., newArrayList, (, )]
[Lists]
[Pattern, ., compile, (, "(?:[^ \t\f\\x0B'\"]|(?:'[^']*'|\"[^\"]*\"))+", )]
[Pattern]
["(?:[^ \t\f\\x0B'\"]|(?:'[^']*'|\"[^\"]*\"))+"]
[lines]
[tokenPattern, ., matcher, (, line, )]
[tokenPattern]
[line]
[matcher, ., find, (, )]
[matcher]
[tokens, ., add, (, matcher, ., group, (, 0, ), )]
[tokens]
[matcher, ., group, (, 0, )]
[matcher]
[0]
[tokens]
[Pattern, ., compile, (, "(--[a-zA-Z_]+)=(.*)", )]
[Pattern]
["(--[a-zA-Z_]+)=(.*)"]
[Pattern, ., compile, (, "^['\"](.*)['\"]$", )]
[Pattern]
["^['\"](.*)['\"]$"]
[Lists, ., newArrayList, (, )]
[Lists]
[args]
[argPattern, ., matcher, (, arg, )]
[argPattern]
[arg]
[matcher, ., matches, (, )]
[matcher]
[processedArgs, ., add, (, matcher, ., group, (, 1, ), )]
[processedArgs]
[matcher, ., group, (, 1, )]
[matcher]
[1]
[matcher, ., group, (, 2, )]
[matcher]
[2]
[quotesPattern, ., matcher, (, value, )]
[quotesPattern]
[value]
[quotesMatcher, ., matches, (, )]
[quotesMatcher]
[processedArgs, ., add, (, quotesMatcher, ., group, (, 1, ), )]
[processedArgs]
[quotesMatcher, ., group, (, 1, )]
[quotesMatcher]
[1]
[processedArgs, ., add, (, value, )]
[processedArgs]
[value]
[processedArgs, ., add, (, arg, )]
[processedArgs]
[arg]
[processedArgs]
[new, File, (, flags, ., flag_file, )]
[flags, ., flag_file]
[flags]
[tokenizeKeepingQuotedStrings, (, Files, ., readLines, (, flagFileInput, ,, Charset, ., defaultCharset, (, ), ), )]
[Files, ., readLines, (, flagFileInput, ,, Charset, ., defaultCharset, (, ), )]
[Files]
[flagFileInput]
[Charset, ., defaultCharset, (, )]
[Charset]
[flags, ., flag_file]
[flags]
[""]
[processArgs, (, argsInFile, ., toArray, (, new, String, [, ], {, }, ), )]
[argsInFile, ., toArray, (, new, String, [, ], {, }, )]
[argsInFile]
[new, String, [, ], {, }]
[{, }]
[new, CmdLineParser, (, flags, )]
[flags]
[Flags, ., warningGuardSpec, ., clear, (, )]
[Flags, ., warningGuardSpec]
[Flags]
[parserFileArgs, ., parseArgument, (, processedFileArgs, ., toArray, (, new, String, [, ], {, }, ), )]
[parserFileArgs]
[processedFileArgs, ., toArray, (, new, String, [, ], {, }, )]
[processedFileArgs]
[new, String, [, ], {, }]
[{, }]
[!, flags, ., flag_file, ., equals, (, "", )]
[flags, ., flag_file, ., equals, (, "", )]
[flags, ., flag_file]
[flags]
[""]
[err, ., println, (, "ERROR - Arguments in the file cannot contain ", +, "--flagfile option.", )]
[err]
["ERROR - Arguments in the file cannot contain ", +, "--flagfile option."]
["ERROR - Arguments in the file cannot contain "]
["--flagfile option."]
[isConfigValid]
[false]
[processArgs, (, args, )]
[args]
[new, CmdLineParser, (, flags, )]
[flags]
[Flags, ., warningGuardSpec, ., clear, (, )]
[Flags, ., warningGuardSpec]
[Flags]
[isConfigValid]
[true]
[parser, ., parseArgument, (, processedArgs, ., toArray, (, new, String, [, ], {, }, ), )]
[parser]
[processedArgs, ., toArray, (, new, String, [, ], {, }, )]
[processedArgs]
[new, String, [, ], {, }]
[{, }]
[!, flags, ., flag_file, ., equals, (, "", )]
[flags, ., flag_file, ., equals, (, "", )]
[flags, ., flag_file]
[flags]
[""]
[processFlagFile, (, err, )]
[err]
[err, ., println, (, e, ., getMessage, (, ), )]
[err]
[e, ., getMessage, (, )]
[e]
[isConfigValid]
[false]
[err, ., println, (, "ERROR - ", +, flags, ., flag_file, +, " read error.", )]
[err]
["ERROR - ", +, flags, ., flag_file, +, " read error."]
["ERROR - ", +, flags, ., flag_file]
["ERROR - "]
[flags, ., flag_file]
[flags]
[" read error."]
[isConfigValid]
[false]
[flags, ., version]
[flags]
[err, ., println, (, "Closure Compiler (http://code.google.com/closure/compiler)\n", +, "Version: ", +, Compiler, ., getReleaseVersion, (, ), +, "\n", +, "Built on: ", +, Compiler, ., getReleaseDate, (, ), )]
[err]
["Closure Compiler (http://code.google.com/closure/compiler)\n", +, "Version: ", +, Compiler, ., getReleaseVersion, (, ), +, "\n", +, "Built on: ", +, Compiler, ., getReleaseDate, (, )]
["Closure Compiler (http://code.google.com/closure/compiler)\n", +, "Version: ", +, Compiler, ., getReleaseVersion, (, ), +, "\n", +, "Built on: "]
["Closure Compiler (http://code.google.com/closure/compiler)\n", +, "Version: ", +, Compiler, ., getReleaseVersion, (, ), +, "\n"]
["Closure Compiler (http://code.google.com/closure/compiler)\n", +, "Version: ", +, Compiler, ., getReleaseVersion, (, )]
["Closure Compiler (http://code.google.com/closure/compiler)\n", +, "Version: "]
["Closure Compiler (http://code.google.com/closure/compiler)\n"]
["Version: "]
[Compiler, ., getReleaseVersion, (, )]
[Compiler]
["\n"]
["Built on: "]
[Compiler, ., getReleaseDate, (, )]
[Compiler]
[err, ., flush, (, )]
[err]
[flags, ., process_common_js_modules]
[flags]
[flags, ., process_closure_primitives]
[flags]
[true]
[flags, ., manage_closure_dependencies]
[flags]
[true]
[flags, ., common_js_entry_module, ==, null]
[flags, ., common_js_entry_module]
[flags]
[null]
[err, ., println, (, "Please specify --common_js_entry_module.", )]
[err]
["Please specify --common_js_entry_module."]
[err, ., flush, (, )]
[err]
[isConfigValid]
[false]
[flags, ., closure_entry_point]
[flags]
[Lists, ., newArrayList, (, ProcessCommonJSModules, ., toModuleName, (, flags, ., common_js_entry_module, ), )]
[Lists]
[ProcessCommonJSModules, ., toModuleName, (, flags, ., common_js_entry_module, )]
[ProcessCommonJSModules]
[flags, ., common_js_entry_module]
[flags]
[!, isConfigValid, ||, flags, ., display_help]
[!, isConfigValid]
[isConfigValid]
[flags, ., display_help]
[flags]
[isConfigValid]
[false]
[parser, ., printUsage, (, err, )]
[parser]
[err]
[flags, ., third_party]
[flags]
[conv]
[CodingConventions, ., getDefault, (, )]
[CodingConventions]
[flags, ., process_jquery_primitives]
[flags]
[conv]
[new, JqueryCodingConvention, (, )]
[conv]
[new, ClosureCodingConvention, (, )]
[getCommandLineConfig, (, ), ., setPrintTree, (, flags, ., print_tree, ), ., setPrintAst, (, flags, ., print_ast, ), ., setPrintPassGraph, (, flags, ., print_pass_graph, ), ., setJscompDevMode, (, flags, ., jscomp_dev_mode, ), ., setLoggingLevel, (, flags, ., logging_level, ), ., setExterns, (, flags, ., externs, ), ., setJs, (, flags, ., getJsFiles, (, ), ), ., setJsOutputFile, (, flags, ., js_output_file, ), ., setModule, (, flags, ., module, ), ., setVariableMapInputFile, (, flags, ., variable_map_input_file, ), ., setPropertyMapInputFile, (, flags, ., property_map_input_file, ), ., setVariableMapOutputFile, (, flags, ., variable_map_output_file, ), ., setCreateNameMapFiles, (, flags, ., create_name_map_files, ), ., setPropertyMapOutputFile, (, flags, ., property_map_output_file, ), ., setCodingConvention, (, conv, ), ., setSummaryDetailLevel, (, flags, ., summary_detail_level, ), ., setOutputWrapper, (, flags, ., output_wrapper, ), ., setModuleWrapper, (, flags, ., module_wrapper, ), ., setModuleOutputPathPrefix, (, flags, ., module_output_path_prefix, ), ., setCreateSourceMap, (, flags, ., create_source_map, ), ., setSourceMapFormat, (, flags, ., source_map_format, ), ., setWarningGuardSpec, (, Flags, ., warningGuardSpec, ), ., setDefine, (, flags, ., define, ), ., setCharset, (, flags, ., charset, ), ., setManageClosureDependencies, (, flags, ., manage_closure_dependencies, ), ., setOnlyClosureDependencies, (, flags, ., only_closure_dependencies, ), ., setClosureEntryPoints, (, flags, ., closure_entry_point, ), ., setOutputManifest, (, ImmutableList, ., of, (, flags, ., output_manifest, ), ), ., setOutputModuleDependencies, (, flags, ., output_module_dependencies, ), ., setAcceptConstKeyword, (, flags, ., accept_const_keyword, ), ., setLanguageIn, (, flags, ., language_in, ), ., setProcessCommonJSModules, (, flags, ., process_common_js_modules, ), ., setCommonJSModulePathPrefix, (, flags, ., common_js_path_prefix, ), ., setTransformAMDToCJSModules, (, flags, ., transform_amd_modules, ), ., setWarningsWhitelistFile, (, flags, ., warnings_whitelist_file, )]
[getCommandLineConfig, (, ), ., setPrintTree, (, flags, ., print_tree, ), ., setPrintAst, (, flags, ., print_ast, ), ., setPrintPassGraph, (, flags, ., print_pass_graph, ), ., setJscompDevMode, (, flags, ., jscomp_dev_mode, ), ., setLoggingLevel, (, flags, ., logging_level, ), ., setExterns, (, flags, ., externs, ), ., setJs, (, flags, ., getJsFiles, (, ), ), ., setJsOutputFile, (, flags, ., js_output_file, ), ., setModule, (, flags, ., module, ), ., setVariableMapInputFile, (, flags, ., variable_map_input_file, ), ., setPropertyMapInputFile, (, flags, ., property_map_input_file, ), ., setVariableMapOutputFile, (, flags, ., variable_map_output_file, ), ., setCreateNameMapFiles, (, flags, ., create_name_map_files, ), ., setPropertyMapOutputFile, (, flags, ., property_map_output_file, ), ., setCodingConvention, (, conv, ), ., setSummaryDetailLevel, (, flags, ., summary_detail_level, ), ., setOutputWrapper, (, flags, ., output_wrapper, ), ., setModuleWrapper, (, flags, ., module_wrapper, ), ., setModuleOutputPathPrefix, (, flags, ., module_output_path_prefix, ), ., setCreateSourceMap, (, flags, ., create_source_map, ), ., setSourceMapFormat, (, flags, ., source_map_format, ), ., setWarningGuardSpec, (, Flags, ., warningGuardSpec, ), ., setDefine, (, flags, ., define, ), ., setCharset, (, flags, ., charset, ), ., setManageClosureDependencies, (, flags, ., manage_closure_dependencies, ), ., setOnlyClosureDependencies, (, flags, ., only_closure_dependencies, ), ., setClosureEntryPoints, (, flags, ., closure_entry_point, ), ., setOutputManifest, (, ImmutableList, ., of, (, flags, ., output_manifest, ), ), ., setOutputModuleDependencies, (, flags, ., output_module_dependencies, ), ., setAcceptConstKeyword, (, flags, ., accept_const_keyword, ), ., setLanguageIn, (, flags, ., language_in, ), ., setProcessCommonJSModules, (, flags, ., process_common_js_modules, ), ., setCommonJSModulePathPrefix, (, flags, ., common_js_path_prefix, ), ., setTransformAMDToCJSModules, (, flags, ., transform_amd_modules, )]
[getCommandLineConfig, (, ), ., setPrintTree, (, flags, ., print_tree, ), ., setPrintAst, (, flags, ., print_ast, ), ., setPrintPassGraph, (, flags, ., print_pass_graph, ), ., setJscompDevMode, (, flags, ., jscomp_dev_mode, ), ., setLoggingLevel, (, flags, ., logging_level, ), ., setExterns, (, flags, ., externs, ), ., setJs, (, flags, ., getJsFiles, (, ), ), ., setJsOutputFile, (, flags, ., js_output_file, ), ., setModule, (, flags, ., module, ), ., setVariableMapInputFile, (, flags, ., variable_map_input_file, ), ., setPropertyMapInputFile, (, flags, ., property_map_input_file, ), ., setVariableMapOutputFile, (, flags, ., variable_map_output_file, ), ., setCreateNameMapFiles, (, flags, ., create_name_map_files, ), ., setPropertyMapOutputFile, (, flags, ., property_map_output_file, ), ., setCodingConvention, (, conv, ), ., setSummaryDetailLevel, (, flags, ., summary_detail_level, ), ., setOutputWrapper, (, flags, ., output_wrapper, ), ., setModuleWrapper, (, flags, ., module_wrapper, ), ., setModuleOutputPathPrefix, (, flags, ., module_output_path_prefix, ), ., setCreateSourceMap, (, flags, ., create_source_map, ), ., setSourceMapFormat, (, flags, ., source_map_format, ), ., setWarningGuardSpec, (, Flags, ., warningGuardSpec, ), ., setDefine, (, flags, ., define, ), ., setCharset, (, flags, ., charset, ), ., setManageClosureDependencies, (, flags, ., manage_closure_dependencies, ), ., setOnlyClosureDependencies, (, flags, ., only_closure_dependencies, ), ., setClosureEntryPoints, (, flags, ., closure_entry_point, ), ., setOutputManifest, (, ImmutableList, ., of, (, flags, ., output_manifest, ), ), ., setOutputModuleDependencies, (, flags, ., output_module_dependencies, ), ., setAcceptConstKeyword, (, flags, ., accept_const_keyword, ), ., setLanguageIn, (, flags, ., language_in, ), ., setProcessCommonJSModules, (, flags, ., process_common_js_modules, ), ., setCommonJSModulePathPrefix, (, flags, ., common_js_path_prefix, )]
[getCommandLineConfig, (, ), ., setPrintTree, (, flags, ., print_tree, ), ., setPrintAst, (, flags, ., print_ast, ), ., setPrintPassGraph, (, flags, ., print_pass_graph, ), ., setJscompDevMode, (, flags, ., jscomp_dev_mode, ), ., setLoggingLevel, (, flags, ., logging_level, ), ., setExterns, (, flags, ., externs, ), ., setJs, (, flags, ., getJsFiles, (, ), ), ., setJsOutputFile, (, flags, ., js_output_file, ), ., setModule, (, flags, ., module, ), ., setVariableMapInputFile, (, flags, ., variable_map_input_file, ), ., setPropertyMapInputFile, (, flags, ., property_map_input_file, ), ., setVariableMapOutputFile, (, flags, ., variable_map_output_file, ), ., setCreateNameMapFiles, (, flags, ., create_name_map_files, ), ., setPropertyMapOutputFile, (, flags, ., property_map_output_file, ), ., setCodingConvention, (, conv, ), ., setSummaryDetailLevel, (, flags, ., summary_detail_level, ), ., setOutputWrapper, (, flags, ., output_wrapper, ), ., setModuleWrapper, (, flags, ., module_wrapper, ), ., setModuleOutputPathPrefix, (, flags, ., module_output_path_prefix, ), ., setCreateSourceMap, (, flags, ., create_source_map, ), ., setSourceMapFormat, (, flags, ., source_map_format, ), ., setWarningGuardSpec, (, Flags, ., warningGuardSpec, ), ., setDefine, (, flags, ., define, ), ., setCharset, (, flags, ., charset, ), ., setManageClosureDependencies, (, flags, ., manage_closure_dependencies, ), ., setOnlyClosureDependencies, (, flags, ., only_closure_dependencies, ), ., setClosureEntryPoints, (, flags, ., closure_entry_point, ), ., setOutputManifest, (, ImmutableList, ., of, (, flags, ., output_manifest, ), ), ., setOutputModuleDependencies, (, flags, ., output_module_dependencies, ), ., setAcceptConstKeyword, (, flags, ., accept_const_keyword, ), ., setLanguageIn, (, flags, ., language_in, ), ., setProcessCommonJSModules, (, flags, ., process_common_js_modules, )]
[getCommandLineConfig, (, ), ., setPrintTree, (, flags, ., print_tree, ), ., setPrintAst, (, flags, ., print_ast, ), ., setPrintPassGraph, (, flags, ., print_pass_graph, ), ., setJscompDevMode, (, flags, ., jscomp_dev_mode, ), ., setLoggingLevel, (, flags, ., logging_level, ), ., setExterns, (, flags, ., externs, ), ., setJs, (, flags, ., getJsFiles, (, ), ), ., setJsOutputFile, (, flags, ., js_output_file, ), ., setModule, (, flags, ., module, ), ., setVariableMapInputFile, (, flags, ., variable_map_input_file, ), ., setPropertyMapInputFile, (, flags, ., property_map_input_file, ), ., setVariableMapOutputFile, (, flags, ., variable_map_output_file, ), ., setCreateNameMapFiles, (, flags, ., create_name_map_files, ), ., setPropertyMapOutputFile, (, flags, ., property_map_output_file, ), ., setCodingConvention, (, conv, ), ., setSummaryDetailLevel, (, flags, ., summary_detail_level, ), ., setOutputWrapper, (, flags, ., output_wrapper, ), ., setModuleWrapper, (, flags, ., module_wrapper, ), ., setModuleOutputPathPrefix, (, flags, ., module_output_path_prefix, ), ., setCreateSourceMap, (, flags, ., create_source_map, ), ., setSourceMapFormat, (, flags, ., source_map_format, ), ., setWarningGuardSpec, (, Flags, ., warningGuardSpec, ), ., setDefine, (, flags, ., define, ), ., setCharset, (, flags, ., charset, ), ., setManageClosureDependencies, (, flags, ., manage_closure_dependencies, ), ., setOnlyClosureDependencies, (, flags, ., only_closure_dependencies, ), ., setClosureEntryPoints, (, flags, ., closure_entry_point, ), ., setOutputManifest, (, ImmutableList, ., of, (, flags, ., output_manifest, ), ), ., setOutputModuleDependencies, (, flags, ., output_module_dependencies, ), ., setAcceptConstKeyword, (, flags, ., accept_const_keyword, ), ., setLanguageIn, (, flags, ., language_in, )]
[getCommandLineConfig, (, ), ., setPrintTree, (, flags, ., print_tree, ), ., setPrintAst, (, flags, ., print_ast, ), ., setPrintPassGraph, (, flags, ., print_pass_graph, ), ., setJscompDevMode, (, flags, ., jscomp_dev_mode, ), ., setLoggingLevel, (, flags, ., logging_level, ), ., setExterns, (, flags, ., externs, ), ., setJs, (, flags, ., getJsFiles, (, ), ), ., setJsOutputFile, (, flags, ., js_output_file, ), ., setModule, (, flags, ., module, ), ., setVariableMapInputFile, (, flags, ., variable_map_input_file, ), ., setPropertyMapInputFile, (, flags, ., property_map_input_file, ), ., setVariableMapOutputFile, (, flags, ., variable_map_output_file, ), ., setCreateNameMapFiles, (, flags, ., create_name_map_files, ), ., setPropertyMapOutputFile, (, flags, ., property_map_output_file, ), ., setCodingConvention, (, conv, ), ., setSummaryDetailLevel, (, flags, ., summary_detail_level, ), ., setOutputWrapper, (, flags, ., output_wrapper, ), ., setModuleWrapper, (, flags, ., module_wrapper, ), ., setModuleOutputPathPrefix, (, flags, ., module_output_path_prefix, ), ., setCreateSourceMap, (, flags, ., create_source_map, ), ., setSourceMapFormat, (, flags, ., source_map_format, ), ., setWarningGuardSpec, (, Flags, ., warningGuardSpec, ), ., setDefine, (, flags, ., define, ), ., setCharset, (, flags, ., charset, ), ., setManageClosureDependencies, (, flags, ., manage_closure_dependencies, ), ., setOnlyClosureDependencies, (, flags, ., only_closure_dependencies, ), ., setClosureEntryPoints, (, flags, ., closure_entry_point, ), ., setOutputManifest, (, ImmutableList, ., of, (, flags, ., output_manifest, ), ), ., setOutputModuleDependencies, (, flags, ., output_module_dependencies, ), ., setAcceptConstKeyword, (, flags, ., accept_const_keyword, )]
[getCommandLineConfig, (, ), ., setPrintTree, (, flags, ., print_tree, ), ., setPrintAst, (, flags, ., print_ast, ), ., setPrintPassGraph, (, flags, ., print_pass_graph, ), ., setJscompDevMode, (, flags, ., jscomp_dev_mode, ), ., setLoggingLevel, (, flags, ., logging_level, ), ., setExterns, (, flags, ., externs, ), ., setJs, (, flags, ., getJsFiles, (, ), ), ., setJsOutputFile, (, flags, ., js_output_file, ), ., setModule, (, flags, ., module, ), ., setVariableMapInputFile, (, flags, ., variable_map_input_file, ), ., setPropertyMapInputFile, (, flags, ., property_map_input_file, ), ., setVariableMapOutputFile, (, flags, ., variable_map_output_file, ), ., setCreateNameMapFiles, (, flags, ., create_name_map_files, ), ., setPropertyMapOutputFile, (, flags, ., property_map_output_file, ), ., setCodingConvention, (, conv, ), ., setSummaryDetailLevel, (, flags, ., summary_detail_level, ), ., setOutputWrapper, (, flags, ., output_wrapper, ), ., setModuleWrapper, (, flags, ., module_wrapper, ), ., setModuleOutputPathPrefix, (, flags, ., module_output_path_prefix, ), ., setCreateSourceMap, (, flags, ., create_source_map, ), ., setSourceMapFormat, (, flags, ., source_map_format, ), ., setWarningGuardSpec, (, Flags, ., warningGuardSpec, ), ., setDefine, (, flags, ., define, ), ., setCharset, (, flags, ., charset, ), ., setManageClosureDependencies, (, flags, ., manage_closure_dependencies, ), ., setOnlyClosureDependencies, (, flags, ., only_closure_dependencies, ), ., setClosureEntryPoints, (, flags, ., closure_entry_point, ), ., setOutputManifest, (, ImmutableList, ., of, (, flags, ., output_manifest, ), ), ., setOutputModuleDependencies, (, flags, ., output_module_dependencies, )]
[getCommandLineConfig, (, ), ., setPrintTree, (, flags, ., print_tree, ), ., setPrintAst, (, flags, ., print_ast, ), ., setPrintPassGraph, (, flags, ., print_pass_graph, ), ., setJscompDevMode, (, flags, ., jscomp_dev_mode, ), ., setLoggingLevel, (, flags, ., logging_level, ), ., setExterns, (, flags, ., externs, ), ., setJs, (, flags, ., getJsFiles, (, ), ), ., setJsOutputFile, (, flags, ., js_output_file, ), ., setModule, (, flags, ., module, ), ., setVariableMapInputFile, (, flags, ., variable_map_input_file, ), ., setPropertyMapInputFile, (, flags, ., property_map_input_file, ), ., setVariableMapOutputFile, (, flags, ., variable_map_output_file, ), ., setCreateNameMapFiles, (, flags, ., create_name_map_files, ), ., setPropertyMapOutputFile, (, flags, ., property_map_output_file, ), ., setCodingConvention, (, conv, ), ., setSummaryDetailLevel, (, flags, ., summary_detail_level, ), ., setOutputWrapper, (, flags, ., output_wrapper, ), ., setModuleWrapper, (, flags, ., module_wrapper, ), ., setModuleOutputPathPrefix, (, flags, ., module_output_path_prefix, ), ., setCreateSourceMap, (, flags, ., create_source_map, ), ., setSourceMapFormat, (, flags, ., source_map_format, ), ., setWarningGuardSpec, (, Flags, ., warningGuardSpec, ), ., setDefine, (, flags, ., define, ), ., setCharset, (, flags, ., charset, ), ., setManageClosureDependencies, (, flags, ., manage_closure_dependencies, ), ., setOnlyClosureDependencies, (, flags, ., only_closure_dependencies, ), ., setClosureEntryPoints, (, flags, ., closure_entry_point, ), ., setOutputManifest, (, ImmutableList, ., of, (, flags, ., output_manifest, ), )]
[getCommandLineConfig, (, ), ., setPrintTree, (, flags, ., print_tree, ), ., setPrintAst, (, flags, ., print_ast, ), ., setPrintPassGraph, (, flags, ., print_pass_graph, ), ., setJscompDevMode, (, flags, ., jscomp_dev_mode, ), ., setLoggingLevel, (, flags, ., logging_level, ), ., setExterns, (, flags, ., externs, ), ., setJs, (, flags, ., getJsFiles, (, ), ), ., setJsOutputFile, (, flags, ., js_output_file, ), ., setModule, (, flags, ., module, ), ., setVariableMapInputFile, (, flags, ., variable_map_input_file, ), ., setPropertyMapInputFile, (, flags, ., property_map_input_file, ), ., setVariableMapOutputFile, (, flags, ., variable_map_output_file, ), ., setCreateNameMapFiles, (, flags, ., create_name_map_files, ), ., setPropertyMapOutputFile, (, flags, ., property_map_output_file, ), ., setCodingConvention, (, conv, ), ., setSummaryDetailLevel, (, flags, ., summary_detail_level, ), ., setOutputWrapper, (, flags, ., output_wrapper, ), ., setModuleWrapper, (, flags, ., module_wrapper, ), ., setModuleOutputPathPrefix, (, flags, ., module_output_path_prefix, ), ., setCreateSourceMap, (, flags, ., create_source_map, ), ., setSourceMapFormat, (, flags, ., source_map_format, ), ., setWarningGuardSpec, (, Flags, ., warningGuardSpec, ), ., setDefine, (, flags, ., define, ), ., setCharset, (, flags, ., charset, ), ., setManageClosureDependencies, (, flags, ., manage_closure_dependencies, ), ., setOnlyClosureDependencies, (, flags, ., only_closure_dependencies, ), ., setClosureEntryPoints, (, flags, ., closure_entry_point, )]
[getCommandLineConfig, (, ), ., setPrintTree, (, flags, ., print_tree, ), ., setPrintAst, (, flags, ., print_ast, ), ., setPrintPassGraph, (, flags, ., print_pass_graph, ), ., setJscompDevMode, (, flags, ., jscomp_dev_mode, ), ., setLoggingLevel, (, flags, ., logging_level, ), ., setExterns, (, flags, ., externs, ), ., setJs, (, flags, ., getJsFiles, (, ), ), ., setJsOutputFile, (, flags, ., js_output_file, ), ., setModule, (, flags, ., module, ), ., setVariableMapInputFile, (, flags, ., variable_map_input_file, ), ., setPropertyMapInputFile, (, flags, ., property_map_input_file, ), ., setVariableMapOutputFile, (, flags, ., variable_map_output_file, ), ., setCreateNameMapFiles, (, flags, ., create_name_map_files, ), ., setPropertyMapOutputFile, (, flags, ., property_map_output_file, ), ., setCodingConvention, (, conv, ), ., setSummaryDetailLevel, (, flags, ., summary_detail_level, ), ., setOutputWrapper, (, flags, ., output_wrapper, ), ., setModuleWrapper, (, flags, ., module_wrapper, ), ., setModuleOutputPathPrefix, (, flags, ., module_output_path_prefix, ), ., setCreateSourceMap, (, flags, ., create_source_map, ), ., setSourceMapFormat, (, flags, ., source_map_format, ), ., setWarningGuardSpec, (, Flags, ., warningGuardSpec, ), ., setDefine, (, flags, ., define, ), ., setCharset, (, flags, ., charset, ), ., setManageClosureDependencies, (, flags, ., manage_closure_dependencies, ), ., setOnlyClosureDependencies, (, flags, ., only_closure_dependencies, )]
[getCommandLineConfig, (, ), ., setPrintTree, (, flags, ., print_tree, ), ., setPrintAst, (, flags, ., print_ast, ), ., setPrintPassGraph, (, flags, ., print_pass_graph, ), ., setJscompDevMode, (, flags, ., jscomp_dev_mode, ), ., setLoggingLevel, (, flags, ., logging_level, ), ., setExterns, (, flags, ., externs, ), ., setJs, (, flags, ., getJsFiles, (, ), ), ., setJsOutputFile, (, flags, ., js_output_file, ), ., setModule, (, flags, ., module, ), ., setVariableMapInputFile, (, flags, ., variable_map_input_file, ), ., setPropertyMapInputFile, (, flags, ., property_map_input_file, ), ., setVariableMapOutputFile, (, flags, ., variable_map_output_file, ), ., setCreateNameMapFiles, (, flags, ., create_name_map_files, ), ., setPropertyMapOutputFile, (, flags, ., property_map_output_file, ), ., setCodingConvention, (, conv, ), ., setSummaryDetailLevel, (, flags, ., summary_detail_level, ), ., setOutputWrapper, (, flags, ., output_wrapper, ), ., setModuleWrapper, (, flags, ., module_wrapper, ), ., setModuleOutputPathPrefix, (, flags, ., module_output_path_prefix, ), ., setCreateSourceMap, (, flags, ., create_source_map, ), ., setSourceMapFormat, (, flags, ., source_map_format, ), ., setWarningGuardSpec, (, Flags, ., warningGuardSpec, ), ., setDefine, (, flags, ., define, ), ., setCharset, (, flags, ., charset, ), ., setManageClosureDependencies, (, flags, ., manage_closure_dependencies, )]
[getCommandLineConfig, (, ), ., setPrintTree, (, flags, ., print_tree, ), ., setPrintAst, (, flags, ., print_ast, ), ., setPrintPassGraph, (, flags, ., print_pass_graph, ), ., setJscompDevMode, (, flags, ., jscomp_dev_mode, ), ., setLoggingLevel, (, flags, ., logging_level, ), ., setExterns, (, flags, ., externs, ), ., setJs, (, flags, ., getJsFiles, (, ), ), ., setJsOutputFile, (, flags, ., js_output_file, ), ., setModule, (, flags, ., module, ), ., setVariableMapInputFile, (, flags, ., variable_map_input_file, ), ., setPropertyMapInputFile, (, flags, ., property_map_input_file, ), ., setVariableMapOutputFile, (, flags, ., variable_map_output_file, ), ., setCreateNameMapFiles, (, flags, ., create_name_map_files, ), ., setPropertyMapOutputFile, (, flags, ., property_map_output_file, ), ., setCodingConvention, (, conv, ), ., setSummaryDetailLevel, (, flags, ., summary_detail_level, ), ., setOutputWrapper, (, flags, ., output_wrapper, ), ., setModuleWrapper, (, flags, ., module_wrapper, ), ., setModuleOutputPathPrefix, (, flags, ., module_output_path_prefix, ), ., setCreateSourceMap, (, flags, ., create_source_map, ), ., setSourceMapFormat, (, flags, ., source_map_format, ), ., setWarningGuardSpec, (, Flags, ., warningGuardSpec, ), ., setDefine, (, flags, ., define, ), ., setCharset, (, flags, ., charset, )]
[getCommandLineConfig, (, ), ., setPrintTree, (, flags, ., print_tree, ), ., setPrintAst, (, flags, ., print_ast, ), ., setPrintPassGraph, (, flags, ., print_pass_graph, ), ., setJscompDevMode, (, flags, ., jscomp_dev_mode, ), ., setLoggingLevel, (, flags, ., logging_level, ), ., setExterns, (, flags, ., externs, ), ., setJs, (, flags, ., getJsFiles, (, ), ), ., setJsOutputFile, (, flags, ., js_output_file, ), ., setModule, (, flags, ., module, ), ., setVariableMapInputFile, (, flags, ., variable_map_input_file, ), ., setPropertyMapInputFile, (, flags, ., property_map_input_file, ), ., setVariableMapOutputFile, (, flags, ., variable_map_output_file, ), ., setCreateNameMapFiles, (, flags, ., create_name_map_files, ), ., setPropertyMapOutputFile, (, flags, ., property_map_output_file, ), ., setCodingConvention, (, conv, ), ., setSummaryDetailLevel, (, flags, ., summary_detail_level, ), ., setOutputWrapper, (, flags, ., output_wrapper, ), ., setModuleWrapper, (, flags, ., module_wrapper, ), ., setModuleOutputPathPrefix, (, flags, ., module_output_path_prefix, ), ., setCreateSourceMap, (, flags, ., create_source_map, ), ., setSourceMapFormat, (, flags, ., source_map_format, ), ., setWarningGuardSpec, (, Flags, ., warningGuardSpec, ), ., setDefine, (, flags, ., define, )]
[getCommandLineConfig, (, ), ., setPrintTree, (, flags, ., print_tree, ), ., setPrintAst, (, flags, ., print_ast, ), ., setPrintPassGraph, (, flags, ., print_pass_graph, ), ., setJscompDevMode, (, flags, ., jscomp_dev_mode, ), ., setLoggingLevel, (, flags, ., logging_level, ), ., setExterns, (, flags, ., externs, ), ., setJs, (, flags, ., getJsFiles, (, ), ), ., setJsOutputFile, (, flags, ., js_output_file, ), ., setModule, (, flags, ., module, ), ., setVariableMapInputFile, (, flags, ., variable_map_input_file, ), ., setPropertyMapInputFile, (, flags, ., property_map_input_file, ), ., setVariableMapOutputFile, (, flags, ., variable_map_output_file, ), ., setCreateNameMapFiles, (, flags, ., create_name_map_files, ), ., setPropertyMapOutputFile, (, flags, ., property_map_output_file, ), ., setCodingConvention, (, conv, ), ., setSummaryDetailLevel, (, flags, ., summary_detail_level, ), ., setOutputWrapper, (, flags, ., output_wrapper, ), ., setModuleWrapper, (, flags, ., module_wrapper, ), ., setModuleOutputPathPrefix, (, flags, ., module_output_path_prefix, ), ., setCreateSourceMap, (, flags, ., create_source_map, ), ., setSourceMapFormat, (, flags, ., source_map_format, ), ., setWarningGuardSpec, (, Flags, ., warningGuardSpec, )]
[getCommandLineConfig, (, ), ., setPrintTree, (, flags, ., print_tree, ), ., setPrintAst, (, flags, ., print_ast, ), ., setPrintPassGraph, (, flags, ., print_pass_graph, ), ., setJscompDevMode, (, flags, ., jscomp_dev_mode, ), ., setLoggingLevel, (, flags, ., logging_level, ), ., setExterns, (, flags, ., externs, ), ., setJs, (, flags, ., getJsFiles, (, ), ), ., setJsOutputFile, (, flags, ., js_output_file, ), ., setModule, (, flags, ., module, ), ., setVariableMapInputFile, (, flags, ., variable_map_input_file, ), ., setPropertyMapInputFile, (, flags, ., property_map_input_file, ), ., setVariableMapOutputFile, (, flags, ., variable_map_output_file, ), ., setCreateNameMapFiles, (, flags, ., create_name_map_files, ), ., setPropertyMapOutputFile, (, flags, ., property_map_output_file, ), ., setCodingConvention, (, conv, ), ., setSummaryDetailLevel, (, flags, ., summary_detail_level, ), ., setOutputWrapper, (, flags, ., output_wrapper, ), ., setModuleWrapper, (, flags, ., module_wrapper, ), ., setModuleOutputPathPrefix, (, flags, ., module_output_path_prefix, ), ., setCreateSourceMap, (, flags, ., create_source_map, ), ., setSourceMapFormat, (, flags, ., source_map_format, )]
[getCommandLineConfig, (, ), ., setPrintTree, (, flags, ., print_tree, ), ., setPrintAst, (, flags, ., print_ast, ), ., setPrintPassGraph, (, flags, ., print_pass_graph, ), ., setJscompDevMode, (, flags, ., jscomp_dev_mode, ), ., setLoggingLevel, (, flags, ., logging_level, ), ., setExterns, (, flags, ., externs, ), ., setJs, (, flags, ., getJsFiles, (, ), ), ., setJsOutputFile, (, flags, ., js_output_file, ), ., setModule, (, flags, ., module, ), ., setVariableMapInputFile, (, flags, ., variable_map_input_file, ), ., setPropertyMapInputFile, (, flags, ., property_map_input_file, ), ., setVariableMapOutputFile, (, flags, ., variable_map_output_file, ), ., setCreateNameMapFiles, (, flags, ., create_name_map_files, ), ., setPropertyMapOutputFile, (, flags, ., property_map_output_file, ), ., setCodingConvention, (, conv, ), ., setSummaryDetailLevel, (, flags, ., summary_detail_level, ), ., setOutputWrapper, (, flags, ., output_wrapper, ), ., setModuleWrapper, (, flags, ., module_wrapper, ), ., setModuleOutputPathPrefix, (, flags, ., module_output_path_prefix, ), ., setCreateSourceMap, (, flags, ., create_source_map, )]
[getCommandLineConfig, (, ), ., setPrintTree, (, flags, ., print_tree, ), ., setPrintAst, (, flags, ., print_ast, ), ., setPrintPassGraph, (, flags, ., print_pass_graph, ), ., setJscompDevMode, (, flags, ., jscomp_dev_mode, ), ., setLoggingLevel, (, flags, ., logging_level, ), ., setExterns, (, flags, ., externs, ), ., setJs, (, flags, ., getJsFiles, (, ), ), ., setJsOutputFile, (, flags, ., js_output_file, ), ., setModule, (, flags, ., module, ), ., setVariableMapInputFile, (, flags, ., variable_map_input_file, ), ., setPropertyMapInputFile, (, flags, ., property_map_input_file, ), ., setVariableMapOutputFile, (, flags, ., variable_map_output_file, ), ., setCreateNameMapFiles, (, flags, ., create_name_map_files, ), ., setPropertyMapOutputFile, (, flags, ., property_map_output_file, ), ., setCodingConvention, (, conv, ), ., setSummaryDetailLevel, (, flags, ., summary_detail_level, ), ., setOutputWrapper, (, flags, ., output_wrapper, ), ., setModuleWrapper, (, flags, ., module_wrapper, ), ., setModuleOutputPathPrefix, (, flags, ., module_output_path_prefix, )]
[getCommandLineConfig, (, ), ., setPrintTree, (, flags, ., print_tree, ), ., setPrintAst, (, flags, ., print_ast, ), ., setPrintPassGraph, (, flags, ., print_pass_graph, ), ., setJscompDevMode, (, flags, ., jscomp_dev_mode, ), ., setLoggingLevel, (, flags, ., logging_level, ), ., setExterns, (, flags, ., externs, ), ., setJs, (, flags, ., getJsFiles, (, ), ), ., setJsOutputFile, (, flags, ., js_output_file, ), ., setModule, (, flags, ., module, ), ., setVariableMapInputFile, (, flags, ., variable_map_input_file, ), ., setPropertyMapInputFile, (, flags, ., property_map_input_file, ), ., setVariableMapOutputFile, (, flags, ., variable_map_output_file, ), ., setCreateNameMapFiles, (, flags, ., create_name_map_files, ), ., setPropertyMapOutputFile, (, flags, ., property_map_output_file, ), ., setCodingConvention, (, conv, ), ., setSummaryDetailLevel, (, flags, ., summary_detail_level, ), ., setOutputWrapper, (, flags, ., output_wrapper, ), ., setModuleWrapper, (, flags, ., module_wrapper, )]
[getCommandLineConfig, (, ), ., setPrintTree, (, flags, ., print_tree, ), ., setPrintAst, (, flags, ., print_ast, ), ., setPrintPassGraph, (, flags, ., print_pass_graph, ), ., setJscompDevMode, (, flags, ., jscomp_dev_mode, ), ., setLoggingLevel, (, flags, ., logging_level, ), ., setExterns, (, flags, ., externs, ), ., setJs, (, flags, ., getJsFiles, (, ), ), ., setJsOutputFile, (, flags, ., js_output_file, ), ., setModule, (, flags, ., module, ), ., setVariableMapInputFile, (, flags, ., variable_map_input_file, ), ., setPropertyMapInputFile, (, flags, ., property_map_input_file, ), ., setVariableMapOutputFile, (, flags, ., variable_map_output_file, ), ., setCreateNameMapFiles, (, flags, ., create_name_map_files, ), ., setPropertyMapOutputFile, (, flags, ., property_map_output_file, ), ., setCodingConvention, (, conv, ), ., setSummaryDetailLevel, (, flags, ., summary_detail_level, ), ., setOutputWrapper, (, flags, ., output_wrapper, )]
[getCommandLineConfig, (, ), ., setPrintTree, (, flags, ., print_tree, ), ., setPrintAst, (, flags, ., print_ast, ), ., setPrintPassGraph, (, flags, ., print_pass_graph, ), ., setJscompDevMode, (, flags, ., jscomp_dev_mode, ), ., setLoggingLevel, (, flags, ., logging_level, ), ., setExterns, (, flags, ., externs, ), ., setJs, (, flags, ., getJsFiles, (, ), ), ., setJsOutputFile, (, flags, ., js_output_file, ), ., setModule, (, flags, ., module, ), ., setVariableMapInputFile, (, flags, ., variable_map_input_file, ), ., setPropertyMapInputFile, (, flags, ., property_map_input_file, ), ., setVariableMapOutputFile, (, flags, ., variable_map_output_file, ), ., setCreateNameMapFiles, (, flags, ., create_name_map_files, ), ., setPropertyMapOutputFile, (, flags, ., property_map_output_file, ), ., setCodingConvention, (, conv, ), ., setSummaryDetailLevel, (, flags, ., summary_detail_level, )]
[getCommandLineConfig, (, ), ., setPrintTree, (, flags, ., print_tree, ), ., setPrintAst, (, flags, ., print_ast, ), ., setPrintPassGraph, (, flags, ., print_pass_graph, ), ., setJscompDevMode, (, flags, ., jscomp_dev_mode, ), ., setLoggingLevel, (, flags, ., logging_level, ), ., setExterns, (, flags, ., externs, ), ., setJs, (, flags, ., getJsFiles, (, ), ), ., setJsOutputFile, (, flags, ., js_output_file, ), ., setModule, (, flags, ., module, ), ., setVariableMapInputFile, (, flags, ., variable_map_input_file, ), ., setPropertyMapInputFile, (, flags, ., property_map_input_file, ), ., setVariableMapOutputFile, (, flags, ., variable_map_output_file, ), ., setCreateNameMapFiles, (, flags, ., create_name_map_files, ), ., setPropertyMapOutputFile, (, flags, ., property_map_output_file, ), ., setCodingConvention, (, conv, )]
[getCommandLineConfig, (, ), ., setPrintTree, (, flags, ., print_tree, ), ., setPrintAst, (, flags, ., print_ast, ), ., setPrintPassGraph, (, flags, ., print_pass_graph, ), ., setJscompDevMode, (, flags, ., jscomp_dev_mode, ), ., setLoggingLevel, (, flags, ., logging_level, ), ., setExterns, (, flags, ., externs, ), ., setJs, (, flags, ., getJsFiles, (, ), ), ., setJsOutputFile, (, flags, ., js_output_file, ), ., setModule, (, flags, ., module, ), ., setVariableMapInputFile, (, flags, ., variable_map_input_file, ), ., setPropertyMapInputFile, (, flags, ., property_map_input_file, ), ., setVariableMapOutputFile, (, flags, ., variable_map_output_file, ), ., setCreateNameMapFiles, (, flags, ., create_name_map_files, ), ., setPropertyMapOutputFile, (, flags, ., property_map_output_file, )]
[getCommandLineConfig, (, ), ., setPrintTree, (, flags, ., print_tree, ), ., setPrintAst, (, flags, ., print_ast, ), ., setPrintPassGraph, (, flags, ., print_pass_graph, ), ., setJscompDevMode, (, flags, ., jscomp_dev_mode, ), ., setLoggingLevel, (, flags, ., logging_level, ), ., setExterns, (, flags, ., externs, ), ., setJs, (, flags, ., getJsFiles, (, ), ), ., setJsOutputFile, (, flags, ., js_output_file, ), ., setModule, (, flags, ., module, ), ., setVariableMapInputFile, (, flags, ., variable_map_input_file, ), ., setPropertyMapInputFile, (, flags, ., property_map_input_file, ), ., setVariableMapOutputFile, (, flags, ., variable_map_output_file, ), ., setCreateNameMapFiles, (, flags, ., create_name_map_files, )]
[getCommandLineConfig, (, ), ., setPrintTree, (, flags, ., print_tree, ), ., setPrintAst, (, flags, ., print_ast, ), ., setPrintPassGraph, (, flags, ., print_pass_graph, ), ., setJscompDevMode, (, flags, ., jscomp_dev_mode, ), ., setLoggingLevel, (, flags, ., logging_level, ), ., setExterns, (, flags, ., externs, ), ., setJs, (, flags, ., getJsFiles, (, ), ), ., setJsOutputFile, (, flags, ., js_output_file, ), ., setModule, (, flags, ., module, ), ., setVariableMapInputFile, (, flags, ., variable_map_input_file, ), ., setPropertyMapInputFile, (, flags, ., property_map_input_file, ), ., setVariableMapOutputFile, (, flags, ., variable_map_output_file, )]
[getCommandLineConfig, (, ), ., setPrintTree, (, flags, ., print_tree, ), ., setPrintAst, (, flags, ., print_ast, ), ., setPrintPassGraph, (, flags, ., print_pass_graph, ), ., setJscompDevMode, (, flags, ., jscomp_dev_mode, ), ., setLoggingLevel, (, flags, ., logging_level, ), ., setExterns, (, flags, ., externs, ), ., setJs, (, flags, ., getJsFiles, (, ), ), ., setJsOutputFile, (, flags, ., js_output_file, ), ., setModule, (, flags, ., module, ), ., setVariableMapInputFile, (, flags, ., variable_map_input_file, ), ., setPropertyMapInputFile, (, flags, ., property_map_input_file, )]
[getCommandLineConfig, (, ), ., setPrintTree, (, flags, ., print_tree, ), ., setPrintAst, (, flags, ., print_ast, ), ., setPrintPassGraph, (, flags, ., print_pass_graph, ), ., setJscompDevMode, (, flags, ., jscomp_dev_mode, ), ., setLoggingLevel, (, flags, ., logging_level, ), ., setExterns, (, flags, ., externs, ), ., setJs, (, flags, ., getJsFiles, (, ), ), ., setJsOutputFile, (, flags, ., js_output_file, ), ., setModule, (, flags, ., module, ), ., setVariableMapInputFile, (, flags, ., variable_map_input_file, )]
[getCommandLineConfig, (, ), ., setPrintTree, (, flags, ., print_tree, ), ., setPrintAst, (, flags, ., print_ast, ), ., setPrintPassGraph, (, flags, ., print_pass_graph, ), ., setJscompDevMode, (, flags, ., jscomp_dev_mode, ), ., setLoggingLevel, (, flags, ., logging_level, ), ., setExterns, (, flags, ., externs, ), ., setJs, (, flags, ., getJsFiles, (, ), ), ., setJsOutputFile, (, flags, ., js_output_file, ), ., setModule, (, flags, ., module, )]
[getCommandLineConfig, (, ), ., setPrintTree, (, flags, ., print_tree, ), ., setPrintAst, (, flags, ., print_ast, ), ., setPrintPassGraph, (, flags, ., print_pass_graph, ), ., setJscompDevMode, (, flags, ., jscomp_dev_mode, ), ., setLoggingLevel, (, flags, ., logging_level, ), ., setExterns, (, flags, ., externs, ), ., setJs, (, flags, ., getJsFiles, (, ), ), ., setJsOutputFile, (, flags, ., js_output_file, )]
[getCommandLineConfig, (, ), ., setPrintTree, (, flags, ., print_tree, ), ., setPrintAst, (, flags, ., print_ast, ), ., setPrintPassGraph, (, flags, ., print_pass_graph, ), ., setJscompDevMode, (, flags, ., jscomp_dev_mode, ), ., setLoggingLevel, (, flags, ., logging_level, ), ., setExterns, (, flags, ., externs, ), ., setJs, (, flags, ., getJsFiles, (, ), )]
[getCommandLineConfig, (, ), ., setPrintTree, (, flags, ., print_tree, ), ., setPrintAst, (, flags, ., print_ast, ), ., setPrintPassGraph, (, flags, ., print_pass_graph, ), ., setJscompDevMode, (, flags, ., jscomp_dev_mode, ), ., setLoggingLevel, (, flags, ., logging_level, ), ., setExterns, (, flags, ., externs, )]
[getCommandLineConfig, (, ), ., setPrintTree, (, flags, ., print_tree, ), ., setPrintAst, (, flags, ., print_ast, ), ., setPrintPassGraph, (, flags, ., print_pass_graph, ), ., setJscompDevMode, (, flags, ., jscomp_dev_mode, ), ., setLoggingLevel, (, flags, ., logging_level, )]
[getCommandLineConfig, (, ), ., setPrintTree, (, flags, ., print_tree, ), ., setPrintAst, (, flags, ., print_ast, ), ., setPrintPassGraph, (, flags, ., print_pass_graph, ), ., setJscompDevMode, (, flags, ., jscomp_dev_mode, )]
[getCommandLineConfig, (, ), ., setPrintTree, (, flags, ., print_tree, ), ., setPrintAst, (, flags, ., print_ast, ), ., setPrintPassGraph, (, flags, ., print_pass_graph, )]
[getCommandLineConfig, (, ), ., setPrintTree, (, flags, ., print_tree, ), ., setPrintAst, (, flags, ., print_ast, )]
[getCommandLineConfig, (, ), ., setPrintTree, (, flags, ., print_tree, )]
[getCommandLineConfig, (, )]
[flags, ., print_tree]
[flags]
[flags, ., print_ast]
[flags]
[flags, ., print_pass_graph]
[flags]
[flags, ., jscomp_dev_mode]
[flags]
[flags, ., logging_level]
[flags]
[flags, ., externs]
[flags]
[flags, ., getJsFiles, (, )]
[flags]
[flags, ., js_output_file]
[flags]
[flags, ., module]
[flags]
[flags, ., variable_map_input_file]
[flags]
[flags, ., property_map_input_file]
[flags]
[flags, ., variable_map_output_file]
[flags]
[flags, ., create_name_map_files]
[flags]
[flags, ., property_map_output_file]
[flags]
[conv]
[flags, ., summary_detail_level]
[flags]
[flags, ., output_wrapper]
[flags]
[flags, ., module_wrapper]
[flags]
[flags, ., module_output_path_prefix]
[flags]
[flags, ., create_source_map]
[flags]
[flags, ., source_map_format]
[flags]
[Flags, ., warningGuardSpec]
[Flags]
[flags, ., define]
[flags]
[flags, ., charset]
[flags]
[flags, ., manage_closure_dependencies]
[flags]
[flags, ., only_closure_dependencies]
[flags]
[flags, ., closure_entry_point]
[flags]
[ImmutableList, ., of, (, flags, ., output_manifest, )]
[ImmutableList]
[flags, ., output_manifest]
[flags]
[flags, ., output_module_dependencies]
[flags]
[flags, ., accept_const_keyword]
[flags]
[flags, ., language_in]
[flags]
[flags, ., process_common_js_modules]
[flags]
[flags, ., common_js_path_prefix]
[flags]
[flags, ., transform_amd_modules]
[flags]
[flags, ., warnings_whitelist_file]
[flags]
[new, CompilerOptions, (, )]
[flags, ., process_jquery_primitives]
[flags]
[options, ., setCodingConvention, (, new, JqueryCodingConvention, (, ), )]
[options]
[new, JqueryCodingConvention, (, )]
[options, ., setCodingConvention, (, new, ClosureCodingConvention, (, ), )]
[options]
[new, ClosureCodingConvention, (, )]
[flags, ., compilation_level]
[flags]
[level, ., setOptionsForCompilationLevel, (, options, )]
[level]
[options]
[flags, ., debug]
[flags]
[level, ., setDebugOptionsForCompilationLevel, (, options, )]
[level]
[options]
[flags, ., use_types_for_optimization]
[flags]
[level, ., setTypeBasedOptimizationOptions, (, options, )]
[level]
[options]
[flags, ., generate_exports]
[flags]
[options, ., setGenerateExports, (, flags, ., generate_exports, )]
[options]
[flags, ., generate_exports]
[flags]
[flags, ., warning_level]
[flags]
[wLevel, ., setOptionsForWarningLevel, (, options, )]
[wLevel]
[options]
[flags, ., formatting]
[flags]
[formattingOption, ., applyToOptions, (, options, )]
[formattingOption]
[options]
[options, ., closurePass]
[options]
[flags, ., process_closure_primitives]
[flags]
[options, ., jqueryPass]
[options]
[flags, ., process_jquery_primitives, &&, CompilationLevel, ., ADVANCED_OPTIMIZATIONS, ==, level]
[flags, ., process_jquery_primitives]
[flags]
[CompilationLevel, ., ADVANCED_OPTIMIZATIONS, ==, level]
[CompilationLevel, ., ADVANCED_OPTIMIZATIONS]
[CompilationLevel]
[level]
[!, flags, ., translationsFile, ., isEmpty, (, )]
[flags, ., translationsFile, ., isEmpty, (, )]
[flags, ., translationsFile]
[flags]
[options, ., messageBundle]
[options]
[new, XtbMessageBundle, (, new, FileInputStream, (, flags, ., translationsFile, ), ,, flags, ., translationsProject, )]
[new, FileInputStream, (, flags, ., translationsFile, )]
[flags, ., translationsFile]
[flags]
[flags, ., translationsProject]
[flags]
[new, RuntimeException, (, "Reading XTB file", ,, e, )]
["Reading XTB file"]
[e]
[CompilationLevel, ., ADVANCED_OPTIMIZATIONS, ==, level]
[CompilationLevel, ., ADVANCED_OPTIMIZATIONS]
[CompilationLevel]
[level]
[options, ., messageBundle]
[options]
[new, EmptyMessageBundle, (, )]
[options]
[new, Compiler, (, getErrorPrintStream, (, ), )]
[getErrorPrintStream, (, )]
[super, ., createExterns, (, )]
[super]
[flags, ., use_only_custom_externs, ||, isInTestMode, (, )]
[flags, ., use_only_custom_externs]
[flags]
[isInTestMode, (, )]
[externs]
[getDefaultExterns, (, )]
[defaultExterns, ., addAll, (, externs, )]
[defaultExterns]
[externs]
[defaultExterns]
[ImmutableList, ., of, (, "es3.js", ,, "es5.js", ,, "w3c_event.js", ,, "w3c_event3.js", ,, "gecko_event.js", ,, "ie_event.js", ,, "webkit_event.js", ,, "w3c_dom1.js", ,, "w3c_dom2.js", ,, "w3c_dom3.js", ,, "gecko_dom.js", ,, "ie_dom.js", ,, "webkit_dom.js", ,, "w3c_css.js", ,, "gecko_css.js", ,, "ie_css.js", ,, "webkit_css.js", ,, "google.js", ,, "deprecated.js", ,, "fileapi.js", ,, "flash.js", ,, "gears_symbols.js", ,, "gears_types.js", ,, "gecko_xml.js", ,, "html5.js", ,, "ie_vml.js", ,, "iphone.js", ,, "webstorage.js", ,, "w3c_anim_timing.js", ,, "w3c_css3d.js", ,, "w3c_elementtraversal.js", ,, "w3c_geolocation.js", ,, "w3c_indexeddb.js", ,, "w3c_navigation_timing.js", ,, "w3c_range.js", ,, "w3c_selectors.js", ,, "w3c_xml.js", ,, "window.js", ,, "webkit_notifications.js", ,, "webgl.js", )]
[ImmutableList]
["es3.js"]
["es5.js"]
["w3c_event.js"]
["w3c_event3.js"]
["gecko_event.js"]
["ie_event.js"]
["webkit_event.js"]
["w3c_dom1.js"]
["w3c_dom2.js"]
["w3c_dom3.js"]
["gecko_dom.js"]
["ie_dom.js"]
["webkit_dom.js"]
["w3c_css.js"]
["gecko_css.js"]
["ie_css.js"]
["webkit_css.js"]
["google.js"]
["deprecated.js"]
["fileapi.js"]
["flash.js"]
["gears_symbols.js"]
["gears_types.js"]
["gecko_xml.js"]
["html5.js"]
["ie_vml.js"]
["iphone.js"]
["webstorage.js"]
["w3c_anim_timing.js"]
["w3c_css3d.js"]
["w3c_elementtraversal.js"]
["w3c_geolocation.js"]
["w3c_indexeddb.js"]
["w3c_navigation_timing.js"]
["w3c_range.js"]
["w3c_selectors.js"]
["w3c_xml.js"]
["window.js"]
["webkit_notifications.js"]
["webgl.js"]
[CommandLineRunner, ., class, ., getResourceAsStream, (, "/externs.zip", )]
[CommandLineRunner, ., class]
["/externs.zip"]
[input, ==, null]
[input]
[null]
[input]
[CommandLineRunner, ., class, ., getResourceAsStream, (, "externs.zip", )]
[CommandLineRunner, ., class]
["externs.zip"]
[Preconditions, ., checkNotNull, (, input, )]
[Preconditions]
[input]
[new, ZipInputStream, (, input, )]
[input]
[Maps, ., newHashMap, (, )]
[Maps]
[null]
[(, entry, =, zip, ., getNextEntry, (, ), ), !=, null]
[(, entry, =, zip, ., getNextEntry, (, ), )]
[entry]
[zip, ., getNextEntry, (, )]
[zip]
[null]
[new, BufferedInputStream, (, new, LimitInputStream, (, zip, ,, entry, ., getSize, (, ), ), )]
[new, LimitInputStream, (, zip, ,, entry, ., getSize, (, ), )]
[zip]
[entry, ., getSize, (, )]
[entry]
[externsMap, ., put, (, entry, ., getName, (, ), ,, SourceFile, ., fromInputStream, (, "externs.zip//", +, entry, ., getName, (, ), ,, entryStream, ), )]
[externsMap]
[entry, ., getName, (, )]
[entry]
[SourceFile, ., fromInputStream, (, "externs.zip//", +, entry, ., getName, (, ), ,, entryStream, )]
[SourceFile]
["externs.zip//", +, entry, ., getName, (, )]
["externs.zip//"]
[entry, ., getName, (, )]
[entry]
[entryStream]
[Preconditions, ., checkState, (, externsMap, ., keySet, (, ), ., equals, (, Sets, ., newHashSet, (, DEFAULT_EXTERNS_NAMES, ), ), ,, "Externs zip must match our hard-coded list of externs.", )]
[Preconditions]
[externsMap, ., keySet, (, ), ., equals, (, Sets, ., newHashSet, (, DEFAULT_EXTERNS_NAMES, ), )]
[externsMap, ., keySet, (, )]
[externsMap]
[Sets, ., newHashSet, (, DEFAULT_EXTERNS_NAMES, )]
[Sets]
[DEFAULT_EXTERNS_NAMES]
["Externs zip must match our hard-coded list of externs."]
[Lists, ., newArrayList, (, )]
[Lists]
[DEFAULT_EXTERNS_NAMES]
[externs, ., add, (, externsMap, ., get, (, key, ), )]
[externs]
[externsMap, ., get, (, key, )]
[externsMap]
[key]
[externs]
[this, ., isConfigValid]
[this]
[new, CommandLineRunner, (, args, )]
[args]
[runner, ., shouldRunCompiler, (, )]
[runner]
[runner, ., run, (, )]
[runner]
[System, ., exit, (, -, 1, )]
[System]
[-, 1]
[1]
