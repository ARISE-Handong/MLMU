[-, 2110953284060001145L]
[2110953284060001145L]
[new, AbstractPeriod, (, ), {, public, int, getValue, (, int, index, ), {, return, 0, ;, }, public, PeriodType, getPeriodType, (, ), {, return, PeriodType, ., time, (, ), ;, }, }]
[0]
[PeriodType, ., time, (, )]
[PeriodType]
[type]
[checkPeriodType, (, type, )]
[type]
[iType]
[type]
[iValues]
[setPeriodInternal, (, years, ,, months, ,, weeks, ,, days, ,, hours, ,, minutes, ,, seconds, ,, millis, )]
[years]
[months]
[weeks]
[days]
[hours]
[minutes]
[seconds]
[millis]
[type]
[checkPeriodType, (, type, )]
[type]
[chrono]
[DateTimeUtils, ., getChronology, (, chrono, )]
[DateTimeUtils]
[chrono]
[iType]
[type]
[iValues]
[chrono, ., get, (, this, ,, startInstant, ,, endInstant, )]
[chrono]
[this]
[startInstant]
[endInstant]
[type]
[checkPeriodType, (, type, )]
[type]
[startInstant, ==, null, &&, endInstant, ==, null]
[startInstant, ==, null]
[startInstant]
[null]
[endInstant, ==, null]
[endInstant]
[null]
[iType]
[type]
[iValues]
[new, int, [, size, (, ), ]]
[size, (, )]
[DateTimeUtils, ., getInstantMillis, (, startInstant, )]
[DateTimeUtils]
[startInstant]
[DateTimeUtils, ., getInstantMillis, (, endInstant, )]
[DateTimeUtils]
[endInstant]
[DateTimeUtils, ., getIntervalChronology, (, startInstant, ,, endInstant, )]
[DateTimeUtils]
[startInstant]
[endInstant]
[iType]
[type]
[iValues]
[chrono, ., get, (, this, ,, startMillis, ,, endMillis, )]
[chrono]
[this]
[startMillis]
[endMillis]
[start, ==, null, ||, end, ==, null]
[start, ==, null]
[start]
[null]
[end, ==, null]
[end]
[null]
[new, IllegalArgumentException, (, "ReadablePartial objects must not be null", )]
["ReadablePartial objects must not be null"]
[start, instanceof, BaseLocal, &&, end, instanceof, BaseLocal, &&, start, ., getClass, (, ), ==, end, ., getClass, (, )]
[start, instanceof, BaseLocal, &&, end, instanceof, BaseLocal]
[start, instanceof, BaseLocal]
[start]
[end, instanceof, BaseLocal]
[end]
[start, ., getClass, (, ), ==, end, ., getClass, (, )]
[start, ., getClass, (, )]
[start]
[end, ., getClass, (, )]
[end]
[type]
[checkPeriodType, (, type, )]
[type]
[(, (, BaseLocal, ), start, ), ., getLocalMillis, (, )]
[(, (, BaseLocal, ), start, )]
[(, BaseLocal, ), start]
[start]
[(, (, BaseLocal, ), end, ), ., getLocalMillis, (, )]
[(, (, BaseLocal, ), end, )]
[(, BaseLocal, ), end]
[end]
[start, ., getChronology, (, )]
[start]
[chrono]
[DateTimeUtils, ., getChronology, (, chrono, )]
[DateTimeUtils]
[chrono]
[iType]
[type]
[iValues]
[chrono, ., get, (, this, ,, startMillis, ,, endMillis, )]
[chrono]
[this]
[startMillis]
[endMillis]
[start, ., size, (, ), !=, end, ., size, (, )]
[start, ., size, (, )]
[start]
[end, ., size, (, )]
[end]
[new, IllegalArgumentException, (, "ReadablePartial objects must have the same set of fields", )]
["ReadablePartial objects must have the same set of fields"]
[0]
[start, ., size, (, )]
[start]
[i, <, isize]
[i]
[isize]
[i, ++]
[i]
[start, ., getFieldType, (, i, ), !=, end, ., getFieldType, (, i, )]
[start, ., getFieldType, (, i, )]
[start]
[i]
[end, ., getFieldType, (, i, )]
[end]
[i]
[new, IllegalArgumentException, (, "ReadablePartial objects must have the same set of fields", )]
["ReadablePartial objects must have the same set of fields"]
[DateTimeUtils, ., isContiguous, (, start, ), ==, false]
[DateTimeUtils, ., isContiguous, (, start, )]
[DateTimeUtils]
[start]
[false]
[new, IllegalArgumentException, (, "ReadablePartial objects must be contiguous", )]
["ReadablePartial objects must be contiguous"]
[iType]
[checkPeriodType, (, type, )]
[type]
[DateTimeUtils, ., getChronology, (, start, ., getChronology, (, ), ), ., withUTC, (, )]
[DateTimeUtils, ., getChronology, (, start, ., getChronology, (, ), )]
[DateTimeUtils]
[start, ., getChronology, (, )]
[start]
[iValues]
[chrono, ., get, (, this, ,, chrono, ., set, (, start, ,, 0L, ), ,, chrono, ., set, (, end, ,, 0L, ), )]
[chrono]
[this]
[chrono, ., set, (, start, ,, 0L, )]
[chrono]
[start]
[0L]
[chrono, ., set, (, end, ,, 0L, )]
[chrono]
[end]
[0L]
[type]
[checkPeriodType, (, type, )]
[type]
[DateTimeUtils, ., getInstantMillis, (, startInstant, )]
[DateTimeUtils]
[startInstant]
[DateTimeUtils, ., getDurationMillis, (, duration, )]
[DateTimeUtils]
[duration]
[FieldUtils, ., safeAdd, (, startMillis, ,, durationMillis, )]
[FieldUtils]
[startMillis]
[durationMillis]
[DateTimeUtils, ., getInstantChronology, (, startInstant, )]
[DateTimeUtils]
[startInstant]
[iType]
[type]
[iValues]
[chrono, ., get, (, this, ,, startMillis, ,, endMillis, )]
[chrono]
[this]
[startMillis]
[endMillis]
[type]
[checkPeriodType, (, type, )]
[type]
[DateTimeUtils, ., getDurationMillis, (, duration, )]
[DateTimeUtils]
[duration]
[DateTimeUtils, ., getInstantMillis, (, endInstant, )]
[DateTimeUtils]
[endInstant]
[FieldUtils, ., safeSubtract, (, endMillis, ,, durationMillis, )]
[FieldUtils]
[endMillis]
[durationMillis]
[DateTimeUtils, ., getInstantChronology, (, endInstant, )]
[DateTimeUtils]
[endInstant]
[iType]
[type]
[iValues]
[chrono, ., get, (, this, ,, startMillis, ,, endMillis, )]
[chrono]
[this]
[startMillis]
[endMillis]
[iType]
[PeriodType, ., standard, (, )]
[PeriodType]
[ISOChronology, ., getInstanceUTC, (, ), ., get, (, DUMMY_PERIOD, ,, duration, )]
[ISOChronology, ., getInstanceUTC, (, )]
[ISOChronology]
[DUMMY_PERIOD]
[duration]
[iValues]
[new, int, [, 8, ]]
[8]
[System, ., arraycopy, (, values, ,, 0, ,, iValues, ,, 4, ,, 4, )]
[System]
[values]
[0]
[iValues]
[4]
[4]
[type]
[checkPeriodType, (, type, )]
[type]
[chrono]
[DateTimeUtils, ., getChronology, (, chrono, )]
[DateTimeUtils]
[chrono]
[iType]
[type]
[iValues]
[chrono, ., get, (, this, ,, duration, )]
[chrono]
[this]
[duration]
[ConverterManager, ., getInstance, (, ), ., getPeriodConverter, (, period, )]
[ConverterManager, ., getInstance, (, )]
[ConverterManager]
[period]
[type]
[(, type, ==, null, ?, converter, ., getPeriodType, (, period, ), :, type, )]
[type, ==, null, ?, converter, ., getPeriodType, (, period, ), :, type]
[type, ==, null]
[type]
[null]
[converter, ., getPeriodType, (, period, )]
[converter]
[period]
[type]
[type]
[checkPeriodType, (, type, )]
[type]
[iType]
[type]
[this, instanceof, ReadWritablePeriod]
[this]
[iValues]
[new, int, [, size, (, ), ]]
[size, (, )]
[chrono]
[DateTimeUtils, ., getChronology, (, chrono, )]
[DateTimeUtils]
[chrono]
[converter, ., setInto, (, (, ReadWritablePeriod, ), this, ,, period, ,, chrono, )]
[converter]
[(, ReadWritablePeriod, ), this]
[this]
[period]
[chrono]
[iValues]
[new, MutablePeriod, (, period, ,, type, ,, chrono, ), ., getValues, (, )]
[new, MutablePeriod, (, period, ,, type, ,, chrono, )]
[period]
[type]
[chrono]
[iType]
[type]
[iValues]
[values]
[DateTimeUtils, ., getPeriodType, (, type, )]
[DateTimeUtils]
[type]
[iType]
[iValues, [, index, ]]
[iValues]
[index]
[DateTimeUtils, ., getInstantMillis, (, startInstant, )]
[DateTimeUtils]
[startInstant]
[DateTimeUtils, ., getInstantChronology, (, startInstant, )]
[DateTimeUtils]
[startInstant]
[chrono, ., add, (, this, ,, startMillis, ,, 1, )]
[chrono]
[this]
[startMillis]
[1]
[new, Duration, (, startMillis, ,, endMillis, )]
[startMillis]
[endMillis]
[DateTimeUtils, ., getInstantMillis, (, endInstant, )]
[DateTimeUtils]
[endInstant]
[DateTimeUtils, ., getInstantChronology, (, endInstant, )]
[DateTimeUtils]
[endInstant]
[chrono, ., add, (, this, ,, endMillis, ,, -, 1, )]
[chrono]
[this]
[endMillis]
[-, 1]
[1]
[new, Duration, (, startMillis, ,, endMillis, )]
[startMillis]
[endMillis]
[indexOf, (, type, )]
[type]
[index, ==, -, 1]
[index]
[-, 1]
[1]
[newValue, !=, 0]
[newValue]
[0]
[new, IllegalArgumentException, (, "Period does not support field '", +, type, ., getName, (, ), +, "'", )]
["Period does not support field '", +, type, ., getName, (, ), +, "'"]
["Period does not support field '", +, type, ., getName, (, )]
["Period does not support field '"]
[type, ., getName, (, )]
[type]
["'"]
[values, [, index, ]]
[values]
[index]
[newValue]
[period, ==, null]
[period]
[null]
[setValues, (, new, int, [, size, (, ), ], )]
[new, int, [, size, (, ), ]]
[size, (, )]
[setPeriodInternal, (, period, )]
[period]
[new, int, [, size, (, ), ]]
[size, (, )]
[0]
[period, ., size, (, )]
[period]
[i, <, isize]
[i]
[isize]
[i, ++]
[i]
[period, ., getFieldType, (, i, )]
[period]
[i]
[period, ., getValue, (, i, )]
[period]
[i]
[checkAndUpdate, (, type, ,, newValues, ,, value, )]
[type]
[newValues]
[value]
[setValues, (, newValues, )]
[newValues]
[setPeriodInternal, (, years, ,, months, ,, weeks, ,, days, ,, hours, ,, minutes, ,, seconds, ,, millis, )]
[years]
[months]
[weeks]
[days]
[hours]
[minutes]
[seconds]
[millis]
[setValues, (, newValues, )]
[newValues]
[new, int, [, size, (, ), ]]
[size, (, )]
[checkAndUpdate, (, DurationFieldType, ., years, (, ), ,, newValues, ,, years, )]
[DurationFieldType, ., years, (, )]
[DurationFieldType]
[newValues]
[years]
[checkAndUpdate, (, DurationFieldType, ., months, (, ), ,, newValues, ,, months, )]
[DurationFieldType, ., months, (, )]
[DurationFieldType]
[newValues]
[months]
[checkAndUpdate, (, DurationFieldType, ., weeks, (, ), ,, newValues, ,, weeks, )]
[DurationFieldType, ., weeks, (, )]
[DurationFieldType]
[newValues]
[weeks]
[checkAndUpdate, (, DurationFieldType, ., days, (, ), ,, newValues, ,, days, )]
[DurationFieldType, ., days, (, )]
[DurationFieldType]
[newValues]
[days]
[checkAndUpdate, (, DurationFieldType, ., hours, (, ), ,, newValues, ,, hours, )]
[DurationFieldType, ., hours, (, )]
[DurationFieldType]
[newValues]
[hours]
[checkAndUpdate, (, DurationFieldType, ., minutes, (, ), ,, newValues, ,, minutes, )]
[DurationFieldType, ., minutes, (, )]
[DurationFieldType]
[newValues]
[minutes]
[checkAndUpdate, (, DurationFieldType, ., seconds, (, ), ,, newValues, ,, seconds, )]
[DurationFieldType, ., seconds, (, )]
[DurationFieldType]
[newValues]
[seconds]
[checkAndUpdate, (, DurationFieldType, ., millis, (, ), ,, newValues, ,, millis, )]
[DurationFieldType, ., millis, (, )]
[DurationFieldType]
[newValues]
[millis]
[newValues]
[setFieldInto, (, iValues, ,, field, ,, value, )]
[iValues]
[field]
[value]
[indexOf, (, field, )]
[field]
[index, ==, -, 1]
[index]
[-, 1]
[1]
[value, !=, 0, ||, field, ==, null]
[value, !=, 0]
[value]
[0]
[field, ==, null]
[field]
[null]
[new, IllegalArgumentException, (, "Period does not support field '", +, field, +, "'", )]
["Period does not support field '", +, field, +, "'"]
["Period does not support field '", +, field]
["Period does not support field '"]
[field]
["'"]
[values, [, index, ]]
[values]
[index]
[value]
[addFieldInto, (, iValues, ,, field, ,, value, )]
[iValues]
[field]
[value]
[indexOf, (, field, )]
[field]
[index, ==, -, 1]
[index]
[-, 1]
[1]
[value, !=, 0, ||, field, ==, null]
[value, !=, 0]
[value]
[0]
[field, ==, null]
[field]
[null]
[new, IllegalArgumentException, (, "Period does not support field '", +, field, +, "'", )]
["Period does not support field '", +, field, +, "'"]
["Period does not support field '", +, field]
["Period does not support field '"]
[field]
["'"]
[values, [, index, ]]
[values]
[index]
[FieldUtils, ., safeAdd, (, values, [, index, ], ,, value, )]
[FieldUtils]
[values, [, index, ]]
[values]
[index]
[value]
[period, !=, null]
[period]
[null]
[setValues, (, mergePeriodInto, (, getValues, (, ), ,, period, ), )]
[mergePeriodInto, (, getValues, (, ), ,, period, )]
[getValues, (, )]
[period]
[0]
[period, ., size, (, )]
[period]
[i, <, isize]
[i]
[isize]
[i, ++]
[i]
[period, ., getFieldType, (, i, )]
[period]
[i]
[period, ., getValue, (, i, )]
[period]
[i]
[checkAndUpdate, (, type, ,, values, ,, value, )]
[type]
[values]
[value]
[values]
[period, !=, null]
[period]
[null]
[setValues, (, addPeriodInto, (, getValues, (, ), ,, period, ), )]
[addPeriodInto, (, getValues, (, ), ,, period, )]
[getValues, (, )]
[period]
[0]
[period, ., size, (, )]
[period]
[i, <, isize]
[i]
[isize]
[i, ++]
[i]
[period, ., getFieldType, (, i, )]
[period]
[i]
[period, ., getValue, (, i, )]
[period]
[i]
[value, !=, 0]
[value]
[0]
[indexOf, (, type, )]
[type]
[index, ==, -, 1]
[index]
[-, 1]
[1]
[new, IllegalArgumentException, (, "Period does not support field '", +, type, ., getName, (, ), +, "'", )]
["Period does not support field '", +, type, ., getName, (, ), +, "'"]
["Period does not support field '", +, type, ., getName, (, )]
["Period does not support field '"]
[type, ., getName, (, )]
[type]
["'"]
[values, [, index, ]]
[values]
[index]
[FieldUtils, ., safeAdd, (, getValue, (, index, ), ,, value, )]
[FieldUtils]
[getValue, (, index, )]
[index]
[value]
[values]
[iValues, [, index, ]]
[iValues]
[index]
[value]
[System, ., arraycopy, (, values, ,, 0, ,, iValues, ,, 0, ,, iValues, ., length, )]
[System]
[values]
[0]
[iValues]
[0]
[iValues, ., length]
[iValues]
