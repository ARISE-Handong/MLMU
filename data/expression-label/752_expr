["", +, "No %s attribute specified for %s."]
[""]
["No %s attribute specified for %s."]
["", +, "Not enough children for %s. Expected: %d. Found: %d."]
[""]
["Not enough children for %s. Expected: %d. Found: %d."]
["", +, "Too many children for %s. Expected: %d. Found: %d."]
[""]
["Too many children for %s. Expected: %d. Found: %d."]
["", +, "Wrong type of child number %d for %s. Expected: %s. Found: %s."]
[""]
["Wrong type of child number %d for %s. Expected: %s. Found: %s."]
[{, TagType, ., ArrayExpr, ,, TagType, ., AssignExpr, ,, TagType, ., BinaryExpr, ,, TagType, ., CallExpr, ,, TagType, ., ConditionalExpr, ,, TagType, ., CountExpr, ,, TagType, ., DeleteExpr, ,, TagType, ., EvalExpr, ,, TagType, ., IdExpr, ,, TagType, ., InvokeExpr, ,, TagType, ., LiteralExpr, ,, TagType, ., LogicalAndExpr, ,, TagType, ., LogicalOrExpr, ,, TagType, ., MemberExpr, ,, TagType, ., NewExpr, ,, TagType, ., ObjectExpr, ,, TagType, ., RegExpExpr, ,, TagType, ., ThisExpr, ,, TagType, ., TypeofExpr, ,, TagType, ., UnaryExpr, ,, TagType, ., FunctionExpr, }]
[TagType, ., ArrayExpr]
[TagType]
[TagType, ., AssignExpr]
[TagType]
[TagType, ., BinaryExpr]
[TagType]
[TagType, ., CallExpr]
[TagType]
[TagType, ., ConditionalExpr]
[TagType]
[TagType, ., CountExpr]
[TagType]
[TagType, ., DeleteExpr]
[TagType]
[TagType, ., EvalExpr]
[TagType]
[TagType, ., IdExpr]
[TagType]
[TagType, ., InvokeExpr]
[TagType]
[TagType, ., LiteralExpr]
[TagType]
[TagType, ., LogicalAndExpr]
[TagType]
[TagType, ., LogicalOrExpr]
[TagType]
[TagType, ., MemberExpr]
[TagType]
[TagType, ., NewExpr]
[TagType]
[TagType, ., ObjectExpr]
[TagType]
[TagType, ., RegExpExpr]
[TagType]
[TagType, ., ThisExpr]
[TagType]
[TagType, ., TypeofExpr]
[TagType]
[TagType, ., UnaryExpr]
[TagType]
[TagType, ., FunctionExpr]
[TagType]
[b]
[new, StringBuilder, (, )]
[error]
[false]
[(, new, Validator, (, ), ), ., doValidate, (, element, )]
[(, new, Validator, (, ), )]
[new, Validator, (, )]
[element]
[element, ., getType, (, )]
[element]
[AssignExpr]
[validateAssignExpr, (, element, )]
[element]
[BinaryExpr]
[validateBinaryExpr, (, element, )]
[element]
[BreakStmt]
[ContinueStmt]
[validateJmpStmt, (, element, )]
[element]
[Case]
[validateCase, (, element, )]
[element]
[CatchClause]
[validateCatchClause, (, element, )]
[element]
[ConditionalExpr]
[validateConditionalExpr, (, element, )]
[element]
[CountExpr]
[validateCountExpr, (, element, )]
[element]
[DataProp]
[validateProp, (, element, )]
[element]
[GetterProp]
[validateProp, (, element, )]
[element]
[SetterProp]
[validateProp, (, element, )]
[element]
[DeleteExpr]
[validateDeleteExpr, (, element, )]
[element]
[DoWhileStmt]
[validateDoWhileStmt, (, element, )]
[element]
[EmptyStmt]
[validateEmptyStmt, (, element, )]
[element]
[ForInStmt]
[validateForInStmt, (, element, )]
[element]
[ForStmt]
[validateForStmt, (, element, )]
[element]
[FunctionDecl]
[validateFunctionDecl, (, element, )]
[element]
[FunctionExpr]
[validateFunctionExpr, (, element, )]
[element]
[IdExpr]
[validateIdExpr, (, element, )]
[element]
[IdPatt]
[validateIdPatt, (, element, )]
[element]
[IfStmt]
[validateIfStmt, (, element, )]
[element]
[InvokeExpr]
[validateInvokeExpr, (, element, )]
[element]
[LabelledStmt]
[validateLabelledStmt, (, element, )]
[element]
[LiteralExpr]
[validateLiteralExpr, (, element, )]
[element]
[LogicalAndExpr]
[LogicalOrExpr]
[validateLogicalExpr, (, element, )]
[element]
[MemberExpr]
[validateMemberExpr, (, element, )]
[element]
[NewExpr]
[validateNewExpr, (, element, )]
[element]
[ObjectExpr]
[validateObjectExpr, (, element, )]
[element]
[ParamDecl]
[validateParamDecl, (, element, )]
[element]
[RegExpExpr]
[validateRegExpExpr, (, element, )]
[element]
[ReturnStmt]
[validateReturnStmt, (, element, )]
[element]
[SwitchStmt]
[validateSwitchStmt, (, element, )]
[element]
[ThisExpr]
[validateThisExpr, (, element, )]
[element]
[ThrowStmt]
[validateThrowStmt, (, element, )]
[element]
[TryStmt]
[validateTryStmt, (, element, )]
[element]
[TypeofExpr]
[validateTypeofExpr, (, element, )]
[element]
[UnaryExpr]
[validateUnaryExpr, (, element, )]
[element]
[VarDecl]
[validateVarDecl, (, element, )]
[element]
[WhileStmt]
[validateWhileStmt, (, element, )]
[element]
[WithStmt]
[validateWithStmt, (, element, )]
[element]
[b, ., length, (, ), !=, 0, ?, b, ., toString, (, ), :, null]
[b, ., length, (, ), !=, 0]
[b, ., length, (, )]
[b]
[0]
[b, ., toString, (, )]
[b]
[null]
[validateChildrenSize, (, element, ,, 2, )]
[element]
[2]
[validateArgument, (, element, ,, TagAttr, ., OP, )]
[element]
[TagAttr, ., OP]
[TagAttr]
[validateChildrenSize, (, element, ,, 2, )]
[element]
[2]
[validateArgument, (, element, ,, TagAttr, ., OP, )]
[element]
[TagAttr, ., OP]
[TagAttr]
[validateMinChildrenSize, (, element, ,, 1, )]
[element]
[1]
[!, error]
[error]
[validateIsChildExpression, (, element, ,, 0, )]
[element]
[0]
[validateChildrenSize, (, element, ,, 2, )]
[element]
[2]
[!, error]
[error]
[validateChildType, (, element, ,, TagType, ., IdPatt, ,, 0, )]
[element]
[TagType, ., IdPatt]
[TagType]
[0]
[validateChildType, (, element, ,, TagType, ., BlockStmt, ,, 1, )]
[element]
[TagType, ., BlockStmt]
[TagType]
[1]
[validateChildrenSize, (, element, ,, 3, )]
[element]
[3]
[validateChildrenSize, (, element, ,, 1, )]
[element]
[1]
[validateArgument, (, element, ,, TagAttr, ., IS_PREFIX, )]
[element]
[TagAttr, ., IS_PREFIX]
[TagAttr]
[validateArgument, (, element, ,, TagAttr, ., OP, )]
[element]
[TagAttr, ., OP]
[TagAttr]
[validateChildrenSize, (, element, ,, 1, )]
[element]
[1]
[!, error]
[error]
[validateArgument, (, element, ,, TagAttr, ., NAME, )]
[element]
[TagAttr, ., NAME]
[TagAttr]
[validateChildrenSize, (, element, ,, 1, )]
[element]
[1]
[validateChildrenSize, (, element, ,, 2, )]
[element]
[2]
[validateChildrenSize, (, element, ,, 0, )]
[element]
[0]
[validateChildrenSize, (, element, ,, 3, )]
[element]
[3]
[validateChildrenSize, (, element, ,, 4, )]
[element]
[4]
[validateFunction, (, element, ,, true, )]
[element]
[true]
[validateFunction, (, element, ,, false, )]
[element]
[false]
[validateChildrenSize, (, element, ,, 0, )]
[element]
[0]
[!, error]
[error]
[validateArgument, (, element, ,, TagAttr, ., NAME, )]
[element]
[TagAttr, ., NAME]
[TagAttr]
[validateChildrenSize, (, element, ,, 0, )]
[element]
[0]
[validateArgument, (, element, ,, TagAttr, ., NAME, )]
[element]
[TagAttr, ., NAME]
[TagAttr]
[validateChildrenSize, (, element, ,, 3, )]
[element]
[3]
[!, error]
[error]
[validateMinChildrenSize, (, element, ,, 2, )]
[element]
[2]
[validateArgument, (, element, ,, TagAttr, ., OP, )]
[element]
[TagAttr, ., OP]
[TagAttr]
[validateChildrenSize, (, element, ,, 0, )]
[element]
[0]
[validateChildrenSize, (, element, ,, 1, )]
[element]
[1]
[validateArgument, (, element, ,, TagAttr, ., LABEL, )]
[element]
[TagAttr, ., LABEL]
[TagAttr]
[validateChildrenSize, (, element, ,, 0, )]
[element]
[0]
[validateArgument, (, element, ,, TagAttr, ., TYPE, )]
[element]
[TagAttr, ., TYPE]
[TagAttr]
[validateArgument, (, element, ,, TagAttr, ., VALUE, )]
[element]
[TagAttr, ., VALUE]
[TagAttr]
[validateChildrenSize, (, element, ,, 2, )]
[element]
[2]
[validateChildrenSize, (, element, ,, 2, )]
[element]
[2]
[validateArgument, (, element, ,, TagAttr, ., OP, )]
[element]
[TagAttr, ., OP]
[TagAttr]
[validateMinChildrenSize, (, element, ,, 1, )]
[element]
[1]
[{, TagType, ., DataProp, ,, TagType, ., GetterProp, ,, TagType, ., SetterProp, }]
[TagType, ., DataProp]
[TagType]
[TagType, ., GetterProp]
[TagType]
[TagType, ., SetterProp]
[TagType]
[0]
[i, <, element, ., childrenSize, (, )]
[i]
[element, ., childrenSize, (, )]
[element]
[++, i]
[i]
[validateChildType, (, element, ,, expected, ,, i, )]
[element]
[expected]
[i]
[0]
[i, <, element, ., childrenSize, (, )]
[i]
[element, ., childrenSize, (, )]
[element]
[++, i]
[i]
[validateChildType, (, element, ,, TagType, ., IdPatt, ,, i, )]
[element]
[TagType, ., IdPatt]
[TagType]
[i]
[validateChildrenSize, (, element, ,, 0, )]
[element]
[0]
[validateArgument, (, element, ,, TagAttr, ., BODY, )]
[element]
[TagAttr, ., BODY]
[TagAttr]
[validateArgument, (, element, ,, TagAttr, ., FLAGS, )]
[element]
[TagAttr, ., FLAGS]
[TagAttr]
[validateMaxChildrenSize, (, element, ,, 1, )]
[element]
[1]
[validateMinChildrenSize, (, element, ,, 1, )]
[element]
[1]
[false]
[1]
[i, <, element, ., childrenSize, (, )]
[i]
[element, ., childrenSize, (, )]
[element]
[++, i]
[i]
[!, defaultStmt]
[defaultStmt]
[validateChildType, (, element, ,, new, TagType, [, ], {, TagType, ., Case, ,, TagType, ., DefaultCase, }, ,, i, )]
[element]
[new, TagType, [, ], {, TagType, ., Case, ,, TagType, ., DefaultCase, }]
[{, TagType, ., Case, ,, TagType, ., DefaultCase, }]
[TagType, ., Case]
[TagType]
[TagType, ., DefaultCase]
[TagType]
[i]
[validateChildType, (, element, ,, TagType, ., Case, ,, i, )]
[element]
[TagType, ., Case]
[TagType]
[i]
[error]
[element, ., getChild, (, i, ), ., getType, (, ), ==, TagType, ., DefaultCase]
[element, ., getChild, (, i, ), ., getType, (, )]
[element, ., getChild, (, i, )]
[element]
[i]
[TagType, ., DefaultCase]
[TagType]
[defaultStmt]
[true]
[validateChildrenSize, (, element, ,, 0, )]
[element]
[0]
[validateChildrenSize, (, element, ,, 1, )]
[element]
[1]
[validateChildrenSize, (, element, ,, 2, ,, 3, )]
[element]
[2]
[3]
[error]
[validateChildType, (, element, ,, TagType, ., BlockStmt, ,, 0, )]
[element]
[TagType, ., BlockStmt]
[TagType]
[0]
[new, TagType, [, ], {, TagType, ., CatchClause, ,, TagType, ., Empty, }]
[{, TagType, ., CatchClause, ,, TagType, ., Empty, }]
[TagType, ., CatchClause]
[TagType]
[TagType, ., Empty]
[TagType]
[validateChildType, (, element, ,, types, ,, 1, )]
[element]
[types]
[1]
[element, ., childrenSize, (, ), >, 2]
[element, ., childrenSize, (, )]
[element]
[2]
[validateChildType, (, element, ,, TagType, ., BlockStmt, ,, 2, )]
[element]
[TagType, ., BlockStmt]
[TagType]
[2]
[validateMinChildrenSize, (, element, ,, 2, )]
[element]
[2]
[error]
[needsName]
[validateChildType, (, element, ,, new, TagType, [, ], {, TagType, ., IdPatt, }, ,, 0, )]
[element]
[new, TagType, [, ], {, TagType, ., IdPatt, }]
[{, TagType, ., IdPatt, }]
[TagType, ., IdPatt]
[TagType]
[0]
[validateChildType, (, element, ,, new, TagType, [, ], {, TagType, ., IdPatt, ,, TagType, ., Empty, }, ,, 0, )]
[element]
[new, TagType, [, ], {, TagType, ., IdPatt, ,, TagType, ., Empty, }]
[{, TagType, ., IdPatt, ,, TagType, ., Empty, }]
[TagType, ., IdPatt]
[TagType]
[TagType, ., Empty]
[TagType]
[0]
[validateChildType, (, element, ,, TagType, ., ParamDecl, ,, 1, )]
[element]
[TagType, ., ParamDecl]
[TagType]
[1]
[validateChildrenSize, (, element, ,, 1, )]
[element]
[1]
[validateChildrenSize, (, element, ,, 1, )]
[element]
[1]
[!, error]
[error]
[validateArgument, (, element, ,, TagAttr, ., OP, )]
[element]
[TagAttr, ., OP]
[TagAttr]
[validateMinChildrenSize, (, element, ,, 1, )]
[element]
[1]
[new, TagType, [, ], {, TagType, ., InitPatt, ,, TagType, ., IdPatt, }]
[{, TagType, ., InitPatt, ,, TagType, ., IdPatt, }]
[TagType, ., InitPatt]
[TagType]
[TagType, ., IdPatt]
[TagType]
[0]
[i, <, element, ., childrenSize, (, )]
[i]
[element, ., childrenSize, (, )]
[element]
[++, i]
[i]
[validateChildType, (, element, ,, types, ,, i, )]
[element]
[types]
[i]
[validateChildrenSize, (, element, ,, 2, )]
[element]
[2]
[validateChildrenSize, (, element, ,, 2, )]
[element]
[2]
[element, ., getAttribute, (, attr, )]
[element]
[attr]
[value, ==, null]
[value]
[null]
[(, type, =, (, String, ), element, ., getAttribute, (, TagAttr, ., TYPE, ), ), !=, null, &&, type, ., equals, (, "null", )]
[(, type, =, (, String, ), element, ., getAttribute, (, TagAttr, ., TYPE, ), ), !=, null]
[(, type, =, (, String, ), element, ., getAttribute, (, TagAttr, ., TYPE, ), )]
[type]
[(, String, ), element, ., getAttribute, (, TagAttr, ., TYPE, )]
[element, ., getAttribute, (, TagAttr, ., TYPE, )]
[element]
[TagAttr, ., TYPE]
[TagAttr]
[null]
[type, ., equals, (, "null", )]
[type]
["null"]
[error]
[true]
[appendLine, (, String, ., format, (, MISSING_ARGUMENT, ,, attr, ,, element, ., getType, (, ), ), )]
[String, ., format, (, MISSING_ARGUMENT, ,, attr, ,, element, ., getType, (, ), )]
[String]
[MISSING_ARGUMENT]
[attr]
[element, ., getType, (, )]
[element]
[validateChildrenSize, (, element, ,, expected, ,, expected, )]
[element]
[expected]
[expected]
[validateMinChildrenSize, (, element, ,, min, )]
[element]
[min]
[!, error]
[error]
[validateMaxChildrenSize, (, element, ,, max, )]
[element]
[max]
[element, ., childrenSize, (, )]
[element]
[size, <, min]
[size]
[min]
[appendLine, (, String, ., format, (, NOT_ENOUGH_CHILDREN_FMT, ,, element, ., getType, (, ), ,, min, ,, size, ), )]
[String, ., format, (, NOT_ENOUGH_CHILDREN_FMT, ,, element, ., getType, (, ), ,, min, ,, size, )]
[String]
[NOT_ENOUGH_CHILDREN_FMT]
[element, ., getType, (, )]
[element]
[min]
[size]
[error]
[true]
[element, ., childrenSize, (, )]
[element]
[size, >, max]
[size]
[max]
[appendLine, (, String, ., format, (, TOO_MANY_CHILDREN_FMT, ,, element, ., getType, (, ), ., toString, (, ), ,, max, ,, size, ), )]
[String, ., format, (, TOO_MANY_CHILDREN_FMT, ,, element, ., getType, (, ), ., toString, (, ), ,, max, ,, size, )]
[String]
[TOO_MANY_CHILDREN_FMT]
[element, ., getType, (, ), ., toString, (, )]
[element, ., getType, (, )]
[element]
[max]
[size]
[error]
[true]
[validateChildType, (, element, ,, exprTypes, ,, index, )]
[element]
[exprTypes]
[index]
[{, expected, }]
[expected]
[validateChildType, (, element, ,, types, ,, index, )]
[element]
[types]
[index]
[element, ., getChild, (, index, ), ., getType, (, )]
[element, ., getChild, (, index, )]
[element]
[index]
[!, Arrays, ., asList, (, expected, ), ., contains, (, type, )]
[Arrays, ., asList, (, expected, ), ., contains, (, type, )]
[Arrays, ., asList, (, expected, )]
[Arrays]
[expected]
[type]
[appendLine, (, String, ., format, (, WRONG_CHILD_TYPE_FMT, ,, index, ,, element, ., getType, (, ), ,, printList, (, expected, ), ,, type, ), )]
[String, ., format, (, WRONG_CHILD_TYPE_FMT, ,, index, ,, element, ., getType, (, ), ,, printList, (, expected, ), ,, type, )]
[String]
[WRONG_CHILD_TYPE_FMT]
[index]
[element, ., getType, (, )]
[element]
[printList, (, expected, )]
[expected]
[type]
[error]
[true]
[b, ., append, (, String, ., format, (, "%s", ,, line, ), )]
[b]
[String, ., format, (, "%s", ,, line, )]
[String]
["%s"]
[line]
[new, StringBuilder, (, "", )]
[""]
[list, ., length, ==, 1]
[list, ., length]
[list]
[1]
[builder, ., append, (, list, [, 0, ], ., toString, (, ), )]
[builder]
[list, [, 0, ], ., toString, (, )]
[list, [, 0, ]]
[list]
[0]
[list, ., length, >, 1]
[list, ., length]
[list]
[1]
[builder, ., append, (, '[', )]
[builder]
['[']
[0]
[i, <, list, ., length]
[i]
[list, ., length]
[list]
[++, i]
[i]
[builder, ., append, (, list, [, i, ], ., toString, (, ), )]
[builder]
[list, [, i, ], ., toString, (, )]
[list, [, i, ]]
[list]
[i]
[i, <, list, ., length, -, 1]
[i]
[list, ., length, -, 1]
[list, ., length]
[list]
[1]
[builder, ., append, (, ", ", )]
[builder]
[", "]
[builder, ., append, (, "]", )]
[builder]
["]"]
[builder, ., toString, (, )]
[builder]
