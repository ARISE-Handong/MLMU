[this, ., name]
[this]
[name]
[stepHandlers]
[new, ArrayList, <, StepHandler, >, (, )]
[stepStart]
[Double, ., NaN]
[Double]
[stepSize]
[Double, ., NaN]
[Double]
[eventsStates]
[new, ArrayList, <, EventState, >, (, )]
[statesInitialized]
[false]
[evaluations]
[new, Incrementor, (, )]
[setMaxEvaluations, (, -, 1, )]
[-, 1]
[1]
[evaluations, ., resetCount, (, )]
[evaluations]
[null]
[name]
[stepHandlers, ., add, (, handler, )]
[stepHandlers]
[handler]
[Collections, ., unmodifiableCollection, (, stepHandlers, )]
[Collections]
[stepHandlers]
[stepHandlers, ., clear, (, )]
[stepHandlers]
[addEventHandler, (, handler, ,, maxCheckInterval, ,, convergence, ,, maxIterationCount, ,, new, BracketingNthOrderBrentSolver, (, convergence, ,, 5, ), )]
[handler]
[maxCheckInterval]
[convergence]
[maxIterationCount]
[new, BracketingNthOrderBrentSolver, (, convergence, ,, 5, )]
[convergence]
[5]
[eventsStates, ., add, (, new, EventState, (, handler, ,, maxCheckInterval, ,, convergence, ,, maxIterationCount, ,, solver, ), )]
[eventsStates]
[new, EventState, (, handler, ,, maxCheckInterval, ,, convergence, ,, maxIterationCount, ,, solver, )]
[handler]
[maxCheckInterval]
[convergence]
[maxIterationCount]
[solver]
[new, ArrayList, <, EventHandler, >, (, eventsStates, ., size, (, ), )]
[eventsStates, ., size, (, )]
[eventsStates]
[eventsStates]
[list, ., add, (, state, ., getEventHandler, (, ), )]
[list]
[state, ., getEventHandler, (, )]
[state]
[Collections, ., unmodifiableCollection, (, list, )]
[Collections]
[list]
[eventsStates, ., clear, (, )]
[eventsStates]
[stepStart]
[stepSize]
[evaluations, ., setMaximalCount, (, (, maxEvaluations, <, 0, ), ?, Integer, ., MAX_VALUE, :, maxEvaluations, )]
[evaluations]
[(, maxEvaluations, <, 0, ), ?, Integer, ., MAX_VALUE, :, maxEvaluations]
[(, maxEvaluations, <, 0, )]
[maxEvaluations, <, 0]
[maxEvaluations]
[0]
[Integer, ., MAX_VALUE]
[Integer]
[maxEvaluations]
[evaluations, ., getMaximalCount, (, )]
[evaluations]
[evaluations, ., getCount, (, )]
[evaluations]
[evaluations, ., resetCount, (, )]
[evaluations]
[eventsStates]
[state, ., setExpandable, (, expandable, )]
[state]
[expandable]
[state, ., getEventHandler, (, ), ., init, (, t0, ,, y0, ,, t, )]
[state, ., getEventHandler, (, )]
[state]
[t0]
[y0]
[t]
[stepHandlers]
[handler, ., init, (, t0, ,, y0, ,, t, )]
[handler]
[t0]
[y0]
[t]
[setStateInitialized, (, false, )]
[false]
[this, ., expandable]
[this]
[equations]
[expandable]
[evaluations]
[y0, ., length, !=, equations, ., getDimension, (, )]
[y0, ., length]
[y0]
[equations, ., getDimension, (, )]
[equations]
[new, DimensionMismatchException, (, y0, ., length, ,, equations, ., getDimension, (, ), )]
[y0, ., length]
[y0]
[equations, ., getDimension, (, )]
[equations]
[y, ., length, !=, equations, ., getDimension, (, )]
[y, ., length]
[y]
[equations, ., getDimension, (, )]
[equations]
[new, DimensionMismatchException, (, y, ., length, ,, equations, ., getDimension, (, ), )]
[y, ., length]
[y]
[equations, ., getDimension, (, )]
[equations]
[new, ExpandableStatefulODE, (, equations, )]
[equations]
[expandableODE, ., setTime, (, t0, )]
[expandableODE]
[t0]
[expandableODE, ., setPrimaryState, (, y0, )]
[expandableODE]
[y0]
[integrate, (, expandableODE, ,, t, )]
[expandableODE]
[t]
[System, ., arraycopy, (, expandableODE, ., getPrimaryState, (, ), ,, 0, ,, y, ,, 0, ,, y, ., length, )]
[System]
[expandableODE, ., getPrimaryState, (, )]
[expandableODE]
[0]
[y]
[0]
[y, ., length]
[y]
[expandableODE, ., getTime, (, )]
[expandableODE]
[evaluations, ., incrementCount, (, )]
[evaluations]
[expandable, ., computeDerivatives, (, t, ,, y, ,, yDot, )]
[expandable]
[t]
[y]
[yDot]
[this, ., statesInitialized]
[this]
[stateInitialized]
[interpolator, ., getGlobalPreviousTime, (, )]
[interpolator]
[interpolator, ., getGlobalCurrentTime, (, )]
[interpolator]
[!, statesInitialized]
[statesInitialized]
[eventsStates]
[state, ., reinitializeBegin, (, interpolator, )]
[state]
[interpolator]
[statesInitialized]
[true]
[interpolator, ., isForward, (, ), ?, +, 1, :, -, 1]
[interpolator, ., isForward, (, )]
[interpolator]
[+, 1]
[1]
[-, 1]
[1]
[new, TreeSet, <, EventState, >, (, new, Comparator, <, EventState, >, (, ), {, public, int, compare, (, EventState, es0, ,, EventState, es1, ), {, return, orderingSign, *, Double, ., compare, (, es0, ., getEventTime, (, ), ,, es1, ., getEventTime, (, ), ), ;, }, }, )]
[new, Comparator, <, EventState, >, (, ), {, public, int, compare, (, EventState, es0, ,, EventState, es1, ), {, return, orderingSign, *, Double, ., compare, (, es0, ., getEventTime, (, ), ,, es1, ., getEventTime, (, ), ), ;, }, }]
[orderingSign, *, Double, ., compare, (, es0, ., getEventTime, (, ), ,, es1, ., getEventTime, (, ), )]
[orderingSign]
[Double, ., compare, (, es0, ., getEventTime, (, ), ,, es1, ., getEventTime, (, ), )]
[Double]
[es0, ., getEventTime, (, )]
[es0]
[es1, ., getEventTime, (, )]
[es1]
[eventsStates]
[state, ., evaluateStep, (, interpolator, )]
[state]
[interpolator]
[occurringEvents, ., add, (, state, )]
[occurringEvents]
[state]
[!, occurringEvents, ., isEmpty, (, )]
[occurringEvents, ., isEmpty, (, )]
[occurringEvents]
[occurringEvents, ., iterator, (, )]
[occurringEvents]
[iterator, ., next, (, )]
[iterator]
[iterator, ., remove, (, )]
[iterator]
[currentEvent, ., getEventTime, (, )]
[currentEvent]
[interpolator, ., setSoftPreviousTime, (, previousT, )]
[interpolator]
[previousT]
[interpolator, ., setSoftCurrentTime, (, eventT, )]
[interpolator]
[eventT]
[interpolator, ., setInterpolatedTime, (, eventT, )]
[interpolator]
[eventT]
[new, double, [, y, ., length, ]]
[y, ., length]
[y]
[expandable, ., getPrimaryMapper, (, ), ., insertEquationData, (, interpolator, ., getInterpolatedState, (, ), ,, eventYComplete, )]
[expandable, ., getPrimaryMapper, (, )]
[expandable]
[interpolator, ., getInterpolatedState, (, )]
[interpolator]
[eventYComplete]
[0]
[expandable, ., getSecondaryMappers, (, )]
[expandable]
[secondary, ., insertEquationData, (, interpolator, ., getInterpolatedSecondaryState, (, index, ++, ), ,, eventYComplete, )]
[secondary]
[interpolator, ., getInterpolatedSecondaryState, (, index, ++, )]
[interpolator]
[index, ++]
[index]
[eventYComplete]
[eventsStates]
[state, ., stepAccepted, (, eventT, ,, eventYComplete, )]
[state]
[eventT]
[eventYComplete]
[isLastStep]
[isLastStep, ||, state, ., stop, (, )]
[isLastStep]
[state, ., stop, (, )]
[state]
[stepHandlers]
[handler, ., handleStep, (, interpolator, ,, isLastStep, )]
[handler]
[interpolator]
[isLastStep]
[isLastStep]
[System, ., arraycopy, (, eventYComplete, ,, 0, ,, y, ,, 0, ,, y, ., length, )]
[System]
[eventYComplete]
[0]
[y]
[0]
[y, ., length]
[y]
[eventT]
[false]
[eventsStates]
[needReset]
[needReset, ||, state, ., reset, (, eventT, ,, eventYComplete, )]
[needReset]
[state, ., reset, (, eventT, ,, eventYComplete, )]
[state]
[eventT]
[eventYComplete]
[needReset]
[interpolator, ., setInterpolatedTime, (, eventT, )]
[interpolator]
[eventT]
[System, ., arraycopy, (, eventYComplete, ,, 0, ,, y, ,, 0, ,, y, ., length, )]
[System]
[eventYComplete]
[0]
[y]
[0]
[y, ., length]
[y]
[computeDerivatives, (, eventT, ,, y, ,, yDot, )]
[eventT]
[y]
[yDot]
[resetOccurred]
[true]
[eventT]
[previousT]
[eventT]
[interpolator, ., setSoftPreviousTime, (, eventT, )]
[interpolator]
[eventT]
[interpolator, ., setSoftCurrentTime, (, currentT, )]
[interpolator]
[currentT]
[currentEvent, ., evaluateStep, (, interpolator, )]
[currentEvent]
[interpolator]
[occurringEvents, ., add, (, currentEvent, )]
[occurringEvents]
[currentEvent]
[interpolator, ., setInterpolatedTime, (, currentT, )]
[interpolator]
[currentT]
[new, double, [, y, ., length, ]]
[y, ., length]
[y]
[expandable, ., getPrimaryMapper, (, ), ., insertEquationData, (, interpolator, ., getInterpolatedState, (, ), ,, currentY, )]
[expandable, ., getPrimaryMapper, (, )]
[expandable]
[interpolator, ., getInterpolatedState, (, )]
[interpolator]
[currentY]
[0]
[expandable, ., getSecondaryMappers, (, )]
[expandable]
[secondary, ., insertEquationData, (, interpolator, ., getInterpolatedSecondaryState, (, index, ++, ), ,, currentY, )]
[secondary]
[interpolator, ., getInterpolatedSecondaryState, (, index, ++, )]
[interpolator]
[index, ++]
[index]
[currentY]
[eventsStates]
[state, ., stepAccepted, (, currentT, ,, currentY, )]
[state]
[currentT]
[currentY]
[isLastStep]
[isLastStep, ||, state, ., stop, (, )]
[isLastStep]
[state, ., stop, (, )]
[state]
[isLastStep]
[isLastStep, ||, Precision, ., equals, (, currentT, ,, tEnd, ,, 1, )]
[isLastStep]
[Precision, ., equals, (, currentT, ,, tEnd, ,, 1, )]
[Precision]
[currentT]
[tEnd]
[1]
[stepHandlers]
[handler, ., handleStep, (, interpolator, ,, isLastStep, )]
[handler]
[interpolator]
[isLastStep]
[currentT]
[1000, *, FastMath, ., ulp, (, FastMath, ., max, (, FastMath, ., abs, (, equations, ., getTime, (, ), ), ,, FastMath, ., abs, (, t, ), ), )]
[1000]
[FastMath, ., ulp, (, FastMath, ., max, (, FastMath, ., abs, (, equations, ., getTime, (, ), ), ,, FastMath, ., abs, (, t, ), ), )]
[FastMath]
[FastMath, ., max, (, FastMath, ., abs, (, equations, ., getTime, (, ), ), ,, FastMath, ., abs, (, t, ), )]
[FastMath]
[FastMath, ., abs, (, equations, ., getTime, (, ), )]
[FastMath]
[equations, ., getTime, (, )]
[equations]
[FastMath, ., abs, (, t, )]
[FastMath]
[t]
[FastMath, ., abs, (, equations, ., getTime, (, ), -, t, )]
[FastMath]
[equations, ., getTime, (, ), -, t]
[equations, ., getTime, (, )]
[equations]
[t]
[dt, <=, threshold]
[dt]
[threshold]
[new, NumberIsTooSmallException, (, LocalizedFormats, ., TOO_SMALL_INTEGRATION_INTERVAL, ,, dt, ,, threshold, ,, false, )]
[LocalizedFormats, ., TOO_SMALL_INTEGRATION_INTERVAL]
[LocalizedFormats]
[dt]
[threshold]
[false]
