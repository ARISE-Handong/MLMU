[Logger, ., getLogger, (, Tracer, ., class, ., getName, (, ), )]
[Logger]
[Tracer, ., class, ., getName, (, )]
[Tracer, ., class]
[new, CopyOnWriteArrayList, <, TracingStatistic, >, (, )]
[1000]
[new, InternalClock, (, ), {, @, Override, public, long, currentTimeMillis, (, ), {, return, System, ., currentTimeMillis, (, ), ;, }, }]
[System, ., currentTimeMillis, (, )]
[System]
[this, ., type]
[this]
[type]
[this, ., comment]
[this]
[comment, ==, null, ?, "", :, comment]
[comment, ==, null]
[comment]
[null]
[""]
[comment]
[startTimeMs]
[clock, ., currentTimeMillis, (, )]
[clock]
[startThread]
[Thread, ., currentThread, (, )]
[Thread]
[!, extraTracingStatistics, ., isEmpty, (, )]
[extraTracingStatistics, ., isEmpty, (, )]
[extraTracingStatistics]
[extraTracingStatistics, ., size, (, )]
[extraTracingStatistics]
[extraTracingValues]
[new, long, [, size, ]]
[size]
[0]
[extraTracingStatistics]
[extraTracingValues, [, i, ]]
[extraTracingValues]
[i]
[tracingStatistic, ., start, (, startThread, )]
[tracingStatistic]
[startThread]
[i, ++]
[i]
[getThreadTrace, (, )]
[!, trace, ., isInitialized, (, )]
[trace, ., isInitialized, (, )]
[trace]
[trace, ., events, ., size, (, ), >=, MAX_TRACE_SIZE]
[trace, ., events, ., size, (, )]
[trace, ., events]
[trace]
[MAX_TRACE_SIZE]
[logger, ., log, (, Level, ., WARNING, ,, "Giant thread trace. Too many Tracers created. ", +, "Clearing to avoid memory leak.", ,, new, Throwable, (, trace, ., toString, (, ), ), )]
[logger]
[Level, ., WARNING]
[Level]
["Giant thread trace. Too many Tracers created. ", +, "Clearing to avoid memory leak."]
["Giant thread trace. Too many Tracers created. "]
["Clearing to avoid memory leak."]
[new, Throwable, (, trace, ., toString, (, ), )]
[trace, ., toString, (, )]
[trace]
[trace, ., truncateEvents, (, )]
[trace]
[trace, ., outstandingEvents, ., size, (, ), >=, MAX_TRACE_SIZE]
[trace, ., outstandingEvents, ., size, (, )]
[trace, ., outstandingEvents]
[trace]
[MAX_TRACE_SIZE]
[logger, ., log, (, Level, ., WARNING, ,, "Too many outstanding Tracers. Tracer.stop() is missing ", +, "or Tracer.stop() is not wrapped in a ", +, "try/finally block. ", +, "Clearing to avoid memory leak.", ,, new, Throwable, (, trace, ., toString, (, ), ), )]
[logger]
[Level, ., WARNING]
[Level]
["Too many outstanding Tracers. Tracer.stop() is missing ", +, "or Tracer.stop() is not wrapped in a ", +, "try/finally block. ", +, "Clearing to avoid memory leak."]
["Too many outstanding Tracers. Tracer.stop() is missing ", +, "or Tracer.stop() is not wrapped in a ", +, "try/finally block. "]
["Too many outstanding Tracers. Tracer.stop() is missing ", +, "or Tracer.stop() is not wrapped in a "]
["Too many outstanding Tracers. Tracer.stop() is missing "]
["or Tracer.stop() is not wrapped in a "]
["try/finally block. "]
["Clearing to avoid memory leak."]
[new, Throwable, (, trace, ., toString, (, ), )]
[trace, ., toString, (, )]
[trace]
[trace, ., truncateOutstandingEvents, (, )]
[trace]
[trace, ., startEvent, (, this, )]
[trace]
[this]
[null]
[comment]
[object, ==, null]
[object]
[null]
[new, Tracer, (, comment, )]
[comment]
[new, Tracer, (, object, ., getClass, (, ), ., getSimpleName, (, ), ,, comment, )]
[object, ., getClass, (, ), ., getSimpleName, (, )]
[object, ., getClass, (, )]
[object]
[comment]
[numDigits, (, v, )]
[v]
[new, StringBuilder, (, )]
[appendSpaces, (, sb, ,, digits_column_width, -, digit_width, )]
[sb]
[digits_column_width, -, digit_width]
[digits_column_width]
[digit_width]
[sb, ., append, (, v, )]
[sb]
[v]
[sb, ., toString, (, )]
[sb]
[0]
[i, ++]
[i]
[n]
[n, /, 10]
[n]
[10]
[n, >, 0]
[n]
[0]
[i]
[numSpaces, >, 16]
[numSpaces]
[16]
[logger, ., warning, (, "Tracer.appendSpaces called with large numSpaces", )]
[logger]
["Tracer.appendSpaces called with large numSpaces"]
[numSpaces]
[16]
[numSpaces, >=, 5]
[numSpaces]
[5]
[sb, ., append, (, "     ", )]
[sb]
["     "]
[numSpaces]
[5]
[numSpaces]
[1]
[sb, ., append, (, " ", )]
[sb]
[" "]
[2]
[sb, ., append, (, "  ", )]
[sb]
["  "]
[3]
[sb, ., append, (, "   ", )]
[sb]
["   "]
[4]
[sb, ., append, (, "    ", )]
[sb]
["    "]
[tracingStatistic, ., enable, (, )]
[tracingStatistic]
[extraTracingStatistics, ., add, (, tracingStatistic, )]
[extraTracingStatistics]
[tracingStatistic]
[extraTracingStatistics, ., lastIndexOf, (, tracingStatistic, )]
[extraTracingStatistics]
[tracingStatistic]
[-, 1]
[1]
[extraTracingStatistics, ., clear, (, )]
[extraTracingStatistics]
[Preconditions, ., checkState, (, Thread, ., currentThread, (, ), ==, startThread, )]
[Preconditions]
[Thread, ., currentThread, (, ), ==, startThread]
[Thread, ., currentThread, (, )]
[Thread]
[startThread]
[getThreadTrace, (, )]
[!, trace, ., isInitialized, (, )]
[trace, ., isInitialized, (, )]
[trace]
[0]
[stopTimeMs]
[clock, ., currentTimeMillis, (, )]
[clock]
[extraTracingValues, !=, null]
[extraTracingValues]
[null]
[0]
[i, <, extraTracingValues, ., length]
[i]
[extraTracingValues, ., length]
[extraTracingValues]
[i, ++]
[i]
[extraTracingStatistics, ., get, (, i, ), ., stop, (, startThread, )]
[extraTracingStatistics, ., get, (, i, )]
[extraTracingStatistics]
[i]
[startThread]
[extraTracingValues, [, i, ]]
[extraTracingValues]
[i]
[value, -, extraTracingValues, [, i, ]]
[value]
[extraTracingValues, [, i, ]]
[extraTracingValues]
[i]
[!, trace, ., isInitialized, (, )]
[trace, ., isInitialized, (, )]
[trace]
[0]
[trace, ., endEvent, (, this, ,, silence_threshold, )]
[trace]
[this]
[silence_threshold]
[stopTimeMs, -, startTimeMs]
[stopTimeMs]
[startTimeMs]
[stop, (, -, 1, )]
[-, 1]
[1]
[type, ==, null]
[type]
[null]
[comment]
["[", +, type, +, "] ", +, comment]
["[", +, type, +, "] "]
["[", +, type]
["["]
[type]
["] "]
[comment]
[getThreadTrace, (, ), ., defaultSilenceThreshold]
[getThreadTrace, (, )]
[threshold]
[getThreadTrace, (, )]
[!, events, ., isEmpty, (, )]
[events, ., isEmpty, (, )]
[events]
[logger, ., log, (, Level, ., WARNING, ,, "Non-empty timer log:\n", +, events, ,, new, Throwable, (, ), )]
[logger]
[Level, ., WARNING]
[Level]
["Non-empty timer log:\n", +, events]
["Non-empty timer log:\n"]
[events]
[new, Throwable, (, )]
[clearThreadTrace, (, )]
[events]
[getThreadTrace, (, )]
[events, ., init, (, )]
[events]
[initCurrentThreadTrace, (, )]
[setDefaultSilenceThreshold, (, default_silence_threshold, )]
[default_silence_threshold]
[getThreadTrace, (, ), ., toString, (, )]
[getThreadTrace, (, )]
[getThreadTrace, (, )]
[!, trace, ., isInitialized, (, )]
[trace, ., isInitialized, (, )]
[trace]
[logger, ., log, (, Level, ., WARNING, ,, "Tracer log requested for this thread but was not ", +, "initialized using Tracer.initCurrentThreadTrace().", ,, new, Throwable, (, ), )]
[logger]
[Level, ., WARNING]
[Level]
["Tracer log requested for this thread but was not ", +, "initialized using Tracer.initCurrentThreadTrace()."]
["Tracer log requested for this thread but was not "]
["initialized using Tracer.initCurrentThreadTrace()."]
[new, Throwable, (, )]
[!, trace, ., isEmpty, (, )]
[trace, ., isEmpty, (, )]
[trace]
[logger, ., log, (, Level, ., WARNING, ,, "timers:\n{0}", ,, getCurrentThreadTraceReport, (, ), )]
[logger]
[Level, ., WARNING]
[Level]
["timers:\n{0}"]
[getCurrentThreadTraceReport, (, )]
[clearThreadTrace, (, )]
[logCurrentThreadTrace, (, )]
[clearThreadTrace, (, )]
[defaultPrettyPrint]
[enabled]
[count]
[silent]
[clockTime]
[index, >=, extraInfo, ., length, ?, 0, :, extraInfo, [, index, ]]
[index, >=, extraInfo, ., length]
[index]
[extraInfo, ., length]
[extraInfo]
[0]
[extraInfo, [, index, ]]
[extraInfo]
[index]
[typeToCountMap, ==, null]
[typeToCountMap]
[null]
[typeToCountMap]
[new, AtomicTracerStatMap, (, )]
[typeToSilentMap]
[new, AtomicTracerStatMap, (, )]
[typeToTimeMap]
[new, AtomicTracerStatMap, (, )]
[typeToCountMap, !=, null, ?, typeToCountMap, ., getMap, (, ), :, null]
[typeToCountMap, !=, null]
[typeToCountMap]
[null]
[typeToCountMap, ., getMap, (, )]
[typeToCountMap]
[null]
[typeToSilentMap, !=, null, ?, typeToSilentMap, ., getMap, (, ), :, null]
[typeToSilentMap, !=, null]
[typeToSilentMap]
[null]
[typeToSilentMap, ., getMap, (, )]
[typeToSilentMap]
[null]
[typeToTimeMap, !=, null, ?, typeToTimeMap, ., getMap, (, ), :, null]
[typeToTimeMap, !=, null]
[typeToTimeMap]
[null]
[typeToTimeMap, ., getMap, (, )]
[typeToTimeMap]
[null]
[getThreadTrace, (, ), ., stats, ., get, (, type, )]
[getThreadTrace, (, ), ., stats]
[getThreadTrace, (, )]
[type]
[stat, !=, null, ?, stat, :, ZERO_STAT]
[stat, !=, null]
[stat]
[null]
[stat]
[ZERO_STAT]
[new, Stat, (, )]
[(, int, ), (, (, time, /, 1000, ), %, 60, )]
[(, (, time, /, 1000, ), %, 60, )]
[(, time, /, 1000, ), %, 60]
[(, time, /, 1000, )]
[time, /, 1000]
[time]
[1000]
[60]
[(, int, ), (, time, %, 1000, )]
[(, time, %, 1000, )]
[time, %, 1000]
[time]
[1000]
[String, ., format, (, "%02d.%03d", ,, sec, ,, ms, )]
[String]
["%02d.%03d"]
[sec]
[ms]
[isStart]
[start]
[tracer]
[t]
[isStart, ?, tracer, ., startTimeMs, :, tracer, ., stopTimeMs]
[isStart]
[tracer, ., startTimeMs]
[tracer]
[tracer, ., stopTimeMs]
[tracer]
[new, StringBuilder, (, 120, )]
[120]
[prevEventTime, ==, -, 1]
[prevEventTime]
[-, 1]
[1]
[appendSpaces, (, sb, ,, digitsColWidth, )]
[sb]
[digitsColWidth]
[sb, ., append, (, longToPaddedString, (, eventTime, (, ), -, prevEventTime, ,, digitsColWidth, ), )]
[sb]
[longToPaddedString, (, eventTime, (, ), -, prevEventTime, ,, digitsColWidth, )]
[eventTime, (, ), -, prevEventTime]
[eventTime, (, )]
[prevEventTime]
[digitsColWidth]
[sb, ., append, (, ' ', )]
[sb]
[' ']
[sb, ., append, (, formatTime, (, eventTime, (, ), ), )]
[sb]
[formatTime, (, eventTime, (, ), )]
[eventTime, (, )]
[isStart]
[sb, ., append, (, " Start ", )]
[sb]
[" Start "]
[appendSpaces, (, sb, ,, digitsColWidth, )]
[sb]
[digitsColWidth]
[sb, ., append, (, "   ", )]
[sb]
["   "]
[sb, ., append, (, " Done ", )]
[sb]
[" Done "]
[tracer, ., stopTimeMs, -, tracer, ., startTimeMs]
[tracer, ., stopTimeMs]
[tracer]
[tracer, ., startTimeMs]
[tracer]
[sb, ., append, (, longToPaddedString, (, delta, ,, digitsColWidth, ), )]
[sb]
[longToPaddedString, (, delta, ,, digitsColWidth, )]
[delta]
[digitsColWidth]
[sb, ., append, (, " ms ", )]
[sb]
[" ms "]
[tracer, ., extraTracingValues, !=, null]
[tracer, ., extraTracingValues]
[tracer]
[null]
[0]
[i, <, tracer, ., extraTracingValues, ., length]
[i]
[tracer, ., extraTracingValues, ., length]
[tracer, ., extraTracingValues]
[tracer]
[i, ++]
[i]
[delta]
[tracer, ., extraTracingValues, [, i, ]]
[tracer, ., extraTracingValues]
[tracer]
[i]
[sb, ., append, (, String, ., format, (, "%4d", ,, delta, ), )]
[sb]
[String, ., format, (, "%4d", ,, delta, )]
[String]
["%4d"]
[delta]
[sb, ., append, (, extraTracingStatistics, ., get, (, i, ), ., getUnits, (, ), )]
[sb]
[extraTracingStatistics, ., get, (, i, ), ., getUnits, (, )]
[extraTracingStatistics, ., get, (, i, )]
[extraTracingStatistics]
[i]
[sb, ., append, (, ";  ", )]
[sb]
[";  "]
[sb, ., append, (, indent, )]
[sb]
[indent]
[sb, ., append, (, tracer, ., toString, (, ), )]
[sb]
[tracer, ., toString, (, )]
[tracer]
[sb, ., toString, (, )]
[sb]
[new, ArrayList, <, Event, >, (, )]
[new, HashSet, <, Tracer, >, (, )]
[new, HashMap, <, String, ,, Stat, >, (, )]
[false]
[false]
[false]
[false]
[isInitialized]
[true]
[isInitialized]
[events, ., add, (, new, Event, (, true, ,, t, ), )]
[events]
[new, Event, (, true, ,, t, )]
[true]
[t]
[outstandingEvents, ., add, (, t, )]
[outstandingEvents]
[t]
[Preconditions, ., checkState, (, notAlreadyOutstanding, )]
[Preconditions]
[notAlreadyOutstanding]
[outstandingEvents, ., remove, (, t, )]
[outstandingEvents]
[t]
[!, wasOutstanding]
[wasOutstanding]
[isOutstandingEventsTruncated]
[logger, ., log, (, Level, ., WARNING, ,, "event not found, probably because the event stack ", +, "overflowed and was truncated", ,, new, Throwable, (, ), )]
[logger]
[Level, ., WARNING]
[Level]
["event not found, probably because the event stack ", +, "overflowed and was truncated"]
["event not found, probably because the event stack "]
["overflowed and was truncated"]
[new, Throwable, (, )]
[new, IllegalStateException, (, )]
[t, ., stopTimeMs, -, t, ., startTimeMs]
[t, ., stopTimeMs]
[t]
[t, ., startTimeMs]
[t]
[silenceThreshold, ==, -, 1]
[silenceThreshold]
[-, 1]
[1]
[silenceThreshold]
[defaultSilenceThreshold]
[elapsed, <, silenceThreshold]
[elapsed]
[silenceThreshold]
[false]
[0]
[i, <, events, ., size, (, )]
[i]
[events, ., size, (, )]
[events]
[i, ++]
[i]
[events, ., get, (, i, )]
[events]
[i]
[e, ., tracer, ==, t]
[e, ., tracer]
[e]
[t]
[Preconditions, ., checkState, (, e, ., isStart, )]
[Preconditions]
[e, ., isStart]
[e]
[events, ., remove, (, i, )]
[events]
[i]
[removed]
[true]
[Preconditions, ., checkState, (, removed, ||, isEventsTruncated, )]
[Preconditions]
[removed, ||, isEventsTruncated]
[removed]
[isEventsTruncated]
[events, ., add, (, new, Event, (, false, ,, t, ), )]
[events]
[new, Event, (, false, ,, t, )]
[false]
[t]
[t, ., type, !=, null]
[t, ., type]
[t]
[null]
[stats, ., get, (, t, ., type, )]
[stats]
[t, ., type]
[t]
[stat, ==, null]
[stat]
[null]
[stat]
[new, Stat, (, )]
[!, extraTracingStatistics, ., isEmpty, (, )]
[extraTracingStatistics, ., isEmpty, (, )]
[extraTracingStatistics]
[stat, ., extraInfo]
[stat]
[new, int, [, extraTracingStatistics, ., size, (, ), ]]
[extraTracingStatistics, ., size, (, )]
[extraTracingStatistics]
[stats, ., put, (, t, ., type, ,, stat, )]
[stats]
[t, ., type]
[t]
[stat]
[stat, ., count, ++]
[stat, ., count]
[stat]
[typeToCountMap, !=, null]
[typeToCountMap]
[null]
[typeToCountMap, ., incrementBy, (, t, ., type, ,, 1, )]
[typeToCountMap]
[t, ., type]
[t]
[1]
[stat, ., clockTime]
[stat]
[elapsed]
[typeToTimeMap, !=, null]
[typeToTimeMap]
[null]
[typeToTimeMap, ., incrementBy, (, t, ., type, ,, elapsed, )]
[typeToTimeMap]
[t, ., type]
[t]
[elapsed]
[stat, ., extraInfo, !=, null, &&, t, ., extraTracingValues, !=, null]
[stat, ., extraInfo, !=, null]
[stat, ., extraInfo]
[stat]
[null]
[t, ., extraTracingValues, !=, null]
[t, ., extraTracingValues]
[t]
[null]
[Math, ., min, (, stat, ., extraInfo, ., length, ,, t, ., extraTracingValues, ., length, )]
[Math]
[stat, ., extraInfo, ., length]
[stat, ., extraInfo]
[stat]
[t, ., extraTracingValues, ., length]
[t, ., extraTracingValues]
[t]
[0]
[i, <, overlapLength]
[i]
[overlapLength]
[i, ++]
[i]
[stat, ., extraInfo, [, i, ]]
[stat, ., extraInfo]
[stat]
[i]
[t, ., extraTracingValues, [, i, ]]
[t, ., extraTracingValues]
[t]
[i]
[extraTracingStatistics, ., get, (, i, ), ., getTracingStat, (, )]
[extraTracingStatistics, ., get, (, i, )]
[extraTracingStatistics]
[i]
[map, !=, null]
[map]
[null]
[map, ., incrementBy, (, t, ., type, ,, t, ., extraTracingValues, [, i, ], )]
[map]
[t, ., type]
[t]
[t, ., extraTracingValues, [, i, ]]
[t, ., extraTracingValues]
[t]
[i]
[elapsed, <, silenceThreshold]
[elapsed]
[silenceThreshold]
[stat, ., silent, ++]
[stat, ., silent]
[stat]
[typeToSilentMap, !=, null]
[typeToSilentMap]
[null]
[typeToSilentMap, ., incrementBy, (, t, ., type, ,, 1, )]
[typeToSilentMap]
[t, ., type]
[t]
[1]
[events, ., size, (, ), ==, 0, &&, outstandingEvents, ., size, (, ), ==, 0]
[events, ., size, (, ), ==, 0]
[events, ., size, (, )]
[events]
[0]
[outstandingEvents, ., size, (, ), ==, 0]
[outstandingEvents, ., size, (, )]
[outstandingEvents]
[0]
[isOutstandingEventsTruncated]
[true]
[outstandingEvents, ., clear, (, )]
[outstandingEvents]
[isEventsTruncated]
[true]
[events, ., clear, (, )]
[events]
[@, SuppressWarnings, (, "nullness", )]
["nullness"]
[getMaxDigits, (, )]
[new, StringBuilder, (, )]
[-, 1]
[1]
[prettyPrint, ?, new, LinkedList, <, String, >, (, ), :, null]
[prettyPrint]
[new, LinkedList, <, String, >, (, )]
[null]
[events]
[prettyPrint, &&, !, e, ., isStart, &&, !, indent, ., isEmpty, (, )]
[prettyPrint, &&, !, e, ., isStart]
[prettyPrint]
[!, e, ., isStart]
[e, ., isStart]
[e]
[!, indent, ., isEmpty, (, )]
[indent, ., isEmpty, (, )]
[indent]
[indent, ., pop, (, )]
[indent]
[sb, ., append, (, " ", )]
[sb]
[" "]
[prettyPrint]
[sb, ., append, (, e, ., toString, (, etime, ,, Joiner, ., on, (, "", ), ., join, (, indent, ), ,, numDigits, ), )]
[sb]
[e, ., toString, (, etime, ,, Joiner, ., on, (, "", ), ., join, (, indent, ), ,, numDigits, )]
[e]
[etime]
[Joiner, ., on, (, "", ), ., join, (, indent, )]
[Joiner, ., on, (, "", )]
[Joiner]
[""]
[indent]
[numDigits]
[sb, ., append, (, e, ., toString, (, etime, ,, "", ,, 4, ), )]
[sb]
[e, ., toString, (, etime, ,, "", ,, 4, )]
[e]
[etime]
[""]
[4]
[etime]
[e, ., eventTime, (, )]
[e]
[sb, ., append, (, '\n', )]
[sb]
['\n']
[prettyPrint, &&, e, ., isStart]
[prettyPrint]
[e, ., isStart]
[e]
[indent, ., push, (, "|  ", )]
[indent]
["|  "]
[outstandingEvents, ., size, (, ), !=, 0]
[outstandingEvents, ., size, (, )]
[outstandingEvents]
[0]
[clock, ., currentTimeMillis, (, )]
[clock]
[sb, ., append, (, " Unstopped timers:\n", )]
[sb]
[" Unstopped timers:\n"]
[outstandingEvents]
[sb, ., append, (, "  ", ), ., append, (, t, ), ., append, (, " (", ), ., append, (, now, -, t, ., startTimeMs, ), ., append, (, " ms, started at ", ), ., append, (, formatTime, (, t, ., startTimeMs, ), ), ., append, (, ")\n", )]
[sb, ., append, (, "  ", ), ., append, (, t, ), ., append, (, " (", ), ., append, (, now, -, t, ., startTimeMs, ), ., append, (, " ms, started at ", ), ., append, (, formatTime, (, t, ., startTimeMs, ), )]
[sb, ., append, (, "  ", ), ., append, (, t, ), ., append, (, " (", ), ., append, (, now, -, t, ., startTimeMs, ), ., append, (, " ms, started at ", )]
[sb, ., append, (, "  ", ), ., append, (, t, ), ., append, (, " (", ), ., append, (, now, -, t, ., startTimeMs, )]
[sb, ., append, (, "  ", ), ., append, (, t, ), ., append, (, " (", )]
[sb, ., append, (, "  ", ), ., append, (, t, )]
[sb, ., append, (, "  ", )]
[sb]
["  "]
[t]
[" ("]
[now, -, t, ., startTimeMs]
[now]
[t, ., startTimeMs]
[t]
[" ms, started at "]
[formatTime, (, t, ., startTimeMs, )]
[t, ., startTimeMs]
[t]
[")\n"]
[stats, ., keySet, (, )]
[stats]
[stats, ., get, (, key, )]
[stats]
[key]
[stat, ., count, >, 1]
[stat, ., count]
[stat]
[1]
[sb, ., append, (, " TOTAL ", ), ., append, (, key, ), ., append, (, " ", ), ., append, (, stat, ., count, ), ., append, (, " (", ), ., append, (, stat, ., clockTime, ), ., append, (, " ms", )]
[sb, ., append, (, " TOTAL ", ), ., append, (, key, ), ., append, (, " ", ), ., append, (, stat, ., count, ), ., append, (, " (", ), ., append, (, stat, ., clockTime, )]
[sb, ., append, (, " TOTAL ", ), ., append, (, key, ), ., append, (, " ", ), ., append, (, stat, ., count, ), ., append, (, " (", )]
[sb, ., append, (, " TOTAL ", ), ., append, (, key, ), ., append, (, " ", ), ., append, (, stat, ., count, )]
[sb, ., append, (, " TOTAL ", ), ., append, (, key, ), ., append, (, " ", )]
[sb, ., append, (, " TOTAL ", ), ., append, (, key, )]
[sb, ., append, (, " TOTAL ", )]
[sb]
[" TOTAL "]
[key]
[" "]
[stat, ., count]
[stat]
[" ("]
[stat, ., clockTime]
[stat]
[" ms"]
[stat, ., extraInfo, !=, null]
[stat, ., extraInfo]
[stat]
[null]
[0]
[i, <, stat, ., extraInfo, ., length]
[i]
[stat, ., extraInfo, ., length]
[stat, ., extraInfo]
[stat]
[i, ++]
[i]
[sb, ., append, (, "; ", )]
[sb]
["; "]
[sb, ., append, (, stat, ., extraInfo, [, i, ], ), ., append, (, ' ', ), ., append, (, extraTracingStatistics, ., get, (, i, ), ., getUnits, (, ), )]
[sb, ., append, (, stat, ., extraInfo, [, i, ], ), ., append, (, ' ', )]
[sb, ., append, (, stat, ., extraInfo, [, i, ], )]
[sb]
[stat, ., extraInfo, [, i, ]]
[stat, ., extraInfo]
[stat]
[i]
[' ']
[extraTracingStatistics, ., get, (, i, ), ., getUnits, (, )]
[extraTracingStatistics, ., get, (, i, )]
[extraTracingStatistics]
[i]
[sb, ., append, (, ")\n", )]
[sb]
[")\n"]
[sb, ., toString, (, )]
[sb]
[-, 1]
[1]
[0]
[events]
[etime, !=, -, 1]
[etime]
[-, 1]
[1]
[e, ., eventTime, (, ), -, etime]
[e, ., eventTime, (, )]
[e]
[etime]
[max_time]
[Math, ., max, (, max_time, ,, time, )]
[Math]
[max_time]
[time]
[!, e, ., isStart]
[e, ., isStart]
[e]
[e, ., tracer, ., stopTimeMs, -, e, ., tracer, ., startTimeMs]
[e, ., tracer, ., stopTimeMs]
[e, ., tracer]
[e]
[e, ., tracer, ., startTimeMs]
[e, ., tracer]
[e]
[max_time]
[Math, ., max, (, max_time, ,, time, )]
[Math]
[max_time]
[time]
[etime]
[e, ., eventTime, (, )]
[e]
[Math, ., max, (, 3, ,, numDigits, (, max_time, ), )]
[Math]
[3]
[numDigits, (, max_time, )]
[max_time]
[new, ThreadLocal, <, ThreadTrace, >, (, )]
[traces, ., get, (, )]
[traces]
[t, ==, null]
[t]
[null]
[t]
[new, ThreadTrace, (, )]
[t, ., prettyPrint]
[t]
[defaultPrettyPrint]
[traces, ., set, (, t, )]
[traces]
[t]
[t]
[traces, ., remove, (, )]
[traces]
[new, ConcurrentHashMap, <, String, ,, Long, >, (, )]
[@, SuppressWarnings, (, "nullness", )]
["nullness"]
[map, ., get, (, key, )]
[map]
[key]
[oldValue, ==, null]
[oldValue]
[null]
[oldValue]
[map, ., putIfAbsent, (, key, ,, delta, )]
[map]
[key]
[delta]
[oldValue, ==, null]
[oldValue]
[null]
[true]
[map, ., replace, (, key, ,, oldValue, ,, oldValue, +, delta, )]
[map]
[key]
[oldValue]
[oldValue, +, delta]
[oldValue]
[delta]
[oldValue]
[map, ., get, (, key, )]
[map]
[key]
[map]
