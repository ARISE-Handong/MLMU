[graph]
[null]
[this, ., graph]
[this]
[graph]
[this, ., edgePredicate]
[this]
[edgePredicate]
[graph, ., clearNodeAnnotations, (, )]
[graph]
[graph, ., getNode, (, entry, ), ., setAnnotation, (, REACHABLE, )]
[graph, ., getNode, (, entry, )]
[graph]
[entry]
[REACHABLE]
[FixedPointGraphTraversal, ., newTraversal, (, this, ), ., computeFixedPoint, (, graph, ,, entry, )]
[FixedPointGraphTraversal, ., newTraversal, (, this, )]
[FixedPointGraphTraversal]
[this]
[graph]
[entry]
[graph, ., getNode, (, reachableNode, )]
[graph]
[reachableNode]
[Preconditions, ., checkState, (, newReachable, ., getAnnotation, (, ), !=, REACHABLE, )]
[Preconditions]
[newReachable, ., getAnnotation, (, ), !=, REACHABLE]
[newReachable, ., getAnnotation, (, )]
[newReachable]
[REACHABLE]
[newReachable, ., setAnnotation, (, REACHABLE, )]
[newReachable]
[REACHABLE]
[FixedPointGraphTraversal, ., newTraversal, (, this, ), ., computeFixedPoint, (, graph, ,, reachableNode, )]
[FixedPointGraphTraversal, ., newTraversal, (, this, )]
[FixedPointGraphTraversal]
[this]
[graph]
[reachableNode]
[graph, ., getNode, (, source, ), ., getAnnotation, (, ), ==, REACHABLE, &&, (, edgePredicate, ==, null, ||, edgePredicate, ., apply, (, new, EdgeTuple, <, N, ,, E, >, (, source, ,, e, ,, destination, ), ), )]
[graph, ., getNode, (, source, ), ., getAnnotation, (, ), ==, REACHABLE]
[graph, ., getNode, (, source, ), ., getAnnotation, (, )]
[graph, ., getNode, (, source, )]
[graph]
[source]
[REACHABLE]
[(, edgePredicate, ==, null, ||, edgePredicate, ., apply, (, new, EdgeTuple, <, N, ,, E, >, (, source, ,, e, ,, destination, ), ), )]
[edgePredicate, ==, null, ||, edgePredicate, ., apply, (, new, EdgeTuple, <, N, ,, E, >, (, source, ,, e, ,, destination, ), )]
[edgePredicate, ==, null]
[edgePredicate]
[null]
[edgePredicate, ., apply, (, new, EdgeTuple, <, N, ,, E, >, (, source, ,, e, ,, destination, ), )]
[edgePredicate]
[new, EdgeTuple, <, N, ,, E, >, (, source, ,, e, ,, destination, )]
[source]
[e]
[destination]
[graph, ., getNode, (, destination, )]
[graph]
[destination]
[destNode, ., getAnnotation, (, ), !=, REACHABLE]
[destNode, ., getAnnotation, (, )]
[destNode]
[REACHABLE]
[destNode, ., setAnnotation, (, REACHABLE, )]
[destNode]
[REACHABLE]
[true]
[false]
[new, Annotation, (, ), {, }]
[this, ., sourceNode]
[this]
[sourceNode]
[this, ., edge]
[this]
[edge]
[this, ., destNode]
[this]
[destNode]
