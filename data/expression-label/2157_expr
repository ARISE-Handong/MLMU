[6.0e-3]
[false]
[this, ., normalized]
[this]
[normalized]
[normalized, ?, FastMath, ., PI, *, x, :, x]
[normalized]
[FastMath, ., PI, *, x]
[FastMath, ., PI]
[FastMath]
[x]
[x]
[FastMath, ., abs, (, scaledX, ), <=, SHORTCUT]
[FastMath, ., abs, (, scaledX, )]
[FastMath]
[scaledX]
[SHORTCUT]
[scaledX, *, scaledX]
[scaledX]
[scaledX]
[(, (, scaledX2, -, 20, ), *, scaledX2, +, 120, ), /, 120]
[(, (, scaledX2, -, 20, ), *, scaledX2, +, 120, )]
[(, scaledX2, -, 20, ), *, scaledX2, +, 120]
[(, scaledX2, -, 20, ), *, scaledX2]
[(, scaledX2, -, 20, )]
[scaledX2, -, 20]
[scaledX2]
[20]
[scaledX2]
[120]
[120]
[FastMath, ., sin, (, scaledX, ), /, scaledX]
[FastMath, ., sin, (, scaledX, )]
[FastMath]
[scaledX]
[scaledX]
[FunctionUtils, ., toDifferentiableUnivariateFunction, (, this, ), ., derivative, (, )]
[FunctionUtils, ., toDifferentiableUnivariateFunction, (, this, )]
[FunctionUtils]
[this]
[(, normalized, ?, FastMath, ., PI, :, 1, ), *, t, ., getValue, (, )]
[(, normalized, ?, FastMath, ., PI, :, 1, )]
[normalized, ?, FastMath, ., PI, :, 1]
[normalized]
[FastMath, ., PI]
[FastMath]
[1]
[t, ., getValue, (, )]
[t]
[scaledX, *, scaledX]
[scaledX]
[scaledX]
[new, double, [, t, ., getOrder, (, ), +, 1, ]]
[t, ., getOrder, (, ), +, 1]
[t, ., getOrder, (, )]
[t]
[1]
[FastMath, ., abs, (, scaledX, ), <=, SHORTCUT]
[FastMath, ., abs, (, scaledX, )]
[FastMath]
[scaledX]
[SHORTCUT]
[0]
[i, <, f, ., length]
[i]
[f, ., length]
[f]
[++, i]
[i]
[i, /, 2]
[i]
[2]
[(, i, &, 0x1, ), ==, 0]
[(, i, &, 0x1, )]
[i, &, 0x1]
[i]
[0x1]
[0]
[f, [, i, ]]
[f]
[i]
[(, (, (, k, &, 0x1, ), ==, 0, ), ?, 1, :, -, 1, ), *, (, 1.0, /, (, i, +, 1, ), -, scaledX2, *, (, 1.0, /, (, 2, *, i, +, 6, ), -, scaledX2, /, (, 24, *, i, +, 120, ), ), )]
[(, (, (, k, &, 0x1, ), ==, 0, ), ?, 1, :, -, 1, )]
[(, (, k, &, 0x1, ), ==, 0, ), ?, 1, :, -, 1]
[(, (, k, &, 0x1, ), ==, 0, )]
[(, k, &, 0x1, ), ==, 0]
[(, k, &, 0x1, )]
[k, &, 0x1]
[k]
[0x1]
[0]
[1]
[-, 1]
[1]
[(, 1.0, /, (, i, +, 1, ), -, scaledX2, *, (, 1.0, /, (, 2, *, i, +, 6, ), -, scaledX2, /, (, 24, *, i, +, 120, ), ), )]
[1.0, /, (, i, +, 1, ), -, scaledX2, *, (, 1.0, /, (, 2, *, i, +, 6, ), -, scaledX2, /, (, 24, *, i, +, 120, ), )]
[1.0, /, (, i, +, 1, )]
[1.0]
[(, i, +, 1, )]
[i, +, 1]
[i]
[1]
[scaledX2, *, (, 1.0, /, (, 2, *, i, +, 6, ), -, scaledX2, /, (, 24, *, i, +, 120, ), )]
[scaledX2]
[(, 1.0, /, (, 2, *, i, +, 6, ), -, scaledX2, /, (, 24, *, i, +, 120, ), )]
[1.0, /, (, 2, *, i, +, 6, ), -, scaledX2, /, (, 24, *, i, +, 120, )]
[1.0, /, (, 2, *, i, +, 6, )]
[1.0]
[(, 2, *, i, +, 6, )]
[2, *, i, +, 6]
[2, *, i]
[2]
[i]
[6]
[scaledX2, /, (, 24, *, i, +, 120, )]
[scaledX2]
[(, 24, *, i, +, 120, )]
[24, *, i, +, 120]
[24, *, i]
[24]
[i]
[120]
[f, [, i, ]]
[f]
[i]
[(, (, (, k, &, 0x1, ), ==, 0, ), ?, -, scaledX, :, scaledX, ), *, (, 1.0, /, (, i, +, 2, ), -, scaledX2, *, (, 1.0, /, (, 6, *, i, +, 24, ), -, scaledX2, /, (, 120, *, i, +, 720, ), ), )]
[(, (, (, k, &, 0x1, ), ==, 0, ), ?, -, scaledX, :, scaledX, )]
[(, (, k, &, 0x1, ), ==, 0, ), ?, -, scaledX, :, scaledX]
[(, (, k, &, 0x1, ), ==, 0, )]
[(, k, &, 0x1, ), ==, 0]
[(, k, &, 0x1, )]
[k, &, 0x1]
[k]
[0x1]
[0]
[-, scaledX]
[scaledX]
[scaledX]
[(, 1.0, /, (, i, +, 2, ), -, scaledX2, *, (, 1.0, /, (, 6, *, i, +, 24, ), -, scaledX2, /, (, 120, *, i, +, 720, ), ), )]
[1.0, /, (, i, +, 2, ), -, scaledX2, *, (, 1.0, /, (, 6, *, i, +, 24, ), -, scaledX2, /, (, 120, *, i, +, 720, ), )]
[1.0, /, (, i, +, 2, )]
[1.0]
[(, i, +, 2, )]
[i, +, 2]
[i]
[2]
[scaledX2, *, (, 1.0, /, (, 6, *, i, +, 24, ), -, scaledX2, /, (, 120, *, i, +, 720, ), )]
[scaledX2]
[(, 1.0, /, (, 6, *, i, +, 24, ), -, scaledX2, /, (, 120, *, i, +, 720, ), )]
[1.0, /, (, 6, *, i, +, 24, ), -, scaledX2, /, (, 120, *, i, +, 720, )]
[1.0, /, (, 6, *, i, +, 24, )]
[1.0]
[(, 6, *, i, +, 24, )]
[6, *, i, +, 24]
[6, *, i]
[6]
[i]
[24]
[scaledX2, /, (, 120, *, i, +, 720, )]
[scaledX2]
[(, 120, *, i, +, 720, )]
[120, *, i, +, 720]
[120, *, i]
[120]
[i]
[720]
[1, /, scaledX]
[1]
[scaledX]
[FastMath, ., cos, (, scaledX, )]
[FastMath]
[scaledX]
[FastMath, ., sin, (, scaledX, )]
[FastMath]
[scaledX]
[f, [, 0, ]]
[f]
[0]
[inv, *, sin]
[inv]
[sin]
[new, double, [, f, ., length, ]]
[f, ., length]
[f]
[sc, [, 0, ]]
[sc]
[0]
[1]
[inv]
[1]
[n, <, f, ., length]
[n]
[f, ., length]
[f]
[++, n]
[n]
[0]
[0]
[(, n, &, 0x1, ), ==, 0]
[(, n, &, 0x1, )]
[n, &, 0x1]
[n]
[0x1]
[0]
[sc, [, n, ]]
[sc]
[n]
[0]
[kStart]
[n]
[sc, [, n, ]]
[sc]
[n]
[sc, [, n, -, 1, ]]
[sc]
[n, -, 1]
[n]
[1]
[c]
[sc, [, n, ]]
[sc]
[n]
[kStart]
[n, -, 1]
[n]
[1]
[kStart]
[k, >, 1]
[k]
[1]
[k]
[2]
[sc, [, k, ]]
[sc]
[k]
[(, k, -, n, ), *, sc, [, k, ], -, sc, [, k, -, 1, ]]
[(, k, -, n, ), *, sc, [, k, ]]
[(, k, -, n, )]
[k, -, n]
[k]
[n]
[sc, [, k, ]]
[sc]
[k]
[sc, [, k, -, 1, ]]
[sc]
[k, -, 1]
[k]
[1]
[s]
[s, *, scaledX2, +, sc, [, k, ]]
[s, *, scaledX2]
[s]
[scaledX2]
[sc, [, k, ]]
[sc]
[k]
[sc, [, k, -, 1, ]]
[sc]
[k, -, 1]
[k]
[1]
[(, k, -, 1, -, n, ), *, sc, [, k, -, 1, ], +, sc, [, k, -, 2, ]]
[(, k, -, 1, -, n, ), *, sc, [, k, -, 1, ]]
[(, k, -, 1, -, n, )]
[k, -, 1, -, n]
[k, -, 1]
[k]
[1]
[n]
[sc, [, k, -, 1, ]]
[sc]
[k, -, 1]
[k]
[1]
[sc, [, k, -, 2, ]]
[sc]
[k, -, 2]
[k]
[2]
[c]
[c, *, scaledX2, +, sc, [, k, -, 1, ]]
[c, *, scaledX2]
[c]
[scaledX2]
[sc, [, k, -, 1, ]]
[sc]
[k, -, 1]
[k]
[1]
[sc, [, 0, ]]
[sc]
[0]
[-, n]
[n]
[s]
[s, *, scaledX2, +, sc, [, 0, ]]
[s, *, scaledX2]
[s]
[scaledX2]
[sc, [, 0, ]]
[sc]
[0]
[coeff]
[inv]
[f, [, n, ]]
[f]
[n]
[coeff, *, (, s, *, sin, +, c, *, scaledX, *, cos, )]
[coeff]
[(, s, *, sin, +, c, *, scaledX, *, cos, )]
[s, *, sin, +, c, *, scaledX, *, cos]
[s, *, sin]
[s]
[sin]
[c, *, scaledX, *, cos]
[c, *, scaledX]
[c]
[scaledX]
[cos]
[normalized]
[FastMath, ., PI]
[FastMath]
[1]
[i, <, f, ., length]
[i]
[f, ., length]
[f]
[++, i]
[i]
[f, [, i, ]]
[f]
[i]
[scale]
[scale]
[FastMath, ., PI]
[FastMath]
[t, ., compose, (, f, )]
[t]
[f]
