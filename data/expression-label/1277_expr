[1.0e-15]
[1.0e-10]
[matrix]
[DEFAULT_RELATIVE_SYMMETRY_THRESHOLD]
[DEFAULT_ABSOLUTE_POSITIVITY_THRESHOLD]
[!, matrix, ., isSquare, (, )]
[matrix, ., isSquare, (, )]
[matrix]
[new, NonSquareMatrixException, (, matrix, ., getRowDimension, (, ), ,, matrix, ., getColumnDimension, (, ), )]
[matrix, ., getRowDimension, (, )]
[matrix]
[matrix, ., getColumnDimension, (, )]
[matrix]
[matrix, ., getRowDimension, (, )]
[matrix]
[lTData]
[matrix, ., getData, (, )]
[matrix]
[cachedL]
[null]
[cachedLT]
[null]
[0]
[i, <, order]
[i]
[order]
[++, i]
[i]
[lTData, [, i, ]]
[lTData]
[i]
[i, +, 1]
[i]
[1]
[j, <, order]
[j]
[order]
[++, j]
[j]
[lTData, [, j, ]]
[lTData]
[j]
[lI, [, j, ]]
[lI]
[j]
[lJ, [, i, ]]
[lJ]
[i]
[relativeSymmetryThreshold, *, FastMath, ., max, (, FastMath, ., abs, (, lIJ, ), ,, FastMath, ., abs, (, lJI, ), )]
[relativeSymmetryThreshold]
[FastMath, ., max, (, FastMath, ., abs, (, lIJ, ), ,, FastMath, ., abs, (, lJI, ), )]
[FastMath]
[FastMath, ., abs, (, lIJ, )]
[FastMath]
[lIJ]
[FastMath, ., abs, (, lJI, )]
[FastMath]
[lJI]
[FastMath, ., abs, (, lIJ, -, lJI, ), >, maxDelta]
[FastMath, ., abs, (, lIJ, -, lJI, )]
[FastMath]
[lIJ, -, lJI]
[lIJ]
[lJI]
[maxDelta]
[new, NonSymmetricMatrixException, (, i, ,, j, ,, relativeSymmetryThreshold, )]
[i]
[j]
[relativeSymmetryThreshold]
[lJ, [, i, ]]
[lJ]
[i]
[0]
[0]
[i, <, order]
[i]
[order]
[++, i]
[i]
[lTData, [, i, ]]
[lTData]
[i]
[ltI, [, i, ], <=, absolutePositivityThreshold]
[ltI, [, i, ]]
[ltI]
[i]
[absolutePositivityThreshold]
[new, NonPositiveDefiniteMatrixException, (, ltI, [, i, ], ,, i, ,, absolutePositivityThreshold, )]
[ltI, [, i, ]]
[ltI]
[i]
[i]
[absolutePositivityThreshold]
[ltI, [, i, ]]
[ltI]
[i]
[FastMath, ., sqrt, (, ltI, [, i, ], )]
[FastMath]
[ltI, [, i, ]]
[ltI]
[i]
[1.0, /, ltI, [, i, ]]
[1.0]
[ltI, [, i, ]]
[ltI]
[i]
[order, -, 1]
[order]
[1]
[q, >, i]
[q]
[i]
[--, q]
[q]
[ltI, [, q, ]]
[ltI]
[q]
[inverse]
[lTData, [, q, ]]
[lTData]
[q]
[q]
[p, <, order]
[p]
[order]
[++, p]
[p]
[ltQ, [, p, ]]
[ltQ]
[p]
[ltI, [, q, ], *, ltI, [, p, ]]
[ltI, [, q, ]]
[ltI]
[q]
[ltI, [, p, ]]
[ltI]
[p]
[cachedL, ==, null]
[cachedL]
[null]
[cachedL]
[getLT, (, ), ., transpose, (, )]
[getLT, (, )]
[cachedL]
[cachedLT, ==, null]
[cachedLT]
[null]
[cachedLT]
[MatrixUtils, ., createRealMatrix, (, lTData, )]
[MatrixUtils]
[lTData]
[cachedLT]
[1.0]
[0]
[i, <, lTData, ., length]
[i]
[lTData, ., length]
[lTData]
[++, i]
[i]
[lTData, [, i, ], [, i, ]]
[lTData, [, i, ]]
[lTData]
[i]
[i]
[determinant]
[lTii, *, lTii]
[lTii]
[lTii]
[determinant]
[new, Solver, (, lTData, )]
[lTData]
[this, ., lTData]
[this]
[lTData]
[true]
[lTData, ., length]
[lTData]
[b, ., getDimension, (, ), !=, m]
[b, ., getDimension, (, )]
[b]
[m]
[new, DimensionMismatchException, (, b, ., getDimension, (, ), ,, m, )]
[b, ., getDimension, (, )]
[b]
[m]
[b, ., toArray, (, )]
[b]
[0]
[j, <, m]
[j]
[m]
[j, ++]
[j]
[lTData, [, j, ]]
[lTData]
[j]
[x, [, j, ]]
[x]
[j]
[lJ, [, j, ]]
[lJ]
[j]
[x, [, j, ]]
[x]
[j]
[j, +, 1]
[j]
[1]
[i, <, m]
[i]
[m]
[i, ++]
[i]
[x, [, i, ]]
[x]
[i]
[xJ, *, lJ, [, i, ]]
[xJ]
[lJ, [, i, ]]
[lJ]
[i]
[m, -, 1]
[m]
[1]
[j, >=, 0]
[j]
[0]
[j, --]
[j]
[x, [, j, ]]
[x]
[j]
[lTData, [, j, ], [, j, ]]
[lTData, [, j, ]]
[lTData]
[j]
[j]
[x, [, j, ]]
[x]
[j]
[0]
[i, <, j]
[i]
[j]
[i, ++]
[i]
[x, [, i, ]]
[x]
[i]
[xJ, *, lTData, [, i, ], [, j, ]]
[xJ]
[lTData, [, i, ], [, j, ]]
[lTData, [, i, ]]
[lTData]
[i]
[j]
[new, ArrayRealVector, (, x, ,, false, )]
[x]
[false]
[lTData, ., length]
[lTData]
[b, ., getRowDimension, (, ), !=, m]
[b, ., getRowDimension, (, )]
[b]
[m]
[new, DimensionMismatchException, (, b, ., getRowDimension, (, ), ,, m, )]
[b, ., getRowDimension, (, )]
[b]
[m]
[b, ., getColumnDimension, (, )]
[b]
[b, ., getData, (, )]
[b]
[0]
[j, <, m]
[j]
[m]
[j, ++]
[j]
[lTData, [, j, ]]
[lTData]
[j]
[lJ, [, j, ]]
[lJ]
[j]
[x, [, j, ]]
[x]
[j]
[0]
[k, <, nColB]
[k]
[nColB]
[++, k]
[k]
[xJ, [, k, ]]
[xJ]
[k]
[lJJ]
[j, +, 1]
[j]
[1]
[i, <, m]
[i]
[m]
[i, ++]
[i]
[x, [, i, ]]
[x]
[i]
[lJ, [, i, ]]
[lJ]
[i]
[0]
[k, <, nColB]
[k]
[nColB]
[++, k]
[k]
[xI, [, k, ]]
[xI]
[k]
[xJ, [, k, ], *, lJI]
[xJ, [, k, ]]
[xJ]
[k]
[lJI]
[m, -, 1]
[m]
[1]
[j, >=, 0]
[j]
[0]
[j, --]
[j]
[lTData, [, j, ], [, j, ]]
[lTData, [, j, ]]
[lTData]
[j]
[j]
[x, [, j, ]]
[x]
[j]
[0]
[k, <, nColB]
[k]
[nColB]
[++, k]
[k]
[xJ, [, k, ]]
[xJ]
[k]
[lJJ]
[0]
[i, <, j]
[i]
[j]
[i, ++]
[i]
[x, [, i, ]]
[x]
[i]
[lTData, [, i, ], [, j, ]]
[lTData, [, i, ]]
[lTData]
[i]
[j]
[0]
[k, <, nColB]
[k]
[nColB]
[++, k]
[k]
[xI, [, k, ]]
[xI]
[k]
[xJ, [, k, ], *, lIJ]
[xJ, [, k, ]]
[xJ]
[k]
[lIJ]
[new, Array2DRowRealMatrix, (, x, )]
[x]
[solve, (, MatrixUtils, ., createRealIdentityMatrix, (, lTData, ., length, ), )]
[MatrixUtils, ., createRealIdentityMatrix, (, lTData, ., length, )]
[MatrixUtils]
[lTData, ., length]
[lTData]
