[-, 795612466005590431L]
[795612466005590431L]
[0.08]
[0.40]
[90.0]
[new, Font, (, "Tahoma", ,, Font, ., PLAIN, ,, 10, )]
["Tahoma"]
[Font, ., PLAIN]
[Font]
[10]
[Color, ., black]
[Color]
[new, Color, (, 255, ,, 255, ,, 192, )]
[255]
[255]
[192]
[Color, ., black]
[Color]
[new, BasicStroke, (, 0.5f, )]
[0.5f]
[new, Color, (, 151, ,, 151, ,, 151, ,, 128, )]
[151]
[151]
[151]
[128]
[0.00001]
[Color, ., gray]
[Color]
[4.0f]
[4.0f]
[true]
[0.14]
[0.025]
[PieLabelLinkStyle, ., STANDARD]
[PieLabelLinkStyle]
[0.025]
[Color, ., black]
[Color]
[new, BasicStroke, (, 0.5f, )]
[0.5f]
[ResourceBundleWrapper, ., getBundle, (, "org.jfree.chart.plot.LocalizationBundle", )]
[ResourceBundleWrapper]
["org.jfree.chart.plot.LocalizationBundle"]
[false]
[false]
[false]
[null]
[this, ., dataset]
[this]
[dataset]
[dataset, !=, null]
[dataset]
[null]
[dataset, ., addChangeListener, (, this, )]
[dataset]
[this]
[this, ., pieIndex]
[this]
[0]
[this, ., interiorGap]
[this]
[DEFAULT_INTERIOR_GAP]
[this, ., circular]
[this]
[true]
[this, ., startAngle]
[this]
[DEFAULT_START_ANGLE]
[this, ., direction]
[this]
[Rotation, ., CLOCKWISE]
[Rotation]
[this, ., minimumArcAngleToDraw]
[this]
[DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW]
[this, ., sectionPaintMap]
[this]
[new, PaintMap, (, )]
[this, ., baseSectionPaint]
[this]
[Color, ., gray]
[Color]
[this, ., autoPopulateSectionPaint]
[this]
[true]
[this, ., sectionOutlinesVisible]
[this]
[true]
[this, ., sectionOutlinePaintMap]
[this]
[new, PaintMap, (, )]
[this, ., baseSectionOutlinePaint]
[this]
[DEFAULT_OUTLINE_PAINT]
[this, ., autoPopulateSectionOutlinePaint]
[this]
[false]
[this, ., sectionOutlineStrokeMap]
[this]
[new, StrokeMap, (, )]
[this, ., baseSectionOutlineStroke]
[this]
[DEFAULT_OUTLINE_STROKE]
[this, ., autoPopulateSectionOutlineStroke]
[this]
[false]
[this, ., explodePercentages]
[this]
[new, TreeMap, (, )]
[this, ., labelGenerator]
[this]
[new, StandardPieSectionLabelGenerator, (, )]
[this, ., labelFont]
[this]
[DEFAULT_LABEL_FONT]
[this, ., labelPaint]
[this]
[DEFAULT_LABEL_PAINT]
[this, ., labelBackgroundPaint]
[this]
[DEFAULT_LABEL_BACKGROUND_PAINT]
[this, ., labelOutlinePaint]
[this]
[DEFAULT_LABEL_OUTLINE_PAINT]
[this, ., labelOutlineStroke]
[this]
[DEFAULT_LABEL_OUTLINE_STROKE]
[this, ., labelShadowPaint]
[this]
[DEFAULT_LABEL_SHADOW_PAINT]
[this, ., labelLinksVisible]
[this]
[true]
[this, ., labelDistributor]
[this]
[new, PieLabelDistributor, (, 0, )]
[0]
[this, ., simpleLabels]
[this]
[false]
[this, ., simpleLabelOffset]
[this]
[new, RectangleInsets, (, UnitType, ., RELATIVE, ,, 0.18, ,, 0.18, ,, 0.18, ,, 0.18, )]
[UnitType, ., RELATIVE]
[UnitType]
[0.18]
[0.18]
[0.18]
[0.18]
[this, ., labelPadding]
[this]
[new, RectangleInsets, (, 2, ,, 2, ,, 2, ,, 2, )]
[2]
[2]
[2]
[2]
[this, ., toolTipGenerator]
[this]
[null]
[this, ., urlGenerator]
[this]
[null]
[this, ., legendLabelGenerator]
[this]
[new, StandardPieSectionLabelGenerator, (, )]
[this, ., legendLabelToolTipGenerator]
[this]
[null]
[this, ., legendLabelURLGenerator]
[this]
[null]
[this, ., legendItemShape]
[this]
[Plot, ., DEFAULT_LEGEND_ITEM_CIRCLE]
[Plot]
[this, ., ignoreNullValues]
[this]
[false]
[this, ., ignoreZeroValues]
[this]
[false]
[this, ., selectedItemAttributes]
[this]
[new, PieSelectionAttributes, (, )]
[this, ., shadowGenerator]
[this]
[new, DefaultShadowGenerator, (, )]
[this, ., dataset]
[this]
[this, ., dataset]
[this]
[existing, !=, null]
[existing]
[null]
[existing, ., removeChangeListener, (, this, )]
[existing]
[this]
[this, ., dataset]
[this]
[dataset]
[dataset, !=, null]
[dataset]
[null]
[setDatasetGroup, (, dataset, ., getGroup, (, ), )]
[dataset, ., getGroup, (, )]
[dataset]
[dataset, ., addChangeListener, (, this, )]
[dataset]
[this]
[new, DatasetChangeEvent, (, this, ,, dataset, ,, new, PieDatasetChangeInfo, (, PieDatasetChangeType, ., UPDATE, ,, -, 1, ,, -, 1, ), )]
[this]
[dataset]
[new, PieDatasetChangeInfo, (, PieDatasetChangeType, ., UPDATE, ,, -, 1, ,, -, 1, )]
[PieDatasetChangeType, ., UPDATE]
[PieDatasetChangeType]
[-, 1]
[1]
[-, 1]
[1]
[datasetChanged, (, event, )]
[event]
[this, ., pieIndex]
[this]
[this, ., pieIndex]
[this]
[index]
[this, ., startAngle]
[this]
[this, ., startAngle]
[this]
[angle]
[fireChangeEvent, (, )]
[this, ., direction]
[this]
[direction, ==, null]
[direction]
[null]
[new, IllegalArgumentException, (, "Null 'direction' argument.", )]
["Null 'direction' argument."]
[this, ., direction]
[this]
[direction]
[fireChangeEvent, (, )]
[this, ., interiorGap]
[this]
[(, percent, <, 0.0, ), ||, (, percent, >, MAX_INTERIOR_GAP, )]
[(, percent, <, 0.0, )]
[percent, <, 0.0]
[percent]
[0.0]
[(, percent, >, MAX_INTERIOR_GAP, )]
[percent, >, MAX_INTERIOR_GAP]
[percent]
[MAX_INTERIOR_GAP]
[new, IllegalArgumentException, (, "Invalid 'percent' (", +, percent, +, ") argument.", )]
["Invalid 'percent' (", +, percent, +, ") argument."]
["Invalid 'percent' (", +, percent]
["Invalid 'percent' ("]
[percent]
[") argument."]
[this, ., interiorGap, !=, percent]
[this, ., interiorGap]
[this]
[percent]
[this, ., interiorGap]
[this]
[percent]
[fireChangeEvent, (, )]
[this, ., circular]
[this]
[setCircular, (, flag, ,, true, )]
[flag]
[true]
[this, ., circular]
[this]
[circular]
[notify]
[fireChangeEvent, (, )]
[this, ., ignoreNullValues]
[this]
[this, ., ignoreNullValues]
[this]
[flag]
[fireChangeEvent, (, )]
[this, ., ignoreZeroValues]
[this]
[this, ., ignoreZeroValues]
[this]
[flag]
[fireChangeEvent, (, )]
[null]
[selected]
[result]
[this, ., selectedItemAttributes, ., lookupSectionPaint, (, key, )]
[this, ., selectedItemAttributes]
[this]
[key]
[result, ==, null]
[result]
[null]
[result]
[lookupSectionPaint, (, key, ,, selected, ,, getAutoPopulateSectionPaint, (, ), )]
[key]
[selected]
[getAutoPopulateSectionPaint, (, )]
[result]
[selected]
[null]
[result]
[this, ., sectionPaintMap, ., getPaint, (, key, )]
[this, ., sectionPaintMap]
[this]
[key]
[result, !=, null]
[result]
[null]
[result]
[autoPopulate]
[getDrawingSupplier, (, )]
[ds, !=, null]
[ds]
[null]
[result]
[ds, ., getNextPaint, (, )]
[ds]
[this, ., sectionPaintMap, ., put, (, key, ,, result, )]
[this, ., sectionPaintMap]
[this]
[key]
[result]
[result]
[this, ., baseSectionPaint]
[this]
[result]
[this, ., baseSectionPaint]
[this]
[result]
[null]
[this, ., dataset, !=, null]
[this, ., dataset]
[this]
[null]
[section, >=, 0, &&, section, <, this, ., dataset, ., getItemCount, (, )]
[section, >=, 0]
[section]
[0]
[section, <, this, ., dataset, ., getItemCount, (, )]
[section]
[this, ., dataset, ., getItemCount, (, )]
[this, ., dataset]
[this]
[key]
[this, ., dataset, ., getKey, (, section, )]
[this, ., dataset]
[this]
[section]
[key, ==, null]
[key]
[null]
[key]
[new, Integer, (, section, )]
[section]
[key]
[selected]
[Color, ., white]
[Color]
[this, ., sectionPaintMap, ., getPaint, (, key, )]
[this, ., sectionPaintMap]
[this]
[key]
[this, ., sectionPaintMap, ., put, (, key, ,, paint, )]
[this, ., sectionPaintMap]
[this]
[key]
[paint]
[fireChangeEvent, (, )]
[this, ., sectionPaintMap, ., clear, (, )]
[this, ., sectionPaintMap]
[this]
[notify]
[fireChangeEvent, (, )]
[this, ., baseSectionPaint]
[this]
[paint, ==, null]
[paint]
[null]
[new, IllegalArgumentException, (, "Null 'paint' argument.", )]
["Null 'paint' argument."]
[this, ., baseSectionPaint]
[this]
[paint]
[fireChangeEvent, (, )]
[this, ., autoPopulateSectionPaint]
[this]
[this, ., autoPopulateSectionPaint]
[this]
[auto]
[fireChangeEvent, (, )]
[this, ., sectionOutlinesVisible]
[this]
[this, ., sectionOutlinesVisible]
[this]
[visible]
[fireChangeEvent, (, )]
[null]
[selected]
[result]
[this, ., selectedItemAttributes, ., lookupSectionOutlinePaint, (, key, )]
[this, ., selectedItemAttributes]
[this]
[key]
[result, ==, null]
[result]
[null]
[result]
[lookupSectionOutlinePaint, (, key, ,, selected, ,, getAutoPopulateSectionOutlinePaint, (, ), )]
[key]
[selected]
[getAutoPopulateSectionOutlinePaint, (, )]
[result]
[null]
[selected]
[Color, ., WHITE]
[Color]
[result]
[this, ., sectionOutlinePaintMap, ., getPaint, (, key, )]
[this, ., sectionOutlinePaintMap]
[this]
[key]
[result, !=, null]
[result]
[null]
[result]
[autoPopulate]
[getDrawingSupplier, (, )]
[ds, !=, null]
[ds]
[null]
[result]
[ds, ., getNextOutlinePaint, (, )]
[ds]
[this, ., sectionOutlinePaintMap, ., put, (, key, ,, result, )]
[this, ., sectionOutlinePaintMap]
[this]
[key]
[result]
[result]
[this, ., baseSectionOutlinePaint]
[this]
[result]
[this, ., baseSectionOutlinePaint]
[this]
[result]
[this, ., sectionOutlinePaintMap, ., getPaint, (, key, )]
[this, ., sectionOutlinePaintMap]
[this]
[key]
[this, ., sectionOutlinePaintMap, ., put, (, key, ,, paint, )]
[this, ., sectionOutlinePaintMap]
[this]
[key]
[paint]
[fireChangeEvent, (, )]
[this, ., sectionOutlinePaintMap, ., clear, (, )]
[this, ., sectionOutlinePaintMap]
[this]
[notify]
[fireChangeEvent, (, )]
[this, ., baseSectionOutlinePaint]
[this]
[paint, ==, null]
[paint]
[null]
[new, IllegalArgumentException, (, "Null 'paint' argument.", )]
["Null 'paint' argument."]
[this, ., baseSectionOutlinePaint]
[this]
[paint]
[fireChangeEvent, (, )]
[this, ., autoPopulateSectionOutlinePaint]
[this]
[this, ., autoPopulateSectionOutlinePaint]
[this]
[auto]
[fireChangeEvent, (, )]
[null]
[selected]
[s]
[this, ., selectedItemAttributes, ., lookupSectionOutlineStroke, (, key, )]
[this, ., selectedItemAttributes]
[this]
[key]
[s, ==, null]
[s]
[null]
[s]
[lookupSectionOutlineStroke, (, key, ,, selected, ,, getAutoPopulateSectionOutlineStroke, (, ), )]
[key]
[selected]
[getAutoPopulateSectionOutlineStroke, (, )]
[s]
[null]
[result]
[this, ., sectionOutlineStrokeMap, ., getStroke, (, key, )]
[this, ., sectionOutlineStrokeMap]
[this]
[key]
[result, !=, null]
[result]
[null]
[result]
[autoPopulate]
[getDrawingSupplier, (, )]
[ds, !=, null]
[ds]
[null]
[result]
[ds, ., getNextOutlineStroke, (, )]
[ds]
[this, ., sectionOutlineStrokeMap, ., put, (, key, ,, result, )]
[this, ., sectionOutlineStrokeMap]
[this]
[key]
[result]
[result]
[this, ., baseSectionOutlineStroke]
[this]
[result]
[this, ., baseSectionOutlineStroke]
[this]
[result]
[this, ., sectionOutlineStrokeMap, ., getStroke, (, key, )]
[this, ., sectionOutlineStrokeMap]
[this]
[key]
[this, ., sectionOutlineStrokeMap, ., put, (, key, ,, stroke, )]
[this, ., sectionOutlineStrokeMap]
[this]
[key]
[stroke]
[fireChangeEvent, (, )]
[this, ., sectionOutlineStrokeMap, ., clear, (, )]
[this, ., sectionOutlineStrokeMap]
[this]
[notify]
[fireChangeEvent, (, )]
[this, ., baseSectionOutlineStroke]
[this]
[stroke, ==, null]
[stroke]
[null]
[new, IllegalArgumentException, (, "Null 'stroke' argument.", )]
["Null 'stroke' argument."]
[this, ., baseSectionOutlineStroke]
[this]
[stroke]
[fireChangeEvent, (, )]
[this, ., autoPopulateSectionOutlineStroke]
[this]
[this, ., autoPopulateSectionOutlineStroke]
[this]
[auto]
[fireChangeEvent, (, )]
[this, ., shadowPaint]
[this]
[this, ., shadowPaint]
[this]
[paint]
[fireChangeEvent, (, )]
[this, ., shadowXOffset]
[this]
[this, ., shadowXOffset]
[this]
[offset]
[fireChangeEvent, (, )]
[this, ., shadowYOffset]
[this]
[this, ., shadowYOffset]
[this]
[offset]
[fireChangeEvent, (, )]
[0.0]
[this, ., explodePercentages, !=, null]
[this, ., explodePercentages]
[this]
[null]
[(, Number, ), this, ., explodePercentages, ., get, (, key, )]
[this, ., explodePercentages, ., get, (, key, )]
[this, ., explodePercentages]
[this]
[key]
[percent, !=, null]
[percent]
[null]
[result]
[percent, ., doubleValue, (, )]
[percent]
[result]
[key, ==, null]
[key]
[null]
[new, IllegalArgumentException, (, "Null 'key' argument.", )]
["Null 'key' argument."]
[this, ., explodePercentages, ==, null]
[this, ., explodePercentages]
[this]
[null]
[this, ., explodePercentages]
[this]
[new, TreeMap, (, )]
[this, ., explodePercentages, ., put, (, key, ,, new, Double, (, percent, ), )]
[this, ., explodePercentages]
[this]
[key]
[new, Double, (, percent, )]
[percent]
[fireChangeEvent, (, )]
[this, ., dataset, ==, null]
[this, ., dataset]
[this]
[null]
[0.0]
[0.0]
[this, ., dataset, ., getKeys, (, ), ., iterator, (, )]
[this, ., dataset, ., getKeys, (, )]
[this, ., dataset]
[this]
[iterator, ., hasNext, (, )]
[iterator]
[(, Comparable, ), iterator, ., next, (, )]
[iterator, ., next, (, )]
[iterator]
[(, Number, ), this, ., explodePercentages, ., get, (, key, )]
[this, ., explodePercentages, ., get, (, key, )]
[this, ., explodePercentages]
[this]
[key]
[explode, !=, null]
[explode]
[null]
[result]
[Math, ., max, (, result, ,, explode, ., doubleValue, (, ), )]
[Math]
[result]
[explode, ., doubleValue, (, )]
[explode]
[result]
[this, ., labelGenerator]
[this]
[this, ., labelGenerator]
[this]
[generator]
[fireChangeEvent, (, )]
[this, ., labelGap]
[this]
[this, ., labelGap]
[this]
[gap]
[fireChangeEvent, (, )]
[this, ., maximumLabelWidth]
[this]
[this, ., maximumLabelWidth]
[this]
[width]
[fireChangeEvent, (, )]
[this, ., labelLinksVisible]
[this]
[this, ., labelLinksVisible]
[this]
[visible]
[fireChangeEvent, (, )]
[this, ., labelLinkStyle]
[this]
[style, ==, null]
[style]
[null]
[new, IllegalArgumentException, (, "Null 'style' argument.", )]
["Null 'style' argument."]
[this, ., labelLinkStyle]
[this]
[style]
[fireChangeEvent, (, )]
[this, ., labelLinkMargin]
[this]
[this, ., labelLinkMargin]
[this]
[margin]
[fireChangeEvent, (, )]
[this, ., labelLinkPaint]
[this]
[paint, ==, null]
[paint]
[null]
[new, IllegalArgumentException, (, "Null 'paint' argument.", )]
["Null 'paint' argument."]
[this, ., labelLinkPaint]
[this]
[paint]
[fireChangeEvent, (, )]
[this, ., labelLinkStroke]
[this]
[stroke, ==, null]
[stroke]
[null]
[new, IllegalArgumentException, (, "Null 'stroke' argument.", )]
["Null 'stroke' argument."]
[this, ., labelLinkStroke]
[this]
[stroke]
[fireChangeEvent, (, )]
[0.1]
[this, ., labelFont]
[this]
[font, ==, null]
[font]
[null]
[new, IllegalArgumentException, (, "Null 'font' argument.", )]
["Null 'font' argument."]
[this, ., labelFont]
[this]
[font]
[fireChangeEvent, (, )]
[this, ., labelPaint]
[this]
[paint, ==, null]
[paint]
[null]
[new, IllegalArgumentException, (, "Null 'paint' argument.", )]
["Null 'paint' argument."]
[this, ., labelPaint]
[this]
[paint]
[fireChangeEvent, (, )]
[this, ., labelBackgroundPaint]
[this]
[this, ., labelBackgroundPaint]
[this]
[paint]
[fireChangeEvent, (, )]
[this, ., labelOutlinePaint]
[this]
[this, ., labelOutlinePaint]
[this]
[paint]
[fireChangeEvent, (, )]
[this, ., labelOutlineStroke]
[this]
[this, ., labelOutlineStroke]
[this]
[stroke]
[fireChangeEvent, (, )]
[this, ., labelShadowPaint]
[this]
[this, ., labelShadowPaint]
[this]
[paint]
[fireChangeEvent, (, )]
[this, ., labelPadding]
[this]
[padding, ==, null]
[padding]
[null]
[new, IllegalArgumentException, (, "Null 'padding' argument.", )]
["Null 'padding' argument."]
[this, ., labelPadding]
[this]
[padding]
[fireChangeEvent, (, )]
[this, ., simpleLabels]
[this]
[this, ., simpleLabels]
[this]
[simple]
[fireChangeEvent, (, )]
[this, ., simpleLabelOffset]
[this]
[offset, ==, null]
[offset]
[null]
[new, IllegalArgumentException, (, "Null 'offset' argument.", )]
["Null 'offset' argument."]
[this, ., simpleLabelOffset]
[this]
[offset]
[fireChangeEvent, (, )]
[this, ., labelDistributor]
[this]
[distributor, ==, null]
[distributor]
[null]
[new, IllegalArgumentException, (, "Null 'distributor' argument.", )]
["Null 'distributor' argument."]
[this, ., labelDistributor]
[this]
[distributor]
[fireChangeEvent, (, )]
[this, ., toolTipGenerator]
[this]
[this, ., toolTipGenerator]
[this]
[generator]
[fireChangeEvent, (, )]
[this, ., urlGenerator]
[this]
[this, ., urlGenerator]
[this]
[generator]
[fireChangeEvent, (, )]
[this, ., minimumArcAngleToDraw]
[this]
[this, ., minimumArcAngleToDraw]
[this]
[angle]
[this, ., legendItemShape]
[this]
[shape, ==, null]
[shape]
[null]
[new, IllegalArgumentException, (, "Null 'shape' argument.", )]
["Null 'shape' argument."]
[this, ., legendItemShape]
[this]
[shape]
[fireChangeEvent, (, )]
[this, ., legendLabelGenerator]
[this]
[generator, ==, null]
[generator]
[null]
[new, IllegalArgumentException, (, "Null 'generator' argument.", )]
["Null 'generator' argument."]
[this, ., legendLabelGenerator]
[this]
[generator]
[fireChangeEvent, (, )]
[this, ., legendLabelToolTipGenerator]
[this]
[this, ., legendLabelToolTipGenerator]
[this]
[generator]
[fireChangeEvent, (, )]
[this, ., legendLabelURLGenerator]
[this]
[this, ., legendLabelURLGenerator]
[this]
[generator]
[fireChangeEvent, (, )]
[this, ., shadowGenerator]
[this]
[this, ., shadowGenerator]
[this]
[generator]
[fireChangeEvent, (, )]
[setStartAngle, (, this, ., startAngle, +, rotateClicks, *, 4.0, )]
[this, ., startAngle, +, rotateClicks, *, 4.0]
[this, ., startAngle]
[this]
[rotateClicks, *, 4.0]
[rotateClicks]
[4.0]
[new, PiePlotState, (, info, )]
[info]
[state, ., setPassesRequired, (, 2, )]
[state]
[2]
[this, ., dataset, !=, null]
[this, ., dataset]
[this]
[null]
[state, ., setTotal, (, DatasetUtilities, ., calculatePieDatasetTotal, (, plot, ., getDataset, (, ), ), )]
[state]
[DatasetUtilities, ., calculatePieDatasetTotal, (, plot, ., getDataset, (, ), )]
[DatasetUtilities]
[plot, ., getDataset, (, )]
[plot]
[state, ., setLatestAngle, (, plot, ., getStartAngle, (, ), )]
[state]
[plot, ., getStartAngle, (, )]
[plot]
[state]
[getInsets, (, )]
[insets, ., trim, (, area, )]
[insets]
[area]
[info, !=, null]
[info]
[null]
[info, ., setPlotArea, (, area, )]
[info]
[area]
[info, ., setDataArea, (, area, )]
[info]
[area]
[drawBackground, (, g2, ,, area, )]
[g2]
[area]
[drawOutline, (, g2, ,, area, )]
[g2]
[area]
[g2, ., getClip, (, )]
[g2]
[g2, ., clip, (, area, )]
[g2]
[area]
[g2, ., getComposite, (, )]
[g2]
[g2, ., setComposite, (, AlphaComposite, ., getInstance, (, AlphaComposite, ., SRC_OVER, ,, getForegroundAlpha, (, ), ), )]
[g2]
[AlphaComposite, ., getInstance, (, AlphaComposite, ., SRC_OVER, ,, getForegroundAlpha, (, ), )]
[AlphaComposite]
[AlphaComposite, ., SRC_OVER]
[AlphaComposite]
[getForegroundAlpha, (, )]
[!, DatasetUtilities, ., isEmptyOrNull, (, this, ., dataset, )]
[DatasetUtilities, ., isEmptyOrNull, (, this, ., dataset, )]
[DatasetUtilities]
[this, ., dataset]
[this]
[g2]
[area]
[null]
[this, ., shadowGenerator, !=, null]
[this, ., shadowGenerator]
[this]
[null]
[dataImage]
[new, BufferedImage, (, (, int, ), area, ., getWidth, (, ), ,, (, int, ), area, ., getHeight, (, ), ,, BufferedImage, ., TYPE_INT_ARGB, )]
[(, int, ), area, ., getWidth, (, )]
[area, ., getWidth, (, )]
[area]
[(, int, ), area, ., getHeight, (, )]
[area, ., getHeight, (, )]
[area]
[BufferedImage, ., TYPE_INT_ARGB]
[BufferedImage]
[g2]
[dataImage, ., createGraphics, (, )]
[dataImage]
[g2, ., setRenderingHints, (, savedG2, ., getRenderingHints, (, ), )]
[g2]
[savedG2, ., getRenderingHints, (, )]
[savedG2]
[area]
[new, Rectangle, (, 0, ,, 0, ,, dataImage, ., getWidth, (, ), ,, dataImage, ., getHeight, (, ), )]
[0]
[0]
[dataImage, ., getWidth, (, )]
[dataImage]
[dataImage, ., getHeight, (, )]
[dataImage]
[drawPie, (, g2, ,, area, ,, info, )]
[g2]
[area]
[info]
[this, ., shadowGenerator, !=, null]
[this, ., shadowGenerator]
[this]
[null]
[this, ., shadowGenerator, ., createDropShadow, (, dataImage, )]
[this, ., shadowGenerator]
[this]
[dataImage]
[g2]
[savedG2]
[area]
[savedDataArea]
[g2, ., drawImage, (, shadowImage, ,, (, int, ), savedDataArea, ., getX, (, ), +, this, ., shadowGenerator, ., calculateOffsetX, (, ), ,, (, int, ), savedDataArea, ., getY, (, ), +, this, ., shadowGenerator, ., calculateOffsetY, (, ), ,, null, )]
[g2]
[shadowImage]
[(, int, ), savedDataArea, ., getX, (, ), +, this, ., shadowGenerator, ., calculateOffsetX, (, )]
[(, int, ), savedDataArea, ., getX, (, )]
[savedDataArea, ., getX, (, )]
[savedDataArea]
[this, ., shadowGenerator, ., calculateOffsetX, (, )]
[this, ., shadowGenerator]
[this]
[(, int, ), savedDataArea, ., getY, (, ), +, this, ., shadowGenerator, ., calculateOffsetY, (, )]
[(, int, ), savedDataArea, ., getY, (, )]
[savedDataArea, ., getY, (, )]
[savedDataArea]
[this, ., shadowGenerator, ., calculateOffsetY, (, )]
[this, ., shadowGenerator]
[this]
[null]
[g2, ., drawImage, (, dataImage, ,, (, int, ), savedDataArea, ., getX, (, ), ,, (, int, ), savedDataArea, ., getY, (, ), ,, null, )]
[g2]
[dataImage]
[(, int, ), savedDataArea, ., getX, (, )]
[savedDataArea, ., getX, (, )]
[savedDataArea]
[(, int, ), savedDataArea, ., getY, (, )]
[savedDataArea, ., getY, (, )]
[savedDataArea]
[null]
[drawNoDataMessage, (, g2, ,, area, )]
[g2]
[area]
[g2, ., setClip, (, savedClip, )]
[g2]
[savedClip]
[g2, ., setComposite, (, originalComposite, )]
[g2]
[originalComposite]
[drawOutline, (, g2, ,, area, )]
[g2]
[area]
[new, Rectangle2D, [, 2, ]]
[2]
[0.0]
[this, ., labelGenerator, !=, null, &&, !, this, ., simpleLabels]
[this, ., labelGenerator, !=, null]
[this, ., labelGenerator]
[this]
[null]
[!, this, ., simpleLabels]
[this, ., simpleLabels]
[this]
[labelReserve]
[this, ., labelGap, +, this, ., maximumLabelWidth]
[this, ., labelGap]
[this]
[this, ., maximumLabelWidth]
[this]
[plotArea, ., getWidth, (, ), *, (, this, ., interiorGap, +, labelReserve, ), *, 2.0]
[plotArea, ., getWidth, (, ), *, (, this, ., interiorGap, +, labelReserve, )]
[plotArea, ., getWidth, (, )]
[plotArea]
[(, this, ., interiorGap, +, labelReserve, )]
[this, ., interiorGap, +, labelReserve]
[this, ., interiorGap]
[this]
[labelReserve]
[2.0]
[plotArea, ., getHeight, (, ), *, this, ., interiorGap, *, 2.0]
[plotArea, ., getHeight, (, ), *, this, ., interiorGap]
[plotArea, ., getHeight, (, )]
[plotArea]
[this, ., interiorGap]
[this]
[2.0]
[DEBUG_DRAW_INTERIOR]
[plotArea, ., getWidth, (, ), *, this, ., interiorGap]
[plotArea, ., getWidth, (, )]
[plotArea]
[this, ., interiorGap]
[this]
[plotArea, ., getHeight, (, ), *, this, ., interiorGap]
[plotArea, ., getHeight, (, )]
[plotArea]
[this, ., interiorGap]
[this]
[plotArea, ., getX, (, ), +, hGap]
[plotArea, ., getX, (, )]
[plotArea]
[hGap]
[plotArea, ., getMaxX, (, ), -, hGap]
[plotArea, ., getMaxX, (, )]
[plotArea]
[hGap]
[plotArea, ., getY, (, ), +, vGap]
[plotArea, ., getY, (, )]
[plotArea]
[vGap]
[plotArea, ., getMaxY, (, ), -, vGap]
[plotArea, ., getMaxY, (, )]
[plotArea]
[vGap]
[g2, ., setPaint, (, Color, ., gray, )]
[g2]
[Color, ., gray]
[Color]
[g2, ., draw, (, new, Rectangle2D, ., Double, (, igx1, ,, igy1, ,, igx2, -, igx1, ,, igy2, -, igy1, ), )]
[g2]
[new, Rectangle2D, ., Double, (, igx1, ,, igy1, ,, igx2, -, igx1, ,, igy2, -, igy1, )]
[igx1]
[igy1]
[igx2, -, igx1]
[igx2]
[igx1]
[igy2, -, igy1]
[igy2]
[igy1]
[plotArea, ., getX, (, ), +, gapHorizontal, /, 2]
[plotArea, ., getX, (, )]
[plotArea]
[gapHorizontal, /, 2]
[gapHorizontal]
[2]
[plotArea, ., getY, (, ), +, gapVertical, /, 2]
[plotArea, ., getY, (, )]
[plotArea]
[gapVertical, /, 2]
[gapVertical]
[2]
[plotArea, ., getWidth, (, ), -, gapHorizontal]
[plotArea, ., getWidth, (, )]
[plotArea]
[gapHorizontal]
[plotArea, ., getHeight, (, ), -, gapVertical]
[plotArea, ., getHeight, (, )]
[plotArea]
[gapVertical]
[this, ., circular]
[this]
[Math, ., min, (, linkW, ,, linkH, ), /, 2]
[Math, ., min, (, linkW, ,, linkH, )]
[Math]
[linkW]
[linkH]
[2]
[linkX]
[(, linkX, +, linkX, +, linkW, ), /, 2, -, min]
[(, linkX, +, linkX, +, linkW, ), /, 2]
[(, linkX, +, linkX, +, linkW, )]
[linkX, +, linkX, +, linkW]
[linkX, +, linkX]
[linkX]
[linkX]
[linkW]
[2]
[min]
[linkY]
[(, linkY, +, linkY, +, linkH, ), /, 2, -, min]
[(, linkY, +, linkY, +, linkH, ), /, 2]
[(, linkY, +, linkY, +, linkH, )]
[linkY, +, linkY, +, linkH]
[linkY, +, linkY]
[linkY]
[linkY]
[linkH]
[2]
[min]
[linkW]
[2, *, min]
[2]
[min]
[linkH]
[2, *, min]
[2]
[min]
[new, Rectangle2D, ., Double, (, linkX, ,, linkY, ,, linkW, ,, linkH, )]
[linkX]
[linkY]
[linkW]
[linkH]
[result, [, 0, ]]
[result]
[0]
[linkArea]
[DEBUG_DRAW_LINK_AREA]
[g2, ., setPaint, (, Color, ., blue, )]
[g2]
[Color, ., blue]
[Color]
[g2, ., draw, (, linkArea, )]
[g2]
[linkArea]
[g2, ., setPaint, (, Color, ., yellow, )]
[g2]
[Color, ., yellow]
[Color]
[g2, ., draw, (, new, Ellipse2D, ., Double, (, linkArea, ., getX, (, ), ,, linkArea, ., getY, (, ), ,, linkArea, ., getWidth, (, ), ,, linkArea, ., getHeight, (, ), ), )]
[g2]
[new, Ellipse2D, ., Double, (, linkArea, ., getX, (, ), ,, linkArea, ., getY, (, ), ,, linkArea, ., getWidth, (, ), ,, linkArea, ., getHeight, (, ), )]
[linkArea, ., getX, (, )]
[linkArea]
[linkArea, ., getY, (, )]
[linkArea]
[linkArea, ., getWidth, (, )]
[linkArea]
[linkArea, ., getHeight, (, )]
[linkArea]
[0.0]
[!, this, ., simpleLabels]
[this, ., simpleLabels]
[this]
[lm]
[this, ., labelLinkMargin]
[this]
[linkArea, ., getWidth, (, ), *, lm, *, 2.0]
[linkArea, ., getWidth, (, ), *, lm]
[linkArea, ., getWidth, (, )]
[linkArea]
[lm]
[2.0]
[linkArea, ., getHeight, (, ), *, lm, *, 2.0]
[linkArea, ., getHeight, (, ), *, lm]
[linkArea, ., getHeight, (, )]
[linkArea]
[lm]
[2.0]
[new, Rectangle2D, ., Double, (, linkX, +, hh, /, 2.0, ,, linkY, +, vv, /, 2.0, ,, linkW, -, hh, ,, linkH, -, vv, )]
[linkX, +, hh, /, 2.0]
[linkX]
[hh, /, 2.0]
[hh]
[2.0]
[linkY, +, vv, /, 2.0]
[linkY]
[vv, /, 2.0]
[vv]
[2.0]
[linkW, -, hh]
[linkW]
[hh]
[linkH, -, vv]
[linkH]
[vv]
[result, [, 1, ]]
[result]
[1]
[explodeArea]
[result]
[initialise, (, g2, ,, plotArea, ,, this, ,, null, ,, info, )]
[g2]
[plotArea]
[this]
[null]
[info]
[calculateLinkAndExplodeAreas, (, g2, ,, plotArea, )]
[g2]
[plotArea]
[areas, [, 0, ]]
[areas]
[0]
[areas, [, 1, ]]
[areas]
[1]
[state, ., setLinkArea, (, linkArea, )]
[state]
[linkArea]
[state, ., setExplodedPieArea, (, explodeArea, )]
[state]
[explodeArea]
[getMaximumExplodePercent, (, )]
[maximumExplodePercent, /, (, 1.0, +, maximumExplodePercent, )]
[maximumExplodePercent]
[(, 1.0, +, maximumExplodePercent, )]
[1.0, +, maximumExplodePercent]
[1.0]
[maximumExplodePercent]
[explodeArea, ., getWidth, (, ), *, percent]
[explodeArea, ., getWidth, (, )]
[explodeArea]
[percent]
[explodeArea, ., getHeight, (, ), *, percent]
[explodeArea, ., getHeight, (, )]
[explodeArea]
[percent]
[new, Rectangle2D, ., Double, (, explodeArea, ., getX, (, ), +, h1, /, 2.0, ,, explodeArea, ., getY, (, ), +, v1, /, 2.0, ,, explodeArea, ., getWidth, (, ), -, h1, ,, explodeArea, ., getHeight, (, ), -, v1, )]
[explodeArea, ., getX, (, ), +, h1, /, 2.0]
[explodeArea, ., getX, (, )]
[explodeArea]
[h1, /, 2.0]
[h1]
[2.0]
[explodeArea, ., getY, (, ), +, v1, /, 2.0]
[explodeArea, ., getY, (, )]
[explodeArea]
[v1, /, 2.0]
[v1]
[2.0]
[explodeArea, ., getWidth, (, ), -, h1]
[explodeArea, ., getWidth, (, )]
[explodeArea]
[h1]
[explodeArea, ., getHeight, (, ), -, v1]
[explodeArea, ., getHeight, (, )]
[explodeArea]
[v1]
[DEBUG_DRAW_PIE_AREA]
[g2, ., setPaint, (, Color, ., green, )]
[g2]
[Color, ., green]
[Color]
[g2, ., draw, (, pieArea, )]
[g2]
[pieArea]
[state, ., setPieArea, (, pieArea, )]
[state]
[pieArea]
[state, ., setPieCenterX, (, pieArea, ., getCenterX, (, ), )]
[state]
[pieArea, ., getCenterX, (, )]
[pieArea]
[state, ., setPieCenterY, (, pieArea, ., getCenterY, (, ), )]
[state]
[pieArea, ., getCenterY, (, )]
[pieArea]
[state, ., setPieWRadius, (, pieArea, ., getWidth, (, ), /, 2.0, )]
[state]
[pieArea, ., getWidth, (, ), /, 2.0]
[pieArea, ., getWidth, (, )]
[pieArea]
[2.0]
[state, ., setPieHRadius, (, pieArea, ., getHeight, (, ), /, 2.0, )]
[state]
[pieArea, ., getHeight, (, ), /, 2.0]
[pieArea, ., getHeight, (, )]
[pieArea]
[2.0]
[(, this, ., dataset, !=, null, ), &&, (, this, ., dataset, ., getKeys, (, ), ., size, (, ), >, 0, )]
[(, this, ., dataset, !=, null, )]
[this, ., dataset, !=, null]
[this, ., dataset]
[this]
[null]
[(, this, ., dataset, ., getKeys, (, ), ., size, (, ), >, 0, )]
[this, ., dataset, ., getKeys, (, ), ., size, (, ), >, 0]
[this, ., dataset, ., getKeys, (, ), ., size, (, )]
[this, ., dataset, ., getKeys, (, )]
[this, ., dataset]
[this]
[0]
[findSelectionStateForDataset, (, this, ., dataset, ,, state, )]
[this, ., dataset]
[this]
[state]
[this, ., dataset, ., getKeys, (, )]
[this, ., dataset]
[this]
[DatasetUtilities, ., calculatePieDatasetTotal, (, this, ., dataset, )]
[DatasetUtilities]
[this, ., dataset]
[this]
[state, ., getPassesRequired, (, )]
[state]
[0]
[pass, <, passesRequired]
[pass]
[passesRequired]
[pass, ++]
[pass]
[0.0]
[0]
[section, <, keys, ., size, (, )]
[section]
[keys, ., size, (, )]
[keys]
[section, ++]
[section]
[this, ., dataset, ., getValue, (, section, )]
[this, ., dataset]
[this]
[section]
[n, !=, null]
[n]
[null]
[n, ., doubleValue, (, )]
[n]
[value, >, 0.0]
[value]
[0.0]
[runningTotal]
[value]
[false]
[ss, !=, null]
[ss]
[null]
[selected]
[ss, ., isSelected, (, this, ., dataset, ., getKey, (, section, ), )]
[ss]
[this, ., dataset, ., getKey, (, section, )]
[this, ., dataset]
[this]
[section]
[drawItem, (, g2, ,, section, ,, selected, ,, explodeArea, ,, state, ,, pass, )]
[g2]
[section]
[selected]
[explodeArea]
[state]
[pass]
[this, ., simpleLabels]
[this]
[drawSimpleLabels, (, g2, ,, keys, ,, totalValue, ,, plotArea, ,, linkArea, ,, state, )]
[g2]
[keys]
[totalValue]
[plotArea]
[linkArea]
[state]
[drawLabels, (, g2, ,, keys, ,, totalValue, ,, plotArea, ,, linkArea, ,, state, )]
[g2]
[keys]
[totalValue]
[plotArea]
[linkArea]
[state]
[drawNoDataMessage, (, g2, ,, plotArea, )]
[g2]
[plotArea]
[this, ., dataset, ., getValue, (, section, )]
[this, ., dataset]
[this]
[section]
[n, ==, null]
[n]
[null]
[n, ., doubleValue, (, )]
[n]
[0.0]
[0.0]
[this, ., direction, ==, Rotation, ., CLOCKWISE]
[this, ., direction]
[this]
[Rotation, ., CLOCKWISE]
[Rotation]
[angle1]
[state, ., getLatestAngle, (, )]
[state]
[angle2]
[angle1, -, value, /, state, ., getTotal, (, ), *, 360.0]
[angle1]
[value, /, state, ., getTotal, (, ), *, 360.0]
[value, /, state, ., getTotal, (, )]
[value]
[state, ., getTotal, (, )]
[state]
[360.0]
[this, ., direction, ==, Rotation, ., ANTICLOCKWISE]
[this, ., direction]
[this]
[Rotation, ., ANTICLOCKWISE]
[Rotation]
[angle1]
[state, ., getLatestAngle, (, )]
[state]
[angle2]
[angle1, +, value, /, state, ., getTotal, (, ), *, 360.0]
[angle1]
[value, /, state, ., getTotal, (, ), *, 360.0]
[value, /, state, ., getTotal, (, )]
[value]
[state, ., getTotal, (, )]
[state]
[360.0]
[new, IllegalStateException, (, "Rotation type not recognised.", )]
["Rotation type not recognised."]
[(, angle2, -, angle1, )]
[angle2, -, angle1]
[angle2]
[angle1]
[Math, ., abs, (, angle, ), >, getMinimumArcAngleToDraw, (, )]
[Math, ., abs, (, angle, )]
[Math]
[angle]
[getMinimumArcAngleToDraw, (, )]
[0.0]
[getMaximumExplodePercent, (, )]
[mep, >, 0.0]
[mep]
[0.0]
[ep]
[getExplodePercent, (, getSectionKey, (, section, ), ), /, mep]
[getExplodePercent, (, getSectionKey, (, section, ), )]
[getSectionKey, (, section, )]
[section]
[mep]
[getArcBounds, (, state, ., getPieArea, (, ), ,, state, ., getExplodedPieArea, (, ), ,, angle1, ,, angle, ,, ep, )]
[state, ., getPieArea, (, )]
[state]
[state, ., getExplodedPieArea, (, )]
[state]
[angle1]
[angle]
[ep]
[new, Arc2D, ., Double, (, arcBounds, ,, angle1, ,, angle, ,, Arc2D, ., PIE, )]
[arcBounds]
[angle1]
[angle]
[Arc2D, ., PIE]
[Arc2D]
[currentPass, ==, 0]
[currentPass]
[0]
[this, ., shadowPaint, !=, null]
[this, ., shadowPaint]
[this]
[null]
[ShapeUtilities, ., createTranslatedShape, (, arc, ,, (, float, ), this, ., shadowXOffset, ,, (, float, ), this, ., shadowYOffset, )]
[ShapeUtilities]
[arc]
[(, float, ), this, ., shadowXOffset]
[this, ., shadowXOffset]
[this]
[(, float, ), this, ., shadowYOffset]
[this, ., shadowYOffset]
[this]
[g2, ., setPaint, (, this, ., shadowPaint, )]
[g2]
[this, ., shadowPaint]
[this]
[g2, ., fill, (, shadowArc, )]
[g2]
[shadowArc]
[currentPass, ==, 1]
[currentPass]
[1]
[getSectionKey, (, section, )]
[section]
[lookupSectionPaint, (, key, ,, selected, )]
[key]
[selected]
[g2, ., getClip, (, )]
[g2]
[g2, ., clip, (, arc, )]
[g2]
[arc]
[g2, ., setPaint, (, paint, )]
[g2]
[paint]
[g2, ., fill, (, arc, )]
[g2]
[arc]
[lookupSectionOutlinePaint, (, key, ,, selected, )]
[key]
[selected]
[lookupSectionOutlineStroke, (, key, ,, selected, )]
[key]
[selected]
[this, ., sectionOutlinesVisible]
[this]
[g2, ., setPaint, (, outlinePaint, )]
[g2]
[outlinePaint]
[g2, ., setStroke, (, outlineStroke, )]
[g2]
[outlineStroke]
[g2, ., draw, (, arc, )]
[g2]
[arc]
[g2, ., setClip, (, savedClip, )]
[g2]
[savedClip]
[state, ., getInfo, (, ), !=, null]
[state, ., getInfo, (, )]
[state]
[null]
[state, ., getEntityCollection, (, )]
[state]
[entities, !=, null]
[entities]
[null]
[null]
[this, ., toolTipGenerator, !=, null]
[this, ., toolTipGenerator]
[this]
[null]
[tip]
[this, ., toolTipGenerator, ., generateToolTip, (, this, ., dataset, ,, key, )]
[this, ., toolTipGenerator]
[this]
[this, ., dataset]
[this]
[key]
[null]
[this, ., urlGenerator, !=, null]
[this, ., urlGenerator]
[this]
[null]
[url]
[this, ., urlGenerator, ., generateURL, (, this, ., dataset, ,, key, ,, this, ., pieIndex, )]
[this, ., urlGenerator]
[this]
[this, ., dataset]
[this]
[key]
[this, ., pieIndex]
[this]
[new, PieSectionEntity, (, arc, ,, this, ., dataset, ,, this, ., pieIndex, ,, section, ,, key, ,, tip, ,, url, )]
[arc]
[this, ., dataset]
[this]
[this, ., pieIndex]
[this]
[section]
[key]
[tip]
[url]
[entities, ., add, (, entity, )]
[entities]
[entity]
[state, ., setLatestAngle, (, angle2, )]
[state]
[angle2]
[g2, ., getComposite, (, )]
[g2]
[g2, ., setComposite, (, AlphaComposite, ., getInstance, (, AlphaComposite, ., SRC_OVER, ,, 1.0f, ), )]
[g2]
[AlphaComposite, ., getInstance, (, AlphaComposite, ., SRC_OVER, ,, 1.0f, )]
[AlphaComposite]
[AlphaComposite, ., SRC_OVER]
[AlphaComposite]
[1.0f]
[this, ., simpleLabelOffset, ., createInsetRectangle, (, pieArea, )]
[this, ., simpleLabelOffset]
[this]
[pieArea]
[0.0]
[keys, ., iterator, (, )]
[keys]
[iterator, ., hasNext, (, )]
[iterator]
[(, Comparable, ), iterator, ., next, (, )]
[iterator, ., next, (, )]
[iterator]
[true]
[0.0]
[getDataset, (, ), ., getValue, (, key, )]
[getDataset, (, )]
[key]
[n, ==, null]
[n]
[null]
[include]
[!, getIgnoreNullValues, (, )]
[getIgnoreNullValues, (, )]
[v]
[n, ., doubleValue, (, )]
[n]
[include]
[getIgnoreZeroValues, (, ), ?, v, >, 0.0, :, v, >=, 0.0]
[getIgnoreZeroValues, (, )]
[v, >, 0.0]
[v]
[0.0]
[v, >=, 0.0]
[v]
[0.0]
[include]
[runningTotal]
[runningTotal, +, v]
[runningTotal]
[v]
[getStartAngle, (, ), +, (, getDirection, (, ), ., getFactor, (, ), *, (, (, runningTotal, -, v, /, 2.0, ), *, 360, ), /, totalValue, )]
[getStartAngle, (, )]
[(, getDirection, (, ), ., getFactor, (, ), *, (, (, runningTotal, -, v, /, 2.0, ), *, 360, ), /, totalValue, )]
[getDirection, (, ), ., getFactor, (, ), *, (, (, runningTotal, -, v, /, 2.0, ), *, 360, ), /, totalValue]
[getDirection, (, ), ., getFactor, (, ), *, (, (, runningTotal, -, v, /, 2.0, ), *, 360, )]
[getDirection, (, ), ., getFactor, (, )]
[getDirection, (, )]
[(, (, runningTotal, -, v, /, 2.0, ), *, 360, )]
[(, runningTotal, -, v, /, 2.0, ), *, 360]
[(, runningTotal, -, v, /, 2.0, )]
[runningTotal, -, v, /, 2.0]
[runningTotal]
[v, /, 2.0]
[v]
[2.0]
[360]
[totalValue]
[new, Arc2D, ., Double, (, labelsArea, ,, getStartAngle, (, ), ,, mid, -, getStartAngle, (, ), ,, Arc2D, ., OPEN, )]
[labelsArea]
[getStartAngle, (, )]
[mid, -, getStartAngle, (, )]
[mid]
[getStartAngle, (, )]
[Arc2D, ., OPEN]
[Arc2D]
[(, int, ), arc, ., getEndPoint, (, ), ., getX, (, )]
[arc, ., getEndPoint, (, ), ., getX, (, )]
[arc, ., getEndPoint, (, )]
[arc]
[(, int, ), arc, ., getEndPoint, (, ), ., getY, (, )]
[arc, ., getEndPoint, (, ), ., getY, (, )]
[arc, ., getEndPoint, (, )]
[arc]
[getLabelGenerator, (, )]
[labelGenerator, ==, null]
[labelGenerator]
[null]
[labelGenerator, ., generateSectionLabel, (, this, ., dataset, ,, key, )]
[labelGenerator]
[this, ., dataset]
[this]
[key]
[label, ==, null]
[label]
[null]
[g2, ., setFont, (, this, ., labelFont, )]
[g2]
[this, ., labelFont]
[this]
[g2, ., getFontMetrics, (, )]
[g2]
[TextUtilities, ., getTextBounds, (, label, ,, g2, ,, fm, )]
[TextUtilities]
[label]
[g2]
[fm]
[this, ., labelPadding, ., createOutsetRectangle, (, bounds, )]
[this, ., labelPadding]
[this]
[bounds]
[ShapeUtilities, ., createTranslatedShape, (, out, ,, x, -, bounds, ., getCenterX, (, ), ,, y, -, bounds, ., getCenterY, (, ), )]
[ShapeUtilities]
[out]
[x, -, bounds, ., getCenterX, (, )]
[x]
[bounds, ., getCenterX, (, )]
[bounds]
[y, -, bounds, ., getCenterY, (, )]
[y]
[bounds, ., getCenterY, (, )]
[bounds]
[this, ., labelShadowPaint, !=, null, &&, this, ., shadowGenerator, ==, null]
[this, ., labelShadowPaint, !=, null]
[this, ., labelShadowPaint]
[this]
[null]
[this, ., shadowGenerator, ==, null]
[this, ., shadowGenerator]
[this]
[null]
[ShapeUtilities, ., createTranslatedShape, (, bg, ,, this, ., shadowXOffset, ,, this, ., shadowYOffset, )]
[ShapeUtilities]
[bg]
[this, ., shadowXOffset]
[this]
[this, ., shadowYOffset]
[this]
[g2, ., setPaint, (, this, ., labelShadowPaint, )]
[g2]
[this, ., labelShadowPaint]
[this]
[g2, ., fill, (, shadow, )]
[g2]
[shadow]
[this, ., labelBackgroundPaint, !=, null]
[this, ., labelBackgroundPaint]
[this]
[null]
[g2, ., setPaint, (, this, ., labelBackgroundPaint, )]
[g2]
[this, ., labelBackgroundPaint]
[this]
[g2, ., fill, (, bg, )]
[g2]
[bg]
[this, ., labelOutlinePaint, !=, null, &&, this, ., labelOutlineStroke, !=, null]
[this, ., labelOutlinePaint, !=, null]
[this, ., labelOutlinePaint]
[this]
[null]
[this, ., labelOutlineStroke, !=, null]
[this, ., labelOutlineStroke]
[this]
[null]
[g2, ., setPaint, (, this, ., labelOutlinePaint, )]
[g2]
[this, ., labelOutlinePaint]
[this]
[g2, ., setStroke, (, this, ., labelOutlineStroke, )]
[g2]
[this, ., labelOutlineStroke]
[this]
[g2, ., draw, (, bg, )]
[g2]
[bg]
[g2, ., setPaint, (, this, ., labelPaint, )]
[g2]
[this, ., labelPaint]
[this]
[g2, ., setFont, (, this, ., labelFont, )]
[g2]
[this, ., labelFont]
[this]
[TextUtilities, ., drawAlignedString, (, getLabelGenerator, (, ), ., generateSectionLabel, (, getDataset, (, ), ,, key, ), ,, g2, ,, x, ,, y, ,, TextAnchor, ., CENTER, )]
[TextUtilities]
[getLabelGenerator, (, ), ., generateSectionLabel, (, getDataset, (, ), ,, key, )]
[getLabelGenerator, (, )]
[getDataset, (, )]
[key]
[g2]
[x]
[y]
[TextAnchor, ., CENTER]
[TextAnchor]
[g2, ., setComposite, (, originalComposite, )]
[g2]
[originalComposite]
[g2, ., getComposite, (, )]
[g2]
[g2, ., setComposite, (, AlphaComposite, ., getInstance, (, AlphaComposite, ., SRC_OVER, ,, 1.0f, ), )]
[g2]
[AlphaComposite, ., getInstance, (, AlphaComposite, ., SRC_OVER, ,, 1.0f, )]
[AlphaComposite]
[AlphaComposite, ., SRC_OVER]
[AlphaComposite]
[1.0f]
[new, DefaultKeyedValues, (, )]
[new, DefaultKeyedValues, (, )]
[0.0]
[keys, ., iterator, (, )]
[keys]
[iterator, ., hasNext, (, )]
[iterator]
[(, Comparable, ), iterator, ., next, (, )]
[iterator, ., next, (, )]
[iterator]
[true]
[0.0]
[this, ., dataset, ., getValue, (, key, )]
[this, ., dataset]
[this]
[key]
[n, ==, null]
[n]
[null]
[include]
[!, this, ., ignoreNullValues]
[this, ., ignoreNullValues]
[this]
[v]
[n, ., doubleValue, (, )]
[n]
[include]
[this, ., ignoreZeroValues, ?, v, >, 0.0, :, v, >=, 0.0]
[this, ., ignoreZeroValues]
[this]
[v, >, 0.0]
[v]
[0.0]
[v, >=, 0.0]
[v]
[0.0]
[include]
[runningTotal]
[runningTotal, +, v]
[runningTotal]
[v]
[this, ., startAngle, +, (, this, ., direction, ., getFactor, (, ), *, (, (, runningTotal, -, v, /, 2.0, ), *, 360, ), /, totalValue, )]
[this, ., startAngle]
[this]
[(, this, ., direction, ., getFactor, (, ), *, (, (, runningTotal, -, v, /, 2.0, ), *, 360, ), /, totalValue, )]
[this, ., direction, ., getFactor, (, ), *, (, (, runningTotal, -, v, /, 2.0, ), *, 360, ), /, totalValue]
[this, ., direction, ., getFactor, (, ), *, (, (, runningTotal, -, v, /, 2.0, ), *, 360, )]
[this, ., direction, ., getFactor, (, )]
[this, ., direction]
[this]
[(, (, runningTotal, -, v, /, 2.0, ), *, 360, )]
[(, runningTotal, -, v, /, 2.0, ), *, 360]
[(, runningTotal, -, v, /, 2.0, )]
[runningTotal, -, v, /, 2.0]
[runningTotal]
[v, /, 2.0]
[v]
[2.0]
[360]
[totalValue]
[Math, ., cos, (, Math, ., toRadians, (, mid, ), ), <, 0.0]
[Math, ., cos, (, Math, ., toRadians, (, mid, ), )]
[Math]
[Math, ., toRadians, (, mid, )]
[Math]
[mid]
[0.0]
[leftKeys, ., addValue, (, key, ,, new, Double, (, mid, ), )]
[leftKeys]
[key]
[new, Double, (, mid, )]
[mid]
[rightKeys, ., addValue, (, key, ,, new, Double, (, mid, ), )]
[rightKeys]
[key]
[new, Double, (, mid, )]
[mid]
[g2, ., setFont, (, getLabelFont, (, ), )]
[g2]
[getLabelFont, (, )]
[plotArea, ., getX, (, ), +, this, ., interiorGap, *, plotArea, ., getWidth, (, )]
[plotArea, ., getX, (, )]
[plotArea]
[this, ., interiorGap, *, plotArea, ., getWidth, (, )]
[this, ., interiorGap]
[this]
[plotArea, ., getWidth, (, )]
[plotArea]
[plotArea, ., getWidth, (, ), *, this, ., labelGap]
[plotArea, ., getWidth, (, )]
[plotArea]
[this, ., labelGap]
[this]
[linkArea, ., getX, (, ), -, gap, -, marginX]
[linkArea, ., getX, (, ), -, gap]
[linkArea, ., getX, (, )]
[linkArea]
[gap]
[marginX]
[(, float, ), this, ., labelPadding, ., trimWidth, (, ww, )]
[this, ., labelPadding, ., trimWidth, (, ww, )]
[this, ., labelPadding]
[this]
[ww]
[this, ., labelGenerator, !=, null]
[this, ., labelGenerator]
[this]
[null]
[drawLeftLabels, (, leftKeys, ,, g2, ,, plotArea, ,, linkArea, ,, labelWidth, ,, state, )]
[leftKeys]
[g2]
[plotArea]
[linkArea]
[labelWidth]
[state]
[drawRightLabels, (, rightKeys, ,, g2, ,, plotArea, ,, linkArea, ,, labelWidth, ,, state, )]
[rightKeys]
[g2]
[plotArea]
[linkArea]
[labelWidth]
[state]
[g2, ., setComposite, (, originalComposite, )]
[g2]
[originalComposite]
[this, ., labelDistributor, ., clear, (, )]
[this, ., labelDistributor]
[this]
[plotArea, ., getWidth, (, ), *, this, ., labelGap]
[plotArea, ., getWidth, (, )]
[plotArea]
[this, ., labelGap]
[this]
[state, ., getLinkArea, (, ), ., getHeight, (, ), /, 2.0]
[state, ., getLinkArea, (, ), ., getHeight, (, )]
[state, ., getLinkArea, (, )]
[state]
[2.0]
[0]
[i, <, leftKeys, ., getItemCount, (, )]
[i]
[leftKeys, ., getItemCount, (, )]
[leftKeys]
[i, ++]
[i]
[this, ., labelGenerator, ., generateSectionLabel, (, this, ., dataset, ,, leftKeys, ., getKey, (, i, ), )]
[this, ., labelGenerator]
[this]
[this, ., dataset]
[this]
[leftKeys, ., getKey, (, i, )]
[leftKeys]
[i]
[label, !=, null]
[label]
[null]
[TextUtilities, ., createTextBlock, (, label, ,, this, ., labelFont, ,, this, ., labelPaint, ,, maxLabelWidth, ,, new, G2TextMeasurer, (, g2, ), )]
[TextUtilities]
[label]
[this, ., labelFont]
[this]
[this, ., labelPaint]
[this]
[maxLabelWidth]
[new, G2TextMeasurer, (, g2, )]
[g2]
[new, TextBox, (, block, )]
[block]
[labelBox, ., setBackgroundPaint, (, this, ., labelBackgroundPaint, )]
[labelBox]
[this, ., labelBackgroundPaint]
[this]
[labelBox, ., setOutlinePaint, (, this, ., labelOutlinePaint, )]
[labelBox]
[this, ., labelOutlinePaint]
[this]
[labelBox, ., setOutlineStroke, (, this, ., labelOutlineStroke, )]
[labelBox]
[this, ., labelOutlineStroke]
[this]
[this, ., shadowGenerator, ==, null]
[this, ., shadowGenerator]
[this]
[null]
[labelBox, ., setShadowPaint, (, this, ., labelShadowPaint, )]
[labelBox]
[this, ., labelShadowPaint]
[this]
[labelBox, ., setShadowPaint, (, null, )]
[labelBox]
[null]
[labelBox, ., setInteriorGap, (, this, ., labelPadding, )]
[labelBox]
[this, ., labelPadding]
[this]
[Math, ., toRadians, (, leftKeys, ., getValue, (, i, ), ., doubleValue, (, ), )]
[Math]
[leftKeys, ., getValue, (, i, ), ., doubleValue, (, )]
[leftKeys, ., getValue, (, i, )]
[leftKeys]
[i]
[state, ., getPieCenterY, (, ), -, Math, ., sin, (, theta, ), *, verticalLinkRadius]
[state, ., getPieCenterY, (, )]
[state]
[Math, ., sin, (, theta, ), *, verticalLinkRadius]
[Math, ., sin, (, theta, )]
[Math]
[theta]
[verticalLinkRadius]
[labelBox, ., getHeight, (, g2, )]
[labelBox]
[g2]
[this, ., labelDistributor, ., addPieLabelRecord, (, new, PieLabelRecord, (, leftKeys, ., getKey, (, i, ), ,, theta, ,, baseY, ,, labelBox, ,, hh, ,, lGap, /, 2.0, +, lGap, /, 2.0, *, -, Math, ., cos, (, theta, ), ,, 1.0, -, getLabelLinkDepth, (, ), +, getExplodePercent, (, leftKeys, ., getKey, (, i, ), ), ), )]
[this, ., labelDistributor]
[this]
[new, PieLabelRecord, (, leftKeys, ., getKey, (, i, ), ,, theta, ,, baseY, ,, labelBox, ,, hh, ,, lGap, /, 2.0, +, lGap, /, 2.0, *, -, Math, ., cos, (, theta, ), ,, 1.0, -, getLabelLinkDepth, (, ), +, getExplodePercent, (, leftKeys, ., getKey, (, i, ), ), )]
[leftKeys, ., getKey, (, i, )]
[leftKeys]
[i]
[theta]
[baseY]
[labelBox]
[hh]
[lGap, /, 2.0, +, lGap, /, 2.0, *, -, Math, ., cos, (, theta, )]
[lGap, /, 2.0]
[lGap]
[2.0]
[lGap, /, 2.0, *, -, Math, ., cos, (, theta, )]
[lGap, /, 2.0]
[lGap]
[2.0]
[-, Math, ., cos, (, theta, )]
[Math, ., cos, (, theta, )]
[Math]
[theta]
[1.0, -, getLabelLinkDepth, (, ), +, getExplodePercent, (, leftKeys, ., getKey, (, i, ), )]
[1.0, -, getLabelLinkDepth, (, )]
[1.0]
[getLabelLinkDepth, (, )]
[getExplodePercent, (, leftKeys, ., getKey, (, i, ), )]
[leftKeys, ., getKey, (, i, )]
[leftKeys]
[i]
[plotArea, ., getHeight, (, )]
[plotArea]
[hh, *, getInteriorGap, (, )]
[hh]
[getInteriorGap, (, )]
[this, ., labelDistributor, ., distributeLabels, (, plotArea, ., getMinY, (, ), +, gap, ,, hh, -, 2, *, gap, )]
[this, ., labelDistributor]
[this]
[plotArea, ., getMinY, (, ), +, gap]
[plotArea, ., getMinY, (, )]
[plotArea]
[gap]
[hh, -, 2, *, gap]
[hh]
[2, *, gap]
[2]
[gap]
[0]
[i, <, this, ., labelDistributor, ., getItemCount, (, )]
[i]
[this, ., labelDistributor, ., getItemCount, (, )]
[this, ., labelDistributor]
[this]
[i, ++]
[i]
[drawLeftLabel, (, g2, ,, state, ,, this, ., labelDistributor, ., getPieLabelRecord, (, i, ), )]
[g2]
[state]
[this, ., labelDistributor, ., getPieLabelRecord, (, i, )]
[this, ., labelDistributor]
[this]
[i]
[this, ., labelDistributor, ., clear, (, )]
[this, ., labelDistributor]
[this]
[plotArea, ., getWidth, (, ), *, this, ., labelGap]
[plotArea, ., getWidth, (, )]
[plotArea]
[this, ., labelGap]
[this]
[state, ., getLinkArea, (, ), ., getHeight, (, ), /, 2.0]
[state, ., getLinkArea, (, ), ., getHeight, (, )]
[state, ., getLinkArea, (, )]
[state]
[2.0]
[0]
[i, <, keys, ., getItemCount, (, )]
[i]
[keys, ., getItemCount, (, )]
[keys]
[i, ++]
[i]
[this, ., labelGenerator, ., generateSectionLabel, (, this, ., dataset, ,, keys, ., getKey, (, i, ), )]
[this, ., labelGenerator]
[this]
[this, ., dataset]
[this]
[keys, ., getKey, (, i, )]
[keys]
[i]
[label, !=, null]
[label]
[null]
[TextUtilities, ., createTextBlock, (, label, ,, this, ., labelFont, ,, this, ., labelPaint, ,, maxLabelWidth, ,, new, G2TextMeasurer, (, g2, ), )]
[TextUtilities]
[label]
[this, ., labelFont]
[this]
[this, ., labelPaint]
[this]
[maxLabelWidth]
[new, G2TextMeasurer, (, g2, )]
[g2]
[new, TextBox, (, block, )]
[block]
[labelBox, ., setBackgroundPaint, (, this, ., labelBackgroundPaint, )]
[labelBox]
[this, ., labelBackgroundPaint]
[this]
[labelBox, ., setOutlinePaint, (, this, ., labelOutlinePaint, )]
[labelBox]
[this, ., labelOutlinePaint]
[this]
[labelBox, ., setOutlineStroke, (, this, ., labelOutlineStroke, )]
[labelBox]
[this, ., labelOutlineStroke]
[this]
[this, ., shadowGenerator, ==, null]
[this, ., shadowGenerator]
[this]
[null]
[labelBox, ., setShadowPaint, (, this, ., labelShadowPaint, )]
[labelBox]
[this, ., labelShadowPaint]
[this]
[labelBox, ., setShadowPaint, (, null, )]
[labelBox]
[null]
[labelBox, ., setInteriorGap, (, this, ., labelPadding, )]
[labelBox]
[this, ., labelPadding]
[this]
[Math, ., toRadians, (, keys, ., getValue, (, i, ), ., doubleValue, (, ), )]
[Math]
[keys, ., getValue, (, i, ), ., doubleValue, (, )]
[keys, ., getValue, (, i, )]
[keys]
[i]
[state, ., getPieCenterY, (, ), -, Math, ., sin, (, theta, ), *, verticalLinkRadius]
[state, ., getPieCenterY, (, )]
[state]
[Math, ., sin, (, theta, ), *, verticalLinkRadius]
[Math, ., sin, (, theta, )]
[Math]
[theta]
[verticalLinkRadius]
[labelBox, ., getHeight, (, g2, )]
[labelBox]
[g2]
[this, ., labelDistributor, ., addPieLabelRecord, (, new, PieLabelRecord, (, keys, ., getKey, (, i, ), ,, theta, ,, baseY, ,, labelBox, ,, hh, ,, lGap, /, 2.0, +, lGap, /, 2.0, *, Math, ., cos, (, theta, ), ,, 1.0, -, getLabelLinkDepth, (, ), +, getExplodePercent, (, keys, ., getKey, (, i, ), ), ), )]
[this, ., labelDistributor]
[this]
[new, PieLabelRecord, (, keys, ., getKey, (, i, ), ,, theta, ,, baseY, ,, labelBox, ,, hh, ,, lGap, /, 2.0, +, lGap, /, 2.0, *, Math, ., cos, (, theta, ), ,, 1.0, -, getLabelLinkDepth, (, ), +, getExplodePercent, (, keys, ., getKey, (, i, ), ), )]
[keys, ., getKey, (, i, )]
[keys]
[i]
[theta]
[baseY]
[labelBox]
[hh]
[lGap, /, 2.0, +, lGap, /, 2.0, *, Math, ., cos, (, theta, )]
[lGap, /, 2.0]
[lGap]
[2.0]
[lGap, /, 2.0, *, Math, ., cos, (, theta, )]
[lGap, /, 2.0]
[lGap]
[2.0]
[Math, ., cos, (, theta, )]
[Math]
[theta]
[1.0, -, getLabelLinkDepth, (, ), +, getExplodePercent, (, keys, ., getKey, (, i, ), )]
[1.0, -, getLabelLinkDepth, (, )]
[1.0]
[getLabelLinkDepth, (, )]
[getExplodePercent, (, keys, ., getKey, (, i, ), )]
[keys, ., getKey, (, i, )]
[keys]
[i]
[plotArea, ., getHeight, (, )]
[plotArea]
[hh, *, getInteriorGap, (, )]
[hh]
[getInteriorGap, (, )]
[this, ., labelDistributor, ., distributeLabels, (, plotArea, ., getMinY, (, ), +, gap, ,, hh, -, 2, *, gap, )]
[this, ., labelDistributor]
[this]
[plotArea, ., getMinY, (, ), +, gap]
[plotArea, ., getMinY, (, )]
[plotArea]
[gap]
[hh, -, 2, *, gap]
[hh]
[2, *, gap]
[2]
[gap]
[0]
[i, <, this, ., labelDistributor, ., getItemCount, (, )]
[i]
[this, ., labelDistributor, ., getItemCount, (, )]
[this, ., labelDistributor]
[this]
[i, ++]
[i]
[drawRightLabel, (, g2, ,, state, ,, this, ., labelDistributor, ., getPieLabelRecord, (, i, ), )]
[g2]
[state]
[this, ., labelDistributor, ., getPieLabelRecord, (, i, )]
[this, ., labelDistributor]
[this]
[i]
[new, LegendItemCollection, (, )]
[this, ., dataset, ==, null]
[this, ., dataset]
[this]
[null]
[result]
[this, ., dataset, ., getKeys, (, )]
[this, ., dataset]
[this]
[0]
[getLegendItemShape, (, )]
[keys, ., iterator, (, )]
[keys]
[iterator, ., hasNext, (, )]
[iterator]
[(, Comparable, ), iterator, ., next, (, )]
[iterator, ., next, (, )]
[iterator]
[this, ., dataset, ., getValue, (, key, )]
[this, ., dataset]
[this]
[key]
[true]
[n, ==, null]
[n]
[null]
[include]
[!, this, ., ignoreNullValues]
[this, ., ignoreNullValues]
[this]
[n, ., doubleValue, (, )]
[n]
[v, ==, 0.0]
[v]
[0.0]
[include]
[!, this, ., ignoreZeroValues]
[this, ., ignoreZeroValues]
[this]
[include]
[v, >, 0.0]
[v]
[0.0]
[include]
[this, ., legendLabelGenerator, ., generateSectionLabel, (, this, ., dataset, ,, key, )]
[this, ., legendLabelGenerator]
[this]
[this, ., dataset]
[this]
[key]
[label, !=, null]
[label]
[null]
[label]
[null]
[this, ., legendLabelToolTipGenerator, !=, null]
[this, ., legendLabelToolTipGenerator]
[this]
[null]
[toolTipText]
[this, ., legendLabelToolTipGenerator, ., generateSectionLabel, (, this, ., dataset, ,, key, )]
[this, ., legendLabelToolTipGenerator]
[this]
[this, ., dataset]
[this]
[key]
[null]
[this, ., legendLabelURLGenerator, !=, null]
[this, ., legendLabelURLGenerator]
[this]
[null]
[urlText]
[this, ., legendLabelURLGenerator, ., generateURL, (, this, ., dataset, ,, key, ,, this, ., pieIndex, )]
[this, ., legendLabelURLGenerator]
[this]
[this, ., dataset]
[this]
[key]
[this, ., pieIndex]
[this]
[lookupSectionPaint, (, key, ,, false, )]
[key]
[false]
[lookupSectionOutlinePaint, (, key, ,, false, )]
[key]
[false]
[lookupSectionOutlineStroke, (, key, ,, false, )]
[key]
[false]
[new, LegendItem, (, label, ,, description, ,, toolTipText, ,, urlText, ,, true, ,, shape, ,, true, ,, paint, ,, true, ,, outlinePaint, ,, outlineStroke, ,, false, ,, new, Line2D, ., Float, (, ), ,, new, BasicStroke, (, ), ,, Color, ., black, )]
[label]
[description]
[toolTipText]
[urlText]
[true]
[shape]
[true]
[paint]
[true]
[outlinePaint]
[outlineStroke]
[false]
[new, Line2D, ., Float, (, )]
[new, BasicStroke, (, )]
[Color, ., black]
[Color]
[item, ., setDataset, (, getDataset, (, ), )]
[item]
[getDataset, (, )]
[item, ., setSeriesIndex, (, this, ., dataset, ., getIndex, (, key, ), )]
[item]
[this, ., dataset, ., getIndex, (, key, )]
[this, ., dataset]
[this]
[key]
[item, ., setSeriesKey, (, key, )]
[item]
[key]
[result, ., add, (, item, )]
[result]
[item]
[section, ++]
[section]
[section, ++]
[section]
[result]
[localizationResources, ., getString, (, "Pie_Plot", )]
[localizationResources]
["Pie_Plot"]
[explodePercent, ==, 0.0]
[explodePercent]
[0.0]
[unexploded]
[new, Arc2D, ., Double, (, unexploded, ,, angle, ,, extent, /, 2, ,, Arc2D, ., OPEN, )]
[unexploded]
[angle]
[extent, /, 2]
[extent]
[2]
[Arc2D, ., OPEN]
[Arc2D]
[arc1, ., getEndPoint, (, )]
[arc1]
[new, Arc2D, ., Double, (, exploded, ,, angle, ,, extent, /, 2, ,, Arc2D, ., OPEN, )]
[exploded]
[angle]
[extent, /, 2]
[extent]
[2]
[Arc2D, ., OPEN]
[Arc2D]
[arc2, ., getEndPoint, (, )]
[arc2]
[(, point1, ., getX, (, ), -, point2, ., getX, (, ), ), *, explodePercent]
[(, point1, ., getX, (, ), -, point2, ., getX, (, ), )]
[point1, ., getX, (, ), -, point2, ., getX, (, )]
[point1, ., getX, (, )]
[point1]
[point2, ., getX, (, )]
[point2]
[explodePercent]
[(, point1, ., getY, (, ), -, point2, ., getY, (, ), ), *, explodePercent]
[(, point1, ., getY, (, ), -, point2, ., getY, (, ), )]
[point1, ., getY, (, ), -, point2, ., getY, (, )]
[point1, ., getY, (, )]
[point1]
[point2, ., getY, (, )]
[point2]
[explodePercent]
[new, Rectangle2D, ., Double, (, unexploded, ., getX, (, ), -, deltaX, ,, unexploded, ., getY, (, ), -, deltaY, ,, unexploded, ., getWidth, (, ), ,, unexploded, ., getHeight, (, ), )]
[unexploded, ., getX, (, ), -, deltaX]
[unexploded, ., getX, (, )]
[unexploded]
[deltaX]
[unexploded, ., getY, (, ), -, deltaY]
[unexploded, ., getY, (, )]
[unexploded]
[deltaY]
[unexploded, ., getWidth, (, )]
[unexploded]
[unexploded, ., getHeight, (, )]
[unexploded]
[state, ., getLinkArea, (, ), ., getMinX, (, )]
[state, ., getLinkArea, (, )]
[state]
[anchorX, -, record, ., getGap, (, )]
[anchorX]
[record, ., getGap, (, )]
[record]
[record, ., getAllocatedY, (, )]
[record]
[this, ., labelLinksVisible]
[this]
[record, ., getAngle, (, )]
[record]
[state, ., getPieCenterX, (, ), +, Math, ., cos, (, theta, ), *, state, ., getPieWRadius, (, ), *, record, ., getLinkPercent, (, )]
[state, ., getPieCenterX, (, )]
[state]
[Math, ., cos, (, theta, ), *, state, ., getPieWRadius, (, ), *, record, ., getLinkPercent, (, )]
[Math, ., cos, (, theta, ), *, state, ., getPieWRadius, (, )]
[Math, ., cos, (, theta, )]
[Math]
[theta]
[state, ., getPieWRadius, (, )]
[state]
[record, ., getLinkPercent, (, )]
[record]
[state, ., getPieCenterY, (, ), -, Math, ., sin, (, theta, ), *, state, ., getPieHRadius, (, ), *, record, ., getLinkPercent, (, )]
[state, ., getPieCenterY, (, )]
[state]
[Math, ., sin, (, theta, ), *, state, ., getPieHRadius, (, ), *, record, ., getLinkPercent, (, )]
[Math, ., sin, (, theta, ), *, state, ., getPieHRadius, (, )]
[Math, ., sin, (, theta, )]
[Math]
[theta]
[state, ., getPieHRadius, (, )]
[state]
[record, ., getLinkPercent, (, )]
[record]
[state, ., getPieCenterX, (, ), +, Math, ., cos, (, theta, ), *, state, ., getLinkArea, (, ), ., getWidth, (, ), /, 2.0]
[state, ., getPieCenterX, (, )]
[state]
[Math, ., cos, (, theta, ), *, state, ., getLinkArea, (, ), ., getWidth, (, ), /, 2.0]
[Math, ., cos, (, theta, ), *, state, ., getLinkArea, (, ), ., getWidth, (, )]
[Math, ., cos, (, theta, )]
[Math]
[theta]
[state, ., getLinkArea, (, ), ., getWidth, (, )]
[state, ., getLinkArea, (, )]
[state]
[2.0]
[state, ., getPieCenterY, (, ), -, Math, ., sin, (, theta, ), *, state, ., getLinkArea, (, ), ., getHeight, (, ), /, 2.0]
[state, ., getPieCenterY, (, )]
[state]
[Math, ., sin, (, theta, ), *, state, ., getLinkArea, (, ), ., getHeight, (, ), /, 2.0]
[Math, ., sin, (, theta, ), *, state, ., getLinkArea, (, ), ., getHeight, (, )]
[Math, ., sin, (, theta, )]
[Math]
[theta]
[state, ., getLinkArea, (, ), ., getHeight, (, )]
[state, ., getLinkArea, (, )]
[state]
[2.0]
[elbowY]
[g2, ., setPaint, (, this, ., labelLinkPaint, )]
[g2]
[this, ., labelLinkPaint]
[this]
[g2, ., setStroke, (, this, ., labelLinkStroke, )]
[g2]
[this, ., labelLinkStroke]
[this]
[getLabelLinkStyle, (, )]
[style, ., equals, (, PieLabelLinkStyle, ., STANDARD, )]
[style]
[PieLabelLinkStyle, ., STANDARD]
[PieLabelLinkStyle]
[g2, ., draw, (, new, Line2D, ., Double, (, linkX, ,, linkY, ,, elbowX, ,, elbowY, ), )]
[g2]
[new, Line2D, ., Double, (, linkX, ,, linkY, ,, elbowX, ,, elbowY, )]
[linkX]
[linkY]
[elbowX]
[elbowY]
[g2, ., draw, (, new, Line2D, ., Double, (, anchorX, ,, anchorY, ,, elbowX, ,, elbowY, ), )]
[g2]
[new, Line2D, ., Double, (, anchorX, ,, anchorY, ,, elbowX, ,, elbowY, )]
[anchorX]
[anchorY]
[elbowX]
[elbowY]
[g2, ., draw, (, new, Line2D, ., Double, (, anchorX, ,, anchorY, ,, targetX, ,, targetY, ), )]
[g2]
[new, Line2D, ., Double, (, anchorX, ,, anchorY, ,, targetX, ,, targetY, )]
[anchorX]
[anchorY]
[targetX]
[targetY]
[style, ., equals, (, PieLabelLinkStyle, ., QUAD_CURVE, )]
[style]
[PieLabelLinkStyle, ., QUAD_CURVE]
[PieLabelLinkStyle]
[new, QuadCurve2D, ., Float, (, )]
[q, ., setCurve, (, targetX, ,, targetY, ,, anchorX, ,, anchorY, ,, elbowX, ,, elbowY, )]
[q]
[targetX]
[targetY]
[anchorX]
[anchorY]
[elbowX]
[elbowY]
[g2, ., draw, (, q, )]
[g2]
[q]
[g2, ., draw, (, new, Line2D, ., Double, (, elbowX, ,, elbowY, ,, linkX, ,, linkY, ), )]
[g2]
[new, Line2D, ., Double, (, elbowX, ,, elbowY, ,, linkX, ,, linkY, )]
[elbowX]
[elbowY]
[linkX]
[linkY]
[style, ., equals, (, PieLabelLinkStyle, ., CUBIC_CURVE, )]
[style]
[PieLabelLinkStyle, ., CUBIC_CURVE]
[PieLabelLinkStyle]
[new, CubicCurve2D, ., Float, (, )]
[c, ., setCurve, (, targetX, ,, targetY, ,, anchorX, ,, anchorY, ,, elbowX, ,, elbowY, ,, linkX, ,, linkY, )]
[c]
[targetX]
[targetY]
[anchorX]
[anchorY]
[elbowX]
[elbowY]
[linkX]
[linkY]
[g2, ., draw, (, c, )]
[g2]
[c]
[record, ., getLabel, (, )]
[record]
[tb, ., draw, (, g2, ,, (, float, ), targetX, ,, (, float, ), targetY, ,, RectangleAnchor, ., RIGHT, )]
[tb]
[g2]
[(, float, ), targetX]
[targetX]
[(, float, ), targetY]
[targetY]
[RectangleAnchor, ., RIGHT]
[RectangleAnchor]
[state, ., getLinkArea, (, ), ., getMaxX, (, )]
[state, ., getLinkArea, (, )]
[state]
[anchorX, +, record, ., getGap, (, )]
[anchorX]
[record, ., getGap, (, )]
[record]
[record, ., getAllocatedY, (, )]
[record]
[this, ., labelLinksVisible]
[this]
[record, ., getAngle, (, )]
[record]
[state, ., getPieCenterX, (, ), +, Math, ., cos, (, theta, ), *, state, ., getPieWRadius, (, ), *, record, ., getLinkPercent, (, )]
[state, ., getPieCenterX, (, )]
[state]
[Math, ., cos, (, theta, ), *, state, ., getPieWRadius, (, ), *, record, ., getLinkPercent, (, )]
[Math, ., cos, (, theta, ), *, state, ., getPieWRadius, (, )]
[Math, ., cos, (, theta, )]
[Math]
[theta]
[state, ., getPieWRadius, (, )]
[state]
[record, ., getLinkPercent, (, )]
[record]
[state, ., getPieCenterY, (, ), -, Math, ., sin, (, theta, ), *, state, ., getPieHRadius, (, ), *, record, ., getLinkPercent, (, )]
[state, ., getPieCenterY, (, )]
[state]
[Math, ., sin, (, theta, ), *, state, ., getPieHRadius, (, ), *, record, ., getLinkPercent, (, )]
[Math, ., sin, (, theta, ), *, state, ., getPieHRadius, (, )]
[Math, ., sin, (, theta, )]
[Math]
[theta]
[state, ., getPieHRadius, (, )]
[state]
[record, ., getLinkPercent, (, )]
[record]
[state, ., getPieCenterX, (, ), +, Math, ., cos, (, theta, ), *, state, ., getLinkArea, (, ), ., getWidth, (, ), /, 2.0]
[state, ., getPieCenterX, (, )]
[state]
[Math, ., cos, (, theta, ), *, state, ., getLinkArea, (, ), ., getWidth, (, ), /, 2.0]
[Math, ., cos, (, theta, ), *, state, ., getLinkArea, (, ), ., getWidth, (, )]
[Math, ., cos, (, theta, )]
[Math]
[theta]
[state, ., getLinkArea, (, ), ., getWidth, (, )]
[state, ., getLinkArea, (, )]
[state]
[2.0]
[state, ., getPieCenterY, (, ), -, Math, ., sin, (, theta, ), *, state, ., getLinkArea, (, ), ., getHeight, (, ), /, 2.0]
[state, ., getPieCenterY, (, )]
[state]
[Math, ., sin, (, theta, ), *, state, ., getLinkArea, (, ), ., getHeight, (, ), /, 2.0]
[Math, ., sin, (, theta, ), *, state, ., getLinkArea, (, ), ., getHeight, (, )]
[Math, ., sin, (, theta, )]
[Math]
[theta]
[state, ., getLinkArea, (, ), ., getHeight, (, )]
[state, ., getLinkArea, (, )]
[state]
[2.0]
[elbowY]
[g2, ., setPaint, (, this, ., labelLinkPaint, )]
[g2]
[this, ., labelLinkPaint]
[this]
[g2, ., setStroke, (, this, ., labelLinkStroke, )]
[g2]
[this, ., labelLinkStroke]
[this]
[getLabelLinkStyle, (, )]
[style, ., equals, (, PieLabelLinkStyle, ., STANDARD, )]
[style]
[PieLabelLinkStyle, ., STANDARD]
[PieLabelLinkStyle]
[g2, ., draw, (, new, Line2D, ., Double, (, linkX, ,, linkY, ,, elbowX, ,, elbowY, ), )]
[g2]
[new, Line2D, ., Double, (, linkX, ,, linkY, ,, elbowX, ,, elbowY, )]
[linkX]
[linkY]
[elbowX]
[elbowY]
[g2, ., draw, (, new, Line2D, ., Double, (, anchorX, ,, anchorY, ,, elbowX, ,, elbowY, ), )]
[g2]
[new, Line2D, ., Double, (, anchorX, ,, anchorY, ,, elbowX, ,, elbowY, )]
[anchorX]
[anchorY]
[elbowX]
[elbowY]
[g2, ., draw, (, new, Line2D, ., Double, (, anchorX, ,, anchorY, ,, targetX, ,, targetY, ), )]
[g2]
[new, Line2D, ., Double, (, anchorX, ,, anchorY, ,, targetX, ,, targetY, )]
[anchorX]
[anchorY]
[targetX]
[targetY]
[style, ., equals, (, PieLabelLinkStyle, ., QUAD_CURVE, )]
[style]
[PieLabelLinkStyle, ., QUAD_CURVE]
[PieLabelLinkStyle]
[new, QuadCurve2D, ., Float, (, )]
[q, ., setCurve, (, targetX, ,, targetY, ,, anchorX, ,, anchorY, ,, elbowX, ,, elbowY, )]
[q]
[targetX]
[targetY]
[anchorX]
[anchorY]
[elbowX]
[elbowY]
[g2, ., draw, (, q, )]
[g2]
[q]
[g2, ., draw, (, new, Line2D, ., Double, (, elbowX, ,, elbowY, ,, linkX, ,, linkY, ), )]
[g2]
[new, Line2D, ., Double, (, elbowX, ,, elbowY, ,, linkX, ,, linkY, )]
[elbowX]
[elbowY]
[linkX]
[linkY]
[style, ., equals, (, PieLabelLinkStyle, ., CUBIC_CURVE, )]
[style]
[PieLabelLinkStyle, ., CUBIC_CURVE]
[PieLabelLinkStyle]
[new, CubicCurve2D, ., Float, (, )]
[c, ., setCurve, (, targetX, ,, targetY, ,, anchorX, ,, anchorY, ,, elbowX, ,, elbowY, ,, linkX, ,, linkY, )]
[c]
[targetX]
[targetY]
[anchorX]
[anchorY]
[elbowX]
[elbowY]
[linkX]
[linkY]
[g2, ., draw, (, c, )]
[g2]
[c]
[record, ., getLabel, (, )]
[record]
[tb, ., draw, (, g2, ,, (, float, ), targetX, ,, (, float, ), targetY, ,, RectangleAnchor, ., LEFT, )]
[tb]
[g2]
[(, float, ), targetX]
[targetX]
[(, float, ), targetY]
[targetY]
[RectangleAnchor, ., LEFT]
[RectangleAnchor]
[dataset, instanceof, SelectablePieDataset]
[dataset]
[(, SelectablePieDataset, ), dataset]
[dataset]
[sd, ., getSelectionState, (, )]
[sd]
[s]
[new, RuntimeException, (, )]
[true]
[false]
[System, ., out, ., println, (, "select ", +, x, +, ", ", +, y, )]
[System, ., out]
[System]
["select ", +, x, +, ", ", +, y]
["select ", +, x, +, ", "]
["select ", +, x]
["select "]
[x]
[", "]
[y]
[findSelectionStateForDataset, (, dataset, ,, source, )]
[dataset]
[source]
[state, ==, null]
[state]
[null]
[calculateLinkAndExplodeAreas, (, null, ,, dataArea, )]
[null]
[dataArea]
[areas, [, 0, ]]
[areas]
[0]
[areas, [, 1, ]]
[areas]
[1]
[getMaximumExplodePercent, (, )]
[maximumExplodePercent, /, (, 1.0, +, maximumExplodePercent, )]
[maximumExplodePercent]
[(, 1.0, +, maximumExplodePercent, )]
[1.0, +, maximumExplodePercent]
[1.0]
[maximumExplodePercent]
[explodeArea, ., getWidth, (, ), *, percent]
[explodeArea, ., getWidth, (, )]
[explodeArea]
[percent]
[explodeArea, ., getHeight, (, ), *, percent]
[explodeArea, ., getHeight, (, )]
[explodeArea]
[percent]
[new, Rectangle2D, ., Double, (, explodeArea, ., getX, (, ), +, h1, /, 2.0, ,, explodeArea, ., getY, (, ), +, v1, /, 2.0, ,, explodeArea, ., getWidth, (, ), -, h1, ,, explodeArea, ., getHeight, (, ), -, v1, )]
[explodeArea, ., getX, (, ), +, h1, /, 2.0]
[explodeArea, ., getX, (, )]
[explodeArea]
[h1, /, 2.0]
[h1]
[2.0]
[explodeArea, ., getY, (, ), +, v1, /, 2.0]
[explodeArea, ., getY, (, )]
[explodeArea]
[v1, /, 2.0]
[v1]
[2.0]
[explodeArea, ., getWidth, (, ), -, h1]
[explodeArea, ., getWidth, (, )]
[explodeArea]
[h1]
[explodeArea, ., getHeight, (, ), -, v1]
[explodeArea, ., getHeight, (, )]
[explodeArea]
[v1]
[(, this, ., dataset, !=, null, ), &&, (, this, ., dataset, ., getKeys, (, ), ., size, (, ), >, 0, )]
[(, this, ., dataset, !=, null, )]
[this, ., dataset, !=, null]
[this, ., dataset]
[this]
[null]
[(, this, ., dataset, ., getKeys, (, ), ., size, (, ), >, 0, )]
[this, ., dataset, ., getKeys, (, ), ., size, (, ), >, 0]
[this, ., dataset, ., getKeys, (, ), ., size, (, )]
[this, ., dataset, ., getKeys, (, )]
[this, ., dataset]
[this]
[0]
[this, ., dataset, ., getKeys, (, )]
[this, ., dataset]
[this]
[DatasetUtilities, ., calculatePieDatasetTotal, (, this, ., dataset, )]
[DatasetUtilities]
[this, ., dataset]
[this]
[0.0]
[0]
[section, <, keys, ., size, (, )]
[section]
[keys, ., size, (, )]
[keys]
[section, ++]
[section]
[this, ., dataset, ., getValue, (, section, )]
[this, ., dataset]
[this]
[section]
[n, ==, null]
[n]
[null]
[n, ., doubleValue, (, )]
[n]
[value, >, 0.0]
[value]
[0.0]
[calculateAngleForValue, (, runningTotal, ,, total, )]
[runningTotal]
[total]
[calculateAngleForValue, (, runningTotal, +, value, ,, total, )]
[runningTotal, +, value]
[runningTotal]
[value]
[total]
[runningTotal]
[value]
[System, ., out, ., println, (, this, ., dataset, ., getValue, (, section, ), )]
[System, ., out]
[System]
[this, ., dataset, ., getValue, (, section, )]
[this, ., dataset]
[this]
[section]
[System, ., out, ., println, (, angle0, )]
[System, ., out]
[System]
[angle0]
[System, ., out, ., println, (, angle1, )]
[System, ., out]
[System]
[angle1]
[(, angle1, -, angle0, )]
[angle1, -, angle0]
[angle1]
[angle0]
[Math, ., abs, (, angle, ), >, getMinimumArcAngleToDraw, (, )]
[Math, ., abs, (, angle, )]
[Math]
[angle]
[getMinimumArcAngleToDraw, (, )]
[0.0]
[getMaximumExplodePercent, (, )]
[mep, >, 0.0]
[mep]
[0.0]
[ep]
[getExplodePercent, (, getSectionKey, (, section, ), ), /, mep]
[getExplodePercent, (, getSectionKey, (, section, ), )]
[getSectionKey, (, section, )]
[section]
[mep]
[getArcBounds, (, pieArea, ,, explodeArea, ,, angle0, ,, angle, ,, ep, )]
[pieArea]
[explodeArea]
[angle0]
[angle]
[ep]
[new, Arc2D, ., Double, (, arcBounds, ,, angle0, ,, angle, ,, Arc2D, ., PIE, )]
[arcBounds]
[angle0]
[angle]
[Arc2D, ., PIE]
[Arc2D]
[arc, ., contains, (, x, ,, y, )]
[arc]
[x]
[y]
[this, ., dataset, ., getKey, (, section, )]
[this, ., dataset]
[this]
[section]
[state, ., setSelected, (, key, ,, !, state, ., isSelected, (, key, ), )]
[state]
[key]
[!, state, ., isSelected, (, key, )]
[state, ., isSelected, (, key, )]
[state]
[key]
[System, ., out, ., println, (, key, +, " is ", +, state, ., isSelected, (, key, ), )]
[System, ., out]
[System]
[key, +, " is ", +, state, ., isSelected, (, key, )]
[key, +, " is "]
[key]
[" is "]
[state, ., isSelected, (, key, )]
[state]
[key]
[this, ., direction, ==, Rotation, ., CLOCKWISE]
[this, ., direction]
[this]
[Rotation, ., CLOCKWISE]
[Rotation]
[this, ., startAngle, -, (, value, /, total, *, 360.0, )]
[this, ., startAngle]
[this]
[(, value, /, total, *, 360.0, )]
[value, /, total, *, 360.0]
[value, /, total]
[value]
[total]
[360.0]
[this, ., direction, ==, Rotation, ., ANTICLOCKWISE]
[this, ., direction]
[this]
[Rotation, ., ANTICLOCKWISE]
[Rotation]
[this, ., startAngle, +, (, value, /, total, *, 360.0, )]
[this, ., startAngle]
[this]
[(, value, /, total, *, 360.0, )]
[value, /, total, *, 360.0]
[value, /, total]
[value]
[total]
[360.0]
[new, RuntimeException, (, "Unrecognised Rotation type.", )]
["Unrecognised Rotation type."]
[System, ., out, ., println, (, "Clear selection.", )]
[System, ., out]
[System]
["Clear selection."]
[this, ., dataset, ., getValue, (, section, )]
[this, ., dataset]
[this]
[section]
[n, ==, null]
[n]
[null]
[null]
[n, ., doubleValue, (, )]
[n]
[0.0]
[0.0]
[DatasetUtilities, ., calculatePieDatasetTotal, (, this, ., dataset, )]
[DatasetUtilities]
[this, ., dataset]
[this]
[0.0]
[this, ., direction, ==, Rotation, ., CLOCKWISE]
[this, ., direction]
[this]
[Rotation, ., CLOCKWISE]
[Rotation]
[0]
[i, <, section]
[i]
[section]
[i, ++]
[i]
[n]
[this, ., dataset, ., getValue, (, i, )]
[this, ., dataset]
[this]
[i]
[n, !=, null]
[n]
[null]
[value]
[n, ., doubleValue, (, )]
[n]
[value, >=, 0.0]
[value]
[0.0]
[lead]
[lead, +, value]
[lead]
[value]
[angle1]
[getStartAngle, (, ), -, lead, /, total, *, 360.0]
[getStartAngle, (, )]
[lead, /, total, *, 360.0]
[lead, /, total]
[lead]
[total]
[360.0]
[angle2]
[angle1, -, value, /, total, *, 360.0]
[angle1]
[value, /, total, *, 360.0]
[value, /, total]
[value]
[total]
[360.0]
[this, ., direction, ==, Rotation, ., ANTICLOCKWISE]
[this, ., direction]
[this]
[Rotation, ., ANTICLOCKWISE]
[Rotation]
[angle1]
[getStartAngle, (, ), +, lead, /, total, *, 360.0]
[getStartAngle, (, )]
[lead, /, total, *, 360.0]
[lead, /, total]
[lead]
[total]
[360.0]
[angle2]
[angle1, +, value, /, total, *, 360.0]
[angle1]
[value, /, total, *, 360.0]
[value, /, total]
[value]
[total]
[360.0]
[new, IllegalStateException, (, "Rotation type not recognised.", )]
["Rotation type not recognised."]
[(, angle2, -, angle1, )]
[angle2, -, angle1]
[angle2]
[angle1]
[Math, ., abs, (, angle, ), >, getMinimumArcAngleToDraw, (, )]
[Math, ., abs, (, angle, )]
[Math]
[angle]
[getMinimumArcAngleToDraw, (, )]
[0.0]
[getMaximumExplodePercent, (, )]
[mep, >, 0.0]
[mep]
[0.0]
[ep]
[getExplodePercent, (, getSectionKey, (, section, ), ), /, mep]
[getExplodePercent, (, getSectionKey, (, section, ), )]
[getSectionKey, (, section, )]
[section]
[mep]
[getArcBounds, (, dataArea, ,, dataArea, ,, angle1, ,, angle, ,, ep, )]
[dataArea]
[dataArea]
[angle1]
[angle]
[ep]
[new, Arc2D, ., Double, (, arcBounds, ,, angle1, ,, angle, ,, Arc2D, ., PIE, )]
[arcBounds]
[angle1]
[angle]
[Arc2D, ., PIE]
[Arc2D]
[arc]
[null]
[obj, ==, this]
[obj]
[this]
[true]
[!, (, obj, instanceof, PiePlot, )]
[(, obj, instanceof, PiePlot, )]
[obj, instanceof, PiePlot]
[obj]
[false]
[!, super, ., equals, (, obj, )]
[super, ., equals, (, obj, )]
[super]
[obj]
[false]
[(, PiePlot, ), obj]
[obj]
[this, ., pieIndex, !=, that, ., pieIndex]
[this, ., pieIndex]
[this]
[that, ., pieIndex]
[that]
[false]
[this, ., interiorGap, !=, that, ., interiorGap]
[this, ., interiorGap]
[this]
[that, ., interiorGap]
[that]
[false]
[this, ., circular, !=, that, ., circular]
[this, ., circular]
[this]
[that, ., circular]
[that]
[false]
[this, ., startAngle, !=, that, ., startAngle]
[this, ., startAngle]
[this]
[that, ., startAngle]
[that]
[false]
[this, ., direction, !=, that, ., direction]
[this, ., direction]
[this]
[that, ., direction]
[that]
[false]
[this, ., ignoreZeroValues, !=, that, ., ignoreZeroValues]
[this, ., ignoreZeroValues]
[this]
[that, ., ignoreZeroValues]
[that]
[false]
[this, ., ignoreNullValues, !=, that, ., ignoreNullValues]
[this, ., ignoreNullValues]
[this]
[that, ., ignoreNullValues]
[that]
[false]
[!, ObjectUtilities, ., equal, (, this, ., sectionPaintMap, ,, that, ., sectionPaintMap, )]
[ObjectUtilities, ., equal, (, this, ., sectionPaintMap, ,, that, ., sectionPaintMap, )]
[ObjectUtilities]
[this, ., sectionPaintMap]
[this]
[that, ., sectionPaintMap]
[that]
[false]
[!, PaintUtilities, ., equal, (, this, ., baseSectionPaint, ,, that, ., baseSectionPaint, )]
[PaintUtilities, ., equal, (, this, ., baseSectionPaint, ,, that, ., baseSectionPaint, )]
[PaintUtilities]
[this, ., baseSectionPaint]
[this]
[that, ., baseSectionPaint]
[that]
[false]
[this, ., sectionOutlinesVisible, !=, that, ., sectionOutlinesVisible]
[this, ., sectionOutlinesVisible]
[this]
[that, ., sectionOutlinesVisible]
[that]
[false]
[!, ObjectUtilities, ., equal, (, this, ., sectionOutlinePaintMap, ,, that, ., sectionOutlinePaintMap, )]
[ObjectUtilities, ., equal, (, this, ., sectionOutlinePaintMap, ,, that, ., sectionOutlinePaintMap, )]
[ObjectUtilities]
[this, ., sectionOutlinePaintMap]
[this]
[that, ., sectionOutlinePaintMap]
[that]
[false]
[!, PaintUtilities, ., equal, (, this, ., baseSectionOutlinePaint, ,, that, ., baseSectionOutlinePaint, )]
[PaintUtilities, ., equal, (, this, ., baseSectionOutlinePaint, ,, that, ., baseSectionOutlinePaint, )]
[PaintUtilities]
[this, ., baseSectionOutlinePaint]
[this]
[that, ., baseSectionOutlinePaint]
[that]
[false]
[!, ObjectUtilities, ., equal, (, this, ., sectionOutlineStrokeMap, ,, that, ., sectionOutlineStrokeMap, )]
[ObjectUtilities, ., equal, (, this, ., sectionOutlineStrokeMap, ,, that, ., sectionOutlineStrokeMap, )]
[ObjectUtilities]
[this, ., sectionOutlineStrokeMap]
[this]
[that, ., sectionOutlineStrokeMap]
[that]
[false]
[!, ObjectUtilities, ., equal, (, this, ., baseSectionOutlineStroke, ,, that, ., baseSectionOutlineStroke, )]
[ObjectUtilities, ., equal, (, this, ., baseSectionOutlineStroke, ,, that, ., baseSectionOutlineStroke, )]
[ObjectUtilities]
[this, ., baseSectionOutlineStroke]
[this]
[that, ., baseSectionOutlineStroke]
[that]
[false]
[!, PaintUtilities, ., equal, (, this, ., shadowPaint, ,, that, ., shadowPaint, )]
[PaintUtilities, ., equal, (, this, ., shadowPaint, ,, that, ., shadowPaint, )]
[PaintUtilities]
[this, ., shadowPaint]
[this]
[that, ., shadowPaint]
[that]
[false]
[!, (, this, ., shadowXOffset, ==, that, ., shadowXOffset, )]
[(, this, ., shadowXOffset, ==, that, ., shadowXOffset, )]
[this, ., shadowXOffset, ==, that, ., shadowXOffset]
[this, ., shadowXOffset]
[this]
[that, ., shadowXOffset]
[that]
[false]
[!, (, this, ., shadowYOffset, ==, that, ., shadowYOffset, )]
[(, this, ., shadowYOffset, ==, that, ., shadowYOffset, )]
[this, ., shadowYOffset, ==, that, ., shadowYOffset]
[this, ., shadowYOffset]
[this]
[that, ., shadowYOffset]
[that]
[false]
[!, ObjectUtilities, ., equal, (, this, ., explodePercentages, ,, that, ., explodePercentages, )]
[ObjectUtilities, ., equal, (, this, ., explodePercentages, ,, that, ., explodePercentages, )]
[ObjectUtilities]
[this, ., explodePercentages]
[this]
[that, ., explodePercentages]
[that]
[false]
[!, ObjectUtilities, ., equal, (, this, ., labelGenerator, ,, that, ., labelGenerator, )]
[ObjectUtilities, ., equal, (, this, ., labelGenerator, ,, that, ., labelGenerator, )]
[ObjectUtilities]
[this, ., labelGenerator]
[this]
[that, ., labelGenerator]
[that]
[false]
[!, ObjectUtilities, ., equal, (, this, ., labelFont, ,, that, ., labelFont, )]
[ObjectUtilities, ., equal, (, this, ., labelFont, ,, that, ., labelFont, )]
[ObjectUtilities]
[this, ., labelFont]
[this]
[that, ., labelFont]
[that]
[false]
[!, PaintUtilities, ., equal, (, this, ., labelPaint, ,, that, ., labelPaint, )]
[PaintUtilities, ., equal, (, this, ., labelPaint, ,, that, ., labelPaint, )]
[PaintUtilities]
[this, ., labelPaint]
[this]
[that, ., labelPaint]
[that]
[false]
[!, PaintUtilities, ., equal, (, this, ., labelBackgroundPaint, ,, that, ., labelBackgroundPaint, )]
[PaintUtilities, ., equal, (, this, ., labelBackgroundPaint, ,, that, ., labelBackgroundPaint, )]
[PaintUtilities]
[this, ., labelBackgroundPaint]
[this]
[that, ., labelBackgroundPaint]
[that]
[false]
[!, PaintUtilities, ., equal, (, this, ., labelOutlinePaint, ,, that, ., labelOutlinePaint, )]
[PaintUtilities, ., equal, (, this, ., labelOutlinePaint, ,, that, ., labelOutlinePaint, )]
[PaintUtilities]
[this, ., labelOutlinePaint]
[this]
[that, ., labelOutlinePaint]
[that]
[false]
[!, ObjectUtilities, ., equal, (, this, ., labelOutlineStroke, ,, that, ., labelOutlineStroke, )]
[ObjectUtilities, ., equal, (, this, ., labelOutlineStroke, ,, that, ., labelOutlineStroke, )]
[ObjectUtilities]
[this, ., labelOutlineStroke]
[this]
[that, ., labelOutlineStroke]
[that]
[false]
[!, PaintUtilities, ., equal, (, this, ., labelShadowPaint, ,, that, ., labelShadowPaint, )]
[PaintUtilities, ., equal, (, this, ., labelShadowPaint, ,, that, ., labelShadowPaint, )]
[PaintUtilities]
[this, ., labelShadowPaint]
[this]
[that, ., labelShadowPaint]
[that]
[false]
[this, ., simpleLabels, !=, that, ., simpleLabels]
[this, ., simpleLabels]
[this]
[that, ., simpleLabels]
[that]
[false]
[!, this, ., simpleLabelOffset, ., equals, (, that, ., simpleLabelOffset, )]
[this, ., simpleLabelOffset, ., equals, (, that, ., simpleLabelOffset, )]
[this, ., simpleLabelOffset]
[this]
[that, ., simpleLabelOffset]
[that]
[false]
[!, this, ., labelPadding, ., equals, (, that, ., labelPadding, )]
[this, ., labelPadding, ., equals, (, that, ., labelPadding, )]
[this, ., labelPadding]
[this]
[that, ., labelPadding]
[that]
[false]
[!, (, this, ., maximumLabelWidth, ==, that, ., maximumLabelWidth, )]
[(, this, ., maximumLabelWidth, ==, that, ., maximumLabelWidth, )]
[this, ., maximumLabelWidth, ==, that, ., maximumLabelWidth]
[this, ., maximumLabelWidth]
[this]
[that, ., maximumLabelWidth]
[that]
[false]
[!, (, this, ., labelGap, ==, that, ., labelGap, )]
[(, this, ., labelGap, ==, that, ., labelGap, )]
[this, ., labelGap, ==, that, ., labelGap]
[this, ., labelGap]
[this]
[that, ., labelGap]
[that]
[false]
[!, (, this, ., labelLinkMargin, ==, that, ., labelLinkMargin, )]
[(, this, ., labelLinkMargin, ==, that, ., labelLinkMargin, )]
[this, ., labelLinkMargin, ==, that, ., labelLinkMargin]
[this, ., labelLinkMargin]
[this]
[that, ., labelLinkMargin]
[that]
[false]
[this, ., labelLinksVisible, !=, that, ., labelLinksVisible]
[this, ., labelLinksVisible]
[this]
[that, ., labelLinksVisible]
[that]
[false]
[!, this, ., labelLinkStyle, ., equals, (, that, ., labelLinkStyle, )]
[this, ., labelLinkStyle, ., equals, (, that, ., labelLinkStyle, )]
[this, ., labelLinkStyle]
[this]
[that, ., labelLinkStyle]
[that]
[false]
[!, PaintUtilities, ., equal, (, this, ., labelLinkPaint, ,, that, ., labelLinkPaint, )]
[PaintUtilities, ., equal, (, this, ., labelLinkPaint, ,, that, ., labelLinkPaint, )]
[PaintUtilities]
[this, ., labelLinkPaint]
[this]
[that, ., labelLinkPaint]
[that]
[false]
[!, ObjectUtilities, ., equal, (, this, ., labelLinkStroke, ,, that, ., labelLinkStroke, )]
[ObjectUtilities, ., equal, (, this, ., labelLinkStroke, ,, that, ., labelLinkStroke, )]
[ObjectUtilities]
[this, ., labelLinkStroke]
[this]
[that, ., labelLinkStroke]
[that]
[false]
[!, ObjectUtilities, ., equal, (, this, ., toolTipGenerator, ,, that, ., toolTipGenerator, )]
[ObjectUtilities, ., equal, (, this, ., toolTipGenerator, ,, that, ., toolTipGenerator, )]
[ObjectUtilities]
[this, ., toolTipGenerator]
[this]
[that, ., toolTipGenerator]
[that]
[false]
[!, ObjectUtilities, ., equal, (, this, ., urlGenerator, ,, that, ., urlGenerator, )]
[ObjectUtilities, ., equal, (, this, ., urlGenerator, ,, that, ., urlGenerator, )]
[ObjectUtilities]
[this, ., urlGenerator]
[this]
[that, ., urlGenerator]
[that]
[false]
[!, (, this, ., minimumArcAngleToDraw, ==, that, ., minimumArcAngleToDraw, )]
[(, this, ., minimumArcAngleToDraw, ==, that, ., minimumArcAngleToDraw, )]
[this, ., minimumArcAngleToDraw, ==, that, ., minimumArcAngleToDraw]
[this, ., minimumArcAngleToDraw]
[this]
[that, ., minimumArcAngleToDraw]
[that]
[false]
[!, ShapeUtilities, ., equal, (, this, ., legendItemShape, ,, that, ., legendItemShape, )]
[ShapeUtilities, ., equal, (, this, ., legendItemShape, ,, that, ., legendItemShape, )]
[ShapeUtilities]
[this, ., legendItemShape]
[this]
[that, ., legendItemShape]
[that]
[false]
[!, ObjectUtilities, ., equal, (, this, ., legendLabelGenerator, ,, that, ., legendLabelGenerator, )]
[ObjectUtilities, ., equal, (, this, ., legendLabelGenerator, ,, that, ., legendLabelGenerator, )]
[ObjectUtilities]
[this, ., legendLabelGenerator]
[this]
[that, ., legendLabelGenerator]
[that]
[false]
[!, ObjectUtilities, ., equal, (, this, ., legendLabelToolTipGenerator, ,, that, ., legendLabelToolTipGenerator, )]
[ObjectUtilities, ., equal, (, this, ., legendLabelToolTipGenerator, ,, that, ., legendLabelToolTipGenerator, )]
[ObjectUtilities]
[this, ., legendLabelToolTipGenerator]
[this]
[that, ., legendLabelToolTipGenerator]
[that]
[false]
[!, ObjectUtilities, ., equal, (, this, ., legendLabelURLGenerator, ,, that, ., legendLabelURLGenerator, )]
[ObjectUtilities, ., equal, (, this, ., legendLabelURLGenerator, ,, that, ., legendLabelURLGenerator, )]
[ObjectUtilities]
[this, ., legendLabelURLGenerator]
[this]
[that, ., legendLabelURLGenerator]
[that]
[false]
[this, ., autoPopulateSectionPaint, !=, that, ., autoPopulateSectionPaint]
[this, ., autoPopulateSectionPaint]
[this]
[that, ., autoPopulateSectionPaint]
[that]
[false]
[this, ., autoPopulateSectionOutlinePaint, !=, that, ., autoPopulateSectionOutlinePaint]
[this, ., autoPopulateSectionOutlinePaint]
[this]
[that, ., autoPopulateSectionOutlinePaint]
[that]
[false]
[this, ., autoPopulateSectionOutlineStroke, !=, that, ., autoPopulateSectionOutlineStroke]
[this, ., autoPopulateSectionOutlineStroke]
[this]
[that, ., autoPopulateSectionOutlineStroke]
[that]
[false]
[!, ObjectUtilities, ., equal, (, this, ., shadowGenerator, ,, that, ., shadowGenerator, )]
[ObjectUtilities, ., equal, (, this, ., shadowGenerator, ,, that, ., shadowGenerator, )]
[ObjectUtilities]
[this, ., shadowGenerator]
[this]
[that, ., shadowGenerator]
[that]
[false]
[true]
[(, PiePlot, ), super, ., clone, (, )]
[super, ., clone, (, )]
[super]
[clone, ., dataset, !=, null]
[clone, ., dataset]
[clone]
[null]
[clone, ., dataset, ., addChangeListener, (, clone, )]
[clone, ., dataset]
[clone]
[clone]
[this, ., urlGenerator, instanceof, PublicCloneable]
[this, ., urlGenerator]
[this]
[clone, ., urlGenerator]
[clone]
[(, PieURLGenerator, ), ObjectUtilities, ., clone, (, this, ., urlGenerator, )]
[ObjectUtilities, ., clone, (, this, ., urlGenerator, )]
[ObjectUtilities]
[this, ., urlGenerator]
[this]
[clone, ., legendItemShape]
[clone]
[ShapeUtilities, ., clone, (, this, ., legendItemShape, )]
[ShapeUtilities]
[this, ., legendItemShape]
[this]
[this, ., legendLabelGenerator, !=, null]
[this, ., legendLabelGenerator]
[this]
[null]
[clone, ., legendLabelGenerator]
[clone]
[(, PieSectionLabelGenerator, ), ObjectUtilities, ., clone, (, this, ., legendLabelGenerator, )]
[ObjectUtilities, ., clone, (, this, ., legendLabelGenerator, )]
[ObjectUtilities]
[this, ., legendLabelGenerator]
[this]
[this, ., legendLabelToolTipGenerator, !=, null]
[this, ., legendLabelToolTipGenerator]
[this]
[null]
[clone, ., legendLabelToolTipGenerator]
[clone]
[(, PieSectionLabelGenerator, ), ObjectUtilities, ., clone, (, this, ., legendLabelToolTipGenerator, )]
[ObjectUtilities, ., clone, (, this, ., legendLabelToolTipGenerator, )]
[ObjectUtilities]
[this, ., legendLabelToolTipGenerator]
[this]
[this, ., legendLabelURLGenerator, instanceof, PublicCloneable]
[this, ., legendLabelURLGenerator]
[this]
[clone, ., legendLabelURLGenerator]
[clone]
[(, PieURLGenerator, ), ObjectUtilities, ., clone, (, this, ., legendLabelURLGenerator, )]
[ObjectUtilities, ., clone, (, this, ., legendLabelURLGenerator, )]
[ObjectUtilities]
[this, ., legendLabelURLGenerator]
[this]
[clone]
[stream, ., defaultWriteObject, (, )]
[stream]
[SerialUtilities, ., writePaint, (, this, ., baseSectionPaint, ,, stream, )]
[SerialUtilities]
[this, ., baseSectionPaint]
[this]
[stream]
[SerialUtilities, ., writePaint, (, this, ., baseSectionOutlinePaint, ,, stream, )]
[SerialUtilities]
[this, ., baseSectionOutlinePaint]
[this]
[stream]
[SerialUtilities, ., writeStroke, (, this, ., baseSectionOutlineStroke, ,, stream, )]
[SerialUtilities]
[this, ., baseSectionOutlineStroke]
[this]
[stream]
[SerialUtilities, ., writePaint, (, this, ., shadowPaint, ,, stream, )]
[SerialUtilities]
[this, ., shadowPaint]
[this]
[stream]
[SerialUtilities, ., writePaint, (, this, ., labelPaint, ,, stream, )]
[SerialUtilities]
[this, ., labelPaint]
[this]
[stream]
[SerialUtilities, ., writePaint, (, this, ., labelBackgroundPaint, ,, stream, )]
[SerialUtilities]
[this, ., labelBackgroundPaint]
[this]
[stream]
[SerialUtilities, ., writePaint, (, this, ., labelOutlinePaint, ,, stream, )]
[SerialUtilities]
[this, ., labelOutlinePaint]
[this]
[stream]
[SerialUtilities, ., writeStroke, (, this, ., labelOutlineStroke, ,, stream, )]
[SerialUtilities]
[this, ., labelOutlineStroke]
[this]
[stream]
[SerialUtilities, ., writePaint, (, this, ., labelShadowPaint, ,, stream, )]
[SerialUtilities]
[this, ., labelShadowPaint]
[this]
[stream]
[SerialUtilities, ., writePaint, (, this, ., labelLinkPaint, ,, stream, )]
[SerialUtilities]
[this, ., labelLinkPaint]
[this]
[stream]
[SerialUtilities, ., writeStroke, (, this, ., labelLinkStroke, ,, stream, )]
[SerialUtilities]
[this, ., labelLinkStroke]
[this]
[stream]
[SerialUtilities, ., writeShape, (, this, ., legendItemShape, ,, stream, )]
[SerialUtilities]
[this, ., legendItemShape]
[this]
[stream]
[stream, ., defaultReadObject, (, )]
[stream]
[this, ., baseSectionPaint]
[this]
[SerialUtilities, ., readPaint, (, stream, )]
[SerialUtilities]
[stream]
[this, ., baseSectionOutlinePaint]
[this]
[SerialUtilities, ., readPaint, (, stream, )]
[SerialUtilities]
[stream]
[this, ., baseSectionOutlineStroke]
[this]
[SerialUtilities, ., readStroke, (, stream, )]
[SerialUtilities]
[stream]
[this, ., shadowPaint]
[this]
[SerialUtilities, ., readPaint, (, stream, )]
[SerialUtilities]
[stream]
[this, ., labelPaint]
[this]
[SerialUtilities, ., readPaint, (, stream, )]
[SerialUtilities]
[stream]
[this, ., labelBackgroundPaint]
[this]
[SerialUtilities, ., readPaint, (, stream, )]
[SerialUtilities]
[stream]
[this, ., labelOutlinePaint]
[this]
[SerialUtilities, ., readPaint, (, stream, )]
[SerialUtilities]
[stream]
[this, ., labelOutlineStroke]
[this]
[SerialUtilities, ., readStroke, (, stream, )]
[SerialUtilities]
[stream]
[this, ., labelShadowPaint]
[this]
[SerialUtilities, ., readPaint, (, stream, )]
[SerialUtilities]
[stream]
[this, ., labelLinkPaint]
[this]
[SerialUtilities, ., readPaint, (, stream, )]
[SerialUtilities]
[stream]
[this, ., labelLinkStroke]
[this]
[SerialUtilities, ., readStroke, (, stream, )]
[SerialUtilities]
[stream]
[this, ., legendItemShape]
[this]
[SerialUtilities, ., readShape, (, stream, )]
[SerialUtilities]
[stream]
[this, ., selectedItemAttributes]
[this]
