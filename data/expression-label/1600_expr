[Logger, ., getLogger, (, NameAnonymousFunctionsMapped, ., class, ., getName, (, ), )]
[Logger]
[NameAnonymousFunctionsMapped, ., class, ., getName, (, )]
[NameAnonymousFunctionsMapped, ., class]
['$']
["$"]
[0]
[0]
[this, ., compiler]
[this]
[compiler]
[previousMap, !=, null, ?, previousMap, ., getNewNameToOriginalNameMap, (, ), ., keySet, (, ), :, Collections, ., <, String, >, emptySet, (, )]
[previousMap, !=, null]
[previousMap]
[null]
[previousMap, ., getNewNameToOriginalNameMap, (, ), ., keySet, (, )]
[previousMap, ., getNewNameToOriginalNameMap, (, )]
[previousMap]
[Collections, ., <, String, >, emptySet, (, )]
[Collections]
[this, ., nameGenerator]
[this]
[new, NameGenerator, (, reserved, ,, PREFIX_STRING, ,, null, )]
[reserved]
[PREFIX_STRING]
[null]
[this, ., previousMap]
[this]
[previousMap]
[this, ., renameMap]
[this]
[Maps, ., newHashMap, (, )]
[Maps]
[new, AnonymousFunctionNamingCallback, (, new, MappedFunctionNamer, (, ), )]
[new, MappedFunctionNamer, (, )]
[NodeTraversal, ., traverse, (, compiler, ,, root, ,, namingCallback, )]
[NodeTraversal]
[compiler]
[root]
[namingCallback]
[logger, ., fine, (, "Named ", +, namedCount, +, " anon functions using ", +, bytesUsed, +, " bytes", )]
[logger]
["Named ", +, namedCount, +, " anon functions using ", +, bytesUsed, +, " bytes"]
["Named ", +, namedCount, +, " anon functions using ", +, bytesUsed]
["Named ", +, namedCount, +, " anon functions using "]
["Named ", +, namedCount]
["Named "]
[namedCount]
[" anon functions using "]
[bytesUsed]
[" bytes"]
[namedCount, >, 0]
[namedCount]
[0]
[compiler, ., reportCodeChange, (, )]
[compiler]
['.']
[node, ., getType, (, )]
[node]
[Token, ., NAME]
[Token]
[Token, ., STRING]
[Token]
[Token, ., STRING_KEY]
[Token]
[node, ., getString, (, )]
[node]
[new, CodePrinter, ., Builder, (, node, ), ., build, (, )]
[new, CodePrinter, ., Builder, (, node, )]
[node]
[fnNode, ., getFirstChild, (, )]
[fnNode]
[getAlternateName, (, name, )]
[name]
[fnNameNode, ., setString, (, newName, )]
[fnNameNode]
[newName]
[namedCount, ++]
[namedCount]
[bytesUsed]
[newName, ., length, (, )]
[newName]
[renameMap, ., get, (, name, )]
[renameMap]
[name]
[newName, ==, null]
[newName]
[null]
[previousMap, !=, null]
[previousMap]
[null]
[newName]
[previousMap, ., lookupNewName, (, name, )]
[previousMap]
[name]
[newName, ==, null]
[newName]
[null]
[newName]
[nameGenerator, ., generateNextName, (, )]
[nameGenerator]
[renameMap, ., put, (, name, ,, newName, )]
[renameMap]
[name]
[newName]
[newName]
[lhs, +, DELIMITER, +, rhs]
[lhs, +, DELIMITER]
[lhs]
[DELIMITER]
[rhs]
[new, VariableMap, (, ImmutableMap, ., copyOf, (, renameMap, ), )]
[ImmutableMap, ., copyOf, (, renameMap, )]
[ImmutableMap]
[renameMap]
