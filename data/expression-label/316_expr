[1856387786939865061L]
[1]
[53]
[new, Date, (, )]
[(, week, <, FIRST_WEEK_IN_YEAR, ), &&, (, week, >, LAST_WEEK_IN_YEAR, )]
[(, week, <, FIRST_WEEK_IN_YEAR, )]
[week, <, FIRST_WEEK_IN_YEAR]
[week]
[FIRST_WEEK_IN_YEAR]
[(, week, >, LAST_WEEK_IN_YEAR, )]
[week, >, LAST_WEEK_IN_YEAR]
[week]
[LAST_WEEK_IN_YEAR]
[new, IllegalArgumentException, (, "The 'week' argument must be in the range 1 - 53.", )]
["The 'week' argument must be in the range 1 - 53."]
[this, ., week]
[this]
[(, byte, ), week]
[week]
[this, ., year]
[this]
[(, short, ), year]
[year]
[peg, (, Calendar, ., getInstance, (, ), )]
[Calendar, ., getInstance, (, )]
[Calendar]
[(, week, <, FIRST_WEEK_IN_YEAR, ), &&, (, week, >, LAST_WEEK_IN_YEAR, )]
[(, week, <, FIRST_WEEK_IN_YEAR, )]
[week, <, FIRST_WEEK_IN_YEAR]
[week]
[FIRST_WEEK_IN_YEAR]
[(, week, >, LAST_WEEK_IN_YEAR, )]
[week, >, LAST_WEEK_IN_YEAR]
[week]
[LAST_WEEK_IN_YEAR]
[new, IllegalArgumentException, (, "The 'week' argument must be in the range 1 - 53.", )]
["The 'week' argument must be in the range 1 - 53."]
[this, ., week]
[this]
[(, byte, ), week]
[week]
[this, ., year]
[this]
[(, short, ), year, ., getYear, (, )]
[year, ., getYear, (, )]
[year]
[peg, (, Calendar, ., getInstance, (, ), )]
[Calendar, ., getInstance, (, )]
[Calendar]
[time]
[TimeZone, ., getDefault, (, )]
[TimeZone]
[Locale, ., getDefault, (, )]
[Locale]
[time]
[zone]
[Locale, ., getDefault, (, )]
[Locale]
[time, ==, null]
[time]
[null]
[new, IllegalArgumentException, (, "Null 'time' argument.", )]
["Null 'time' argument."]
[zone, ==, null]
[zone]
[null]
[new, IllegalArgumentException, (, "Null 'zone' argument.", )]
["Null 'zone' argument."]
[locale, ==, null]
[locale]
[null]
[new, IllegalArgumentException, (, "Null 'locale' argument.", )]
["Null 'locale' argument."]
[Calendar, ., getInstance, (, zone, ,, locale, )]
[Calendar]
[zone]
[locale]
[calendar, ., setTime, (, time, )]
[calendar]
[time]
[calendar, ., get, (, Calendar, ., WEEK_OF_YEAR, )]
[calendar]
[Calendar, ., WEEK_OF_YEAR]
[Calendar]
[tempWeek, ==, 1, &&, calendar, ., get, (, Calendar, ., MONTH, ), ==, Calendar, ., DECEMBER]
[tempWeek, ==, 1]
[tempWeek]
[1]
[calendar, ., get, (, Calendar, ., MONTH, ), ==, Calendar, ., DECEMBER]
[calendar, ., get, (, Calendar, ., MONTH, )]
[calendar]
[Calendar, ., MONTH]
[Calendar]
[Calendar, ., DECEMBER]
[Calendar]
[this, ., week]
[this]
[1]
[this, ., year]
[this]
[(, short, ), (, calendar, ., get, (, Calendar, ., YEAR, ), +, 1, )]
[(, calendar, ., get, (, Calendar, ., YEAR, ), +, 1, )]
[calendar, ., get, (, Calendar, ., YEAR, ), +, 1]
[calendar, ., get, (, Calendar, ., YEAR, )]
[calendar]
[Calendar, ., YEAR]
[Calendar]
[1]
[this, ., week]
[this]
[(, byte, ), Math, ., min, (, tempWeek, ,, LAST_WEEK_IN_YEAR, )]
[Math, ., min, (, tempWeek, ,, LAST_WEEK_IN_YEAR, )]
[Math]
[tempWeek]
[LAST_WEEK_IN_YEAR]
[calendar, ., get, (, Calendar, ., YEAR, )]
[calendar]
[Calendar, ., YEAR]
[Calendar]
[calendar, ., get, (, Calendar, ., MONTH, ), ==, Calendar, ., JANUARY, &&, this, ., week, >=, 52]
[calendar, ., get, (, Calendar, ., MONTH, ), ==, Calendar, ., JANUARY]
[calendar, ., get, (, Calendar, ., MONTH, )]
[calendar]
[Calendar, ., MONTH]
[Calendar]
[Calendar, ., JANUARY]
[Calendar]
[this, ., week, >=, 52]
[this, ., week]
[this]
[52]
[yyyy, --]
[yyyy]
[this, ., year]
[this]
[(, short, ), yyyy]
[yyyy]
[peg, (, calendar, )]
[calendar]
[new, Year, (, this, ., year, )]
[this, ., year]
[this]
[this, ., year]
[this]
[this, ., week]
[this]
[this, ., firstMillisecond]
[this]
[this, ., lastMillisecond]
[this]
[this, ., firstMillisecond]
[this]
[getFirstMillisecond, (, calendar, )]
[calendar]
[this, ., lastMillisecond]
[this]
[getLastMillisecond, (, calendar, )]
[calendar]
[this, ., week, !=, FIRST_WEEK_IN_YEAR]
[this, ., week]
[this]
[FIRST_WEEK_IN_YEAR]
[result]
[new, Week, (, this, ., week, -, 1, ,, this, ., year, )]
[this, ., week, -, 1]
[this, ., week]
[this]
[1]
[this, ., year]
[this]
[this, ., year, >, 1900]
[this, ., year]
[this]
[1900]
[this, ., year, -, 1]
[this, ., year]
[this]
[1]
[Calendar, ., getInstance, (, )]
[Calendar]
[prevYearCalendar, ., set, (, yy, ,, Calendar, ., DECEMBER, ,, 31, )]
[prevYearCalendar]
[yy]
[Calendar, ., DECEMBER]
[Calendar]
[31]
[result]
[new, Week, (, prevYearCalendar, ., getActualMaximum, (, Calendar, ., WEEK_OF_YEAR, ), ,, yy, )]
[prevYearCalendar, ., getActualMaximum, (, Calendar, ., WEEK_OF_YEAR, )]
[prevYearCalendar]
[Calendar, ., WEEK_OF_YEAR]
[Calendar]
[yy]
[result]
[null]
[result]
[this, ., week, <, 52]
[this, ., week]
[this]
[52]
[result]
[new, Week, (, this, ., week, +, 1, ,, this, ., year, )]
[this, ., week, +, 1]
[this, ., week]
[this]
[1]
[this, ., year]
[this]
[Calendar, ., getInstance, (, )]
[Calendar]
[calendar, ., set, (, this, ., year, ,, Calendar, ., DECEMBER, ,, 31, )]
[calendar]
[this, ., year]
[this]
[Calendar, ., DECEMBER]
[Calendar]
[31]
[calendar, ., getActualMaximum, (, Calendar, ., WEEK_OF_YEAR, )]
[calendar]
[Calendar, ., WEEK_OF_YEAR]
[Calendar]
[this, ., week, <, actualMaxWeek]
[this, ., week]
[this]
[actualMaxWeek]
[result]
[new, Week, (, this, ., week, +, 1, ,, this, ., year, )]
[this, ., week, +, 1]
[this, ., week]
[this]
[1]
[this, ., year]
[this]
[this, ., year, <, 9999]
[this, ., year]
[this]
[9999]
[result]
[new, Week, (, FIRST_WEEK_IN_YEAR, ,, this, ., year, +, 1, )]
[FIRST_WEEK_IN_YEAR]
[this, ., year, +, 1]
[this, ., year]
[this]
[1]
[result]
[null]
[result]
[this, ., year, *, 53L, +, this, ., week]
[this, ., year, *, 53L]
[this, ., year]
[this]
[53L]
[this, ., week]
[this]
[(, Calendar, ), calendar, ., clone, (, )]
[calendar, ., clone, (, )]
[calendar]
[c, ., clear, (, )]
[c]
[c, ., set, (, Calendar, ., YEAR, ,, this, ., year, )]
[c]
[Calendar, ., YEAR]
[Calendar]
[this, ., year]
[this]
[c, ., set, (, Calendar, ., WEEK_OF_YEAR, ,, this, ., week, )]
[c]
[Calendar, ., WEEK_OF_YEAR]
[Calendar]
[this, ., week]
[this]
[c, ., set, (, Calendar, ., DAY_OF_WEEK, ,, c, ., getFirstDayOfWeek, (, ), )]
[c]
[Calendar, ., DAY_OF_WEEK]
[Calendar]
[c, ., getFirstDayOfWeek, (, )]
[c]
[c, ., set, (, Calendar, ., HOUR, ,, 0, )]
[c]
[Calendar, ., HOUR]
[Calendar]
[0]
[c, ., set, (, Calendar, ., MINUTE, ,, 0, )]
[c]
[Calendar, ., MINUTE]
[Calendar]
[0]
[c, ., set, (, Calendar, ., SECOND, ,, 0, )]
[c]
[Calendar, ., SECOND]
[Calendar]
[0]
[c, ., set, (, Calendar, ., MILLISECOND, ,, 0, )]
[c]
[Calendar, ., MILLISECOND]
[Calendar]
[0]
[c, ., getTime, (, ), ., getTime, (, )]
[c, ., getTime, (, )]
[c]
[(, Calendar, ), calendar, ., clone, (, )]
[calendar, ., clone, (, )]
[calendar]
[c, ., clear, (, )]
[c]
[c, ., set, (, Calendar, ., YEAR, ,, this, ., year, )]
[c]
[Calendar, ., YEAR]
[Calendar]
[this, ., year]
[this]
[c, ., set, (, Calendar, ., WEEK_OF_YEAR, ,, this, ., week, +, 1, )]
[c]
[Calendar, ., WEEK_OF_YEAR]
[Calendar]
[this, ., week, +, 1]
[this, ., week]
[this]
[1]
[c, ., set, (, Calendar, ., DAY_OF_WEEK, ,, c, ., getFirstDayOfWeek, (, ), )]
[c]
[Calendar, ., DAY_OF_WEEK]
[Calendar]
[c, ., getFirstDayOfWeek, (, )]
[c]
[c, ., set, (, Calendar, ., HOUR, ,, 0, )]
[c]
[Calendar, ., HOUR]
[Calendar]
[0]
[c, ., set, (, Calendar, ., MINUTE, ,, 0, )]
[c]
[Calendar, ., MINUTE]
[Calendar]
[0]
[c, ., set, (, Calendar, ., SECOND, ,, 0, )]
[c]
[Calendar, ., SECOND]
[Calendar]
[0]
[c, ., set, (, Calendar, ., MILLISECOND, ,, 0, )]
[c]
[Calendar, ., MILLISECOND]
[Calendar]
[0]
[c, ., getTime, (, ), ., getTime, (, ), -, 1]
[c, ., getTime, (, ), ., getTime, (, )]
[c, ., getTime, (, )]
[c]
[1]
["Week ", +, this, ., week, +, ", ", +, this, ., year]
["Week ", +, this, ., week, +, ", "]
["Week ", +, this, ., week]
["Week "]
[this, ., week]
[this]
[", "]
[this, ., year]
[this]
[obj, ==, this]
[obj]
[this]
[true]
[!, (, obj, instanceof, Week, )]
[(, obj, instanceof, Week, )]
[obj, instanceof, Week]
[obj]
[false]
[(, Week, ), obj]
[obj]
[this, ., week, !=, that, ., week]
[this, ., week]
[this]
[that, ., week]
[that]
[false]
[this, ., year, !=, that, ., year]
[this, ., year]
[this]
[that, ., year]
[that]
[false]
[true]
[17]
[result]
[37, *, result, +, this, ., week]
[37, *, result]
[37]
[result]
[this, ., week]
[this]
[result]
[37, *, result, +, this, ., year]
[37, *, result]
[37]
[result]
[this, ., year]
[this]
[result]
[o1, instanceof, Week]
[o1]
[(, Week, ), o1]
[o1]
[result]
[this, ., year, -, w, ., getYear, (, ), ., getYear, (, )]
[this, ., year]
[this]
[w, ., getYear, (, ), ., getYear, (, )]
[w, ., getYear, (, )]
[w]
[result, ==, 0]
[result]
[0]
[result]
[this, ., week, -, w, ., getWeek, (, )]
[this, ., week]
[this]
[w, ., getWeek, (, )]
[w]
[o1, instanceof, RegularTimePeriod]
[o1]
[result]
[0]
[result]
[1]
[result]
[null]
[s, !=, null]
[s]
[null]
[s]
[s, ., trim, (, )]
[s]
[Week, ., findSeparator, (, s, )]
[Week]
[s]
[i, !=, -, 1]
[i]
[-, 1]
[1]
[s, ., substring, (, 0, ,, i, ), ., trim, (, )]
[s, ., substring, (, 0, ,, i, )]
[s]
[0]
[i]
[s, ., substring, (, i, +, 1, ,, s, ., length, (, ), ), ., trim, (, )]
[s, ., substring, (, i, +, 1, ,, s, ., length, (, ), )]
[s]
[i, +, 1]
[i]
[1]
[s, ., length, (, )]
[s]
[Week, ., evaluateAsYear, (, s1, )]
[Week]
[s1]
[y, !=, null]
[y]
[null]
[w]
[Week, ., stringToWeek, (, s2, )]
[Week]
[s2]
[w, ==, -, 1]
[w]
[-, 1]
[1]
[new, TimePeriodFormatException, (, "Can't evaluate the week.", )]
["Can't evaluate the week."]
[result]
[new, Week, (, w, ,, y, )]
[w]
[y]
[y]
[Week, ., evaluateAsYear, (, s2, )]
[Week]
[s2]
[y, !=, null]
[y]
[null]
[w]
[Week, ., stringToWeek, (, s1, )]
[Week]
[s1]
[w, ==, -, 1]
[w]
[-, 1]
[1]
[new, TimePeriodFormatException, (, "Can't evaluate the week.", )]
["Can't evaluate the week."]
[result]
[new, Week, (, w, ,, y, )]
[w]
[y]
[new, TimePeriodFormatException, (, "Can't evaluate the year.", )]
["Can't evaluate the year."]
[new, TimePeriodFormatException, (, "Could not find separator.", )]
["Could not find separator."]
[result]
[s, ., indexOf, (, '-', )]
[s]
['-']
[result, ==, -, 1]
[result]
[-, 1]
[1]
[result]
[s, ., indexOf, (, ',', )]
[s]
[',']
[result, ==, -, 1]
[result]
[-, 1]
[1]
[result]
[s, ., indexOf, (, ' ', )]
[s]
[' ']
[result, ==, -, 1]
[result]
[-, 1]
[1]
[result]
[s, ., indexOf, (, '.', )]
[s]
['.']
[result]
[null]
[result]
[Year, ., parseYear, (, s, )]
[Year]
[s]
[result]
[-, 1]
[1]
[s]
[s, ., replace, (, 'W', ,, ' ', )]
[s]
['W']
[' ']
[s]
[s, ., trim, (, )]
[s]
[result]
[Integer, ., parseInt, (, s, )]
[Integer]
[s]
[(, result, <, 1, ), ||, (, result, >, LAST_WEEK_IN_YEAR, )]
[(, result, <, 1, )]
[result, <, 1]
[result]
[1]
[(, result, >, LAST_WEEK_IN_YEAR, )]
[result, >, LAST_WEEK_IN_YEAR]
[result]
[LAST_WEEK_IN_YEAR]
[result]
[-, 1]
[1]
[result]
