["x-"]
[10]
[1e-12]
[-, 1369660067587938365L]
[1369660067587938365L]
[new, ArrayList, <, String, >, (, )]
[f]
[constraints]
[goalType]
[restrictToNonNegative]
[epsilon]
[DEFAULT_ULPS]
[this, ., f]
[this]
[f]
[this, ., constraints]
[this]
[normalizeConstraints, (, constraints, )]
[constraints]
[this, ., restrictToNonNegative]
[this]
[restrictToNonNegative]
[this, ., epsilon]
[this]
[epsilon]
[this, ., maxUlps]
[this]
[maxUlps]
[this, ., numDecisionVariables]
[this]
[f, ., getCoefficients, (, ), ., getDimension, (, ), +, (, restrictToNonNegative, ?, 0, :, 1, )]
[f, ., getCoefficients, (, ), ., getDimension, (, )]
[f, ., getCoefficients, (, )]
[f]
[(, restrictToNonNegative, ?, 0, :, 1, )]
[restrictToNonNegative, ?, 0, :, 1]
[restrictToNonNegative]
[0]
[1]
[this, ., numSlackVariables]
[this]
[getConstraintTypeCounts, (, Relationship, ., LEQ, ), +, getConstraintTypeCounts, (, Relationship, ., GEQ, )]
[getConstraintTypeCounts, (, Relationship, ., LEQ, )]
[Relationship, ., LEQ]
[Relationship]
[getConstraintTypeCounts, (, Relationship, ., GEQ, )]
[Relationship, ., GEQ]
[Relationship]
[this, ., numArtificialVariables]
[this]
[getConstraintTypeCounts, (, Relationship, ., EQ, ), +, getConstraintTypeCounts, (, Relationship, ., GEQ, )]
[getConstraintTypeCounts, (, Relationship, ., EQ, )]
[Relationship, ., EQ]
[Relationship]
[getConstraintTypeCounts, (, Relationship, ., GEQ, )]
[Relationship, ., GEQ]
[Relationship]
[this, ., tableau]
[this]
[createTableau, (, goalType, ==, GoalType, ., MAXIMIZE, )]
[goalType, ==, GoalType, ., MAXIMIZE]
[goalType]
[GoalType, ., MAXIMIZE]
[GoalType]
[initializeColumnLabels, (, )]
[getNumObjectiveFunctions, (, ), ==, 2]
[getNumObjectiveFunctions, (, )]
[2]
[columnLabels, ., add, (, "W", )]
[columnLabels]
["W"]
[columnLabels, ., add, (, "Z", )]
[columnLabels]
["Z"]
[0]
[i, <, getOriginalNumDecisionVariables, (, )]
[i]
[getOriginalNumDecisionVariables, (, )]
[i, ++]
[i]
[columnLabels, ., add, (, "x", +, i, )]
[columnLabels]
["x", +, i]
["x"]
[i]
[!, restrictToNonNegative]
[restrictToNonNegative]
[columnLabels, ., add, (, NEGATIVE_VAR_COLUMN_LABEL, )]
[columnLabels]
[NEGATIVE_VAR_COLUMN_LABEL]
[0]
[i, <, getNumSlackVariables, (, )]
[i]
[getNumSlackVariables, (, )]
[i, ++]
[i]
[columnLabels, ., add, (, "s", +, i, )]
[columnLabels]
["s", +, i]
["s"]
[i]
[0]
[i, <, getNumArtificialVariables, (, )]
[i]
[getNumArtificialVariables, (, )]
[i, ++]
[i]
[columnLabels, ., add, (, "a", +, i, )]
[columnLabels]
["a", +, i]
["a"]
[i]
[columnLabels, ., add, (, "RHS", )]
[columnLabels]
["RHS"]
[numDecisionVariables, +, numSlackVariables, +, numArtificialVariables, +, getNumObjectiveFunctions, (, ), +, 1]
[numDecisionVariables, +, numSlackVariables, +, numArtificialVariables, +, getNumObjectiveFunctions, (, )]
[numDecisionVariables, +, numSlackVariables, +, numArtificialVariables]
[numDecisionVariables, +, numSlackVariables]
[numDecisionVariables]
[numSlackVariables]
[numArtificialVariables]
[getNumObjectiveFunctions, (, )]
[1]
[constraints, ., size, (, ), +, getNumObjectiveFunctions, (, )]
[constraints, ., size, (, )]
[constraints]
[getNumObjectiveFunctions, (, )]
[new, Array2DRowRealMatrix, (, height, ,, width, )]
[height]
[width]
[getNumObjectiveFunctions, (, ), ==, 2]
[getNumObjectiveFunctions, (, )]
[2]
[matrix, ., setEntry, (, 0, ,, 0, ,, -, 1, )]
[matrix]
[0]
[0]
[-, 1]
[1]
[(, getNumObjectiveFunctions, (, ), ==, 1, ), ?, 0, :, 1]
[(, getNumObjectiveFunctions, (, ), ==, 1, )]
[getNumObjectiveFunctions, (, ), ==, 1]
[getNumObjectiveFunctions, (, )]
[1]
[0]
[1]
[matrix, ., setEntry, (, zIndex, ,, zIndex, ,, maximize, ?, 1, :, -, 1, )]
[matrix]
[zIndex]
[zIndex]
[maximize, ?, 1, :, -, 1]
[maximize]
[1]
[-, 1]
[1]
[maximize, ?, f, ., getCoefficients, (, ), ., mapMultiply, (, -, 1, ), :, f, ., getCoefficients, (, )]
[maximize]
[f, ., getCoefficients, (, ), ., mapMultiply, (, -, 1, )]
[f, ., getCoefficients, (, )]
[f]
[-, 1]
[1]
[f, ., getCoefficients, (, )]
[f]
[copyArray, (, objectiveCoefficients, ., toArray, (, ), ,, matrix, ., getDataRef, (, ), [, zIndex, ], )]
[objectiveCoefficients, ., toArray, (, )]
[objectiveCoefficients]
[matrix, ., getDataRef, (, ), [, zIndex, ]]
[matrix, ., getDataRef, (, )]
[matrix]
[zIndex]
[matrix, ., setEntry, (, zIndex, ,, width, -, 1, ,, maximize, ?, f, ., getConstantTerm, (, ), :, -, 1, *, f, ., getConstantTerm, (, ), )]
[matrix]
[zIndex]
[width, -, 1]
[width]
[1]
[maximize, ?, f, ., getConstantTerm, (, ), :, -, 1, *, f, ., getConstantTerm, (, )]
[maximize]
[f, ., getConstantTerm, (, )]
[f]
[-, 1, *, f, ., getConstantTerm, (, )]
[-, 1]
[1]
[f, ., getConstantTerm, (, )]
[f]
[!, restrictToNonNegative]
[restrictToNonNegative]
[matrix, ., setEntry, (, zIndex, ,, getSlackVariableOffset, (, ), -, 1, ,, getInvertedCoefficientSum, (, objectiveCoefficients, ), )]
[matrix]
[zIndex]
[getSlackVariableOffset, (, ), -, 1]
[getSlackVariableOffset, (, )]
[1]
[getInvertedCoefficientSum, (, objectiveCoefficients, )]
[objectiveCoefficients]
[0]
[0]
[0]
[i, <, constraints, ., size, (, )]
[i]
[constraints, ., size, (, )]
[constraints]
[i, ++]
[i]
[constraints, ., get, (, i, )]
[constraints]
[i]
[getNumObjectiveFunctions, (, ), +, i]
[getNumObjectiveFunctions, (, )]
[i]
[copyArray, (, constraint, ., getCoefficients, (, ), ., toArray, (, ), ,, matrix, ., getDataRef, (, ), [, row, ], )]
[constraint, ., getCoefficients, (, ), ., toArray, (, )]
[constraint, ., getCoefficients, (, )]
[constraint]
[matrix, ., getDataRef, (, ), [, row, ]]
[matrix, ., getDataRef, (, )]
[matrix]
[row]
[!, restrictToNonNegative]
[restrictToNonNegative]
[matrix, ., setEntry, (, row, ,, getSlackVariableOffset, (, ), -, 1, ,, getInvertedCoefficientSum, (, constraint, ., getCoefficients, (, ), ), )]
[matrix]
[row]
[getSlackVariableOffset, (, ), -, 1]
[getSlackVariableOffset, (, )]
[1]
[getInvertedCoefficientSum, (, constraint, ., getCoefficients, (, ), )]
[constraint, ., getCoefficients, (, )]
[constraint]
[matrix, ., setEntry, (, row, ,, width, -, 1, ,, constraint, ., getValue, (, ), )]
[matrix]
[row]
[width, -, 1]
[width]
[1]
[constraint, ., getValue, (, )]
[constraint]
[constraint, ., getRelationship, (, ), ==, Relationship, ., LEQ]
[constraint, ., getRelationship, (, )]
[constraint]
[Relationship, ., LEQ]
[Relationship]
[matrix, ., setEntry, (, row, ,, getSlackVariableOffset, (, ), +, slackVar, ++, ,, 1, )]
[matrix]
[row]
[getSlackVariableOffset, (, ), +, slackVar, ++]
[getSlackVariableOffset, (, )]
[slackVar, ++]
[slackVar]
[1]
[constraint, ., getRelationship, (, ), ==, Relationship, ., GEQ]
[constraint, ., getRelationship, (, )]
[constraint]
[Relationship, ., GEQ]
[Relationship]
[matrix, ., setEntry, (, row, ,, getSlackVariableOffset, (, ), +, slackVar, ++, ,, -, 1, )]
[matrix]
[row]
[getSlackVariableOffset, (, ), +, slackVar, ++]
[getSlackVariableOffset, (, )]
[slackVar, ++]
[slackVar]
[-, 1]
[1]
[(, constraint, ., getRelationship, (, ), ==, Relationship, ., EQ, ), ||, (, constraint, ., getRelationship, (, ), ==, Relationship, ., GEQ, )]
[(, constraint, ., getRelationship, (, ), ==, Relationship, ., EQ, )]
[constraint, ., getRelationship, (, ), ==, Relationship, ., EQ]
[constraint, ., getRelationship, (, )]
[constraint]
[Relationship, ., EQ]
[Relationship]
[(, constraint, ., getRelationship, (, ), ==, Relationship, ., GEQ, )]
[constraint, ., getRelationship, (, ), ==, Relationship, ., GEQ]
[constraint, ., getRelationship, (, )]
[constraint]
[Relationship, ., GEQ]
[Relationship]
[matrix, ., setEntry, (, 0, ,, getArtificialVariableOffset, (, ), +, artificialVar, ,, 1, )]
[matrix]
[0]
[getArtificialVariableOffset, (, ), +, artificialVar]
[getArtificialVariableOffset, (, )]
[artificialVar]
[1]
[matrix, ., setEntry, (, row, ,, getArtificialVariableOffset, (, ), +, artificialVar, ++, ,, 1, )]
[matrix]
[row]
[getArtificialVariableOffset, (, ), +, artificialVar, ++]
[getArtificialVariableOffset, (, )]
[artificialVar, ++]
[artificialVar]
[1]
[matrix, ., setRowVector, (, 0, ,, matrix, ., getRowVector, (, 0, ), ., subtract, (, matrix, ., getRowVector, (, row, ), ), )]
[matrix]
[0]
[matrix, ., getRowVector, (, 0, ), ., subtract, (, matrix, ., getRowVector, (, row, ), )]
[matrix, ., getRowVector, (, 0, )]
[matrix]
[0]
[matrix, ., getRowVector, (, row, )]
[matrix]
[row]
[matrix]
[new, ArrayList, <, LinearConstraint, >, (, originalConstraints, ., size, (, ), )]
[originalConstraints, ., size, (, )]
[originalConstraints]
[originalConstraints]
[normalized, ., add, (, normalize, (, constraint, ), )]
[normalized]
[normalize, (, constraint, )]
[constraint]
[normalized]
[constraint, ., getValue, (, ), <, 0]
[constraint, ., getValue, (, )]
[constraint]
[0]
[new, LinearConstraint, (, constraint, ., getCoefficients, (, ), ., mapMultiply, (, -, 1, ), ,, constraint, ., getRelationship, (, ), ., oppositeRelationship, (, ), ,, -, 1, *, constraint, ., getValue, (, ), )]
[constraint, ., getCoefficients, (, ), ., mapMultiply, (, -, 1, )]
[constraint, ., getCoefficients, (, )]
[constraint]
[-, 1]
[1]
[constraint, ., getRelationship, (, ), ., oppositeRelationship, (, )]
[constraint, ., getRelationship, (, )]
[constraint]
[-, 1, *, constraint, ., getValue, (, )]
[-, 1]
[1]
[constraint, ., getValue, (, )]
[constraint]
[new, LinearConstraint, (, constraint, ., getCoefficients, (, ), ,, constraint, ., getRelationship, (, ), ,, constraint, ., getValue, (, ), )]
[constraint, ., getCoefficients, (, )]
[constraint]
[constraint, ., getRelationship, (, )]
[constraint]
[constraint, ., getValue, (, )]
[constraint]
[this, ., numArtificialVariables, >, 0, ?, 2, :, 1]
[this, ., numArtificialVariables, >, 0]
[this, ., numArtificialVariables]
[this]
[0]
[2]
[1]
[0]
[constraints]
[constraint, ., getRelationship, (, ), ==, relationship]
[constraint, ., getRelationship, (, )]
[constraint]
[relationship]
[++, count]
[count]
[count]
[0]
[coefficients, ., toArray, (, )]
[coefficients]
[sum]
[coefficient]
[sum]
[null]
[0]
[i, <, getHeight, (, )]
[i]
[getHeight, (, )]
[i, ++]
[i]
[getEntry, (, i, ,, col, )]
[i]
[col]
[Precision, ., equals, (, entry, ,, 1d, ,, maxUlps, ), &&, (, row, ==, null, )]
[Precision, ., equals, (, entry, ,, 1d, ,, maxUlps, )]
[Precision]
[entry]
[1d]
[maxUlps]
[(, row, ==, null, )]
[row, ==, null]
[row]
[null]
[row]
[i]
[!, Precision, ., equals, (, entry, ,, 0d, ,, maxUlps, )]
[Precision, ., equals, (, entry, ,, 0d, ,, maxUlps, )]
[Precision]
[entry]
[0d]
[maxUlps]
[null]
[row]
[getNumObjectiveFunctions, (, ), ==, 1]
[getNumObjectiveFunctions, (, )]
[1]
[new, TreeSet, <, Integer, >, (, )]
[columnsToDrop, ., add, (, 0, )]
[columnsToDrop]
[0]
[getNumObjectiveFunctions, (, )]
[i, <, getArtificialVariableOffset, (, )]
[i]
[getArtificialVariableOffset, (, )]
[i, ++]
[i]
[tableau, ., getEntry, (, 0, ,, i, )]
[tableau]
[0]
[i]
[Precision, ., compareTo, (, entry, ,, 0d, ,, epsilon, ), >, 0]
[Precision, ., compareTo, (, entry, ,, 0d, ,, epsilon, )]
[Precision]
[entry]
[0d]
[epsilon]
[0]
[columnsToDrop, ., add, (, i, )]
[columnsToDrop]
[i]
[0]
[i, <, getNumArtificialVariables, (, )]
[i]
[getNumArtificialVariables, (, )]
[i, ++]
[i]
[i, +, getArtificialVariableOffset, (, )]
[i]
[getArtificialVariableOffset, (, )]
[getBasicRow, (, col, ), ==, null]
[getBasicRow, (, col, )]
[col]
[null]
[columnsToDrop, ., add, (, col, )]
[columnsToDrop]
[col]
[new, double, [, getHeight, (, ), -, 1, ], [, getWidth, (, ), -, columnsToDrop, ., size, (, ), ]]
[getHeight, (, ), -, 1]
[getHeight, (, )]
[1]
[getWidth, (, ), -, columnsToDrop, ., size, (, )]
[getWidth, (, )]
[columnsToDrop, ., size, (, )]
[columnsToDrop]
[1]
[i, <, getHeight, (, )]
[i]
[getHeight, (, )]
[i, ++]
[i]
[0]
[0]
[j, <, getWidth, (, )]
[j]
[getWidth, (, )]
[j, ++]
[j]
[!, columnsToDrop, ., contains, (, j, )]
[columnsToDrop, ., contains, (, j, )]
[columnsToDrop]
[j]
[matrix, [, i, -, 1, ], [, col, ++, ]]
[matrix, [, i, -, 1, ]]
[matrix]
[i, -, 1]
[i]
[1]
[col, ++]
[col]
[tableau, ., getEntry, (, i, ,, j, )]
[tableau]
[i]
[j]
[columnsToDrop, ., toArray, (, new, Integer, [, columnsToDrop, ., size, (, ), ], )]
[columnsToDrop]
[new, Integer, [, columnsToDrop, ., size, (, ), ]]
[columnsToDrop, ., size, (, )]
[columnsToDrop]
[drop, ., length, -, 1]
[drop, ., length]
[drop]
[1]
[i, >=, 0]
[i]
[0]
[i, --]
[i]
[columnLabels, ., remove, (, (, int, ), drop, [, i, ], )]
[columnLabels]
[(, int, ), drop, [, i, ]]
[drop, [, i, ]]
[drop]
[i]
[this, ., tableau]
[this]
[new, Array2DRowRealMatrix, (, matrix, )]
[matrix]
[this, ., numArtificialVariables]
[this]
[0]
[System, ., arraycopy, (, src, ,, 0, ,, dest, ,, getNumObjectiveFunctions, (, ), ,, src, ., length, )]
[System]
[src]
[0]
[dest]
[getNumObjectiveFunctions, (, )]
[src, ., length]
[src]
[getNumObjectiveFunctions, (, )]
[i, <, getWidth, (, ), -, 1]
[i]
[getWidth, (, ), -, 1]
[getWidth, (, )]
[1]
[i, ++]
[i]
[tableau, ., getEntry, (, 0, ,, i, )]
[tableau]
[0]
[i]
[Precision, ., compareTo, (, entry, ,, 0d, ,, epsilon, ), <, 0]
[Precision, ., compareTo, (, entry, ,, 0d, ,, epsilon, )]
[Precision]
[entry]
[0d]
[epsilon]
[0]
[false]
[true]
[columnLabels, ., indexOf, (, NEGATIVE_VAR_COLUMN_LABEL, )]
[columnLabels]
[NEGATIVE_VAR_COLUMN_LABEL]
[negativeVarColumn, >, 0, ?, getBasicRow, (, negativeVarColumn, ), :, null]
[negativeVarColumn, >, 0]
[negativeVarColumn]
[0]
[getBasicRow, (, negativeVarColumn, )]
[negativeVarColumn]
[null]
[negativeVarBasicRow, ==, null, ?, 0, :, getEntry, (, negativeVarBasicRow, ,, getRhsOffset, (, ), )]
[negativeVarBasicRow, ==, null]
[negativeVarBasicRow]
[null]
[0]
[getEntry, (, negativeVarBasicRow, ,, getRhsOffset, (, ), )]
[negativeVarBasicRow]
[getRhsOffset, (, )]
[new, HashSet, <, Integer, >, (, )]
[new, double, [, getOriginalNumDecisionVariables, (, ), ]]
[getOriginalNumDecisionVariables, (, )]
[0]
[i, <, coefficients, ., length]
[i]
[coefficients, ., length]
[coefficients]
[i, ++]
[i]
[columnLabels, ., indexOf, (, "x", +, i, )]
[columnLabels]
["x", +, i]
["x"]
[i]
[colIndex, <, 0]
[colIndex]
[0]
[coefficients, [, i, ]]
[coefficients]
[i]
[0]
[getBasicRow, (, colIndex, )]
[colIndex]
[basicRow, !=, null, &&, basicRow, ==, 0]
[basicRow, !=, null]
[basicRow]
[null]
[basicRow, ==, 0]
[basicRow]
[0]
[coefficients, [, i, ]]
[coefficients]
[i]
[0]
[basicRows, ., contains, (, basicRow, )]
[basicRows]
[basicRow]
[coefficients, [, i, ]]
[coefficients]
[i]
[0, -, (, restrictToNonNegative, ?, 0, :, mostNegative, )]
[0]
[(, restrictToNonNegative, ?, 0, :, mostNegative, )]
[restrictToNonNegative, ?, 0, :, mostNegative]
[restrictToNonNegative]
[0]
[mostNegative]
[basicRows, ., add, (, basicRow, )]
[basicRows]
[basicRow]
[coefficients, [, i, ]]
[coefficients]
[i]
[(, basicRow, ==, null, ?, 0, :, getEntry, (, basicRow, ,, getRhsOffset, (, ), ), ), -, (, restrictToNonNegative, ?, 0, :, mostNegative, )]
[(, basicRow, ==, null, ?, 0, :, getEntry, (, basicRow, ,, getRhsOffset, (, ), ), )]
[basicRow, ==, null, ?, 0, :, getEntry, (, basicRow, ,, getRhsOffset, (, ), )]
[basicRow, ==, null]
[basicRow]
[null]
[0]
[getEntry, (, basicRow, ,, getRhsOffset, (, ), )]
[basicRow]
[getRhsOffset, (, )]
[(, restrictToNonNegative, ?, 0, :, mostNegative, )]
[restrictToNonNegative, ?, 0, :, mostNegative]
[restrictToNonNegative]
[0]
[mostNegative]
[new, PointValuePair, (, coefficients, ,, f, ., getValue, (, coefficients, ), )]
[coefficients]
[f, ., getValue, (, coefficients, )]
[f]
[coefficients]
[0]
[j, <, getWidth, (, )]
[j]
[getWidth, (, )]
[j, ++]
[j]
[tableau, ., setEntry, (, dividendRow, ,, j, ,, tableau, ., getEntry, (, dividendRow, ,, j, ), /, divisor, )]
[tableau]
[dividendRow]
[j]
[tableau, ., getEntry, (, dividendRow, ,, j, ), /, divisor]
[tableau, ., getEntry, (, dividendRow, ,, j, )]
[tableau]
[dividendRow]
[j]
[divisor]
[0]
[i, <, getWidth, (, )]
[i]
[getWidth, (, )]
[i, ++]
[i]
[tableau, ., getEntry, (, minuendRow, ,, i, ), -, tableau, ., getEntry, (, subtrahendRow, ,, i, ), *, multiple]
[tableau, ., getEntry, (, minuendRow, ,, i, )]
[tableau]
[minuendRow]
[i]
[tableau, ., getEntry, (, subtrahendRow, ,, i, ), *, multiple]
[tableau, ., getEntry, (, subtrahendRow, ,, i, )]
[tableau]
[subtrahendRow]
[i]
[multiple]
[FastMath, ., abs, (, result, ), <, CUTOFF_THRESHOLD]
[FastMath, ., abs, (, result, )]
[FastMath]
[result]
[CUTOFF_THRESHOLD]
[result]
[0.0]
[tableau, ., setEntry, (, minuendRow, ,, i, ,, result, )]
[tableau]
[minuendRow]
[i]
[result]
[tableau, ., getColumnDimension, (, )]
[tableau]
[tableau, ., getRowDimension, (, )]
[tableau]
[tableau, ., getEntry, (, row, ,, column, )]
[tableau]
[row]
[column]
[tableau, ., setEntry, (, row, ,, column, ,, value, )]
[tableau]
[row]
[column]
[value]
[getNumObjectiveFunctions, (, ), +, numDecisionVariables]
[getNumObjectiveFunctions, (, )]
[numDecisionVariables]
[getNumObjectiveFunctions, (, ), +, numDecisionVariables, +, numSlackVariables]
[getNumObjectiveFunctions, (, ), +, numDecisionVariables]
[getNumObjectiveFunctions, (, )]
[numDecisionVariables]
[numSlackVariables]
[getWidth, (, ), -, 1]
[getWidth, (, )]
[1]
[numDecisionVariables]
[f, ., getCoefficients, (, ), ., getDimension, (, )]
[f, ., getCoefficients, (, )]
[f]
[numSlackVariables]
[numArtificialVariables]
[tableau, ., getData, (, )]
[tableau]
[this, ==, other]
[this]
[other]
[true]
[other, instanceof, SimplexTableau]
[other]
[(, SimplexTableau, ), other]
[other]
[(, restrictToNonNegative, ==, rhs, ., restrictToNonNegative, ), &&, (, numDecisionVariables, ==, rhs, ., numDecisionVariables, ), &&, (, numSlackVariables, ==, rhs, ., numSlackVariables, ), &&, (, numArtificialVariables, ==, rhs, ., numArtificialVariables, ), &&, (, epsilon, ==, rhs, ., epsilon, ), &&, (, maxUlps, ==, rhs, ., maxUlps, ), &&, f, ., equals, (, rhs, ., f, ), &&, constraints, ., equals, (, rhs, ., constraints, ), &&, tableau, ., equals, (, rhs, ., tableau, )]
[(, restrictToNonNegative, ==, rhs, ., restrictToNonNegative, ), &&, (, numDecisionVariables, ==, rhs, ., numDecisionVariables, ), &&, (, numSlackVariables, ==, rhs, ., numSlackVariables, ), &&, (, numArtificialVariables, ==, rhs, ., numArtificialVariables, ), &&, (, epsilon, ==, rhs, ., epsilon, ), &&, (, maxUlps, ==, rhs, ., maxUlps, ), &&, f, ., equals, (, rhs, ., f, ), &&, constraints, ., equals, (, rhs, ., constraints, )]
[(, restrictToNonNegative, ==, rhs, ., restrictToNonNegative, ), &&, (, numDecisionVariables, ==, rhs, ., numDecisionVariables, ), &&, (, numSlackVariables, ==, rhs, ., numSlackVariables, ), &&, (, numArtificialVariables, ==, rhs, ., numArtificialVariables, ), &&, (, epsilon, ==, rhs, ., epsilon, ), &&, (, maxUlps, ==, rhs, ., maxUlps, ), &&, f, ., equals, (, rhs, ., f, )]
[(, restrictToNonNegative, ==, rhs, ., restrictToNonNegative, ), &&, (, numDecisionVariables, ==, rhs, ., numDecisionVariables, ), &&, (, numSlackVariables, ==, rhs, ., numSlackVariables, ), &&, (, numArtificialVariables, ==, rhs, ., numArtificialVariables, ), &&, (, epsilon, ==, rhs, ., epsilon, ), &&, (, maxUlps, ==, rhs, ., maxUlps, )]
[(, restrictToNonNegative, ==, rhs, ., restrictToNonNegative, ), &&, (, numDecisionVariables, ==, rhs, ., numDecisionVariables, ), &&, (, numSlackVariables, ==, rhs, ., numSlackVariables, ), &&, (, numArtificialVariables, ==, rhs, ., numArtificialVariables, ), &&, (, epsilon, ==, rhs, ., epsilon, )]
[(, restrictToNonNegative, ==, rhs, ., restrictToNonNegative, ), &&, (, numDecisionVariables, ==, rhs, ., numDecisionVariables, ), &&, (, numSlackVariables, ==, rhs, ., numSlackVariables, ), &&, (, numArtificialVariables, ==, rhs, ., numArtificialVariables, )]
[(, restrictToNonNegative, ==, rhs, ., restrictToNonNegative, ), &&, (, numDecisionVariables, ==, rhs, ., numDecisionVariables, ), &&, (, numSlackVariables, ==, rhs, ., numSlackVariables, )]
[(, restrictToNonNegative, ==, rhs, ., restrictToNonNegative, ), &&, (, numDecisionVariables, ==, rhs, ., numDecisionVariables, )]
[(, restrictToNonNegative, ==, rhs, ., restrictToNonNegative, )]
[restrictToNonNegative, ==, rhs, ., restrictToNonNegative]
[restrictToNonNegative]
[rhs, ., restrictToNonNegative]
[rhs]
[(, numDecisionVariables, ==, rhs, ., numDecisionVariables, )]
[numDecisionVariables, ==, rhs, ., numDecisionVariables]
[numDecisionVariables]
[rhs, ., numDecisionVariables]
[rhs]
[(, numSlackVariables, ==, rhs, ., numSlackVariables, )]
[numSlackVariables, ==, rhs, ., numSlackVariables]
[numSlackVariables]
[rhs, ., numSlackVariables]
[rhs]
[(, numArtificialVariables, ==, rhs, ., numArtificialVariables, )]
[numArtificialVariables, ==, rhs, ., numArtificialVariables]
[numArtificialVariables]
[rhs, ., numArtificialVariables]
[rhs]
[(, epsilon, ==, rhs, ., epsilon, )]
[epsilon, ==, rhs, ., epsilon]
[epsilon]
[rhs, ., epsilon]
[rhs]
[(, maxUlps, ==, rhs, ., maxUlps, )]
[maxUlps, ==, rhs, ., maxUlps]
[maxUlps]
[rhs, ., maxUlps]
[rhs]
[f, ., equals, (, rhs, ., f, )]
[f]
[rhs, ., f]
[rhs]
[constraints, ., equals, (, rhs, ., constraints, )]
[constraints]
[rhs, ., constraints]
[rhs]
[tableau, ., equals, (, rhs, ., tableau, )]
[tableau]
[rhs, ., tableau]
[rhs]
[false]
[Boolean, ., valueOf, (, restrictToNonNegative, ), ., hashCode, (, ), ^, numDecisionVariables, ^, numSlackVariables, ^, numArtificialVariables, ^, Double, ., valueOf, (, epsilon, ), ., hashCode, (, ), ^, maxUlps, ^, f, ., hashCode, (, ), ^, constraints, ., hashCode, (, ), ^, tableau, ., hashCode, (, )]
[Boolean, ., valueOf, (, restrictToNonNegative, ), ., hashCode, (, ), ^, numDecisionVariables, ^, numSlackVariables, ^, numArtificialVariables, ^, Double, ., valueOf, (, epsilon, ), ., hashCode, (, ), ^, maxUlps, ^, f, ., hashCode, (, ), ^, constraints, ., hashCode, (, )]
[Boolean, ., valueOf, (, restrictToNonNegative, ), ., hashCode, (, ), ^, numDecisionVariables, ^, numSlackVariables, ^, numArtificialVariables, ^, Double, ., valueOf, (, epsilon, ), ., hashCode, (, ), ^, maxUlps, ^, f, ., hashCode, (, )]
[Boolean, ., valueOf, (, restrictToNonNegative, ), ., hashCode, (, ), ^, numDecisionVariables, ^, numSlackVariables, ^, numArtificialVariables, ^, Double, ., valueOf, (, epsilon, ), ., hashCode, (, ), ^, maxUlps]
[Boolean, ., valueOf, (, restrictToNonNegative, ), ., hashCode, (, ), ^, numDecisionVariables, ^, numSlackVariables, ^, numArtificialVariables, ^, Double, ., valueOf, (, epsilon, ), ., hashCode, (, )]
[Boolean, ., valueOf, (, restrictToNonNegative, ), ., hashCode, (, ), ^, numDecisionVariables, ^, numSlackVariables, ^, numArtificialVariables]
[Boolean, ., valueOf, (, restrictToNonNegative, ), ., hashCode, (, ), ^, numDecisionVariables, ^, numSlackVariables]
[Boolean, ., valueOf, (, restrictToNonNegative, ), ., hashCode, (, ), ^, numDecisionVariables]
[Boolean, ., valueOf, (, restrictToNonNegative, ), ., hashCode, (, )]
[Boolean, ., valueOf, (, restrictToNonNegative, )]
[Boolean]
[restrictToNonNegative]
[numDecisionVariables]
[numSlackVariables]
[numArtificialVariables]
[Double, ., valueOf, (, epsilon, ), ., hashCode, (, )]
[Double, ., valueOf, (, epsilon, )]
[Double]
[epsilon]
[maxUlps]
[f, ., hashCode, (, )]
[f]
[constraints, ., hashCode, (, )]
[constraints]
[tableau, ., hashCode, (, )]
[tableau]
[oos, ., defaultWriteObject, (, )]
[oos]
[MatrixUtils, ., serializeRealMatrix, (, tableau, ,, oos, )]
[MatrixUtils]
[tableau]
[oos]
[ois, ., defaultReadObject, (, )]
[ois]
[MatrixUtils, ., deserializeRealMatrix, (, this, ,, "tableau", ,, ois, )]
[MatrixUtils]
[this]
["tableau"]
[ois]
