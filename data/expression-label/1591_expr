[calculateBoxAndWhiskerStatistics, (, values, ,, true, )]
[values]
[true]
[values, ==, null]
[values]
[null]
[new, IllegalArgumentException, (, "Null 'values' argument.", )]
["Null 'values' argument."]
[stripNullAndNaNItems]
[vlist]
[new, ArrayList, (, values, ., size, (, ), )]
[values, ., size, (, )]
[values]
[values, ., listIterator, (, )]
[values]
[iterator, ., hasNext, (, )]
[iterator]
[iterator, ., next, (, )]
[iterator]
[obj, instanceof, Number]
[obj]
[(, Number, ), obj]
[obj]
[n, ., doubleValue, (, )]
[n]
[!, Double, ., isNaN, (, v, )]
[Double, ., isNaN, (, v, )]
[Double]
[v]
[vlist, ., add, (, n, )]
[vlist]
[n]
[vlist]
[values]
[Collections, ., sort, (, vlist, )]
[Collections]
[vlist]
[Statistics, ., calculateMean, (, vlist, ,, false, )]
[Statistics]
[vlist]
[false]
[Statistics, ., calculateMedian, (, vlist, ,, false, )]
[Statistics]
[vlist]
[false]
[calculateQ1, (, vlist, )]
[vlist]
[calculateQ3, (, vlist, )]
[vlist]
[q3, -, q1]
[q3]
[q1]
[q3, +, (, interQuartileRange, *, 1.5, )]
[q3]
[(, interQuartileRange, *, 1.5, )]
[interQuartileRange, *, 1.5]
[interQuartileRange]
[1.5]
[q1, -, (, interQuartileRange, *, 1.5, )]
[q1]
[(, interQuartileRange, *, 1.5, )]
[interQuartileRange, *, 1.5]
[interQuartileRange]
[1.5]
[q3, +, (, interQuartileRange, *, 2.0, )]
[q3]
[(, interQuartileRange, *, 2.0, )]
[interQuartileRange, *, 2.0]
[interQuartileRange]
[2.0]
[q1, -, (, interQuartileRange, *, 2.0, )]
[q1]
[(, interQuartileRange, *, 2.0, )]
[interQuartileRange, *, 2.0]
[interQuartileRange]
[2.0]
[Double, ., POSITIVE_INFINITY]
[Double]
[Double, ., NEGATIVE_INFINITY]
[Double]
[Double, ., POSITIVE_INFINITY]
[Double]
[Double, ., NEGATIVE_INFINITY]
[Double]
[new, ArrayList, (, )]
[vlist, ., iterator, (, )]
[vlist]
[iterator, ., hasNext, (, )]
[iterator]
[(, Number, ), iterator, ., next, (, )]
[iterator, ., next, (, )]
[iterator]
[number, ., doubleValue, (, )]
[number]
[value, >, upperOutlierThreshold]
[value]
[upperOutlierThreshold]
[outliers, ., add, (, number, )]
[outliers]
[number]
[value, >, maxOutlier, &&, value, <=, upperFaroutThreshold]
[value, >, maxOutlier]
[value]
[maxOutlier]
[value, <=, upperFaroutThreshold]
[value]
[upperFaroutThreshold]
[maxOutlier]
[value]
[value, <, lowerOutlierThreshold]
[value]
[lowerOutlierThreshold]
[outliers, ., add, (, number, )]
[outliers]
[number]
[value, <, minOutlier, &&, value, >=, lowerFaroutThreshold]
[value, <, minOutlier]
[value]
[minOutlier]
[value, >=, lowerFaroutThreshold]
[value]
[lowerFaroutThreshold]
[minOutlier]
[value]
[minRegularValue]
[Math, ., min, (, minRegularValue, ,, value, )]
[Math]
[minRegularValue]
[value]
[maxRegularValue]
[Math, ., max, (, maxRegularValue, ,, value, )]
[Math]
[maxRegularValue]
[value]
[minOutlier]
[Math, ., min, (, minOutlier, ,, minRegularValue, )]
[Math]
[minOutlier]
[minRegularValue]
[maxOutlier]
[Math, ., max, (, maxOutlier, ,, maxRegularValue, )]
[Math]
[maxOutlier]
[maxRegularValue]
[new, BoxAndWhiskerItem, (, new, Double, (, mean, ), ,, new, Double, (, median, ), ,, new, Double, (, q1, ), ,, new, Double, (, q3, ), ,, new, Double, (, minRegularValue, ), ,, new, Double, (, maxRegularValue, ), ,, new, Double, (, minOutlier, ), ,, new, Double, (, maxOutlier, ), ,, outliers, )]
[new, Double, (, mean, )]
[mean]
[new, Double, (, median, )]
[median]
[new, Double, (, q1, )]
[q1]
[new, Double, (, q3, )]
[q3]
[new, Double, (, minRegularValue, )]
[minRegularValue]
[new, Double, (, maxRegularValue, )]
[maxRegularValue]
[new, Double, (, minOutlier, )]
[minOutlier]
[new, Double, (, maxOutlier, )]
[maxOutlier]
[outliers]
[values, ==, null]
[values]
[null]
[new, IllegalArgumentException, (, "Null 'values' argument.", )]
["Null 'values' argument."]
[Double, ., NaN]
[Double]
[values, ., size, (, )]
[values]
[count, >, 0]
[count]
[0]
[count, %, 2, ==, 1]
[count, %, 2]
[count]
[2]
[1]
[count, >, 1]
[count]
[1]
[result]
[Statistics, ., calculateMedian, (, values, ,, 0, ,, count, /, 2, )]
[Statistics]
[values]
[0]
[count, /, 2]
[count]
[2]
[result]
[Statistics, ., calculateMedian, (, values, ,, 0, ,, 0, )]
[Statistics]
[values]
[0]
[0]
[result]
[Statistics, ., calculateMedian, (, values, ,, 0, ,, count, /, 2, -, 1, )]
[Statistics]
[values]
[0]
[count, /, 2, -, 1]
[count, /, 2]
[count]
[2]
[1]
[result]
[values, ==, null]
[values]
[null]
[new, IllegalArgumentException, (, "Null 'values' argument.", )]
["Null 'values' argument."]
[Double, ., NaN]
[Double]
[values, ., size, (, )]
[values]
[count, >, 0]
[count]
[0]
[count, %, 2, ==, 1]
[count, %, 2]
[count]
[2]
[1]
[count, >, 1]
[count]
[1]
[result]
[Statistics, ., calculateMedian, (, values, ,, count, /, 2, ,, count, -, 1, )]
[Statistics]
[values]
[count, /, 2]
[count]
[2]
[count, -, 1]
[count]
[1]
[result]
[Statistics, ., calculateMedian, (, values, ,, 0, ,, 0, )]
[Statistics]
[values]
[0]
[0]
[result]
[Statistics, ., calculateMedian, (, values, ,, count, /, 2, ,, count, -, 1, )]
[Statistics]
[values]
[count, /, 2]
[count]
[2]
[count, -, 1]
[count]
[1]
[result]
