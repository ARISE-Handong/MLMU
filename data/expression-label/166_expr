[1e-6]
[-, 38038050983108802L]
[38038050983108802L]
[new, RandomDataImpl, (, )]
[SOLVER_DEFAULT_ABSOLUTE_ACCURACY]
[random]
[null]
[random]
[rng]
[probability, (, x0, ,, x1, )]
[x0]
[x1]
[x0, >, x1]
[x0]
[x1]
[new, NumberIsTooLargeException, (, LocalizedFormats, ., LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT, ,, x0, ,, x1, ,, true, )]
[LocalizedFormats, ., LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT]
[LocalizedFormats]
[x0]
[x1]
[true]
[cumulativeProbability, (, x1, ), -, cumulativeProbability, (, x0, )]
[cumulativeProbability, (, x1, )]
[x1]
[cumulativeProbability, (, x0, )]
[x0]
[p, <, 0.0, ||, p, >, 1.0]
[p, <, 0.0]
[p]
[0.0]
[p, >, 1.0]
[p]
[1.0]
[new, OutOfRangeException, (, p, ,, 0, ,, 1, )]
[p]
[0]
[1]
[getSupportLowerBound, (, )]
[p, ==, 0.0]
[p]
[0.0]
[lowerBound]
[getSupportUpperBound, (, )]
[p, ==, 1.0]
[p]
[1.0]
[upperBound]
[getNumericalMean, (, )]
[FastMath, ., sqrt, (, getNumericalVariance, (, ), )]
[FastMath]
[getNumericalVariance, (, )]
[chebyshevApplies]
[!, (, Double, ., isInfinite, (, mu, ), ||, Double, ., isNaN, (, mu, ), ||, Double, ., isInfinite, (, sig, ), ||, Double, ., isNaN, (, sig, ), )]
[(, Double, ., isInfinite, (, mu, ), ||, Double, ., isNaN, (, mu, ), ||, Double, ., isInfinite, (, sig, ), ||, Double, ., isNaN, (, sig, ), )]
[Double, ., isInfinite, (, mu, ), ||, Double, ., isNaN, (, mu, ), ||, Double, ., isInfinite, (, sig, ), ||, Double, ., isNaN, (, sig, )]
[Double, ., isInfinite, (, mu, ), ||, Double, ., isNaN, (, mu, ), ||, Double, ., isInfinite, (, sig, )]
[Double, ., isInfinite, (, mu, ), ||, Double, ., isNaN, (, mu, )]
[Double, ., isInfinite, (, mu, )]
[Double]
[mu]
[Double, ., isNaN, (, mu, )]
[Double]
[mu]
[Double, ., isInfinite, (, sig, )]
[Double]
[sig]
[Double, ., isNaN, (, sig, )]
[Double]
[sig]
[lowerBound, ==, Double, ., NEGATIVE_INFINITY]
[lowerBound]
[Double, ., NEGATIVE_INFINITY]
[Double]
[chebyshevApplies]
[lowerBound]
[mu, -, sig, *, FastMath, ., sqrt, (, (, 1., -, p, ), /, p, )]
[mu]
[sig, *, FastMath, ., sqrt, (, (, 1., -, p, ), /, p, )]
[sig]
[FastMath, ., sqrt, (, (, 1., -, p, ), /, p, )]
[FastMath]
[(, 1., -, p, ), /, p]
[(, 1., -, p, )]
[1., -, p]
[1.]
[p]
[p]
[lowerBound]
[-, 1.0]
[1.0]
[cumulativeProbability, (, lowerBound, ), >=, p]
[cumulativeProbability, (, lowerBound, )]
[lowerBound]
[p]
[lowerBound]
[2.0]
[upperBound, ==, Double, ., POSITIVE_INFINITY]
[upperBound]
[Double, ., POSITIVE_INFINITY]
[Double]
[chebyshevApplies]
[upperBound]
[mu, +, sig, *, FastMath, ., sqrt, (, p, /, (, 1., -, p, ), )]
[mu]
[sig, *, FastMath, ., sqrt, (, p, /, (, 1., -, p, ), )]
[sig]
[FastMath, ., sqrt, (, p, /, (, 1., -, p, ), )]
[FastMath]
[p, /, (, 1., -, p, )]
[p]
[(, 1., -, p, )]
[1., -, p]
[1.]
[p]
[upperBound]
[1.0]
[cumulativeProbability, (, upperBound, ), <, p]
[cumulativeProbability, (, upperBound, )]
[upperBound]
[p]
[upperBound]
[2.0]
[new, UnivariateFunction, (, ), {, public, double, value, (, final, double, x, ), {, return, cumulativeProbability, (, x, ), -, p, ;, }, }]
[cumulativeProbability, (, x, ), -, p]
[cumulativeProbability, (, x, )]
[x]
[p]
[UnivariateSolverUtils, ., solve, (, toSolve, ,, lowerBound, ,, upperBound, ,, getSolverAbsoluteAccuracy, (, ), )]
[UnivariateSolverUtils]
[toSolve]
[lowerBound]
[upperBound]
[getSolverAbsoluteAccuracy, (, )]
[!, isSupportConnected, (, )]
[isSupportConnected, (, )]
[getSolverAbsoluteAccuracy, (, )]
[x, -, dx, >=, getSupportLowerBound, (, )]
[x, -, dx]
[x]
[dx]
[getSupportLowerBound, (, )]
[cumulativeProbability, (, x, )]
[x]
[cumulativeProbability, (, x, -, dx, ), ==, px]
[cumulativeProbability, (, x, -, dx, )]
[x, -, dx]
[x]
[dx]
[px]
[upperBound]
[x]
[upperBound, -, lowerBound, >, dx]
[upperBound, -, lowerBound]
[upperBound]
[lowerBound]
[dx]
[0.5, *, (, lowerBound, +, upperBound, )]
[0.5]
[(, lowerBound, +, upperBound, )]
[lowerBound, +, upperBound]
[lowerBound]
[upperBound]
[cumulativeProbability, (, midPoint, ), <, px]
[cumulativeProbability, (, midPoint, )]
[midPoint]
[px]
[lowerBound]
[midPoint]
[upperBound]
[midPoint]
[upperBound]
[x]
[solverAbsoluteAccuracy]
[random, ., setSeed, (, seed, )]
[random]
[seed]
[randomData, ., reSeed, (, seed, )]
[randomData]
[seed]
[inverseCumulativeProbability, (, random, ., nextDouble, (, ), )]
[random, ., nextDouble, (, )]
[random]
[sampleSize, <=, 0]
[sampleSize]
[0]
[new, NotStrictlyPositiveException, (, LocalizedFormats, ., NUMBER_OF_SAMPLES, ,, sampleSize, )]
[LocalizedFormats, ., NUMBER_OF_SAMPLES]
[LocalizedFormats]
[sampleSize]
[new, double, [, sampleSize, ]]
[sampleSize]
[0]
[i, <, sampleSize]
[i]
[sampleSize]
[i, ++]
[i]
[out, [, i, ]]
[out]
[i]
[sample, (, )]
[out]
[0d]
