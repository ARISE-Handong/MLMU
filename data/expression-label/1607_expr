[5710451740920277357L]
[new, RectangleInsets, (, 2, ,, 2, ,, 2, ,, 2, )]
[2]
[2]
[2]
[2]
[new, Font, (, "Tahoma", ,, Font, ., PLAIN, ,, 10, )]
["Tahoma"]
[Font, ., PLAIN]
[Font]
[10]
[Color, ., black]
[Color]
[new, BasicStroke, (, 0.5f, )]
[0.5f]
[Color, ., gray]
[Color]
[periodClass]
[dateFormat]
[DEFAULT_INSETS]
[DEFAULT_FONT]
[DEFAULT_LABEL_PAINT]
[true]
[DEFAULT_DIVIDER_STROKE]
[DEFAULT_DIVIDER_PAINT]
[periodClass, ==, null]
[periodClass]
[null]
[new, IllegalArgumentException, (, "Null 'periodClass' argument.", )]
["Null 'periodClass' argument."]
[dateFormat, ==, null]
[dateFormat]
[null]
[new, IllegalArgumentException, (, "Null 'dateFormat' argument.", )]
["Null 'dateFormat' argument."]
[padding, ==, null]
[padding]
[null]
[new, IllegalArgumentException, (, "Null 'padding' argument.", )]
["Null 'padding' argument."]
[labelFont, ==, null]
[labelFont]
[null]
[new, IllegalArgumentException, (, "Null 'labelFont' argument.", )]
["Null 'labelFont' argument."]
[labelPaint, ==, null]
[labelPaint]
[null]
[new, IllegalArgumentException, (, "Null 'labelPaint' argument.", )]
["Null 'labelPaint' argument."]
[dividerStroke, ==, null]
[dividerStroke]
[null]
[new, IllegalArgumentException, (, "Null 'dividerStroke' argument.", )]
["Null 'dividerStroke' argument."]
[dividerPaint, ==, null]
[dividerPaint]
[null]
[new, IllegalArgumentException, (, "Null 'dividerPaint' argument.", )]
["Null 'dividerPaint' argument."]
[this, ., periodClass]
[this]
[periodClass]
[this, ., dateFormat]
[this]
[dateFormat]
[this, ., padding]
[this]
[padding]
[this, ., labelFont]
[this]
[labelFont]
[this, ., labelPaint]
[this]
[labelPaint]
[this, ., drawDividers]
[this]
[drawDividers]
[this, ., dividerStroke]
[this]
[dividerStroke]
[this, ., dividerPaint]
[this]
[dividerPaint]
[this, ., periodClass]
[this]
[this, ., dateFormat]
[this]
[this, ., padding]
[this]
[this, ., labelFont]
[this]
[this, ., labelPaint]
[this]
[this, ., drawDividers]
[this]
[this, ., dividerStroke]
[this]
[this, ., dividerPaint]
[this]
[null]
[this, ., periodClass, ., getDeclaredConstructor, (, new, Class, [, ], {, Date, ., class, ,, TimeZone, ., class, ,, Locale, ., class, }, )]
[this, ., periodClass]
[this]
[new, Class, [, ], {, Date, ., class, ,, TimeZone, ., class, ,, Locale, ., class, }]
[{, Date, ., class, ,, TimeZone, ., class, ,, Locale, ., class, }]
[Date, ., class]
[TimeZone, ., class]
[Locale, ., class]
[result]
[(, RegularTimePeriod, ), c, ., newInstance, (, new, Object, [, ], {, millisecond, ,, zone, ,, locale, }, )]
[c, ., newInstance, (, new, Object, [, ], {, millisecond, ,, zone, ,, locale, }, )]
[c]
[new, Object, [, ], {, millisecond, ,, zone, ,, locale, }]
[{, millisecond, ,, zone, ,, locale, }]
[millisecond]
[zone]
[locale]
[result]
[obj, ==, this]
[obj]
[this]
[true]
[obj, instanceof, PeriodAxisLabelInfo]
[obj]
[(, PeriodAxisLabelInfo, ), obj]
[obj]
[!, info, ., periodClass, ., equals, (, this, ., periodClass, )]
[info, ., periodClass, ., equals, (, this, ., periodClass, )]
[info, ., periodClass]
[info]
[this, ., periodClass]
[this]
[false]
[!, info, ., dateFormat, ., equals, (, this, ., dateFormat, )]
[info, ., dateFormat, ., equals, (, this, ., dateFormat, )]
[info, ., dateFormat]
[info]
[this, ., dateFormat]
[this]
[false]
[!, info, ., padding, ., equals, (, this, ., padding, )]
[info, ., padding, ., equals, (, this, ., padding, )]
[info, ., padding]
[info]
[this, ., padding]
[this]
[false]
[!, info, ., labelFont, ., equals, (, this, ., labelFont, )]
[info, ., labelFont, ., equals, (, this, ., labelFont, )]
[info, ., labelFont]
[info]
[this, ., labelFont]
[this]
[false]
[!, info, ., labelPaint, ., equals, (, this, ., labelPaint, )]
[info, ., labelPaint, ., equals, (, this, ., labelPaint, )]
[info, ., labelPaint]
[info]
[this, ., labelPaint]
[this]
[false]
[info, ., drawDividers, !=, this, ., drawDividers]
[info, ., drawDividers]
[info]
[this, ., drawDividers]
[this]
[false]
[!, info, ., dividerStroke, ., equals, (, this, ., dividerStroke, )]
[info, ., dividerStroke, ., equals, (, this, ., dividerStroke, )]
[info, ., dividerStroke]
[info]
[this, ., dividerStroke]
[this]
[false]
[!, info, ., dividerPaint, ., equals, (, this, ., dividerPaint, )]
[info, ., dividerPaint, ., equals, (, this, ., dividerPaint, )]
[info, ., dividerPaint]
[info]
[this, ., dividerPaint]
[this]
[false]
[true]
[false]
[41]
[result]
[37, *, this, ., periodClass, ., hashCode, (, )]
[37]
[this, ., periodClass, ., hashCode, (, )]
[this, ., periodClass]
[this]
[result]
[37, *, this, ., dateFormat, ., hashCode, (, )]
[37]
[this, ., dateFormat, ., hashCode, (, )]
[this, ., dateFormat]
[this]
[result]
[super, ., clone, (, )]
[super]
[stream, ., defaultWriteObject, (, )]
[stream]
[SerialUtilities, ., writePaint, (, this, ., labelPaint, ,, stream, )]
[SerialUtilities]
[this, ., labelPaint]
[this]
[stream]
[SerialUtilities, ., writeStroke, (, this, ., dividerStroke, ,, stream, )]
[SerialUtilities]
[this, ., dividerStroke]
[this]
[stream]
[SerialUtilities, ., writePaint, (, this, ., dividerPaint, ,, stream, )]
[SerialUtilities]
[this, ., dividerPaint]
[this]
[stream]
[stream, ., defaultReadObject, (, )]
[stream]
[this, ., labelPaint]
[this]
[SerialUtilities, ., readPaint, (, stream, )]
[SerialUtilities]
[stream]
[this, ., dividerStroke]
[this]
[SerialUtilities, ., readStroke, (, stream, )]
[SerialUtilities]
[stream]
[this, ., dividerPaint]
[this]
[SerialUtilities, ., readPaint, (, stream, )]
[SerialUtilities]
[stream]
