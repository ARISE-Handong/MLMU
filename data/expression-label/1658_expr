[1e-9]
[-, 8516354193418641566L]
[8516354193418641566L]
[Double, ., NaN]
[Double]
[false]
[numeratorDegreesOfFreedom]
[denominatorDegreesOfFreedom]
[DEFAULT_INVERSE_ABSOLUTE_ACCURACY]
[new, Well19937c, (, )]
[numeratorDegreesOfFreedom]
[denominatorDegreesOfFreedom]
[inverseCumAccuracy]
[rng]
[numeratorDegreesOfFreedom, <=, 0]
[numeratorDegreesOfFreedom]
[0]
[new, NotStrictlyPositiveException, (, LocalizedFormats, ., DEGREES_OF_FREEDOM, ,, numeratorDegreesOfFreedom, )]
[LocalizedFormats, ., DEGREES_OF_FREEDOM]
[LocalizedFormats]
[numeratorDegreesOfFreedom]
[denominatorDegreesOfFreedom, <=, 0]
[denominatorDegreesOfFreedom]
[0]
[new, NotStrictlyPositiveException, (, LocalizedFormats, ., DEGREES_OF_FREEDOM, ,, denominatorDegreesOfFreedom, )]
[LocalizedFormats, ., DEGREES_OF_FREEDOM]
[LocalizedFormats]
[denominatorDegreesOfFreedom]
[this, ., numeratorDegreesOfFreedom]
[this]
[numeratorDegreesOfFreedom]
[this, ., denominatorDegreesOfFreedom]
[this]
[denominatorDegreesOfFreedom]
[solverAbsoluteAccuracy]
[inverseCumAccuracy]
[numeratorDegreesOfFreedom, /, 2]
[numeratorDegreesOfFreedom]
[2]
[denominatorDegreesOfFreedom, /, 2]
[denominatorDegreesOfFreedom]
[2]
[FastMath, ., log, (, x, )]
[FastMath]
[x]
[FastMath, ., log, (, numeratorDegreesOfFreedom, )]
[FastMath]
[numeratorDegreesOfFreedom]
[FastMath, ., log, (, denominatorDegreesOfFreedom, )]
[FastMath]
[denominatorDegreesOfFreedom]
[FastMath, ., log, (, numeratorDegreesOfFreedom, *, x, +, denominatorDegreesOfFreedom, )]
[FastMath]
[numeratorDegreesOfFreedom, *, x, +, denominatorDegreesOfFreedom]
[numeratorDegreesOfFreedom, *, x]
[numeratorDegreesOfFreedom]
[x]
[denominatorDegreesOfFreedom]
[FastMath, ., exp, (, nhalf, *, logn, +, nhalf, *, logx, -, logx, +, mhalf, *, logm, -, nhalf, *, lognxm, -, mhalf, *, lognxm, -, Beta, ., logBeta, (, nhalf, ,, mhalf, ), )]
[FastMath]
[nhalf, *, logn, +, nhalf, *, logx, -, logx, +, mhalf, *, logm, -, nhalf, *, lognxm, -, mhalf, *, lognxm, -, Beta, ., logBeta, (, nhalf, ,, mhalf, )]
[nhalf, *, logn, +, nhalf, *, logx, -, logx, +, mhalf, *, logm, -, nhalf, *, lognxm, -, mhalf, *, lognxm]
[nhalf, *, logn, +, nhalf, *, logx, -, logx, +, mhalf, *, logm, -, nhalf, *, lognxm]
[nhalf, *, logn, +, nhalf, *, logx, -, logx, +, mhalf, *, logm]
[nhalf, *, logn, +, nhalf, *, logx, -, logx]
[nhalf, *, logn, +, nhalf, *, logx]
[nhalf, *, logn]
[nhalf]
[logn]
[nhalf, *, logx]
[nhalf]
[logx]
[logx]
[mhalf, *, logm]
[mhalf]
[logm]
[nhalf, *, lognxm]
[nhalf]
[lognxm]
[mhalf, *, lognxm]
[mhalf]
[lognxm]
[Beta, ., logBeta, (, nhalf, ,, mhalf, )]
[Beta]
[nhalf]
[mhalf]
[x, <=, 0]
[x]
[0]
[ret]
[0]
[numeratorDegreesOfFreedom]
[denominatorDegreesOfFreedom]
[ret]
[Beta, ., regularizedBeta, (, (, n, *, x, ), /, (, m, +, n, *, x, ), ,, 0.5, *, n, ,, 0.5, *, m, )]
[Beta]
[(, n, *, x, ), /, (, m, +, n, *, x, )]
[(, n, *, x, )]
[n, *, x]
[n]
[x]
[(, m, +, n, *, x, )]
[m, +, n, *, x]
[m]
[n, *, x]
[n]
[x]
[0.5, *, n]
[0.5]
[n]
[0.5, *, m]
[0.5]
[m]
[ret]
[numeratorDegreesOfFreedom]
[denominatorDegreesOfFreedom]
[solverAbsoluteAccuracy]
[getDenominatorDegreesOfFreedom, (, )]
[denominatorDF, >, 2]
[denominatorDF]
[2]
[denominatorDF, /, (, denominatorDF, -, 2, )]
[denominatorDF]
[(, denominatorDF, -, 2, )]
[denominatorDF, -, 2]
[denominatorDF]
[2]
[Double, ., NaN]
[Double]
[!, numericalVarianceIsCalculated]
[numericalVarianceIsCalculated]
[numericalVariance]
[calculateNumericalVariance, (, )]
[numericalVarianceIsCalculated]
[true]
[numericalVariance]
[getDenominatorDegreesOfFreedom, (, )]
[denominatorDF, >, 4]
[denominatorDF]
[4]
[getNumeratorDegreesOfFreedom, (, )]
[denominatorDF, -, 2]
[denominatorDF]
[2]
[(, 2, *, (, denominatorDF, *, denominatorDF, ), *, (, numeratorDF, +, denominatorDF, -, 2, ), ), /, (, (, numeratorDF, *, (, denomDFMinusTwo, *, denomDFMinusTwo, ), *, (, denominatorDF, -, 4, ), ), )]
[(, 2, *, (, denominatorDF, *, denominatorDF, ), *, (, numeratorDF, +, denominatorDF, -, 2, ), )]
[2, *, (, denominatorDF, *, denominatorDF, ), *, (, numeratorDF, +, denominatorDF, -, 2, )]
[2, *, (, denominatorDF, *, denominatorDF, )]
[2]
[(, denominatorDF, *, denominatorDF, )]
[denominatorDF, *, denominatorDF]
[denominatorDF]
[denominatorDF]
[(, numeratorDF, +, denominatorDF, -, 2, )]
[numeratorDF, +, denominatorDF, -, 2]
[numeratorDF, +, denominatorDF]
[numeratorDF]
[denominatorDF]
[2]
[(, (, numeratorDF, *, (, denomDFMinusTwo, *, denomDFMinusTwo, ), *, (, denominatorDF, -, 4, ), ), )]
[(, numeratorDF, *, (, denomDFMinusTwo, *, denomDFMinusTwo, ), *, (, denominatorDF, -, 4, ), )]
[numeratorDF, *, (, denomDFMinusTwo, *, denomDFMinusTwo, ), *, (, denominatorDF, -, 4, )]
[numeratorDF, *, (, denomDFMinusTwo, *, denomDFMinusTwo, )]
[numeratorDF]
[(, denomDFMinusTwo, *, denomDFMinusTwo, )]
[denomDFMinusTwo, *, denomDFMinusTwo]
[denomDFMinusTwo]
[denomDFMinusTwo]
[(, denominatorDF, -, 4, )]
[denominatorDF, -, 4]
[denominatorDF]
[4]
[Double, ., NaN]
[Double]
[0]
[Double, ., POSITIVE_INFINITY]
[Double]
[false]
[false]
[true]
