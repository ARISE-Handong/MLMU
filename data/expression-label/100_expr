[16]
[{, {, 1, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, }, ,, {, 0, ,, 0, ,, 0, ,, 0, ,, 1, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, }, ,, {, -, 3, ,, 3, ,, 0, ,, 0, ,, -, 2, ,, -, 1, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, }, ,, {, 2, ,, -, 2, ,, 0, ,, 0, ,, 1, ,, 1, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, }, ,, {, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 1, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, }, ,, {, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 1, ,, 0, ,, 0, ,, 0, }, ,, {, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, -, 3, ,, 3, ,, 0, ,, 0, ,, -, 2, ,, -, 1, ,, 0, ,, 0, }, ,, {, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 2, ,, -, 2, ,, 0, ,, 0, ,, 1, ,, 1, ,, 0, ,, 0, }, ,, {, -, 3, ,, 0, ,, 3, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, -, 2, ,, 0, ,, -, 1, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, }, ,, {, 0, ,, 0, ,, 0, ,, 0, ,, -, 3, ,, 0, ,, 3, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, -, 2, ,, 0, ,, -, 1, ,, 0, }, ,, {, 9, ,, -, 9, ,, -, 9, ,, 9, ,, 6, ,, 3, ,, -, 6, ,, -, 3, ,, 6, ,, -, 6, ,, 3, ,, -, 3, ,, 4, ,, 2, ,, 2, ,, 1, }, ,, {, -, 6, ,, 6, ,, 6, ,, -, 6, ,, -, 3, ,, -, 3, ,, 3, ,, 3, ,, -, 4, ,, 4, ,, -, 2, ,, 2, ,, -, 2, ,, -, 2, ,, -, 1, ,, -, 1, }, ,, {, 2, ,, 0, ,, -, 2, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 1, ,, 0, ,, 1, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, }, ,, {, 0, ,, 0, ,, 0, ,, 0, ,, 2, ,, 0, ,, -, 2, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 1, ,, 0, ,, 1, ,, 0, }, ,, {, -, 6, ,, 6, ,, 6, ,, -, 6, ,, -, 4, ,, -, 2, ,, 4, ,, 2, ,, -, 3, ,, 3, ,, -, 3, ,, 3, ,, -, 2, ,, -, 1, ,, -, 2, ,, -, 1, }, ,, {, 4, ,, -, 4, ,, -, 4, ,, 4, ,, 2, ,, 2, ,, -, 2, ,, -, 2, ,, 2, ,, -, 2, ,, 2, ,, -, 2, ,, 1, ,, 1, ,, 1, ,, 1, }, }]
[{, 1, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, }]
[1]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[{, 0, ,, 0, ,, 0, ,, 0, ,, 1, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, }]
[0]
[0]
[0]
[0]
[1]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[{, -, 3, ,, 3, ,, 0, ,, 0, ,, -, 2, ,, -, 1, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, }]
[-, 3]
[3]
[3]
[0]
[0]
[-, 2]
[2]
[-, 1]
[1]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[{, 2, ,, -, 2, ,, 0, ,, 0, ,, 1, ,, 1, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, }]
[2]
[-, 2]
[2]
[0]
[0]
[1]
[1]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[{, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 1, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, }]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[1]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[{, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 1, ,, 0, ,, 0, ,, 0, }]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[1]
[0]
[0]
[0]
[{, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, -, 3, ,, 3, ,, 0, ,, 0, ,, -, 2, ,, -, 1, ,, 0, ,, 0, }]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[-, 3]
[3]
[3]
[0]
[0]
[-, 2]
[2]
[-, 1]
[1]
[0]
[0]
[{, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 2, ,, -, 2, ,, 0, ,, 0, ,, 1, ,, 1, ,, 0, ,, 0, }]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[2]
[-, 2]
[2]
[0]
[0]
[1]
[1]
[0]
[0]
[{, -, 3, ,, 0, ,, 3, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, -, 2, ,, 0, ,, -, 1, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, }]
[-, 3]
[3]
[0]
[3]
[0]
[0]
[0]
[0]
[0]
[-, 2]
[2]
[0]
[-, 1]
[1]
[0]
[0]
[0]
[0]
[0]
[{, 0, ,, 0, ,, 0, ,, 0, ,, -, 3, ,, 0, ,, 3, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, -, 2, ,, 0, ,, -, 1, ,, 0, }]
[0]
[0]
[0]
[0]
[-, 3]
[3]
[0]
[3]
[0]
[0]
[0]
[0]
[0]
[-, 2]
[2]
[0]
[-, 1]
[1]
[0]
[{, 9, ,, -, 9, ,, -, 9, ,, 9, ,, 6, ,, 3, ,, -, 6, ,, -, 3, ,, 6, ,, -, 6, ,, 3, ,, -, 3, ,, 4, ,, 2, ,, 2, ,, 1, }]
[9]
[-, 9]
[9]
[-, 9]
[9]
[9]
[6]
[3]
[-, 6]
[6]
[-, 3]
[3]
[6]
[-, 6]
[6]
[3]
[-, 3]
[3]
[4]
[2]
[2]
[1]
[{, -, 6, ,, 6, ,, 6, ,, -, 6, ,, -, 3, ,, -, 3, ,, 3, ,, 3, ,, -, 4, ,, 4, ,, -, 2, ,, 2, ,, -, 2, ,, -, 2, ,, -, 1, ,, -, 1, }]
[-, 6]
[6]
[6]
[6]
[-, 6]
[6]
[-, 3]
[3]
[-, 3]
[3]
[3]
[3]
[-, 4]
[4]
[4]
[-, 2]
[2]
[2]
[-, 2]
[2]
[-, 2]
[2]
[-, 1]
[1]
[-, 1]
[1]
[{, 2, ,, 0, ,, -, 2, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 1, ,, 0, ,, 1, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, }]
[2]
[0]
[-, 2]
[2]
[0]
[0]
[0]
[0]
[0]
[1]
[0]
[1]
[0]
[0]
[0]
[0]
[0]
[{, 0, ,, 0, ,, 0, ,, 0, ,, 2, ,, 0, ,, -, 2, ,, 0, ,, 0, ,, 0, ,, 0, ,, 0, ,, 1, ,, 0, ,, 1, ,, 0, }]
[0]
[0]
[0]
[0]
[2]
[0]
[-, 2]
[2]
[0]
[0]
[0]
[0]
[0]
[1]
[0]
[1]
[0]
[{, -, 6, ,, 6, ,, 6, ,, -, 6, ,, -, 4, ,, -, 2, ,, 4, ,, 2, ,, -, 3, ,, 3, ,, -, 3, ,, 3, ,, -, 2, ,, -, 1, ,, -, 2, ,, -, 1, }]
[-, 6]
[6]
[6]
[6]
[-, 6]
[6]
[-, 4]
[4]
[-, 2]
[2]
[4]
[2]
[-, 3]
[3]
[3]
[-, 3]
[3]
[3]
[-, 2]
[2]
[-, 1]
[1]
[-, 2]
[2]
[-, 1]
[1]
[{, 4, ,, -, 4, ,, -, 4, ,, 4, ,, 2, ,, 2, ,, -, 2, ,, -, 2, ,, 2, ,, -, 2, ,, 2, ,, -, 2, ,, 1, ,, 1, ,, 1, ,, 1, }]
[4]
[-, 4]
[4]
[-, 4]
[4]
[4]
[2]
[2]
[-, 2]
[2]
[-, 2]
[2]
[2]
[-, 2]
[2]
[2]
[-, 2]
[2]
[1]
[1]
[1]
[1]
[null]
[x, ., length]
[x]
[y, ., length]
[y]
[xLen, ==, 0, ||, yLen, ==, 0, ||, f, ., length, ==, 0, ||, f, [, 0, ], ., length, ==, 0]
[xLen, ==, 0, ||, yLen, ==, 0, ||, f, ., length, ==, 0]
[xLen, ==, 0, ||, yLen, ==, 0]
[xLen, ==, 0]
[xLen]
[0]
[yLen, ==, 0]
[yLen]
[0]
[f, ., length, ==, 0]
[f, ., length]
[f]
[0]
[f, [, 0, ], ., length, ==, 0]
[f, [, 0, ], ., length]
[f, [, 0, ]]
[f]
[0]
[0]
[new, NoDataException, (, )]
[xLen, !=, f, ., length]
[xLen]
[f, ., length]
[f]
[new, DimensionMismatchException, (, xLen, ,, f, ., length, )]
[xLen]
[f, ., length]
[f]
[xLen, !=, dFdX, ., length]
[xLen]
[dFdX, ., length]
[dFdX]
[new, DimensionMismatchException, (, xLen, ,, dFdX, ., length, )]
[xLen]
[dFdX, ., length]
[dFdX]
[xLen, !=, dFdY, ., length]
[xLen]
[dFdY, ., length]
[dFdY]
[new, DimensionMismatchException, (, xLen, ,, dFdY, ., length, )]
[xLen]
[dFdY, ., length]
[dFdY]
[xLen, !=, d2FdXdY, ., length]
[xLen]
[d2FdXdY, ., length]
[d2FdXdY]
[new, DimensionMismatchException, (, xLen, ,, d2FdXdY, ., length, )]
[xLen]
[d2FdXdY, ., length]
[d2FdXdY]
[MathArrays, ., checkOrder, (, x, )]
[MathArrays]
[x]
[MathArrays, ., checkOrder, (, y, )]
[MathArrays]
[y]
[xval]
[x, ., clone, (, )]
[x]
[yval]
[y, ., clone, (, )]
[y]
[xLen, -, 1]
[xLen]
[1]
[yLen, -, 1]
[yLen]
[1]
[splines]
[new, BicubicSplineFunction, [, lastI, ], [, lastJ, ]]
[lastI]
[lastJ]
[0]
[i, <, lastI]
[i]
[lastI]
[i, ++]
[i]
[f, [, i, ], ., length, !=, yLen]
[f, [, i, ], ., length]
[f, [, i, ]]
[f]
[i]
[yLen]
[new, DimensionMismatchException, (, f, [, i, ], ., length, ,, yLen, )]
[f, [, i, ], ., length]
[f, [, i, ]]
[f]
[i]
[yLen]
[dFdX, [, i, ], ., length, !=, yLen]
[dFdX, [, i, ], ., length]
[dFdX, [, i, ]]
[dFdX]
[i]
[yLen]
[new, DimensionMismatchException, (, dFdX, [, i, ], ., length, ,, yLen, )]
[dFdX, [, i, ], ., length]
[dFdX, [, i, ]]
[dFdX]
[i]
[yLen]
[dFdY, [, i, ], ., length, !=, yLen]
[dFdY, [, i, ], ., length]
[dFdY, [, i, ]]
[dFdY]
[i]
[yLen]
[new, DimensionMismatchException, (, dFdY, [, i, ], ., length, ,, yLen, )]
[dFdY, [, i, ], ., length]
[dFdY, [, i, ]]
[dFdY]
[i]
[yLen]
[d2FdXdY, [, i, ], ., length, !=, yLen]
[d2FdXdY, [, i, ], ., length]
[d2FdXdY, [, i, ]]
[d2FdXdY]
[i]
[yLen]
[new, DimensionMismatchException, (, d2FdXdY, [, i, ], ., length, ,, yLen, )]
[d2FdXdY, [, i, ], ., length]
[d2FdXdY, [, i, ]]
[d2FdXdY]
[i]
[yLen]
[i, +, 1]
[i]
[1]
[0]
[j, <, lastJ]
[j]
[lastJ]
[j, ++]
[j]
[j, +, 1]
[j]
[1]
[new, double, [, ], {, f, [, i, ], [, j, ], ,, f, [, ip1, ], [, j, ], ,, f, [, i, ], [, jp1, ], ,, f, [, ip1, ], [, jp1, ], ,, dFdX, [, i, ], [, j, ], ,, dFdX, [, ip1, ], [, j, ], ,, dFdX, [, i, ], [, jp1, ], ,, dFdX, [, ip1, ], [, jp1, ], ,, dFdY, [, i, ], [, j, ], ,, dFdY, [, ip1, ], [, j, ], ,, dFdY, [, i, ], [, jp1, ], ,, dFdY, [, ip1, ], [, jp1, ], ,, d2FdXdY, [, i, ], [, j, ], ,, d2FdXdY, [, ip1, ], [, j, ], ,, d2FdXdY, [, i, ], [, jp1, ], ,, d2FdXdY, [, ip1, ], [, jp1, ], }]
[{, f, [, i, ], [, j, ], ,, f, [, ip1, ], [, j, ], ,, f, [, i, ], [, jp1, ], ,, f, [, ip1, ], [, jp1, ], ,, dFdX, [, i, ], [, j, ], ,, dFdX, [, ip1, ], [, j, ], ,, dFdX, [, i, ], [, jp1, ], ,, dFdX, [, ip1, ], [, jp1, ], ,, dFdY, [, i, ], [, j, ], ,, dFdY, [, ip1, ], [, j, ], ,, dFdY, [, i, ], [, jp1, ], ,, dFdY, [, ip1, ], [, jp1, ], ,, d2FdXdY, [, i, ], [, j, ], ,, d2FdXdY, [, ip1, ], [, j, ], ,, d2FdXdY, [, i, ], [, jp1, ], ,, d2FdXdY, [, ip1, ], [, jp1, ], }]
[f, [, i, ], [, j, ]]
[f, [, i, ]]
[f]
[i]
[j]
[f, [, ip1, ], [, j, ]]
[f, [, ip1, ]]
[f]
[ip1]
[j]
[f, [, i, ], [, jp1, ]]
[f, [, i, ]]
[f]
[i]
[jp1]
[f, [, ip1, ], [, jp1, ]]
[f, [, ip1, ]]
[f]
[ip1]
[jp1]
[dFdX, [, i, ], [, j, ]]
[dFdX, [, i, ]]
[dFdX]
[i]
[j]
[dFdX, [, ip1, ], [, j, ]]
[dFdX, [, ip1, ]]
[dFdX]
[ip1]
[j]
[dFdX, [, i, ], [, jp1, ]]
[dFdX, [, i, ]]
[dFdX]
[i]
[jp1]
[dFdX, [, ip1, ], [, jp1, ]]
[dFdX, [, ip1, ]]
[dFdX]
[ip1]
[jp1]
[dFdY, [, i, ], [, j, ]]
[dFdY, [, i, ]]
[dFdY]
[i]
[j]
[dFdY, [, ip1, ], [, j, ]]
[dFdY, [, ip1, ]]
[dFdY]
[ip1]
[j]
[dFdY, [, i, ], [, jp1, ]]
[dFdY, [, i, ]]
[dFdY]
[i]
[jp1]
[dFdY, [, ip1, ], [, jp1, ]]
[dFdY, [, ip1, ]]
[dFdY]
[ip1]
[jp1]
[d2FdXdY, [, i, ], [, j, ]]
[d2FdXdY, [, i, ]]
[d2FdXdY]
[i]
[j]
[d2FdXdY, [, ip1, ], [, j, ]]
[d2FdXdY, [, ip1, ]]
[d2FdXdY]
[ip1]
[j]
[d2FdXdY, [, i, ], [, jp1, ]]
[d2FdXdY, [, i, ]]
[d2FdXdY]
[i]
[jp1]
[d2FdXdY, [, ip1, ], [, jp1, ]]
[d2FdXdY, [, ip1, ]]
[d2FdXdY]
[ip1]
[jp1]
[splines, [, i, ], [, j, ]]
[splines, [, i, ]]
[splines]
[i]
[j]
[new, BicubicSplineFunction, (, computeSplineCoefficients, (, beta, ), )]
[computeSplineCoefficients, (, beta, )]
[beta]
[searchIndex, (, x, ,, xval, )]
[x]
[xval]
[searchIndex, (, y, ,, yval, )]
[y]
[yval]
[(, x, -, xval, [, i, ], ), /, (, xval, [, i, +, 1, ], -, xval, [, i, ], )]
[(, x, -, xval, [, i, ], )]
[x, -, xval, [, i, ]]
[x]
[xval, [, i, ]]
[xval]
[i]
[(, xval, [, i, +, 1, ], -, xval, [, i, ], )]
[xval, [, i, +, 1, ], -, xval, [, i, ]]
[xval, [, i, +, 1, ]]
[xval]
[i, +, 1]
[i]
[1]
[xval, [, i, ]]
[xval]
[i]
[(, y, -, yval, [, j, ], ), /, (, yval, [, j, +, 1, ], -, yval, [, j, ], )]
[(, y, -, yval, [, j, ], )]
[y, -, yval, [, j, ]]
[y]
[yval, [, j, ]]
[yval]
[j]
[(, yval, [, j, +, 1, ], -, yval, [, j, ], )]
[yval, [, j, +, 1, ], -, yval, [, j, ]]
[yval, [, j, +, 1, ]]
[yval]
[j, +, 1]
[j]
[1]
[yval, [, j, ]]
[yval]
[j]
[splines, [, i, ], [, j, ], ., value, (, xN, ,, yN, )]
[splines, [, i, ], [, j, ]]
[splines, [, i, ]]
[splines]
[i]
[j]
[xN]
[yN]
[x, <, xval, [, 0, ], ||, x, >, xval, [, xval, ., length, -, 1, ], ||, y, <, yval, [, 0, ], ||, y, >, yval, [, yval, ., length, -, 1, ]]
[x, <, xval, [, 0, ], ||, x, >, xval, [, xval, ., length, -, 1, ], ||, y, <, yval, [, 0, ]]
[x, <, xval, [, 0, ], ||, x, >, xval, [, xval, ., length, -, 1, ]]
[x, <, xval, [, 0, ]]
[x]
[xval, [, 0, ]]
[xval]
[0]
[x, >, xval, [, xval, ., length, -, 1, ]]
[x]
[xval, [, xval, ., length, -, 1, ]]
[xval]
[xval, ., length, -, 1]
[xval, ., length]
[xval]
[1]
[y, <, yval, [, 0, ]]
[y]
[yval, [, 0, ]]
[yval]
[0]
[y, >, yval, [, yval, ., length, -, 1, ]]
[y]
[yval, [, yval, ., length, -, 1, ]]
[yval]
[yval, ., length, -, 1]
[yval, ., length]
[yval]
[1]
[false]
[true]
[partialDerivative, (, 0, ,, x, ,, y, )]
[0]
[x]
[y]
[partialDerivative, (, 1, ,, x, ,, y, )]
[1]
[x]
[y]
[partialDerivative, (, 2, ,, x, ,, y, )]
[2]
[x]
[y]
[partialDerivative, (, 3, ,, x, ,, y, )]
[3]
[x]
[y]
[partialDerivative, (, 4, ,, x, ,, y, )]
[4]
[x]
[y]
[partialDerivatives, ==, null]
[partialDerivatives]
[null]
[computePartialDerivatives, (, )]
[searchIndex, (, x, ,, xval, )]
[x]
[xval]
[searchIndex, (, y, ,, yval, )]
[y]
[yval]
[(, x, -, xval, [, i, ], ), /, (, xval, [, i, +, 1, ], -, xval, [, i, ], )]
[(, x, -, xval, [, i, ], )]
[x, -, xval, [, i, ]]
[x]
[xval, [, i, ]]
[xval]
[i]
[(, xval, [, i, +, 1, ], -, xval, [, i, ], )]
[xval, [, i, +, 1, ], -, xval, [, i, ]]
[xval, [, i, +, 1, ]]
[xval]
[i, +, 1]
[i]
[1]
[xval, [, i, ]]
[xval]
[i]
[(, y, -, yval, [, j, ], ), /, (, yval, [, j, +, 1, ], -, yval, [, j, ], )]
[(, y, -, yval, [, j, ], )]
[y, -, yval, [, j, ]]
[y]
[yval, [, j, ]]
[yval]
[j]
[(, yval, [, j, +, 1, ], -, yval, [, j, ], )]
[yval, [, j, +, 1, ], -, yval, [, j, ]]
[yval, [, j, +, 1, ]]
[yval]
[j, +, 1]
[j]
[1]
[yval, [, j, ]]
[yval]
[j]
[partialDerivatives, [, which, ], [, i, ], [, j, ], ., value, (, xN, ,, yN, )]
[partialDerivatives, [, which, ], [, i, ], [, j, ]]
[partialDerivatives, [, which, ], [, i, ]]
[partialDerivatives, [, which, ]]
[partialDerivatives]
[which]
[i]
[j]
[xN]
[yN]
[xval, ., length, -, 1]
[xval, ., length]
[xval]
[1]
[yval, ., length, -, 1]
[yval, ., length]
[yval]
[1]
[partialDerivatives]
[new, BivariateFunction, [, 5, ], [, lastI, ], [, lastJ, ]]
[5]
[lastI]
[lastJ]
[0]
[i, <, lastI]
[i]
[lastI]
[i, ++]
[i]
[0]
[j, <, lastJ]
[j]
[lastJ]
[j, ++]
[j]
[splines, [, i, ], [, j, ]]
[splines, [, i, ]]
[splines]
[i]
[j]
[partialDerivatives, [, 0, ], [, i, ], [, j, ]]
[partialDerivatives, [, 0, ], [, i, ]]
[partialDerivatives, [, 0, ]]
[partialDerivatives]
[0]
[i]
[j]
[f, ., partialDerivativeX, (, )]
[f]
[partialDerivatives, [, 1, ], [, i, ], [, j, ]]
[partialDerivatives, [, 1, ], [, i, ]]
[partialDerivatives, [, 1, ]]
[partialDerivatives]
[1]
[i]
[j]
[f, ., partialDerivativeY, (, )]
[f]
[partialDerivatives, [, 2, ], [, i, ], [, j, ]]
[partialDerivatives, [, 2, ], [, i, ]]
[partialDerivatives, [, 2, ]]
[partialDerivatives]
[2]
[i]
[j]
[f, ., partialDerivativeXX, (, )]
[f]
[partialDerivatives, [, 3, ], [, i, ], [, j, ]]
[partialDerivatives, [, 3, ], [, i, ]]
[partialDerivatives, [, 3, ]]
[partialDerivatives]
[3]
[i]
[j]
[f, ., partialDerivativeYY, (, )]
[f]
[partialDerivatives, [, 4, ], [, i, ], [, j, ]]
[partialDerivatives, [, 4, ], [, i, ]]
[partialDerivatives, [, 4, ]]
[partialDerivatives]
[4]
[i]
[j]
[f, ., partialDerivativeXY, (, )]
[f]
[Arrays, ., binarySearch, (, val, ,, c, )]
[Arrays]
[val]
[c]
[r, ==, -, 1, ||, r, ==, -, val, ., length, -, 1]
[r, ==, -, 1]
[r]
[-, 1]
[1]
[r, ==, -, val, ., length, -, 1]
[r]
[-, val, ., length, -, 1]
[-, val, ., length]
[val, ., length]
[val]
[1]
[new, OutOfRangeException, (, c, ,, val, [, 0, ], ,, val, [, val, ., length, -, 1, ], )]
[c]
[val, [, 0, ]]
[val]
[0]
[val, [, val, ., length, -, 1, ]]
[val]
[val, ., length, -, 1]
[val, ., length]
[val]
[1]
[r, <, 0]
[r]
[0]
[-, r, -, 2]
[-, r]
[r]
[2]
[val, ., length, -, 1]
[val, ., length]
[val]
[1]
[r, ==, last]
[r]
[last]
[last, -, 1]
[last]
[1]
[r]
[new, double, [, NUM_COEFF, ]]
[NUM_COEFF]
[0]
[i, <, NUM_COEFF]
[i]
[NUM_COEFF]
[i, ++]
[i]
[0]
[AINV, [, i, ]]
[AINV]
[i]
[0]
[j, <, NUM_COEFF]
[j]
[NUM_COEFF]
[j, ++]
[j]
[result]
[row, [, j, ], *, beta, [, j, ]]
[row, [, j, ]]
[row]
[j]
[beta, [, j, ]]
[beta]
[j]
[a, [, i, ]]
[a]
[i]
[result]
[a]
[4]
[this, ., a]
[this]
[new, double, [, N, ], [, N, ]]
[N]
[N]
[0]
[i, <, N]
[i]
[N]
[i, ++]
[i]
[0]
[j, <, N]
[j]
[N]
[j, ++]
[j]
[this, ., a, [, i, ], [, j, ]]
[this, ., a, [, i, ]]
[this, ., a]
[this]
[i]
[j]
[a, [, i, *, N, +, j, ]]
[a]
[i, *, N, +, j]
[i, *, N]
[i]
[N]
[j]
[x, <, 0, ||, x, >, 1]
[x, <, 0]
[x]
[0]
[x, >, 1]
[x]
[1]
[new, OutOfRangeException, (, x, ,, 0, ,, 1, )]
[x]
[0]
[1]
[y, <, 0, ||, y, >, 1]
[y, <, 0]
[y]
[0]
[y, >, 1]
[y]
[1]
[new, OutOfRangeException, (, y, ,, 0, ,, 1, )]
[y]
[0]
[1]
[x, *, x]
[x]
[x]
[x2, *, x]
[x2]
[x]
[{, 1, ,, x, ,, x2, ,, x3, }]
[1]
[x]
[x2]
[x3]
[y, *, y]
[y]
[y]
[y2, *, y]
[y2]
[y]
[{, 1, ,, y, ,, y2, ,, y3, }]
[1]
[y]
[y2]
[y3]
[apply, (, pX, ,, pY, ,, a, )]
[pX]
[pY]
[a]
[0]
[0]
[i, <, N]
[i]
[N]
[i, ++]
[i]
[0]
[j, <, N]
[j]
[N]
[j, ++]
[j]
[result]
[coeff, [, i, ], [, j, ], *, pX, [, i, ], *, pY, [, j, ]]
[coeff, [, i, ], [, j, ], *, pX, [, i, ]]
[coeff, [, i, ], [, j, ]]
[coeff, [, i, ]]
[coeff]
[i]
[j]
[pX, [, i, ]]
[pX]
[i]
[pY, [, j, ]]
[pY]
[j]
[result]
[partialDerivativeX, ==, null]
[partialDerivativeX]
[null]
[computePartialDerivatives, (, )]
[partialDerivativeX]
[partialDerivativeY, ==, null]
[partialDerivativeY]
[null]
[computePartialDerivatives, (, )]
[partialDerivativeY]
[partialDerivativeXX, ==, null]
[partialDerivativeXX]
[null]
[computePartialDerivatives, (, )]
[partialDerivativeXX]
[partialDerivativeYY, ==, null]
[partialDerivativeYY]
[null]
[computePartialDerivatives, (, )]
[partialDerivativeYY]
[partialDerivativeXY, ==, null]
[partialDerivativeXY]
[null]
[computePartialDerivatives, (, )]
[partialDerivativeXY]
[new, double, [, N, ], [, N, ]]
[N]
[N]
[new, double, [, N, ], [, N, ]]
[N]
[N]
[new, double, [, N, ], [, N, ]]
[N]
[N]
[new, double, [, N, ], [, N, ]]
[N]
[N]
[new, double, [, N, ], [, N, ]]
[N]
[N]
[0]
[i, <, N]
[i]
[N]
[i, ++]
[i]
[0]
[j, <, N]
[j]
[N]
[j, ++]
[j]
[a, [, i, ], [, j, ]]
[a, [, i, ]]
[a]
[i]
[j]
[aX, [, i, ], [, j, ]]
[aX, [, i, ]]
[aX]
[i]
[j]
[i, *, c]
[i]
[c]
[aY, [, i, ], [, j, ]]
[aY, [, i, ]]
[aY]
[i]
[j]
[j, *, c]
[j]
[c]
[aXX, [, i, ], [, j, ]]
[aXX, [, i, ]]
[aXX]
[i]
[j]
[(, i, -, 1, ), *, aX, [, i, ], [, j, ]]
[(, i, -, 1, )]
[i, -, 1]
[i]
[1]
[aX, [, i, ], [, j, ]]
[aX, [, i, ]]
[aX]
[i]
[j]
[aYY, [, i, ], [, j, ]]
[aYY, [, i, ]]
[aYY]
[i]
[j]
[(, j, -, 1, ), *, aY, [, i, ], [, j, ]]
[(, j, -, 1, )]
[j, -, 1]
[j]
[1]
[aY, [, i, ], [, j, ]]
[aY, [, i, ]]
[aY]
[i]
[j]
[aXY, [, i, ], [, j, ]]
[aXY, [, i, ]]
[aXY]
[i]
[j]
[j, *, aX, [, i, ], [, j, ]]
[j]
[aX, [, i, ], [, j, ]]
[aX, [, i, ]]
[aX]
[i]
[j]
[partialDerivativeX]
[new, BivariateFunction, (, ), {, public, double, value, (, double, x, ,, double, y, ), {, final, double, x2, =, x, *, x, ;, final, double, [, ], pX, =, {, 0, ,, 1, ,, x, ,, x2, }, ;, final, double, y2, =, y, *, y, ;, final, double, y3, =, y2, *, y, ;, final, double, [, ], pY, =, {, 1, ,, y, ,, y2, ,, y3, }, ;, return, apply, (, pX, ,, pY, ,, aX, ), ;, }, }]
[x, *, x]
[x]
[x]
[{, 0, ,, 1, ,, x, ,, x2, }]
[0]
[1]
[x]
[x2]
[y, *, y]
[y]
[y]
[y2, *, y]
[y2]
[y]
[{, 1, ,, y, ,, y2, ,, y3, }]
[1]
[y]
[y2]
[y3]
[apply, (, pX, ,, pY, ,, aX, )]
[pX]
[pY]
[aX]
[partialDerivativeY]
[new, BivariateFunction, (, ), {, public, double, value, (, double, x, ,, double, y, ), {, final, double, x2, =, x, *, x, ;, final, double, x3, =, x2, *, x, ;, final, double, [, ], pX, =, {, 1, ,, x, ,, x2, ,, x3, }, ;, final, double, y2, =, y, *, y, ;, final, double, [, ], pY, =, {, 0, ,, 1, ,, y, ,, y2, }, ;, return, apply, (, pX, ,, pY, ,, aY, ), ;, }, }]
[x, *, x]
[x]
[x]
[x2, *, x]
[x2]
[x]
[{, 1, ,, x, ,, x2, ,, x3, }]
[1]
[x]
[x2]
[x3]
[y, *, y]
[y]
[y]
[{, 0, ,, 1, ,, y, ,, y2, }]
[0]
[1]
[y]
[y2]
[apply, (, pX, ,, pY, ,, aY, )]
[pX]
[pY]
[aY]
[partialDerivativeXX]
[new, BivariateFunction, (, ), {, public, double, value, (, double, x, ,, double, y, ), {, final, double, [, ], pX, =, {, 0, ,, 0, ,, 1, ,, x, }, ;, final, double, y2, =, y, *, y, ;, final, double, y3, =, y2, *, y, ;, final, double, [, ], pY, =, {, 1, ,, y, ,, y2, ,, y3, }, ;, return, apply, (, pX, ,, pY, ,, aXX, ), ;, }, }]
[{, 0, ,, 0, ,, 1, ,, x, }]
[0]
[0]
[1]
[x]
[y, *, y]
[y]
[y]
[y2, *, y]
[y2]
[y]
[{, 1, ,, y, ,, y2, ,, y3, }]
[1]
[y]
[y2]
[y3]
[apply, (, pX, ,, pY, ,, aXX, )]
[pX]
[pY]
[aXX]
[partialDerivativeYY]
[new, BivariateFunction, (, ), {, public, double, value, (, double, x, ,, double, y, ), {, final, double, x2, =, x, *, x, ;, final, double, x3, =, x2, *, x, ;, final, double, [, ], pX, =, {, 1, ,, x, ,, x2, ,, x3, }, ;, final, double, [, ], pY, =, {, 0, ,, 0, ,, 1, ,, y, }, ;, return, apply, (, pX, ,, pY, ,, aYY, ), ;, }, }]
[x, *, x]
[x]
[x]
[x2, *, x]
[x2]
[x]
[{, 1, ,, x, ,, x2, ,, x3, }]
[1]
[x]
[x2]
[x3]
[{, 0, ,, 0, ,, 1, ,, y, }]
[0]
[0]
[1]
[y]
[apply, (, pX, ,, pY, ,, aYY, )]
[pX]
[pY]
[aYY]
[partialDerivativeXY]
[new, BivariateFunction, (, ), {, public, double, value, (, double, x, ,, double, y, ), {, final, double, x2, =, x, *, x, ;, final, double, [, ], pX, =, {, 0, ,, 1, ,, x, ,, x2, }, ;, final, double, y2, =, y, *, y, ;, final, double, [, ], pY, =, {, 0, ,, 1, ,, y, ,, y2, }, ;, return, apply, (, pX, ,, pY, ,, aXY, ), ;, }, }]
[x, *, x]
[x]
[x]
[{, 0, ,, 1, ,, x, ,, x2, }]
[0]
[1]
[x]
[x2]
[y, *, y]
[y]
[y]
[{, 0, ,, 1, ,, y, ,, y2, }]
[0]
[1]
[y]
[y2]
[apply, (, pX, ,, pY, ,, aXY, )]
[pX]
[pY]
[aXY]
