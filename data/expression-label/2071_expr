[NodeUtil, ., isSymmetricOperation, (, subtree, ), ||, NodeUtil, ., isRelationalOperation, (, subtree, )]
[NodeUtil, ., isSymmetricOperation, (, subtree, )]
[NodeUtil]
[subtree]
[NodeUtil, ., isRelationalOperation, (, subtree, )]
[NodeUtil]
[subtree]
[NodeUtil, ., isImmutableValue, (, subtree, ., getLastChild, (, ), ), &&, !, NodeUtil, ., isImmutableValue, (, subtree, ., getFirstChild, (, ), )]
[NodeUtil, ., isImmutableValue, (, subtree, ., getLastChild, (, ), )]
[NodeUtil]
[subtree, ., getLastChild, (, )]
[subtree]
[!, NodeUtil, ., isImmutableValue, (, subtree, ., getFirstChild, (, ), )]
[NodeUtil, ., isImmutableValue, (, subtree, ., getFirstChild, (, ), )]
[NodeUtil]
[subtree, ., getFirstChild, (, )]
[subtree]
[NodeUtil, ., isRelationalOperation, (, subtree, )]
[NodeUtil]
[subtree]
[NodeUtil, ., getInverseOperator, (, subtree, ., getType, (, ), )]
[NodeUtil]
[subtree, ., getType, (, )]
[subtree]
[subtree, ., setType, (, inverseOperator, )]
[subtree]
[inverseOperator]
[subtree, ., getFirstChild, (, ), ., detachFromParent, (, )]
[subtree, ., getFirstChild, (, )]
[subtree]
[subtree, ., getLastChild, (, ), ., detachFromParent, (, )]
[subtree, ., getLastChild, (, )]
[subtree]
[subtree, ., addChildrenToFront, (, lastNode, )]
[subtree]
[lastNode]
[subtree, ., addChildrenToBack, (, firstNode, )]
[subtree]
[firstNode]
[reportCodeChange, (, )]
[subtree]
