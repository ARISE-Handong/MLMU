[new, Well19937c, (, )]
[components]
[rng]
[components, ., get, (, 0, ), ., getSecond, (, ), ., getDimension, (, )]
[components, ., get, (, 0, ), ., getSecond, (, )]
[components, ., get, (, 0, )]
[components]
[0]
[components, ., size, (, )]
[components]
[getDimension, (, )]
[0]
[0]
[i, <, numComp]
[i]
[numComp]
[i, ++]
[i]
[components, ., get, (, i, )]
[components]
[i]
[comp, ., getSecond, (, ), ., getDimension, (, ), !=, dim]
[comp, ., getSecond, (, ), ., getDimension, (, )]
[comp, ., getSecond, (, )]
[comp]
[dim]
[new, DimensionMismatchException, (, comp, ., getSecond, (, ), ., getDimension, (, ), ,, dim, )]
[comp, ., getSecond, (, ), ., getDimension, (, )]
[comp, ., getSecond, (, )]
[comp]
[dim]
[comp, ., getFirst, (, ), <, 0]
[comp, ., getFirst, (, )]
[comp]
[0]
[new, NotPositiveException, (, comp, ., getFirst, (, ), )]
[comp, ., getFirst, (, )]
[comp]
[weightSum]
[comp, ., getFirst, (, )]
[comp]
[Double, ., isInfinite, (, weightSum, )]
[Double]
[weightSum]
[new, MathArithmeticException, (, LocalizedFormats, ., OVERFLOW, )]
[LocalizedFormats, ., OVERFLOW]
[LocalizedFormats]
[distribution]
[new, ArrayList, <, T, >, (, )]
[weight]
[new, double, [, numComp, ]]
[numComp]
[0]
[i, <, numComp]
[i]
[numComp]
[i, ++]
[i]
[components, ., get, (, i, )]
[components]
[i]
[weight, [, i, ]]
[weight]
[i]
[comp, ., getFirst, (, ), /, weightSum]
[comp, ., getFirst, (, )]
[comp]
[weightSum]
[distribution, ., add, (, comp, ., getSecond, (, ), )]
[distribution]
[comp, ., getSecond, (, )]
[comp]
[0]
[0]
[i, <, weight, ., length]
[i]
[weight, ., length]
[weight]
[i, ++]
[i]
[p]
[weight, [, i, ], *, distribution, ., get, (, i, ), ., density, (, values, )]
[weight, [, i, ]]
[weight]
[i]
[distribution, ., get, (, i, ), ., density, (, values, )]
[distribution, ., get, (, i, )]
[distribution]
[i]
[values]
[p]
[null]
[random, ., nextDouble, (, )]
[random]
[0]
[0]
[i, <, weight, ., length]
[i]
[weight, ., length]
[weight]
[i, ++]
[i]
[sum]
[weight, [, i, ]]
[weight]
[i]
[randomValue, <=, sum]
[randomValue]
[sum]
[vals]
[distribution, ., get, (, i, ), ., sample, (, )]
[distribution, ., get, (, i, )]
[distribution]
[i]
[vals, ==, null]
[vals]
[null]
[vals]
[distribution, ., get, (, weight, ., length, -, 1, ), ., sample, (, )]
[distribution, ., get, (, weight, ., length, -, 1, )]
[distribution]
[weight, ., length, -, 1]
[weight, ., length]
[weight]
[1]
[vals]
[super, ., reseedRandomGenerator, (, seed, )]
[super]
[seed]
[0]
[i, <, distribution, ., size, (, )]
[i]
[distribution, ., size, (, )]
[distribution]
[i, ++]
[i]
[distribution, ., get, (, i, ), ., reseedRandomGenerator, (, i, +, 1, +, seed, )]
[distribution, ., get, (, i, )]
[distribution]
[i]
[i, +, 1, +, seed]
[i, +, 1]
[i]
[1]
[seed]
[new, ArrayList, <, Pair, <, Double, ,, T, >, >, (, weight, ., length, )]
[weight, ., length]
[weight]
[0]
[i, <, weight, ., length]
[i]
[weight, ., length]
[weight]
[i, ++]
[i]
[list, ., add, (, new, Pair, <, Double, ,, T, >, (, weight, [, i, ], ,, distribution, ., get, (, i, ), ), )]
[list]
[new, Pair, <, Double, ,, T, >, (, weight, [, i, ], ,, distribution, ., get, (, i, ), )]
[weight, [, i, ]]
[weight]
[i]
[distribution, ., get, (, i, )]
[distribution]
[i]
[list]
