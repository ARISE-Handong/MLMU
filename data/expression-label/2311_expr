[1]
[2]
[4]
[8]
[16]
[decimalDigits]
[true]
[this, ., radixDigits]
[this]
[(, decimalDigits, <, 13, ), ?, 4, :, (, decimalDigits, +, 3, ), /, 4]
[(, decimalDigits, <, 13, )]
[decimalDigits, <, 13]
[decimalDigits]
[13]
[4]
[(, decimalDigits, +, 3, ), /, 4]
[(, decimalDigits, +, 3, )]
[decimalDigits, +, 3]
[decimalDigits]
[3]
[4]
[this, ., rMode]
[this]
[RoundingMode, ., ROUND_HALF_EVEN]
[RoundingMode]
[this, ., ieeeFlags]
[this]
[0]
[this, ., zero]
[this]
[new, Dfp, (, this, ,, 0, )]
[this]
[0]
[this, ., one]
[this]
[new, Dfp, (, this, ,, 1, )]
[this]
[1]
[this, ., two]
[this]
[new, Dfp, (, this, ,, 2, )]
[this]
[2]
[computeConstants]
[DfpField, ., class]
[computeStringConstants, (, (, decimalDigits, <, 67, ), ?, 200, :, (, 3, *, decimalDigits, ), )]
[(, decimalDigits, <, 67, ), ?, 200, :, (, 3, *, decimalDigits, )]
[(, decimalDigits, <, 67, )]
[decimalDigits, <, 67]
[decimalDigits]
[67]
[200]
[(, 3, *, decimalDigits, )]
[3, *, decimalDigits]
[3]
[decimalDigits]
[sqr2]
[new, Dfp, (, this, ,, sqr2String, )]
[this]
[sqr2String]
[sqr2Split]
[split, (, sqr2String, )]
[sqr2String]
[sqr2Reciprocal]
[new, Dfp, (, this, ,, sqr2ReciprocalString, )]
[this]
[sqr2ReciprocalString]
[sqr3]
[new, Dfp, (, this, ,, sqr3String, )]
[this]
[sqr3String]
[sqr3Reciprocal]
[new, Dfp, (, this, ,, sqr3ReciprocalString, )]
[this]
[sqr3ReciprocalString]
[pi]
[new, Dfp, (, this, ,, piString, )]
[this]
[piString]
[piSplit]
[split, (, piString, )]
[piString]
[e]
[new, Dfp, (, this, ,, eString, )]
[this]
[eString]
[eSplit]
[split, (, eString, )]
[eString]
[ln2]
[new, Dfp, (, this, ,, ln2String, )]
[this]
[ln2String]
[ln2Split]
[split, (, ln2String, )]
[ln2String]
[ln5]
[new, Dfp, (, this, ,, ln5String, )]
[this]
[ln5String]
[ln5Split]
[split, (, ln5String, )]
[ln5String]
[ln10]
[new, Dfp, (, this, ,, ln10String, )]
[this]
[ln10String]
[sqr2]
[null]
[sqr2Split]
[null]
[sqr2Reciprocal]
[null]
[sqr3]
[null]
[sqr3Reciprocal]
[null]
[pi]
[null]
[piSplit]
[null]
[e]
[null]
[eSplit]
[null]
[ln2]
[null]
[ln2Split]
[null]
[ln5]
[null]
[ln5Split]
[null]
[ln10]
[null]
[radixDigits]
[rMode]
[mode]
[rMode]
[ieeeFlags]
[ieeeFlags]
[0]
[ieeeFlags]
[flags, &, (, FLAG_INVALID, |, FLAG_DIV_ZERO, |, FLAG_OVERFLOW, |, FLAG_UNDERFLOW, |, FLAG_INEXACT, )]
[flags]
[(, FLAG_INVALID, |, FLAG_DIV_ZERO, |, FLAG_OVERFLOW, |, FLAG_UNDERFLOW, |, FLAG_INEXACT, )]
[FLAG_INVALID, |, FLAG_DIV_ZERO, |, FLAG_OVERFLOW, |, FLAG_UNDERFLOW, |, FLAG_INEXACT]
[FLAG_INVALID, |, FLAG_DIV_ZERO, |, FLAG_OVERFLOW, |, FLAG_UNDERFLOW]
[FLAG_INVALID, |, FLAG_DIV_ZERO, |, FLAG_OVERFLOW]
[FLAG_INVALID, |, FLAG_DIV_ZERO]
[FLAG_INVALID]
[FLAG_DIV_ZERO]
[FLAG_OVERFLOW]
[FLAG_UNDERFLOW]
[FLAG_INEXACT]
[ieeeFlags]
[bits, &, (, FLAG_INVALID, |, FLAG_DIV_ZERO, |, FLAG_OVERFLOW, |, FLAG_UNDERFLOW, |, FLAG_INEXACT, )]
[bits]
[(, FLAG_INVALID, |, FLAG_DIV_ZERO, |, FLAG_OVERFLOW, |, FLAG_UNDERFLOW, |, FLAG_INEXACT, )]
[FLAG_INVALID, |, FLAG_DIV_ZERO, |, FLAG_OVERFLOW, |, FLAG_UNDERFLOW, |, FLAG_INEXACT]
[FLAG_INVALID, |, FLAG_DIV_ZERO, |, FLAG_OVERFLOW, |, FLAG_UNDERFLOW]
[FLAG_INVALID, |, FLAG_DIV_ZERO, |, FLAG_OVERFLOW]
[FLAG_INVALID, |, FLAG_DIV_ZERO]
[FLAG_INVALID]
[FLAG_DIV_ZERO]
[FLAG_OVERFLOW]
[FLAG_UNDERFLOW]
[FLAG_INEXACT]
[new, Dfp, (, this, )]
[this]
[new, Dfp, (, this, ,, x, )]
[this]
[x]
[new, Dfp, (, this, ,, x, )]
[this]
[x]
[new, Dfp, (, this, ,, x, )]
[this]
[x]
[new, Dfp, (, this, ,, x, )]
[this]
[x]
[new, Dfp, (, d, )]
[d]
[new, Dfp, (, this, ,, s, )]
[this]
[s]
[new, Dfp, (, this, ,, sign, ,, nans, )]
[this]
[sign]
[nans]
[zero]
[one]
[Dfp, ., class]
[two]
[sqr2]
[sqr2Split, ., clone, (, )]
[sqr2Split]
[sqr2Reciprocal]
[sqr3]
[sqr3Reciprocal]
[pi]
[piSplit, ., clone, (, )]
[piSplit]
[e]
[eSplit, ., clone, (, )]
[eSplit]
[ln2]
[ln2Split, ., clone, (, )]
[ln2Split]
[ln5]
[ln5Split, ., clone, (, )]
[ln5Split]
[ln10]
[new, Dfp, [, 2, ]]
[2]
[true]
[0]
[0]
[new, char, [, a, ., length, (, ), ]]
[a, ., length, (, )]
[a]
[0]
[i, <, buf, ., length]
[i]
[buf, ., length]
[buf]
[i, ++]
[i]
[buf, [, i, ]]
[buf]
[i]
[a, ., charAt, (, i, )]
[a]
[i]
[buf, [, i, ], >=, '1', &&, buf, [, i, ], <=, '9']
[buf, [, i, ], >=, '1']
[buf, [, i, ]]
[buf]
[i]
['1']
[buf, [, i, ], <=, '9']
[buf, [, i, ]]
[buf]
[i]
['9']
[leading]
[false]
[buf, [, i, ], ==, '.']
[buf, [, i, ]]
[buf]
[i]
['.']
[sig]
[(, 400, -, sig, ), %, 4]
[(, 400, -, sig, )]
[400, -, sig]
[400]
[sig]
[4]
[leading]
[false]
[sig, ==, (, radixDigits, /, 2, ), *, 4]
[sig]
[(, radixDigits, /, 2, ), *, 4]
[(, radixDigits, /, 2, )]
[radixDigits, /, 2]
[radixDigits]
[2]
[4]
[sp]
[i]
[buf, [, i, ], >=, '0', &&, buf, [, i, ], <=, '9', &&, !, leading]
[buf, [, i, ], >=, '0', &&, buf, [, i, ], <=, '9']
[buf, [, i, ], >=, '0']
[buf, [, i, ]]
[buf]
[i]
['0']
[buf, [, i, ], <=, '9']
[buf, [, i, ]]
[buf]
[i]
['9']
[!, leading]
[leading]
[sig, ++]
[sig]
[result, [, 0, ]]
[result]
[0]
[new, Dfp, (, this, ,, new, String, (, buf, ,, 0, ,, sp, ), )]
[this]
[new, String, (, buf, ,, 0, ,, sp, )]
[buf]
[0]
[sp]
[0]
[i, <, buf, ., length]
[i]
[buf, ., length]
[buf]
[i, ++]
[i]
[buf, [, i, ]]
[buf]
[i]
[a, ., charAt, (, i, )]
[a]
[i]
[buf, [, i, ], >=, '0', &&, buf, [, i, ], <=, '9', &&, i, <, sp]
[buf, [, i, ], >=, '0', &&, buf, [, i, ], <=, '9']
[buf, [, i, ], >=, '0']
[buf, [, i, ]]
[buf]
[i]
['0']
[buf, [, i, ], <=, '9']
[buf, [, i, ]]
[buf]
[i]
['9']
[i, <, sp]
[i]
[sp]
[buf, [, i, ]]
[buf]
[i]
['0']
[result, [, 1, ]]
[result]
[1]
[new, Dfp, (, this, ,, new, String, (, buf, ), )]
[this]
[new, String, (, buf, )]
[buf]
[result]
[sqr2String, ==, null, ||, sqr2String, ., length, (, ), <, highPrecisionDecimalDigits, -, 3]
[sqr2String, ==, null]
[sqr2String]
[null]
[sqr2String, ., length, (, ), <, highPrecisionDecimalDigits, -, 3]
[sqr2String, ., length, (, )]
[sqr2String]
[highPrecisionDecimalDigits, -, 3]
[highPrecisionDecimalDigits]
[3]
[new, DfpField, (, highPrecisionDecimalDigits, ,, false, )]
[highPrecisionDecimalDigits]
[false]
[new, Dfp, (, highPrecisionField, ,, 1, )]
[highPrecisionField]
[1]
[new, Dfp, (, highPrecisionField, ,, 2, )]
[highPrecisionField]
[2]
[new, Dfp, (, highPrecisionField, ,, 3, )]
[highPrecisionField]
[3]
[highPrecisionTwo, ., sqrt, (, )]
[highPrecisionTwo]
[sqr2String]
[highPrecisionSqr2, ., toString, (, )]
[highPrecisionSqr2]
[sqr2ReciprocalString]
[highPrecisionOne, ., divide, (, highPrecisionSqr2, ), ., toString, (, )]
[highPrecisionOne, ., divide, (, highPrecisionSqr2, )]
[highPrecisionOne]
[highPrecisionSqr2]
[highPrecisionThree, ., sqrt, (, )]
[highPrecisionThree]
[sqr3String]
[highPrecisionSqr3, ., toString, (, )]
[highPrecisionSqr3]
[sqr3ReciprocalString]
[highPrecisionOne, ., divide, (, highPrecisionSqr3, ), ., toString, (, )]
[highPrecisionOne, ., divide, (, highPrecisionSqr3, )]
[highPrecisionOne]
[highPrecisionSqr3]
[piString]
[computePi, (, highPrecisionOne, ,, highPrecisionTwo, ,, highPrecisionThree, ), ., toString, (, )]
[computePi, (, highPrecisionOne, ,, highPrecisionTwo, ,, highPrecisionThree, )]
[highPrecisionOne]
[highPrecisionTwo]
[highPrecisionThree]
[eString]
[computeExp, (, highPrecisionOne, ,, highPrecisionOne, ), ., toString, (, )]
[computeExp, (, highPrecisionOne, ,, highPrecisionOne, )]
[highPrecisionOne]
[highPrecisionOne]
[ln2String]
[computeLn, (, highPrecisionTwo, ,, highPrecisionOne, ,, highPrecisionTwo, ), ., toString, (, )]
[computeLn, (, highPrecisionTwo, ,, highPrecisionOne, ,, highPrecisionTwo, )]
[highPrecisionTwo]
[highPrecisionOne]
[highPrecisionTwo]
[ln5String]
[computeLn, (, new, Dfp, (, highPrecisionField, ,, 5, ), ,, highPrecisionOne, ,, highPrecisionTwo, ), ., toString, (, )]
[computeLn, (, new, Dfp, (, highPrecisionField, ,, 5, ), ,, highPrecisionOne, ,, highPrecisionTwo, )]
[new, Dfp, (, highPrecisionField, ,, 5, )]
[highPrecisionField]
[5]
[highPrecisionOne]
[highPrecisionTwo]
[ln10String]
[computeLn, (, new, Dfp, (, highPrecisionField, ,, 10, ), ,, highPrecisionOne, ,, highPrecisionTwo, ), ., toString, (, )]
[computeLn, (, new, Dfp, (, highPrecisionField, ,, 10, ), ,, highPrecisionOne, ,, highPrecisionTwo, )]
[new, Dfp, (, highPrecisionField, ,, 10, )]
[highPrecisionField]
[10]
[highPrecisionOne]
[highPrecisionTwo]
[two, ., sqrt, (, )]
[two]
[sqrt2, ., subtract, (, one, )]
[sqrt2]
[one]
[two, ., add, (, two, )]
[two]
[two]
[two]
[two, ., multiply, (, three, ., subtract, (, two, ., multiply, (, sqrt2, ), ), )]
[two]
[three, ., subtract, (, two, ., multiply, (, sqrt2, ), )]
[three]
[two, ., multiply, (, sqrt2, )]
[two]
[sqrt2]
[1]
[i, <, 20]
[i]
[20]
[i, ++]
[i]
[yk]
[yk, ., multiply, (, yk, )]
[yk]
[yk]
[one, ., subtract, (, y2, ., multiply, (, y2, ), )]
[one]
[y2, ., multiply, (, y2, )]
[y2]
[y2]
[oneMinusY4, ., sqrt, (, ), ., sqrt, (, )]
[oneMinusY4, ., sqrt, (, )]
[oneMinusY4]
[yk]
[one, ., subtract, (, s, ), ., divide, (, one, ., add, (, s, ), )]
[one, ., subtract, (, s, )]
[one]
[s]
[one, ., add, (, s, )]
[one]
[s]
[two2kp3]
[two2kp3, ., multiply, (, four, )]
[two2kp3]
[four]
[one, ., add, (, yk, )]
[one]
[yk]
[p, ., multiply, (, p, )]
[p]
[p]
[ak]
[ak, ., multiply, (, p2, ., multiply, (, p2, ), ), ., subtract, (, two2kp3, ., multiply, (, yk, ), ., multiply, (, one, ., add, (, yk, ), ., add, (, yk, ., multiply, (, yk, ), ), ), )]
[ak, ., multiply, (, p2, ., multiply, (, p2, ), )]
[ak]
[p2, ., multiply, (, p2, )]
[p2]
[p2]
[two2kp3, ., multiply, (, yk, ), ., multiply, (, one, ., add, (, yk, ), ., add, (, yk, ., multiply, (, yk, ), ), )]
[two2kp3, ., multiply, (, yk, )]
[two2kp3]
[yk]
[one, ., add, (, yk, ), ., add, (, yk, ., multiply, (, yk, ), )]
[one, ., add, (, yk, )]
[one]
[yk]
[yk, ., multiply, (, yk, )]
[yk]
[yk]
[yk, ., equals, (, ykM1, )]
[yk]
[ykM1]
[one, ., divide, (, ak, )]
[one]
[ak]
[new, Dfp, (, one, )]
[one]
[new, Dfp, (, one, )]
[one]
[new, Dfp, (, one, )]
[one]
[new, Dfp, (, one, )]
[one]
[new, Dfp, (, one, )]
[one]
[0]
[i, <, 10000]
[i]
[10000]
[i, ++]
[i]
[x]
[x, ., multiply, (, a, )]
[x]
[a]
[y]
[y, ., add, (, x, ., divide, (, f, ), )]
[y]
[x, ., divide, (, f, )]
[x]
[f]
[fi]
[fi, ., add, (, one, )]
[fi]
[one]
[f]
[f, ., multiply, (, fi, )]
[f]
[fi]
[y, ., equals, (, py, )]
[y]
[py]
[py]
[new, Dfp, (, y, )]
[y]
[y]
[1]
[a, ., add, (, new, Dfp, (, a, ., getField, (, ), ,, -, 1, ), ), ., divide, (, a, ., add, (, one, ), )]
[a, ., add, (, new, Dfp, (, a, ., getField, (, ), ,, -, 1, ), )]
[a]
[new, Dfp, (, a, ., getField, (, ), ,, -, 1, )]
[a, ., getField, (, )]
[a]
[-, 1]
[1]
[a, ., add, (, one, )]
[a]
[one]
[new, Dfp, (, x, )]
[x]
[new, Dfp, (, x, )]
[x]
[new, Dfp, (, y, )]
[y]
[0]
[i, <, 10000]
[i]
[10000]
[i, ++]
[i]
[num]
[num, ., multiply, (, x, )]
[num]
[x]
[num]
[num, ., multiply, (, x, )]
[num]
[x]
[den]
[den, +, 2]
[den]
[2]
[num, ., divide, (, den, )]
[num]
[den]
[y]
[y, ., add, (, t, )]
[y]
[t]
[y, ., equals, (, py, )]
[y]
[py]
[py]
[new, Dfp, (, y, )]
[y]
[y, ., multiply, (, two, )]
[y]
[two]
