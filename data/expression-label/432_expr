[1L]
[Sets, ., newHashSet, (, )]
[Sets]
[Sets, ., newHashSet, (, )]
[Sets]
[false]
[ast]
[ast, ., getSourceFile, (, ), ., getName, (, )]
[ast, ., getSourceFile, (, )]
[ast]
[false]
[ast]
[ast, ., getInputId, (, )]
[ast]
[isExtern]
[ast]
[new, InputId, (, inputId, )]
[inputId]
[isExtern]
[this, ., ast]
[this]
[ast]
[this, ., id]
[this]
[inputId]
[ast, !=, null, &&, ast, ., getSourceFile, (, ), !=, null]
[ast, !=, null]
[ast]
[null]
[ast, ., getSourceFile, (, ), !=, null]
[ast, ., getSourceFile, (, )]
[ast]
[null]
[ast, ., getSourceFile, (, ), ., setIsExtern, (, isExtern, )]
[ast, ., getSourceFile, (, )]
[ast]
[isExtern]
[file]
[false]
[new, JsAst, (, file, )]
[file]
[isExtern]
[id]
[id, ., getIdName, (, )]
[id]
[ast]
[new, UnsupportedOperationException, (, )]
[ast, ., getAstRoot, (, compiler, )]
[ast]
[compiler]
[root, !=, null]
[root]
[null]
[Preconditions, ., checkState, (, root, ., isScript, (, ), )]
[Preconditions]
[root, ., isScript, (, )]
[root]
[Preconditions, ., checkNotNull, (, root, ., getInputId, (, ), )]
[Preconditions]
[root, ., getInputId, (, )]
[root]
[root]
[ast, ., clearAst, (, )]
[ast]
[ast, ., getSourceFile, (, )]
[ast]
[ast, ., setSourceFile, (, file, )]
[ast]
[file]
[ast]
[this, ., compiler]
[this]
[compiler]
[Preconditions, ., checkNotNull, (, compiler, ,, "Expected setCompiler to be called first: ", +, this, )]
[Preconditions]
[compiler]
["Expected setCompiler to be called first: ", +, this]
["Expected setCompiler to be called first: "]
[this]
[Preconditions, ., checkNotNull, (, compiler, ., getErrorManager, (, ), ,, "Expected compiler to call an error manager: ", +, this, )]
[Preconditions]
[compiler, ., getErrorManager, (, )]
[compiler]
["Expected compiler to call an error manager: ", +, this]
["Expected compiler to call an error manager: "]
[this]
[checkErrorManager, (, )]
[regenerateDependencyInfoIfNecessary, (, )]
[Collections, ., <, String, >, unmodifiableSet, (, requires, )]
[Collections]
[requires]
[compiler, ., getErrorManager, (, ), ., report, (, CheckLevel, ., ERROR, ,, JSError, ., make, (, AbstractCompiler, ., READ_ERROR, ,, getName, (, ), ), )]
[compiler, ., getErrorManager, (, )]
[compiler]
[CheckLevel, ., ERROR]
[CheckLevel]
[JSError, ., make, (, AbstractCompiler, ., READ_ERROR, ,, getName, (, ), )]
[JSError]
[AbstractCompiler, ., READ_ERROR]
[AbstractCompiler]
[getName, (, )]
[ImmutableList, ., <, String, >, of, (, )]
[ImmutableList]
[checkErrorManager, (, )]
[regenerateDependencyInfoIfNecessary, (, )]
[Collections, ., <, String, >, unmodifiableSet, (, provides, )]
[Collections]
[provides]
[compiler, ., getErrorManager, (, ), ., report, (, CheckLevel, ., ERROR, ,, JSError, ., make, (, AbstractCompiler, ., READ_ERROR, ,, getName, (, ), ), )]
[compiler, ., getErrorManager, (, )]
[compiler]
[CheckLevel, ., ERROR]
[CheckLevel]
[JSError, ., make, (, AbstractCompiler, ., READ_ERROR, ,, getName, (, ), )]
[JSError]
[AbstractCompiler, ., READ_ERROR]
[AbstractCompiler]
[getName, (, )]
[ImmutableList, ., <, String, >, of, (, )]
[ImmutableList]
[getProvides, (, )]
[provides, ., add, (, provide, )]
[provides]
[provide]
[getRequires, (, )]
[requires, ., add, (, require, )]
[requires]
[require]
[getRequires, (, )]
[requires, ., remove, (, require, )]
[requires]
[require]
[!, (, ast, instanceof, JsAst, )]
[(, ast, instanceof, JsAst, )]
[ast, instanceof, JsAst]
[ast]
[Preconditions, ., checkNotNull, (, compiler, ,, "Expected setCompiler to be called first", )]
[Preconditions]
[compiler]
["Expected setCompiler to be called first"]
[new, DepsFinder, (, )]
[getAstRoot, (, compiler, )]
[compiler]
[root, ==, null]
[root]
[null]
[finder, ., visitTree, (, getAstRoot, (, compiler, ), )]
[finder]
[getAstRoot, (, compiler, )]
[compiler]
[provides, ., addAll, (, finder, ., provides, )]
[provides]
[finder, ., provides]
[finder]
[requires, ., addAll, (, finder, ., requires, )]
[requires]
[finder, ., requires]
[finder]
[!, generatedDependencyInfoFromSource]
[generatedDependencyInfoFromSource]
[(, new, JsFileParser, (, compiler, ., getErrorManager, (, ), ), ), ., setIncludeGoogBase, (, true, ), ., parseFile, (, getName, (, ), ,, getName, (, ), ,, getCode, (, ), )]
[(, new, JsFileParser, (, compiler, ., getErrorManager, (, ), ), ), ., setIncludeGoogBase, (, true, )]
[(, new, JsFileParser, (, compiler, ., getErrorManager, (, ), ), )]
[new, JsFileParser, (, compiler, ., getErrorManager, (, ), )]
[compiler, ., getErrorManager, (, )]
[compiler]
[true]
[getName, (, )]
[getName, (, )]
[getCode, (, )]
[provides, ., addAll, (, info, ., getProvides, (, ), )]
[provides]
[info, ., getProvides, (, )]
[info]
[requires, ., addAll, (, info, ., getRequires, (, ), )]
[requires]
[info, ., getRequires, (, )]
[info]
[generatedDependencyInfoFromSource]
[true]
[Lists, ., newArrayList, (, )]
[Lists]
[Lists, ., newArrayList, (, )]
[Lists]
[new, ClosureCodingConvention, (, )]
[visitSubtree, (, n, ,, null, )]
[n]
[null]
[n, ., isCall, (, )]
[n]
[codingConvention, ., extractClassNameIfRequire, (, n, ,, parent, )]
[codingConvention]
[n]
[parent]
[require, !=, null]
[require]
[null]
[requires, ., add, (, require, )]
[requires]
[require]
[codingConvention, ., extractClassNameIfProvide, (, n, ,, parent, )]
[codingConvention]
[n]
[parent]
[provide, !=, null]
[provide]
[null]
[provides, ., add, (, provide, )]
[provides]
[provide]
[parent, !=, null, &&, !, parent, ., isExprResult, (, ), &&, !, parent, ., isScript, (, )]
[parent, !=, null, &&, !, parent, ., isExprResult, (, )]
[parent, !=, null]
[parent]
[null]
[!, parent, ., isExprResult, (, )]
[parent, ., isExprResult, (, )]
[parent]
[!, parent, ., isScript, (, )]
[parent, ., isScript, (, )]
[parent]
[n, ., getFirstChild, (, )]
[n]
[child, !=, null]
[child]
[null]
[child]
[child, ., getNext, (, )]
[child]
[visitSubtree, (, child, ,, n, )]
[child]
[n]
[getSourceFile, (, ), ., getLine, (, lineNumber, )]
[getSourceFile, (, )]
[lineNumber]
[getSourceFile, (, ), ., getRegion, (, lineNumber, )]
[getSourceFile, (, )]
[lineNumber]
[getSourceFile, (, ), ., getCode, (, )]
[getSourceFile, (, )]
[module]
[Preconditions, ., checkArgument, (, module, ==, null, ||, this, ., module, ==, null, ||, this, ., module, ==, module, )]
[Preconditions]
[module, ==, null, ||, this, ., module, ==, null, ||, this, ., module, ==, module]
[module, ==, null, ||, this, ., module, ==, null]
[module, ==, null]
[module]
[null]
[this, ., module, ==, null]
[this, ., module]
[this]
[null]
[this, ., module, ==, module]
[this, ., module]
[this]
[module]
[this, ., module]
[this]
[module]
[this, ., module]
[this]
[module]
[ast, ==, null, ||, ast, ., getSourceFile, (, ), ==, null]
[ast, ==, null]
[ast]
[null]
[ast, ., getSourceFile, (, ), ==, null]
[ast, ., getSourceFile, (, )]
[ast]
[null]
[false]
[ast, ., getSourceFile, (, ), ., isExtern, (, )]
[ast, ., getSourceFile, (, )]
[ast]
[ast, ==, null, ||, ast, ., getSourceFile, (, ), ==, null]
[ast, ==, null]
[ast]
[null]
[ast, ., getSourceFile, (, ), ==, null]
[ast, ., getSourceFile, (, )]
[ast]
[null]
[ast, ., getSourceFile, (, ), ., setIsExtern, (, isExtern, )]
[ast, ., getSourceFile, (, )]
[ast]
[isExtern]
[ast, ., getSourceFile, (, ), ., getLineOffset, (, lineno, )]
[ast, ., getSourceFile, (, )]
[ast]
[lineno]
[ast, ., getSourceFile, (, ), ., getNumLines, (, )]
[ast, ., getSourceFile, (, )]
[ast]
[getName, (, )]
