[1e-11]
[matrix]
[DEFAULT_TOO_SMALL]
[!, matrix, ., isSquare, (, )]
[matrix, ., isSquare, (, )]
[matrix]
[new, NonSquareMatrixException, (, matrix, ., getRowDimension, (, ), ,, matrix, ., getColumnDimension, (, ), )]
[matrix, ., getRowDimension, (, )]
[matrix]
[matrix, ., getColumnDimension, (, )]
[matrix]
[matrix, ., getColumnDimension, (, )]
[matrix]
[lu]
[matrix, ., getData, (, )]
[matrix]
[pivot]
[new, int, [, m, ]]
[m]
[cachedL]
[null]
[cachedU]
[null]
[cachedP]
[null]
[0]
[row, <, m]
[row]
[m]
[row, ++]
[row]
[pivot, [, row, ]]
[pivot]
[row]
[row]
[even]
[true]
[singular]
[false]
[0]
[col, <, m]
[col]
[m]
[col, ++]
[col]
[0]
[row, <, col]
[row]
[col]
[row, ++]
[row]
[lu, [, row, ]]
[lu]
[row]
[luRow, [, col, ]]
[luRow]
[col]
[0]
[i, <, row]
[i]
[row]
[i, ++]
[i]
[sum]
[luRow, [, i, ], *, lu, [, i, ], [, col, ]]
[luRow, [, i, ]]
[luRow]
[i]
[lu, [, i, ], [, col, ]]
[lu, [, i, ]]
[lu]
[i]
[col]
[luRow, [, col, ]]
[luRow]
[col]
[sum]
[col]
[Double, ., NEGATIVE_INFINITY]
[Double]
[col]
[row, <, m]
[row]
[m]
[row, ++]
[row]
[lu, [, row, ]]
[lu]
[row]
[luRow, [, col, ]]
[luRow]
[col]
[0]
[i, <, col]
[i]
[col]
[i, ++]
[i]
[sum]
[luRow, [, i, ], *, lu, [, i, ], [, col, ]]
[luRow, [, i, ]]
[luRow]
[i]
[lu, [, i, ], [, col, ]]
[lu, [, i, ]]
[lu]
[i]
[col]
[luRow, [, col, ]]
[luRow]
[col]
[sum]
[FastMath, ., abs, (, sum, ), >, largest]
[FastMath, ., abs, (, sum, )]
[FastMath]
[sum]
[largest]
[largest]
[FastMath, ., abs, (, sum, )]
[FastMath]
[sum]
[max]
[row]
[FastMath, ., abs, (, lu, [, max, ], [, col, ], ), <, singularityThreshold]
[FastMath, ., abs, (, lu, [, max, ], [, col, ], )]
[FastMath]
[lu, [, max, ], [, col, ]]
[lu, [, max, ]]
[lu]
[max]
[col]
[singularityThreshold]
[singular]
[true]
[max, !=, col]
[max]
[col]
[0]
[lu, [, max, ]]
[lu]
[max]
[lu, [, col, ]]
[lu]
[col]
[0]
[i, <, m]
[i]
[m]
[i, ++]
[i]
[tmp]
[luMax, [, i, ]]
[luMax]
[i]
[luMax, [, i, ]]
[luMax]
[i]
[luCol, [, i, ]]
[luCol]
[i]
[luCol, [, i, ]]
[luCol]
[i]
[tmp]
[pivot, [, max, ]]
[pivot]
[max]
[pivot, [, max, ]]
[pivot]
[max]
[pivot, [, col, ]]
[pivot]
[col]
[pivot, [, col, ]]
[pivot]
[col]
[temp]
[even]
[!, even]
[even]
[lu, [, col, ], [, col, ]]
[lu, [, col, ]]
[lu]
[col]
[col]
[col, +, 1]
[col]
[1]
[row, <, m]
[row]
[m]
[row, ++]
[row]
[lu, [, row, ], [, col, ]]
[lu, [, row, ]]
[lu]
[row]
[col]
[luDiag]
[(, cachedL, ==, null, ), &&, !, singular]
[(, cachedL, ==, null, )]
[cachedL, ==, null]
[cachedL]
[null]
[!, singular]
[singular]
[pivot, ., length]
[pivot]
[cachedL]
[MatrixUtils, ., createRealMatrix, (, m, ,, m, )]
[MatrixUtils]
[m]
[m]
[0]
[i, <, m]
[i]
[m]
[++, i]
[i]
[lu, [, i, ]]
[lu]
[i]
[0]
[j, <, i]
[j]
[i]
[++, j]
[j]
[cachedL, ., setEntry, (, i, ,, j, ,, luI, [, j, ], )]
[cachedL]
[i]
[j]
[luI, [, j, ]]
[luI]
[j]
[cachedL, ., setEntry, (, i, ,, i, ,, 1.0, )]
[cachedL]
[i]
[i]
[1.0]
[cachedL]
[(, cachedU, ==, null, ), &&, !, singular]
[(, cachedU, ==, null, )]
[cachedU, ==, null]
[cachedU]
[null]
[!, singular]
[singular]
[pivot, ., length]
[pivot]
[cachedU]
[MatrixUtils, ., createRealMatrix, (, m, ,, m, )]
[MatrixUtils]
[m]
[m]
[0]
[i, <, m]
[i]
[m]
[++, i]
[i]
[lu, [, i, ]]
[lu]
[i]
[i]
[j, <, m]
[j]
[m]
[++, j]
[j]
[cachedU, ., setEntry, (, i, ,, j, ,, luI, [, j, ], )]
[cachedU]
[i]
[j]
[luI, [, j, ]]
[luI]
[j]
[cachedU]
[(, cachedP, ==, null, ), &&, !, singular]
[(, cachedP, ==, null, )]
[cachedP, ==, null]
[cachedP]
[null]
[!, singular]
[singular]
[pivot, ., length]
[pivot]
[cachedP]
[MatrixUtils, ., createRealMatrix, (, m, ,, m, )]
[MatrixUtils]
[m]
[m]
[0]
[i, <, m]
[i]
[m]
[++, i]
[i]
[cachedP, ., setEntry, (, i, ,, pivot, [, i, ], ,, 1.0, )]
[cachedP]
[i]
[pivot, [, i, ]]
[pivot]
[i]
[1.0]
[cachedP]
[pivot, ., clone, (, )]
[pivot]
[singular]
[0]
[pivot, ., length]
[pivot]
[even, ?, 1, :, -, 1]
[even]
[1]
[-, 1]
[1]
[0]
[i, <, m]
[i]
[m]
[i, ++]
[i]
[determinant]
[lu, [, i, ], [, i, ]]
[lu, [, i, ]]
[lu]
[i]
[i]
[determinant]
[new, Solver, (, lu, ,, pivot, ,, singular, )]
[lu]
[pivot]
[singular]
[this, ., lu]
[this]
[lu]
[this, ., pivot]
[this]
[pivot]
[this, ., singular]
[this]
[singular]
[!, singular]
[singular]
[pivot, ., length]
[pivot]
[b, ., getDimension, (, ), !=, m]
[b, ., getDimension, (, )]
[b]
[m]
[new, DimensionMismatchException, (, b, ., getDimension, (, ), ,, m, )]
[b, ., getDimension, (, )]
[b]
[m]
[singular]
[new, SingularMatrixException, (, )]
[new, double, [, m, ]]
[m]
[0]
[row, <, m]
[row]
[m]
[row, ++]
[row]
[bp, [, row, ]]
[bp]
[row]
[b, ., getEntry, (, pivot, [, row, ], )]
[b]
[pivot, [, row, ]]
[pivot]
[row]
[0]
[col, <, m]
[col]
[m]
[col, ++]
[col]
[bp, [, col, ]]
[bp]
[col]
[col, +, 1]
[col]
[1]
[i, <, m]
[i]
[m]
[i, ++]
[i]
[bp, [, i, ]]
[bp]
[i]
[bpCol, *, lu, [, i, ], [, col, ]]
[bpCol]
[lu, [, i, ], [, col, ]]
[lu, [, i, ]]
[lu]
[i]
[col]
[m, -, 1]
[m]
[1]
[col, >=, 0]
[col]
[0]
[col, --]
[col]
[bp, [, col, ]]
[bp]
[col]
[lu, [, col, ], [, col, ]]
[lu, [, col, ]]
[lu]
[col]
[col]
[bp, [, col, ]]
[bp]
[col]
[0]
[i, <, col]
[i]
[col]
[i, ++]
[i]
[bp, [, i, ]]
[bp]
[i]
[bpCol, *, lu, [, i, ], [, col, ]]
[bpCol]
[lu, [, i, ], [, col, ]]
[lu, [, i, ]]
[lu]
[i]
[col]
[new, ArrayRealVector, (, bp, ,, false, )]
[bp]
[false]
[pivot, ., length]
[pivot]
[b, ., getRowDimension, (, ), !=, m]
[b, ., getRowDimension, (, )]
[b]
[m]
[new, DimensionMismatchException, (, b, ., getRowDimension, (, ), ,, m, )]
[b, ., getRowDimension, (, )]
[b]
[m]
[singular]
[new, SingularMatrixException, (, )]
[b, ., getColumnDimension, (, )]
[b]
[new, double, [, m, ], [, nColB, ]]
[m]
[nColB]
[0]
[row, <, m]
[row]
[m]
[row, ++]
[row]
[bp, [, row, ]]
[bp]
[row]
[pivot, [, row, ]]
[pivot]
[row]
[0]
[col, <, nColB]
[col]
[nColB]
[col, ++]
[col]
[bpRow, [, col, ]]
[bpRow]
[col]
[b, ., getEntry, (, pRow, ,, col, )]
[b]
[pRow]
[col]
[0]
[col, <, m]
[col]
[m]
[col, ++]
[col]
[bp, [, col, ]]
[bp]
[col]
[col, +, 1]
[col]
[1]
[i, <, m]
[i]
[m]
[i, ++]
[i]
[bp, [, i, ]]
[bp]
[i]
[lu, [, i, ], [, col, ]]
[lu, [, i, ]]
[lu]
[i]
[col]
[0]
[j, <, nColB]
[j]
[nColB]
[j, ++]
[j]
[bpI, [, j, ]]
[bpI]
[j]
[bpCol, [, j, ], *, luICol]
[bpCol, [, j, ]]
[bpCol]
[j]
[luICol]
[m, -, 1]
[m]
[1]
[col, >=, 0]
[col]
[0]
[col, --]
[col]
[bp, [, col, ]]
[bp]
[col]
[lu, [, col, ], [, col, ]]
[lu, [, col, ]]
[lu]
[col]
[col]
[0]
[j, <, nColB]
[j]
[nColB]
[j, ++]
[j]
[bpCol, [, j, ]]
[bpCol]
[j]
[luDiag]
[0]
[i, <, col]
[i]
[col]
[i, ++]
[i]
[bp, [, i, ]]
[bp]
[i]
[lu, [, i, ], [, col, ]]
[lu, [, i, ]]
[lu]
[i]
[col]
[0]
[j, <, nColB]
[j]
[nColB]
[j, ++]
[j]
[bpI, [, j, ]]
[bpI]
[j]
[bpCol, [, j, ], *, luICol]
[bpCol, [, j, ]]
[bpCol]
[j]
[luICol]
[new, Array2DRowRealMatrix, (, bp, ,, false, )]
[bp]
[false]
[solve, (, MatrixUtils, ., createRealIdentityMatrix, (, pivot, ., length, ), )]
[MatrixUtils, ., createRealIdentityMatrix, (, pivot, ., length, )]
[MatrixUtils]
[pivot, ., length]
[pivot]
