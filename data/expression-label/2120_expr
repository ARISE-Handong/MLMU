["'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'"]
[formatDuration, (, durationMillis, ,, "H:mm:ss.SSS", )]
[durationMillis]
["H:mm:ss.SSS"]
[formatDuration, (, durationMillis, ,, ISO_EXTENDED_FORMAT_PATTERN, ,, false, )]
[durationMillis]
[ISO_EXTENDED_FORMAT_PATTERN]
[false]
[formatDuration, (, durationMillis, ,, format, ,, true, )]
[durationMillis]
[format]
[true]
[lexx, (, format, )]
[format]
[0]
[0]
[0]
[0]
[0]
[Token, ., containsTokenWithValue, (, tokens, ,, d, )]
[Token]
[tokens]
[d]
[days]
[(, int, ), (, durationMillis, /, DateUtils, ., MILLIS_PER_DAY, )]
[(, durationMillis, /, DateUtils, ., MILLIS_PER_DAY, )]
[durationMillis, /, DateUtils, ., MILLIS_PER_DAY]
[durationMillis]
[DateUtils, ., MILLIS_PER_DAY]
[DateUtils]
[durationMillis]
[durationMillis, -, (, days, *, DateUtils, ., MILLIS_PER_DAY, )]
[durationMillis]
[(, days, *, DateUtils, ., MILLIS_PER_DAY, )]
[days, *, DateUtils, ., MILLIS_PER_DAY]
[days]
[DateUtils, ., MILLIS_PER_DAY]
[DateUtils]
[Token, ., containsTokenWithValue, (, tokens, ,, H, )]
[Token]
[tokens]
[H]
[hours]
[(, int, ), (, durationMillis, /, DateUtils, ., MILLIS_PER_HOUR, )]
[(, durationMillis, /, DateUtils, ., MILLIS_PER_HOUR, )]
[durationMillis, /, DateUtils, ., MILLIS_PER_HOUR]
[durationMillis]
[DateUtils, ., MILLIS_PER_HOUR]
[DateUtils]
[durationMillis]
[durationMillis, -, (, hours, *, DateUtils, ., MILLIS_PER_HOUR, )]
[durationMillis]
[(, hours, *, DateUtils, ., MILLIS_PER_HOUR, )]
[hours, *, DateUtils, ., MILLIS_PER_HOUR]
[hours]
[DateUtils, ., MILLIS_PER_HOUR]
[DateUtils]
[Token, ., containsTokenWithValue, (, tokens, ,, m, )]
[Token]
[tokens]
[m]
[minutes]
[(, int, ), (, durationMillis, /, DateUtils, ., MILLIS_PER_MINUTE, )]
[(, durationMillis, /, DateUtils, ., MILLIS_PER_MINUTE, )]
[durationMillis, /, DateUtils, ., MILLIS_PER_MINUTE]
[durationMillis]
[DateUtils, ., MILLIS_PER_MINUTE]
[DateUtils]
[durationMillis]
[durationMillis, -, (, minutes, *, DateUtils, ., MILLIS_PER_MINUTE, )]
[durationMillis]
[(, minutes, *, DateUtils, ., MILLIS_PER_MINUTE, )]
[minutes, *, DateUtils, ., MILLIS_PER_MINUTE]
[minutes]
[DateUtils, ., MILLIS_PER_MINUTE]
[DateUtils]
[Token, ., containsTokenWithValue, (, tokens, ,, s, )]
[Token]
[tokens]
[s]
[seconds]
[(, int, ), (, durationMillis, /, DateUtils, ., MILLIS_PER_SECOND, )]
[(, durationMillis, /, DateUtils, ., MILLIS_PER_SECOND, )]
[durationMillis, /, DateUtils, ., MILLIS_PER_SECOND]
[durationMillis]
[DateUtils, ., MILLIS_PER_SECOND]
[DateUtils]
[durationMillis]
[durationMillis, -, (, seconds, *, DateUtils, ., MILLIS_PER_SECOND, )]
[durationMillis]
[(, seconds, *, DateUtils, ., MILLIS_PER_SECOND, )]
[seconds, *, DateUtils, ., MILLIS_PER_SECOND]
[seconds]
[DateUtils, ., MILLIS_PER_SECOND]
[DateUtils]
[Token, ., containsTokenWithValue, (, tokens, ,, S, )]
[Token]
[tokens]
[S]
[milliseconds]
[(, int, ), durationMillis]
[durationMillis]
[format, (, tokens, ,, 0, ,, 0, ,, days, ,, hours, ,, minutes, ,, seconds, ,, milliseconds, ,, padWithZeros, )]
[tokens]
[0]
[0]
[days]
[hours]
[minutes]
[seconds]
[milliseconds]
[padWithZeros]
[formatDuration, (, durationMillis, ,, "d' days 'H' hours 'm' minutes 's' seconds'", )]
[durationMillis]
["d' days 'H' hours 'm' minutes 's' seconds'"]
[suppressLeadingZeroElements]
[duration]
[" ", +, duration]
[" "]
[duration]
[StringUtils, ., replaceOnce, (, duration, ,, " 0 days", ,, "", )]
[StringUtils]
[duration]
[" 0 days"]
[""]
[tmp, ., length, (, ), !=, duration, ., length, (, )]
[tmp, ., length, (, )]
[tmp]
[duration, ., length, (, )]
[duration]
[duration]
[tmp]
[tmp]
[StringUtils, ., replaceOnce, (, duration, ,, " 0 hours", ,, "", )]
[StringUtils]
[duration]
[" 0 hours"]
[""]
[tmp, ., length, (, ), !=, duration, ., length, (, )]
[tmp, ., length, (, )]
[tmp]
[duration, ., length, (, )]
[duration]
[duration]
[tmp]
[tmp]
[StringUtils, ., replaceOnce, (, duration, ,, " 0 minutes", ,, "", )]
[StringUtils]
[duration]
[" 0 minutes"]
[""]
[duration]
[tmp]
[tmp, ., length, (, ), !=, duration, ., length, (, )]
[tmp, ., length, (, )]
[tmp]
[duration, ., length, (, )]
[duration]
[duration]
[StringUtils, ., replaceOnce, (, tmp, ,, " 0 seconds", ,, "", )]
[StringUtils]
[tmp]
[" 0 seconds"]
[""]
[duration, ., length, (, ), !=, 0]
[duration, ., length, (, )]
[duration]
[0]
[duration]
[duration, ., substring, (, 1, )]
[duration]
[1]
[suppressTrailingZeroElements]
[StringUtils, ., replaceOnce, (, duration, ,, " 0 seconds", ,, "", )]
[StringUtils]
[duration]
[" 0 seconds"]
[""]
[tmp, ., length, (, ), !=, duration, ., length, (, )]
[tmp, ., length, (, )]
[tmp]
[duration, ., length, (, )]
[duration]
[duration]
[tmp]
[tmp]
[StringUtils, ., replaceOnce, (, duration, ,, " 0 minutes", ,, "", )]
[StringUtils]
[duration]
[" 0 minutes"]
[""]
[tmp, ., length, (, ), !=, duration, ., length, (, )]
[tmp, ., length, (, )]
[tmp]
[duration, ., length, (, )]
[duration]
[duration]
[tmp]
[tmp]
[StringUtils, ., replaceOnce, (, duration, ,, " 0 hours", ,, "", )]
[StringUtils]
[duration]
[" 0 hours"]
[""]
[tmp, ., length, (, ), !=, duration, ., length, (, )]
[tmp, ., length, (, )]
[tmp]
[duration, ., length, (, )]
[duration]
[duration]
[StringUtils, ., replaceOnce, (, tmp, ,, " 0 days", ,, "", )]
[StringUtils]
[tmp]
[" 0 days"]
[""]
[duration]
[" ", +, duration]
[" "]
[duration]
[duration]
[StringUtils, ., replaceOnce, (, duration, ,, " 1 seconds", ,, " 1 second", )]
[StringUtils]
[duration]
[" 1 seconds"]
[" 1 second"]
[duration]
[StringUtils, ., replaceOnce, (, duration, ,, " 1 minutes", ,, " 1 minute", )]
[StringUtils]
[duration]
[" 1 minutes"]
[" 1 minute"]
[duration]
[StringUtils, ., replaceOnce, (, duration, ,, " 1 hours", ,, " 1 hour", )]
[StringUtils]
[duration]
[" 1 hours"]
[" 1 hour"]
[duration]
[StringUtils, ., replaceOnce, (, duration, ,, " 1 days", ,, " 1 day", )]
[StringUtils]
[duration]
[" 1 days"]
[" 1 day"]
[duration, ., trim, (, )]
[duration]
[formatPeriod, (, startMillis, ,, endMillis, ,, ISO_EXTENDED_FORMAT_PATTERN, ,, false, ,, TimeZone, ., getDefault, (, ), )]
[startMillis]
[endMillis]
[ISO_EXTENDED_FORMAT_PATTERN]
[false]
[TimeZone, ., getDefault, (, )]
[TimeZone]
[formatPeriod, (, startMillis, ,, endMillis, ,, format, ,, true, ,, TimeZone, ., getDefault, (, ), )]
[startMillis]
[endMillis]
[format]
[true]
[TimeZone, ., getDefault, (, )]
[TimeZone]
[lexx, (, format, )]
[format]
[Calendar, ., getInstance, (, timezone, )]
[Calendar]
[timezone]
[start, ., setTime, (, new, Date, (, startMillis, ), )]
[start]
[new, Date, (, startMillis, )]
[startMillis]
[Calendar, ., getInstance, (, timezone, )]
[Calendar]
[timezone]
[end, ., setTime, (, new, Date, (, endMillis, ), )]
[end]
[new, Date, (, endMillis, )]
[endMillis]
[end, ., get, (, Calendar, ., MILLISECOND, ), -, start, ., get, (, Calendar, ., MILLISECOND, )]
[end, ., get, (, Calendar, ., MILLISECOND, )]
[end]
[Calendar, ., MILLISECOND]
[Calendar]
[start, ., get, (, Calendar, ., MILLISECOND, )]
[start]
[Calendar, ., MILLISECOND]
[Calendar]
[end, ., get, (, Calendar, ., SECOND, ), -, start, ., get, (, Calendar, ., SECOND, )]
[end, ., get, (, Calendar, ., SECOND, )]
[end]
[Calendar, ., SECOND]
[Calendar]
[start, ., get, (, Calendar, ., SECOND, )]
[start]
[Calendar, ., SECOND]
[Calendar]
[end, ., get, (, Calendar, ., MINUTE, ), -, start, ., get, (, Calendar, ., MINUTE, )]
[end, ., get, (, Calendar, ., MINUTE, )]
[end]
[Calendar, ., MINUTE]
[Calendar]
[start, ., get, (, Calendar, ., MINUTE, )]
[start]
[Calendar, ., MINUTE]
[Calendar]
[end, ., get, (, Calendar, ., HOUR_OF_DAY, ), -, start, ., get, (, Calendar, ., HOUR_OF_DAY, )]
[end, ., get, (, Calendar, ., HOUR_OF_DAY, )]
[end]
[Calendar, ., HOUR_OF_DAY]
[Calendar]
[start, ., get, (, Calendar, ., HOUR_OF_DAY, )]
[start]
[Calendar, ., HOUR_OF_DAY]
[Calendar]
[end, ., get, (, Calendar, ., DAY_OF_MONTH, ), -, start, ., get, (, Calendar, ., DAY_OF_MONTH, )]
[end, ., get, (, Calendar, ., DAY_OF_MONTH, )]
[end]
[Calendar, ., DAY_OF_MONTH]
[Calendar]
[start, ., get, (, Calendar, ., DAY_OF_MONTH, )]
[start]
[Calendar, ., DAY_OF_MONTH]
[Calendar]
[end, ., get, (, Calendar, ., MONTH, ), -, start, ., get, (, Calendar, ., MONTH, )]
[end, ., get, (, Calendar, ., MONTH, )]
[end]
[Calendar, ., MONTH]
[Calendar]
[start, ., get, (, Calendar, ., MONTH, )]
[start]
[Calendar, ., MONTH]
[Calendar]
[end, ., get, (, Calendar, ., YEAR, ), -, start, ., get, (, Calendar, ., YEAR, )]
[end, ., get, (, Calendar, ., YEAR, )]
[end]
[Calendar, ., YEAR]
[Calendar]
[start, ., get, (, Calendar, ., YEAR, )]
[start]
[Calendar, ., YEAR]
[Calendar]
[milliseconds, <, 0]
[milliseconds]
[0]
[milliseconds]
[1000]
[seconds]
[1]
[seconds, <, 0]
[seconds]
[0]
[seconds]
[60]
[minutes]
[1]
[minutes, <, 0]
[minutes]
[0]
[minutes]
[60]
[hours]
[1]
[hours, <, 0]
[hours]
[0]
[hours]
[24]
[days]
[1]
[Token, ., containsTokenWithValue, (, tokens, ,, M, )]
[Token]
[tokens]
[M]
[days, <, 0]
[days]
[0]
[days]
[start, ., getActualMaximum, (, Calendar, ., DAY_OF_MONTH, )]
[start]
[Calendar, ., DAY_OF_MONTH]
[Calendar]
[months]
[1]
[start, ., add, (, Calendar, ., MONTH, ,, 1, )]
[start]
[Calendar, ., MONTH]
[Calendar]
[1]
[months, <, 0]
[months]
[0]
[months]
[12]
[years]
[1]
[!, Token, ., containsTokenWithValue, (, tokens, ,, y, ), &&, years, !=, 0]
[!, Token, ., containsTokenWithValue, (, tokens, ,, y, )]
[Token, ., containsTokenWithValue, (, tokens, ,, y, )]
[Token]
[tokens]
[y]
[years, !=, 0]
[years]
[0]
[years, !=, 0]
[years]
[0]
[months]
[12, *, years]
[12]
[years]
[years]
[0]
[!, Token, ., containsTokenWithValue, (, tokens, ,, y, )]
[Token, ., containsTokenWithValue, (, tokens, ,, y, )]
[Token]
[tokens]
[y]
[end, ., get, (, Calendar, ., YEAR, )]
[end]
[Calendar, ., YEAR]
[Calendar]
[months, <, 0]
[months]
[0]
[target]
[1]
[start, ., get, (, Calendar, ., YEAR, ), !=, target]
[start, ., get, (, Calendar, ., YEAR, )]
[start]
[Calendar, ., YEAR]
[Calendar]
[target]
[days]
[start, ., getActualMaximum, (, Calendar, ., DAY_OF_YEAR, ), -, start, ., get, (, Calendar, ., DAY_OF_YEAR, )]
[start, ., getActualMaximum, (, Calendar, ., DAY_OF_YEAR, )]
[start]
[Calendar, ., DAY_OF_YEAR]
[Calendar]
[start, ., get, (, Calendar, ., DAY_OF_YEAR, )]
[start]
[Calendar, ., DAY_OF_YEAR]
[Calendar]
[start, instanceof, GregorianCalendar, &&, start, ., get, (, Calendar, ., MONTH, ), ==, Calendar, ., FEBRUARY, &&, start, ., get, (, Calendar, ., DAY_OF_MONTH, ), ==, 29]
[start, instanceof, GregorianCalendar, &&, start, ., get, (, Calendar, ., MONTH, ), ==, Calendar, ., FEBRUARY]
[start, instanceof, GregorianCalendar]
[start]
[start, ., get, (, Calendar, ., MONTH, ), ==, Calendar, ., FEBRUARY]
[start, ., get, (, Calendar, ., MONTH, )]
[start]
[Calendar, ., MONTH]
[Calendar]
[Calendar, ., FEBRUARY]
[Calendar]
[start, ., get, (, Calendar, ., DAY_OF_MONTH, ), ==, 29]
[start, ., get, (, Calendar, ., DAY_OF_MONTH, )]
[start]
[Calendar, ., DAY_OF_MONTH]
[Calendar]
[29]
[days]
[1]
[start, ., add, (, Calendar, ., YEAR, ,, 1, )]
[start]
[Calendar, ., YEAR]
[Calendar]
[1]
[days]
[start, ., get, (, Calendar, ., DAY_OF_YEAR, )]
[start]
[Calendar, ., DAY_OF_YEAR]
[Calendar]
[years]
[0]
[start, ., get, (, Calendar, ., MONTH, ), !=, end, ., get, (, Calendar, ., MONTH, )]
[start, ., get, (, Calendar, ., MONTH, )]
[start]
[Calendar, ., MONTH]
[Calendar]
[end, ., get, (, Calendar, ., MONTH, )]
[end]
[Calendar, ., MONTH]
[Calendar]
[days]
[start, ., getActualMaximum, (, Calendar, ., DAY_OF_MONTH, )]
[start]
[Calendar, ., DAY_OF_MONTH]
[Calendar]
[start, ., add, (, Calendar, ., MONTH, ,, 1, )]
[start]
[Calendar, ., MONTH]
[Calendar]
[1]
[months]
[0]
[days, <, 0]
[days]
[0]
[days]
[start, ., getActualMaximum, (, Calendar, ., DAY_OF_MONTH, )]
[start]
[Calendar, ., DAY_OF_MONTH]
[Calendar]
[months]
[1]
[start, ., add, (, Calendar, ., MONTH, ,, 1, )]
[start]
[Calendar, ., MONTH]
[Calendar]
[1]
[!, Token, ., containsTokenWithValue, (, tokens, ,, d, )]
[Token, ., containsTokenWithValue, (, tokens, ,, d, )]
[Token]
[tokens]
[d]
[hours]
[24, *, days]
[24]
[days]
[days]
[0]
[!, Token, ., containsTokenWithValue, (, tokens, ,, H, )]
[Token, ., containsTokenWithValue, (, tokens, ,, H, )]
[Token]
[tokens]
[H]
[minutes]
[60, *, hours]
[60]
[hours]
[hours]
[0]
[!, Token, ., containsTokenWithValue, (, tokens, ,, m, )]
[Token, ., containsTokenWithValue, (, tokens, ,, m, )]
[Token]
[tokens]
[m]
[seconds]
[60, *, minutes]
[60]
[minutes]
[minutes]
[0]
[!, Token, ., containsTokenWithValue, (, tokens, ,, s, )]
[Token, ., containsTokenWithValue, (, tokens, ,, s, )]
[Token]
[tokens]
[s]
[milliseconds]
[1000, *, seconds]
[1000]
[seconds]
[seconds]
[0]
[format, (, tokens, ,, years, ,, months, ,, days, ,, hours, ,, minutes, ,, seconds, ,, milliseconds, ,, padWithZeros, )]
[tokens]
[years]
[months]
[days]
[hours]
[minutes]
[seconds]
[milliseconds]
[padWithZeros]
[new, StringBuilder, (, )]
[false]
[tokens, ., length]
[tokens]
[0]
[i, <, sz]
[i]
[sz]
[i, ++]
[i]
[tokens, [, i, ]]
[tokens]
[i]
[token, ., getValue, (, )]
[token]
[token, ., getCount, (, )]
[token]
[value, instanceof, StringBuilder]
[value]
[buffer, ., append, (, value, ., toString, (, ), )]
[buffer]
[value, ., toString, (, )]
[value]
[value, ==, y]
[value]
[y]
[buffer, ., append, (, padWithZeros, ?, StringUtils, ., leftPad, (, Integer, ., toString, (, years, ), ,, count, ,, '0', ), :, Integer, ., toString, (, years, ), )]
[buffer]
[padWithZeros, ?, StringUtils, ., leftPad, (, Integer, ., toString, (, years, ), ,, count, ,, '0', ), :, Integer, ., toString, (, years, )]
[padWithZeros]
[StringUtils, ., leftPad, (, Integer, ., toString, (, years, ), ,, count, ,, '0', )]
[StringUtils]
[Integer, ., toString, (, years, )]
[Integer]
[years]
[count]
['0']
[Integer, ., toString, (, years, )]
[Integer]
[years]
[lastOutputSeconds]
[false]
[value, ==, M]
[value]
[M]
[buffer, ., append, (, padWithZeros, ?, StringUtils, ., leftPad, (, Integer, ., toString, (, months, ), ,, count, ,, '0', ), :, Integer, ., toString, (, months, ), )]
[buffer]
[padWithZeros, ?, StringUtils, ., leftPad, (, Integer, ., toString, (, months, ), ,, count, ,, '0', ), :, Integer, ., toString, (, months, )]
[padWithZeros]
[StringUtils, ., leftPad, (, Integer, ., toString, (, months, ), ,, count, ,, '0', )]
[StringUtils]
[Integer, ., toString, (, months, )]
[Integer]
[months]
[count]
['0']
[Integer, ., toString, (, months, )]
[Integer]
[months]
[lastOutputSeconds]
[false]
[value, ==, d]
[value]
[d]
[buffer, ., append, (, padWithZeros, ?, StringUtils, ., leftPad, (, Integer, ., toString, (, days, ), ,, count, ,, '0', ), :, Integer, ., toString, (, days, ), )]
[buffer]
[padWithZeros, ?, StringUtils, ., leftPad, (, Integer, ., toString, (, days, ), ,, count, ,, '0', ), :, Integer, ., toString, (, days, )]
[padWithZeros]
[StringUtils, ., leftPad, (, Integer, ., toString, (, days, ), ,, count, ,, '0', )]
[StringUtils]
[Integer, ., toString, (, days, )]
[Integer]
[days]
[count]
['0']
[Integer, ., toString, (, days, )]
[Integer]
[days]
[lastOutputSeconds]
[false]
[value, ==, H]
[value]
[H]
[buffer, ., append, (, padWithZeros, ?, StringUtils, ., leftPad, (, Integer, ., toString, (, hours, ), ,, count, ,, '0', ), :, Integer, ., toString, (, hours, ), )]
[buffer]
[padWithZeros, ?, StringUtils, ., leftPad, (, Integer, ., toString, (, hours, ), ,, count, ,, '0', ), :, Integer, ., toString, (, hours, )]
[padWithZeros]
[StringUtils, ., leftPad, (, Integer, ., toString, (, hours, ), ,, count, ,, '0', )]
[StringUtils]
[Integer, ., toString, (, hours, )]
[Integer]
[hours]
[count]
['0']
[Integer, ., toString, (, hours, )]
[Integer]
[hours]
[lastOutputSeconds]
[false]
[value, ==, m]
[value]
[m]
[buffer, ., append, (, padWithZeros, ?, StringUtils, ., leftPad, (, Integer, ., toString, (, minutes, ), ,, count, ,, '0', ), :, Integer, ., toString, (, minutes, ), )]
[buffer]
[padWithZeros, ?, StringUtils, ., leftPad, (, Integer, ., toString, (, minutes, ), ,, count, ,, '0', ), :, Integer, ., toString, (, minutes, )]
[padWithZeros]
[StringUtils, ., leftPad, (, Integer, ., toString, (, minutes, ), ,, count, ,, '0', )]
[StringUtils]
[Integer, ., toString, (, minutes, )]
[Integer]
[minutes]
[count]
['0']
[Integer, ., toString, (, minutes, )]
[Integer]
[minutes]
[lastOutputSeconds]
[false]
[value, ==, s]
[value]
[s]
[buffer, ., append, (, padWithZeros, ?, StringUtils, ., leftPad, (, Integer, ., toString, (, seconds, ), ,, count, ,, '0', ), :, Integer, ., toString, (, seconds, ), )]
[buffer]
[padWithZeros, ?, StringUtils, ., leftPad, (, Integer, ., toString, (, seconds, ), ,, count, ,, '0', ), :, Integer, ., toString, (, seconds, )]
[padWithZeros]
[StringUtils, ., leftPad, (, Integer, ., toString, (, seconds, ), ,, count, ,, '0', )]
[StringUtils]
[Integer, ., toString, (, seconds, )]
[Integer]
[seconds]
[count]
['0']
[Integer, ., toString, (, seconds, )]
[Integer]
[seconds]
[lastOutputSeconds]
[true]
[value, ==, S]
[value]
[S]
[lastOutputSeconds]
[milliseconds]
[1000]
[padWithZeros, ?, StringUtils, ., leftPad, (, Integer, ., toString, (, milliseconds, ), ,, count, ,, '0', ), :, Integer, ., toString, (, milliseconds, )]
[padWithZeros]
[StringUtils, ., leftPad, (, Integer, ., toString, (, milliseconds, ), ,, count, ,, '0', )]
[StringUtils]
[Integer, ., toString, (, milliseconds, )]
[Integer]
[milliseconds]
[count]
['0']
[Integer, ., toString, (, milliseconds, )]
[Integer]
[milliseconds]
[buffer, ., append, (, str, ., substring, (, 1, ), )]
[buffer]
[str, ., substring, (, 1, )]
[str]
[1]
[buffer, ., append, (, padWithZeros, ?, StringUtils, ., leftPad, (, Integer, ., toString, (, milliseconds, ), ,, count, ,, '0', ), :, Integer, ., toString, (, milliseconds, ), )]
[buffer]
[padWithZeros, ?, StringUtils, ., leftPad, (, Integer, ., toString, (, milliseconds, ), ,, count, ,, '0', ), :, Integer, ., toString, (, milliseconds, )]
[padWithZeros]
[StringUtils, ., leftPad, (, Integer, ., toString, (, milliseconds, ), ,, count, ,, '0', )]
[StringUtils]
[Integer, ., toString, (, milliseconds, )]
[Integer]
[milliseconds]
[count]
['0']
[Integer, ., toString, (, milliseconds, )]
[Integer]
[milliseconds]
[lastOutputSeconds]
[false]
[buffer, ., toString, (, )]
[buffer]
["y"]
["M"]
["d"]
["H"]
["m"]
["s"]
["S"]
[format, ., toCharArray, (, )]
[format]
[new, ArrayList, <, Token, >, (, array, ., length, )]
[array, ., length]
[array]
[false]
[null]
[null]
[array, ., length]
[array]
[0]
[i, <, sz]
[i]
[sz]
[i, ++]
[i]
[array, [, i, ]]
[array]
[i]
[inLiteral, &&, ch, !=, '\'']
[inLiteral]
[ch, !=, '\'']
[ch]
['\'']
[buffer, ., append, (, ch, )]
[buffer]
[ch]
[null]
[ch]
['\'']
[inLiteral]
[buffer]
[null]
[inLiteral]
[false]
[buffer]
[new, StringBuilder, (, )]
[list, ., add, (, new, Token, (, buffer, ), )]
[list]
[new, Token, (, buffer, )]
[buffer]
[inLiteral]
[true]
['y']
[value]
[y]
['M']
[value]
[M]
['d']
[value]
[d]
['H']
[value]
[H]
['m']
[value]
[m]
['s']
[value]
[s]
['S']
[value]
[S]
[buffer, ==, null]
[buffer]
[null]
[buffer]
[new, StringBuilder, (, )]
[list, ., add, (, new, Token, (, buffer, ), )]
[list]
[new, Token, (, buffer, )]
[buffer]
[buffer, ., append, (, ch, )]
[buffer]
[ch]
[value, !=, null]
[value]
[null]
[previous, !=, null, &&, previous, ., getValue, (, ), ==, value]
[previous, !=, null]
[previous]
[null]
[previous, ., getValue, (, ), ==, value]
[previous, ., getValue, (, )]
[previous]
[value]
[previous, ., increment, (, )]
[previous]
[new, Token, (, value, )]
[value]
[list, ., add, (, token, )]
[list]
[token]
[previous]
[token]
[buffer]
[null]
[list, ., toArray, (, new, Token, [, list, ., size, (, ), ], )]
[list]
[new, Token, [, list, ., size, (, ), ]]
[list, ., size, (, )]
[list]
[tokens, ., length]
[tokens]
[0]
[i, <, sz]
[i]
[sz]
[i, ++]
[i]
[tokens, [, i, ], ., getValue, (, ), ==, value]
[tokens, [, i, ], ., getValue, (, )]
[tokens, [, i, ]]
[tokens]
[i]
[value]
[true]
[false]
[this, ., value]
[this]
[value]
[this, ., count]
[this]
[1]
[this, ., value]
[this]
[value]
[this, ., count]
[this]
[count]
[count, ++]
[count]
[count]
[value]
[obj2, instanceof, Token]
[obj2]
[(, Token, ), obj2]
[obj2]
[this, ., value, ., getClass, (, ), !=, tok2, ., value, ., getClass, (, )]
[this, ., value, ., getClass, (, )]
[this, ., value]
[this]
[tok2, ., value, ., getClass, (, )]
[tok2, ., value]
[tok2]
[false]
[this, ., count, !=, tok2, ., count]
[this, ., count]
[this]
[tok2, ., count]
[tok2]
[false]
[this, ., value, instanceof, StringBuilder]
[this, ., value]
[this]
[this, ., value, ., toString, (, ), ., equals, (, tok2, ., value, ., toString, (, ), )]
[this, ., value, ., toString, (, )]
[this, ., value]
[this]
[tok2, ., value, ., toString, (, )]
[tok2, ., value]
[tok2]
[this, ., value, instanceof, Number]
[this, ., value]
[this]
[this, ., value, ., equals, (, tok2, ., value, )]
[this, ., value]
[this]
[tok2, ., value]
[tok2]
[this, ., value, ==, tok2, ., value]
[this, ., value]
[this]
[tok2, ., value]
[tok2]
[false]
[this, ., value, ., hashCode, (, )]
[this, ., value]
[this]
[StringUtils, ., repeat, (, this, ., value, ., toString, (, ), ,, this, ., count, )]
[StringUtils]
[this, ., value, ., toString, (, )]
[this, ., value]
[this]
[this, ., count]
[this]
