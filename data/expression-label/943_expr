[{, -, 1.0, /, FastMath, ., sqrt, (, 3.0, ), ,, 1.0, /, FastMath, ., sqrt, (, 3.0, ), }]
[-, 1.0, /, FastMath, ., sqrt, (, 3.0, )]
[-, 1.0]
[1.0]
[FastMath, ., sqrt, (, 3.0, )]
[FastMath]
[3.0]
[1.0, /, FastMath, ., sqrt, (, 3.0, )]
[1.0]
[FastMath, ., sqrt, (, 3.0, )]
[FastMath]
[3.0]
[{, 1.0, ,, 1.0, }]
[1.0]
[1.0]
[{, -, FastMath, ., sqrt, (, 0.6, ), ,, 0.0, ,, FastMath, ., sqrt, (, 0.6, ), }]
[-, FastMath, ., sqrt, (, 0.6, )]
[FastMath, ., sqrt, (, 0.6, )]
[FastMath]
[0.6]
[0.0]
[FastMath, ., sqrt, (, 0.6, )]
[FastMath]
[0.6]
[{, 5.0, /, 9.0, ,, 8.0, /, 9.0, ,, 5.0, /, 9.0, }]
[5.0, /, 9.0]
[5.0]
[9.0]
[8.0, /, 9.0]
[8.0]
[9.0]
[5.0, /, 9.0]
[5.0]
[9.0]
[{, -, FastMath, ., sqrt, (, (, 15.0, +, 2.0, *, FastMath, ., sqrt, (, 30.0, ), ), /, 35.0, ), ,, -, FastMath, ., sqrt, (, (, 15.0, -, 2.0, *, FastMath, ., sqrt, (, 30.0, ), ), /, 35.0, ), ,, FastMath, ., sqrt, (, (, 15.0, -, 2.0, *, FastMath, ., sqrt, (, 30.0, ), ), /, 35.0, ), ,, FastMath, ., sqrt, (, (, 15.0, +, 2.0, *, FastMath, ., sqrt, (, 30.0, ), ), /, 35.0, ), }]
[-, FastMath, ., sqrt, (, (, 15.0, +, 2.0, *, FastMath, ., sqrt, (, 30.0, ), ), /, 35.0, )]
[FastMath, ., sqrt, (, (, 15.0, +, 2.0, *, FastMath, ., sqrt, (, 30.0, ), ), /, 35.0, )]
[FastMath]
[(, 15.0, +, 2.0, *, FastMath, ., sqrt, (, 30.0, ), ), /, 35.0]
[(, 15.0, +, 2.0, *, FastMath, ., sqrt, (, 30.0, ), )]
[15.0, +, 2.0, *, FastMath, ., sqrt, (, 30.0, )]
[15.0]
[2.0, *, FastMath, ., sqrt, (, 30.0, )]
[2.0]
[FastMath, ., sqrt, (, 30.0, )]
[FastMath]
[30.0]
[35.0]
[-, FastMath, ., sqrt, (, (, 15.0, -, 2.0, *, FastMath, ., sqrt, (, 30.0, ), ), /, 35.0, )]
[FastMath, ., sqrt, (, (, 15.0, -, 2.0, *, FastMath, ., sqrt, (, 30.0, ), ), /, 35.0, )]
[FastMath]
[(, 15.0, -, 2.0, *, FastMath, ., sqrt, (, 30.0, ), ), /, 35.0]
[(, 15.0, -, 2.0, *, FastMath, ., sqrt, (, 30.0, ), )]
[15.0, -, 2.0, *, FastMath, ., sqrt, (, 30.0, )]
[15.0]
[2.0, *, FastMath, ., sqrt, (, 30.0, )]
[2.0]
[FastMath, ., sqrt, (, 30.0, )]
[FastMath]
[30.0]
[35.0]
[FastMath, ., sqrt, (, (, 15.0, -, 2.0, *, FastMath, ., sqrt, (, 30.0, ), ), /, 35.0, )]
[FastMath]
[(, 15.0, -, 2.0, *, FastMath, ., sqrt, (, 30.0, ), ), /, 35.0]
[(, 15.0, -, 2.0, *, FastMath, ., sqrt, (, 30.0, ), )]
[15.0, -, 2.0, *, FastMath, ., sqrt, (, 30.0, )]
[15.0]
[2.0, *, FastMath, ., sqrt, (, 30.0, )]
[2.0]
[FastMath, ., sqrt, (, 30.0, )]
[FastMath]
[30.0]
[35.0]
[FastMath, ., sqrt, (, (, 15.0, +, 2.0, *, FastMath, ., sqrt, (, 30.0, ), ), /, 35.0, )]
[FastMath]
[(, 15.0, +, 2.0, *, FastMath, ., sqrt, (, 30.0, ), ), /, 35.0]
[(, 15.0, +, 2.0, *, FastMath, ., sqrt, (, 30.0, ), )]
[15.0, +, 2.0, *, FastMath, ., sqrt, (, 30.0, )]
[15.0]
[2.0, *, FastMath, ., sqrt, (, 30.0, )]
[2.0]
[FastMath, ., sqrt, (, 30.0, )]
[FastMath]
[30.0]
[35.0]
[{, (, 90.0, -, 5.0, *, FastMath, ., sqrt, (, 30.0, ), ), /, 180.0, ,, (, 90.0, +, 5.0, *, FastMath, ., sqrt, (, 30.0, ), ), /, 180.0, ,, (, 90.0, +, 5.0, *, FastMath, ., sqrt, (, 30.0, ), ), /, 180.0, ,, (, 90.0, -, 5.0, *, FastMath, ., sqrt, (, 30.0, ), ), /, 180.0, }]
[(, 90.0, -, 5.0, *, FastMath, ., sqrt, (, 30.0, ), ), /, 180.0]
[(, 90.0, -, 5.0, *, FastMath, ., sqrt, (, 30.0, ), )]
[90.0, -, 5.0, *, FastMath, ., sqrt, (, 30.0, )]
[90.0]
[5.0, *, FastMath, ., sqrt, (, 30.0, )]
[5.0]
[FastMath, ., sqrt, (, 30.0, )]
[FastMath]
[30.0]
[180.0]
[(, 90.0, +, 5.0, *, FastMath, ., sqrt, (, 30.0, ), ), /, 180.0]
[(, 90.0, +, 5.0, *, FastMath, ., sqrt, (, 30.0, ), )]
[90.0, +, 5.0, *, FastMath, ., sqrt, (, 30.0, )]
[90.0]
[5.0, *, FastMath, ., sqrt, (, 30.0, )]
[5.0]
[FastMath, ., sqrt, (, 30.0, )]
[FastMath]
[30.0]
[180.0]
[(, 90.0, +, 5.0, *, FastMath, ., sqrt, (, 30.0, ), ), /, 180.0]
[(, 90.0, +, 5.0, *, FastMath, ., sqrt, (, 30.0, ), )]
[90.0, +, 5.0, *, FastMath, ., sqrt, (, 30.0, )]
[90.0]
[5.0, *, FastMath, ., sqrt, (, 30.0, )]
[5.0]
[FastMath, ., sqrt, (, 30.0, )]
[FastMath]
[30.0]
[180.0]
[(, 90.0, -, 5.0, *, FastMath, ., sqrt, (, 30.0, ), ), /, 180.0]
[(, 90.0, -, 5.0, *, FastMath, ., sqrt, (, 30.0, ), )]
[90.0, -, 5.0, *, FastMath, ., sqrt, (, 30.0, )]
[90.0]
[5.0, *, FastMath, ., sqrt, (, 30.0, )]
[5.0]
[FastMath, ., sqrt, (, 30.0, )]
[FastMath]
[30.0]
[180.0]
[{, -, FastMath, ., sqrt, (, (, 35.0, +, 2.0, *, FastMath, ., sqrt, (, 70.0, ), ), /, 63.0, ), ,, -, FastMath, ., sqrt, (, (, 35.0, -, 2.0, *, FastMath, ., sqrt, (, 70.0, ), ), /, 63.0, ), ,, 0.0, ,, FastMath, ., sqrt, (, (, 35.0, -, 2.0, *, FastMath, ., sqrt, (, 70.0, ), ), /, 63.0, ), ,, FastMath, ., sqrt, (, (, 35.0, +, 2.0, *, FastMath, ., sqrt, (, 70.0, ), ), /, 63.0, ), }]
[-, FastMath, ., sqrt, (, (, 35.0, +, 2.0, *, FastMath, ., sqrt, (, 70.0, ), ), /, 63.0, )]
[FastMath, ., sqrt, (, (, 35.0, +, 2.0, *, FastMath, ., sqrt, (, 70.0, ), ), /, 63.0, )]
[FastMath]
[(, 35.0, +, 2.0, *, FastMath, ., sqrt, (, 70.0, ), ), /, 63.0]
[(, 35.0, +, 2.0, *, FastMath, ., sqrt, (, 70.0, ), )]
[35.0, +, 2.0, *, FastMath, ., sqrt, (, 70.0, )]
[35.0]
[2.0, *, FastMath, ., sqrt, (, 70.0, )]
[2.0]
[FastMath, ., sqrt, (, 70.0, )]
[FastMath]
[70.0]
[63.0]
[-, FastMath, ., sqrt, (, (, 35.0, -, 2.0, *, FastMath, ., sqrt, (, 70.0, ), ), /, 63.0, )]
[FastMath, ., sqrt, (, (, 35.0, -, 2.0, *, FastMath, ., sqrt, (, 70.0, ), ), /, 63.0, )]
[FastMath]
[(, 35.0, -, 2.0, *, FastMath, ., sqrt, (, 70.0, ), ), /, 63.0]
[(, 35.0, -, 2.0, *, FastMath, ., sqrt, (, 70.0, ), )]
[35.0, -, 2.0, *, FastMath, ., sqrt, (, 70.0, )]
[35.0]
[2.0, *, FastMath, ., sqrt, (, 70.0, )]
[2.0]
[FastMath, ., sqrt, (, 70.0, )]
[FastMath]
[70.0]
[63.0]
[0.0]
[FastMath, ., sqrt, (, (, 35.0, -, 2.0, *, FastMath, ., sqrt, (, 70.0, ), ), /, 63.0, )]
[FastMath]
[(, 35.0, -, 2.0, *, FastMath, ., sqrt, (, 70.0, ), ), /, 63.0]
[(, 35.0, -, 2.0, *, FastMath, ., sqrt, (, 70.0, ), )]
[35.0, -, 2.0, *, FastMath, ., sqrt, (, 70.0, )]
[35.0]
[2.0, *, FastMath, ., sqrt, (, 70.0, )]
[2.0]
[FastMath, ., sqrt, (, 70.0, )]
[FastMath]
[70.0]
[63.0]
[FastMath, ., sqrt, (, (, 35.0, +, 2.0, *, FastMath, ., sqrt, (, 70.0, ), ), /, 63.0, )]
[FastMath]
[(, 35.0, +, 2.0, *, FastMath, ., sqrt, (, 70.0, ), ), /, 63.0]
[(, 35.0, +, 2.0, *, FastMath, ., sqrt, (, 70.0, ), )]
[35.0, +, 2.0, *, FastMath, ., sqrt, (, 70.0, )]
[35.0]
[2.0, *, FastMath, ., sqrt, (, 70.0, )]
[2.0]
[FastMath, ., sqrt, (, 70.0, )]
[FastMath]
[70.0]
[63.0]
[{, (, 322.0, -, 13.0, *, FastMath, ., sqrt, (, 70.0, ), ), /, 900.0, ,, (, 322.0, +, 13.0, *, FastMath, ., sqrt, (, 70.0, ), ), /, 900.0, ,, 128.0, /, 225.0, ,, (, 322.0, +, 13.0, *, FastMath, ., sqrt, (, 70.0, ), ), /, 900.0, ,, (, 322.0, -, 13.0, *, FastMath, ., sqrt, (, 70.0, ), ), /, 900.0, }]
[(, 322.0, -, 13.0, *, FastMath, ., sqrt, (, 70.0, ), ), /, 900.0]
[(, 322.0, -, 13.0, *, FastMath, ., sqrt, (, 70.0, ), )]
[322.0, -, 13.0, *, FastMath, ., sqrt, (, 70.0, )]
[322.0]
[13.0, *, FastMath, ., sqrt, (, 70.0, )]
[13.0]
[FastMath, ., sqrt, (, 70.0, )]
[FastMath]
[70.0]
[900.0]
[(, 322.0, +, 13.0, *, FastMath, ., sqrt, (, 70.0, ), ), /, 900.0]
[(, 322.0, +, 13.0, *, FastMath, ., sqrt, (, 70.0, ), )]
[322.0, +, 13.0, *, FastMath, ., sqrt, (, 70.0, )]
[322.0]
[13.0, *, FastMath, ., sqrt, (, 70.0, )]
[13.0]
[FastMath, ., sqrt, (, 70.0, )]
[FastMath]
[70.0]
[900.0]
[128.0, /, 225.0]
[128.0]
[225.0]
[(, 322.0, +, 13.0, *, FastMath, ., sqrt, (, 70.0, ), ), /, 900.0]
[(, 322.0, +, 13.0, *, FastMath, ., sqrt, (, 70.0, ), )]
[322.0, +, 13.0, *, FastMath, ., sqrt, (, 70.0, )]
[322.0]
[13.0, *, FastMath, ., sqrt, (, 70.0, )]
[13.0]
[FastMath, ., sqrt, (, 70.0, )]
[FastMath]
[70.0]
[900.0]
[(, 322.0, -, 13.0, *, FastMath, ., sqrt, (, 70.0, ), ), /, 900.0]
[(, 322.0, -, 13.0, *, FastMath, ., sqrt, (, 70.0, ), )]
[322.0, -, 13.0, *, FastMath, ., sqrt, (, 70.0, )]
[322.0]
[13.0, *, FastMath, ., sqrt, (, 70.0, )]
[13.0]
[FastMath, ., sqrt, (, 70.0, )]
[FastMath]
[70.0]
[900.0]
[relativeAccuracy]
[absoluteAccuracy]
[minimalIterationCount]
[maximalIterationCount]
[n]
[2]
[abscissas]
[ABSCISSAS_2]
[weights]
[WEIGHTS_2]
[3]
[abscissas]
[ABSCISSAS_3]
[weights]
[WEIGHTS_3]
[4]
[abscissas]
[ABSCISSAS_4]
[weights]
[WEIGHTS_4]
[5]
[abscissas]
[ABSCISSAS_5]
[weights]
[WEIGHTS_5]
[new, MathIllegalArgumentException, (, LocalizedFormats, ., N_POINTS_GAUSS_LEGENDRE_INTEGRATOR_NOT_SUPPORTED, ,, n, ,, 2, ,, 5, )]
[LocalizedFormats, ., N_POINTS_GAUSS_LEGENDRE_INTEGRATOR_NOT_SUPPORTED]
[LocalizedFormats]
[n]
[2]
[5]
[n]
[relativeAccuracy]
[absoluteAccuracy]
[DEFAULT_MIN_ITERATIONS_COUNT]
[DEFAULT_MAX_ITERATIONS_COUNT]
[n]
[DEFAULT_RELATIVE_ACCURACY]
[DEFAULT_ABSOLUTE_ACCURACY]
[minimalIterationCount]
[maximalIterationCount]
[stage, (, 1, )]
[1]
[2]
[true]
[stage, (, n, )]
[n]
[FastMath, ., abs, (, t, -, oldt, )]
[FastMath]
[t, -, oldt]
[t]
[oldt]
[FastMath, ., max, (, getAbsoluteAccuracy, (, ), ,, getRelativeAccuracy, (, ), *, (, FastMath, ., abs, (, oldt, ), +, FastMath, ., abs, (, t, ), ), *, 0.5, )]
[FastMath]
[getAbsoluteAccuracy, (, )]
[getRelativeAccuracy, (, ), *, (, FastMath, ., abs, (, oldt, ), +, FastMath, ., abs, (, t, ), ), *, 0.5]
[getRelativeAccuracy, (, ), *, (, FastMath, ., abs, (, oldt, ), +, FastMath, ., abs, (, t, ), )]
[getRelativeAccuracy, (, )]
[(, FastMath, ., abs, (, oldt, ), +, FastMath, ., abs, (, t, ), )]
[FastMath, ., abs, (, oldt, ), +, FastMath, ., abs, (, t, )]
[FastMath, ., abs, (, oldt, )]
[FastMath]
[oldt]
[FastMath, ., abs, (, t, )]
[FastMath]
[t]
[0.5]
[(, iterations, ., getCount, (, ), +, 1, >=, getMinimalIterationCount, (, ), ), &&, (, delta, <=, limit, )]
[(, iterations, ., getCount, (, ), +, 1, >=, getMinimalIterationCount, (, ), )]
[iterations, ., getCount, (, ), +, 1, >=, getMinimalIterationCount, (, )]
[iterations, ., getCount, (, ), +, 1]
[iterations, ., getCount, (, )]
[iterations]
[1]
[getMinimalIterationCount, (, )]
[(, delta, <=, limit, )]
[delta, <=, limit]
[delta]
[limit]
[t]
[FastMath, ., min, (, 4, ,, FastMath, ., pow, (, delta, /, limit, ,, 0.5, /, abscissas, ., length, ), )]
[FastMath]
[4]
[FastMath, ., pow, (, delta, /, limit, ,, 0.5, /, abscissas, ., length, )]
[FastMath]
[delta, /, limit]
[delta]
[limit]
[0.5, /, abscissas, ., length]
[0.5]
[abscissas, ., length]
[abscissas]
[n]
[FastMath, ., max, (, (, int, ), (, ratio, *, n, ), ,, n, +, 1, )]
[FastMath]
[(, int, ), (, ratio, *, n, )]
[(, ratio, *, n, )]
[ratio, *, n]
[ratio]
[n]
[n, +, 1]
[n]
[1]
[oldt]
[t]
[iterations, ., incrementCount, (, )]
[iterations]
[(, getMax, (, ), -, getMin, (, ), ), /, n]
[(, getMax, (, ), -, getMin, (, ), )]
[getMax, (, ), -, getMin, (, )]
[getMax, (, )]
[getMin, (, )]
[n]
[step, /, 2.0]
[step]
[2.0]
[getMin, (, ), +, halfStep]
[getMin, (, )]
[halfStep]
[0.0]
[0]
[i, <, n]
[i]
[n]
[++, i]
[i]
[0]
[j, <, abscissas, ., length]
[j]
[abscissas, ., length]
[abscissas]
[++, j]
[j]
[sum]
[weights, [, j, ], *, computeObjectiveValue, (, midPoint, +, halfStep, *, abscissas, [, j, ], )]
[weights, [, j, ]]
[weights]
[j]
[computeObjectiveValue, (, midPoint, +, halfStep, *, abscissas, [, j, ], )]
[midPoint, +, halfStep, *, abscissas, [, j, ]]
[midPoint]
[halfStep, *, abscissas, [, j, ]]
[halfStep]
[abscissas, [, j, ]]
[abscissas]
[j]
[midPoint]
[step]
[halfStep, *, sum]
[halfStep]
[sum]
