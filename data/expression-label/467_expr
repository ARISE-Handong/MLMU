[compiler]
[false]
[this, ., compiler]
[this]
[compiler]
[this, ., checkOnly]
[this]
[checkOnly]
[checkOnly]
[Preconditions, ., checkState, (, false, ,, "normalizeNodeType constraints violated", )]
[Preconditions]
[false]
["normalizeNodeType constraints violated"]
[checkOnly]
[normalizeNodeTypes, (, root, )]
[root]
[externs, !=, null]
[externs]
[null]
[NodeTraversal, ., traverse, (, compiler, ,, externs, ,, new, PrepareAnnotations, (, ), )]
[NodeTraversal]
[compiler]
[externs]
[new, PrepareAnnotations, (, )]
[root, !=, null]
[root]
[null]
[NodeTraversal, ., traverse, (, compiler, ,, root, ,, new, PrepareAnnotations, (, ), )]
[NodeTraversal]
[compiler]
[root]
[new, PrepareAnnotations, (, )]
[normalizeBlocks, (, n, )]
[n]
[n, ., getFirstChild, (, )]
[n]
[child, !=, null]
[child]
[null]
[child]
[child, ., getNext, (, )]
[child]
[Preconditions, ., checkState, (, child, ., getParent, (, ), ==, n, )]
[Preconditions]
[child, ., getParent, (, ), ==, n]
[child, ., getParent, (, )]
[child]
[n]
[normalizeNodeTypes, (, child, )]
[child]
[NodeUtil, ., isControlStructure, (, n, ), &&, !, n, ., isLabel, (, ), &&, !, n, ., isSwitch, (, )]
[NodeUtil, ., isControlStructure, (, n, ), &&, !, n, ., isLabel, (, )]
[NodeUtil, ., isControlStructure, (, n, )]
[NodeUtil]
[n]
[!, n, ., isLabel, (, )]
[n, ., isLabel, (, )]
[n]
[!, n, ., isSwitch, (, )]
[n, ., isSwitch, (, )]
[n]
[n, ., getFirstChild, (, )]
[n]
[c, !=, null]
[c]
[null]
[c]
[c, ., getNext, (, )]
[c]
[NodeUtil, ., isControlStructureCodeBlock, (, n, ,, c, ), &&, !, c, ., isBlock, (, )]
[NodeUtil, ., isControlStructureCodeBlock, (, n, ,, c, )]
[NodeUtil]
[n]
[c]
[!, c, ., isBlock, (, )]
[c, ., isBlock, (, )]
[c]
[IR, ., block, (, ), ., srcref, (, n, )]
[IR, ., block, (, )]
[IR]
[n]
[n, ., replaceChild, (, c, ,, newBlock, )]
[n]
[c]
[newBlock]
[!, c, ., isEmpty, (, )]
[c, ., isEmpty, (, )]
[c]
[newBlock, ., addChildrenToFront, (, c, )]
[newBlock]
[c]
[newBlock, ., setWasEmptyNode, (, true, )]
[newBlock]
[true]
[c]
[newBlock]
[reportChange, (, )]
[n, ., isObjectLit, (, )]
[n]
[normalizeObjectLiteralAnnotations, (, n, )]
[n]
[true]
[n, ., getType, (, )]
[n]
[Token, ., CALL]
[Token]
[annotateCalls, (, n, )]
[n]
[Token, ., FUNCTION]
[Token]
[annotateDispatchers, (, n, ,, parent, )]
[n]
[parent]
[Preconditions, ., checkState, (, objlit, ., isObjectLit, (, ), )]
[Preconditions]
[objlit, ., isObjectLit, (, )]
[objlit]
[objlit, ., getFirstChild, (, )]
[objlit]
[key, !=, null]
[key]
[null]
[key]
[key, ., getNext, (, )]
[key]
[key, ., getFirstChild, (, )]
[key]
[normalizeObjectLiteralKeyAnnotations, (, objlit, ,, key, ,, value, )]
[objlit]
[key]
[value]
[Preconditions, ., checkState, (, n, ., isCall, (, ), )]
[Preconditions]
[n, ., isCall, (, )]
[n]
[n, ., getFirstChild, (, )]
[n]
[!, NodeUtil, ., isGet, (, first, )]
[NodeUtil, ., isGet, (, first, )]
[NodeUtil]
[first]
[n, ., putBooleanProp, (, Node, ., FREE_CALL, ,, true, )]
[n]
[Node, ., FREE_CALL]
[Node]
[true]
[first, ., isName, (, ), &&, "eval", ., equals, (, first, ., getString, (, ), )]
[first, ., isName, (, )]
[first]
["eval", ., equals, (, first, ., getString, (, ), )]
["eval"]
[first, ., getString, (, )]
[first]
[first, ., putBooleanProp, (, Node, ., DIRECT_EVAL, ,, true, )]
[first]
[Node, ., DIRECT_EVAL]
[Node]
[true]
[Preconditions, ., checkState, (, n, ., isFunction, (, ), )]
[Preconditions]
[n, ., isFunction, (, )]
[n]
[parent, ., getJSDocInfo, (, ), !=, null, &&, parent, ., getJSDocInfo, (, ), ., isJavaDispatch, (, )]
[parent, ., getJSDocInfo, (, ), !=, null]
[parent, ., getJSDocInfo, (, )]
[parent]
[null]
[parent, ., getJSDocInfo, (, ), ., isJavaDispatch, (, )]
[parent, ., getJSDocInfo, (, )]
[parent]
[parent, ., isAssign, (, )]
[parent]
[Preconditions, ., checkState, (, parent, ., getLastChild, (, ), ==, n, )]
[Preconditions]
[parent, ., getLastChild, (, ), ==, n]
[parent, ., getLastChild, (, )]
[parent]
[n]
[n, ., putBooleanProp, (, Node, ., IS_DISPATCHER, ,, true, )]
[n]
[Node, ., IS_DISPATCHER]
[Node]
[true]
[Preconditions, ., checkState, (, objlit, ., isObjectLit, (, ), )]
[Preconditions]
[objlit, ., isObjectLit, (, )]
[objlit]
[key, ., getJSDocInfo, (, ), !=, null, &&, value, ., isFunction, (, )]
[key, ., getJSDocInfo, (, ), !=, null]
[key, ., getJSDocInfo, (, )]
[key]
[null]
[value, ., isFunction, (, )]
[value]
[value, ., setJSDocInfo, (, key, ., getJSDocInfo, (, ), )]
[value]
[key, ., getJSDocInfo, (, )]
[key]
