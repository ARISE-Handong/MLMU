[-, 1L]
[1L]
[Maps, ., newLinkedHashMap, (, )]
[Maps]
[other, ., elements, (, )]
[other]
[union, (, elem, ,, other, ., find, (, elem, ), )]
[elem]
[other, ., find, (, elem, )]
[other]
[elem]
[union, (, e, ,, e, )]
[e]
[e]
[findRootOrCreateNode, (, a, )]
[a]
[findRootOrCreateNode, (, b, )]
[b]
[nodeA, ==, nodeB]
[nodeA]
[nodeB]
[nodeA, ., element]
[nodeA]
[nodeA, ., rank, >, nodeB, ., rank]
[nodeA, ., rank]
[nodeA]
[nodeB, ., rank]
[nodeB]
[nodeB, ., parent]
[nodeB]
[nodeA]
[nodeA, ., size]
[nodeA]
[nodeB, ., size]
[nodeB]
[nodeA, ., element]
[nodeA]
[nodeA, ., parent]
[nodeA]
[nodeB]
[nodeA, ., rank, ==, nodeB, ., rank]
[nodeA, ., rank]
[nodeA]
[nodeB, ., rank]
[nodeB]
[nodeB, ., rank, ++]
[nodeB, ., rank]
[nodeB]
[nodeB, ., size]
[nodeB]
[nodeA, ., size]
[nodeA]
[nodeB, ., element]
[nodeB]
[checkArgument, (, elmap, ., containsKey, (, e, ), ,, "Element does not exist: %s", ,, e, )]
[elmap, ., containsKey, (, e, )]
[elmap]
[e]
["Element does not exist: %s"]
[e]
[findRoot, (, elmap, ., get, (, e, ), ), ., element]
[findRoot, (, elmap, ., get, (, e, ), )]
[elmap, ., get, (, e, )]
[elmap]
[e]
[find, (, a, )]
[a]
[find, (, b, )]
[b]
[aRep, ==, bRep]
[aRep]
[bRep]
[Collections, ., unmodifiableSet, (, elmap, ., keySet, (, ), )]
[Collections]
[elmap, ., keySet, (, )]
[elmap]
[Maps, ., newHashMap, (, )]
[Maps]
[elmap, ., values, (, )]
[elmap]
[findRoot, (, elem, )]
[elem]
[groupsTmp, ., get, (, root, )]
[groupsTmp]
[root]
[builder, ==, null]
[builder]
[null]
[builder]
[ImmutableSet, ., builder, (, )]
[ImmutableSet]
[groupsTmp, ., put, (, root, ,, builder, )]
[groupsTmp]
[root]
[builder]
[builder, ., add, (, elem, ., element, )]
[builder]
[elem, ., element]
[elem]
[ImmutableList, ., builder, (, )]
[ImmutableList]
[groupsTmp, ., values, (, )]
[groupsTmp]
[result, ., add, (, group, ., build, (, ), )]
[result]
[group, ., build, (, )]
[group]
[result, ., build, (, )]
[result]
[elmap, ., get, (, e, )]
[elmap]
[e]
[node, !=, null]
[node]
[null]
[findRoot, (, node, )]
[node]
[node]
[new, Node, <, E, >, (, e, )]
[e]
[elmap, ., put, (, e, ,, node, )]
[elmap]
[e]
[node]
[node]
[node, ., parent, !=, node]
[node, ., parent]
[node]
[node]
[node, ., parent]
[node]
[findRoot, (, node, ., parent, )]
[node, ., parent]
[node]
[node, ., parent]
[node]
[checkArgument, (, elmap, ., containsKey, (, value, ), ,, "Element does not exist: ", +, value, )]
[elmap, ., containsKey, (, value, )]
[elmap]
[value]
["Element does not exist: ", +, value]
["Element does not exist: "]
[value]
[new, Predicate, <, Object, >, (, ), {, Node, <, E, >, nodeForValue, =, elmap, ., get, (, value, ), ;, @, Override, public, boolean, apply, (, @, Nullable, Object, b, ), {, if, (, Objects, ., equal, (, value, ,, b, ), ), {, return, true, ;, }, Node, <, E, >, nodeForB, =, elmap, ., get, (, b, ), ;, if, (, nodeForB, ==, null, ), {, return, false, ;, }, nodeForValue, =, findRoot, (, nodeForValue, ), ;, return, findRoot, (, nodeForB, ), ==, nodeForValue, ;, }, }]
[elmap, ., get, (, value, )]
[elmap]
[value]
[Objects, ., equal, (, value, ,, b, )]
[Objects]
[value]
[b]
[true]
[elmap, ., get, (, b, )]
[elmap]
[b]
[nodeForB, ==, null]
[nodeForB]
[null]
[false]
[nodeForValue]
[findRoot, (, nodeForValue, )]
[nodeForValue]
[findRoot, (, nodeForB, ), ==, nodeForValue]
[findRoot, (, nodeForB, )]
[nodeForB]
[nodeForValue]
[new, AbstractSet, <, E, >, (, ), {, @, Override, public, boolean, contains, (, Object, o, ), {, return, isSameRoot, ., apply, (, o, ), ;, }, @, Override, public, Iterator, <, E, >, iterator, (, ), {, return, filter, (, elmap, ., keySet, (, ), ., iterator, (, ), ,, isSameRoot, ), ;, }, @, Override, public, int, size, (, ), {, return, findRoot, (, elmap, ., get, (, value, ), ), ., size, ;, }, }]
[isSameRoot, ., apply, (, o, )]
[isSameRoot]
[o]
[filter, (, elmap, ., keySet, (, ), ., iterator, (, ), ,, isSameRoot, )]
[elmap, ., keySet, (, ), ., iterator, (, )]
[elmap, ., keySet, (, )]
[elmap]
[isSameRoot]
[findRoot, (, elmap, ., get, (, value, ), ), ., size]
[findRoot, (, elmap, ., get, (, value, ), )]
[elmap, ., get, (, value, )]
[elmap]
[value]
[0]
[1]
[this, ., parent]
[this]
[this]
[this, ., element]
[this]
[element]
