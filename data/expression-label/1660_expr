[CharMatcher, ., inRange, (, 'a', ,, 'z', ), ., or, (, CharMatcher, ., inRange, (, 'A', ,, 'Z', ), ), ., or, (, CharMatcher, ., anyOf, (, "0123456789_.", ), )]
[CharMatcher, ., inRange, (, 'a', ,, 'z', ), ., or, (, CharMatcher, ., inRange, (, 'A', ,, 'Z', ), )]
[CharMatcher, ., inRange, (, 'a', ,, 'z', )]
[CharMatcher]
['a']
['z']
[CharMatcher, ., inRange, (, 'A', ,, 'Z', )]
[CharMatcher]
['A']
['Z']
[CharMatcher, ., anyOf, (, "0123456789_.", )]
[CharMatcher]
["0123456789_."]
[DiagnosticType, ., warning, (, "JSC_UNKNOWN_TWEAK_WARNING", ,, "no tweak registered with ID {0}", )]
[DiagnosticType]
["JSC_UNKNOWN_TWEAK_WARNING"]
["no tweak registered with ID {0}"]
[DiagnosticType, ., error, (, "JSC_TWEAK_MULTIPLY_REGISTERED_ERROR", ,, "Tweak {0} has already been registered.", )]
[DiagnosticType]
["JSC_TWEAK_MULTIPLY_REGISTERED_ERROR"]
["Tweak {0} has already been registered."]
[DiagnosticType, ., error, (, "JSC_NON_LITERAL_TWEAK_ID_ERROR", ,, "tweak ID must be a string literal", )]
[DiagnosticType]
["JSC_NON_LITERAL_TWEAK_ID_ERROR"]
["tweak ID must be a string literal"]
[DiagnosticType, ., warning, (, "JSC_INVALID_TWEAK_DEFAULT_VALUE_WARNING", ,, "tweak {0} registered with {1} must have a default value that is a ", +, "literal of type {2}", )]
[DiagnosticType]
["JSC_INVALID_TWEAK_DEFAULT_VALUE_WARNING"]
["tweak {0} registered with {1} must have a default value that is a ", +, "literal of type {2}"]
["tweak {0} registered with {1} must have a default value that is a "]
["literal of type {2}"]
[DiagnosticType, ., error, (, "JSC_NON_GLOBAL_TWEAK_INIT_ERROR", ,, "tweak declaration {0} must occur in the global scope", )]
[DiagnosticType]
["JSC_NON_GLOBAL_TWEAK_INIT_ERROR"]
["tweak declaration {0} must occur in the global scope"]
[DiagnosticType, ., error, (, "JSC_TWEAK_OVERRIDE_AFTER_REGISTERED_ERROR", ,, "Cannot override the default value of tweak {0} after it has been ", +, "registered", )]
[DiagnosticType]
["JSC_TWEAK_OVERRIDE_AFTER_REGISTERED_ERROR"]
["Cannot override the default value of tweak {0} after it has been ", +, "registered"]
["Cannot override the default value of tweak {0} after it has been "]
["registered"]
[DiagnosticType, ., warning, (, "JSC_TWEAK_WRONG_GETTER_TYPE_WARNING", ,, "tweak getter function {0} used for tweak registered using {1}", )]
[DiagnosticType]
["JSC_TWEAK_WRONG_GETTER_TYPE_WARNING"]
["tweak getter function {0} used for tweak registered using {1}"]
[DiagnosticType, ., error, (, "JSC_INVALID_TWEAK_ID_ERROR", ,, "tweak ID contains illegal characters. Only letters, numbers, _ ", +, "and . are allowed", )]
[DiagnosticType]
["JSC_INVALID_TWEAK_ID_ERROR"]
["tweak ID contains illegal characters. Only letters, numbers, _ ", +, "and . are allowed"]
["tweak ID contains illegal characters. Only letters, numbers, _ "]
["and . are allowed"]
[name]
[null]
[Token, ., ERROR]
[Token]
[Token, ., ERROR]
[Token]
[null]
[name]
[expectedTypeName]
[validNodeTypeA]
[Token, ., ERROR]
[Token]
[null]
[name]
[expectedTypeName]
[validNodeTypeA]
[validNodeTypeB]
[null]
[name]
[null]
[Token, ., ERROR]
[Token]
[Token, ., ERROR]
[Token]
[registerFunction]
[this, ., name]
[this]
[name]
[this, ., expectedTypeName]
[this]
[expectedTypeName]
[this, ., validNodeTypeA]
[this]
[validNodeTypeA]
[this, ., validNodeTypeB]
[this]
[validNodeTypeB]
[this, ., registerFunction]
[this]
[registerFunction]
[type, ==, validNodeTypeA, ||, type, ==, validNodeTypeB]
[type, ==, validNodeTypeA]
[type]
[validNodeTypeA]
[type, ==, validNodeTypeB]
[type]
[validNodeTypeB]
[Preconditions, ., checkNotNull, (, registerFunction, )]
[Preconditions]
[registerFunction]
[this, ., registerFunction, ==, registerFunction]
[this, ., registerFunction]
[this]
[registerFunction]
[registerFunction, !=, null]
[registerFunction]
[null]
[name]
[expectedTypeName]
[this]
[REGISTER_BOOLEAN]
[IR, ., falseNode, (, )]
[IR]
[REGISTER_NUMBER]
[IR, ., number, (, 0, )]
[IR]
[0]
[REGISTER_STRING]
[IR, ., string, (, "", )]
[IR]
[""]
[new, IllegalStateException, (, )]
["goog.tweak.registerBoolean"]
["boolean"]
[Token, ., TRUE]
[Token]
[Token, ., FALSE]
[Token]
["goog.tweak.registerNumber"]
["number"]
[Token, ., NUMBER]
[Token]
["goog.tweak.registerString"]
["string"]
[Token, ., STRING]
[Token]
["goog.tweak.overrideDefaultValue"]
["goog.tweak.getCompilerOverrides_"]
["goog.tweak.getBoolean"]
[REGISTER_BOOLEAN]
["goog.tweak.getNumber"]
[REGISTER_NUMBER]
["goog.tweak.getString"]
[REGISTER_STRING]
[TWEAK_FUNCTIONS_MAP]
[Maps, ., newHashMap, (, )]
[Maps]
[TweakFunction, ., values, (, )]
[TweakFunction]
[TWEAK_FUNCTIONS_MAP, ., put, (, func, ., getName, (, ), ,, func, )]
[TWEAK_FUNCTIONS_MAP]
[func, ., getName, (, )]
[func]
[func]
[this, ., compiler]
[this]
[compiler]
[this, ., stripTweaks]
[this]
[stripTweaks]
[this, ., compilerDefaultValueOverrides]
[this]
[Maps, ., newTreeMap, (, )]
[Maps]
[this, ., compilerDefaultValueOverrides, ., putAll, (, compilerDefaultValueOverrides, )]
[this, ., compilerDefaultValueOverrides]
[this]
[compilerDefaultValueOverrides]
[collectTweaks, (, root, )]
[root]
[applyCompilerDefaultValueOverrides, (, result, ., tweakInfos, )]
[result, ., tweakInfos]
[result]
[false]
[stripTweaks]
[changed]
[stripAllCalls, (, result, ., tweakInfos, )]
[result, ., tweakInfos]
[result]
[!, compilerDefaultValueOverrides, ., isEmpty, (, )]
[compilerDefaultValueOverrides, ., isEmpty, (, )]
[compilerDefaultValueOverrides]
[changed]
[replaceGetCompilerOverridesCalls, (, result, ., getOverridesCalls, )]
[result, ., getOverridesCalls]
[result]
[changed]
[compiler, ., reportCodeChange, (, )]
[compiler]
[calls]
[call, ., callNode]
[call]
[createCompilerDefaultValueOverridesVarNode, (, callNode, )]
[callNode]
[callNode, ., getParent, (, ), ., replaceChild, (, callNode, ,, objNode, )]
[callNode, ., getParent, (, )]
[callNode]
[callNode]
[objNode]
[!, calls, ., isEmpty, (, )]
[calls, ., isEmpty, (, )]
[calls]
[tweakInfos, ., values, (, )]
[tweakInfos]
[tweakInfo, ., isRegistered, (, )]
[tweakInfo]
[tweakInfo, ., functionCalls]
[tweakInfo]
[functionCall, ., callNode]
[functionCall]
[callNode, ., getParent, (, )]
[callNode]
[functionCall, ., tweakFunc, ., isGetterFunction, (, )]
[functionCall, ., tweakFunc]
[functionCall]
[isRegistered]
[newValue]
[tweakInfo, ., getDefaultValueNode, (, ), ., cloneNode, (, )]
[tweakInfo, ., getDefaultValueNode, (, )]
[tweakInfo]
[functionCall, ., tweakFunc, ., registerFunction]
[functionCall, ., tweakFunc]
[functionCall]
[newValue]
[registerFunction, ., createDefaultValueNode, (, )]
[registerFunction]
[parent, ., replaceChild, (, callNode, ,, newValue, )]
[parent]
[callNode]
[newValue]
[IR, ., voidNode, (, IR, ., number, (, 0, ), ., srcref, (, callNode, ), ), ., srcref, (, callNode, )]
[IR, ., voidNode, (, IR, ., number, (, 0, ), ., srcref, (, callNode, ), )]
[IR]
[IR, ., number, (, 0, ), ., srcref, (, callNode, )]
[IR, ., number, (, 0, )]
[IR]
[0]
[callNode]
[callNode]
[parent, ., replaceChild, (, callNode, ,, voidZeroNode, )]
[parent]
[callNode]
[voidZeroNode]
[!, tweakInfos, ., isEmpty, (, )]
[tweakInfos, ., isEmpty, (, )]
[tweakInfos]
[IR, ., objectlit, (, ), ., srcref, (, sourceInformationNode, )]
[IR, ., objectlit, (, )]
[IR]
[sourceInformationNode]
[compilerDefaultValueOverrides, ., entrySet, (, )]
[compilerDefaultValueOverrides]
[IR, ., stringKey, (, entry, ., getKey, (, ), ), ., copyInformationFrom, (, sourceInformationNode, )]
[IR, ., stringKey, (, entry, ., getKey, (, ), )]
[IR]
[entry, ., getKey, (, )]
[entry]
[sourceInformationNode]
[entry, ., getValue, (, ), ., cloneNode, (, ), ., copyInformationFrom, (, sourceInformationNode, )]
[entry, ., getValue, (, ), ., cloneNode, (, )]
[entry, ., getValue, (, )]
[entry]
[sourceInformationNode]
[objKeyNode, ., addChildToBack, (, objValueNode, )]
[objKeyNode]
[objValueNode]
[objNode, ., addChildToBack, (, objKeyNode, )]
[objNode]
[objKeyNode]
[objNode]
[compilerDefaultValueOverrides, ., entrySet, (, )]
[compilerDefaultValueOverrides]
[entry, ., getKey, (, )]
[entry]
[tweakInfos, ., get, (, tweakId, )]
[tweakInfos]
[tweakId]
[tweakInfo, ==, null]
[tweakInfo]
[null]
[compiler, ., report, (, JSError, ., make, (, UNKNOWN_TWEAK_WARNING, ,, tweakId, ), )]
[compiler]
[JSError, ., make, (, UNKNOWN_TWEAK_WARNING, ,, tweakId, )]
[JSError]
[UNKNOWN_TWEAK_WARNING]
[tweakId]
[tweakInfo, ., registerCall, ., tweakFunc]
[tweakInfo, ., registerCall]
[tweakInfo]
[entry, ., getValue, (, )]
[entry]
[!, registerFunc, ., isValidNodeType, (, value, ., getType, (, ), )]
[registerFunc, ., isValidNodeType, (, value, ., getType, (, ), )]
[registerFunc]
[value, ., getType, (, )]
[value]
[compiler, ., report, (, JSError, ., make, (, INVALID_TWEAK_DEFAULT_VALUE_WARNING, ,, tweakId, ,, registerFunc, ., getName, (, ), ,, registerFunc, ., getExpectedTypeName, (, ), ), )]
[compiler]
[JSError, ., make, (, INVALID_TWEAK_DEFAULT_VALUE_WARNING, ,, tweakId, ,, registerFunc, ., getName, (, ), ,, registerFunc, ., getExpectedTypeName, (, ), )]
[JSError]
[INVALID_TWEAK_DEFAULT_VALUE_WARNING]
[tweakId]
[registerFunc, ., getName, (, )]
[registerFunc]
[registerFunc, ., getExpectedTypeName, (, )]
[registerFunc]
[tweakInfo, ., defaultValueNode]
[tweakInfo]
[value]
[new, CollectTweaks, (, )]
[NodeTraversal, ., traverse, (, compiler, ,, root, ,, pass, )]
[NodeTraversal]
[compiler]
[root]
[pass]
[pass, ., allTweaks]
[pass]
[tweakInfos, ., values, (, )]
[tweakInfos]
[tweakInfo, ., emitAllWarnings, (, )]
[tweakInfo]
[new, CollectTweaksResult, (, tweakInfos, ,, pass, ., getOverridesCalls, )]
[tweakInfos]
[pass, ., getOverridesCalls]
[pass]
[this, ., tweakInfos]
[this]
[tweakInfos]
[this, ., getOverridesCalls]
[this]
[getOverridesCalls]
[Maps, ., newHashMap, (, )]
[Maps]
[Lists, ., newArrayList, (, )]
[Lists]
[@, SuppressWarnings, (, "incomplete-switch", )]
["incomplete-switch"]
[!, n, ., isCall, (, )]
[n, ., isCall, (, )]
[n]
[n, ., getFirstChild, (, ), ., getQualifiedName, (, )]
[n, ., getFirstChild, (, )]
[n]
[TWEAK_FUNCTIONS_MAP, ., get, (, callName, )]
[TWEAK_FUNCTIONS_MAP]
[callName]
[tweakFunc, ==, null]
[tweakFunc]
[null]
[tweakFunc, ==, TweakFunction, ., GET_COMPILER_OVERRIDES]
[tweakFunc]
[TweakFunction, ., GET_COMPILER_OVERRIDES]
[TweakFunction]
[getOverridesCalls, ., add, (, new, TweakFunctionCall, (, t, ., getSourceName, (, ), ,, tweakFunc, ,, n, ), )]
[getOverridesCalls]
[new, TweakFunctionCall, (, t, ., getSourceName, (, ), ,, tweakFunc, ,, n, )]
[t, ., getSourceName, (, )]
[t]
[tweakFunc]
[n]
[n, ., getFirstChild, (, ), ., getNext, (, )]
[n, ., getFirstChild, (, )]
[n]
[!, tweakIdNode, ., isString, (, )]
[tweakIdNode, ., isString, (, )]
[tweakIdNode]
[compiler, ., report, (, t, ., makeError, (, tweakIdNode, ,, NON_LITERAL_TWEAK_ID_ERROR, ), )]
[compiler]
[t, ., makeError, (, tweakIdNode, ,, NON_LITERAL_TWEAK_ID_ERROR, )]
[t]
[tweakIdNode]
[NON_LITERAL_TWEAK_ID_ERROR]
[tweakIdNode, ., getString, (, )]
[tweakIdNode]
[allTweaks, ., get, (, tweakId, )]
[allTweaks]
[tweakId]
[tweakInfo, ==, null]
[tweakInfo]
[null]
[tweakInfo]
[new, TweakInfo, (, tweakId, )]
[tweakId]
[allTweaks, ., put, (, tweakId, ,, tweakInfo, )]
[allTweaks]
[tweakId]
[tweakInfo]
[tweakFunc]
[REGISTER_BOOLEAN]
[REGISTER_NUMBER]
[REGISTER_STRING]
[!, ID_MATCHER, ., matchesAllOf, (, tweakId, )]
[ID_MATCHER, ., matchesAllOf, (, tweakId, )]
[ID_MATCHER]
[tweakId]
[compiler, ., report, (, t, ., makeError, (, tweakIdNode, ,, INVALID_TWEAK_ID_ERROR, ), )]
[compiler]
[t, ., makeError, (, tweakIdNode, ,, INVALID_TWEAK_ID_ERROR, )]
[t]
[tweakIdNode]
[INVALID_TWEAK_ID_ERROR]
[!, t, ., inGlobalScope, (, )]
[t, ., inGlobalScope, (, )]
[t]
[compiler, ., report, (, t, ., makeError, (, n, ,, NON_GLOBAL_TWEAK_INIT_ERROR, ,, tweakId, ), )]
[compiler]
[t, ., makeError, (, n, ,, NON_GLOBAL_TWEAK_INIT_ERROR, ,, tweakId, )]
[t]
[n]
[NON_GLOBAL_TWEAK_INIT_ERROR]
[tweakId]
[tweakInfo, ., isRegistered, (, )]
[tweakInfo]
[compiler, ., report, (, t, ., makeError, (, n, ,, TWEAK_MULTIPLY_REGISTERED_ERROR, ,, tweakId, ), )]
[compiler]
[t, ., makeError, (, n, ,, TWEAK_MULTIPLY_REGISTERED_ERROR, ,, tweakId, )]
[t]
[n]
[TWEAK_MULTIPLY_REGISTERED_ERROR]
[tweakId]
[tweakIdNode, ., getNext, (, ), ., getNext, (, )]
[tweakIdNode, ., getNext, (, )]
[tweakIdNode]
[tweakInfo, ., addRegisterCall, (, t, ., getSourceName, (, ), ,, tweakFunc, ,, n, ,, tweakDefaultValueNode, )]
[tweakInfo]
[t, ., getSourceName, (, )]
[t]
[tweakFunc]
[n]
[tweakDefaultValueNode]
[OVERRIDE_DEFAULT_VALUE]
[!, t, ., inGlobalScope, (, )]
[t, ., inGlobalScope, (, )]
[t]
[compiler, ., report, (, t, ., makeError, (, n, ,, NON_GLOBAL_TWEAK_INIT_ERROR, ,, tweakId, ), )]
[compiler]
[t, ., makeError, (, n, ,, NON_GLOBAL_TWEAK_INIT_ERROR, ,, tweakId, )]
[t]
[n]
[NON_GLOBAL_TWEAK_INIT_ERROR]
[tweakId]
[tweakInfo, ., isRegistered, (, )]
[tweakInfo]
[compiler, ., report, (, t, ., makeError, (, n, ,, TWEAK_OVERRIDE_AFTER_REGISTERED_ERROR, ,, tweakId, ), )]
[compiler]
[t, ., makeError, (, n, ,, TWEAK_OVERRIDE_AFTER_REGISTERED_ERROR, ,, tweakId, )]
[t]
[n]
[TWEAK_OVERRIDE_AFTER_REGISTERED_ERROR]
[tweakId]
[tweakDefaultValueNode]
[tweakIdNode, ., getNext, (, )]
[tweakIdNode]
[tweakInfo, ., addOverrideDefaultValueCall, (, t, ., getSourceName, (, ), ,, tweakFunc, ,, n, ,, tweakDefaultValueNode, )]
[tweakInfo]
[t, ., getSourceName, (, )]
[t]
[tweakFunc]
[n]
[tweakDefaultValueNode]
[GET_BOOLEAN]
[GET_NUMBER]
[GET_STRING]
[tweakInfo, ., addGetterCall, (, t, ., getSourceName, (, ), ,, tweakFunc, ,, n, )]
[tweakInfo]
[t, ., getSourceName, (, )]
[t]
[tweakFunc]
[n]
[sourceName]
[tweakFunc]
[callNode]
[null]
[this, ., sourceName]
[this]
[sourceName]
[this, ., callNode]
[this]
[callNode]
[this, ., tweakFunc]
[this]
[tweakFunc]
[this, ., valueNode]
[this]
[valueNode]
[callNode, ., getFirstChild, (, ), ., getNext, (, )]
[callNode, ., getFirstChild, (, )]
[callNode]
[this, ., tweakId]
[this]
[tweakId]
[functionCalls]
[Lists, ., newArrayList, (, )]
[Lists]
[isRegistered, (, )]
[emitAllTypeWarnings, (, )]
[emitUnknownTweakErrors, (, )]
[functionCalls]
[call, ., valueNode]
[call]
[call, ., tweakFunc]
[call]
[registerCall, ., tweakFunc]
[registerCall]
[valueNode, !=, null]
[valueNode]
[null]
[!, registerFunc, ., isValidNodeType, (, valueNode, ., getType, (, ), )]
[registerFunc, ., isValidNodeType, (, valueNode, ., getType, (, ), )]
[registerFunc]
[valueNode, ., getType, (, )]
[valueNode]
[compiler, ., report, (, JSError, ., make, (, call, ., sourceName, ,, valueNode, ,, INVALID_TWEAK_DEFAULT_VALUE_WARNING, ,, tweakId, ,, registerFunc, ., getName, (, ), ,, registerFunc, ., getExpectedTypeName, (, ), ), )]
[compiler]
[JSError, ., make, (, call, ., sourceName, ,, valueNode, ,, INVALID_TWEAK_DEFAULT_VALUE_WARNING, ,, tweakId, ,, registerFunc, ., getName, (, ), ,, registerFunc, ., getExpectedTypeName, (, ), )]
[JSError]
[call, ., sourceName]
[call]
[valueNode]
[INVALID_TWEAK_DEFAULT_VALUE_WARNING]
[tweakId]
[registerFunc, ., getName, (, )]
[registerFunc]
[registerFunc, ., getExpectedTypeName, (, )]
[registerFunc]
[tweakFunc, ., isGetterFunction, (, )]
[tweakFunc]
[!, tweakFunc, ., isCorrectRegisterFunction, (, registerFunc, )]
[tweakFunc, ., isCorrectRegisterFunction, (, registerFunc, )]
[tweakFunc]
[registerFunc]
[compiler, ., report, (, JSError, ., make, (, call, ., sourceName, ,, call, ., callNode, ,, TWEAK_WRONG_GETTER_TYPE_WARNING, ,, tweakFunc, ., getName, (, ), ,, registerFunc, ., getName, (, ), ), )]
[compiler]
[JSError, ., make, (, call, ., sourceName, ,, call, ., callNode, ,, TWEAK_WRONG_GETTER_TYPE_WARNING, ,, tweakFunc, ., getName, (, ), ,, registerFunc, ., getName, (, ), )]
[JSError]
[call, ., sourceName]
[call]
[call, ., callNode]
[call]
[TWEAK_WRONG_GETTER_TYPE_WARNING]
[tweakFunc, ., getName, (, )]
[tweakFunc]
[registerFunc, ., getName, (, )]
[registerFunc]
[functionCalls]
[compiler, ., report, (, JSError, ., make, (, call, ., sourceName, ,, call, ., getIdNode, (, ), ,, UNKNOWN_TWEAK_WARNING, ,, tweakId, ), )]
[compiler]
[JSError, ., make, (, call, ., sourceName, ,, call, ., getIdNode, (, ), ,, UNKNOWN_TWEAK_WARNING, ,, tweakId, )]
[JSError]
[call, ., sourceName]
[call]
[call, ., getIdNode, (, )]
[call]
[UNKNOWN_TWEAK_WARNING]
[tweakId]
[registerCall]
[new, TweakFunctionCall, (, sourceName, ,, tweakFunc, ,, callNode, ,, defaultValueNode, )]
[sourceName]
[tweakFunc]
[callNode]
[defaultValueNode]
[functionCalls, ., add, (, registerCall, )]
[functionCalls]
[registerCall]
[functionCalls, ., add, (, new, TweakFunctionCall, (, sourceName, ,, tweakFunc, ,, callNode, ,, defaultValueNode, ), )]
[functionCalls]
[new, TweakFunctionCall, (, sourceName, ,, tweakFunc, ,, callNode, ,, defaultValueNode, )]
[sourceName]
[tweakFunc]
[callNode]
[defaultValueNode]
[this, ., defaultValueNode]
[this]
[defaultValueNode]
[functionCalls, ., add, (, new, TweakFunctionCall, (, sourceName, ,, tweakFunc, ,, callNode, ), )]
[functionCalls]
[new, TweakFunctionCall, (, sourceName, ,, tweakFunc, ,, callNode, )]
[sourceName]
[tweakFunc]
[callNode]
[registerCall, !=, null]
[registerCall]
[null]
[Preconditions, ., checkState, (, isRegistered, (, ), )]
[Preconditions]
[isRegistered, (, )]
[defaultValueNode, !=, null]
[defaultValueNode]
[null]
[defaultValueNode]
[registerCall, ., valueNode, !=, null]
[registerCall, ., valueNode]
[registerCall]
[null]
[registerCall, ., valueNode]
[registerCall]
[registerCall, ., tweakFunc, ., createDefaultValueNode, (, )]
[registerCall, ., tweakFunc]
[registerCall]
