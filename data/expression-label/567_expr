[DiagnosticType, ., error, (, "JSC_PARSE_ERROR", ,, "Parse error. {0}", )]
[DiagnosticType]
["JSC_PARSE_ERROR"]
["Parse error. {0}"]
[DiagnosticType, ., warning, (, "JSC_TYPE_PARSE_ERROR", ,, "{0}", )]
[DiagnosticType]
["JSC_TYPE_PARSE_ERROR"]
["{0}"]
[DiagnosticType, ., error, (, "JSC_TRAILING_COMMA", ,, "Parse error. IE8 (and below) will parse trailing commas in ", +, "array and object literals incorrectly. ", +, "If you are targeting newer versions of JS, ", +, "set the appropriate language_in option.", )]
[DiagnosticType]
["JSC_TRAILING_COMMA"]
["Parse error. IE8 (and below) will parse trailing commas in ", +, "array and object literals incorrectly. ", +, "If you are targeting newer versions of JS, ", +, "set the appropriate language_in option."]
["Parse error. IE8 (and below) will parse trailing commas in ", +, "array and object literals incorrectly. ", +, "If you are targeting newer versions of JS, "]
["Parse error. IE8 (and below) will parse trailing commas in ", +, "array and object literals incorrectly. "]
["Parse error. IE8 (and below) will parse trailing commas in "]
["array and object literals incorrectly. "]
["If you are targeting newer versions of JS, "]
["set the appropriate language_in option."]
[DiagnosticType, ., error, (, "JSC_DUPLICATE_PARAM", ,, "Parse error. {0}", )]
[DiagnosticType]
["JSC_DUPLICATE_PARAM"]
["Parse error. {0}"]
[DiagnosticType, ., warning, (, "JSC_BAD_JSDOC_ANNOTATION", ,, "Parse error. {0}", )]
[DiagnosticType]
["JSC_BAD_JSDOC_ANNOTATION"]
["Parse error. {0}"]
[DiagnosticType, ., warning, (, "JSC_MISPLACED_TYPE_ANNOTATION", ,, "Type annotations are not allowed here. ", +, "Are you missing parentheses?", )]
[DiagnosticType]
["JSC_MISPLACED_TYPE_ANNOTATION"]
["Type annotations are not allowed here. ", +, "Are you missing parentheses?"]
["Type annotations are not allowed here. "]
["Are you missing parentheses?"]
[s]
[Pattern, ., quote, (, s, )]
[Pattern]
[s]
[Pattern, ., compile, (, s, ., replaceAll, (, "\\{\\d+\\}", ,, "\\\\E.*\\\\Q", ), )]
[Pattern]
[s, ., replaceAll, (, "\\{\\d+\\}", ,, "\\\\E.*\\\\Q", )]
[s]
["\\{\\d+\\}"]
["\\\\E.*\\\\Q"]
[this, ., compiler]
[this]
[compiler]
[typeMap]
[ImmutableMap, ., of, (, replacePlaceHolders, (, com, ., google, ., javascript, ., rhino, ., head, ., ScriptRuntime, ., getMessage0, (, "msg.extra.trailing.comma", ), ), ,, TRAILING_COMMA, ,, replacePlaceHolders, (, com, ., google, ., javascript, ., rhino, ., head, ., ScriptRuntime, ., getMessage0, (, "msg.dup.parms", ), ), ,, DUPLICATE_PARAM, ,, replacePlaceHolders, (, ScriptRuntime, ., getMessage0, (, "msg.bad.jsdoc.tag", ), ), ,, BAD_JSDOC_ANNOTATION, ,, Pattern, ., compile, (, "^Type annotations are not allowed here.*", ), ,, MISPLACED_TYPE_ANNOTATION, ,, Pattern, ., compile, (, "^Bad type annotation.*", ), ,, TYPE_PARSE_ERROR, )]
[ImmutableMap]
[replacePlaceHolders, (, com, ., google, ., javascript, ., rhino, ., head, ., ScriptRuntime, ., getMessage0, (, "msg.extra.trailing.comma", ), )]
[com, ., google, ., javascript, ., rhino, ., head, ., ScriptRuntime, ., getMessage0, (, "msg.extra.trailing.comma", )]
[com, ., google, ., javascript, ., rhino, ., head, ., ScriptRuntime]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
["msg.extra.trailing.comma"]
[TRAILING_COMMA]
[replacePlaceHolders, (, com, ., google, ., javascript, ., rhino, ., head, ., ScriptRuntime, ., getMessage0, (, "msg.dup.parms", ), )]
[com, ., google, ., javascript, ., rhino, ., head, ., ScriptRuntime, ., getMessage0, (, "msg.dup.parms", )]
[com, ., google, ., javascript, ., rhino, ., head, ., ScriptRuntime]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
["msg.dup.parms"]
[DUPLICATE_PARAM]
[replacePlaceHolders, (, ScriptRuntime, ., getMessage0, (, "msg.bad.jsdoc.tag", ), )]
[ScriptRuntime, ., getMessage0, (, "msg.bad.jsdoc.tag", )]
[ScriptRuntime]
["msg.bad.jsdoc.tag"]
[BAD_JSDOC_ANNOTATION]
[Pattern, ., compile, (, "^Type annotations are not allowed here.*", )]
[Pattern]
["^Type annotations are not allowed here.*"]
[MISPLACED_TYPE_ANNOTATION]
[Pattern, ., compile, (, "^Bad type annotation.*", )]
[Pattern]
["^Bad type annotation.*"]
[TYPE_PARSE_ERROR]
[new, NewRhinoErrorReporter, (, compiler, )]
[compiler]
[new, OldRhinoErrorReporter, (, compiler, )]
[compiler]
[compiler, ., report, (, makeError, (, message, ,, sourceName, ,, line, ,, lineOffset, ,, CheckLevel, ., WARNING, ), )]
[compiler]
[makeError, (, message, ,, sourceName, ,, line, ,, lineOffset, ,, CheckLevel, ., WARNING, )]
[message]
[sourceName]
[line]
[lineOffset]
[CheckLevel, ., WARNING]
[CheckLevel]
[compiler, ., report, (, makeError, (, message, ,, sourceName, ,, line, ,, lineOffset, ,, CheckLevel, ., ERROR, ), )]
[compiler]
[makeError, (, message, ,, sourceName, ,, line, ,, lineOffset, ,, CheckLevel, ., ERROR, )]
[message]
[sourceName]
[line]
[lineOffset]
[CheckLevel, ., ERROR]
[CheckLevel]
[typeMap, ., entrySet, (, )]
[typeMap]
[entry, ., getKey, (, ), ., matcher, (, message, ), ., matches, (, )]
[entry, ., getKey, (, ), ., matcher, (, message, )]
[entry, ., getKey, (, )]
[entry]
[message]
[JSError, ., make, (, sourceName, ,, line, ,, lineOffset, ,, entry, ., getValue, (, ), ,, message, )]
[JSError]
[sourceName]
[line]
[lineOffset]
[entry, ., getValue, (, )]
[entry]
[message]
[JSError, ., make, (, sourceName, ,, line, ,, lineOffset, ,, defaultLevel, ,, PARSE_ERROR, ,, message, )]
[JSError]
[sourceName]
[line]
[lineOffset]
[defaultLevel]
[PARSE_ERROR]
[message]
[compiler]
[super, ., errorAtLine, (, message, ,, sourceName, ,, line, ,, lineOffset, )]
[super]
[message]
[sourceName]
[line]
[lineOffset]
[super, ., warningAtLine, (, message, ,, sourceName, ,, line, ,, lineOffset, )]
[super]
[message]
[sourceName]
[line]
[lineOffset]
[compiler]
[new, com, ., google, ., javascript, ., rhino, ., head, ., EvaluatorException, (, message, ,, sourceName, ,, line, ,, lineSource, ,, lineOffset, )]
[message]
[sourceName]
[line]
[lineSource]
[lineOffset]
[super, ., errorAtLine, (, message, ,, sourceName, ,, line, ,, lineOffset, )]
[super]
[message]
[sourceName]
[line]
[lineOffset]
[1]
[0]
[this, ., compiler, ., getSourceFileByName, (, sourceName, )]
[this, ., compiler]
[this]
[sourceName]
[file, !=, null]
[file]
[null]
[line]
[file, ., getLineOfOffset, (, offset, )]
[file]
[offset]
[column]
[file, ., getColumnOfOffset, (, offset, )]
[file]
[offset]
[super, ., errorAtLine, (, message, ,, sourceName, ,, line, ,, column, )]
[super]
[message]
[sourceName]
[line]
[column]
[super, ., warningAtLine, (, message, ,, sourceName, ,, line, ,, lineOffset, )]
[super]
[message]
[sourceName]
[line]
[lineOffset]
[1]
[0]
[this, ., compiler, ., getSourceFileByName, (, sourceName, )]
[this, ., compiler]
[this]
[sourceName]
[file, !=, null]
[file]
[null]
[line]
[file, ., getLineOfOffset, (, offset, )]
[file]
[offset]
[column]
[file, ., getColumnOfOffset, (, offset, )]
[file]
[offset]
[super, ., errorAtLine, (, message, ,, sourceName, ,, line, ,, column, )]
[super]
[message]
[sourceName]
[line]
[column]
