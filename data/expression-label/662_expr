[this, ., compiler]
[this]
[compiler]
[NodeTraversal, ., traverse, (, compiler, ,, root, ,, this, )]
[NodeTraversal]
[compiler]
[root]
[this]
[Sets, ., newLinkedHashSet, (, )]
[Sets]
[t, ., getScope, (, ), ., getVars, (, )]
[t, ., getScope, (, )]
[t]
[scopeVarIter, ., hasNext, (, )]
[scopeVarIter]
[scopeVarIter, ., next, (, ), ., getParentNode, (, )]
[scopeVarIter, ., next, (, )]
[scopeVarIter]
[parentNode, ., isVar, (, )]
[parentNode]
[varNodes, ., add, (, parentNode, )]
[varNodes]
[parentNode]
[varNodes, ., size, (, ), <=, 1]
[varNodes, ., size, (, )]
[varNodes]
[1]
[varNodes, ., iterator, (, )]
[varNodes]
[varNodeIter, ., next, (, )]
[varNodeIter]
[varNodeIter, ., hasNext, (, )]
[varNodeIter]
[varNodeIter, ., next, (, )]
[varNodeIter]
[applyGroupingToVar, (, firstVarNode, ,, varNode, )]
[firstVarNode]
[varNode]
[true]
[groupVar, ., getFirstChild, (, )]
[groupVar]
[null]
[child, !=, null]
[child]
[null]
[child, ., hasChildren, (, )]
[child]
[initializedName, !=, null]
[initializedName]
[null]
[initializedName]
[child]
[child]
[child, ., getNext, (, )]
[child]
[groupVar, ., getParent, (, )]
[groupVar]
[initializedName, !=, null]
[initializedName]
[null]
[NodeUtil, ., isForIn, (, groupVarParent, )]
[NodeUtil]
[groupVarParent]
[initializedName, ., cloneNode, (, )]
[initializedName]
[groupVar, ., replaceChild, (, initializedName, ,, clone, )]
[groupVar]
[initializedName]
[clone]
[initializedName, ., removeFirstChild, (, )]
[initializedName]
[IR, ., assign, (, initializedName, ,, initializedVal, )]
[IR]
[initializedName]
[initializedVal]
[groupVarParent, ., isFor, (, )]
[groupVarParent]
[groupVarParent, ., replaceChild, (, groupVar, ,, assignmentNode, )]
[groupVarParent]
[groupVar]
[assignmentNode]
[NodeUtil, ., newExpr, (, assignmentNode, )]
[NodeUtil]
[assignmentNode]
[groupVarParent, ., replaceChild, (, groupVar, ,, exprNode, )]
[groupVarParent]
[groupVar]
[exprNode]
[groupVarParent, ., isFor, (, )]
[groupVarParent]
[NodeUtil, ., isForIn, (, groupVarParent, )]
[NodeUtil]
[groupVarParent]
[groupVar, ., getFirstChild, (, ), ., cloneNode, (, )]
[groupVar, ., getFirstChild, (, )]
[groupVar]
[groupVarParent, ., replaceChild, (, groupVar, ,, nameNodeClone, )]
[groupVarParent]
[groupVar]
[nameNodeClone]
[IR, ., empty, (, )]
[IR]
[groupVarParent, ., replaceChild, (, groupVar, ,, emptyNode, )]
[groupVarParent]
[groupVar]
[emptyNode]
[groupVarParent, ., removeChild, (, groupVar, )]
[groupVarParent]
[groupVar]
[groupVar, ., removeChildren, (, )]
[groupVar]
[firstVar, ., addChildrenToBack, (, children, )]
[firstVar]
[children]
[compiler, ., reportCodeChange, (, )]
[compiler]
