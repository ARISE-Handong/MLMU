[1e-14]
[checker]
[jacobianEvaluations]
[computeWeightedJacobian, (, point, )]
[point]
[weightedResidualJacobian]
[weightedJacobian, ., scalarMultiply, (, -, 1, ), ., getData, (, )]
[weightedJacobian, ., scalarMultiply, (, -, 1, )]
[weightedJacobian]
[-, 1]
[1]
[++, jacobianEvaluations]
[jacobianEvaluations]
[new, DerivativeStructure, [, params, ., length, ]]
[params, ., length]
[params]
[params, ., length]
[params]
[0]
[i, <, nC]
[i]
[nC]
[++, i]
[i]
[dsPoint, [, i, ]]
[dsPoint]
[i]
[new, DerivativeStructure, (, nC, ,, 1, ,, i, ,, params, [, i, ], )]
[nC]
[1]
[i]
[params, [, i, ]]
[params]
[i]
[jF, ., value, (, dsPoint, )]
[jF]
[dsPoint]
[getTarget, (, ), ., length]
[getTarget, (, )]
[dsValue, ., length, !=, nR]
[dsValue, ., length]
[dsValue]
[nR]
[new, DimensionMismatchException, (, dsValue, ., length, ,, nR, )]
[dsValue, ., length]
[dsValue]
[nR]
[new, double, [, nR, ], [, nC, ]]
[nR]
[nC]
[0]
[i, <, nR]
[i]
[nR]
[++, i]
[i]
[new, int, [, nC, ]]
[nC]
[0]
[j, <, nC]
[j]
[nC]
[++, j]
[j]
[orders, [, j, ]]
[orders]
[j]
[1]
[jacobianData, [, i, ], [, j, ]]
[jacobianData, [, i, ]]
[jacobianData]
[i]
[j]
[dsValue, [, i, ], ., getPartialDerivative, (, orders, )]
[dsValue, [, i, ]]
[dsValue]
[i]
[orders]
[orders, [, j, ]]
[orders]
[j]
[0]
[weightMatrixSqrt, ., multiply, (, MatrixUtils, ., createRealMatrix, (, jacobianData, ), )]
[weightMatrixSqrt]
[MatrixUtils, ., createRealMatrix, (, jacobianData, )]
[MatrixUtils]
[jacobianData]
[objective]
[computeObjectiveValue, (, point, )]
[point]
[computeResiduals, (, objective, )]
[objective]
[cost]
[computeCost, (, res, )]
[res]
[new, ArrayRealVector, (, res, )]
[res]
[weightedResiduals]
[weightMatrixSqrt, ., operate, (, residuals, ), ., toArray, (, )]
[weightMatrixSqrt, ., operate, (, residuals, )]
[weightMatrixSqrt]
[residuals]
[new, ArrayRealVector, (, residuals, )]
[residuals]
[FastMath, ., sqrt, (, r, ., dotProduct, (, getWeight, (, ), ., operate, (, r, ), ), )]
[FastMath]
[r, ., dotProduct, (, getWeight, (, ), ., operate, (, r, ), )]
[r]
[getWeight, (, ), ., operate, (, r, )]
[getWeight, (, )]
[r]
[FastMath, ., sqrt, (, getChiSquare, (, ), /, rows, )]
[FastMath]
[getChiSquare, (, ), /, rows]
[getChiSquare, (, )]
[rows]
[cost, *, cost]
[cost]
[cost]
[weightMatrixSqrt, ., copy, (, )]
[weightMatrixSqrt]
[this, ., cost]
[this]
[cost]
[getCovariances, (, DEFAULT_SINGULARITY_THRESHOLD, )]
[DEFAULT_SINGULARITY_THRESHOLD]
[computeCovariances, (, point, ,, threshold, )]
[point]
[threshold]
[computeWeightedJacobian, (, params, )]
[params]
[j, ., transpose, (, ), ., multiply, (, j, )]
[j, ., transpose, (, )]
[j]
[j]
[new, QRDecomposition, (, jTj, ,, threshold, ), ., getSolver, (, )]
[new, QRDecomposition, (, jTj, ,, threshold, )]
[jTj]
[threshold]
[solver, ., getInverse, (, ), ., getData, (, )]
[solver, ., getInverse, (, )]
[solver]
[rows, <=, cols]
[rows]
[cols]
[new, NumberIsTooSmallException, (, LocalizedFormats, ., NO_DEGREES_OF_FREEDOM, ,, rows, ,, cols, ,, false, )]
[LocalizedFormats, ., NO_DEGREES_OF_FREEDOM]
[LocalizedFormats]
[rows]
[cols]
[false]
[new, double, [, cols, ]]
[cols]
[FastMath, ., sqrt, (, getChiSquare, (, ), /, (, rows, -, cols, ), )]
[FastMath]
[getChiSquare, (, ), /, (, rows, -, cols, )]
[getChiSquare, (, )]
[(, rows, -, cols, )]
[rows, -, cols]
[rows]
[cols]
[computeCovariances, (, point, ,, 1e-14, )]
[point]
[1e-14]
[0]
[i, <, errors, ., length]
[i]
[errors, ., length]
[errors]
[++, i]
[i]
[errors, [, i, ]]
[errors]
[i]
[FastMath, ., sqrt, (, covar, [, i, ], [, i, ], ), *, c]
[FastMath, ., sqrt, (, covar, [, i, ], [, i, ], )]
[FastMath]
[covar, [, i, ], [, i, ]]
[covar, [, i, ]]
[covar]
[i]
[i]
[c]
[errors]
[params, ., length]
[params]
[new, double, [, nC, ]]
[nC]
[computeCovariances, (, params, ,, covarianceSingularityThreshold, )]
[params]
[covarianceSingularityThreshold]
[0]
[i, <, nC]
[i]
[nC]
[++, i]
[i]
[sig, [, i, ]]
[sig]
[i]
[FastMath, ., sqrt, (, cov, [, i, ], [, i, ], )]
[FastMath]
[cov, [, i, ], [, i, ]]
[cov, [, i, ]]
[cov]
[i]
[i]
[sig]
[optimizeInternal, (, maxEval, ,, FunctionUtils, ., toMultivariateDifferentiableVectorFunction, (, f, ), ,, new, Target, (, target, ), ,, new, Weight, (, weights, ), ,, new, InitialGuess, (, startPoint, ), )]
[maxEval]
[FunctionUtils, ., toMultivariateDifferentiableVectorFunction, (, f, )]
[FunctionUtils]
[f]
[new, Target, (, target, )]
[target]
[new, Weight, (, weights, )]
[weights]
[new, InitialGuess, (, startPoint, )]
[startPoint]
[optimizeInternal, (, maxEval, ,, f, ,, new, Target, (, target, ), ,, new, Weight, (, weights, ), ,, new, InitialGuess, (, startPoint, ), )]
[maxEval]
[f]
[new, Target, (, target, )]
[target]
[new, Weight, (, weights, )]
[weights]
[new, InitialGuess, (, startPoint, )]
[startPoint]
[super, ., optimizeInternal, (, maxEval, ,, FunctionUtils, ., toDifferentiableMultivariateVectorFunction, (, f, ), ,, optData, )]
[super]
[maxEval]
[FunctionUtils, ., toDifferentiableMultivariateVectorFunction, (, f, )]
[FunctionUtils]
[f]
[optData]
[super, ., setUp, (, )]
[super]
[jacobianEvaluations]
[0]
[weightMatrixSqrt]
[squareRoot, (, getWeight, (, ), )]
[getWeight, (, )]
[jF]
[FunctionUtils, ., toMultivariateDifferentiableVectorFunction, (, (, DifferentiableMultivariateVectorFunction, ), getObjectiveFunction, (, ), )]
[FunctionUtils]
[(, DifferentiableMultivariateVectorFunction, ), getObjectiveFunction, (, )]
[getObjectiveFunction, (, )]
[point]
[getStartPoint, (, )]
[rows]
[getTarget, (, ), ., length]
[getTarget, (, )]
[cols]
[point, ., length]
[point]
[getTarget, (, )]
[objectiveValue, ., length, !=, target, ., length]
[objectiveValue, ., length]
[objectiveValue]
[target, ., length]
[target]
[new, DimensionMismatchException, (, target, ., length, ,, objectiveValue, ., length, )]
[target, ., length]
[target]
[objectiveValue, ., length]
[objectiveValue]
[new, double, [, target, ., length, ]]
[target, ., length]
[target]
[0]
[i, <, target, ., length]
[i]
[target, ., length]
[target]
[i, ++]
[i]
[residuals, [, i, ]]
[residuals]
[i]
[target, [, i, ], -, objectiveValue, [, i, ]]
[target, [, i, ]]
[target]
[i]
[objectiveValue, [, i, ]]
[objectiveValue]
[i]
[residuals]
[m, instanceof, DiagonalMatrix]
[m]
[m, ., getRowDimension, (, )]
[m]
[new, DiagonalMatrix, (, dim, )]
[dim]
[0]
[i, <, dim]
[i]
[dim]
[i, ++]
[i]
[sqrtM, ., setEntry, (, i, ,, i, ,, FastMath, ., sqrt, (, m, ., getEntry, (, i, ,, i, ), ), )]
[sqrtM]
[i]
[i]
[FastMath, ., sqrt, (, m, ., getEntry, (, i, ,, i, ), )]
[FastMath]
[m, ., getEntry, (, i, ,, i, )]
[m]
[i]
[i]
[sqrtM]
[new, EigenDecomposition, (, m, )]
[m]
[dec, ., getSquareRoot, (, )]
[dec]
