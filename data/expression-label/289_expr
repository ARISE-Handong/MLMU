[1902273207559319996L]
[new, RectangleInsets, (, UnitType, ., ABSOLUTE, ,, 0.0, ,, 0.0, ,, 0.0, ,, 0.0, )]
[UnitType, ., ABSOLUTE]
[UnitType]
[0.0]
[0.0]
[0.0]
[0.0]
[1.0]
[1.0]
[1.0]
[1.0]
[UnitType, ., ABSOLUTE]
[UnitType]
[top]
[left]
[bottom]
[right]
[unitType, ==, null]
[unitType]
[null]
[new, IllegalArgumentException, (, "Null 'unitType' argument.", )]
["Null 'unitType' argument."]
[this, ., unitType]
[this]
[unitType]
[this, ., top]
[this]
[top]
[this, ., bottom]
[this]
[bottom]
[this, ., left]
[this]
[left]
[this, ., right]
[this]
[right]
[this, ., unitType]
[this]
[this, ., top]
[this]
[this, ., bottom]
[this]
[this, ., left]
[this]
[this, ., right]
[this]
[obj, ==, this]
[obj]
[this]
[true]
[!, (, obj, instanceof, RectangleInsets, )]
[(, obj, instanceof, RectangleInsets, )]
[obj, instanceof, RectangleInsets]
[obj]
[false]
[(, RectangleInsets, ), obj]
[obj]
[that, ., unitType, !=, this, ., unitType]
[that, ., unitType]
[that]
[this, ., unitType]
[this]
[false]
[this, ., left, !=, that, ., left]
[this, ., left]
[this]
[that, ., left]
[that]
[false]
[this, ., right, !=, that, ., right]
[this, ., right]
[this]
[that, ., right]
[that]
[false]
[this, ., top, !=, that, ., top]
[this, ., top]
[this]
[that, ., top]
[that]
[false]
[this, ., bottom, !=, that, ., bottom]
[this, ., bottom]
[this]
[that, ., bottom]
[that]
[false]
[true]
[result]
[(, this, ., unitType, !=, null, ?, this, ., unitType, ., hashCode, (, ), :, 0, )]
[this, ., unitType, !=, null, ?, this, ., unitType, ., hashCode, (, ), :, 0]
[this, ., unitType, !=, null]
[this, ., unitType]
[this]
[null]
[this, ., unitType, ., hashCode, (, )]
[this, ., unitType]
[this]
[0]
[temp]
[this, ., top, !=, +, 0.0d, ?, Double, ., doubleToLongBits, (, this, ., top, ), :, 0L]
[this, ., top, !=, +, 0.0d]
[this, ., top]
[this]
[+, 0.0d]
[0.0d]
[Double, ., doubleToLongBits, (, this, ., top, )]
[Double]
[this, ., top]
[this]
[0L]
[result]
[29, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), )]
[29, *, result]
[29]
[result]
[(, int, ), (, temp, ^, (, temp, >, >, >, 32, ), )]
[(, temp, ^, (, temp, >, >, >, 32, ), )]
[temp, ^, (, temp, >, >, >, 32, )]
[temp]
[(, temp, >, >, >, 32, )]
[temp, >, >, >, 32]
[temp]
[32]
[temp]
[this, ., bottom, !=, +, 0.0d, ?, Double, ., doubleToLongBits, (, this, ., bottom, ), :, 0L]
[this, ., bottom, !=, +, 0.0d]
[this, ., bottom]
[this]
[+, 0.0d]
[0.0d]
[Double, ., doubleToLongBits, (, this, ., bottom, )]
[Double]
[this, ., bottom]
[this]
[0L]
[result]
[29, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), )]
[29, *, result]
[29]
[result]
[(, int, ), (, temp, ^, (, temp, >, >, >, 32, ), )]
[(, temp, ^, (, temp, >, >, >, 32, ), )]
[temp, ^, (, temp, >, >, >, 32, )]
[temp]
[(, temp, >, >, >, 32, )]
[temp, >, >, >, 32]
[temp]
[32]
[temp]
[this, ., left, !=, +, 0.0d, ?, Double, ., doubleToLongBits, (, this, ., left, ), :, 0L]
[this, ., left, !=, +, 0.0d]
[this, ., left]
[this]
[+, 0.0d]
[0.0d]
[Double, ., doubleToLongBits, (, this, ., left, )]
[Double]
[this, ., left]
[this]
[0L]
[result]
[29, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), )]
[29, *, result]
[29]
[result]
[(, int, ), (, temp, ^, (, temp, >, >, >, 32, ), )]
[(, temp, ^, (, temp, >, >, >, 32, ), )]
[temp, ^, (, temp, >, >, >, 32, )]
[temp]
[(, temp, >, >, >, 32, )]
[temp, >, >, >, 32]
[temp]
[32]
[temp]
[this, ., right, !=, +, 0.0d, ?, Double, ., doubleToLongBits, (, this, ., right, ), :, 0L]
[this, ., right, !=, +, 0.0d]
[this, ., right]
[this]
[+, 0.0d]
[0.0d]
[Double, ., doubleToLongBits, (, this, ., right, )]
[Double]
[this, ., right]
[this]
[0L]
[result]
[29, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), )]
[29, *, result]
[29]
[result]
[(, int, ), (, temp, ^, (, temp, >, >, >, 32, ), )]
[(, temp, ^, (, temp, >, >, >, 32, ), )]
[temp, ^, (, temp, >, >, >, 32, )]
[temp]
[(, temp, >, >, >, 32, )]
[temp, >, >, >, 32]
[temp]
[32]
[result]
["RectangleInsets[t=", +, this, ., top, +, ",l=", +, this, ., left, +, ",b=", +, this, ., bottom, +, ",r=", +, this, ., right, +, "]"]
["RectangleInsets[t=", +, this, ., top, +, ",l=", +, this, ., left, +, ",b=", +, this, ., bottom, +, ",r=", +, this, ., right]
["RectangleInsets[t=", +, this, ., top, +, ",l=", +, this, ., left, +, ",b=", +, this, ., bottom, +, ",r="]
["RectangleInsets[t=", +, this, ., top, +, ",l=", +, this, ., left, +, ",b=", +, this, ., bottom]
["RectangleInsets[t=", +, this, ., top, +, ",l=", +, this, ., left, +, ",b="]
["RectangleInsets[t=", +, this, ., top, +, ",l=", +, this, ., left]
["RectangleInsets[t=", +, this, ., top, +, ",l="]
["RectangleInsets[t=", +, this, ., top]
["RectangleInsets[t="]
[this, ., top]
[this]
[",l="]
[this, ., left]
[this]
[",b="]
[this, ., bottom]
[this]
[",r="]
[this, ., right]
[this]
["]"]
[base, ==, null]
[base]
[null]
[new, IllegalArgumentException, (, "Null 'base' argument.", )]
["Null 'base' argument."]
[base, ., getX, (, )]
[base]
[base, ., getY, (, )]
[base]
[base, ., getWidth, (, )]
[base]
[base, ., getHeight, (, )]
[base]
[horizontal, ==, LengthAdjustmentType, ., EXPAND]
[horizontal]
[LengthAdjustmentType, ., EXPAND]
[LengthAdjustmentType]
[calculateLeftOutset, (, w, )]
[w]
[x]
[x, -, leftOutset]
[x]
[leftOutset]
[w]
[w, +, leftOutset, +, calculateRightOutset, (, w, )]
[w, +, leftOutset]
[w]
[leftOutset]
[calculateRightOutset, (, w, )]
[w]
[horizontal, ==, LengthAdjustmentType, ., CONTRACT]
[horizontal]
[LengthAdjustmentType, ., CONTRACT]
[LengthAdjustmentType]
[calculateLeftInset, (, w, )]
[w]
[x]
[x, +, leftMargin]
[x]
[leftMargin]
[w]
[w, -, leftMargin, -, calculateRightInset, (, w, )]
[w, -, leftMargin]
[w]
[leftMargin]
[calculateRightInset, (, w, )]
[w]
[vertical, ==, LengthAdjustmentType, ., EXPAND]
[vertical]
[LengthAdjustmentType, ., EXPAND]
[LengthAdjustmentType]
[calculateTopOutset, (, h, )]
[h]
[y]
[y, -, topMargin]
[y]
[topMargin]
[h]
[h, +, topMargin, +, calculateBottomOutset, (, h, )]
[h, +, topMargin]
[h]
[topMargin]
[calculateBottomOutset, (, h, )]
[h]
[vertical, ==, LengthAdjustmentType, ., CONTRACT]
[vertical]
[LengthAdjustmentType, ., CONTRACT]
[LengthAdjustmentType]
[calculateTopInset, (, h, )]
[h]
[y]
[y, +, topMargin]
[y]
[topMargin]
[h]
[h, -, topMargin, -, calculateBottomInset, (, h, )]
[h, -, topMargin]
[h]
[topMargin]
[calculateBottomInset, (, h, )]
[h]
[new, Rectangle2D, ., Double, (, x, ,, y, ,, w, ,, h, )]
[x]
[y]
[w]
[h]
[createInsetRectangle, (, base, ,, true, ,, true, )]
[base]
[true]
[true]
[base, ==, null]
[base]
[null]
[new, IllegalArgumentException, (, "Null 'base' argument.", )]
["Null 'base' argument."]
[0.0]
[0.0]
[vertical]
[topMargin]
[calculateTopInset, (, base, ., getHeight, (, ), )]
[base, ., getHeight, (, )]
[base]
[bottomMargin]
[calculateBottomInset, (, base, ., getHeight, (, ), )]
[base, ., getHeight, (, )]
[base]
[0.0]
[0.0]
[horizontal]
[leftMargin]
[calculateLeftInset, (, base, ., getWidth, (, ), )]
[base, ., getWidth, (, )]
[base]
[rightMargin]
[calculateRightInset, (, base, ., getWidth, (, ), )]
[base, ., getWidth, (, )]
[base]
[new, Rectangle2D, ., Double, (, base, ., getX, (, ), +, leftMargin, ,, base, ., getY, (, ), +, topMargin, ,, base, ., getWidth, (, ), -, leftMargin, -, rightMargin, ,, base, ., getHeight, (, ), -, topMargin, -, bottomMargin, )]
[base, ., getX, (, ), +, leftMargin]
[base, ., getX, (, )]
[base]
[leftMargin]
[base, ., getY, (, ), +, topMargin]
[base, ., getY, (, )]
[base]
[topMargin]
[base, ., getWidth, (, ), -, leftMargin, -, rightMargin]
[base, ., getWidth, (, ), -, leftMargin]
[base, ., getWidth, (, )]
[base]
[leftMargin]
[rightMargin]
[base, ., getHeight, (, ), -, topMargin, -, bottomMargin]
[base, ., getHeight, (, ), -, topMargin]
[base, ., getHeight, (, )]
[base]
[topMargin]
[bottomMargin]
[createOutsetRectangle, (, base, ,, true, ,, true, )]
[base]
[true]
[true]
[base, ==, null]
[base]
[null]
[new, IllegalArgumentException, (, "Null 'base' argument.", )]
["Null 'base' argument."]
[0.0]
[0.0]
[vertical]
[topMargin]
[calculateTopOutset, (, base, ., getHeight, (, ), )]
[base, ., getHeight, (, )]
[base]
[bottomMargin]
[calculateBottomOutset, (, base, ., getHeight, (, ), )]
[base, ., getHeight, (, )]
[base]
[0.0]
[0.0]
[horizontal]
[leftMargin]
[calculateLeftOutset, (, base, ., getWidth, (, ), )]
[base, ., getWidth, (, )]
[base]
[rightMargin]
[calculateRightOutset, (, base, ., getWidth, (, ), )]
[base, ., getWidth, (, )]
[base]
[new, Rectangle2D, ., Double, (, base, ., getX, (, ), -, leftMargin, ,, base, ., getY, (, ), -, topMargin, ,, base, ., getWidth, (, ), +, leftMargin, +, rightMargin, ,, base, ., getHeight, (, ), +, topMargin, +, bottomMargin, )]
[base, ., getX, (, ), -, leftMargin]
[base, ., getX, (, )]
[base]
[leftMargin]
[base, ., getY, (, ), -, topMargin]
[base, ., getY, (, )]
[base]
[topMargin]
[base, ., getWidth, (, ), +, leftMargin, +, rightMargin]
[base, ., getWidth, (, ), +, leftMargin]
[base, ., getWidth, (, )]
[base]
[leftMargin]
[rightMargin]
[base, ., getHeight, (, ), +, topMargin, +, bottomMargin]
[base, ., getHeight, (, ), +, topMargin]
[base, ., getHeight, (, )]
[base]
[topMargin]
[bottomMargin]
[this, ., top]
[this]
[this, ., unitType, ==, UnitType, ., RELATIVE]
[this, ., unitType]
[this]
[UnitType, ., RELATIVE]
[UnitType]
[result]
[(, this, ., top, *, height, )]
[this, ., top, *, height]
[this, ., top]
[this]
[height]
[result]
[this, ., top]
[this]
[this, ., unitType, ==, UnitType, ., RELATIVE]
[this, ., unitType]
[this]
[UnitType, ., RELATIVE]
[UnitType]
[result]
[(, height, /, (, 1, -, this, ., top, -, this, ., bottom, ), ), *, this, ., top]
[(, height, /, (, 1, -, this, ., top, -, this, ., bottom, ), )]
[height, /, (, 1, -, this, ., top, -, this, ., bottom, )]
[height]
[(, 1, -, this, ., top, -, this, ., bottom, )]
[1, -, this, ., top, -, this, ., bottom]
[1, -, this, ., top]
[1]
[this, ., top]
[this]
[this, ., bottom]
[this]
[this, ., top]
[this]
[result]
[this, ., bottom]
[this]
[this, ., unitType, ==, UnitType, ., RELATIVE]
[this, ., unitType]
[this]
[UnitType, ., RELATIVE]
[UnitType]
[result]
[(, this, ., bottom, *, height, )]
[this, ., bottom, *, height]
[this, ., bottom]
[this]
[height]
[result]
[this, ., bottom]
[this]
[this, ., unitType, ==, UnitType, ., RELATIVE]
[this, ., unitType]
[this]
[UnitType, ., RELATIVE]
[UnitType]
[result]
[(, height, /, (, 1, -, this, ., top, -, this, ., bottom, ), ), *, this, ., bottom]
[(, height, /, (, 1, -, this, ., top, -, this, ., bottom, ), )]
[height, /, (, 1, -, this, ., top, -, this, ., bottom, )]
[height]
[(, 1, -, this, ., top, -, this, ., bottom, )]
[1, -, this, ., top, -, this, ., bottom]
[1, -, this, ., top]
[1]
[this, ., top]
[this]
[this, ., bottom]
[this]
[this, ., bottom]
[this]
[result]
[this, ., left]
[this]
[this, ., unitType, ==, UnitType, ., RELATIVE]
[this, ., unitType]
[this]
[UnitType, ., RELATIVE]
[UnitType]
[result]
[(, this, ., left, *, width, )]
[this, ., left, *, width]
[this, ., left]
[this]
[width]
[result]
[this, ., left]
[this]
[this, ., unitType, ==, UnitType, ., RELATIVE]
[this, ., unitType]
[this]
[UnitType, ., RELATIVE]
[UnitType]
[result]
[(, width, /, (, 1, -, this, ., left, -, this, ., right, ), ), *, this, ., left]
[(, width, /, (, 1, -, this, ., left, -, this, ., right, ), )]
[width, /, (, 1, -, this, ., left, -, this, ., right, )]
[width]
[(, 1, -, this, ., left, -, this, ., right, )]
[1, -, this, ., left, -, this, ., right]
[1, -, this, ., left]
[1]
[this, ., left]
[this]
[this, ., right]
[this]
[this, ., left]
[this]
[result]
[this, ., right]
[this]
[this, ., unitType, ==, UnitType, ., RELATIVE]
[this, ., unitType]
[this]
[UnitType, ., RELATIVE]
[UnitType]
[result]
[(, this, ., right, *, width, )]
[this, ., right, *, width]
[this, ., right]
[this]
[width]
[result]
[this, ., right]
[this]
[this, ., unitType, ==, UnitType, ., RELATIVE]
[this, ., unitType]
[this]
[UnitType, ., RELATIVE]
[UnitType]
[result]
[(, width, /, (, 1, -, this, ., left, -, this, ., right, ), ), *, this, ., right]
[(, width, /, (, 1, -, this, ., left, -, this, ., right, ), )]
[width, /, (, 1, -, this, ., left, -, this, ., right, )]
[width]
[(, 1, -, this, ., left, -, this, ., right, )]
[1, -, this, ., left, -, this, ., right]
[1, -, this, ., left]
[1]
[this, ., left]
[this]
[this, ., right]
[this]
[this, ., right]
[this]
[result]
[width, -, calculateLeftInset, (, width, ), -, calculateRightInset, (, width, )]
[width, -, calculateLeftInset, (, width, )]
[width]
[calculateLeftInset, (, width, )]
[width]
[calculateRightInset, (, width, )]
[width]
[width, +, calculateLeftOutset, (, width, ), +, calculateRightOutset, (, width, )]
[width, +, calculateLeftOutset, (, width, )]
[width]
[calculateLeftOutset, (, width, )]
[width]
[calculateRightOutset, (, width, )]
[width]
[height, -, calculateTopInset, (, height, ), -, calculateBottomInset, (, height, )]
[height, -, calculateTopInset, (, height, )]
[height]
[calculateTopInset, (, height, )]
[height]
[calculateBottomInset, (, height, )]
[height]
[height, +, calculateTopOutset, (, height, ), +, calculateBottomOutset, (, height, )]
[height, +, calculateTopOutset, (, height, )]
[height]
[calculateTopOutset, (, height, )]
[height]
[calculateBottomOutset, (, height, )]
[height]
[area, ., getWidth, (, )]
[area]
[area, ., getHeight, (, )]
[area]
[calculateLeftInset, (, w, )]
[w]
[calculateRightInset, (, w, )]
[w]
[calculateTopInset, (, h, )]
[h]
[calculateBottomInset, (, h, )]
[h]
[area, ., setRect, (, area, ., getX, (, ), +, l, ,, area, ., getY, (, ), +, t, ,, w, -, l, -, r, ,, h, -, t, -, b, )]
[area]
[area, ., getX, (, ), +, l]
[area, ., getX, (, )]
[area]
[l]
[area, ., getY, (, ), +, t]
[area, ., getY, (, )]
[area]
[t]
[w, -, l, -, r]
[w, -, l]
[w]
[l]
[r]
[h, -, t, -, b]
[h, -, t]
[h]
[t]
[b]
