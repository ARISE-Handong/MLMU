[this, ., compiler]
[this]
[compiler]
[functions]
[Maps, ., newHashMap, (, )]
[Maps]
[NodeTraversal, ., traverse, (, compiler, ,, root, ,, this, )]
[NodeTraversal]
[compiler]
[root]
[this]
[functions, ., entrySet, (, )]
[functions]
[entry, ., getKey, (, )]
[entry]
[compiler, ., getNodeForCodeInsertion, (, module, )]
[compiler]
[module]
[Lists, ., reverse, (, entry, ., getValue, (, ), )]
[Lists]
[entry, ., getValue, (, )]
[entry]
[addingRoot, ., addChildToFront, (, n, )]
[addingRoot]
[n]
[n, ., getAncestor, (, 2, )]
[n]
[2]
[gramps, ==, null, ||, !, gramps, ., isScript, (, )]
[gramps, ==, null]
[gramps]
[null]
[!, gramps, ., isScript, (, )]
[gramps, ., isScript, (, )]
[gramps]
[parent, ==, null, ||, !, parent, ., isScript, (, )]
[parent, ==, null]
[parent]
[null]
[!, parent, ., isScript, (, )]
[parent, ., isScript, (, )]
[parent]
[NodeUtil, ., isFunctionDeclaration, (, n, )]
[NodeUtil]
[n]
[parent, ., removeChild, (, n, )]
[parent]
[n]
[compiler, ., reportCodeChange, (, )]
[compiler]
[t, ., getModule, (, )]
[t]
[functions, ., get, (, module, )]
[functions]
[module]
[moduleFunctions, ==, null]
[moduleFunctions]
[null]
[moduleFunctions]
[Lists, ., newArrayList, (, )]
[Lists]
[functions, ., put, (, module, ,, moduleFunctions, )]
[functions]
[module]
[moduleFunctions]
[moduleFunctions, ., add, (, n, )]
[moduleFunctions]
[n]
