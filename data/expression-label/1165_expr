[-, 5315388482898581555L]
[5315388482898581555L]
[this, ., horizontalAlignment]
[this]
[hAlign]
[this, ., verticalAlignment]
[this]
[vAlign]
[this, ., horizontalGap]
[this]
[hGap]
[this, ., verticalGap]
[this]
[vGap]
[constraint, ., getWidthConstraintType, (, )]
[constraint]
[constraint, ., getHeightConstraintType, (, )]
[constraint]
[w, ==, LengthConstraintType, ., NONE]
[w]
[LengthConstraintType, ., NONE]
[LengthConstraintType]
[h, ==, LengthConstraintType, ., NONE]
[h]
[LengthConstraintType, ., NONE]
[LengthConstraintType]
[arrangeNN, (, container, ,, g2, )]
[container]
[g2]
[h, ==, LengthConstraintType, ., FIXED]
[h]
[LengthConstraintType, ., FIXED]
[LengthConstraintType]
[new, RuntimeException, (, "Not implemented.", )]
["Not implemented."]
[h, ==, LengthConstraintType, ., RANGE]
[h]
[LengthConstraintType, ., RANGE]
[LengthConstraintType]
[new, RuntimeException, (, "Not implemented.", )]
["Not implemented."]
[w, ==, LengthConstraintType, ., FIXED]
[w]
[LengthConstraintType, ., FIXED]
[LengthConstraintType]
[h, ==, LengthConstraintType, ., NONE]
[h]
[LengthConstraintType, ., NONE]
[LengthConstraintType]
[new, RuntimeException, (, "Not implemented.", )]
["Not implemented."]
[h, ==, LengthConstraintType, ., FIXED]
[h]
[LengthConstraintType, ., FIXED]
[LengthConstraintType]
[arrangeFF, (, container, ,, g2, ,, constraint, )]
[container]
[g2]
[constraint]
[h, ==, LengthConstraintType, ., RANGE]
[h]
[LengthConstraintType, ., RANGE]
[LengthConstraintType]
[new, RuntimeException, (, "Not implemented.", )]
["Not implemented."]
[w, ==, LengthConstraintType, ., RANGE]
[w]
[LengthConstraintType, ., RANGE]
[LengthConstraintType]
[h, ==, LengthConstraintType, ., NONE]
[h]
[LengthConstraintType, ., NONE]
[LengthConstraintType]
[new, RuntimeException, (, "Not implemented.", )]
["Not implemented."]
[h, ==, LengthConstraintType, ., FIXED]
[h]
[LengthConstraintType, ., FIXED]
[LengthConstraintType]
[arrangeRF, (, container, ,, g2, ,, constraint, )]
[container]
[g2]
[constraint]
[h, ==, LengthConstraintType, ., RANGE]
[h]
[LengthConstraintType, ., RANGE]
[LengthConstraintType]
[arrangeRR, (, container, ,, g2, ,, constraint, )]
[container]
[g2]
[constraint]
[new, Size2D, (, )]
[arrangeNF, (, container, ,, g2, ,, constraint, )]
[container]
[g2]
[constraint]
[container, ., getBlocks, (, )]
[container]
[constraint, ., getHeight, (, )]
[constraint]
[height, <=, 0.0]
[height]
[0.0]
[height]
[Double, ., POSITIVE_INFINITY]
[Double]
[0.0]
[0.0]
[0.0]
[new, ArrayList, (, )]
[0]
[i, <, blocks, ., size, (, )]
[i]
[blocks, ., size, (, )]
[blocks]
[i, ++]
[i]
[(, Block, ), blocks, ., get, (, i, )]
[blocks, ., get, (, i, )]
[blocks]
[i]
[block, ., arrange, (, g2, ,, RectangleConstraint, ., NONE, )]
[block]
[g2]
[RectangleConstraint, ., NONE]
[RectangleConstraint]
[y, +, size, ., height, <=, height]
[y, +, size, ., height]
[y]
[size, ., height]
[size]
[height]
[itemsInColumn, ., add, (, block, )]
[itemsInColumn]
[block]
[block, ., setBounds, (, new, Rectangle2D, ., Double, (, x, ,, y, ,, size, ., width, ,, size, ., height, ), )]
[block]
[new, Rectangle2D, ., Double, (, x, ,, y, ,, size, ., width, ,, size, ., height, )]
[x]
[y]
[size, ., width]
[size]
[size, ., height]
[size]
[y]
[y, +, size, ., height, +, this, ., verticalGap]
[y, +, size, ., height]
[y]
[size, ., height]
[size]
[this, ., verticalGap]
[this]
[maxWidth]
[Math, ., max, (, maxWidth, ,, size, ., width, )]
[Math]
[maxWidth]
[size, ., width]
[size]
[itemsInColumn, ., isEmpty, (, )]
[itemsInColumn]
[block, ., setBounds, (, new, Rectangle2D, ., Double, (, x, ,, y, ,, size, ., width, ,, Math, ., min, (, size, ., height, ,, height, -, y, ), ), )]
[block]
[new, Rectangle2D, ., Double, (, x, ,, y, ,, size, ., width, ,, Math, ., min, (, size, ., height, ,, height, -, y, ), )]
[x]
[y]
[size, ., width]
[size]
[Math, ., min, (, size, ., height, ,, height, -, y, )]
[Math]
[size, ., height]
[size]
[height, -, y]
[height]
[y]
[y]
[0.0]
[x]
[x, +, size, ., width, +, this, ., horizontalGap]
[x, +, size, ., width]
[x]
[size, ., width]
[size]
[this, ., horizontalGap]
[this]
[itemsInColumn, ., clear, (, )]
[itemsInColumn]
[x]
[x, +, maxWidth, +, this, ., horizontalGap]
[x, +, maxWidth]
[x]
[maxWidth]
[this, ., horizontalGap]
[this]
[y]
[0.0]
[maxWidth]
[size, ., width]
[size]
[block, ., setBounds, (, new, Rectangle2D, ., Double, (, x, ,, y, ,, size, ., width, ,, Math, ., min, (, size, ., height, ,, height, ), ), )]
[block]
[new, Rectangle2D, ., Double, (, x, ,, y, ,, size, ., width, ,, Math, ., min, (, size, ., height, ,, height, ), )]
[x]
[y]
[size, ., width]
[size]
[Math, ., min, (, size, ., height, ,, height, )]
[Math]
[size, ., height]
[size]
[height]
[y]
[size, ., height, +, this, ., verticalGap]
[size, ., height]
[size]
[this, ., verticalGap]
[this]
[itemsInColumn, ., add, (, block, )]
[itemsInColumn]
[block]
[new, Size2D, (, x, +, maxWidth, ,, constraint, ., getHeight, (, ), )]
[x, +, maxWidth]
[x]
[maxWidth]
[constraint, ., getHeight, (, )]
[constraint]
[arrangeNN, (, container, ,, g2, )]
[container]
[g2]
[constraint, ., getHeightRange, (, ), ., contains, (, s1, ., height, )]
[constraint, ., getHeightRange, (, )]
[constraint]
[s1, ., height]
[s1]
[s1]
[constraint, ., toFixedHeight, (, constraint, ., getHeightRange, (, ), ., getUpperBound, (, ), )]
[constraint]
[constraint, ., getHeightRange, (, ), ., getUpperBound, (, )]
[constraint, ., getHeightRange, (, )]
[constraint]
[arrangeRF, (, container, ,, g2, ,, c, )]
[container]
[g2]
[c]
[arrangeNF, (, container, ,, g2, ,, constraint, )]
[container]
[g2]
[constraint]
[constraint, ., getWidthRange, (, ), ., contains, (, s, ., width, )]
[constraint, ., getWidthRange, (, )]
[constraint]
[s, ., width]
[s]
[s]
[constraint, ., toFixedWidth, (, constraint, ., getWidthRange, (, ), ., constrain, (, s, ., getWidth, (, ), ), )]
[constraint]
[constraint, ., getWidthRange, (, ), ., constrain, (, s, ., getWidth, (, ), )]
[constraint, ., getWidthRange, (, )]
[constraint]
[s, ., getWidth, (, )]
[s]
[arrangeFF, (, container, ,, g2, ,, c, )]
[container]
[g2]
[c]
[0.0]
[0.0]
[0.0]
[container, ., getBlocks, (, )]
[container]
[blocks, ., size, (, )]
[blocks]
[blockCount, >, 0]
[blockCount]
[0]
[new, Size2D, [, blocks, ., size, (, ), ]]
[blocks, ., size, (, )]
[blocks]
[0]
[i, <, blocks, ., size, (, )]
[i]
[blocks, ., size, (, )]
[blocks]
[i, ++]
[i]
[(, Block, ), blocks, ., get, (, i, )]
[blocks, ., get, (, i, )]
[blocks]
[i]
[sizes, [, i, ]]
[sizes]
[i]
[block, ., arrange, (, g2, ,, RectangleConstraint, ., NONE, )]
[block]
[g2]
[RectangleConstraint, ., NONE]
[RectangleConstraint]
[height]
[height, +, sizes, [, i, ], ., getHeight, (, )]
[height]
[sizes, [, i, ], ., getHeight, (, )]
[sizes, [, i, ]]
[sizes]
[i]
[maxWidth]
[Math, ., max, (, sizes, [, i, ], ., width, ,, maxWidth, )]
[Math]
[sizes, [, i, ], ., width]
[sizes, [, i, ]]
[sizes]
[i]
[maxWidth]
[block, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, y, ,, sizes, [, i, ], ., width, ,, sizes, [, i, ], ., height, ), )]
[block]
[new, Rectangle2D, ., Double, (, 0.0, ,, y, ,, sizes, [, i, ], ., width, ,, sizes, [, i, ], ., height, )]
[0.0]
[y]
[sizes, [, i, ], ., width]
[sizes, [, i, ]]
[sizes]
[i]
[sizes, [, i, ], ., height]
[sizes, [, i, ]]
[sizes]
[i]
[y]
[y, +, sizes, [, i, ], ., height, +, this, ., verticalGap]
[y, +, sizes, [, i, ], ., height]
[y]
[sizes, [, i, ], ., height]
[sizes, [, i, ]]
[sizes]
[i]
[this, ., verticalGap]
[this]
[blockCount, >, 1]
[blockCount]
[1]
[height]
[height, +, this, ., verticalGap, *, (, blockCount, -, 1, )]
[height]
[this, ., verticalGap, *, (, blockCount, -, 1, )]
[this, ., verticalGap]
[this]
[(, blockCount, -, 1, )]
[blockCount, -, 1]
[blockCount]
[1]
[this, ., horizontalAlignment, !=, HorizontalAlignment, ., LEFT]
[this, ., horizontalAlignment]
[this]
[HorizontalAlignment, ., LEFT]
[HorizontalAlignment]
[0]
[i, <, blocks, ., size, (, )]
[i]
[blocks, ., size, (, )]
[blocks]
[i, ++]
[i]
[this, ., horizontalAlignment, ==, HorizontalAlignment, ., CENTER]
[this, ., horizontalAlignment]
[this]
[HorizontalAlignment, ., CENTER]
[HorizontalAlignment]
[this, ., horizontalAlignment, ==, HorizontalAlignment, ., RIGHT]
[this, ., horizontalAlignment]
[this]
[HorizontalAlignment, ., RIGHT]
[HorizontalAlignment]
[new, Size2D, (, maxWidth, ,, height, )]
[maxWidth]
[height]
[obj, ==, this]
[obj]
[this]
[true]
[!, (, obj, instanceof, ColumnArrangement, )]
[(, obj, instanceof, ColumnArrangement, )]
[obj, instanceof, ColumnArrangement]
[obj]
[false]
[(, ColumnArrangement, ), obj]
[obj]
[this, ., horizontalAlignment, !=, that, ., horizontalAlignment]
[this, ., horizontalAlignment]
[this]
[that, ., horizontalAlignment]
[that]
[false]
[this, ., verticalAlignment, !=, that, ., verticalAlignment]
[this, ., verticalAlignment]
[this]
[that, ., verticalAlignment]
[that]
[false]
[this, ., horizontalGap, !=, that, ., horizontalGap]
[this, ., horizontalGap]
[this]
[that, ., horizontalGap]
[that]
[false]
[this, ., verticalGap, !=, that, ., verticalGap]
[this, ., verticalGap]
[this]
[that, ., verticalGap]
[that]
[false]
[true]
