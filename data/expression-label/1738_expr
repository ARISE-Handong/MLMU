[new, Null, (, )]
[object, !=, null, ?, object, :, defaultValue]
[object, !=, null]
[object]
[null]
[object]
[defaultValue]
[values, !=, null]
[values]
[null]
[values]
[val, !=, null]
[val]
[null]
[val]
[null]
[object1, ==, object2]
[object1]
[object2]
[true]
[object1, ==, null, ||, object2, ==, null]
[object1, ==, null]
[object1]
[null]
[object2, ==, null]
[object2]
[null]
[false]
[object1, ., equals, (, object2, )]
[object1]
[object2]
[ObjectUtils, ., equals, (, object1, ,, object2, ), ==, false]
[ObjectUtils, ., equals, (, object1, ,, object2, )]
[ObjectUtils]
[object1]
[object2]
[false]
[obj, ==, null, ?, 0, :, obj, ., hashCode, (, )]
[obj, ==, null]
[obj]
[null]
[0]
[obj, ., hashCode, (, )]
[obj]
[1]
[objects, !=, null]
[objects]
[null]
[objects]
[hash]
[hash, *, 31, +, ObjectUtils, ., hashCode, (, object, )]
[hash, *, 31]
[hash]
[31]
[ObjectUtils, ., hashCode, (, object, )]
[ObjectUtils]
[object]
[hash]
[object, ==, null]
[object]
[null]
[null]
[new, StringBuilder, (, )]
[identityToString, (, builder, ,, object, )]
[builder]
[object]
[builder, ., toString, (, )]
[builder]
[object, ==, null]
[object]
[null]
[new, NullPointerException, (, "Cannot get the toString of a null identity", )]
["Cannot get the toString of a null identity"]
[appendable, ., append, (, object, ., getClass, (, ), ., getName, (, ), ), ., append, (, '@', ), ., append, (, Integer, ., toHexString, (, System, ., identityHashCode, (, object, ), ), )]
[appendable, ., append, (, object, ., getClass, (, ), ., getName, (, ), ), ., append, (, '@', )]
[appendable, ., append, (, object, ., getClass, (, ), ., getName, (, ), )]
[appendable]
[object, ., getClass, (, ), ., getName, (, )]
[object, ., getClass, (, )]
[object]
['@']
[Integer, ., toHexString, (, System, ., identityHashCode, (, object, ), )]
[Integer]
[System, ., identityHashCode, (, object, )]
[System]
[object]
[object, ==, null]
[object]
[null]
[new, NullPointerException, (, "Cannot get the toString of a null identity", )]
["Cannot get the toString of a null identity"]
[builder, ., append, (, object, ., getClass, (, ), ., getName, (, ), ), ., append, (, '@', ), ., append, (, Integer, ., toHexString, (, System, ., identityHashCode, (, object, ), ), )]
[builder, ., append, (, object, ., getClass, (, ), ., getName, (, ), ), ., append, (, '@', )]
[builder, ., append, (, object, ., getClass, (, ), ., getName, (, ), )]
[builder]
[object, ., getClass, (, ), ., getName, (, )]
[object, ., getClass, (, )]
[object]
['@']
[Integer, ., toHexString, (, System, ., identityHashCode, (, object, ), )]
[Integer]
[System, ., identityHashCode, (, object, )]
[System]
[object]
[object, ==, null]
[object]
[null]
[new, NullPointerException, (, "Cannot get the toString of a null identity", )]
["Cannot get the toString of a null identity"]
[buffer, ., append, (, object, ., getClass, (, ), ., getName, (, ), ), ., append, (, '@', ), ., append, (, Integer, ., toHexString, (, System, ., identityHashCode, (, object, ), ), )]
[buffer, ., append, (, object, ., getClass, (, ), ., getName, (, ), ), ., append, (, '@', )]
[buffer, ., append, (, object, ., getClass, (, ), ., getName, (, ), )]
[buffer]
[object, ., getClass, (, ), ., getName, (, )]
[object, ., getClass, (, )]
[object]
['@']
[Integer, ., toHexString, (, System, ., identityHashCode, (, object, ), )]
[Integer]
[System, ., identityHashCode, (, object, )]
[System]
[object]
[object, ==, null]
[object]
[null]
[new, NullPointerException, (, "Cannot get the toString of a null identity", )]
["Cannot get the toString of a null identity"]
[builder, ., append, (, object, ., getClass, (, ), ., getName, (, ), ), ., append, (, '@', ), ., append, (, Integer, ., toHexString, (, System, ., identityHashCode, (, object, ), ), )]
[builder, ., append, (, object, ., getClass, (, ), ., getName, (, ), ), ., append, (, '@', )]
[builder, ., append, (, object, ., getClass, (, ), ., getName, (, ), )]
[builder]
[object, ., getClass, (, ), ., getName, (, )]
[object, ., getClass, (, )]
[object]
['@']
[Integer, ., toHexString, (, System, ., identityHashCode, (, object, ), )]
[Integer]
[System, ., identityHashCode, (, object, )]
[System]
[object]
[obj, ==, null, ?, "", :, obj, ., toString, (, )]
[obj, ==, null]
[obj]
[null]
[""]
[obj, ., toString, (, )]
[obj]
[obj, ==, null, ?, nullStr, :, obj, ., toString, (, )]
[obj, ==, null]
[obj]
[null]
[nullStr]
[obj, ., toString, (, )]
[obj]
[null]
[values, !=, null]
[values]
[null]
[values]
[compare, (, value, ,, result, ,, true, ), <, 0]
[compare, (, value, ,, result, ,, true, )]
[value]
[result]
[true]
[0]
[result]
[value]
[result]
[null]
[values, !=, null]
[values]
[null]
[values]
[compare, (, value, ,, result, ,, false, ), >, 0]
[compare, (, value, ,, result, ,, false, )]
[value]
[result]
[false]
[0]
[result]
[value]
[result]
[compare, (, c1, ,, c2, ,, false, )]
[c1]
[c2]
[false]
[c1, ==, c2]
[c1]
[c2]
[0]
[c1, ==, null]
[c1]
[null]
[nullGreater, ?, 1, :, -, 1]
[nullGreater]
[1]
[-, 1]
[1]
[c2, ==, null]
[c2]
[null]
[nullGreater, ?, -, 1, :, 1]
[nullGreater]
[-, 1]
[1]
[1]
[c1, ., compareTo, (, c2, )]
[c1]
[c2]
[Validate, ., notEmpty, (, items, )]
[Validate]
[items]
[Validate, ., noNullElements, (, items, )]
[Validate]
[items]
[new, TreeSet, <, T, >, (, )]
[Collections, ., addAll, (, sort, ,, items, )]
[Collections]
[sort]
[items]
[@, SuppressWarnings, (, "unchecked", )]
["unchecked"]
[(, T, ), sort, ., toArray, (, ), [, (, sort, ., size, (, ), -, 1, ), /, 2, ]]
[sort, ., toArray, (, ), [, (, sort, ., size, (, ), -, 1, ), /, 2, ]]
[sort, ., toArray, (, )]
[sort]
[(, sort, ., size, (, ), -, 1, ), /, 2]
[(, sort, ., size, (, ), -, 1, )]
[sort, ., size, (, ), -, 1]
[sort, ., size, (, )]
[sort]
[1]
[2]
[result]
[Validate, ., notEmpty, (, items, ,, "null/empty items", )]
[Validate]
[items]
["null/empty items"]
[Validate, ., noNullElements, (, items, )]
[Validate]
[items]
[Validate, ., notNull, (, comparator, ,, "null comparator", )]
[Validate]
[comparator]
["null comparator"]
[new, TreeSet, <, T, >, (, comparator, )]
[comparator]
[Collections, ., addAll, (, sort, ,, items, )]
[Collections]
[sort]
[items]
[@, SuppressWarnings, (, "unchecked", )]
["unchecked"]
[(, T, ), sort, ., toArray, (, ), [, (, sort, ., size, (, ), -, 1, ), /, 2, ]]
[sort, ., toArray, (, ), [, (, sort, ., size, (, ), -, 1, ), /, 2, ]]
[sort, ., toArray, (, )]
[sort]
[(, sort, ., size, (, ), -, 1, ), /, 2]
[(, sort, ., size, (, ), -, 1, )]
[sort, ., size, (, ), -, 1]
[sort, ., size, (, )]
[sort]
[1]
[2]
[result]
[ArrayUtils, ., isNotEmpty, (, items, )]
[ArrayUtils]
[items]
[new, HashMap, <, T, ,, MutableInt, >, (, items, ., length, )]
[items, ., length]
[items]
[items]
[occurrences, ., get, (, t, )]
[occurrences]
[t]
[count, ==, null]
[count]
[null]
[occurrences, ., put, (, t, ,, new, MutableInt, (, 1, ), )]
[occurrences]
[t]
[new, MutableInt, (, 1, )]
[1]
[count, ., increment, (, )]
[count]
[null]
[0]
[occurrences, ., entrySet, (, )]
[occurrences]
[e, ., getValue, (, ), ., intValue, (, )]
[e, ., getValue, (, )]
[e]
[cmp, ==, max]
[cmp]
[max]
[result]
[null]
[cmp, >, max]
[cmp]
[max]
[max]
[cmp]
[result]
[e, ., getKey, (, )]
[e]
[result]
[null]
[obj, instanceof, Cloneable]
[obj]
[obj, ., getClass, (, ), ., isArray, (, )]
[obj, ., getClass, (, )]
[obj]
[obj, ., getClass, (, ), ., getComponentType, (, )]
[obj, ., getClass, (, )]
[obj]
[!, componentType, ., isPrimitive, (, )]
[componentType, ., isPrimitive, (, )]
[componentType]
[result]
[(, (, Object, [, ], ), obj, ), ., clone, (, )]
[(, (, Object, [, ], ), obj, )]
[(, Object, [, ], ), obj]
[obj]
[Array, ., getLength, (, obj, )]
[Array]
[obj]
[result]
[Array, ., newInstance, (, componentType, ,, length, )]
[Array]
[componentType]
[length]
[length, --, >, 0]
[length, --]
[length]
[0]
[Array, ., set, (, result, ,, length, ,, Array, ., get, (, obj, ,, length, ), )]
[Array]
[result]
[length]
[Array, ., get, (, obj, ,, length, )]
[Array]
[obj]
[length]
[obj, ., getClass, (, ), ., getMethod, (, "clone", )]
[obj, ., getClass, (, )]
[obj]
["clone"]
[result]
[clone, ., invoke, (, obj, )]
[clone]
[obj]
[new, CloneFailedException, (, "Cloneable type ", +, obj, ., getClass, (, ), ., getName, (, ), +, " has no clone method", ,, e, )]
["Cloneable type ", +, obj, ., getClass, (, ), ., getName, (, ), +, " has no clone method"]
["Cloneable type ", +, obj, ., getClass, (, ), ., getName, (, )]
["Cloneable type "]
[obj, ., getClass, (, ), ., getName, (, )]
[obj, ., getClass, (, )]
[obj]
[" has no clone method"]
[e]
[new, CloneFailedException, (, "Cannot clone Cloneable type ", +, obj, ., getClass, (, ), ., getName, (, ), ,, e, )]
["Cannot clone Cloneable type ", +, obj, ., getClass, (, ), ., getName, (, )]
["Cannot clone Cloneable type "]
[obj, ., getClass, (, ), ., getName, (, )]
[obj, ., getClass, (, )]
[obj]
[e]
[new, CloneFailedException, (, "Exception cloning Cloneable type ", +, obj, ., getClass, (, ), ., getName, (, ), ,, e, ., getCause, (, ), )]
["Exception cloning Cloneable type ", +, obj, ., getClass, (, ), ., getName, (, )]
["Exception cloning Cloneable type "]
[obj, ., getClass, (, ), ., getName, (, )]
[obj, ., getClass, (, )]
[obj]
[e, ., getCause, (, )]
[e]
[@, SuppressWarnings, (, "unchecked", )]
["unchecked"]
[(, T, ), result]
[result]
[checked]
[null]
[clone, (, obj, )]
[obj]
[clone, ==, null, ?, obj, :, clone]
[clone, ==, null]
[clone]
[null]
[obj]
[clone]
[7092611880189329093L]
[ObjectUtils, ., NULL]
[ObjectUtils]
[v]
[v]
[v, <, Byte, ., MIN_VALUE, ||, v, >, Byte, ., MAX_VALUE]
[v, <, Byte, ., MIN_VALUE]
[v]
[Byte, ., MIN_VALUE]
[Byte]
[v, >, Byte, ., MAX_VALUE]
[v]
[Byte, ., MAX_VALUE]
[Byte]
[new, IllegalArgumentException, (, "Supplied value must be a valid byte literal between -128 and 127: [", +, v, +, "]", )]
["Supplied value must be a valid byte literal between -128 and 127: [", +, v, +, "]"]
["Supplied value must be a valid byte literal between -128 and 127: [", +, v]
["Supplied value must be a valid byte literal between -128 and 127: ["]
[v]
["]"]
[(, byte, ), v]
[v]
[v]
[v]
[v, <, Short, ., MIN_VALUE, ||, v, >, Short, ., MAX_VALUE]
[v, <, Short, ., MIN_VALUE]
[v]
[Short, ., MIN_VALUE]
[Short]
[v, >, Short, ., MAX_VALUE]
[v]
[Short, ., MAX_VALUE]
[Short]
[new, IllegalArgumentException, (, "Supplied value must be a valid byte literal between -32768 and 32767: [", +, v, +, "]", )]
["Supplied value must be a valid byte literal between -32768 and 32767: [", +, v, +, "]"]
["Supplied value must be a valid byte literal between -32768 and 32767: [", +, v]
["Supplied value must be a valid byte literal between -32768 and 32767: ["]
[v]
["]"]
[(, short, ), v]
[v]
[v]
[v]
[v]
[v]
[v]
