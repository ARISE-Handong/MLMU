["Dormand-Prince 8 (5, 3)"]
[{, (, 12.0, -, 2.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 135.0, ,, (, 6.0, -, FastMath, ., sqrt, (, 6.0, ), ), /, 45.0, ,, (, 6.0, -, FastMath, ., sqrt, (, 6.0, ), ), /, 30.0, ,, (, 6.0, +, FastMath, ., sqrt, (, 6.0, ), ), /, 30.0, ,, 1.0, /, 3.0, ,, 1.0, /, 4.0, ,, 4.0, /, 13.0, ,, 127.0, /, 195.0, ,, 3.0, /, 5.0, ,, 6.0, /, 7.0, ,, 1.0, ,, 1.0, }]
[(, 12.0, -, 2.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 135.0]
[(, 12.0, -, 2.0, *, FastMath, ., sqrt, (, 6.0, ), )]
[12.0, -, 2.0, *, FastMath, ., sqrt, (, 6.0, )]
[12.0]
[2.0, *, FastMath, ., sqrt, (, 6.0, )]
[2.0]
[FastMath, ., sqrt, (, 6.0, )]
[FastMath]
[6.0]
[135.0]
[(, 6.0, -, FastMath, ., sqrt, (, 6.0, ), ), /, 45.0]
[(, 6.0, -, FastMath, ., sqrt, (, 6.0, ), )]
[6.0, -, FastMath, ., sqrt, (, 6.0, )]
[6.0]
[FastMath, ., sqrt, (, 6.0, )]
[FastMath]
[6.0]
[45.0]
[(, 6.0, -, FastMath, ., sqrt, (, 6.0, ), ), /, 30.0]
[(, 6.0, -, FastMath, ., sqrt, (, 6.0, ), )]
[6.0, -, FastMath, ., sqrt, (, 6.0, )]
[6.0]
[FastMath, ., sqrt, (, 6.0, )]
[FastMath]
[6.0]
[30.0]
[(, 6.0, +, FastMath, ., sqrt, (, 6.0, ), ), /, 30.0]
[(, 6.0, +, FastMath, ., sqrt, (, 6.0, ), )]
[6.0, +, FastMath, ., sqrt, (, 6.0, )]
[6.0]
[FastMath, ., sqrt, (, 6.0, )]
[FastMath]
[6.0]
[30.0]
[1.0, /, 3.0]
[1.0]
[3.0]
[1.0, /, 4.0]
[1.0]
[4.0]
[4.0, /, 13.0]
[4.0]
[13.0]
[127.0, /, 195.0]
[127.0]
[195.0]
[3.0, /, 5.0]
[3.0]
[5.0]
[6.0, /, 7.0]
[6.0]
[7.0]
[1.0]
[1.0]
[{, {, (, 12.0, -, 2.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 135.0, }, ,, {, (, 6.0, -, FastMath, ., sqrt, (, 6.0, ), ), /, 180.0, ,, (, 6.0, -, FastMath, ., sqrt, (, 6.0, ), ), /, 60.0, }, ,, {, (, 6.0, -, FastMath, ., sqrt, (, 6.0, ), ), /, 120.0, ,, 0.0, ,, (, 6.0, -, FastMath, ., sqrt, (, 6.0, ), ), /, 40.0, }, ,, {, (, 462.0, +, 107.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 3000.0, ,, 0.0, ,, (, -, 402.0, -, 197.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 1000.0, ,, (, 168.0, +, 73.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 375.0, }, ,, {, 1.0, /, 27.0, ,, 0.0, ,, 0.0, ,, (, 16.0, +, FastMath, ., sqrt, (, 6.0, ), ), /, 108.0, ,, (, 16.0, -, FastMath, ., sqrt, (, 6.0, ), ), /, 108.0, }, ,, {, 19.0, /, 512.0, ,, 0.0, ,, 0.0, ,, (, 118.0, +, 23.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 1024.0, ,, (, 118.0, -, 23.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 1024.0, ,, -, 9.0, /, 512.0, }, ,, {, 13772.0, /, 371293.0, ,, 0.0, ,, 0.0, ,, (, 51544.0, +, 4784.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 371293.0, ,, (, 51544.0, -, 4784.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 371293.0, ,, -, 5688.0, /, 371293.0, ,, 3072.0, /, 371293.0, }, ,, {, 58656157643.0, /, 93983540625.0, ,, 0.0, ,, 0.0, ,, (, -, 1324889724104.0, -, 318801444819.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 626556937500.0, ,, (, -, 1324889724104.0, +, 318801444819.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 626556937500.0, ,, 96044563816.0, /, 3480871875.0, ,, 5682451879168.0, /, 281950621875.0, ,, -, 165125654.0, /, 3796875.0, }, ,, {, 8909899.0, /, 18653125.0, ,, 0.0, ,, 0.0, ,, (, -, 4521408.0, -, 1137963.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 2937500.0, ,, (, -, 4521408.0, +, 1137963.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 2937500.0, ,, 96663078.0, /, 4553125.0, ,, 2107245056.0, /, 137915625.0, ,, -, 4913652016.0, /, 147609375.0, ,, -, 78894270.0, /, 3880452869.0, }, ,, {, -, 20401265806.0, /, 21769653311.0, ,, 0.0, ,, 0.0, ,, (, 354216.0, +, 94326.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 112847.0, ,, (, 354216.0, -, 94326.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 112847.0, ,, -, 43306765128.0, /, 5313852383.0, ,, -, 20866708358144.0, /, 1126708119789.0, ,, 14886003438020.0, /, 654632330667.0, ,, 35290686222309375.0, /, 14152473387134411.0, ,, -, 1477884375.0, /, 485066827.0, }, ,, {, 39815761.0, /, 17514443.0, ,, 0.0, ,, 0.0, ,, (, -, 3457480.0, -, 960905.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 551636.0, ,, (, -, 3457480.0, +, 960905.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 551636.0, ,, -, 844554132.0, /, 47026969.0, ,, 8444996352.0, /, 302158619.0, ,, -, 2509602342.0, /, 877790785.0, ,, -, 28388795297996250.0, /, 3199510091356783.0, ,, 226716250.0, /, 18341897.0, ,, 1371316744.0, /, 2131383595.0, }, ,, {, 104257.0, /, 1920240.0, ,, 0.0, ,, 0.0, ,, 0.0, ,, 0.0, ,, 3399327.0, /, 763840.0, ,, 66578432.0, /, 35198415.0, ,, -, 1674902723.0, /, 288716400.0, ,, 54980371265625.0, /, 176692375811392.0, ,, -, 734375.0, /, 4826304.0, ,, 171414593.0, /, 851261400.0, ,, 137909.0, /, 3084480.0, }, }]
[{, (, 12.0, -, 2.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 135.0, }]
[(, 12.0, -, 2.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 135.0]
[(, 12.0, -, 2.0, *, FastMath, ., sqrt, (, 6.0, ), )]
[12.0, -, 2.0, *, FastMath, ., sqrt, (, 6.0, )]
[12.0]
[2.0, *, FastMath, ., sqrt, (, 6.0, )]
[2.0]
[FastMath, ., sqrt, (, 6.0, )]
[FastMath]
[6.0]
[135.0]
[{, (, 6.0, -, FastMath, ., sqrt, (, 6.0, ), ), /, 180.0, ,, (, 6.0, -, FastMath, ., sqrt, (, 6.0, ), ), /, 60.0, }]
[(, 6.0, -, FastMath, ., sqrt, (, 6.0, ), ), /, 180.0]
[(, 6.0, -, FastMath, ., sqrt, (, 6.0, ), )]
[6.0, -, FastMath, ., sqrt, (, 6.0, )]
[6.0]
[FastMath, ., sqrt, (, 6.0, )]
[FastMath]
[6.0]
[180.0]
[(, 6.0, -, FastMath, ., sqrt, (, 6.0, ), ), /, 60.0]
[(, 6.0, -, FastMath, ., sqrt, (, 6.0, ), )]
[6.0, -, FastMath, ., sqrt, (, 6.0, )]
[6.0]
[FastMath, ., sqrt, (, 6.0, )]
[FastMath]
[6.0]
[60.0]
[{, (, 6.0, -, FastMath, ., sqrt, (, 6.0, ), ), /, 120.0, ,, 0.0, ,, (, 6.0, -, FastMath, ., sqrt, (, 6.0, ), ), /, 40.0, }]
[(, 6.0, -, FastMath, ., sqrt, (, 6.0, ), ), /, 120.0]
[(, 6.0, -, FastMath, ., sqrt, (, 6.0, ), )]
[6.0, -, FastMath, ., sqrt, (, 6.0, )]
[6.0]
[FastMath, ., sqrt, (, 6.0, )]
[FastMath]
[6.0]
[120.0]
[0.0]
[(, 6.0, -, FastMath, ., sqrt, (, 6.0, ), ), /, 40.0]
[(, 6.0, -, FastMath, ., sqrt, (, 6.0, ), )]
[6.0, -, FastMath, ., sqrt, (, 6.0, )]
[6.0]
[FastMath, ., sqrt, (, 6.0, )]
[FastMath]
[6.0]
[40.0]
[{, (, 462.0, +, 107.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 3000.0, ,, 0.0, ,, (, -, 402.0, -, 197.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 1000.0, ,, (, 168.0, +, 73.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 375.0, }]
[(, 462.0, +, 107.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 3000.0]
[(, 462.0, +, 107.0, *, FastMath, ., sqrt, (, 6.0, ), )]
[462.0, +, 107.0, *, FastMath, ., sqrt, (, 6.0, )]
[462.0]
[107.0, *, FastMath, ., sqrt, (, 6.0, )]
[107.0]
[FastMath, ., sqrt, (, 6.0, )]
[FastMath]
[6.0]
[3000.0]
[0.0]
[(, -, 402.0, -, 197.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 1000.0]
[(, -, 402.0, -, 197.0, *, FastMath, ., sqrt, (, 6.0, ), )]
[-, 402.0, -, 197.0, *, FastMath, ., sqrt, (, 6.0, )]
[-, 402.0]
[402.0]
[197.0, *, FastMath, ., sqrt, (, 6.0, )]
[197.0]
[FastMath, ., sqrt, (, 6.0, )]
[FastMath]
[6.0]
[1000.0]
[(, 168.0, +, 73.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 375.0]
[(, 168.0, +, 73.0, *, FastMath, ., sqrt, (, 6.0, ), )]
[168.0, +, 73.0, *, FastMath, ., sqrt, (, 6.0, )]
[168.0]
[73.0, *, FastMath, ., sqrt, (, 6.0, )]
[73.0]
[FastMath, ., sqrt, (, 6.0, )]
[FastMath]
[6.0]
[375.0]
[{, 1.0, /, 27.0, ,, 0.0, ,, 0.0, ,, (, 16.0, +, FastMath, ., sqrt, (, 6.0, ), ), /, 108.0, ,, (, 16.0, -, FastMath, ., sqrt, (, 6.0, ), ), /, 108.0, }]
[1.0, /, 27.0]
[1.0]
[27.0]
[0.0]
[0.0]
[(, 16.0, +, FastMath, ., sqrt, (, 6.0, ), ), /, 108.0]
[(, 16.0, +, FastMath, ., sqrt, (, 6.0, ), )]
[16.0, +, FastMath, ., sqrt, (, 6.0, )]
[16.0]
[FastMath, ., sqrt, (, 6.0, )]
[FastMath]
[6.0]
[108.0]
[(, 16.0, -, FastMath, ., sqrt, (, 6.0, ), ), /, 108.0]
[(, 16.0, -, FastMath, ., sqrt, (, 6.0, ), )]
[16.0, -, FastMath, ., sqrt, (, 6.0, )]
[16.0]
[FastMath, ., sqrt, (, 6.0, )]
[FastMath]
[6.0]
[108.0]
[{, 19.0, /, 512.0, ,, 0.0, ,, 0.0, ,, (, 118.0, +, 23.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 1024.0, ,, (, 118.0, -, 23.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 1024.0, ,, -, 9.0, /, 512.0, }]
[19.0, /, 512.0]
[19.0]
[512.0]
[0.0]
[0.0]
[(, 118.0, +, 23.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 1024.0]
[(, 118.0, +, 23.0, *, FastMath, ., sqrt, (, 6.0, ), )]
[118.0, +, 23.0, *, FastMath, ., sqrt, (, 6.0, )]
[118.0]
[23.0, *, FastMath, ., sqrt, (, 6.0, )]
[23.0]
[FastMath, ., sqrt, (, 6.0, )]
[FastMath]
[6.0]
[1024.0]
[(, 118.0, -, 23.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 1024.0]
[(, 118.0, -, 23.0, *, FastMath, ., sqrt, (, 6.0, ), )]
[118.0, -, 23.0, *, FastMath, ., sqrt, (, 6.0, )]
[118.0]
[23.0, *, FastMath, ., sqrt, (, 6.0, )]
[23.0]
[FastMath, ., sqrt, (, 6.0, )]
[FastMath]
[6.0]
[1024.0]
[-, 9.0, /, 512.0]
[-, 9.0]
[9.0]
[512.0]
[{, 13772.0, /, 371293.0, ,, 0.0, ,, 0.0, ,, (, 51544.0, +, 4784.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 371293.0, ,, (, 51544.0, -, 4784.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 371293.0, ,, -, 5688.0, /, 371293.0, ,, 3072.0, /, 371293.0, }]
[13772.0, /, 371293.0]
[13772.0]
[371293.0]
[0.0]
[0.0]
[(, 51544.0, +, 4784.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 371293.0]
[(, 51544.0, +, 4784.0, *, FastMath, ., sqrt, (, 6.0, ), )]
[51544.0, +, 4784.0, *, FastMath, ., sqrt, (, 6.0, )]
[51544.0]
[4784.0, *, FastMath, ., sqrt, (, 6.0, )]
[4784.0]
[FastMath, ., sqrt, (, 6.0, )]
[FastMath]
[6.0]
[371293.0]
[(, 51544.0, -, 4784.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 371293.0]
[(, 51544.0, -, 4784.0, *, FastMath, ., sqrt, (, 6.0, ), )]
[51544.0, -, 4784.0, *, FastMath, ., sqrt, (, 6.0, )]
[51544.0]
[4784.0, *, FastMath, ., sqrt, (, 6.0, )]
[4784.0]
[FastMath, ., sqrt, (, 6.0, )]
[FastMath]
[6.0]
[371293.0]
[-, 5688.0, /, 371293.0]
[-, 5688.0]
[5688.0]
[371293.0]
[3072.0, /, 371293.0]
[3072.0]
[371293.0]
[{, 58656157643.0, /, 93983540625.0, ,, 0.0, ,, 0.0, ,, (, -, 1324889724104.0, -, 318801444819.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 626556937500.0, ,, (, -, 1324889724104.0, +, 318801444819.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 626556937500.0, ,, 96044563816.0, /, 3480871875.0, ,, 5682451879168.0, /, 281950621875.0, ,, -, 165125654.0, /, 3796875.0, }]
[58656157643.0, /, 93983540625.0]
[58656157643.0]
[93983540625.0]
[0.0]
[0.0]
[(, -, 1324889724104.0, -, 318801444819.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 626556937500.0]
[(, -, 1324889724104.0, -, 318801444819.0, *, FastMath, ., sqrt, (, 6.0, ), )]
[-, 1324889724104.0, -, 318801444819.0, *, FastMath, ., sqrt, (, 6.0, )]
[-, 1324889724104.0]
[1324889724104.0]
[318801444819.0, *, FastMath, ., sqrt, (, 6.0, )]
[318801444819.0]
[FastMath, ., sqrt, (, 6.0, )]
[FastMath]
[6.0]
[626556937500.0]
[(, -, 1324889724104.0, +, 318801444819.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 626556937500.0]
[(, -, 1324889724104.0, +, 318801444819.0, *, FastMath, ., sqrt, (, 6.0, ), )]
[-, 1324889724104.0, +, 318801444819.0, *, FastMath, ., sqrt, (, 6.0, )]
[-, 1324889724104.0]
[1324889724104.0]
[318801444819.0, *, FastMath, ., sqrt, (, 6.0, )]
[318801444819.0]
[FastMath, ., sqrt, (, 6.0, )]
[FastMath]
[6.0]
[626556937500.0]
[96044563816.0, /, 3480871875.0]
[96044563816.0]
[3480871875.0]
[5682451879168.0, /, 281950621875.0]
[5682451879168.0]
[281950621875.0]
[-, 165125654.0, /, 3796875.0]
[-, 165125654.0]
[165125654.0]
[3796875.0]
[{, 8909899.0, /, 18653125.0, ,, 0.0, ,, 0.0, ,, (, -, 4521408.0, -, 1137963.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 2937500.0, ,, (, -, 4521408.0, +, 1137963.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 2937500.0, ,, 96663078.0, /, 4553125.0, ,, 2107245056.0, /, 137915625.0, ,, -, 4913652016.0, /, 147609375.0, ,, -, 78894270.0, /, 3880452869.0, }]
[8909899.0, /, 18653125.0]
[8909899.0]
[18653125.0]
[0.0]
[0.0]
[(, -, 4521408.0, -, 1137963.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 2937500.0]
[(, -, 4521408.0, -, 1137963.0, *, FastMath, ., sqrt, (, 6.0, ), )]
[-, 4521408.0, -, 1137963.0, *, FastMath, ., sqrt, (, 6.0, )]
[-, 4521408.0]
[4521408.0]
[1137963.0, *, FastMath, ., sqrt, (, 6.0, )]
[1137963.0]
[FastMath, ., sqrt, (, 6.0, )]
[FastMath]
[6.0]
[2937500.0]
[(, -, 4521408.0, +, 1137963.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 2937500.0]
[(, -, 4521408.0, +, 1137963.0, *, FastMath, ., sqrt, (, 6.0, ), )]
[-, 4521408.0, +, 1137963.0, *, FastMath, ., sqrt, (, 6.0, )]
[-, 4521408.0]
[4521408.0]
[1137963.0, *, FastMath, ., sqrt, (, 6.0, )]
[1137963.0]
[FastMath, ., sqrt, (, 6.0, )]
[FastMath]
[6.0]
[2937500.0]
[96663078.0, /, 4553125.0]
[96663078.0]
[4553125.0]
[2107245056.0, /, 137915625.0]
[2107245056.0]
[137915625.0]
[-, 4913652016.0, /, 147609375.0]
[-, 4913652016.0]
[4913652016.0]
[147609375.0]
[-, 78894270.0, /, 3880452869.0]
[-, 78894270.0]
[78894270.0]
[3880452869.0]
[{, -, 20401265806.0, /, 21769653311.0, ,, 0.0, ,, 0.0, ,, (, 354216.0, +, 94326.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 112847.0, ,, (, 354216.0, -, 94326.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 112847.0, ,, -, 43306765128.0, /, 5313852383.0, ,, -, 20866708358144.0, /, 1126708119789.0, ,, 14886003438020.0, /, 654632330667.0, ,, 35290686222309375.0, /, 14152473387134411.0, ,, -, 1477884375.0, /, 485066827.0, }]
[-, 20401265806.0, /, 21769653311.0]
[-, 20401265806.0]
[20401265806.0]
[21769653311.0]
[0.0]
[0.0]
[(, 354216.0, +, 94326.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 112847.0]
[(, 354216.0, +, 94326.0, *, FastMath, ., sqrt, (, 6.0, ), )]
[354216.0, +, 94326.0, *, FastMath, ., sqrt, (, 6.0, )]
[354216.0]
[94326.0, *, FastMath, ., sqrt, (, 6.0, )]
[94326.0]
[FastMath, ., sqrt, (, 6.0, )]
[FastMath]
[6.0]
[112847.0]
[(, 354216.0, -, 94326.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 112847.0]
[(, 354216.0, -, 94326.0, *, FastMath, ., sqrt, (, 6.0, ), )]
[354216.0, -, 94326.0, *, FastMath, ., sqrt, (, 6.0, )]
[354216.0]
[94326.0, *, FastMath, ., sqrt, (, 6.0, )]
[94326.0]
[FastMath, ., sqrt, (, 6.0, )]
[FastMath]
[6.0]
[112847.0]
[-, 43306765128.0, /, 5313852383.0]
[-, 43306765128.0]
[43306765128.0]
[5313852383.0]
[-, 20866708358144.0, /, 1126708119789.0]
[-, 20866708358144.0]
[20866708358144.0]
[1126708119789.0]
[14886003438020.0, /, 654632330667.0]
[14886003438020.0]
[654632330667.0]
[35290686222309375.0, /, 14152473387134411.0]
[35290686222309375.0]
[14152473387134411.0]
[-, 1477884375.0, /, 485066827.0]
[-, 1477884375.0]
[1477884375.0]
[485066827.0]
[{, 39815761.0, /, 17514443.0, ,, 0.0, ,, 0.0, ,, (, -, 3457480.0, -, 960905.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 551636.0, ,, (, -, 3457480.0, +, 960905.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 551636.0, ,, -, 844554132.0, /, 47026969.0, ,, 8444996352.0, /, 302158619.0, ,, -, 2509602342.0, /, 877790785.0, ,, -, 28388795297996250.0, /, 3199510091356783.0, ,, 226716250.0, /, 18341897.0, ,, 1371316744.0, /, 2131383595.0, }]
[39815761.0, /, 17514443.0]
[39815761.0]
[17514443.0]
[0.0]
[0.0]
[(, -, 3457480.0, -, 960905.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 551636.0]
[(, -, 3457480.0, -, 960905.0, *, FastMath, ., sqrt, (, 6.0, ), )]
[-, 3457480.0, -, 960905.0, *, FastMath, ., sqrt, (, 6.0, )]
[-, 3457480.0]
[3457480.0]
[960905.0, *, FastMath, ., sqrt, (, 6.0, )]
[960905.0]
[FastMath, ., sqrt, (, 6.0, )]
[FastMath]
[6.0]
[551636.0]
[(, -, 3457480.0, +, 960905.0, *, FastMath, ., sqrt, (, 6.0, ), ), /, 551636.0]
[(, -, 3457480.0, +, 960905.0, *, FastMath, ., sqrt, (, 6.0, ), )]
[-, 3457480.0, +, 960905.0, *, FastMath, ., sqrt, (, 6.0, )]
[-, 3457480.0]
[3457480.0]
[960905.0, *, FastMath, ., sqrt, (, 6.0, )]
[960905.0]
[FastMath, ., sqrt, (, 6.0, )]
[FastMath]
[6.0]
[551636.0]
[-, 844554132.0, /, 47026969.0]
[-, 844554132.0]
[844554132.0]
[47026969.0]
[8444996352.0, /, 302158619.0]
[8444996352.0]
[302158619.0]
[-, 2509602342.0, /, 877790785.0]
[-, 2509602342.0]
[2509602342.0]
[877790785.0]
[-, 28388795297996250.0, /, 3199510091356783.0]
[-, 28388795297996250.0]
[28388795297996250.0]
[3199510091356783.0]
[226716250.0, /, 18341897.0]
[226716250.0]
[18341897.0]
[1371316744.0, /, 2131383595.0]
[1371316744.0]
[2131383595.0]
[{, 104257.0, /, 1920240.0, ,, 0.0, ,, 0.0, ,, 0.0, ,, 0.0, ,, 3399327.0, /, 763840.0, ,, 66578432.0, /, 35198415.0, ,, -, 1674902723.0, /, 288716400.0, ,, 54980371265625.0, /, 176692375811392.0, ,, -, 734375.0, /, 4826304.0, ,, 171414593.0, /, 851261400.0, ,, 137909.0, /, 3084480.0, }]
[104257.0, /, 1920240.0]
[104257.0]
[1920240.0]
[0.0]
[0.0]
[0.0]
[0.0]
[3399327.0, /, 763840.0]
[3399327.0]
[763840.0]
[66578432.0, /, 35198415.0]
[66578432.0]
[35198415.0]
[-, 1674902723.0, /, 288716400.0]
[-, 1674902723.0]
[1674902723.0]
[288716400.0]
[54980371265625.0, /, 176692375811392.0]
[54980371265625.0]
[176692375811392.0]
[-, 734375.0, /, 4826304.0]
[-, 734375.0]
[734375.0]
[4826304.0]
[171414593.0, /, 851261400.0]
[171414593.0]
[851261400.0]
[137909.0, /, 3084480.0]
[137909.0]
[3084480.0]
[{, 104257.0, /, 1920240.0, ,, 0.0, ,, 0.0, ,, 0.0, ,, 0.0, ,, 3399327.0, /, 763840.0, ,, 66578432.0, /, 35198415.0, ,, -, 1674902723.0, /, 288716400.0, ,, 54980371265625.0, /, 176692375811392.0, ,, -, 734375.0, /, 4826304.0, ,, 171414593.0, /, 851261400.0, ,, 137909.0, /, 3084480.0, ,, 0.0, }]
[104257.0, /, 1920240.0]
[104257.0]
[1920240.0]
[0.0]
[0.0]
[0.0]
[0.0]
[3399327.0, /, 763840.0]
[3399327.0]
[763840.0]
[66578432.0, /, 35198415.0]
[66578432.0]
[35198415.0]
[-, 1674902723.0, /, 288716400.0]
[-, 1674902723.0]
[1674902723.0]
[288716400.0]
[54980371265625.0, /, 176692375811392.0]
[54980371265625.0]
[176692375811392.0]
[-, 734375.0, /, 4826304.0]
[-, 734375.0]
[734375.0]
[4826304.0]
[171414593.0, /, 851261400.0]
[171414593.0]
[851261400.0]
[137909.0, /, 3084480.0]
[137909.0]
[3084480.0]
[0.0]
[116092271.0, /, 8848465920.0]
[116092271.0]
[8848465920.0]
[-, 1871647.0, /, 1527680.0]
[-, 1871647.0]
[1871647.0]
[1527680.0]
[-, 69799717.0, /, 140793660.0]
[-, 69799717.0]
[69799717.0]
[140793660.0]
[1230164450203.0, /, 739113984000.0]
[1230164450203.0]
[739113984000.0]
[-, 1980813971228885.0, /, 5654156025964544.0]
[-, 1980813971228885.0]
[1980813971228885.0]
[5654156025964544.0]
[464500805.0, /, 1389975552.0]
[464500805.0]
[1389975552.0]
[1606764981773.0, /, 19613062656000.0]
[1606764981773.0]
[19613062656000.0]
[-, 137909.0, /, 6168960.0]
[-, 137909.0]
[137909.0]
[6168960.0]
[-, 364463.0, /, 1920240.0]
[-, 364463.0]
[364463.0]
[1920240.0]
[3399327.0, /, 763840.0]
[3399327.0]
[763840.0]
[66578432.0, /, 35198415.0]
[66578432.0]
[35198415.0]
[-, 1674902723.0, /, 288716400.0]
[-, 1674902723.0]
[1674902723.0]
[288716400.0]
[-, 74684743568175.0, /, 176692375811392.0]
[-, 74684743568175.0]
[74684743568175.0]
[176692375811392.0]
[-, 734375.0, /, 4826304.0]
[-, 734375.0]
[734375.0]
[4826304.0]
[171414593.0, /, 851261400.0]
[171414593.0]
[851261400.0]
[69869.0, /, 3084480.0]
[69869.0]
[3084480.0]
[METHOD_NAME]
[true]
[STATIC_C]
[STATIC_A]
[STATIC_B]
[new, DormandPrince853StepInterpolator, (, )]
[minStep]
[maxStep]
[scalAbsoluteTolerance]
[scalRelativeTolerance]
[METHOD_NAME]
[true]
[STATIC_C]
[STATIC_A]
[STATIC_B]
[new, DormandPrince853StepInterpolator, (, )]
[minStep]
[maxStep]
[vecAbsoluteTolerance]
[vecRelativeTolerance]
[8]
[0]
[0]
[0]
[j, <, mainSetDimension]
[j]
[mainSetDimension]
[++, j]
[j]
[E1_01, *, yDotK, [, 0, ], [, j, ], +, E1_06, *, yDotK, [, 5, ], [, j, ], +, E1_07, *, yDotK, [, 6, ], [, j, ], +, E1_08, *, yDotK, [, 7, ], [, j, ], +, E1_09, *, yDotK, [, 8, ], [, j, ], +, E1_10, *, yDotK, [, 9, ], [, j, ], +, E1_11, *, yDotK, [, 10, ], [, j, ], +, E1_12, *, yDotK, [, 11, ], [, j, ]]
[E1_01, *, yDotK, [, 0, ], [, j, ], +, E1_06, *, yDotK, [, 5, ], [, j, ], +, E1_07, *, yDotK, [, 6, ], [, j, ], +, E1_08, *, yDotK, [, 7, ], [, j, ], +, E1_09, *, yDotK, [, 8, ], [, j, ], +, E1_10, *, yDotK, [, 9, ], [, j, ], +, E1_11, *, yDotK, [, 10, ], [, j, ]]
[E1_01, *, yDotK, [, 0, ], [, j, ], +, E1_06, *, yDotK, [, 5, ], [, j, ], +, E1_07, *, yDotK, [, 6, ], [, j, ], +, E1_08, *, yDotK, [, 7, ], [, j, ], +, E1_09, *, yDotK, [, 8, ], [, j, ], +, E1_10, *, yDotK, [, 9, ], [, j, ]]
[E1_01, *, yDotK, [, 0, ], [, j, ], +, E1_06, *, yDotK, [, 5, ], [, j, ], +, E1_07, *, yDotK, [, 6, ], [, j, ], +, E1_08, *, yDotK, [, 7, ], [, j, ], +, E1_09, *, yDotK, [, 8, ], [, j, ]]
[E1_01, *, yDotK, [, 0, ], [, j, ], +, E1_06, *, yDotK, [, 5, ], [, j, ], +, E1_07, *, yDotK, [, 6, ], [, j, ], +, E1_08, *, yDotK, [, 7, ], [, j, ]]
[E1_01, *, yDotK, [, 0, ], [, j, ], +, E1_06, *, yDotK, [, 5, ], [, j, ], +, E1_07, *, yDotK, [, 6, ], [, j, ]]
[E1_01, *, yDotK, [, 0, ], [, j, ], +, E1_06, *, yDotK, [, 5, ], [, j, ]]
[E1_01, *, yDotK, [, 0, ], [, j, ]]
[E1_01]
[yDotK, [, 0, ], [, j, ]]
[yDotK, [, 0, ]]
[yDotK]
[0]
[j]
[E1_06, *, yDotK, [, 5, ], [, j, ]]
[E1_06]
[yDotK, [, 5, ], [, j, ]]
[yDotK, [, 5, ]]
[yDotK]
[5]
[j]
[E1_07, *, yDotK, [, 6, ], [, j, ]]
[E1_07]
[yDotK, [, 6, ], [, j, ]]
[yDotK, [, 6, ]]
[yDotK]
[6]
[j]
[E1_08, *, yDotK, [, 7, ], [, j, ]]
[E1_08]
[yDotK, [, 7, ], [, j, ]]
[yDotK, [, 7, ]]
[yDotK]
[7]
[j]
[E1_09, *, yDotK, [, 8, ], [, j, ]]
[E1_09]
[yDotK, [, 8, ], [, j, ]]
[yDotK, [, 8, ]]
[yDotK]
[8]
[j]
[E1_10, *, yDotK, [, 9, ], [, j, ]]
[E1_10]
[yDotK, [, 9, ], [, j, ]]
[yDotK, [, 9, ]]
[yDotK]
[9]
[j]
[E1_11, *, yDotK, [, 10, ], [, j, ]]
[E1_11]
[yDotK, [, 10, ], [, j, ]]
[yDotK, [, 10, ]]
[yDotK]
[10]
[j]
[E1_12, *, yDotK, [, 11, ], [, j, ]]
[E1_12]
[yDotK, [, 11, ], [, j, ]]
[yDotK, [, 11, ]]
[yDotK]
[11]
[j]
[E2_01, *, yDotK, [, 0, ], [, j, ], +, E2_06, *, yDotK, [, 5, ], [, j, ], +, E2_07, *, yDotK, [, 6, ], [, j, ], +, E2_08, *, yDotK, [, 7, ], [, j, ], +, E2_09, *, yDotK, [, 8, ], [, j, ], +, E2_10, *, yDotK, [, 9, ], [, j, ], +, E2_11, *, yDotK, [, 10, ], [, j, ], +, E2_12, *, yDotK, [, 11, ], [, j, ]]
[E2_01, *, yDotK, [, 0, ], [, j, ], +, E2_06, *, yDotK, [, 5, ], [, j, ], +, E2_07, *, yDotK, [, 6, ], [, j, ], +, E2_08, *, yDotK, [, 7, ], [, j, ], +, E2_09, *, yDotK, [, 8, ], [, j, ], +, E2_10, *, yDotK, [, 9, ], [, j, ], +, E2_11, *, yDotK, [, 10, ], [, j, ]]
[E2_01, *, yDotK, [, 0, ], [, j, ], +, E2_06, *, yDotK, [, 5, ], [, j, ], +, E2_07, *, yDotK, [, 6, ], [, j, ], +, E2_08, *, yDotK, [, 7, ], [, j, ], +, E2_09, *, yDotK, [, 8, ], [, j, ], +, E2_10, *, yDotK, [, 9, ], [, j, ]]
[E2_01, *, yDotK, [, 0, ], [, j, ], +, E2_06, *, yDotK, [, 5, ], [, j, ], +, E2_07, *, yDotK, [, 6, ], [, j, ], +, E2_08, *, yDotK, [, 7, ], [, j, ], +, E2_09, *, yDotK, [, 8, ], [, j, ]]
[E2_01, *, yDotK, [, 0, ], [, j, ], +, E2_06, *, yDotK, [, 5, ], [, j, ], +, E2_07, *, yDotK, [, 6, ], [, j, ], +, E2_08, *, yDotK, [, 7, ], [, j, ]]
[E2_01, *, yDotK, [, 0, ], [, j, ], +, E2_06, *, yDotK, [, 5, ], [, j, ], +, E2_07, *, yDotK, [, 6, ], [, j, ]]
[E2_01, *, yDotK, [, 0, ], [, j, ], +, E2_06, *, yDotK, [, 5, ], [, j, ]]
[E2_01, *, yDotK, [, 0, ], [, j, ]]
[E2_01]
[yDotK, [, 0, ], [, j, ]]
[yDotK, [, 0, ]]
[yDotK]
[0]
[j]
[E2_06, *, yDotK, [, 5, ], [, j, ]]
[E2_06]
[yDotK, [, 5, ], [, j, ]]
[yDotK, [, 5, ]]
[yDotK]
[5]
[j]
[E2_07, *, yDotK, [, 6, ], [, j, ]]
[E2_07]
[yDotK, [, 6, ], [, j, ]]
[yDotK, [, 6, ]]
[yDotK]
[6]
[j]
[E2_08, *, yDotK, [, 7, ], [, j, ]]
[E2_08]
[yDotK, [, 7, ], [, j, ]]
[yDotK, [, 7, ]]
[yDotK]
[7]
[j]
[E2_09, *, yDotK, [, 8, ], [, j, ]]
[E2_09]
[yDotK, [, 8, ], [, j, ]]
[yDotK, [, 8, ]]
[yDotK]
[8]
[j]
[E2_10, *, yDotK, [, 9, ], [, j, ]]
[E2_10]
[yDotK, [, 9, ], [, j, ]]
[yDotK, [, 9, ]]
[yDotK]
[9]
[j]
[E2_11, *, yDotK, [, 10, ], [, j, ]]
[E2_11]
[yDotK, [, 10, ], [, j, ]]
[yDotK, [, 10, ]]
[yDotK]
[10]
[j]
[E2_12, *, yDotK, [, 11, ], [, j, ]]
[E2_12]
[yDotK, [, 11, ], [, j, ]]
[yDotK, [, 11, ]]
[yDotK]
[11]
[j]
[FastMath, ., max, (, FastMath, ., abs, (, y0, [, j, ], ), ,, FastMath, ., abs, (, y1, [, j, ], ), )]
[FastMath]
[FastMath, ., abs, (, y0, [, j, ], )]
[FastMath]
[y0, [, j, ]]
[y0]
[j]
[FastMath, ., abs, (, y1, [, j, ], )]
[FastMath]
[y1, [, j, ]]
[y1]
[j]
[(, vecAbsoluteTolerance, ==, null, ), ?, (, scalAbsoluteTolerance, +, scalRelativeTolerance, *, yScale, ), :, (, vecAbsoluteTolerance, [, j, ], +, vecRelativeTolerance, [, j, ], *, yScale, )]
[(, vecAbsoluteTolerance, ==, null, )]
[vecAbsoluteTolerance, ==, null]
[vecAbsoluteTolerance]
[null]
[(, scalAbsoluteTolerance, +, scalRelativeTolerance, *, yScale, )]
[scalAbsoluteTolerance, +, scalRelativeTolerance, *, yScale]
[scalAbsoluteTolerance]
[scalRelativeTolerance, *, yScale]
[scalRelativeTolerance]
[yScale]
[(, vecAbsoluteTolerance, [, j, ], +, vecRelativeTolerance, [, j, ], *, yScale, )]
[vecAbsoluteTolerance, [, j, ], +, vecRelativeTolerance, [, j, ], *, yScale]
[vecAbsoluteTolerance, [, j, ]]
[vecAbsoluteTolerance]
[j]
[vecRelativeTolerance, [, j, ], *, yScale]
[vecRelativeTolerance, [, j, ]]
[vecRelativeTolerance]
[j]
[yScale]
[errSum1, /, tol]
[errSum1]
[tol]
[error1]
[ratio1, *, ratio1]
[ratio1]
[ratio1]
[errSum2, /, tol]
[errSum2]
[tol]
[error2]
[ratio2, *, ratio2]
[ratio2]
[ratio2]
[error1, +, 0.01, *, error2]
[error1]
[0.01, *, error2]
[0.01]
[error2]
[den, <=, 0.0]
[den]
[0.0]
[den]
[1.0]
[FastMath, ., abs, (, h, ), *, error1, /, FastMath, ., sqrt, (, mainSetDimension, *, den, )]
[FastMath, ., abs, (, h, ), *, error1]
[FastMath, ., abs, (, h, )]
[FastMath]
[h]
[error1]
[FastMath, ., sqrt, (, mainSetDimension, *, den, )]
[FastMath]
[mainSetDimension, *, den]
[mainSetDimension]
[den]
