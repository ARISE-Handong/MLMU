[testClass]
[super, ., methodInvoker, (, method, ,, test, )]
[super]
[method]
[test]
[new, Statement, (, ), {, @, Override, public, void, evaluate, (, ), throws, Throwable, {, Throwable, failureReason, =, null, ;, final, Retry, retry, =, method, ., getAnnotation, (, Retry, ., class, ), ;, if, (, retry, ==, null, ), {, singleTryStatement, ., evaluate, (, ), ;, }, else, {, final, int, numRetries, =, retry, ., value, (, ), ;, for, (, int, i, =, 0, ;, i, <, numRetries, ;, ++, i, ), {, try, {, singleTryStatement, ., evaluate, (, ), ;, return, ;, }, catch, (, Throwable, t, ), {, failureReason, =, t, ;, }, }, throw, failureReason, ;, }, }, }]
[null]
[method, ., getAnnotation, (, Retry, ., class, )]
[method]
[Retry, ., class]
[retry, ==, null]
[retry]
[null]
[singleTryStatement, ., evaluate, (, )]
[singleTryStatement]
[retry, ., value, (, )]
[retry]
[0]
[i, <, numRetries]
[i]
[numRetries]
[++, i]
[i]
[singleTryStatement, ., evaluate, (, )]
[singleTryStatement]
[failureReason]
[t]
[failureReason]
