[new, ThreadLocal, <, Set, <, IDKey, >, >, (, )]
[REGISTRY, ., get, (, )]
[REGISTRY]
[getRegistry, (, )]
[registry, !=, null, &&, registry, ., contains, (, new, IDKey, (, value, ), )]
[registry, !=, null]
[registry]
[null]
[registry, ., contains, (, new, IDKey, (, value, ), )]
[registry]
[new, IDKey, (, value, )]
[value]
[isRegistered, (, object, )]
[object]
[register, (, object, )]
[object]
[clazz, ., getDeclaredFields, (, )]
[clazz]
[AccessibleObject, ., setAccessible, (, fields, ,, true, )]
[AccessibleObject]
[fields]
[true]
[fields]
[!, ArrayUtils, ., contains, (, excludeFields, ,, field, ., getName, (, ), ), &&, (, field, ., getName, (, ), ., indexOf, (, '$', ), ==, -, 1, ), &&, (, useTransients, ||, !, Modifier, ., isTransient, (, field, ., getModifiers, (, ), ), ), &&, (, !, Modifier, ., isStatic, (, field, ., getModifiers, (, ), ), )]
[!, ArrayUtils, ., contains, (, excludeFields, ,, field, ., getName, (, ), ), &&, (, field, ., getName, (, ), ., indexOf, (, '$', ), ==, -, 1, ), &&, (, useTransients, ||, !, Modifier, ., isTransient, (, field, ., getModifiers, (, ), ), )]
[!, ArrayUtils, ., contains, (, excludeFields, ,, field, ., getName, (, ), ), &&, (, field, ., getName, (, ), ., indexOf, (, '$', ), ==, -, 1, )]
[!, ArrayUtils, ., contains, (, excludeFields, ,, field, ., getName, (, ), )]
[ArrayUtils, ., contains, (, excludeFields, ,, field, ., getName, (, ), )]
[ArrayUtils]
[excludeFields]
[field, ., getName, (, )]
[field]
[(, field, ., getName, (, ), ., indexOf, (, '$', ), ==, -, 1, )]
[field, ., getName, (, ), ., indexOf, (, '$', ), ==, -, 1]
[field, ., getName, (, ), ., indexOf, (, '$', )]
[field, ., getName, (, )]
[field]
['$']
[-, 1]
[1]
[(, useTransients, ||, !, Modifier, ., isTransient, (, field, ., getModifiers, (, ), ), )]
[useTransients, ||, !, Modifier, ., isTransient, (, field, ., getModifiers, (, ), )]
[useTransients]
[!, Modifier, ., isTransient, (, field, ., getModifiers, (, ), )]
[Modifier, ., isTransient, (, field, ., getModifiers, (, ), )]
[Modifier]
[field, ., getModifiers, (, )]
[field]
[(, !, Modifier, ., isStatic, (, field, ., getModifiers, (, ), ), )]
[!, Modifier, ., isStatic, (, field, ., getModifiers, (, ), )]
[Modifier, ., isStatic, (, field, ., getModifiers, (, ), )]
[Modifier]
[field, ., getModifiers, (, )]
[field]
[field, ., get, (, object, )]
[field]
[object]
[builder, ., append, (, fieldValue, )]
[builder]
[fieldValue]
[new, InternalError, (, "Unexpected IllegalAccessException", )]
["Unexpected IllegalAccessException"]
[unregister, (, object, )]
[object]
[reflectionHashCode, (, initialNonZeroOddNumber, ,, multiplierNonZeroOddNumber, ,, object, ,, false, ,, null, )]
[initialNonZeroOddNumber]
[multiplierNonZeroOddNumber]
[object]
[false]
[null]
[reflectionHashCode, (, initialNonZeroOddNumber, ,, multiplierNonZeroOddNumber, ,, object, ,, testTransients, ,, null, )]
[initialNonZeroOddNumber]
[multiplierNonZeroOddNumber]
[object]
[testTransients]
[null]
[object, ==, null]
[object]
[null]
[new, IllegalArgumentException, (, "The object to build a hash code for must not be null", )]
["The object to build a hash code for must not be null"]
[new, HashCodeBuilder, (, initialNonZeroOddNumber, ,, multiplierNonZeroOddNumber, )]
[initialNonZeroOddNumber]
[multiplierNonZeroOddNumber]
[object, ., getClass, (, )]
[object]
[reflectionAppend, (, object, ,, clazz, ,, builder, ,, testTransients, ,, excludeFields, )]
[object]
[clazz]
[builder]
[testTransients]
[excludeFields]
[clazz, ., getSuperclass, (, ), !=, null, &&, clazz, !=, reflectUpToClass]
[clazz, ., getSuperclass, (, ), !=, null]
[clazz, ., getSuperclass, (, )]
[clazz]
[null]
[clazz, !=, reflectUpToClass]
[clazz]
[reflectUpToClass]
[clazz]
[clazz, ., getSuperclass, (, )]
[clazz]
[reflectionAppend, (, object, ,, clazz, ,, builder, ,, testTransients, ,, excludeFields, )]
[object]
[clazz]
[builder]
[testTransients]
[excludeFields]
[builder, ., toHashCode, (, )]
[builder]
[reflectionHashCode, (, 17, ,, 37, ,, object, ,, testTransients, ,, null, )]
[17]
[37]
[object]
[testTransients]
[null]
[reflectionHashCode, (, object, ,, ReflectionToStringBuilder, ., toNoNullStringArray, (, excludeFields, ), )]
[object]
[ReflectionToStringBuilder, ., toNoNullStringArray, (, excludeFields, )]
[ReflectionToStringBuilder]
[excludeFields]
[reflectionHashCode, (, 17, ,, 37, ,, object, ,, false, ,, null, ,, excludeFields, )]
[17]
[37]
[object]
[false]
[null]
[excludeFields]
[HashCodeBuilder, ., class]
[getRegistry, (, ), ==, null]
[getRegistry, (, )]
[null]
[REGISTRY, ., set, (, new, HashSet, <, IDKey, >, (, ), )]
[REGISTRY]
[new, HashSet, <, IDKey, >, (, )]
[getRegistry, (, ), ., add, (, new, IDKey, (, value, ), )]
[getRegistry, (, )]
[new, IDKey, (, value, )]
[value]
[getRegistry, (, )]
[registry, !=, null]
[registry]
[null]
[registry, ., remove, (, new, IDKey, (, value, ), )]
[registry]
[new, IDKey, (, value, )]
[value]
[HashCodeBuilder, ., class]
[registry]
[getRegistry, (, )]
[registry, !=, null, &&, registry, ., isEmpty, (, )]
[registry, !=, null]
[registry]
[null]
[registry, ., isEmpty, (, )]
[registry]
[REGISTRY, ., remove, (, )]
[REGISTRY]
[0]
[iConstant]
[37]
[iTotal]
[17]
[initialNonZeroOddNumber, ==, 0]
[initialNonZeroOddNumber]
[0]
[new, IllegalArgumentException, (, "HashCodeBuilder requires a non zero initial value", )]
["HashCodeBuilder requires a non zero initial value"]
[initialNonZeroOddNumber, %, 2, ==, 0]
[initialNonZeroOddNumber, %, 2]
[initialNonZeroOddNumber]
[2]
[0]
[new, IllegalArgumentException, (, "HashCodeBuilder requires an odd initial value", )]
["HashCodeBuilder requires an odd initial value"]
[multiplierNonZeroOddNumber, ==, 0]
[multiplierNonZeroOddNumber]
[0]
[new, IllegalArgumentException, (, "HashCodeBuilder requires a non zero multiplier", )]
["HashCodeBuilder requires a non zero multiplier"]
[multiplierNonZeroOddNumber, %, 2, ==, 0]
[multiplierNonZeroOddNumber, %, 2]
[multiplierNonZeroOddNumber]
[2]
[0]
[new, IllegalArgumentException, (, "HashCodeBuilder requires an odd multiplier", )]
["HashCodeBuilder requires an odd multiplier"]
[iConstant]
[multiplierNonZeroOddNumber]
[iTotal]
[initialNonZeroOddNumber]
[iTotal]
[iTotal, *, iConstant, +, (, value, ?, 0, :, 1, )]
[iTotal, *, iConstant]
[iTotal]
[iConstant]
[(, value, ?, 0, :, 1, )]
[value, ?, 0, :, 1]
[value]
[0]
[1]
[this]
[array, ==, null]
[array]
[null]
[iTotal]
[iTotal, *, iConstant]
[iTotal]
[iConstant]
[array]
[append, (, element, )]
[element]
[this]
[iTotal]
[iTotal, *, iConstant, +, value]
[iTotal, *, iConstant]
[iTotal]
[iConstant]
[value]
[this]
[array, ==, null]
[array]
[null]
[iTotal]
[iTotal, *, iConstant]
[iTotal]
[iConstant]
[array]
[append, (, element, )]
[element]
[this]
[iTotal]
[iTotal, *, iConstant, +, value]
[iTotal, *, iConstant]
[iTotal]
[iConstant]
[value]
[this]
[array, ==, null]
[array]
[null]
[iTotal]
[iTotal, *, iConstant]
[iTotal]
[iConstant]
[array]
[append, (, element, )]
[element]
[this]
[append, (, Double, ., doubleToLongBits, (, value, ), )]
[Double, ., doubleToLongBits, (, value, )]
[Double]
[value]
[array, ==, null]
[array]
[null]
[iTotal]
[iTotal, *, iConstant]
[iTotal]
[iConstant]
[array]
[append, (, element, )]
[element]
[this]
[iTotal]
[iTotal, *, iConstant, +, Float, ., floatToIntBits, (, value, )]
[iTotal, *, iConstant]
[iTotal]
[iConstant]
[Float, ., floatToIntBits, (, value, )]
[Float]
[value]
[this]
[array, ==, null]
[array]
[null]
[iTotal]
[iTotal, *, iConstant]
[iTotal]
[iConstant]
[array]
[append, (, element, )]
[element]
[this]
[iTotal]
[iTotal, *, iConstant, +, value]
[iTotal, *, iConstant]
[iTotal]
[iConstant]
[value]
[this]
[array, ==, null]
[array]
[null]
[iTotal]
[iTotal, *, iConstant]
[iTotal]
[iConstant]
[array]
[append, (, element, )]
[element]
[this]
[iTotal]
[iTotal, *, iConstant, +, (, (, int, ), (, value, ^, (, value, >, >, 32, ), ), )]
[iTotal, *, iConstant]
[iTotal]
[iConstant]
[(, (, int, ), (, value, ^, (, value, >, >, 32, ), ), )]
[(, int, ), (, value, ^, (, value, >, >, 32, ), )]
[(, value, ^, (, value, >, >, 32, ), )]
[value, ^, (, value, >, >, 32, )]
[value]
[(, value, >, >, 32, )]
[value, >, >, 32]
[value]
[32]
[this]
[array, ==, null]
[array]
[null]
[iTotal]
[iTotal, *, iConstant]
[iTotal]
[iConstant]
[array]
[append, (, element, )]
[element]
[this]
[object, ==, null]
[object]
[null]
[iTotal]
[iTotal, *, iConstant]
[iTotal]
[iConstant]
[object, ., getClass, (, ), ., isArray, (, )]
[object, ., getClass, (, )]
[object]
[object, instanceof, long, [, ]]
[object]
[append, (, (, long, [, ], ), object, )]
[(, long, [, ], ), object]
[object]
[object, instanceof, int, [, ]]
[object]
[append, (, (, int, [, ], ), object, )]
[(, int, [, ], ), object]
[object]
[object, instanceof, short, [, ]]
[object]
[append, (, (, short, [, ], ), object, )]
[(, short, [, ], ), object]
[object]
[object, instanceof, char, [, ]]
[object]
[append, (, (, char, [, ], ), object, )]
[(, char, [, ], ), object]
[object]
[object, instanceof, byte, [, ]]
[object]
[append, (, (, byte, [, ], ), object, )]
[(, byte, [, ], ), object]
[object]
[object, instanceof, double, [, ]]
[object]
[append, (, (, double, [, ], ), object, )]
[(, double, [, ], ), object]
[object]
[object, instanceof, float, [, ]]
[object]
[append, (, (, float, [, ], ), object, )]
[(, float, [, ], ), object]
[object]
[object, instanceof, boolean, [, ]]
[object]
[append, (, (, boolean, [, ], ), object, )]
[(, boolean, [, ], ), object]
[object]
[append, (, (, Object, [, ], ), object, )]
[(, Object, [, ], ), object]
[object]
[iTotal]
[iTotal, *, iConstant, +, object, ., hashCode, (, )]
[iTotal, *, iConstant]
[iTotal]
[iConstant]
[object, ., hashCode, (, )]
[object]
[this]
[array, ==, null]
[array]
[null]
[iTotal]
[iTotal, *, iConstant]
[iTotal]
[iConstant]
[array]
[append, (, element, )]
[element]
[this]
[iTotal]
[iTotal, *, iConstant, +, value]
[iTotal, *, iConstant]
[iTotal]
[iConstant]
[value]
[this]
[array, ==, null]
[array]
[null]
[iTotal]
[iTotal, *, iConstant]
[iTotal]
[iConstant]
[array]
[append, (, element, )]
[element]
[this]
[iTotal]
[iTotal, *, iConstant, +, superHashCode]
[iTotal, *, iConstant]
[iTotal]
[iConstant]
[superHashCode]
[this]
[iTotal]
[Integer, ., valueOf, (, toHashCode, (, ), )]
[Integer]
[toHashCode, (, )]
[toHashCode, (, )]
