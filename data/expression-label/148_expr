[this, ., oldOptimizer]
[this]
[optimizer]
[this, ., optimizer]
[this]
[null]
[observations]
[new, ArrayList, <, WeightedObservedPoint, >, (, )]
[this, ., oldOptimizer]
[this]
[null]
[this, ., optimizer]
[this]
[optimizer]
[observations]
[new, ArrayList, <, WeightedObservedPoint, >, (, )]
[addObservedPoint, (, 1.0, ,, x, ,, y, )]
[1.0]
[x]
[y]
[observations, ., add, (, new, WeightedObservedPoint, (, weight, ,, x, ,, y, ), )]
[observations]
[new, WeightedObservedPoint, (, weight, ,, x, ,, y, )]
[weight]
[x]
[y]
[observations, ., add, (, observed, )]
[observations]
[observed]
[observations, ., toArray, (, new, WeightedObservedPoint, [, observations, ., size, (, ), ], )]
[observations]
[new, WeightedObservedPoint, [, observations, ., size, (, ), ]]
[observations, ., size, (, )]
[observations]
[observations, ., clear, (, )]
[observations]
[fit, (, Integer, ., MAX_VALUE, ,, f, ,, initialGuess, )]
[Integer, ., MAX_VALUE]
[Integer]
[f]
[initialGuess]
[new, double, [, observations, ., size, (, ), ]]
[observations, ., size, (, )]
[observations]
[new, double, [, observations, ., size, (, ), ]]
[observations, ., size, (, )]
[observations]
[0]
[observations]
[target, [, i, ]]
[target]
[i]
[point, ., getY, (, )]
[point]
[weights, [, i, ]]
[weights]
[i]
[point, ., getWeight, (, )]
[point]
[++, i]
[i]
[optimizer, ==, null]
[optimizer]
[null]
[optimum]
[oldOptimizer, ., optimize, (, maxEval, ,, new, OldTheoreticalValuesFunction, (, f, ), ,, target, ,, weights, ,, initialGuess, )]
[oldOptimizer]
[maxEval]
[new, OldTheoreticalValuesFunction, (, f, )]
[f]
[target]
[weights]
[initialGuess]
[optimum]
[optimizer, ., optimize, (, maxEval, ,, new, TheoreticalValuesFunction, (, f, ), ,, target, ,, weights, ,, initialGuess, )]
[optimizer]
[maxEval]
[new, TheoreticalValuesFunction, (, f, )]
[f]
[target]
[weights]
[initialGuess]
[optimum, ., getPointRef, (, )]
[optimum]
[this, ., f]
[this]
[f]
[new, MultivariateMatrixFunction, (, ), {, public, double, [, ], [, ], value, (, double, [, ], point, ), {, final, double, [, ], [, ], jacobian, =, new, double, [, observations, ., size, (, ), ], [, ], ;, int, i, =, 0, ;, for, (, WeightedObservedPoint, observed, :, observations, ), {, jacobian, [, i, ++, ], =, f, ., gradient, (, observed, ., getX, (, ), ,, point, ), ;, }, return, jacobian, ;, }, }]
[new, double, [, observations, ., size, (, ), ], [, ]]
[observations, ., size, (, )]
[observations]
[0]
[observations]
[jacobian, [, i, ++, ]]
[jacobian]
[i, ++]
[i]
[f, ., gradient, (, observed, ., getX, (, ), ,, point, )]
[f]
[observed, ., getX, (, )]
[observed]
[point]
[jacobian]
[new, double, [, observations, ., size, (, ), ]]
[observations, ., size, (, )]
[observations]
[0]
[observations]
[values, [, i, ++, ]]
[values]
[i, ++]
[i]
[f, ., value, (, observed, ., getX, (, ), ,, point, )]
[f]
[observed, ., getX, (, )]
[observed]
[point]
[values]
[this, ., f]
[this]
[f]
[new, double, [, observations, ., size, (, ), ]]
[observations, ., size, (, )]
[observations]
[0]
[observations]
[values, [, i, ++, ]]
[values]
[i, ++]
[i]
[f, ., value, (, observed, ., getX, (, ), ,, point, )]
[f]
[observed, ., getX, (, )]
[observed]
[point]
[values]
[new, double, [, point, ., length, ]]
[point, ., length]
[point]
[0]
[k, <, point, ., length]
[k]
[point, ., length]
[point]
[++, k]
[k]
[parameters, [, k, ]]
[parameters]
[k]
[point, [, k, ], ., getValue, (, )]
[point, [, k, ]]
[point]
[k]
[new, DerivativeStructure, [, observations, ., size, (, ), ]]
[observations, ., size, (, )]
[observations]
[0]
[observations]
[new, DerivativeStructure, (, point, ., length, ,, 1, ,, f, ., value, (, observed, ., getX, (, ), ,, parameters, ), )]
[point, ., length]
[point]
[1]
[f, ., value, (, observed, ., getX, (, ), ,, parameters, )]
[f]
[observed, ., getX, (, )]
[observed]
[parameters]
[0]
[k, <, point, ., length]
[k]
[point, ., length]
[point]
[++, k]
[k]
[vi]
[vi, ., add, (, new, DerivativeStructure, (, point, ., length, ,, 1, ,, k, ,, 0.0, ), )]
[vi]
[new, DerivativeStructure, (, point, ., length, ,, 1, ,, k, ,, 0.0, )]
[point, ., length]
[point]
[1]
[k]
[0.0]
[values, [, i, ++, ]]
[values]
[i, ++]
[i]
[vi]
[values]
