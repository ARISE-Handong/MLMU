[new, HashSet, <, HashCodeAndEqualsMockWrapper, >, (, )]
[new, Iterator, <, Object, >, (, ), {, private, final, Iterator, <, HashCodeAndEqualsMockWrapper, >, iterator, =, backingHashSet, ., iterator, (, ), ;, public, boolean, hasNext, (, ), {, return, iterator, ., hasNext, (, ), ;, }, public, Object, next, (, ), {, return, iterator, ., next, (, ), ., get, (, ), ;, }, public, void, remove, (, ), {, iterator, ., remove, (, ), ;, }, }]
[backingHashSet, ., iterator, (, )]
[backingHashSet]
[iterator, ., hasNext, (, )]
[iterator]
[iterator, ., next, (, ), ., get, (, )]
[iterator, ., next, (, )]
[iterator]
[iterator, ., remove, (, )]
[iterator]
[backingHashSet, ., size, (, )]
[backingHashSet]
[backingHashSet, ., isEmpty, (, )]
[backingHashSet]
[backingHashSet, ., contains, (, HashCodeAndEqualsMockWrapper, ., of, (, mock, ), )]
[backingHashSet]
[HashCodeAndEqualsMockWrapper, ., of, (, mock, )]
[HashCodeAndEqualsMockWrapper]
[mock]
[backingHashSet, ., add, (, HashCodeAndEqualsMockWrapper, ., of, (, mock, ), )]
[backingHashSet]
[HashCodeAndEqualsMockWrapper, ., of, (, mock, )]
[HashCodeAndEqualsMockWrapper]
[mock]
[backingHashSet, ., remove, (, HashCodeAndEqualsMockWrapper, ., of, (, mock, ), )]
[backingHashSet]
[HashCodeAndEqualsMockWrapper, ., of, (, mock, )]
[HashCodeAndEqualsMockWrapper]
[mock]
[backingHashSet, ., clear, (, )]
[backingHashSet]
[new, CloneNotSupportedException, (, )]
[!, (, o, instanceof, HashCodeAndEqualsSafeSet, )]
[(, o, instanceof, HashCodeAndEqualsSafeSet, )]
[o, instanceof, HashCodeAndEqualsSafeSet]
[o]
[false]
[(, HashCodeAndEqualsSafeSet, ), o]
[o]
[backingHashSet, ., equals, (, that, ., backingHashSet, )]
[backingHashSet]
[that, ., backingHashSet]
[that]
[backingHashSet, ., hashCode, (, )]
[backingHashSet]
[unwrapTo, (, new, Object, [, size, (, ), ], )]
[new, Object, [, size, (, ), ]]
[size, (, )]
[iterator, (, )]
[0]
[array, ., length]
[array]
[i, <, objectsLength]
[i]
[objectsLength]
[i, ++]
[i]
[iterator, ., hasNext, (, )]
[iterator]
[array, [, i, ]]
[array]
[i]
[(, T, ), iterator, ., next, (, )]
[iterator, ., next, (, )]
[iterator]
[array]
[typedArray, ., length, >=, size, (, ), ?, typedArray, :, (, T, [, ], ), newInstance, (, typedArray, ., getClass, (, ), ., getComponentType, (, ), ,, size, (, ), )]
[typedArray, ., length, >=, size, (, )]
[typedArray, ., length]
[typedArray]
[size, (, )]
[typedArray]
[(, T, [, ], ), newInstance, (, typedArray, ., getClass, (, ), ., getComponentType, (, ), ,, size, (, ), )]
[newInstance, (, typedArray, ., getClass, (, ), ., getComponentType, (, ), ,, size, (, ), )]
[typedArray, ., getClass, (, ), ., getComponentType, (, )]
[typedArray, ., getClass, (, )]
[typedArray]
[size, (, )]
[unwrapTo, (, array, )]
[array]
[backingHashSet, ., removeAll, (, asWrappedMocks, (, mocks, ), )]
[backingHashSet]
[asWrappedMocks, (, mocks, )]
[mocks]
[backingHashSet, ., containsAll, (, asWrappedMocks, (, mocks, ), )]
[backingHashSet]
[asWrappedMocks, (, mocks, )]
[mocks]
[backingHashSet, ., addAll, (, asWrappedMocks, (, mocks, ), )]
[backingHashSet]
[asWrappedMocks, (, mocks, )]
[mocks]
[backingHashSet, ., retainAll, (, asWrappedMocks, (, mocks, ), )]
[backingHashSet]
[asWrappedMocks, (, mocks, )]
[mocks]
[Checks, ., checkNotNull, (, mocks, ,, "Passed collection should notify() be null", )]
[Checks]
[mocks]
["Passed collection should notify() be null"]
[new, HashSet, <, HashCodeAndEqualsMockWrapper, >, (, )]
[mocks]
[!, (, mock, instanceof, HashCodeAndEqualsMockWrapper, )]
[(, mock, instanceof, HashCodeAndEqualsMockWrapper, )]
[mock, instanceof, HashCodeAndEqualsMockWrapper]
[mock]
["WRONG"]
[hashSet, ., add, (, HashCodeAndEqualsMockWrapper, ., of, (, mock, ), )]
[hashSet]
[HashCodeAndEqualsMockWrapper, ., of, (, mock, )]
[HashCodeAndEqualsMockWrapper]
[mock]
[hashSet]
[backingHashSet, ., toString, (, )]
[backingHashSet]
[of, (, Arrays, ., asList, (, mocks, ), )]
[Arrays, ., asList, (, mocks, )]
[Arrays]
[mocks]
[new, HashCodeAndEqualsSafeSet, (, )]
[objects, !=, null]
[objects]
[null]
[objects]
[hashCodeAndEqualsSafeSet, ., add, (, mock, )]
[hashCodeAndEqualsSafeSet]
[mock]
[hashCodeAndEqualsSafeSet]
