[new, HashMap, <, Integer, ,, AdamsNordsieckTransformer, >, (, )]
[buildP, (, nSteps, )]
[nSteps]
[new, FieldLUDecomposition, <, BigFraction, >, (, bigP, ), ., getSolver, (, )]
[new, FieldLUDecomposition, <, BigFraction, >, (, bigP, )]
[bigP]
[new, BigFraction, [, nSteps, ]]
[nSteps]
[Arrays, ., fill, (, u, ,, BigFraction, ., ONE, )]
[Arrays]
[u]
[BigFraction, ., ONE]
[BigFraction]
[pSolver, ., solve, (, new, ArrayFieldVector, <, BigFraction, >, (, u, ,, false, ), ), ., toArray, (, )]
[pSolver, ., solve, (, new, ArrayFieldVector, <, BigFraction, >, (, u, ,, false, ), )]
[pSolver]
[new, ArrayFieldVector, <, BigFraction, >, (, u, ,, false, )]
[u]
[false]
[bigP, ., getData, (, )]
[bigP]
[shiftedP, ., length, -, 1]
[shiftedP, ., length]
[shiftedP]
[1]
[i, >, 0]
[i]
[0]
[--, i]
[i]
[shiftedP, [, i, ]]
[shiftedP]
[i]
[shiftedP, [, i, -, 1, ]]
[shiftedP]
[i, -, 1]
[i]
[1]
[shiftedP, [, 0, ]]
[shiftedP]
[0]
[new, BigFraction, [, nSteps, ]]
[nSteps]
[Arrays, ., fill, (, shiftedP, [, 0, ], ,, BigFraction, ., ZERO, )]
[Arrays]
[shiftedP, [, 0, ]]
[shiftedP]
[0]
[BigFraction, ., ZERO]
[BigFraction]
[pSolver, ., solve, (, new, Array2DRowFieldMatrix, <, BigFraction, >, (, shiftedP, ,, false, ), )]
[pSolver]
[new, Array2DRowFieldMatrix, <, BigFraction, >, (, shiftedP, ,, false, )]
[shiftedP]
[false]
[update]
[MatrixUtils, ., bigFractionMatrixToRealMatrix, (, bigMSupdate, )]
[MatrixUtils]
[bigMSupdate]
[c1]
[new, double, [, nSteps, ]]
[nSteps]
[0]
[i, <, nSteps]
[i]
[nSteps]
[++, i]
[i]
[c1, [, i, ]]
[c1]
[i]
[bigC1, [, i, ], ., doubleValue, (, )]
[bigC1, [, i, ]]
[bigC1]
[i]
[CACHE]
[CACHE, ., get, (, nSteps, )]
[CACHE]
[nSteps]
[t, ==, null]
[t]
[null]
[t]
[new, AdamsNordsieckTransformer, (, nSteps, )]
[nSteps]
[CACHE, ., put, (, nSteps, ,, t, )]
[CACHE]
[nSteps]
[t]
[t]
[c1, ., length]
[c1]
[new, BigFraction, [, nSteps, ], [, nSteps, ]]
[nSteps]
[nSteps]
[0]
[i, <, pData, ., length]
[i]
[pData, ., length]
[pData]
[++, i]
[i]
[pData, [, i, ]]
[pData]
[i]
[-, (, i, +, 1, )]
[(, i, +, 1, )]
[i, +, 1]
[i]
[1]
[factor]
[0]
[j, <, pI, ., length]
[j]
[pI, ., length]
[pI]
[++, j]
[j]
[pI, [, j, ]]
[pI]
[j]
[new, BigFraction, (, aj, *, (, j, +, 2, ), )]
[aj, *, (, j, +, 2, )]
[aj]
[(, j, +, 2, )]
[j, +, 2]
[j]
[2]
[aj]
[factor]
[new, Array2DRowFieldMatrix, <, BigFraction, >, (, pData, ,, false, )]
[pData]
[false]
[new, double, [, 2, *, (, y, ., length, -, 1, ), ], [, c1, ., length, ]]
[2, *, (, y, ., length, -, 1, )]
[2]
[(, y, ., length, -, 1, )]
[y, ., length, -, 1]
[y, ., length]
[y]
[1]
[c1, ., length]
[c1]
[new, double, [, 2, *, (, y, ., length, -, 1, ), ], [, y, [, 0, ], ., length, ]]
[2, *, (, y, ., length, -, 1, )]
[2]
[(, y, ., length, -, 1, )]
[y, ., length, -, 1]
[y, ., length]
[y]
[1]
[y, [, 0, ], ., length]
[y, [, 0, ]]
[y]
[0]
[y, [, 0, ]]
[y]
[0]
[yDot, [, 0, ]]
[yDot]
[0]
[1]
[i, <, y, ., length]
[i]
[y, ., length]
[y]
[++, i]
[i]
[t, [, i, ], -, t, [, 0, ]]
[t, [, i, ]]
[t]
[i]
[t, [, 0, ]]
[t]
[0]
[di, /, h]
[di]
[h]
[1, /, h]
[1]
[h]
[a, [, 2, *, i, -, 2, ]]
[a]
[2, *, i, -, 2]
[2, *, i]
[2]
[i]
[2]
[a, [, 2, *, i, -, 1, ]]
[a]
[2, *, i, -, 1]
[2, *, i]
[2]
[i]
[1]
[0]
[j, <, aI, ., length]
[j]
[aI, ., length]
[aI]
[++, j]
[j]
[dikM1Ohk]
[ratio]
[aI, [, j, ]]
[aI]
[j]
[di, *, dikM1Ohk]
[di]
[dikM1Ohk]
[aDotI, [, j, ]]
[aDotI]
[j]
[(, j, +, 2, ), *, dikM1Ohk]
[(, j, +, 2, )]
[j, +, 2]
[j]
[2]
[dikM1Ohk]
[y, [, i, ]]
[y]
[i]
[yDot, [, i, ]]
[yDot]
[i]
[b, [, 2, *, i, -, 2, ]]
[b]
[2, *, i, -, 2]
[2, *, i]
[2]
[i]
[2]
[b, [, 2, *, i, -, 1, ]]
[b]
[2, *, i, -, 1]
[2, *, i]
[2]
[i]
[1]
[0]
[j, <, yI, ., length]
[j]
[yI, ., length]
[yI]
[++, j]
[j]
[bI, [, j, ]]
[bI]
[j]
[yI, [, j, ], -, y0, [, j, ], -, di, *, yDot0, [, j, ]]
[yI, [, j, ], -, y0, [, j, ]]
[yI, [, j, ]]
[yI]
[j]
[y0, [, j, ]]
[y0]
[j]
[di, *, yDot0, [, j, ]]
[di]
[yDot0, [, j, ]]
[yDot0]
[j]
[bDotI, [, j, ]]
[bDotI]
[j]
[yDotI, [, j, ], -, yDot0, [, j, ]]
[yDotI, [, j, ]]
[yDotI]
[j]
[yDot0, [, j, ]]
[yDot0]
[j]
[decomposition]
[new, QRDecomposition, (, new, Array2DRowRealMatrix, (, a, ,, false, ), )]
[new, Array2DRowRealMatrix, (, a, ,, false, )]
[a]
[false]
[decomposition, ., getSolver, (, ), ., solve, (, new, Array2DRowRealMatrix, (, b, ,, false, ), )]
[decomposition, ., getSolver, (, )]
[decomposition]
[new, Array2DRowRealMatrix, (, b, ,, false, )]
[b]
[false]
[new, Array2DRowRealMatrix, (, x, ., getData, (, ), ,, false, )]
[x, ., getData, (, )]
[x]
[false]
[update, ., multiply, (, highOrder, )]
[update]
[highOrder]
[highOrder, ., getDataRef, (, )]
[highOrder]
[0]
[i, <, data, ., length]
[i]
[data, ., length]
[data]
[++, i]
[i]
[data, [, i, ]]
[data]
[i]
[c1, [, i, ]]
[c1]
[i]
[0]
[j, <, dataI, ., length]
[j]
[dataI, ., length]
[dataI]
[++, j]
[j]
[dataI, [, j, ]]
[dataI]
[j]
[c1I, *, (, start, [, j, ], -, end, [, j, ], )]
[c1I]
[(, start, [, j, ], -, end, [, j, ], )]
[start, [, j, ], -, end, [, j, ]]
[start, [, j, ]]
[start]
[j]
[end, [, j, ]]
[end]
[j]
