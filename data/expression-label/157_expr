[Logger, ., getLogger, (, DepsGenerator, ., class, ., getName, (, ), )]
[Logger]
[DepsGenerator, ., class, ., getName, (, )]
[DepsGenerator, ., class]
[DiagnosticType, ., warning, (, "DEPS_SAME_FILE", ,, "Namespace \"{0}\" is both required and provided in the same file.", )]
[DiagnosticType]
["DEPS_SAME_FILE"]
["Namespace \"{0}\" is both required and provided in the same file."]
[DiagnosticType, ., error, (, "DEPS_NEVER_PROVIDED", ,, "Namespace \"{0}\" is required but never provided.", )]
[DiagnosticType]
["DEPS_NEVER_PROVIDED"]
["Namespace \"{0}\" is required but never provided."]
[DiagnosticType, ., warning, (, "DEPS_DUPE_PROVIDES", ,, "Multiple calls to goog.provide(\"{0}\")", )]
[DiagnosticType]
["DEPS_DUPE_PROVIDES"]
["Multiple calls to goog.provide(\"{0}\")"]
[DiagnosticType, ., error, (, "DEPS_DUPE_PROVIDES", ,, "Namespace \"{0}\" is already provided in other file {1}", )]
[DiagnosticType]
["DEPS_DUPE_PROVIDES"]
["Namespace \"{0}\" is already provided in other file {1}"]
[DiagnosticType, ., warning, (, "DEPS_DUPE_REQUIRES", ,, "Namespace \"{0}\" is required multiple times", )]
[DiagnosticType]
["DEPS_DUPE_REQUIRES"]
["Namespace \"{0}\" is required multiple times"]
[DiagnosticType, ., warning, (, "DEPS_NO_DEPS", ,, "No dependencies found in file", )]
[DiagnosticType]
["DEPS_NO_DEPS"]
["No dependencies found in file"]
[this, ., deps]
[this]
[deps]
[this, ., srcs]
[this]
[srcs]
[this, ., mergeStrategy]
[this]
[mergeStrategy]
[this, ., closurePathAbs]
[this]
[closurePathAbs]
[this, ., errorManager]
[this]
[errorManager]
[parseDepsFiles, (, )]
[logger, ., fine, (, "preparsedFiles: ", +, depsFiles, )]
[logger]
["preparsedFiles: ", +, depsFiles]
["preparsedFiles: "]
[depsFiles]
[parseSources, (, depsFiles, ., keySet, (, ), )]
[depsFiles, ., keySet, (, )]
[depsFiles]
[errorManager, ., getErrorCount, (, ), >, 0]
[errorManager, ., getErrorCount, (, )]
[errorManager]
[0]
[null]
[cleanUpDuplicatedFiles, (, depsFiles, ,, jsFiles, )]
[depsFiles]
[jsFiles]
[validateDependencies, (, depsFiles, ., values, (, ), ,, jsFiles, ., values, (, ), )]
[depsFiles, ., values, (, )]
[depsFiles]
[jsFiles, ., values, (, )]
[jsFiles]
[errorManager, ., getErrorCount, (, ), >, 0]
[errorManager, ., getErrorCount, (, )]
[errorManager]
[0]
[null]
[new, ByteArrayOutputStream, (, )]
[writeDepsContent, (, depsFiles, ,, jsFiles, ,, new, PrintStream, (, output, ), )]
[depsFiles]
[jsFiles]
[new, PrintStream, (, output, )]
[output]
[new, String, (, output, ., toByteArray, (, ), )]
[output, ., toByteArray, (, )]
[output]
[Sets, ., newHashSet, (, depsFiles, ., keySet, (, ), )]
[Sets]
[depsFiles, ., keySet, (, )]
[depsFiles]
[depsPathsCopy]
[mergeStrategy, !=, InclusionStrategy, ., WHEN_IN_SRCS]
[mergeStrategy]
[InclusionStrategy, ., WHEN_IN_SRCS]
[InclusionStrategy]
[jsFiles, ., remove, (, path, )]
[jsFiles]
[path]
[jsFiles, ., keySet, (, )]
[jsFiles]
[depsFiles, ., remove, (, path, )]
[depsFiles]
[path]
[Maps, ., newHashMap, (, )]
[Maps]
[addToProvideMap, (, preparsedFileDepedencies, ,, providesMap, )]
[preparsedFileDepedencies]
[providesMap]
[addToProvideMap, (, parsedFileDependencies, ,, providesMap, )]
[parsedFileDependencies]
[providesMap]
[parsedFileDependencies]
[Lists, ., newArrayList, (, depInfo, ., getRequires, (, ), )]
[Lists]
[depInfo, ., getRequires, (, )]
[depInfo]
[0]
[requires, ., size, (, )]
[requires]
[i, <, l]
[i]
[l]
[++, i]
[i]
[requires, ., get, (, i, )]
[requires]
[i]
[requires, ., subList, (, i, +, 1, ,, l, ), ., contains, (, namespace, )]
[requires, ., subList, (, i, +, 1, ,, l, )]
[requires]
[i, +, 1]
[i]
[1]
[l]
[namespace]
[reportDuplicateRequire, (, namespace, ,, depInfo, )]
[namespace]
[depInfo]
[providesMap, ., get, (, namespace, )]
[providesMap]
[namespace]
[provider, ==, null]
[provider]
[null]
[reportUndefinedNamespace, (, namespace, ,, depInfo, )]
[namespace]
[depInfo]
[provider, ==, depInfo]
[provider]
[depInfo]
[reportSameFile, (, namespace, ,, depInfo, )]
[namespace]
[depInfo]
[errorManager, ., report, (, CheckLevel, ., WARNING, ,, JSError, ., make, (, depInfo, ., getName, (, ), ,, -, 1, ,, -, 1, ,, SAME_FILE_WARNING, ,, namespace, ), )]
[errorManager]
[CheckLevel, ., WARNING]
[CheckLevel]
[JSError, ., make, (, depInfo, ., getName, (, ), ,, -, 1, ,, -, 1, ,, SAME_FILE_WARNING, ,, namespace, )]
[JSError]
[depInfo, ., getName, (, )]
[depInfo]
[-, 1]
[1]
[-, 1]
[1]
[SAME_FILE_WARNING]
[namespace]
[errorManager, ., report, (, CheckLevel, ., ERROR, ,, JSError, ., make, (, depInfo, ., getName, (, ), ,, -, 1, ,, -, 1, ,, NEVER_PROVIDED_ERROR, ,, namespace, ), )]
[errorManager]
[CheckLevel, ., ERROR]
[CheckLevel]
[JSError, ., make, (, depInfo, ., getName, (, ), ,, -, 1, ,, -, 1, ,, NEVER_PROVIDED_ERROR, ,, namespace, )]
[JSError]
[depInfo, ., getName, (, )]
[depInfo]
[-, 1]
[1]
[-, 1]
[1]
[NEVER_PROVIDED_ERROR]
[namespace]
[firstDep, ==, secondDep]
[firstDep]
[secondDep]
[errorManager, ., report, (, CheckLevel, ., WARNING, ,, JSError, ., make, (, firstDep, ., getName, (, ), ,, -, 1, ,, -, 1, ,, DUPE_PROVIDES_WARNING, ,, namespace, ), )]
[errorManager]
[CheckLevel, ., WARNING]
[CheckLevel]
[JSError, ., make, (, firstDep, ., getName, (, ), ,, -, 1, ,, -, 1, ,, DUPE_PROVIDES_WARNING, ,, namespace, )]
[JSError]
[firstDep, ., getName, (, )]
[firstDep]
[-, 1]
[1]
[-, 1]
[1]
[DUPE_PROVIDES_WARNING]
[namespace]
[errorManager, ., report, (, CheckLevel, ., ERROR, ,, JSError, ., make, (, secondDep, ., getName, (, ), ,, -, 1, ,, -, 1, ,, MULTIPLE_PROVIDES_ERROR, ,, namespace, ,, firstDep, ., getName, (, ), ), )]
[errorManager]
[CheckLevel, ., ERROR]
[CheckLevel]
[JSError, ., make, (, secondDep, ., getName, (, ), ,, -, 1, ,, -, 1, ,, MULTIPLE_PROVIDES_ERROR, ,, namespace, ,, firstDep, ., getName, (, ), )]
[JSError]
[secondDep, ., getName, (, )]
[secondDep]
[-, 1]
[1]
[-, 1]
[1]
[MULTIPLE_PROVIDES_ERROR]
[namespace]
[firstDep, ., getName, (, )]
[firstDep]
[errorManager, ., report, (, CheckLevel, ., WARNING, ,, JSError, ., make, (, depInfo, ., getName, (, ), ,, -, 1, ,, -, 1, ,, DUPE_REQUIRE_WARNING, ,, namespace, ), )]
[errorManager]
[CheckLevel, ., WARNING]
[CheckLevel]
[JSError, ., make, (, depInfo, ., getName, (, ), ,, -, 1, ,, -, 1, ,, DUPE_REQUIRE_WARNING, ,, namespace, )]
[JSError]
[depInfo, ., getName, (, )]
[depInfo]
[-, 1]
[1]
[-, 1]
[1]
[DUPE_REQUIRE_WARNING]
[namespace]
[errorManager, ., report, (, CheckLevel, ., WARNING, ,, JSError, ., make, (, filePath, ,, -, 1, ,, -, 1, ,, NO_DEPS_WARNING, ), )]
[errorManager]
[CheckLevel, ., WARNING]
[CheckLevel]
[JSError, ., make, (, filePath, ,, -, 1, ,, -, 1, ,, NO_DEPS_WARNING, )]
[JSError]
[filePath]
[-, 1]
[1]
[-, 1]
[1]
[NO_DEPS_WARNING]
[depInfos]
[depInfo, ., getProvides, (, )]
[depInfo]
[providesMap, ., put, (, provide, ,, depInfo, )]
[providesMap]
[provide]
[depInfo]
[prevValue, !=, null]
[prevValue]
[null]
[reportDuplicateProvide, (, provide, ,, prevValue, ,, depInfo, )]
[provide]
[prevValue]
[depInfo]
[new, DepsFileParser, (, errorManager, )]
[errorManager]
[depsParser, ., setShortcutMode, (, true, )]
[depsParser]
[true]
[depsParser]
[false]
[createDepsFileParser, (, )]
[Maps, ., newHashMap, (, )]
[Maps]
[deps]
[!, shouldSkipDepsFile, (, file, )]
[shouldSkipDepsFile, (, file, )]
[file]
[depsParser, ., parseFileReader, (, file, ., getName, (, ), ,, file, ., getCodeReader, (, ), )]
[depsParser]
[file, ., getName, (, )]
[file]
[file, ., getCodeReader, (, )]
[file]
[depInfos, ., isEmpty, (, )]
[depInfos]
[reportNoDepsInDepsFile, (, file, ., getName, (, ), )]
[file, ., getName, (, )]
[file]
[depInfos]
[depsFiles, ., put, (, info, ., getPathRelativeToClosureBase, (, ), ,, info, )]
[depsFiles]
[info, ., getPathRelativeToClosureBase, (, )]
[info]
[info]
[srcs]
[(, new, File, (, src, ., getName, (, ), ), ), ., exists, (, ), &&, !, shouldSkipDepsFile, (, src, )]
[(, new, File, (, src, ., getName, (, ), ), ), ., exists, (, )]
[(, new, File, (, src, ., getName, (, ), ), )]
[new, File, (, src, ., getName, (, ), )]
[src, ., getName, (, )]
[src]
[!, shouldSkipDepsFile, (, src, )]
[shouldSkipDepsFile, (, src, )]
[src]
[depsParser, ., parseFileReader, (, src, ., getName, (, ), ,, src, ., getCodeReader, (, ), )]
[depsParser]
[src, ., getName, (, )]
[src]
[src, ., getCodeReader, (, )]
[src]
[srcInfos]
[depsFiles, ., put, (, info, ., getPathRelativeToClosureBase, (, ), ,, info, )]
[depsFiles]
[info, ., getPathRelativeToClosureBase, (, )]
[info]
[info]
[depsFiles]
[Maps, ., newHashMap, (, )]
[Maps]
[new, JsFileParser, (, errorManager, )]
[errorManager]
[srcs]
[PathUtil, ., makeRelative, (, closurePathAbs, ,, PathUtil, ., makeAbsolute, (, file, ., getName, (, ), ), )]
[PathUtil]
[closurePathAbs]
[PathUtil, ., makeAbsolute, (, file, ., getName, (, ), )]
[PathUtil]
[file, ., getName, (, )]
[file]
[logger, ., fine, (, "Closure-relative path: ", +, closureRelativePath, )]
[logger]
["Closure-relative path: ", +, closureRelativePath]
["Closure-relative path: "]
[closureRelativePath]
[InclusionStrategy, ., WHEN_IN_SRCS, ==, mergeStrategy, ||, !, preparsedFiles, ., contains, (, closureRelativePath, )]
[InclusionStrategy, ., WHEN_IN_SRCS, ==, mergeStrategy]
[InclusionStrategy, ., WHEN_IN_SRCS]
[InclusionStrategy]
[mergeStrategy]
[!, preparsedFiles, ., contains, (, closureRelativePath, )]
[preparsedFiles, ., contains, (, closureRelativePath, )]
[preparsedFiles]
[closureRelativePath]
[jsParser, ., parseFile, (, file, ., getName, (, ), ,, closureRelativePath, ,, file, ., getCode, (, ), )]
[jsParser]
[file, ., getName, (, )]
[file]
[closureRelativePath]
[file, ., getCode, (, )]
[file]
[file, ., clearCachedSource, (, )]
[file]
[parsedFiles, ., put, (, closureRelativePath, ,, depInfo, )]
[parsedFiles]
[closureRelativePath]
[depInfo]
[parsedFiles]
[writeDepInfos, (, out, ,, jsFiles, ., values, (, ), )]
[out]
[jsFiles, ., values, (, )]
[jsFiles]
[mergeStrategy, ==, InclusionStrategy, ., ALWAYS]
[mergeStrategy]
[InclusionStrategy, ., ALWAYS]
[InclusionStrategy]
[Multimaps, ., index, (, depsFiles, ., values, (, ), ,, new, Function, <, DependencyInfo, ,, String, >, (, ), {, @, Override, public, String, apply, (, DependencyInfo, from, ), {, return, from, ., getName, (, ), ;, }, }, )]
[Multimaps]
[depsFiles, ., values, (, )]
[depsFiles]
[new, Function, <, DependencyInfo, ,, String, >, (, ), {, @, Override, public, String, apply, (, DependencyInfo, from, ), {, return, from, ., getName, (, ), ;, }, }]
[from, ., getName, (, )]
[from]
[infosIndex, ., keySet, (, )]
[infosIndex]
[formatPathToDepsFile, (, depsPath, )]
[depsPath]
[out, ., println, (, "\n// Included from: ", +, path, )]
[out]
["\n// Included from: ", +, path]
["\n// Included from: "]
[path]
[writeDepInfos, (, out, ,, infosIndex, ., get, (, depsPath, ), )]
[out]
[infosIndex, ., get, (, depsPath, )]
[infosIndex]
[depsPath]
[path]
[depInfos]
[depInfo, ., getProvides, (, )]
[depInfo]
[depInfo, ., getRequires, (, )]
[depInfo]
[out, ., print, (, "goog.addDependency('", +, depInfo, ., getPathRelativeToClosureBase, (, ), +, "', ", )]
[out]
["goog.addDependency('", +, depInfo, ., getPathRelativeToClosureBase, (, ), +, "', "]
["goog.addDependency('", +, depInfo, ., getPathRelativeToClosureBase, (, )]
["goog.addDependency('"]
[depInfo, ., getPathRelativeToClosureBase, (, )]
[depInfo]
["', "]
[writeJsArray, (, out, ,, provides, )]
[out]
[provides]
[out, ., print, (, ", ", )]
[out]
[", "]
[writeJsArray, (, out, ,, requires, )]
[out]
[requires]
[out, ., println, (, ");", )]
[out]
[");"]
[values, ., isEmpty, (, )]
[values]
[out, ., print, (, "[]", )]
[out]
["[]"]
[out, ., print, (, "['", )]
[out]
["['"]
[out, ., print, (, Joiner, ., on, (, "', '", ), ., join, (, values, ), )]
[out]
[Joiner, ., on, (, "', '", ), ., join, (, values, )]
[Joiner, ., on, (, "', '", )]
[Joiner]
["', '"]
[values]
[out, ., print, (, "']", )]
[out]
["']"]
[Lists, ., newArrayList, (, )]
[Lists]
[paths]
[files, ., add, (, SourceFile, ., fromFile, (, path, ), )]
[files]
[SourceFile, ., fromFile, (, path, )]
[SourceFile]
[path]
[files]
[createSourceFilesFromPaths, (, Arrays, ., asList, (, paths, ), )]
[Arrays, ., asList, (, paths, )]
[Arrays]
[paths]
