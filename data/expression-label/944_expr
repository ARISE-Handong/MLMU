[1L]
[5]
[false]
[null]
[null]
[null]
[fileName, ==, null, ||, fileName, ., isEmpty, (, )]
[fileName, ==, null]
[fileName]
[null]
[fileName, ., isEmpty, (, )]
[fileName]
[new, IllegalArgumentException, (, "a source must have a name", )]
["a source must have a name"]
[this, ., fileName]
[this]
[fileName]
[findLineOffsets, (, )]
[lineno, <, 1, ||, lineno, >, lineOffsets, ., length]
[lineno, <, 1]
[lineno]
[1]
[lineno, >, lineOffsets, ., length]
[lineno]
[lineOffsets, ., length]
[lineOffsets]
[new, IllegalArgumentException, (, "Expected line number between 1 and ", +, lineOffsets, ., length, +, "\nActual: ", +, lineno, )]
["Expected line number between 1 and ", +, lineOffsets, ., length, +, "\nActual: ", +, lineno]
["Expected line number between 1 and ", +, lineOffsets, ., length, +, "\nActual: "]
["Expected line number between 1 and ", +, lineOffsets, ., length]
["Expected line number between 1 and "]
[lineOffsets, ., length]
[lineOffsets]
["\nActual: "]
[lineno]
[lineOffsets, [, lineno, -, 1, ]]
[lineOffsets]
[lineno, -, 1]
[lineno]
[1]
[findLineOffsets, (, )]
[lineOffsets, ., length]
[lineOffsets]
[lineOffsets, !=, null]
[lineOffsets]
[null]
[getCode, (, ), ., split, (, "\n", )]
[getCode, (, )]
["\n"]
[lineOffsets]
[new, int, [, sourceLines, ., length, ]]
[sourceLines, ., length]
[sourceLines]
[1]
[ii, <, sourceLines, ., length]
[ii]
[sourceLines, ., length]
[sourceLines]
[++, ii]
[ii]
[lineOffsets, [, ii, ]]
[lineOffsets]
[ii]
[lineOffsets, [, ii, -, 1, ], +, sourceLines, [, ii, -, 1, ], ., length, (, ), +, 1]
[lineOffsets, [, ii, -, 1, ], +, sourceLines, [, ii, -, 1, ], ., length, (, )]
[lineOffsets, [, ii, -, 1, ]]
[lineOffsets]
[ii, -, 1]
[ii]
[1]
[sourceLines, [, ii, -, 1, ], ., length, (, )]
[sourceLines, [, ii, -, 1, ]]
[sourceLines]
[ii, -, 1]
[ii]
[1]
[1]
[lineOffsets]
[new, int, [, 1, ]]
[1]
[lineOffsets, [, 0, ]]
[lineOffsets]
[0]
[0]
[code]
[new, StringReader, (, getCode, (, ), )]
[getCode, (, )]
[code]
[code]
[sourceCode]
[originalPath, !=, null, ?, originalPath, :, fileName]
[originalPath, !=, null]
[originalPath]
[null]
[originalPath]
[fileName]
[this, ., originalPath]
[this]
[originalPath]
[code, !=, null]
[code]
[null]
[fileName]
[isExternFile]
[isExternFile]
[newVal]
[findLineOffsets, (, )]
[Arrays, ., binarySearch, (, lineOffsets, ,, offset, )]
[Arrays]
[lineOffsets]
[offset]
[search, >=, 0]
[search]
[0]
[search, +, 1]
[search]
[1]
[-, 1, *, (, search, +, 1, )]
[-, 1]
[1]
[(, search, +, 1, )]
[search, +, 1]
[search]
[1]
[Math, ., min, (, insertionPoint, -, 1, ,, lineOffsets, ., length, -, 1, ), +, 1]
[Math, ., min, (, insertionPoint, -, 1, ,, lineOffsets, ., length, -, 1, )]
[Math]
[insertionPoint, -, 1]
[insertionPoint]
[1]
[lineOffsets, ., length, -, 1]
[lineOffsets, ., length]
[lineOffsets]
[1]
[1]
[getLineOfOffset, (, offset, )]
[offset]
[offset, -, lineOffsets, [, line, -, 1, ]]
[offset]
[lineOffsets, [, line, -, 1, ]]
[lineOffsets]
[line, -, 1]
[line]
[1]
[findLineOffsets, (, )]
[lineNumber, >, lineOffsets, ., length]
[lineNumber]
[lineOffsets, ., length]
[lineOffsets]
[null]
[lineNumber, <, 1]
[lineNumber]
[1]
[lineNumber]
[1]
[lineOffsets, [, lineNumber, -, 1, ]]
[lineOffsets]
[lineNumber, -, 1]
[lineNumber]
[1]
[""]
[js]
[getCode, (, )]
[null]
[js, ., indexOf, (, '\n', ,, pos, ), ==, -, 1]
[js, ., indexOf, (, '\n', ,, pos, )]
[js]
['\n']
[pos]
[-, 1]
[1]
[pos, >=, js, ., length, (, )]
[pos]
[js, ., length, (, )]
[js]
[null]
[js, ., substring, (, pos, ,, js, ., length, (, ), )]
[js]
[pos]
[js, ., length, (, )]
[js]
[js, ., substring, (, pos, ,, js, ., indexOf, (, '\n', ,, pos, ), )]
[js]
[pos]
[js, ., indexOf, (, '\n', ,, pos, )]
[js]
['\n']
[pos]
[""]
[js]
[getCode, (, )]
[null]
[0]
[Math, ., max, (, 1, ,, lineNumber, -, (, SOURCE_EXCERPT_REGION_LENGTH, +, 1, ), /, 2, +, 1, )]
[Math]
[1]
[lineNumber, -, (, SOURCE_EXCERPT_REGION_LENGTH, +, 1, ), /, 2, +, 1]
[lineNumber, -, (, SOURCE_EXCERPT_REGION_LENGTH, +, 1, ), /, 2]
[lineNumber]
[(, SOURCE_EXCERPT_REGION_LENGTH, +, 1, ), /, 2]
[(, SOURCE_EXCERPT_REGION_LENGTH, +, 1, )]
[SOURCE_EXCERPT_REGION_LENGTH, +, 1]
[SOURCE_EXCERPT_REGION_LENGTH]
[1]
[2]
[1]
[1]
[n, <, startLine]
[n]
[startLine]
[n, ++]
[n]
[js, ., indexOf, (, '\n', ,, pos, )]
[js]
['\n']
[pos]
[nextpos, ==, -, 1]
[nextpos]
[-, 1]
[1]
[pos]
[nextpos, +, 1]
[nextpos]
[1]
[pos]
[startLine]
[0]
[n, <, SOURCE_EXCERPT_REGION_LENGTH]
[n]
[SOURCE_EXCERPT_REGION_LENGTH]
[n, ++]
[n]
[endLine, ++]
[endLine]
[end]
[js, ., indexOf, (, '\n', ,, end, )]
[js]
['\n']
[end]
[end, ==, -, 1]
[end]
[-, 1]
[1]
[end, ++]
[end]
[lineNumber, >=, endLine]
[lineNumber]
[endLine]
[null]
[end, ==, -, 1]
[end]
[-, 1]
[1]
[js, ., length, (, ), -, 1]
[js, ., length, (, )]
[js]
[1]
[js, ., charAt, (, last, ), ==, '\n']
[js, ., charAt, (, last, )]
[js]
[last]
['\n']
[new, SimpleRegion, (, startLine, ,, endLine, ,, js, ., substring, (, pos, ,, last, ), )]
[startLine]
[endLine]
[js, ., substring, (, pos, ,, last, )]
[js]
[pos]
[last]
[new, SimpleRegion, (, startLine, ,, endLine, ,, js, ., substring, (, pos, ), )]
[startLine]
[endLine]
[js, ., substring, (, pos, )]
[js]
[pos]
[new, SimpleRegion, (, startLine, ,, endLine, ,, js, ., substring, (, pos, ,, end, ), )]
[startLine]
[endLine]
[js, ., substring, (, pos, ,, end, )]
[js]
[pos]
[end]
[fileName]
[builder, (, ), ., withCharset, (, c, ), ., buildFromFile, (, fileName, )]
[builder, (, ), ., withCharset, (, c, )]
[builder, (, )]
[c]
[fileName]
[builder, (, ), ., buildFromFile, (, fileName, )]
[builder, (, )]
[fileName]
[builder, (, ), ., withCharset, (, c, ), ., buildFromFile, (, file, )]
[builder, (, ), ., withCharset, (, c, )]
[builder, (, )]
[c]
[file]
[builder, (, ), ., buildFromFile, (, file, )]
[builder, (, )]
[file]
[builder, (, ), ., buildFromCode, (, fileName, ,, code, )]
[builder, (, )]
[fileName]
[code]
[builder, (, ), ., withOriginalPath, (, originalPath, ), ., buildFromCode, (, fileName, ,, code, )]
[builder, (, ), ., withOriginalPath, (, originalPath, )]
[builder, (, )]
[originalPath]
[fileName]
[code]
[builder, (, ), ., buildFromInputStream, (, fileName, ,, s, )]
[builder, (, )]
[fileName]
[s]
[builder, (, ), ., withOriginalPath, (, originalPath, ), ., buildFromInputStream, (, fileName, ,, s, )]
[builder, (, ), ., withOriginalPath, (, originalPath, )]
[builder, (, )]
[originalPath]
[fileName]
[s]
[builder, (, ), ., buildFromReader, (, fileName, ,, r, )]
[builder, (, )]
[fileName]
[r]
[builder, (, ), ., buildFromGenerator, (, fileName, ,, generator, )]
[builder, (, )]
[fileName]
[generator]
[new, Builder, (, )]
[Charsets, ., UTF_8]
[Charsets]
[null]
[this, ., charset]
[this]
[charset]
[this]
[this, ., originalPath]
[this]
[originalPath]
[this]
[buildFromFile, (, new, File, (, fileName, ), )]
[new, File, (, fileName, )]
[fileName]
[new, OnDisk, (, file, ,, originalPath, ,, charset, )]
[file]
[originalPath]
[charset]
[new, Preloaded, (, fileName, ,, originalPath, ,, code, )]
[fileName]
[originalPath]
[code]
[buildFromCode, (, fileName, ,, CharStreams, ., toString, (, new, InputStreamReader, (, s, ,, charset, ), ), )]
[fileName]
[CharStreams, ., toString, (, new, InputStreamReader, (, s, ,, charset, ), )]
[CharStreams]
[new, InputStreamReader, (, s, ,, charset, )]
[s]
[charset]
[buildFromCode, (, fileName, ,, CharStreams, ., toString, (, r, ), )]
[fileName]
[CharStreams, ., toString, (, r, )]
[CharStreams]
[r]
[new, Generated, (, fileName, ,, originalPath, ,, generator, )]
[fileName]
[originalPath]
[generator]
[1L]
[fileName]
[super, ., setOriginalPath, (, originalPath, )]
[super]
[originalPath]
[super, ., setCode, (, code, )]
[super]
[code]
[1L]
[fileName]
[super, ., setOriginalPath, (, originalPath, )]
[super]
[originalPath]
[this, ., generator]
[this]
[generator]
[super, ., getCode, (, )]
[super]
[cachedCode, ==, null]
[cachedCode]
[null]
[cachedCode]
[generator, ., getCode, (, )]
[generator]
[super, ., setCode, (, cachedCode, )]
[super]
[cachedCode]
[cachedCode]
[super, ., setCode, (, null, )]
[super]
[null]
[1L]
[Charsets, ., UTF_8, ., name, (, )]
[Charsets, ., UTF_8]
[Charsets]
[file, ., getPath, (, )]
[file]
[this, ., file]
[this]
[file]
[super, ., setOriginalPath, (, originalPath, )]
[super]
[originalPath]
[c, !=, null]
[c]
[null]
[this, ., setCharset, (, c, )]
[this]
[c]
[super, ., getCode, (, )]
[super]
[cachedCode, ==, null]
[cachedCode]
[null]
[cachedCode]
[Files, ., toString, (, file, ,, this, ., getCharset, (, ), )]
[Files]
[file]
[this, ., getCharset, (, )]
[this]
[super, ., setCode, (, cachedCode, )]
[super]
[cachedCode]
[cachedCode]
[hasSourceInMemory, (, )]
[super, ., getCodeReader, (, )]
[super]
[new, FileReader, (, file, )]
[file]
[super, ., setCode, (, null, )]
[super]
[null]
[inputCharset]
[c, ., name, (, )]
[c]
[Charset, ., forName, (, inputCharset, )]
[Charset]
[inputCharset]
