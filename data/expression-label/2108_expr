[6924382802125527395L]
[new, Font, (, "Tahoma", ,, Font, ., BOLD, ,, 10, )]
["Tahoma"]
[Font, ., BOLD]
[Font]
[10]
[0]
[1]
[false]
[Color, ., black]
[Color]
[Color, ., yellow]
[Color]
[Color, ., white]
[Color]
[new, Font, (, "Tahoma", ,, Font, ., PLAIN, ,, 10, )]
["Tahoma"]
[Font, ., PLAIN]
[Font]
[10]
[new, ValueDataset, [, 1, ]]
[1]
[new, MeterNeedle, [, 1, ]]
[1]
[ResourceBundleWrapper, ., getBundle, (, "org.jfree.chart.plot.LocalizationBundle", )]
[ResourceBundleWrapper]
["org.jfree.chart.plot.LocalizationBundle"]
[360]
[new, DefaultValueDataset, (, )]
[dataset, !=, null]
[dataset]
[null]
[this, ., datasets, [, 0, ]]
[this, ., datasets]
[this]
[0]
[dataset]
[dataset, ., addChangeListener, (, this, )]
[dataset]
[this]
[this, ., circle1]
[this]
[new, Ellipse2D, ., Double, (, )]
[this, ., circle2]
[this]
[new, Ellipse2D, ., Double, (, )]
[this, ., rect1]
[this]
[new, Rectangle2D, ., Double, (, )]
[setSeriesNeedle, (, 0, )]
[0]
[this, ., labelType]
[this]
[(, type, !=, NO_LABELS, ), &&, (, type, !=, VALUE_LABELS, )]
[(, type, !=, NO_LABELS, )]
[type, !=, NO_LABELS]
[type]
[NO_LABELS]
[(, type, !=, VALUE_LABELS, )]
[type, !=, VALUE_LABELS]
[type]
[VALUE_LABELS]
[new, IllegalArgumentException, (, "MeterPlot.setLabelType(int): unrecognised type.", )]
["MeterPlot.setLabelType(int): unrecognised type."]
[this, ., labelType, !=, type]
[this, ., labelType]
[this]
[type]
[this, ., labelType]
[this]
[type]
[fireChangeEvent, (, )]
[this, ., labelFont]
[this]
[font, ==, null]
[font]
[null]
[new, IllegalArgumentException, (, "Null 'font' not allowed.", )]
["Null 'font' not allowed."]
[this, ., labelFont]
[this]
[font]
[fireChangeEvent, (, )]
[this, ., rosePaint]
[this]
[paint, ==, null]
[paint]
[null]
[new, IllegalArgumentException, (, "Null 'paint' argument.", )]
["Null 'paint' argument."]
[this, ., rosePaint]
[this]
[paint]
[fireChangeEvent, (, )]
[this, ., roseCenterPaint]
[this]
[paint, ==, null]
[paint]
[null]
[new, IllegalArgumentException, (, "Null 'paint' argument.", )]
["Null 'paint' argument."]
[this, ., roseCenterPaint]
[this]
[paint]
[fireChangeEvent, (, )]
[this, ., roseHighlightPaint]
[this]
[paint, ==, null]
[paint]
[null]
[new, IllegalArgumentException, (, "Null 'paint' argument.", )]
["Null 'paint' argument."]
[this, ., roseHighlightPaint]
[this]
[paint]
[fireChangeEvent, (, )]
[this, ., drawBorder]
[this]
[this, ., drawBorder]
[this]
[status]
[fireChangeEvent, (, )]
[(, series, >=, 0, ), &&, (, series, <, this, ., seriesNeedle, ., length, )]
[(, series, >=, 0, )]
[series, >=, 0]
[series]
[0]
[(, series, <, this, ., seriesNeedle, ., length, )]
[series, <, this, ., seriesNeedle, ., length]
[series]
[this, ., seriesNeedle, ., length]
[this, ., seriesNeedle]
[this]
[this, ., seriesNeedle, [, series, ], ., setFillPaint, (, paint, )]
[this, ., seriesNeedle, [, series, ]]
[this, ., seriesNeedle]
[this]
[series]
[paint]
[(, series, >=, 0, ), &&, (, series, <, this, ., seriesNeedle, ., length, )]
[(, series, >=, 0, )]
[series, >=, 0]
[series]
[0]
[(, series, <, this, ., seriesNeedle, ., length, )]
[series, <, this, ., seriesNeedle, ., length]
[series]
[this, ., seriesNeedle, ., length]
[this, ., seriesNeedle]
[this]
[this, ., seriesNeedle, [, series, ], ., setOutlinePaint, (, p, )]
[this, ., seriesNeedle, [, series, ]]
[this, ., seriesNeedle]
[this]
[series]
[p]
[(, series, >=, 0, ), &&, (, series, <, this, ., seriesNeedle, ., length, )]
[(, series, >=, 0, )]
[series, >=, 0]
[series]
[0]
[(, series, <, this, ., seriesNeedle, ., length, )]
[series, <, this, ., seriesNeedle, ., length]
[series]
[this, ., seriesNeedle, ., length]
[this, ., seriesNeedle]
[this]
[this, ., seriesNeedle, [, series, ], ., setOutlineStroke, (, stroke, )]
[this, ., seriesNeedle, [, series, ]]
[this, ., seriesNeedle]
[this]
[series]
[stroke]
[setSeriesNeedle, (, 0, ,, type, )]
[0]
[type]
[type]
[0]
[setSeriesNeedle, (, index, ,, new, ArrowNeedle, (, true, ), )]
[index]
[new, ArrowNeedle, (, true, )]
[true]
[setSeriesPaint, (, index, ,, Color, ., red, )]
[index]
[Color, ., red]
[Color]
[this, ., seriesNeedle, [, index, ], ., setHighlightPaint, (, Color, ., white, )]
[this, ., seriesNeedle, [, index, ]]
[this, ., seriesNeedle]
[this]
[index]
[Color, ., white]
[Color]
[1]
[setSeriesNeedle, (, index, ,, new, LineNeedle, (, ), )]
[index]
[new, LineNeedle, (, )]
[2]
[new, LongNeedle, (, )]
[longNeedle, ., setRotateY, (, 0.5, )]
[longNeedle]
[0.5]
[setSeriesNeedle, (, index, ,, longNeedle, )]
[index]
[longNeedle]
[3]
[setSeriesNeedle, (, index, ,, new, PinNeedle, (, ), )]
[index]
[new, PinNeedle, (, )]
[4]
[setSeriesNeedle, (, index, ,, new, PlumNeedle, (, ), )]
[index]
[new, PlumNeedle, (, )]
[5]
[setSeriesNeedle, (, index, ,, new, PointerNeedle, (, ), )]
[index]
[new, PointerNeedle, (, )]
[6]
[setSeriesPaint, (, index, ,, null, )]
[index]
[null]
[setSeriesOutlineStroke, (, index, ,, new, BasicStroke, (, 3, ), )]
[index]
[new, BasicStroke, (, 3, )]
[3]
[setSeriesNeedle, (, index, ,, new, ShipNeedle, (, ), )]
[index]
[new, ShipNeedle, (, )]
[7]
[setSeriesPaint, (, index, ,, Color, ., blue, )]
[index]
[Color, ., blue]
[Color]
[setSeriesNeedle, (, index, ,, new, WindNeedle, (, ), )]
[index]
[new, WindNeedle, (, )]
[8]
[setSeriesNeedle, (, index, ,, new, ArrowNeedle, (, true, ), )]
[index]
[new, ArrowNeedle, (, true, )]
[true]
[9]
[setSeriesNeedle, (, index, ,, new, MiddlePinNeedle, (, ), )]
[index]
[new, MiddlePinNeedle, (, )]
[new, IllegalArgumentException, (, "Unrecognised type.", )]
["Unrecognised type."]
[(, needle, !=, null, ), &&, (, index, <, this, ., seriesNeedle, ., length, )]
[(, needle, !=, null, )]
[needle, !=, null]
[needle]
[null]
[(, index, <, this, ., seriesNeedle, ., length, )]
[index, <, this, ., seriesNeedle, ., length]
[index]
[this, ., seriesNeedle, ., length]
[this, ., seriesNeedle]
[this]
[this, ., seriesNeedle, [, index, ]]
[this, ., seriesNeedle]
[this]
[index]
[needle]
[fireChangeEvent, (, )]
[this, ., datasets]
[this]
[addDataset, (, dataset, ,, null, )]
[dataset]
[null]
[dataset, !=, null]
[dataset]
[null]
[this, ., datasets, ., length, +, 1]
[this, ., datasets, ., length]
[this, ., datasets]
[this]
[1]
[new, ValueDataset, [, i, ]]
[i]
[new, MeterNeedle, [, i, ]]
[i]
[i]
[i, -, 2]
[i]
[2]
[i, >=, 0]
[i]
[0]
[--, i]
[i]
[t, [, i, ]]
[t]
[i]
[this, ., datasets, [, i, ]]
[this, ., datasets]
[this]
[i]
[p, [, i, ]]
[p]
[i]
[this, ., seriesNeedle, [, i, ]]
[this, ., seriesNeedle]
[this]
[i]
[i]
[this, ., datasets, ., length]
[this, ., datasets]
[this]
[t, [, i, ]]
[t]
[i]
[dataset]
[p, [, i, ]]
[p]
[i]
[(, (, needle, !=, null, ), ?, needle, :, p, [, i, -, 1, ], )]
[(, needle, !=, null, ), ?, needle, :, p, [, i, -, 1, ]]
[(, needle, !=, null, )]
[needle, !=, null]
[needle]
[null]
[needle]
[p, [, i, -, 1, ]]
[p]
[i, -, 1]
[i]
[1]
[this, ., datasets]
[this]
[this, ., seriesNeedle]
[this]
[this, ., datasets]
[this]
[t]
[this, ., seriesNeedle]
[this]
[p]
[--, i]
[i]
[i, >=, 0]
[i]
[0]
[--, i]
[i]
[a, [, i, ]]
[a]
[i]
[null]
[b, [, i, ]]
[b]
[i]
[null]
[dataset, ., addChangeListener, (, this, )]
[dataset]
[this]
[0]
[0]
[info, !=, null]
[info]
[null]
[info, ., setPlotArea, (, area, )]
[info]
[area]
[getInsets, (, )]
[insets, ., trim, (, area, )]
[insets]
[area]
[this, ., drawBorder]
[this]
[drawBackground, (, g2, ,, area, )]
[g2]
[area]
[(, int, ), (, area, ., getWidth, (, ), /, 2, )]
[(, area, ., getWidth, (, ), /, 2, )]
[area, ., getWidth, (, ), /, 2]
[area, ., getWidth, (, )]
[area]
[2]
[(, int, ), (, area, ., getHeight, (, ), /, 2, )]
[(, area, ., getHeight, (, ), /, 2, )]
[area, ., getHeight, (, ), /, 2]
[area, ., getHeight, (, )]
[area]
[2]
[midX]
[midY, <, midX]
[midY]
[midX]
[radius]
[midY]
[--, radius]
[radius]
[2, *, radius]
[2]
[radius]
[midX]
[(, int, ), area, ., getMinX, (, )]
[area, ., getMinX, (, )]
[area]
[midY]
[(, int, ), area, ., getMinY, (, )]
[area, ., getMinY, (, )]
[area]
[this, ., circle1, ., setFrame, (, midX, -, radius, ,, midY, -, radius, ,, diameter, ,, diameter, )]
[this, ., circle1]
[this]
[midX, -, radius]
[midX]
[radius]
[midY, -, radius]
[midY]
[radius]
[diameter]
[diameter]
[this, ., circle2, ., setFrame, (, midX, -, radius, +, 15, ,, midY, -, radius, +, 15, ,, diameter, -, 30, ,, diameter, -, 30, )]
[this, ., circle2]
[this]
[midX, -, radius, +, 15]
[midX, -, radius]
[midX]
[radius]
[15]
[midY, -, radius, +, 15]
[midY, -, radius]
[midY]
[radius]
[15]
[diameter, -, 30]
[diameter]
[30]
[diameter, -, 30]
[diameter]
[30]
[g2, ., setPaint, (, this, ., rosePaint, )]
[g2]
[this, ., rosePaint]
[this]
[this, ., a1]
[this]
[new, Area, (, this, ., circle1, )]
[this, ., circle1]
[this]
[this, ., a2]
[this]
[new, Area, (, this, ., circle2, )]
[this, ., circle2]
[this]
[this, ., a1, ., subtract, (, this, ., a2, )]
[this, ., a1]
[this]
[this, ., a2]
[this]
[g2, ., fill, (, this, ., a1, )]
[g2]
[this, ., a1]
[this]
[g2, ., setPaint, (, this, ., roseCenterPaint, )]
[g2]
[this, ., roseCenterPaint]
[this]
[x1]
[diameter, -, 30]
[diameter]
[30]
[g2, ., fillOval, (, midX, -, radius, +, 15, ,, midY, -, radius, +, 15, ,, x1, ,, x1, )]
[g2]
[midX, -, radius, +, 15]
[midX, -, radius]
[midX]
[radius]
[15]
[midY, -, radius, +, 15]
[midY, -, radius]
[midY]
[radius]
[15]
[x1]
[x1]
[g2, ., setPaint, (, this, ., roseHighlightPaint, )]
[g2]
[this, ., roseHighlightPaint]
[this]
[g2, ., drawOval, (, midX, -, radius, ,, midY, -, radius, ,, diameter, ,, diameter, )]
[g2]
[midX, -, radius]
[midX]
[radius]
[midY, -, radius]
[midY]
[radius]
[diameter]
[diameter]
[x1]
[diameter, -, 20]
[diameter]
[20]
[g2, ., drawOval, (, midX, -, radius, +, 10, ,, midY, -, radius, +, 10, ,, x1, ,, x1, )]
[g2]
[midX, -, radius, +, 10]
[midX, -, radius]
[midX]
[radius]
[10]
[midY, -, radius, +, 10]
[midY, -, radius]
[midY]
[radius]
[10]
[x1]
[x1]
[x1]
[diameter, -, 30]
[diameter]
[30]
[g2, ., drawOval, (, midX, -, radius, +, 15, ,, midY, -, radius, +, 15, ,, x1, ,, x1, )]
[g2]
[midX, -, radius, +, 15]
[midX, -, radius]
[midX]
[radius]
[15]
[midY, -, radius, +, 15]
[midY, -, radius]
[midY]
[radius]
[15]
[x1]
[x1]
[x1]
[diameter, -, 80]
[diameter]
[80]
[g2, ., drawOval, (, midX, -, radius, +, 40, ,, midY, -, radius, +, 40, ,, x1, ,, x1, )]
[g2]
[midX, -, radius, +, 40]
[midX, -, radius]
[midX]
[radius]
[40]
[midY, -, radius, +, 40]
[midY, -, radius]
[midY]
[radius]
[40]
[x1]
[x1]
[outerRadius]
[radius, -, 20]
[radius]
[20]
[innerRadius]
[radius, -, 32]
[radius]
[32]
[0]
[w, <, 360]
[w]
[360]
[w]
[15]
[a]
[Math, ., toRadians, (, w, )]
[Math]
[w]
[x1]
[midX, -, (, (, int, ), (, Math, ., sin, (, a, ), *, innerRadius, ), )]
[midX]
[(, (, int, ), (, Math, ., sin, (, a, ), *, innerRadius, ), )]
[(, int, ), (, Math, ., sin, (, a, ), *, innerRadius, )]
[(, Math, ., sin, (, a, ), *, innerRadius, )]
[Math, ., sin, (, a, ), *, innerRadius]
[Math, ., sin, (, a, )]
[Math]
[a]
[innerRadius]
[x2]
[midX, -, (, (, int, ), (, Math, ., sin, (, a, ), *, outerRadius, ), )]
[midX]
[(, (, int, ), (, Math, ., sin, (, a, ), *, outerRadius, ), )]
[(, int, ), (, Math, ., sin, (, a, ), *, outerRadius, )]
[(, Math, ., sin, (, a, ), *, outerRadius, )]
[Math, ., sin, (, a, ), *, outerRadius]
[Math, ., sin, (, a, )]
[Math]
[a]
[outerRadius]
[y1]
[midY, -, (, (, int, ), (, Math, ., cos, (, a, ), *, innerRadius, ), )]
[midY]
[(, (, int, ), (, Math, ., cos, (, a, ), *, innerRadius, ), )]
[(, int, ), (, Math, ., cos, (, a, ), *, innerRadius, )]
[(, Math, ., cos, (, a, ), *, innerRadius, )]
[Math, ., cos, (, a, ), *, innerRadius]
[Math, ., cos, (, a, )]
[Math]
[a]
[innerRadius]
[y2]
[midY, -, (, (, int, ), (, Math, ., cos, (, a, ), *, outerRadius, ), )]
[midY]
[(, (, int, ), (, Math, ., cos, (, a, ), *, outerRadius, ), )]
[(, int, ), (, Math, ., cos, (, a, ), *, outerRadius, )]
[(, Math, ., cos, (, a, ), *, outerRadius, )]
[Math, ., cos, (, a, ), *, outerRadius]
[Math, ., cos, (, a, )]
[Math]
[a]
[outerRadius]
[g2, ., drawLine, (, x1, ,, y1, ,, x2, ,, y2, )]
[g2]
[x1]
[y1]
[x2]
[y2]
[g2, ., setPaint, (, this, ., roseHighlightPaint, )]
[g2]
[this, ., roseHighlightPaint]
[this]
[innerRadius]
[radius, -, 26]
[radius]
[26]
[outerRadius]
[7]
[45]
[w, <, 360]
[w]
[360]
[w]
[90]
[a]
[Math, ., toRadians, (, w, )]
[Math]
[w]
[x1]
[midX, -, (, (, int, ), (, Math, ., sin, (, a, ), *, innerRadius, ), )]
[midX]
[(, (, int, ), (, Math, ., sin, (, a, ), *, innerRadius, ), )]
[(, int, ), (, Math, ., sin, (, a, ), *, innerRadius, )]
[(, Math, ., sin, (, a, ), *, innerRadius, )]
[Math, ., sin, (, a, ), *, innerRadius]
[Math, ., sin, (, a, )]
[Math]
[a]
[innerRadius]
[y1]
[midY, -, (, (, int, ), (, Math, ., cos, (, a, ), *, innerRadius, ), )]
[midY]
[(, (, int, ), (, Math, ., cos, (, a, ), *, innerRadius, ), )]
[(, int, ), (, Math, ., cos, (, a, ), *, innerRadius, )]
[(, Math, ., cos, (, a, ), *, innerRadius, )]
[Math, ., cos, (, a, ), *, innerRadius]
[Math, ., cos, (, a, )]
[Math]
[a]
[innerRadius]
[g2, ., fillOval, (, x1, -, outerRadius, ,, y1, -, outerRadius, ,, 2, *, outerRadius, ,, 2, *, outerRadius, )]
[g2]
[x1, -, outerRadius]
[x1]
[outerRadius]
[y1, -, outerRadius]
[y1]
[outerRadius]
[2, *, outerRadius]
[2]
[outerRadius]
[2, *, outerRadius]
[2]
[outerRadius]
[0]
[w, <, 360]
[w]
[360]
[w]
[90]
[a]
[Math, ., toRadians, (, w, )]
[Math]
[w]
[x1]
[midX, -, (, (, int, ), (, Math, ., sin, (, a, ), *, innerRadius, ), )]
[midX]
[(, (, int, ), (, Math, ., sin, (, a, ), *, innerRadius, ), )]
[(, int, ), (, Math, ., sin, (, a, ), *, innerRadius, )]
[(, Math, ., sin, (, a, ), *, innerRadius, )]
[Math, ., sin, (, a, ), *, innerRadius]
[Math, ., sin, (, a, )]
[Math]
[a]
[innerRadius]
[y1]
[midY, -, (, (, int, ), (, Math, ., cos, (, a, ), *, innerRadius, ), )]
[midY]
[(, (, int, ), (, Math, ., cos, (, a, ), *, innerRadius, ), )]
[(, int, ), (, Math, ., cos, (, a, ), *, innerRadius, )]
[(, Math, ., cos, (, a, ), *, innerRadius, )]
[Math, ., cos, (, a, ), *, innerRadius]
[Math, ., cos, (, a, )]
[Math]
[a]
[innerRadius]
[new, Polygon, (, )]
[p, ., addPoint, (, x1, -, outerRadius, ,, y1, )]
[p]
[x1, -, outerRadius]
[x1]
[outerRadius]
[y1]
[p, ., addPoint, (, x1, ,, y1, +, outerRadius, )]
[p]
[x1]
[y1, +, outerRadius]
[y1]
[outerRadius]
[p, ., addPoint, (, x1, +, outerRadius, ,, y1, )]
[p]
[x1, +, outerRadius]
[x1]
[outerRadius]
[y1]
[p, ., addPoint, (, x1, ,, y1, -, outerRadius, )]
[p]
[x1]
[y1, -, outerRadius]
[y1]
[outerRadius]
[g2, ., fillPolygon, (, p, )]
[g2]
[p]
[innerRadius]
[radius, -, 42]
[radius]
[42]
[getCompassFont, (, radius, )]
[radius]
[g2, ., setFont, (, f, )]
[g2]
[f]
[g2, ., drawString, (, "N", ,, midX, -, 5, ,, midY, -, innerRadius, +, f, ., getSize, (, ), )]
[g2]
["N"]
[midX, -, 5]
[midX]
[5]
[midY, -, innerRadius, +, f, ., getSize, (, )]
[midY, -, innerRadius]
[midY]
[innerRadius]
[f, ., getSize, (, )]
[f]
[g2, ., drawString, (, "S", ,, midX, -, 5, ,, midY, +, innerRadius, -, 5, )]
[g2]
["S"]
[midX, -, 5]
[midX]
[5]
[midY, +, innerRadius, -, 5]
[midY, +, innerRadius]
[midY]
[innerRadius]
[5]
[g2, ., drawString, (, "W", ,, midX, -, innerRadius, +, 5, ,, midY, +, 5, )]
[g2]
["W"]
[midX, -, innerRadius, +, 5]
[midX, -, innerRadius]
[midX]
[innerRadius]
[5]
[midY, +, 5]
[midY]
[5]
[g2, ., drawString, (, "E", ,, midX, +, innerRadius, -, f, ., getSize, (, ), ,, midY, +, 5, )]
[g2]
["E"]
[midX, +, innerRadius, -, f, ., getSize, (, )]
[midX, +, innerRadius]
[midX]
[innerRadius]
[f, ., getSize, (, )]
[f]
[midY, +, 5]
[midY]
[5]
[y1]
[radius, /, 2]
[radius]
[2]
[x1]
[radius, /, 6]
[radius]
[6]
[new, Rectangle2D, ., Double, (, (, midX, -, x1, ), ,, (, midY, -, y1, ), ,, (, 2, *, x1, ), ,, (, 2, *, y1, ), )]
[(, midX, -, x1, )]
[midX, -, x1]
[midX]
[x1]
[(, midY, -, y1, )]
[midY, -, y1]
[midY]
[y1]
[(, 2, *, x1, )]
[2, *, x1]
[2]
[x1]
[(, 2, *, y1, )]
[2, *, y1]
[2]
[y1]
[this, ., seriesNeedle, ., length]
[this, ., seriesNeedle]
[this]
[0]
[0]
[(, this, ., datasets, ., length, -, 1, )]
[this, ., datasets, ., length, -, 1]
[this, ., datasets, ., length]
[this, ., datasets]
[this]
[1]
[i, >=, 0]
[i]
[0]
[--, i]
[i]
[this, ., datasets, [, i, ]]
[this, ., datasets]
[this]
[i]
[data, !=, null, &&, data, ., getValue, (, ), !=, null]
[data, !=, null]
[data]
[null]
[data, ., getValue, (, ), !=, null]
[data, ., getValue, (, )]
[data]
[null]
[value]
[(, data, ., getValue, (, ), ., doubleValue, (, ), ), %, this, ., revolutionDistance]
[(, data, ., getValue, (, ), ., doubleValue, (, ), )]
[data, ., getValue, (, ), ., doubleValue, (, )]
[data, ., getValue, (, )]
[data]
[this, ., revolutionDistance]
[this]
[value]
[value, /, this, ., revolutionDistance, *, 360]
[value, /, this, ., revolutionDistance]
[value]
[this, ., revolutionDistance]
[this]
[360]
[current]
[i, %, x]
[i]
[x]
[this, ., seriesNeedle, [, current, ], ., draw, (, g2, ,, needleArea, ,, value, )]
[this, ., seriesNeedle, [, current, ]]
[this, ., seriesNeedle]
[this]
[current]
[g2]
[needleArea]
[value]
[this, ., drawBorder]
[this]
[drawOutline, (, g2, ,, area, )]
[g2]
[area]
[localizationResources, ., getString, (, "Compass_Plot", )]
[localizationResources]
["Compass_Plot"]
[null]
[radius, /, 10.0f]
[radius]
[10.0f]
[fontSize, <, 8]
[fontSize]
[8]
[fontSize]
[8]
[this, ., compassFont, ., deriveFont, (, fontSize, )]
[this, ., compassFont]
[this]
[fontSize]
[newFont]
[obj, ==, this]
[obj]
[this]
[true]
[!, (, obj, instanceof, CompassPlot, )]
[(, obj, instanceof, CompassPlot, )]
[obj, instanceof, CompassPlot]
[obj]
[false]
[!, super, ., equals, (, obj, )]
[super, ., equals, (, obj, )]
[super]
[obj]
[false]
[(, CompassPlot, ), obj]
[obj]
[this, ., labelType, !=, that, ., labelType]
[this, ., labelType]
[this]
[that, ., labelType]
[that]
[false]
[!, ObjectUtilities, ., equal, (, this, ., labelFont, ,, that, ., labelFont, )]
[ObjectUtilities, ., equal, (, this, ., labelFont, ,, that, ., labelFont, )]
[ObjectUtilities]
[this, ., labelFont]
[this]
[that, ., labelFont]
[that]
[false]
[this, ., drawBorder, !=, that, ., drawBorder]
[this, ., drawBorder]
[this]
[that, ., drawBorder]
[that]
[false]
[!, PaintUtilities, ., equal, (, this, ., roseHighlightPaint, ,, that, ., roseHighlightPaint, )]
[PaintUtilities, ., equal, (, this, ., roseHighlightPaint, ,, that, ., roseHighlightPaint, )]
[PaintUtilities]
[this, ., roseHighlightPaint]
[this]
[that, ., roseHighlightPaint]
[that]
[false]
[!, PaintUtilities, ., equal, (, this, ., rosePaint, ,, that, ., rosePaint, )]
[PaintUtilities, ., equal, (, this, ., rosePaint, ,, that, ., rosePaint, )]
[PaintUtilities]
[this, ., rosePaint]
[this]
[that, ., rosePaint]
[that]
[false]
[!, PaintUtilities, ., equal, (, this, ., roseCenterPaint, ,, that, ., roseCenterPaint, )]
[PaintUtilities, ., equal, (, this, ., roseCenterPaint, ,, that, ., roseCenterPaint, )]
[PaintUtilities]
[this, ., roseCenterPaint]
[this]
[that, ., roseCenterPaint]
[that]
[false]
[!, ObjectUtilities, ., equal, (, this, ., compassFont, ,, that, ., compassFont, )]
[ObjectUtilities, ., equal, (, this, ., compassFont, ,, that, ., compassFont, )]
[ObjectUtilities]
[this, ., compassFont]
[this]
[that, ., compassFont]
[that]
[false]
[!, Arrays, ., equals, (, this, ., seriesNeedle, ,, that, ., seriesNeedle, )]
[Arrays, ., equals, (, this, ., seriesNeedle, ,, that, ., seriesNeedle, )]
[Arrays]
[this, ., seriesNeedle]
[this]
[that, ., seriesNeedle]
[that]
[false]
[getRevolutionDistance, (, ), !=, that, ., getRevolutionDistance, (, )]
[getRevolutionDistance, (, )]
[that, ., getRevolutionDistance, (, )]
[that]
[false]
[true]
[(, CompassPlot, ), super, ., clone, (, )]
[super, ., clone, (, )]
[super]
[this, ., circle1, !=, null]
[this, ., circle1]
[this]
[null]
[clone, ., circle1]
[clone]
[(, Ellipse2D, ), this, ., circle1, ., clone, (, )]
[this, ., circle1, ., clone, (, )]
[this, ., circle1]
[this]
[this, ., circle2, !=, null]
[this, ., circle2]
[this]
[null]
[clone, ., circle2]
[clone]
[(, Ellipse2D, ), this, ., circle2, ., clone, (, )]
[this, ., circle2, ., clone, (, )]
[this, ., circle2]
[this]
[this, ., a1, !=, null]
[this, ., a1]
[this]
[null]
[clone, ., a1]
[clone]
[(, Area, ), this, ., a1, ., clone, (, )]
[this, ., a1, ., clone, (, )]
[this, ., a1]
[this]
[this, ., a2, !=, null]
[this, ., a2]
[this]
[null]
[clone, ., a2]
[clone]
[(, Area, ), this, ., a2, ., clone, (, )]
[this, ., a2, ., clone, (, )]
[this, ., a2]
[this]
[this, ., rect1, !=, null]
[this, ., rect1]
[this]
[null]
[clone, ., rect1]
[clone]
[(, Rectangle2D, ), this, ., rect1, ., clone, (, )]
[this, ., rect1, ., clone, (, )]
[this, ., rect1]
[this]
[clone, ., datasets]
[clone]
[(, ValueDataset, [, ], ), this, ., datasets, ., clone, (, )]
[this, ., datasets, ., clone, (, )]
[this, ., datasets]
[this]
[clone, ., seriesNeedle]
[clone]
[(, MeterNeedle, [, ], ), this, ., seriesNeedle, ., clone, (, )]
[this, ., seriesNeedle, ., clone, (, )]
[this, ., seriesNeedle]
[this]
[0]
[i, <, this, ., datasets, ., length]
[i]
[this, ., datasets, ., length]
[this, ., datasets]
[this]
[++, i]
[i]
[clone, ., datasets, [, i, ], !=, null]
[clone, ., datasets, [, i, ]]
[clone, ., datasets]
[clone]
[i]
[null]
[clone, ., datasets, [, i, ], ., addChangeListener, (, clone, )]
[clone, ., datasets, [, i, ]]
[clone, ., datasets]
[clone]
[i]
[clone]
[clone]
[size, >, 0]
[size]
[0]
[this, ., revolutionDistance]
[this]
[size]
[this, ., revolutionDistance]
[this]
[stream, ., defaultWriteObject, (, )]
[stream]
[SerialUtilities, ., writePaint, (, this, ., rosePaint, ,, stream, )]
[SerialUtilities]
[this, ., rosePaint]
[this]
[stream]
[SerialUtilities, ., writePaint, (, this, ., roseCenterPaint, ,, stream, )]
[SerialUtilities]
[this, ., roseCenterPaint]
[this]
[stream]
[SerialUtilities, ., writePaint, (, this, ., roseHighlightPaint, ,, stream, )]
[SerialUtilities]
[this, ., roseHighlightPaint]
[this]
[stream]
[stream, ., defaultReadObject, (, )]
[stream]
[this, ., rosePaint]
[this]
[SerialUtilities, ., readPaint, (, stream, )]
[SerialUtilities]
[stream]
[this, ., roseCenterPaint]
[this]
[SerialUtilities, ., readPaint, (, stream, )]
[SerialUtilities]
[stream]
[this, ., roseHighlightPaint]
[this]
[SerialUtilities, ., readPaint, (, stream, )]
[SerialUtilities]
[stream]
