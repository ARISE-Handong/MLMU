[Double, ., NaN]
[Double]
[cachedNormalDeviate]
[Double, ., NaN]
[Double]
[setSeed, (, (, long, ), seed, )]
[(, long, ), seed]
[seed]
[4294967291l]
[0l]
[seed]
[combined]
[combined, *, prime, +, s]
[combined, *, prime]
[combined]
[prime]
[s]
[setSeed, (, combined, )]
[combined]
[0]
[bytesOut, <, bytes, ., length]
[bytesOut]
[bytes, ., length]
[bytes]
[nextInt, (, )]
[0]
[i, <, 3]
[i]
[3]
[i, ++]
[i]
[i, >, 0]
[i]
[0]
[randInt]
[randInt, >, >, 8]
[randInt]
[8]
[bytes, [, bytesOut, ++, ]]
[bytes]
[bytesOut, ++]
[bytesOut]
[(, byte, ), randInt]
[randInt]
[bytesOut, ==, bytes, ., length]
[bytesOut]
[bytes, ., length]
[bytes]
[(, int, ), (, (, 2d, *, nextDouble, (, ), -, 1d, ), *, Integer, ., MAX_VALUE, )]
[(, (, 2d, *, nextDouble, (, ), -, 1d, ), *, Integer, ., MAX_VALUE, )]
[(, 2d, *, nextDouble, (, ), -, 1d, ), *, Integer, ., MAX_VALUE]
[(, 2d, *, nextDouble, (, ), -, 1d, )]
[2d, *, nextDouble, (, ), -, 1d]
[2d, *, nextDouble, (, )]
[2d]
[nextDouble, (, )]
[1d]
[Integer, ., MAX_VALUE]
[Integer]
[n, <=, 0]
[n]
[0]
[new, NotStrictlyPositiveException, (, n, )]
[n]
[(, int, ), (, nextDouble, (, ), *, n, )]
[(, nextDouble, (, ), *, n, )]
[nextDouble, (, ), *, n]
[nextDouble, (, )]
[n]
[result, <, n, ?, result, :, n, -, 1]
[result, <, n]
[result]
[n]
[result]
[n, -, 1]
[n]
[1]
[(, long, ), (, (, 2d, *, nextDouble, (, ), -, 1d, ), *, Long, ., MAX_VALUE, )]
[(, (, 2d, *, nextDouble, (, ), -, 1d, ), *, Long, ., MAX_VALUE, )]
[(, 2d, *, nextDouble, (, ), -, 1d, ), *, Long, ., MAX_VALUE]
[(, 2d, *, nextDouble, (, ), -, 1d, )]
[2d, *, nextDouble, (, ), -, 1d]
[2d, *, nextDouble, (, )]
[2d]
[nextDouble, (, )]
[1d]
[Long, ., MAX_VALUE]
[Long]
[nextDouble, (, ), <=, 0.5]
[nextDouble, (, )]
[0.5]
[(, float, ), nextDouble, (, )]
[nextDouble, (, )]
[!, Double, ., isNaN, (, cachedNormalDeviate, )]
[Double, ., isNaN, (, cachedNormalDeviate, )]
[Double]
[cachedNormalDeviate]
[cachedNormalDeviate]
[cachedNormalDeviate]
[Double, ., NaN]
[Double]
[dev]
[0]
[0]
[1]
[s, >=, 1]
[s]
[1]
[v1]
[2, *, nextDouble, (, ), -, 1]
[2, *, nextDouble, (, )]
[2]
[nextDouble, (, )]
[1]
[v2]
[2, *, nextDouble, (, ), -, 1]
[2, *, nextDouble, (, )]
[2]
[nextDouble, (, )]
[1]
[s]
[v1, *, v1, +, v2, *, v2]
[v1, *, v1]
[v1]
[v1]
[v2, *, v2]
[v2]
[v2]
[s, !=, 0]
[s]
[0]
[s]
[FastMath, ., sqrt, (, -, 2, *, FastMath, ., log, (, s, ), /, s, )]
[FastMath]
[-, 2, *, FastMath, ., log, (, s, ), /, s]
[-, 2, *, FastMath, ., log, (, s, )]
[-, 2]
[2]
[FastMath, ., log, (, s, )]
[FastMath]
[s]
[s]
[cachedNormalDeviate]
[v2, *, s]
[v2]
[s]
[v1, *, s]
[v1]
[s]
