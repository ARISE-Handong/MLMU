[shape, instanceof, Cloneable]
[shape]
[(, Shape, ), ObjectUtilities, ., clone, (, shape, )]
[ObjectUtilities, ., clone, (, shape, )]
[ObjectUtilities]
[shape]
[null]
[result]
[s1, instanceof, Line2D, &&, s2, instanceof, Line2D]
[s1, instanceof, Line2D]
[s1]
[s2, instanceof, Line2D]
[s2]
[equal, (, (, Line2D, ), s1, ,, (, Line2D, ), s2, )]
[(, Line2D, ), s1]
[s1]
[(, Line2D, ), s2]
[s2]
[s1, instanceof, Ellipse2D, &&, s2, instanceof, Ellipse2D]
[s1, instanceof, Ellipse2D]
[s1]
[s2, instanceof, Ellipse2D]
[s2]
[equal, (, (, Ellipse2D, ), s1, ,, (, Ellipse2D, ), s2, )]
[(, Ellipse2D, ), s1]
[s1]
[(, Ellipse2D, ), s2]
[s2]
[s1, instanceof, Arc2D, &&, s2, instanceof, Arc2D]
[s1, instanceof, Arc2D]
[s1]
[s2, instanceof, Arc2D]
[s2]
[equal, (, (, Arc2D, ), s1, ,, (, Arc2D, ), s2, )]
[(, Arc2D, ), s1]
[s1]
[(, Arc2D, ), s2]
[s2]
[s1, instanceof, Polygon, &&, s2, instanceof, Polygon]
[s1, instanceof, Polygon]
[s1]
[s2, instanceof, Polygon]
[s2]
[equal, (, (, Polygon, ), s1, ,, (, Polygon, ), s2, )]
[(, Polygon, ), s1]
[s1]
[(, Polygon, ), s2]
[s2]
[s1, instanceof, GeneralPath, &&, s2, instanceof, GeneralPath]
[s1, instanceof, GeneralPath]
[s1]
[s2, instanceof, GeneralPath]
[s2]
[equal, (, (, GeneralPath, ), s1, ,, (, GeneralPath, ), s2, )]
[(, GeneralPath, ), s1]
[s1]
[(, GeneralPath, ), s2]
[s2]
[ObjectUtilities, ., equal, (, s1, ,, s2, )]
[ObjectUtilities]
[s1]
[s2]
[l1, ==, null]
[l1]
[null]
[(, l2, ==, null, )]
[l2, ==, null]
[l2]
[null]
[l2, ==, null]
[l2]
[null]
[false]
[!, l1, ., getP1, (, ), ., equals, (, l2, ., getP1, (, ), )]
[l1, ., getP1, (, ), ., equals, (, l2, ., getP1, (, ), )]
[l1, ., getP1, (, )]
[l1]
[l2, ., getP1, (, )]
[l2]
[false]
[!, l1, ., getP2, (, ), ., equals, (, l2, ., getP2, (, ), )]
[l1, ., getP2, (, ), ., equals, (, l2, ., getP2, (, ), )]
[l1, ., getP2, (, )]
[l1]
[l2, ., getP2, (, )]
[l2]
[false]
[true]
[e1, ==, null]
[e1]
[null]
[(, e2, ==, null, )]
[e2, ==, null]
[e2]
[null]
[e2, ==, null]
[e2]
[null]
[false]
[!, e1, ., getFrame, (, ), ., equals, (, e2, ., getFrame, (, ), )]
[e1, ., getFrame, (, ), ., equals, (, e2, ., getFrame, (, ), )]
[e1, ., getFrame, (, )]
[e1]
[e2, ., getFrame, (, )]
[e2]
[false]
[true]
[a1, ==, null]
[a1]
[null]
[(, a2, ==, null, )]
[a2, ==, null]
[a2]
[null]
[a2, ==, null]
[a2]
[null]
[false]
[!, a1, ., getFrame, (, ), ., equals, (, a2, ., getFrame, (, ), )]
[a1, ., getFrame, (, ), ., equals, (, a2, ., getFrame, (, ), )]
[a1, ., getFrame, (, )]
[a1]
[a2, ., getFrame, (, )]
[a2]
[false]
[a1, ., getAngleStart, (, ), !=, a2, ., getAngleStart, (, )]
[a1, ., getAngleStart, (, )]
[a1]
[a2, ., getAngleStart, (, )]
[a2]
[false]
[a1, ., getAngleExtent, (, ), !=, a2, ., getAngleExtent, (, )]
[a1, ., getAngleExtent, (, )]
[a1]
[a2, ., getAngleExtent, (, )]
[a2]
[false]
[a1, ., getArcType, (, ), !=, a2, ., getArcType, (, )]
[a1, ., getArcType, (, )]
[a1]
[a2, ., getArcType, (, )]
[a2]
[false]
[true]
[p1, ==, null]
[p1]
[null]
[(, p2, ==, null, )]
[p2, ==, null]
[p2]
[null]
[p2, ==, null]
[p2]
[null]
[false]
[p1, ., npoints, !=, p2, ., npoints]
[p1, ., npoints]
[p1]
[p2, ., npoints]
[p2]
[false]
[!, Arrays, ., equals, (, p1, ., xpoints, ,, p2, ., xpoints, )]
[Arrays, ., equals, (, p1, ., xpoints, ,, p2, ., xpoints, )]
[Arrays]
[p1, ., xpoints]
[p1]
[p2, ., xpoints]
[p2]
[false]
[!, Arrays, ., equals, (, p1, ., ypoints, ,, p2, ., ypoints, )]
[Arrays, ., equals, (, p1, ., ypoints, ,, p2, ., ypoints, )]
[Arrays]
[p1, ., ypoints]
[p1]
[p2, ., ypoints]
[p2]
[false]
[true]
[p1, ==, null]
[p1]
[null]
[(, p2, ==, null, )]
[p2, ==, null]
[p2]
[null]
[p2, ==, null]
[p2]
[null]
[false]
[p1, ., getWindingRule, (, ), !=, p2, ., getWindingRule, (, )]
[p1, ., getWindingRule, (, )]
[p1]
[p2, ., getWindingRule, (, )]
[p2]
[false]
[p1, ., getPathIterator, (, null, )]
[p1]
[null]
[p2, ., getPathIterator, (, null, )]
[p2]
[null]
[new, double, [, 6, ]]
[6]
[new, double, [, 6, ]]
[6]
[iterator1, ., isDone, (, ), &&, iterator2, ., isDone, (, )]
[iterator1, ., isDone, (, )]
[iterator1]
[iterator2, ., isDone, (, )]
[iterator2]
[!, done]
[done]
[iterator1, ., isDone, (, ), !=, iterator2, ., isDone, (, )]
[iterator1, ., isDone, (, )]
[iterator1]
[iterator2, ., isDone, (, )]
[iterator2]
[false]
[iterator1, ., currentSegment, (, d1, )]
[iterator1]
[d1]
[iterator2, ., currentSegment, (, d2, )]
[iterator2]
[d2]
[seg1, !=, seg2]
[seg1]
[seg2]
[false]
[!, Arrays, ., equals, (, d1, ,, d2, )]
[Arrays, ., equals, (, d1, ,, d2, )]
[Arrays]
[d1]
[d2]
[false]
[iterator1, ., next, (, )]
[iterator1]
[iterator2, ., next, (, )]
[iterator2]
[done]
[iterator1, ., isDone, (, ), &&, iterator2, ., isDone, (, )]
[iterator1, ., isDone, (, )]
[iterator1]
[iterator2, ., isDone, (, )]
[iterator2]
[true]
[shape, ==, null]
[shape]
[null]
[new, IllegalArgumentException, (, "Null 'shape' argument.", )]
["Null 'shape' argument."]
[AffineTransform, ., getTranslateInstance, (, transX, ,, transY, )]
[AffineTransform]
[transX]
[transY]
[transform, ., createTransformedShape, (, shape, )]
[transform]
[shape]
[shape, ==, null]
[shape]
[null]
[new, IllegalArgumentException, (, "Null 'shape' argument.", )]
["Null 'shape' argument."]
[anchor, ==, null]
[anchor]
[null]
[new, IllegalArgumentException, (, "Null 'anchor' argument.", )]
["Null 'anchor' argument."]
[RectangleAnchor, ., coordinates, (, shape, ., getBounds2D, (, ), ,, anchor, )]
[RectangleAnchor]
[shape, ., getBounds2D, (, )]
[shape]
[anchor]
[AffineTransform, ., getTranslateInstance, (, locationX, -, anchorPoint, ., getX, (, ), ,, locationY, -, anchorPoint, ., getY, (, ), )]
[AffineTransform]
[locationX, -, anchorPoint, ., getX, (, )]
[locationX]
[anchorPoint, ., getX, (, )]
[anchorPoint]
[locationY, -, anchorPoint, ., getY, (, )]
[locationY]
[anchorPoint, ., getY, (, )]
[anchorPoint]
[transform, ., createTransformedShape, (, shape, )]
[transform]
[shape]
[base, ==, null]
[base]
[null]
[null]
[AffineTransform, ., getRotateInstance, (, angle, ,, x, ,, y, )]
[AffineTransform]
[angle]
[x]
[y]
[rotate, ., createTransformedShape, (, base, )]
[rotate]
[base]
[result]
[g2, ., getTransform, (, )]
[g2]
[AffineTransform, ., getRotateInstance, (, angle, ,, x, ,, y, )]
[AffineTransform]
[angle]
[x]
[y]
[g2, ., transform, (, rotate, )]
[g2]
[rotate]
[g2, ., draw, (, shape, )]
[g2]
[shape]
[g2, ., setTransform, (, saved, )]
[g2]
[saved]
[(, float, ), Math, ., pow, (, 2.0, ,, 0.5, )]
[Math, ., pow, (, 2.0, ,, 0.5, )]
[Math]
[2.0]
[0.5]
[new, GeneralPath, (, )]
[p0, ., moveTo, (, -, l, -, t, ,, -, l, +, t, )]
[p0]
[-, l, -, t]
[-, l]
[l]
[t]
[-, l, +, t]
[-, l]
[l]
[t]
[p0, ., lineTo, (, -, l, +, t, ,, -, l, -, t, )]
[p0]
[-, l, +, t]
[-, l]
[l]
[t]
[-, l, -, t]
[-, l]
[l]
[t]
[p0, ., lineTo, (, 0.0f, ,, -, t, *, SQRT2, )]
[p0]
[0.0f]
[-, t, *, SQRT2]
[-, t]
[t]
[SQRT2]
[p0, ., lineTo, (, l, -, t, ,, -, l, -, t, )]
[p0]
[l, -, t]
[l]
[t]
[-, l, -, t]
[-, l]
[l]
[t]
[p0, ., lineTo, (, l, +, t, ,, -, l, +, t, )]
[p0]
[l, +, t]
[l]
[t]
[-, l, +, t]
[-, l]
[l]
[t]
[p0, ., lineTo, (, t, *, SQRT2, ,, 0.0f, )]
[p0]
[t, *, SQRT2]
[t]
[SQRT2]
[0.0f]
[p0, ., lineTo, (, l, +, t, ,, l, -, t, )]
[p0]
[l, +, t]
[l]
[t]
[l, -, t]
[l]
[t]
[p0, ., lineTo, (, l, -, t, ,, l, +, t, )]
[p0]
[l, -, t]
[l]
[t]
[l, +, t]
[l]
[t]
[p0, ., lineTo, (, 0.0f, ,, t, *, SQRT2, )]
[p0]
[0.0f]
[t, *, SQRT2]
[t]
[SQRT2]
[p0, ., lineTo, (, -, l, +, t, ,, l, +, t, )]
[p0]
[-, l, +, t]
[-, l]
[l]
[t]
[l, +, t]
[l]
[t]
[p0, ., lineTo, (, -, l, -, t, ,, l, -, t, )]
[p0]
[-, l, -, t]
[-, l]
[l]
[t]
[l, -, t]
[l]
[t]
[p0, ., lineTo, (, -, t, *, SQRT2, ,, 0.0f, )]
[p0]
[-, t, *, SQRT2]
[-, t]
[t]
[SQRT2]
[0.0f]
[p0, ., closePath, (, )]
[p0]
[p0]
[new, GeneralPath, (, )]
[p0, ., moveTo, (, -, l, ,, t, )]
[p0]
[-, l]
[l]
[t]
[p0, ., lineTo, (, -, t, ,, t, )]
[p0]
[-, t]
[t]
[t]
[p0, ., lineTo, (, -, t, ,, l, )]
[p0]
[-, t]
[t]
[l]
[p0, ., lineTo, (, t, ,, l, )]
[p0]
[t]
[l]
[p0, ., lineTo, (, t, ,, t, )]
[p0]
[t]
[t]
[p0, ., lineTo, (, l, ,, t, )]
[p0]
[l]
[t]
[p0, ., lineTo, (, l, ,, -, t, )]
[p0]
[l]
[-, t]
[t]
[p0, ., lineTo, (, t, ,, -, t, )]
[p0]
[t]
[-, t]
[t]
[p0, ., lineTo, (, t, ,, -, l, )]
[p0]
[t]
[-, l]
[l]
[p0, ., lineTo, (, -, t, ,, -, l, )]
[p0]
[-, t]
[t]
[-, l]
[l]
[p0, ., lineTo, (, -, t, ,, -, t, )]
[p0]
[-, t]
[t]
[-, t]
[t]
[p0, ., lineTo, (, -, l, ,, -, t, )]
[p0]
[-, l]
[l]
[-, t]
[t]
[p0, ., closePath, (, )]
[p0]
[p0]
[new, GeneralPath, (, )]
[p0, ., moveTo, (, 0.0f, ,, -, s, )]
[p0]
[0.0f]
[-, s]
[s]
[p0, ., lineTo, (, s, ,, 0.0f, )]
[p0]
[s]
[0.0f]
[p0, ., lineTo, (, 0.0f, ,, s, )]
[p0]
[0.0f]
[s]
[p0, ., lineTo, (, -, s, ,, 0.0f, )]
[p0]
[-, s]
[s]
[0.0f]
[p0, ., closePath, (, )]
[p0]
[p0]
[new, GeneralPath, (, )]
[p0, ., moveTo, (, 0.0f, ,, -, s, )]
[p0]
[0.0f]
[-, s]
[s]
[p0, ., lineTo, (, s, ,, s, )]
[p0]
[s]
[s]
[p0, ., lineTo, (, -, s, ,, s, )]
[p0]
[-, s]
[s]
[s]
[p0, ., closePath, (, )]
[p0]
[p0]
[new, GeneralPath, (, )]
[p0, ., moveTo, (, 0.0f, ,, s, )]
[p0]
[0.0f]
[s]
[p0, ., lineTo, (, s, ,, -, s, )]
[p0]
[s]
[-, s]
[s]
[p0, ., lineTo, (, -, s, ,, -, s, )]
[p0]
[-, s]
[s]
[-, s]
[s]
[p0, ., closePath, (, )]
[p0]
[p0]
[new, GeneralPath, (, )]
[(, float, ), line, ., getX1, (, )]
[line, ., getX1, (, )]
[line]
[(, float, ), line, ., getX2, (, )]
[line, ., getX2, (, )]
[line]
[(, float, ), line, ., getY1, (, )]
[line, ., getY1, (, )]
[line]
[(, float, ), line, ., getY2, (, )]
[line, ., getY2, (, )]
[line]
[(, x2, -, x1, ), !=, 0.0]
[(, x2, -, x1, )]
[x2, -, x1]
[x2]
[x1]
[0.0]
[Math, ., atan, (, (, y2, -, y1, ), /, (, x2, -, x1, ), )]
[Math]
[(, y2, -, y1, ), /, (, x2, -, x1, )]
[(, y2, -, y1, )]
[y2, -, y1]
[y2]
[y1]
[(, x2, -, x1, )]
[x2, -, x1]
[x2]
[x1]
[(, float, ), Math, ., sin, (, theta, ), *, width]
[(, float, ), Math, ., sin, (, theta, )]
[Math, ., sin, (, theta, )]
[Math]
[theta]
[width]
[(, float, ), Math, ., cos, (, theta, ), *, width]
[(, float, ), Math, ., cos, (, theta, )]
[Math, ., cos, (, theta, )]
[Math]
[theta]
[width]
[result, ., moveTo, (, x1, -, dx, ,, y1, +, dy, )]
[result]
[x1, -, dx]
[x1]
[dx]
[y1, +, dy]
[y1]
[dy]
[result, ., lineTo, (, x1, +, dx, ,, y1, -, dy, )]
[result]
[x1, +, dx]
[x1]
[dx]
[y1, -, dy]
[y1]
[dy]
[result, ., lineTo, (, x2, +, dx, ,, y2, -, dy, )]
[result]
[x2, +, dx]
[x2]
[dx]
[y2, -, dy]
[y2]
[dy]
[result, ., lineTo, (, x2, -, dx, ,, y2, +, dy, )]
[result]
[x2, -, dx]
[x2]
[dx]
[y2, +, dy]
[y2]
[dy]
[result, ., closePath, (, )]
[result]
[result, ., moveTo, (, x1, -, width, /, 2.0f, ,, y1, )]
[result]
[x1, -, width, /, 2.0f]
[x1]
[width, /, 2.0f]
[width]
[2.0f]
[y1]
[result, ., lineTo, (, x1, +, width, /, 2.0f, ,, y1, )]
[result]
[x1, +, width, /, 2.0f]
[x1]
[width, /, 2.0f]
[width]
[2.0f]
[y1]
[result, ., lineTo, (, x2, +, width, /, 2.0f, ,, y2, )]
[result]
[x2, +, width, /, 2.0f]
[x2]
[width, /, 2.0f]
[width]
[2.0f]
[y2]
[result, ., lineTo, (, x2, -, width, /, 2.0f, ,, y2, )]
[result]
[x2, -, width, /, 2.0f]
[x2]
[width, /, 2.0f]
[width]
[2.0f]
[y2]
[result, ., closePath, (, )]
[result]
[result]
[x]
[Math, ., max, (, area, ., getMinX, (, ), ,, Math, ., min, (, x, ,, area, ., getMaxX, (, ), ), )]
[Math]
[area, ., getMinX, (, )]
[area]
[Math, ., min, (, x, ,, area, ., getMaxX, (, ), )]
[Math]
[x]
[area, ., getMaxX, (, )]
[area]
[y]
[Math, ., max, (, area, ., getMinY, (, ), ,, Math, ., min, (, y, ,, area, ., getMaxY, (, ), ), )]
[Math]
[area, ., getMinY, (, )]
[area]
[Math, ., min, (, y, ,, area, ., getMaxY, (, ), )]
[Math]
[y]
[area, ., getMaxY, (, )]
[area]
[new, Point2D, ., Double, (, x, ,, y, )]
[x]
[y]
[rect1, ., getX, (, )]
[rect1]
[rect1, ., getY, (, )]
[rect1]
[rect2, ., getX, (, )]
[rect2]
[rect2, ., getY, (, )]
[rect2]
[rect2, ., getWidth, (, )]
[rect2]
[rect2, ., getHeight, (, )]
[rect2]
[(, (, x, >=, x0, ), &&, (, y, >=, y0, ), &&, (, (, x, +, w, ), <=, (, x0, +, rect1, ., getWidth, (, ), ), ), &&, (, (, y, +, h, ), <=, (, y0, +, rect1, ., getHeight, (, ), ), ), )]
[(, x, >=, x0, ), &&, (, y, >=, y0, ), &&, (, (, x, +, w, ), <=, (, x0, +, rect1, ., getWidth, (, ), ), ), &&, (, (, y, +, h, ), <=, (, y0, +, rect1, ., getHeight, (, ), ), )]
[(, x, >=, x0, ), &&, (, y, >=, y0, ), &&, (, (, x, +, w, ), <=, (, x0, +, rect1, ., getWidth, (, ), ), )]
[(, x, >=, x0, ), &&, (, y, >=, y0, )]
[(, x, >=, x0, )]
[x, >=, x0]
[x]
[x0]
[(, y, >=, y0, )]
[y, >=, y0]
[y]
[y0]
[(, (, x, +, w, ), <=, (, x0, +, rect1, ., getWidth, (, ), ), )]
[(, x, +, w, ), <=, (, x0, +, rect1, ., getWidth, (, ), )]
[(, x, +, w, )]
[x, +, w]
[x]
[w]
[(, x0, +, rect1, ., getWidth, (, ), )]
[x0, +, rect1, ., getWidth, (, )]
[x0]
[rect1, ., getWidth, (, )]
[rect1]
[(, (, y, +, h, ), <=, (, y0, +, rect1, ., getHeight, (, ), ), )]
[(, y, +, h, ), <=, (, y0, +, rect1, ., getHeight, (, ), )]
[(, y, +, h, )]
[y, +, h]
[y]
[h]
[(, y0, +, rect1, ., getHeight, (, ), )]
[y0, +, rect1, ., getHeight, (, )]
[y0]
[rect1, ., getHeight, (, )]
[rect1]
[rect1, ., getX, (, )]
[rect1]
[rect1, ., getY, (, )]
[rect1]
[rect2, ., getX, (, )]
[rect2]
[rect2, ., getWidth, (, )]
[rect2]
[rect2, ., getY, (, )]
[rect2]
[rect2, ., getHeight, (, )]
[rect2]
[(, x, +, width, >=, x0, &&, y, +, height, >=, y0, &&, x, <=, x0, +, rect1, ., getWidth, (, ), &&, y, <=, y0, +, rect1, ., getHeight, (, ), )]
[x, +, width, >=, x0, &&, y, +, height, >=, y0, &&, x, <=, x0, +, rect1, ., getWidth, (, ), &&, y, <=, y0, +, rect1, ., getHeight, (, )]
[x, +, width, >=, x0, &&, y, +, height, >=, y0, &&, x, <=, x0, +, rect1, ., getWidth, (, )]
[x, +, width, >=, x0, &&, y, +, height, >=, y0]
[x, +, width, >=, x0]
[x, +, width]
[x]
[width]
[x0]
[y, +, height, >=, y0]
[y, +, height]
[y]
[height]
[y0]
[x, <=, x0, +, rect1, ., getWidth, (, )]
[x]
[x0, +, rect1, ., getWidth, (, )]
[x0]
[rect1, ., getWidth, (, )]
[rect1]
[y, <=, y0, +, rect1, ., getHeight, (, )]
[y]
[y0, +, rect1, ., getHeight, (, )]
[y0]
[rect1, ., getHeight, (, )]
[rect1]
[(, x, >=, rect, ., getMinX, (, ), &&, x, <=, rect, ., getMaxX, (, ), &&, y, >=, rect, ., getMinY, (, ), &&, y, <=, rect, ., getMaxY, (, ), )]
[x, >=, rect, ., getMinX, (, ), &&, x, <=, rect, ., getMaxX, (, ), &&, y, >=, rect, ., getMinY, (, ), &&, y, <=, rect, ., getMaxY, (, )]
[x, >=, rect, ., getMinX, (, ), &&, x, <=, rect, ., getMaxX, (, ), &&, y, >=, rect, ., getMinY, (, )]
[x, >=, rect, ., getMinX, (, ), &&, x, <=, rect, ., getMaxX, (, )]
[x, >=, rect, ., getMinX, (, )]
[x]
[rect, ., getMinX, (, )]
[rect]
[x, <=, rect, ., getMaxX, (, )]
[x]
[rect, ., getMaxX, (, )]
[rect]
[y, >=, rect, ., getMinY, (, )]
[y]
[rect, ., getMinY, (, )]
[rect]
[y, <=, rect, ., getMaxY, (, )]
[y]
[rect, ., getMaxY, (, )]
[rect]
[line, ., getX1, (, )]
[line]
[line, ., getY1, (, )]
[line]
[line, ., getX2, (, )]
[line]
[line, ., getY2, (, )]
[line]
[rect, ., getMinX, (, )]
[rect]
[rect, ., getMaxX, (, )]
[rect]
[rect, ., getMinY, (, )]
[rect]
[rect, ., getMaxY, (, )]
[rect]
[rect, ., outcode, (, x1, ,, y1, )]
[rect]
[x1]
[y1]
[rect, ., outcode, (, x2, ,, y2, )]
[rect]
[x2]
[y2]
[(, f1, |, f2, ), !=, 0]
[(, f1, |, f2, )]
[f1, |, f2]
[f1]
[f2]
[0]
[(, f1, &, f2, ), !=, 0]
[(, f1, &, f2, )]
[f1, &, f2]
[f1]
[f2]
[0]
[false]
[(, x2, -, x1, )]
[x2, -, x1]
[x2]
[x1]
[(, y2, -, y1, )]
[y2, -, y1]
[y2]
[y1]
[f1, !=, 0]
[f1]
[0]
[(, f1, &, Rectangle2D, ., OUT_LEFT, ), ==, Rectangle2D, ., OUT_LEFT, &&, dx, !=, 0.0]
[(, f1, &, Rectangle2D, ., OUT_LEFT, ), ==, Rectangle2D, ., OUT_LEFT]
[(, f1, &, Rectangle2D, ., OUT_LEFT, )]
[f1, &, Rectangle2D, ., OUT_LEFT]
[f1]
[Rectangle2D, ., OUT_LEFT]
[Rectangle2D]
[Rectangle2D, ., OUT_LEFT]
[Rectangle2D]
[dx, !=, 0.0]
[dx]
[0.0]
[y1]
[y1, +, (, minX, -, x1, ), *, dy, /, dx]
[y1]
[(, minX, -, x1, ), *, dy, /, dx]
[(, minX, -, x1, ), *, dy]
[(, minX, -, x1, )]
[minX, -, x1]
[minX]
[x1]
[dy]
[dx]
[x1]
[minX]
[(, f1, &, Rectangle2D, ., OUT_RIGHT, ), ==, Rectangle2D, ., OUT_RIGHT, &&, dx, !=, 0.0]
[(, f1, &, Rectangle2D, ., OUT_RIGHT, ), ==, Rectangle2D, ., OUT_RIGHT]
[(, f1, &, Rectangle2D, ., OUT_RIGHT, )]
[f1, &, Rectangle2D, ., OUT_RIGHT]
[f1]
[Rectangle2D, ., OUT_RIGHT]
[Rectangle2D]
[Rectangle2D, ., OUT_RIGHT]
[Rectangle2D]
[dx, !=, 0.0]
[dx]
[0.0]
[y1]
[y1, +, (, maxX, -, x1, ), *, dy, /, dx]
[y1]
[(, maxX, -, x1, ), *, dy, /, dx]
[(, maxX, -, x1, ), *, dy]
[(, maxX, -, x1, )]
[maxX, -, x1]
[maxX]
[x1]
[dy]
[dx]
[x1]
[maxX]
[(, f1, &, Rectangle2D, ., OUT_BOTTOM, ), ==, Rectangle2D, ., OUT_BOTTOM, &&, dy, !=, 0.0]
[(, f1, &, Rectangle2D, ., OUT_BOTTOM, ), ==, Rectangle2D, ., OUT_BOTTOM]
[(, f1, &, Rectangle2D, ., OUT_BOTTOM, )]
[f1, &, Rectangle2D, ., OUT_BOTTOM]
[f1]
[Rectangle2D, ., OUT_BOTTOM]
[Rectangle2D]
[Rectangle2D, ., OUT_BOTTOM]
[Rectangle2D]
[dy, !=, 0.0]
[dy]
[0.0]
[x1]
[x1, +, (, maxY, -, y1, ), *, dx, /, dy]
[x1]
[(, maxY, -, y1, ), *, dx, /, dy]
[(, maxY, -, y1, ), *, dx]
[(, maxY, -, y1, )]
[maxY, -, y1]
[maxY]
[y1]
[dx]
[dy]
[y1]
[maxY]
[(, f1, &, Rectangle2D, ., OUT_TOP, ), ==, Rectangle2D, ., OUT_TOP, &&, dy, !=, 0.0]
[(, f1, &, Rectangle2D, ., OUT_TOP, ), ==, Rectangle2D, ., OUT_TOP]
[(, f1, &, Rectangle2D, ., OUT_TOP, )]
[f1, &, Rectangle2D, ., OUT_TOP]
[f1]
[Rectangle2D, ., OUT_TOP]
[Rectangle2D]
[Rectangle2D, ., OUT_TOP]
[Rectangle2D]
[dy, !=, 0.0]
[dy]
[0.0]
[x1]
[x1, +, (, minY, -, y1, ), *, dx, /, dy]
[x1]
[(, minY, -, y1, ), *, dx, /, dy]
[(, minY, -, y1, ), *, dx]
[(, minY, -, y1, )]
[minY, -, y1]
[minY]
[y1]
[dx]
[dy]
[y1]
[minY]
[f1]
[rect, ., outcode, (, x1, ,, y1, )]
[rect]
[x1]
[y1]
[f2, !=, 0]
[f2]
[0]
[(, f2, &, Rectangle2D, ., OUT_LEFT, ), ==, Rectangle2D, ., OUT_LEFT, &&, dx, !=, 0.0]
[(, f2, &, Rectangle2D, ., OUT_LEFT, ), ==, Rectangle2D, ., OUT_LEFT]
[(, f2, &, Rectangle2D, ., OUT_LEFT, )]
[f2, &, Rectangle2D, ., OUT_LEFT]
[f2]
[Rectangle2D, ., OUT_LEFT]
[Rectangle2D]
[Rectangle2D, ., OUT_LEFT]
[Rectangle2D]
[dx, !=, 0.0]
[dx]
[0.0]
[y2]
[y2, +, (, minX, -, x2, ), *, dy, /, dx]
[y2]
[(, minX, -, x2, ), *, dy, /, dx]
[(, minX, -, x2, ), *, dy]
[(, minX, -, x2, )]
[minX, -, x2]
[minX]
[x2]
[dy]
[dx]
[x2]
[minX]
[(, f2, &, Rectangle2D, ., OUT_RIGHT, ), ==, Rectangle2D, ., OUT_RIGHT, &&, dx, !=, 0.0]
[(, f2, &, Rectangle2D, ., OUT_RIGHT, ), ==, Rectangle2D, ., OUT_RIGHT]
[(, f2, &, Rectangle2D, ., OUT_RIGHT, )]
[f2, &, Rectangle2D, ., OUT_RIGHT]
[f2]
[Rectangle2D, ., OUT_RIGHT]
[Rectangle2D]
[Rectangle2D, ., OUT_RIGHT]
[Rectangle2D]
[dx, !=, 0.0]
[dx]
[0.0]
[y2]
[y2, +, (, maxX, -, x2, ), *, dy, /, dx]
[y2]
[(, maxX, -, x2, ), *, dy, /, dx]
[(, maxX, -, x2, ), *, dy]
[(, maxX, -, x2, )]
[maxX, -, x2]
[maxX]
[x2]
[dy]
[dx]
[x2]
[maxX]
[(, f2, &, Rectangle2D, ., OUT_BOTTOM, ), ==, Rectangle2D, ., OUT_BOTTOM, &&, dy, !=, 0.0]
[(, f2, &, Rectangle2D, ., OUT_BOTTOM, ), ==, Rectangle2D, ., OUT_BOTTOM]
[(, f2, &, Rectangle2D, ., OUT_BOTTOM, )]
[f2, &, Rectangle2D, ., OUT_BOTTOM]
[f2]
[Rectangle2D, ., OUT_BOTTOM]
[Rectangle2D]
[Rectangle2D, ., OUT_BOTTOM]
[Rectangle2D]
[dy, !=, 0.0]
[dy]
[0.0]
[x2]
[x2, +, (, maxY, -, y2, ), *, dx, /, dy]
[x2]
[(, maxY, -, y2, ), *, dx, /, dy]
[(, maxY, -, y2, ), *, dx]
[(, maxY, -, y2, )]
[maxY, -, y2]
[maxY]
[y2]
[dx]
[dy]
[y2]
[maxY]
[(, f2, &, Rectangle2D, ., OUT_TOP, ), ==, Rectangle2D, ., OUT_TOP, &&, dy, !=, 0.0]
[(, f2, &, Rectangle2D, ., OUT_TOP, ), ==, Rectangle2D, ., OUT_TOP]
[(, f2, &, Rectangle2D, ., OUT_TOP, )]
[f2, &, Rectangle2D, ., OUT_TOP]
[f2]
[Rectangle2D, ., OUT_TOP]
[Rectangle2D]
[Rectangle2D, ., OUT_TOP]
[Rectangle2D]
[dy, !=, 0.0]
[dy]
[0.0]
[x2]
[x2, +, (, minY, -, y2, ), *, dx, /, dy]
[x2]
[(, minY, -, y2, ), *, dx, /, dy]
[(, minY, -, y2, ), *, dx]
[(, minY, -, y2, )]
[minY, -, y2]
[minY]
[y2]
[dx]
[dy]
[y2]
[minY]
[f2]
[rect, ., outcode, (, x2, ,, y2, )]
[rect]
[x2]
[y2]
[line, ., setLine, (, x1, ,, y1, ,, x2, ,, y2, )]
[line]
[x1]
[y1]
[x2]
[y2]
[true]
