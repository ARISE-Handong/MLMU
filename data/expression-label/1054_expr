[compiler]
[Lists, ., <, Callback, >, newArrayList, (, callbacks, )]
[Lists]
[callbacks]
[this, ., compiler]
[this]
[compiler]
[this, ., callbacks]
[this]
[new, CallbackWrapper, [, callbacks, ., size, (, ), ]]
[callbacks, ., size, (, )]
[callbacks]
[0]
[i, <, callbacks, ., size, (, )]
[i]
[callbacks, ., size, (, )]
[callbacks]
[i, ++]
[i]
[this, ., callbacks, [, i, ]]
[this, ., callbacks]
[this]
[i]
[new, CallbackWrapper, (, callbacks, ., get, (, i, ), )]
[callbacks, ., get, (, i, )]
[callbacks]
[i]
[callbacks, ., size, (, ), ==, 1]
[callbacks, ., size, (, )]
[callbacks]
[1]
[NodeTraversal, ., traverse, (, compiler, ,, root, ,, callbacks, ., get, (, 0, ), )]
[NodeTraversal]
[compiler]
[root]
[callbacks, ., get, (, 0, )]
[callbacks]
[0]
[(, new, CombinedCompilerPass, (, compiler, ,, callbacks, ), ), ., process, (, null, ,, root, )]
[(, new, CombinedCompilerPass, (, compiler, ,, callbacks, ), )]
[new, CombinedCompilerPass, (, compiler, ,, callbacks, )]
[compiler]
[callbacks]
[null]
[root]
[null]
[this, ., callback]
[this]
[callback]
[callback, instanceof, ScopedCallback]
[callback]
[scopedCallback]
[(, ScopedCallback, ), callback]
[callback]
[scopedCallback]
[null]
[isActive, (, )]
[callback, ., visit, (, t, ,, n, ,, parent, )]
[callback]
[t]
[n]
[parent]
[waiting, ==, n]
[waiting]
[n]
[waiting]
[null]
[isActive, (, ), &&, !, callback, ., shouldTraverse, (, t, ,, n, ,, parent, )]
[isActive, (, )]
[!, callback, ., shouldTraverse, (, t, ,, n, ,, parent, )]
[callback, ., shouldTraverse, (, t, ,, n, ,, parent, )]
[callback]
[t]
[n]
[parent]
[waiting]
[n]
[isActive, (, ), &&, scopedCallback, !=, null]
[isActive, (, )]
[scopedCallback, !=, null]
[scopedCallback]
[null]
[scopedCallback, ., enterScope, (, t, )]
[scopedCallback]
[t]
[isActive, (, ), &&, scopedCallback, !=, null]
[isActive, (, )]
[scopedCallback, !=, null]
[scopedCallback]
[null]
[scopedCallback, ., exitScope, (, t, )]
[scopedCallback]
[t]
[waiting, ==, null]
[waiting]
[null]
[NodeTraversal, ., traverse, (, compiler, ,, root, ,, this, )]
[NodeTraversal]
[compiler]
[root]
[this]
[NodeTraversal, ., traverse, (, compiler, ,, scriptRoot, ,, this, )]
[NodeTraversal]
[compiler]
[scriptRoot]
[this]
[callbacks]
[callback, ., shouldTraverseIfActive, (, t, ,, n, ,, parent, )]
[callback]
[t]
[n]
[parent]
[true]
[callbacks]
[callback, ., visitOrMaybeActivate, (, t, ,, n, ,, parent, )]
[callback]
[t]
[n]
[parent]
[callbacks]
[callback, ., enterScopeIfActive, (, t, )]
[callback]
[t]
[callbacks]
[callback, ., exitScopeIfActive, (, t, )]
[callback]
[t]
