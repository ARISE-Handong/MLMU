[-, 1]
[1]
[sourceString]
[0]
[sourceString]
[lineno]
[0]
[Preconditions, ., checkNotNull, (, sourceString, )]
[Preconditions]
[sourceString]
[this, ., lineno]
[this]
[lineno]
[this, ., sourceString]
[this]
[sourceString]
[this, ., sourceEnd]
[this]
[sourceString, ., length, (, )]
[sourceString]
[this, ., sourceCursor]
[this]
[this, ., cursor]
[this]
[0]
[this, ., initLineno]
[this]
[lineno]
[this, ., initCharno]
[this]
[initCharno]
[@, SuppressWarnings, (, "fallthrough", )]
["fallthrough"]
[stringBufferTop]
[0]
[charno]
[-, 1]
[1]
[c]
[getChar, (, )]
[c, ==, EOF_CHAR]
[c]
[EOF_CHAR]
[JsDocToken, ., EOF]
[JsDocToken]
[c, ==, '\n']
[c]
['\n']
[JsDocToken, ., EOL]
[JsDocToken]
[!, isJSSpace, (, c, )]
[isJSSpace, (, c, )]
[c]
[c]
['@']
[c]
[getChar, (, )]
[isAlpha, (, c, )]
[c]
[addToString, (, c, )]
[c]
[ungetChar, (, c, )]
[c]
[this, ., string]
[this]
[getStringFromBuffer, (, )]
[stringBufferTop]
[0]
[JsDocToken, ., ANNOTATION]
[JsDocToken]
[true]
['*']
[matchChar, (, '/', )]
['/']
[JsDocToken, ., EOC]
[JsDocToken]
[JsDocToken, ., STAR]
[JsDocToken]
[',']
[JsDocToken, ., COMMA]
[JsDocToken]
['>']
[JsDocToken, ., GT]
[JsDocToken]
['(']
[JsDocToken, ., LP]
[JsDocToken]
[')']
[JsDocToken, ., RP]
[JsDocToken]
['{']
[JsDocToken, ., LC]
[JsDocToken]
['}']
[JsDocToken, ., RC]
[JsDocToken]
['[']
[JsDocToken, ., LB]
[JsDocToken]
[']']
[JsDocToken, ., RB]
[JsDocToken]
['?']
[JsDocToken, ., QMARK]
[JsDocToken]
['!']
[JsDocToken, ., BANG]
[JsDocToken]
[':']
[JsDocToken, ., COLON]
[JsDocToken]
['=']
[JsDocToken, ., EQUALS]
[JsDocToken]
['|']
[matchChar, (, '|', )]
['|']
[JsDocToken, ., PIPE]
[JsDocToken]
['.']
[c]
[getChar, (, )]
[c, ==, '<']
[c]
['<']
[JsDocToken, ., LT]
[JsDocToken]
[c, ==, '.']
[c]
['.']
[c]
[getChar, (, )]
[c, ==, '.']
[c]
['.']
[JsDocToken, ., ELLIPSIS]
[JsDocToken]
[addToString, (, '.', )]
['.']
[ungetBuffer, [, ungetCursor, ++, ]]
[ungetBuffer]
[ungetCursor, ++]
[ungetCursor]
[c]
[c]
['.']
[c]
[addToString, (, c, )]
[c]
[getChar, (, )]
[!, isJSDocString, (, c2, )]
[isJSDocString, (, c2, )]
[c2]
[ungetChar, (, c2, )]
[c2]
[this, ., string]
[this]
[getStringFromBuffer, (, )]
[stringBufferTop]
[0]
[JsDocToken, ., STRING]
[JsDocToken]
[c1]
[c2]
[c2]
[getChar, (, )]
[c1, ==, '.', &&, c2, ==, '<']
[c1, ==, '.']
[c1]
['.']
[c2, ==, '<']
[c2]
['<']
[ungetChar, (, c2, )]
[c2]
[ungetChar, (, c1, )]
[c1]
[this, ., string]
[this]
[getStringFromBuffer, (, )]
[stringBufferTop]
[0]
[JsDocToken, ., STRING]
[JsDocToken]
[isJSDocString, (, c2, )]
[c2]
[addToString, (, c1, )]
[c1]
[ungetChar, (, c2, )]
[c2]
[addToString, (, c1, )]
[c1]
[this, ., string]
[this]
[getStringFromBuffer, (, )]
[stringBufferTop]
[0]
[JsDocToken, ., STRING]
[JsDocToken]
[true]
[@, SuppressWarnings, (, "fallthrough", )]
["fallthrough"]
[c]
[getChar, (, )]
[c]
['*']
[peekChar, (, ), !=, '/']
[peekChar, (, )]
['/']
[addToString, (, c, )]
[c]
[EOF_CHAR]
['\n']
[ungetChar, (, c, )]
[c]
[this, ., string]
[this]
[getStringFromBuffer, (, )]
[stringBufferTop]
[0]
[this, ., string]
[this]
[addToString, (, c, )]
[c]
[lineno]
[lineno, ==, initLineno, ?, initCharno, +, charno, :, charno]
[lineno, ==, initLineno]
[lineno]
[initLineno]
[initCharno, +, charno]
[initCharno]
[charno]
[charno]
[string]
[hitEOF]
[tokenEnd]
[cursor]
[new, String, (, stringBuffer, ,, 0, ,, stringBufferTop, )]
[stringBuffer]
[0]
[stringBufferTop]
[stringBufferTop]
[N, ==, stringBuffer, ., length]
[N]
[stringBuffer, ., length]
[stringBuffer]
[new, char, [, stringBuffer, ., length, *, 2, ]]
[stringBuffer, ., length, *, 2]
[stringBuffer, ., length]
[stringBuffer]
[2]
[System, ., arraycopy, (, stringBuffer, ,, 0, ,, tmp, ,, 0, ,, N, )]
[System]
[stringBuffer]
[0]
[tmp]
[0]
[N]
[stringBuffer]
[tmp]
[stringBuffer, [, N, ]]
[stringBuffer]
[N]
[(, char, ), c]
[c]
[stringBufferTop]
[N, +, 1]
[N]
[1]
[(, !, (, ungetCursor, !=, 0, &&, ungetBuffer, [, ungetCursor, -, 1, ], ==, '\n', ), )]
[!, (, ungetCursor, !=, 0, &&, ungetBuffer, [, ungetCursor, -, 1, ], ==, '\n', )]
[(, ungetCursor, !=, 0, &&, ungetBuffer, [, ungetCursor, -, 1, ], ==, '\n', )]
[ungetCursor, !=, 0, &&, ungetBuffer, [, ungetCursor, -, 1, ], ==, '\n']
[ungetCursor, !=, 0]
[ungetCursor]
[0]
[ungetBuffer, [, ungetCursor, -, 1, ], ==, '\n']
[ungetBuffer, [, ungetCursor, -, 1, ]]
[ungetBuffer]
[ungetCursor, -, 1]
[ungetCursor]
[1]
['\n']
[ungetBuffer, [, ungetCursor, ++, ]]
[ungetBuffer]
[ungetCursor, ++]
[ungetCursor]
[c]
[cursor, --]
[cursor]
[getCharIgnoreLineEnd, (, )]
[c, ==, test]
[c]
[test]
[tokenEnd]
[cursor]
[true]
[ungetCharIgnoreLineEnd, (, c, )]
[c]
[false]
[c, <=, 'Z']
[c]
['Z']
['A', <=, c]
['A']
[c]
['a', <=, c, &&, c, <=, 'z']
['a', <=, c]
['a']
[c]
[c, <=, 'z']
[c]
['z']
[c]
['@']
['*']
[',']
['>']
[':']
['(']
[')']
['{']
['}']
['[']
[']']
['?']
['!']
['|']
['=']
[EOF_CHAR]
['\n']
[false]
[!, isJSSpace, (, c, )]
[isJSSpace, (, c, )]
[c]
[c, <=, 127]
[c]
[127]
[c, ==, 0x20, ||, c, ==, 0x9, ||, c, ==, 0xC, ||, c, ==, 0xB]
[c, ==, 0x20, ||, c, ==, 0x9, ||, c, ==, 0xC]
[c, ==, 0x20, ||, c, ==, 0x9]
[c, ==, 0x20]
[c]
[0x20]
[c, ==, 0x9]
[c]
[0x9]
[c, ==, 0xC]
[c]
[0xC]
[c, ==, 0xB]
[c]
[0xB]
[c, ==, 0xA0, ||, Character, ., getType, (, (, char, ), c, ), ==, Character, ., SPACE_SEPARATOR]
[c, ==, 0xA0]
[c]
[0xA0]
[Character, ., getType, (, (, char, ), c, ), ==, Character, ., SPACE_SEPARATOR]
[Character, ., getType, (, (, char, ), c, )]
[Character]
[(, char, ), c]
[c]
[Character, ., SPACE_SEPARATOR]
[Character]
[c, >, 127, &&, Character, ., getType, (, (, char, ), c, ), ==, Character, ., FORMAT]
[c, >, 127]
[c]
[127]
[Character, ., getType, (, (, char, ), c, ), ==, Character, ., FORMAT]
[Character, ., getType, (, (, char, ), c, )]
[Character]
[(, char, ), c]
[c]
[Character, ., FORMAT]
[Character]
[charno]
[getOffset, (, )]
[getChar, (, )]
[ungetChar, (, c, )]
[c]
[c]
[ungetCursor, !=, 0]
[ungetCursor]
[0]
[cursor, ++]
[cursor]
[--, ungetCursor]
[ungetCursor]
[charno, ==, -, 1]
[charno]
[-, 1]
[1]
[charno]
[getOffset, (, )]
[ungetBuffer, [, ungetCursor, ]]
[ungetBuffer]
[ungetCursor]
[sourceCursor, ==, sourceEnd]
[sourceCursor]
[sourceEnd]
[hitEOF]
[true]
[charno, ==, -, 1]
[charno]
[-, 1]
[1]
[charno]
[getOffset, (, )]
[EOF_CHAR]
[cursor, ++]
[cursor]
[c]
[sourceString, ., charAt, (, sourceCursor, ++, )]
[sourceString]
[sourceCursor, ++]
[sourceCursor]
[lineEndChar, >=, 0]
[lineEndChar]
[0]
[lineEndChar, ==, '\r', &&, c, ==, '\n']
[lineEndChar, ==, '\r']
[lineEndChar]
['\r']
[c, ==, '\n']
[c]
['\n']
[lineEndChar]
['\n']
[lineEndChar]
[-, 1]
[1]
[lineStart]
[sourceCursor, -, 1]
[sourceCursor]
[1]
[lineno, ++]
[lineno]
[c, <=, 127]
[c]
[127]
[c, ==, '\n', ||, c, ==, '\r']
[c, ==, '\n']
[c]
['\n']
[c, ==, '\r']
[c]
['\r']
[lineEndChar]
[c]
[c]
['\n']
[isJSFormatChar, (, c, )]
[c]
[ScriptRuntime, ., isJSLineTerminator, (, c, )]
[ScriptRuntime]
[c]
[lineEndChar]
[c]
[c]
['\n']
[charno, ==, -, 1]
[charno]
[-, 1]
[1]
[charno]
[getOffset, (, )]
[c]
[ungetCursor, !=, 0]
[ungetCursor]
[0]
[cursor, ++]
[cursor]
[--, ungetCursor]
[ungetCursor]
[charno, ==, -, 1]
[charno]
[-, 1]
[1]
[charno]
[getOffset, (, )]
[ungetBuffer, [, ungetCursor, ]]
[ungetBuffer]
[ungetCursor]
[sourceCursor, ==, sourceEnd]
[sourceCursor]
[sourceEnd]
[hitEOF]
[true]
[charno, ==, -, 1]
[charno]
[-, 1]
[1]
[charno]
[getOffset, (, )]
[EOF_CHAR]
[cursor, ++]
[cursor]
[c]
[sourceString, ., charAt, (, sourceCursor, ++, )]
[sourceString]
[sourceCursor, ++]
[sourceCursor]
[c, <=, 127]
[c]
[127]
[c, ==, '\n', ||, c, ==, '\r']
[c, ==, '\n']
[c]
['\n']
[c, ==, '\r']
[c]
['\r']
[lineEndChar]
[c]
[c]
['\n']
[isJSFormatChar, (, c, )]
[c]
[ScriptRuntime, ., isJSLineTerminator, (, c, )]
[ScriptRuntime]
[c]
[lineEndChar]
[c]
[c]
['\n']
[charno, ==, -, 1]
[charno]
[-, 1]
[1]
[charno]
[getOffset, (, )]
[c]
[ungetBuffer, [, ungetCursor, ++, ]]
[ungetBuffer]
[ungetCursor, ++]
[ungetCursor]
[c]
[cursor, --]
[cursor]
[sourceCursor, -, lineStart, -, ungetCursor, -, 1]
[sourceCursor, -, lineStart, -, ungetCursor]
[sourceCursor, -, lineStart]
[sourceCursor]
[lineStart]
[ungetCursor]
[1]
[""]
[new, char, [, 128, ]]
[128]
[new, int, [, 3, ]]
[3]
[false]
[0]
[-, 1]
[1]
[-, 1]
[1]
