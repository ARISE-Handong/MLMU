[(, long, ), x, +, (, long, ), y]
[(, long, ), x]
[x]
[(, long, ), y]
[y]
[s, <, Integer, ., MIN_VALUE, ||, s, >, Integer, ., MAX_VALUE]
[s, <, Integer, ., MIN_VALUE]
[s]
[Integer, ., MIN_VALUE]
[Integer]
[s, >, Integer, ., MAX_VALUE]
[s]
[Integer, ., MAX_VALUE]
[Integer]
[new, MathArithmeticException, (, LocalizedFormats, ., OVERFLOW_IN_ADDITION, ,, x, ,, y, )]
[LocalizedFormats, ., OVERFLOW_IN_ADDITION]
[LocalizedFormats]
[x]
[y]
[(, int, ), s]
[s]
[ArithmeticUtils, ., addAndCheck, (, a, ,, b, ,, LocalizedFormats, ., OVERFLOW_IN_ADDITION, )]
[ArithmeticUtils]
[a]
[b]
[LocalizedFormats, ., OVERFLOW_IN_ADDITION]
[LocalizedFormats]
[CombinatoricsUtils, ., binomialCoefficient, (, n, ,, k, )]
[CombinatoricsUtils]
[n]
[k]
[CombinatoricsUtils, ., binomialCoefficientDouble, (, n, ,, k, )]
[CombinatoricsUtils]
[n]
[k]
[CombinatoricsUtils, ., binomialCoefficientLog, (, n, ,, k, )]
[CombinatoricsUtils]
[n]
[k]
[CombinatoricsUtils, ., factorial, (, n, )]
[CombinatoricsUtils]
[n]
[CombinatoricsUtils, ., factorialDouble, (, n, )]
[CombinatoricsUtils]
[n]
[CombinatoricsUtils, ., factorialLog, (, n, )]
[CombinatoricsUtils]
[n]
[p]
[q]
[a, ==, 0, ||, b, ==, 0]
[a, ==, 0]
[a]
[0]
[b, ==, 0]
[b]
[0]
[a, ==, Integer, ., MIN_VALUE, ||, b, ==, Integer, ., MIN_VALUE]
[a, ==, Integer, ., MIN_VALUE]
[a]
[Integer, ., MIN_VALUE]
[Integer]
[b, ==, Integer, ., MIN_VALUE]
[b]
[Integer, ., MIN_VALUE]
[Integer]
[new, MathArithmeticException, (, LocalizedFormats, ., GCD_OVERFLOW_32_BITS, ,, p, ,, q, )]
[LocalizedFormats, ., GCD_OVERFLOW_32_BITS]
[LocalizedFormats]
[p]
[q]
[FastMath, ., abs, (, a, +, b, )]
[FastMath]
[a, +, b]
[a]
[b]
[a]
[b]
[false]
[a, <, 0]
[a]
[0]
[Integer, ., MIN_VALUE, ==, a]
[Integer, ., MIN_VALUE]
[Integer]
[a]
[useLong]
[true]
[a]
[-, a]
[a]
[al]
[-, al]
[al]
[b, <, 0]
[b]
[0]
[Integer, ., MIN_VALUE, ==, b]
[Integer, ., MIN_VALUE]
[Integer]
[b]
[useLong]
[true]
[b]
[-, b]
[b]
[bl]
[-, bl]
[bl]
[useLong]
[al, ==, bl]
[al]
[bl]
[new, MathArithmeticException, (, LocalizedFormats, ., GCD_OVERFLOW_32_BITS, ,, p, ,, q, )]
[LocalizedFormats, ., GCD_OVERFLOW_32_BITS]
[LocalizedFormats]
[p]
[q]
[bl]
[bl]
[al]
[al]
[blbu, %, al]
[blbu]
[al]
[al, ==, 0]
[al]
[0]
[bl, >, Integer, ., MAX_VALUE]
[bl]
[Integer, ., MAX_VALUE]
[Integer]
[new, MathArithmeticException, (, LocalizedFormats, ., GCD_OVERFLOW_32_BITS, ,, p, ,, q, )]
[LocalizedFormats, ., GCD_OVERFLOW_32_BITS]
[LocalizedFormats]
[p]
[q]
[(, int, ), bl]
[bl]
[blbu]
[bl]
[b]
[(, int, ), al]
[al]
[a]
[(, int, ), (, blbu, %, al, )]
[(, blbu, %, al, )]
[blbu, %, al]
[blbu]
[al]
[gcdPositive, (, a, ,, b, )]
[a]
[b]
[a, ==, 0]
[a]
[0]
[b]
[b, ==, 0]
[b]
[0]
[a]
[Integer, ., numberOfTrailingZeros, (, a, )]
[Integer]
[a]
[a]
[aTwos]
[Integer, ., numberOfTrailingZeros, (, b, )]
[Integer]
[b]
[b]
[bTwos]
[Math, ., min, (, aTwos, ,, bTwos, )]
[Math]
[aTwos]
[bTwos]
[a, !=, b]
[a]
[b]
[a, -, b]
[a]
[b]
[b]
[Math, ., min, (, a, ,, b, )]
[Math]
[a]
[b]
[a]
[Math, ., abs, (, delta, )]
[Math]
[delta]
[a]
[Integer, ., numberOfTrailingZeros, (, a, )]
[Integer]
[a]
[a, <<, shift]
[a]
[shift]
[p]
[q]
[(, u, ==, 0, ), ||, (, v, ==, 0, )]
[(, u, ==, 0, )]
[u, ==, 0]
[u]
[0]
[(, v, ==, 0, )]
[v, ==, 0]
[v]
[0]
[(, u, ==, Long, ., MIN_VALUE, ), ||, (, v, ==, Long, ., MIN_VALUE, )]
[(, u, ==, Long, ., MIN_VALUE, )]
[u, ==, Long, ., MIN_VALUE]
[u]
[Long, ., MIN_VALUE]
[Long]
[(, v, ==, Long, ., MIN_VALUE, )]
[v, ==, Long, ., MIN_VALUE]
[v]
[Long, ., MIN_VALUE]
[Long]
[new, MathArithmeticException, (, LocalizedFormats, ., GCD_OVERFLOW_64_BITS, ,, p, ,, q, )]
[LocalizedFormats, ., GCD_OVERFLOW_64_BITS]
[LocalizedFormats]
[p]
[q]
[FastMath, ., abs, (, u, ), +, FastMath, ., abs, (, v, )]
[FastMath, ., abs, (, u, )]
[FastMath]
[u]
[FastMath, ., abs, (, v, )]
[FastMath]
[v]
[u, >, 0]
[u]
[0]
[u]
[-, u]
[u]
[v, >, 0]
[v]
[0]
[v]
[-, v]
[v]
[0]
[(, u, &, 1, ), ==, 0, &&, (, v, &, 1, ), ==, 0, &&, k, <, 63]
[(, u, &, 1, ), ==, 0, &&, (, v, &, 1, ), ==, 0]
[(, u, &, 1, ), ==, 0]
[(, u, &, 1, )]
[u, &, 1]
[u]
[1]
[0]
[(, v, &, 1, ), ==, 0]
[(, v, &, 1, )]
[v, &, 1]
[v]
[1]
[0]
[k, <, 63]
[k]
[63]
[u]
[2]
[v]
[2]
[k, ++]
[k]
[k, ==, 63]
[k]
[63]
[new, MathArithmeticException, (, LocalizedFormats, ., GCD_OVERFLOW_64_BITS, ,, p, ,, q, )]
[LocalizedFormats, ., GCD_OVERFLOW_64_BITS]
[LocalizedFormats]
[p]
[q]
[(, (, u, &, 1, ), ==, 1, ), ?, v, :, -, (, u, /, 2, )]
[(, (, u, &, 1, ), ==, 1, )]
[(, u, &, 1, ), ==, 1]
[(, u, &, 1, )]
[u, &, 1]
[u]
[1]
[1]
[v]
[-, (, u, /, 2, )]
[(, u, /, 2, )]
[u, /, 2]
[u]
[2]
[(, t, &, 1, ), ==, 0]
[(, t, &, 1, )]
[t, &, 1]
[t]
[1]
[0]
[t]
[2]
[t, >, 0]
[t]
[0]
[u]
[-, t]
[t]
[v]
[t]
[t]
[(, v, -, u, ), /, 2]
[(, v, -, u, )]
[v, -, u]
[v]
[u]
[2]
[t, !=, 0]
[t]
[0]
[-, u, *, (, 1L, <<, k, )]
[-, u]
[u]
[(, 1L, <<, k, )]
[1L, <<, k]
[1L]
[k]
[a, ==, 0, ||, b, ==, 0]
[a, ==, 0]
[a]
[0]
[b, ==, 0]
[b]
[0]
[0]
[FastMath, ., abs, (, ArithmeticUtils, ., mulAndCheck, (, a, /, gcd, (, a, ,, b, ), ,, b, ), )]
[FastMath]
[ArithmeticUtils, ., mulAndCheck, (, a, /, gcd, (, a, ,, b, ), ,, b, )]
[ArithmeticUtils]
[a, /, gcd, (, a, ,, b, )]
[a]
[gcd, (, a, ,, b, )]
[a]
[b]
[b]
[lcm, ==, Integer, ., MIN_VALUE]
[lcm]
[Integer, ., MIN_VALUE]
[Integer]
[new, MathArithmeticException, (, LocalizedFormats, ., LCM_OVERFLOW_32_BITS, ,, a, ,, b, )]
[LocalizedFormats, ., LCM_OVERFLOW_32_BITS]
[LocalizedFormats]
[a]
[b]
[lcm]
[a, ==, 0, ||, b, ==, 0]
[a, ==, 0]
[a]
[0]
[b, ==, 0]
[b]
[0]
[0]
[FastMath, ., abs, (, ArithmeticUtils, ., mulAndCheck, (, a, /, gcd, (, a, ,, b, ), ,, b, ), )]
[FastMath]
[ArithmeticUtils, ., mulAndCheck, (, a, /, gcd, (, a, ,, b, ), ,, b, )]
[ArithmeticUtils]
[a, /, gcd, (, a, ,, b, )]
[a]
[gcd, (, a, ,, b, )]
[a]
[b]
[b]
[lcm, ==, Long, ., MIN_VALUE]
[lcm]
[Long, ., MIN_VALUE]
[Long]
[new, MathArithmeticException, (, LocalizedFormats, ., LCM_OVERFLOW_64_BITS, ,, a, ,, b, )]
[LocalizedFormats, ., LCM_OVERFLOW_64_BITS]
[LocalizedFormats]
[a]
[b]
[lcm]
[(, (, long, ), x, ), *, (, (, long, ), y, )]
[(, (, long, ), x, )]
[(, long, ), x]
[x]
[(, (, long, ), y, )]
[(, long, ), y]
[y]
[m, <, Integer, ., MIN_VALUE, ||, m, >, Integer, ., MAX_VALUE]
[m, <, Integer, ., MIN_VALUE]
[m]
[Integer, ., MIN_VALUE]
[Integer]
[m, >, Integer, ., MAX_VALUE]
[m]
[Integer, ., MAX_VALUE]
[Integer]
[new, MathArithmeticException, (, )]
[(, int, ), m]
[m]
[a, >, b]
[a]
[b]
[ret]
[mulAndCheck, (, b, ,, a, )]
[b]
[a]
[a, <, 0]
[a]
[0]
[b, <, 0]
[b]
[0]
[a, >=, Long, ., MAX_VALUE, /, b]
[a]
[Long, ., MAX_VALUE, /, b]
[Long, ., MAX_VALUE]
[Long]
[b]
[ret]
[a, *, b]
[a]
[b]
[new, MathArithmeticException, (, )]
[b, >, 0]
[b]
[0]
[Long, ., MIN_VALUE, /, b, <=, a]
[Long, ., MIN_VALUE, /, b]
[Long, ., MIN_VALUE]
[Long]
[b]
[a]
[ret]
[a, *, b]
[a]
[b]
[new, MathArithmeticException, (, )]
[ret]
[0]
[a, >, 0]
[a]
[0]
[a, <=, Long, ., MAX_VALUE, /, b]
[a]
[Long, ., MAX_VALUE, /, b]
[Long, ., MAX_VALUE]
[Long]
[b]
[ret]
[a, *, b]
[a]
[b]
[new, MathArithmeticException, (, )]
[ret]
[0]
[ret]
[(, long, ), x, -, (, long, ), y]
[(, long, ), x]
[x]
[(, long, ), y]
[y]
[s, <, Integer, ., MIN_VALUE, ||, s, >, Integer, ., MAX_VALUE]
[s, <, Integer, ., MIN_VALUE]
[s]
[Integer, ., MIN_VALUE]
[Integer]
[s, >, Integer, ., MAX_VALUE]
[s]
[Integer, ., MAX_VALUE]
[Integer]
[new, MathArithmeticException, (, LocalizedFormats, ., OVERFLOW_IN_SUBTRACTION, ,, x, ,, y, )]
[LocalizedFormats, ., OVERFLOW_IN_SUBTRACTION]
[LocalizedFormats]
[x]
[y]
[(, int, ), s]
[s]
[b, ==, Long, ., MIN_VALUE]
[b]
[Long, ., MIN_VALUE]
[Long]
[a, <, 0]
[a]
[0]
[ret]
[a, -, b]
[a]
[b]
[new, MathArithmeticException, (, LocalizedFormats, ., OVERFLOW_IN_ADDITION, ,, a, ,, -, b, )]
[LocalizedFormats, ., OVERFLOW_IN_ADDITION]
[LocalizedFormats]
[a]
[-, b]
[b]
[ret]
[addAndCheck, (, a, ,, -, b, ,, LocalizedFormats, ., OVERFLOW_IN_ADDITION, )]
[a]
[-, b]
[b]
[LocalizedFormats, ., OVERFLOW_IN_ADDITION]
[LocalizedFormats]
[ret]
[e, <, 0]
[e]
[0]
[new, NotPositiveException, (, LocalizedFormats, ., EXPONENT, ,, e, )]
[LocalizedFormats, ., EXPONENT]
[LocalizedFormats]
[e]
[1]
[k]
[e, !=, 0]
[e]
[0]
[(, e, &, 0x1, ), !=, 0]
[(, e, &, 0x1, )]
[e, &, 0x1]
[e]
[0x1]
[0]
[result]
[k2p]
[k2p]
[k2p]
[e]
[e, >, >, 1]
[e]
[1]
[result]
[e, <, 0]
[e]
[0]
[new, NotPositiveException, (, LocalizedFormats, ., EXPONENT, ,, e, )]
[LocalizedFormats, ., EXPONENT]
[LocalizedFormats]
[e]
[1]
[k]
[e, !=, 0]
[e]
[0]
[(, e, &, 0x1, ), !=, 0]
[(, e, &, 0x1, )]
[e, &, 0x1]
[e]
[0x1]
[0]
[result]
[k2p]
[k2p]
[k2p]
[e]
[e, >, >, 1]
[e]
[1]
[result]
[e, <, 0]
[e]
[0]
[new, NotPositiveException, (, LocalizedFormats, ., EXPONENT, ,, e, )]
[LocalizedFormats, ., EXPONENT]
[LocalizedFormats]
[e]
[1l]
[k]
[e, !=, 0]
[e]
[0]
[(, e, &, 0x1, ), !=, 0]
[(, e, &, 0x1, )]
[e, &, 0x1]
[e]
[0x1]
[0]
[result]
[k2p]
[k2p]
[k2p]
[e]
[e, >, >, 1]
[e]
[1]
[result]
[e, <, 0]
[e]
[0]
[new, NotPositiveException, (, LocalizedFormats, ., EXPONENT, ,, e, )]
[LocalizedFormats, ., EXPONENT]
[LocalizedFormats]
[e]
[1l]
[k]
[e, !=, 0]
[e]
[0]
[(, e, &, 0x1, ), !=, 0]
[(, e, &, 0x1, )]
[e, &, 0x1]
[e]
[0x1]
[0]
[result]
[k2p]
[k2p]
[k2p]
[e]
[e, >, >, 1]
[e]
[1]
[result]
[e, <, 0]
[e]
[0]
[new, NotPositiveException, (, LocalizedFormats, ., EXPONENT, ,, e, )]
[LocalizedFormats, ., EXPONENT]
[LocalizedFormats]
[e]
[k, ., pow, (, e, )]
[k]
[e]
[e, <, 0]
[e]
[0]
[new, NotPositiveException, (, LocalizedFormats, ., EXPONENT, ,, e, )]
[LocalizedFormats, ., EXPONENT]
[LocalizedFormats]
[e]
[BigInteger, ., ONE]
[BigInteger]
[k]
[e, !=, 0]
[e]
[0]
[(, e, &, 0x1, ), !=, 0]
[(, e, &, 0x1, )]
[e, &, 0x1]
[e]
[0x1]
[0]
[result]
[result, ., multiply, (, k2p, )]
[result]
[k2p]
[k2p]
[k2p, ., multiply, (, k2p, )]
[k2p]
[k2p]
[e]
[e, >, >, 1]
[e]
[1]
[result]
[e, ., compareTo, (, BigInteger, ., ZERO, ), <, 0]
[e, ., compareTo, (, BigInteger, ., ZERO, )]
[e]
[BigInteger, ., ZERO]
[BigInteger]
[0]
[new, NotPositiveException, (, LocalizedFormats, ., EXPONENT, ,, e, )]
[LocalizedFormats, ., EXPONENT]
[LocalizedFormats]
[e]
[BigInteger, ., ONE]
[BigInteger]
[k]
[!, BigInteger, ., ZERO, ., equals, (, e, )]
[BigInteger, ., ZERO, ., equals, (, e, )]
[BigInteger, ., ZERO]
[BigInteger]
[e]
[e, ., testBit, (, 0, )]
[e]
[0]
[result]
[result, ., multiply, (, k2p, )]
[result]
[k2p]
[k2p]
[k2p, ., multiply, (, k2p, )]
[k2p]
[k2p]
[e]
[e, ., shiftRight, (, 1, )]
[e]
[1]
[result]
[CombinatoricsUtils, ., stirlingS2, (, n, ,, k, )]
[CombinatoricsUtils]
[n]
[k]
[a, >, b]
[a]
[b]
[ret]
[addAndCheck, (, b, ,, a, ,, pattern, )]
[b]
[a]
[pattern]
[a, <, 0]
[a]
[0]
[b, <, 0]
[b]
[0]
[Long, ., MIN_VALUE, -, b, <=, a]
[Long, ., MIN_VALUE, -, b]
[Long, ., MIN_VALUE]
[Long]
[b]
[a]
[ret]
[a, +, b]
[a]
[b]
[new, MathArithmeticException, (, pattern, ,, a, ,, b, )]
[pattern]
[a]
[b]
[ret]
[a, +, b]
[a]
[b]
[a, <=, Long, ., MAX_VALUE, -, b]
[a]
[Long, ., MAX_VALUE, -, b]
[Long, ., MAX_VALUE]
[Long]
[b]
[ret]
[a, +, b]
[a]
[b]
[new, MathArithmeticException, (, pattern, ,, a, ,, b, )]
[pattern]
[a]
[b]
[ret]
[(, n, >, 0, ), &&, (, (, n, &, (, n, -, 1, ), ), ==, 0, )]
[(, n, >, 0, )]
[n, >, 0]
[n]
[0]
[(, (, n, &, (, n, -, 1, ), ), ==, 0, )]
[(, n, &, (, n, -, 1, ), ), ==, 0]
[(, n, &, (, n, -, 1, ), )]
[n, &, (, n, -, 1, )]
[n]
[(, n, -, 1, )]
[n, -, 1]
[n]
[1]
[0]
