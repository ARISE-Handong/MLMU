["jfreechart-"]
["jfreechart-onetime-"]
[ServletUtilities, ., tempFilePrefix]
[ServletUtilities]
[prefix, ==, null]
[prefix]
[null]
[new, IllegalArgumentException, (, "Null 'prefix' argument.", )]
["Null 'prefix' argument."]
[ServletUtilities, ., tempFilePrefix]
[ServletUtilities]
[prefix]
[ServletUtilities, ., tempOneTimeFilePrefix]
[ServletUtilities]
[prefix, ==, null]
[prefix]
[null]
[new, IllegalArgumentException, (, "Null 'prefix' argument.", )]
["Null 'prefix' argument."]
[ServletUtilities, ., tempOneTimeFilePrefix]
[ServletUtilities]
[prefix]
[ServletUtilities, ., saveChartAsPNG, (, chart, ,, width, ,, height, ,, null, ,, session, )]
[ServletUtilities]
[chart]
[width]
[height]
[null]
[session]
[chart, ==, null]
[chart]
[null]
[new, IllegalArgumentException, (, "Null 'chart' argument.", )]
["Null 'chart' argument."]
[ServletUtilities, ., createTempDir, (, )]
[ServletUtilities]
[ServletUtilities, ., tempFilePrefix]
[ServletUtilities]
[session, ==, null]
[session]
[null]
[prefix]
[ServletUtilities, ., tempOneTimeFilePrefix]
[ServletUtilities]
[File, ., createTempFile, (, prefix, ,, ".png", ,, new, File, (, System, ., getProperty, (, "java.io.tmpdir", ), ), )]
[File]
[prefix]
[".png"]
[new, File, (, System, ., getProperty, (, "java.io.tmpdir", ), )]
[System, ., getProperty, (, "java.io.tmpdir", )]
[System]
["java.io.tmpdir"]
[ChartUtilities, ., saveChartAsPNG, (, tempFile, ,, chart, ,, width, ,, height, ,, info, )]
[ChartUtilities]
[tempFile]
[chart]
[width]
[height]
[info]
[session, !=, null]
[session]
[null]
[ServletUtilities, ., registerChartForDeletion, (, tempFile, ,, session, )]
[ServletUtilities]
[tempFile]
[session]
[tempFile, ., getName, (, )]
[tempFile]
[ServletUtilities, ., saveChartAsJPEG, (, chart, ,, width, ,, height, ,, null, ,, session, )]
[ServletUtilities]
[chart]
[width]
[height]
[null]
[session]
[chart, ==, null]
[chart]
[null]
[new, IllegalArgumentException, (, "Null 'chart' argument.", )]
["Null 'chart' argument."]
[ServletUtilities, ., createTempDir, (, )]
[ServletUtilities]
[ServletUtilities, ., tempFilePrefix]
[ServletUtilities]
[session, ==, null]
[session]
[null]
[prefix]
[ServletUtilities, ., tempOneTimeFilePrefix]
[ServletUtilities]
[File, ., createTempFile, (, prefix, ,, ".jpeg", ,, new, File, (, System, ., getProperty, (, "java.io.tmpdir", ), ), )]
[File]
[prefix]
[".jpeg"]
[new, File, (, System, ., getProperty, (, "java.io.tmpdir", ), )]
[System, ., getProperty, (, "java.io.tmpdir", )]
[System]
["java.io.tmpdir"]
[ChartUtilities, ., saveChartAsJPEG, (, tempFile, ,, chart, ,, width, ,, height, ,, info, )]
[ChartUtilities]
[tempFile]
[chart]
[width]
[height]
[info]
[session, !=, null]
[session]
[null]
[ServletUtilities, ., registerChartForDeletion, (, tempFile, ,, session, )]
[ServletUtilities]
[tempFile]
[session]
[tempFile, ., getName, (, )]
[tempFile]
[System, ., getProperty, (, "java.io.tmpdir", )]
[System]
["java.io.tmpdir"]
[tempDirName, ==, null]
[tempDirName]
[null]
[new, RuntimeException, (, "Temporary directory system property ", +, "(java.io.tmpdir) is null.", )]
["Temporary directory system property ", +, "(java.io.tmpdir) is null."]
["Temporary directory system property "]
["(java.io.tmpdir) is null."]
[new, File, (, tempDirName, )]
[tempDirName]
[!, tempDir, ., exists, (, )]
[tempDir, ., exists, (, )]
[tempDir]
[tempDir, ., mkdirs, (, )]
[tempDir]
[session, !=, null]
[session]
[null]
[(, ChartDeleter, ), session, ., getAttribute, (, "JFreeChart_Deleter", )]
[session, ., getAttribute, (, "JFreeChart_Deleter", )]
[session]
["JFreeChart_Deleter"]
[chartDeleter, ==, null]
[chartDeleter]
[null]
[chartDeleter]
[new, ChartDeleter, (, )]
[session, ., setAttribute, (, "JFreeChart_Deleter", ,, chartDeleter, )]
[session]
["JFreeChart_Deleter"]
[chartDeleter]
[chartDeleter, ., addChart, (, tempFile, ., getName, (, ), )]
[chartDeleter]
[tempFile, ., getName, (, )]
[tempFile]
[System, ., out, ., println, (, "Session is null - chart will not be deleted", )]
[System, ., out]
[System]
["Session is null - chart will not be deleted"]
[new, File, (, System, ., getProperty, (, "java.io.tmpdir", ), ,, filename, )]
[System, ., getProperty, (, "java.io.tmpdir", )]
[System]
["java.io.tmpdir"]
[filename]
[ServletUtilities, ., sendTempFile, (, file, ,, response, )]
[ServletUtilities]
[file]
[response]
[null]
[file, ., getName, (, )]
[file]
[filename, ., length, (, ), >, 5]
[filename, ., length, (, )]
[filename]
[5]
[filename, ., substring, (, filename, ., length, (, ), -, 5, ,, filename, ., length, (, ), ), ., equals, (, ".jpeg", )]
[filename, ., substring, (, filename, ., length, (, ), -, 5, ,, filename, ., length, (, ), )]
[filename]
[filename, ., length, (, ), -, 5]
[filename, ., length, (, )]
[filename]
[5]
[filename, ., length, (, )]
[filename]
[".jpeg"]
[mimeType]
["image/jpeg"]
[filename, ., substring, (, filename, ., length, (, ), -, 4, ,, filename, ., length, (, ), ), ., equals, (, ".png", )]
[filename, ., substring, (, filename, ., length, (, ), -, 4, ,, filename, ., length, (, ), )]
[filename]
[filename, ., length, (, ), -, 4]
[filename, ., length, (, )]
[filename]
[4]
[filename, ., length, (, )]
[filename]
[".png"]
[mimeType]
["image/png"]
[ServletUtilities, ., sendTempFile, (, file, ,, response, ,, mimeType, )]
[ServletUtilities]
[file]
[response]
[mimeType]
[file, ., exists, (, )]
[file]
[new, BufferedInputStream, (, new, FileInputStream, (, file, ), )]
[new, FileInputStream, (, file, )]
[file]
[mimeType, !=, null]
[mimeType]
[null]
[response, ., setHeader, (, "Content-Type", ,, mimeType, )]
[response]
["Content-Type"]
[mimeType]
[response, ., setHeader, (, "Content-Length", ,, String, ., valueOf, (, file, ., length, (, ), ), )]
[response]
["Content-Length"]
[String, ., valueOf, (, file, ., length, (, ), )]
[String]
[file, ., length, (, )]
[file]
[new, SimpleDateFormat, (, "EEE, dd MMM yyyy HH:mm:ss z", ,, Locale, ., ENGLISH, )]
["EEE, dd MMM yyyy HH:mm:ss z"]
[Locale, ., ENGLISH]
[Locale]
[sdf, ., setTimeZone, (, TimeZone, ., getTimeZone, (, "GMT", ), )]
[sdf]
[TimeZone, ., getTimeZone, (, "GMT", )]
[TimeZone]
["GMT"]
[response, ., setHeader, (, "Last-Modified", ,, sdf, ., format, (, new, Date, (, file, ., lastModified, (, ), ), ), )]
[response]
["Last-Modified"]
[sdf, ., format, (, new, Date, (, file, ., lastModified, (, ), ), )]
[sdf]
[new, Date, (, file, ., lastModified, (, ), )]
[file, ., lastModified, (, )]
[file]
[new, BufferedOutputStream, (, response, ., getOutputStream, (, ), )]
[response, ., getOutputStream, (, )]
[response]
[new, byte, [, 1024, ]]
[1024]
[false]
[!, eof]
[eof]
[bis, ., read, (, input, )]
[bis]
[input]
[length, ==, -, 1]
[length]
[-, 1]
[1]
[eof]
[true]
[bos, ., write, (, input, ,, 0, ,, length, )]
[bos]
[input]
[0]
[length]
[bos, ., flush, (, )]
[bos]
[bis, ., close, (, )]
[bis]
[bos, ., close, (, )]
[bos]
[new, FileNotFoundException, (, file, ., getAbsolutePath, (, ), )]
[file, ., getAbsolutePath, (, )]
[file]
[inputString, ., indexOf, (, searchString, )]
[inputString]
[searchString]
[i, ==, -, 1]
[i]
[-, 1]
[1]
[inputString]
[""]
[r]
[inputString, ., substring, (, 0, ,, i, ), +, replaceString]
[inputString, ., substring, (, 0, ,, i, )]
[inputString]
[0]
[i]
[replaceString]
[i, +, searchString, ., length, (, ), <, inputString, ., length, (, )]
[i, +, searchString, ., length, (, )]
[i]
[searchString, ., length, (, )]
[searchString]
[inputString, ., length, (, )]
[inputString]
[r]
[searchReplace, (, inputString, ., substring, (, i, +, searchString, ., length, (, ), ), ,, searchString, ,, replaceString, )]
[inputString, ., substring, (, i, +, searchString, ., length, (, ), )]
[inputString]
[i, +, searchString, ., length, (, )]
[i]
[searchString, ., length, (, )]
[searchString]
[searchString]
[replaceString]
[r]
