["Fixed point computation not halting"]
[this, ., callback]
[this]
[callback]
[new, FixedPointGraphTraversal, <, NODE, ,, EDGE, >, (, callback, )]
[callback]
[Sets, ., newHashSet, (, )]
[Sets]
[graph, ., getDirectedGraphNodes, (, )]
[graph]
[nodes, ., add, (, node, ., getValue, (, ), )]
[nodes]
[node, ., getValue, (, )]
[node]
[computeFixedPoint, (, graph, ,, nodes, )]
[graph]
[nodes]
[Sets, ., newHashSet, (, )]
[Sets]
[entrySet, ., add, (, entry, )]
[entrySet]
[entry]
[computeFixedPoint, (, graph, ,, entrySet, )]
[graph]
[entrySet]
[0]
[graph, ., getNodes, (, ), ., size, (, )]
[graph, ., getNodes, (, )]
[graph]
[Math, ., max, (, nodeCount, *, nodeCount, *, nodeCount, ,, 100, )]
[Math]
[nodeCount, *, nodeCount, *, nodeCount]
[nodeCount, *, nodeCount]
[nodeCount]
[nodeCount]
[nodeCount]
[100]
[Sets, ., newLinkedHashSet, (, )]
[Sets]
[entrySet]
[workSet, ., add, (, graph, ., getDirectedGraphNode, (, n, ), )]
[workSet]
[graph, ., getDirectedGraphNode, (, n, )]
[graph]
[n]
[!, workSet, ., isEmpty, (, ), &&, cycleCount, <, maxIterations]
[!, workSet, ., isEmpty, (, )]
[workSet, ., isEmpty, (, )]
[workSet]
[cycleCount, <, maxIterations]
[cycleCount]
[maxIterations]
[cycleCount, ++]
[cycleCount]
[workSet, ., iterator, (, ), ., next, (, )]
[workSet, ., iterator, (, )]
[workSet]
[source, ., getValue, (, )]
[source]
[workSet, ., remove, (, source, )]
[workSet]
[source]
[source, ., getOutEdges, (, )]
[source]
[outEdges]
[edge, ., getDestination, (, ), ., getValue, (, )]
[edge, ., getDestination, (, )]
[edge]
[callback, ., traverseEdge, (, sourceValue, ,, edge, ., getValue, (, ), ,, destNode, )]
[callback]
[sourceValue]
[edge, ., getValue, (, )]
[edge]
[destNode]
[workSet, ., add, (, edge, ., getDestination, (, ), )]
[workSet]
[edge, ., getDestination, (, )]
[edge]
[Preconditions, ., checkState, (, cycleCount, !=, maxIterations, ,, NON_HALTING_ERROR_MSG, )]
[Preconditions]
[cycleCount, !=, maxIterations]
[cycleCount]
[maxIterations]
[NON_HALTING_ERROR_MSG]
