[1.77245385090551602729]
[7.5112554446494248286e-1]
[1.0622519320271969145]
[numberOfPoints, ==, 1]
[numberOfPoints]
[1]
[new, Pair, <, Double, [, ], ,, Double, [, ], >, (, new, Double, [, ], {, 0d, }, ,, new, Double, [, ], {, SQRT_PI, }, )]
[new, Double, [, ], {, 0d, }]
[{, 0d, }]
[0d]
[new, Double, [, ], {, SQRT_PI, }]
[{, SQRT_PI, }]
[SQRT_PI]
[numberOfPoints, -, 1]
[numberOfPoints]
[1]
[getRuleInternal, (, lastNumPoints, ), ., getFirst, (, )]
[getRuleInternal, (, lastNumPoints, )]
[lastNumPoints]
[new, Double, [, numberOfPoints, ]]
[numberOfPoints]
[new, Double, [, numberOfPoints, ]]
[numberOfPoints]
[FastMath, ., sqrt, (, 2, *, lastNumPoints, )]
[FastMath]
[2, *, lastNumPoints]
[2]
[lastNumPoints]
[FastMath, ., sqrt, (, 2, *, numberOfPoints, )]
[FastMath]
[2, *, numberOfPoints]
[2]
[numberOfPoints]
[numberOfPoints, /, 2]
[numberOfPoints]
[2]
[0]
[i, <, iMax]
[i]
[iMax]
[i, ++]
[i]
[(, i, ==, 0, ), ?, -, sqrtTwoTimesLastNumPoints, :, previousPoints, [, i, -, 1, ], ., doubleValue, (, )]
[(, i, ==, 0, )]
[i, ==, 0]
[i]
[0]
[-, sqrtTwoTimesLastNumPoints]
[sqrtTwoTimesLastNumPoints]
[previousPoints, [, i, -, 1, ], ., doubleValue, (, )]
[previousPoints, [, i, -, 1, ]]
[previousPoints]
[i, -, 1]
[i]
[1]
[(, iMax, ==, 1, ), ?, -, 0.5, :, previousPoints, [, i, ], ., doubleValue, (, )]
[(, iMax, ==, 1, )]
[iMax, ==, 1]
[iMax]
[1]
[-, 0.5]
[0.5]
[previousPoints, [, i, ], ., doubleValue, (, )]
[previousPoints, [, i, ]]
[previousPoints]
[i]
[H0]
[H1, *, a]
[H1]
[a]
[H0]
[H1, *, b]
[H1]
[b]
[1]
[j, <, numberOfPoints]
[j]
[numberOfPoints]
[j, ++]
[j]
[j, +, 1]
[j]
[1]
[FastMath, ., sqrt, (, 2, /, jp1, )]
[FastMath]
[2, /, jp1]
[2]
[jp1]
[FastMath, ., sqrt, (, j, /, jp1, )]
[FastMath]
[j, /, jp1]
[j]
[jp1]
[s, *, a, *, ha, -, sm, *, hma]
[s, *, a, *, ha]
[s, *, a]
[s]
[a]
[ha]
[sm, *, hma]
[sm]
[hma]
[s, *, b, *, hb, -, sm, *, hmb]
[s, *, b, *, hb]
[s, *, b]
[s]
[b]
[hb]
[sm, *, hmb]
[sm]
[hmb]
[hma]
[ha]
[ha]
[hpa]
[hmb]
[hb]
[hb]
[hpb]
[0.5, *, (, a, +, b, )]
[0.5]
[(, a, +, b, )]
[a, +, b]
[a]
[b]
[H0]
[H1, *, c]
[H1]
[c]
[false]
[!, done]
[done]
[done]
[b, -, a, <=, Math, ., ulp, (, c, )]
[b, -, a]
[b]
[a]
[Math, ., ulp, (, c, )]
[Math]
[c]
[hmc]
[H0]
[hc]
[H1, *, c]
[H1]
[c]
[1]
[j, <, numberOfPoints]
[j]
[numberOfPoints]
[j, ++]
[j]
[j, +, 1]
[j]
[1]
[FastMath, ., sqrt, (, 2, /, jp1, )]
[FastMath]
[2, /, jp1]
[2]
[jp1]
[FastMath, ., sqrt, (, j, /, jp1, )]
[FastMath]
[j, /, jp1]
[j]
[jp1]
[s, *, c, *, hc, -, sm, *, hmc]
[s, *, c, *, hc]
[s, *, c]
[s]
[c]
[hc]
[sm, *, hmc]
[sm]
[hmc]
[hmc]
[hc]
[hc]
[hpc]
[!, done]
[done]
[ha, *, hc, <, 0]
[ha, *, hc]
[ha]
[hc]
[0]
[b]
[c]
[hmb]
[hmc]
[hb]
[hc]
[a]
[c]
[hma]
[hmc]
[ha]
[hc]
[c]
[0.5, *, (, a, +, b, )]
[0.5]
[(, a, +, b, )]
[a, +, b]
[a]
[b]
[sqrtTwoTimesNumPoints, *, hmc]
[sqrtTwoTimesNumPoints]
[hmc]
[2, /, (, d, *, d, )]
[2]
[(, d, *, d, )]
[d, *, d]
[d]
[d]
[points, [, i, ]]
[points]
[i]
[c]
[weights, [, i, ]]
[weights]
[i]
[w]
[lastNumPoints, -, i]
[lastNumPoints]
[i]
[points, [, idx, ]]
[points]
[idx]
[-, c]
[c]
[weights, [, idx, ]]
[weights]
[idx]
[w]
[numberOfPoints, %, 2, !=, 0]
[numberOfPoints, %, 2]
[numberOfPoints]
[2]
[0]
[H0]
[1]
[j, <, numberOfPoints]
[j]
[numberOfPoints]
[j]
[2]
[j, +, 1]
[j]
[1]
[hm]
[-, FastMath, ., sqrt, (, j, /, jp1, ), *, hm]
[-, FastMath, ., sqrt, (, j, /, jp1, )]
[FastMath, ., sqrt, (, j, /, jp1, )]
[FastMath]
[j, /, jp1]
[j]
[jp1]
[hm]
[sqrtTwoTimesNumPoints, *, hm]
[sqrtTwoTimesNumPoints]
[hm]
[2, /, (, d, *, d, )]
[2]
[(, d, *, d, )]
[d, *, d]
[d]
[d]
[points, [, iMax, ]]
[points]
[iMax]
[0d]
[weights, [, iMax, ]]
[weights]
[iMax]
[w]
[new, Pair, <, Double, [, ], ,, Double, [, ], >, (, points, ,, weights, )]
[points]
[weights]
