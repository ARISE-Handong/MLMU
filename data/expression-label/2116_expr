[1e-21]
[1.618034]
[new, Incrementor, (, )]
[100]
[50]
[growLimit, <=, 0]
[growLimit]
[0]
[new, NotStrictlyPositiveException, (, growLimit, )]
[growLimit]
[maxEvaluations, <=, 0]
[maxEvaluations]
[0]
[new, NotStrictlyPositiveException, (, maxEvaluations, )]
[maxEvaluations]
[this, ., growLimit]
[this]
[growLimit]
[evaluations, ., setMaximalCount, (, maxEvaluations, )]
[evaluations]
[maxEvaluations]
[evaluations, ., resetCount, (, )]
[evaluations]
[goal, ==, GoalType, ., MINIMIZE]
[goal]
[GoalType, ., MINIMIZE]
[GoalType]
[eval, (, func, ,, xA, )]
[func]
[xA]
[eval, (, func, ,, xB, )]
[func]
[xB]
[isMinim, ?, fA, <, fB, :, fA, >, fB]
[isMinim]
[fA, <, fB]
[fA]
[fB]
[fA, >, fB]
[fA]
[fB]
[xA]
[xA]
[xB]
[xB]
[tmp]
[tmp]
[fA]
[fA]
[fB]
[fB]
[tmp]
[xB, +, GOLD, *, (, xB, -, xA, )]
[xB]
[GOLD, *, (, xB, -, xA, )]
[GOLD]
[(, xB, -, xA, )]
[xB, -, xA]
[xB]
[xA]
[eval, (, func, ,, xC, )]
[func]
[xC]
[isMinim, ?, fC, <, fB, :, fC, >, fB]
[isMinim]
[fC, <, fB]
[fC]
[fB]
[fC, >, fB]
[fC]
[fB]
[(, xB, -, xA, ), *, (, fB, -, fC, )]
[(, xB, -, xA, )]
[xB, -, xA]
[xB]
[xA]
[(, fB, -, fC, )]
[fB, -, fC]
[fB]
[fC]
[(, xB, -, xC, ), *, (, fB, -, fA, )]
[(, xB, -, xC, )]
[xB, -, xC]
[xB]
[xC]
[(, fB, -, fA, )]
[fB, -, fA]
[fB]
[fA]
[tmp2, -, tmp1]
[tmp2]
[tmp1]
[Math, ., abs, (, val, ), <, EPS_MIN, ?, 2, *, EPS_MIN, :, 2, *, val]
[Math, ., abs, (, val, ), <, EPS_MIN]
[Math, ., abs, (, val, )]
[Math]
[val]
[EPS_MIN]
[2, *, EPS_MIN]
[2]
[EPS_MIN]
[2, *, val]
[2]
[val]
[xB, -, (, (, xB, -, xC, ), *, tmp2, -, (, xB, -, xA, ), *, tmp1, ), /, denom]
[xB]
[(, (, xB, -, xC, ), *, tmp2, -, (, xB, -, xA, ), *, tmp1, ), /, denom]
[(, (, xB, -, xC, ), *, tmp2, -, (, xB, -, xA, ), *, tmp1, )]
[(, xB, -, xC, ), *, tmp2, -, (, xB, -, xA, ), *, tmp1]
[(, xB, -, xC, ), *, tmp2]
[(, xB, -, xC, )]
[xB, -, xC]
[xB]
[xC]
[tmp2]
[(, xB, -, xA, ), *, tmp1]
[(, xB, -, xA, )]
[xB, -, xA]
[xB]
[xA]
[tmp1]
[denom]
[xB, +, growLimit, *, (, xC, -, xB, )]
[xB]
[growLimit, *, (, xC, -, xB, )]
[growLimit]
[(, xC, -, xB, )]
[xC, -, xB]
[xC]
[xB]
[(, w, -, xC, ), *, (, xB, -, w, ), >, 0]
[(, w, -, xC, ), *, (, xB, -, w, )]
[(, w, -, xC, )]
[w, -, xC]
[w]
[xC]
[(, xB, -, w, )]
[xB, -, w]
[xB]
[w]
[0]
[fW]
[eval, (, func, ,, w, )]
[func]
[w]
[isMinim, ?, fW, <, fC, :, fW, >, fC]
[isMinim]
[fW, <, fC]
[fW]
[fC]
[fW, >, fC]
[fW]
[fC]
[xA]
[xB]
[xB]
[w]
[fA]
[fB]
[fB]
[fW]
[isMinim, ?, fW, >, fB, :, fW, <, fB]
[isMinim]
[fW, >, fB]
[fW]
[fB]
[fW, <, fB]
[fW]
[fB]
[xC]
[w]
[fC]
[fW]
[w]
[xC, +, GOLD, *, (, xC, -, xB, )]
[xC]
[GOLD, *, (, xC, -, xB, )]
[GOLD]
[(, xC, -, xB, )]
[xC, -, xB]
[xC]
[xB]
[fW]
[eval, (, func, ,, w, )]
[func]
[w]
[(, w, -, wLim, ), *, (, wLim, -, xC, ), >=, 0]
[(, w, -, wLim, ), *, (, wLim, -, xC, )]
[(, w, -, wLim, )]
[w, -, wLim]
[w]
[wLim]
[(, wLim, -, xC, )]
[wLim, -, xC]
[wLim]
[xC]
[0]
[w]
[wLim]
[fW]
[eval, (, func, ,, w, )]
[func]
[w]
[(, w, -, wLim, ), *, (, xC, -, w, ), >, 0]
[(, w, -, wLim, ), *, (, xC, -, w, )]
[(, w, -, wLim, )]
[w, -, wLim]
[w]
[wLim]
[(, xC, -, w, )]
[xC, -, w]
[xC]
[w]
[0]
[fW]
[eval, (, func, ,, w, )]
[func]
[w]
[isMinim, ?, fW, <, fC, :, fW, >, fC]
[isMinim]
[fW, <, fC]
[fW]
[fC]
[fW, >, fC]
[fW]
[fC]
[xB]
[xC]
[xC]
[w]
[w]
[xC, +, GOLD, *, (, xC, -, xB, )]
[xC]
[GOLD, *, (, xC, -, xB, )]
[GOLD]
[(, xC, -, xB, )]
[xC, -, xB]
[xC]
[xB]
[fB]
[fC]
[fC]
[fW]
[fW]
[eval, (, func, ,, w, )]
[func]
[w]
[w]
[xC, +, GOLD, *, (, xC, -, xB, )]
[xC]
[GOLD, *, (, xC, -, xB, )]
[GOLD]
[(, xC, -, xB, )]
[xC, -, xB]
[xC]
[xB]
[fW]
[eval, (, func, ,, w, )]
[func]
[w]
[xA]
[xB]
[fA]
[fB]
[xB]
[xC]
[fB]
[fC]
[xC]
[w]
[fC]
[fW]
[lo]
[xA]
[fLo]
[fA]
[mid]
[xB]
[fMid]
[fB]
[hi]
[xC]
[fHi]
[fC]
[lo, >, hi]
[lo]
[hi]
[lo]
[lo]
[hi]
[hi]
[tmp]
[tmp]
[fLo]
[fLo]
[fHi]
[fHi]
[tmp]
[evaluations, ., getMaximalCount, (, )]
[evaluations]
[evaluations, ., getCount, (, )]
[evaluations]
[lo]
[fLo]
[hi]
[fHi]
[mid]
[fMid]
[evaluations, ., incrementCount, (, )]
[evaluations]
[new, TooManyEvaluationsException, (, e, ., getMax, (, ), )]
[e, ., getMax, (, )]
[e]
[f, ., value, (, x, )]
[f]
[x]
