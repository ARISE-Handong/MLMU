[8661194735290153518L]
[624]
[397]
[{, 0x0, ,, 0x9908b0df, }]
[0x0]
[0x9908b0df]
[mt]
[new, int, [, N, ]]
[N]
[setSeed, (, System, ., currentTimeMillis, (, ), +, System, ., identityHashCode, (, this, ), )]
[System, ., currentTimeMillis, (, ), +, System, ., identityHashCode, (, this, )]
[System, ., currentTimeMillis, (, )]
[System]
[System, ., identityHashCode, (, this, )]
[System]
[this]
[mt]
[new, int, [, N, ]]
[N]
[setSeed, (, seed, )]
[seed]
[mt]
[new, int, [, N, ]]
[N]
[setSeed, (, seed, )]
[seed]
[mt]
[new, int, [, N, ]]
[N]
[setSeed, (, seed, )]
[seed]
[seed]
[mt, [, 0, ]]
[mt]
[0]
[(, int, ), longMT]
[longMT]
[mti]
[1]
[mti, <, N]
[mti]
[N]
[++, mti]
[mti]
[longMT]
[(, 1812433253l, *, (, longMT, ^, (, longMT, >, >, 30, ), ), +, mti, ), &, 0xffffffffL]
[(, 1812433253l, *, (, longMT, ^, (, longMT, >, >, 30, ), ), +, mti, )]
[1812433253l, *, (, longMT, ^, (, longMT, >, >, 30, ), ), +, mti]
[1812433253l, *, (, longMT, ^, (, longMT, >, >, 30, ), )]
[1812433253l]
[(, longMT, ^, (, longMT, >, >, 30, ), )]
[longMT, ^, (, longMT, >, >, 30, )]
[longMT]
[(, longMT, >, >, 30, )]
[longMT, >, >, 30]
[longMT]
[30]
[mti]
[0xffffffffL]
[mt, [, mti, ]]
[mt]
[mti]
[(, int, ), longMT]
[longMT]
[clear, (, )]
[seed, ==, null]
[seed]
[null]
[setSeed, (, System, ., currentTimeMillis, (, ), +, System, ., identityHashCode, (, this, ), )]
[System, ., currentTimeMillis, (, ), +, System, ., identityHashCode, (, this, )]
[System, ., currentTimeMillis, (, )]
[System]
[System, ., identityHashCode, (, this, )]
[System]
[this]
[setSeed, (, 19650218, )]
[19650218]
[1]
[0]
[FastMath, ., max, (, N, ,, seed, ., length, )]
[FastMath]
[N]
[seed, ., length]
[seed]
[k, !=, 0]
[k]
[0]
[k, --]
[k]
[(, mt, [, i, ], &, 0x7fffffffl, ), |, (, (, mt, [, i, ], <, 0, ), ?, 0x80000000l, :, 0x0l, )]
[(, mt, [, i, ], &, 0x7fffffffl, )]
[mt, [, i, ], &, 0x7fffffffl]
[mt, [, i, ]]
[mt]
[i]
[0x7fffffffl]
[(, (, mt, [, i, ], <, 0, ), ?, 0x80000000l, :, 0x0l, )]
[(, mt, [, i, ], <, 0, ), ?, 0x80000000l, :, 0x0l]
[(, mt, [, i, ], <, 0, )]
[mt, [, i, ], <, 0]
[mt, [, i, ]]
[mt]
[i]
[0]
[0x80000000l]
[0x0l]
[(, mt, [, i, -, 1, ], &, 0x7fffffffl, ), |, (, (, mt, [, i, -, 1, ], <, 0, ), ?, 0x80000000l, :, 0x0l, )]
[(, mt, [, i, -, 1, ], &, 0x7fffffffl, )]
[mt, [, i, -, 1, ], &, 0x7fffffffl]
[mt, [, i, -, 1, ]]
[mt]
[i, -, 1]
[i]
[1]
[0x7fffffffl]
[(, (, mt, [, i, -, 1, ], <, 0, ), ?, 0x80000000l, :, 0x0l, )]
[(, mt, [, i, -, 1, ], <, 0, ), ?, 0x80000000l, :, 0x0l]
[(, mt, [, i, -, 1, ], <, 0, )]
[mt, [, i, -, 1, ], <, 0]
[mt, [, i, -, 1, ]]
[mt]
[i, -, 1]
[i]
[1]
[0]
[0x80000000l]
[0x0l]
[(, l0, ^, (, (, l1, ^, (, l1, >, >, 30, ), ), *, 1664525l, ), ), +, seed, [, j, ], +, j]
[(, l0, ^, (, (, l1, ^, (, l1, >, >, 30, ), ), *, 1664525l, ), ), +, seed, [, j, ]]
[(, l0, ^, (, (, l1, ^, (, l1, >, >, 30, ), ), *, 1664525l, ), )]
[l0, ^, (, (, l1, ^, (, l1, >, >, 30, ), ), *, 1664525l, )]
[l0]
[(, (, l1, ^, (, l1, >, >, 30, ), ), *, 1664525l, )]
[(, l1, ^, (, l1, >, >, 30, ), ), *, 1664525l]
[(, l1, ^, (, l1, >, >, 30, ), )]
[l1, ^, (, l1, >, >, 30, )]
[l1]
[(, l1, >, >, 30, )]
[l1, >, >, 30]
[l1]
[30]
[1664525l]
[seed, [, j, ]]
[seed]
[j]
[j]
[mt, [, i, ]]
[mt]
[i]
[(, int, ), (, l, &, 0xffffffffl, )]
[(, l, &, 0xffffffffl, )]
[l, &, 0xffffffffl]
[l]
[0xffffffffl]
[i, ++]
[i]
[j, ++]
[j]
[i, >=, N]
[i]
[N]
[mt, [, 0, ]]
[mt]
[0]
[mt, [, N, -, 1, ]]
[mt]
[N, -, 1]
[N]
[1]
[i]
[1]
[j, >=, seed, ., length]
[j]
[seed, ., length]
[seed]
[j]
[0]
[N, -, 1]
[N]
[1]
[k, !=, 0]
[k]
[0]
[k, --]
[k]
[(, mt, [, i, ], &, 0x7fffffffl, ), |, (, (, mt, [, i, ], <, 0, ), ?, 0x80000000l, :, 0x0l, )]
[(, mt, [, i, ], &, 0x7fffffffl, )]
[mt, [, i, ], &, 0x7fffffffl]
[mt, [, i, ]]
[mt]
[i]
[0x7fffffffl]
[(, (, mt, [, i, ], <, 0, ), ?, 0x80000000l, :, 0x0l, )]
[(, mt, [, i, ], <, 0, ), ?, 0x80000000l, :, 0x0l]
[(, mt, [, i, ], <, 0, )]
[mt, [, i, ], <, 0]
[mt, [, i, ]]
[mt]
[i]
[0]
[0x80000000l]
[0x0l]
[(, mt, [, i, -, 1, ], &, 0x7fffffffl, ), |, (, (, mt, [, i, -, 1, ], <, 0, ), ?, 0x80000000l, :, 0x0l, )]
[(, mt, [, i, -, 1, ], &, 0x7fffffffl, )]
[mt, [, i, -, 1, ], &, 0x7fffffffl]
[mt, [, i, -, 1, ]]
[mt]
[i, -, 1]
[i]
[1]
[0x7fffffffl]
[(, (, mt, [, i, -, 1, ], <, 0, ), ?, 0x80000000l, :, 0x0l, )]
[(, mt, [, i, -, 1, ], <, 0, ), ?, 0x80000000l, :, 0x0l]
[(, mt, [, i, -, 1, ], <, 0, )]
[mt, [, i, -, 1, ], <, 0]
[mt, [, i, -, 1, ]]
[mt]
[i, -, 1]
[i]
[1]
[0]
[0x80000000l]
[0x0l]
[(, l0, ^, (, (, l1, ^, (, l1, >, >, 30, ), ), *, 1566083941l, ), ), -, i]
[(, l0, ^, (, (, l1, ^, (, l1, >, >, 30, ), ), *, 1566083941l, ), )]
[l0, ^, (, (, l1, ^, (, l1, >, >, 30, ), ), *, 1566083941l, )]
[l0]
[(, (, l1, ^, (, l1, >, >, 30, ), ), *, 1566083941l, )]
[(, l1, ^, (, l1, >, >, 30, ), ), *, 1566083941l]
[(, l1, ^, (, l1, >, >, 30, ), )]
[l1, ^, (, l1, >, >, 30, )]
[l1]
[(, l1, >, >, 30, )]
[l1, >, >, 30]
[l1]
[30]
[1566083941l]
[i]
[mt, [, i, ]]
[mt]
[i]
[(, int, ), (, l, &, 0xffffffffL, )]
[(, l, &, 0xffffffffL, )]
[l, &, 0xffffffffL]
[l]
[0xffffffffL]
[i, ++]
[i]
[i, >=, N]
[i]
[N]
[mt, [, 0, ]]
[mt]
[0]
[mt, [, N, -, 1, ]]
[mt]
[N, -, 1]
[N]
[1]
[i]
[1]
[mt, [, 0, ]]
[mt]
[0]
[0x80000000]
[clear, (, )]
[setSeed, (, new, int, [, ], {, (, int, ), (, seed, >, >, >, 32, ), ,, (, int, ), (, seed, &, 0xffffffffl, ), }, )]
[new, int, [, ], {, (, int, ), (, seed, >, >, >, 32, ), ,, (, int, ), (, seed, &, 0xffffffffl, ), }]
[{, (, int, ), (, seed, >, >, >, 32, ), ,, (, int, ), (, seed, &, 0xffffffffl, ), }]
[(, int, ), (, seed, >, >, >, 32, )]
[(, seed, >, >, >, 32, )]
[seed, >, >, >, 32]
[seed]
[32]
[(, int, ), (, seed, &, 0xffffffffl, )]
[(, seed, &, 0xffffffffl, )]
[seed, &, 0xffffffffl]
[seed]
[0xffffffffl]
[mti, >=, N]
[mti]
[N]
[mt, [, 0, ]]
[mt]
[0]
[0]
[k, <, N, -, M]
[k]
[N, -, M]
[N]
[M]
[++, k]
[k]
[mtNext]
[mtNext]
[mt, [, k, +, 1, ]]
[mt]
[k, +, 1]
[k]
[1]
[y]
[(, mtCurr, &, 0x80000000, ), |, (, mtNext, &, 0x7fffffff, )]
[(, mtCurr, &, 0x80000000, )]
[mtCurr, &, 0x80000000]
[mtCurr]
[0x80000000]
[(, mtNext, &, 0x7fffffff, )]
[mtNext, &, 0x7fffffff]
[mtNext]
[0x7fffffff]
[mt, [, k, ]]
[mt]
[k]
[mt, [, k, +, M, ], ^, (, y, >, >, >, 1, ), ^, MAG01, [, y, &, 0x1, ]]
[mt, [, k, +, M, ], ^, (, y, >, >, >, 1, )]
[mt, [, k, +, M, ]]
[mt]
[k, +, M]
[k]
[M]
[(, y, >, >, >, 1, )]
[y, >, >, >, 1]
[y]
[1]
[MAG01, [, y, &, 0x1, ]]
[MAG01]
[y, &, 0x1]
[y]
[0x1]
[N, -, M]
[N]
[M]
[k, <, N, -, 1]
[k]
[N, -, 1]
[N]
[1]
[++, k]
[k]
[mtNext]
[mtNext]
[mt, [, k, +, 1, ]]
[mt]
[k, +, 1]
[k]
[1]
[y]
[(, mtCurr, &, 0x80000000, ), |, (, mtNext, &, 0x7fffffff, )]
[(, mtCurr, &, 0x80000000, )]
[mtCurr, &, 0x80000000]
[mtCurr]
[0x80000000]
[(, mtNext, &, 0x7fffffff, )]
[mtNext, &, 0x7fffffff]
[mtNext]
[0x7fffffff]
[mt, [, k, ]]
[mt]
[k]
[mt, [, k, +, (, M, -, N, ), ], ^, (, y, >, >, >, 1, ), ^, MAG01, [, y, &, 0x1, ]]
[mt, [, k, +, (, M, -, N, ), ], ^, (, y, >, >, >, 1, )]
[mt, [, k, +, (, M, -, N, ), ]]
[mt]
[k, +, (, M, -, N, )]
[k]
[(, M, -, N, )]
[M, -, N]
[M]
[N]
[(, y, >, >, >, 1, )]
[y, >, >, >, 1]
[y]
[1]
[MAG01, [, y, &, 0x1, ]]
[MAG01]
[y, &, 0x1]
[y]
[0x1]
[y]
[(, mtNext, &, 0x80000000, ), |, (, mt, [, 0, ], &, 0x7fffffff, )]
[(, mtNext, &, 0x80000000, )]
[mtNext, &, 0x80000000]
[mtNext]
[0x80000000]
[(, mt, [, 0, ], &, 0x7fffffff, )]
[mt, [, 0, ], &, 0x7fffffff]
[mt, [, 0, ]]
[mt]
[0]
[0x7fffffff]
[mt, [, N, -, 1, ]]
[mt]
[N, -, 1]
[N]
[1]
[mt, [, M, -, 1, ], ^, (, y, >, >, >, 1, ), ^, MAG01, [, y, &, 0x1, ]]
[mt, [, M, -, 1, ], ^, (, y, >, >, >, 1, )]
[mt, [, M, -, 1, ]]
[mt]
[M, -, 1]
[M]
[1]
[(, y, >, >, >, 1, )]
[y, >, >, >, 1]
[y]
[1]
[MAG01, [, y, &, 0x1, ]]
[MAG01]
[y, &, 0x1]
[y]
[0x1]
[mti]
[0]
[y]
[mt, [, mti, ++, ]]
[mt]
[mti, ++]
[mti]
[y]
[y, >, >, >, 11]
[y]
[11]
[y]
[(, y, <<, 7, ), &, 0x9d2c5680]
[(, y, <<, 7, )]
[y, <<, 7]
[y]
[7]
[0x9d2c5680]
[y]
[(, y, <<, 15, ), &, 0xefc60000]
[(, y, <<, 15, )]
[y, <<, 15]
[y]
[15]
[0xefc60000]
[y]
[y, >, >, >, 18]
[y]
[18]
[y, >, >, >, (, 32, -, bits, )]
[y]
[(, 32, -, bits, )]
[32, -, bits]
[32]
[bits]
