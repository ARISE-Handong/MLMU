[250]
[false]
[this, ., cache]
[this]
[cache]
[directParent, ==, null]
[directParent]
[null]
[this, ., lastSlot]
[this]
[null]
[this, ., depth]
[this]
[0]
[this, ., parent]
[this]
[cache, ., linkedEquivalent]
[cache]
[this, ., lastSlot]
[this]
[directParent, ., lastSlot]
[directParent]
[this, ., depth]
[this]
[directParent, ., depth, +, 1]
[directParent, ., depth]
[directParent]
[1]
[this, ., parent]
[this]
[directParent]
[cache]
[null]
[directParent, ., cache]
[directParent]
[directParent]
[cache, ., functionScope]
[cache]
[getFunctionScope, (, ), ., isBottom, (, )]
[getFunctionScope, (, )]
[new, LinkedFlowScope, (, new, FlatFlowScopeCache, (, scope, ), )]
[new, FlatFlowScopeCache, (, scope, )]
[scope]
[Preconditions, ., checkState, (, !, frozen, )]
[Preconditions]
[!, frozen]
[frozen]
[lastSlot]
[new, LinkedFlowSlot, (, symbol, ,, type, ,, lastSlot, )]
[symbol]
[type]
[lastSlot]
[depth, ++]
[depth]
[cache, ., dirtySymbols, ., add, (, symbol, )]
[cache, ., dirtySymbols]
[cache]
[symbol]
[getFunctionScope, (, )]
[functionScope, ., isLocal, (, )]
[functionScope]
[functionScope, ., getVar, (, symbol, ), ==, null, &&, !, functionScope, ., isBottom, (, )]
[functionScope, ., getVar, (, symbol, ), ==, null]
[functionScope, ., getVar, (, symbol, )]
[functionScope]
[symbol]
[null]
[!, functionScope, ., isBottom, (, )]
[functionScope, ., isBottom, (, )]
[functionScope]
[functionScope, ., declare, (, symbol, ,, node, ,, bottomType, ,, null, )]
[functionScope]
[symbol]
[node]
[bottomType]
[null]
[inferSlotType, (, symbol, ,, inferredType, )]
[symbol]
[inferredType]
[cache, ., functionScope, ., getTypeOfThis, (, )]
[cache, ., functionScope]
[cache]
[getFunctionScope, (, ), ., getRootNode, (, )]
[getFunctionScope, (, )]
[getFunctionScope, (, ), ., getParentScope, (, )]
[getFunctionScope, (, )]
[cache, ., dirtySymbols, ., contains, (, name, )]
[cache, ., dirtySymbols]
[cache]
[name]
[lastSlot]
[slot, !=, null]
[slot]
[null]
[slot]
[slot, ., parent]
[slot]
[slot, ., getName, (, ), ., equals, (, name, )]
[slot, ., getName, (, )]
[slot]
[name]
[slot]
[cache, ., getSlot, (, name, )]
[cache]
[name]
[new, UnsupportedOperationException, (, )]
[frozen]
[true]
[depth, >, MAX_DEPTH]
[depth]
[MAX_DEPTH]
[flattened, ==, null]
[flattened]
[null]
[flattened]
[new, FlatFlowScopeCache, (, this, )]
[this]
[new, LinkedFlowScope, (, flattened, )]
[flattened]
[new, LinkedFlowScope, (, this, )]
[this]
[null]
[this]
[currentScope, !=, blindScope]
[currentScope]
[blindScope]
[currentScope]
[currentScope, ., parent]
[currentScope]
[currentScope, ., lastSlot]
[currentScope]
[currentSlot, !=, null, &&, (, currentScope, ., parent, ==, null, ||, currentScope, ., parent, ., lastSlot, !=, currentSlot, )]
[currentSlot, !=, null]
[currentSlot]
[null]
[(, currentScope, ., parent, ==, null, ||, currentScope, ., parent, ., lastSlot, !=, currentSlot, )]
[currentScope, ., parent, ==, null, ||, currentScope, ., parent, ., lastSlot, !=, currentSlot]
[currentScope, ., parent, ==, null]
[currentScope, ., parent]
[currentScope]
[null]
[currentScope, ., parent, ., lastSlot, !=, currentSlot]
[currentScope, ., parent, ., lastSlot]
[currentScope, ., parent]
[currentScope]
[currentSlot]
[currentSlot]
[currentSlot, ., parent]
[currentSlot]
[result, ==, null]
[result]
[null]
[result]
[currentSlot]
[!, currentSlot, ., getName, (, ), ., equals, (, result, ., getName, (, ), )]
[currentSlot, ., getName, (, ), ., equals, (, result, ., getName, (, ), )]
[currentSlot, ., getName, (, )]
[currentSlot]
[result, ., getName, (, )]
[result]
[null]
[result]
[(, Scope, ), staticScope]
[staticScope]
[scope, ., getVars, (, )]
[scope]
[it, ., hasNext, (, )]
[it]
[it, ., next, (, )]
[it]
[var, ., isTypeInferred, (, )]
[var]
[var, ., getType, (, )]
[var]
[type, ==, null, ||, type, ., isUnknownType, (, )]
[type, ==, null]
[type]
[null]
[type, ., isUnknownType, (, )]
[type]
[getSlot, (, var, ., getName, (, ), ), ., getType, (, )]
[getSlot, (, var, ., getName, (, ), )]
[var, ., getName, (, )]
[var]
[var, ., setType, (, flowType, )]
[var]
[flowType]
[current]
[this]
[current, ., parent, !=, null, &&, current, ., lastSlot, ==, current, ., parent, ., lastSlot]
[current, ., parent, !=, null]
[current, ., parent]
[current]
[null]
[current, ., lastSlot, ==, current, ., parent, ., lastSlot]
[current, ., lastSlot]
[current]
[current, ., parent, ., lastSlot]
[current, ., parent]
[current]
[current]
[current, ., parent]
[current]
[current]
[@, SuppressWarnings, (, "unchecked", )]
["unchecked"]
[(, LinkedFlowScope, ), a]
[a]
[(, LinkedFlowScope, ), b]
[b]
[linkedA, ., frozen]
[linkedA]
[true]
[linkedB, ., frozen]
[linkedB]
[true]
[linkedA, ., optimize, (, ), ==, linkedB, ., optimize, (, )]
[linkedA, ., optimize, (, )]
[linkedA]
[linkedB, ., optimize, (, )]
[linkedB]
[linkedA, ., createChildFlowScope, (, )]
[linkedA]
[new, LinkedFlowScope, (, new, FlatFlowScopeCache, (, linkedA, ,, linkedB, ), )]
[new, FlatFlowScopeCache, (, linkedA, ,, linkedB, )]
[linkedA]
[linkedB]
[other, instanceof, LinkedFlowScope]
[other]
[(, LinkedFlowScope, ), other]
[other]
[this, ., optimize, (, ), ==, that, ., optimize, (, )]
[this, ., optimize, (, )]
[this]
[that, ., optimize, (, )]
[that]
[true]
[this, ., getFunctionScope, (, ), !=, that, ., getFunctionScope, (, )]
[this, ., getFunctionScope, (, )]
[this]
[that, ., getFunctionScope, (, )]
[that]
[false]
[cache, ==, that, ., cache]
[cache]
[that, ., cache]
[that]
[cache, ., dirtySymbols]
[cache]
[diffSlots, (, getSlot, (, name, ), ,, that, ., getSlot, (, name, ), )]
[getSlot, (, name, )]
[name]
[that, ., getSlot, (, name, )]
[that]
[name]
[false]
[true]
[allFlowSlots, (, )]
[that, ., allFlowSlots, (, )]
[that]
[myFlowSlots, ., values, (, )]
[myFlowSlots]
[diffSlots, (, slot, ,, otherFlowSlots, ., get, (, slot, ., getName, (, ), ), )]
[slot]
[otherFlowSlots, ., get, (, slot, ., getName, (, ), )]
[otherFlowSlots]
[slot, ., getName, (, )]
[slot]
[false]
[otherFlowSlots, ., remove, (, slot, ., getName, (, ), )]
[otherFlowSlots]
[slot, ., getName, (, )]
[slot]
[otherFlowSlots, ., values, (, )]
[otherFlowSlots]
[diffSlots, (, slot, ,, myFlowSlots, ., get, (, slot, ., getName, (, ), ), )]
[slot]
[myFlowSlots, ., get, (, slot, ., getName, (, ), )]
[myFlowSlots]
[slot, ., getName, (, )]
[slot]
[false]
[true]
[false]
[slotA, ==, null, ||, slotA, ., getType, (, ), ==, null]
[slotA, ==, null]
[slotA]
[null]
[slotA, ., getType, (, ), ==, null]
[slotA, ., getType, (, )]
[slotA]
[null]
[slotB, ==, null, ||, slotB, ., getType, (, ), ==, null]
[slotB, ==, null]
[slotB]
[null]
[slotB, ., getType, (, ), ==, null]
[slotB, ., getType, (, )]
[slotB]
[null]
[aIsNull, &&, bIsNull]
[aIsNull]
[bIsNull]
[false]
[aIsNull, ^, bIsNull]
[aIsNull]
[bIsNull]
[true]
[slotA, ., getType, (, ), ., differsFrom, (, slotB, ., getType, (, ), )]
[slotA, ., getType, (, )]
[slotA]
[slotB, ., getType, (, )]
[slotB]
[Maps, ., newHashMap, (, )]
[Maps]
[lastSlot]
[slot, !=, null]
[slot]
[null]
[slot]
[slot, ., parent]
[slot]
[!, slots, ., containsKey, (, slot, ., getName, (, ), )]
[slots, ., containsKey, (, slot, ., getName, (, ), )]
[slots]
[slot, ., getName, (, )]
[slot]
[slots, ., put, (, slot, ., getName, (, ), ,, slot, )]
[slots]
[slot, ., getName, (, )]
[slot]
[slot]
[cache, ., symbols, ., entrySet, (, )]
[cache, ., symbols]
[cache]
[!, slots, ., containsKey, (, symbolEntry, ., getKey, (, ), )]
[slots, ., containsKey, (, symbolEntry, ., getKey, (, ), )]
[slots]
[symbolEntry, ., getKey, (, )]
[symbolEntry]
[slots, ., put, (, symbolEntry, ., getKey, (, ), ,, symbolEntry, ., getValue, (, ), )]
[slots]
[symbolEntry, ., getKey, (, )]
[symbolEntry]
[symbolEntry, ., getValue, (, )]
[symbolEntry]
[slots]
[name]
[type]
[true]
[this, ., parent]
[this]
[parent]
[Maps, ., newHashMap, (, )]
[Maps]
[Sets, ., newHashSet, (, )]
[Sets]
[this, ., functionScope]
[this]
[functionScope]
[symbols]
[ImmutableMap, ., of, (, )]
[ImmutableMap]
[linkedEquivalent]
[null]
[directParent, ., cache]
[directParent]
[functionScope]
[cache, ., functionScope]
[cache]
[symbols]
[directParent, ., allFlowSlots, (, )]
[directParent]
[linkedEquivalent]
[directParent]
[linkedEquivalent]
[null]
[functionScope]
[joinedScopeA, ., flowsFromBottom, (, ), ?, joinedScopeB, ., getFunctionScope, (, ), :, joinedScopeA, ., getFunctionScope, (, )]
[joinedScopeA, ., flowsFromBottom, (, )]
[joinedScopeA]
[joinedScopeB, ., getFunctionScope, (, )]
[joinedScopeB]
[joinedScopeA, ., getFunctionScope, (, )]
[joinedScopeA]
[joinedScopeA, ., allFlowSlots, (, )]
[joinedScopeA]
[joinedScopeB, ., allFlowSlots, (, )]
[joinedScopeB]
[symbols]
[slotsA]
[Sets, ., newHashSet, (, symbols, ., keySet, (, ), )]
[Sets]
[symbols, ., keySet, (, )]
[symbols]
[symbolNames, ., addAll, (, slotsB, ., keySet, (, ), )]
[symbolNames]
[slotsB, ., keySet, (, )]
[slotsB]
[symbolNames]
[slotsA, ., get, (, name, )]
[slotsA]
[name]
[slotsB, ., get, (, name, )]
[slotsB]
[name]
[null]
[slotB, ==, null, ||, slotB, ., getType, (, ), ==, null]
[slotB, ==, null]
[slotB]
[null]
[slotB, ., getType, (, ), ==, null]
[slotB, ., getType, (, )]
[slotB]
[null]
[joinedScopeB, ., getFunctionScope, (, ), ., getSlot, (, name, )]
[joinedScopeB, ., getFunctionScope, (, )]
[joinedScopeB]
[name]
[fnSlot, ==, null, ?, null, :, fnSlot, ., getType, (, )]
[fnSlot, ==, null]
[fnSlot]
[null]
[null]
[fnSlot, ., getType, (, )]
[fnSlot]
[fnSlotType, ==, null]
[fnSlotType]
[null]
[joinedType]
[slotA, ., getType, (, ), ., getLeastSupertype, (, fnSlotType, )]
[slotA, ., getType, (, )]
[slotA]
[fnSlotType]
[slotA, ==, null, ||, slotA, ., getType, (, ), ==, null]
[slotA, ==, null]
[slotA]
[null]
[slotA, ., getType, (, ), ==, null]
[slotA, ., getType, (, )]
[slotA]
[null]
[joinedScopeA, ., getFunctionScope, (, ), ., getSlot, (, name, )]
[joinedScopeA, ., getFunctionScope, (, )]
[joinedScopeA]
[name]
[fnSlot, ==, null, ?, null, :, fnSlot, ., getType, (, )]
[fnSlot, ==, null]
[fnSlot]
[null]
[null]
[fnSlot, ., getType, (, )]
[fnSlot]
[fnSlotType, ==, null]
[fnSlotType]
[null]
[symbols, ., put, (, name, ,, slotB, )]
[symbols]
[name]
[slotB]
[joinedType]
[slotB, ., getType, (, ), ., getLeastSupertype, (, fnSlotType, )]
[slotB, ., getType, (, )]
[slotB]
[fnSlotType]
[joinedType]
[slotA, ., getType, (, ), ., getLeastSupertype, (, slotB, ., getType, (, ), )]
[slotA, ., getType, (, )]
[slotA]
[slotB, ., getType, (, )]
[slotB]
[joinedType, !=, null]
[joinedType]
[null]
[symbols, ., put, (, name, ,, new, SimpleSlot, (, name, ,, joinedType, ,, true, ), )]
[symbols]
[name]
[new, SimpleSlot, (, name, ,, joinedType, ,, true, )]
[name]
[joinedType]
[true]
[symbols, ., containsKey, (, name, )]
[symbols]
[name]
[symbols, ., get, (, name, )]
[symbols]
[name]
[functionScope, ., getSlot, (, name, )]
[functionScope]
[name]
