["arguments"]
[new, ArrayDeque, <, Renamer, >, (, )]
[new, ContextualRenamer, (, )]
[this, ., rootRenamer]
[this]
[renamer]
[new, ContextualRenameInverter, (, compiler, )]
[compiler]
[t, ., getScopeRoot, (, )]
[t]
[nameStack, ., isEmpty, (, )]
[nameStack]
[Preconditions, ., checkState, (, !, declarationRoot, ., isFunction, (, ), ||, !, (, rootRenamer, instanceof, ContextualRenamer, ), )]
[Preconditions]
[!, declarationRoot, ., isFunction, (, ), ||, !, (, rootRenamer, instanceof, ContextualRenamer, )]
[!, declarationRoot, ., isFunction, (, )]
[declarationRoot, ., isFunction, (, )]
[declarationRoot]
[!, (, rootRenamer, instanceof, ContextualRenamer, )]
[(, rootRenamer, instanceof, ContextualRenamer, )]
[rootRenamer, instanceof, ContextualRenamer]
[rootRenamer]
[Preconditions, ., checkState, (, t, ., inGlobalScope, (, ), )]
[Preconditions]
[t, ., inGlobalScope, (, )]
[t]
[renamer]
[rootRenamer]
[renamer]
[nameStack, ., peek, (, ), ., forChildScope, (, )]
[nameStack, ., peek, (, )]
[nameStack]
[!, declarationRoot, ., isFunction, (, )]
[declarationRoot, ., isFunction, (, )]
[declarationRoot]
[findDeclaredNames, (, declarationRoot, ,, null, ,, renamer, )]
[declarationRoot]
[null]
[renamer]
[nameStack, ., push, (, renamer, )]
[nameStack]
[renamer]
[!, t, ., inGlobalScope, (, )]
[t, ., inGlobalScope, (, )]
[t]
[nameStack, ., pop, (, )]
[nameStack]
[n, ., getType, (, )]
[n]
[Token, ., FUNCTION]
[Token]
[nameStack, ., peek, (, ), ., forChildScope, (, )]
[nameStack, ., peek, (, )]
[nameStack]
[n, ., getFirstChild, (, ), ., getString, (, )]
[n, ., getFirstChild, (, )]
[n]
[name, !=, null, &&, !, name, ., isEmpty, (, ), &&, parent, !=, null, &&, !, NodeUtil, ., isFunctionDeclaration, (, n, )]
[name, !=, null, &&, !, name, ., isEmpty, (, ), &&, parent, !=, null]
[name, !=, null, &&, !, name, ., isEmpty, (, )]
[name, !=, null]
[name]
[null]
[!, name, ., isEmpty, (, )]
[name, ., isEmpty, (, )]
[name]
[parent, !=, null]
[parent]
[null]
[!, NodeUtil, ., isFunctionDeclaration, (, n, )]
[NodeUtil, ., isFunctionDeclaration, (, n, )]
[NodeUtil]
[n]
[renamer, ., addDeclaredName, (, name, )]
[renamer]
[name]
[nameStack, ., push, (, renamer, )]
[nameStack]
[renamer]
[Token, ., PARAM_LIST]
[Token]
[nameStack, ., peek, (, ), ., forChildScope, (, )]
[nameStack, ., peek, (, )]
[nameStack]
[n, ., getFirstChild, (, )]
[n]
[c, !=, null]
[c]
[null]
[c]
[c, ., getNext, (, )]
[c]
[c, ., getString, (, )]
[c]
[renamer, ., addDeclaredName, (, name, )]
[renamer]
[name]
[n, ., getNext, (, )]
[n]
[findDeclaredNames, (, functionBody, ,, null, ,, renamer, )]
[functionBody]
[null]
[renamer]
[nameStack, ., push, (, renamer, )]
[nameStack]
[renamer]
[Token, ., CATCH]
[Token]
[nameStack, ., peek, (, ), ., forChildScope, (, )]
[nameStack, ., peek, (, )]
[nameStack]
[n, ., getFirstChild, (, ), ., getString, (, )]
[n, ., getFirstChild, (, )]
[n]
[renamer, ., addDeclaredName, (, name, )]
[renamer]
[name]
[nameStack, ., push, (, renamer, )]
[nameStack]
[renamer]
[true]
[n, ., getType, (, )]
[n]
[Token, ., NAME]
[Token]
[getReplacementName, (, n, ., getString, (, ), )]
[n, ., getString, (, )]
[n]
[newName, !=, null]
[newName]
[null]
[nameStack, ., peek, (, )]
[nameStack]
[renamer, ., stripConstIfReplaced, (, )]
[renamer]
[n, ., removeProp, (, Node, ., IS_CONSTANT_NAME, )]
[n]
[Node, ., IS_CONSTANT_NAME]
[Node]
[n, ., setString, (, newName, )]
[n]
[newName]
[t, ., getCompiler, (, ), ., reportCodeChange, (, )]
[t, ., getCompiler, (, )]
[t]
[Token, ., FUNCTION]
[Token]
[nameStack, ., pop, (, )]
[nameStack]
[nameStack, ., pop, (, )]
[nameStack]
[Token, ., PARAM_LIST]
[Token]
[Token, ., CATCH]
[Token]
[nameStack, ., pop, (, )]
[nameStack]
[nameStack]
[names, ., getReplacementName, (, oldName, )]
[names]
[oldName]
[newName, !=, null]
[newName]
[null]
[newName]
[null]
[parent, ==, null, ||, !, parent, ., isFunction, (, ), ||, n, ==, parent, ., getFirstChild, (, )]
[parent, ==, null, ||, !, parent, ., isFunction, (, )]
[parent, ==, null]
[parent]
[null]
[!, parent, ., isFunction, (, )]
[parent, ., isFunction, (, )]
[parent]
[n, ==, parent, ., getFirstChild, (, )]
[n]
[parent, ., getFirstChild, (, )]
[parent]
[NodeUtil, ., isVarDeclaration, (, n, )]
[NodeUtil]
[n]
[renamer, ., addDeclaredName, (, n, ., getString, (, ), )]
[renamer]
[n, ., getString, (, )]
[n]
[NodeUtil, ., isFunctionDeclaration, (, n, )]
[NodeUtil]
[n]
[n, ., getFirstChild, (, )]
[n]
[renamer, ., addDeclaredName, (, nameNode, ., getString, (, ), )]
[renamer]
[nameNode, ., getString, (, )]
[nameNode]
[n, ., getFirstChild, (, )]
[n]
[c, !=, null]
[c]
[null]
[c]
[c, ., getNext, (, )]
[c]
[findDeclaredNames, (, c, ,, n, ,, renamer, )]
[c]
[n]
[renamer]
[ImmutableSet, ., of, (, )]
[ImmutableSet]
[new, ArrayDeque, <, Set, <, String, >, >, (, )]
[Maps, ., newHashMap, (, )]
[Maps]
[this, ., compiler]
[this]
[compiler]
[NodeTraversal, ., traverse, (, compiler, ,, js, ,, this, )]
[NodeTraversal]
[compiler]
[js]
[this]
[indexOfSeparator, (, name, )]
[name]
[(, index, ==, -, 1, ), ?, name, :, name, ., substring, (, 0, ,, index, )]
[(, index, ==, -, 1, )]
[index, ==, -, 1]
[index]
[-, 1]
[1]
[name]
[name, ., substring, (, 0, ,, index, )]
[name]
[0]
[index]
[name, ., lastIndexOf, (, ContextualRenamer, ., UNIQUE_ID_SEPARATOR, )]
[name]
[ContextualRenamer, ., UNIQUE_ID_SEPARATOR]
[ContextualRenamer]
[name, ., indexOf, (, ContextualRenamer, ., UNIQUE_ID_SEPARATOR, ), !=, -, 1]
[name, ., indexOf, (, ContextualRenamer, ., UNIQUE_ID_SEPARATOR, )]
[name]
[ContextualRenamer, ., UNIQUE_ID_SEPARATOR]
[ContextualRenamer]
[-, 1]
[1]
[t, ., inGlobalScope, (, )]
[t]
[referenceStack, ., push, (, referencedNames, )]
[referenceStack]
[referencedNames]
[referencedNames]
[Sets, ., newHashSet, (, )]
[Sets]
[t, ., inGlobalScope, (, )]
[t]
[t, ., getScope, (, ), ., getVars, (, )]
[t, ., getScope, (, )]
[t]
[it, ., hasNext, (, )]
[it]
[it, ., next, (, )]
[it]
[handleScopeVar, (, v, )]
[v]
[referencedNames]
[referencedNames]
[referenceStack, ., pop, (, )]
[referenceStack]
[!, referenceStack, ., isEmpty, (, )]
[referenceStack, ., isEmpty, (, )]
[referenceStack]
[referencedNames, ., addAll, (, current, )]
[referencedNames]
[current]
[v, ., getName, (, )]
[v]
[containsSeparator, (, name, ), &&, !, getOrginalName, (, name, ), ., isEmpty, (, )]
[containsSeparator, (, name, )]
[name]
[!, getOrginalName, (, name, ), ., isEmpty, (, )]
[getOrginalName, (, name, ), ., isEmpty, (, )]
[getOrginalName, (, name, )]
[name]
[findReplacementName, (, name, )]
[name]
[referencedNames, ., remove, (, name, )]
[referencedNames]
[name]
[referencedNames, ., add, (, newName, )]
[referencedNames]
[newName]
[nameMap, ., get, (, name, )]
[nameMap]
[name]
[Preconditions, ., checkState, (, references, !=, null, )]
[Preconditions]
[references, !=, null]
[references]
[null]
[references]
[Preconditions, ., checkState, (, n, ., isName, (, ), )]
[Preconditions]
[n, ., isName, (, )]
[n]
[n, ., setString, (, newName, )]
[n]
[newName]
[compiler, ., reportCodeChange, (, )]
[compiler]
[nameMap, ., remove, (, name, )]
[nameMap]
[name]
[getOrginalName, (, name, )]
[name]
[original]
[0]
[!, isValidName, (, newName, )]
[isValidName, (, newName, )]
[newName]
[newName]
[original, +, ContextualRenamer, ., UNIQUE_ID_SEPARATOR, +, String, ., valueOf, (, i, ++, )]
[original, +, ContextualRenamer, ., UNIQUE_ID_SEPARATOR]
[original]
[ContextualRenamer, ., UNIQUE_ID_SEPARATOR]
[ContextualRenamer]
[String, ., valueOf, (, i, ++, )]
[String]
[i, ++]
[i]
[newName]
[TokenStream, ., isJSIdentifier, (, name, ), &&, !, referencedNames, ., contains, (, name, ), &&, !, name, ., equals, (, ARGUMENTS, )]
[TokenStream, ., isJSIdentifier, (, name, ), &&, !, referencedNames, ., contains, (, name, )]
[TokenStream, ., isJSIdentifier, (, name, )]
[TokenStream]
[name]
[!, referencedNames, ., contains, (, name, )]
[referencedNames, ., contains, (, name, )]
[referencedNames]
[name]
[!, name, ., equals, (, ARGUMENTS, )]
[name, ., equals, (, ARGUMENTS, )]
[name]
[ARGUMENTS]
[true]
[false]
[true]
[t, ., inGlobalScope, (, )]
[t]
[NodeUtil, ., isReferenceName, (, node, )]
[NodeUtil]
[node]
[node, ., getString, (, )]
[node]
[referencedNames, ., add, (, name, )]
[referencedNames]
[name]
[containsSeparator, (, name, )]
[name]
[addCandidateNameReference, (, name, ,, node, )]
[name]
[node]
[nameMap, ., get, (, name, )]
[nameMap]
[name]
[null, ==, nodes]
[null]
[nodes]
[nodes]
[Lists, ., newLinkedList, (, )]
[Lists]
[nameMap, ., put, (, name, ,, nodes, )]
[nameMap]
[name]
[nodes]
[nodes, ., add, (, n, )]
[nodes]
[n]
[Maps, ., newHashMap, (, )]
[Maps]
["$$"]
[this, ., global]
[this]
[true]
[nameUsage]
[HashMultiset, ., create, (, )]
[HashMultiset]
[this, ., global]
[this]
[false]
[this, ., nameUsage]
[this]
[nameUsage]
[new, ContextualRenamer, (, nameUsage, )]
[nameUsage]
[!, name, ., equals, (, ARGUMENTS, )]
[name, ., equals, (, ARGUMENTS, )]
[name]
[ARGUMENTS]
[global]
[reserveName, (, name, )]
[name]
[!, declarations, ., containsKey, (, name, )]
[declarations, ., containsKey, (, name, )]
[declarations]
[name]
[incrementNameCount, (, name, )]
[name]
[null]
[id, !=, 0]
[id]
[0]
[newName]
[getUniqueName, (, name, ,, id, )]
[name]
[id]
[declarations, ., put, (, name, ,, newName, )]
[declarations]
[name]
[newName]
[declarations, ., get, (, oldName, )]
[declarations]
[oldName]
[name, +, UNIQUE_ID_SEPARATOR, +, id]
[name, +, UNIQUE_ID_SEPARATOR]
[name]
[UNIQUE_ID_SEPARATOR]
[id]
[nameUsage, ., setCount, (, name, ,, 0, ,, 1, )]
[nameUsage]
[name]
[0]
[1]
[nameUsage, ., add, (, name, ,, 1, )]
[nameUsage]
[name]
[1]
[false]
[Maps, ., newHashMap, (, )]
[Maps]
[this, ., uniqueIdSupplier]
[this]
[uniqueIdSupplier]
[Preconditions, ., checkArgument, (, !, idPrefix, ., isEmpty, (, ), )]
[Preconditions]
[!, idPrefix, ., isEmpty, (, )]
[idPrefix, ., isEmpty, (, )]
[idPrefix]
[this, ., idPrefix]
[this]
[idPrefix]
[this, ., removeConstness]
[this]
[removeConstness]
[Preconditions, ., checkState, (, !, name, ., equals, (, ARGUMENTS, ), )]
[Preconditions]
[!, name, ., equals, (, ARGUMENTS, )]
[name, ., equals, (, ARGUMENTS, )]
[name]
[ARGUMENTS]
[!, declarations, ., containsKey, (, name, )]
[declarations, ., containsKey, (, name, )]
[declarations]
[name]
[declarations, ., put, (, name, ,, getUniqueName, (, name, ), )]
[declarations]
[name]
[getUniqueName, (, name, )]
[name]
[name, ., isEmpty, (, )]
[name]
[name]
[name, ., indexOf, (, ContextualRenamer, ., UNIQUE_ID_SEPARATOR, ), !=, -, 1]
[name, ., indexOf, (, ContextualRenamer, ., UNIQUE_ID_SEPARATOR, )]
[name]
[ContextualRenamer, ., UNIQUE_ID_SEPARATOR]
[ContextualRenamer]
[-, 1]
[1]
[name]
[name, ., substring, (, 0, ,, name, ., lastIndexOf, (, ContextualRenamer, ., UNIQUE_ID_SEPARATOR, ), )]
[name]
[0]
[name, ., lastIndexOf, (, ContextualRenamer, ., UNIQUE_ID_SEPARATOR, )]
[name]
[ContextualRenamer, ., UNIQUE_ID_SEPARATOR]
[ContextualRenamer]
[name, +, ContextualRenamer, ., UNIQUE_ID_SEPARATOR, +, idPrefix, +, uniqueIdSupplier, ., get, (, )]
[name, +, ContextualRenamer, ., UNIQUE_ID_SEPARATOR, +, idPrefix]
[name, +, ContextualRenamer, ., UNIQUE_ID_SEPARATOR]
[name]
[ContextualRenamer, ., UNIQUE_ID_SEPARATOR]
[ContextualRenamer]
[idPrefix]
[uniqueIdSupplier, ., get, (, )]
[uniqueIdSupplier]
[declarations, ., get, (, oldName, )]
[declarations]
[oldName]
[new, InlineRenamer, (, uniqueIdSupplier, ,, idPrefix, ,, removeConstness, )]
[uniqueIdSupplier]
[idPrefix]
[removeConstness]
[removeConstness]
[this, ., uniqueIdSupplier]
[this]
[uniqueIdSupplier]
[this, ., idPrefix]
[this]
[idPrefix]
[new, InlineRenamer, (, uniqueIdSupplier, ,, idPrefix, ,, false, )]
[uniqueIdSupplier]
[idPrefix]
[false]
[this, ., delegate]
[this]
[delegate]
[this, ., whitelist]
[this]
[whitelist]
[whitelist, ., contains, (, name, )]
[whitelist]
[name]
[delegate, ., addDeclaredName, (, name, )]
[delegate]
[name]
[whitelist, ., contains, (, oldName, ), ?, delegate, ., getReplacementName, (, oldName, ), :, null]
[whitelist, ., contains, (, oldName, )]
[whitelist]
[oldName]
[delegate, ., getReplacementName, (, oldName, )]
[delegate]
[oldName]
[null]
[delegate, ., stripConstIfReplaced, (, )]
[delegate]
[new, WhitelistedRenamer, (, delegate, ., forChildScope, (, ), ,, whitelist, )]
[delegate, ., forChildScope, (, )]
[delegate]
[whitelist]
