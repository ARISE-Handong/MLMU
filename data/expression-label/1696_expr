[matrix]
[0d]
[this, ., threshold]
[this]
[threshold]
[matrix, ., getRowDimension, (, )]
[matrix]
[matrix, ., getColumnDimension, (, )]
[matrix]
[qrt]
[matrix, ., transpose, (, ), ., getData, (, )]
[matrix, ., transpose, (, )]
[matrix]
[rDiag]
[new, double, [, FastMath, ., min, (, m, ,, n, ), ]]
[FastMath, ., min, (, m, ,, n, )]
[FastMath]
[m]
[n]
[cachedQ]
[null]
[cachedQT]
[null]
[cachedR]
[null]
[cachedH]
[null]
[decompose, (, qrt, )]
[qrt]
[0]
[minor, <, FastMath, ., min, (, qrt, ., length, ,, qrt, [, 0, ], ., length, )]
[minor]
[FastMath, ., min, (, qrt, ., length, ,, qrt, [, 0, ], ., length, )]
[FastMath]
[qrt, ., length]
[qrt]
[qrt, [, 0, ], ., length]
[qrt, [, 0, ]]
[qrt]
[0]
[minor, ++]
[minor]
[performHouseholderReflection, (, minor, ,, qrt, )]
[minor]
[qrt]
[qrt, [, minor, ]]
[qrt]
[minor]
[0]
[minor]
[row, <, qrtMinor, ., length]
[row]
[qrtMinor, ., length]
[qrtMinor]
[row, ++]
[row]
[qrtMinor, [, row, ]]
[qrtMinor]
[row]
[xNormSqr]
[c, *, c]
[c]
[c]
[(, qrtMinor, [, minor, ], >, 0, ), ?, -, FastMath, ., sqrt, (, xNormSqr, ), :, FastMath, ., sqrt, (, xNormSqr, )]
[(, qrtMinor, [, minor, ], >, 0, )]
[qrtMinor, [, minor, ], >, 0]
[qrtMinor, [, minor, ]]
[qrtMinor]
[minor]
[0]
[-, FastMath, ., sqrt, (, xNormSqr, )]
[FastMath, ., sqrt, (, xNormSqr, )]
[FastMath]
[xNormSqr]
[FastMath, ., sqrt, (, xNormSqr, )]
[FastMath]
[xNormSqr]
[rDiag, [, minor, ]]
[rDiag]
[minor]
[a]
[a, !=, 0.0]
[a]
[0.0]
[qrtMinor, [, minor, ]]
[qrtMinor]
[minor]
[a]
[minor, +, 1]
[minor]
[1]
[col, <, qrt, ., length]
[col]
[qrt, ., length]
[qrt]
[col, ++]
[col]
[qrt, [, col, ]]
[qrt]
[col]
[0]
[minor]
[row, <, qrtCol, ., length]
[row]
[qrtCol, ., length]
[qrtCol]
[row, ++]
[row]
[alpha]
[qrtCol, [, row, ], *, qrtMinor, [, row, ]]
[qrtCol, [, row, ]]
[qrtCol]
[row]
[qrtMinor, [, row, ]]
[qrtMinor]
[row]
[alpha]
[a, *, qrtMinor, [, minor, ]]
[a]
[qrtMinor, [, minor, ]]
[qrtMinor]
[minor]
[minor]
[row, <, qrtCol, ., length]
[row]
[qrtCol, ., length]
[qrtCol]
[row, ++]
[row]
[qrtCol, [, row, ]]
[qrtCol]
[row]
[alpha, *, qrtMinor, [, row, ]]
[alpha]
[qrtMinor, [, row, ]]
[qrtMinor]
[row]
[cachedR, ==, null]
[cachedR]
[null]
[qrt, ., length]
[qrt]
[qrt, [, 0, ], ., length]
[qrt, [, 0, ]]
[qrt]
[0]
[new, double, [, m, ], [, n, ]]
[m]
[n]
[FastMath, ., min, (, m, ,, n, ), -, 1]
[FastMath, ., min, (, m, ,, n, )]
[FastMath]
[m]
[n]
[1]
[row, >=, 0]
[row]
[0]
[row, --]
[row]
[ra, [, row, ], [, row, ]]
[ra, [, row, ]]
[ra]
[row]
[row]
[rDiag, [, row, ]]
[rDiag]
[row]
[row, +, 1]
[row]
[1]
[col, <, n]
[col]
[n]
[col, ++]
[col]
[ra, [, row, ], [, col, ]]
[ra, [, row, ]]
[ra]
[row]
[col]
[qrt, [, col, ], [, row, ]]
[qrt, [, col, ]]
[qrt]
[col]
[row]
[cachedR]
[MatrixUtils, ., createRealMatrix, (, ra, )]
[MatrixUtils]
[ra]
[cachedR]
[cachedQ, ==, null]
[cachedQ]
[null]
[cachedQ]
[getQT, (, ), ., transpose, (, )]
[getQT, (, )]
[cachedQ]
[cachedQT, ==, null]
[cachedQT]
[null]
[qrt, ., length]
[qrt]
[qrt, [, 0, ], ., length]
[qrt, [, 0, ]]
[qrt]
[0]
[new, double, [, m, ], [, m, ]]
[m]
[m]
[m, -, 1]
[m]
[1]
[minor, >=, FastMath, ., min, (, m, ,, n, )]
[minor]
[FastMath, ., min, (, m, ,, n, )]
[FastMath]
[m]
[n]
[minor, --]
[minor]
[qta, [, minor, ], [, minor, ]]
[qta, [, minor, ]]
[qta]
[minor]
[minor]
[1.0d]
[FastMath, ., min, (, m, ,, n, ), -, 1]
[FastMath, ., min, (, m, ,, n, )]
[FastMath]
[m]
[n]
[1]
[minor, >=, 0]
[minor]
[0]
[minor, --]
[minor]
[qrt, [, minor, ]]
[qrt]
[minor]
[qta, [, minor, ], [, minor, ]]
[qta, [, minor, ]]
[qta]
[minor]
[minor]
[1.0d]
[qrtMinor, [, minor, ], !=, 0.0]
[qrtMinor, [, minor, ]]
[qrtMinor]
[minor]
[0.0]
[minor]
[col, <, m]
[col]
[m]
[col, ++]
[col]
[0]
[minor]
[row, <, m]
[row]
[m]
[row, ++]
[row]
[alpha]
[qta, [, col, ], [, row, ], *, qrtMinor, [, row, ]]
[qta, [, col, ], [, row, ]]
[qta, [, col, ]]
[qta]
[col]
[row]
[qrtMinor, [, row, ]]
[qrtMinor]
[row]
[alpha]
[rDiag, [, minor, ], *, qrtMinor, [, minor, ]]
[rDiag, [, minor, ]]
[rDiag]
[minor]
[qrtMinor, [, minor, ]]
[qrtMinor]
[minor]
[minor]
[row, <, m]
[row]
[m]
[row, ++]
[row]
[qta, [, col, ], [, row, ]]
[qta, [, col, ]]
[qta]
[col]
[row]
[-, alpha, *, qrtMinor, [, row, ]]
[-, alpha]
[alpha]
[qrtMinor, [, row, ]]
[qrtMinor]
[row]
[cachedQT]
[MatrixUtils, ., createRealMatrix, (, qta, )]
[MatrixUtils]
[qta]
[cachedQT]
[cachedH, ==, null]
[cachedH]
[null]
[qrt, ., length]
[qrt]
[qrt, [, 0, ], ., length]
[qrt, [, 0, ]]
[qrt]
[0]
[new, double, [, m, ], [, n, ]]
[m]
[n]
[0]
[i, <, m]
[i]
[m]
[++, i]
[i]
[0]
[j, <, FastMath, ., min, (, i, +, 1, ,, n, )]
[j]
[FastMath, ., min, (, i, +, 1, ,, n, )]
[FastMath]
[i, +, 1]
[i]
[1]
[n]
[++, j]
[j]
[ha, [, i, ], [, j, ]]
[ha, [, i, ]]
[ha]
[i]
[j]
[qrt, [, j, ], [, i, ], /, -, rDiag, [, j, ]]
[qrt, [, j, ], [, i, ]]
[qrt, [, j, ]]
[qrt]
[j]
[i]
[-, rDiag, [, j, ]]
[rDiag, [, j, ]]
[rDiag]
[j]
[cachedH]
[MatrixUtils, ., createRealMatrix, (, ha, )]
[MatrixUtils]
[ha]
[cachedH]
[new, Solver, (, qrt, ,, rDiag, ,, threshold, )]
[qrt]
[rDiag]
[threshold]
[this, ., qrt]
[this]
[qrt]
[this, ., rDiag]
[this]
[rDiag]
[this, ., threshold]
[this]
[threshold]
[rDiag]
[FastMath, ., abs, (, diag, ), <=, threshold]
[FastMath, ., abs, (, diag, )]
[FastMath]
[diag]
[threshold]
[false]
[true]
[qrt, ., length]
[qrt]
[qrt, [, 0, ], ., length]
[qrt, [, 0, ]]
[qrt]
[0]
[b, ., getDimension, (, ), !=, m]
[b, ., getDimension, (, )]
[b]
[m]
[new, DimensionMismatchException, (, b, ., getDimension, (, ), ,, m, )]
[b, ., getDimension, (, )]
[b]
[m]
[!, isNonSingular, (, )]
[isNonSingular, (, )]
[new, SingularMatrixException, (, )]
[new, double, [, n, ]]
[n]
[b, ., toArray, (, )]
[b]
[0]
[minor, <, FastMath, ., min, (, m, ,, n, )]
[minor]
[FastMath, ., min, (, m, ,, n, )]
[FastMath]
[m]
[n]
[minor, ++]
[minor]
[qrt, [, minor, ]]
[qrt]
[minor]
[0]
[minor]
[row, <, m]
[row]
[m]
[row, ++]
[row]
[dotProduct]
[y, [, row, ], *, qrtMinor, [, row, ]]
[y, [, row, ]]
[y]
[row]
[qrtMinor, [, row, ]]
[qrtMinor]
[row]
[dotProduct]
[rDiag, [, minor, ], *, qrtMinor, [, minor, ]]
[rDiag, [, minor, ]]
[rDiag]
[minor]
[qrtMinor, [, minor, ]]
[qrtMinor]
[minor]
[minor]
[row, <, m]
[row]
[m]
[row, ++]
[row]
[y, [, row, ]]
[y]
[row]
[dotProduct, *, qrtMinor, [, row, ]]
[dotProduct]
[qrtMinor, [, row, ]]
[qrtMinor]
[row]
[rDiag, ., length, -, 1]
[rDiag, ., length]
[rDiag]
[1]
[row, >=, 0]
[row]
[0]
[--, row]
[row]
[y, [, row, ]]
[y]
[row]
[rDiag, [, row, ]]
[rDiag]
[row]
[y, [, row, ]]
[y]
[row]
[qrt, [, row, ]]
[qrt]
[row]
[x, [, row, ]]
[x]
[row]
[yRow]
[0]
[i, <, row]
[i]
[row]
[i, ++]
[i]
[y, [, i, ]]
[y]
[i]
[yRow, *, qrtRow, [, i, ]]
[yRow]
[qrtRow, [, i, ]]
[qrtRow]
[i]
[new, ArrayRealVector, (, x, ,, false, )]
[x]
[false]
[qrt, ., length]
[qrt]
[qrt, [, 0, ], ., length]
[qrt, [, 0, ]]
[qrt]
[0]
[b, ., getRowDimension, (, ), !=, m]
[b, ., getRowDimension, (, )]
[b]
[m]
[new, DimensionMismatchException, (, b, ., getRowDimension, (, ), ,, m, )]
[b, ., getRowDimension, (, )]
[b]
[m]
[!, isNonSingular, (, )]
[isNonSingular, (, )]
[new, SingularMatrixException, (, )]
[b, ., getColumnDimension, (, )]
[b]
[BlockRealMatrix, ., BLOCK_SIZE]
[BlockRealMatrix]
[(, columns, +, blockSize, -, 1, ), /, blockSize]
[(, columns, +, blockSize, -, 1, )]
[columns, +, blockSize, -, 1]
[columns, +, blockSize]
[columns]
[blockSize]
[1]
[blockSize]
[BlockRealMatrix, ., createBlocksLayout, (, n, ,, columns, )]
[BlockRealMatrix]
[n]
[columns]
[new, double, [, b, ., getRowDimension, (, ), ], [, blockSize, ]]
[b, ., getRowDimension, (, )]
[b]
[blockSize]
[new, double, [, blockSize, ]]
[blockSize]
[0]
[kBlock, <, cBlocks]
[kBlock]
[cBlocks]
[++, kBlock]
[kBlock]
[kBlock, *, blockSize]
[kBlock]
[blockSize]
[FastMath, ., min, (, kStart, +, blockSize, ,, columns, )]
[FastMath]
[kStart, +, blockSize]
[kStart]
[blockSize]
[columns]
[kEnd, -, kStart]
[kEnd]
[kStart]
[b, ., copySubMatrix, (, 0, ,, m, -, 1, ,, kStart, ,, kEnd, -, 1, ,, y, )]
[b]
[0]
[m, -, 1]
[m]
[1]
[kStart]
[kEnd, -, 1]
[kEnd]
[1]
[y]
[0]
[minor, <, FastMath, ., min, (, m, ,, n, )]
[minor]
[FastMath, ., min, (, m, ,, n, )]
[FastMath]
[m]
[n]
[minor, ++]
[minor]
[qrt, [, minor, ]]
[qrt]
[minor]
[1.0, /, (, rDiag, [, minor, ], *, qrtMinor, [, minor, ], )]
[1.0]
[(, rDiag, [, minor, ], *, qrtMinor, [, minor, ], )]
[rDiag, [, minor, ], *, qrtMinor, [, minor, ]]
[rDiag, [, minor, ]]
[rDiag]
[minor]
[qrtMinor, [, minor, ]]
[qrtMinor]
[minor]
[Arrays, ., fill, (, alpha, ,, 0, ,, kWidth, ,, 0.0, )]
[Arrays]
[alpha]
[0]
[kWidth]
[0.0]
[minor]
[row, <, m]
[row]
[m]
[++, row]
[row]
[qrtMinor, [, row, ]]
[qrtMinor]
[row]
[y, [, row, ]]
[y]
[row]
[0]
[k, <, kWidth]
[k]
[kWidth]
[++, k]
[k]
[alpha, [, k, ]]
[alpha]
[k]
[d, *, yRow, [, k, ]]
[d]
[yRow, [, k, ]]
[yRow]
[k]
[0]
[k, <, kWidth]
[k]
[kWidth]
[++, k]
[k]
[alpha, [, k, ]]
[alpha]
[k]
[factor]
[minor]
[row, <, m]
[row]
[m]
[++, row]
[row]
[qrtMinor, [, row, ]]
[qrtMinor]
[row]
[y, [, row, ]]
[y]
[row]
[0]
[k, <, kWidth]
[k]
[kWidth]
[++, k]
[k]
[yRow, [, k, ]]
[yRow]
[k]
[alpha, [, k, ], *, d]
[alpha, [, k, ]]
[alpha]
[k]
[d]
[rDiag, ., length, -, 1]
[rDiag, ., length]
[rDiag]
[1]
[j, >=, 0]
[j]
[0]
[--, j]
[j]
[j, /, blockSize]
[j]
[blockSize]
[jBlock, *, blockSize]
[jBlock]
[blockSize]
[1.0, /, rDiag, [, j, ]]
[1.0]
[rDiag, [, j, ]]
[rDiag]
[j]
[y, [, j, ]]
[y]
[j]
[xBlocks, [, jBlock, *, cBlocks, +, kBlock, ]]
[xBlocks]
[jBlock, *, cBlocks, +, kBlock]
[jBlock, *, cBlocks]
[jBlock]
[cBlocks]
[kBlock]
[(, j, -, jStart, ), *, kWidth]
[(, j, -, jStart, )]
[j, -, jStart]
[j]
[jStart]
[kWidth]
[0]
[k, <, kWidth]
[k]
[kWidth]
[++, k]
[k]
[yJ, [, k, ]]
[yJ]
[k]
[factor]
[xBlock, [, index, ++, ]]
[xBlock]
[index, ++]
[index]
[yJ, [, k, ]]
[yJ]
[k]
[qrt, [, j, ]]
[qrt]
[j]
[0]
[i, <, j]
[i]
[j]
[++, i]
[i]
[qrtJ, [, i, ]]
[qrtJ]
[i]
[y, [, i, ]]
[y]
[i]
[0]
[k, <, kWidth]
[k]
[kWidth]
[++, k]
[k]
[yI, [, k, ]]
[yI]
[k]
[yJ, [, k, ], *, rIJ]
[yJ, [, k, ]]
[yJ]
[k]
[rIJ]
[new, BlockRealMatrix, (, n, ,, columns, ,, xBlocks, ,, false, )]
[n]
[columns]
[xBlocks]
[false]
[solve, (, MatrixUtils, ., createRealIdentityMatrix, (, rDiag, ., length, ), )]
[MatrixUtils, ., createRealIdentityMatrix, (, rDiag, ., length, )]
[MatrixUtils]
[rDiag, ., length]
[rDiag]
