["goog.getCssName"]
[DiagnosticType, ., error, (, "JSC_GETCSSNAME_NUM_ARGS", ,, "goog.getCssName called with \"{0}\" arguments, expected 1 or 2.", )]
[DiagnosticType]
["JSC_GETCSSNAME_NUM_ARGS"]
["goog.getCssName called with \"{0}\" arguments, expected 1 or 2."]
[DiagnosticType, ., error, (, "JSC_GETCSSNAME_STRING_LITERAL_EXPECTED", ,, "goog.getCssName called with invalid argument, string literal ", +, "expected.  Was \"{0}\".", )]
[DiagnosticType]
["JSC_GETCSSNAME_STRING_LITERAL_EXPECTED"]
["goog.getCssName called with invalid argument, string literal ", +, "expected.  Was \"{0}\"."]
["goog.getCssName called with invalid argument, string literal "]
["expected.  Was \"{0}\"."]
[DiagnosticType, ., error, (, "JSC_GETCSSNAME_UNEXPECTED_STRING_LITERAL", ,, "goog.getCssName called with invalid arguments, string literal ", +, "passed as first of two arguments.  Did you mean ", +, "goog.getCssName(\"{0}-{1}\")?", )]
[DiagnosticType]
["JSC_GETCSSNAME_UNEXPECTED_STRING_LITERAL"]
["goog.getCssName called with invalid arguments, string literal ", +, "passed as first of two arguments.  Did you mean ", +, "goog.getCssName(\"{0}-{1}\")?"]
["goog.getCssName called with invalid arguments, string literal ", +, "passed as first of two arguments.  Did you mean "]
["goog.getCssName called with invalid arguments, string literal "]
["passed as first of two arguments.  Did you mean "]
["goog.getCssName(\"{0}-{1}\")?"]
[DiagnosticType, ., warning, (, "JSC_GETCSSNAME_UNKNOWN_CSS_SYMBOL", ,, "goog.getCssName called with unrecognized symbol \"{0}\" in class ", +, "\"{1}\".", )]
[DiagnosticType]
["JSC_GETCSSNAME_UNKNOWN_CSS_SYMBOL"]
["goog.getCssName called with unrecognized symbol \"{0}\" in class ", +, "\"{1}\"."]
["goog.getCssName called with unrecognized symbol \"{0}\" in class "]
["\"{1}\"."]
[this, ., compiler]
[this]
[compiler]
[this, ., cssNames]
[this]
[cssNames]
[this, ., whitelist]
[this]
[whitelist]
[this, ., nativeStringType]
[this]
[compiler, ., getTypeRegistry, (, ), ., getNativeType, (, STRING_TYPE, )]
[compiler, ., getTypeRegistry, (, )]
[compiler]
[STRING_TYPE]
[symbolMap]
[getCssRenamingMap, (, )]
[NodeTraversal, ., traverse, (, compiler, ,, root, ,, new, Traversal, (, ), )]
[NodeTraversal]
[compiler]
[root]
[new, Traversal, (, )]
[compiler, ., getCssRenamingMap, (, )]
[compiler]
[n, ., isCall, (, ), &&, GET_CSS_NAME_FUNCTION, ., equals, (, n, ., getFirstChild, (, ), ., getQualifiedName, (, ), )]
[n, ., isCall, (, )]
[n]
[GET_CSS_NAME_FUNCTION, ., equals, (, n, ., getFirstChild, (, ), ., getQualifiedName, (, ), )]
[GET_CSS_NAME_FUNCTION]
[n, ., getFirstChild, (, ), ., getQualifiedName, (, )]
[n, ., getFirstChild, (, )]
[n]
[n, ., getChildCount, (, )]
[n]
[n, ., getFirstChild, (, ), ., getNext, (, )]
[n, ., getFirstChild, (, )]
[n]
[count]
[2]
[first, ., isString, (, )]
[first]
[processStringNode, (, t, ,, first, )]
[t]
[first]
[n, ., removeChild, (, first, )]
[n]
[first]
[parent, ., replaceChild, (, n, ,, first, )]
[parent]
[n]
[first]
[compiler, ., reportCodeChange, (, )]
[compiler]
[compiler, ., report, (, t, ., makeError, (, n, ,, STRING_LITERAL_EXPECTED_ERROR, ,, Token, ., name, (, first, ., getType, (, ), ), ), )]
[compiler]
[t, ., makeError, (, n, ,, STRING_LITERAL_EXPECTED_ERROR, ,, Token, ., name, (, first, ., getType, (, ), ), )]
[t]
[n]
[STRING_LITERAL_EXPECTED_ERROR]
[Token, ., name, (, first, ., getType, (, ), )]
[Token]
[first, ., getType, (, )]
[first]
[3]
[first, ., getNext, (, )]
[first]
[!, second, ., isString, (, )]
[second, ., isString, (, )]
[second]
[compiler, ., report, (, t, ., makeError, (, n, ,, STRING_LITERAL_EXPECTED_ERROR, ,, Token, ., name, (, second, ., getType, (, ), ), ), )]
[compiler]
[t, ., makeError, (, n, ,, STRING_LITERAL_EXPECTED_ERROR, ,, Token, ., name, (, second, ., getType, (, ), ), )]
[t]
[n]
[STRING_LITERAL_EXPECTED_ERROR]
[Token, ., name, (, second, ., getType, (, ), )]
[Token]
[second, ., getType, (, )]
[second]
[first, ., isString, (, )]
[first]
[compiler, ., report, (, t, ., makeError, (, n, ,, UNEXPECTED_STRING_LITERAL_ERROR, ,, first, ., getString, (, ), ,, second, ., getString, (, ), ), )]
[compiler]
[t, ., makeError, (, n, ,, UNEXPECTED_STRING_LITERAL_ERROR, ,, first, ., getString, (, ), ,, second, ., getString, (, ), )]
[t]
[n]
[UNEXPECTED_STRING_LITERAL_ERROR]
[first, ., getString, (, )]
[first]
[second, ., getString, (, )]
[second]
[processStringNode, (, t, ,, second, )]
[t]
[second]
[n, ., removeChild, (, first, )]
[n]
[first]
[IR, ., add, (, first, ,, IR, ., string, (, "-", +, second, ., getString, (, ), ), ., copyInformationFrom, (, second, ), ), ., copyInformationFrom, (, n, )]
[IR, ., add, (, first, ,, IR, ., string, (, "-", +, second, ., getString, (, ), ), ., copyInformationFrom, (, second, ), )]
[IR]
[first]
[IR, ., string, (, "-", +, second, ., getString, (, ), ), ., copyInformationFrom, (, second, )]
[IR, ., string, (, "-", +, second, ., getString, (, ), )]
[IR]
["-", +, second, ., getString, (, )]
["-"]
[second, ., getString, (, )]
[second]
[second]
[n]
[replacement, ., setJSType, (, nativeStringType, )]
[replacement]
[nativeStringType]
[parent, ., replaceChild, (, n, ,, replacement, )]
[parent]
[n]
[replacement]
[compiler, ., reportCodeChange, (, )]
[compiler]
[compiler, ., report, (, t, ., makeError, (, n, ,, INVALID_NUM_ARGUMENTS_ERROR, ,, String, ., valueOf, (, count, ), ), )]
[compiler]
[t, ., makeError, (, n, ,, INVALID_NUM_ARGUMENTS_ERROR, ,, String, ., valueOf, (, count, ), )]
[t]
[n]
[INVALID_NUM_ARGUMENTS_ERROR]
[String, ., valueOf, (, count, )]
[String]
[count]
[n, ., getString, (, )]
[n]
[whitelist, !=, null, &&, whitelist, ., contains, (, name, )]
[whitelist, !=, null]
[whitelist]
[null]
[whitelist, ., contains, (, name, )]
[whitelist]
[name]
[name, ., split, (, "-", )]
[name]
["-"]
[symbolMap, !=, null]
[symbolMap]
[null]
[null]
[symbolMap, ., getStyle, (, )]
[symbolMap]
[BY_WHOLE]
[replacement]
[symbolMap, ., get, (, name, )]
[symbolMap]
[name]
[replacement, ==, null]
[replacement]
[null]
[compiler, ., report, (, t, ., makeError, (, n, ,, UNKNOWN_SYMBOL_WARNING, ,, name, ,, name, ), )]
[compiler]
[t, ., makeError, (, n, ,, UNKNOWN_SYMBOL_WARNING, ,, name, ,, name, )]
[t]
[n]
[UNKNOWN_SYMBOL_WARNING]
[name]
[name]
[BY_PART]
[new, String, [, parts, ., length, ]]
[parts, ., length]
[parts]
[0]
[i, <, parts, ., length]
[i]
[parts, ., length]
[parts]
[i, ++]
[i]
[symbolMap, ., get, (, parts, [, i, ], )]
[symbolMap]
[parts, [, i, ]]
[parts]
[i]
[part, ==, null]
[part]
[null]
[compiler, ., report, (, t, ., makeError, (, n, ,, UNKNOWN_SYMBOL_WARNING, ,, parts, [, i, ], ,, name, ), )]
[compiler]
[t, ., makeError, (, n, ,, UNKNOWN_SYMBOL_WARNING, ,, parts, [, i, ], ,, name, )]
[t]
[n]
[UNKNOWN_SYMBOL_WARNING]
[parts, [, i, ]]
[parts]
[i]
[name]
[replaced, [, i, ]]
[replaced]
[i]
[part]
[replacement]
[Joiner, ., on, (, "-", ), ., join, (, replaced, )]
[Joiner, ., on, (, "-", )]
[Joiner]
["-"]
[replaced]
[new, IllegalStateException, (, "Unknown replacement style: ", +, symbolMap, ., getStyle, (, ), )]
["Unknown replacement style: ", +, symbolMap, ., getStyle, (, )]
["Unknown replacement style: "]
[symbolMap, ., getStyle, (, )]
[symbolMap]
[n, ., setString, (, replacement, )]
[n]
[replacement]
[cssNames, !=, null]
[cssNames]
[null]
[0]
[i, <, parts, ., length]
[i]
[parts, ., length]
[parts]
[i, ++]
[i]
[cssNames, ., get, (, parts, [, i, ], )]
[cssNames]
[parts, [, i, ]]
[parts]
[i]
[count, ==, null]
[count]
[null]
[count]
[Integer, ., valueOf, (, 0, )]
[Integer]
[0]
[cssNames, ., put, (, parts, [, i, ], ,, count, ., intValue, (, ), +, 1, )]
[cssNames]
[parts, [, i, ]]
[parts]
[i]
[count, ., intValue, (, ), +, 1]
[count, ., intValue, (, )]
[count]
[1]
