["prototype"]
[Preconditions, ., checkNotNull, (, compiler, )]
[Preconditions]
[compiler]
[Preconditions, ., checkNotNull, (, exportSymbolFunction, )]
[Preconditions]
[exportSymbolFunction]
[Preconditions, ., checkNotNull, (, exportPropertyFunction, )]
[Preconditions]
[exportPropertyFunction]
[this, ., compiler]
[this]
[compiler]
[this, ., exportSymbolFunction]
[this]
[exportSymbolFunction]
[this, ., exportPropertyFunction]
[this]
[exportPropertyFunction]
[new, FindExportableNodes, (, compiler, )]
[compiler]
[NodeTraversal, ., traverse, (, compiler, ,, root, ,, findExportableNodes, )]
[NodeTraversal]
[compiler]
[root]
[findExportableNodes]
[findExportableNodes, ., getExports, (, )]
[findExportableNodes]
[compiler, ., getCodingConvention, (, )]
[compiler]
[exports, ., entrySet, (, )]
[exports]
[entry, ., getKey, (, )]
[entry]
[entry, ., getValue, (, )]
[entry]
[null]
[null]
[context, ., getNode, (, ), ., getFirstChild, (, )]
[context, ., getNode, (, )]
[context]
[node, ., isGetProp, (, )]
[node]
[parent]
[node, ., getFirstChild, (, ), ., getQualifiedName, (, )]
[node, ., getFirstChild, (, )]
[node]
[node, ., getFirstChild, (, ), ., isGetProp, (, ), &&, getPropertyName, (, node, ., getFirstChild, (, ), ), ., equals, (, PROTOTYPE_PROPERTY, )]
[node, ., getFirstChild, (, ), ., isGetProp, (, )]
[node, ., getFirstChild, (, )]
[node]
[getPropertyName, (, node, ., getFirstChild, (, ), ), ., equals, (, PROTOTYPE_PROPERTY, )]
[getPropertyName, (, node, ., getFirstChild, (, ), )]
[node, ., getFirstChild, (, )]
[node]
[PROTOTYPE_PROPERTY]
[grandparent]
[node, ., getFirstChild, (, ), ., getFirstChild, (, ), ., getQualifiedName, (, )]
[node, ., getFirstChild, (, ), ., getFirstChild, (, )]
[node, ., getFirstChild, (, )]
[node]
[true]
[grandparent, !=, null, &&, exports, ., containsKey, (, grandparent, )]
[grandparent, !=, null]
[grandparent]
[null]
[exports, ., containsKey, (, grandparent, )]
[exports]
[grandparent]
[useExportSymbol]
[false]
[parent, !=, null, &&, exports, ., containsKey, (, parent, )]
[parent, !=, null]
[parent]
[null]
[exports, ., containsKey, (, parent, )]
[exports]
[parent]
[useExportSymbol]
[false]
[useExportSymbol]
[call]
[IR, ., call, (, NodeUtil, ., newQualifiedNameNode, (, convention, ,, exportSymbolFunction, ,, context, ., getNode, (, ), ,, export, ), ,, IR, ., string, (, export, ), ,, NodeUtil, ., newQualifiedNameNode, (, convention, ,, export, ,, context, ., getNode, (, ), ,, export, ), )]
[IR]
[NodeUtil, ., newQualifiedNameNode, (, convention, ,, exportSymbolFunction, ,, context, ., getNode, (, ), ,, export, )]
[NodeUtil]
[convention]
[exportSymbolFunction]
[context, ., getNode, (, )]
[context]
[export]
[IR, ., string, (, export, )]
[IR]
[export]
[NodeUtil, ., newQualifiedNameNode, (, convention, ,, export, ,, context, ., getNode, (, ), ,, export, )]
[NodeUtil]
[convention]
[export]
[context, ., getNode, (, )]
[context]
[export]
[getPropertyName, (, node, )]
[node]
[call]
[IR, ., call, (, NodeUtil, ., newQualifiedNameNode, (, convention, ,, exportPropertyFunction, ,, context, ., getNode, (, ), ,, exportPropertyFunction, ), ,, NodeUtil, ., newQualifiedNameNode, (, convention, ,, parent, ,, context, ., getNode, (, ), ,, exportPropertyFunction, ), ,, IR, ., string, (, property, ), ,, NodeUtil, ., newQualifiedNameNode, (, convention, ,, export, ,, context, ., getNode, (, ), ,, exportPropertyFunction, ), )]
[IR]
[NodeUtil, ., newQualifiedNameNode, (, convention, ,, exportPropertyFunction, ,, context, ., getNode, (, ), ,, exportPropertyFunction, )]
[NodeUtil]
[convention]
[exportPropertyFunction]
[context, ., getNode, (, )]
[context]
[exportPropertyFunction]
[NodeUtil, ., newQualifiedNameNode, (, convention, ,, parent, ,, context, ., getNode, (, ), ,, exportPropertyFunction, )]
[NodeUtil]
[convention]
[parent]
[context, ., getNode, (, )]
[context]
[exportPropertyFunction]
[IR, ., string, (, property, )]
[IR]
[property]
[NodeUtil, ., newQualifiedNameNode, (, convention, ,, export, ,, context, ., getNode, (, ), ,, exportPropertyFunction, )]
[NodeUtil]
[convention]
[export]
[context, ., getNode, (, )]
[context]
[exportPropertyFunction]
[IR, ., exprResult, (, call, )]
[IR]
[call]
[annotate, (, expression, )]
[expression]
[context, ., getContextNode, (, ), ., getNext, (, )]
[context, ., getContextNode, (, )]
[context]
[insertionPoint, !=, null, &&, NodeUtil, ., isExprCall, (, insertionPoint, ), &&, convention, ., getClassesDefinedByCall, (, insertionPoint, ., getFirstChild, (, ), ), !=, null]
[insertionPoint, !=, null, &&, NodeUtil, ., isExprCall, (, insertionPoint, )]
[insertionPoint, !=, null]
[insertionPoint]
[null]
[NodeUtil, ., isExprCall, (, insertionPoint, )]
[NodeUtil]
[insertionPoint]
[convention, ., getClassesDefinedByCall, (, insertionPoint, ., getFirstChild, (, ), ), !=, null]
[convention, ., getClassesDefinedByCall, (, insertionPoint, ., getFirstChild, (, ), )]
[convention]
[insertionPoint, ., getFirstChild, (, )]
[insertionPoint]
[null]
[insertionPoint]
[insertionPoint, ., getNext, (, )]
[insertionPoint]
[insertionPoint, ==, null]
[insertionPoint]
[null]
[context, ., getScriptNode, (, ), ., addChildToBack, (, expression, )]
[context, ., getScriptNode, (, )]
[context]
[expression]
[context, ., getScriptNode, (, ), ., addChildBefore, (, expression, ,, insertionPoint, )]
[context, ., getScriptNode, (, )]
[context]
[expression]
[insertionPoint]
[compiler, ., reportCodeChange, (, )]
[compiler]
[NodeTraversal, ., traverse, (, compiler, ,, node, ,, new, PrepareAst, ., PrepareAnnotations, (, ), )]
[NodeTraversal]
[compiler]
[node]
[new, PrepareAst, ., PrepareAnnotations, (, )]
[Preconditions, ., checkArgument, (, node, ., isGetProp, (, ), )]
[Preconditions]
[node, ., isGetProp, (, )]
[node]
[node, ., getLastChild, (, ), ., getString, (, )]
[node, ., getLastChild, (, )]
[node]
