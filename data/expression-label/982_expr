[7648186910365927050L]
[field]
[0]
[this, ., field]
[this]
[field]
[this, ., data]
[this]
[MathArrays, ., buildArray, (, field, ,, size, )]
[MathArrays]
[field]
[size]
[preset, ., getField, (, )]
[preset]
[size]
[Arrays, ., fill, (, data, ,, preset, )]
[Arrays]
[data]
[preset]
[MathUtils, ., checkNotNull, (, d, )]
[MathUtils]
[d]
[field]
[d, [, 0, ], ., getField, (, )]
[d, [, 0, ]]
[d]
[0]
[data]
[d, ., clone, (, )]
[d]
[new, ZeroException, (, LocalizedFormats, ., VECTOR_MUST_HAVE_AT_LEAST_ONE_ELEMENT, )]
[LocalizedFormats, ., VECTOR_MUST_HAVE_AT_LEAST_ONE_ELEMENT]
[LocalizedFormats]
[MathUtils, ., checkNotNull, (, d, )]
[MathUtils]
[d]
[this, ., field]
[this]
[field]
[data]
[d, ., clone, (, )]
[d]
[MathUtils, ., checkNotNull, (, d, )]
[MathUtils]
[d]
[d, ., length, ==, 0]
[d, ., length]
[d]
[0]
[new, ZeroException, (, LocalizedFormats, ., VECTOR_MUST_HAVE_AT_LEAST_ONE_ELEMENT, )]
[LocalizedFormats, ., VECTOR_MUST_HAVE_AT_LEAST_ONE_ELEMENT]
[LocalizedFormats]
[field]
[d, [, 0, ], ., getField, (, )]
[d, [, 0, ]]
[d]
[0]
[data]
[copyArray, ?, d, ., clone, (, ), :, d]
[copyArray]
[d, ., clone, (, )]
[d]
[d]
[MathUtils, ., checkNotNull, (, d, )]
[MathUtils]
[d]
[this, ., field]
[this]
[field]
[data]
[copyArray, ?, d, ., clone, (, ), :, d]
[copyArray]
[d, ., clone, (, )]
[d]
[d]
[MathUtils, ., checkNotNull, (, d, )]
[MathUtils]
[d]
[d, ., length, <, pos, +, size]
[d, ., length]
[d]
[pos, +, size]
[pos]
[size]
[new, NumberIsTooLargeException, (, pos, +, size, ,, d, ., length, ,, true, )]
[pos, +, size]
[pos]
[size]
[d, ., length]
[d]
[true]
[field]
[d, [, 0, ], ., getField, (, )]
[d, [, 0, ]]
[d]
[0]
[data]
[MathArrays, ., buildArray, (, field, ,, size, )]
[MathArrays]
[field]
[size]
[System, ., arraycopy, (, d, ,, pos, ,, data, ,, 0, ,, size, )]
[System]
[d]
[pos]
[data]
[0]
[size]
[MathUtils, ., checkNotNull, (, d, )]
[MathUtils]
[d]
[d, ., length, <, pos, +, size]
[d, ., length]
[d]
[pos, +, size]
[pos]
[size]
[new, NumberIsTooLargeException, (, pos, +, size, ,, d, ., length, ,, true, )]
[pos, +, size]
[pos]
[size]
[d, ., length]
[d]
[true]
[this, ., field]
[this]
[field]
[data]
[MathArrays, ., buildArray, (, field, ,, size, )]
[MathArrays]
[field]
[size]
[System, ., arraycopy, (, d, ,, pos, ,, data, ,, 0, ,, size, )]
[System]
[d]
[pos]
[data]
[0]
[size]
[MathUtils, ., checkNotNull, (, v, )]
[MathUtils]
[v]
[field]
[v, ., getField, (, )]
[v]
[data]
[MathArrays, ., buildArray, (, field, ,, v, ., getDimension, (, ), )]
[MathArrays]
[field]
[v, ., getDimension, (, )]
[v]
[0]
[i, <, data, ., length]
[i]
[data, ., length]
[data]
[++, i]
[i]
[data, [, i, ]]
[data]
[i]
[v, ., getEntry, (, i, )]
[v]
[i]
[MathUtils, ., checkNotNull, (, v, )]
[MathUtils]
[v]
[field]
[v, ., getField, (, )]
[v]
[data]
[v, ., data, ., clone, (, )]
[v, ., data]
[v]
[MathUtils, ., checkNotNull, (, v, )]
[MathUtils]
[v]
[field]
[v, ., getField, (, )]
[v]
[data]
[deep, ?, v, ., data, ., clone, (, ), :, v, ., data]
[deep]
[v, ., data, ., clone, (, )]
[v, ., data]
[v]
[v, ., data]
[v]
[(, FieldVector, <, T, >, ), v1]
[v1]
[(, FieldVector, <, T, >, ), v2]
[v2]
[MathUtils, ., checkNotNull, (, v1, )]
[MathUtils]
[v1]
[MathUtils, ., checkNotNull, (, v2, )]
[MathUtils]
[v2]
[field]
[v1, ., getField, (, )]
[v1]
[(, v1, instanceof, ArrayFieldVector, ), ?, (, (, ArrayFieldVector, <, T, >, ), v1, ), ., data, :, v1, ., toArray, (, )]
[(, v1, instanceof, ArrayFieldVector, )]
[v1, instanceof, ArrayFieldVector]
[v1]
[(, (, ArrayFieldVector, <, T, >, ), v1, ), ., data]
[(, (, ArrayFieldVector, <, T, >, ), v1, )]
[(, ArrayFieldVector, <, T, >, ), v1]
[v1]
[v1, ., toArray, (, )]
[v1]
[(, v2, instanceof, ArrayFieldVector, ), ?, (, (, ArrayFieldVector, <, T, >, ), v2, ), ., data, :, v2, ., toArray, (, )]
[(, v2, instanceof, ArrayFieldVector, )]
[v2, instanceof, ArrayFieldVector]
[v2]
[(, (, ArrayFieldVector, <, T, >, ), v2, ), ., data]
[(, (, ArrayFieldVector, <, T, >, ), v2, )]
[(, ArrayFieldVector, <, T, >, ), v2]
[v2]
[v2, ., toArray, (, )]
[v2]
[data]
[MathArrays, ., buildArray, (, field, ,, v1Data, ., length, +, v2Data, ., length, )]
[MathArrays]
[field]
[v1Data, ., length, +, v2Data, ., length]
[v1Data, ., length]
[v1Data]
[v2Data, ., length]
[v2Data]
[System, ., arraycopy, (, v1Data, ,, 0, ,, data, ,, 0, ,, v1Data, ., length, )]
[System]
[v1Data]
[0]
[data]
[0]
[v1Data, ., length]
[v1Data]
[System, ., arraycopy, (, v2Data, ,, 0, ,, data, ,, v1Data, ., length, ,, v2Data, ., length, )]
[System]
[v2Data]
[0]
[data]
[v1Data, ., length]
[v1Data]
[v2Data, ., length]
[v2Data]
[(, FieldVector, <, T, >, ), v1]
[v1]
[v2]
[MathUtils, ., checkNotNull, (, v1, )]
[MathUtils]
[v1]
[MathUtils, ., checkNotNull, (, v2, )]
[MathUtils]
[v2]
[field]
[v1, ., getField, (, )]
[v1]
[(, v1, instanceof, ArrayFieldVector, ), ?, (, (, ArrayFieldVector, <, T, >, ), v1, ), ., data, :, v1, ., toArray, (, )]
[(, v1, instanceof, ArrayFieldVector, )]
[v1, instanceof, ArrayFieldVector]
[v1]
[(, (, ArrayFieldVector, <, T, >, ), v1, ), ., data]
[(, (, ArrayFieldVector, <, T, >, ), v1, )]
[(, ArrayFieldVector, <, T, >, ), v1]
[v1]
[v1, ., toArray, (, )]
[v1]
[data]
[MathArrays, ., buildArray, (, field, ,, v1Data, ., length, +, v2, ., length, )]
[MathArrays]
[field]
[v1Data, ., length, +, v2, ., length]
[v1Data, ., length]
[v1Data]
[v2, ., length]
[v2]
[System, ., arraycopy, (, v1Data, ,, 0, ,, data, ,, 0, ,, v1Data, ., length, )]
[System]
[v1Data]
[0]
[data]
[0]
[v1Data, ., length]
[v1Data]
[System, ., arraycopy, (, v2, ,, 0, ,, data, ,, v1Data, ., length, ,, v2, ., length, )]
[System]
[v2]
[0]
[data]
[v1Data, ., length]
[v1Data]
[v2, ., length]
[v2]
[v1]
[(, FieldVector, <, T, >, ), v2]
[v2]
[MathUtils, ., checkNotNull, (, v1, )]
[MathUtils]
[v1]
[MathUtils, ., checkNotNull, (, v2, )]
[MathUtils]
[v2]
[field]
[v2, ., getField, (, )]
[v2]
[(, v2, instanceof, ArrayFieldVector, ), ?, (, (, ArrayFieldVector, <, T, >, ), v2, ), ., data, :, v2, ., toArray, (, )]
[(, v2, instanceof, ArrayFieldVector, )]
[v2, instanceof, ArrayFieldVector]
[v2]
[(, (, ArrayFieldVector, <, T, >, ), v2, ), ., data]
[(, (, ArrayFieldVector, <, T, >, ), v2, )]
[(, ArrayFieldVector, <, T, >, ), v2]
[v2]
[v2, ., toArray, (, )]
[v2]
[data]
[MathArrays, ., buildArray, (, field, ,, v1, ., length, +, v2Data, ., length, )]
[MathArrays]
[field]
[v1, ., length, +, v2Data, ., length]
[v1, ., length]
[v1]
[v2Data, ., length]
[v2Data]
[System, ., arraycopy, (, v1, ,, 0, ,, data, ,, 0, ,, v1, ., length, )]
[System]
[v1]
[0]
[data]
[0]
[v1, ., length]
[v1]
[System, ., arraycopy, (, v2Data, ,, 0, ,, data, ,, v1, ., length, ,, v2Data, ., length, )]
[System]
[v2Data]
[0]
[data]
[v1, ., length]
[v1]
[v2Data, ., length]
[v2Data]
[MathUtils, ., checkNotNull, (, v1, )]
[MathUtils]
[v1]
[MathUtils, ., checkNotNull, (, v2, )]
[MathUtils]
[v2]
[v1, ., length, +, v2, ., length, ==, 0]
[v1, ., length, +, v2, ., length]
[v1, ., length]
[v1]
[v2, ., length]
[v2]
[0]
[new, ZeroException, (, LocalizedFormats, ., VECTOR_MUST_HAVE_AT_LEAST_ONE_ELEMENT, )]
[LocalizedFormats, ., VECTOR_MUST_HAVE_AT_LEAST_ONE_ELEMENT]
[LocalizedFormats]
[data]
[MathArrays, ., buildArray, (, v1, [, 0, ], ., getField, (, ), ,, v1, ., length, +, v2, ., length, )]
[MathArrays]
[v1, [, 0, ], ., getField, (, )]
[v1, [, 0, ]]
[v1]
[0]
[v1, ., length, +, v2, ., length]
[v1, ., length]
[v1]
[v2, ., length]
[v2]
[System, ., arraycopy, (, v1, ,, 0, ,, data, ,, 0, ,, v1, ., length, )]
[System]
[v1]
[0]
[data]
[0]
[v1, ., length]
[v1]
[System, ., arraycopy, (, v2, ,, 0, ,, data, ,, v1, ., length, ,, v2, ., length, )]
[System]
[v2]
[0]
[data]
[v1, ., length]
[v1]
[v2, ., length]
[v2]
[field]
[data, [, 0, ], ., getField, (, )]
[data, [, 0, ]]
[data]
[0]
[MathUtils, ., checkNotNull, (, v1, )]
[MathUtils]
[v1]
[MathUtils, ., checkNotNull, (, v2, )]
[MathUtils]
[v2]
[v1, ., length, +, v2, ., length, ==, 0]
[v1, ., length, +, v2, ., length]
[v1, ., length]
[v1]
[v2, ., length]
[v2]
[0]
[new, ZeroException, (, LocalizedFormats, ., VECTOR_MUST_HAVE_AT_LEAST_ONE_ELEMENT, )]
[LocalizedFormats, ., VECTOR_MUST_HAVE_AT_LEAST_ONE_ELEMENT]
[LocalizedFormats]
[data]
[MathArrays, ., buildArray, (, field, ,, v1, ., length, +, v2, ., length, )]
[MathArrays]
[field]
[v1, ., length, +, v2, ., length]
[v1, ., length]
[v1]
[v2, ., length]
[v2]
[System, ., arraycopy, (, v1, ,, 0, ,, data, ,, 0, ,, v1, ., length, )]
[System]
[v1]
[0]
[data]
[0]
[v1, ., length]
[v1]
[System, ., arraycopy, (, v2, ,, 0, ,, data, ,, v1, ., length, ,, v2, ., length, )]
[System]
[v2]
[0]
[data]
[v1, ., length]
[v1]
[v2, ., length]
[v2]
[this, ., field]
[this]
[field]
[field]
[new, ArrayFieldVector, <, T, >, (, this, ,, true, )]
[this]
[true]
[add, (, (, ArrayFieldVector, <, T, >, ), v, )]
[(, ArrayFieldVector, <, T, >, ), v]
[v]
[checkVectorDimensions, (, v, )]
[v]
[MathArrays, ., buildArray, (, field, ,, data, ., length, )]
[MathArrays]
[field]
[data, ., length]
[data]
[0]
[i, <, data, ., length]
[i]
[data, ., length]
[data]
[i, ++]
[i]
[out, [, i, ]]
[out]
[i]
[data, [, i, ], ., add, (, v, ., getEntry, (, i, ), )]
[data, [, i, ]]
[data]
[i]
[v, ., getEntry, (, i, )]
[v]
[i]
[new, ArrayFieldVector, <, T, >, (, field, ,, out, ,, false, )]
[field]
[out]
[false]
[checkVectorDimensions, (, v, ., data, ., length, )]
[v, ., data, ., length]
[v, ., data]
[v]
[MathArrays, ., buildArray, (, field, ,, data, ., length, )]
[MathArrays]
[field]
[data, ., length]
[data]
[0]
[i, <, data, ., length]
[i]
[data, ., length]
[data]
[i, ++]
[i]
[out, [, i, ]]
[out]
[i]
[data, [, i, ], ., add, (, v, ., data, [, i, ], )]
[data, [, i, ]]
[data]
[i]
[v, ., data, [, i, ]]
[v, ., data]
[v]
[i]
[new, ArrayFieldVector, <, T, >, (, field, ,, out, ,, false, )]
[field]
[out]
[false]
[subtract, (, (, ArrayFieldVector, <, T, >, ), v, )]
[(, ArrayFieldVector, <, T, >, ), v]
[v]
[checkVectorDimensions, (, v, )]
[v]
[MathArrays, ., buildArray, (, field, ,, data, ., length, )]
[MathArrays]
[field]
[data, ., length]
[data]
[0]
[i, <, data, ., length]
[i]
[data, ., length]
[data]
[i, ++]
[i]
[out, [, i, ]]
[out]
[i]
[data, [, i, ], ., subtract, (, v, ., getEntry, (, i, ), )]
[data, [, i, ]]
[data]
[i]
[v, ., getEntry, (, i, )]
[v]
[i]
[new, ArrayFieldVector, <, T, >, (, field, ,, out, ,, false, )]
[field]
[out]
[false]
[checkVectorDimensions, (, v, ., data, ., length, )]
[v, ., data, ., length]
[v, ., data]
[v]
[MathArrays, ., buildArray, (, field, ,, data, ., length, )]
[MathArrays]
[field]
[data, ., length]
[data]
[0]
[i, <, data, ., length]
[i]
[data, ., length]
[data]
[i, ++]
[i]
[out, [, i, ]]
[out]
[i]
[data, [, i, ], ., subtract, (, v, ., data, [, i, ], )]
[data, [, i, ]]
[data]
[i]
[v, ., data, [, i, ]]
[v, ., data]
[v]
[i]
[new, ArrayFieldVector, <, T, >, (, field, ,, out, ,, false, )]
[field]
[out]
[false]
[MathArrays, ., buildArray, (, field, ,, data, ., length, )]
[MathArrays]
[field]
[data, ., length]
[data]
[0]
[i, <, data, ., length]
[i]
[data, ., length]
[data]
[i, ++]
[i]
[out, [, i, ]]
[out]
[i]
[data, [, i, ], ., add, (, d, )]
[data, [, i, ]]
[data]
[i]
[d]
[new, ArrayFieldVector, <, T, >, (, field, ,, out, ,, false, )]
[field]
[out]
[false]
[0]
[i, <, data, ., length]
[i]
[data, ., length]
[data]
[i, ++]
[i]
[data, [, i, ]]
[data]
[i]
[data, [, i, ], ., add, (, d, )]
[data, [, i, ]]
[data]
[i]
[d]
[this]
[MathArrays, ., buildArray, (, field, ,, data, ., length, )]
[MathArrays]
[field]
[data, ., length]
[data]
[0]
[i, <, data, ., length]
[i]
[data, ., length]
[data]
[i, ++]
[i]
[out, [, i, ]]
[out]
[i]
[data, [, i, ], ., subtract, (, d, )]
[data, [, i, ]]
[data]
[i]
[d]
[new, ArrayFieldVector, <, T, >, (, field, ,, out, ,, false, )]
[field]
[out]
[false]
[0]
[i, <, data, ., length]
[i]
[data, ., length]
[data]
[i, ++]
[i]
[data, [, i, ]]
[data]
[i]
[data, [, i, ], ., subtract, (, d, )]
[data, [, i, ]]
[data]
[i]
[d]
[this]
[MathArrays, ., buildArray, (, field, ,, data, ., length, )]
[MathArrays]
[field]
[data, ., length]
[data]
[0]
[i, <, data, ., length]
[i]
[data, ., length]
[data]
[i, ++]
[i]
[out, [, i, ]]
[out]
[i]
[data, [, i, ], ., multiply, (, d, )]
[data, [, i, ]]
[data]
[i]
[d]
[new, ArrayFieldVector, <, T, >, (, field, ,, out, ,, false, )]
[field]
[out]
[false]
[0]
[i, <, data, ., length]
[i]
[data, ., length]
[data]
[i, ++]
[i]
[data, [, i, ]]
[data]
[i]
[data, [, i, ], ., multiply, (, d, )]
[data, [, i, ]]
[data]
[i]
[d]
[this]
[MathUtils, ., checkNotNull, (, d, )]
[MathUtils]
[d]
[MathArrays, ., buildArray, (, field, ,, data, ., length, )]
[MathArrays]
[field]
[data, ., length]
[data]
[0]
[i, <, data, ., length]
[i]
[data, ., length]
[data]
[i, ++]
[i]
[out, [, i, ]]
[out]
[i]
[data, [, i, ], ., divide, (, d, )]
[data, [, i, ]]
[data]
[i]
[d]
[new, ArrayFieldVector, <, T, >, (, field, ,, out, ,, false, )]
[field]
[out]
[false]
[MathUtils, ., checkNotNull, (, d, )]
[MathUtils]
[d]
[0]
[i, <, data, ., length]
[i]
[data, ., length]
[data]
[i, ++]
[i]
[data, [, i, ]]
[data]
[i]
[data, [, i, ], ., divide, (, d, )]
[data, [, i, ]]
[data]
[i]
[d]
[this]
[MathArrays, ., buildArray, (, field, ,, data, ., length, )]
[MathArrays]
[field]
[data, ., length]
[data]
[field, ., getOne, (, )]
[field]
[0]
[i, <, data, ., length]
[i]
[data, ., length]
[data]
[i, ++]
[i]
[out, [, i, ]]
[out]
[i]
[one, ., divide, (, data, [, i, ], )]
[one]
[data, [, i, ]]
[data]
[i]
[new, MathArithmeticException, (, LocalizedFormats, ., INDEX, ,, i, )]
[LocalizedFormats, ., INDEX]
[LocalizedFormats]
[i]
[new, ArrayFieldVector, <, T, >, (, field, ,, out, ,, false, )]
[field]
[out]
[false]
[field, ., getOne, (, )]
[field]
[0]
[i, <, data, ., length]
[i]
[data, ., length]
[data]
[i, ++]
[i]
[data, [, i, ]]
[data]
[i]
[one, ., divide, (, data, [, i, ], )]
[one]
[data, [, i, ]]
[data]
[i]
[new, MathArithmeticException, (, LocalizedFormats, ., INDEX, ,, i, )]
[LocalizedFormats, ., INDEX]
[LocalizedFormats]
[i]
[this]
[ebeMultiply, (, (, ArrayFieldVector, <, T, >, ), v, )]
[(, ArrayFieldVector, <, T, >, ), v]
[v]
[checkVectorDimensions, (, v, )]
[v]
[MathArrays, ., buildArray, (, field, ,, data, ., length, )]
[MathArrays]
[field]
[data, ., length]
[data]
[0]
[i, <, data, ., length]
[i]
[data, ., length]
[data]
[i, ++]
[i]
[out, [, i, ]]
[out]
[i]
[data, [, i, ], ., multiply, (, v, ., getEntry, (, i, ), )]
[data, [, i, ]]
[data]
[i]
[v, ., getEntry, (, i, )]
[v]
[i]
[new, ArrayFieldVector, <, T, >, (, field, ,, out, ,, false, )]
[field]
[out]
[false]
[checkVectorDimensions, (, v, ., data, ., length, )]
[v, ., data, ., length]
[v, ., data]
[v]
[MathArrays, ., buildArray, (, field, ,, data, ., length, )]
[MathArrays]
[field]
[data, ., length]
[data]
[0]
[i, <, data, ., length]
[i]
[data, ., length]
[data]
[i, ++]
[i]
[out, [, i, ]]
[out]
[i]
[data, [, i, ], ., multiply, (, v, ., data, [, i, ], )]
[data, [, i, ]]
[data]
[i]
[v, ., data, [, i, ]]
[v, ., data]
[v]
[i]
[new, ArrayFieldVector, <, T, >, (, field, ,, out, ,, false, )]
[field]
[out]
[false]
[ebeDivide, (, (, ArrayFieldVector, <, T, >, ), v, )]
[(, ArrayFieldVector, <, T, >, ), v]
[v]
[checkVectorDimensions, (, v, )]
[v]
[MathArrays, ., buildArray, (, field, ,, data, ., length, )]
[MathArrays]
[field]
[data, ., length]
[data]
[0]
[i, <, data, ., length]
[i]
[data, ., length]
[data]
[i, ++]
[i]
[out, [, i, ]]
[out]
[i]
[data, [, i, ], ., divide, (, v, ., getEntry, (, i, ), )]
[data, [, i, ]]
[data]
[i]
[v, ., getEntry, (, i, )]
[v]
[i]
[new, MathArithmeticException, (, LocalizedFormats, ., INDEX, ,, i, )]
[LocalizedFormats, ., INDEX]
[LocalizedFormats]
[i]
[new, ArrayFieldVector, <, T, >, (, field, ,, out, ,, false, )]
[field]
[out]
[false]
[checkVectorDimensions, (, v, ., data, ., length, )]
[v, ., data, ., length]
[v, ., data]
[v]
[MathArrays, ., buildArray, (, field, ,, data, ., length, )]
[MathArrays]
[field]
[data, ., length]
[data]
[0]
[i, <, data, ., length]
[i]
[data, ., length]
[data]
[i, ++]
[i]
[out, [, i, ]]
[out]
[i]
[data, [, i, ], ., divide, (, v, ., data, [, i, ], )]
[data, [, i, ]]
[data]
[i]
[v, ., data, [, i, ]]
[v, ., data]
[v]
[i]
[new, MathArithmeticException, (, LocalizedFormats, ., INDEX, ,, i, )]
[LocalizedFormats, ., INDEX]
[LocalizedFormats]
[i]
[new, ArrayFieldVector, <, T, >, (, field, ,, out, ,, false, )]
[field]
[out]
[false]
[data, ., clone, (, )]
[data]
[data]
[dotProduct, (, (, ArrayFieldVector, <, T, >, ), v, )]
[(, ArrayFieldVector, <, T, >, ), v]
[v]
[checkVectorDimensions, (, v, )]
[v]
[field, ., getZero, (, )]
[field]
[0]
[i, <, data, ., length]
[i]
[data, ., length]
[data]
[i, ++]
[i]
[dot]
[dot, ., add, (, data, [, i, ], ., multiply, (, v, ., getEntry, (, i, ), ), )]
[dot]
[data, [, i, ], ., multiply, (, v, ., getEntry, (, i, ), )]
[data, [, i, ]]
[data]
[i]
[v, ., getEntry, (, i, )]
[v]
[i]
[dot]
[checkVectorDimensions, (, v, ., data, ., length, )]
[v, ., data, ., length]
[v, ., data]
[v]
[field, ., getZero, (, )]
[field]
[0]
[i, <, data, ., length]
[i]
[data, ., length]
[data]
[i, ++]
[i]
[dot]
[dot, ., add, (, data, [, i, ], ., multiply, (, v, ., data, [, i, ], ), )]
[dot]
[data, [, i, ], ., multiply, (, v, ., data, [, i, ], )]
[data, [, i, ]]
[data]
[i]
[v, ., data, [, i, ]]
[v, ., data]
[v]
[i]
[dot]
[v, ., mapMultiply, (, dotProduct, (, v, ), ., divide, (, v, ., dotProduct, (, v, ), ), )]
[v]
[dotProduct, (, v, ), ., divide, (, v, ., dotProduct, (, v, ), )]
[dotProduct, (, v, )]
[v]
[v, ., dotProduct, (, v, )]
[v]
[v]
[(, ArrayFieldVector, <, T, >, ), v, ., mapMultiply, (, dotProduct, (, v, ), ., divide, (, v, ., dotProduct, (, v, ), ), )]
[v, ., mapMultiply, (, dotProduct, (, v, ), ., divide, (, v, ., dotProduct, (, v, ), ), )]
[v]
[dotProduct, (, v, ), ., divide, (, v, ., dotProduct, (, v, ), )]
[dotProduct, (, v, )]
[v]
[v, ., dotProduct, (, v, )]
[v]
[v]
[outerProduct, (, (, ArrayFieldVector, <, T, >, ), v, )]
[(, ArrayFieldVector, <, T, >, ), v]
[v]
[data, ., length]
[data]
[v, ., getDimension, (, )]
[v]
[new, Array2DRowFieldMatrix, <, T, >, (, field, ,, m, ,, n, )]
[field]
[m]
[n]
[0]
[i, <, m]
[i]
[m]
[i, ++]
[i]
[0]
[j, <, n]
[j]
[n]
[j, ++]
[j]
[out, ., setEntry, (, i, ,, j, ,, data, [, i, ], ., multiply, (, v, ., getEntry, (, j, ), ), )]
[out]
[i]
[j]
[data, [, i, ], ., multiply, (, v, ., getEntry, (, j, ), )]
[data, [, i, ]]
[data]
[i]
[v, ., getEntry, (, j, )]
[v]
[j]
[out]
[data, ., length]
[data]
[v, ., data, ., length]
[v, ., data]
[v]
[new, Array2DRowFieldMatrix, <, T, >, (, field, ,, m, ,, n, )]
[field]
[m]
[n]
[0]
[i, <, m]
[i]
[m]
[i, ++]
[i]
[0]
[j, <, n]
[j]
[n]
[j, ++]
[j]
[out, ., setEntry, (, i, ,, j, ,, data, [, i, ], ., multiply, (, v, ., data, [, j, ], ), )]
[out]
[i]
[j]
[data, [, i, ], ., multiply, (, v, ., data, [, j, ], )]
[data, [, i, ]]
[data]
[i]
[v, ., data, [, j, ]]
[v, ., data]
[v]
[j]
[out]
[data, [, index, ]]
[data]
[index]
[data, ., length]
[data]
[append, (, (, ArrayFieldVector, <, T, >, ), v, )]
[(, ArrayFieldVector, <, T, >, ), v]
[v]
[new, ArrayFieldVector, <, T, >, (, this, ,, new, ArrayFieldVector, <, T, >, (, v, ), )]
[this]
[new, ArrayFieldVector, <, T, >, (, v, )]
[v]
[new, ArrayFieldVector, <, T, >, (, this, ,, v, )]
[this]
[v]
[MathArrays, ., buildArray, (, field, ,, data, ., length, +, 1, )]
[MathArrays]
[field]
[data, ., length, +, 1]
[data, ., length]
[data]
[1]
[System, ., arraycopy, (, data, ,, 0, ,, out, ,, 0, ,, data, ., length, )]
[System]
[data]
[0]
[out]
[0]
[data, ., length]
[data]
[out, [, data, ., length, ]]
[out]
[data, ., length]
[data]
[in]
[new, ArrayFieldVector, <, T, >, (, field, ,, out, ,, false, )]
[field]
[out]
[false]
[n, <, 0]
[n]
[0]
[new, NotPositiveException, (, LocalizedFormats, ., NUMBER_OF_ELEMENTS_SHOULD_BE_POSITIVE, ,, n, )]
[LocalizedFormats, ., NUMBER_OF_ELEMENTS_SHOULD_BE_POSITIVE]
[LocalizedFormats]
[n]
[new, ArrayFieldVector, <, T, >, (, field, ,, n, )]
[field]
[n]
[System, ., arraycopy, (, data, ,, index, ,, out, ., data, ,, 0, ,, n, )]
[System]
[data]
[index]
[out, ., data]
[out]
[0]
[n]
[checkIndex, (, index, )]
[index]
[checkIndex, (, index, +, n, -, 1, )]
[index, +, n, -, 1]
[index, +, n]
[index]
[n]
[1]
[out]
[data, [, index, ]]
[data]
[index]
[value]
[checkIndex, (, index, )]
[index]
[set, (, index, ,, (, ArrayFieldVector, <, T, >, ), v, )]
[index]
[(, ArrayFieldVector, <, T, >, ), v]
[v]
[index]
[i, <, index, +, v, ., getDimension, (, )]
[i]
[index, +, v, ., getDimension, (, )]
[index]
[v, ., getDimension, (, )]
[v]
[++, i]
[i]
[data, [, i, ]]
[data]
[i]
[v, ., getEntry, (, i, -, index, )]
[v]
[i, -, index]
[i]
[index]
[checkIndex, (, index, )]
[index]
[checkIndex, (, index, +, v, ., getDimension, (, ), -, 1, )]
[index, +, v, ., getDimension, (, ), -, 1]
[index, +, v, ., getDimension, (, )]
[index]
[v, ., getDimension, (, )]
[v]
[1]
[System, ., arraycopy, (, v, ., data, ,, 0, ,, data, ,, index, ,, v, ., data, ., length, )]
[System]
[v, ., data]
[v]
[0]
[data]
[index]
[v, ., data, ., length]
[v, ., data]
[v]
[checkIndex, (, index, )]
[index]
[checkIndex, (, index, +, v, ., data, ., length, -, 1, )]
[index, +, v, ., data, ., length, -, 1]
[index, +, v, ., data, ., length]
[index]
[v, ., data, ., length]
[v, ., data]
[v]
[1]
[Arrays, ., fill, (, data, ,, value, )]
[Arrays]
[data]
[value]
[data, ., clone, (, )]
[data]
[checkVectorDimensions, (, v, ., getDimension, (, ), )]
[v, ., getDimension, (, )]
[v]
[data, ., length, !=, n]
[data, ., length]
[data]
[n]
[new, DimensionMismatchException, (, data, ., length, ,, n, )]
[data, ., length]
[data]
[n]
[this, ==, other]
[this]
[other]
[true]
[other, ==, null]
[other]
[null]
[false]
[@, SuppressWarnings, (, "unchecked", )]
["unchecked"]
[(, FieldVector, <, T, >, ), other]
[other]
[data, ., length, !=, rhs, ., getDimension, (, )]
[data, ., length]
[data]
[rhs, ., getDimension, (, )]
[rhs]
[false]
[0]
[i, <, data, ., length]
[i]
[data, ., length]
[data]
[++, i]
[i]
[!, data, [, i, ], ., equals, (, rhs, ., getEntry, (, i, ), )]
[data, [, i, ], ., equals, (, rhs, ., getEntry, (, i, ), )]
[data, [, i, ]]
[data]
[i]
[rhs, ., getEntry, (, i, )]
[rhs]
[i]
[false]
[true]
[false]
[3542]
[data]
[h]
[h, ^, a, ., hashCode, (, )]
[h]
[a, ., hashCode, (, )]
[a]
[h]
[index, <, 0, ||, index, >=, getDimension, (, )]
[index, <, 0]
[index]
[0]
[index, >=, getDimension, (, )]
[index]
[getDimension, (, )]
[new, OutOfRangeException, (, LocalizedFormats, ., INDEX, ,, index, ,, 0, ,, getDimension, (, ), -, 1, )]
[LocalizedFormats, ., INDEX]
[LocalizedFormats]
[index]
[0]
[getDimension, (, ), -, 1]
[getDimension, (, )]
[1]
