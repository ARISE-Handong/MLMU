[this, ., compiler]
[this]
[compiler]
[new, SimpleDefinitionFinder, (, compiler, )]
[compiler]
[defFinder, ., process, (, externs, ,, root, )]
[defFinder]
[externs]
[root]
[process, (, externs, ,, root, ,, defFinder, )]
[externs]
[root]
[defFinder]
[Lists, ., newArrayList, (, )]
[Lists]
[definitions, ., getDefinitionSites, (, )]
[definitions]
[!, defSite, ., inExterns, &&, !, callResultsMaybeUsed, (, definitions, ,, defSite, )]
[!, defSite, ., inExterns]
[defSite, ., inExterns]
[defSite]
[!, callResultsMaybeUsed, (, definitions, ,, defSite, )]
[callResultsMaybeUsed, (, definitions, ,, defSite, )]
[definitions]
[defSite]
[toOptimize, ., add, (, defSite, ., definition, ., getRValue, (, ), )]
[toOptimize]
[defSite, ., definition, ., getRValue, (, )]
[defSite, ., definition]
[defSite]
[toOptimize]
[rewriteReturns, (, definitions, ,, node, )]
[definitions]
[node]
[definitionSite, ., definition]
[definitionSite]
[definition, ., getRValue, (, )]
[definition]
[rValue, ==, null, ||, !, rValue, ., isFunction, (, )]
[rValue, ==, null]
[rValue]
[null]
[!, rValue, ., isFunction, (, )]
[rValue, ., isFunction, (, )]
[rValue]
[true]
[!, SimpleDefinitionFinder, ., isSimpleFunctionDeclaration, (, rValue, )]
[SimpleDefinitionFinder, ., isSimpleFunctionDeclaration, (, rValue, )]
[SimpleDefinitionFinder]
[rValue]
[true]
[!, defFinder, ., canModifyDefinition, (, definition, )]
[defFinder, ., canModifyDefinition, (, definition, )]
[defFinder]
[definition]
[true]
[defFinder, ., getUseSites, (, definition, )]
[defFinder]
[definition]
[useSites]
[site, ., node, ., getParent, (, )]
[site, ., node]
[site]
[isCall, (, site, )]
[site]
[useNodeParent]
[Preconditions, ., checkState, (, callNode, ., isCall, (, ), )]
[Preconditions]
[callNode, ., isCall, (, )]
[callNode]
[NodeUtil, ., isExpressionResultUsed, (, callNode, )]
[NodeUtil]
[callNode]
[true]
[!, useNodeParent, ., isVar, (, )]
[useNodeParent, ., isVar, (, )]
[useNodeParent]
[true]
[false]
[Preconditions, ., checkState, (, fnNode, ., isFunction, (, ), )]
[Preconditions]
[fnNode, ., isFunction, (, )]
[fnNode]
[NodeUtil, ., visitPostOrder, (, fnNode, ., getLastChild, (, ), ,, new, NodeUtil, ., Visitor, (, ), {, @, Override, public, void, visit, (, Node, node, ), {, if, (, node, ., isReturn, (, ), &&, node, ., hasOneChild, (, ), ), {, boolean, keepValue, =, NodeUtil, ., mayHaveSideEffects, (, node, ., getFirstChild, (, ), ,, compiler, ), ;, if, (, !, keepValue, ), {, defFinder, ., removeReferences, (, node, ., getFirstChild, (, ), ), ;, }, Node, result, =, node, ., removeFirstChild, (, ), ;, if, (, keepValue, ), {, node, ., getParent, (, ), ., addChildBefore, (, IR, ., exprResult, (, result, ), ., srcref, (, result, ), ,, node, ), ;, }, compiler, ., reportCodeChange, (, ), ;, }, }, }, ,, new, NodeUtil, ., MatchShallowStatement, (, ), )]
[NodeUtil]
[fnNode, ., getLastChild, (, )]
[fnNode]
[new, NodeUtil, ., Visitor, (, ), {, @, Override, public, void, visit, (, Node, node, ), {, if, (, node, ., isReturn, (, ), &&, node, ., hasOneChild, (, ), ), {, boolean, keepValue, =, NodeUtil, ., mayHaveSideEffects, (, node, ., getFirstChild, (, ), ,, compiler, ), ;, if, (, !, keepValue, ), {, defFinder, ., removeReferences, (, node, ., getFirstChild, (, ), ), ;, }, Node, result, =, node, ., removeFirstChild, (, ), ;, if, (, keepValue, ), {, node, ., getParent, (, ), ., addChildBefore, (, IR, ., exprResult, (, result, ), ., srcref, (, result, ), ,, node, ), ;, }, compiler, ., reportCodeChange, (, ), ;, }, }, }]
[node, ., isReturn, (, ), &&, node, ., hasOneChild, (, )]
[node, ., isReturn, (, )]
[node]
[node, ., hasOneChild, (, )]
[node]
[NodeUtil, ., mayHaveSideEffects, (, node, ., getFirstChild, (, ), ,, compiler, )]
[NodeUtil]
[node, ., getFirstChild, (, )]
[node]
[compiler]
[!, keepValue]
[keepValue]
[defFinder, ., removeReferences, (, node, ., getFirstChild, (, ), )]
[defFinder]
[node, ., getFirstChild, (, )]
[node]
[node, ., removeFirstChild, (, )]
[node]
[keepValue]
[node, ., getParent, (, ), ., addChildBefore, (, IR, ., exprResult, (, result, ), ., srcref, (, result, ), ,, node, )]
[node, ., getParent, (, )]
[node]
[IR, ., exprResult, (, result, ), ., srcref, (, result, )]
[IR, ., exprResult, (, result, )]
[IR]
[result]
[result]
[node]
[compiler, ., reportCodeChange, (, )]
[compiler]
[new, NodeUtil, ., MatchShallowStatement, (, )]
[site, ., node]
[site]
[node, ., getParent, (, )]
[node]
[(, parent, ., getFirstChild, (, ), ==, node, ), &&, parent, ., isCall, (, )]
[(, parent, ., getFirstChild, (, ), ==, node, )]
[parent, ., getFirstChild, (, ), ==, node]
[parent, ., getFirstChild, (, )]
[parent]
[node]
[parent, ., isCall, (, )]
[parent]
