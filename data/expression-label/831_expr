[options]
[Lists, ., newArrayList, (, )]
[Lists]
[checks, ., add, (, fieldCleanupPassFactory, )]
[checks]
[fieldCleanupPassFactory]
[checks, ., add, (, scopeCleanupPassFactory, )]
[checks]
[scopeCleanupPassFactory]
[checks, ., add, (, globalVarRefCleanupPassFactory, )]
[checks]
[globalVarRefCleanupPassFactory]
[checks]
[state]
[ImmutableList, ., of, (, )]
[ImmutableList]
[this, ., state]
[this]
[state]
[new, HotSwapPassFactory, (, "FieldCleaupPassFactory", ,, false, ), {, @, Override, protected, HotSwapCompilerPass, create, (, AbstractCompiler, compiler, ), {, return, new, FieldCleanupPass, (, compiler, ), ;, }, }]
["FieldCleaupPassFactory"]
[false]
[new, FieldCleanupPass, (, compiler, )]
[compiler]
[new, HotSwapPassFactory, (, "ScopeCleanupPassFactory", ,, false, ), {, @, Override, protected, HotSwapCompilerPass, create, (, AbstractCompiler, compiler, ), {, return, new, MemoizedScopeCleanupPass, (, compiler, ), ;, }, }]
["ScopeCleanupPassFactory"]
[false]
[new, MemoizedScopeCleanupPass, (, compiler, )]
[compiler]
[new, HotSwapPassFactory, (, "GlobalVarRefCleanupPassFactory", ,, false, ), {, @, Override, protected, HotSwapCompilerPass, create, (, AbstractCompiler, compiler, ), {, return, new, GlobalVarRefCleanupPass, (, compiler, ), ;, }, }]
["GlobalVarRefCleanupPassFactory"]
[false]
[new, GlobalVarRefCleanupPass, (, compiler, )]
[compiler]
[this, ., compiler]
[this]
[compiler]
[compiler, ., getTypedScopeCreator, (, )]
[compiler]
[creator, instanceof, MemoizedScopeCreator]
[creator]
[(, MemoizedScopeCreator, ), creator]
[creator]
[scriptRoot, ., getSourceFileName, (, )]
[scriptRoot]
[scopeCreator, ., getAllSymbols, (, )]
[scopeCreator]
[var, ., getType, (, )]
[var]
[type, !=, null]
[type]
[null]
[type, ., toMaybeFunctionType, (, )]
[type]
[fnType, !=, null, &&, newSrc, ., equals, (, NodeUtil, ., getSourceName, (, fnType, ., getSource, (, ), ), )]
[fnType, !=, null]
[fnType]
[null]
[newSrc, ., equals, (, NodeUtil, ., getSourceName, (, fnType, ., getSource, (, ), ), )]
[newSrc]
[NodeUtil, ., getSourceName, (, fnType, ., getSource, (, ), )]
[NodeUtil]
[fnType, ., getSource, (, )]
[fnType]
[fnType, ., setSource, (, null, )]
[fnType]
[null]
[scopeCreator, ., removeScopesForScript, (, originalRoot, ., getSourceFileName, (, ), )]
[scopeCreator]
[originalRoot, ., getSourceFileName, (, )]
[originalRoot]
