[matrix]
[0d]
[matrix]
[threshold]
[p]
[new, int, [, qrt, ., length, ]]
[qrt, ., length]
[qrt]
[0]
[i, <, p, ., length]
[i]
[p, ., length]
[p]
[i, ++]
[i]
[p, [, i, ]]
[p]
[i]
[i]
[super, ., decompose, (, qrt, )]
[super]
[qrt]
[0]
[minor]
[minor]
[i, <, qrt, ., length]
[i]
[qrt, ., length]
[qrt]
[i, ++]
[i]
[0]
[0]
[j, <, qrt, [, i, ], ., length]
[j]
[qrt, [, i, ], ., length]
[qrt, [, i, ]]
[qrt]
[i]
[j, ++]
[j]
[l2NormSquared]
[qrt, [, i, ], [, j, ], *, qrt, [, i, ], [, j, ]]
[qrt, [, i, ], [, j, ]]
[qrt, [, i, ]]
[qrt]
[i]
[j]
[qrt, [, i, ], [, j, ]]
[qrt, [, i, ]]
[qrt]
[i]
[j]
[l2NormSquared, >, l2NormSquaredMax]
[l2NormSquared]
[l2NormSquaredMax]
[l2NormSquaredMax]
[l2NormSquared]
[l2NormSquaredMaxIndex]
[i]
[l2NormSquaredMaxIndex, !=, minor]
[l2NormSquaredMaxIndex]
[minor]
[qrt, [, minor, ]]
[qrt]
[minor]
[qrt, [, minor, ]]
[qrt]
[minor]
[qrt, [, l2NormSquaredMaxIndex, ]]
[qrt]
[l2NormSquaredMaxIndex]
[qrt, [, l2NormSquaredMaxIndex, ]]
[qrt]
[l2NormSquaredMaxIndex]
[tmp1]
[p, [, minor, ]]
[p]
[minor]
[p, [, minor, ]]
[p]
[minor]
[p, [, l2NormSquaredMaxIndex, ]]
[p]
[l2NormSquaredMaxIndex]
[p, [, l2NormSquaredMaxIndex, ]]
[p]
[l2NormSquaredMaxIndex]
[tmp2]
[super, ., performHouseholderReflection, (, minor, ,, qrt, )]
[super]
[minor]
[qrt]
[cachedP, ==, null]
[cachedP]
[null]
[p, ., length]
[p]
[cachedP]
[MatrixUtils, ., createRealMatrix, (, n, ,, n, )]
[MatrixUtils]
[n]
[n]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[cachedP, ., setEntry, (, p, [, i, ], ,, i, ,, 1, )]
[cachedP]
[p, [, i, ]]
[p]
[i]
[i]
[1]
[cachedP]
[getR, (, )]
[r, ., getRowDimension, (, )]
[r]
[r, ., getColumnDimension, (, )]
[r]
[1]
[r, ., getFrobeniusNorm, (, )]
[r]
[lastNorm]
[rank, <, FastMath, ., min, (, rows, ,, columns, )]
[rank]
[FastMath, ., min, (, rows, ,, columns, )]
[FastMath]
[rows]
[columns]
[r, ., getSubMatrix, (, rank, ,, rows, -, 1, ,, rank, ,, columns, -, 1, ), ., getFrobeniusNorm, (, )]
[r, ., getSubMatrix, (, rank, ,, rows, -, 1, ,, rank, ,, columns, -, 1, )]
[r]
[rank]
[rows, -, 1]
[rows]
[1]
[rank]
[columns, -, 1]
[columns]
[1]
[thisNorm, ==, 0, ||, (, thisNorm, /, lastNorm, ), *, rNorm, <, dropThreshold]
[thisNorm, ==, 0]
[thisNorm]
[0]
[(, thisNorm, /, lastNorm, ), *, rNorm, <, dropThreshold]
[(, thisNorm, /, lastNorm, ), *, rNorm]
[(, thisNorm, /, lastNorm, )]
[thisNorm, /, lastNorm]
[thisNorm]
[lastNorm]
[rNorm]
[dropThreshold]
[lastNorm]
[thisNorm]
[rank, ++]
[rank]
[rank]
[new, Solver, (, super, ., getSolver, (, ), ,, this, ., getP, (, ), )]
[super, ., getSolver, (, )]
[super]
[this, ., getP, (, )]
[this]
[this, ., upper]
[this]
[upper]
[this, ., p]
[this]
[p]
[upper, ., isNonSingular, (, )]
[upper]
[p, ., operate, (, upper, ., solve, (, b, ), )]
[p]
[upper, ., solve, (, b, )]
[upper]
[b]
[p, ., multiply, (, upper, ., solve, (, b, ), )]
[p]
[upper, ., solve, (, b, )]
[upper]
[b]
[solve, (, MatrixUtils, ., createRealIdentityMatrix, (, p, ., getRowDimension, (, ), ), )]
[MatrixUtils, ., createRealIdentityMatrix, (, p, ., getRowDimension, (, ), )]
[MatrixUtils]
[p, ., getRowDimension, (, )]
[p]
