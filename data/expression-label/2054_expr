[new, Vector3D, (, 0, ,, 0, ,, 0, )]
[0]
[0]
[0]
[new, Vector3D, (, 1, ,, 0, ,, 0, )]
[1]
[0]
[0]
[new, Vector3D, (, -, 1, ,, 0, ,, 0, )]
[-, 1]
[1]
[0]
[0]
[new, Vector3D, (, 0, ,, 1, ,, 0, )]
[0]
[1]
[0]
[new, Vector3D, (, 0, ,, -, 1, ,, 0, )]
[0]
[-, 1]
[1]
[0]
[new, Vector3D, (, 0, ,, 0, ,, 1, )]
[0]
[0]
[1]
[new, Vector3D, (, 0, ,, 0, ,, -, 1, )]
[0]
[0]
[-, 1]
[1]
[new, Vector3D, (, Double, ., NaN, ,, Double, ., NaN, ,, Double, ., NaN, )]
[Double, ., NaN]
[Double]
[Double, ., NaN]
[Double]
[Double, ., NaN]
[Double]
[new, Vector3D, (, Double, ., POSITIVE_INFINITY, ,, Double, ., POSITIVE_INFINITY, ,, Double, ., POSITIVE_INFINITY, )]
[Double, ., POSITIVE_INFINITY]
[Double]
[Double, ., POSITIVE_INFINITY]
[Double]
[Double, ., POSITIVE_INFINITY]
[Double]
[new, Vector3D, (, Double, ., NEGATIVE_INFINITY, ,, Double, ., NEGATIVE_INFINITY, ,, Double, ., NEGATIVE_INFINITY, )]
[Double, ., NEGATIVE_INFINITY]
[Double]
[Double, ., NEGATIVE_INFINITY]
[Double]
[Double, ., NEGATIVE_INFINITY]
[Double]
[1313493323784566947L]
[this, ., x]
[this]
[x]
[this, ., y]
[this]
[y]
[this, ., z]
[this]
[z]
[v, ., length, !=, 3]
[v, ., length]
[v]
[3]
[new, DimensionMismatchException, (, v, ., length, ,, 3, )]
[v, ., length]
[v]
[3]
[this, ., x]
[this]
[v, [, 0, ]]
[v]
[0]
[this, ., y]
[this]
[v, [, 1, ]]
[v]
[1]
[this, ., z]
[this]
[v, [, 2, ]]
[v]
[2]
[FastMath, ., cos, (, delta, )]
[FastMath]
[delta]
[this, ., x]
[this]
[FastMath, ., cos, (, alpha, ), *, cosDelta]
[FastMath, ., cos, (, alpha, )]
[FastMath]
[alpha]
[cosDelta]
[this, ., y]
[this]
[FastMath, ., sin, (, alpha, ), *, cosDelta]
[FastMath, ., sin, (, alpha, )]
[FastMath]
[alpha]
[cosDelta]
[this, ., z]
[this]
[FastMath, ., sin, (, delta, )]
[FastMath]
[delta]
[this, ., x]
[this]
[a, *, u, ., x]
[a]
[u, ., x]
[u]
[this, ., y]
[this]
[a, *, u, ., y]
[a]
[u, ., y]
[u]
[this, ., z]
[this]
[a, *, u, ., z]
[a]
[u, ., z]
[u]
[this, ., x]
[this]
[MathArrays, ., linearCombination, (, a1, ,, u1, ., x, ,, a2, ,, u2, ., x, )]
[MathArrays]
[a1]
[u1, ., x]
[u1]
[a2]
[u2, ., x]
[u2]
[this, ., y]
[this]
[MathArrays, ., linearCombination, (, a1, ,, u1, ., y, ,, a2, ,, u2, ., y, )]
[MathArrays]
[a1]
[u1, ., y]
[u1]
[a2]
[u2, ., y]
[u2]
[this, ., z]
[this]
[MathArrays, ., linearCombination, (, a1, ,, u1, ., z, ,, a2, ,, u2, ., z, )]
[MathArrays]
[a1]
[u1, ., z]
[u1]
[a2]
[u2, ., z]
[u2]
[this, ., x]
[this]
[MathArrays, ., linearCombination, (, a1, ,, u1, ., x, ,, a2, ,, u2, ., x, ,, a3, ,, u3, ., x, )]
[MathArrays]
[a1]
[u1, ., x]
[u1]
[a2]
[u2, ., x]
[u2]
[a3]
[u3, ., x]
[u3]
[this, ., y]
[this]
[MathArrays, ., linearCombination, (, a1, ,, u1, ., y, ,, a2, ,, u2, ., y, ,, a3, ,, u3, ., y, )]
[MathArrays]
[a1]
[u1, ., y]
[u1]
[a2]
[u2, ., y]
[u2]
[a3]
[u3, ., y]
[u3]
[this, ., z]
[this]
[MathArrays, ., linearCombination, (, a1, ,, u1, ., z, ,, a2, ,, u2, ., z, ,, a3, ,, u3, ., z, )]
[MathArrays]
[a1]
[u1, ., z]
[u1]
[a2]
[u2, ., z]
[u2]
[a3]
[u3, ., z]
[u3]
[this, ., x]
[this]
[MathArrays, ., linearCombination, (, a1, ,, u1, ., x, ,, a2, ,, u2, ., x, ,, a3, ,, u3, ., x, ,, a4, ,, u4, ., x, )]
[MathArrays]
[a1]
[u1, ., x]
[u1]
[a2]
[u2, ., x]
[u2]
[a3]
[u3, ., x]
[u3]
[a4]
[u4, ., x]
[u4]
[this, ., y]
[this]
[MathArrays, ., linearCombination, (, a1, ,, u1, ., y, ,, a2, ,, u2, ., y, ,, a3, ,, u3, ., y, ,, a4, ,, u4, ., y, )]
[MathArrays]
[a1]
[u1, ., y]
[u1]
[a2]
[u2, ., y]
[u2]
[a3]
[u3, ., y]
[u3]
[a4]
[u4, ., y]
[u4]
[this, ., z]
[this]
[MathArrays, ., linearCombination, (, a1, ,, u1, ., z, ,, a2, ,, u2, ., z, ,, a3, ,, u3, ., z, ,, a4, ,, u4, ., z, )]
[MathArrays]
[a1]
[u1, ., z]
[u1]
[a2]
[u2, ., z]
[u2]
[a3]
[u3, ., z]
[u3]
[a4]
[u4, ., z]
[u4]
[x]
[y]
[z]
[new, double, [, ], {, x, ,, y, ,, z, }]
[{, x, ,, y, ,, z, }]
[x]
[y]
[z]
[Euclidean3D, ., getInstance, (, )]
[Euclidean3D]
[ZERO]
[FastMath, ., abs, (, x, ), +, FastMath, ., abs, (, y, ), +, FastMath, ., abs, (, z, )]
[FastMath, ., abs, (, x, ), +, FastMath, ., abs, (, y, )]
[FastMath, ., abs, (, x, )]
[FastMath]
[x]
[FastMath, ., abs, (, y, )]
[FastMath]
[y]
[FastMath, ., abs, (, z, )]
[FastMath]
[z]
[FastMath, ., sqrt, (, x, *, x, +, y, *, y, +, z, *, z, )]
[FastMath]
[x, *, x, +, y, *, y, +, z, *, z]
[x, *, x, +, y, *, y]
[x, *, x]
[x]
[x]
[y, *, y]
[y]
[y]
[z, *, z]
[z]
[z]
[x, *, x, +, y, *, y, +, z, *, z]
[x, *, x, +, y, *, y]
[x, *, x]
[x]
[x]
[y, *, y]
[y]
[y]
[z, *, z]
[z]
[z]
[FastMath, ., max, (, FastMath, ., max, (, FastMath, ., abs, (, x, ), ,, FastMath, ., abs, (, y, ), ), ,, FastMath, ., abs, (, z, ), )]
[FastMath]
[FastMath, ., max, (, FastMath, ., abs, (, x, ), ,, FastMath, ., abs, (, y, ), )]
[FastMath]
[FastMath, ., abs, (, x, )]
[FastMath]
[x]
[FastMath, ., abs, (, y, )]
[FastMath]
[y]
[FastMath, ., abs, (, z, )]
[FastMath]
[z]
[FastMath, ., atan2, (, y, ,, x, )]
[FastMath]
[y]
[x]
[FastMath, ., asin, (, z, /, getNorm, (, ), )]
[FastMath]
[z, /, getNorm, (, )]
[z]
[getNorm, (, )]
[(, Vector3D, ), v]
[v]
[new, Vector3D, (, x, +, v3, ., x, ,, y, +, v3, ., y, ,, z, +, v3, ., z, )]
[x, +, v3, ., x]
[x]
[v3, ., x]
[v3]
[y, +, v3, ., y]
[y]
[v3, ., y]
[v3]
[z, +, v3, ., z]
[z]
[v3, ., z]
[v3]
[new, Vector3D, (, 1, ,, this, ,, factor, ,, (, Vector3D, ), v, )]
[1]
[this]
[factor]
[(, Vector3D, ), v]
[v]
[(, Vector3D, ), v]
[v]
[new, Vector3D, (, x, -, v3, ., x, ,, y, -, v3, ., y, ,, z, -, v3, ., z, )]
[x, -, v3, ., x]
[x]
[v3, ., x]
[v3]
[y, -, v3, ., y]
[y]
[v3, ., y]
[v3]
[z, -, v3, ., z]
[z]
[v3, ., z]
[v3]
[new, Vector3D, (, 1, ,, this, ,, -, factor, ,, (, Vector3D, ), v, )]
[1]
[this]
[-, factor]
[factor]
[(, Vector3D, ), v]
[v]
[getNorm, (, )]
[s, ==, 0]
[s]
[0]
[new, MathArithmeticException, (, LocalizedFormats, ., CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR, )]
[LocalizedFormats, ., CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR]
[LocalizedFormats]
[scalarMultiply, (, 1, /, s, )]
[1, /, s]
[1]
[s]
[0.6, *, getNorm, (, )]
[0.6]
[getNorm, (, )]
[threshold, ==, 0]
[threshold]
[0]
[new, MathArithmeticException, (, LocalizedFormats, ., ZERO_NORM, )]
[LocalizedFormats, ., ZERO_NORM]
[LocalizedFormats]
[FastMath, ., abs, (, x, ), <=, threshold]
[FastMath, ., abs, (, x, )]
[FastMath]
[x]
[threshold]
[1, /, FastMath, ., sqrt, (, y, *, y, +, z, *, z, )]
[1]
[FastMath, ., sqrt, (, y, *, y, +, z, *, z, )]
[FastMath]
[y, *, y, +, z, *, z]
[y, *, y]
[y]
[y]
[z, *, z]
[z]
[z]
[new, Vector3D, (, 0, ,, inverse, *, z, ,, -, inverse, *, y, )]
[0]
[inverse, *, z]
[inverse]
[z]
[-, inverse, *, y]
[-, inverse]
[inverse]
[y]
[FastMath, ., abs, (, y, ), <=, threshold]
[FastMath, ., abs, (, y, )]
[FastMath]
[y]
[threshold]
[1, /, FastMath, ., sqrt, (, x, *, x, +, z, *, z, )]
[1]
[FastMath, ., sqrt, (, x, *, x, +, z, *, z, )]
[FastMath]
[x, *, x, +, z, *, z]
[x, *, x]
[x]
[x]
[z, *, z]
[z]
[z]
[new, Vector3D, (, -, inverse, *, z, ,, 0, ,, inverse, *, x, )]
[-, inverse, *, z]
[-, inverse]
[inverse]
[z]
[0]
[inverse, *, x]
[inverse]
[x]
[1, /, FastMath, ., sqrt, (, x, *, x, +, y, *, y, )]
[1]
[FastMath, ., sqrt, (, x, *, x, +, y, *, y, )]
[FastMath]
[x, *, x, +, y, *, y]
[x, *, x]
[x]
[x]
[y, *, y]
[y]
[y]
[new, Vector3D, (, inverse, *, y, ,, -, inverse, *, x, ,, 0, )]
[inverse, *, y]
[inverse]
[y]
[-, inverse, *, x]
[-, inverse]
[inverse]
[x]
[0]
[v1, ., getNorm, (, ), *, v2, ., getNorm, (, )]
[v1, ., getNorm, (, )]
[v1]
[v2, ., getNorm, (, )]
[v2]
[normProduct, ==, 0]
[normProduct]
[0]
[new, MathArithmeticException, (, LocalizedFormats, ., ZERO_NORM, )]
[LocalizedFormats, ., ZERO_NORM]
[LocalizedFormats]
[v1, ., dotProduct, (, v2, )]
[v1]
[v2]
[normProduct, *, 0.9999]
[normProduct]
[0.9999]
[(, dot, <, -, threshold, ), ||, (, dot, >, threshold, )]
[(, dot, <, -, threshold, )]
[dot, <, -, threshold]
[dot]
[-, threshold]
[threshold]
[(, dot, >, threshold, )]
[dot, >, threshold]
[dot]
[threshold]
[crossProduct, (, v1, ,, v2, )]
[v1]
[v2]
[dot, >=, 0]
[dot]
[0]
[FastMath, ., asin, (, v3, ., getNorm, (, ), /, normProduct, )]
[FastMath]
[v3, ., getNorm, (, ), /, normProduct]
[v3, ., getNorm, (, )]
[v3]
[normProduct]
[FastMath, ., PI, -, FastMath, ., asin, (, v3, ., getNorm, (, ), /, normProduct, )]
[FastMath, ., PI]
[FastMath]
[FastMath, ., asin, (, v3, ., getNorm, (, ), /, normProduct, )]
[FastMath]
[v3, ., getNorm, (, ), /, normProduct]
[v3, ., getNorm, (, )]
[v3]
[normProduct]
[FastMath, ., acos, (, dot, /, normProduct, )]
[FastMath]
[dot, /, normProduct]
[dot]
[normProduct]
[new, Vector3D, (, -, x, ,, -, y, ,, -, z, )]
[-, x]
[x]
[-, y]
[y]
[-, z]
[z]
[new, Vector3D, (, a, *, x, ,, a, *, y, ,, a, *, z, )]
[a, *, x]
[a]
[x]
[a, *, y]
[a]
[y]
[a, *, z]
[a]
[z]
[Double, ., isNaN, (, x, ), ||, Double, ., isNaN, (, y, ), ||, Double, ., isNaN, (, z, )]
[Double, ., isNaN, (, x, ), ||, Double, ., isNaN, (, y, )]
[Double, ., isNaN, (, x, )]
[Double]
[x]
[Double, ., isNaN, (, y, )]
[Double]
[y]
[Double, ., isNaN, (, z, )]
[Double]
[z]
[!, isNaN, (, ), &&, (, Double, ., isInfinite, (, x, ), ||, Double, ., isInfinite, (, y, ), ||, Double, ., isInfinite, (, z, ), )]
[!, isNaN, (, )]
[isNaN, (, )]
[(, Double, ., isInfinite, (, x, ), ||, Double, ., isInfinite, (, y, ), ||, Double, ., isInfinite, (, z, ), )]
[Double, ., isInfinite, (, x, ), ||, Double, ., isInfinite, (, y, ), ||, Double, ., isInfinite, (, z, )]
[Double, ., isInfinite, (, x, ), ||, Double, ., isInfinite, (, y, )]
[Double, ., isInfinite, (, x, )]
[Double]
[x]
[Double, ., isInfinite, (, y, )]
[Double]
[y]
[Double, ., isInfinite, (, z, )]
[Double]
[z]
[this, ==, other]
[this]
[other]
[true]
[other, instanceof, Vector3D]
[other]
[(, Vector3D, ), other]
[other]
[rhs, ., isNaN, (, )]
[rhs]
[this, ., isNaN, (, )]
[this]
[(, x, ==, rhs, ., x, ), &&, (, y, ==, rhs, ., y, ), &&, (, z, ==, rhs, ., z, )]
[(, x, ==, rhs, ., x, ), &&, (, y, ==, rhs, ., y, )]
[(, x, ==, rhs, ., x, )]
[x, ==, rhs, ., x]
[x]
[rhs, ., x]
[rhs]
[(, y, ==, rhs, ., y, )]
[y, ==, rhs, ., y]
[y]
[rhs, ., y]
[rhs]
[(, z, ==, rhs, ., z, )]
[z, ==, rhs, ., z]
[z]
[rhs, ., z]
[rhs]
[false]
[isNaN, (, )]
[642]
[643, *, (, 164, *, MathUtils, ., hash, (, x, ), +, 3, *, MathUtils, ., hash, (, y, ), +, MathUtils, ., hash, (, z, ), )]
[643]
[(, 164, *, MathUtils, ., hash, (, x, ), +, 3, *, MathUtils, ., hash, (, y, ), +, MathUtils, ., hash, (, z, ), )]
[164, *, MathUtils, ., hash, (, x, ), +, 3, *, MathUtils, ., hash, (, y, ), +, MathUtils, ., hash, (, z, )]
[164, *, MathUtils, ., hash, (, x, ), +, 3, *, MathUtils, ., hash, (, y, )]
[164, *, MathUtils, ., hash, (, x, )]
[164]
[MathUtils, ., hash, (, x, )]
[MathUtils]
[x]
[3, *, MathUtils, ., hash, (, y, )]
[3]
[MathUtils, ., hash, (, y, )]
[MathUtils]
[y]
[MathUtils, ., hash, (, z, )]
[MathUtils]
[z]
[(, Vector3D, ), v]
[v]
[MathArrays, ., linearCombination, (, x, ,, v3, ., x, ,, y, ,, v3, ., y, ,, z, ,, v3, ., z, )]
[MathArrays]
[x]
[v3, ., x]
[v3]
[y]
[v3, ., y]
[v3]
[z]
[v3, ., z]
[v3]
[(, Vector3D, ), v]
[v]
[new, Vector3D, (, MathArrays, ., linearCombination, (, y, ,, v3, ., z, ,, -, z, ,, v3, ., y, ), ,, MathArrays, ., linearCombination, (, z, ,, v3, ., x, ,, -, x, ,, v3, ., z, ), ,, MathArrays, ., linearCombination, (, x, ,, v3, ., y, ,, -, y, ,, v3, ., x, ), )]
[MathArrays, ., linearCombination, (, y, ,, v3, ., z, ,, -, z, ,, v3, ., y, )]
[MathArrays]
[y]
[v3, ., z]
[v3]
[-, z]
[z]
[v3, ., y]
[v3]
[MathArrays, ., linearCombination, (, z, ,, v3, ., x, ,, -, x, ,, v3, ., z, )]
[MathArrays]
[z]
[v3, ., x]
[v3]
[-, x]
[x]
[v3, ., z]
[v3]
[MathArrays, ., linearCombination, (, x, ,, v3, ., y, ,, -, y, ,, v3, ., x, )]
[MathArrays]
[x]
[v3, ., y]
[v3]
[-, y]
[y]
[v3, ., x]
[v3]
[(, Vector3D, ), v]
[v]
[FastMath, ., abs, (, v3, ., x, -, x, )]
[FastMath]
[v3, ., x, -, x]
[v3, ., x]
[v3]
[x]
[FastMath, ., abs, (, v3, ., y, -, y, )]
[FastMath]
[v3, ., y, -, y]
[v3, ., y]
[v3]
[y]
[FastMath, ., abs, (, v3, ., z, -, z, )]
[FastMath]
[v3, ., z, -, z]
[v3, ., z]
[v3]
[z]
[dx, +, dy, +, dz]
[dx, +, dy]
[dx]
[dy]
[dz]
[(, Vector3D, ), v]
[v]
[v3, ., x, -, x]
[v3, ., x]
[v3]
[x]
[v3, ., y, -, y]
[v3, ., y]
[v3]
[y]
[v3, ., z, -, z]
[v3, ., z]
[v3]
[z]
[FastMath, ., sqrt, (, dx, *, dx, +, dy, *, dy, +, dz, *, dz, )]
[FastMath]
[dx, *, dx, +, dy, *, dy, +, dz, *, dz]
[dx, *, dx, +, dy, *, dy]
[dx, *, dx]
[dx]
[dx]
[dy, *, dy]
[dy]
[dy]
[dz, *, dz]
[dz]
[dz]
[(, Vector3D, ), v]
[v]
[FastMath, ., abs, (, v3, ., x, -, x, )]
[FastMath]
[v3, ., x, -, x]
[v3, ., x]
[v3]
[x]
[FastMath, ., abs, (, v3, ., y, -, y, )]
[FastMath]
[v3, ., y, -, y]
[v3, ., y]
[v3]
[y]
[FastMath, ., abs, (, v3, ., z, -, z, )]
[FastMath]
[v3, ., z, -, z]
[v3, ., z]
[v3]
[z]
[FastMath, ., max, (, FastMath, ., max, (, dx, ,, dy, ), ,, dz, )]
[FastMath]
[FastMath, ., max, (, dx, ,, dy, )]
[FastMath]
[dx]
[dy]
[dz]
[(, Vector3D, ), v]
[v]
[v3, ., x, -, x]
[v3, ., x]
[v3]
[x]
[v3, ., y, -, y]
[v3, ., y]
[v3]
[y]
[v3, ., z, -, z]
[v3, ., z]
[v3]
[z]
[dx, *, dx, +, dy, *, dy, +, dz, *, dz]
[dx, *, dx, +, dy, *, dy]
[dx, *, dx]
[dx]
[dx]
[dy, *, dy]
[dy]
[dy]
[dz, *, dz]
[dz]
[dz]
[v1, ., dotProduct, (, v2, )]
[v1]
[v2]
[v1, ., crossProduct, (, v2, )]
[v1]
[v2]
[v1, ., distance1, (, v2, )]
[v1]
[v2]
[v1, ., distance, (, v2, )]
[v1]
[v2]
[v1, ., distanceInf, (, v2, )]
[v1]
[v2]
[v1, ., distanceSq, (, v2, )]
[v1]
[v2]
[Vector3DFormat, ., getInstance, (, ), ., format, (, this, )]
[Vector3DFormat, ., getInstance, (, )]
[Vector3DFormat]
[this]
[new, Vector3DFormat, (, format, ), ., format, (, this, )]
[new, Vector3DFormat, (, format, )]
[format]
[this]
