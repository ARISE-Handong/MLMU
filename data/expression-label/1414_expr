[" [wrapped] "]
[{, "getCause", ,, "getNextException", ,, "getTargetException", ,, "getException", ,, "getSourceException", ,, "getRootCause", ,, "getCausedByException", ,, "getNested", ,, "getLinkedException", ,, "getNestedException", ,, "getLinkedCause", ,, "getThrowable", ,, }]
["getCause"]
["getNextException"]
["getTargetException"]
["getException"]
["getSourceException"]
["getRootCause"]
["getCausedByException"]
["getNested"]
["getLinkedException"]
["getNestedException"]
["getLinkedCause"]
["getThrowable"]
[ArrayUtils, ., clone, (, CAUSE_METHOD_NAMES, )]
[ArrayUtils]
[CAUSE_METHOD_NAMES]
[getCause, (, throwable, ,, CAUSE_METHOD_NAMES, )]
[throwable]
[CAUSE_METHOD_NAMES]
[throwable, ==, null]
[throwable]
[null]
[null]
[methodNames, ==, null]
[methodNames]
[null]
[methodNames]
[CAUSE_METHOD_NAMES]
[methodNames]
[methodName, !=, null]
[methodName]
[null]
[getCauseUsingMethodName, (, throwable, ,, methodName, )]
[throwable]
[methodName]
[cause, !=, null]
[cause]
[null]
[cause]
[null]
[getThrowableList, (, throwable, )]
[throwable]
[list, ., size, (, ), <, 2, ?, null, :, (, Throwable, ), list, ., get, (, list, ., size, (, ), -, 1, )]
[list, ., size, (, ), <, 2]
[list, ., size, (, )]
[list]
[2]
[null]
[(, Throwable, ), list, ., get, (, list, ., size, (, ), -, 1, )]
[list, ., get, (, list, ., size, (, ), -, 1, )]
[list]
[list, ., size, (, ), -, 1]
[list, ., size, (, )]
[list]
[1]
[null]
[method]
[throwable, ., getClass, (, ), ., getMethod, (, methodName, )]
[throwable, ., getClass, (, )]
[throwable]
[methodName]
[method, !=, null, &&, Throwable, ., class, ., isAssignableFrom, (, method, ., getReturnType, (, ), )]
[method, !=, null]
[method]
[null]
[Throwable, ., class, ., isAssignableFrom, (, method, ., getReturnType, (, ), )]
[Throwable, ., class]
[method, ., getReturnType, (, )]
[method]
[(, Throwable, ), method, ., invoke, (, throwable, )]
[method, ., invoke, (, throwable, )]
[method]
[throwable]
[null]
[getThrowableList, (, throwable, ), ., size, (, )]
[getThrowableList, (, throwable, )]
[throwable]
[getThrowableList, (, throwable, )]
[throwable]
[list, ., toArray, (, new, Throwable, [, list, ., size, (, ), ], )]
[list]
[new, Throwable, [, list, ., size, (, ), ]]
[list, ., size, (, )]
[list]
[new, ArrayList, <, Throwable, >, (, )]
[throwable, !=, null, &&, list, ., contains, (, throwable, ), ==, false]
[throwable, !=, null]
[throwable]
[null]
[list, ., contains, (, throwable, ), ==, false]
[list, ., contains, (, throwable, )]
[list]
[throwable]
[false]
[list, ., add, (, throwable, )]
[list]
[throwable]
[throwable]
[ExceptionUtils, ., getCause, (, throwable, )]
[ExceptionUtils]
[throwable]
[list]
[indexOf, (, throwable, ,, clazz, ,, 0, ,, false, )]
[throwable]
[clazz]
[0]
[false]
[indexOf, (, throwable, ,, clazz, ,, fromIndex, ,, false, )]
[throwable]
[clazz]
[fromIndex]
[false]
[indexOf, (, throwable, ,, type, ,, 0, ,, true, )]
[throwable]
[type]
[0]
[true]
[indexOf, (, throwable, ,, type, ,, fromIndex, ,, true, )]
[throwable]
[type]
[fromIndex]
[true]
[throwable, ==, null, ||, type, ==, null]
[throwable, ==, null]
[throwable]
[null]
[type, ==, null]
[type]
[null]
[-, 1]
[1]
[fromIndex, <, 0]
[fromIndex]
[0]
[fromIndex]
[0]
[ExceptionUtils, ., getThrowables, (, throwable, )]
[ExceptionUtils]
[throwable]
[fromIndex, >=, throwables, ., length]
[fromIndex]
[throwables, ., length]
[throwables]
[-, 1]
[1]
[subclass]
[fromIndex]
[i, <, throwables, ., length]
[i]
[throwables, ., length]
[throwables]
[i, ++]
[i]
[type, ., isAssignableFrom, (, throwables, [, i, ], ., getClass, (, ), )]
[type]
[throwables, [, i, ], ., getClass, (, )]
[throwables, [, i, ]]
[throwables]
[i]
[i]
[fromIndex]
[i, <, throwables, ., length]
[i]
[throwables, ., length]
[throwables]
[i, ++]
[i]
[type, ., equals, (, throwables, [, i, ], ., getClass, (, ), )]
[type]
[throwables, [, i, ], ., getClass, (, )]
[throwables, [, i, ]]
[throwables]
[i]
[i]
[-, 1]
[1]
[printRootCauseStackTrace, (, throwable, ,, System, ., err, )]
[throwable]
[System, ., err]
[System]
[throwable, ==, null]
[throwable]
[null]
[stream, ==, null]
[stream]
[null]
[new, IllegalArgumentException, (, "The PrintStream must not be null", )]
["The PrintStream must not be null"]
[getRootCauseStackTrace, (, throwable, )]
[throwable]
[trace]
[stream, ., println, (, element, )]
[stream]
[element]
[stream, ., flush, (, )]
[stream]
[throwable, ==, null]
[throwable]
[null]
[writer, ==, null]
[writer]
[null]
[new, IllegalArgumentException, (, "The PrintWriter must not be null", )]
["The PrintWriter must not be null"]
[getRootCauseStackTrace, (, throwable, )]
[throwable]
[trace]
[writer, ., println, (, element, )]
[writer]
[element]
[writer, ., flush, (, )]
[writer]
[throwable, ==, null]
[throwable]
[null]
[ArrayUtils, ., EMPTY_STRING_ARRAY]
[ArrayUtils]
[getThrowables, (, throwable, )]
[throwable]
[throwables, ., length]
[throwables]
[new, ArrayList, <, String, >, (, )]
[getStackFrameList, (, throwables, [, count, -, 1, ], )]
[throwables, [, count, -, 1, ]]
[throwables]
[count, -, 1]
[count]
[1]
[count]
[--, i, >=, 0]
[--, i]
[i]
[0]
[nextTrace]
[i, !=, 0]
[i]
[0]
[nextTrace]
[getStackFrameList, (, throwables, [, i, -, 1, ], )]
[throwables, [, i, -, 1, ]]
[throwables]
[i, -, 1]
[i]
[1]
[removeCommonFrames, (, trace, ,, nextTrace, )]
[trace]
[nextTrace]
[i, ==, count, -, 1]
[i]
[count, -, 1]
[count]
[1]
[frames, ., add, (, throwables, [, i, ], ., toString, (, ), )]
[frames]
[throwables, [, i, ], ., toString, (, )]
[throwables, [, i, ]]
[throwables]
[i]
[frames, ., add, (, WRAPPED_MARKER, +, throwables, [, i, ], ., toString, (, ), )]
[frames]
[WRAPPED_MARKER, +, throwables, [, i, ], ., toString, (, )]
[WRAPPED_MARKER]
[throwables, [, i, ], ., toString, (, )]
[throwables, [, i, ]]
[throwables]
[i]
[0]
[j, <, trace, ., size, (, )]
[j]
[trace, ., size, (, )]
[trace]
[j, ++]
[j]
[frames, ., add, (, trace, ., get, (, j, ), )]
[frames]
[trace, ., get, (, j, )]
[trace]
[j]
[frames, ., toArray, (, new, String, [, frames, ., size, (, ), ], )]
[frames]
[new, String, [, frames, ., size, (, ), ]]
[frames, ., size, (, )]
[frames]
[causeFrames, ==, null, ||, wrapperFrames, ==, null]
[causeFrames, ==, null]
[causeFrames]
[null]
[wrapperFrames, ==, null]
[wrapperFrames]
[null]
[new, IllegalArgumentException, (, "The List must not be null", )]
["The List must not be null"]
[causeFrames, ., size, (, ), -, 1]
[causeFrames, ., size, (, )]
[causeFrames]
[1]
[wrapperFrames, ., size, (, ), -, 1]
[wrapperFrames, ., size, (, )]
[wrapperFrames]
[1]
[causeFrameIndex, >=, 0, &&, wrapperFrameIndex, >=, 0]
[causeFrameIndex, >=, 0]
[causeFrameIndex]
[0]
[wrapperFrameIndex, >=, 0]
[wrapperFrameIndex]
[0]
[causeFrames, ., get, (, causeFrameIndex, )]
[causeFrames]
[causeFrameIndex]
[wrapperFrames, ., get, (, wrapperFrameIndex, )]
[wrapperFrames]
[wrapperFrameIndex]
[causeFrame, ., equals, (, wrapperFrame, )]
[causeFrame]
[wrapperFrame]
[causeFrames, ., remove, (, causeFrameIndex, )]
[causeFrames]
[causeFrameIndex]
[causeFrameIndex, --]
[causeFrameIndex]
[wrapperFrameIndex, --]
[wrapperFrameIndex]
[new, StringWriter, (, )]
[new, PrintWriter, (, sw, ,, true, )]
[sw]
[true]
[throwable, ., printStackTrace, (, pw, )]
[throwable]
[pw]
[sw, ., getBuffer, (, ), ., toString, (, )]
[sw, ., getBuffer, (, )]
[sw]
[throwable, ==, null]
[throwable]
[null]
[ArrayUtils, ., EMPTY_STRING_ARRAY]
[ArrayUtils]
[getStackFrames, (, getStackTrace, (, throwable, ), )]
[getStackTrace, (, throwable, )]
[throwable]
[SystemUtils, ., LINE_SEPARATOR]
[SystemUtils]
[new, StringTokenizer, (, stackTrace, ,, linebreak, )]
[stackTrace]
[linebreak]
[new, ArrayList, <, String, >, (, )]
[frames, ., hasMoreTokens, (, )]
[frames]
[list, ., add, (, frames, ., nextToken, (, ), )]
[list]
[frames, ., nextToken, (, )]
[frames]
[list, ., toArray, (, new, String, [, list, ., size, (, ), ], )]
[list]
[new, String, [, list, ., size, (, ), ]]
[list, ., size, (, )]
[list]
[getStackTrace, (, t, )]
[t]
[SystemUtils, ., LINE_SEPARATOR]
[SystemUtils]
[new, StringTokenizer, (, stackTrace, ,, linebreak, )]
[stackTrace]
[linebreak]
[new, ArrayList, <, String, >, (, )]
[false]
[frames, ., hasMoreTokens, (, )]
[frames]
[frames, ., nextToken, (, )]
[frames]
[token, ., indexOf, (, "at", )]
[token]
["at"]
[at, !=, -, 1, &&, token, ., substring, (, 0, ,, at, ), ., trim, (, ), ., isEmpty, (, )]
[at, !=, -, 1]
[at]
[-, 1]
[1]
[token, ., substring, (, 0, ,, at, ), ., trim, (, ), ., isEmpty, (, )]
[token, ., substring, (, 0, ,, at, ), ., trim, (, )]
[token, ., substring, (, 0, ,, at, )]
[token]
[0]
[at]
[traceStarted]
[true]
[list, ., add, (, token, )]
[list]
[token]
[traceStarted]
[list]
[th, ==, null]
[th]
[null]
[""]
[ClassUtils, ., getShortClassName, (, th, ,, null, )]
[ClassUtils]
[th]
[null]
[th, ., getMessage, (, )]
[th]
[clsName, +, ": ", +, StringUtils, ., defaultString, (, msg, )]
[clsName, +, ": "]
[clsName]
[": "]
[StringUtils, ., defaultString, (, msg, )]
[StringUtils]
[msg]
[ExceptionUtils, ., getRootCause, (, th, )]
[ExceptionUtils]
[th]
[root]
[root, ==, null, ?, th, :, root]
[root, ==, null]
[root]
[null]
[th]
[root]
[getMessage, (, root, )]
[root]
