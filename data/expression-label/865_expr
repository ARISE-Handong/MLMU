[3794383185924179525L]
[20]
[7.0]
[45.0]
[new, BasicStroke, (, 0.5f, ,, BasicStroke, ., CAP_BUTT, ,, BasicStroke, ., JOIN_BEVEL, ,, 0.0f, ,, new, float, [, ], {, 2.0f, ,, 2.0f, }, ,, 0.0f, )]
[0.5f]
[BasicStroke, ., CAP_BUTT]
[BasicStroke]
[BasicStroke, ., JOIN_BEVEL]
[BasicStroke]
[0.0f]
[new, float, [, ], {, 2.0f, ,, 2.0f, }]
[{, 2.0f, ,, 2.0f, }]
[2.0f]
[2.0f]
[0.0f]
[Color, ., gray]
[Color]
[ResourceBundleWrapper, ., getBundle, (, "org.jfree.chart.plot.LocalizationBundle", )]
[ResourceBundleWrapper]
["org.jfree.chart.plot.LocalizationBundle"]
[true]
[new, Font, (, "Tahoma", ,, Font, ., PLAIN, ,, 12, )]
["Tahoma"]
[Font, ., PLAIN]
[Font]
[12]
[Color, ., black]
[Color]
[new, ArrayList, (, )]
[null]
[null]
[null]
[this, ., dataset]
[this]
[dataset]
[this, ., dataset, !=, null]
[this, ., dataset]
[this]
[null]
[this, ., dataset, ., addChangeListener, (, this, )]
[this, ., dataset]
[this]
[this]
[this, ., angleTickUnit]
[this]
[new, NumberTickUnit, (, DEFAULT_ANGLE_TICK_UNIT_SIZE, )]
[DEFAULT_ANGLE_TICK_UNIT_SIZE]
[this, ., axis]
[this]
[radiusAxis]
[this, ., axis, !=, null]
[this, ., axis]
[this]
[null]
[this, ., axis, ., setPlot, (, this, )]
[this, ., axis]
[this]
[this]
[this, ., axis, ., addChangeListener, (, this, )]
[this, ., axis]
[this]
[this]
[this, ., renderer]
[this]
[renderer]
[this, ., renderer, !=, null]
[this, ., renderer]
[this]
[null]
[this, ., renderer, ., setPlot, (, this, )]
[this, ., renderer]
[this]
[this]
[this, ., renderer, ., addChangeListener, (, this, )]
[this, ., renderer]
[this]
[this]
[this, ., angleGridlinesVisible]
[this]
[true]
[this, ., angleGridlineStroke]
[this]
[DEFAULT_GRIDLINE_STROKE]
[this, ., angleGridlinePaint]
[this]
[DEFAULT_GRIDLINE_PAINT]
[this, ., radiusGridlinesVisible]
[this]
[true]
[this, ., radiusGridlineStroke]
[this]
[DEFAULT_GRIDLINE_STROKE]
[this, ., radiusGridlinePaint]
[this]
[DEFAULT_GRIDLINE_PAINT]
[text, ==, null]
[text]
[null]
[new, IllegalArgumentException, (, "Null 'text' argument.", )]
["Null 'text' argument."]
[this, ., cornerTextItems, ., add, (, text, )]
[this, ., cornerTextItems]
[this]
[text]
[fireChangeEvent, (, )]
[this, ., cornerTextItems, ., remove, (, text, )]
[this, ., cornerTextItems]
[this]
[text]
[removed]
[fireChangeEvent, (, )]
[this, ., cornerTextItems, ., size, (, ), >, 0]
[this, ., cornerTextItems, ., size, (, )]
[this, ., cornerTextItems]
[this]
[0]
[this, ., cornerTextItems, ., clear, (, )]
[this, ., cornerTextItems]
[this]
[fireChangeEvent, (, )]
[PolarPlot, ., localizationResources, ., getString, (, "Polar_Plot", )]
[PolarPlot, ., localizationResources]
[PolarPlot]
["Polar_Plot"]
[this, ., axis]
[this]
[axis, !=, null]
[axis]
[null]
[axis, ., setPlot, (, this, )]
[axis]
[this]
[this, ., axis, !=, null]
[this, ., axis]
[this]
[null]
[this, ., axis, ., removeChangeListener, (, this, )]
[this, ., axis]
[this]
[this]
[this, ., axis]
[this]
[axis]
[this, ., axis, !=, null]
[this, ., axis]
[this]
[null]
[this, ., axis, ., configure, (, )]
[this, ., axis]
[this]
[this, ., axis, ., addChangeListener, (, this, )]
[this, ., axis]
[this]
[this]
[fireChangeEvent, (, )]
[this, ., dataset]
[this]
[this, ., dataset]
[this]
[existing, !=, null]
[existing]
[null]
[existing, ., removeChangeListener, (, this, )]
[existing]
[this]
[this, ., dataset]
[this]
[dataset]
[this, ., dataset, !=, null]
[this, ., dataset]
[this]
[null]
[setDatasetGroup, (, this, ., dataset, ., getGroup, (, ), )]
[this, ., dataset, ., getGroup, (, )]
[this, ., dataset]
[this]
[this, ., dataset, ., addChangeListener, (, this, )]
[this, ., dataset]
[this]
[this]
[new, DatasetChangeEvent, (, this, ,, this, ., dataset, ,, new, DatasetChangeInfo, (, ), )]
[this]
[this, ., dataset]
[this]
[new, DatasetChangeInfo, (, )]
[datasetChanged, (, event, )]
[event]
[this, ., renderer]
[this]
[this, ., renderer, !=, null]
[this, ., renderer]
[this]
[null]
[this, ., renderer, ., removeChangeListener, (, this, )]
[this, ., renderer]
[this]
[this]
[this, ., renderer]
[this]
[renderer]
[this, ., renderer, !=, null]
[this, ., renderer]
[this]
[null]
[this, ., renderer, ., setPlot, (, this, )]
[this, ., renderer]
[this]
[this]
[fireChangeEvent, (, )]
[this, ., angleTickUnit]
[this]
[unit, ==, null]
[unit]
[null]
[new, IllegalArgumentException, (, "Null 'unit' argument.", )]
["Null 'unit' argument."]
[this, ., angleTickUnit]
[this]
[unit]
[fireChangeEvent, (, )]
[this, ., angleLabelsVisible]
[this]
[this, ., angleLabelsVisible, !=, visible]
[this, ., angleLabelsVisible]
[this]
[visible]
[this, ., angleLabelsVisible]
[this]
[visible]
[fireChangeEvent, (, )]
[this, ., angleLabelFont]
[this]
[font, ==, null]
[font]
[null]
[new, IllegalArgumentException, (, "Null 'font' argument.", )]
["Null 'font' argument."]
[this, ., angleLabelFont]
[this]
[font]
[fireChangeEvent, (, )]
[this, ., angleLabelPaint]
[this]
[paint, ==, null]
[paint]
[null]
[new, IllegalArgumentException, (, "Null 'paint' argument.", )]
["Null 'paint' argument."]
[this, ., angleLabelPaint]
[this]
[paint]
[fireChangeEvent, (, )]
[this, ., angleGridlinesVisible]
[this]
[this, ., angleGridlinesVisible, !=, visible]
[this, ., angleGridlinesVisible]
[this]
[visible]
[this, ., angleGridlinesVisible]
[this]
[visible]
[fireChangeEvent, (, )]
[this, ., angleGridlineStroke]
[this]
[this, ., angleGridlineStroke]
[this]
[stroke]
[fireChangeEvent, (, )]
[this, ., angleGridlinePaint]
[this]
[this, ., angleGridlinePaint]
[this]
[paint]
[fireChangeEvent, (, )]
[this, ., radiusGridlinesVisible]
[this]
[this, ., radiusGridlinesVisible, !=, visible]
[this, ., radiusGridlinesVisible]
[this]
[visible]
[this, ., radiusGridlinesVisible]
[this]
[visible]
[fireChangeEvent, (, )]
[this, ., radiusGridlineStroke]
[this]
[this, ., radiusGridlineStroke]
[this]
[stroke]
[fireChangeEvent, (, )]
[this, ., radiusGridlinePaint]
[this]
[this, ., radiusGridlinePaint]
[this]
[paint]
[fireChangeEvent, (, )]
[new, ArrayList, (, )]
[0.0]
[currentTickVal, <, 360.0]
[currentTickVal]
[360.0]
[currentTickVal]
[this, ., angleTickUnit, ., getSize, (, )]
[this, ., angleTickUnit]
[this]
[new, NumberTick, (, new, Double, (, currentTickVal, ), ,, this, ., angleTickUnit, ., valueToString, (, currentTickVal, ), ,, TextAnchor, ., CENTER, ,, TextAnchor, ., CENTER, ,, 0.0, )]
[new, Double, (, currentTickVal, )]
[currentTickVal]
[this, ., angleTickUnit, ., valueToString, (, currentTickVal, )]
[this, ., angleTickUnit]
[this]
[currentTickVal]
[TextAnchor, ., CENTER]
[TextAnchor]
[TextAnchor, ., CENTER]
[TextAnchor]
[0.0]
[ticks, ., add, (, tick, )]
[ticks]
[tick]
[ticks]
[(, area, ., getWidth, (, ), <=, MINIMUM_WIDTH_TO_DRAW, )]
[area, ., getWidth, (, ), <=, MINIMUM_WIDTH_TO_DRAW]
[area, ., getWidth, (, )]
[area]
[MINIMUM_WIDTH_TO_DRAW]
[(, area, ., getHeight, (, ), <=, MINIMUM_HEIGHT_TO_DRAW, )]
[area, ., getHeight, (, ), <=, MINIMUM_HEIGHT_TO_DRAW]
[area, ., getHeight, (, )]
[area]
[MINIMUM_HEIGHT_TO_DRAW]
[b1, ||, b2]
[b1]
[b2]
[info, !=, null]
[info]
[null]
[info, ., setPlotArea, (, area, )]
[info]
[area]
[getInsets, (, )]
[insets, ., trim, (, area, )]
[insets]
[area]
[area]
[info, !=, null]
[info]
[null]
[info, ., setDataArea, (, dataArea, )]
[info]
[dataArea]
[drawBackground, (, g2, ,, dataArea, )]
[g2]
[dataArea]
[Math, ., min, (, dataArea, ., getWidth, (, ), /, 2.0, ,, dataArea, ., getHeight, (, ), /, 2.0, ), -, MARGIN]
[Math, ., min, (, dataArea, ., getWidth, (, ), /, 2.0, ,, dataArea, ., getHeight, (, ), /, 2.0, )]
[Math]
[dataArea, ., getWidth, (, ), /, 2.0]
[dataArea, ., getWidth, (, )]
[dataArea]
[2.0]
[dataArea, ., getHeight, (, ), /, 2.0]
[dataArea, ., getHeight, (, )]
[dataArea]
[2.0]
[MARGIN]
[new, Rectangle2D, ., Double, (, dataArea, ., getCenterX, (, ), ,, dataArea, ., getCenterY, (, ), ,, h, ,, h, )]
[dataArea, ., getCenterX, (, )]
[dataArea]
[dataArea, ., getCenterY, (, )]
[dataArea]
[h]
[h]
[drawAxis, (, g2, ,, area, ,, quadrant, )]
[g2]
[area]
[quadrant]
[this, ., renderer, !=, null]
[this, ., renderer]
[this]
[null]
[g2, ., getClip, (, )]
[g2]
[g2, ., getComposite, (, )]
[g2]
[g2, ., clip, (, dataArea, )]
[g2]
[dataArea]
[g2, ., setComposite, (, AlphaComposite, ., getInstance, (, AlphaComposite, ., SRC_OVER, ,, getForegroundAlpha, (, ), ), )]
[g2]
[AlphaComposite, ., getInstance, (, AlphaComposite, ., SRC_OVER, ,, getForegroundAlpha, (, ), )]
[AlphaComposite]
[AlphaComposite, ., SRC_OVER]
[AlphaComposite]
[getForegroundAlpha, (, )]
[this, ., angleTicks]
[this]
[refreshAngleTicks, (, )]
[drawGridlines, (, g2, ,, dataArea, ,, this, ., angleTicks, ,, state, ., getTicks, (, ), )]
[g2]
[dataArea]
[this, ., angleTicks]
[this]
[state, ., getTicks, (, )]
[state]
[render, (, g2, ,, dataArea, ,, info, )]
[g2]
[dataArea]
[info]
[g2, ., setClip, (, originalClip, )]
[g2]
[originalClip]
[g2, ., setComposite, (, originalComposite, )]
[g2]
[originalComposite]
[drawOutline, (, g2, ,, dataArea, )]
[g2]
[dataArea]
[drawCornerTextItems, (, g2, ,, dataArea, )]
[g2]
[dataArea]
[this, ., cornerTextItems, ., isEmpty, (, )]
[this, ., cornerTextItems]
[this]
[g2, ., setColor, (, Color, ., black, )]
[g2]
[Color, ., black]
[Color]
[0.0]
[0.0]
[this, ., cornerTextItems, ., iterator, (, )]
[this, ., cornerTextItems]
[this]
[it, ., hasNext, (, )]
[it]
[(, String, ), it, ., next, (, )]
[it, ., next, (, )]
[it]
[g2, ., getFontMetrics, (, )]
[g2]
[TextUtilities, ., getTextBounds, (, msg, ,, g2, ,, fm, )]
[TextUtilities]
[msg]
[g2]
[fm]
[width]
[Math, ., max, (, width, ,, bounds, ., getWidth, (, ), )]
[Math]
[width]
[bounds, ., getWidth, (, )]
[bounds]
[height]
[bounds, ., getHeight, (, )]
[bounds]
[ANNOTATION_MARGIN, *, 2.0]
[ANNOTATION_MARGIN]
[2.0]
[ANNOTATION_MARGIN]
[width]
[xadj]
[height]
[yadj]
[area, ., getMaxX, (, ), -, width]
[area, ., getMaxX, (, )]
[area]
[width]
[area, ., getMaxY, (, ), -, height]
[area, ., getMaxY, (, )]
[area]
[height]
[g2, ., drawRect, (, (, int, ), x, ,, (, int, ), y, ,, (, int, ), width, ,, (, int, ), height, )]
[g2]
[(, int, ), x]
[x]
[(, int, ), y]
[y]
[(, int, ), width]
[width]
[(, int, ), height]
[height]
[x]
[ANNOTATION_MARGIN]
[this, ., cornerTextItems, ., iterator, (, )]
[this, ., cornerTextItems]
[this]
[it, ., hasNext, (, )]
[it]
[(, String, ), it, ., next, (, )]
[it, ., next, (, )]
[it]
[TextUtilities, ., getTextBounds, (, msg, ,, g2, ,, g2, ., getFontMetrics, (, ), )]
[TextUtilities]
[msg]
[g2]
[g2, ., getFontMetrics, (, )]
[g2]
[y]
[bounds, ., getHeight, (, )]
[bounds]
[g2, ., drawString, (, msg, ,, (, int, ), x, ,, (, int, ), y, )]
[g2]
[msg]
[(, int, ), x]
[x]
[(, int, ), y]
[y]
[this, ., axis, ., draw, (, g2, ,, dataArea, ., getMinY, (, ), ,, plotArea, ,, dataArea, ,, RectangleEdge, ., TOP, ,, null, )]
[this, ., axis]
[this]
[g2]
[dataArea, ., getMinY, (, )]
[dataArea]
[plotArea]
[dataArea]
[RectangleEdge, ., TOP]
[RectangleEdge]
[null]
[!, DatasetUtilities, ., isEmptyOrNull, (, this, ., dataset, )]
[DatasetUtilities, ., isEmptyOrNull, (, this, ., dataset, )]
[DatasetUtilities]
[this, ., dataset]
[this]
[this, ., dataset, ., getSeriesCount, (, )]
[this, ., dataset]
[this]
[0]
[series, <, seriesCount]
[series]
[seriesCount]
[series, ++]
[series]
[this, ., renderer, ., drawSeries, (, g2, ,, dataArea, ,, info, ,, this, ,, this, ., dataset, ,, series, )]
[this, ., renderer]
[this]
[g2]
[dataArea]
[info]
[this]
[this, ., dataset]
[this]
[series]
[drawNoDataMessage, (, g2, ,, dataArea, )]
[g2]
[dataArea]
[this, ., renderer, ==, null]
[this, ., renderer]
[this]
[null]
[isAngleGridlinesVisible, (, )]
[getAngleGridlineStroke, (, )]
[getAngleGridlinePaint, (, )]
[(, gridStroke, !=, null, ), &&, (, gridPaint, !=, null, )]
[(, gridStroke, !=, null, )]
[gridStroke, !=, null]
[gridStroke]
[null]
[(, gridPaint, !=, null, )]
[gridPaint, !=, null]
[gridPaint]
[null]
[this, ., renderer, ., drawAngularGridLines, (, g2, ,, this, ,, angularTicks, ,, dataArea, )]
[this, ., renderer]
[this]
[g2]
[this]
[angularTicks]
[dataArea]
[isRadiusGridlinesVisible, (, )]
[getRadiusGridlineStroke, (, )]
[getRadiusGridlinePaint, (, )]
[(, gridStroke, !=, null, ), &&, (, gridPaint, !=, null, )]
[(, gridStroke, !=, null, )]
[gridStroke, !=, null]
[gridStroke]
[null]
[(, gridPaint, !=, null, )]
[gridPaint, !=, null]
[gridPaint]
[null]
[this, ., renderer, ., drawRadialGridLines, (, g2, ,, this, ,, this, ., axis, ,, radialTicks, ,, dataArea, )]
[this, ., renderer]
[this]
[g2]
[this]
[this, ., axis]
[this]
[radialTicks]
[dataArea]
[percent, >, 0.0]
[percent]
[0.0]
[getMaxRadius, (, )]
[radius, *, percent]
[radius]
[percent]
[this, ., axis, ., setUpperBound, (, scaledRadius, )]
[this, ., axis]
[this]
[scaledRadius]
[getAxis, (, ), ., setAutoRange, (, false, )]
[getAxis, (, )]
[false]
[getAxis, (, ), ., setAutoRange, (, true, )]
[getAxis, (, )]
[true]
[null]
[this, ., dataset, !=, null]
[this, ., dataset]
[this]
[null]
[result]
[Range, ., combine, (, result, ,, DatasetUtilities, ., findRangeBounds, (, this, ., dataset, ), )]
[Range]
[result]
[DatasetUtilities, ., findRangeBounds, (, this, ., dataset, )]
[DatasetUtilities]
[this, ., dataset]
[this]
[result]
[this, ., axis, !=, null]
[this, ., axis]
[this]
[null]
[this, ., axis, ., configure, (, )]
[this, ., axis]
[this]
[getParent, (, ), !=, null]
[getParent, (, )]
[null]
[getParent, (, ), ., datasetChanged, (, event, )]
[getParent, (, )]
[event]
[super, ., datasetChanged, (, event, )]
[super]
[event]
[fireChangeEvent, (, )]
[0]
[this, ., dataset, !=, null]
[this, ., dataset]
[this]
[null]
[result]
[this, ., dataset, ., getSeriesCount, (, )]
[this, ., dataset]
[this]
[result]
[new, LegendItemCollection, (, )]
[this, ., dataset, !=, null]
[this, ., dataset]
[this]
[null]
[this, ., renderer, !=, null]
[this, ., renderer]
[this]
[null]
[this, ., dataset, ., getSeriesCount, (, )]
[this, ., dataset]
[this]
[0]
[i, <, seriesCount]
[i]
[seriesCount]
[i, ++]
[i]
[this, ., renderer, ., getLegendItem, (, i, )]
[this, ., renderer]
[this]
[i]
[result, ., add, (, item, )]
[result]
[item]
[result]
[obj, ==, this]
[obj]
[this]
[true]
[!, (, obj, instanceof, PolarPlot, )]
[(, obj, instanceof, PolarPlot, )]
[obj, instanceof, PolarPlot]
[obj]
[false]
[(, PolarPlot, ), obj]
[obj]
[!, ObjectUtilities, ., equal, (, this, ., axis, ,, that, ., axis, )]
[ObjectUtilities, ., equal, (, this, ., axis, ,, that, ., axis, )]
[ObjectUtilities]
[this, ., axis]
[this]
[that, ., axis]
[that]
[false]
[!, ObjectUtilities, ., equal, (, this, ., renderer, ,, that, ., renderer, )]
[ObjectUtilities, ., equal, (, this, ., renderer, ,, that, ., renderer, )]
[ObjectUtilities]
[this, ., renderer]
[this]
[that, ., renderer]
[that]
[false]
[!, this, ., angleTickUnit, ., equals, (, that, ., angleTickUnit, )]
[this, ., angleTickUnit, ., equals, (, that, ., angleTickUnit, )]
[this, ., angleTickUnit]
[this]
[that, ., angleTickUnit]
[that]
[false]
[this, ., angleGridlinesVisible, !=, that, ., angleGridlinesVisible]
[this, ., angleGridlinesVisible]
[this]
[that, ., angleGridlinesVisible]
[that]
[false]
[this, ., angleLabelsVisible, !=, that, ., angleLabelsVisible]
[this, ., angleLabelsVisible]
[this]
[that, ., angleLabelsVisible]
[that]
[false]
[!, this, ., angleLabelFont, ., equals, (, that, ., angleLabelFont, )]
[this, ., angleLabelFont, ., equals, (, that, ., angleLabelFont, )]
[this, ., angleLabelFont]
[this]
[that, ., angleLabelFont]
[that]
[false]
[!, PaintUtilities, ., equal, (, this, ., angleLabelPaint, ,, that, ., angleLabelPaint, )]
[PaintUtilities, ., equal, (, this, ., angleLabelPaint, ,, that, ., angleLabelPaint, )]
[PaintUtilities]
[this, ., angleLabelPaint]
[this]
[that, ., angleLabelPaint]
[that]
[false]
[!, ObjectUtilities, ., equal, (, this, ., angleGridlineStroke, ,, that, ., angleGridlineStroke, )]
[ObjectUtilities, ., equal, (, this, ., angleGridlineStroke, ,, that, ., angleGridlineStroke, )]
[ObjectUtilities]
[this, ., angleGridlineStroke]
[this]
[that, ., angleGridlineStroke]
[that]
[false]
[!, PaintUtilities, ., equal, (, this, ., angleGridlinePaint, ,, that, ., angleGridlinePaint, )]
[PaintUtilities, ., equal, (, this, ., angleGridlinePaint, ,, that, ., angleGridlinePaint, )]
[PaintUtilities]
[this, ., angleGridlinePaint]
[this]
[that, ., angleGridlinePaint]
[that]
[false]
[this, ., radiusGridlinesVisible, !=, that, ., radiusGridlinesVisible]
[this, ., radiusGridlinesVisible]
[this]
[that, ., radiusGridlinesVisible]
[that]
[false]
[!, ObjectUtilities, ., equal, (, this, ., radiusGridlineStroke, ,, that, ., radiusGridlineStroke, )]
[ObjectUtilities, ., equal, (, this, ., radiusGridlineStroke, ,, that, ., radiusGridlineStroke, )]
[ObjectUtilities]
[this, ., radiusGridlineStroke]
[this]
[that, ., radiusGridlineStroke]
[that]
[false]
[!, PaintUtilities, ., equal, (, this, ., radiusGridlinePaint, ,, that, ., radiusGridlinePaint, )]
[PaintUtilities, ., equal, (, this, ., radiusGridlinePaint, ,, that, ., radiusGridlinePaint, )]
[PaintUtilities]
[this, ., radiusGridlinePaint]
[this]
[that, ., radiusGridlinePaint]
[that]
[false]
[!, this, ., cornerTextItems, ., equals, (, that, ., cornerTextItems, )]
[this, ., cornerTextItems, ., equals, (, that, ., cornerTextItems, )]
[this, ., cornerTextItems]
[this]
[that, ., cornerTextItems]
[that]
[false]
[super, ., equals, (, obj, )]
[super]
[obj]
[(, PolarPlot, ), super, ., clone, (, )]
[super, ., clone, (, )]
[super]
[this, ., axis, !=, null]
[this, ., axis]
[this]
[null]
[clone, ., axis]
[clone]
[(, ValueAxis, ), ObjectUtilities, ., clone, (, this, ., axis, )]
[ObjectUtilities, ., clone, (, this, ., axis, )]
[ObjectUtilities]
[this, ., axis]
[this]
[clone, ., axis, ., setPlot, (, clone, )]
[clone, ., axis]
[clone]
[clone]
[clone, ., axis, ., addChangeListener, (, clone, )]
[clone, ., axis]
[clone]
[clone]
[clone, ., dataset, !=, null]
[clone, ., dataset]
[clone]
[null]
[clone, ., dataset, ., addChangeListener, (, clone, )]
[clone, ., dataset]
[clone]
[clone]
[this, ., renderer, !=, null]
[this, ., renderer]
[this]
[null]
[clone, ., renderer]
[clone]
[(, PolarItemRenderer, ), ObjectUtilities, ., clone, (, this, ., renderer, )]
[ObjectUtilities, ., clone, (, this, ., renderer, )]
[ObjectUtilities]
[this, ., renderer]
[this]
[clone, ., cornerTextItems]
[clone]
[new, ArrayList, (, this, ., cornerTextItems, )]
[this, ., cornerTextItems]
[this]
[clone]
[stream, ., defaultWriteObject, (, )]
[stream]
[SerialUtilities, ., writeStroke, (, this, ., angleGridlineStroke, ,, stream, )]
[SerialUtilities]
[this, ., angleGridlineStroke]
[this]
[stream]
[SerialUtilities, ., writePaint, (, this, ., angleGridlinePaint, ,, stream, )]
[SerialUtilities]
[this, ., angleGridlinePaint]
[this]
[stream]
[SerialUtilities, ., writeStroke, (, this, ., radiusGridlineStroke, ,, stream, )]
[SerialUtilities]
[this, ., radiusGridlineStroke]
[this]
[stream]
[SerialUtilities, ., writePaint, (, this, ., radiusGridlinePaint, ,, stream, )]
[SerialUtilities]
[this, ., radiusGridlinePaint]
[this]
[stream]
[SerialUtilities, ., writePaint, (, this, ., angleLabelPaint, ,, stream, )]
[SerialUtilities]
[this, ., angleLabelPaint]
[this]
[stream]
[stream, ., defaultReadObject, (, )]
[stream]
[this, ., angleGridlineStroke]
[this]
[SerialUtilities, ., readStroke, (, stream, )]
[SerialUtilities]
[stream]
[this, ., angleGridlinePaint]
[this]
[SerialUtilities, ., readPaint, (, stream, )]
[SerialUtilities]
[stream]
[this, ., radiusGridlineStroke]
[this]
[SerialUtilities, ., readStroke, (, stream, )]
[SerialUtilities]
[stream]
[this, ., radiusGridlinePaint]
[this]
[SerialUtilities, ., readPaint, (, stream, )]
[SerialUtilities]
[stream]
[this, ., angleLabelPaint]
[this]
[SerialUtilities, ., readPaint, (, stream, )]
[SerialUtilities]
[stream]
[this, ., axis, !=, null]
[this, ., axis]
[this]
[null]
[this, ., axis, ., setPlot, (, this, )]
[this, ., axis]
[this]
[this]
[this, ., axis, ., addChangeListener, (, this, )]
[this, ., axis]
[this]
[this]
[this, ., dataset, !=, null]
[this, ., dataset]
[this]
[null]
[this, ., dataset, ., addChangeListener, (, this, )]
[this, ., dataset]
[this]
[this]
[zoom, (, factor, )]
[factor]
[useAnchor]
[source, ., getX, (, )]
[source]
[this, ., axis, ., java2DToValue, (, sourceX, ,, info, ., getDataArea, (, ), ,, RectangleEdge, ., BOTTOM, )]
[this, ., axis]
[this]
[sourceX]
[info, ., getDataArea, (, )]
[info]
[RectangleEdge, ., BOTTOM]
[RectangleEdge]
[this, ., axis, ., resizeRange, (, factor, ,, anchorX, )]
[this, ., axis]
[this]
[factor]
[anchorX]
[this, ., axis, ., resizeRange, (, factor, )]
[this, ., axis]
[this]
[factor]
[zoom, (, (, upperPercent, +, lowerPercent, ), /, 2.0, )]
[(, upperPercent, +, lowerPercent, ), /, 2.0]
[(, upperPercent, +, lowerPercent, )]
[upperPercent, +, lowerPercent]
[upperPercent]
[lowerPercent]
[2.0]
[false]
[true]
[PlotOrientation, ., HORIZONTAL]
[PlotOrientation]
[this, ., axis, ., getUpperBound, (, )]
[this, ., axis]
[this]
[Math, ., toRadians, (, angleDegrees, -, 90.0, )]
[Math]
[angleDegrees, -, 90.0]
[angleDegrees]
[90.0]
[dataArea, ., getMinX, (, ), +, MARGIN]
[dataArea, ., getMinX, (, )]
[dataArea]
[MARGIN]
[dataArea, ., getMaxX, (, ), -, MARGIN]
[dataArea, ., getMaxX, (, )]
[dataArea]
[MARGIN]
[dataArea, ., getMinY, (, ), +, MARGIN]
[dataArea, ., getMinY, (, )]
[dataArea]
[MARGIN]
[dataArea, ., getMaxY, (, ), -, MARGIN]
[dataArea, ., getMaxY, (, )]
[dataArea]
[MARGIN]
[maxx, -, minx]
[maxx]
[minx]
[maxy, -, miny]
[maxy]
[miny]
[Math, ., min, (, lengthX, ,, lengthY, )]
[Math]
[lengthX]
[lengthY]
[minx, +, lengthX, /, 2.0]
[minx]
[lengthX, /, 2.0]
[lengthX]
[2.0]
[miny, +, lengthY, /, 2.0]
[miny]
[lengthY, /, 2.0]
[lengthY]
[2.0]
[this, ., axis, ., getLowerBound, (, )]
[this, ., axis]
[this]
[getMaxRadius, (, )]
[Math, ., max, (, radius, ,, axisMin, )]
[Math]
[radius]
[axisMin]
[length, /, 2.0, *, Math, ., cos, (, radians, )]
[length, /, 2.0]
[length]
[2.0]
[Math, ., cos, (, radians, )]
[Math]
[radians]
[length, /, 2.0, *, Math, ., sin, (, radians, )]
[length, /, 2.0]
[length]
[2.0]
[Math, ., sin, (, radians, )]
[Math]
[radians]
[(, float, ), (, midX, +, (, xv, *, (, adjustedRadius, -, axisMin, ), /, (, axisMax, -, axisMin, ), ), )]
[(, midX, +, (, xv, *, (, adjustedRadius, -, axisMin, ), /, (, axisMax, -, axisMin, ), ), )]
[midX, +, (, xv, *, (, adjustedRadius, -, axisMin, ), /, (, axisMax, -, axisMin, ), )]
[midX]
[(, xv, *, (, adjustedRadius, -, axisMin, ), /, (, axisMax, -, axisMin, ), )]
[xv, *, (, adjustedRadius, -, axisMin, ), /, (, axisMax, -, axisMin, )]
[xv, *, (, adjustedRadius, -, axisMin, )]
[xv]
[(, adjustedRadius, -, axisMin, )]
[adjustedRadius, -, axisMin]
[adjustedRadius]
[axisMin]
[(, axisMax, -, axisMin, )]
[axisMax, -, axisMin]
[axisMax]
[axisMin]
[(, float, ), (, midY, +, (, yv, *, (, adjustedRadius, -, axisMin, ), /, (, axisMax, -, axisMin, ), ), )]
[(, midY, +, (, yv, *, (, adjustedRadius, -, axisMin, ), /, (, axisMax, -, axisMin, ), ), )]
[midY, +, (, yv, *, (, adjustedRadius, -, axisMin, ), /, (, axisMax, -, axisMin, ), )]
[midY]
[(, yv, *, (, adjustedRadius, -, axisMin, ), /, (, axisMax, -, axisMin, ), )]
[yv, *, (, adjustedRadius, -, axisMin, ), /, (, axisMax, -, axisMin, )]
[yv, *, (, adjustedRadius, -, axisMin, )]
[yv]
[(, adjustedRadius, -, axisMin, )]
[adjustedRadius, -, axisMin]
[adjustedRadius]
[axisMin]
[(, axisMax, -, axisMin, )]
[axisMax, -, axisMin]
[axisMax]
[axisMin]
[Math, ., round, (, x, )]
[Math]
[x]
[Math, ., round, (, y, )]
[Math]
[y]
[new, Point, (, ix, ,, iy, )]
[ix]
[iy]
[p]
