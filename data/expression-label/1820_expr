[new, long, [, ], {, 1l, ,, 1l, ,, 2l, ,, 6l, ,, 24l, ,, 120l, ,, 720l, ,, 5040l, ,, 40320l, ,, 362880l, ,, 3628800l, ,, 39916800l, ,, 479001600l, ,, 6227020800l, ,, 87178291200l, ,, 1307674368000l, ,, 20922789888000l, ,, 355687428096000l, ,, 6402373705728000l, ,, 121645100408832000l, ,, 2432902008176640000l, }]
[{, 1l, ,, 1l, ,, 2l, ,, 6l, ,, 24l, ,, 120l, ,, 720l, ,, 5040l, ,, 40320l, ,, 362880l, ,, 3628800l, ,, 39916800l, ,, 479001600l, ,, 6227020800l, ,, 87178291200l, ,, 1307674368000l, ,, 20922789888000l, ,, 355687428096000l, ,, 6402373705728000l, ,, 121645100408832000l, ,, 2432902008176640000l, }]
[1l]
[1l]
[2l]
[6l]
[24l]
[120l]
[720l]
[5040l]
[40320l]
[362880l]
[3628800l]
[39916800l]
[479001600l]
[6227020800l]
[87178291200l]
[1307674368000l]
[20922789888000l]
[355687428096000l]
[6402373705728000l]
[121645100408832000l]
[2432902008176640000l]
[new, AtomicReference, <, long, [, ], [, ], >, (, null, )]
[null]
[CombinatoricsUtils, ., checkBinomial, (, n, ,, k, )]
[CombinatoricsUtils]
[n]
[k]
[(, n, ==, k, ), ||, (, k, ==, 0, )]
[(, n, ==, k, )]
[n, ==, k]
[n]
[k]
[(, k, ==, 0, )]
[k, ==, 0]
[k]
[0]
[1]
[(, k, ==, 1, ), ||, (, k, ==, n, -, 1, )]
[(, k, ==, 1, )]
[k, ==, 1]
[k]
[1]
[(, k, ==, n, -, 1, )]
[k, ==, n, -, 1]
[k]
[n, -, 1]
[n]
[1]
[n]
[k, >, n, /, 2]
[k]
[n, /, 2]
[n]
[2]
[binomialCoefficient, (, n, ,, n, -, k, )]
[n]
[n, -, k]
[n]
[k]
[1]
[n, <=, 61]
[n]
[61]
[n, -, k, +, 1]
[n, -, k]
[n]
[k]
[1]
[1]
[j, <=, k]
[j]
[k]
[j, ++]
[j]
[result]
[result, *, i, /, j]
[result, *, i]
[result]
[i]
[j]
[i, ++]
[i]
[n, <=, 66]
[n]
[66]
[n, -, k, +, 1]
[n, -, k]
[n]
[k]
[1]
[1]
[j, <=, k]
[j]
[k]
[j, ++]
[j]
[ArithmeticUtils, ., gcd, (, i, ,, j, )]
[ArithmeticUtils]
[i]
[j]
[result]
[(, result, /, (, j, /, d, ), ), *, (, i, /, d, )]
[(, result, /, (, j, /, d, ), )]
[result, /, (, j, /, d, )]
[result]
[(, j, /, d, )]
[j, /, d]
[j]
[d]
[(, i, /, d, )]
[i, /, d]
[i]
[d]
[i, ++]
[i]
[n, -, k, +, 1]
[n, -, k]
[n]
[k]
[1]
[1]
[j, <=, k]
[j]
[k]
[j, ++]
[j]
[ArithmeticUtils, ., gcd, (, i, ,, j, )]
[ArithmeticUtils]
[i]
[j]
[result]
[ArithmeticUtils, ., mulAndCheck, (, result, /, (, j, /, d, ), ,, i, /, d, )]
[ArithmeticUtils]
[result, /, (, j, /, d, )]
[result]
[(, j, /, d, )]
[j, /, d]
[j]
[d]
[i, /, d]
[i]
[d]
[i, ++]
[i]
[result]
[CombinatoricsUtils, ., checkBinomial, (, n, ,, k, )]
[CombinatoricsUtils]
[n]
[k]
[(, n, ==, k, ), ||, (, k, ==, 0, )]
[(, n, ==, k, )]
[n, ==, k]
[n]
[k]
[(, k, ==, 0, )]
[k, ==, 0]
[k]
[0]
[1d]
[(, k, ==, 1, ), ||, (, k, ==, n, -, 1, )]
[(, k, ==, 1, )]
[k, ==, 1]
[k]
[1]
[(, k, ==, n, -, 1, )]
[k, ==, n, -, 1]
[k]
[n, -, 1]
[n]
[1]
[n]
[k, >, n, /, 2]
[k]
[n, /, 2]
[n]
[2]
[binomialCoefficientDouble, (, n, ,, n, -, k, )]
[n]
[n, -, k]
[n]
[k]
[n, <, 67]
[n]
[67]
[binomialCoefficient, (, n, ,, k, )]
[n]
[k]
[1d]
[1]
[i, <=, k]
[i]
[k]
[i, ++]
[i]
[result]
[(, double, ), (, n, -, k, +, i, ), /, (, double, ), i]
[(, double, ), (, n, -, k, +, i, )]
[(, n, -, k, +, i, )]
[n, -, k, +, i]
[n, -, k]
[n]
[k]
[i]
[(, double, ), i]
[i]
[FastMath, ., floor, (, result, +, 0.5, )]
[FastMath]
[result, +, 0.5]
[result]
[0.5]
[CombinatoricsUtils, ., checkBinomial, (, n, ,, k, )]
[CombinatoricsUtils]
[n]
[k]
[(, n, ==, k, ), ||, (, k, ==, 0, )]
[(, n, ==, k, )]
[n, ==, k]
[n]
[k]
[(, k, ==, 0, )]
[k, ==, 0]
[k]
[0]
[0]
[(, k, ==, 1, ), ||, (, k, ==, n, -, 1, )]
[(, k, ==, 1, )]
[k, ==, 1]
[k]
[1]
[(, k, ==, n, -, 1, )]
[k, ==, n, -, 1]
[k]
[n, -, 1]
[n]
[1]
[FastMath, ., log, (, n, )]
[FastMath]
[n]
[n, <, 67]
[n]
[67]
[FastMath, ., log, (, binomialCoefficient, (, n, ,, k, ), )]
[FastMath]
[binomialCoefficient, (, n, ,, k, )]
[n]
[k]
[n, <, 1030]
[n]
[1030]
[FastMath, ., log, (, binomialCoefficientDouble, (, n, ,, k, ), )]
[FastMath]
[binomialCoefficientDouble, (, n, ,, k, )]
[n]
[k]
[k, >, n, /, 2]
[k]
[n, /, 2]
[n]
[2]
[binomialCoefficientLog, (, n, ,, n, -, k, )]
[n]
[n, -, k]
[n]
[k]
[0]
[n, -, k, +, 1]
[n, -, k]
[n]
[k]
[1]
[i, <=, n]
[i]
[n]
[i, ++]
[i]
[logSum]
[FastMath, ., log, (, i, )]
[FastMath]
[i]
[2]
[i, <=, k]
[i]
[k]
[i, ++]
[i]
[logSum]
[FastMath, ., log, (, i, )]
[FastMath]
[i]
[logSum]
[n, <, 0]
[n]
[0]
[new, NotPositiveException, (, LocalizedFormats, ., FACTORIAL_NEGATIVE_PARAMETER, ,, n, )]
[LocalizedFormats, ., FACTORIAL_NEGATIVE_PARAMETER]
[LocalizedFormats]
[n]
[n, >, 20]
[n]
[20]
[new, MathArithmeticException, (, )]
[FACTORIALS, [, n, ]]
[FACTORIALS]
[n]
[n, <, 0]
[n]
[0]
[new, NotPositiveException, (, LocalizedFormats, ., FACTORIAL_NEGATIVE_PARAMETER, ,, n, )]
[LocalizedFormats, ., FACTORIAL_NEGATIVE_PARAMETER]
[LocalizedFormats]
[n]
[n, <, 21]
[n]
[21]
[FACTORIALS, [, n, ]]
[FACTORIALS]
[n]
[FastMath, ., floor, (, FastMath, ., exp, (, CombinatoricsUtils, ., factorialLog, (, n, ), ), +, 0.5, )]
[FastMath]
[FastMath, ., exp, (, CombinatoricsUtils, ., factorialLog, (, n, ), ), +, 0.5]
[FastMath, ., exp, (, CombinatoricsUtils, ., factorialLog, (, n, ), )]
[FastMath]
[CombinatoricsUtils, ., factorialLog, (, n, )]
[CombinatoricsUtils]
[n]
[0.5]
[n, <, 0]
[n]
[0]
[new, NotPositiveException, (, LocalizedFormats, ., FACTORIAL_NEGATIVE_PARAMETER, ,, n, )]
[LocalizedFormats, ., FACTORIAL_NEGATIVE_PARAMETER]
[LocalizedFormats]
[n]
[n, <, 21]
[n]
[21]
[FastMath, ., log, (, FACTORIALS, [, n, ], )]
[FastMath]
[FACTORIALS, [, n, ]]
[FACTORIALS]
[n]
[0]
[2]
[i, <=, n]
[i]
[n]
[i, ++]
[i]
[logSum]
[FastMath, ., log, (, i, )]
[FastMath]
[i]
[logSum]
[k, <, 0]
[k]
[0]
[new, NotPositiveException, (, k, )]
[k]
[k, >, n]
[k]
[n]
[new, NumberIsTooLargeException, (, k, ,, n, ,, true, )]
[k]
[n]
[true]
[STIRLING_S2, ., get, (, )]
[STIRLING_S2]
[stirlingS2, ==, null]
[stirlingS2]
[null]
[26]
[stirlingS2]
[new, long, [, maxIndex, ], [, ]]
[maxIndex]
[stirlingS2, [, 0, ]]
[stirlingS2]
[0]
[new, long, [, ], {, 1l, }]
[{, 1l, }]
[1l]
[1]
[i, <, stirlingS2, ., length]
[i]
[stirlingS2, ., length]
[stirlingS2]
[++, i]
[i]
[stirlingS2, [, i, ]]
[stirlingS2]
[i]
[new, long, [, i, +, 1, ]]
[i, +, 1]
[i]
[1]
[stirlingS2, [, i, ], [, 0, ]]
[stirlingS2, [, i, ]]
[stirlingS2]
[i]
[0]
[0]
[stirlingS2, [, i, ], [, 1, ]]
[stirlingS2, [, i, ]]
[stirlingS2]
[i]
[1]
[1]
[stirlingS2, [, i, ], [, i, ]]
[stirlingS2, [, i, ]]
[stirlingS2]
[i]
[i]
[1]
[2]
[j, <, i]
[j]
[i]
[++, j]
[j]
[stirlingS2, [, i, ], [, j, ]]
[stirlingS2, [, i, ]]
[stirlingS2]
[i]
[j]
[j, *, stirlingS2, [, i, -, 1, ], [, j, ], +, stirlingS2, [, i, -, 1, ], [, j, -, 1, ]]
[j, *, stirlingS2, [, i, -, 1, ], [, j, ]]
[j]
[stirlingS2, [, i, -, 1, ], [, j, ]]
[stirlingS2, [, i, -, 1, ]]
[stirlingS2]
[i, -, 1]
[i]
[1]
[j]
[stirlingS2, [, i, -, 1, ], [, j, -, 1, ]]
[stirlingS2, [, i, -, 1, ]]
[stirlingS2]
[i, -, 1]
[i]
[1]
[j, -, 1]
[j]
[1]
[STIRLING_S2, ., compareAndSet, (, null, ,, stirlingS2, )]
[STIRLING_S2]
[null]
[stirlingS2]
[n, <, stirlingS2, ., length]
[n]
[stirlingS2, ., length]
[stirlingS2]
[stirlingS2, [, n, ], [, k, ]]
[stirlingS2, [, n, ]]
[stirlingS2]
[n]
[k]
[k, ==, 0]
[k]
[0]
[0]
[k, ==, 1, ||, k, ==, n]
[k, ==, 1]
[k]
[1]
[k, ==, n]
[k]
[n]
[1]
[k, ==, 2]
[k]
[2]
[(, 1l, <<, (, n, -, 1, ), ), -, 1l]
[(, 1l, <<, (, n, -, 1, ), )]
[1l, <<, (, n, -, 1, )]
[1l]
[(, n, -, 1, )]
[n, -, 1]
[n]
[1]
[1l]
[k, ==, n, -, 1]
[k]
[n, -, 1]
[n]
[1]
[binomialCoefficient, (, n, ,, 2, )]
[n]
[2]
[0]
[(, (, k, &, 0x1, ), ==, 0, ), ?, 1, :, -, 1]
[(, (, k, &, 0x1, ), ==, 0, )]
[(, k, &, 0x1, ), ==, 0]
[(, k, &, 0x1, )]
[k, &, 0x1]
[k]
[0x1]
[0]
[1]
[-, 1]
[1]
[1]
[j, <=, k]
[j]
[k]
[++, j]
[j]
[sign]
[-, sign]
[sign]
[sum]
[sign, *, binomialCoefficient, (, k, ,, j, ), *, ArithmeticUtils, ., pow, (, j, ,, n, )]
[sign, *, binomialCoefficient, (, k, ,, j, )]
[sign]
[binomialCoefficient, (, k, ,, j, )]
[k]
[j]
[ArithmeticUtils, ., pow, (, j, ,, n, )]
[ArithmeticUtils]
[j]
[n]
[sum, <, 0]
[sum]
[0]
[new, MathArithmeticException, (, LocalizedFormats, ., ARGUMENT_OUTSIDE_DOMAIN, ,, n, ,, 0, ,, stirlingS2, ., length, -, 1, )]
[LocalizedFormats, ., ARGUMENT_OUTSIDE_DOMAIN]
[LocalizedFormats]
[n]
[0]
[stirlingS2, ., length, -, 1]
[stirlingS2, ., length]
[stirlingS2]
[1]
[sum, /, factorial, (, k, )]
[sum]
[factorial, (, k, )]
[k]
[checkBinomial, (, n, ,, k, )]
[n]
[k]
[k, ==, 0]
[k]
[0]
[new, SingletonIterator, (, new, int, [, ], {, }, )]
[new, int, [, ], {, }]
[{, }]
[k, ==, n]
[k]
[n]
[new, int, [, n, ]]
[n]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[natural, [, i, ]]
[natural]
[i]
[i]
[new, SingletonIterator, (, natural, )]
[natural]
[new, LexicographicCombinationIterator, (, n, ,, k, )]
[n]
[k]
[true]
[this, ., k]
[this]
[k]
[c]
[new, int, [, k, +, 3, ]]
[k, +, 3]
[k]
[3]
[k, ==, 0, ||, k, >=, n]
[k, ==, 0]
[k]
[0]
[k, >=, n]
[k]
[n]
[more]
[false]
[1]
[i, <=, k]
[i]
[k]
[i, ++]
[i]
[c, [, i, ]]
[c]
[i]
[i, -, 1]
[i]
[1]
[c, [, k, +, 1, ]]
[c]
[k, +, 1]
[k]
[1]
[n]
[c, [, k, +, 2, ]]
[c]
[k, +, 2]
[k]
[2]
[0]
[j]
[k]
[more]
[!, more]
[more]
[new, NoSuchElementException, (, )]
[new, int, [, k, ]]
[k]
[System, ., arraycopy, (, c, ,, 1, ,, ret, ,, 0, ,, k, )]
[System]
[c]
[1]
[ret]
[0]
[k]
[0]
[j, >, 0]
[j]
[0]
[x]
[j]
[c, [, j, ]]
[c]
[j]
[x]
[j, --]
[j]
[ret]
[c, [, 1, ], +, 1, <, c, [, 2, ]]
[c, [, 1, ], +, 1]
[c, [, 1, ]]
[c]
[1]
[1]
[c, [, 2, ]]
[c]
[2]
[c, [, 1, ]]
[c]
[1]
[c, [, 1, ], +, 1]
[c, [, 1, ]]
[c]
[1]
[1]
[ret]
[j]
[2]
[false]
[!, stepDone]
[stepDone]
[c, [, j, -, 1, ]]
[c]
[j, -, 1]
[j]
[1]
[j, -, 2]
[j]
[2]
[x]
[c, [, j, ], +, 1]
[c, [, j, ]]
[c]
[j]
[1]
[x, ==, c, [, j, +, 1, ]]
[x]
[c, [, j, +, 1, ]]
[c]
[j, +, 1]
[j]
[1]
[j, ++]
[j]
[stepDone]
[true]
[j, >, k]
[j]
[k]
[more]
[false]
[ret]
[c, [, j, ]]
[c]
[j]
[x]
[j, --]
[j]
[ret]
[new, UnsupportedOperationException, (, )]
[true]
[this, ., singleton]
[this]
[singleton]
[more]
[more]
[more]
[false]
[singleton]
[new, NoSuchElementException, (, )]
[new, UnsupportedOperationException, (, )]
[n, <, k]
[n]
[k]
[new, NumberIsTooLargeException, (, LocalizedFormats, ., BINOMIAL_INVALID_PARAMETERS_ORDER, ,, k, ,, n, ,, true, )]
[LocalizedFormats, ., BINOMIAL_INVALID_PARAMETERS_ORDER]
[LocalizedFormats]
[k]
[n]
[true]
[n, <, 0]
[n]
[0]
[new, NotPositiveException, (, LocalizedFormats, ., BINOMIAL_NEGATIVE_PARAMETER, ,, n, )]
[LocalizedFormats, ., BINOMIAL_NEGATIVE_PARAMETER]
[LocalizedFormats]
[n]
