[new, ErrorReporterParser, (, )]
[errorReporter, ., warning, (, ScriptRuntime, ., getMessage1, (, messageId, ,, messageArg, ), ,, getSourceName, (, ), ,, lineno, ,, null, ,, charno, )]
[errorReporter]
[ScriptRuntime, ., getMessage1, (, messageId, ,, messageArg, )]
[ScriptRuntime]
[messageId]
[messageArg]
[getSourceName, (, )]
[lineno]
[null]
[charno]
[errorReporter, ., warning, (, ScriptRuntime, ., getMessage0, (, messageId, ), ,, getSourceName, (, ), ,, lineno, ,, null, ,, charno, )]
[errorReporter]
[ScriptRuntime, ., getMessage0, (, messageId, )]
[ScriptRuntime]
[messageId]
[getSourceName, (, )]
[lineno]
[null]
[charno]
[errorReporter, ., warning, (, "Bad type annotation. ", +, ScriptRuntime, ., getMessage1, (, messageId, ,, messageArg, ), ,, getSourceName, (, ), ,, lineno, ,, null, ,, charno, )]
[errorReporter]
["Bad type annotation. ", +, ScriptRuntime, ., getMessage1, (, messageId, ,, messageArg, )]
["Bad type annotation. "]
[ScriptRuntime, ., getMessage1, (, messageId, ,, messageArg, )]
[ScriptRuntime]
[messageId]
[messageArg]
[getSourceName, (, )]
[lineno]
[null]
[charno]
[errorReporter, ., warning, (, "Bad type annotation. ", +, ScriptRuntime, ., getMessage0, (, messageId, ), ,, getSourceName, (, ), ,, lineno, ,, null, ,, charno, )]
[errorReporter]
["Bad type annotation. ", +, ScriptRuntime, ., getMessage0, (, messageId, )]
["Bad type annotation. "]
[ScriptRuntime, ., getMessage0, (, messageId, )]
[ScriptRuntime]
[messageId]
[getSourceName, (, )]
[lineno]
[null]
[charno]
[null]
[ImmutableSet, ., <, String, >, of, (, "this", ,, "arguments", )]
[ImmutableSet]
["this"]
["arguments"]
[this, ., fileLevelJsDocBuilder]
[this]
[fileLevelJsDocBuilder]
[this, ., fileOverviewJSDocInfo]
[this]
[fileOverviewJSDocInfo]
[this, ., stream]
[this]
[stream]
[this, ., associatedNode]
[this]
[associatedNode]
[this, ., sourceFile]
[this]
[associatedNode, ==, null, ?, null, :, associatedNode, ., getStaticSourceFile, (, )]
[associatedNode, ==, null]
[associatedNode]
[null]
[null]
[associatedNode, ., getStaticSourceFile, (, )]
[associatedNode]
[this, ., jsdocBuilder]
[this]
[new, JSDocInfoBuilder, (, config, ., parseJsDocDocumentation, )]
[config, ., parseJsDocDocumentation]
[config]
[commentNode, !=, null]
[commentNode]
[null]
[this, ., jsdocBuilder, ., recordOriginalCommentString, (, commentNode, ., getValue, (, ), )]
[this, ., jsdocBuilder]
[this]
[commentNode, ., getValue, (, )]
[commentNode]
[this, ., annotationNames]
[this]
[config, ., annotationNames]
[config]
[this, ., suppressionNames]
[this]
[config, ., suppressionNames]
[config]
[this, ., errorReporter]
[this]
[errorReporter]
[this, ., templateNode]
[this]
[this, ., createTemplateNode, (, )]
[this]
[sourceFile, ==, null, ?, null, :, sourceFile, ., getName, (, )]
[sourceFile, ==, null]
[sourceFile]
[null]
[null]
[sourceFile, ., getName, (, )]
[sourceFile]
[new, Config, (, Sets, ., <, String, >, newHashSet, (, ), ,, Sets, ., <, String, >, newHashSet, (, ), ,, false, ,, LanguageMode, ., ECMASCRIPT3, ,, false, )]
[Sets, ., <, String, >, newHashSet, (, )]
[Sets]
[Sets, ., <, String, >, newHashSet, (, )]
[Sets]
[false]
[LanguageMode, ., ECMASCRIPT3]
[LanguageMode]
[false]
[new, JsDocInfoParser, (, new, JsDocTokenStream, (, typeString, ), ,, null, ,, null, ,, config, ,, NullErrorReporter, ., forNewRhino, (, ), )]
[new, JsDocTokenStream, (, typeString, )]
[typeString]
[null]
[null]
[config]
[NullErrorReporter, ., forNewRhino, (, )]
[NullErrorReporter]
[parser, ., parseTopLevelTypeExpression, (, parser, ., next, (, ), )]
[parser]
[parser, ., next, (, )]
[parser]
[@, SuppressWarnings, (, "incomplete-switch", )]
["incomplete-switch"]
[state]
[State, ., SEARCHING_ANNOTATION]
[State]
[skipEOLs, (, )]
[next, (, )]
[Lists, ., newArrayList, (, )]
[Lists]
[jsdocBuilder, ., shouldParseDocumentation, (, )]
[jsdocBuilder]
[extractBlockComment, (, token, )]
[token]
[token]
[blockInfo, ., token]
[blockInfo]
[!, blockInfo, ., string, ., isEmpty, (, )]
[blockInfo, ., string, ., isEmpty, (, )]
[blockInfo, ., string]
[blockInfo]
[jsdocBuilder, ., recordBlockDescription, (, blockInfo, ., string, )]
[jsdocBuilder]
[blockInfo, ., string]
[blockInfo]
[token, !=, JsDocToken, ., ANNOTATION, &&, token, !=, JsDocToken, ., EOC]
[token, !=, JsDocToken, ., ANNOTATION]
[token]
[JsDocToken, ., ANNOTATION]
[JsDocToken]
[token, !=, JsDocToken, ., EOC]
[token]
[JsDocToken, ., EOC]
[JsDocToken]
[jsdocBuilder, ., recordBlockDescription, (, "", )]
[jsdocBuilder]
[""]
[token]
[ANNOTATION]
[state, ==, State, ., SEARCHING_ANNOTATION]
[state]
[State, ., SEARCHING_ANNOTATION]
[State]
[state]
[State, ., SEARCHING_NEWLINE]
[State]
[lineno]
[stream, ., getLineno, (, )]
[stream]
[charno]
[stream, ., getCharno, (, )]
[stream]
[stream, ., getString, (, )]
[stream]
[annotationNames, ., get, (, annotationName, )]
[annotationNames]
[annotationName]
[annotation, ==, null]
[annotation]
[null]
[parser, ., addParserWarning, (, "msg.bad.jsdoc.tag", ,, annotationName, ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.bad.jsdoc.tag"]
[annotationName]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[jsdocBuilder, ., markAnnotation, (, annotationName, ,, lineno, ,, charno, )]
[jsdocBuilder]
[annotationName]
[lineno]
[charno]
[annotation]
[AUTHOR]
[jsdocBuilder, ., shouldParseDocumentation, (, )]
[jsdocBuilder]
[extractSingleLineBlock, (, )]
[authorInfo, ., string]
[authorInfo]
[author, ., length, (, ), ==, 0]
[author, ., length, (, )]
[author]
[0]
[parser, ., addParserWarning, (, "msg.jsdoc.authormissing", ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.jsdoc.authormissing"]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[jsdocBuilder, ., addAuthor, (, author, )]
[jsdocBuilder]
[author]
[token]
[authorInfo, ., token]
[authorInfo]
[token]
[eatTokensUntilEOL, (, token, )]
[token]
[CONSISTENTIDGENERATOR]
[!, jsdocBuilder, ., recordConsistentIdGenerator, (, )]
[jsdocBuilder, ., recordConsistentIdGenerator, (, )]
[jsdocBuilder]
[parser, ., addParserWarning, (, "msg.jsdoc.consistidgen", ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.jsdoc.consistidgen"]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[token]
[eatTokensUntilEOL, (, )]
[STRUCT]
[!, jsdocBuilder, ., recordStruct, (, )]
[jsdocBuilder, ., recordStruct, (, )]
[jsdocBuilder]
[parser, ., addTypeWarning, (, "msg.jsdoc.incompat.type", ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.jsdoc.incompat.type"]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[token]
[eatTokensUntilEOL, (, )]
[DICT]
[!, jsdocBuilder, ., recordDict, (, )]
[jsdocBuilder, ., recordDict, (, )]
[jsdocBuilder]
[parser, ., addTypeWarning, (, "msg.jsdoc.incompat.type", ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.jsdoc.incompat.type"]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[token]
[eatTokensUntilEOL, (, )]
[CONSTRUCTOR]
[!, jsdocBuilder, ., recordConstructor, (, )]
[jsdocBuilder, ., recordConstructor, (, )]
[jsdocBuilder]
[jsdocBuilder, ., isInterfaceRecorded, (, )]
[jsdocBuilder]
[parser, ., addTypeWarning, (, "msg.jsdoc.interface.constructor", ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.jsdoc.interface.constructor"]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[parser, ., addTypeWarning, (, "msg.jsdoc.incompat.type", ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.jsdoc.incompat.type"]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[token]
[eatTokensUntilEOL, (, )]
[DEPRECATED]
[!, jsdocBuilder, ., recordDeprecated, (, )]
[jsdocBuilder, ., recordDeprecated, (, )]
[jsdocBuilder]
[parser, ., addParserWarning, (, "msg.jsdoc.deprecated", ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.jsdoc.deprecated"]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[extractMultilineTextualBlock, (, token, )]
[token]
[reasonInfo, ., string]
[reasonInfo]
[reason, ., length, (, ), >, 0]
[reason, ., length, (, )]
[reason]
[0]
[jsdocBuilder, ., recordDeprecationReason, (, reason, )]
[jsdocBuilder]
[reason]
[token]
[reasonInfo, ., token]
[reasonInfo]
[INTERFACE]
[!, jsdocBuilder, ., recordInterface, (, )]
[jsdocBuilder, ., recordInterface, (, )]
[jsdocBuilder]
[jsdocBuilder, ., isConstructorRecorded, (, )]
[jsdocBuilder]
[parser, ., addTypeWarning, (, "msg.jsdoc.interface.constructor", ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.jsdoc.interface.constructor"]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[parser, ., addTypeWarning, (, "msg.jsdoc.incompat.type", ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.jsdoc.incompat.type"]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[token]
[eatTokensUntilEOL, (, )]
[DESC]
[jsdocBuilder, ., isDescriptionRecorded, (, )]
[jsdocBuilder]
[parser, ., addParserWarning, (, "msg.jsdoc.desc.extra", ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.jsdoc.desc.extra"]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[token]
[eatTokensUntilEOL, (, )]
[extractMultilineTextualBlock, (, token, )]
[token]
[descriptionInfo, ., string]
[descriptionInfo]
[jsdocBuilder, ., recordDescription, (, description, )]
[jsdocBuilder]
[description]
[token]
[descriptionInfo, ., token]
[descriptionInfo]
[FILE_OVERVIEW]
[""]
[jsdocBuilder, ., shouldParseDocumentation, (, )]
[jsdocBuilder]
[extractMultilineTextualBlock, (, token, ,, WhitespaceOption, ., TRIM, )]
[token]
[WhitespaceOption, ., TRIM]
[WhitespaceOption]
[fileOverview]
[fileOverviewInfo, ., string]
[fileOverviewInfo]
[token]
[fileOverviewInfo, ., token]
[fileOverviewInfo]
[token]
[eatTokensUntilEOL, (, token, )]
[token]
[!, jsdocBuilder, ., recordFileOverview, (, fileOverview, )]
[jsdocBuilder, ., recordFileOverview, (, fileOverview, )]
[jsdocBuilder]
[fileOverview]
[parser, ., addParserWarning, (, "msg.jsdoc.fileoverview.extra", ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.jsdoc.fileoverview.extra"]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[LICENSE]
[PRESERVE]
[extractMultilineTextualBlock, (, token, ,, WhitespaceOption, ., PRESERVE, )]
[token]
[WhitespaceOption, ., PRESERVE]
[WhitespaceOption]
[preserveInfo, ., string]
[preserveInfo]
[preserve, ., length, (, ), >, 0]
[preserve, ., length, (, )]
[preserve]
[0]
[fileLevelJsDocBuilder, !=, null]
[fileLevelJsDocBuilder]
[null]
[fileLevelJsDocBuilder, ., append, (, preserve, )]
[fileLevelJsDocBuilder]
[preserve]
[token]
[preserveInfo, ., token]
[preserveInfo]
[ENUM]
[token]
[next, (, )]
[lineno]
[stream, ., getLineno, (, )]
[stream]
[charno]
[stream, ., getCharno, (, )]
[stream]
[type]
[null]
[token, !=, JsDocToken, ., EOL, &&, token, !=, JsDocToken, ., EOC]
[token, !=, JsDocToken, ., EOL]
[token]
[JsDocToken, ., EOL]
[JsDocToken]
[token, !=, JsDocToken, ., EOC]
[token]
[JsDocToken, ., EOC]
[JsDocToken]
[type]
[createJSTypeExpression, (, parseAndRecordTypeNode, (, token, ), )]
[parseAndRecordTypeNode, (, token, )]
[token]
[type, ==, null]
[type]
[null]
[type]
[createJSTypeExpression, (, newStringNode, (, "number", ), )]
[newStringNode, (, "number", )]
["number"]
[!, jsdocBuilder, ., recordEnumParameterType, (, type, )]
[jsdocBuilder, ., recordEnumParameterType, (, type, )]
[jsdocBuilder]
[type]
[parser, ., addTypeWarning, (, "msg.jsdoc.incompat.type", ,, lineno, ,, charno, )]
[parser]
["msg.jsdoc.incompat.type"]
[lineno]
[charno]
[token]
[eatTokensUntilEOL, (, token, )]
[token]
[EXPORT]
[!, jsdocBuilder, ., recordExport, (, )]
[jsdocBuilder, ., recordExport, (, )]
[jsdocBuilder]
[parser, ., addParserWarning, (, "msg.jsdoc.export", ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.jsdoc.export"]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[token]
[eatTokensUntilEOL, (, )]
[EXPOSE]
[!, jsdocBuilder, ., recordExpose, (, )]
[jsdocBuilder, ., recordExpose, (, )]
[jsdocBuilder]
[parser, ., addParserWarning, (, "msg.jsdoc.expose", ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.jsdoc.expose"]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[token]
[eatTokensUntilEOL, (, )]
[EXTERNS]
[!, jsdocBuilder, ., recordExterns, (, )]
[jsdocBuilder, ., recordExterns, (, )]
[jsdocBuilder]
[parser, ., addParserWarning, (, "msg.jsdoc.externs", ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.jsdoc.externs"]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[token]
[eatTokensUntilEOL, (, )]
[JAVA_DISPATCH]
[!, jsdocBuilder, ., recordJavaDispatch, (, )]
[jsdocBuilder, ., recordJavaDispatch, (, )]
[jsdocBuilder]
[parser, ., addParserWarning, (, "msg.jsdoc.javadispatch", ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.jsdoc.javadispatch"]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[token]
[eatTokensUntilEOL, (, )]
[EXTENDS]
[IMPLEMENTS]
[skipEOLs, (, )]
[token]
[next, (, )]
[lineno]
[stream, ., getLineno, (, )]
[stream]
[charno]
[stream, ., getCharno, (, )]
[stream]
[false]
[token, ==, JsDocToken, ., LC]
[token]
[JsDocToken, ., LC]
[JsDocToken]
[token]
[next, (, )]
[matchingRc]
[true]
[token, ==, JsDocToken, ., STRING]
[token]
[JsDocToken, ., STRING]
[JsDocToken]
[parseAndRecordTypeNameNode, (, token, ,, lineno, ,, charno, ,, matchingRc, )]
[token]
[lineno]
[charno]
[matchingRc]
[lineno]
[stream, ., getLineno, (, )]
[stream]
[charno]
[stream, ., getCharno, (, )]
[stream]
[typeNode]
[wrapNode, (, Token, ., BANG, ,, typeNode, )]
[Token, ., BANG]
[Token]
[typeNode]
[type]
[createJSTypeExpression, (, typeNode, )]
[typeNode]
[annotation, ==, Annotation, ., EXTENDS]
[annotation]
[Annotation, ., EXTENDS]
[Annotation]
[extendedTypes, ., add, (, new, ExtendedTypeInfo, (, type, ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), ), )]
[extendedTypes]
[new, ExtendedTypeInfo, (, type, ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[type]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[Preconditions, ., checkState, (, annotation, ==, Annotation, ., IMPLEMENTS, )]
[Preconditions]
[annotation, ==, Annotation, ., IMPLEMENTS]
[annotation]
[Annotation, ., IMPLEMENTS]
[Annotation]
[!, jsdocBuilder, ., recordImplementedInterface, (, type, )]
[jsdocBuilder, ., recordImplementedInterface, (, type, )]
[jsdocBuilder]
[type]
[parser, ., addTypeWarning, (, "msg.jsdoc.implements.duplicate", ,, lineno, ,, charno, )]
[parser]
["msg.jsdoc.implements.duplicate"]
[lineno]
[charno]
[token]
[next, (, )]
[matchingRc]
[token, !=, JsDocToken, ., RC]
[token]
[JsDocToken, ., RC]
[JsDocToken]
[parser, ., addTypeWarning, (, "msg.jsdoc.missing.rc", ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.jsdoc.missing.rc"]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[token, !=, JsDocToken, ., EOL, &&, token, !=, JsDocToken, ., EOF, &&, token, !=, JsDocToken, ., EOC]
[token, !=, JsDocToken, ., EOL, &&, token, !=, JsDocToken, ., EOF]
[token, !=, JsDocToken, ., EOL]
[token]
[JsDocToken, ., EOL]
[JsDocToken]
[token, !=, JsDocToken, ., EOF]
[token]
[JsDocToken, ., EOF]
[JsDocToken]
[token, !=, JsDocToken, ., EOC]
[token]
[JsDocToken, ., EOC]
[JsDocToken]
[parser, ., addTypeWarning, (, "msg.end.annotation.expected", ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.end.annotation.expected"]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[parser, ., addTypeWarning, (, "msg.no.type.name", ,, lineno, ,, charno, )]
[parser]
["msg.no.type.name"]
[lineno]
[charno]
[token]
[eatTokensUntilEOL, (, token, )]
[token]
[HIDDEN]
[!, jsdocBuilder, ., recordHiddenness, (, )]
[jsdocBuilder, ., recordHiddenness, (, )]
[jsdocBuilder]
[parser, ., addParserWarning, (, "msg.jsdoc.hidden", ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.jsdoc.hidden"]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[token]
[eatTokensUntilEOL, (, )]
[LENDS]
[skipEOLs, (, )]
[matchingRc]
[false]
[match, (, JsDocToken, ., LC, )]
[JsDocToken, ., LC]
[JsDocToken]
[token]
[next, (, )]
[matchingRc]
[true]
[match, (, JsDocToken, ., STRING, )]
[JsDocToken, ., STRING]
[JsDocToken]
[token]
[next, (, )]
[!, jsdocBuilder, ., recordLends, (, stream, ., getString, (, ), )]
[jsdocBuilder, ., recordLends, (, stream, ., getString, (, ), )]
[jsdocBuilder]
[stream, ., getString, (, )]
[stream]
[parser, ., addTypeWarning, (, "msg.jsdoc.lends.incompatible", ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.jsdoc.lends.incompatible"]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[parser, ., addTypeWarning, (, "msg.jsdoc.lends.missing", ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.jsdoc.lends.missing"]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[matchingRc, &&, !, match, (, JsDocToken, ., RC, )]
[matchingRc]
[!, match, (, JsDocToken, ., RC, )]
[match, (, JsDocToken, ., RC, )]
[JsDocToken, ., RC]
[JsDocToken]
[parser, ., addTypeWarning, (, "msg.jsdoc.missing.rc", ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.jsdoc.missing.rc"]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[token]
[eatTokensUntilEOL, (, )]
[MEANING]
[extractMultilineTextualBlock, (, token, )]
[token]
[meaningInfo, ., string]
[meaningInfo]
[token]
[meaningInfo, ., token]
[meaningInfo]
[!, jsdocBuilder, ., recordMeaning, (, meaning, )]
[jsdocBuilder, ., recordMeaning, (, meaning, )]
[jsdocBuilder]
[meaning]
[parser, ., addParserWarning, (, "msg.jsdoc.meaning.extra", ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.jsdoc.meaning.extra"]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[NO_ALIAS]
[!, jsdocBuilder, ., recordNoAlias, (, )]
[jsdocBuilder, ., recordNoAlias, (, )]
[jsdocBuilder]
[parser, ., addParserWarning, (, "msg.jsdoc.noalias", ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.jsdoc.noalias"]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[token]
[eatTokensUntilEOL, (, )]
[NO_COMPILE]
[!, jsdocBuilder, ., recordNoCompile, (, )]
[jsdocBuilder, ., recordNoCompile, (, )]
[jsdocBuilder]
[parser, ., addParserWarning, (, "msg.jsdoc.nocompile", ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.jsdoc.nocompile"]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[token]
[eatTokensUntilEOL, (, )]
[NO_TYPE_CHECK]
[!, jsdocBuilder, ., recordNoTypeCheck, (, )]
[jsdocBuilder, ., recordNoTypeCheck, (, )]
[jsdocBuilder]
[parser, ., addParserWarning, (, "msg.jsdoc.nocheck", ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.jsdoc.nocheck"]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[token]
[eatTokensUntilEOL, (, )]
[NOT_IMPLEMENTED]
[token]
[eatTokensUntilEOL, (, )]
[INHERIT_DOC]
[OVERRIDE]
[!, jsdocBuilder, ., recordOverride, (, )]
[jsdocBuilder, ., recordOverride, (, )]
[jsdocBuilder]
[parser, ., addTypeWarning, (, "msg.jsdoc.override", ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.jsdoc.override"]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[token]
[eatTokensUntilEOL, (, )]
[THROWS]
[skipEOLs, (, )]
[token]
[next, (, )]
[lineno]
[stream, ., getLineno, (, )]
[stream]
[charno]
[stream, ., getCharno, (, )]
[stream]
[type]
[null]
[token, ==, JsDocToken, ., LC]
[token]
[JsDocToken, ., LC]
[JsDocToken]
[type]
[createJSTypeExpression, (, parseAndRecordTypeNode, (, token, ), )]
[parseAndRecordTypeNode, (, token, )]
[token]
[type, ==, null]
[type]
[null]
[token]
[eatTokensUntilEOL, (, )]
[token]
[current, (, )]
[jsdocBuilder, ., recordThrowType, (, type, )]
[jsdocBuilder]
[type]
[jsdocBuilder, ., shouldParseDocumentation, (, )]
[jsdocBuilder]
[extractMultilineTextualBlock, (, token, )]
[token]
[descriptionInfo, ., string]
[descriptionInfo]
[description, ., length, (, ), >, 0]
[description, ., length, (, )]
[description]
[0]
[jsdocBuilder, ., recordThrowDescription, (, type, ,, description, )]
[jsdocBuilder]
[type]
[description]
[token]
[descriptionInfo, ., token]
[descriptionInfo]
[token]
[eatTokensUntilEOL, (, token, )]
[token]
[PARAM]
[skipEOLs, (, )]
[token]
[next, (, )]
[lineno]
[stream, ., getLineno, (, )]
[stream]
[charno]
[stream, ., getCharno, (, )]
[stream]
[type]
[null]
[token, ==, JsDocToken, ., LC]
[token]
[JsDocToken, ., LC]
[JsDocToken]
[type]
[createJSTypeExpression, (, parseAndRecordParamTypeNode, (, token, ), )]
[parseAndRecordParamTypeNode, (, token, )]
[token]
[type, ==, null]
[type]
[null]
[token]
[eatTokensUntilEOL, (, )]
[skipEOLs, (, )]
[token]
[next, (, )]
[lineno]
[stream, ., getLineno, (, )]
[stream]
[charno]
[stream, ., getCharno, (, )]
[stream]
[null]
[JsDocToken, ., LB, ==, token]
[JsDocToken, ., LB]
[JsDocToken]
[token]
[isBracketedParam]
[token]
[next, (, )]
[JsDocToken, ., STRING, !=, token]
[JsDocToken, ., STRING]
[JsDocToken]
[token]
[parser, ., addTypeWarning, (, "msg.missing.variable.name", ,, lineno, ,, charno, )]
[parser]
["msg.missing.variable.name"]
[lineno]
[charno]
[name]
[stream, ., getString, (, )]
[stream]
[isBracketedParam]
[token]
[next, (, )]
[JsDocToken, ., EQUALS, ==, token]
[JsDocToken, ., EQUALS]
[JsDocToken]
[token]
[token]
[next, (, )]
[JsDocToken, ., STRING, ==, token]
[JsDocToken, ., STRING]
[JsDocToken]
[token]
[token]
[next, (, )]
[JsDocToken, ., RB, !=, token]
[JsDocToken, ., RB]
[JsDocToken]
[token]
[reportTypeSyntaxWarning, (, "msg.jsdoc.missing.rb", )]
["msg.jsdoc.missing.rb"]
[type, !=, null]
[type]
[null]
[type]
[JSTypeExpression, ., makeOptionalArg, (, type, )]
[JSTypeExpression]
[type]
[name, ., indexOf, (, '.', ), >, -, 1]
[name, ., indexOf, (, '.', )]
[name]
['.']
[-, 1]
[1]
[name]
[null]
[!, jsdocBuilder, ., recordParameter, (, name, ,, type, )]
[jsdocBuilder, ., recordParameter, (, name, ,, type, )]
[jsdocBuilder]
[name]
[type]
[jsdocBuilder, ., hasParameter, (, name, )]
[jsdocBuilder]
[name]
[parser, ., addTypeWarning, (, "msg.dup.variable.name", ,, name, ,, lineno, ,, charno, )]
[parser]
["msg.dup.variable.name"]
[name]
[lineno]
[charno]
[parser, ., addTypeWarning, (, "msg.jsdoc.incompat.type", ,, name, ,, lineno, ,, charno, )]
[parser]
["msg.jsdoc.incompat.type"]
[name]
[lineno]
[charno]
[name, ==, null]
[name]
[null]
[token]
[eatTokensUntilEOL, (, token, )]
[token]
[jsdocBuilder, ., markName, (, name, ,, sourceFile, ,, lineno, ,, charno, )]
[jsdocBuilder]
[name]
[sourceFile]
[lineno]
[charno]
[jsdocBuilder, ., shouldParseDocumentation, (, )]
[jsdocBuilder]
[extractMultilineTextualBlock, (, token, )]
[token]
[paramDescriptionInfo, ., string]
[paramDescriptionInfo]
[paramDescription, ., length, (, ), >, 0]
[paramDescription, ., length, (, )]
[paramDescription]
[0]
[jsdocBuilder, ., recordParameterDescription, (, name, ,, paramDescription, )]
[jsdocBuilder]
[name]
[paramDescription]
[token]
[paramDescriptionInfo, ., token]
[paramDescriptionInfo]
[token]
[eatTokensUntilEOL, (, token, )]
[token]
[PRESERVE_TRY]
[!, jsdocBuilder, ., recordPreserveTry, (, )]
[jsdocBuilder, ., recordPreserveTry, (, )]
[jsdocBuilder]
[parser, ., addParserWarning, (, "msg.jsdoc.preservertry", ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.jsdoc.preservertry"]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[token]
[eatTokensUntilEOL, (, )]
[NO_SHADOW]
[!, jsdocBuilder, ., recordNoShadow, (, )]
[jsdocBuilder, ., recordNoShadow, (, )]
[jsdocBuilder]
[parser, ., addParserWarning, (, "msg.jsdoc.noshadow", ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.jsdoc.noshadow"]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[token]
[eatTokensUntilEOL, (, )]
[NO_SIDE_EFFECTS]
[!, jsdocBuilder, ., recordNoSideEffects, (, )]
[jsdocBuilder, ., recordNoSideEffects, (, )]
[jsdocBuilder]
[parser, ., addParserWarning, (, "msg.jsdoc.nosideeffects", ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.jsdoc.nosideeffects"]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[token]
[eatTokensUntilEOL, (, )]
[MODIFIES]
[token]
[parseModifiesTag, (, next, (, ), )]
[next, (, )]
[IMPLICIT_CAST]
[!, jsdocBuilder, ., recordImplicitCast, (, )]
[jsdocBuilder, ., recordImplicitCast, (, )]
[jsdocBuilder]
[parser, ., addTypeWarning, (, "msg.jsdoc.implicitcast", ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.jsdoc.implicitcast"]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[token]
[eatTokensUntilEOL, (, )]
[SEE]
[jsdocBuilder, ., shouldParseDocumentation, (, )]
[jsdocBuilder]
[extractSingleLineBlock, (, )]
[referenceInfo, ., string]
[referenceInfo]
[reference, ., length, (, ), ==, 0]
[reference, ., length, (, )]
[reference]
[0]
[parser, ., addParserWarning, (, "msg.jsdoc.seemissing", ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.jsdoc.seemissing"]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[jsdocBuilder, ., addReference, (, reference, )]
[jsdocBuilder]
[reference]
[token]
[referenceInfo, ., token]
[referenceInfo]
[token]
[eatTokensUntilEOL, (, token, )]
[token]
[STABLEIDGENERATOR]
[!, jsdocBuilder, ., recordStableIdGenerator, (, )]
[jsdocBuilder, ., recordStableIdGenerator, (, )]
[jsdocBuilder]
[parser, ., addParserWarning, (, "msg.jsdoc.stableidgen", ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.jsdoc.stableidgen"]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[token]
[eatTokensUntilEOL, (, )]
[SUPPRESS]
[token]
[parseSuppressTag, (, next, (, ), )]
[next, (, )]
[TEMPLATE]
[extractSingleLineBlock, (, )]
[Lists, ., newArrayList, (, Splitter, ., on, (, ',', ), ., trimResults, (, ), ., split, (, templateInfo, ., string, ), )]
[Lists]
[Splitter, ., on, (, ',', ), ., trimResults, (, ), ., split, (, templateInfo, ., string, )]
[Splitter, ., on, (, ',', ), ., trimResults, (, )]
[Splitter, ., on, (, ',', )]
[Splitter]
[',']
[templateInfo, ., string]
[templateInfo]
[names, ., size, (, ), ==, 0, ||, names, ., get, (, 0, ), ., length, (, ), ==, 0]
[names, ., size, (, ), ==, 0]
[names, ., size, (, )]
[names]
[0]
[names, ., get, (, 0, ), ., length, (, ), ==, 0]
[names, ., get, (, 0, ), ., length, (, )]
[names, ., get, (, 0, )]
[names]
[0]
[0]
[parser, ., addTypeWarning, (, "msg.jsdoc.templatemissing", ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.jsdoc.templatemissing"]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[!, jsdocBuilder, ., recordTemplateTypeNames, (, names, )]
[jsdocBuilder, ., recordTemplateTypeNames, (, names, )]
[jsdocBuilder]
[names]
[parser, ., addTypeWarning, (, "msg.jsdoc.template.at.most.once", ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.jsdoc.template.at.most.once"]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[token]
[templateInfo, ., token]
[templateInfo]
[IDGENERATOR]
[!, jsdocBuilder, ., recordIdGenerator, (, )]
[jsdocBuilder, ., recordIdGenerator, (, )]
[jsdocBuilder]
[parser, ., addParserWarning, (, "msg.jsdoc.idgen", ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.jsdoc.idgen"]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[token]
[eatTokensUntilEOL, (, )]
[VERSION]
[extractSingleLineBlock, (, )]
[versionInfo, ., string]
[versionInfo]
[version, ., length, (, ), ==, 0]
[version, ., length, (, )]
[version]
[0]
[parser, ., addParserWarning, (, "msg.jsdoc.versionmissing", ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.jsdoc.versionmissing"]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[!, jsdocBuilder, ., recordVersion, (, version, )]
[jsdocBuilder, ., recordVersion, (, version, )]
[jsdocBuilder]
[version]
[parser, ., addParserWarning, (, "msg.jsdoc.extraversion", ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.jsdoc.extraversion"]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[token]
[versionInfo, ., token]
[versionInfo]
[CONSTANT]
[DEFINE]
[RETURN]
[PRIVATE]
[PROTECTED]
[PUBLIC]
[THIS]
[TYPE]
[TYPEDEF]
[lineno]
[stream, ., getLineno, (, )]
[stream]
[charno]
[stream, ., getCharno, (, )]
[stream]
[null]
[lookAheadForTypeAnnotation, (, )]
[(, annotation, ==, Annotation, ., PRIVATE, ||, annotation, ==, Annotation, ., PROTECTED, ||, annotation, ==, Annotation, ., PUBLIC, ||, annotation, ==, Annotation, ., CONSTANT, )]
[annotation, ==, Annotation, ., PRIVATE, ||, annotation, ==, Annotation, ., PROTECTED, ||, annotation, ==, Annotation, ., PUBLIC, ||, annotation, ==, Annotation, ., CONSTANT]
[annotation, ==, Annotation, ., PRIVATE, ||, annotation, ==, Annotation, ., PROTECTED, ||, annotation, ==, Annotation, ., PUBLIC]
[annotation, ==, Annotation, ., PRIVATE, ||, annotation, ==, Annotation, ., PROTECTED]
[annotation, ==, Annotation, ., PRIVATE]
[annotation]
[Annotation, ., PRIVATE]
[Annotation]
[annotation, ==, Annotation, ., PROTECTED]
[annotation]
[Annotation, ., PROTECTED]
[Annotation]
[annotation, ==, Annotation, ., PUBLIC]
[annotation]
[Annotation, ., PUBLIC]
[Annotation]
[annotation, ==, Annotation, ., CONSTANT]
[annotation]
[Annotation, ., CONSTANT]
[Annotation]
[(, isAlternateTypeAnnotation, ||, annotation, ==, Annotation, ., RETURN, )]
[isAlternateTypeAnnotation, ||, annotation, ==, Annotation, ., RETURN]
[isAlternateTypeAnnotation]
[annotation, ==, Annotation, ., RETURN]
[annotation]
[Annotation, ., RETURN]
[Annotation]
[type]
[null]
[hasType, ||, !, canSkipTypeAnnotation]
[hasType]
[!, canSkipTypeAnnotation]
[canSkipTypeAnnotation]
[skipEOLs, (, )]
[token]
[next, (, )]
[typeNode]
[parseAndRecordTypeNode, (, token, )]
[token]
[annotation, ==, Annotation, ., THIS]
[annotation]
[Annotation, ., THIS]
[Annotation]
[typeNode]
[wrapNode, (, Token, ., BANG, ,, typeNode, )]
[Token, ., BANG]
[Token]
[typeNode]
[type]
[createJSTypeExpression, (, typeNode, )]
[typeNode]
[type, ==, null, &&, !, canSkipTypeAnnotation]
[type, ==, null]
[type]
[null]
[!, canSkipTypeAnnotation]
[canSkipTypeAnnotation]
[!, hasError]
[hasError]
[(, type, !=, null, &&, isAlternateTypeAnnotation, ), ||, annotation, ==, Annotation, ., TYPE]
[(, type, !=, null, &&, isAlternateTypeAnnotation, )]
[type, !=, null, &&, isAlternateTypeAnnotation]
[type, !=, null]
[type]
[null]
[isAlternateTypeAnnotation]
[annotation, ==, Annotation, ., TYPE]
[annotation]
[Annotation, ., TYPE]
[Annotation]
[!, jsdocBuilder, ., recordType, (, type, )]
[jsdocBuilder, ., recordType, (, type, )]
[jsdocBuilder]
[type]
[parser, ., addTypeWarning, (, "msg.jsdoc.incompat.type", ,, lineno, ,, charno, )]
[parser]
["msg.jsdoc.incompat.type"]
[lineno]
[charno]
[annotation]
[CONSTANT]
[!, jsdocBuilder, ., recordConstancy, (, )]
[jsdocBuilder, ., recordConstancy, (, )]
[jsdocBuilder]
[parser, ., addParserWarning, (, "msg.jsdoc.const", ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.jsdoc.const"]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[DEFINE]
[!, jsdocBuilder, ., recordDefineType, (, type, )]
[jsdocBuilder, ., recordDefineType, (, type, )]
[jsdocBuilder]
[type]
[parser, ., addParserWarning, (, "msg.jsdoc.define", ,, lineno, ,, charno, )]
[parser]
["msg.jsdoc.define"]
[lineno]
[charno]
[PRIVATE]
[!, jsdocBuilder, ., recordVisibility, (, Visibility, ., PRIVATE, )]
[jsdocBuilder, ., recordVisibility, (, Visibility, ., PRIVATE, )]
[jsdocBuilder]
[Visibility, ., PRIVATE]
[Visibility]
[parser, ., addParserWarning, (, "msg.jsdoc.visibility.private", ,, lineno, ,, charno, )]
[parser]
["msg.jsdoc.visibility.private"]
[lineno]
[charno]
[PROTECTED]
[!, jsdocBuilder, ., recordVisibility, (, Visibility, ., PROTECTED, )]
[jsdocBuilder, ., recordVisibility, (, Visibility, ., PROTECTED, )]
[jsdocBuilder]
[Visibility, ., PROTECTED]
[Visibility]
[parser, ., addParserWarning, (, "msg.jsdoc.visibility.protected", ,, lineno, ,, charno, )]
[parser]
["msg.jsdoc.visibility.protected"]
[lineno]
[charno]
[PUBLIC]
[!, jsdocBuilder, ., recordVisibility, (, Visibility, ., PUBLIC, )]
[jsdocBuilder, ., recordVisibility, (, Visibility, ., PUBLIC, )]
[jsdocBuilder]
[Visibility, ., PUBLIC]
[Visibility]
[parser, ., addParserWarning, (, "msg.jsdoc.visibility.public", ,, lineno, ,, charno, )]
[parser]
["msg.jsdoc.visibility.public"]
[lineno]
[charno]
[RETURN]
[type, ==, null]
[type]
[null]
[type]
[createJSTypeExpression, (, newNode, (, Token, ., QMARK, ), )]
[newNode, (, Token, ., QMARK, )]
[Token, ., QMARK]
[Token]
[!, jsdocBuilder, ., recordReturnType, (, type, )]
[jsdocBuilder, ., recordReturnType, (, type, )]
[jsdocBuilder]
[type]
[parser, ., addTypeWarning, (, "msg.jsdoc.incompat.type", ,, lineno, ,, charno, )]
[parser]
["msg.jsdoc.incompat.type"]
[lineno]
[charno]
[jsdocBuilder, ., shouldParseDocumentation, (, )]
[jsdocBuilder]
[extractMultilineTextualBlock, (, token, )]
[token]
[returnDescriptionInfo, ., string]
[returnDescriptionInfo]
[returnDescription, ., length, (, ), >, 0]
[returnDescription, ., length, (, )]
[returnDescription]
[0]
[jsdocBuilder, ., recordReturnDescription, (, returnDescription, )]
[jsdocBuilder]
[returnDescription]
[token]
[returnDescriptionInfo, ., token]
[returnDescriptionInfo]
[token]
[eatTokensUntilEOL, (, token, )]
[token]
[THIS]
[!, jsdocBuilder, ., recordThisType, (, type, )]
[jsdocBuilder, ., recordThisType, (, type, )]
[jsdocBuilder]
[type]
[parser, ., addTypeWarning, (, "msg.jsdoc.incompat.type", ,, lineno, ,, charno, )]
[parser]
["msg.jsdoc.incompat.type"]
[lineno]
[charno]
[TYPEDEF]
[!, jsdocBuilder, ., recordTypedef, (, type, )]
[jsdocBuilder, ., recordTypedef, (, type, )]
[jsdocBuilder]
[type]
[parser, ., addTypeWarning, (, "msg.jsdoc.incompat.type", ,, lineno, ,, charno, )]
[parser]
["msg.jsdoc.incompat.type"]
[lineno]
[charno]
[token]
[eatTokensUntilEOL, (, )]
[EOC]
[hasParsedFileOverviewDocInfo, (, )]
[fileOverviewJSDocInfo]
[retrieveAndResetParsedJSDocInfo, (, )]
[checkExtendedTypes, (, extendedTypes, )]
[extendedTypes]
[true]
[EOF]
[jsdocBuilder, ., build, (, null, )]
[jsdocBuilder]
[null]
[parser, ., addParserWarning, (, "msg.unexpected.eof", ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.unexpected.eof"]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[checkExtendedTypes, (, extendedTypes, )]
[extendedTypes]
[false]
[EOL]
[state, ==, State, ., SEARCHING_NEWLINE]
[state]
[State, ., SEARCHING_NEWLINE]
[State]
[state]
[State, ., SEARCHING_ANNOTATION]
[State]
[token]
[next, (, )]
[token, ==, JsDocToken, ., STAR, &&, state, ==, State, ., SEARCHING_ANNOTATION]
[token, ==, JsDocToken, ., STAR]
[token]
[JsDocToken, ., STAR]
[JsDocToken]
[state, ==, State, ., SEARCHING_ANNOTATION]
[state]
[State, ., SEARCHING_ANNOTATION]
[State]
[token]
[next, (, )]
[state]
[State, ., SEARCHING_NEWLINE]
[State]
[token]
[eatTokensUntilEOL, (, )]
[token]
[next, (, )]
[extendedTypes]
[jsdocBuilder, ., isInterfaceRecorded, (, )]
[jsdocBuilder]
[!, jsdocBuilder, ., recordExtendedInterface, (, typeInfo, ., type, )]
[jsdocBuilder, ., recordExtendedInterface, (, typeInfo, ., type, )]
[jsdocBuilder]
[typeInfo, ., type]
[typeInfo]
[parser, ., addParserWarning, (, "msg.jsdoc.extends.duplicate", ,, typeInfo, ., lineno, ,, typeInfo, ., charno, )]
[parser]
["msg.jsdoc.extends.duplicate"]
[typeInfo, ., lineno]
[typeInfo]
[typeInfo, ., charno]
[typeInfo]
[!, jsdocBuilder, ., recordBaseType, (, typeInfo, ., type, )]
[jsdocBuilder, ., recordBaseType, (, typeInfo, ., type, )]
[jsdocBuilder]
[typeInfo, ., type]
[typeInfo]
[parser, ., addTypeWarning, (, "msg.jsdoc.incompat.type", ,, typeInfo, ., lineno, ,, typeInfo, ., charno, )]
[parser]
["msg.jsdoc.incompat.type"]
[typeInfo, ., lineno]
[typeInfo]
[typeInfo, ., charno]
[typeInfo]
[token, ==, JsDocToken, ., LC]
[token]
[JsDocToken, ., LC]
[JsDocToken]
[new, HashSet, <, String, >, (, )]
[true]
[match, (, JsDocToken, ., STRING, )]
[JsDocToken, ., STRING]
[JsDocToken]
[stream, ., getString, (, )]
[stream]
[!, suppressionNames, ., contains, (, name, )]
[suppressionNames, ., contains, (, name, )]
[suppressionNames]
[name]
[parser, ., addParserWarning, (, "msg.jsdoc.suppress.unknown", ,, name, ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.jsdoc.suppress.unknown"]
[name]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[suppressions, ., add, (, stream, ., getString, (, ), )]
[suppressions]
[stream, ., getString, (, )]
[stream]
[token]
[next, (, )]
[parser, ., addParserWarning, (, "msg.jsdoc.suppress", ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.jsdoc.suppress"]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[token]
[match, (, JsDocToken, ., PIPE, )]
[JsDocToken, ., PIPE]
[JsDocToken]
[token]
[next, (, )]
[!, match, (, JsDocToken, ., RC, )]
[match, (, JsDocToken, ., RC, )]
[JsDocToken, ., RC]
[JsDocToken]
[parser, ., addParserWarning, (, "msg.jsdoc.suppress", ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.jsdoc.suppress"]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[token]
[next, (, )]
[!, jsdocBuilder, ., recordSuppressions, (, suppressions, )]
[jsdocBuilder, ., recordSuppressions, (, suppressions, )]
[jsdocBuilder]
[suppressions]
[parser, ., addParserWarning, (, "msg.jsdoc.suppress.duplicate", ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.jsdoc.suppress.duplicate"]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[token]
[token, ==, JsDocToken, ., LC]
[token]
[JsDocToken, ., LC]
[JsDocToken]
[new, HashSet, <, String, >, (, )]
[true]
[match, (, JsDocToken, ., STRING, )]
[JsDocToken, ., STRING]
[JsDocToken]
[stream, ., getString, (, )]
[stream]
[!, modifiesAnnotationKeywords, ., contains, (, name, ), &&, !, jsdocBuilder, ., hasParameter, (, name, )]
[!, modifiesAnnotationKeywords, ., contains, (, name, )]
[modifiesAnnotationKeywords, ., contains, (, name, )]
[modifiesAnnotationKeywords]
[name]
[!, jsdocBuilder, ., hasParameter, (, name, )]
[jsdocBuilder, ., hasParameter, (, name, )]
[jsdocBuilder]
[name]
[parser, ., addParserWarning, (, "msg.jsdoc.modifies.unknown", ,, name, ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.jsdoc.modifies.unknown"]
[name]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[modifies, ., add, (, stream, ., getString, (, ), )]
[modifies]
[stream, ., getString, (, )]
[stream]
[token]
[next, (, )]
[parser, ., addParserWarning, (, "msg.jsdoc.modifies", ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.jsdoc.modifies"]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[token]
[match, (, JsDocToken, ., PIPE, )]
[JsDocToken, ., PIPE]
[JsDocToken]
[token]
[next, (, )]
[!, match, (, JsDocToken, ., RC, )]
[match, (, JsDocToken, ., RC, )]
[JsDocToken, ., RC]
[JsDocToken]
[parser, ., addParserWarning, (, "msg.jsdoc.modifies", ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.jsdoc.modifies"]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[token]
[next, (, )]
[!, jsdocBuilder, ., recordModifies, (, modifies, )]
[jsdocBuilder, ., recordModifies, (, modifies, )]
[jsdocBuilder]
[modifies]
[parser, ., addParserWarning, (, "msg.jsdoc.modifies.duplicate", ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
["msg.jsdoc.modifies.duplicate"]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[token]
[parseAndRecordTypeNode, (, token, ,, token, ==, JsDocToken, ., LC, )]
[token]
[token, ==, JsDocToken, ., LC]
[token]
[JsDocToken, ., LC]
[JsDocToken]
[parseAndRecordTypeNode, (, token, ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), ,, matchingLC, ,, false, )]
[token]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[matchingLC]
[false]
[parseAndRecordTypeNode, (, token, ,, lineno, ,, startCharno, ,, matchingLC, ,, true, )]
[token]
[lineno]
[startCharno]
[matchingLC]
[true]
[Preconditions, ., checkArgument, (, token, ==, JsDocToken, ., LC, )]
[Preconditions]
[token, ==, JsDocToken, ., LC]
[token]
[JsDocToken, ., LC]
[JsDocToken]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[parseParamTypeExpressionAnnotation, (, token, )]
[token]
[typeNode, !=, null]
[typeNode]
[null]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[jsdocBuilder, ., markTypeNode, (, typeNode, ,, lineno, ,, startCharno, ,, endLineno, ,, endCharno, ,, true, )]
[jsdocBuilder]
[typeNode]
[lineno]
[startCharno]
[endLineno]
[endCharno]
[true]
[typeNode]
[null]
[onlyParseSimpleNames]
[typeNode]
[parseTypeNameAnnotation, (, token, )]
[token]
[typeNode]
[parseTypeExpressionAnnotation, (, token, )]
[token]
[typeNode, !=, null]
[typeNode]
[null]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[jsdocBuilder, ., markTypeNode, (, typeNode, ,, lineno, ,, startCharno, ,, endLineno, ,, endCharno, ,, matchingLC, )]
[jsdocBuilder]
[typeNode]
[lineno]
[startCharno]
[endLineno]
[endCharno]
[matchingLC]
[typeNode]
[token]
[ANNOTATION]
["@", +, stream, ., getString, (, )]
["@"]
[stream, ., getString, (, )]
[stream]
[BANG]
["!"]
[COMMA]
[","]
[COLON]
[":"]
[GT]
[">"]
[LB]
["["]
[LC]
["{"]
[LP]
["("]
[LT]
[".<"]
[QMARK]
["?"]
[PIPE]
["|"]
[RB]
["]"]
[RC]
["}"]
[RP]
[")"]
[STAR]
["*"]
[ELLIPSIS]
["..."]
[EQUALS]
["="]
[STRING]
[stream, ., getString, (, )]
[stream]
[new, IllegalStateException, (, token, ., toString, (, ), )]
[token, ., toString, (, )]
[token]
[n, ==, null, ?, null, :, new, JSTypeExpression, (, n, ,, getSourceName, (, ), )]
[n, ==, null]
[n]
[null]
[null]
[new, JSTypeExpression, (, n, ,, getSourceName, (, ), )]
[n]
[getSourceName, (, )]
[this, ., string]
[this]
[string]
[this, ., token]
[this]
[token]
[this, ., type]
[this]
[type]
[this, ., lineno]
[this]
[lineno]
[this, ., charno]
[this]
[charno]
[stream, ., update, (, )]
[stream]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, ), +, 1]
[stream, ., getCharno, (, )]
[stream]
[1]
[stream, ., getRemainingJSDocLine, (, ), ., trim, (, )]
[stream, ., getRemainingJSDocLine, (, )]
[stream]
[line, ., length, (, ), >, 0]
[line, ., length, (, )]
[line]
[0]
[jsdocBuilder, ., markText, (, line, ,, lineno, ,, charno, ,, lineno, ,, charno, +, line, ., length, (, ), )]
[jsdocBuilder]
[line]
[lineno]
[charno]
[lineno]
[charno, +, line, ., length, (, )]
[charno]
[line, ., length, (, )]
[line]
[new, ExtractionInfo, (, line, ,, next, (, ), )]
[line]
[next, (, )]
[extractMultilineTextualBlock, (, token, ,, WhitespaceOption, ., SINGLE_LINE, )]
[token]
[WhitespaceOption, ., SINGLE_LINE]
[WhitespaceOption]
[@, SuppressWarnings, (, "fallthrough", )]
["fallthrough"]
[token, ==, JsDocToken, ., EOC, ||, token, ==, JsDocToken, ., EOL, ||, token, ==, JsDocToken, ., EOF]
[token, ==, JsDocToken, ., EOC, ||, token, ==, JsDocToken, ., EOL]
[token, ==, JsDocToken, ., EOC]
[token]
[JsDocToken, ., EOC]
[JsDocToken]
[token, ==, JsDocToken, ., EOL]
[token]
[JsDocToken, ., EOL]
[JsDocToken]
[token, ==, JsDocToken, ., EOF]
[token]
[JsDocToken, ., EOF]
[JsDocToken]
[new, ExtractionInfo, (, "", ,, token, )]
[""]
[token]
[stream, ., update, (, )]
[stream]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, ), +, 1]
[stream, ., getCharno, (, )]
[stream]
[1]
[stream, ., getRemainingJSDocLine, (, )]
[stream]
[option, !=, WhitespaceOption, ., PRESERVE]
[option]
[WhitespaceOption, ., PRESERVE]
[WhitespaceOption]
[line]
[line, ., trim, (, )]
[line]
[new, StringBuilder, (, )]
[builder, ., append, (, line, )]
[builder]
[line]
[state]
[State, ., SEARCHING_ANNOTATION]
[State]
[token]
[next, (, )]
[false]
[-, 1]
[1]
[token]
[STAR]
[ignoreStar]
[lineStartChar]
[stream, ., getCharno, (, ), +, 1]
[stream, ., getCharno, (, )]
[stream]
[1]
[builder, ., length, (, ), >, 0]
[builder, ., length, (, )]
[builder]
[0]
[builder, ., append, (, ' ', )]
[builder]
[' ']
[builder, ., append, (, '*', )]
[builder]
['*']
[token]
[next, (, )]
[EOL]
[option, !=, WhitespaceOption, ., SINGLE_LINE]
[option]
[WhitespaceOption, ., SINGLE_LINE]
[WhitespaceOption]
[builder, ., append, (, "\n", )]
[builder]
["\n"]
[ignoreStar]
[true]
[lineStartChar]
[0]
[token]
[next, (, )]
[ignoreStar]
[false]
[state]
[State, ., SEARCHING_ANNOTATION]
[State]
[token, ==, JsDocToken, ., EOC]
[token]
[JsDocToken, ., EOC]
[JsDocToken]
[!, isEOC]
[isEOC]
[lineStartChar, !=, -, 1, &&, option, ==, WhitespaceOption, ., PRESERVE]
[lineStartChar, !=, -, 1]
[lineStartChar]
[-, 1]
[1]
[option, ==, WhitespaceOption, ., PRESERVE]
[option]
[WhitespaceOption, ., PRESERVE]
[WhitespaceOption]
[stream, ., getCharno, (, ), -, lineStartChar]
[stream, ., getCharno, (, )]
[stream]
[lineStartChar]
[0]
[i, <, numSpaces]
[i]
[numSpaces]
[i, ++]
[i]
[builder, ., append, (, ' ', )]
[builder]
[' ']
[lineStartChar]
[-, 1]
[1]
[builder, ., length, (, ), >, 0]
[builder, ., length, (, )]
[builder]
[0]
[builder, ., append, (, ' ', )]
[builder]
[' ']
[token, ==, JsDocToken, ., EOC, ||, token, ==, JsDocToken, ., EOF, ||, (, token, ==, JsDocToken, ., ANNOTATION, &&, option, !=, WhitespaceOption, ., PRESERVE, )]
[token, ==, JsDocToken, ., EOC, ||, token, ==, JsDocToken, ., EOF]
[token, ==, JsDocToken, ., EOC]
[token]
[JsDocToken, ., EOC]
[JsDocToken]
[token, ==, JsDocToken, ., EOF]
[token]
[JsDocToken, ., EOF]
[JsDocToken]
[(, token, ==, JsDocToken, ., ANNOTATION, &&, option, !=, WhitespaceOption, ., PRESERVE, )]
[token, ==, JsDocToken, ., ANNOTATION, &&, option, !=, WhitespaceOption, ., PRESERVE]
[token, ==, JsDocToken, ., ANNOTATION]
[token]
[JsDocToken, ., ANNOTATION]
[JsDocToken]
[option, !=, WhitespaceOption, ., PRESERVE]
[option]
[WhitespaceOption, ., PRESERVE]
[WhitespaceOption]
[builder, ., toString, (, )]
[builder]
[option, !=, WhitespaceOption, ., PRESERVE]
[option]
[WhitespaceOption, ., PRESERVE]
[WhitespaceOption]
[multilineText]
[multilineText, ., trim, (, )]
[multilineText]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[multilineText, ., length, (, ), >, 0]
[multilineText, ., length, (, )]
[multilineText]
[0]
[jsdocBuilder, ., markText, (, multilineText, ,, startLineno, ,, startCharno, ,, endLineno, ,, endCharno, )]
[jsdocBuilder]
[multilineText]
[startLineno]
[startCharno]
[endLineno]
[endCharno]
[new, ExtractionInfo, (, multilineText, ,, token, )]
[multilineText]
[token]
[builder, ., append, (, toString, (, token, ), )]
[builder]
[toString, (, token, )]
[token]
[line]
[stream, ., getRemainingJSDocLine, (, )]
[stream]
[option, !=, WhitespaceOption, ., PRESERVE]
[option]
[WhitespaceOption, ., PRESERVE]
[WhitespaceOption]
[line]
[trimEnd, (, line, )]
[line]
[builder, ., append, (, line, )]
[builder]
[line]
[token]
[next, (, )]
[true]
[new, StringBuilder, (, )]
[true]
[token]
[ANNOTATION]
[EOC]
[EOF]
[new, ExtractionInfo, (, builder, ., toString, (, ), ., trim, (, ), ,, token, )]
[builder, ., toString, (, ), ., trim, (, )]
[builder, ., toString, (, )]
[builder]
[token]
[STAR]
[!, ignoreStar]
[ignoreStar]
[builder, ., length, (, ), >, 0]
[builder, ., length, (, )]
[builder]
[0]
[builder, ., append, (, ' ', )]
[builder]
[' ']
[builder, ., append, (, '*', )]
[builder]
['*']
[token]
[next, (, )]
[EOL]
[ignoreStar]
[true]
[builder, ., append, (, '\n', )]
[builder]
['\n']
[token]
[next, (, )]
[!, ignoreStar, &&, builder, ., length, (, ), >, 0]
[!, ignoreStar]
[ignoreStar]
[builder, ., length, (, ), >, 0]
[builder, ., length, (, )]
[builder]
[0]
[builder, ., append, (, ' ', )]
[builder]
[' ']
[ignoreStar]
[false]
[builder, ., append, (, toString, (, token, ), )]
[builder]
[toString, (, token, )]
[token]
[stream, ., getRemainingJSDocLine, (, )]
[stream]
[line]
[trimEnd, (, line, )]
[line]
[builder, ., append, (, line, )]
[builder]
[line]
[token]
[next, (, )]
[true]
[0]
[trimCount, <, s, ., length, (, )]
[trimCount]
[s, ., length, (, )]
[s]
[s, ., charAt, (, s, ., length, (, ), -, trimCount, -, 1, )]
[s]
[s, ., length, (, ), -, trimCount, -, 1]
[s, ., length, (, ), -, trimCount]
[s, ., length, (, )]
[s]
[trimCount]
[1]
[Character, ., isWhitespace, (, ch, )]
[Character]
[ch]
[trimCount, ++]
[trimCount]
[trimCount, ==, 0]
[trimCount]
[0]
[s]
[s, ., substring, (, 0, ,, s, ., length, (, ), -, trimCount, )]
[s]
[0]
[s, ., length, (, ), -, trimCount]
[s, ., length, (, )]
[s]
[trimCount]
[token, ==, JsDocToken, ., LC]
[token]
[JsDocToken, ., LC]
[JsDocToken]
[skipEOLs, (, )]
[parseTopLevelTypeExpression, (, next, (, ), )]
[next, (, )]
[typeNode, !=, null]
[typeNode]
[null]
[skipEOLs, (, )]
[!, match, (, JsDocToken, ., RC, )]
[match, (, JsDocToken, ., RC, )]
[JsDocToken, ., RC]
[JsDocToken]
[reportTypeSyntaxWarning, (, "msg.jsdoc.missing.rc", )]
["msg.jsdoc.missing.rc"]
[next, (, )]
[typeNode]
[parseTypeExpression, (, token, )]
[token]
[Preconditions, ., checkArgument, (, token, ==, JsDocToken, ., LC, )]
[Preconditions]
[token, ==, JsDocToken, ., LC]
[token]
[JsDocToken, ., LC]
[JsDocToken]
[skipEOLs, (, )]
[false]
[token]
[next, (, )]
[token, ==, JsDocToken, ., ELLIPSIS]
[token]
[JsDocToken, ., ELLIPSIS]
[JsDocToken]
[token]
[next, (, )]
[token, ==, JsDocToken, ., RC]
[token]
[JsDocToken, ., RC]
[JsDocToken]
[wrapNode, (, Token, ., ELLIPSIS, ,, IR, ., empty, (, ), )]
[Token, ., ELLIPSIS]
[Token]
[IR, ., empty, (, )]
[IR]
[restArg]
[true]
[parseTopLevelTypeExpression, (, token, )]
[token]
[typeNode, !=, null]
[typeNode]
[null]
[skipEOLs, (, )]
[restArg]
[typeNode]
[wrapNode, (, Token, ., ELLIPSIS, ,, typeNode, )]
[Token, ., ELLIPSIS]
[Token]
[typeNode]
[match, (, JsDocToken, ., EQUALS, )]
[JsDocToken, ., EQUALS]
[JsDocToken]
[next, (, )]
[skipEOLs, (, )]
[typeNode]
[wrapNode, (, Token, ., EQUALS, ,, typeNode, )]
[Token, ., EQUALS]
[Token]
[typeNode]
[!, match, (, JsDocToken, ., RC, )]
[match, (, JsDocToken, ., RC, )]
[JsDocToken, ., RC]
[JsDocToken]
[reportTypeSyntaxWarning, (, "msg.jsdoc.missing.rc", )]
["msg.jsdoc.missing.rc"]
[next, (, )]
[typeNode]
[token, ==, JsDocToken, ., LC]
[token]
[JsDocToken, ., LC]
[JsDocToken]
[skipEOLs, (, )]
[parseTypeName, (, next, (, ), )]
[next, (, )]
[typeNode, !=, null]
[typeNode]
[null]
[skipEOLs, (, )]
[!, match, (, JsDocToken, ., RC, )]
[match, (, JsDocToken, ., RC, )]
[JsDocToken, ., RC]
[JsDocToken]
[reportTypeSyntaxWarning, (, "msg.jsdoc.missing.rc", )]
["msg.jsdoc.missing.rc"]
[next, (, )]
[typeNode]
[parseTypeName, (, token, )]
[token]
[parseTypeExpression, (, token, )]
[token]
[typeExpr, !=, null]
[typeExpr]
[null]
[match, (, JsDocToken, ., PIPE, )]
[JsDocToken, ., PIPE]
[JsDocToken]
[next, (, )]
[match, (, JsDocToken, ., PIPE, )]
[JsDocToken, ., PIPE]
[JsDocToken]
[next, (, )]
[skipEOLs, (, )]
[token]
[next, (, )]
[parseUnionTypeWithAlternate, (, token, ,, typeExpr, )]
[token]
[typeExpr]
[typeExpr]
[parseTopLevelTypeExpression, (, token, )]
[token]
[typeExpr, ==, null]
[typeExpr]
[null]
[null]
[IR, ., block, (, )]
[IR]
[typeList, ., addChildToBack, (, typeExpr, )]
[typeList]
[typeExpr]
[match, (, JsDocToken, ., COMMA, )]
[JsDocToken, ., COMMA]
[JsDocToken]
[next, (, )]
[skipEOLs, (, )]
[typeExpr]
[parseTopLevelTypeExpression, (, next, (, ), )]
[next, (, )]
[typeExpr, ==, null]
[typeExpr]
[null]
[null]
[typeList, ., addChildToBack, (, typeExpr, )]
[typeList]
[typeExpr]
[typeList]
[token, ==, JsDocToken, ., QMARK]
[token]
[JsDocToken, ., QMARK]
[JsDocToken]
[token]
[next, (, )]
[token, ==, JsDocToken, ., COMMA, ||, token, ==, JsDocToken, ., EQUALS, ||, token, ==, JsDocToken, ., RB, ||, token, ==, JsDocToken, ., RC, ||, token, ==, JsDocToken, ., RP, ||, token, ==, JsDocToken, ., PIPE, ||, token, ==, JsDocToken, ., GT]
[token, ==, JsDocToken, ., COMMA, ||, token, ==, JsDocToken, ., EQUALS, ||, token, ==, JsDocToken, ., RB, ||, token, ==, JsDocToken, ., RC, ||, token, ==, JsDocToken, ., RP, ||, token, ==, JsDocToken, ., PIPE]
[token, ==, JsDocToken, ., COMMA, ||, token, ==, JsDocToken, ., EQUALS, ||, token, ==, JsDocToken, ., RB, ||, token, ==, JsDocToken, ., RC, ||, token, ==, JsDocToken, ., RP]
[token, ==, JsDocToken, ., COMMA, ||, token, ==, JsDocToken, ., EQUALS, ||, token, ==, JsDocToken, ., RB, ||, token, ==, JsDocToken, ., RC]
[token, ==, JsDocToken, ., COMMA, ||, token, ==, JsDocToken, ., EQUALS, ||, token, ==, JsDocToken, ., RB]
[token, ==, JsDocToken, ., COMMA, ||, token, ==, JsDocToken, ., EQUALS]
[token, ==, JsDocToken, ., COMMA]
[token]
[JsDocToken, ., COMMA]
[JsDocToken]
[token, ==, JsDocToken, ., EQUALS]
[token]
[JsDocToken, ., EQUALS]
[JsDocToken]
[token, ==, JsDocToken, ., RB]
[token]
[JsDocToken, ., RB]
[JsDocToken]
[token, ==, JsDocToken, ., RC]
[token]
[JsDocToken, ., RC]
[JsDocToken]
[token, ==, JsDocToken, ., RP]
[token]
[JsDocToken, ., RP]
[JsDocToken]
[token, ==, JsDocToken, ., PIPE]
[token]
[JsDocToken, ., PIPE]
[JsDocToken]
[token, ==, JsDocToken, ., GT]
[token]
[JsDocToken, ., GT]
[JsDocToken]
[restoreLookAhead, (, token, )]
[token]
[newNode, (, Token, ., QMARK, )]
[Token, ., QMARK]
[Token]
[wrapNode, (, Token, ., QMARK, ,, parseBasicTypeExpression, (, token, ), )]
[Token, ., QMARK]
[Token]
[parseBasicTypeExpression, (, token, )]
[token]
[token, ==, JsDocToken, ., BANG]
[token]
[JsDocToken, ., BANG]
[JsDocToken]
[wrapNode, (, Token, ., BANG, ,, parseBasicTypeExpression, (, next, (, ), ), )]
[Token, ., BANG]
[Token]
[parseBasicTypeExpression, (, next, (, ), )]
[next, (, )]
[parseBasicTypeExpression, (, token, )]
[token]
[basicTypeExpr, !=, null]
[basicTypeExpr]
[null]
[match, (, JsDocToken, ., QMARK, )]
[JsDocToken, ., QMARK]
[JsDocToken]
[next, (, )]
[wrapNode, (, Token, ., QMARK, ,, basicTypeExpr, )]
[Token, ., QMARK]
[Token]
[basicTypeExpr]
[match, (, JsDocToken, ., BANG, )]
[JsDocToken, ., BANG]
[JsDocToken]
[next, (, )]
[wrapNode, (, Token, ., BANG, ,, basicTypeExpr, )]
[Token, ., BANG]
[Token]
[basicTypeExpr]
[basicTypeExpr]
[token, ==, JsDocToken, ., STAR]
[token]
[JsDocToken, ., STAR]
[JsDocToken]
[newNode, (, Token, ., STAR, )]
[Token, ., STAR]
[Token]
[token, ==, JsDocToken, ., LB]
[token]
[JsDocToken, ., LB]
[JsDocToken]
[skipEOLs, (, )]
[parseArrayType, (, next, (, ), )]
[next, (, )]
[token, ==, JsDocToken, ., LC]
[token]
[JsDocToken, ., LC]
[JsDocToken]
[skipEOLs, (, )]
[parseRecordType, (, next, (, ), )]
[next, (, )]
[token, ==, JsDocToken, ., LP]
[token]
[JsDocToken, ., LP]
[JsDocToken]
[skipEOLs, (, )]
[parseUnionType, (, next, (, ), )]
[next, (, )]
[token, ==, JsDocToken, ., STRING]
[token]
[JsDocToken, ., STRING]
[JsDocToken]
[stream, ., getString, (, )]
[stream]
["function", ., equals, (, string, )]
["function"]
[string]
[skipEOLs, (, )]
[parseFunctionType, (, next, (, ), )]
[next, (, )]
["null", ., equals, (, string, ), ||, "undefined", ., equals, (, string, )]
["null", ., equals, (, string, )]
["null"]
[string]
["undefined", ., equals, (, string, )]
["undefined"]
[string]
[newStringNode, (, string, )]
[string]
[parseTypeName, (, token, )]
[token]
[restoreLookAhead, (, token, )]
[token]
[reportGenericTypeSyntaxWarning, (, )]
[token, !=, JsDocToken, ., STRING]
[token]
[JsDocToken, ., STRING]
[JsDocToken]
[reportGenericTypeSyntaxWarning, (, )]
[stream, ., getString, (, )]
[stream]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[match, (, JsDocToken, ., EOL, ), &&, typeName, ., charAt, (, typeName, ., length, (, ), -, 1, ), ==, '.']
[match, (, JsDocToken, ., EOL, )]
[JsDocToken, ., EOL]
[JsDocToken]
[typeName, ., charAt, (, typeName, ., length, (, ), -, 1, ), ==, '.']
[typeName, ., charAt, (, typeName, ., length, (, ), -, 1, )]
[typeName]
[typeName, ., length, (, ), -, 1]
[typeName, ., length, (, )]
[typeName]
[1]
['.']
[skipEOLs, (, )]
[match, (, JsDocToken, ., STRING, )]
[JsDocToken, ., STRING]
[JsDocToken]
[next, (, )]
[typeName]
[stream, ., getString, (, )]
[stream]
[newStringNode, (, typeName, ,, lineno, ,, charno, )]
[typeName]
[lineno]
[charno]
[match, (, JsDocToken, ., LT, )]
[JsDocToken, ., LT]
[JsDocToken]
[next, (, )]
[skipEOLs, (, )]
[parseTypeExpressionList, (, next, (, ), )]
[next, (, )]
[memberType, !=, null]
[memberType]
[null]
[typeNameNode, ., addChildToFront, (, memberType, )]
[typeNameNode]
[memberType]
[skipEOLs, (, )]
[!, match, (, JsDocToken, ., GT, )]
[match, (, JsDocToken, ., GT, )]
[JsDocToken, ., GT]
[JsDocToken]
[reportTypeSyntaxWarning, (, "msg.jsdoc.missing.gt", )]
["msg.jsdoc.missing.gt"]
[next, (, )]
[typeNameNode]
[token, !=, JsDocToken, ., LP]
[token]
[JsDocToken, ., LP]
[JsDocToken]
[restoreLookAhead, (, token, )]
[token]
[reportTypeSyntaxWarning, (, "msg.jsdoc.missing.lp", )]
["msg.jsdoc.missing.lp"]
[newNode, (, Token, ., FUNCTION, )]
[Token, ., FUNCTION]
[Token]
[null]
[skipEOLs, (, )]
[!, match, (, JsDocToken, ., RP, )]
[match, (, JsDocToken, ., RP, )]
[JsDocToken, ., RP]
[JsDocToken]
[token]
[next, (, )]
[true]
[token, ==, JsDocToken, ., STRING]
[token]
[JsDocToken, ., STRING]
[JsDocToken]
[stream, ., getString, (, )]
[stream]
["this", ., equals, (, tokenStr, )]
["this"]
[tokenStr]
["new", ., equals, (, tokenStr, )]
["new"]
[tokenStr]
[isThis, ||, isNew]
[isThis]
[isNew]
[match, (, JsDocToken, ., COLON, )]
[JsDocToken, ., COLON]
[JsDocToken]
[next, (, )]
[skipEOLs, (, )]
[wrapNode, (, isThis, ?, Token, ., THIS, :, Token, ., NEW, ,, parseTypeName, (, next, (, ), ), )]
[isThis, ?, Token, ., THIS, :, Token, ., NEW]
[isThis]
[Token, ., THIS]
[Token]
[Token, ., NEW]
[Token]
[parseTypeName, (, next, (, ), )]
[next, (, )]
[contextType, ==, null]
[contextType]
[null]
[null]
[functionType, ., addChildToFront, (, contextType, )]
[functionType]
[contextType]
[reportTypeSyntaxWarning, (, "msg.jsdoc.missing.colon", )]
["msg.jsdoc.missing.colon"]
[match, (, JsDocToken, ., COMMA, )]
[JsDocToken, ., COMMA]
[JsDocToken]
[next, (, )]
[skipEOLs, (, )]
[token]
[next, (, )]
[hasParams]
[false]
[hasParams]
[parameters]
[parseParametersType, (, token, )]
[token]
[parameters, ==, null]
[parameters]
[null]
[null]
[parameters, !=, null]
[parameters]
[null]
[functionType, ., addChildToBack, (, parameters, )]
[functionType]
[parameters]
[skipEOLs, (, )]
[!, match, (, JsDocToken, ., RP, )]
[match, (, JsDocToken, ., RP, )]
[JsDocToken, ., RP]
[JsDocToken]
[reportTypeSyntaxWarning, (, "msg.jsdoc.missing.rp", )]
["msg.jsdoc.missing.rp"]
[skipEOLs, (, )]
[parseResultType, (, next, (, ), )]
[next, (, )]
[resultType, ==, null]
[resultType]
[null]
[null]
[functionType, ., addChildToBack, (, resultType, )]
[functionType]
[resultType]
[functionType]
[newNode, (, Token, ., PARAM_LIST, )]
[Token, ., PARAM_LIST]
[Token]
[false]
[null]
[token, !=, JsDocToken, ., RP]
[token]
[JsDocToken, ., RP]
[JsDocToken]
[paramType, !=, null]
[paramType]
[null]
[next, (, )]
[skipEOLs, (, )]
[token]
[next, (, )]
[token, ==, JsDocToken, ., ELLIPSIS]
[token]
[JsDocToken, ., ELLIPSIS]
[JsDocToken]
[skipEOLs, (, )]
[match, (, JsDocToken, ., RP, )]
[JsDocToken, ., RP]
[JsDocToken]
[paramType]
[newNode, (, Token, ., ELLIPSIS, )]
[Token, ., ELLIPSIS]
[Token]
[skipEOLs, (, )]
[!, match, (, JsDocToken, ., LB, )]
[match, (, JsDocToken, ., LB, )]
[JsDocToken, ., LB]
[JsDocToken]
[reportTypeSyntaxWarning, (, "msg.jsdoc.missing.lb", )]
["msg.jsdoc.missing.lb"]
[next, (, )]
[skipEOLs, (, )]
[paramType]
[wrapNode, (, Token, ., ELLIPSIS, ,, parseTypeExpression, (, next, (, ), ), )]
[Token, ., ELLIPSIS]
[Token]
[parseTypeExpression, (, next, (, ), )]
[next, (, )]
[skipEOLs, (, )]
[!, match, (, JsDocToken, ., RB, )]
[match, (, JsDocToken, ., RB, )]
[JsDocToken, ., RB]
[JsDocToken]
[reportTypeSyntaxWarning, (, "msg.jsdoc.missing.rb", )]
["msg.jsdoc.missing.rb"]
[skipEOLs, (, )]
[next, (, )]
[isVarArgs]
[true]
[paramType]
[parseTypeExpression, (, token, )]
[token]
[match, (, JsDocToken, ., EQUALS, )]
[JsDocToken, ., EQUALS]
[JsDocToken]
[skipEOLs, (, )]
[next, (, )]
[paramType]
[wrapNode, (, Token, ., EQUALS, ,, paramType, )]
[Token, ., EQUALS]
[Token]
[paramType]
[paramType, ==, null]
[paramType]
[null]
[null]
[paramsType, ., addChildToBack, (, paramType, )]
[paramsType]
[paramType]
[isVarArgs]
[match, (, JsDocToken, ., COMMA, )]
[JsDocToken, ., COMMA]
[JsDocToken]
[isVarArgs, &&, match, (, JsDocToken, ., COMMA, )]
[isVarArgs]
[match, (, JsDocToken, ., COMMA, )]
[JsDocToken, ., COMMA]
[JsDocToken]
[reportTypeSyntaxWarning, (, "msg.jsdoc.function.varargs", )]
["msg.jsdoc.function.varargs"]
[paramsType]
[skipEOLs, (, )]
[!, match, (, JsDocToken, ., COLON, )]
[match, (, JsDocToken, ., COLON, )]
[JsDocToken, ., COLON]
[JsDocToken]
[newNode, (, Token, ., EMPTY, )]
[Token, ., EMPTY]
[Token]
[token]
[next, (, )]
[skipEOLs, (, )]
[match, (, JsDocToken, ., STRING, ), &&, "void", ., equals, (, stream, ., getString, (, ), )]
[match, (, JsDocToken, ., STRING, )]
[JsDocToken, ., STRING]
[JsDocToken]
["void", ., equals, (, stream, ., getString, (, ), )]
["void"]
[stream, ., getString, (, )]
[stream]
[next, (, )]
[newNode, (, Token, ., VOID, )]
[Token, ., VOID]
[Token]
[parseTypeExpression, (, next, (, ), )]
[next, (, )]
[parseUnionTypeWithAlternate, (, token, ,, null, )]
[token]
[null]
[newNode, (, Token, ., PIPE, )]
[Token, ., PIPE]
[Token]
[alternate, !=, null]
[alternate]
[null]
[union, ., addChildToBack, (, alternate, )]
[union]
[alternate]
[null]
[expr, !=, null]
[expr]
[null]
[skipEOLs, (, )]
[token]
[next, (, )]
[Preconditions, ., checkState, (, token, ==, JsDocToken, ., PIPE, ||, token, ==, JsDocToken, ., COMMA, )]
[Preconditions]
[token, ==, JsDocToken, ., PIPE, ||, token, ==, JsDocToken, ., COMMA]
[token, ==, JsDocToken, ., PIPE]
[token]
[JsDocToken, ., PIPE]
[JsDocToken]
[token, ==, JsDocToken, ., COMMA]
[token]
[JsDocToken, ., COMMA]
[JsDocToken]
[token, ==, JsDocToken, ., PIPE]
[token]
[JsDocToken, ., PIPE]
[JsDocToken]
[isPipe, &&, match, (, JsDocToken, ., PIPE, )]
[isPipe]
[match, (, JsDocToken, ., PIPE, )]
[JsDocToken, ., PIPE]
[JsDocToken]
[next, (, )]
[skipEOLs, (, )]
[token]
[next, (, )]
[expr]
[parseTypeExpression, (, token, )]
[token]
[expr, ==, null]
[expr]
[null]
[null]
[union, ., addChildToBack, (, expr, )]
[union]
[expr]
[match, (, JsDocToken, ., PIPE, ,, JsDocToken, ., COMMA, )]
[JsDocToken, ., PIPE]
[JsDocToken]
[JsDocToken, ., COMMA]
[JsDocToken]
[alternate, ==, null]
[alternate]
[null]
[skipEOLs, (, )]
[!, match, (, JsDocToken, ., RP, )]
[match, (, JsDocToken, ., RP, )]
[JsDocToken, ., RP]
[JsDocToken]
[reportTypeSyntaxWarning, (, "msg.jsdoc.missing.rp", )]
["msg.jsdoc.missing.rp"]
[next, (, )]
[union]
[newNode, (, Token, ., LB, )]
[Token, ., LB]
[Token]
[null]
[false]
[arg, !=, null]
[arg]
[null]
[next, (, )]
[skipEOLs, (, )]
[token]
[next, (, )]
[token, ==, JsDocToken, ., ELLIPSIS]
[token]
[JsDocToken, ., ELLIPSIS]
[JsDocToken]
[arg]
[wrapNode, (, Token, ., ELLIPSIS, ,, parseTypeExpression, (, next, (, ), ), )]
[Token, ., ELLIPSIS]
[Token]
[parseTypeExpression, (, next, (, ), )]
[next, (, )]
[hasVarArgs]
[true]
[arg]
[parseTypeExpression, (, token, )]
[token]
[arg, ==, null]
[arg]
[null]
[null]
[array, ., addChildToBack, (, arg, )]
[array]
[arg]
[hasVarArgs]
[skipEOLs, (, )]
[match, (, JsDocToken, ., COMMA, )]
[JsDocToken, ., COMMA]
[JsDocToken]
[!, match, (, JsDocToken, ., RB, )]
[match, (, JsDocToken, ., RB, )]
[JsDocToken, ., RB]
[JsDocToken]
[reportTypeSyntaxWarning, (, "msg.jsdoc.missing.rb", )]
["msg.jsdoc.missing.rb"]
[next, (, )]
[array]
[newNode, (, Token, ., LC, )]
[Token, ., LC]
[Token]
[parseFieldTypeList, (, token, )]
[token]
[fieldTypeList, ==, null]
[fieldTypeList]
[null]
[reportGenericTypeSyntaxWarning, (, )]
[skipEOLs, (, )]
[!, match, (, JsDocToken, ., RC, )]
[match, (, JsDocToken, ., RC, )]
[JsDocToken, ., RC]
[JsDocToken]
[reportTypeSyntaxWarning, (, "msg.jsdoc.missing.rc", )]
["msg.jsdoc.missing.rc"]
[next, (, )]
[recordType, ., addChildToBack, (, fieldTypeList, )]
[recordType]
[fieldTypeList]
[recordType]
[newNode, (, Token, ., LB, )]
[Token, ., LB]
[Token]
[parseFieldType, (, token, )]
[token]
[fieldType, ==, null]
[fieldType]
[null]
[null]
[fieldTypeList, ., addChildToBack, (, fieldType, )]
[fieldTypeList]
[fieldType]
[skipEOLs, (, )]
[!, match, (, JsDocToken, ., COMMA, )]
[match, (, JsDocToken, ., COMMA, )]
[JsDocToken, ., COMMA]
[JsDocToken]
[next, (, )]
[skipEOLs, (, )]
[token]
[next, (, )]
[true]
[fieldTypeList]
[parseFieldName, (, token, )]
[token]
[fieldName, ==, null]
[fieldName]
[null]
[null]
[skipEOLs, (, )]
[!, match, (, JsDocToken, ., COLON, )]
[match, (, JsDocToken, ., COLON, )]
[JsDocToken, ., COLON]
[JsDocToken]
[fieldName]
[next, (, )]
[skipEOLs, (, )]
[parseTypeExpression, (, next, (, ), )]
[next, (, )]
[typeExpression, ==, null]
[typeExpression]
[null]
[null]
[newNode, (, Token, ., COLON, )]
[Token, ., COLON]
[Token]
[fieldType, ., addChildToBack, (, fieldName, )]
[fieldType]
[fieldName]
[fieldType, ., addChildToBack, (, typeExpression, )]
[fieldType]
[typeExpression]
[fieldType]
[token]
[STRING]
[stream, ., getString, (, )]
[stream]
[newStringNode, (, string, )]
[string]
[null]
[n, ==, null, ?, null, :, new, Node, (, type, ,, n, ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), ), ., clonePropsFrom, (, templateNode, )]
[n, ==, null]
[n]
[null]
[null]
[new, Node, (, type, ,, n, ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), ), ., clonePropsFrom, (, templateNode, )]
[new, Node, (, type, ,, n, ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[type]
[n]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[templateNode]
[new, Node, (, type, ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), ), ., clonePropsFrom, (, templateNode, )]
[new, Node, (, type, ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[type]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[templateNode]
[newStringNode, (, s, ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[s]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[Node, ., newString, (, s, ,, lineno, ,, charno, ), ., clonePropsFrom, (, templateNode, )]
[Node, ., newString, (, s, ,, lineno, ,, charno, )]
[Node]
[s]
[lineno]
[charno]
[templateNode]
[n, ., setLength, (, s, ., length, (, ), )]
[n]
[s, ., length, (, )]
[s]
[n]
[IR, ., script, (, )]
[IR]
[templateNode, ., setStaticSourceFile, (, this, ., associatedNode, !=, null, ?, this, ., associatedNode, ., getStaticSourceFile, (, ), :, null, )]
[templateNode]
[this, ., associatedNode, !=, null, ?, this, ., associatedNode, ., getStaticSourceFile, (, ), :, null]
[this, ., associatedNode, !=, null]
[this, ., associatedNode]
[this]
[null]
[this, ., associatedNode, ., getStaticSourceFile, (, )]
[this, ., associatedNode]
[this]
[null]
[templateNode]
[parser, ., addTypeWarning, (, warning, ,, stream, ., getLineno, (, ), ,, stream, ., getCharno, (, ), )]
[parser]
[warning]
[stream, ., getLineno, (, )]
[stream]
[stream, ., getCharno, (, )]
[stream]
[null]
[reportTypeSyntaxWarning, (, "msg.jsdoc.type.syntax", )]
["msg.jsdoc.type.syntax"]
[eatTokensUntilEOL, (, next, (, ), )]
[next, (, )]
[token, ==, JsDocToken, ., EOL, ||, token, ==, JsDocToken, ., EOC, ||, token, ==, JsDocToken, ., EOF]
[token, ==, JsDocToken, ., EOL, ||, token, ==, JsDocToken, ., EOC]
[token, ==, JsDocToken, ., EOL]
[token]
[JsDocToken, ., EOL]
[JsDocToken]
[token, ==, JsDocToken, ., EOC]
[token]
[JsDocToken, ., EOC]
[JsDocToken]
[token, ==, JsDocToken, ., EOF]
[token]
[JsDocToken, ., EOF]
[JsDocToken]
[state]
[State, ., SEARCHING_ANNOTATION]
[State]
[token]
[token]
[next, (, )]
[true]
[null]
[NO_UNREAD_TOKEN]
[unreadToken]
[token]
[unreadToken]
[next, (, )]
[unreadToken, ==, token]
[unreadToken]
[token]
[unreadToken]
[next, (, )]
[unreadToken, ==, token1, ||, unreadToken, ==, token2]
[unreadToken, ==, token1]
[unreadToken]
[token1]
[unreadToken, ==, token2]
[unreadToken]
[token2]
[unreadToken, ==, NO_UNREAD_TOKEN]
[unreadToken]
[NO_UNREAD_TOKEN]
[stream, ., getJsDocToken, (, )]
[stream]
[current, (, )]
[unreadToken]
[unreadToken]
[NO_UNREAD_TOKEN]
[t]
[match, (, JsDocToken, ., EOL, )]
[JsDocToken, ., EOL]
[JsDocToken]
[next, (, )]
[match, (, JsDocToken, ., STAR, )]
[JsDocToken, ., STAR]
[JsDocToken]
[next, (, )]
[jsdocBuilder, ., isPopulatedWithFileOverview, (, )]
[jsdocBuilder]
[jsdocBuilder, ., isPopulated, (, )]
[jsdocBuilder]
[jsdocBuilder, ., build, (, associatedNode, )]
[jsdocBuilder]
[associatedNode]
[fileOverviewJSDocInfo]
[false]
[true]
[c]
[stream, ., getChar, (, )]
[stream]
[c, ==, ' ']
[c]
[' ']
[c, ==, '{']
[c]
['{']
[matchedLc]
[true]
[stream, ., ungetChar, (, c, )]
[stream]
[c]
[matchedLc]
