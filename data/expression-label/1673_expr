[new, LegendreRuleFactory, (, )]
[new, LegendreHighPrecisionRuleFactory, (, )]
[new, HermiteRuleFactory, (, )]
[new, GaussIntegrator, (, getRule, (, legendre, ,, numberOfPoints, ), )]
[getRule, (, legendre, ,, numberOfPoints, )]
[legendre]
[numberOfPoints]
[new, GaussIntegrator, (, transform, (, getRule, (, legendre, ,, numberOfPoints, ), ,, lowerBound, ,, upperBound, ), )]
[transform, (, getRule, (, legendre, ,, numberOfPoints, ), ,, lowerBound, ,, upperBound, )]
[getRule, (, legendre, ,, numberOfPoints, )]
[legendre]
[numberOfPoints]
[lowerBound]
[upperBound]
[new, GaussIntegrator, (, getRule, (, legendreHighPrecision, ,, numberOfPoints, ), )]
[getRule, (, legendreHighPrecision, ,, numberOfPoints, )]
[legendreHighPrecision]
[numberOfPoints]
[new, GaussIntegrator, (, transform, (, getRule, (, legendreHighPrecision, ,, numberOfPoints, ), ,, lowerBound, ,, upperBound, ), )]
[transform, (, getRule, (, legendreHighPrecision, ,, numberOfPoints, ), ,, lowerBound, ,, upperBound, )]
[getRule, (, legendreHighPrecision, ,, numberOfPoints, )]
[legendreHighPrecision]
[numberOfPoints]
[lowerBound]
[upperBound]
[new, SymmetricGaussIntegrator, (, getRule, (, hermite, ,, numberOfPoints, ), )]
[getRule, (, hermite, ,, numberOfPoints, )]
[hermite]
[numberOfPoints]
[factory, ., getRule, (, numberOfPoints, )]
[factory]
[numberOfPoints]
[rule, ., getFirst, (, )]
[rule]
[rule, ., getSecond, (, )]
[rule]
[(, b, -, a, ), /, 2]
[(, b, -, a, )]
[b, -, a]
[b]
[a]
[2]
[a, +, scale]
[a]
[scale]
[0]
[i, <, points, ., length]
[i]
[points, ., length]
[points]
[i, ++]
[i]
[points, [, i, ]]
[points]
[i]
[points, [, i, ], *, scale, +, shift]
[points, [, i, ], *, scale]
[points, [, i, ]]
[points]
[i]
[scale]
[shift]
[weights, [, i, ]]
[weights]
[i]
[scale]
[new, Pair, <, double, [, ], ,, double, [, ], >, (, points, ,, weights, )]
[points]
[weights]
