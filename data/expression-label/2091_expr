[new, Incrementor, (, )]
[new, SimpleValueChecker, (, )]
[this, ., checker]
[this]
[checker]
[evaluations, ., getMaximalCount, (, )]
[evaluations]
[evaluations, ., getCount, (, )]
[evaluations]
[checker]
[evaluations, ., incrementCount, (, )]
[evaluations]
[new, TooManyEvaluationsException, (, e, ., getMax, (, ), )]
[e, ., getMax, (, )]
[e]
[function, ., value, (, point, )]
[function]
[point]
[optimizeInternal, (, maxEval, ,, f, ,, goalType, ,, new, InitialGuess, (, startPoint, ), )]
[maxEval]
[f]
[goalType]
[new, InitialGuess, (, startPoint, )]
[startPoint]
[optimizeInternal, (, maxEval, ,, f, ,, goalType, ,, optData, )]
[maxEval]
[f]
[goalType]
[optData]
[optimizeInternal, (, maxEval, ,, f, ,, goalType, ,, new, InitialGuess, (, startPoint, ), )]
[maxEval]
[f]
[goalType]
[new, InitialGuess, (, startPoint, )]
[startPoint]
[evaluations, ., setMaximalCount, (, maxEval, )]
[evaluations]
[maxEval]
[evaluations, ., resetCount, (, )]
[evaluations]
[function]
[f]
[goal]
[goalType]
[parseOptimizationData, (, optData, )]
[optData]
[checkParameters, (, )]
[doOptimize, (, )]
[optData]
[data, instanceof, InitialGuess]
[data]
[start]
[(, (, InitialGuess, ), data, ), ., getInitialGuess, (, )]
[(, (, InitialGuess, ), data, )]
[(, InitialGuess, ), data]
[data]
[data, instanceof, SimpleBounds]
[data]
[(, SimpleBounds, ), data]
[data]
[lowerBound]
[bounds, ., getLower, (, )]
[bounds]
[upperBound]
[bounds, ., getUpper, (, )]
[bounds]
[goal]
[start, ==, null, ?, null, :, start, ., clone, (, )]
[start, ==, null]
[start]
[null]
[null]
[start, ., clone, (, )]
[start]
[lowerBound, ==, null, ?, null, :, lowerBound, ., clone, (, )]
[lowerBound, ==, null]
[lowerBound]
[null]
[null]
[lowerBound, ., clone, (, )]
[lowerBound]
[upperBound, ==, null, ?, null, :, upperBound, ., clone, (, )]
[upperBound, ==, null]
[upperBound]
[null]
[null]
[upperBound, ., clone, (, )]
[upperBound]
[start, !=, null]
[start]
[null]
[start, ., length]
[start]
[lowerBound, !=, null]
[lowerBound]
[null]
[lowerBound, ., length, !=, dim]
[lowerBound, ., length]
[lowerBound]
[dim]
[new, DimensionMismatchException, (, lowerBound, ., length, ,, dim, )]
[lowerBound, ., length]
[lowerBound]
[dim]
[0]
[i, <, dim]
[i]
[dim]
[i, ++]
[i]
[start, [, i, ]]
[start]
[i]
[lowerBound, [, i, ]]
[lowerBound]
[i]
[v, <, lo]
[v]
[lo]
[new, NumberIsTooSmallException, (, v, ,, lo, ,, true, )]
[v]
[lo]
[true]
[upperBound, !=, null]
[upperBound]
[null]
[upperBound, ., length, !=, dim]
[upperBound, ., length]
[upperBound]
[dim]
[new, DimensionMismatchException, (, upperBound, ., length, ,, dim, )]
[upperBound, ., length]
[upperBound]
[dim]
[0]
[i, <, dim]
[i]
[dim]
[i, ++]
[i]
[start, [, i, ]]
[start]
[i]
[upperBound, [, i, ]]
[upperBound]
[i]
[v, >, hi]
[v]
[hi]
[new, NumberIsTooLargeException, (, v, ,, hi, ,, true, )]
[v]
[hi]
[true]
[lowerBound, ==, null]
[lowerBound]
[null]
[lowerBound]
[new, double, [, dim, ]]
[dim]
[0]
[i, <, dim]
[i]
[dim]
[i, ++]
[i]
[lowerBound, [, i, ]]
[lowerBound]
[i]
[Double, ., NEGATIVE_INFINITY]
[Double]
[upperBound, ==, null]
[upperBound]
[null]
[upperBound]
[new, double, [, dim, ]]
[dim]
[0]
[i, <, dim]
[i]
[dim]
[i, ++]
[i]
[upperBound, [, i, ]]
[upperBound]
[i]
[Double, ., POSITIVE_INFINITY]
[Double]
