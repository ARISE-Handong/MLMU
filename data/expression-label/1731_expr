[-, 626730818244969716L]
[626730818244969716L]
[null]
[null]
[this, ., rand]
[this]
[rand]
[len, <=, 0]
[len]
[0]
[new, NotStrictlyPositiveException, (, LocalizedFormats, ., LENGTH, ,, len, )]
[LocalizedFormats, ., LENGTH]
[LocalizedFormats]
[len]
[getRandomGenerator, (, )]
[new, StringBuilder, (, )]
[new, byte, [, (, len, /, 2, ), +, 1, ]]
[(, len, /, 2, ), +, 1]
[(, len, /, 2, )]
[len, /, 2]
[len]
[2]
[1]
[ran, ., nextBytes, (, randomBytes, )]
[ran]
[randomBytes]
[0]
[i, <, randomBytes, ., length]
[i]
[randomBytes, ., length]
[randomBytes]
[i, ++]
[i]
[Integer, ., valueOf, (, randomBytes, [, i, ], )]
[Integer]
[randomBytes, [, i, ]]
[randomBytes]
[i]
[Integer, ., toHexString, (, c, ., intValue, (, ), +, 128, )]
[Integer]
[c, ., intValue, (, ), +, 128]
[c, ., intValue, (, )]
[c]
[128]
[hex, ., length, (, ), ==, 1]
[hex, ., length, (, )]
[hex]
[1]
[hex]
["0", +, hex]
["0"]
[hex]
[outBuffer, ., append, (, hex, )]
[outBuffer]
[hex]
[outBuffer, ., toString, (, ), ., substring, (, 0, ,, len, )]
[outBuffer, ., toString, (, )]
[outBuffer]
[0]
[len]
[new, UniformIntegerDistribution, (, getRandomGenerator, (, ), ,, lower, ,, upper, ), ., sample, (, )]
[new, UniformIntegerDistribution, (, getRandomGenerator, (, ), ,, lower, ,, upper, )]
[getRandomGenerator, (, )]
[lower]
[upper]
[lower, >=, upper]
[lower]
[upper]
[new, NumberIsTooLargeException, (, LocalizedFormats, ., LOWER_BOUND_NOT_BELOW_UPPER_BOUND, ,, lower, ,, upper, ,, false, )]
[LocalizedFormats, ., LOWER_BOUND_NOT_BELOW_UPPER_BOUND]
[LocalizedFormats]
[lower]
[upper]
[false]
[(, upper, -, lower, ), +, 1]
[(, upper, -, lower, )]
[upper, -, lower]
[upper]
[lower]
[1]
[max, <=, 0]
[max]
[0]
[getRandomGenerator, (, )]
[true]
[rng, ., nextLong, (, )]
[rng]
[r, >=, lower, &&, r, <=, upper]
[r, >=, lower]
[r]
[lower]
[r, <=, upper]
[r]
[upper]
[r]
[max, <, Integer, ., MAX_VALUE]
[max]
[Integer, ., MAX_VALUE]
[Integer]
[lower, +, getRandomGenerator, (, ), ., nextInt, (, (, int, ), max, )]
[lower]
[getRandomGenerator, (, ), ., nextInt, (, (, int, ), max, )]
[getRandomGenerator, (, )]
[(, int, ), max]
[max]
[lower, +, nextLong, (, getRandomGenerator, (, ), ,, max, )]
[lower]
[nextLong, (, getRandomGenerator, (, ), ,, max, )]
[getRandomGenerator, (, )]
[max]
[n, >, 0]
[n]
[0]
[new, byte, [, 8, ]]
[8]
[rng, ., nextBytes, (, byteArray, )]
[rng]
[byteArray]
[bits]
[0]
[byteArray]
[bits]
[(, bits, <<, 8, ), |, (, (, (, long, ), b, ), &, 0xffL, )]
[(, bits, <<, 8, )]
[bits, <<, 8]
[bits]
[8]
[(, (, (, long, ), b, ), &, 0xffL, )]
[(, (, long, ), b, ), &, 0xffL]
[(, (, long, ), b, )]
[(, long, ), b]
[b]
[0xffL]
[bits]
[bits, &, 0x7fffffffffffffffL]
[bits]
[0x7fffffffffffffffL]
[val]
[bits, %, n]
[bits]
[n]
[bits, -, val, +, (, n, -, 1, ), <, 0]
[bits, -, val, +, (, n, -, 1, )]
[bits, -, val]
[bits]
[val]
[(, n, -, 1, )]
[n, -, 1]
[n]
[1]
[0]
[val]
[new, NotStrictlyPositiveException, (, n, )]
[n]
[len, <=, 0]
[len]
[0]
[new, NotStrictlyPositiveException, (, LocalizedFormats, ., LENGTH, ,, len, )]
[LocalizedFormats, ., LENGTH]
[LocalizedFormats]
[len]
[getSecRan, (, )]
[null]
[alg]
[MessageDigest, ., getInstance, (, "SHA-1", )]
[MessageDigest]
["SHA-1"]
[new, MathInternalError, (, ex, )]
[ex]
[alg, ., reset, (, )]
[alg]
[(, len, /, 40, ), +, 1]
[(, len, /, 40, )]
[len, /, 40]
[len]
[40]
[1]
[new, StringBuilder, (, )]
[1]
[iter, <, numIter, +, 1]
[iter]
[numIter, +, 1]
[numIter]
[1]
[iter, ++]
[iter]
[new, byte, [, 40, ]]
[40]
[secRan, ., nextBytes, (, randomBytes, )]
[secRan]
[randomBytes]
[alg, ., update, (, randomBytes, )]
[alg]
[randomBytes]
[alg, ., digest, (, )]
[alg]
[0]
[i, <, hash, ., length]
[i]
[hash, ., length]
[hash]
[i, ++]
[i]
[Integer, ., valueOf, (, hash, [, i, ], )]
[Integer]
[hash, [, i, ]]
[hash]
[i]
[Integer, ., toHexString, (, c, ., intValue, (, ), +, 128, )]
[Integer]
[c, ., intValue, (, ), +, 128]
[c, ., intValue, (, )]
[c]
[128]
[hex, ., length, (, ), ==, 1]
[hex, ., length, (, )]
[hex]
[1]
[hex]
["0", +, hex]
["0"]
[hex]
[outBuffer, ., append, (, hex, )]
[outBuffer]
[hex]
[outBuffer, ., toString, (, ), ., substring, (, 0, ,, len, )]
[outBuffer, ., toString, (, )]
[outBuffer]
[0]
[len]
[new, UniformIntegerDistribution, (, getSecRan, (, ), ,, lower, ,, upper, ), ., sample, (, )]
[new, UniformIntegerDistribution, (, getSecRan, (, ), ,, lower, ,, upper, )]
[getSecRan, (, )]
[lower]
[upper]
[lower, >=, upper]
[lower]
[upper]
[new, NumberIsTooLargeException, (, LocalizedFormats, ., LOWER_BOUND_NOT_BELOW_UPPER_BOUND, ,, lower, ,, upper, ,, false, )]
[LocalizedFormats, ., LOWER_BOUND_NOT_BELOW_UPPER_BOUND]
[LocalizedFormats]
[lower]
[upper]
[false]
[getSecRan, (, )]
[(, upper, -, lower, ), +, 1]
[(, upper, -, lower, )]
[upper, -, lower]
[upper]
[lower]
[1]
[max, <=, 0]
[max]
[0]
[true]
[rng, ., nextLong, (, )]
[rng]
[r, >=, lower, &&, r, <=, upper]
[r, >=, lower]
[r]
[lower]
[r, <=, upper]
[r]
[upper]
[r]
[max, <, Integer, ., MAX_VALUE]
[max]
[Integer, ., MAX_VALUE]
[Integer]
[lower, +, rng, ., nextInt, (, (, int, ), max, )]
[lower]
[rng, ., nextInt, (, (, int, ), max, )]
[rng]
[(, int, ), max]
[max]
[lower, +, nextLong, (, rng, ,, max, )]
[lower]
[nextLong, (, rng, ,, max, )]
[rng]
[max]
[new, PoissonDistribution, (, getRandomGenerator, (, ), ,, mean, ,, PoissonDistribution, ., DEFAULT_EPSILON, ,, PoissonDistribution, ., DEFAULT_MAX_ITERATIONS, ), ., sample, (, )]
[new, PoissonDistribution, (, getRandomGenerator, (, ), ,, mean, ,, PoissonDistribution, ., DEFAULT_EPSILON, ,, PoissonDistribution, ., DEFAULT_MAX_ITERATIONS, )]
[getRandomGenerator, (, )]
[mean]
[PoissonDistribution, ., DEFAULT_EPSILON]
[PoissonDistribution]
[PoissonDistribution, ., DEFAULT_MAX_ITERATIONS]
[PoissonDistribution]
[sigma, <=, 0]
[sigma]
[0]
[new, NotStrictlyPositiveException, (, LocalizedFormats, ., STANDARD_DEVIATION, ,, sigma, )]
[LocalizedFormats, ., STANDARD_DEVIATION]
[LocalizedFormats]
[sigma]
[sigma, *, getRandomGenerator, (, ), ., nextGaussian, (, ), +, mu]
[sigma, *, getRandomGenerator, (, ), ., nextGaussian, (, )]
[sigma]
[getRandomGenerator, (, ), ., nextGaussian, (, )]
[getRandomGenerator, (, )]
[mu]
[new, ExponentialDistribution, (, getRandomGenerator, (, ), ,, mean, ,, ExponentialDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY, ), ., sample, (, )]
[new, ExponentialDistribution, (, getRandomGenerator, (, ), ,, mean, ,, ExponentialDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY, )]
[getRandomGenerator, (, )]
[mean]
[ExponentialDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY]
[ExponentialDistribution]
[new, GammaDistribution, (, getRandomGenerator, (, ), ,, shape, ,, scale, ,, GammaDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY, ), ., sample, (, )]
[new, GammaDistribution, (, getRandomGenerator, (, ), ,, shape, ,, scale, ,, GammaDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY, )]
[getRandomGenerator, (, )]
[shape]
[scale]
[GammaDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY]
[GammaDistribution]
[new, HypergeometricDistribution, (, getRandomGenerator, (, ), ,, populationSize, ,, numberOfSuccesses, ,, sampleSize, ), ., sample, (, )]
[new, HypergeometricDistribution, (, getRandomGenerator, (, ), ,, populationSize, ,, numberOfSuccesses, ,, sampleSize, )]
[getRandomGenerator, (, )]
[populationSize]
[numberOfSuccesses]
[sampleSize]
[new, PascalDistribution, (, getRandomGenerator, (, ), ,, r, ,, p, ), ., sample, (, )]
[new, PascalDistribution, (, getRandomGenerator, (, ), ,, r, ,, p, )]
[getRandomGenerator, (, )]
[r]
[p]
[new, TDistribution, (, getRandomGenerator, (, ), ,, df, ,, TDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY, ), ., sample, (, )]
[new, TDistribution, (, getRandomGenerator, (, ), ,, df, ,, TDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY, )]
[getRandomGenerator, (, )]
[df]
[TDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY]
[TDistribution]
[new, WeibullDistribution, (, getRandomGenerator, (, ), ,, shape, ,, scale, ,, WeibullDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY, ), ., sample, (, )]
[new, WeibullDistribution, (, getRandomGenerator, (, ), ,, shape, ,, scale, ,, WeibullDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY, )]
[getRandomGenerator, (, )]
[shape]
[scale]
[WeibullDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY]
[WeibullDistribution]
[new, ZipfDistribution, (, getRandomGenerator, (, ), ,, numberOfElements, ,, exponent, ), ., sample, (, )]
[new, ZipfDistribution, (, getRandomGenerator, (, ), ,, numberOfElements, ,, exponent, )]
[getRandomGenerator, (, )]
[numberOfElements]
[exponent]
[new, BetaDistribution, (, getRandomGenerator, (, ), ,, alpha, ,, beta, ,, BetaDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY, ), ., sample, (, )]
[new, BetaDistribution, (, getRandomGenerator, (, ), ,, alpha, ,, beta, ,, BetaDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY, )]
[getRandomGenerator, (, )]
[alpha]
[beta]
[BetaDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY]
[BetaDistribution]
[new, BinomialDistribution, (, getRandomGenerator, (, ), ,, numberOfTrials, ,, probabilityOfSuccess, ), ., sample, (, )]
[new, BinomialDistribution, (, getRandomGenerator, (, ), ,, numberOfTrials, ,, probabilityOfSuccess, )]
[getRandomGenerator, (, )]
[numberOfTrials]
[probabilityOfSuccess]
[new, CauchyDistribution, (, getRandomGenerator, (, ), ,, median, ,, scale, ,, CauchyDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY, ), ., sample, (, )]
[new, CauchyDistribution, (, getRandomGenerator, (, ), ,, median, ,, scale, ,, CauchyDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY, )]
[getRandomGenerator, (, )]
[median]
[scale]
[CauchyDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY]
[CauchyDistribution]
[new, ChiSquaredDistribution, (, getRandomGenerator, (, ), ,, df, ,, ChiSquaredDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY, ), ., sample, (, )]
[new, ChiSquaredDistribution, (, getRandomGenerator, (, ), ,, df, ,, ChiSquaredDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY, )]
[getRandomGenerator, (, )]
[df]
[ChiSquaredDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY]
[ChiSquaredDistribution]
[new, FDistribution, (, getRandomGenerator, (, ), ,, numeratorDf, ,, denominatorDf, ,, FDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY, ), ., sample, (, )]
[new, FDistribution, (, getRandomGenerator, (, ), ,, numeratorDf, ,, denominatorDf, ,, FDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY, )]
[getRandomGenerator, (, )]
[numeratorDf]
[denominatorDf]
[FDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY]
[FDistribution]
[nextUniform, (, lower, ,, upper, ,, false, )]
[lower]
[upper]
[false]
[lower, >=, upper]
[lower]
[upper]
[new, NumberIsTooLargeException, (, LocalizedFormats, ., LOWER_BOUND_NOT_BELOW_UPPER_BOUND, ,, lower, ,, upper, ,, false, )]
[LocalizedFormats, ., LOWER_BOUND_NOT_BELOW_UPPER_BOUND]
[LocalizedFormats]
[lower]
[upper]
[false]
[Double, ., isInfinite, (, lower, )]
[Double]
[lower]
[new, NotFiniteNumberException, (, LocalizedFormats, ., INFINITE_BOUND, ,, lower, )]
[LocalizedFormats, ., INFINITE_BOUND]
[LocalizedFormats]
[lower]
[Double, ., isInfinite, (, upper, )]
[Double]
[upper]
[new, NotFiniteNumberException, (, LocalizedFormats, ., INFINITE_BOUND, ,, upper, )]
[LocalizedFormats, ., INFINITE_BOUND]
[LocalizedFormats]
[upper]
[Double, ., isNaN, (, lower, ), ||, Double, ., isNaN, (, upper, )]
[Double, ., isNaN, (, lower, )]
[Double]
[lower]
[Double, ., isNaN, (, upper, )]
[Double]
[upper]
[new, NotANumberException, (, )]
[getRandomGenerator, (, )]
[generator, ., nextDouble, (, )]
[generator]
[!, lowerInclusive, &&, u, <=, 0.0]
[!, lowerInclusive]
[lowerInclusive]
[u, <=, 0.0]
[u]
[0.0]
[u]
[generator, ., nextDouble, (, )]
[generator]
[u, *, upper, +, (, 1.0, -, u, ), *, lower]
[u, *, upper]
[u]
[upper]
[(, 1.0, -, u, ), *, lower]
[(, 1.0, -, u, )]
[1.0, -, u]
[1.0]
[u]
[lower]
[k, >, n]
[k]
[n]
[new, NumberIsTooLargeException, (, LocalizedFormats, ., PERMUTATION_EXCEEDS_N, ,, k, ,, n, ,, true, )]
[LocalizedFormats, ., PERMUTATION_EXCEEDS_N]
[LocalizedFormats]
[k]
[n]
[true]
[k, <=, 0]
[k]
[0]
[new, NotStrictlyPositiveException, (, LocalizedFormats, ., PERMUTATION_SIZE, ,, k, )]
[LocalizedFormats, ., PERMUTATION_SIZE]
[LocalizedFormats]
[k]
[getNatural, (, n, )]
[n]
[MathArrays, ., shuffle, (, index, ,, getRandomGenerator, (, ), )]
[MathArrays]
[index]
[getRandomGenerator, (, )]
[MathArrays, ., copyOf, (, index, ,, k, )]
[MathArrays]
[index]
[k]
[c, ., size, (, )]
[c]
[k, >, len]
[k]
[len]
[new, NumberIsTooLargeException, (, LocalizedFormats, ., SAMPLE_SIZE_EXCEEDS_COLLECTION_SIZE, ,, k, ,, len, ,, true, )]
[LocalizedFormats, ., SAMPLE_SIZE_EXCEEDS_COLLECTION_SIZE]
[LocalizedFormats]
[k]
[len]
[true]
[k, <=, 0]
[k]
[0]
[new, NotStrictlyPositiveException, (, LocalizedFormats, ., NUMBER_OF_SAMPLES, ,, k, )]
[LocalizedFormats, ., NUMBER_OF_SAMPLES]
[LocalizedFormats]
[k]
[c, ., toArray, (, )]
[c]
[nextPermutation, (, len, ,, k, )]
[len]
[k]
[new, Object, [, k, ]]
[k]
[0]
[i, <, k]
[i]
[k]
[i, ++]
[i]
[result, [, i, ]]
[result]
[i]
[objects, [, index, [, i, ], ]]
[objects]
[index, [, i, ]]
[index]
[i]
[result]
[getRandomGenerator, (, ), ., setSeed, (, seed, )]
[getRandomGenerator, (, )]
[seed]
[getSecRan, (, ), ., setSeed, (, System, ., currentTimeMillis, (, ), )]
[getSecRan, (, )]
[System, ., currentTimeMillis, (, )]
[System]
[getSecRan, (, ), ., setSeed, (, seed, )]
[getSecRan, (, )]
[seed]
[getRandomGenerator, (, ), ., setSeed, (, System, ., currentTimeMillis, (, ), +, System, ., identityHashCode, (, this, ), )]
[getRandomGenerator, (, )]
[System, ., currentTimeMillis, (, ), +, System, ., identityHashCode, (, this, )]
[System, ., currentTimeMillis, (, )]
[System]
[System, ., identityHashCode, (, this, )]
[System]
[this]
[secRand]
[RandomGeneratorFactory, ., createRandomGenerator, (, SecureRandom, ., getInstance, (, algorithm, ,, provider, ), )]
[RandomGeneratorFactory]
[SecureRandom, ., getInstance, (, algorithm, ,, provider, )]
[SecureRandom]
[algorithm]
[provider]
[rand, ==, null]
[rand]
[null]
[initRan, (, )]
[rand]
[rand]
[new, Well19937c, (, System, ., currentTimeMillis, (, ), +, System, ., identityHashCode, (, this, ), )]
[System, ., currentTimeMillis, (, ), +, System, ., identityHashCode, (, this, )]
[System, ., currentTimeMillis, (, )]
[System]
[System, ., identityHashCode, (, this, )]
[System]
[this]
[secRand, ==, null]
[secRand]
[null]
[secRand]
[RandomGeneratorFactory, ., createRandomGenerator, (, new, SecureRandom, (, ), )]
[RandomGeneratorFactory]
[new, SecureRandom, (, )]
[secRand, ., setSeed, (, System, ., currentTimeMillis, (, ), +, System, ., identityHashCode, (, this, ), )]
[secRand]
[System, ., currentTimeMillis, (, ), +, System, ., identityHashCode, (, this, )]
[System, ., currentTimeMillis, (, )]
[System]
[System, ., identityHashCode, (, this, )]
[System]
[this]
[secRand]
[new, int, [, n, ]]
[n]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[natural, [, i, ]]
[natural]
[i]
[i]
[natural]
