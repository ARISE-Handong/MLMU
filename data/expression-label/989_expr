[2805933088476185789L]
[true]
[true]
[new, NumberTickUnit, (, 1.0, ,, new, DecimalFormat, (, "0", ), )]
[1.0]
[new, DecimalFormat, (, "0", )]
["0"]
[false]
[null]
[label]
[NumberAxis, ., createStandardTickUnits, (, )]
[NumberAxis]
[this, ., rangeType]
[this]
[RangeType, ., FULL]
[RangeType]
[this, ., autoRangeIncludesZero]
[this]
[DEFAULT_AUTO_RANGE_INCLUDES_ZERO]
[this, ., autoRangeStickyZero]
[this]
[DEFAULT_AUTO_RANGE_STICKY_ZERO]
[this, ., tickUnit]
[this]
[DEFAULT_TICK_UNIT]
[this, ., numberFormatOverride]
[this]
[null]
[this, ., markerBand]
[this]
[null]
[this, ., rangeType]
[this]
[rangeType, ==, null]
[rangeType]
[null]
[new, IllegalArgumentException, (, "Null 'rangeType' argument.", )]
["Null 'rangeType' argument."]
[this, ., rangeType]
[this]
[rangeType]
[notifyListeners, (, new, AxisChangeEvent, (, this, ), )]
[new, AxisChangeEvent, (, this, )]
[this]
[this, ., autoRangeIncludesZero]
[this]
[this, ., autoRangeIncludesZero, !=, flag]
[this, ., autoRangeIncludesZero]
[this]
[flag]
[this, ., autoRangeIncludesZero]
[this]
[flag]
[isAutoRange, (, )]
[autoAdjustRange, (, )]
[notifyListeners, (, new, AxisChangeEvent, (, this, ), )]
[new, AxisChangeEvent, (, this, )]
[this]
[this, ., autoRangeStickyZero]
[this]
[this, ., autoRangeStickyZero, !=, flag]
[this, ., autoRangeStickyZero]
[this]
[flag]
[this, ., autoRangeStickyZero]
[this]
[flag]
[isAutoRange, (, )]
[autoAdjustRange, (, )]
[notifyListeners, (, new, AxisChangeEvent, (, this, ), )]
[new, AxisChangeEvent, (, this, )]
[this]
[this, ., tickUnit]
[this]
[setTickUnit, (, unit, ,, true, ,, true, )]
[unit]
[true]
[true]
[unit, ==, null]
[unit]
[null]
[new, IllegalArgumentException, (, "Null 'unit' argument.", )]
["Null 'unit' argument."]
[this, ., tickUnit]
[this]
[unit]
[turnOffAutoSelect]
[setAutoTickUnitSelection, (, false, ,, false, )]
[false]
[false]
[notify]
[notifyListeners, (, new, AxisChangeEvent, (, this, ), )]
[new, AxisChangeEvent, (, this, )]
[this]
[this, ., numberFormatOverride]
[this]
[this, ., numberFormatOverride]
[this]
[formatter]
[notifyListeners, (, new, AxisChangeEvent, (, this, ), )]
[new, AxisChangeEvent, (, this, )]
[this]
[this, ., markerBand]
[this]
[this, ., markerBand]
[this]
[band]
[notifyListeners, (, new, AxisChangeEvent, (, this, ), )]
[new, AxisChangeEvent, (, this, )]
[this]
[isAutoRange, (, )]
[autoAdjustRange, (, )]
[getPlot, (, )]
[plot, ==, null]
[plot]
[null]
[plot, instanceof, ValueAxisPlot]
[plot]
[(, ValueAxisPlot, ), plot]
[plot]
[vap, ., getDataRange, (, this, )]
[vap]
[this]
[r, ==, null]
[r]
[null]
[r]
[getDefaultAutoRange, (, )]
[r, ., getUpperBound, (, )]
[r]
[r, ., getLowerBound, (, )]
[r]
[this, ., rangeType, ==, RangeType, ., POSITIVE]
[this, ., rangeType]
[this]
[RangeType, ., POSITIVE]
[RangeType]
[lower]
[Math, ., max, (, 0.0, ,, lower, )]
[Math]
[0.0]
[lower]
[upper]
[Math, ., max, (, 0.0, ,, upper, )]
[Math]
[0.0]
[upper]
[this, ., rangeType, ==, RangeType, ., NEGATIVE]
[this, ., rangeType]
[this]
[RangeType, ., NEGATIVE]
[RangeType]
[lower]
[Math, ., min, (, 0.0, ,, lower, )]
[Math]
[0.0]
[lower]
[upper]
[Math, ., min, (, 0.0, ,, upper, )]
[Math]
[0.0]
[upper]
[getAutoRangeIncludesZero, (, )]
[lower]
[Math, ., min, (, lower, ,, 0.0, )]
[Math]
[lower]
[0.0]
[upper]
[Math, ., max, (, upper, ,, 0.0, )]
[Math]
[upper]
[0.0]
[upper, -, lower]
[upper]
[lower]
[getFixedAutoRange, (, )]
[fixedAutoRange, >, 0.0]
[fixedAutoRange]
[0.0]
[lower]
[upper, -, fixedAutoRange]
[upper]
[fixedAutoRange]
[getAutoRangeMinimumSize, (, )]
[range, <, minRange]
[range]
[minRange]
[(, minRange, -, range, ), /, 2]
[(, minRange, -, range, )]
[minRange, -, range]
[minRange]
[range]
[2]
[upper]
[upper, +, expand]
[upper]
[expand]
[lower]
[lower, -, expand]
[lower]
[expand]
[lower, ==, upper]
[lower]
[upper]
[Math, ., abs, (, lower, ), /, 10.0]
[Math, ., abs, (, lower, )]
[Math]
[lower]
[10.0]
[lower]
[lower, -, adjust]
[lower]
[adjust]
[upper]
[upper, +, adjust]
[upper]
[adjust]
[this, ., rangeType, ==, RangeType, ., POSITIVE]
[this, ., rangeType]
[this]
[RangeType, ., POSITIVE]
[RangeType]
[lower, <, 0.0]
[lower]
[0.0]
[upper]
[upper, -, lower]
[upper]
[lower]
[lower]
[0.0]
[this, ., rangeType, ==, RangeType, ., NEGATIVE]
[this, ., rangeType]
[this]
[RangeType, ., NEGATIVE]
[RangeType]
[upper, >, 0.0]
[upper]
[0.0]
[lower]
[lower, -, upper]
[lower]
[upper]
[upper]
[0.0]
[getAutoRangeStickyZero, (, )]
[upper, <=, 0.0]
[upper]
[0.0]
[upper]
[Math, ., min, (, 0.0, ,, upper, +, getUpperMargin, (, ), *, range, )]
[Math]
[0.0]
[upper, +, getUpperMargin, (, ), *, range]
[upper]
[getUpperMargin, (, ), *, range]
[getUpperMargin, (, )]
[range]
[upper]
[upper, +, getUpperMargin, (, ), *, range]
[upper]
[getUpperMargin, (, ), *, range]
[getUpperMargin, (, )]
[range]
[lower, >=, 0.0]
[lower]
[0.0]
[lower]
[Math, ., max, (, 0.0, ,, lower, -, getLowerMargin, (, ), *, range, )]
[Math]
[0.0]
[lower, -, getLowerMargin, (, ), *, range]
[lower]
[getLowerMargin, (, ), *, range]
[getLowerMargin, (, )]
[range]
[lower]
[lower, -, getLowerMargin, (, ), *, range]
[lower]
[getLowerMargin, (, ), *, range]
[getLowerMargin, (, )]
[range]
[upper]
[upper, +, getUpperMargin, (, ), *, range]
[upper]
[getUpperMargin, (, ), *, range]
[getUpperMargin, (, )]
[range]
[lower]
[lower, -, getLowerMargin, (, ), *, range]
[lower]
[getLowerMargin, (, ), *, range]
[getLowerMargin, (, )]
[range]
[setRange, (, new, Range, (, lower, ,, upper, ), ,, false, ,, false, )]
[new, Range, (, lower, ,, upper, )]
[lower]
[upper]
[false]
[false]
[getRange, (, )]
[range, ., getLowerBound, (, )]
[range]
[range, ., getUpperBound, (, )]
[range]
[0.0]
[0.0]
[RectangleEdge, ., isTopOrBottom, (, edge, )]
[RectangleEdge]
[edge]
[min]
[area, ., getX, (, )]
[area]
[max]
[area, ., getMaxX, (, )]
[area]
[RectangleEdge, ., isLeftOrRight, (, edge, )]
[RectangleEdge]
[edge]
[max]
[area, ., getMinY, (, )]
[area]
[min]
[area, ., getMaxY, (, )]
[area]
[isInverted, (, )]
[max, -, (, (, value, -, axisMin, ), /, (, axisMax, -, axisMin, ), ), *, (, max, -, min, )]
[max]
[(, (, value, -, axisMin, ), /, (, axisMax, -, axisMin, ), ), *, (, max, -, min, )]
[(, (, value, -, axisMin, ), /, (, axisMax, -, axisMin, ), )]
[(, value, -, axisMin, ), /, (, axisMax, -, axisMin, )]
[(, value, -, axisMin, )]
[value, -, axisMin]
[value]
[axisMin]
[(, axisMax, -, axisMin, )]
[axisMax, -, axisMin]
[axisMax]
[axisMin]
[(, max, -, min, )]
[max, -, min]
[max]
[min]
[min, +, (, (, value, -, axisMin, ), /, (, axisMax, -, axisMin, ), ), *, (, max, -, min, )]
[min]
[(, (, value, -, axisMin, ), /, (, axisMax, -, axisMin, ), ), *, (, max, -, min, )]
[(, (, value, -, axisMin, ), /, (, axisMax, -, axisMin, ), )]
[(, value, -, axisMin, ), /, (, axisMax, -, axisMin, )]
[(, value, -, axisMin, )]
[value, -, axisMin]
[value]
[axisMin]
[(, axisMax, -, axisMin, )]
[axisMax, -, axisMin]
[axisMax]
[axisMin]
[(, max, -, min, )]
[max, -, min]
[max]
[min]
[getRange, (, )]
[range, ., getLowerBound, (, )]
[range]
[range, ., getUpperBound, (, )]
[range]
[0.0]
[0.0]
[RectangleEdge, ., isTopOrBottom, (, edge, )]
[RectangleEdge]
[edge]
[min]
[area, ., getX, (, )]
[area]
[max]
[area, ., getMaxX, (, )]
[area]
[RectangleEdge, ., isLeftOrRight, (, edge, )]
[RectangleEdge]
[edge]
[min]
[area, ., getMaxY, (, )]
[area]
[max]
[area, ., getY, (, )]
[area]
[isInverted, (, )]
[axisMax, -, (, java2DValue, -, min, ), /, (, max, -, min, ), *, (, axisMax, -, axisMin, )]
[axisMax]
[(, java2DValue, -, min, ), /, (, max, -, min, ), *, (, axisMax, -, axisMin, )]
[(, java2DValue, -, min, ), /, (, max, -, min, )]
[(, java2DValue, -, min, )]
[java2DValue, -, min]
[java2DValue]
[min]
[(, max, -, min, )]
[max, -, min]
[max]
[min]
[(, axisMax, -, axisMin, )]
[axisMax, -, axisMin]
[axisMax]
[axisMin]
[axisMin, +, (, java2DValue, -, min, ), /, (, max, -, min, ), *, (, axisMax, -, axisMin, )]
[axisMin]
[(, java2DValue, -, min, ), /, (, max, -, min, ), *, (, axisMax, -, axisMin, )]
[(, java2DValue, -, min, ), /, (, max, -, min, )]
[(, java2DValue, -, min, )]
[java2DValue, -, min]
[java2DValue]
[min]
[(, max, -, min, )]
[max, -, min]
[max]
[min]
[(, axisMax, -, axisMin, )]
[axisMax, -, axisMin]
[axisMax]
[axisMin]
[getTickUnit, (, ), ., getSize, (, )]
[getTickUnit, (, )]
[Math, ., ceil, (, getRange, (, ), ., getLowerBound, (, ), /, unit, )]
[Math]
[getRange, (, ), ., getLowerBound, (, ), /, unit]
[getRange, (, ), ., getLowerBound, (, )]
[getRange, (, )]
[unit]
[index, *, unit]
[index]
[unit]
[getTickUnit, (, ), ., getSize, (, )]
[getTickUnit, (, )]
[Math, ., floor, (, getRange, (, ), ., getUpperBound, (, ), /, unit, )]
[Math]
[getRange, (, ), ., getUpperBound, (, ), /, unit]
[getRange, (, ), ., getUpperBound, (, )]
[getRange, (, )]
[unit]
[index, *, unit]
[index]
[unit]
[getTickUnit, (, ), ., getSize, (, )]
[getTickUnit, (, )]
[getRange, (, )]
[(, int, ), (, Math, ., floor, (, range, ., getUpperBound, (, ), /, unit, ), -, Math, ., ceil, (, range, ., getLowerBound, (, ), /, unit, ), +, 1, )]
[(, Math, ., floor, (, range, ., getUpperBound, (, ), /, unit, ), -, Math, ., ceil, (, range, ., getLowerBound, (, ), /, unit, ), +, 1, )]
[Math, ., floor, (, range, ., getUpperBound, (, ), /, unit, ), -, Math, ., ceil, (, range, ., getLowerBound, (, ), /, unit, ), +, 1]
[Math, ., floor, (, range, ., getUpperBound, (, ), /, unit, ), -, Math, ., ceil, (, range, ., getLowerBound, (, ), /, unit, )]
[Math, ., floor, (, range, ., getUpperBound, (, ), /, unit, )]
[Math]
[range, ., getUpperBound, (, ), /, unit]
[range, ., getUpperBound, (, )]
[range]
[unit]
[Math, ., ceil, (, range, ., getLowerBound, (, ), /, unit, )]
[Math]
[range, ., getLowerBound, (, ), /, unit]
[range, ., getLowerBound, (, )]
[range]
[unit]
[1]
[null]
[!, isVisible, (, )]
[isVisible, (, )]
[state]
[new, AxisState, (, cursor, )]
[cursor]
[refreshTicks, (, g2, ,, state, ,, dataArea, ,, edge, )]
[g2]
[state]
[dataArea]
[edge]
[state, ., setTicks, (, ticks, )]
[state]
[ticks]
[state]
[state]
[drawTickMarksAndLabels, (, g2, ,, cursor, ,, plotArea, ,, dataArea, ,, edge, ,, plotState, )]
[g2]
[cursor]
[plotArea]
[dataArea]
[edge]
[plotState]
[state]
[drawLabel, (, getLabel, (, ), ,, g2, ,, plotArea, ,, dataArea, ,, edge, ,, state, ,, plotState, )]
[getLabel, (, )]
[g2]
[plotArea]
[dataArea]
[edge]
[state]
[plotState]
[createAndAddEntity, (, cursor, ,, state, ,, dataArea, ,, edge, ,, plotState, )]
[cursor]
[state]
[dataArea]
[edge]
[plotState]
[state]
[new, TickUnits, (, )]
[new, DecimalFormat, (, "0.0000000000", )]
["0.0000000000"]
[new, DecimalFormat, (, "0.000000000", )]
["0.000000000"]
[new, DecimalFormat, (, "0.00000000", )]
["0.00000000"]
[new, DecimalFormat, (, "0.0000000", )]
["0.0000000"]
[new, DecimalFormat, (, "0.000000", )]
["0.000000"]
[new, DecimalFormat, (, "0.00000", )]
["0.00000"]
[new, DecimalFormat, (, "0.0000", )]
["0.0000"]
[new, DecimalFormat, (, "0.000", )]
["0.000"]
[new, DecimalFormat, (, "0.00", )]
["0.00"]
[new, DecimalFormat, (, "0.0", )]
["0.0"]
[new, DecimalFormat, (, "#,##0", )]
["#,##0"]
[new, DecimalFormat, (, "#,###,##0", )]
["#,###,##0"]
[new, DecimalFormat, (, "#,###,###,##0", )]
["#,###,###,##0"]
[units, ., add, (, new, NumberTickUnit, (, 0.000000001, ,, df00, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 0.000000001, ,, df00, ,, 2, )]
[0.000000001]
[df00]
[2]
[units, ., add, (, new, NumberTickUnit, (, 0.00000001, ,, df0, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 0.00000001, ,, df0, ,, 2, )]
[0.00000001]
[df0]
[2]
[units, ., add, (, new, NumberTickUnit, (, 0.0000001, ,, df1, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 0.0000001, ,, df1, ,, 2, )]
[0.0000001]
[df1]
[2]
[units, ., add, (, new, NumberTickUnit, (, 0.000001, ,, df2, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 0.000001, ,, df2, ,, 2, )]
[0.000001]
[df2]
[2]
[units, ., add, (, new, NumberTickUnit, (, 0.00001, ,, df3, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 0.00001, ,, df3, ,, 2, )]
[0.00001]
[df3]
[2]
[units, ., add, (, new, NumberTickUnit, (, 0.0001, ,, df4, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 0.0001, ,, df4, ,, 2, )]
[0.0001]
[df4]
[2]
[units, ., add, (, new, NumberTickUnit, (, 0.001, ,, df5, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 0.001, ,, df5, ,, 2, )]
[0.001]
[df5]
[2]
[units, ., add, (, new, NumberTickUnit, (, 0.01, ,, df6, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 0.01, ,, df6, ,, 2, )]
[0.01]
[df6]
[2]
[units, ., add, (, new, NumberTickUnit, (, 0.1, ,, df7, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 0.1, ,, df7, ,, 2, )]
[0.1]
[df7]
[2]
[units, ., add, (, new, NumberTickUnit, (, 1, ,, df8, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 1, ,, df8, ,, 2, )]
[1]
[df8]
[2]
[units, ., add, (, new, NumberTickUnit, (, 10, ,, df8, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 10, ,, df8, ,, 2, )]
[10]
[df8]
[2]
[units, ., add, (, new, NumberTickUnit, (, 100, ,, df8, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 100, ,, df8, ,, 2, )]
[100]
[df8]
[2]
[units, ., add, (, new, NumberTickUnit, (, 1000, ,, df8, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 1000, ,, df8, ,, 2, )]
[1000]
[df8]
[2]
[units, ., add, (, new, NumberTickUnit, (, 10000, ,, df8, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 10000, ,, df8, ,, 2, )]
[10000]
[df8]
[2]
[units, ., add, (, new, NumberTickUnit, (, 100000, ,, df8, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 100000, ,, df8, ,, 2, )]
[100000]
[df8]
[2]
[units, ., add, (, new, NumberTickUnit, (, 1000000, ,, df9, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 1000000, ,, df9, ,, 2, )]
[1000000]
[df9]
[2]
[units, ., add, (, new, NumberTickUnit, (, 10000000, ,, df9, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 10000000, ,, df9, ,, 2, )]
[10000000]
[df9]
[2]
[units, ., add, (, new, NumberTickUnit, (, 100000000, ,, df9, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 100000000, ,, df9, ,, 2, )]
[100000000]
[df9]
[2]
[units, ., add, (, new, NumberTickUnit, (, 1000000000, ,, df10, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 1000000000, ,, df10, ,, 2, )]
[1000000000]
[df10]
[2]
[units, ., add, (, new, NumberTickUnit, (, 10000000000.0, ,, df10, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 10000000000.0, ,, df10, ,, 2, )]
[10000000000.0]
[df10]
[2]
[units, ., add, (, new, NumberTickUnit, (, 100000000000.0, ,, df10, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 100000000000.0, ,, df10, ,, 2, )]
[100000000000.0]
[df10]
[2]
[units, ., add, (, new, NumberTickUnit, (, 0.0000000025, ,, df000, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 0.0000000025, ,, df000, ,, 5, )]
[0.0000000025]
[df000]
[5]
[units, ., add, (, new, NumberTickUnit, (, 0.000000025, ,, df00, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 0.000000025, ,, df00, ,, 5, )]
[0.000000025]
[df00]
[5]
[units, ., add, (, new, NumberTickUnit, (, 0.00000025, ,, df0, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 0.00000025, ,, df0, ,, 5, )]
[0.00000025]
[df0]
[5]
[units, ., add, (, new, NumberTickUnit, (, 0.0000025, ,, df1, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 0.0000025, ,, df1, ,, 5, )]
[0.0000025]
[df1]
[5]
[units, ., add, (, new, NumberTickUnit, (, 0.000025, ,, df2, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 0.000025, ,, df2, ,, 5, )]
[0.000025]
[df2]
[5]
[units, ., add, (, new, NumberTickUnit, (, 0.00025, ,, df3, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 0.00025, ,, df3, ,, 5, )]
[0.00025]
[df3]
[5]
[units, ., add, (, new, NumberTickUnit, (, 0.0025, ,, df4, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 0.0025, ,, df4, ,, 5, )]
[0.0025]
[df4]
[5]
[units, ., add, (, new, NumberTickUnit, (, 0.025, ,, df5, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 0.025, ,, df5, ,, 5, )]
[0.025]
[df5]
[5]
[units, ., add, (, new, NumberTickUnit, (, 0.25, ,, df6, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 0.25, ,, df6, ,, 5, )]
[0.25]
[df6]
[5]
[units, ., add, (, new, NumberTickUnit, (, 2.5, ,, df7, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 2.5, ,, df7, ,, 5, )]
[2.5]
[df7]
[5]
[units, ., add, (, new, NumberTickUnit, (, 25, ,, df8, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 25, ,, df8, ,, 5, )]
[25]
[df8]
[5]
[units, ., add, (, new, NumberTickUnit, (, 250, ,, df8, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 250, ,, df8, ,, 5, )]
[250]
[df8]
[5]
[units, ., add, (, new, NumberTickUnit, (, 2500, ,, df8, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 2500, ,, df8, ,, 5, )]
[2500]
[df8]
[5]
[units, ., add, (, new, NumberTickUnit, (, 25000, ,, df8, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 25000, ,, df8, ,, 5, )]
[25000]
[df8]
[5]
[units, ., add, (, new, NumberTickUnit, (, 250000, ,, df8, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 250000, ,, df8, ,, 5, )]
[250000]
[df8]
[5]
[units, ., add, (, new, NumberTickUnit, (, 2500000, ,, df9, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 2500000, ,, df9, ,, 5, )]
[2500000]
[df9]
[5]
[units, ., add, (, new, NumberTickUnit, (, 25000000, ,, df9, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 25000000, ,, df9, ,, 5, )]
[25000000]
[df9]
[5]
[units, ., add, (, new, NumberTickUnit, (, 250000000, ,, df9, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 250000000, ,, df9, ,, 5, )]
[250000000]
[df9]
[5]
[units, ., add, (, new, NumberTickUnit, (, 2500000000.0, ,, df10, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 2500000000.0, ,, df10, ,, 5, )]
[2500000000.0]
[df10]
[5]
[units, ., add, (, new, NumberTickUnit, (, 25000000000.0, ,, df10, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 25000000000.0, ,, df10, ,, 5, )]
[25000000000.0]
[df10]
[5]
[units, ., add, (, new, NumberTickUnit, (, 250000000000.0, ,, df10, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 250000000000.0, ,, df10, ,, 5, )]
[250000000000.0]
[df10]
[5]
[units, ., add, (, new, NumberTickUnit, (, 0.000000005, ,, df00, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 0.000000005, ,, df00, ,, 5, )]
[0.000000005]
[df00]
[5]
[units, ., add, (, new, NumberTickUnit, (, 0.00000005, ,, df0, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 0.00000005, ,, df0, ,, 5, )]
[0.00000005]
[df0]
[5]
[units, ., add, (, new, NumberTickUnit, (, 0.0000005, ,, df1, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 0.0000005, ,, df1, ,, 5, )]
[0.0000005]
[df1]
[5]
[units, ., add, (, new, NumberTickUnit, (, 0.000005, ,, df2, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 0.000005, ,, df2, ,, 5, )]
[0.000005]
[df2]
[5]
[units, ., add, (, new, NumberTickUnit, (, 0.00005, ,, df3, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 0.00005, ,, df3, ,, 5, )]
[0.00005]
[df3]
[5]
[units, ., add, (, new, NumberTickUnit, (, 0.0005, ,, df4, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 0.0005, ,, df4, ,, 5, )]
[0.0005]
[df4]
[5]
[units, ., add, (, new, NumberTickUnit, (, 0.005, ,, df5, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 0.005, ,, df5, ,, 5, )]
[0.005]
[df5]
[5]
[units, ., add, (, new, NumberTickUnit, (, 0.05, ,, df6, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 0.05, ,, df6, ,, 5, )]
[0.05]
[df6]
[5]
[units, ., add, (, new, NumberTickUnit, (, 0.5, ,, df7, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 0.5, ,, df7, ,, 5, )]
[0.5]
[df7]
[5]
[units, ., add, (, new, NumberTickUnit, (, 5L, ,, df8, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 5L, ,, df8, ,, 5, )]
[5L]
[df8]
[5]
[units, ., add, (, new, NumberTickUnit, (, 50L, ,, df8, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 50L, ,, df8, ,, 5, )]
[50L]
[df8]
[5]
[units, ., add, (, new, NumberTickUnit, (, 500L, ,, df8, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 500L, ,, df8, ,, 5, )]
[500L]
[df8]
[5]
[units, ., add, (, new, NumberTickUnit, (, 5000L, ,, df8, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 5000L, ,, df8, ,, 5, )]
[5000L]
[df8]
[5]
[units, ., add, (, new, NumberTickUnit, (, 50000L, ,, df8, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 50000L, ,, df8, ,, 5, )]
[50000L]
[df8]
[5]
[units, ., add, (, new, NumberTickUnit, (, 500000L, ,, df8, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 500000L, ,, df8, ,, 5, )]
[500000L]
[df8]
[5]
[units, ., add, (, new, NumberTickUnit, (, 5000000L, ,, df9, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 5000000L, ,, df9, ,, 5, )]
[5000000L]
[df9]
[5]
[units, ., add, (, new, NumberTickUnit, (, 50000000L, ,, df9, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 50000000L, ,, df9, ,, 5, )]
[50000000L]
[df9]
[5]
[units, ., add, (, new, NumberTickUnit, (, 500000000L, ,, df9, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 500000000L, ,, df9, ,, 5, )]
[500000000L]
[df9]
[5]
[units, ., add, (, new, NumberTickUnit, (, 5000000000L, ,, df10, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 5000000000L, ,, df10, ,, 5, )]
[5000000000L]
[df10]
[5]
[units, ., add, (, new, NumberTickUnit, (, 50000000000L, ,, df10, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 50000000000L, ,, df10, ,, 5, )]
[50000000000L]
[df10]
[5]
[units, ., add, (, new, NumberTickUnit, (, 500000000000L, ,, df10, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 500000000000L, ,, df10, ,, 5, )]
[500000000000L]
[df10]
[5]
[units]
[new, TickUnits, (, )]
[new, DecimalFormat, (, "0", )]
["0"]
[new, DecimalFormat, (, "#,##0", )]
["#,##0"]
[units, ., add, (, new, NumberTickUnit, (, 1, ,, df0, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 1, ,, df0, ,, 2, )]
[1]
[df0]
[2]
[units, ., add, (, new, NumberTickUnit, (, 2, ,, df0, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 2, ,, df0, ,, 2, )]
[2]
[df0]
[2]
[units, ., add, (, new, NumberTickUnit, (, 5, ,, df0, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 5, ,, df0, ,, 5, )]
[5]
[df0]
[5]
[units, ., add, (, new, NumberTickUnit, (, 10, ,, df0, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 10, ,, df0, ,, 2, )]
[10]
[df0]
[2]
[units, ., add, (, new, NumberTickUnit, (, 20, ,, df0, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 20, ,, df0, ,, 2, )]
[20]
[df0]
[2]
[units, ., add, (, new, NumberTickUnit, (, 50, ,, df0, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 50, ,, df0, ,, 5, )]
[50]
[df0]
[5]
[units, ., add, (, new, NumberTickUnit, (, 100, ,, df0, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 100, ,, df0, ,, 2, )]
[100]
[df0]
[2]
[units, ., add, (, new, NumberTickUnit, (, 200, ,, df0, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 200, ,, df0, ,, 2, )]
[200]
[df0]
[2]
[units, ., add, (, new, NumberTickUnit, (, 500, ,, df0, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 500, ,, df0, ,, 5, )]
[500]
[df0]
[5]
[units, ., add, (, new, NumberTickUnit, (, 1000, ,, df1, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 1000, ,, df1, ,, 2, )]
[1000]
[df1]
[2]
[units, ., add, (, new, NumberTickUnit, (, 2000, ,, df1, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 2000, ,, df1, ,, 2, )]
[2000]
[df1]
[2]
[units, ., add, (, new, NumberTickUnit, (, 5000, ,, df1, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 5000, ,, df1, ,, 5, )]
[5000]
[df1]
[5]
[units, ., add, (, new, NumberTickUnit, (, 10000, ,, df1, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 10000, ,, df1, ,, 2, )]
[10000]
[df1]
[2]
[units, ., add, (, new, NumberTickUnit, (, 20000, ,, df1, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 20000, ,, df1, ,, 2, )]
[20000]
[df1]
[2]
[units, ., add, (, new, NumberTickUnit, (, 50000, ,, df1, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 50000, ,, df1, ,, 5, )]
[50000]
[df1]
[5]
[units, ., add, (, new, NumberTickUnit, (, 100000, ,, df1, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 100000, ,, df1, ,, 2, )]
[100000]
[df1]
[2]
[units, ., add, (, new, NumberTickUnit, (, 200000, ,, df1, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 200000, ,, df1, ,, 2, )]
[200000]
[df1]
[2]
[units, ., add, (, new, NumberTickUnit, (, 500000, ,, df1, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 500000, ,, df1, ,, 5, )]
[500000]
[df1]
[5]
[units, ., add, (, new, NumberTickUnit, (, 1000000, ,, df1, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 1000000, ,, df1, ,, 2, )]
[1000000]
[df1]
[2]
[units, ., add, (, new, NumberTickUnit, (, 2000000, ,, df1, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 2000000, ,, df1, ,, 2, )]
[2000000]
[df1]
[2]
[units, ., add, (, new, NumberTickUnit, (, 5000000, ,, df1, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 5000000, ,, df1, ,, 5, )]
[5000000]
[df1]
[5]
[units, ., add, (, new, NumberTickUnit, (, 10000000, ,, df1, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 10000000, ,, df1, ,, 2, )]
[10000000]
[df1]
[2]
[units, ., add, (, new, NumberTickUnit, (, 20000000, ,, df1, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 20000000, ,, df1, ,, 2, )]
[20000000]
[df1]
[2]
[units, ., add, (, new, NumberTickUnit, (, 50000000, ,, df1, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 50000000, ,, df1, ,, 5, )]
[50000000]
[df1]
[5]
[units, ., add, (, new, NumberTickUnit, (, 100000000, ,, df1, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 100000000, ,, df1, ,, 2, )]
[100000000]
[df1]
[2]
[units, ., add, (, new, NumberTickUnit, (, 200000000, ,, df1, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 200000000, ,, df1, ,, 2, )]
[200000000]
[df1]
[2]
[units, ., add, (, new, NumberTickUnit, (, 500000000, ,, df1, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 500000000, ,, df1, ,, 5, )]
[500000000]
[df1]
[5]
[units, ., add, (, new, NumberTickUnit, (, 1000000000, ,, df1, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 1000000000, ,, df1, ,, 2, )]
[1000000000]
[df1]
[2]
[units, ., add, (, new, NumberTickUnit, (, 2000000000, ,, df1, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 2000000000, ,, df1, ,, 2, )]
[2000000000]
[df1]
[2]
[units, ., add, (, new, NumberTickUnit, (, 5000000000.0, ,, df1, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 5000000000.0, ,, df1, ,, 5, )]
[5000000000.0]
[df1]
[5]
[units, ., add, (, new, NumberTickUnit, (, 10000000000.0, ,, df1, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 10000000000.0, ,, df1, ,, 2, )]
[10000000000.0]
[df1]
[2]
[units]
[new, TickUnits, (, )]
[NumberFormat, ., getNumberInstance, (, locale, )]
[NumberFormat]
[locale]
[units, ., add, (, new, NumberTickUnit, (, 0.0000001, ,, numberFormat, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 0.0000001, ,, numberFormat, ,, 2, )]
[0.0000001]
[numberFormat]
[2]
[units, ., add, (, new, NumberTickUnit, (, 0.000001, ,, numberFormat, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 0.000001, ,, numberFormat, ,, 2, )]
[0.000001]
[numberFormat]
[2]
[units, ., add, (, new, NumberTickUnit, (, 0.00001, ,, numberFormat, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 0.00001, ,, numberFormat, ,, 2, )]
[0.00001]
[numberFormat]
[2]
[units, ., add, (, new, NumberTickUnit, (, 0.0001, ,, numberFormat, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 0.0001, ,, numberFormat, ,, 2, )]
[0.0001]
[numberFormat]
[2]
[units, ., add, (, new, NumberTickUnit, (, 0.001, ,, numberFormat, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 0.001, ,, numberFormat, ,, 2, )]
[0.001]
[numberFormat]
[2]
[units, ., add, (, new, NumberTickUnit, (, 0.01, ,, numberFormat, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 0.01, ,, numberFormat, ,, 2, )]
[0.01]
[numberFormat]
[2]
[units, ., add, (, new, NumberTickUnit, (, 0.1, ,, numberFormat, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 0.1, ,, numberFormat, ,, 2, )]
[0.1]
[numberFormat]
[2]
[units, ., add, (, new, NumberTickUnit, (, 1, ,, numberFormat, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 1, ,, numberFormat, ,, 2, )]
[1]
[numberFormat]
[2]
[units, ., add, (, new, NumberTickUnit, (, 10, ,, numberFormat, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 10, ,, numberFormat, ,, 2, )]
[10]
[numberFormat]
[2]
[units, ., add, (, new, NumberTickUnit, (, 100, ,, numberFormat, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 100, ,, numberFormat, ,, 2, )]
[100]
[numberFormat]
[2]
[units, ., add, (, new, NumberTickUnit, (, 1000, ,, numberFormat, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 1000, ,, numberFormat, ,, 2, )]
[1000]
[numberFormat]
[2]
[units, ., add, (, new, NumberTickUnit, (, 10000, ,, numberFormat, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 10000, ,, numberFormat, ,, 2, )]
[10000]
[numberFormat]
[2]
[units, ., add, (, new, NumberTickUnit, (, 100000, ,, numberFormat, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 100000, ,, numberFormat, ,, 2, )]
[100000]
[numberFormat]
[2]
[units, ., add, (, new, NumberTickUnit, (, 1000000, ,, numberFormat, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 1000000, ,, numberFormat, ,, 2, )]
[1000000]
[numberFormat]
[2]
[units, ., add, (, new, NumberTickUnit, (, 10000000, ,, numberFormat, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 10000000, ,, numberFormat, ,, 2, )]
[10000000]
[numberFormat]
[2]
[units, ., add, (, new, NumberTickUnit, (, 100000000, ,, numberFormat, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 100000000, ,, numberFormat, ,, 2, )]
[100000000]
[numberFormat]
[2]
[units, ., add, (, new, NumberTickUnit, (, 1000000000, ,, numberFormat, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 1000000000, ,, numberFormat, ,, 2, )]
[1000000000]
[numberFormat]
[2]
[units, ., add, (, new, NumberTickUnit, (, 10000000000.0, ,, numberFormat, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 10000000000.0, ,, numberFormat, ,, 2, )]
[10000000000.0]
[numberFormat]
[2]
[units, ., add, (, new, NumberTickUnit, (, 0.00000025, ,, numberFormat, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 0.00000025, ,, numberFormat, ,, 5, )]
[0.00000025]
[numberFormat]
[5]
[units, ., add, (, new, NumberTickUnit, (, 0.0000025, ,, numberFormat, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 0.0000025, ,, numberFormat, ,, 5, )]
[0.0000025]
[numberFormat]
[5]
[units, ., add, (, new, NumberTickUnit, (, 0.000025, ,, numberFormat, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 0.000025, ,, numberFormat, ,, 5, )]
[0.000025]
[numberFormat]
[5]
[units, ., add, (, new, NumberTickUnit, (, 0.00025, ,, numberFormat, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 0.00025, ,, numberFormat, ,, 5, )]
[0.00025]
[numberFormat]
[5]
[units, ., add, (, new, NumberTickUnit, (, 0.0025, ,, numberFormat, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 0.0025, ,, numberFormat, ,, 5, )]
[0.0025]
[numberFormat]
[5]
[units, ., add, (, new, NumberTickUnit, (, 0.025, ,, numberFormat, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 0.025, ,, numberFormat, ,, 5, )]
[0.025]
[numberFormat]
[5]
[units, ., add, (, new, NumberTickUnit, (, 0.25, ,, numberFormat, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 0.25, ,, numberFormat, ,, 5, )]
[0.25]
[numberFormat]
[5]
[units, ., add, (, new, NumberTickUnit, (, 2.5, ,, numberFormat, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 2.5, ,, numberFormat, ,, 5, )]
[2.5]
[numberFormat]
[5]
[units, ., add, (, new, NumberTickUnit, (, 25, ,, numberFormat, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 25, ,, numberFormat, ,, 5, )]
[25]
[numberFormat]
[5]
[units, ., add, (, new, NumberTickUnit, (, 250, ,, numberFormat, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 250, ,, numberFormat, ,, 5, )]
[250]
[numberFormat]
[5]
[units, ., add, (, new, NumberTickUnit, (, 2500, ,, numberFormat, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 2500, ,, numberFormat, ,, 5, )]
[2500]
[numberFormat]
[5]
[units, ., add, (, new, NumberTickUnit, (, 25000, ,, numberFormat, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 25000, ,, numberFormat, ,, 5, )]
[25000]
[numberFormat]
[5]
[units, ., add, (, new, NumberTickUnit, (, 250000, ,, numberFormat, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 250000, ,, numberFormat, ,, 5, )]
[250000]
[numberFormat]
[5]
[units, ., add, (, new, NumberTickUnit, (, 2500000, ,, numberFormat, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 2500000, ,, numberFormat, ,, 5, )]
[2500000]
[numberFormat]
[5]
[units, ., add, (, new, NumberTickUnit, (, 25000000, ,, numberFormat, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 25000000, ,, numberFormat, ,, 5, )]
[25000000]
[numberFormat]
[5]
[units, ., add, (, new, NumberTickUnit, (, 250000000, ,, numberFormat, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 250000000, ,, numberFormat, ,, 5, )]
[250000000]
[numberFormat]
[5]
[units, ., add, (, new, NumberTickUnit, (, 2500000000.0, ,, numberFormat, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 2500000000.0, ,, numberFormat, ,, 5, )]
[2500000000.0]
[numberFormat]
[5]
[units, ., add, (, new, NumberTickUnit, (, 25000000000.0, ,, numberFormat, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 25000000000.0, ,, numberFormat, ,, 5, )]
[25000000000.0]
[numberFormat]
[5]
[units, ., add, (, new, NumberTickUnit, (, 0.0000005, ,, numberFormat, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 0.0000005, ,, numberFormat, ,, 5, )]
[0.0000005]
[numberFormat]
[5]
[units, ., add, (, new, NumberTickUnit, (, 0.000005, ,, numberFormat, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 0.000005, ,, numberFormat, ,, 5, )]
[0.000005]
[numberFormat]
[5]
[units, ., add, (, new, NumberTickUnit, (, 0.00005, ,, numberFormat, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 0.00005, ,, numberFormat, ,, 5, )]
[0.00005]
[numberFormat]
[5]
[units, ., add, (, new, NumberTickUnit, (, 0.0005, ,, numberFormat, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 0.0005, ,, numberFormat, ,, 5, )]
[0.0005]
[numberFormat]
[5]
[units, ., add, (, new, NumberTickUnit, (, 0.005, ,, numberFormat, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 0.005, ,, numberFormat, ,, 5, )]
[0.005]
[numberFormat]
[5]
[units, ., add, (, new, NumberTickUnit, (, 0.05, ,, numberFormat, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 0.05, ,, numberFormat, ,, 5, )]
[0.05]
[numberFormat]
[5]
[units, ., add, (, new, NumberTickUnit, (, 0.5, ,, numberFormat, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 0.5, ,, numberFormat, ,, 5, )]
[0.5]
[numberFormat]
[5]
[units, ., add, (, new, NumberTickUnit, (, 5L, ,, numberFormat, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 5L, ,, numberFormat, ,, 5, )]
[5L]
[numberFormat]
[5]
[units, ., add, (, new, NumberTickUnit, (, 50L, ,, numberFormat, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 50L, ,, numberFormat, ,, 5, )]
[50L]
[numberFormat]
[5]
[units, ., add, (, new, NumberTickUnit, (, 500L, ,, numberFormat, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 500L, ,, numberFormat, ,, 5, )]
[500L]
[numberFormat]
[5]
[units, ., add, (, new, NumberTickUnit, (, 5000L, ,, numberFormat, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 5000L, ,, numberFormat, ,, 5, )]
[5000L]
[numberFormat]
[5]
[units, ., add, (, new, NumberTickUnit, (, 50000L, ,, numberFormat, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 50000L, ,, numberFormat, ,, 5, )]
[50000L]
[numberFormat]
[5]
[units, ., add, (, new, NumberTickUnit, (, 500000L, ,, numberFormat, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 500000L, ,, numberFormat, ,, 5, )]
[500000L]
[numberFormat]
[5]
[units, ., add, (, new, NumberTickUnit, (, 5000000L, ,, numberFormat, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 5000000L, ,, numberFormat, ,, 5, )]
[5000000L]
[numberFormat]
[5]
[units, ., add, (, new, NumberTickUnit, (, 50000000L, ,, numberFormat, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 50000000L, ,, numberFormat, ,, 5, )]
[50000000L]
[numberFormat]
[5]
[units, ., add, (, new, NumberTickUnit, (, 500000000L, ,, numberFormat, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 500000000L, ,, numberFormat, ,, 5, )]
[500000000L]
[numberFormat]
[5]
[units, ., add, (, new, NumberTickUnit, (, 5000000000L, ,, numberFormat, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 5000000000L, ,, numberFormat, ,, 5, )]
[5000000000L]
[numberFormat]
[5]
[units, ., add, (, new, NumberTickUnit, (, 50000000000L, ,, numberFormat, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 50000000000L, ,, numberFormat, ,, 5, )]
[50000000000L]
[numberFormat]
[5]
[units]
[new, TickUnits, (, )]
[NumberFormat, ., getNumberInstance, (, locale, )]
[NumberFormat]
[locale]
[units, ., add, (, new, NumberTickUnit, (, 1, ,, numberFormat, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 1, ,, numberFormat, ,, 2, )]
[1]
[numberFormat]
[2]
[units, ., add, (, new, NumberTickUnit, (, 2, ,, numberFormat, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 2, ,, numberFormat, ,, 2, )]
[2]
[numberFormat]
[2]
[units, ., add, (, new, NumberTickUnit, (, 5, ,, numberFormat, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 5, ,, numberFormat, ,, 5, )]
[5]
[numberFormat]
[5]
[units, ., add, (, new, NumberTickUnit, (, 10, ,, numberFormat, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 10, ,, numberFormat, ,, 2, )]
[10]
[numberFormat]
[2]
[units, ., add, (, new, NumberTickUnit, (, 20, ,, numberFormat, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 20, ,, numberFormat, ,, 2, )]
[20]
[numberFormat]
[2]
[units, ., add, (, new, NumberTickUnit, (, 50, ,, numberFormat, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 50, ,, numberFormat, ,, 5, )]
[50]
[numberFormat]
[5]
[units, ., add, (, new, NumberTickUnit, (, 100, ,, numberFormat, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 100, ,, numberFormat, ,, 2, )]
[100]
[numberFormat]
[2]
[units, ., add, (, new, NumberTickUnit, (, 200, ,, numberFormat, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 200, ,, numberFormat, ,, 2, )]
[200]
[numberFormat]
[2]
[units, ., add, (, new, NumberTickUnit, (, 500, ,, numberFormat, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 500, ,, numberFormat, ,, 5, )]
[500]
[numberFormat]
[5]
[units, ., add, (, new, NumberTickUnit, (, 1000, ,, numberFormat, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 1000, ,, numberFormat, ,, 2, )]
[1000]
[numberFormat]
[2]
[units, ., add, (, new, NumberTickUnit, (, 2000, ,, numberFormat, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 2000, ,, numberFormat, ,, 2, )]
[2000]
[numberFormat]
[2]
[units, ., add, (, new, NumberTickUnit, (, 5000, ,, numberFormat, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 5000, ,, numberFormat, ,, 5, )]
[5000]
[numberFormat]
[5]
[units, ., add, (, new, NumberTickUnit, (, 10000, ,, numberFormat, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 10000, ,, numberFormat, ,, 2, )]
[10000]
[numberFormat]
[2]
[units, ., add, (, new, NumberTickUnit, (, 20000, ,, numberFormat, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 20000, ,, numberFormat, ,, 2, )]
[20000]
[numberFormat]
[2]
[units, ., add, (, new, NumberTickUnit, (, 50000, ,, numberFormat, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 50000, ,, numberFormat, ,, 5, )]
[50000]
[numberFormat]
[5]
[units, ., add, (, new, NumberTickUnit, (, 100000, ,, numberFormat, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 100000, ,, numberFormat, ,, 2, )]
[100000]
[numberFormat]
[2]
[units, ., add, (, new, NumberTickUnit, (, 200000, ,, numberFormat, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 200000, ,, numberFormat, ,, 2, )]
[200000]
[numberFormat]
[2]
[units, ., add, (, new, NumberTickUnit, (, 500000, ,, numberFormat, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 500000, ,, numberFormat, ,, 5, )]
[500000]
[numberFormat]
[5]
[units, ., add, (, new, NumberTickUnit, (, 1000000, ,, numberFormat, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 1000000, ,, numberFormat, ,, 2, )]
[1000000]
[numberFormat]
[2]
[units, ., add, (, new, NumberTickUnit, (, 2000000, ,, numberFormat, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 2000000, ,, numberFormat, ,, 2, )]
[2000000]
[numberFormat]
[2]
[units, ., add, (, new, NumberTickUnit, (, 5000000, ,, numberFormat, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 5000000, ,, numberFormat, ,, 5, )]
[5000000]
[numberFormat]
[5]
[units, ., add, (, new, NumberTickUnit, (, 10000000, ,, numberFormat, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 10000000, ,, numberFormat, ,, 2, )]
[10000000]
[numberFormat]
[2]
[units, ., add, (, new, NumberTickUnit, (, 20000000, ,, numberFormat, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 20000000, ,, numberFormat, ,, 2, )]
[20000000]
[numberFormat]
[2]
[units, ., add, (, new, NumberTickUnit, (, 50000000, ,, numberFormat, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 50000000, ,, numberFormat, ,, 5, )]
[50000000]
[numberFormat]
[5]
[units, ., add, (, new, NumberTickUnit, (, 100000000, ,, numberFormat, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 100000000, ,, numberFormat, ,, 2, )]
[100000000]
[numberFormat]
[2]
[units, ., add, (, new, NumberTickUnit, (, 200000000, ,, numberFormat, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 200000000, ,, numberFormat, ,, 2, )]
[200000000]
[numberFormat]
[2]
[units, ., add, (, new, NumberTickUnit, (, 500000000, ,, numberFormat, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 500000000, ,, numberFormat, ,, 5, )]
[500000000]
[numberFormat]
[5]
[units, ., add, (, new, NumberTickUnit, (, 1000000000, ,, numberFormat, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 1000000000, ,, numberFormat, ,, 2, )]
[1000000000]
[numberFormat]
[2]
[units, ., add, (, new, NumberTickUnit, (, 2000000000, ,, numberFormat, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 2000000000, ,, numberFormat, ,, 2, )]
[2000000000]
[numberFormat]
[2]
[units, ., add, (, new, NumberTickUnit, (, 5000000000.0, ,, numberFormat, ,, 5, ), )]
[units]
[new, NumberTickUnit, (, 5000000000.0, ,, numberFormat, ,, 5, )]
[5000000000.0]
[numberFormat]
[5]
[units, ., add, (, new, NumberTickUnit, (, 10000000000.0, ,, numberFormat, ,, 2, ), )]
[units]
[new, NumberTickUnit, (, 10000000000.0, ,, numberFormat, ,, 2, )]
[10000000000.0]
[numberFormat]
[2]
[units]
[getTickLabelInsets, (, )]
[tickLabelInsets, ., getTop, (, ), +, tickLabelInsets, ., getBottom, (, )]
[tickLabelInsets, ., getTop, (, )]
[tickLabelInsets]
[tickLabelInsets, ., getBottom, (, )]
[tickLabelInsets]
[getTickLabelFont, (, )]
[g2, ., getFontRenderContext, (, )]
[g2]
[result]
[tickLabelFont, ., getLineMetrics, (, "123", ,, frc, ), ., getHeight, (, )]
[tickLabelFont, ., getLineMetrics, (, "123", ,, frc, )]
[tickLabelFont]
["123"]
[frc]
[result]
[getTickLabelInsets, (, )]
[tickLabelInsets, ., getLeft, (, ), +, tickLabelInsets, ., getRight, (, )]
[tickLabelInsets, ., getLeft, (, )]
[tickLabelInsets]
[tickLabelInsets, ., getRight, (, )]
[tickLabelInsets]
[isVerticalTickLabels, (, )]
[g2, ., getFontRenderContext, (, )]
[g2]
[getTickLabelFont, (, ), ., getLineMetrics, (, "0", ,, frc, )]
[getTickLabelFont, (, )]
["0"]
[frc]
[result]
[lm, ., getHeight, (, )]
[lm]
[g2, ., getFontMetrics, (, getTickLabelFont, (, ), )]
[g2]
[getTickLabelFont, (, )]
[getRange, (, )]
[range, ., getLowerBound, (, )]
[range]
[range, ., getUpperBound, (, )]
[range]
[""]
[""]
[getNumberFormatOverride, (, )]
[formatter, !=, null]
[formatter]
[null]
[lowerStr]
[formatter, ., format, (, lower, )]
[formatter]
[lower]
[upperStr]
[formatter, ., format, (, upper, )]
[formatter]
[upper]
[lowerStr]
[unit, ., valueToString, (, lower, )]
[unit]
[lower]
[upperStr]
[unit, ., valueToString, (, upper, )]
[unit]
[upper]
[fm, ., stringWidth, (, lowerStr, )]
[fm]
[lowerStr]
[fm, ., stringWidth, (, upperStr, )]
[fm]
[upperStr]
[result]
[Math, ., max, (, w1, ,, w2, )]
[Math]
[w1]
[w2]
[result]
[RectangleEdge, ., isTopOrBottom, (, edge, )]
[RectangleEdge]
[edge]
[selectHorizontalAutoTickUnit, (, g2, ,, dataArea, ,, edge, )]
[g2]
[dataArea]
[edge]
[RectangleEdge, ., isLeftOrRight, (, edge, )]
[RectangleEdge]
[edge]
[selectVerticalAutoTickUnit, (, g2, ,, dataArea, ,, edge, )]
[g2]
[dataArea]
[edge]
[estimateMaximumTickLabelWidth, (, g2, ,, getTickUnit, (, ), )]
[g2]
[getTickUnit, (, )]
[getStandardTickUnits, (, )]
[tickUnits, ., getCeilingTickUnit, (, getTickUnit, (, ), )]
[tickUnits]
[getTickUnit, (, )]
[lengthToJava2D, (, unit1, ., getSize, (, ), ,, dataArea, ,, edge, )]
[unit1, ., getSize, (, )]
[unit1]
[dataArea]
[edge]
[(, tickLabelWidth, /, unit1Width, ), *, unit1, ., getSize, (, )]
[(, tickLabelWidth, /, unit1Width, )]
[tickLabelWidth, /, unit1Width]
[tickLabelWidth]
[unit1Width]
[unit1, ., getSize, (, )]
[unit1]
[(, NumberTickUnit, ), tickUnits, ., getCeilingTickUnit, (, guess, )]
[tickUnits, ., getCeilingTickUnit, (, guess, )]
[tickUnits]
[guess]
[lengthToJava2D, (, unit2, ., getSize, (, ), ,, dataArea, ,, edge, )]
[unit2, ., getSize, (, )]
[unit2]
[dataArea]
[edge]
[tickLabelWidth]
[estimateMaximumTickLabelWidth, (, g2, ,, unit2, )]
[g2]
[unit2]
[tickLabelWidth, >, unit2Width]
[tickLabelWidth]
[unit2Width]
[unit2]
[(, NumberTickUnit, ), tickUnits, ., getLargerTickUnit, (, unit2, )]
[tickUnits, ., getLargerTickUnit, (, unit2, )]
[tickUnits]
[unit2]
[setTickUnit, (, unit2, ,, false, ,, false, )]
[unit2]
[false]
[false]
[estimateMaximumTickLabelHeight, (, g2, )]
[g2]
[getStandardTickUnits, (, )]
[tickUnits, ., getCeilingTickUnit, (, getTickUnit, (, ), )]
[tickUnits]
[getTickUnit, (, )]
[lengthToJava2D, (, unit1, ., getSize, (, ), ,, dataArea, ,, edge, )]
[unit1, ., getSize, (, )]
[unit1]
[dataArea]
[edge]
[(, tickLabelHeight, /, unitHeight, ), *, unit1, ., getSize, (, )]
[(, tickLabelHeight, /, unitHeight, )]
[tickLabelHeight, /, unitHeight]
[tickLabelHeight]
[unitHeight]
[unit1, ., getSize, (, )]
[unit1]
[(, NumberTickUnit, ), tickUnits, ., getCeilingTickUnit, (, guess, )]
[tickUnits, ., getCeilingTickUnit, (, guess, )]
[tickUnits]
[guess]
[lengthToJava2D, (, unit2, ., getSize, (, ), ,, dataArea, ,, edge, )]
[unit2, ., getSize, (, )]
[unit2]
[dataArea]
[edge]
[tickLabelHeight]
[estimateMaximumTickLabelHeight, (, g2, )]
[g2]
[tickLabelHeight, >, unit2Height]
[tickLabelHeight]
[unit2Height]
[unit2]
[(, NumberTickUnit, ), tickUnits, ., getLargerTickUnit, (, unit2, )]
[tickUnits, ., getLargerTickUnit, (, unit2, )]
[tickUnits]
[unit2]
[setTickUnit, (, unit2, ,, false, ,, false, )]
[unit2]
[false]
[false]
[new, java, ., util, ., ArrayList, (, )]
[RectangleEdge, ., isTopOrBottom, (, edge, )]
[RectangleEdge]
[edge]
[result]
[refreshTicksHorizontal, (, g2, ,, dataArea, ,, edge, )]
[g2]
[dataArea]
[edge]
[RectangleEdge, ., isLeftOrRight, (, edge, )]
[RectangleEdge]
[edge]
[result]
[refreshTicksVertical, (, g2, ,, dataArea, ,, edge, )]
[g2]
[dataArea]
[edge]
[result]
[new, java, ., util, ., ArrayList, (, )]
[getTickLabelFont, (, )]
[g2, ., setFont, (, tickLabelFont, )]
[g2]
[tickLabelFont]
[isAutoTickUnitSelection, (, )]
[selectAutoTickUnit, (, g2, ,, dataArea, ,, edge, )]
[g2]
[dataArea]
[edge]
[getTickUnit, (, )]
[tu, ., getSize, (, )]
[tu]
[calculateVisibleTickCount, (, )]
[calculateLowestVisibleTickValue, (, )]
[count, <=, ValueAxis, ., MAXIMUM_TICK_COUNT]
[count]
[ValueAxis, ., MAXIMUM_TICK_COUNT]
[ValueAxis]
[getMinorTickCount, (, )]
[minorTickSpaces, <=, 0]
[minorTickSpaces]
[0]
[minorTickSpaces]
[tu, ., getMinorTickCount, (, )]
[tu]
[1]
[minorTick, <, minorTickSpaces]
[minorTick]
[minorTickSpaces]
[minorTick, ++]
[minorTick]
[lowestTickValue, -, size, *, minorTick, /, minorTickSpaces]
[lowestTickValue]
[size, *, minorTick, /, minorTickSpaces]
[size, *, minorTick]
[size]
[minorTick]
[minorTickSpaces]
[getRange, (, ), ., contains, (, minorTickValue, )]
[getRange, (, )]
[minorTickValue]
[result, ., add, (, new, NumberTick, (, TickType, ., MINOR, ,, minorTickValue, ,, "", ,, TextAnchor, ., TOP_CENTER, ,, TextAnchor, ., CENTER, ,, 0.0, ), )]
[result]
[new, NumberTick, (, TickType, ., MINOR, ,, minorTickValue, ,, "", ,, TextAnchor, ., TOP_CENTER, ,, TextAnchor, ., CENTER, ,, 0.0, )]
[TickType, ., MINOR]
[TickType]
[minorTickValue]
[""]
[TextAnchor, ., TOP_CENTER]
[TextAnchor]
[TextAnchor, ., CENTER]
[TextAnchor]
[0.0]
[0]
[i, <, count]
[i]
[count]
[i, ++]
[i]
[lowestTickValue, +, (, i, *, size, )]
[lowestTickValue]
[(, i, *, size, )]
[i, *, size]
[i]
[size]
[getNumberFormatOverride, (, )]
[formatter, !=, null]
[formatter]
[null]
[tickLabel]
[formatter, ., format, (, currentTickValue, )]
[formatter]
[currentTickValue]
[tickLabel]
[getTickUnit, (, ), ., valueToString, (, currentTickValue, )]
[getTickUnit, (, )]
[currentTickValue]
[null]
[null]
[0.0]
[isVerticalTickLabels, (, )]
[anchor]
[TextAnchor, ., CENTER_RIGHT]
[TextAnchor]
[rotationAnchor]
[TextAnchor, ., CENTER_RIGHT]
[TextAnchor]
[edge, ==, RectangleEdge, ., TOP]
[edge]
[RectangleEdge, ., TOP]
[RectangleEdge]
[angle]
[Math, ., PI, /, 2.0]
[Math, ., PI]
[Math]
[2.0]
[angle]
[-, Math, ., PI, /, 2.0]
[-, Math, ., PI]
[Math, ., PI]
[Math]
[2.0]
[edge, ==, RectangleEdge, ., TOP]
[edge]
[RectangleEdge, ., TOP]
[RectangleEdge]
[anchor]
[TextAnchor, ., BOTTOM_CENTER]
[TextAnchor]
[rotationAnchor]
[TextAnchor, ., BOTTOM_CENTER]
[TextAnchor]
[anchor]
[TextAnchor, ., TOP_CENTER]
[TextAnchor]
[rotationAnchor]
[TextAnchor, ., TOP_CENTER]
[TextAnchor]
[new, NumberTick, (, new, Double, (, currentTickValue, ), ,, tickLabel, ,, anchor, ,, rotationAnchor, ,, angle, )]
[new, Double, (, currentTickValue, )]
[currentTickValue]
[tickLabel]
[anchor]
[rotationAnchor]
[angle]
[result, ., add, (, tick, )]
[result]
[tick]
[lowestTickValue, +, (, (, i, +, 1, ), *, size, )]
[lowestTickValue]
[(, (, i, +, 1, ), *, size, )]
[(, i, +, 1, ), *, size]
[(, i, +, 1, )]
[i, +, 1]
[i]
[1]
[size]
[1]
[minorTick, <, minorTickSpaces]
[minorTick]
[minorTickSpaces]
[minorTick, ++]
[minorTick]
[currentTickValue, +, (, nextTickValue, -, currentTickValue, ), *, minorTick, /, minorTickSpaces]
[currentTickValue]
[(, nextTickValue, -, currentTickValue, ), *, minorTick, /, minorTickSpaces]
[(, nextTickValue, -, currentTickValue, ), *, minorTick]
[(, nextTickValue, -, currentTickValue, )]
[nextTickValue, -, currentTickValue]
[nextTickValue]
[currentTickValue]
[minorTick]
[minorTickSpaces]
[getRange, (, ), ., contains, (, minorTickValue, )]
[getRange, (, )]
[minorTickValue]
[result, ., add, (, new, NumberTick, (, TickType, ., MINOR, ,, minorTickValue, ,, "", ,, TextAnchor, ., TOP_CENTER, ,, TextAnchor, ., CENTER, ,, 0.0, ), )]
[result]
[new, NumberTick, (, TickType, ., MINOR, ,, minorTickValue, ,, "", ,, TextAnchor, ., TOP_CENTER, ,, TextAnchor, ., CENTER, ,, 0.0, )]
[TickType, ., MINOR]
[TickType]
[minorTickValue]
[""]
[TextAnchor, ., TOP_CENTER]
[TextAnchor]
[TextAnchor, ., CENTER]
[TextAnchor]
[0.0]
[result]
[new, java, ., util, ., ArrayList, (, )]
[result, ., clear, (, )]
[result]
[getTickLabelFont, (, )]
[g2, ., setFont, (, tickLabelFont, )]
[g2]
[tickLabelFont]
[isAutoTickUnitSelection, (, )]
[selectAutoTickUnit, (, g2, ,, dataArea, ,, edge, )]
[g2]
[dataArea]
[edge]
[getTickUnit, (, )]
[tu, ., getSize, (, )]
[tu]
[calculateVisibleTickCount, (, )]
[calculateLowestVisibleTickValue, (, )]
[count, <=, ValueAxis, ., MAXIMUM_TICK_COUNT]
[count]
[ValueAxis, ., MAXIMUM_TICK_COUNT]
[ValueAxis]
[getMinorTickCount, (, )]
[minorTickSpaces, <=, 0]
[minorTickSpaces]
[0]
[minorTickSpaces]
[tu, ., getMinorTickCount, (, )]
[tu]
[1]
[minorTick, <, minorTickSpaces]
[minorTick]
[minorTickSpaces]
[minorTick, ++]
[minorTick]
[lowestTickValue, -, size, *, minorTick, /, minorTickSpaces]
[lowestTickValue]
[size, *, minorTick, /, minorTickSpaces]
[size, *, minorTick]
[size]
[minorTick]
[minorTickSpaces]
[getRange, (, ), ., contains, (, minorTickValue, )]
[getRange, (, )]
[minorTickValue]
[result, ., add, (, new, NumberTick, (, TickType, ., MINOR, ,, minorTickValue, ,, "", ,, TextAnchor, ., TOP_CENTER, ,, TextAnchor, ., CENTER, ,, 0.0, ), )]
[result]
[new, NumberTick, (, TickType, ., MINOR, ,, minorTickValue, ,, "", ,, TextAnchor, ., TOP_CENTER, ,, TextAnchor, ., CENTER, ,, 0.0, )]
[TickType, ., MINOR]
[TickType]
[minorTickValue]
[""]
[TextAnchor, ., TOP_CENTER]
[TextAnchor]
[TextAnchor, ., CENTER]
[TextAnchor]
[0.0]
[0]
[i, <, count]
[i]
[count]
[i, ++]
[i]
[lowestTickValue, +, (, i, *, size, )]
[lowestTickValue]
[(, i, *, size, )]
[i, *, size]
[i]
[size]
[getNumberFormatOverride, (, )]
[formatter, !=, null]
[formatter]
[null]
[tickLabel]
[formatter, ., format, (, currentTickValue, )]
[formatter]
[currentTickValue]
[tickLabel]
[getTickUnit, (, ), ., valueToString, (, currentTickValue, )]
[getTickUnit, (, )]
[currentTickValue]
[null]
[null]
[0.0]
[isVerticalTickLabels, (, )]
[edge, ==, RectangleEdge, ., LEFT]
[edge]
[RectangleEdge, ., LEFT]
[RectangleEdge]
[anchor]
[TextAnchor, ., BOTTOM_CENTER]
[TextAnchor]
[rotationAnchor]
[TextAnchor, ., BOTTOM_CENTER]
[TextAnchor]
[angle]
[-, Math, ., PI, /, 2.0]
[-, Math, ., PI]
[Math, ., PI]
[Math]
[2.0]
[anchor]
[TextAnchor, ., BOTTOM_CENTER]
[TextAnchor]
[rotationAnchor]
[TextAnchor, ., BOTTOM_CENTER]
[TextAnchor]
[angle]
[Math, ., PI, /, 2.0]
[Math, ., PI]
[Math]
[2.0]
[edge, ==, RectangleEdge, ., LEFT]
[edge]
[RectangleEdge, ., LEFT]
[RectangleEdge]
[anchor]
[TextAnchor, ., CENTER_RIGHT]
[TextAnchor]
[rotationAnchor]
[TextAnchor, ., CENTER_RIGHT]
[TextAnchor]
[anchor]
[TextAnchor, ., CENTER_LEFT]
[TextAnchor]
[rotationAnchor]
[TextAnchor, ., CENTER_LEFT]
[TextAnchor]
[new, NumberTick, (, new, Double, (, currentTickValue, ), ,, tickLabel, ,, anchor, ,, rotationAnchor, ,, angle, )]
[new, Double, (, currentTickValue, )]
[currentTickValue]
[tickLabel]
[anchor]
[rotationAnchor]
[angle]
[result, ., add, (, tick, )]
[result]
[tick]
[lowestTickValue, +, (, (, i, +, 1, ), *, size, )]
[lowestTickValue]
[(, (, i, +, 1, ), *, size, )]
[(, i, +, 1, ), *, size]
[(, i, +, 1, )]
[i, +, 1]
[i]
[1]
[size]
[1]
[minorTick, <, minorTickSpaces]
[minorTick]
[minorTickSpaces]
[minorTick, ++]
[minorTick]
[currentTickValue, +, (, nextTickValue, -, currentTickValue, ), *, minorTick, /, minorTickSpaces]
[currentTickValue]
[(, nextTickValue, -, currentTickValue, ), *, minorTick, /, minorTickSpaces]
[(, nextTickValue, -, currentTickValue, ), *, minorTick]
[(, nextTickValue, -, currentTickValue, )]
[nextTickValue, -, currentTickValue]
[nextTickValue]
[currentTickValue]
[minorTick]
[minorTickSpaces]
[getRange, (, ), ., contains, (, minorTickValue, )]
[getRange, (, )]
[minorTickValue]
[result, ., add, (, new, NumberTick, (, TickType, ., MINOR, ,, minorTickValue, ,, "", ,, TextAnchor, ., TOP_CENTER, ,, TextAnchor, ., CENTER, ,, 0.0, ), )]
[result]
[new, NumberTick, (, TickType, ., MINOR, ,, minorTickValue, ,, "", ,, TextAnchor, ., TOP_CENTER, ,, TextAnchor, ., CENTER, ,, 0.0, )]
[TickType, ., MINOR]
[TickType]
[minorTickValue]
[""]
[TextAnchor, ., TOP_CENTER]
[TextAnchor]
[TextAnchor, ., CENTER]
[TextAnchor]
[0.0]
[result]
[(, NumberAxis, ), super, ., clone, (, )]
[super, ., clone, (, )]
[super]
[this, ., numberFormatOverride, !=, null]
[this, ., numberFormatOverride]
[this]
[null]
[clone, ., numberFormatOverride]
[clone]
[(, NumberFormat, ), this, ., numberFormatOverride, ., clone, (, )]
[this, ., numberFormatOverride, ., clone, (, )]
[this, ., numberFormatOverride]
[this]
[clone]
[obj, ==, this]
[obj]
[this]
[true]
[!, (, obj, instanceof, NumberAxis, )]
[(, obj, instanceof, NumberAxis, )]
[obj, instanceof, NumberAxis]
[obj]
[false]
[(, NumberAxis, ), obj]
[obj]
[this, ., autoRangeIncludesZero, !=, that, ., autoRangeIncludesZero]
[this, ., autoRangeIncludesZero]
[this]
[that, ., autoRangeIncludesZero]
[that]
[false]
[this, ., autoRangeStickyZero, !=, that, ., autoRangeStickyZero]
[this, ., autoRangeStickyZero]
[this]
[that, ., autoRangeStickyZero]
[that]
[false]
[!, ObjectUtilities, ., equal, (, this, ., tickUnit, ,, that, ., tickUnit, )]
[ObjectUtilities, ., equal, (, this, ., tickUnit, ,, that, ., tickUnit, )]
[ObjectUtilities]
[this, ., tickUnit]
[this]
[that, ., tickUnit]
[that]
[false]
[!, ObjectUtilities, ., equal, (, this, ., numberFormatOverride, ,, that, ., numberFormatOverride, )]
[ObjectUtilities, ., equal, (, this, ., numberFormatOverride, ,, that, ., numberFormatOverride, )]
[ObjectUtilities]
[this, ., numberFormatOverride]
[this]
[that, ., numberFormatOverride]
[that]
[false]
[!, this, ., rangeType, ., equals, (, that, ., rangeType, )]
[this, ., rangeType, ., equals, (, that, ., rangeType, )]
[this, ., rangeType]
[this]
[that, ., rangeType]
[that]
[false]
[super, ., equals, (, obj, )]
[super]
[obj]
[getLabel, (, ), !=, null]
[getLabel, (, )]
[null]
[getLabel, (, ), ., hashCode, (, )]
[getLabel, (, )]
[0]
