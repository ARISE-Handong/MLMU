[1000]
["US-ASCII"]
[5729073523949762654L]
[null]
[Double, ., NEGATIVE_INFINITY]
[Double]
[Double, ., POSITIVE_INFINITY]
[Double]
[0d]
[false]
[null]
[DEFAULT_BIN_COUNT]
[binCount]
[new, RandomDataGenerator, (, )]
[binCount]
[new, RandomDataGenerator, (, generator, )]
[generator]
[DEFAULT_BIN_COUNT]
[generator]
[binCount]
[randomData, ., getDelegate, (, )]
[randomData]
[DEFAULT_BIN_COUNT]
[randomData]
[null]
[this, ., binCount]
[this]
[binCount]
[this, ., randomData]
[this]
[randomData]
[binStats]
[new, ArrayList, <, SummaryStatistics, >, (, )]
[new, ArrayDataAdapter, (, in, )]
[in]
[da, ., computeStats, (, )]
[da]
[fillBinStats, (, new, ArrayDataAdapter, (, in, ), )]
[new, ArrayDataAdapter, (, in, )]
[in]
[new, MathInternalError, (, )]
[loaded]
[true]
[MathUtils, ., checkNotNull, (, url, )]
[MathUtils]
[url]
[Charset, ., forName, (, FILE_CHARSET, )]
[Charset]
[FILE_CHARSET]
[new, BufferedReader, (, new, InputStreamReader, (, url, ., openStream, (, ), ,, charset, ), )]
[new, InputStreamReader, (, url, ., openStream, (, ), ,, charset, )]
[url, ., openStream, (, )]
[url]
[charset]
[new, StreamDataAdapter, (, in, )]
[in]
[da, ., computeStats, (, )]
[da]
[sampleStats, ., getN, (, ), ==, 0]
[sampleStats, ., getN, (, )]
[sampleStats]
[0]
[new, ZeroException, (, LocalizedFormats, ., URL_CONTAINS_NO_DATA, ,, url, )]
[LocalizedFormats, ., URL_CONTAINS_NO_DATA]
[LocalizedFormats]
[url]
[in]
[new, BufferedReader, (, new, InputStreamReader, (, url, ., openStream, (, ), ,, charset, ), )]
[new, InputStreamReader, (, url, ., openStream, (, ), ,, charset, )]
[url, ., openStream, (, )]
[url]
[charset]
[fillBinStats, (, new, StreamDataAdapter, (, in, ), )]
[new, StreamDataAdapter, (, in, )]
[in]
[loaded]
[true]
[in, ., close, (, )]
[in]
[MathUtils, ., checkNotNull, (, file, )]
[MathUtils]
[file]
[Charset, ., forName, (, FILE_CHARSET, )]
[Charset]
[FILE_CHARSET]
[new, FileInputStream, (, file, )]
[file]
[new, BufferedReader, (, new, InputStreamReader, (, is, ,, charset, ), )]
[new, InputStreamReader, (, is, ,, charset, )]
[is]
[charset]
[new, StreamDataAdapter, (, in, )]
[in]
[da, ., computeStats, (, )]
[da]
[is]
[new, FileInputStream, (, file, )]
[file]
[in]
[new, BufferedReader, (, new, InputStreamReader, (, is, ,, charset, ), )]
[new, InputStreamReader, (, is, ,, charset, )]
[is]
[charset]
[fillBinStats, (, new, StreamDataAdapter, (, in, ), )]
[new, StreamDataAdapter, (, in, )]
[in]
[loaded]
[true]
[in, ., close, (, )]
[in]
[inputStream]
[in]
[null]
[0.0d]
[(, str, =, inputStream, ., readLine, (, ), ), !=, null]
[(, str, =, inputStream, ., readLine, (, ), )]
[str]
[inputStream, ., readLine, (, )]
[inputStream]
[null]
[val]
[Double, ., parseDouble, (, str, )]
[Double]
[str]
[binStats, ., get, (, findBin, (, val, ), )]
[binStats]
[findBin, (, val, )]
[val]
[stats, ., addValue, (, val, )]
[stats]
[val]
[inputStream, ., close, (, )]
[inputStream]
[inputStream]
[null]
[null]
[0.0]
[sampleStats]
[new, SummaryStatistics, (, )]
[(, str, =, inputStream, ., readLine, (, ), ), !=, null]
[(, str, =, inputStream, ., readLine, (, ), )]
[str]
[inputStream, ., readLine, (, )]
[inputStream]
[null]
[val]
[Double, ., parseDouble, (, str, )]
[Double]
[str]
[sampleStats, ., addValue, (, val, )]
[sampleStats]
[val]
[inputStream, ., close, (, )]
[inputStream]
[inputStream]
[null]
[MathUtils, ., checkNotNull, (, in, )]
[MathUtils]
[in]
[inputArray]
[in]
[sampleStats]
[new, SummaryStatistics, (, )]
[0]
[i, <, inputArray, ., length]
[i]
[inputArray, ., length]
[inputArray]
[i, ++]
[i]
[sampleStats, ., addValue, (, inputArray, [, i, ], )]
[sampleStats]
[inputArray, [, i, ]]
[inputArray]
[i]
[0]
[i, <, inputArray, ., length]
[i]
[inputArray, ., length]
[inputArray]
[i, ++]
[i]
[binStats, ., get, (, findBin, (, inputArray, [, i, ], ), )]
[binStats]
[findBin, (, inputArray, [, i, ], )]
[inputArray, [, i, ]]
[inputArray]
[i]
[stats, ., addValue, (, inputArray, [, i, ], )]
[stats]
[inputArray, [, i, ]]
[inputArray]
[i]
[min]
[sampleStats, ., getMin, (, )]
[sampleStats]
[max]
[sampleStats, ., getMax, (, )]
[sampleStats]
[delta]
[(, max, -, min, ), /, (, (, double, ), binCount, )]
[(, max, -, min, )]
[max, -, min]
[max]
[min]
[(, (, double, ), binCount, )]
[(, double, ), binCount]
[binCount]
[!, binStats, ., isEmpty, (, )]
[binStats, ., isEmpty, (, )]
[binStats]
[binStats, ., clear, (, )]
[binStats]
[0]
[i, <, binCount]
[i]
[binCount]
[i, ++]
[i]
[new, SummaryStatistics, (, )]
[binStats, ., add, (, i, ,, stats, )]
[binStats]
[i]
[stats]
[da, ., computeBinStats, (, )]
[da]
[upperBounds]
[new, double, [, binCount, ]]
[binCount]
[upperBounds, [, 0, ]]
[upperBounds]
[0]
[(, (, double, ), binStats, ., get, (, 0, ), ., getN, (, ), ), /, (, double, ), sampleStats, ., getN, (, )]
[(, (, double, ), binStats, ., get, (, 0, ), ., getN, (, ), )]
[(, double, ), binStats, ., get, (, 0, ), ., getN, (, )]
[binStats, ., get, (, 0, ), ., getN, (, )]
[binStats, ., get, (, 0, )]
[binStats]
[0]
[(, double, ), sampleStats, ., getN, (, )]
[sampleStats, ., getN, (, )]
[sampleStats]
[1]
[i, <, binCount, -, 1]
[i]
[binCount, -, 1]
[binCount]
[1]
[i, ++]
[i]
[upperBounds, [, i, ]]
[upperBounds]
[i]
[upperBounds, [, i, -, 1, ], +, (, (, double, ), binStats, ., get, (, i, ), ., getN, (, ), ), /, (, double, ), sampleStats, ., getN, (, )]
[upperBounds, [, i, -, 1, ]]
[upperBounds]
[i, -, 1]
[i]
[1]
[(, (, double, ), binStats, ., get, (, i, ), ., getN, (, ), ), /, (, double, ), sampleStats, ., getN, (, )]
[(, (, double, ), binStats, ., get, (, i, ), ., getN, (, ), )]
[(, double, ), binStats, ., get, (, i, ), ., getN, (, )]
[binStats, ., get, (, i, ), ., getN, (, )]
[binStats, ., get, (, i, )]
[binStats]
[i]
[(, double, ), sampleStats, ., getN, (, )]
[sampleStats, ., getN, (, )]
[sampleStats]
[upperBounds, [, binCount, -, 1, ]]
[upperBounds]
[binCount, -, 1]
[binCount]
[1]
[1.0d]
[FastMath, ., min, (, FastMath, ., max, (, (, int, ), FastMath, ., ceil, (, (, value, -, min, ), /, delta, ), -, 1, ,, 0, ), ,, binCount, -, 1, )]
[FastMath]
[FastMath, ., max, (, (, int, ), FastMath, ., ceil, (, (, value, -, min, ), /, delta, ), -, 1, ,, 0, )]
[FastMath]
[(, int, ), FastMath, ., ceil, (, (, value, -, min, ), /, delta, ), -, 1]
[(, int, ), FastMath, ., ceil, (, (, value, -, min, ), /, delta, )]
[FastMath, ., ceil, (, (, value, -, min, ), /, delta, )]
[FastMath]
[(, value, -, min, ), /, delta]
[(, value, -, min, )]
[value, -, min]
[value]
[min]
[delta]
[1]
[0]
[binCount, -, 1]
[binCount]
[1]
[!, loaded]
[loaded]
[new, MathIllegalStateException, (, LocalizedFormats, ., DISTRIBUTION_NOT_LOADED, )]
[LocalizedFormats, ., DISTRIBUTION_NOT_LOADED]
[LocalizedFormats]
[randomData, ., nextUniform, (, 0, ,, 1, )]
[randomData]
[0]
[1]
[0]
[i, <, binCount]
[i]
[binCount]
[i, ++]
[i]
[x, <=, upperBounds, [, i, ]]
[x]
[upperBounds, [, i, ]]
[upperBounds]
[i]
[binStats, ., get, (, i, )]
[binStats]
[i]
[stats, ., getN, (, ), >, 0]
[stats, ., getN, (, )]
[stats]
[0]
[stats, ., getStandardDeviation, (, ), >, 0]
[stats, ., getStandardDeviation, (, )]
[stats]
[0]
[getKernel, (, stats, ), ., sample, (, )]
[getKernel, (, stats, )]
[stats]
[stats, ., getMean, (, )]
[stats]
[new, MathIllegalStateException, (, LocalizedFormats, ., NO_BIN_SELECTED, )]
[LocalizedFormats, ., NO_BIN_SELECTED]
[LocalizedFormats]
[sampleStats]
[binCount]
[binStats]
[new, double, [, binCount, ]]
[binCount]
[0]
[i, <, binCount, -, 1]
[i]
[binCount, -, 1]
[binCount]
[1]
[i, ++]
[i]
[binUpperBounds, [, i, ]]
[binUpperBounds]
[i]
[min, +, delta, *, (, i, +, 1, )]
[min]
[delta, *, (, i, +, 1, )]
[delta]
[(, i, +, 1, )]
[i, +, 1]
[i]
[1]
[binUpperBounds, [, binCount, -, 1, ]]
[binUpperBounds]
[binCount, -, 1]
[binCount]
[1]
[max]
[binUpperBounds]
[upperBounds, ., length]
[upperBounds]
[new, double, [, len, ]]
[len]
[System, ., arraycopy, (, upperBounds, ,, 0, ,, out, ,, 0, ,, len, )]
[System]
[upperBounds]
[0]
[out]
[0]
[len]
[out]
[loaded]
[randomData, ., reSeed, (, seed, )]
[randomData]
[seed]
[0]
[x, <, min, ||, x, >, max]
[x, <, min]
[x]
[min]
[x, >, max]
[x]
[max]
[0d]
[findBin, (, x, )]
[x]
[getKernel, (, binStats, ., get, (, binIndex, ), )]
[binStats, ., get, (, binIndex, )]
[binStats]
[binIndex]
[kernel, ., density, (, x, ), *, pB, (, binIndex, ), /, kB, (, binIndex, )]
[kernel, ., density, (, x, ), *, pB, (, binIndex, )]
[kernel, ., density, (, x, )]
[kernel]
[x]
[pB, (, binIndex, )]
[binIndex]
[kB, (, binIndex, )]
[binIndex]
[x, <, min]
[x]
[min]
[0d]
[x, >=, max]
[x]
[max]
[1d]
[findBin, (, x, )]
[x]
[pBminus, (, binIndex, )]
[binIndex]
[pB, (, binIndex, )]
[binIndex]
[getUpperBounds, (, )]
[kB, (, binIndex, )]
[binIndex]
[binIndex, ==, 0, ?, min, :, binBounds, [, binIndex, -, 1, ]]
[binIndex, ==, 0]
[binIndex]
[0]
[min]
[binBounds, [, binIndex, -, 1, ]]
[binBounds]
[binIndex, -, 1]
[binIndex]
[1]
[k, (, x, )]
[x]
[(, kernel, ., cumulativeProbability, (, x, ), -, kernel, ., cumulativeProbability, (, lower, ), ), /, kB]
[(, kernel, ., cumulativeProbability, (, x, ), -, kernel, ., cumulativeProbability, (, lower, ), )]
[kernel, ., cumulativeProbability, (, x, ), -, kernel, ., cumulativeProbability, (, lower, )]
[kernel, ., cumulativeProbability, (, x, )]
[kernel]
[x]
[kernel, ., cumulativeProbability, (, lower, )]
[kernel]
[lower]
[kB]
[pBminus, +, pB, *, withinBinCum]
[pBminus]
[pB, *, withinBinCum]
[pB]
[withinBinCum]
[p, <, 0.0, ||, p, >, 1.0]
[p, <, 0.0]
[p]
[0.0]
[p, >, 1.0]
[p]
[1.0]
[new, OutOfRangeException, (, p, ,, 0, ,, 1, )]
[p]
[0]
[1]
[p, ==, 0.0]
[p]
[0.0]
[getSupportLowerBound, (, )]
[p, ==, 1.0]
[p]
[1.0]
[getSupportUpperBound, (, )]
[0]
[cumBinP, (, i, ), <, p]
[cumBinP, (, i, )]
[i]
[p]
[i, ++]
[i]
[getKernel, (, binStats, ., get, (, i, ), )]
[binStats, ., get, (, i, )]
[binStats]
[i]
[kB, (, i, )]
[i]
[getUpperBounds, (, )]
[i, ==, 0, ?, min, :, binBounds, [, i, -, 1, ]]
[i, ==, 0]
[i]
[0]
[min]
[binBounds, [, i, -, 1, ]]
[binBounds]
[i, -, 1]
[i]
[1]
[kernel, ., cumulativeProbability, (, lower, )]
[kernel]
[lower]
[pB, (, i, )]
[i]
[pBminus, (, i, )]
[i]
[p, -, pBminus]
[p]
[pBminus]
[pCrit, <=, 0]
[pCrit]
[0]
[lower]
[kernel, ., inverseCumulativeProbability, (, kBminus, +, pCrit, *, kB, /, pB, )]
[kernel]
[kBminus, +, pCrit, *, kB, /, pB]
[kBminus]
[pCrit, *, kB, /, pB]
[pCrit, *, kB]
[pCrit]
[kB]
[pB]
[sampleStats, ., getMean, (, )]
[sampleStats]
[sampleStats, ., getVariance, (, )]
[sampleStats]
[min]
[max]
[true]
[true]
[true]
[getNextValue, (, )]
[randomData, ., reSeed, (, seed, )]
[randomData]
[seed]
[i, ==, 0, ?, upperBounds, [, 0, ], :, upperBounds, [, i, ], -, upperBounds, [, i, -, 1, ]]
[i, ==, 0]
[i]
[0]
[upperBounds, [, 0, ]]
[upperBounds]
[0]
[upperBounds, [, i, ], -, upperBounds, [, i, -, 1, ]]
[upperBounds, [, i, ]]
[upperBounds]
[i]
[upperBounds, [, i, -, 1, ]]
[upperBounds]
[i, -, 1]
[i]
[1]
[i, ==, 0, ?, 0, :, upperBounds, [, i, -, 1, ]]
[i, ==, 0]
[i]
[0]
[0]
[upperBounds, [, i, -, 1, ]]
[upperBounds]
[i, -, 1]
[i]
[1]
[@, SuppressWarnings, (, "deprecation", )]
["deprecation"]
[getUpperBounds, (, )]
[getKernel, (, binStats, ., get, (, i, ), )]
[binStats, ., get, (, i, )]
[binStats]
[i]
[i, ==, 0, ?, kernel, ., cumulativeProbability, (, min, ,, binBounds, [, 0, ], ), :, kernel, ., cumulativeProbability, (, binBounds, [, i, -, 1, ], ,, binBounds, [, i, ], )]
[i, ==, 0]
[i]
[0]
[kernel, ., cumulativeProbability, (, min, ,, binBounds, [, 0, ], )]
[kernel]
[min]
[binBounds, [, 0, ]]
[binBounds]
[0]
[kernel, ., cumulativeProbability, (, binBounds, [, i, -, 1, ], ,, binBounds, [, i, ], )]
[kernel]
[binBounds, [, i, -, 1, ]]
[binBounds]
[i, -, 1]
[i]
[1]
[binBounds, [, i, ]]
[binBounds]
[i]
[findBin, (, x, )]
[x]
[getKernel, (, binStats, ., get, (, binIndex, ), )]
[binStats, ., get, (, binIndex, )]
[binStats]
[binIndex]
[upperBounds, [, binIndex, ]]
[upperBounds]
[binIndex]
[new, NormalDistribution, (, randomData, ., getRandomGenerator, (, ), ,, bStats, ., getMean, (, ), ,, bStats, ., getStandardDeviation, (, ), ,, NormalDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY, )]
[randomData, ., getRandomGenerator, (, )]
[randomData]
[bStats, ., getMean, (, )]
[bStats]
[bStats, ., getStandardDeviation, (, )]
[bStats]
[NormalDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY]
[NormalDistribution]
