[{, }]
[0.0]
[0.0]
[false]
[this, ., rows]
[this]
[new, ArrayList, (, )]
[Class, ., forName, (, driverName, )]
[Class]
[driverName]
[this, ., connection]
[this]
[DriverManager, ., getConnection, (, url, ,, user, ,, password, )]
[DriverManager]
[url]
[user]
[password]
[this, ., connection]
[this]
[con]
[con]
[executeQuery, (, query, )]
[query]
[this, ., isTimeSeries]
[this]
[this, ., isTimeSeries]
[this]
[timeSeries]
[executeQuery, (, this, ., connection, ,, query, )]
[this, ., connection]
[this]
[query]
[con, ==, null]
[con]
[null]
[new, SQLException, (, "There is no database to execute the query.", )]
["There is no database to execute the query."]
[null]
[null]
[statement]
[con, ., createStatement, (, )]
[con]
[resultSet]
[statement, ., executeQuery, (, query, )]
[statement]
[query]
[resultSet, ., getMetaData, (, )]
[resultSet]
[metaData, ., getColumnCount, (, )]
[metaData]
[0]
[new, int, [, numberOfColumns, ]]
[numberOfColumns]
[0]
[column, <, numberOfColumns]
[column]
[numberOfColumns]
[column, ++]
[column]
[metaData, ., getColumnType, (, column, +, 1, )]
[metaData]
[column, +, 1]
[column]
[1]
[type]
[Types, ., NUMERIC]
[Types]
[Types, ., REAL]
[Types]
[Types, ., INTEGER]
[Types]
[Types, ., DOUBLE]
[Types]
[Types, ., FLOAT]
[Types]
[Types, ., DECIMAL]
[Types]
[Types, ., BIT]
[Types]
[Types, ., DATE]
[Types]
[Types, ., TIME]
[Types]
[Types, ., TIMESTAMP]
[Types]
[Types, ., BIGINT]
[Types]
[Types, ., SMALLINT]
[Types]
[++, numberOfValidColumns]
[numberOfValidColumns]
[columnTypes, [, column, ]]
[columnTypes]
[column]
[type]
[columnTypes, [, column, ]]
[columnTypes]
[column]
[Types, ., NULL]
[Types]
[columnTypes, [, column, ]]
[columnTypes]
[column]
[Types, ., NULL]
[Types]
[e]
[numberOfValidColumns, <=, 1]
[numberOfValidColumns]
[1]
[new, SQLException, (, "Not enough valid columns where generated by query.", )]
["Not enough valid columns where generated by query."]
[this, ., columnNames]
[this]
[new, String, [, numberOfValidColumns, -, 1, ]]
[numberOfValidColumns, -, 1]
[numberOfValidColumns]
[1]
[0]
[1]
[column, <, numberOfColumns]
[column]
[numberOfColumns]
[column, ++]
[column]
[columnTypes, [, column, ], !=, Types, ., NULL]
[columnTypes, [, column, ]]
[columnTypes]
[column]
[Types, ., NULL]
[Types]
[this, ., columnNames, [, currentColumn, ]]
[this, ., columnNames]
[this]
[currentColumn]
[metaData, ., getColumnLabel, (, column, +, 1, )]
[metaData]
[column, +, 1]
[column]
[1]
[++, currentColumn]
[currentColumn]
[this, ., rows, !=, null]
[this, ., rows]
[this]
[null]
[0]
[column, <, this, ., rows, ., size, (, )]
[column]
[this, ., rows, ., size, (, )]
[this, ., rows]
[this]
[column, ++]
[column]
[(, ArrayList, ), this, ., rows, ., get, (, column, )]
[this, ., rows, ., get, (, column, )]
[this, ., rows]
[this]
[column]
[row, ., clear, (, )]
[row]
[this, ., rows, ., clear, (, )]
[this, ., rows]
[this]
[columnTypes, [, 0, ]]
[columnTypes]
[0]
[Types, ., DATE]
[Types]
[Types, ., TIME]
[Types]
[Types, ., TIMESTAMP]
[Types]
[this, ., isTimeSeries]
[this]
[true]
[this, ., isTimeSeries]
[this]
[false]
[resultSet, ., next, (, )]
[resultSet]
[new, ArrayList, (, )]
[0]
[column, <, numberOfColumns]
[column]
[numberOfColumns]
[column, ++]
[column]
[resultSet, ., getObject, (, column, +, 1, )]
[resultSet]
[column, +, 1]
[column]
[1]
[columnTypes, [, column, ]]
[columnTypes]
[column]
[Types, ., NUMERIC]
[Types]
[Types, ., REAL]
[Types]
[Types, ., INTEGER]
[Types]
[Types, ., DOUBLE]
[Types]
[Types, ., FLOAT]
[Types]
[Types, ., DECIMAL]
[Types]
[Types, ., BIGINT]
[Types]
[Types, ., SMALLINT]
[Types]
[newRow, ., add, (, xObject, )]
[newRow]
[xObject]
[Types, ., DATE]
[Types]
[Types, ., TIME]
[Types]
[Types, ., TIMESTAMP]
[Types]
[newRow, ., add, (, new, Long, (, (, (, Date, ), xObject, ), ., getTime, (, ), ), )]
[newRow]
[new, Long, (, (, (, Date, ), xObject, ), ., getTime, (, ), )]
[(, (, Date, ), xObject, ), ., getTime, (, )]
[(, (, Date, ), xObject, )]
[(, Date, ), xObject]
[xObject]
[Types, ., NULL]
[Types]
[System, ., err, ., println, (, "Unknown data", )]
[System, ., err]
[System]
["Unknown data"]
[columnTypes, [, column, ]]
[columnTypes]
[column]
[Types, ., NULL]
[Types]
[this, ., rows, ., add, (, newRow, )]
[this, ., rows]
[this]
[newRow]
[this, ., rows, ., size, (, ), ==, 0]
[this, ., rows, ., size, (, )]
[this, ., rows]
[this]
[0]
[new, ArrayList, (, )]
[0]
[column, <, numberOfColumns]
[column]
[numberOfColumns]
[column, ++]
[column]
[columnTypes, [, column, ], !=, Types, ., NULL]
[columnTypes, [, column, ]]
[columnTypes]
[column]
[Types, ., NULL]
[Types]
[newRow, ., add, (, new, Integer, (, 0, ), )]
[newRow]
[new, Integer, (, 0, )]
[0]
[this, ., rows, ., add, (, newRow, )]
[this, ., rows]
[this]
[newRow]
[this, ., rows, ., size, (, ), <, 1]
[this, ., rows, ., size, (, )]
[this, ., rows]
[this]
[1]
[this, ., maxValue]
[this]
[0.0]
[this, ., minValue]
[this]
[0.0]
[(, ArrayList, ), this, ., rows, ., get, (, 0, )]
[this, ., rows, ., get, (, 0, )]
[this, ., rows]
[this]
[0]
[this, ., maxValue]
[this]
[Double, ., NEGATIVE_INFINITY]
[Double]
[this, ., minValue]
[this]
[Double, ., POSITIVE_INFINITY]
[Double]
[0]
[rowNum, <, this, ., rows, ., size, (, )]
[rowNum]
[this, ., rows, ., size, (, )]
[this, ., rows]
[this]
[++, rowNum]
[rowNum]
[row]
[(, ArrayList, ), this, ., rows, ., get, (, rowNum, )]
[this, ., rows, ., get, (, rowNum, )]
[this, ., rows]
[this]
[rowNum]
[1]
[column, <, numberOfColumns]
[column]
[numberOfColumns]
[column, ++]
[column]
[row, ., get, (, column, )]
[row]
[column]
[testValue, !=, null]
[testValue]
[null]
[(, (, Number, ), testValue, ), ., doubleValue, (, )]
[(, (, Number, ), testValue, )]
[(, Number, ), testValue]
[testValue]
[test, <, this, ., minValue]
[test]
[this, ., minValue]
[this]
[this, ., minValue]
[this]
[test]
[test, >, this, ., maxValue]
[test]
[this, ., maxValue]
[this]
[this, ., maxValue]
[this]
[test]
[fireDatasetChanged, (, new, DatasetChangeInfo, (, ), )]
[new, DatasetChangeInfo, (, )]
[resultSet, !=, null]
[resultSet]
[null]
[resultSet, ., close, (, )]
[resultSet]
[statement, !=, null]
[statement]
[null]
[statement, ., close, (, )]
[statement]
[(, ArrayList, ), this, ., rows, ., get, (, itemIndex, )]
[this, ., rows, ., get, (, itemIndex, )]
[this, ., rows]
[this]
[itemIndex]
[(, Number, ), row, ., get, (, 0, )]
[row, ., get, (, 0, )]
[row]
[0]
[(, ArrayList, ), this, ., rows, ., get, (, itemIndex, )]
[this, ., rows, ., get, (, itemIndex, )]
[this, ., rows]
[this]
[itemIndex]
[(, Number, ), row, ., get, (, seriesIndex, +, 1, )]
[row, ., get, (, seriesIndex, +, 1, )]
[row]
[seriesIndex, +, 1]
[seriesIndex]
[1]
[this, ., rows, ., size, (, )]
[this, ., rows]
[this]
[getItemCount, (, 0, )]
[0]
[this, ., columnNames, ., length]
[this, ., columnNames]
[this]
[(, seriesIndex, <, this, ., columnNames, ., length, ), &&, (, this, ., columnNames, [, seriesIndex, ], !=, null, )]
[(, seriesIndex, <, this, ., columnNames, ., length, )]
[seriesIndex, <, this, ., columnNames, ., length]
[seriesIndex]
[this, ., columnNames, ., length]
[this, ., columnNames]
[this]
[(, this, ., columnNames, [, seriesIndex, ], !=, null, )]
[this, ., columnNames, [, seriesIndex, ], !=, null]
[this, ., columnNames, [, seriesIndex, ]]
[this, ., columnNames]
[this]
[seriesIndex]
[null]
[this, ., columnNames, [, seriesIndex, ]]
[this, ., columnNames]
[this]
[seriesIndex]
[""]
[this, ., connection, ., close, (, )]
[this, ., connection]
[this]
[System, ., err, ., println, (, "JdbcXYDataset: swallowing exception.", )]
[System, ., err]
[System]
["JdbcXYDataset: swallowing exception."]
[this, ., minValue]
[this]
[this, ., maxValue]
[this]
[new, Range, (, this, ., minValue, ,, this, ., maxValue, )]
[this, ., minValue]
[this]
[this, ., maxValue]
[this]
