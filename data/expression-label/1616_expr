[Lists, ., newArrayList, (, )]
[Lists]
[this, ., compiler]
[this]
[compiler]
[Preconditions, ., checkState, (, compiler, ., getLifeCycleStage, (, ), ==, LifeCycleStage, ., NORMALIZED, )]
[Preconditions]
[compiler, ., getLifeCycleStage, (, ), ==, LifeCycleStage, ., NORMALIZED]
[compiler, ., getLifeCycleStage, (, )]
[compiler]
[LifeCycleStage, ., NORMALIZED]
[LifeCycleStage]
[new, SimpleDefinitionFinder, (, compiler, )]
[compiler]
[defFinder, ., process, (, externs, ,, root, )]
[defFinder]
[externs]
[root]
[process, (, externs, ,, root, ,, defFinder, )]
[externs]
[root]
[defFinder]
[definitions, ., getDefinitionSites, (, )]
[definitions]
[canChangeSignature, (, defSite, ,, definitions, )]
[defSite]
[definitions]
[tryEliminateConstantArgs, (, defSite, ,, definitions, )]
[defSite]
[definitions]
[tryEliminateOptionalArgs, (, defSite, ,, definitions, )]
[defSite]
[definitions]
[removedNodes]
[definitions, ., removeReferences, (, n, )]
[definitions]
[n]
[definitionSite, ., definition]
[definitionSite]
[definitionSite, ., inExterns]
[definitionSite]
[false]
[definition, ., getRValue, (, )]
[definition]
[rValue, ==, null, ||, !, rValue, ., isFunction, (, ), ||, NodeUtil, ., isVarArgsFunction, (, rValue, )]
[rValue, ==, null, ||, !, rValue, ., isFunction, (, )]
[rValue, ==, null]
[rValue]
[null]
[!, rValue, ., isFunction, (, )]
[rValue, ., isFunction, (, )]
[rValue]
[NodeUtil, ., isVarArgsFunction, (, rValue, )]
[NodeUtil]
[rValue]
[false]
[!, SimpleDefinitionFinder, ., isSimpleFunctionDeclaration, (, rValue, )]
[SimpleDefinitionFinder, ., isSimpleFunctionDeclaration, (, rValue, )]
[SimpleDefinitionFinder]
[rValue]
[false]
[!, defFinder, ., canModifyDefinition, (, definition, )]
[defFinder, ., canModifyDefinition, (, definition, )]
[defFinder]
[definition]
[false]
[defFinder, ., getUseSites, (, definition, )]
[defFinder]
[definition]
[useSites, ., isEmpty, (, )]
[useSites]
[false]
[useSites]
[!, SimpleDefinitionFinder, ., isCallOrNewSite, (, site, )]
[SimpleDefinitionFinder, ., isCallOrNewSite, (, site, )]
[SimpleDefinitionFinder]
[site]
[false]
[site, ., node]
[site]
[defFinder, ., getDefinitionsReferencedAt, (, nameNode, )]
[defFinder]
[nameNode]
[singleSiteDefinitions, ., size, (, ), >, 1]
[singleSiteDefinitions, ., size, (, )]
[singleSiteDefinitions]
[1]
[false]
[Preconditions, ., checkState, (, !, singleSiteDefinitions, ., isEmpty, (, ), )]
[Preconditions]
[!, singleSiteDefinitions, ., isEmpty, (, )]
[singleSiteDefinitions, ., isEmpty, (, )]
[singleSiteDefinitions]
[Preconditions, ., checkState, (, singleSiteDefinitions, ., contains, (, definition, ), )]
[Preconditions]
[singleSiteDefinitions, ., contains, (, definition, )]
[singleSiteDefinitions]
[definition]
[true]
[-, 1]
[1]
[defSite, ., definition]
[defSite]
[defFinder, ., getUseSites, (, definition, )]
[defFinder]
[definition]
[useSites]
[Preconditions, ., checkState, (, SimpleDefinitionFinder, ., isCallOrNewSite, (, site, ), )]
[Preconditions]
[SimpleDefinitionFinder, ., isCallOrNewSite, (, site, )]
[SimpleDefinitionFinder]
[site]
[site, ., node, ., getParent, (, )]
[site, ., node]
[site]
[call, ., getChildCount, (, ), -, 1]
[call, ., getChildCount, (, )]
[call]
[1]
[numArgs, >, maxArgs]
[numArgs]
[maxArgs]
[maxArgs]
[numArgs]
[eliminateParamsAfter, (, definition, ., getRValue, (, ), ,, maxArgs, )]
[definition, ., getRValue, (, )]
[definition]
[maxArgs]
[Lists, ., newArrayList, (, )]
[Lists]
[true]
[defSite, ., definition]
[defSite]
[defFinder, ., getUseSites, (, definition, )]
[defFinder]
[definition]
[false]
[useSites]
[Preconditions, ., checkState, (, SimpleDefinitionFinder, ., isCallOrNewSite, (, site, ), )]
[Preconditions]
[SimpleDefinitionFinder, ., isCallOrNewSite, (, site, )]
[SimpleDefinitionFinder]
[site]
[site, ., node, ., getParent, (, )]
[site, ., node]
[site]
[call, ., getFirstChild, (, )]
[call]
[firstCall]
[continueLooking]
[buildParameterList, (, parameters, ,, cur, ,, site, ., scope, )]
[parameters]
[cur]
[site, ., scope]
[site]
[firstCall]
[false]
[continueLooking]
[findFixedParameters, (, parameters, ,, cur, )]
[parameters]
[cur]
[!, continueLooking]
[continueLooking]
[continueLooking]
[adjustForSideEffects, (, parameters, )]
[parameters]
[!, continueLooking]
[continueLooking]
[useSites]
[Preconditions, ., checkState, (, SimpleDefinitionFinder, ., isCallOrNewSite, (, site, ), )]
[Preconditions]
[SimpleDefinitionFinder, ., isCallOrNewSite, (, site, )]
[SimpleDefinitionFinder]
[site]
[site, ., node, ., getParent, (, )]
[site, ., node]
[site]
[optimizeCallSite, (, defFinder, ,, parameters, ,, call, )]
[defFinder]
[parameters]
[call]
[definition, ., getRValue, (, )]
[definition]
[function, ., isFunction, (, )]
[function]
[optimizeFunctionDefinition, (, parameters, ,, function, )]
[parameters]
[function]
[false]
[false]
[false]
[parameters, ., size, (, ), -, 1]
[parameters, ., size, (, )]
[parameters]
[1]
[i, >=, 0]
[i]
[0]
[i, --]
[i]
[parameters, ., get, (, i, )]
[parameters]
[i]
[current, ., shouldRemove, &&, (, (, seenUnmovableSideEffects, &&, current, ., canBeSideEffected, (, ), ), ||, (, seenUnmoveableSideEfffected, &&, current, ., hasSideEffects, (, ), ), )]
[current, ., shouldRemove]
[current]
[(, (, seenUnmovableSideEffects, &&, current, ., canBeSideEffected, (, ), ), ||, (, seenUnmoveableSideEfffected, &&, current, ., hasSideEffects, (, ), ), )]
[(, seenUnmovableSideEffects, &&, current, ., canBeSideEffected, (, ), ), ||, (, seenUnmoveableSideEfffected, &&, current, ., hasSideEffects, (, ), )]
[(, seenUnmovableSideEffects, &&, current, ., canBeSideEffected, (, ), )]
[seenUnmovableSideEffects, &&, current, ., canBeSideEffected, (, )]
[seenUnmovableSideEffects]
[current, ., canBeSideEffected, (, )]
[current]
[(, seenUnmoveableSideEfffected, &&, current, ., hasSideEffects, (, ), )]
[seenUnmoveableSideEfffected, &&, current, ., hasSideEffects, (, )]
[seenUnmoveableSideEfffected]
[current, ., hasSideEffects, (, )]
[current]
[current, ., shouldRemove]
[current]
[false]
[current, ., shouldRemove]
[current]
[anyMovable]
[true]
[current, ., canBeSideEffected]
[current]
[seenUnmoveableSideEfffected]
[true]
[current, ., hasSideEffects]
[current]
[seenUnmovableSideEffects]
[true]
[anyMovable]
[false]
[0]
[(, cur, =, cur, ., getNext, (, ), ), !=, null]
[(, cur, =, cur, ., getNext, (, ), )]
[cur]
[cur, ., getNext, (, )]
[cur]
[null]
[index, >=, parameters, ., size, (, )]
[index]
[parameters, ., size, (, )]
[parameters]
[p]
[new, Parameter, (, cur, ,, false, )]
[cur]
[false]
[parameters, ., add, (, p, )]
[parameters]
[p]
[p]
[parameters, ., get, (, index, )]
[parameters]
[index]
[p, ., shouldRemove, (, )]
[p]
[p, ., getArg, (, )]
[p]
[!, cur, ., isEquivalentTo, (, value, )]
[cur, ., isEquivalentTo, (, value, )]
[cur]
[value]
[p, ., setShouldRemove, (, false, )]
[p]
[false]
[anyMovable]
[true]
[setParameterSideEffectInfo, (, p, ,, cur, )]
[p]
[cur]
[index, ++]
[index]
[index, <, parameters, ., size, (, )]
[index]
[parameters, ., size, (, )]
[parameters]
[index, ++]
[index]
[parameters, ., get, (, index, ), ., setShouldRemove, (, false, )]
[parameters, ., get, (, index, )]
[parameters]
[index]
[false]
[anyMovable]
[false]
[(, cur, =, cur, ., getNext, (, ), ), !=, null]
[(, cur, =, cur, ., getNext, (, ), )]
[cur]
[cur, ., getNext, (, )]
[cur]
[null]
[isMovableValue, (, cur, ,, s, )]
[cur]
[s]
[new, Parameter, (, cur, ,, movable, )]
[cur]
[movable]
[setParameterSideEffectInfo, (, p, ,, cur, )]
[p]
[cur]
[parameters, ., add, (, p, )]
[parameters]
[p]
[movable]
[anyMovable]
[true]
[anyMovable]
[!, p, ., hasSideEffects, (, )]
[p, ., hasSideEffects, (, )]
[p]
[p, ., setHasSideEffects, (, NodeUtil, ., mayHaveSideEffects, (, value, ,, compiler, ), )]
[p]
[NodeUtil, ., mayHaveSideEffects, (, value, ,, compiler, )]
[NodeUtil]
[value]
[compiler]
[!, p, ., canBeSideEffected, (, )]
[p, ., canBeSideEffected, (, )]
[p]
[p, ., setCanBeSideEffected, (, NodeUtil, ., canBeSideEffected, (, value, ), )]
[p]
[NodeUtil, ., canBeSideEffected, (, value, )]
[NodeUtil]
[value]
[n, ., getType, (, )]
[n]
[Token, ., THIS]
[Token]
[false]
[Token, ., FUNCTION]
[Token]
[false]
[Token, ., NAME]
[Token]
[n, ., getString, (, ), ., equals, (, "arguments", )]
[n, ., getString, (, )]
[n]
["arguments"]
[false]
[s, ., getVar, (, n, ., getString, (, ), )]
[s]
[n, ., getString, (, )]
[n]
[v, !=, null, &&, (, v, ., isLocal, (, ), ||, v, ., nameNode, ., getParent, (, ), ., isCatch, (, ), )]
[v, !=, null]
[v]
[null]
[(, v, ., isLocal, (, ), ||, v, ., nameNode, ., getParent, (, ), ., isCatch, (, ), )]
[v, ., isLocal, (, ), ||, v, ., nameNode, ., getParent, (, ), ., isCatch, (, )]
[v, ., isLocal, (, )]
[v]
[v, ., nameNode, ., getParent, (, ), ., isCatch, (, )]
[v, ., nameNode, ., getParent, (, )]
[v, ., nameNode]
[v]
[false]
[n, ., getFirstChild, (, )]
[n]
[c, !=, null]
[c]
[null]
[c]
[c, ., getNext, (, )]
[c]
[!, isMovableValue, (, c, ,, s, )]
[isMovableValue, (, c, ,, s, )]
[c]
[s]
[false]
[true]
[parameters, ., size, (, ), -, 1]
[parameters, ., size, (, )]
[parameters]
[1]
[index, >=, 0]
[index]
[0]
[index, --]
[index]
[parameters, ., get, (, index, ), ., shouldRemove, (, )]
[parameters, ., get, (, index, )]
[parameters]
[index]
[eliminateFunctionParamAt, (, function, ,, index, )]
[function]
[index]
[addVariableToFunction, (, function, ,, paramName, ,, parameters, ., get, (, index, ), ., getArg, (, ), )]
[function]
[paramName]
[parameters, ., get, (, index, ), ., getArg, (, )]
[parameters, ., get, (, index, )]
[parameters]
[index]
[parameters, ., size, (, ), -, 1]
[parameters, ., size, (, )]
[parameters]
[1]
[index, >=, 0]
[index]
[0]
[index, --]
[index]
[parameters, ., get, (, index, )]
[parameters]
[index]
[p, ., shouldRemove, (, )]
[p]
[eliminateCallParamAt, (, defFinder, ,, p, ,, call, ,, index, )]
[defFinder]
[p]
[call]
[index]
[this, ., shouldRemove]
[this]
[shouldRemove]
[this, ., arg]
[this]
[arg]
[arg]
[shouldRemove]
[shouldRemove]
[value]
[this, ., hasSideEffects]
[this]
[hasSideEffects]
[hasSideEffects]
[this, ., canBeSideEffected]
[this]
[canBeSideEffected]
[canBeSideEffected]
[Preconditions, ., checkArgument, (, function, ., isFunction, (, ), ,, "Node must be a function.", )]
[Preconditions]
[function, ., isFunction, (, )]
[function]
["Node must be a function."]
[function, ., getLastChild, (, )]
[function]
[Preconditions, ., checkArgument, (, block, ., isBlock, (, ), ,, "Node must be a block.", )]
[Preconditions]
[block, ., isBlock, (, )]
[block]
["Node must be a block."]
[Preconditions, ., checkState, (, value, ., getParent, (, ), ==, null, )]
[Preconditions]
[value, ., getParent, (, ), ==, null]
[value, ., getParent, (, )]
[value]
[null]
[varName, !=, null]
[varName]
[null]
[stmt]
[NodeUtil, ., newVarNode, (, varName, ., getString, (, ), ,, value, )]
[NodeUtil]
[varName, ., getString, (, )]
[varName]
[value]
[stmt]
[IR, ., exprResult, (, value, )]
[IR]
[value]
[block, ., addChildToFront, (, stmt, )]
[block]
[stmt]
[compiler, ., reportCodeChange, (, )]
[compiler]
[false]
[function, ., getFirstChild, (, ), ., getNext, (, ), ., getFirstChild, (, )]
[function, ., getFirstChild, (, ), ., getNext, (, )]
[function, ., getFirstChild, (, )]
[function]
[argIndex, !=, 0, &&, formalArgPtr, !=, null]
[argIndex, !=, 0]
[argIndex]
[0]
[formalArgPtr, !=, null]
[formalArgPtr]
[null]
[formalArgPtr]
[formalArgPtr, ., getNext, (, )]
[formalArgPtr]
[argIndex, --]
[argIndex]
[eliminateParamsAfter, (, function, ,, formalArgPtr, )]
[function]
[formalArgPtr]
[argNode, !=, null]
[argNode]
[null]
[eliminateParamsAfter, (, fnNode, ,, argNode, ., getNext, (, ), )]
[fnNode]
[argNode, ., getNext, (, )]
[argNode]
[argNode, ., detachFromParent, (, )]
[argNode]
[IR, ., var, (, argNode, ), ., copyInformationFrom, (, argNode, )]
[IR, ., var, (, argNode, )]
[IR]
[argNode]
[argNode]
[fnNode, ., getLastChild, (, ), ., addChildrenToFront, (, var, )]
[fnNode, ., getLastChild, (, )]
[fnNode]
[var]
[compiler, ., reportCodeChange, (, )]
[compiler]
[true]
[false]
[Preconditions, ., checkArgument, (, function, ., isFunction, (, ), ,, "Node must be a function.", )]
[Preconditions]
[function, ., isFunction, (, )]
[function]
["Node must be a function."]
[NodeUtil, ., getArgumentForFunction, (, function, ,, argIndex, )]
[NodeUtil]
[function]
[argIndex]
[formalArgPtr, !=, null]
[formalArgPtr]
[null]
[function, ., getFirstChild, (, ), ., getNext, (, ), ., removeChild, (, formalArgPtr, )]
[function, ., getFirstChild, (, ), ., getNext, (, )]
[function, ., getFirstChild, (, )]
[function]
[formalArgPtr]
[formalArgPtr]
[Preconditions, ., checkArgument, (, NodeUtil, ., isCallOrNew, (, call, ), ,, "Node must be a call or new.", )]
[Preconditions]
[NodeUtil, ., isCallOrNew, (, call, )]
[NodeUtil]
[call]
["Node must be a call or new."]
[NodeUtil, ., getArgumentForCallOrNew, (, call, ,, argIndex, )]
[NodeUtil]
[call]
[argIndex]
[formalArgPtr, !=, null]
[formalArgPtr]
[null]
[call, ., removeChild, (, formalArgPtr, )]
[call]
[formalArgPtr]
[p, ., getArg, (, ), !=, formalArgPtr]
[p, ., getArg, (, )]
[p]
[formalArgPtr]
[removedNodes, ., add, (, formalArgPtr, )]
[removedNodes]
[formalArgPtr]
[compiler, ., reportCodeChange, (, )]
[compiler]
[formalArgPtr]
