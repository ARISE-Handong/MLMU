[0.5, *, FastMath, ., log, (, MathUtils, ., TWO_PI, )]
[0.5]
[FastMath, ., log, (, MathUtils, ., TWO_PI, )]
[FastMath]
[MathUtils, ., TWO_PI]
[MathUtils]
[{, 0.0, ,, 0.1534264097200273452913848, ,, 0.0810614667953272582196702, ,, 0.0548141210519176538961390, ,, 0.0413406959554092940938221, ,, 0.03316287351993628748511048, ,, 0.02767792568499833914878929, ,, 0.02374616365629749597132920, ,, 0.02079067210376509311152277, ,, 0.01848845053267318523077934, ,, 0.01664469118982119216319487, ,, 0.01513497322191737887351255, ,, 0.01387612882307074799874573, ,, 0.01281046524292022692424986, ,, 0.01189670994589177009505572, ,, 0.01110455975820691732662991, ,, 0.010411265261972096497478567, ,, 0.009799416126158803298389475, ,, 0.009255462182712732917728637, ,, 0.008768700134139385462952823, ,, 0.008330563433362871256469318, ,, 0.007934114564314020547248100, ,, 0.007573675487951840794972024, ,, 0.007244554301320383179543912, ,, 0.006942840107209529865664152, ,, 0.006665247032707682442354394, ,, 0.006408994188004207068439631, ,, 0.006171712263039457647532867, ,, 0.005951370112758847735624416, ,, 0.005746216513010115682023589, ,, 0.005554733551962801371038690, }]
[0.0]
[0.1534264097200273452913848]
[0.0810614667953272582196702]
[0.0548141210519176538961390]
[0.0413406959554092940938221]
[0.03316287351993628748511048]
[0.02767792568499833914878929]
[0.02374616365629749597132920]
[0.02079067210376509311152277]
[0.01848845053267318523077934]
[0.01664469118982119216319487]
[0.01513497322191737887351255]
[0.01387612882307074799874573]
[0.01281046524292022692424986]
[0.01189670994589177009505572]
[0.01110455975820691732662991]
[0.010411265261972096497478567]
[0.009799416126158803298389475]
[0.009255462182712732917728637]
[0.008768700134139385462952823]
[0.008330563433362871256469318]
[0.007934114564314020547248100]
[0.007573675487951840794972024]
[0.007244554301320383179543912]
[0.006942840107209529865664152]
[0.006665247032707682442354394]
[0.006408994188004207068439631]
[0.006171712263039457647532867]
[0.005951370112758847735624416]
[0.005746216513010115682023589]
[0.005554733551962801371038690]
[z, <, 15.0]
[z]
[15.0]
[2.0, *, z]
[2.0]
[z]
[FastMath, ., floor, (, z2, ), ==, z2]
[FastMath, ., floor, (, z2, )]
[FastMath]
[z2]
[z2]
[ret]
[EXACT_STIRLING_ERRORS, [, (, int, ), z2, ]]
[EXACT_STIRLING_ERRORS]
[(, int, ), z2]
[z2]
[ret]
[Gamma, ., logGamma, (, z, +, 1.0, ), -, (, z, +, 0.5, ), *, FastMath, ., log, (, z, ), +, z, -, HALF_LOG_2_PI]
[Gamma, ., logGamma, (, z, +, 1.0, ), -, (, z, +, 0.5, ), *, FastMath, ., log, (, z, ), +, z]
[Gamma, ., logGamma, (, z, +, 1.0, ), -, (, z, +, 0.5, ), *, FastMath, ., log, (, z, )]
[Gamma, ., logGamma, (, z, +, 1.0, )]
[Gamma]
[z, +, 1.0]
[z]
[1.0]
[(, z, +, 0.5, ), *, FastMath, ., log, (, z, )]
[(, z, +, 0.5, )]
[z, +, 0.5]
[z]
[0.5]
[FastMath, ., log, (, z, )]
[FastMath]
[z]
[z]
[HALF_LOG_2_PI]
[z, *, z]
[z]
[z]
[ret]
[(, 0.083333333333333333333, -, (, 0.00277777777777777777778, -, (, 0.00079365079365079365079365, -, (, 0.000595238095238095238095238, -, 0.0008417508417508417508417508, /, z2, ), /, z2, ), /, z2, ), /, z2, ), /, z]
[(, 0.083333333333333333333, -, (, 0.00277777777777777777778, -, (, 0.00079365079365079365079365, -, (, 0.000595238095238095238095238, -, 0.0008417508417508417508417508, /, z2, ), /, z2, ), /, z2, ), /, z2, )]
[0.083333333333333333333, -, (, 0.00277777777777777777778, -, (, 0.00079365079365079365079365, -, (, 0.000595238095238095238095238, -, 0.0008417508417508417508417508, /, z2, ), /, z2, ), /, z2, ), /, z2]
[0.083333333333333333333]
[(, 0.00277777777777777777778, -, (, 0.00079365079365079365079365, -, (, 0.000595238095238095238095238, -, 0.0008417508417508417508417508, /, z2, ), /, z2, ), /, z2, ), /, z2]
[(, 0.00277777777777777777778, -, (, 0.00079365079365079365079365, -, (, 0.000595238095238095238095238, -, 0.0008417508417508417508417508, /, z2, ), /, z2, ), /, z2, )]
[0.00277777777777777777778, -, (, 0.00079365079365079365079365, -, (, 0.000595238095238095238095238, -, 0.0008417508417508417508417508, /, z2, ), /, z2, ), /, z2]
[0.00277777777777777777778]
[(, 0.00079365079365079365079365, -, (, 0.000595238095238095238095238, -, 0.0008417508417508417508417508, /, z2, ), /, z2, ), /, z2]
[(, 0.00079365079365079365079365, -, (, 0.000595238095238095238095238, -, 0.0008417508417508417508417508, /, z2, ), /, z2, )]
[0.00079365079365079365079365, -, (, 0.000595238095238095238095238, -, 0.0008417508417508417508417508, /, z2, ), /, z2]
[0.00079365079365079365079365]
[(, 0.000595238095238095238095238, -, 0.0008417508417508417508417508, /, z2, ), /, z2]
[(, 0.000595238095238095238095238, -, 0.0008417508417508417508417508, /, z2, )]
[0.000595238095238095238095238, -, 0.0008417508417508417508417508, /, z2]
[0.000595238095238095238095238]
[0.0008417508417508417508417508, /, z2]
[0.0008417508417508417508417508]
[z2]
[z2]
[z2]
[z2]
[z]
[ret]
[FastMath, ., abs, (, x, -, mu, ), <, 0.1, *, (, x, +, mu, )]
[FastMath, ., abs, (, x, -, mu, )]
[FastMath]
[x, -, mu]
[x]
[mu]
[0.1, *, (, x, +, mu, )]
[0.1]
[(, x, +, mu, )]
[x, +, mu]
[x]
[mu]
[x, -, mu]
[x]
[mu]
[d, /, (, x, +, mu, )]
[d]
[(, x, +, mu, )]
[x, +, mu]
[x]
[mu]
[v, *, d]
[v]
[d]
[Double, ., NaN]
[Double]
[2.0, *, x, *, v]
[2.0, *, x]
[2.0]
[x]
[v]
[v]
[v, *, v]
[v]
[v]
[1]
[s1, !=, s]
[s1]
[s]
[s]
[s1]
[ej]
[v]
[s1]
[s, +, ej, /, (, (, j, *, 2, ), +, 1, )]
[s]
[ej, /, (, (, j, *, 2, ), +, 1, )]
[ej]
[(, (, j, *, 2, ), +, 1, )]
[(, j, *, 2, ), +, 1]
[(, j, *, 2, )]
[j, *, 2]
[j]
[2]
[1]
[++, j]
[j]
[ret]
[s1]
[ret]
[x, *, FastMath, ., log, (, x, /, mu, ), +, mu, -, x]
[x, *, FastMath, ., log, (, x, /, mu, ), +, mu]
[x, *, FastMath, ., log, (, x, /, mu, )]
[x]
[FastMath, ., log, (, x, /, mu, )]
[FastMath]
[x, /, mu]
[x]
[mu]
[mu]
[x]
[ret]
[x, ==, 0]
[x]
[0]
[p, <, 0.1]
[p]
[0.1]
[ret]
[-, getDeviancePart, (, n, ,, n, *, q, ), -, n, *, p]
[-, getDeviancePart, (, n, ,, n, *, q, )]
[getDeviancePart, (, n, ,, n, *, q, )]
[n]
[n, *, q]
[n]
[q]
[n, *, p]
[n]
[p]
[ret]
[n, *, FastMath, ., log, (, q, )]
[n]
[FastMath, ., log, (, q, )]
[FastMath]
[q]
[x, ==, n]
[x]
[n]
[q, <, 0.1]
[q]
[0.1]
[ret]
[-, getDeviancePart, (, n, ,, n, *, p, ), -, n, *, q]
[-, getDeviancePart, (, n, ,, n, *, p, )]
[getDeviancePart, (, n, ,, n, *, p, )]
[n]
[n, *, p]
[n]
[p]
[n, *, q]
[n]
[q]
[ret]
[n, *, FastMath, ., log, (, p, )]
[n]
[FastMath, ., log, (, p, )]
[FastMath]
[p]
[ret]
[getStirlingError, (, n, ), -, getStirlingError, (, x, ), -, getStirlingError, (, n, -, x, ), -, getDeviancePart, (, x, ,, n, *, p, ), -, getDeviancePart, (, n, -, x, ,, n, *, q, )]
[getStirlingError, (, n, ), -, getStirlingError, (, x, ), -, getStirlingError, (, n, -, x, ), -, getDeviancePart, (, x, ,, n, *, p, )]
[getStirlingError, (, n, ), -, getStirlingError, (, x, ), -, getStirlingError, (, n, -, x, )]
[getStirlingError, (, n, ), -, getStirlingError, (, x, )]
[getStirlingError, (, n, )]
[n]
[getStirlingError, (, x, )]
[x]
[getStirlingError, (, n, -, x, )]
[n, -, x]
[n]
[x]
[getDeviancePart, (, x, ,, n, *, p, )]
[x]
[n, *, p]
[n]
[p]
[getDeviancePart, (, n, -, x, ,, n, *, q, )]
[n, -, x]
[n]
[x]
[n, *, q]
[n]
[q]
[(, MathUtils, ., TWO_PI, *, x, *, (, n, -, x, ), ), /, n]
[(, MathUtils, ., TWO_PI, *, x, *, (, n, -, x, ), )]
[MathUtils, ., TWO_PI, *, x, *, (, n, -, x, )]
[MathUtils, ., TWO_PI, *, x]
[MathUtils, ., TWO_PI]
[MathUtils]
[x]
[(, n, -, x, )]
[n, -, x]
[n]
[x]
[n]
[ret]
[-, 0.5, *, FastMath, ., log, (, f, ), +, ret]
[-, 0.5, *, FastMath, ., log, (, f, )]
[-, 0.5]
[0.5]
[FastMath, ., log, (, f, )]
[FastMath]
[f]
[ret]
[ret]
