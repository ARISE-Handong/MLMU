[2502918599004103054L]
[Math, ., log, (, 10.0, )]
[Math]
[10.0]
[1e-100]
[false]
[true]
[NumberFormat, ., getInstance, (, )]
[NumberFormat]
[false]
[false]
[false]
[false]
[label]
[setupNumberFmtObj, (, )]
[this, ., allowNegativesFlag]
[this]
[flgVal]
[this, ., allowNegativesFlag]
[this]
[this, ., strictValuesFlag]
[this]
[flgVal]
[this, ., strictValuesFlag]
[this]
[this, ., expTickLabelsFlag]
[this]
[flgVal]
[setupNumberFmtObj, (, )]
[this, ., expTickLabelsFlag]
[this]
[this, ., log10TickLabelsFlag]
[this]
[flag]
[this, ., log10TickLabelsFlag]
[this]
[this, ., autoRangeNextLogFlag]
[this]
[flag]
[this, ., autoRangeNextLogFlag]
[this]
[super, ., setRange, (, range, )]
[super]
[range]
[setupSmallLogFlag, (, )]
[getRange, (, ), ., getLowerBound, (, )]
[getRange, (, )]
[this, ., smallLogFlag]
[this]
[(, !, this, ., allowNegativesFlag, &&, lowerVal, <, 10.0, &&, lowerVal, >, 0.0, )]
[!, this, ., allowNegativesFlag, &&, lowerVal, <, 10.0, &&, lowerVal, >, 0.0]
[!, this, ., allowNegativesFlag, &&, lowerVal, <, 10.0]
[!, this, ., allowNegativesFlag]
[this, ., allowNegativesFlag]
[this]
[lowerVal, <, 10.0]
[lowerVal]
[10.0]
[lowerVal, >, 0.0]
[lowerVal]
[0.0]
[this, ., numberFormatterObj, instanceof, DecimalFormat]
[this, ., numberFormatterObj]
[this]
[(, (, DecimalFormat, ), this, ., numberFormatterObj, ), ., applyPattern, (, this, ., expTickLabelsFlag, ?, "0E0", :, "0.###", )]
[(, (, DecimalFormat, ), this, ., numberFormatterObj, )]
[(, DecimalFormat, ), this, ., numberFormatterObj]
[this, ., numberFormatterObj]
[this]
[this, ., expTickLabelsFlag, ?, "0E0", :, "0.###"]
[this, ., expTickLabelsFlag]
[this]
["0E0"]
["0.###"]
[this, ., smallLogFlag, ?, Math, ., log, (, val, ), /, LOG10_VALUE, :, adjustedLog10, (, val, )]
[this, ., smallLogFlag]
[this]
[Math, ., log, (, val, ), /, LOG10_VALUE]
[Math, ., log, (, val, )]
[Math]
[val]
[LOG10_VALUE]
[adjustedLog10, (, val, )]
[val]
[this, ., smallLogFlag, ?, Math, ., pow, (, 10.0, ,, val, ), :, adjustedPow10, (, val, )]
[this, ., smallLogFlag]
[this]
[Math, ., pow, (, 10.0, ,, val, )]
[Math]
[10.0]
[val]
[adjustedPow10, (, val, )]
[val]
[(, val, <, 0.0, )]
[val, <, 0.0]
[val]
[0.0]
[negFlag]
[val]
[-, val]
[val]
[val, <, 10.0]
[val]
[10.0]
[val]
[(, 10.0, -, val, ), /, 10.0]
[(, 10.0, -, val, )]
[10.0, -, val]
[10.0]
[val]
[10.0]
[Math, ., log, (, val, ), /, LOG10_VALUE]
[Math, ., log, (, val, )]
[Math]
[val]
[LOG10_VALUE]
[negFlag, ?, (, -, res, ), :, res]
[negFlag]
[(, -, res, )]
[-, res]
[res]
[res]
[(, val, <, 0.0, )]
[val, <, 0.0]
[val]
[0.0]
[negFlag]
[val]
[-, val]
[val]
[val, <, 1.0]
[val]
[1.0]
[res]
[(, Math, ., pow, (, 10, ,, val, +, 1.0, ), -, 10.0, ), /, 9.0]
[(, Math, ., pow, (, 10, ,, val, +, 1.0, ), -, 10.0, )]
[Math, ., pow, (, 10, ,, val, +, 1.0, ), -, 10.0]
[Math, ., pow, (, 10, ,, val, +, 1.0, )]
[Math]
[10]
[val, +, 1.0]
[val]
[1.0]
[10.0]
[9.0]
[res]
[Math, ., pow, (, 10, ,, val, )]
[Math]
[10]
[val]
[negFlag, ?, (, -, res, ), :, res]
[negFlag]
[(, -, res, )]
[-, res]
[res]
[res]
[this, ., allowNegativesFlag]
[this]
[lower, >, 10.0]
[lower]
[10.0]
[logFloor]
[Math, ., log, (, lower, ), /, LOG10_VALUE]
[Math, ., log, (, lower, )]
[Math]
[lower]
[LOG10_VALUE]
[logFloor]
[Math, ., floor, (, logFloor, )]
[Math]
[logFloor]
[logFloor]
[Math, ., pow, (, 10, ,, logFloor, )]
[Math]
[10]
[logFloor]
[lower, <, -, 10.0]
[lower]
[-, 10.0]
[10.0]
[logFloor]
[Math, ., log, (, -, lower, ), /, LOG10_VALUE]
[Math, ., log, (, -, lower, )]
[Math]
[-, lower]
[lower]
[LOG10_VALUE]
[logFloor]
[Math, ., floor, (, -, logFloor, )]
[Math]
[-, logFloor]
[logFloor]
[logFloor]
[-, Math, ., pow, (, 10, ,, -, logFloor, )]
[Math, ., pow, (, 10, ,, -, logFloor, )]
[Math]
[10]
[-, logFloor]
[logFloor]
[logFloor]
[Math, ., floor, (, lower, )]
[Math]
[lower]
[lower, >, 0.0]
[lower]
[0.0]
[logFloor]
[Math, ., log, (, lower, ), /, LOG10_VALUE]
[Math, ., log, (, lower, )]
[Math]
[lower]
[LOG10_VALUE]
[logFloor]
[Math, ., floor, (, logFloor, )]
[Math]
[logFloor]
[logFloor]
[Math, ., pow, (, 10, ,, logFloor, )]
[Math]
[10]
[logFloor]
[logFloor]
[Math, ., floor, (, lower, )]
[Math]
[lower]
[logFloor]
[this, ., allowNegativesFlag]
[this]
[upper, >, 10.0]
[upper]
[10.0]
[logCeil]
[Math, ., log, (, upper, ), /, LOG10_VALUE]
[Math, ., log, (, upper, )]
[Math]
[upper]
[LOG10_VALUE]
[logCeil]
[Math, ., ceil, (, logCeil, )]
[Math]
[logCeil]
[logCeil]
[Math, ., pow, (, 10, ,, logCeil, )]
[Math]
[10]
[logCeil]
[upper, <, -, 10.0]
[upper]
[-, 10.0]
[10.0]
[logCeil]
[Math, ., log, (, -, upper, ), /, LOG10_VALUE]
[Math, ., log, (, -, upper, )]
[Math]
[-, upper]
[upper]
[LOG10_VALUE]
[logCeil]
[Math, ., ceil, (, -, logCeil, )]
[Math]
[-, logCeil]
[logCeil]
[logCeil]
[-, Math, ., pow, (, 10, ,, -, logCeil, )]
[Math, ., pow, (, 10, ,, -, logCeil, )]
[Math]
[10]
[-, logCeil]
[logCeil]
[logCeil]
[Math, ., ceil, (, upper, )]
[Math]
[upper]
[upper, >, 0.0]
[upper]
[0.0]
[logCeil]
[Math, ., log, (, upper, ), /, LOG10_VALUE]
[Math, ., log, (, upper, )]
[Math]
[upper]
[LOG10_VALUE]
[logCeil]
[Math, ., ceil, (, logCeil, )]
[Math]
[logCeil]
[logCeil]
[Math, ., pow, (, 10, ,, logCeil, )]
[Math]
[10]
[logCeil]
[logCeil]
[Math, ., ceil, (, upper, )]
[Math]
[upper]
[logCeil]
[getPlot, (, )]
[plot, ==, null]
[plot]
[null]
[plot, instanceof, ValueAxisPlot]
[plot]
[(, ValueAxisPlot, ), plot]
[plot]
[vap, ., getDataRange, (, this, )]
[vap]
[this]
[r, ==, null]
[r]
[null]
[r]
[getDefaultAutoRange, (, )]
[lower]
[r, ., getLowerBound, (, )]
[r]
[lower]
[r, ., getLowerBound, (, )]
[r]
[this, ., strictValuesFlag, &&, !, this, ., allowNegativesFlag, &&, lower, <=, 0.0]
[this, ., strictValuesFlag, &&, !, this, ., allowNegativesFlag]
[this, ., strictValuesFlag]
[this]
[!, this, ., allowNegativesFlag]
[this, ., allowNegativesFlag]
[this]
[lower, <=, 0.0]
[lower]
[0.0]
[new, RuntimeException, (, "Values less than or equal to ", +, "zero not allowed with logarithmic axis", )]
["Values less than or equal to ", +, "zero not allowed with logarithmic axis"]
["Values less than or equal to "]
["zero not allowed with logarithmic axis"]
[lower, >, 0.0, &&, (, lowerMargin, =, getLowerMargin, (, ), ), >, 0.0]
[lower, >, 0.0]
[lower]
[0.0]
[(, lowerMargin, =, getLowerMargin, (, ), ), >, 0.0]
[(, lowerMargin, =, getLowerMargin, (, ), )]
[lowerMargin]
[getLowerMargin, (, )]
[0.0]
[(, Math, ., log, (, lower, ), /, LOG10_VALUE, )]
[Math, ., log, (, lower, ), /, LOG10_VALUE]
[Math, ., log, (, lower, )]
[Math]
[lower]
[LOG10_VALUE]
[(, logAbs, =, Math, ., abs, (, logLower, ), ), <, 1.0]
[(, logAbs, =, Math, ., abs, (, logLower, ), )]
[logAbs]
[Math, ., abs, (, logLower, )]
[Math]
[logLower]
[1.0]
[logAbs]
[1.0]
[lower]
[Math, ., pow, (, 10, ,, (, logLower, -, (, logAbs, *, lowerMargin, ), ), )]
[Math]
[10]
[(, logLower, -, (, logAbs, *, lowerMargin, ), )]
[logLower, -, (, logAbs, *, lowerMargin, )]
[logLower]
[(, logAbs, *, lowerMargin, )]
[logAbs, *, lowerMargin]
[logAbs]
[lowerMargin]
[this, ., autoRangeNextLogFlag]
[this]
[lower]
[computeLogFloor, (, lower, )]
[lower]
[!, this, ., allowNegativesFlag, &&, lower, >=, 0.0, &&, lower, <, SMALL_LOG_VALUE]
[!, this, ., allowNegativesFlag, &&, lower, >=, 0.0]
[!, this, ., allowNegativesFlag]
[this, ., allowNegativesFlag]
[this]
[lower, >=, 0.0]
[lower]
[0.0]
[lower, <, SMALL_LOG_VALUE]
[lower]
[SMALL_LOG_VALUE]
[lower]
[r, ., getLowerBound, (, )]
[r]
[r, ., getUpperBound, (, )]
[r]
[upper, >, 0.0, &&, (, upperMargin, =, getUpperMargin, (, ), ), >, 0.0]
[upper, >, 0.0]
[upper]
[0.0]
[(, upperMargin, =, getUpperMargin, (, ), ), >, 0.0]
[(, upperMargin, =, getUpperMargin, (, ), )]
[upperMargin]
[getUpperMargin, (, )]
[0.0]
[(, Math, ., log, (, upper, ), /, LOG10_VALUE, )]
[Math, ., log, (, upper, ), /, LOG10_VALUE]
[Math, ., log, (, upper, )]
[Math]
[upper]
[LOG10_VALUE]
[(, logAbs, =, Math, ., abs, (, logUpper, ), ), <, 1.0]
[(, logAbs, =, Math, ., abs, (, logUpper, ), )]
[logAbs]
[Math, ., abs, (, logUpper, )]
[Math]
[logUpper]
[1.0]
[logAbs]
[1.0]
[upper]
[Math, ., pow, (, 10, ,, (, logUpper, +, (, logAbs, *, upperMargin, ), ), )]
[Math]
[10]
[(, logUpper, +, (, logAbs, *, upperMargin, ), )]
[logUpper, +, (, logAbs, *, upperMargin, )]
[logUpper]
[(, logAbs, *, upperMargin, )]
[logAbs, *, upperMargin]
[logAbs]
[upperMargin]
[!, this, ., allowNegativesFlag, &&, upper, <, 1.0, &&, upper, >, 0.0, &&, lower, >, 0.0]
[!, this, ., allowNegativesFlag, &&, upper, <, 1.0, &&, upper, >, 0.0]
[!, this, ., allowNegativesFlag, &&, upper, <, 1.0]
[!, this, ., allowNegativesFlag]
[this, ., allowNegativesFlag]
[this]
[upper, <, 1.0]
[upper]
[1.0]
[upper, >, 0.0]
[upper]
[0.0]
[lower, >, 0.0]
[lower]
[0.0]
[Math, ., log, (, upper, ), /, LOG10_VALUE]
[Math, ., log, (, upper, )]
[Math]
[upper]
[LOG10_VALUE]
[expVal]
[Math, ., ceil, (, -, expVal, +, 0.001, )]
[Math]
[-, expVal, +, 0.001]
[-, expVal]
[expVal]
[0.001]
[expVal]
[Math, ., pow, (, 10, ,, expVal, )]
[Math]
[10]
[expVal]
[upper]
[(, expVal, >, 0.0, ), ?, Math, ., ceil, (, upper, *, expVal, ), /, expVal, :, Math, ., ceil, (, upper, )]
[(, expVal, >, 0.0, )]
[expVal, >, 0.0]
[expVal]
[0.0]
[Math, ., ceil, (, upper, *, expVal, ), /, expVal]
[Math, ., ceil, (, upper, *, expVal, )]
[Math]
[upper, *, expVal]
[upper]
[expVal]
[expVal]
[Math, ., ceil, (, upper, )]
[Math]
[upper]
[upper]
[(, this, ., autoRangeNextLogFlag, ), ?, computeLogCeil, (, upper, ), :, Math, ., ceil, (, upper, )]
[(, this, ., autoRangeNextLogFlag, )]
[this, ., autoRangeNextLogFlag]
[this]
[computeLogCeil, (, upper, )]
[upper]
[Math, ., ceil, (, upper, )]
[Math]
[upper]
[getAutoRangeMinimumSize, (, )]
[upper, -, lower, <, minRange]
[upper, -, lower]
[upper]
[lower]
[minRange]
[upper]
[(, upper, +, lower, +, minRange, ), /, 2]
[(, upper, +, lower, +, minRange, )]
[upper, +, lower, +, minRange]
[upper, +, lower]
[upper]
[lower]
[minRange]
[2]
[lower]
[(, upper, +, lower, -, minRange, ), /, 2]
[(, upper, +, lower, -, minRange, )]
[upper, +, lower, -, minRange]
[upper, +, lower]
[upper]
[lower]
[minRange]
[2]
[upper, -, lower, <, minRange]
[upper, -, lower]
[upper]
[lower]
[minRange]
[Math, ., abs, (, upper, )]
[Math]
[upper]
[(, absUpper, >, SMALL_LOG_VALUE, ), ?, absUpper, /, 100.0, :, 0.01]
[(, absUpper, >, SMALL_LOG_VALUE, )]
[absUpper, >, SMALL_LOG_VALUE]
[absUpper]
[SMALL_LOG_VALUE]
[absUpper, /, 100.0]
[absUpper]
[100.0]
[0.01]
[upper]
[(, upper, +, lower, +, adjVal, ), /, 2]
[(, upper, +, lower, +, adjVal, )]
[upper, +, lower, +, adjVal]
[upper, +, lower]
[upper]
[lower]
[adjVal]
[2]
[lower]
[(, upper, +, lower, -, adjVal, ), /, 2]
[(, upper, +, lower, -, adjVal, )]
[upper, +, lower, -, adjVal]
[upper, +, lower]
[upper]
[lower]
[adjVal]
[2]
[setRange, (, new, Range, (, lower, ,, upper, ), ,, false, ,, false, )]
[new, Range, (, lower, ,, upper, )]
[lower]
[upper]
[false]
[false]
[setupSmallLogFlag, (, )]
[getRange, (, )]
[switchedLog10, (, range, ., getLowerBound, (, ), )]
[range, ., getLowerBound, (, )]
[range]
[switchedLog10, (, range, ., getUpperBound, (, ), )]
[range, ., getUpperBound, (, )]
[range]
[0.0]
[0.0]
[RectangleEdge, ., isTopOrBottom, (, edge, )]
[RectangleEdge]
[edge]
[min]
[plotArea, ., getMinX, (, )]
[plotArea]
[max]
[plotArea, ., getMaxX, (, )]
[plotArea]
[RectangleEdge, ., isLeftOrRight, (, edge, )]
[RectangleEdge]
[edge]
[min]
[plotArea, ., getMaxY, (, )]
[plotArea]
[max]
[plotArea, ., getMinY, (, )]
[plotArea]
[value]
[switchedLog10, (, value, )]
[value]
[isInverted, (, )]
[max, -, (, (, (, value, -, axisMin, ), /, (, axisMax, -, axisMin, ), ), *, (, max, -, min, ), )]
[max]
[(, (, (, value, -, axisMin, ), /, (, axisMax, -, axisMin, ), ), *, (, max, -, min, ), )]
[(, (, value, -, axisMin, ), /, (, axisMax, -, axisMin, ), ), *, (, max, -, min, )]
[(, (, value, -, axisMin, ), /, (, axisMax, -, axisMin, ), )]
[(, value, -, axisMin, ), /, (, axisMax, -, axisMin, )]
[(, value, -, axisMin, )]
[value, -, axisMin]
[value]
[axisMin]
[(, axisMax, -, axisMin, )]
[axisMax, -, axisMin]
[axisMax]
[axisMin]
[(, max, -, min, )]
[max, -, min]
[max]
[min]
[min, +, (, (, (, value, -, axisMin, ), /, (, axisMax, -, axisMin, ), ), *, (, max, -, min, ), )]
[min]
[(, (, (, value, -, axisMin, ), /, (, axisMax, -, axisMin, ), ), *, (, max, -, min, ), )]
[(, (, value, -, axisMin, ), /, (, axisMax, -, axisMin, ), ), *, (, max, -, min, )]
[(, (, value, -, axisMin, ), /, (, axisMax, -, axisMin, ), )]
[(, value, -, axisMin, ), /, (, axisMax, -, axisMin, )]
[(, value, -, axisMin, )]
[value, -, axisMin]
[value]
[axisMin]
[(, axisMax, -, axisMin, )]
[axisMax, -, axisMin]
[axisMax]
[axisMin]
[(, max, -, min, )]
[max, -, min]
[max]
[min]
[getRange, (, )]
[switchedLog10, (, range, ., getLowerBound, (, ), )]
[range, ., getLowerBound, (, )]
[range]
[switchedLog10, (, range, ., getUpperBound, (, ), )]
[range, ., getUpperBound, (, )]
[range]
[0.0]
[0.0]
[RectangleEdge, ., isTopOrBottom, (, edge, )]
[RectangleEdge]
[edge]
[plotMin]
[plotArea, ., getX, (, )]
[plotArea]
[plotMax]
[plotArea, ., getMaxX, (, )]
[plotArea]
[RectangleEdge, ., isLeftOrRight, (, edge, )]
[RectangleEdge]
[edge]
[plotMin]
[plotArea, ., getMaxY, (, )]
[plotArea]
[plotMax]
[plotArea, ., getMinY, (, )]
[plotArea]
[isInverted, (, )]
[switchedPow10, (, axisMax, -, (, (, java2DValue, -, plotMin, ), /, (, plotMax, -, plotMin, ), ), *, (, axisMax, -, axisMin, ), )]
[axisMax, -, (, (, java2DValue, -, plotMin, ), /, (, plotMax, -, plotMin, ), ), *, (, axisMax, -, axisMin, )]
[axisMax]
[(, (, java2DValue, -, plotMin, ), /, (, plotMax, -, plotMin, ), ), *, (, axisMax, -, axisMin, )]
[(, (, java2DValue, -, plotMin, ), /, (, plotMax, -, plotMin, ), )]
[(, java2DValue, -, plotMin, ), /, (, plotMax, -, plotMin, )]
[(, java2DValue, -, plotMin, )]
[java2DValue, -, plotMin]
[java2DValue]
[plotMin]
[(, plotMax, -, plotMin, )]
[plotMax, -, plotMin]
[plotMax]
[plotMin]
[(, axisMax, -, axisMin, )]
[axisMax, -, axisMin]
[axisMax]
[axisMin]
[switchedPow10, (, axisMin, +, (, (, java2DValue, -, plotMin, ), /, (, plotMax, -, plotMin, ), ), *, (, axisMax, -, axisMin, ), )]
[axisMin, +, (, (, java2DValue, -, plotMin, ), /, (, plotMax, -, plotMin, ), ), *, (, axisMax, -, axisMin, )]
[axisMin]
[(, (, java2DValue, -, plotMin, ), /, (, plotMax, -, plotMin, ), ), *, (, axisMax, -, axisMin, )]
[(, (, java2DValue, -, plotMin, ), /, (, plotMax, -, plotMin, ), )]
[(, java2DValue, -, plotMin, ), /, (, plotMax, -, plotMin, )]
[(, java2DValue, -, plotMin, )]
[java2DValue, -, plotMin]
[java2DValue]
[plotMin]
[(, plotMax, -, plotMin, )]
[plotMax, -, plotMin]
[plotMax]
[plotMin]
[(, axisMax, -, axisMin, )]
[axisMax, -, axisMin]
[axisMax]
[axisMin]
[switchedLog10, (, getRange, (, ), ., getLowerBound, (, ), )]
[getRange, (, ), ., getLowerBound, (, )]
[getRange, (, )]
[switchedLog10, (, getRange, (, ), ., getUpperBound, (, ), ), -, startLog]
[switchedLog10, (, getRange, (, ), ., getUpperBound, (, ), )]
[getRange, (, ), ., getUpperBound, (, )]
[getRange, (, )]
[startLog]
[isInverted, (, )]
[adjusted]
[new, Range, (, switchedPow10, (, startLog, +, (, lengthLog, *, (, 1, -, upperPercent, ), ), ), ,, switchedPow10, (, startLog, +, (, lengthLog, *, (, 1, -, lowerPercent, ), ), ), )]
[switchedPow10, (, startLog, +, (, lengthLog, *, (, 1, -, upperPercent, ), ), )]
[startLog, +, (, lengthLog, *, (, 1, -, upperPercent, ), )]
[startLog]
[(, lengthLog, *, (, 1, -, upperPercent, ), )]
[lengthLog, *, (, 1, -, upperPercent, )]
[lengthLog]
[(, 1, -, upperPercent, )]
[1, -, upperPercent]
[1]
[upperPercent]
[switchedPow10, (, startLog, +, (, lengthLog, *, (, 1, -, lowerPercent, ), ), )]
[startLog, +, (, lengthLog, *, (, 1, -, lowerPercent, ), )]
[startLog]
[(, lengthLog, *, (, 1, -, lowerPercent, ), )]
[lengthLog, *, (, 1, -, lowerPercent, )]
[lengthLog]
[(, 1, -, lowerPercent, )]
[1, -, lowerPercent]
[1]
[lowerPercent]
[adjusted]
[new, Range, (, switchedPow10, (, startLog, +, (, lengthLog, *, lowerPercent, ), ), ,, switchedPow10, (, startLog, +, (, lengthLog, *, upperPercent, ), ), )]
[switchedPow10, (, startLog, +, (, lengthLog, *, lowerPercent, ), )]
[startLog, +, (, lengthLog, *, lowerPercent, )]
[startLog]
[(, lengthLog, *, lowerPercent, )]
[lengthLog, *, lowerPercent]
[lengthLog]
[lowerPercent]
[switchedPow10, (, startLog, +, (, lengthLog, *, upperPercent, ), )]
[startLog, +, (, lengthLog, *, upperPercent, )]
[startLog]
[(, lengthLog, *, upperPercent, )]
[lengthLog, *, upperPercent]
[lengthLog]
[upperPercent]
[setRange, (, adjusted, )]
[adjusted]
[new, java, ., util, ., ArrayList, (, )]
[getRange, (, )]
[range, ., getLowerBound, (, )]
[range]
[this, ., smallLogFlag, &&, lowerBoundVal, <, SMALL_LOG_VALUE]
[this, ., smallLogFlag]
[this]
[lowerBoundVal, <, SMALL_LOG_VALUE]
[lowerBoundVal]
[SMALL_LOG_VALUE]
[lowerBoundVal]
[SMALL_LOG_VALUE]
[range, ., getUpperBound, (, )]
[range]
[(, int, ), Math, ., rint, (, switchedLog10, (, lowerBoundVal, ), )]
[Math, ., rint, (, switchedLog10, (, lowerBoundVal, ), )]
[Math]
[switchedLog10, (, lowerBoundVal, )]
[lowerBoundVal]
[(, int, ), Math, ., rint, (, switchedLog10, (, upperBoundVal, ), )]
[Math, ., rint, (, switchedLog10, (, upperBoundVal, ), )]
[Math]
[switchedLog10, (, upperBoundVal, )]
[upperBoundVal]
[iBegCount, ==, iEndCount, &&, iBegCount, >, 0, &&, Math, ., pow, (, 10, ,, iBegCount, ), >, lowerBoundVal]
[iBegCount, ==, iEndCount, &&, iBegCount, >, 0]
[iBegCount, ==, iEndCount]
[iBegCount]
[iEndCount]
[iBegCount, >, 0]
[iBegCount]
[0]
[Math, ., pow, (, 10, ,, iBegCount, ), >, lowerBoundVal]
[Math, ., pow, (, 10, ,, iBegCount, )]
[Math]
[10]
[iBegCount]
[lowerBoundVal]
[--, iBegCount]
[iBegCount]
[false]
[iBegCount]
[i, <=, iEndCount]
[i]
[iEndCount]
[i, ++]
[i]
[0]
[j, <, 10]
[j]
[10]
[++, j]
[j]
[this, ., smallLogFlag]
[this]
[currentTickValue]
[Math, ., pow, (, 10, ,, i, ), +, (, Math, ., pow, (, 10, ,, i, ), *, j, )]
[Math, ., pow, (, 10, ,, i, )]
[Math]
[10]
[i]
[(, Math, ., pow, (, 10, ,, i, ), *, j, )]
[Math, ., pow, (, 10, ,, i, ), *, j]
[Math, ., pow, (, 10, ,, i, )]
[Math]
[10]
[i]
[j]
[this, ., expTickLabelsFlag, ||, (, i, <, 0, &&, currentTickValue, >, 0.0, &&, currentTickValue, <, 1.0, )]
[this, ., expTickLabelsFlag]
[this]
[(, i, <, 0, &&, currentTickValue, >, 0.0, &&, currentTickValue, <, 1.0, )]
[i, <, 0, &&, currentTickValue, >, 0.0, &&, currentTickValue, <, 1.0]
[i, <, 0, &&, currentTickValue, >, 0.0]
[i, <, 0]
[i]
[0]
[currentTickValue, >, 0.0]
[currentTickValue]
[0.0]
[currentTickValue, <, 1.0]
[currentTickValue]
[1.0]
[j, ==, 0, ||, (, i, >, -, 4, &&, j, <, 2, ), ||, currentTickValue, >=, upperBoundVal]
[j, ==, 0, ||, (, i, >, -, 4, &&, j, <, 2, )]
[j, ==, 0]
[j]
[0]
[(, i, >, -, 4, &&, j, <, 2, )]
[i, >, -, 4, &&, j, <, 2]
[i, >, -, 4]
[i]
[-, 4]
[4]
[j, <, 2]
[j]
[2]
[currentTickValue, >=, upperBoundVal]
[currentTickValue]
[upperBoundVal]
[this, ., numberFormatterObj, ., setMaximumFractionDigits, (, -, i, )]
[this, ., numberFormatterObj]
[this]
[-, i]
[i]
[tickLabel]
[makeTickLabel, (, currentTickValue, ,, true, )]
[currentTickValue]
[true]
[tickLabel]
[""]
[tickLabel]
[(, j, <, 1, ||, (, i, <, 1, &&, j, <, 5, ), ||, (, j, <, 4, -, i, ), ||, currentTickValue, >=, upperBoundVal, ), ?, makeTickLabel, (, currentTickValue, ), :, ""]
[(, j, <, 1, ||, (, i, <, 1, &&, j, <, 5, ), ||, (, j, <, 4, -, i, ), ||, currentTickValue, >=, upperBoundVal, )]
[j, <, 1, ||, (, i, <, 1, &&, j, <, 5, ), ||, (, j, <, 4, -, i, ), ||, currentTickValue, >=, upperBoundVal]
[j, <, 1, ||, (, i, <, 1, &&, j, <, 5, ), ||, (, j, <, 4, -, i, )]
[j, <, 1, ||, (, i, <, 1, &&, j, <, 5, )]
[j, <, 1]
[j]
[1]
[(, i, <, 1, &&, j, <, 5, )]
[i, <, 1, &&, j, <, 5]
[i, <, 1]
[i]
[1]
[j, <, 5]
[j]
[5]
[(, j, <, 4, -, i, )]
[j, <, 4, -, i]
[j]
[4, -, i]
[4]
[i]
[currentTickValue, >=, upperBoundVal]
[currentTickValue]
[upperBoundVal]
[makeTickLabel, (, currentTickValue, )]
[currentTickValue]
[""]
[zeroTickFlag]
[--, j]
[j]
[currentTickValue]
[(, i, >=, 0, ), ?, Math, ., pow, (, 10, ,, i, ), +, (, Math, ., pow, (, 10, ,, i, ), *, j, ), :, -, (, Math, ., pow, (, 10, ,, -, i, ), -, (, Math, ., pow, (, 10, ,, -, i, -, 1, ), *, j, ), )]
[(, i, >=, 0, )]
[i, >=, 0]
[i]
[0]
[Math, ., pow, (, 10, ,, i, ), +, (, Math, ., pow, (, 10, ,, i, ), *, j, )]
[Math, ., pow, (, 10, ,, i, )]
[Math]
[10]
[i]
[(, Math, ., pow, (, 10, ,, i, ), *, j, )]
[Math, ., pow, (, 10, ,, i, ), *, j]
[Math, ., pow, (, 10, ,, i, )]
[Math]
[10]
[i]
[j]
[-, (, Math, ., pow, (, 10, ,, -, i, ), -, (, Math, ., pow, (, 10, ,, -, i, -, 1, ), *, j, ), )]
[(, Math, ., pow, (, 10, ,, -, i, ), -, (, Math, ., pow, (, 10, ,, -, i, -, 1, ), *, j, ), )]
[Math, ., pow, (, 10, ,, -, i, ), -, (, Math, ., pow, (, 10, ,, -, i, -, 1, ), *, j, )]
[Math, ., pow, (, 10, ,, -, i, )]
[Math]
[10]
[-, i]
[i]
[(, Math, ., pow, (, 10, ,, -, i, -, 1, ), *, j, )]
[Math, ., pow, (, 10, ,, -, i, -, 1, ), *, j]
[Math, ., pow, (, 10, ,, -, i, -, 1, )]
[Math]
[10]
[-, i, -, 1]
[-, i]
[i]
[1]
[j]
[!, zeroTickFlag]
[zeroTickFlag]
[Math, ., abs, (, currentTickValue, -, 1.0, ), <, 0.0001, &&, lowerBoundVal, <=, 0.0, &&, upperBoundVal, >=, 0.0]
[Math, ., abs, (, currentTickValue, -, 1.0, ), <, 0.0001, &&, lowerBoundVal, <=, 0.0]
[Math, ., abs, (, currentTickValue, -, 1.0, ), <, 0.0001]
[Math, ., abs, (, currentTickValue, -, 1.0, )]
[Math]
[currentTickValue, -, 1.0]
[currentTickValue]
[1.0]
[0.0001]
[lowerBoundVal, <=, 0.0]
[lowerBoundVal]
[0.0]
[upperBoundVal, >=, 0.0]
[upperBoundVal]
[0.0]
[currentTickValue]
[0.0]
[zeroTickFlag]
[true]
[zeroTickFlag]
[false]
[tickLabel]
[(, (, this, ., expTickLabelsFlag, &&, j, <, 2, ), ||, j, <, 1, ||, (, i, <, 1, &&, j, <, 5, ), ||, (, j, <, 4, -, i, ), ||, currentTickValue, >=, upperBoundVal, ), ?, makeTickLabel, (, currentTickValue, ), :, ""]
[(, (, this, ., expTickLabelsFlag, &&, j, <, 2, ), ||, j, <, 1, ||, (, i, <, 1, &&, j, <, 5, ), ||, (, j, <, 4, -, i, ), ||, currentTickValue, >=, upperBoundVal, )]
[(, this, ., expTickLabelsFlag, &&, j, <, 2, ), ||, j, <, 1, ||, (, i, <, 1, &&, j, <, 5, ), ||, (, j, <, 4, -, i, ), ||, currentTickValue, >=, upperBoundVal]
[(, this, ., expTickLabelsFlag, &&, j, <, 2, ), ||, j, <, 1, ||, (, i, <, 1, &&, j, <, 5, ), ||, (, j, <, 4, -, i, )]
[(, this, ., expTickLabelsFlag, &&, j, <, 2, ), ||, j, <, 1, ||, (, i, <, 1, &&, j, <, 5, )]
[(, this, ., expTickLabelsFlag, &&, j, <, 2, ), ||, j, <, 1]
[(, this, ., expTickLabelsFlag, &&, j, <, 2, )]
[this, ., expTickLabelsFlag, &&, j, <, 2]
[this, ., expTickLabelsFlag]
[this]
[j, <, 2]
[j]
[2]
[j, <, 1]
[j]
[1]
[(, i, <, 1, &&, j, <, 5, )]
[i, <, 1, &&, j, <, 5]
[i, <, 1]
[i]
[1]
[j, <, 5]
[j]
[5]
[(, j, <, 4, -, i, )]
[j, <, 4, -, i]
[j]
[4, -, i]
[4]
[i]
[currentTickValue, >=, upperBoundVal]
[currentTickValue]
[upperBoundVal]
[makeTickLabel, (, currentTickValue, )]
[currentTickValue]
[""]
[currentTickValue, >, upperBoundVal]
[currentTickValue]
[upperBoundVal]
[ticks]
[currentTickValue, >=, lowerBoundVal, -, SMALL_LOG_VALUE]
[currentTickValue]
[lowerBoundVal, -, SMALL_LOG_VALUE]
[lowerBoundVal]
[SMALL_LOG_VALUE]
[null]
[null]
[0.0]
[isVerticalTickLabels, (, )]
[anchor]
[TextAnchor, ., CENTER_RIGHT]
[TextAnchor]
[rotationAnchor]
[TextAnchor, ., CENTER_RIGHT]
[TextAnchor]
[edge, ==, RectangleEdge, ., TOP]
[edge]
[RectangleEdge, ., TOP]
[RectangleEdge]
[angle]
[Math, ., PI, /, 2.0]
[Math, ., PI]
[Math]
[2.0]
[angle]
[-, Math, ., PI, /, 2.0]
[-, Math, ., PI]
[Math, ., PI]
[Math]
[2.0]
[edge, ==, RectangleEdge, ., TOP]
[edge]
[RectangleEdge, ., TOP]
[RectangleEdge]
[anchor]
[TextAnchor, ., BOTTOM_CENTER]
[TextAnchor]
[rotationAnchor]
[TextAnchor, ., BOTTOM_CENTER]
[TextAnchor]
[anchor]
[TextAnchor, ., TOP_CENTER]
[TextAnchor]
[rotationAnchor]
[TextAnchor, ., TOP_CENTER]
[TextAnchor]
[new, NumberTick, (, new, Double, (, currentTickValue, ), ,, tickLabel, ,, anchor, ,, rotationAnchor, ,, angle, )]
[new, Double, (, currentTickValue, )]
[currentTickValue]
[tickLabel]
[anchor]
[rotationAnchor]
[angle]
[ticks, ., add, (, tick, )]
[ticks]
[tick]
[ticks]
[new, java, ., util, ., ArrayList, (, )]
[getRange, (, ), ., getLowerBound, (, )]
[getRange, (, )]
[this, ., smallLogFlag, &&, lowerBoundVal, <, SMALL_LOG_VALUE]
[this, ., smallLogFlag]
[this]
[lowerBoundVal, <, SMALL_LOG_VALUE]
[lowerBoundVal]
[SMALL_LOG_VALUE]
[lowerBoundVal]
[SMALL_LOG_VALUE]
[getRange, (, ), ., getUpperBound, (, )]
[getRange, (, )]
[(, int, ), Math, ., rint, (, switchedLog10, (, lowerBoundVal, ), )]
[Math, ., rint, (, switchedLog10, (, lowerBoundVal, ), )]
[Math]
[switchedLog10, (, lowerBoundVal, )]
[lowerBoundVal]
[(, int, ), Math, ., rint, (, switchedLog10, (, upperBoundVal, ), )]
[Math, ., rint, (, switchedLog10, (, upperBoundVal, ), )]
[Math]
[switchedLog10, (, upperBoundVal, )]
[upperBoundVal]
[iBegCount, ==, iEndCount, &&, iBegCount, >, 0, &&, Math, ., pow, (, 10, ,, iBegCount, ), >, lowerBoundVal]
[iBegCount, ==, iEndCount, &&, iBegCount, >, 0]
[iBegCount, ==, iEndCount]
[iBegCount]
[iEndCount]
[iBegCount, >, 0]
[iBegCount]
[0]
[Math, ., pow, (, 10, ,, iBegCount, ), >, lowerBoundVal]
[Math, ., pow, (, 10, ,, iBegCount, )]
[Math]
[10]
[iBegCount]
[lowerBoundVal]
[--, iBegCount]
[iBegCount]
[false]
[iBegCount]
[i, <=, iEndCount]
[i]
[iEndCount]
[i, ++]
[i]
[10]
[i, ==, iEndCount]
[i]
[iEndCount]
[jEndCount]
[1]
[0]
[j, <, jEndCount]
[j]
[jEndCount]
[j, ++]
[j]
[this, ., smallLogFlag]
[this]
[tickVal]
[Math, ., pow, (, 10, ,, i, ), +, (, Math, ., pow, (, 10, ,, i, ), *, j, )]
[Math, ., pow, (, 10, ,, i, )]
[Math]
[10]
[i]
[(, Math, ., pow, (, 10, ,, i, ), *, j, )]
[Math, ., pow, (, 10, ,, i, ), *, j]
[Math, ., pow, (, 10, ,, i, )]
[Math]
[10]
[i]
[j]
[j, ==, 0]
[j]
[0]
[this, ., log10TickLabelsFlag]
[this]
[tickLabel]
["10^", +, i]
["10^"]
[i]
[this, ., expTickLabelsFlag]
[this]
[tickLabel]
["1e", +, i]
["1e"]
[i]
[i, >=, 0]
[i]
[0]
[getNumberFormatOverride, (, )]
[format, !=, null]
[format]
[null]
[tickLabel]
[format, ., format, (, tickVal, )]
[format]
[tickVal]
[tickLabel]
[Long, ., toString, (, (, long, ), Math, ., rint, (, tickVal, ), )]
[Long]
[(, long, ), Math, ., rint, (, tickVal, )]
[Math, ., rint, (, tickVal, )]
[Math]
[tickVal]
[this, ., numberFormatterObj, ., setMaximumFractionDigits, (, -, i, )]
[this, ., numberFormatterObj]
[this]
[-, i]
[i]
[tickLabel]
[this, ., numberFormatterObj, ., format, (, tickVal, )]
[this, ., numberFormatterObj]
[this]
[tickVal]
[tickLabel]
[""]
[zeroTickFlag]
[--, j]
[j]
[tickVal]
[(, i, >=, 0, ), ?, Math, ., pow, (, 10, ,, i, ), +, (, Math, ., pow, (, 10, ,, i, ), *, j, ), :, -, (, Math, ., pow, (, 10, ,, -, i, ), -, (, Math, ., pow, (, 10, ,, -, i, -, 1, ), *, j, ), )]
[(, i, >=, 0, )]
[i, >=, 0]
[i]
[0]
[Math, ., pow, (, 10, ,, i, ), +, (, Math, ., pow, (, 10, ,, i, ), *, j, )]
[Math, ., pow, (, 10, ,, i, )]
[Math]
[10]
[i]
[(, Math, ., pow, (, 10, ,, i, ), *, j, )]
[Math, ., pow, (, 10, ,, i, ), *, j]
[Math, ., pow, (, 10, ,, i, )]
[Math]
[10]
[i]
[j]
[-, (, Math, ., pow, (, 10, ,, -, i, ), -, (, Math, ., pow, (, 10, ,, -, i, -, 1, ), *, j, ), )]
[(, Math, ., pow, (, 10, ,, -, i, ), -, (, Math, ., pow, (, 10, ,, -, i, -, 1, ), *, j, ), )]
[Math, ., pow, (, 10, ,, -, i, ), -, (, Math, ., pow, (, 10, ,, -, i, -, 1, ), *, j, )]
[Math, ., pow, (, 10, ,, -, i, )]
[Math]
[10]
[-, i]
[i]
[(, Math, ., pow, (, 10, ,, -, i, -, 1, ), *, j, )]
[Math, ., pow, (, 10, ,, -, i, -, 1, ), *, j]
[Math, ., pow, (, 10, ,, -, i, -, 1, )]
[Math]
[10]
[-, i, -, 1]
[-, i]
[i]
[1]
[j]
[j, ==, 0]
[j]
[0]
[!, zeroTickFlag]
[zeroTickFlag]
[i, >, iBegCount, &&, i, <, iEndCount, &&, Math, ., abs, (, tickVal, -, 1.0, ), <, 0.0001]
[i, >, iBegCount, &&, i, <, iEndCount]
[i, >, iBegCount]
[i]
[iBegCount]
[i, <, iEndCount]
[i]
[iEndCount]
[Math, ., abs, (, tickVal, -, 1.0, ), <, 0.0001]
[Math, ., abs, (, tickVal, -, 1.0, )]
[Math]
[tickVal, -, 1.0]
[tickVal]
[1.0]
[0.0001]
[tickVal]
[0.0]
[zeroTickFlag]
[true]
[tickLabel]
["0"]
[this, ., log10TickLabelsFlag]
[this]
[tickLabel]
[(, (, (, i, <, 0, ), ?, "-", :, "", ), +, "10^", +, Math, ., abs, (, i, ), )]
[(, (, i, <, 0, ), ?, "-", :, "", ), +, "10^", +, Math, ., abs, (, i, )]
[(, (, i, <, 0, ), ?, "-", :, "", ), +, "10^"]
[(, (, i, <, 0, ), ?, "-", :, "", )]
[(, i, <, 0, ), ?, "-", :, ""]
[(, i, <, 0, )]
[i, <, 0]
[i]
[0]
["-"]
[""]
["10^"]
[Math, ., abs, (, i, )]
[Math]
[i]
[this, ., expTickLabelsFlag]
[this]
[tickLabel]
[(, (, (, i, <, 0, ), ?, "-", :, "", ), +, "1e", +, Math, ., abs, (, i, ), )]
[(, (, i, <, 0, ), ?, "-", :, "", ), +, "1e", +, Math, ., abs, (, i, )]
[(, (, i, <, 0, ), ?, "-", :, "", ), +, "1e"]
[(, (, i, <, 0, ), ?, "-", :, "", )]
[(, i, <, 0, ), ?, "-", :, ""]
[(, i, <, 0, )]
[i, <, 0]
[i]
[0]
["-"]
[""]
["1e"]
[Math, ., abs, (, i, )]
[Math]
[i]
[getNumberFormatOverride, (, )]
[format, !=, null]
[format]
[null]
[tickLabel]
[format, ., format, (, tickVal, )]
[format]
[tickVal]
[tickLabel]
[Long, ., toString, (, (, long, ), Math, ., rint, (, tickVal, ), )]
[Long]
[(, long, ), Math, ., rint, (, tickVal, )]
[Math, ., rint, (, tickVal, )]
[Math]
[tickVal]
[tickLabel]
[""]
[zeroTickFlag]
[false]
[tickLabel]
[""]
[zeroTickFlag]
[false]
[tickVal, >, upperBoundVal]
[tickVal]
[upperBoundVal]
[ticks]
[tickVal, >=, lowerBoundVal, -, SMALL_LOG_VALUE]
[tickVal]
[lowerBoundVal, -, SMALL_LOG_VALUE]
[lowerBoundVal]
[SMALL_LOG_VALUE]
[null]
[null]
[0.0]
[isVerticalTickLabels, (, )]
[edge, ==, RectangleEdge, ., LEFT]
[edge]
[RectangleEdge, ., LEFT]
[RectangleEdge]
[anchor]
[TextAnchor, ., BOTTOM_CENTER]
[TextAnchor]
[rotationAnchor]
[TextAnchor, ., BOTTOM_CENTER]
[TextAnchor]
[angle]
[-, Math, ., PI, /, 2.0]
[-, Math, ., PI]
[Math, ., PI]
[Math]
[2.0]
[anchor]
[TextAnchor, ., BOTTOM_CENTER]
[TextAnchor]
[rotationAnchor]
[TextAnchor, ., BOTTOM_CENTER]
[TextAnchor]
[angle]
[Math, ., PI, /, 2.0]
[Math, ., PI]
[Math]
[2.0]
[edge, ==, RectangleEdge, ., LEFT]
[edge]
[RectangleEdge, ., LEFT]
[RectangleEdge]
[anchor]
[TextAnchor, ., CENTER_RIGHT]
[TextAnchor]
[rotationAnchor]
[TextAnchor, ., CENTER_RIGHT]
[TextAnchor]
[anchor]
[TextAnchor, ., CENTER_LEFT]
[TextAnchor]
[rotationAnchor]
[TextAnchor, ., CENTER_LEFT]
[TextAnchor]
[ticks, ., add, (, new, NumberTick, (, new, Double, (, tickVal, ), ,, tickLabel, ,, anchor, ,, rotationAnchor, ,, angle, ), )]
[ticks]
[new, NumberTick, (, new, Double, (, tickVal, ), ,, tickLabel, ,, anchor, ,, rotationAnchor, ,, angle, )]
[new, Double, (, tickVal, )]
[tickVal]
[tickLabel]
[anchor]
[rotationAnchor]
[angle]
[ticks]
[this, ., expTickLabelsFlag, ||, forceFmtFlag]
[this, ., expTickLabelsFlag]
[this]
[forceFmtFlag]
[this, ., numberFormatterObj, ., format, (, val, ), ., toLowerCase, (, )]
[this, ., numberFormatterObj, ., format, (, val, )]
[this, ., numberFormatterObj]
[this]
[val]
[getTickUnit, (, ), ., valueToString, (, val, )]
[getTickUnit, (, )]
[val]
[makeTickLabel, (, val, ,, false, )]
[val]
[false]
