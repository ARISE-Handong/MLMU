[getField, (, index, ,, getChronology, (, ), ), ., getType, (, )]
[getField, (, index, ,, getChronology, (, ), )]
[index]
[getChronology, (, )]
[new, DateTimeFieldType, [, size, (, ), ]]
[size, (, )]
[0]
[i, <, result, ., length]
[i]
[result, ., length]
[result]
[i, ++]
[i]
[result, [, i, ]]
[result]
[i]
[getFieldType, (, i, )]
[i]
[result]
[getField, (, index, ,, getChronology, (, ), )]
[index]
[getChronology, (, )]
[new, DateTimeField, [, size, (, ), ]]
[size, (, )]
[0]
[i, <, result, ., length]
[i]
[result, ., length]
[result]
[i, ++]
[i]
[result, [, i, ]]
[result]
[i]
[getField, (, i, )]
[i]
[result]
[new, int, [, size, (, ), ]]
[size, (, )]
[0]
[i, <, result, ., length]
[i]
[result, ., length]
[result]
[i, ++]
[i]
[result, [, i, ]]
[result]
[i]
[getValue, (, i, )]
[i]
[result]
[getValue, (, indexOfSupported, (, type, ), )]
[indexOfSupported, (, type, )]
[type]
[(, indexOf, (, type, ), !=, -, 1, )]
[indexOf, (, type, ), !=, -, 1]
[indexOf, (, type, )]
[type]
[-, 1]
[1]
[0]
[size, (, )]
[i, <, isize]
[i]
[isize]
[i, ++]
[i]
[getFieldType, (, i, ), ==, type]
[getFieldType, (, i, )]
[i]
[type]
[i]
[-, 1]
[1]
[indexOf, (, type, )]
[type]
[index, ==, -, 1]
[index]
[-, 1]
[1]
[new, IllegalArgumentException, (, "Field '", +, type, +, "' is not supported", )]
["Field '", +, type, +, "' is not supported"]
["Field '", +, type]
["Field '"]
[type]
["' is not supported"]
[index]
[0]
[size, (, )]
[i, <, isize]
[i]
[isize]
[i, ++]
[i]
[getFieldType, (, i, ), ., getDurationType, (, ), ==, type]
[getFieldType, (, i, ), ., getDurationType, (, )]
[getFieldType, (, i, )]
[i]
[type]
[i]
[-, 1]
[1]
[indexOf, (, type, )]
[type]
[index, ==, -, 1]
[index]
[-, 1]
[1]
[new, IllegalArgumentException, (, "Field '", +, type, +, "' is not supported", )]
["Field '", +, type, +, "' is not supported"]
["Field '", +, type]
["Field '"]
[type]
["' is not supported"]
[index]
[DateTimeUtils, ., getInstantChronology, (, baseInstant, )]
[DateTimeUtils]
[baseInstant]
[DateTimeUtils, ., getInstantMillis, (, baseInstant, )]
[DateTimeUtils]
[baseInstant]
[chrono, ., set, (, this, ,, instantMillis, )]
[chrono]
[this]
[instantMillis]
[new, DateTime, (, resolved, ,, chrono, )]
[resolved]
[chrono]
[this, ==, partial]
[this]
[partial]
[true]
[partial, instanceof, ReadablePartial, ==, false]
[partial, instanceof, ReadablePartial]
[partial]
[false]
[false]
[(, ReadablePartial, ), partial]
[partial]
[size, (, ), !=, other, ., size, (, )]
[size, (, )]
[other, ., size, (, )]
[other]
[false]
[0]
[size, (, )]
[i, <, isize]
[i]
[isize]
[i, ++]
[i]
[getValue, (, i, ), !=, other, ., getValue, (, i, ), ||, getFieldType, (, i, ), !=, other, ., getFieldType, (, i, )]
[getValue, (, i, ), !=, other, ., getValue, (, i, )]
[getValue, (, i, )]
[i]
[other, ., getValue, (, i, )]
[other]
[i]
[getFieldType, (, i, ), !=, other, ., getFieldType, (, i, )]
[getFieldType, (, i, )]
[i]
[other, ., getFieldType, (, i, )]
[other]
[i]
[false]
[FieldUtils, ., equals, (, getChronology, (, ), ,, other, ., getChronology, (, ), )]
[FieldUtils]
[getChronology, (, )]
[other, ., getChronology, (, )]
[other]
[157]
[0]
[size, (, )]
[i, <, isize]
[i]
[isize]
[i, ++]
[i]
[total]
[23, *, total, +, getValue, (, i, )]
[23, *, total]
[23]
[total]
[getValue, (, i, )]
[i]
[total]
[23, *, total, +, getFieldType, (, i, ), ., hashCode, (, )]
[23, *, total]
[23]
[total]
[getFieldType, (, i, ), ., hashCode, (, )]
[getFieldType, (, i, )]
[i]
[total]
[getChronology, (, ), ., hashCode, (, )]
[getChronology, (, )]
[total]
[this, ==, other]
[this]
[other]
[0]
[size, (, ), !=, other, ., size, (, )]
[size, (, )]
[other, ., size, (, )]
[other]
[new, ClassCastException, (, "ReadablePartial objects must have matching field types", )]
["ReadablePartial objects must have matching field types"]
[0]
[size, (, )]
[i, <, isize]
[i]
[isize]
[i, ++]
[i]
[getFieldType, (, i, ), !=, other, ., getFieldType, (, i, )]
[getFieldType, (, i, )]
[i]
[other, ., getFieldType, (, i, )]
[other]
[i]
[new, ClassCastException, (, "ReadablePartial objects must have matching field types", )]
["ReadablePartial objects must have matching field types"]
[0]
[size, (, )]
[i, <, isize]
[i]
[isize]
[i, ++]
[i]
[getValue, (, i, ), >, other, ., getValue, (, i, )]
[getValue, (, i, )]
[i]
[other, ., getValue, (, i, )]
[other]
[i]
[1]
[getValue, (, i, ), <, other, ., getValue, (, i, )]
[getValue, (, i, )]
[i]
[other, ., getValue, (, i, )]
[other]
[i]
[-, 1]
[1]
[0]
[partial, ==, null]
[partial]
[null]
[new, IllegalArgumentException, (, "Partial cannot be null", )]
["Partial cannot be null"]
[compareTo, (, partial, ), >, 0]
[compareTo, (, partial, )]
[partial]
[0]
[partial, ==, null]
[partial]
[null]
[new, IllegalArgumentException, (, "Partial cannot be null", )]
["Partial cannot be null"]
[compareTo, (, partial, ), <, 0]
[compareTo, (, partial, )]
[partial]
[0]
[partial, ==, null]
[partial]
[null]
[new, IllegalArgumentException, (, "Partial cannot be null", )]
["Partial cannot be null"]
[compareTo, (, partial, ), ==, 0]
[compareTo, (, partial, )]
[partial]
[0]
[formatter, ==, null]
[formatter]
[null]
[toString, (, )]
[formatter, ., print, (, this, )]
[formatter]
[this]
