[20120201L]
[omegaCount]
[0]
[omegaReal]
[null]
[omegaImaginaryCounterClockwise]
[null]
[omegaImaginaryClockwise]
[null]
[isCounterClockWise]
[true]
[omegaCount, ==, 0]
[omegaCount]
[0]
[new, MathIllegalStateException, (, LocalizedFormats, ., ROOTS_OF_UNITY_NOT_COMPUTED_YET, )]
[LocalizedFormats, ., ROOTS_OF_UNITY_NOT_COMPUTED_YET]
[LocalizedFormats]
[isCounterClockWise]
[n, ==, 0]
[n]
[0]
[new, ZeroException, (, LocalizedFormats, ., CANNOT_COMPUTE_0TH_ROOT_OF_UNITY, )]
[LocalizedFormats, ., CANNOT_COMPUTE_0TH_ROOT_OF_UNITY]
[LocalizedFormats]
[isCounterClockWise]
[n, >, 0]
[n]
[0]
[FastMath, ., abs, (, n, )]
[FastMath]
[n]
[absN, ==, omegaCount]
[absN]
[omegaCount]
[2.0, *, FastMath, ., PI, /, absN]
[2.0, *, FastMath, ., PI]
[2.0]
[FastMath, ., PI]
[FastMath]
[absN]
[FastMath, ., cos, (, t, )]
[FastMath]
[t]
[FastMath, ., sin, (, t, )]
[FastMath]
[t]
[omegaReal]
[new, double, [, absN, ]]
[absN]
[omegaImaginaryCounterClockwise]
[new, double, [, absN, ]]
[absN]
[omegaImaginaryClockwise]
[new, double, [, absN, ]]
[absN]
[omegaReal, [, 0, ]]
[omegaReal]
[0]
[1.0]
[omegaImaginaryCounterClockwise, [, 0, ]]
[omegaImaginaryCounterClockwise]
[0]
[0.0]
[omegaImaginaryClockwise, [, 0, ]]
[omegaImaginaryClockwise]
[0]
[0.0]
[1]
[i, <, absN]
[i]
[absN]
[i, ++]
[i]
[omegaReal, [, i, ]]
[omegaReal]
[i]
[omegaReal, [, i, -, 1, ], *, cosT, -, omegaImaginaryCounterClockwise, [, i, -, 1, ], *, sinT]
[omegaReal, [, i, -, 1, ], *, cosT]
[omegaReal, [, i, -, 1, ]]
[omegaReal]
[i, -, 1]
[i]
[1]
[cosT]
[omegaImaginaryCounterClockwise, [, i, -, 1, ], *, sinT]
[omegaImaginaryCounterClockwise, [, i, -, 1, ]]
[omegaImaginaryCounterClockwise]
[i, -, 1]
[i]
[1]
[sinT]
[omegaImaginaryCounterClockwise, [, i, ]]
[omegaImaginaryCounterClockwise]
[i]
[omegaReal, [, i, -, 1, ], *, sinT, +, omegaImaginaryCounterClockwise, [, i, -, 1, ], *, cosT]
[omegaReal, [, i, -, 1, ], *, sinT]
[omegaReal, [, i, -, 1, ]]
[omegaReal]
[i, -, 1]
[i]
[1]
[sinT]
[omegaImaginaryCounterClockwise, [, i, -, 1, ], *, cosT]
[omegaImaginaryCounterClockwise, [, i, -, 1, ]]
[omegaImaginaryCounterClockwise]
[i, -, 1]
[i]
[1]
[cosT]
[omegaImaginaryClockwise, [, i, ]]
[omegaImaginaryClockwise]
[i]
[-, omegaImaginaryCounterClockwise, [, i, ]]
[omegaImaginaryCounterClockwise, [, i, ]]
[omegaImaginaryCounterClockwise]
[i]
[omegaCount]
[absN]
[omegaCount, ==, 0]
[omegaCount]
[0]
[new, MathIllegalStateException, (, LocalizedFormats, ., ROOTS_OF_UNITY_NOT_COMPUTED_YET, )]
[LocalizedFormats, ., ROOTS_OF_UNITY_NOT_COMPUTED_YET]
[LocalizedFormats]
[(, k, <, 0, ), ||, (, k, >=, omegaCount, )]
[(, k, <, 0, )]
[k, <, 0]
[k]
[0]
[(, k, >=, omegaCount, )]
[k, >=, omegaCount]
[k]
[omegaCount]
[new, OutOfRangeException, (, LocalizedFormats, ., OUT_OF_RANGE_ROOT_OF_UNITY_INDEX, ,, Integer, ., valueOf, (, k, ), ,, Integer, ., valueOf, (, 0, ), ,, Integer, ., valueOf, (, omegaCount, -, 1, ), )]
[LocalizedFormats, ., OUT_OF_RANGE_ROOT_OF_UNITY_INDEX]
[LocalizedFormats]
[Integer, ., valueOf, (, k, )]
[Integer]
[k]
[Integer, ., valueOf, (, 0, )]
[Integer]
[0]
[Integer, ., valueOf, (, omegaCount, -, 1, )]
[Integer]
[omegaCount, -, 1]
[omegaCount]
[1]
[omegaReal, [, k, ]]
[omegaReal]
[k]
[omegaCount, ==, 0]
[omegaCount]
[0]
[new, MathIllegalStateException, (, LocalizedFormats, ., ROOTS_OF_UNITY_NOT_COMPUTED_YET, )]
[LocalizedFormats, ., ROOTS_OF_UNITY_NOT_COMPUTED_YET]
[LocalizedFormats]
[(, k, <, 0, ), ||, (, k, >=, omegaCount, )]
[(, k, <, 0, )]
[k, <, 0]
[k]
[0]
[(, k, >=, omegaCount, )]
[k, >=, omegaCount]
[k]
[omegaCount]
[new, OutOfRangeException, (, LocalizedFormats, ., OUT_OF_RANGE_ROOT_OF_UNITY_INDEX, ,, Integer, ., valueOf, (, k, ), ,, Integer, ., valueOf, (, 0, ), ,, Integer, ., valueOf, (, omegaCount, -, 1, ), )]
[LocalizedFormats, ., OUT_OF_RANGE_ROOT_OF_UNITY_INDEX]
[LocalizedFormats]
[Integer, ., valueOf, (, k, )]
[Integer]
[k]
[Integer, ., valueOf, (, 0, )]
[Integer]
[0]
[Integer, ., valueOf, (, omegaCount, -, 1, )]
[Integer]
[omegaCount, -, 1]
[omegaCount]
[1]
[isCounterClockWise, ?, omegaImaginaryCounterClockwise, [, k, ], :, omegaImaginaryClockwise, [, k, ]]
[isCounterClockWise]
[omegaImaginaryCounterClockwise, [, k, ]]
[omegaImaginaryCounterClockwise]
[k]
[omegaImaginaryClockwise, [, k, ]]
[omegaImaginaryClockwise]
[k]
[omegaCount]
