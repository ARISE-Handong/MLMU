[Logger, ., getLogger, (, InlineSimpleMethods, ., class, ., getName, (, ), )]
[Logger]
[InlineSimpleMethods, ., class, ., getName, (, )]
[InlineSimpleMethods, ., class]
[compiler]
[externMethods, ., contains, (, callName, ), ||, nonMethodProperties, ., contains, (, callName, )]
[externMethods, ., contains, (, callName, )]
[externMethods]
[callName]
[nonMethodProperties, ., contains, (, callName, )]
[nonMethodProperties]
[callName]
[methodDefinitions, ., get, (, callName, )]
[methodDefinitions]
[callName]
[definitions, ==, null, ||, definitions, ., size, (, ), ==, 0]
[definitions, ==, null]
[definitions]
[null]
[definitions, ., size, (, ), ==, 0]
[definitions, ., size, (, )]
[definitions]
[0]
[definitions, ., iterator, (, ), ., next, (, )]
[definitions, ., iterator, (, )]
[definitions]
[definitions, ., size, (, ), ==, 1, ||, allDefinitionsEquivalent, (, definitions, )]
[definitions, ., size, (, ), ==, 1]
[definitions, ., size, (, )]
[definitions]
[1]
[allDefinitionsEquivalent, (, definitions, )]
[definitions]
[!, argsMayHaveSideEffects, (, callNode, )]
[argsMayHaveSideEffects, (, callNode, )]
[callNode]
[returnedExpression, (, firstDefinition, )]
[firstDefinition]
[returned, !=, null]
[returned]
[null]
[isPropertyTree, (, returned, )]
[returned]
[logger, ., fine, (, "Inlining property accessor: ", +, callName, )]
[logger]
["Inlining property accessor: ", +, callName]
["Inlining property accessor: "]
[callName]
[inlinePropertyReturn, (, parent, ,, callNode, ,, returned, )]
[parent]
[callNode]
[returned]
[NodeUtil, ., isLiteralValue, (, returned, ,, false, ), &&, !, NodeUtil, ., mayHaveSideEffects, (, callNode, ., getFirstChild, (, ), ,, compiler, )]
[NodeUtil, ., isLiteralValue, (, returned, ,, false, )]
[NodeUtil]
[returned]
[false]
[!, NodeUtil, ., mayHaveSideEffects, (, callNode, ., getFirstChild, (, ), ,, compiler, )]
[NodeUtil, ., mayHaveSideEffects, (, callNode, ., getFirstChild, (, ), ,, compiler, )]
[NodeUtil]
[callNode, ., getFirstChild, (, )]
[callNode]
[compiler]
[logger, ., fine, (, "Inlining constant accessor: ", +, callName, )]
[logger]
["Inlining constant accessor: ", +, callName]
["Inlining constant accessor: "]
[callName]
[inlineConstReturn, (, parent, ,, callNode, ,, returned, )]
[parent]
[callNode]
[returned]
[isEmptyMethod, (, firstDefinition, ), &&, !, NodeUtil, ., mayHaveSideEffects, (, callNode, ., getFirstChild, (, ), ,, compiler, )]
[isEmptyMethod, (, firstDefinition, )]
[firstDefinition]
[!, NodeUtil, ., mayHaveSideEffects, (, callNode, ., getFirstChild, (, ), ,, compiler, )]
[NodeUtil, ., mayHaveSideEffects, (, callNode, ., getFirstChild, (, ), ,, compiler, )]
[NodeUtil]
[callNode, ., getFirstChild, (, )]
[callNode]
[compiler]
[logger, ., fine, (, "Inlining empty method: ", +, callName, )]
[logger]
["Inlining empty method: ", +, callName]
["Inlining empty method: "]
[callName]
[inlineEmptyMethod, (, t, ,, parent, ,, callNode, )]
[t]
[parent]
[callNode]
[logger, ., fine, (, "Method '", +, callName, +, "' has conflicting definitions.", )]
[logger]
["Method '", +, callName, +, "' has conflicting definitions."]
["Method '", +, callName]
["Method '"]
[callName]
["' has conflicting definitions."]
[new, InlineTrivialAccessors, (, )]
[!, expectedGetprop, ., isGetProp, (, )]
[expectedGetprop, ., isGetProp, (, )]
[expectedGetprop]
[false]
[expectedGetprop, ., getFirstChild, (, )]
[expectedGetprop]
[!, leftChild, ., isThis, (, ), &&, !, isPropertyTree, (, leftChild, )]
[!, leftChild, ., isThis, (, )]
[leftChild, ., isThis, (, )]
[leftChild]
[!, isPropertyTree, (, leftChild, )]
[isPropertyTree, (, leftChild, )]
[leftChild]
[false]
[leftChild, ., getNext, (, )]
[leftChild]
[NodeUtil, ., getStringValue, (, retVal, ), ==, null]
[NodeUtil, ., getStringValue, (, retVal, )]
[NodeUtil]
[retVal]
[null]
[false]
[true]
[expectedGetprop, ., getFirstChild, (, )]
[expectedGetprop]
[leftChild, ., isThis, (, )]
[leftChild]
[expectedGetprop, ., replaceChild, (, leftChild, ,, replacement, )]
[expectedGetprop]
[leftChild]
[replacement]
[replaceThis, (, leftChild, ,, replacement, )]
[leftChild]
[replacement]
[getMethodBlock, (, fn, )]
[fn]
[!, expectedBlock, ., hasOneChild, (, )]
[expectedBlock, ., hasOneChild, (, )]
[expectedBlock]
[null]
[expectedBlock, ., getFirstChild, (, )]
[expectedBlock]
[!, expectedReturn, ., isReturn, (, )]
[expectedReturn, ., isReturn, (, )]
[expectedReturn]
[null]
[!, expectedReturn, ., hasOneChild, (, )]
[expectedReturn, ., hasOneChild, (, )]
[expectedReturn]
[null]
[expectedReturn, ., getLastChild, (, )]
[expectedReturn]
[getMethodBlock, (, fn, )]
[fn]
[expectedBlock, ==, null, ?, false, :, NodeUtil, ., isEmptyBlock, (, expectedBlock, )]
[expectedBlock, ==, null]
[expectedBlock]
[null]
[false]
[NodeUtil, ., isEmptyBlock, (, expectedBlock, )]
[NodeUtil]
[expectedBlock]
[fn, ., getChildCount, (, ), !=, 3]
[fn, ., getChildCount, (, )]
[fn]
[3]
[null]
[fn, ., getLastChild, (, )]
[fn]
[expectedBlock, ., isBlock, (, ), ?, expectedBlock, :, null]
[expectedBlock, ., isBlock, (, )]
[expectedBlock]
[expectedBlock]
[null]
[Lists, ., newArrayList, (, )]
[Lists]
[list, ., addAll, (, definitions, )]
[list]
[definitions]
[list, ., get, (, 0, )]
[list]
[0]
[1]
[i, <, list, ., size, (, )]
[i]
[list, ., size, (, )]
[list]
[i, ++]
[i]
[!, compiler, ., areNodesEqualForInlining, (, list, ., get, (, i, ), ,, node0, )]
[compiler, ., areNodesEqualForInlining, (, list, ., get, (, i, ), ,, node0, )]
[compiler]
[list, ., get, (, i, )]
[list]
[i]
[node0]
[false]
[true]
[returnedValue, ., cloneTree, (, )]
[returnedValue]
[replaceThis, (, getProp, ,, call, ., getFirstChild, (, ), ., removeFirstChild, (, ), )]
[getProp]
[call, ., getFirstChild, (, ), ., removeFirstChild, (, )]
[call, ., getFirstChild, (, )]
[call]
[parent, ., replaceChild, (, call, ,, getProp, )]
[parent]
[call]
[getProp]
[compiler, ., reportCodeChange, (, )]
[compiler]
[returnedValue, ., cloneTree, (, )]
[returnedValue]
[parent, ., replaceChild, (, call, ,, retValue, )]
[parent]
[call]
[retValue]
[compiler, ., reportCodeChange, (, )]
[compiler]
[NodeUtil, ., isExprCall, (, parent, )]
[NodeUtil]
[parent]
[parent, ., getParent, (, ), ., replaceChild, (, parent, ,, IR, ., empty, (, ), )]
[parent, ., getParent, (, )]
[parent]
[parent]
[IR, ., empty, (, )]
[IR]
[call]
[parent, ., replaceChild, (, call, ,, NodeUtil, ., newUndefinedNode, (, srcLocation, ), )]
[parent]
[call]
[NodeUtil, ., newUndefinedNode, (, srcLocation, )]
[NodeUtil]
[srcLocation]
[compiler, ., reportCodeChange, (, )]
[compiler]
[call, ., getFirstChild, (, ), ., getNext, (, )]
[call, ., getFirstChild, (, )]
[call]
[currentChild, !=, null]
[currentChild]
[null]
[currentChild]
[currentChild, ., getNext, (, )]
[currentChild]
[NodeUtil, ., mayHaveSideEffects, (, currentChild, ,, compiler, )]
[NodeUtil]
[currentChild]
[compiler]
[true]
[false]
[new, MethodCompilerPass, ., SignatureStore, (, ), {, @, Override, public, void, addSignature, (, String, functionName, ,, Node, functionNode, ,, String, sourceFile, ), {, }, @, Override, public, void, removeSignature, (, String, functionName, ), {, }, @, Override, public, void, reset, (, ), {, }, }]
[DUMMY_SIGNATURE_STORE]
