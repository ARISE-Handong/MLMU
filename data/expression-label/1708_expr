[nodeAnnotations]
[edgeAnnotations]
[implicitReturn]
[createDirectedGraphNode, (, null, )]
[null]
[this, ., entry]
[this]
[createDirectedGraphNode, (, entry, )]
[entry]
[implicitReturn]
[entry]
[node, ==, implicitReturn]
[node]
[implicitReturn]
[super, ., connect, (, srcValue, ,, edgeValue, ,, null, )]
[super]
[srcValue]
[edgeValue]
[null]
[null]
[this, ==, ON_TRUE, ||, this, ==, ON_FALSE]
[this, ==, ON_TRUE]
[this]
[ON_TRUE]
[this, ==, ON_FALSE]
[this]
[ON_FALSE]
[parent, ==, null]
[parent]
[null]
[true]
[!, isEnteringNewCfgNode, (, n, )]
[isEnteringNewCfgNode, (, n, )]
[n]
[n, ., getParent, (, )]
[n]
[parent, ., getType, (, )]
[parent]
[Token, ., BLOCK]
[Token]
[Token, ., SCRIPT]
[Token]
[Token, ., TRY]
[Token]
[true]
[Token, ., FUNCTION]
[Token]
[n, !=, parent, ., getFirstChild, (, ), ., getNext, (, )]
[n]
[parent, ., getFirstChild, (, ), ., getNext, (, )]
[parent, ., getFirstChild, (, )]
[parent]
[Token, ., WHILE]
[Token]
[Token, ., DO]
[Token]
[Token, ., IF]
[Token]
[NodeUtil, ., getConditionExpression, (, parent, ), !=, n]
[NodeUtil, ., getConditionExpression, (, parent, )]
[NodeUtil]
[parent]
[n]
[Token, ., FOR]
[Token]
[NodeUtil, ., isForIn, (, parent, )]
[NodeUtil]
[parent]
[n, !=, parent, ., getFirstChild, (, )]
[n]
[parent, ., getFirstChild, (, )]
[parent]
[NodeUtil, ., getConditionExpression, (, parent, ), !=, n]
[NodeUtil, ., getConditionExpression, (, parent, )]
[NodeUtil]
[parent]
[n]
[Token, ., SWITCH]
[Token]
[Token, ., CASE]
[Token]
[Token, ., CATCH]
[Token]
[Token, ., WITH]
[Token]
[n, !=, parent, ., getFirstChild, (, )]
[n]
[parent, ., getFirstChild, (, )]
[parent]
[false]
