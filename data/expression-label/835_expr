[20130104L]
[nextGaussian]
[Double, ., NaN]
[Double]
[next, (, 1, ), !=, 0]
[next, (, 1, )]
[1]
[0]
[0]
[bytes, ., length, -, 3]
[bytes, ., length]
[bytes]
[3]
[i, <, iEnd]
[i]
[iEnd]
[next, (, 32, )]
[32]
[bytes, [, i, ]]
[bytes]
[i]
[(, byte, ), (, random, &, 0xff, )]
[(, random, &, 0xff, )]
[random, &, 0xff]
[random]
[0xff]
[bytes, [, i, +, 1, ]]
[bytes]
[i, +, 1]
[i]
[1]
[(, byte, ), (, (, random, >, >, 8, ), &, 0xff, )]
[(, (, random, >, >, 8, ), &, 0xff, )]
[(, random, >, >, 8, ), &, 0xff]
[(, random, >, >, 8, )]
[random, >, >, 8]
[random]
[8]
[0xff]
[bytes, [, i, +, 2, ]]
[bytes]
[i, +, 2]
[i]
[2]
[(, byte, ), (, (, random, >, >, 16, ), &, 0xff, )]
[(, (, random, >, >, 16, ), &, 0xff, )]
[(, random, >, >, 16, ), &, 0xff]
[(, random, >, >, 16, )]
[random, >, >, 16]
[random]
[16]
[0xff]
[bytes, [, i, +, 3, ]]
[bytes]
[i, +, 3]
[i]
[3]
[(, byte, ), (, (, random, >, >, 24, ), &, 0xff, )]
[(, (, random, >, >, 24, ), &, 0xff, )]
[(, random, >, >, 24, ), &, 0xff]
[(, random, >, >, 24, )]
[random, >, >, 24]
[random]
[24]
[0xff]
[i]
[4]
[next, (, 32, )]
[32]
[i, <, bytes, ., length]
[i]
[bytes, ., length]
[bytes]
[bytes, [, i, ++, ]]
[bytes]
[i, ++]
[i]
[(, byte, ), (, random, &, 0xff, )]
[(, random, &, 0xff, )]
[random, &, 0xff]
[random]
[0xff]
[random]
[random, >, >, 8]
[random]
[8]
[(, (, long, ), next, (, 26, ), ), <<, 26]
[(, (, long, ), next, (, 26, ), )]
[(, long, ), next, (, 26, )]
[next, (, 26, )]
[26]
[26]
[next, (, 26, )]
[26]
[(, high, |, low, ), *, 0x1.0p-52d]
[(, high, |, low, )]
[high, |, low]
[high]
[low]
[0x1.0p-52d]
[next, (, 23, ), *, 0x1.0p-23f]
[next, (, 23, )]
[23]
[0x1.0p-23f]
[Double, ., isNaN, (, nextGaussian, )]
[Double]
[nextGaussian]
[nextDouble, (, )]
[nextDouble, (, )]
[2, *, FastMath, ., PI, *, x]
[2, *, FastMath, ., PI]
[2]
[FastMath, ., PI]
[FastMath]
[x]
[FastMath, ., sqrt, (, -, 2, *, FastMath, ., log, (, y, ), )]
[FastMath]
[-, 2, *, FastMath, ., log, (, y, )]
[-, 2]
[2]
[FastMath, ., log, (, y, )]
[FastMath]
[y]
[random]
[r, *, FastMath, ., cos, (, alpha, )]
[r]
[FastMath, ., cos, (, alpha, )]
[FastMath]
[alpha]
[nextGaussian]
[r, *, FastMath, ., sin, (, alpha, )]
[r]
[FastMath, ., sin, (, alpha, )]
[FastMath]
[alpha]
[random]
[nextGaussian]
[nextGaussian]
[Double, ., NaN]
[Double]
[random]
[next, (, 32, )]
[32]
[n, >, 0]
[n]
[0]
[(, n, &, -, n, ), ==, n]
[(, n, &, -, n, )]
[n, &, -, n]
[n]
[-, n]
[n]
[n]
[(, int, ), (, (, n, *, (, long, ), next, (, 31, ), ), >, >, 31, )]
[(, (, n, *, (, long, ), next, (, 31, ), ), >, >, 31, )]
[(, n, *, (, long, ), next, (, 31, ), ), >, >, 31]
[(, n, *, (, long, ), next, (, 31, ), )]
[n, *, (, long, ), next, (, 31, )]
[n]
[(, long, ), next, (, 31, )]
[next, (, 31, )]
[31]
[31]
[bits]
[next, (, 31, )]
[31]
[val]
[bits, %, n]
[bits]
[n]
[bits, -, val, +, (, n, -, 1, ), <, 0]
[bits, -, val, +, (, n, -, 1, )]
[bits, -, val]
[bits]
[val]
[(, n, -, 1, )]
[n, -, 1]
[n]
[1]
[0]
[val]
[new, NotStrictlyPositiveException, (, n, )]
[n]
[(, (, long, ), next, (, 32, ), ), <<, 32]
[(, (, long, ), next, (, 32, ), )]
[(, long, ), next, (, 32, )]
[next, (, 32, )]
[32]
[32]
[(, (, long, ), next, (, 32, ), ), &, 0xffffffffL]
[(, (, long, ), next, (, 32, ), )]
[(, long, ), next, (, 32, )]
[next, (, 32, )]
[32]
[0xffffffffL]
[high, |, low]
[high]
[low]
[n, >, 0]
[n]
[0]
[bits]
[(, (, long, ), next, (, 31, ), ), <<, 32]
[(, (, long, ), next, (, 31, ), )]
[(, long, ), next, (, 31, )]
[next, (, 31, )]
[31]
[32]
[bits]
[bits, |, (, (, (, long, ), next, (, 32, ), ), &, 0xffffffffL, )]
[bits]
[(, (, (, long, ), next, (, 32, ), ), &, 0xffffffffL, )]
[(, (, long, ), next, (, 32, ), ), &, 0xffffffffL]
[(, (, long, ), next, (, 32, ), )]
[(, long, ), next, (, 32, )]
[next, (, 32, )]
[32]
[0xffffffffL]
[val]
[bits, %, n]
[bits]
[n]
[bits, -, val, +, (, n, -, 1, ), <, 0]
[bits, -, val, +, (, n, -, 1, )]
[bits, -, val]
[bits]
[val]
[(, n, -, 1, )]
[n, -, 1]
[n]
[1]
[0]
[val]
[new, NotStrictlyPositiveException, (, n, )]
[n]
[nextGaussian]
[Double, ., NaN]
[Double]
