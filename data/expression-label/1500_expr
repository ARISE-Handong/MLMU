[verifyInputArray, (, a, ,, c, )]
[a]
[c]
[this, ., a]
[this]
[new, double, [, a, ., length, ]]
[a, ., length]
[a]
[this, ., c]
[this]
[new, double, [, c, ., length, ]]
[c, ., length]
[c]
[System, ., arraycopy, (, a, ,, 0, ,, this, ., a, ,, 0, ,, a, ., length, )]
[System]
[a]
[0]
[this, ., a]
[this]
[0]
[a, ., length]
[a]
[System, ., arraycopy, (, c, ,, 0, ,, this, ., c, ,, 0, ,, c, ., length, )]
[System]
[c]
[0]
[this, ., c]
[this]
[0]
[c, ., length]
[c]
[coefficientsComputed]
[false]
[evaluate, (, a, ,, c, ,, z, )]
[a]
[c]
[z]
[verifyInputArray, (, a, ,, c, )]
[a]
[c]
[c, ., length]
[c]
[new, DerivativeStructure, (, t, ., getFreeParameters, (, ), ,, t, ., getOrder, (, ), ,, a, [, n, ], )]
[t, ., getFreeParameters, (, )]
[t]
[t, ., getOrder, (, )]
[t]
[a, [, n, ]]
[a]
[n]
[n, -, 1]
[n]
[1]
[i, >=, 0]
[i]
[0]
[i, --]
[i]
[value]
[t, ., subtract, (, c, [, i, ], ), ., multiply, (, value, ), ., add, (, a, [, i, ], )]
[t, ., subtract, (, c, [, i, ], ), ., multiply, (, value, )]
[t, ., subtract, (, c, [, i, ], )]
[t]
[c, [, i, ]]
[c]
[i]
[value]
[a, [, i, ]]
[a]
[i]
[value]
[c, ., length]
[c]
[new, double, [, a, ., length, ]]
[a, ., length]
[a]
[System, ., arraycopy, (, a, ,, 0, ,, out, ,, 0, ,, a, ., length, )]
[System]
[a]
[0]
[out]
[0]
[a, ., length]
[a]
[out]
[new, double, [, c, ., length, ]]
[c, ., length]
[c]
[System, ., arraycopy, (, c, ,, 0, ,, out, ,, 0, ,, c, ., length, )]
[System]
[c]
[0]
[out]
[0]
[c, ., length]
[c]
[out]
[!, coefficientsComputed]
[coefficientsComputed]
[computeCoefficients, (, )]
[new, double, [, coefficients, ., length, ]]
[coefficients, ., length]
[coefficients]
[System, ., arraycopy, (, coefficients, ,, 0, ,, out, ,, 0, ,, coefficients, ., length, )]
[System]
[coefficients]
[0]
[out]
[0]
[coefficients, ., length]
[coefficients]
[out]
[verifyInputArray, (, a, ,, c, )]
[a]
[c]
[c, ., length]
[c]
[a, [, n, ]]
[a]
[n]
[n, -, 1]
[n]
[1]
[i, >=, 0]
[i]
[0]
[i, --]
[i]
[value]
[a, [, i, ], +, (, z, -, c, [, i, ], ), *, value]
[a, [, i, ]]
[a]
[i]
[(, z, -, c, [, i, ], ), *, value]
[(, z, -, c, [, i, ], )]
[z, -, c, [, i, ]]
[z]
[c, [, i, ]]
[c]
[i]
[value]
[value]
[degree, (, )]
[coefficients]
[new, double, [, n, +, 1, ]]
[n, +, 1]
[n]
[1]
[0]
[i, <=, n]
[i]
[n]
[i, ++]
[i]
[coefficients, [, i, ]]
[coefficients]
[i]
[0.0]
[coefficients, [, 0, ]]
[coefficients]
[0]
[a, [, n, ]]
[a]
[n]
[n, -, 1]
[n]
[1]
[i, >=, 0]
[i]
[0]
[i, --]
[i]
[n, -, i]
[n]
[i]
[j, >, 0]
[j]
[0]
[j, --]
[j]
[coefficients, [, j, ]]
[coefficients]
[j]
[coefficients, [, j, -, 1, ], -, c, [, i, ], *, coefficients, [, j, ]]
[coefficients, [, j, -, 1, ]]
[coefficients]
[j, -, 1]
[j]
[1]
[c, [, i, ], *, coefficients, [, j, ]]
[c, [, i, ]]
[c]
[i]
[coefficients, [, j, ]]
[coefficients]
[j]
[coefficients, [, 0, ]]
[coefficients]
[0]
[a, [, i, ], -, c, [, i, ], *, coefficients, [, 0, ]]
[a, [, i, ]]
[a]
[i]
[c, [, i, ], *, coefficients, [, 0, ]]
[c, [, i, ]]
[c]
[i]
[coefficients, [, 0, ]]
[coefficients]
[0]
[coefficientsComputed]
[true]
[MathUtils, ., checkNotNull, (, a, )]
[MathUtils]
[a]
[MathUtils, ., checkNotNull, (, c, )]
[MathUtils]
[c]
[a, ., length, ==, 0, ||, c, ., length, ==, 0]
[a, ., length, ==, 0]
[a, ., length]
[a]
[0]
[c, ., length, ==, 0]
[c, ., length]
[c]
[0]
[new, NoDataException, (, LocalizedFormats, ., EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY, )]
[LocalizedFormats, ., EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY]
[LocalizedFormats]
[a, ., length, !=, c, ., length, +, 1]
[a, ., length]
[a]
[c, ., length, +, 1]
[c, ., length]
[c]
[1]
[new, DimensionMismatchException, (, LocalizedFormats, ., ARRAY_SIZES_SHOULD_HAVE_DIFFERENCE_1, ,, a, ., length, ,, c, ., length, )]
[LocalizedFormats, ., ARRAY_SIZES_SHOULD_HAVE_DIFFERENCE_1]
[LocalizedFormats]
[a, ., length]
[a]
[c, ., length]
[c]
