[new, EnumMap, <, TagAttr, ,, Object, >, (, TagAttr, ., class, )]
[TagAttr, ., class]
[new, ArrayList, <, JsonML, >, (, )]
[this, ., type]
[this]
[type]
[type]
[Arrays, ., asList, (, children, )]
[Arrays]
[children]
[type]
[Collections, ., <, TagAttr, ,, Object, >, emptyMap, (, )]
[Collections]
[children]
[type]
[attributes]
[Collections, ., <, JsonML, >, emptyList, (, )]
[Collections]
[this, ., type]
[this]
[type]
[this, ., attributes, ., putAll, (, attributes, )]
[this, ., attributes]
[this]
[attributes]
[appendChildren, (, children, )]
[children]
[children, ., add, (, index, ,, element, )]
[children]
[index]
[element]
[children, ., add, (, element, )]
[children]
[element]
[children, ., addAll, (, elements, )]
[children]
[elements]
[children, ., size, (, )]
[children]
[setChildren, (, )]
[attributes, ., get, (, name, )]
[attributes]
[name]
[attributes]
[children, ., get, (, index, )]
[children]
[index]
[children]
[children, ., subList, (, fromIndex, ,, toIndex, )]
[children]
[fromIndex]
[toIndex]
[type]
[!, children, ., isEmpty, (, )]
[children, ., isEmpty, (, )]
[children]
[attributes, ., put, (, name, ,, value, )]
[attributes]
[name]
[value]
[this, ., attributes]
[this]
[attributes]
[children, ., set, (, index, ,, element, )]
[children]
[index]
[element]
[this, ., children, ., clear, (, )]
[this, ., children]
[this]
[this, ., children, ., addAll, (, Arrays, ., asList, (, children, ), )]
[this, ., children]
[this]
[Arrays, ., asList, (, children, )]
[Arrays]
[children]
[this, ., children]
[this]
[children]
[new, StringBuilder, (, )]
[toString, (, sb, ,, true, ,, true, )]
[sb]
[true]
[true]
[sb, ., toString, (, )]
[sb]
[sb, ., append, (, "[\"", )]
[sb]
["[\""]
[escapeStringOnto, (, type, ., name, (, ), ,, sb, )]
[type, ., name, (, )]
[type]
[sb]
[sb, ., append, (, '"', )]
[sb]
['"']
[printAttributes]
[sb, ., append, (, ", {", )]
[sb]
[", {"]
[true]
[attributes, ., entrySet, (, )]
[attributes]
[first]
[first]
[false]
[sb, ., append, (, ", ", )]
[sb]
[", "]
[sb, ., append, (, '"', )]
[sb]
['"']
[escapeStringOnto, (, entry, ., getKey, (, ), ., toString, (, ), ,, sb, )]
[entry, ., getKey, (, ), ., toString, (, )]
[entry, ., getKey, (, )]
[entry]
[sb]
[sb, ., append, (, "\": ", )]
[sb]
["\": "]
[entry, ., getValue, (, )]
[entry]
[value, ==, null]
[value]
[null]
[sb, ., append, (, "null", )]
[sb]
["null"]
[value, instanceof, String]
[value]
[sb, ., append, (, '"', )]
[sb]
['"']
[escapeStringOnto, (, (, String, ), value, ,, sb, )]
[(, String, ), value]
[value]
[sb]
[sb, ., append, (, '"', )]
[sb]
['"']
[sb, ., append, (, value, )]
[sb]
[value]
[sb, ., append, (, "}", )]
[sb]
["}"]
[printChildren]
[children]
[sb, ., append, (, ", ", )]
[sb]
[", "]
[sb, ., append, (, child, ., toString, (, ), )]
[sb]
[child, ., toString, (, )]
[child]
[sb, ., append, (, ']', )]
[sb]
[']']
[0]
[s, ., length, (, )]
[s]
[0]
[i, <, n]
[i]
[n]
[++, i]
[i]
[s, ., charAt, (, i, )]
[s]
[i]
[ch]
['\r']
['\n']
['"']
['\\']
['\u2028']
['\u2029']
[Integer, ., toString, (, ch, ,, 16, )]
[Integer]
[ch]
[16]
[sb, ., append, (, s, ,, pos, ,, i, ), ., append, (, "\\u", ), ., append, (, "0000", ,, hex, ., length, (, ), ,, 4, ), ., append, (, hex, )]
[sb, ., append, (, s, ,, pos, ,, i, ), ., append, (, "\\u", ), ., append, (, "0000", ,, hex, ., length, (, ), ,, 4, )]
[sb, ., append, (, s, ,, pos, ,, i, ), ., append, (, "\\u", )]
[sb, ., append, (, s, ,, pos, ,, i, )]
[sb]
[s]
[pos]
[i]
["\\u"]
["0000"]
[hex, ., length, (, )]
[hex]
[4]
[hex]
[pos]
[i, +, 1]
[i]
[1]
[sb, ., append, (, s, ,, pos, ,, n, )]
[sb]
[s]
[pos]
[n]
[new, StringBuilder, (, )]
[toStringTreeHelper, (, this, ,, 0, ,, s, )]
[this]
[0]
[s]
[s, ., toString, (, )]
[s]
[new, RuntimeException, (, "Should not happen\n", +, e, )]
["Should not happen\n", +, e]
["Should not happen\n"]
[e]
[0]
[i, <, level]
[i]
[level]
[++, i]
[i]
[sb, ., append, (, "    ", )]
[sb]
["    "]
[element, ., toString, (, sb, ,, true, ,, false, )]
[element]
[sb]
[true]
[false]
[sb, ., append, (, "\n", )]
[sb]
["\n"]
[element, ., getChildren, (, )]
[element]
[toStringTreeHelper, (, child, ,, level, +, 1, ,, sb, )]
[child]
[level, +, 1]
[level]
[1]
[sb]
