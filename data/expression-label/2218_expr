[DiagnosticType, ., error, (, "JSC_NON_GLOBAL_ID_GENERATOR_CALL", ,, "Id generator call must be in the global scope", )]
[DiagnosticType]
["JSC_NON_GLOBAL_ID_GENERATOR_CALL"]
["Id generator call must be in the global scope"]
[DiagnosticType, ., error, (, "JSC_CONDITIONAL_ID_GENERATOR_CALL", ,, "Id generator call must be unconditional", )]
[DiagnosticType]
["JSC_CONDITIONAL_ID_GENERATOR_CALL"]
["Id generator call must be unconditional"]
[DiagnosticType, ., error, (, "JSC_CONFLICTING_ID_GENERATOR_TYPE", ,, "Id generator can only be one of consistent, inconsistent, or stable.", )]
[DiagnosticType]
["JSC_CONFLICTING_ID_GENERATOR_TYPE"]
["Id generator can only be one of consistent, inconsistent, or stable."]
[DiagnosticType, ., error, (, "JSC_INVALID_GENERATOR_ID_MAPPING", ,, "Invalid generator id mapping. {0}", )]
[DiagnosticType]
["JSC_INVALID_GENERATOR_ID_MAPPING"]
["Invalid generator id mapping. {0}"]
[this, ., compiler]
[this]
[compiler]
[this, ., generatePseudoNames]
[this]
[generatePseudoNames]
[nameGenerators]
[Maps, ., newLinkedHashMap, (, )]
[Maps]
[idGeneratorMaps]
[Maps, ., newLinkedHashMap, (, )]
[Maps]
[consistNameMap]
[Maps, ., newLinkedHashMap, (, )]
[Maps]
[previousMap]
[parsePreviousResults, (, previousMapSerialized, )]
[previousMapSerialized]
[this, ., previousMap]
[this]
[previousMap]
[idGens, !=, null]
[idGens]
[null]
[idGens]
[nameGenerators, ., put, (, gen, ,, createNameSupplier, (, RenameStrategy, ., INCONSISTENT, ,, previousMap, ., get, (, gen, ), ), )]
[nameGenerators]
[gen]
[createNameSupplier, (, RenameStrategy, ., INCONSISTENT, ,, previousMap, ., get, (, gen, ), )]
[RenameStrategy, ., INCONSISTENT]
[RenameStrategy]
[previousMap, ., get, (, gen, )]
[previousMap]
[gen]
[idGeneratorMaps, ., put, (, gen, ,, Maps, ., <, String, ,, String, >, newLinkedHashMap, (, ), )]
[idGeneratorMaps]
[gen]
[Maps, ., <, String, ,, String, >, newLinkedHashMap, (, )]
[Maps]
[this, ., previousMappings]
[this]
[previousMappings, ., inverse, (, )]
[previousMappings]
[this, ., generator]
[this]
[new, NameGenerator, (, previousMappings, ., keySet, (, ), ,, "", ,, null, )]
[previousMappings, ., keySet, (, )]
[previousMappings]
[""]
[null]
[this, ., renameStrategy]
[this]
[renameStrategy]
[previousMappings, ., get, (, id, )]
[previousMappings]
[id]
[newName, ==, null]
[newName]
[null]
[newName]
[generator, ., generateNextName, (, )]
[generator]
[newName]
[renameStrategy]
[0]
[this, ., renameStrategy]
[this]
[renameStrategy]
[renameStrategy, ==, RenameStrategy, ., INCONSISTENT]
[renameStrategy]
[RenameStrategy, ., INCONSISTENT]
[RenameStrategy]
[name, +, "$", +, counter, ++]
[name, +, "$"]
[name]
["$"]
[counter, ++]
[counter]
[name, +, "$0"]
[name]
["$0"]
[renameStrategy]
[Base64, ., base64EncodeInt, (, name, ., hashCode, (, ), )]
[Base64]
[name, ., hashCode, (, )]
[name]
[RenameStrategy, ., STABLE]
[RenameStrategy]
[previousMappings]
[previousMappings, !=, null, ?, previousMappings, :, ImmutableBiMap, ., <, String, ,, String, >, of, (, )]
[previousMappings, !=, null]
[previousMappings]
[null]
[previousMappings]
[ImmutableBiMap, ., <, String, ,, String, >, of, (, )]
[ImmutableBiMap]
[renameStrategy, ==, RenameStrategy, ., STABLE]
[renameStrategy]
[RenameStrategy, ., STABLE]
[RenameStrategy]
[new, StableNameSupplier, (, )]
[generatePseudoNames]
[new, PseudoNameSuppier, (, renameStrategy, )]
[renameStrategy]
[new, ObfuscatedNameSuppier, (, renameStrategy, ,, previousMappings, )]
[renameStrategy]
[previousMappings]
[n, ., getJSDocInfo, (, )]
[n]
[doc, ==, null]
[doc]
[null]
[(, doc, ., isConsistentIdGenerator, (, ), ?, 1, :, 0, ), +, (, doc, ., isIdGenerator, (, ), ?, 1, :, 0, ), +, (, doc, ., isStableIdGenerator, (, ), ?, 1, :, 0, )]
[(, doc, ., isConsistentIdGenerator, (, ), ?, 1, :, 0, ), +, (, doc, ., isIdGenerator, (, ), ?, 1, :, 0, )]
[(, doc, ., isConsistentIdGenerator, (, ), ?, 1, :, 0, )]
[doc, ., isConsistentIdGenerator, (, ), ?, 1, :, 0]
[doc, ., isConsistentIdGenerator, (, )]
[doc]
[1]
[0]
[(, doc, ., isIdGenerator, (, ), ?, 1, :, 0, )]
[doc, ., isIdGenerator, (, ), ?, 1, :, 0]
[doc, ., isIdGenerator, (, )]
[doc]
[1]
[0]
[(, doc, ., isStableIdGenerator, (, ), ?, 1, :, 0, )]
[doc, ., isStableIdGenerator, (, ), ?, 1, :, 0]
[doc, ., isStableIdGenerator, (, )]
[doc]
[1]
[0]
[numGeneratorAnnotations, ==, 0]
[numGeneratorAnnotations]
[0]
[numGeneratorAnnotations, >, 1]
[numGeneratorAnnotations]
[1]
[compiler, ., report, (, t, ., makeError, (, n, ,, CONFLICTING_GENERATOR_TYPE, ), )]
[compiler]
[t, ., makeError, (, n, ,, CONFLICTING_GENERATOR_TYPE, )]
[t]
[n]
[CONFLICTING_GENERATOR_TYPE]
[null]
[n, ., isAssign, (, )]
[n]
[name]
[n, ., getFirstChild, (, ), ., getQualifiedName, (, )]
[n, ., getFirstChild, (, )]
[n]
[n, ., isVar, (, )]
[n]
[name]
[n, ., getFirstChild, (, ), ., getString, (, )]
[n, ., getFirstChild, (, )]
[n]
[n, ., isFunction, (, )]
[n]
[name]
[n, ., getFirstChild, (, ), ., getString, (, )]
[n, ., getFirstChild, (, )]
[n]
[name, ., isEmpty, (, )]
[name]
[doc, ., isConsistentIdGenerator, (, )]
[doc]
[consistNameMap, ., put, (, name, ,, Maps, ., <, String, ,, String, >, newLinkedHashMap, (, ), )]
[consistNameMap]
[name]
[Maps, ., <, String, ,, String, >, newLinkedHashMap, (, )]
[Maps]
[nameGenerators, ., put, (, name, ,, createNameSupplier, (, RenameStrategy, ., CONSISTENT, ,, previousMap, ., get, (, name, ), ), )]
[nameGenerators]
[name]
[createNameSupplier, (, RenameStrategy, ., CONSISTENT, ,, previousMap, ., get, (, name, ), )]
[RenameStrategy, ., CONSISTENT]
[RenameStrategy]
[previousMap, ., get, (, name, )]
[previousMap]
[name]
[doc, ., isStableIdGenerator, (, )]
[doc]
[nameGenerators, ., put, (, name, ,, createNameSupplier, (, RenameStrategy, ., STABLE, ,, previousMap, ., get, (, name, ), ), )]
[nameGenerators]
[name]
[createNameSupplier, (, RenameStrategy, ., STABLE, ,, previousMap, ., get, (, name, ), )]
[RenameStrategy, ., STABLE]
[RenameStrategy]
[previousMap, ., get, (, name, )]
[previousMap]
[name]
[nameGenerators, ., put, (, name, ,, createNameSupplier, (, RenameStrategy, ., INCONSISTENT, ,, previousMap, ., get, (, name, ), ), )]
[nameGenerators]
[name]
[createNameSupplier, (, RenameStrategy, ., INCONSISTENT, ,, previousMap, ., get, (, name, ), )]
[RenameStrategy, ., INCONSISTENT]
[RenameStrategy]
[previousMap, ., get, (, name, )]
[previousMap]
[name]
[idGeneratorMaps, ., put, (, name, ,, Maps, ., <, String, ,, String, >, newLinkedHashMap, (, ), )]
[idGeneratorMaps]
[name]
[Maps, ., <, String, ,, String, >, newLinkedHashMap, (, )]
[Maps]
[NodeTraversal, ., traverse, (, compiler, ,, root, ,, new, GatherGenerators, (, ), )]
[NodeTraversal]
[compiler]
[root]
[new, GatherGenerators, (, )]
[!, nameGenerators, ., isEmpty, (, )]
[nameGenerators, ., isEmpty, (, )]
[nameGenerators]
[NodeTraversal, ., traverse, (, compiler, ,, root, ,, new, ReplaceGenerators, (, ), )]
[NodeTraversal]
[compiler]
[root]
[new, ReplaceGenerators, (, )]
[!, n, ., isCall, (, )]
[n, ., isCall, (, )]
[n]
[n, ., getFirstChild, (, ), ., getQualifiedName, (, )]
[n, ., getFirstChild, (, )]
[n]
[nameGenerators, ., get, (, callName, )]
[nameGenerators]
[callName]
[nameGenerator, ==, null]
[nameGenerator]
[null]
[!, t, ., inGlobalScope, (, ), &&, nameGenerator, ., getRenameStrategy, (, ), ==, RenameStrategy, ., INCONSISTENT]
[!, t, ., inGlobalScope, (, )]
[t, ., inGlobalScope, (, )]
[t]
[nameGenerator, ., getRenameStrategy, (, ), ==, RenameStrategy, ., INCONSISTENT]
[nameGenerator, ., getRenameStrategy, (, )]
[nameGenerator]
[RenameStrategy, ., INCONSISTENT]
[RenameStrategy]
[compiler, ., report, (, t, ., makeError, (, n, ,, NON_GLOBAL_ID_GENERATOR_CALL, ), )]
[compiler]
[t, ., makeError, (, n, ,, NON_GLOBAL_ID_GENERATOR_CALL, )]
[t]
[n]
[NON_GLOBAL_ID_GENERATOR_CALL]
[nameGenerator, ., getRenameStrategy, (, ), ==, RenameStrategy, ., INCONSISTENT]
[nameGenerator, ., getRenameStrategy, (, )]
[nameGenerator]
[RenameStrategy, ., INCONSISTENT]
[RenameStrategy]
[n, ., getAncestors, (, )]
[n]
[NodeUtil, ., isControlStructure, (, ancestor, )]
[NodeUtil]
[ancestor]
[compiler, ., report, (, t, ., makeError, (, n, ,, CONDITIONAL_ID_GENERATOR_CALL, ), )]
[compiler]
[t, ., makeError, (, n, ,, CONDITIONAL_ID_GENERATOR_CALL, )]
[t]
[n]
[CONDITIONAL_ID_GENERATOR_CALL]
[n, ., getFirstChild, (, ), ., getNext, (, )]
[n, ., getFirstChild, (, )]
[n]
[!, id, ., isString, (, )]
[id, ., isString, (, )]
[id]
[idGeneratorMaps, ., get, (, callName, )]
[idGeneratorMaps]
[callName]
[null]
[id, ., getString, (, )]
[id]
[getIdForGeneratorNode, (, nameGenerator, ., getRenameStrategy, (, ), ==, RenameStrategy, ., CONSISTENT, ,, id, )]
[nameGenerator, ., getRenameStrategy, (, ), ==, RenameStrategy, ., CONSISTENT]
[nameGenerator, ., getRenameStrategy, (, )]
[nameGenerator]
[RenameStrategy, ., CONSISTENT]
[RenameStrategy]
[id]
[nameGenerator, ., getRenameStrategy, (, ), ==, RenameStrategy, ., CONSISTENT]
[nameGenerator, ., getRenameStrategy, (, )]
[nameGenerator]
[RenameStrategy, ., CONSISTENT]
[RenameStrategy]
[consistNameMap, ., get, (, callName, )]
[consistNameMap]
[callName]
[rename]
[entry, ., get, (, instanceId, )]
[entry]
[instanceId]
[rename, ==, null]
[rename]
[null]
[rename]
[nameGenerator, ., getName, (, instanceId, ,, name, )]
[nameGenerator]
[instanceId]
[name]
[entry, ., put, (, instanceId, ,, rename, )]
[entry]
[instanceId]
[rename]
[rename]
[nameGenerator, ., getName, (, instanceId, ,, name, )]
[nameGenerator]
[instanceId]
[name]
[parent, ., replaceChild, (, n, ,, IR, ., string, (, rename, ), )]
[parent]
[n]
[IR, ., string, (, rename, )]
[IR]
[rename]
[idGeneratorMap, ., put, (, rename, ,, instanceId, )]
[idGeneratorMap]
[rename]
[instanceId]
[compiler, ., reportCodeChange, (, )]
[compiler]
[new, StringBuilder, (, )]
[idGeneratorMaps, ., entrySet, (, )]
[idGeneratorMaps]
[!, replacements, ., getValue, (, ), ., isEmpty, (, )]
[replacements, ., getValue, (, ), ., isEmpty, (, )]
[replacements, ., getValue, (, )]
[replacements]
[sb, ., append, (, "[", )]
[sb]
["["]
[sb, ., append, (, replacements, ., getKey, (, ), )]
[sb]
[replacements, ., getKey, (, )]
[replacements]
[sb, ., append, (, "]\n\n", )]
[sb]
["]\n\n"]
[replacements, ., getValue, (, ), ., entrySet, (, )]
[replacements, ., getValue, (, )]
[replacements]
[sb, ., append, (, replacement, ., getKey, (, ), )]
[sb]
[replacement, ., getKey, (, )]
[replacement]
[sb, ., append, (, ':', )]
[sb]
[':']
[sb, ., append, (, replacement, ., getValue, (, ), )]
[sb]
[replacement, ., getValue, (, )]
[replacement]
[sb, ., append, (, "\n", )]
[sb]
["\n"]
[sb, ., append, (, "\n", )]
[sb]
["\n"]
[sb, ., toString, (, )]
[sb]
[serializedMap, ==, null, ||, serializedMap, ., isEmpty, (, )]
[serializedMap, ==, null]
[serializedMap]
[null]
[serializedMap, ., isEmpty, (, )]
[serializedMap]
[Collections, ., emptyMap, (, )]
[Collections]
[Maps, ., newHashMap, (, )]
[Maps]
[new, BufferedReader, (, new, StringReader, (, serializedMap, ), )]
[new, StringReader, (, serializedMap, )]
[serializedMap]
[null]
[0]
[(, line, =, reader, ., readLine, (, ), ), !=, null]
[(, line, =, reader, ., readLine, (, ), )]
[line]
[reader, ., readLine, (, )]
[reader]
[null]
[lineIndex, ++]
[lineIndex]
[line, ., isEmpty, (, )]
[line]
[line, ., charAt, (, 0, ), ==, '[']
[line, ., charAt, (, 0, )]
[line]
[0]
['[']
[line, ., substring, (, 1, ,, line, ., length, (, ), -, 1, )]
[line]
[1]
[line, ., length, (, ), -, 1]
[line, ., length, (, )]
[line]
[1]
[currentSectionMap]
[resultMap, ., get, (, currentSection, )]
[resultMap]
[currentSection]
[currentSectionMap, ==, null]
[currentSectionMap]
[null]
[currentSectionMap]
[HashBiMap, ., create, (, )]
[HashBiMap]
[resultMap, ., put, (, currentSection, ,, currentSectionMap, )]
[resultMap]
[currentSection]
[currentSectionMap]
[reportInvalidLine, (, line, ,, lineIndex, )]
[line]
[lineIndex]
[Collections, ., emptyMap, (, )]
[Collections]
[line, ., indexOf, (, ':', )]
[line]
[':']
[split, !=, -, 1]
[split]
[-, 1]
[1]
[line, ., substring, (, 0, ,, split, )]
[line]
[0]
[split]
[line, ., substring, (, split, +, 1, ,, line, ., length, (, ), )]
[line]
[split, +, 1]
[split]
[1]
[line, ., length, (, )]
[line]
[currentSectionMap, ., put, (, name, ,, location, )]
[currentSectionMap]
[name]
[location]
[reportInvalidLine, (, line, ,, lineIndex, )]
[line]
[lineIndex]
[Collections, ., emptyMap, (, )]
[Collections]
[JSError, ., make, (, INVALID_GENERATOR_ID_MAPPING, ,, e, ., getMessage, (, ), )]
[JSError]
[INVALID_GENERATOR_ID_MAPPING]
[e, ., getMessage, (, )]
[e]
[resultMap]
[JSError, ., make, (, INVALID_GENERATOR_ID_MAPPING, ,, "line(", +, line, +, "): ", +, lineIndex, )]
[JSError]
[INVALID_GENERATOR_ID_MAPPING]
["line(", +, line, +, "): ", +, lineIndex]
["line(", +, line, +, "): "]
["line(", +, line]
["line("]
[line]
["): "]
[lineIndex]
[Preconditions, ., checkState, (, n, ., isString, (, ), )]
[Preconditions]
[n, ., isString, (, )]
[n]
[consistent]
[n, ., getString, (, )]
[n]
[n, ., getSourceFileName, (, ), +, ':', +, n, ., getLineno, (, ), +, ":", +, n, ., getCharno, (, )]
[n, ., getSourceFileName, (, ), +, ':', +, n, ., getLineno, (, ), +, ":"]
[n, ., getSourceFileName, (, ), +, ':', +, n, ., getLineno, (, )]
[n, ., getSourceFileName, (, ), +, ':']
[n, ., getSourceFileName, (, )]
[n]
[':']
[n, ., getLineno, (, )]
[n]
[":"]
[n, ., getCharno, (, )]
[n]
