[" "]
[""]
["\n"]
["\r"]
[-, 1]
[1]
[8192]
[Pattern, ., compile, (, "(?: \\s|[\\s&&[^ ]])\\s*", )]
[Pattern]
["(?: \\s|[\\s&&[^ ]])\\s*"]
[cs, ==, null, ||, cs, ., length, (, ), ==, 0]
[cs, ==, null]
[cs]
[null]
[cs, ., length, (, ), ==, 0]
[cs, ., length, (, )]
[cs]
[0]
[!, StringUtils, ., isEmpty, (, cs, )]
[StringUtils, ., isEmpty, (, cs, )]
[StringUtils]
[cs]
[cs, ==, null, ||, (, strLen, =, cs, ., length, (, ), ), ==, 0]
[cs, ==, null]
[cs]
[null]
[(, strLen, =, cs, ., length, (, ), ), ==, 0]
[(, strLen, =, cs, ., length, (, ), )]
[strLen]
[cs, ., length, (, )]
[cs]
[0]
[true]
[0]
[i, <, strLen]
[i]
[strLen]
[i, ++]
[i]
[Character, ., isWhitespace, (, cs, ., charAt, (, i, ), ), ==, false]
[Character, ., isWhitespace, (, cs, ., charAt, (, i, ), )]
[Character]
[cs, ., charAt, (, i, )]
[cs]
[i]
[false]
[false]
[true]
[!, StringUtils, ., isBlank, (, cs, )]
[StringUtils, ., isBlank, (, cs, )]
[StringUtils]
[cs]
[str, ==, null, ?, null, :, str, ., trim, (, )]
[str, ==, null]
[str]
[null]
[null]
[str, ., trim, (, )]
[str]
[trim, (, str, )]
[str]
[isEmpty, (, ts, ), ?, null, :, ts]
[isEmpty, (, ts, )]
[ts]
[null]
[ts]
[str, ==, null, ?, EMPTY, :, str, ., trim, (, )]
[str, ==, null]
[str]
[null]
[EMPTY]
[str, ., trim, (, )]
[str]
[strip, (, str, ,, null, )]
[str]
[null]
[str, ==, null]
[str]
[null]
[null]
[str]
[strip, (, str, ,, null, )]
[str]
[null]
[str, ., isEmpty, (, ), ?, null, :, str]
[str, ., isEmpty, (, )]
[str]
[null]
[str]
[str, ==, null, ?, EMPTY, :, strip, (, str, ,, null, )]
[str, ==, null]
[str]
[null]
[EMPTY]
[strip, (, str, ,, null, )]
[str]
[null]
[isEmpty, (, str, )]
[str]
[str]
[str]
[stripStart, (, str, ,, stripChars, )]
[str]
[stripChars]
[stripEnd, (, str, ,, stripChars, )]
[str]
[stripChars]
[str, ==, null, ||, (, strLen, =, str, ., length, (, ), ), ==, 0]
[str, ==, null]
[str]
[null]
[(, strLen, =, str, ., length, (, ), ), ==, 0]
[(, strLen, =, str, ., length, (, ), )]
[strLen]
[str, ., length, (, )]
[str]
[0]
[str]
[0]
[stripChars, ==, null]
[stripChars]
[null]
[start, !=, strLen, &&, Character, ., isWhitespace, (, str, ., charAt, (, start, ), )]
[start, !=, strLen]
[start]
[strLen]
[Character, ., isWhitespace, (, str, ., charAt, (, start, ), )]
[Character]
[str, ., charAt, (, start, )]
[str]
[start]
[start, ++]
[start]
[stripChars, ., isEmpty, (, )]
[stripChars]
[str]
[start, !=, strLen, &&, stripChars, ., indexOf, (, str, ., charAt, (, start, ), ), !=, INDEX_NOT_FOUND]
[start, !=, strLen]
[start]
[strLen]
[stripChars, ., indexOf, (, str, ., charAt, (, start, ), ), !=, INDEX_NOT_FOUND]
[stripChars, ., indexOf, (, str, ., charAt, (, start, ), )]
[stripChars]
[str, ., charAt, (, start, )]
[str]
[start]
[INDEX_NOT_FOUND]
[start, ++]
[start]
[str, ., substring, (, start, )]
[str]
[start]
[str, ==, null, ||, (, end, =, str, ., length, (, ), ), ==, 0]
[str, ==, null]
[str]
[null]
[(, end, =, str, ., length, (, ), ), ==, 0]
[(, end, =, str, ., length, (, ), )]
[end]
[str, ., length, (, )]
[str]
[0]
[str]
[stripChars, ==, null]
[stripChars]
[null]
[end, !=, 0, &&, Character, ., isWhitespace, (, str, ., charAt, (, end, -, 1, ), )]
[end, !=, 0]
[end]
[0]
[Character, ., isWhitespace, (, str, ., charAt, (, end, -, 1, ), )]
[Character]
[str, ., charAt, (, end, -, 1, )]
[str]
[end, -, 1]
[end]
[1]
[end, --]
[end]
[stripChars, ., isEmpty, (, )]
[stripChars]
[str]
[end, !=, 0, &&, stripChars, ., indexOf, (, str, ., charAt, (, end, -, 1, ), ), !=, INDEX_NOT_FOUND]
[end, !=, 0]
[end]
[0]
[stripChars, ., indexOf, (, str, ., charAt, (, end, -, 1, ), ), !=, INDEX_NOT_FOUND]
[stripChars, ., indexOf, (, str, ., charAt, (, end, -, 1, ), )]
[stripChars]
[str, ., charAt, (, end, -, 1, )]
[str]
[end, -, 1]
[end]
[1]
[INDEX_NOT_FOUND]
[end, --]
[end]
[str, ., substring, (, 0, ,, end, )]
[str]
[0]
[end]
[stripAll, (, strs, ,, null, )]
[strs]
[null]
[strs, ==, null, ||, (, strsLen, =, strs, ., length, ), ==, 0]
[strs, ==, null]
[strs]
[null]
[(, strsLen, =, strs, ., length, ), ==, 0]
[(, strsLen, =, strs, ., length, )]
[strsLen]
[strs, ., length]
[strs]
[0]
[strs]
[new, String, [, strsLen, ]]
[strsLen]
[0]
[i, <, strsLen]
[i]
[strsLen]
[i, ++]
[i]
[newArr, [, i, ]]
[newArr]
[i]
[strip, (, strs, [, i, ], ,, stripChars, )]
[strs, [, i, ]]
[strs]
[i]
[stripChars]
[newArr]
[input, ==, null]
[input]
[null]
[null]
[Pattern, ., compile, (, "\\p{InCombiningDiacriticalMarks}+", )]
[Pattern]
["\\p{InCombiningDiacriticalMarks}+"]
[Normalizer, ., normalize, (, input, ,, Normalizer, ., Form, ., NFD, )]
[Normalizer]
[input]
[Normalizer, ., Form, ., NFD]
[Normalizer, ., Form]
[Normalizer]
[pattern, ., matcher, (, decomposed, ), ., replaceAll, (, "", )]
[pattern, ., matcher, (, decomposed, )]
[pattern]
[decomposed]
[""]
[cs1, ==, cs2]
[cs1]
[cs2]
[true]
[cs1, ==, null, ||, cs2, ==, null]
[cs1, ==, null]
[cs1]
[null]
[cs2, ==, null]
[cs2]
[null]
[false]
[cs1, instanceof, String, &&, cs2, instanceof, String]
[cs1, instanceof, String]
[cs1]
[cs2, instanceof, String]
[cs2]
[cs1, ., equals, (, cs2, )]
[cs1]
[cs2]
[CharSequenceUtils, ., regionMatches, (, cs1, ,, false, ,, 0, ,, cs2, ,, 0, ,, Math, ., max, (, cs1, ., length, (, ), ,, cs2, ., length, (, ), ), )]
[CharSequenceUtils]
[cs1]
[false]
[0]
[cs2]
[0]
[Math, ., max, (, cs1, ., length, (, ), ,, cs2, ., length, (, ), )]
[Math]
[cs1, ., length, (, )]
[cs1]
[cs2, ., length, (, )]
[cs2]
[str1, ==, null, ||, str2, ==, null]
[str1, ==, null]
[str1]
[null]
[str2, ==, null]
[str2]
[null]
[str1, ==, str2]
[str1]
[str2]
[str1, ==, str2]
[str1]
[str2]
[true]
[str1, ., length, (, ), !=, str2, ., length, (, )]
[str1, ., length, (, )]
[str1]
[str2, ., length, (, )]
[str2]
[false]
[CharSequenceUtils, ., regionMatches, (, str1, ,, true, ,, 0, ,, str2, ,, 0, ,, str1, ., length, (, ), )]
[CharSequenceUtils]
[str1]
[true]
[0]
[str2]
[0]
[str1, ., length, (, )]
[str1]
[isEmpty, (, seq, )]
[seq]
[INDEX_NOT_FOUND]
[CharSequenceUtils, ., indexOf, (, seq, ,, searchChar, ,, 0, )]
[CharSequenceUtils]
[seq]
[searchChar]
[0]
[isEmpty, (, seq, )]
[seq]
[INDEX_NOT_FOUND]
[CharSequenceUtils, ., indexOf, (, seq, ,, searchChar, ,, startPos, )]
[CharSequenceUtils]
[seq]
[searchChar]
[startPos]
[seq, ==, null, ||, searchSeq, ==, null]
[seq, ==, null]
[seq]
[null]
[searchSeq, ==, null]
[searchSeq]
[null]
[INDEX_NOT_FOUND]
[CharSequenceUtils, ., indexOf, (, seq, ,, searchSeq, ,, 0, )]
[CharSequenceUtils]
[seq]
[searchSeq]
[0]
[seq, ==, null, ||, searchSeq, ==, null]
[seq, ==, null]
[seq]
[null]
[searchSeq, ==, null]
[searchSeq]
[null]
[INDEX_NOT_FOUND]
[CharSequenceUtils, ., indexOf, (, seq, ,, searchSeq, ,, startPos, )]
[CharSequenceUtils]
[seq]
[searchSeq]
[startPos]
[ordinalIndexOf, (, str, ,, searchStr, ,, ordinal, ,, false, )]
[str]
[searchStr]
[ordinal]
[false]
[str, ==, null, ||, searchStr, ==, null, ||, ordinal, <=, 0]
[str, ==, null, ||, searchStr, ==, null]
[str, ==, null]
[str]
[null]
[searchStr, ==, null]
[searchStr]
[null]
[ordinal, <=, 0]
[ordinal]
[0]
[INDEX_NOT_FOUND]
[searchStr, ., length, (, ), ==, 0]
[searchStr, ., length, (, )]
[searchStr]
[0]
[lastIndex, ?, str, ., length, (, ), :, 0]
[lastIndex]
[str, ., length, (, )]
[str]
[0]
[0]
[lastIndex, ?, str, ., length, (, ), :, INDEX_NOT_FOUND]
[lastIndex]
[str, ., length, (, )]
[str]
[INDEX_NOT_FOUND]
[lastIndex]
[index]
[CharSequenceUtils, ., lastIndexOf, (, str, ,, searchStr, ,, index, -, 1, )]
[CharSequenceUtils]
[str]
[searchStr]
[index, -, 1]
[index]
[1]
[index]
[CharSequenceUtils, ., indexOf, (, str, ,, searchStr, ,, index, +, 1, )]
[CharSequenceUtils]
[str]
[searchStr]
[index, +, 1]
[index]
[1]
[index, <, 0]
[index]
[0]
[index]
[found, ++]
[found]
[found, <, ordinal]
[found]
[ordinal]
[index]
[indexOfIgnoreCase, (, str, ,, searchStr, ,, 0, )]
[str]
[searchStr]
[0]
[str, ==, null, ||, searchStr, ==, null]
[str, ==, null]
[str]
[null]
[searchStr, ==, null]
[searchStr]
[null]
[INDEX_NOT_FOUND]
[startPos, <, 0]
[startPos]
[0]
[startPos]
[0]
[str, ., length, (, ), -, searchStr, ., length, (, ), +, 1]
[str, ., length, (, ), -, searchStr, ., length, (, )]
[str, ., length, (, )]
[str]
[searchStr, ., length, (, )]
[searchStr]
[1]
[startPos, >, endLimit]
[startPos]
[endLimit]
[INDEX_NOT_FOUND]
[searchStr, ., length, (, ), ==, 0]
[searchStr, ., length, (, )]
[searchStr]
[0]
[startPos]
[startPos]
[i, <, endLimit]
[i]
[endLimit]
[i, ++]
[i]
[CharSequenceUtils, ., regionMatches, (, str, ,, true, ,, i, ,, searchStr, ,, 0, ,, searchStr, ., length, (, ), )]
[CharSequenceUtils]
[str]
[true]
[i]
[searchStr]
[0]
[searchStr, ., length, (, )]
[searchStr]
[i]
[INDEX_NOT_FOUND]
[isEmpty, (, seq, )]
[seq]
[INDEX_NOT_FOUND]
[CharSequenceUtils, ., lastIndexOf, (, seq, ,, searchChar, ,, seq, ., length, (, ), )]
[CharSequenceUtils]
[seq]
[searchChar]
[seq, ., length, (, )]
[seq]
[isEmpty, (, seq, )]
[seq]
[INDEX_NOT_FOUND]
[CharSequenceUtils, ., lastIndexOf, (, seq, ,, searchChar, ,, startPos, )]
[CharSequenceUtils]
[seq]
[searchChar]
[startPos]
[seq, ==, null, ||, searchSeq, ==, null]
[seq, ==, null]
[seq]
[null]
[searchSeq, ==, null]
[searchSeq]
[null]
[INDEX_NOT_FOUND]
[CharSequenceUtils, ., lastIndexOf, (, seq, ,, searchSeq, ,, seq, ., length, (, ), )]
[CharSequenceUtils]
[seq]
[searchSeq]
[seq, ., length, (, )]
[seq]
[ordinalIndexOf, (, str, ,, searchStr, ,, ordinal, ,, true, )]
[str]
[searchStr]
[ordinal]
[true]
[seq, ==, null, ||, searchSeq, ==, null]
[seq, ==, null]
[seq]
[null]
[searchSeq, ==, null]
[searchSeq]
[null]
[INDEX_NOT_FOUND]
[CharSequenceUtils, ., lastIndexOf, (, seq, ,, searchSeq, ,, startPos, )]
[CharSequenceUtils]
[seq]
[searchSeq]
[startPos]
[str, ==, null, ||, searchStr, ==, null]
[str, ==, null]
[str]
[null]
[searchStr, ==, null]
[searchStr]
[null]
[INDEX_NOT_FOUND]
[lastIndexOfIgnoreCase, (, str, ,, searchStr, ,, str, ., length, (, ), )]
[str]
[searchStr]
[str, ., length, (, )]
[str]
[str, ==, null, ||, searchStr, ==, null]
[str, ==, null]
[str]
[null]
[searchStr, ==, null]
[searchStr]
[null]
[INDEX_NOT_FOUND]
[startPos, >, str, ., length, (, ), -, searchStr, ., length, (, )]
[startPos]
[str, ., length, (, ), -, searchStr, ., length, (, )]
[str, ., length, (, )]
[str]
[searchStr, ., length, (, )]
[searchStr]
[startPos]
[str, ., length, (, ), -, searchStr, ., length, (, )]
[str, ., length, (, )]
[str]
[searchStr, ., length, (, )]
[searchStr]
[startPos, <, 0]
[startPos]
[0]
[INDEX_NOT_FOUND]
[searchStr, ., length, (, ), ==, 0]
[searchStr, ., length, (, )]
[searchStr]
[0]
[startPos]
[startPos]
[i, >=, 0]
[i]
[0]
[i, --]
[i]
[CharSequenceUtils, ., regionMatches, (, str, ,, true, ,, i, ,, searchStr, ,, 0, ,, searchStr, ., length, (, ), )]
[CharSequenceUtils]
[str]
[true]
[i]
[searchStr]
[0]
[searchStr, ., length, (, )]
[searchStr]
[i]
[INDEX_NOT_FOUND]
[isEmpty, (, seq, )]
[seq]
[false]
[CharSequenceUtils, ., indexOf, (, seq, ,, searchChar, ,, 0, ), >=, 0]
[CharSequenceUtils, ., indexOf, (, seq, ,, searchChar, ,, 0, )]
[CharSequenceUtils]
[seq]
[searchChar]
[0]
[0]
[seq, ==, null, ||, searchSeq, ==, null]
[seq, ==, null]
[seq]
[null]
[searchSeq, ==, null]
[searchSeq]
[null]
[false]
[CharSequenceUtils, ., indexOf, (, seq, ,, searchSeq, ,, 0, ), >=, 0]
[CharSequenceUtils, ., indexOf, (, seq, ,, searchSeq, ,, 0, )]
[CharSequenceUtils]
[seq]
[searchSeq]
[0]
[0]
[str, ==, null, ||, searchStr, ==, null]
[str, ==, null]
[str]
[null]
[searchStr, ==, null]
[searchStr]
[null]
[false]
[searchStr, ., length, (, )]
[searchStr]
[str, ., length, (, ), -, len]
[str, ., length, (, )]
[str]
[len]
[0]
[i, <=, max]
[i]
[max]
[i, ++]
[i]
[CharSequenceUtils, ., regionMatches, (, str, ,, true, ,, i, ,, searchStr, ,, 0, ,, len, )]
[CharSequenceUtils]
[str]
[true]
[i]
[searchStr]
[0]
[len]
[true]
[false]
[isEmpty, (, seq, )]
[seq]
[false]
[seq, ., length, (, )]
[seq]
[0]
[i, <, strLen]
[i]
[strLen]
[i, ++]
[i]
[Character, ., isWhitespace, (, seq, ., charAt, (, i, ), )]
[Character]
[seq, ., charAt, (, i, )]
[seq]
[i]
[true]
[false]
[isEmpty, (, cs, ), ||, ArrayUtils, ., isEmpty, (, searchChars, )]
[isEmpty, (, cs, )]
[cs]
[ArrayUtils, ., isEmpty, (, searchChars, )]
[ArrayUtils]
[searchChars]
[INDEX_NOT_FOUND]
[cs, ., length, (, )]
[cs]
[csLen, -, 1]
[csLen]
[1]
[searchChars, ., length]
[searchChars]
[searchLen, -, 1]
[searchLen]
[1]
[0]
[i, <, csLen]
[i]
[csLen]
[i, ++]
[i]
[cs, ., charAt, (, i, )]
[cs]
[i]
[0]
[j, <, searchLen]
[j]
[searchLen]
[j, ++]
[j]
[searchChars, [, j, ], ==, ch]
[searchChars, [, j, ]]
[searchChars]
[j]
[ch]
[i, <, csLast, &&, j, <, searchLast, &&, Character, ., isHighSurrogate, (, ch, )]
[i, <, csLast, &&, j, <, searchLast]
[i, <, csLast]
[i]
[csLast]
[j, <, searchLast]
[j]
[searchLast]
[Character, ., isHighSurrogate, (, ch, )]
[Character]
[ch]
[searchChars, [, j, +, 1, ], ==, cs, ., charAt, (, i, +, 1, )]
[searchChars, [, j, +, 1, ]]
[searchChars]
[j, +, 1]
[j]
[1]
[cs, ., charAt, (, i, +, 1, )]
[cs]
[i, +, 1]
[i]
[1]
[i]
[i]
[INDEX_NOT_FOUND]
[isEmpty, (, cs, ), ||, isEmpty, (, searchChars, )]
[isEmpty, (, cs, )]
[cs]
[isEmpty, (, searchChars, )]
[searchChars]
[INDEX_NOT_FOUND]
[indexOfAny, (, cs, ,, searchChars, ., toCharArray, (, ), )]
[cs]
[searchChars, ., toCharArray, (, )]
[searchChars]
[isEmpty, (, cs, ), ||, ArrayUtils, ., isEmpty, (, searchChars, )]
[isEmpty, (, cs, )]
[cs]
[ArrayUtils, ., isEmpty, (, searchChars, )]
[ArrayUtils]
[searchChars]
[false]
[cs, ., length, (, )]
[cs]
[searchChars, ., length]
[searchChars]
[csLength, -, 1]
[csLength]
[1]
[searchLength, -, 1]
[searchLength]
[1]
[0]
[i, <, csLength]
[i]
[csLength]
[i, ++]
[i]
[cs, ., charAt, (, i, )]
[cs]
[i]
[0]
[j, <, searchLength]
[j]
[searchLength]
[j, ++]
[j]
[searchChars, [, j, ], ==, ch]
[searchChars, [, j, ]]
[searchChars]
[j]
[ch]
[Character, ., isHighSurrogate, (, ch, )]
[Character]
[ch]
[j, ==, searchLast]
[j]
[searchLast]
[true]
[i, <, csLast, &&, searchChars, [, j, +, 1, ], ==, cs, ., charAt, (, i, +, 1, )]
[i, <, csLast]
[i]
[csLast]
[searchChars, [, j, +, 1, ], ==, cs, ., charAt, (, i, +, 1, )]
[searchChars, [, j, +, 1, ]]
[searchChars]
[j, +, 1]
[j]
[1]
[cs, ., charAt, (, i, +, 1, )]
[cs]
[i, +, 1]
[i]
[1]
[true]
[true]
[false]
[searchChars, ==, null]
[searchChars]
[null]
[false]
[containsAny, (, cs, ,, CharSequenceUtils, ., toCharArray, (, searchChars, ), )]
[cs]
[CharSequenceUtils, ., toCharArray, (, searchChars, )]
[CharSequenceUtils]
[searchChars]
[isEmpty, (, cs, ), ||, ArrayUtils, ., isEmpty, (, searchChars, )]
[isEmpty, (, cs, )]
[cs]
[ArrayUtils, ., isEmpty, (, searchChars, )]
[ArrayUtils]
[searchChars]
[INDEX_NOT_FOUND]
[cs, ., length, (, )]
[cs]
[csLen, -, 1]
[csLen]
[1]
[searchChars, ., length]
[searchChars]
[searchLen, -, 1]
[searchLen]
[1]
[0]
[i, <, csLen]
[i]
[csLen]
[i, ++]
[i]
[cs, ., charAt, (, i, )]
[cs]
[i]
[0]
[j, <, searchLen]
[j]
[searchLen]
[j, ++]
[j]
[searchChars, [, j, ], ==, ch]
[searchChars, [, j, ]]
[searchChars]
[j]
[ch]
[i, <, csLast, &&, j, <, searchLast, &&, Character, ., isHighSurrogate, (, ch, )]
[i, <, csLast, &&, j, <, searchLast]
[i, <, csLast]
[i]
[csLast]
[j, <, searchLast]
[j]
[searchLast]
[Character, ., isHighSurrogate, (, ch, )]
[Character]
[ch]
[searchChars, [, j, +, 1, ], ==, cs, ., charAt, (, i, +, 1, )]
[searchChars, [, j, +, 1, ]]
[searchChars]
[j, +, 1]
[j]
[1]
[cs, ., charAt, (, i, +, 1, )]
[cs]
[i, +, 1]
[i]
[1]
[i]
[INDEX_NOT_FOUND]
[isEmpty, (, seq, ), ||, isEmpty, (, searchChars, )]
[isEmpty, (, seq, )]
[seq]
[isEmpty, (, searchChars, )]
[searchChars]
[INDEX_NOT_FOUND]
[seq, ., length, (, )]
[seq]
[0]
[i, <, strLen]
[i]
[strLen]
[i, ++]
[i]
[seq, ., charAt, (, i, )]
[seq]
[i]
[CharSequenceUtils, ., indexOf, (, searchChars, ,, ch, ,, 0, ), >=, 0]
[CharSequenceUtils, ., indexOf, (, searchChars, ,, ch, ,, 0, )]
[CharSequenceUtils]
[searchChars]
[ch]
[0]
[0]
[i, +, 1, <, strLen, &&, Character, ., isHighSurrogate, (, ch, )]
[i, +, 1, <, strLen]
[i, +, 1]
[i]
[1]
[strLen]
[Character, ., isHighSurrogate, (, ch, )]
[Character]
[ch]
[seq, ., charAt, (, i, +, 1, )]
[seq]
[i, +, 1]
[i]
[1]
[chFound, &&, CharSequenceUtils, ., indexOf, (, searchChars, ,, ch2, ,, 0, ), <, 0]
[chFound]
[CharSequenceUtils, ., indexOf, (, searchChars, ,, ch2, ,, 0, ), <, 0]
[CharSequenceUtils, ., indexOf, (, searchChars, ,, ch2, ,, 0, )]
[CharSequenceUtils]
[searchChars]
[ch2]
[0]
[0]
[i]
[!, chFound]
[chFound]
[i]
[INDEX_NOT_FOUND]
[valid, ==, null, ||, cs, ==, null]
[valid, ==, null]
[valid]
[null]
[cs, ==, null]
[cs]
[null]
[false]
[cs, ., length, (, ), ==, 0]
[cs, ., length, (, )]
[cs]
[0]
[true]
[valid, ., length, ==, 0]
[valid, ., length]
[valid]
[0]
[false]
[indexOfAnyBut, (, cs, ,, valid, ), ==, INDEX_NOT_FOUND]
[indexOfAnyBut, (, cs, ,, valid, )]
[cs]
[valid]
[INDEX_NOT_FOUND]
[cs, ==, null, ||, validChars, ==, null]
[cs, ==, null]
[cs]
[null]
[validChars, ==, null]
[validChars]
[null]
[false]
[containsOnly, (, cs, ,, validChars, ., toCharArray, (, ), )]
[cs]
[validChars, ., toCharArray, (, )]
[validChars]
[cs, ==, null, ||, searchChars, ==, null]
[cs, ==, null]
[cs]
[null]
[searchChars, ==, null]
[searchChars]
[null]
[true]
[cs, ., length, (, )]
[cs]
[csLen, -, 1]
[csLen]
[1]
[searchChars, ., length]
[searchChars]
[searchLen, -, 1]
[searchLen]
[1]
[0]
[i, <, csLen]
[i]
[csLen]
[i, ++]
[i]
[cs, ., charAt, (, i, )]
[cs]
[i]
[0]
[j, <, searchLen]
[j]
[searchLen]
[j, ++]
[j]
[searchChars, [, j, ], ==, ch]
[searchChars, [, j, ]]
[searchChars]
[j]
[ch]
[Character, ., isHighSurrogate, (, ch, )]
[Character]
[ch]
[j, ==, searchLast]
[j]
[searchLast]
[false]
[i, <, csLast, &&, searchChars, [, j, +, 1, ], ==, cs, ., charAt, (, i, +, 1, )]
[i, <, csLast]
[i]
[csLast]
[searchChars, [, j, +, 1, ], ==, cs, ., charAt, (, i, +, 1, )]
[searchChars, [, j, +, 1, ]]
[searchChars]
[j, +, 1]
[j]
[1]
[cs, ., charAt, (, i, +, 1, )]
[cs]
[i, +, 1]
[i]
[1]
[false]
[false]
[true]
[cs, ==, null, ||, invalidChars, ==, null]
[cs, ==, null]
[cs]
[null]
[invalidChars, ==, null]
[invalidChars]
[null]
[true]
[containsNone, (, cs, ,, invalidChars, ., toCharArray, (, ), )]
[cs]
[invalidChars, ., toCharArray, (, )]
[invalidChars]
[str, ==, null, ||, searchStrs, ==, null]
[str, ==, null]
[str]
[null]
[searchStrs, ==, null]
[searchStrs]
[null]
[INDEX_NOT_FOUND]
[searchStrs, ., length]
[searchStrs]
[Integer, ., MAX_VALUE]
[Integer]
[0]
[0]
[i, <, sz]
[i]
[sz]
[i, ++]
[i]
[searchStrs, [, i, ]]
[searchStrs]
[i]
[search, ==, null]
[search]
[null]
[tmp]
[CharSequenceUtils, ., indexOf, (, str, ,, search, ,, 0, )]
[CharSequenceUtils]
[str]
[search]
[0]
[tmp, ==, INDEX_NOT_FOUND]
[tmp]
[INDEX_NOT_FOUND]
[tmp, <, ret]
[tmp]
[ret]
[ret]
[tmp]
[ret, ==, Integer, ., MAX_VALUE, ?, INDEX_NOT_FOUND, :, ret]
[ret, ==, Integer, ., MAX_VALUE]
[ret]
[Integer, ., MAX_VALUE]
[Integer]
[INDEX_NOT_FOUND]
[ret]
[str, ==, null, ||, searchStrs, ==, null]
[str, ==, null]
[str]
[null]
[searchStrs, ==, null]
[searchStrs]
[null]
[INDEX_NOT_FOUND]
[searchStrs, ., length]
[searchStrs]
[INDEX_NOT_FOUND]
[0]
[0]
[i, <, sz]
[i]
[sz]
[i, ++]
[i]
[searchStrs, [, i, ]]
[searchStrs]
[i]
[search, ==, null]
[search]
[null]
[tmp]
[CharSequenceUtils, ., lastIndexOf, (, str, ,, search, ,, str, ., length, (, ), )]
[CharSequenceUtils]
[str]
[search]
[str, ., length, (, )]
[str]
[tmp, >, ret]
[tmp]
[ret]
[ret]
[tmp]
[ret]
[str, ==, null]
[str]
[null]
[null]
[start, <, 0]
[start]
[0]
[start]
[str, ., length, (, ), +, start]
[str, ., length, (, )]
[str]
[start]
[start, <, 0]
[start]
[0]
[start]
[0]
[start, >, str, ., length, (, )]
[start]
[str, ., length, (, )]
[str]
[EMPTY]
[str, ., substring, (, start, )]
[str]
[start]
[str, ==, null]
[str]
[null]
[null]
[end, <, 0]
[end]
[0]
[end]
[str, ., length, (, ), +, end]
[str, ., length, (, )]
[str]
[end]
[start, <, 0]
[start]
[0]
[start]
[str, ., length, (, ), +, start]
[str, ., length, (, )]
[str]
[start]
[end, >, str, ., length, (, )]
[end]
[str, ., length, (, )]
[str]
[end]
[str, ., length, (, )]
[str]
[start, >, end]
[start]
[end]
[EMPTY]
[start, <, 0]
[start]
[0]
[start]
[0]
[end, <, 0]
[end]
[0]
[end]
[0]
[str, ., substring, (, start, ,, end, )]
[str]
[start]
[end]
[str, ==, null]
[str]
[null]
[null]
[len, <, 0]
[len]
[0]
[EMPTY]
[str, ., length, (, ), <=, len]
[str, ., length, (, )]
[str]
[len]
[str]
[str, ., substring, (, 0, ,, len, )]
[str]
[0]
[len]
[str, ==, null]
[str]
[null]
[null]
[len, <, 0]
[len]
[0]
[EMPTY]
[str, ., length, (, ), <=, len]
[str, ., length, (, )]
[str]
[len]
[str]
[str, ., substring, (, str, ., length, (, ), -, len, )]
[str]
[str, ., length, (, ), -, len]
[str, ., length, (, )]
[str]
[len]
[str, ==, null]
[str]
[null]
[null]
[len, <, 0, ||, pos, >, str, ., length, (, )]
[len, <, 0]
[len]
[0]
[pos, >, str, ., length, (, )]
[pos]
[str, ., length, (, )]
[str]
[EMPTY]
[pos, <, 0]
[pos]
[0]
[pos]
[0]
[str, ., length, (, ), <=, pos, +, len]
[str, ., length, (, )]
[str]
[pos, +, len]
[pos]
[len]
[str, ., substring, (, pos, )]
[str]
[pos]
[str, ., substring, (, pos, ,, pos, +, len, )]
[str]
[pos]
[pos, +, len]
[pos]
[len]
[isEmpty, (, str, ), ||, separator, ==, null]
[isEmpty, (, str, )]
[str]
[separator, ==, null]
[separator]
[null]
[str]
[separator, ., isEmpty, (, )]
[separator]
[EMPTY]
[str, ., indexOf, (, separator, )]
[str]
[separator]
[pos, ==, INDEX_NOT_FOUND]
[pos]
[INDEX_NOT_FOUND]
[str]
[str, ., substring, (, 0, ,, pos, )]
[str]
[0]
[pos]
[isEmpty, (, str, )]
[str]
[str]
[separator, ==, null]
[separator]
[null]
[EMPTY]
[str, ., indexOf, (, separator, )]
[str]
[separator]
[pos, ==, INDEX_NOT_FOUND]
[pos]
[INDEX_NOT_FOUND]
[EMPTY]
[str, ., substring, (, pos, +, separator, ., length, (, ), )]
[str]
[pos, +, separator, ., length, (, )]
[pos]
[separator, ., length, (, )]
[separator]
[isEmpty, (, str, ), ||, isEmpty, (, separator, )]
[isEmpty, (, str, )]
[str]
[isEmpty, (, separator, )]
[separator]
[str]
[str, ., lastIndexOf, (, separator, )]
[str]
[separator]
[pos, ==, INDEX_NOT_FOUND]
[pos]
[INDEX_NOT_FOUND]
[str]
[str, ., substring, (, 0, ,, pos, )]
[str]
[0]
[pos]
[isEmpty, (, str, )]
[str]
[str]
[isEmpty, (, separator, )]
[separator]
[EMPTY]
[str, ., lastIndexOf, (, separator, )]
[str]
[separator]
[pos, ==, INDEX_NOT_FOUND, ||, pos, ==, str, ., length, (, ), -, separator, ., length, (, )]
[pos, ==, INDEX_NOT_FOUND]
[pos]
[INDEX_NOT_FOUND]
[pos, ==, str, ., length, (, ), -, separator, ., length, (, )]
[pos]
[str, ., length, (, ), -, separator, ., length, (, )]
[str, ., length, (, )]
[str]
[separator, ., length, (, )]
[separator]
[EMPTY]
[str, ., substring, (, pos, +, separator, ., length, (, ), )]
[str]
[pos, +, separator, ., length, (, )]
[pos]
[separator, ., length, (, )]
[separator]
[substringBetween, (, str, ,, tag, ,, tag, )]
[str]
[tag]
[tag]
[str, ==, null, ||, open, ==, null, ||, close, ==, null]
[str, ==, null, ||, open, ==, null]
[str, ==, null]
[str]
[null]
[open, ==, null]
[open]
[null]
[close, ==, null]
[close]
[null]
[null]
[str, ., indexOf, (, open, )]
[str]
[open]
[start, !=, INDEX_NOT_FOUND]
[start]
[INDEX_NOT_FOUND]
[str, ., indexOf, (, close, ,, start, +, open, ., length, (, ), )]
[str]
[close]
[start, +, open, ., length, (, )]
[start]
[open, ., length, (, )]
[open]
[end, !=, INDEX_NOT_FOUND]
[end]
[INDEX_NOT_FOUND]
[str, ., substring, (, start, +, open, ., length, (, ), ,, end, )]
[str]
[start, +, open, ., length, (, )]
[start]
[open, ., length, (, )]
[open]
[end]
[null]
[str, ==, null, ||, isEmpty, (, open, ), ||, isEmpty, (, close, )]
[str, ==, null, ||, isEmpty, (, open, )]
[str, ==, null]
[str]
[null]
[isEmpty, (, open, )]
[open]
[isEmpty, (, close, )]
[close]
[null]
[str, ., length, (, )]
[str]
[strLen, ==, 0]
[strLen]
[0]
[ArrayUtils, ., EMPTY_STRING_ARRAY]
[ArrayUtils]
[close, ., length, (, )]
[close]
[open, ., length, (, )]
[open]
[new, ArrayList, <, String, >, (, )]
[0]
[pos, <, strLen, -, closeLen]
[pos]
[strLen, -, closeLen]
[strLen]
[closeLen]
[str, ., indexOf, (, open, ,, pos, )]
[str]
[open]
[pos]
[start, <, 0]
[start]
[0]
[start]
[openLen]
[str, ., indexOf, (, close, ,, start, )]
[str]
[close]
[start]
[end, <, 0]
[end]
[0]
[list, ., add, (, str, ., substring, (, start, ,, end, ), )]
[list]
[str, ., substring, (, start, ,, end, )]
[str]
[start]
[end]
[pos]
[end, +, closeLen]
[end]
[closeLen]
[list, ., isEmpty, (, )]
[list]
[null]
[list, ., toArray, (, new, String, [, list, ., size, (, ), ], )]
[list]
[new, String, [, list, ., size, (, ), ]]
[list, ., size, (, )]
[list]
[split, (, str, ,, null, ,, -, 1, )]
[str]
[null]
[-, 1]
[1]
[splitWorker, (, str, ,, separatorChar, ,, false, )]
[str]
[separatorChar]
[false]
[splitWorker, (, str, ,, separatorChars, ,, -, 1, ,, false, )]
[str]
[separatorChars]
[-, 1]
[1]
[false]
[splitWorker, (, str, ,, separatorChars, ,, max, ,, false, )]
[str]
[separatorChars]
[max]
[false]
[splitByWholeSeparatorWorker, (, str, ,, separator, ,, -, 1, ,, false, )]
[str]
[separator]
[-, 1]
[1]
[false]
[splitByWholeSeparatorWorker, (, str, ,, separator, ,, max, ,, false, )]
[str]
[separator]
[max]
[false]
[splitByWholeSeparatorWorker, (, str, ,, separator, ,, -, 1, ,, true, )]
[str]
[separator]
[-, 1]
[1]
[true]
[splitByWholeSeparatorWorker, (, str, ,, separator, ,, max, ,, true, )]
[str]
[separator]
[max]
[true]
[str, ==, null]
[str]
[null]
[null]
[str, ., length, (, )]
[str]
[len, ==, 0]
[len]
[0]
[ArrayUtils, ., EMPTY_STRING_ARRAY]
[ArrayUtils]
[separator, ==, null, ||, EMPTY, ., equals, (, separator, )]
[separator, ==, null]
[separator]
[null]
[EMPTY, ., equals, (, separator, )]
[EMPTY]
[separator]
[splitWorker, (, str, ,, null, ,, max, ,, preserveAllTokens, )]
[str]
[null]
[max]
[preserveAllTokens]
[separator, ., length, (, )]
[separator]
[new, ArrayList, <, String, >, (, )]
[0]
[0]
[0]
[end, <, len]
[end]
[len]
[end]
[str, ., indexOf, (, separator, ,, beg, )]
[str]
[separator]
[beg]
[end, >, -, 1]
[end]
[-, 1]
[1]
[end, >, beg]
[end]
[beg]
[numberOfSubstrings]
[1]
[numberOfSubstrings, ==, max]
[numberOfSubstrings]
[max]
[end]
[len]
[substrings, ., add, (, str, ., substring, (, beg, ), )]
[substrings]
[str, ., substring, (, beg, )]
[str]
[beg]
[substrings, ., add, (, str, ., substring, (, beg, ,, end, ), )]
[substrings]
[str, ., substring, (, beg, ,, end, )]
[str]
[beg]
[end]
[beg]
[end, +, separatorLength]
[end]
[separatorLength]
[preserveAllTokens]
[numberOfSubstrings]
[1]
[numberOfSubstrings, ==, max]
[numberOfSubstrings]
[max]
[end]
[len]
[substrings, ., add, (, str, ., substring, (, beg, ), )]
[substrings]
[str, ., substring, (, beg, )]
[str]
[beg]
[substrings, ., add, (, EMPTY, )]
[substrings]
[EMPTY]
[beg]
[end, +, separatorLength]
[end]
[separatorLength]
[substrings, ., add, (, str, ., substring, (, beg, ), )]
[substrings]
[str, ., substring, (, beg, )]
[str]
[beg]
[end]
[len]
[substrings, ., toArray, (, new, String, [, substrings, ., size, (, ), ], )]
[substrings]
[new, String, [, substrings, ., size, (, ), ]]
[substrings, ., size, (, )]
[substrings]
[splitWorker, (, str, ,, null, ,, -, 1, ,, true, )]
[str]
[null]
[-, 1]
[1]
[true]
[splitWorker, (, str, ,, separatorChar, ,, true, )]
[str]
[separatorChar]
[true]
[str, ==, null]
[str]
[null]
[null]
[str, ., length, (, )]
[str]
[len, ==, 0]
[len]
[0]
[ArrayUtils, ., EMPTY_STRING_ARRAY]
[ArrayUtils]
[new, ArrayList, <, String, >, (, )]
[0]
[0]
[false]
[false]
[i, <, len]
[i]
[len]
[str, ., charAt, (, i, ), ==, separatorChar]
[str, ., charAt, (, i, )]
[str]
[i]
[separatorChar]
[match, ||, preserveAllTokens]
[match]
[preserveAllTokens]
[list, ., add, (, str, ., substring, (, start, ,, i, ), )]
[list]
[str, ., substring, (, start, ,, i, )]
[str]
[start]
[i]
[match]
[false]
[lastMatch]
[true]
[start]
[++, i]
[i]
[lastMatch]
[false]
[match]
[true]
[i, ++]
[i]
[match, ||, preserveAllTokens, &&, lastMatch]
[match]
[preserveAllTokens, &&, lastMatch]
[preserveAllTokens]
[lastMatch]
[list, ., add, (, str, ., substring, (, start, ,, i, ), )]
[list]
[str, ., substring, (, start, ,, i, )]
[str]
[start]
[i]
[list, ., toArray, (, new, String, [, list, ., size, (, ), ], )]
[list]
[new, String, [, list, ., size, (, ), ]]
[list, ., size, (, )]
[list]
[splitWorker, (, str, ,, separatorChars, ,, -, 1, ,, true, )]
[str]
[separatorChars]
[-, 1]
[1]
[true]
[splitWorker, (, str, ,, separatorChars, ,, max, ,, true, )]
[str]
[separatorChars]
[max]
[true]
[str, ==, null]
[str]
[null]
[null]
[str, ., length, (, )]
[str]
[len, ==, 0]
[len]
[0]
[ArrayUtils, ., EMPTY_STRING_ARRAY]
[ArrayUtils]
[new, ArrayList, <, String, >, (, )]
[1]
[0]
[0]
[false]
[false]
[separatorChars, ==, null]
[separatorChars]
[null]
[i, <, len]
[i]
[len]
[Character, ., isWhitespace, (, str, ., charAt, (, i, ), )]
[Character]
[str, ., charAt, (, i, )]
[str]
[i]
[match, ||, preserveAllTokens]
[match]
[preserveAllTokens]
[lastMatch]
[true]
[sizePlus1, ++, ==, max]
[sizePlus1, ++]
[sizePlus1]
[max]
[i]
[len]
[lastMatch]
[false]
[list, ., add, (, str, ., substring, (, start, ,, i, ), )]
[list]
[str, ., substring, (, start, ,, i, )]
[str]
[start]
[i]
[match]
[false]
[start]
[++, i]
[i]
[lastMatch]
[false]
[match]
[true]
[i, ++]
[i]
[separatorChars, ., length, (, ), ==, 1]
[separatorChars, ., length, (, )]
[separatorChars]
[1]
[separatorChars, ., charAt, (, 0, )]
[separatorChars]
[0]
[i, <, len]
[i]
[len]
[str, ., charAt, (, i, ), ==, sep]
[str, ., charAt, (, i, )]
[str]
[i]
[sep]
[match, ||, preserveAllTokens]
[match]
[preserveAllTokens]
[lastMatch]
[true]
[sizePlus1, ++, ==, max]
[sizePlus1, ++]
[sizePlus1]
[max]
[i]
[len]
[lastMatch]
[false]
[list, ., add, (, str, ., substring, (, start, ,, i, ), )]
[list]
[str, ., substring, (, start, ,, i, )]
[str]
[start]
[i]
[match]
[false]
[start]
[++, i]
[i]
[lastMatch]
[false]
[match]
[true]
[i, ++]
[i]
[i, <, len]
[i]
[len]
[separatorChars, ., indexOf, (, str, ., charAt, (, i, ), ), >=, 0]
[separatorChars, ., indexOf, (, str, ., charAt, (, i, ), )]
[separatorChars]
[str, ., charAt, (, i, )]
[str]
[i]
[0]
[match, ||, preserveAllTokens]
[match]
[preserveAllTokens]
[lastMatch]
[true]
[sizePlus1, ++, ==, max]
[sizePlus1, ++]
[sizePlus1]
[max]
[i]
[len]
[lastMatch]
[false]
[list, ., add, (, str, ., substring, (, start, ,, i, ), )]
[list]
[str, ., substring, (, start, ,, i, )]
[str]
[start]
[i]
[match]
[false]
[start]
[++, i]
[i]
[lastMatch]
[false]
[match]
[true]
[i, ++]
[i]
[match, ||, preserveAllTokens, &&, lastMatch]
[match]
[preserveAllTokens, &&, lastMatch]
[preserveAllTokens]
[lastMatch]
[list, ., add, (, str, ., substring, (, start, ,, i, ), )]
[list]
[str, ., substring, (, start, ,, i, )]
[str]
[start]
[i]
[list, ., toArray, (, new, String, [, list, ., size, (, ), ], )]
[list]
[new, String, [, list, ., size, (, ), ]]
[list, ., size, (, )]
[list]
[splitByCharacterType, (, str, ,, false, )]
[str]
[false]
[splitByCharacterType, (, str, ,, true, )]
[str]
[true]
[str, ==, null]
[str]
[null]
[null]
[str, ., isEmpty, (, )]
[str]
[ArrayUtils, ., EMPTY_STRING_ARRAY]
[ArrayUtils]
[str, ., toCharArray, (, )]
[str]
[new, ArrayList, <, String, >, (, )]
[0]
[Character, ., getType, (, c, [, tokenStart, ], )]
[Character]
[c, [, tokenStart, ]]
[c]
[tokenStart]
[tokenStart, +, 1]
[tokenStart]
[1]
[pos, <, c, ., length]
[pos]
[c, ., length]
[c]
[pos, ++]
[pos]
[Character, ., getType, (, c, [, pos, ], )]
[Character]
[c, [, pos, ]]
[c]
[pos]
[type, ==, currentType]
[type]
[currentType]
[camelCase, &&, type, ==, Character, ., LOWERCASE_LETTER, &&, currentType, ==, Character, ., UPPERCASE_LETTER]
[camelCase, &&, type, ==, Character, ., LOWERCASE_LETTER]
[camelCase]
[type, ==, Character, ., LOWERCASE_LETTER]
[type]
[Character, ., LOWERCASE_LETTER]
[Character]
[currentType, ==, Character, ., UPPERCASE_LETTER]
[currentType]
[Character, ., UPPERCASE_LETTER]
[Character]
[pos, -, 1]
[pos]
[1]
[newTokenStart, !=, tokenStart]
[newTokenStart]
[tokenStart]
[list, ., add, (, new, String, (, c, ,, tokenStart, ,, newTokenStart, -, tokenStart, ), )]
[list]
[new, String, (, c, ,, tokenStart, ,, newTokenStart, -, tokenStart, )]
[c]
[tokenStart]
[newTokenStart, -, tokenStart]
[newTokenStart]
[tokenStart]
[tokenStart]
[newTokenStart]
[list, ., add, (, new, String, (, c, ,, tokenStart, ,, pos, -, tokenStart, ), )]
[list]
[new, String, (, c, ,, tokenStart, ,, pos, -, tokenStart, )]
[c]
[tokenStart]
[pos, -, tokenStart]
[pos]
[tokenStart]
[tokenStart]
[pos]
[currentType]
[type]
[list, ., add, (, new, String, (, c, ,, tokenStart, ,, c, ., length, -, tokenStart, ), )]
[list]
[new, String, (, c, ,, tokenStart, ,, c, ., length, -, tokenStart, )]
[c]
[tokenStart]
[c, ., length, -, tokenStart]
[c, ., length]
[c]
[tokenStart]
[list, ., toArray, (, new, String, [, list, ., size, (, ), ], )]
[list]
[new, String, [, list, ., size, (, ), ]]
[list, ., size, (, )]
[list]
[join, (, elements, ,, null, )]
[elements]
[null]
[array, ==, null]
[array]
[null]
[null]
[join, (, array, ,, separator, ,, 0, ,, array, ., length, )]
[array]
[separator]
[0]
[array, ., length]
[array]
[array, ==, null]
[array]
[null]
[null]
[join, (, array, ,, separator, ,, 0, ,, array, ., length, )]
[array]
[separator]
[0]
[array, ., length]
[array]
[array, ==, null]
[array]
[null]
[null]
[join, (, array, ,, separator, ,, 0, ,, array, ., length, )]
[array]
[separator]
[0]
[array, ., length]
[array]
[array, ==, null]
[array]
[null]
[null]
[join, (, array, ,, separator, ,, 0, ,, array, ., length, )]
[array]
[separator]
[0]
[array, ., length]
[array]
[array, ==, null]
[array]
[null]
[null]
[join, (, array, ,, separator, ,, 0, ,, array, ., length, )]
[array]
[separator]
[0]
[array, ., length]
[array]
[array, ==, null]
[array]
[null]
[null]
[join, (, array, ,, separator, ,, 0, ,, array, ., length, )]
[array]
[separator]
[0]
[array, ., length]
[array]
[array, ==, null]
[array]
[null]
[null]
[join, (, array, ,, separator, ,, 0, ,, array, ., length, )]
[array]
[separator]
[0]
[array, ., length]
[array]
[array, ==, null]
[array]
[null]
[null]
[join, (, array, ,, separator, ,, 0, ,, array, ., length, )]
[array]
[separator]
[0]
[array, ., length]
[array]
[array, ==, null]
[array]
[null]
[null]
[endIndex, -, startIndex]
[endIndex]
[startIndex]
[noOfItems, <=, 0]
[noOfItems]
[0]
[EMPTY]
[new, StringBuilder, (, noOfItems, *, 16, )]
[noOfItems, *, 16]
[noOfItems]
[16]
[startIndex]
[i, <, endIndex]
[i]
[endIndex]
[i, ++]
[i]
[i, >, startIndex]
[i]
[startIndex]
[buf, ., append, (, separator, )]
[buf]
[separator]
[array, [, i, ], !=, null]
[array, [, i, ]]
[array]
[i]
[null]
[buf, ., append, (, array, [, i, ], )]
[buf]
[array, [, i, ]]
[array]
[i]
[buf, ., toString, (, )]
[buf]
[array, ==, null]
[array]
[null]
[null]
[endIndex, -, startIndex]
[endIndex]
[startIndex]
[noOfItems, <=, 0]
[noOfItems]
[0]
[EMPTY]
[new, StringBuilder, (, noOfItems, *, 16, )]
[noOfItems, *, 16]
[noOfItems]
[16]
[startIndex]
[i, <, endIndex]
[i]
[endIndex]
[i, ++]
[i]
[i, >, startIndex]
[i]
[startIndex]
[buf, ., append, (, separator, )]
[buf]
[separator]
[buf, ., append, (, array, [, i, ], )]
[buf]
[array, [, i, ]]
[array]
[i]
[buf, ., toString, (, )]
[buf]
[array, ==, null]
[array]
[null]
[null]
[endIndex, -, startIndex]
[endIndex]
[startIndex]
[noOfItems, <=, 0]
[noOfItems]
[0]
[EMPTY]
[new, StringBuilder, (, noOfItems, *, 16, )]
[noOfItems, *, 16]
[noOfItems]
[16]
[startIndex]
[i, <, endIndex]
[i]
[endIndex]
[i, ++]
[i]
[i, >, startIndex]
[i]
[startIndex]
[buf, ., append, (, separator, )]
[buf]
[separator]
[buf, ., append, (, array, [, i, ], )]
[buf]
[array, [, i, ]]
[array]
[i]
[buf, ., toString, (, )]
[buf]
[array, ==, null]
[array]
[null]
[null]
[endIndex, -, startIndex]
[endIndex]
[startIndex]
[noOfItems, <=, 0]
[noOfItems]
[0]
[EMPTY]
[new, StringBuilder, (, noOfItems, *, 16, )]
[noOfItems, *, 16]
[noOfItems]
[16]
[startIndex]
[i, <, endIndex]
[i]
[endIndex]
[i, ++]
[i]
[i, >, startIndex]
[i]
[startIndex]
[buf, ., append, (, separator, )]
[buf]
[separator]
[buf, ., append, (, array, [, i, ], )]
[buf]
[array, [, i, ]]
[array]
[i]
[buf, ., toString, (, )]
[buf]
[array, ==, null]
[array]
[null]
[null]
[endIndex, -, startIndex]
[endIndex]
[startIndex]
[noOfItems, <=, 0]
[noOfItems]
[0]
[EMPTY]
[new, StringBuilder, (, noOfItems, *, 16, )]
[noOfItems, *, 16]
[noOfItems]
[16]
[startIndex]
[i, <, endIndex]
[i]
[endIndex]
[i, ++]
[i]
[i, >, startIndex]
[i]
[startIndex]
[buf, ., append, (, separator, )]
[buf]
[separator]
[buf, ., append, (, array, [, i, ], )]
[buf]
[array, [, i, ]]
[array]
[i]
[buf, ., toString, (, )]
[buf]
[array, ==, null]
[array]
[null]
[null]
[endIndex, -, startIndex]
[endIndex]
[startIndex]
[noOfItems, <=, 0]
[noOfItems]
[0]
[EMPTY]
[new, StringBuilder, (, noOfItems, *, 16, )]
[noOfItems, *, 16]
[noOfItems]
[16]
[startIndex]
[i, <, endIndex]
[i]
[endIndex]
[i, ++]
[i]
[i, >, startIndex]
[i]
[startIndex]
[buf, ., append, (, separator, )]
[buf]
[separator]
[buf, ., append, (, array, [, i, ], )]
[buf]
[array, [, i, ]]
[array]
[i]
[buf, ., toString, (, )]
[buf]
[array, ==, null]
[array]
[null]
[null]
[endIndex, -, startIndex]
[endIndex]
[startIndex]
[noOfItems, <=, 0]
[noOfItems]
[0]
[EMPTY]
[new, StringBuilder, (, noOfItems, *, 16, )]
[noOfItems, *, 16]
[noOfItems]
[16]
[startIndex]
[i, <, endIndex]
[i]
[endIndex]
[i, ++]
[i]
[i, >, startIndex]
[i]
[startIndex]
[buf, ., append, (, separator, )]
[buf]
[separator]
[buf, ., append, (, array, [, i, ], )]
[buf]
[array, [, i, ]]
[array]
[i]
[buf, ., toString, (, )]
[buf]
[array, ==, null]
[array]
[null]
[null]
[endIndex, -, startIndex]
[endIndex]
[startIndex]
[noOfItems, <=, 0]
[noOfItems]
[0]
[EMPTY]
[new, StringBuilder, (, noOfItems, *, 16, )]
[noOfItems, *, 16]
[noOfItems]
[16]
[startIndex]
[i, <, endIndex]
[i]
[endIndex]
[i, ++]
[i]
[i, >, startIndex]
[i]
[startIndex]
[buf, ., append, (, separator, )]
[buf]
[separator]
[buf, ., append, (, array, [, i, ], )]
[buf]
[array, [, i, ]]
[array]
[i]
[buf, ., toString, (, )]
[buf]
[array, ==, null]
[array]
[null]
[null]
[join, (, array, ,, separator, ,, 0, ,, array, ., length, )]
[array]
[separator]
[0]
[array, ., length]
[array]
[array, ==, null]
[array]
[null]
[null]
[separator, ==, null]
[separator]
[null]
[separator]
[EMPTY]
[endIndex, -, startIndex]
[endIndex]
[startIndex]
[noOfItems, <=, 0]
[noOfItems]
[0]
[EMPTY]
[new, StringBuilder, (, noOfItems, *, 16, )]
[noOfItems, *, 16]
[noOfItems]
[16]
[startIndex]
[i, <, endIndex]
[i]
[endIndex]
[i, ++]
[i]
[i, >, startIndex]
[i]
[startIndex]
[buf, ., append, (, separator, )]
[buf]
[separator]
[array, [, i, ], !=, null]
[array, [, i, ]]
[array]
[i]
[null]
[buf, ., append, (, array, [, i, ], )]
[buf]
[array, [, i, ]]
[array]
[i]
[buf, ., toString, (, )]
[buf]
[iterator, ==, null]
[iterator]
[null]
[null]
[!, iterator, ., hasNext, (, )]
[iterator, ., hasNext, (, )]
[iterator]
[EMPTY]
[iterator, ., next, (, )]
[iterator]
[!, iterator, ., hasNext, (, )]
[iterator, ., hasNext, (, )]
[iterator]
[ObjectUtils, ., toString, (, first, )]
[ObjectUtils]
[first]
[new, StringBuilder, (, 256, )]
[256]
[first, !=, null]
[first]
[null]
[buf, ., append, (, first, )]
[buf]
[first]
[iterator, ., hasNext, (, )]
[iterator]
[buf, ., append, (, separator, )]
[buf]
[separator]
[iterator, ., next, (, )]
[iterator]
[obj, !=, null]
[obj]
[null]
[buf, ., append, (, obj, )]
[buf]
[obj]
[buf, ., toString, (, )]
[buf]
[iterator, ==, null]
[iterator]
[null]
[null]
[!, iterator, ., hasNext, (, )]
[iterator, ., hasNext, (, )]
[iterator]
[EMPTY]
[iterator, ., next, (, )]
[iterator]
[!, iterator, ., hasNext, (, )]
[iterator, ., hasNext, (, )]
[iterator]
[ObjectUtils, ., toString, (, first, )]
[ObjectUtils]
[first]
[new, StringBuilder, (, 256, )]
[256]
[first, !=, null]
[first]
[null]
[buf, ., append, (, first, )]
[buf]
[first]
[iterator, ., hasNext, (, )]
[iterator]
[separator, !=, null]
[separator]
[null]
[buf, ., append, (, separator, )]
[buf]
[separator]
[iterator, ., next, (, )]
[iterator]
[obj, !=, null]
[obj]
[null]
[buf, ., append, (, obj, )]
[buf]
[obj]
[buf, ., toString, (, )]
[buf]
[iterable, ==, null]
[iterable]
[null]
[null]
[join, (, iterable, ., iterator, (, ), ,, separator, )]
[iterable, ., iterator, (, )]
[iterable]
[separator]
[iterable, ==, null]
[iterable]
[null]
[null]
[join, (, iterable, ., iterator, (, ), ,, separator, )]
[iterable, ., iterator, (, )]
[iterable]
[separator]
[isEmpty, (, str, )]
[str]
[str]
[str, ., length, (, )]
[str]
[new, char, [, sz, ]]
[sz]
[0]
[0]
[i, <, sz]
[i]
[sz]
[i, ++]
[i]
[!, Character, ., isWhitespace, (, str, ., charAt, (, i, ), )]
[Character, ., isWhitespace, (, str, ., charAt, (, i, ), )]
[Character]
[str, ., charAt, (, i, )]
[str]
[i]
[chs, [, count, ++, ]]
[chs]
[count, ++]
[count]
[str, ., charAt, (, i, )]
[str]
[i]
[count, ==, sz]
[count]
[sz]
[str]
[new, String, (, chs, ,, 0, ,, count, )]
[chs]
[0]
[count]
[isEmpty, (, str, ), ||, isEmpty, (, remove, )]
[isEmpty, (, str, )]
[str]
[isEmpty, (, remove, )]
[remove]
[str]
[str, ., startsWith, (, remove, )]
[str]
[remove]
[str, ., substring, (, remove, ., length, (, ), )]
[str]
[remove, ., length, (, )]
[remove]
[str]
[isEmpty, (, str, ), ||, isEmpty, (, remove, )]
[isEmpty, (, str, )]
[str]
[isEmpty, (, remove, )]
[remove]
[str]
[startsWithIgnoreCase, (, str, ,, remove, )]
[str]
[remove]
[str, ., substring, (, remove, ., length, (, ), )]
[str]
[remove, ., length, (, )]
[remove]
[str]
[isEmpty, (, str, ), ||, isEmpty, (, remove, )]
[isEmpty, (, str, )]
[str]
[isEmpty, (, remove, )]
[remove]
[str]
[str, ., endsWith, (, remove, )]
[str]
[remove]
[str, ., substring, (, 0, ,, str, ., length, (, ), -, remove, ., length, (, ), )]
[str]
[0]
[str, ., length, (, ), -, remove, ., length, (, )]
[str, ., length, (, )]
[str]
[remove, ., length, (, )]
[remove]
[str]
[isEmpty, (, str, ), ||, isEmpty, (, remove, )]
[isEmpty, (, str, )]
[str]
[isEmpty, (, remove, )]
[remove]
[str]
[endsWithIgnoreCase, (, str, ,, remove, )]
[str]
[remove]
[str, ., substring, (, 0, ,, str, ., length, (, ), -, remove, ., length, (, ), )]
[str]
[0]
[str, ., length, (, ), -, remove, ., length, (, )]
[str, ., length, (, )]
[str]
[remove, ., length, (, )]
[remove]
[str]
[isEmpty, (, str, ), ||, isEmpty, (, remove, )]
[isEmpty, (, str, )]
[str]
[isEmpty, (, remove, )]
[remove]
[str]
[replace, (, str, ,, remove, ,, EMPTY, ,, -, 1, )]
[str]
[remove]
[EMPTY]
[-, 1]
[1]
[isEmpty, (, str, ), ||, str, ., indexOf, (, remove, ), ==, INDEX_NOT_FOUND]
[isEmpty, (, str, )]
[str]
[str, ., indexOf, (, remove, ), ==, INDEX_NOT_FOUND]
[str, ., indexOf, (, remove, )]
[str]
[remove]
[INDEX_NOT_FOUND]
[str]
[str, ., toCharArray, (, )]
[str]
[0]
[0]
[i, <, chars, ., length]
[i]
[chars, ., length]
[chars]
[i, ++]
[i]
[chars, [, i, ], !=, remove]
[chars, [, i, ]]
[chars]
[i]
[remove]
[chars, [, pos, ++, ]]
[chars]
[pos, ++]
[pos]
[chars, [, i, ]]
[chars]
[i]
[new, String, (, chars, ,, 0, ,, pos, )]
[chars]
[0]
[pos]
[replace, (, text, ,, searchString, ,, replacement, ,, 1, )]
[text]
[searchString]
[replacement]
[1]
[Pattern, ., compile, (, regex, ,, Pattern, ., DOTALL, ), ., matcher, (, source, ), ., replaceAll, (, replacement, )]
[Pattern, ., compile, (, regex, ,, Pattern, ., DOTALL, ), ., matcher, (, source, )]
[Pattern, ., compile, (, regex, ,, Pattern, ., DOTALL, )]
[Pattern]
[regex]
[Pattern, ., DOTALL]
[Pattern]
[source]
[replacement]
[replacePattern, (, source, ,, regex, ,, StringUtils, ., EMPTY, )]
[source]
[regex]
[StringUtils, ., EMPTY]
[StringUtils]
[replace, (, text, ,, searchString, ,, replacement, ,, -, 1, )]
[text]
[searchString]
[replacement]
[-, 1]
[1]
[isEmpty, (, text, ), ||, isEmpty, (, searchString, ), ||, replacement, ==, null, ||, max, ==, 0]
[isEmpty, (, text, ), ||, isEmpty, (, searchString, ), ||, replacement, ==, null]
[isEmpty, (, text, ), ||, isEmpty, (, searchString, )]
[isEmpty, (, text, )]
[text]
[isEmpty, (, searchString, )]
[searchString]
[replacement, ==, null]
[replacement]
[null]
[max, ==, 0]
[max]
[0]
[text]
[0]
[text, ., indexOf, (, searchString, ,, start, )]
[text]
[searchString]
[start]
[end, ==, INDEX_NOT_FOUND]
[end]
[INDEX_NOT_FOUND]
[text]
[searchString, ., length, (, )]
[searchString]
[replacement, ., length, (, ), -, replLength]
[replacement, ., length, (, )]
[replacement]
[replLength]
[increase]
[increase, <, 0, ?, 0, :, increase]
[increase, <, 0]
[increase]
[0]
[0]
[increase]
[increase]
[max, <, 0, ?, 16, :, max, >, 64, ?, 64, :, max]
[max, <, 0]
[max]
[0]
[16]
[max, >, 64, ?, 64, :, max]
[max, >, 64]
[max]
[64]
[64]
[max]
[new, StringBuilder, (, text, ., length, (, ), +, increase, )]
[text, ., length, (, ), +, increase]
[text, ., length, (, )]
[text]
[increase]
[end, !=, INDEX_NOT_FOUND]
[end]
[INDEX_NOT_FOUND]
[buf, ., append, (, text, ., substring, (, start, ,, end, ), ), ., append, (, replacement, )]
[buf, ., append, (, text, ., substring, (, start, ,, end, ), )]
[buf]
[text, ., substring, (, start, ,, end, )]
[text]
[start]
[end]
[replacement]
[start]
[end, +, replLength]
[end]
[replLength]
[--, max, ==, 0]
[--, max]
[max]
[0]
[end]
[text, ., indexOf, (, searchString, ,, start, )]
[text]
[searchString]
[start]
[buf, ., append, (, text, ., substring, (, start, ), )]
[buf]
[text, ., substring, (, start, )]
[text]
[start]
[buf, ., toString, (, )]
[buf]
[replaceEach, (, text, ,, searchList, ,, replacementList, ,, false, ,, 0, )]
[text]
[searchList]
[replacementList]
[false]
[0]
[searchList, ==, null, ?, 0, :, searchList, ., length]
[searchList, ==, null]
[searchList]
[null]
[0]
[searchList, ., length]
[searchList]
[replaceEach, (, text, ,, searchList, ,, replacementList, ,, true, ,, timeToLive, )]
[text]
[searchList]
[replacementList]
[true]
[timeToLive]
[text, ==, null, ||, text, ., isEmpty, (, ), ||, searchList, ==, null, ||, searchList, ., length, ==, 0, ||, replacementList, ==, null, ||, replacementList, ., length, ==, 0]
[text, ==, null, ||, text, ., isEmpty, (, ), ||, searchList, ==, null, ||, searchList, ., length, ==, 0, ||, replacementList, ==, null]
[text, ==, null, ||, text, ., isEmpty, (, ), ||, searchList, ==, null, ||, searchList, ., length, ==, 0]
[text, ==, null, ||, text, ., isEmpty, (, ), ||, searchList, ==, null]
[text, ==, null, ||, text, ., isEmpty, (, )]
[text, ==, null]
[text]
[null]
[text, ., isEmpty, (, )]
[text]
[searchList, ==, null]
[searchList]
[null]
[searchList, ., length, ==, 0]
[searchList, ., length]
[searchList]
[0]
[replacementList, ==, null]
[replacementList]
[null]
[replacementList, ., length, ==, 0]
[replacementList, ., length]
[replacementList]
[0]
[text]
[timeToLive, <, 0]
[timeToLive]
[0]
[new, IllegalStateException, (, "Aborting to protect against StackOverflowError - ", +, "output of one loop is the input of another", )]
["Aborting to protect against StackOverflowError - ", +, "output of one loop is the input of another"]
["Aborting to protect against StackOverflowError - "]
["output of one loop is the input of another"]
[searchList, ., length]
[searchList]
[replacementList, ., length]
[replacementList]
[searchLength, !=, replacementLength]
[searchLength]
[replacementLength]
[new, IllegalArgumentException, (, "Search and Replace array lengths don't match: ", +, searchLength, +, " vs ", +, replacementLength, )]
["Search and Replace array lengths don't match: ", +, searchLength, +, " vs ", +, replacementLength]
["Search and Replace array lengths don't match: ", +, searchLength, +, " vs "]
["Search and Replace array lengths don't match: ", +, searchLength]
["Search and Replace array lengths don't match: "]
[searchLength]
[" vs "]
[replacementLength]
[new, boolean, [, searchLength, ]]
[searchLength]
[-, 1]
[1]
[-, 1]
[1]
[-, 1]
[1]
[0]
[i, <, searchLength]
[i]
[searchLength]
[i, ++]
[i]
[noMoreMatchesForReplIndex, [, i, ], ||, searchList, [, i, ], ==, null, ||, searchList, [, i, ], ., isEmpty, (, ), ||, replacementList, [, i, ], ==, null]
[noMoreMatchesForReplIndex, [, i, ], ||, searchList, [, i, ], ==, null, ||, searchList, [, i, ], ., isEmpty, (, )]
[noMoreMatchesForReplIndex, [, i, ], ||, searchList, [, i, ], ==, null]
[noMoreMatchesForReplIndex, [, i, ]]
[noMoreMatchesForReplIndex]
[i]
[searchList, [, i, ], ==, null]
[searchList, [, i, ]]
[searchList]
[i]
[null]
[searchList, [, i, ], ., isEmpty, (, )]
[searchList, [, i, ]]
[searchList]
[i]
[replacementList, [, i, ], ==, null]
[replacementList, [, i, ]]
[replacementList]
[i]
[null]
[tempIndex]
[text, ., indexOf, (, searchList, [, i, ], )]
[text]
[searchList, [, i, ]]
[searchList]
[i]
[tempIndex, ==, -, 1]
[tempIndex]
[-, 1]
[1]
[noMoreMatchesForReplIndex, [, i, ]]
[noMoreMatchesForReplIndex]
[i]
[true]
[textIndex, ==, -, 1, ||, tempIndex, <, textIndex]
[textIndex, ==, -, 1]
[textIndex]
[-, 1]
[1]
[tempIndex, <, textIndex]
[tempIndex]
[textIndex]
[textIndex]
[tempIndex]
[replaceIndex]
[i]
[textIndex, ==, -, 1]
[textIndex]
[-, 1]
[1]
[text]
[0]
[0]
[0]
[i, <, searchList, ., length]
[i]
[searchList, ., length]
[searchList]
[i, ++]
[i]
[searchList, [, i, ], ==, null, ||, replacementList, [, i, ], ==, null]
[searchList, [, i, ], ==, null]
[searchList, [, i, ]]
[searchList]
[i]
[null]
[replacementList, [, i, ], ==, null]
[replacementList, [, i, ]]
[replacementList]
[i]
[null]
[replacementList, [, i, ], ., length, (, ), -, searchList, [, i, ], ., length, (, )]
[replacementList, [, i, ], ., length, (, )]
[replacementList, [, i, ]]
[replacementList]
[i]
[searchList, [, i, ], ., length, (, )]
[searchList, [, i, ]]
[searchList]
[i]
[greater, >, 0]
[greater]
[0]
[increase]
[3, *, greater]
[3]
[greater]
[increase]
[Math, ., min, (, increase, ,, text, ., length, (, ), /, 5, )]
[Math]
[increase]
[text, ., length, (, ), /, 5]
[text, ., length, (, )]
[text]
[5]
[new, StringBuilder, (, text, ., length, (, ), +, increase, )]
[text, ., length, (, ), +, increase]
[text, ., length, (, )]
[text]
[increase]
[textIndex, !=, -, 1]
[textIndex]
[-, 1]
[1]
[start]
[i, <, textIndex]
[i]
[textIndex]
[i, ++]
[i]
[buf, ., append, (, text, ., charAt, (, i, ), )]
[buf]
[text, ., charAt, (, i, )]
[text]
[i]
[buf, ., append, (, replacementList, [, replaceIndex, ], )]
[buf]
[replacementList, [, replaceIndex, ]]
[replacementList]
[replaceIndex]
[start]
[textIndex, +, searchList, [, replaceIndex, ], ., length, (, )]
[textIndex]
[searchList, [, replaceIndex, ], ., length, (, )]
[searchList, [, replaceIndex, ]]
[searchList]
[replaceIndex]
[textIndex]
[-, 1]
[1]
[replaceIndex]
[-, 1]
[1]
[tempIndex]
[-, 1]
[1]
[0]
[i, <, searchLength]
[i]
[searchLength]
[i, ++]
[i]
[noMoreMatchesForReplIndex, [, i, ], ||, searchList, [, i, ], ==, null, ||, searchList, [, i, ], ., isEmpty, (, ), ||, replacementList, [, i, ], ==, null]
[noMoreMatchesForReplIndex, [, i, ], ||, searchList, [, i, ], ==, null, ||, searchList, [, i, ], ., isEmpty, (, )]
[noMoreMatchesForReplIndex, [, i, ], ||, searchList, [, i, ], ==, null]
[noMoreMatchesForReplIndex, [, i, ]]
[noMoreMatchesForReplIndex]
[i]
[searchList, [, i, ], ==, null]
[searchList, [, i, ]]
[searchList]
[i]
[null]
[searchList, [, i, ], ., isEmpty, (, )]
[searchList, [, i, ]]
[searchList]
[i]
[replacementList, [, i, ], ==, null]
[replacementList, [, i, ]]
[replacementList]
[i]
[null]
[tempIndex]
[text, ., indexOf, (, searchList, [, i, ], ,, start, )]
[text]
[searchList, [, i, ]]
[searchList]
[i]
[start]
[tempIndex, ==, -, 1]
[tempIndex]
[-, 1]
[1]
[noMoreMatchesForReplIndex, [, i, ]]
[noMoreMatchesForReplIndex]
[i]
[true]
[textIndex, ==, -, 1, ||, tempIndex, <, textIndex]
[textIndex, ==, -, 1]
[textIndex]
[-, 1]
[1]
[tempIndex, <, textIndex]
[tempIndex]
[textIndex]
[textIndex]
[tempIndex]
[replaceIndex]
[i]
[text, ., length, (, )]
[text]
[start]
[i, <, textLength]
[i]
[textLength]
[i, ++]
[i]
[buf, ., append, (, text, ., charAt, (, i, ), )]
[buf]
[text, ., charAt, (, i, )]
[text]
[i]
[buf, ., toString, (, )]
[buf]
[!, repeat]
[repeat]
[result]
[replaceEach, (, result, ,, searchList, ,, replacementList, ,, repeat, ,, timeToLive, -, 1, )]
[result]
[searchList]
[replacementList]
[repeat]
[timeToLive, -, 1]
[timeToLive]
[1]
[str, ==, null]
[str]
[null]
[null]
[str, ., replace, (, searchChar, ,, replaceChar, )]
[str]
[searchChar]
[replaceChar]
[isEmpty, (, str, ), ||, isEmpty, (, searchChars, )]
[isEmpty, (, str, )]
[str]
[isEmpty, (, searchChars, )]
[searchChars]
[str]
[replaceChars, ==, null]
[replaceChars]
[null]
[replaceChars]
[EMPTY]
[false]
[replaceChars, ., length, (, )]
[replaceChars]
[str, ., length, (, )]
[str]
[new, StringBuilder, (, strLength, )]
[strLength]
[0]
[i, <, strLength]
[i]
[strLength]
[i, ++]
[i]
[str, ., charAt, (, i, )]
[str]
[i]
[searchChars, ., indexOf, (, ch, )]
[searchChars]
[ch]
[index, >=, 0]
[index]
[0]
[modified]
[true]
[index, <, replaceCharsLength]
[index]
[replaceCharsLength]
[buf, ., append, (, replaceChars, ., charAt, (, index, ), )]
[buf]
[replaceChars, ., charAt, (, index, )]
[replaceChars]
[index]
[buf, ., append, (, ch, )]
[buf]
[ch]
[modified]
[buf, ., toString, (, )]
[buf]
[str]
[str, ==, null]
[str]
[null]
[null]
[overlay, ==, null]
[overlay]
[null]
[overlay]
[EMPTY]
[str, ., length, (, )]
[str]
[start, <, 0]
[start]
[0]
[start]
[0]
[start, >, len]
[start]
[len]
[start]
[len]
[end, <, 0]
[end]
[0]
[end]
[0]
[end, >, len]
[end]
[len]
[end]
[len]
[start, >, end]
[start]
[end]
[start]
[start]
[end]
[end]
[temp]
[new, StringBuilder, (, len, +, start, -, end, +, overlay, ., length, (, ), +, 1, ), ., append, (, str, ., substring, (, 0, ,, start, ), ), ., append, (, overlay, ), ., append, (, str, ., substring, (, end, ), ), ., toString, (, )]
[new, StringBuilder, (, len, +, start, -, end, +, overlay, ., length, (, ), +, 1, ), ., append, (, str, ., substring, (, 0, ,, start, ), ), ., append, (, overlay, ), ., append, (, str, ., substring, (, end, ), )]
[new, StringBuilder, (, len, +, start, -, end, +, overlay, ., length, (, ), +, 1, ), ., append, (, str, ., substring, (, 0, ,, start, ), ), ., append, (, overlay, )]
[new, StringBuilder, (, len, +, start, -, end, +, overlay, ., length, (, ), +, 1, ), ., append, (, str, ., substring, (, 0, ,, start, ), )]
[new, StringBuilder, (, len, +, start, -, end, +, overlay, ., length, (, ), +, 1, )]
[len, +, start, -, end, +, overlay, ., length, (, ), +, 1]
[len, +, start, -, end, +, overlay, ., length, (, )]
[len, +, start, -, end]
[len, +, start]
[len]
[start]
[end]
[overlay, ., length, (, )]
[overlay]
[1]
[str, ., substring, (, 0, ,, start, )]
[str]
[0]
[start]
[overlay]
[str, ., substring, (, end, )]
[str]
[end]
[isEmpty, (, str, )]
[str]
[str]
[str, ., length, (, ), ==, 1]
[str, ., length, (, )]
[str]
[1]
[str, ., charAt, (, 0, )]
[str]
[0]
[ch, ==, CharUtils, ., CR, ||, ch, ==, CharUtils, ., LF]
[ch, ==, CharUtils, ., CR]
[ch]
[CharUtils, ., CR]
[CharUtils]
[ch, ==, CharUtils, ., LF]
[ch]
[CharUtils, ., LF]
[CharUtils]
[EMPTY]
[str]
[str, ., length, (, ), -, 1]
[str, ., length, (, )]
[str]
[1]
[str, ., charAt, (, lastIdx, )]
[str]
[lastIdx]
[last, ==, CharUtils, ., LF]
[last]
[CharUtils, ., LF]
[CharUtils]
[str, ., charAt, (, lastIdx, -, 1, ), ==, CharUtils, ., CR]
[str, ., charAt, (, lastIdx, -, 1, )]
[str]
[lastIdx, -, 1]
[lastIdx]
[1]
[CharUtils, ., CR]
[CharUtils]
[lastIdx, --]
[lastIdx]
[last, !=, CharUtils, ., CR]
[last]
[CharUtils, ., CR]
[CharUtils]
[lastIdx, ++]
[lastIdx]
[str, ., substring, (, 0, ,, lastIdx, )]
[str]
[0]
[lastIdx]
[removeEnd, (, str, ,, separator, )]
[str]
[separator]
[str, ==, null]
[str]
[null]
[null]
[str, ., length, (, )]
[str]
[strLen, <, 2]
[strLen]
[2]
[EMPTY]
[strLen, -, 1]
[strLen]
[1]
[str, ., substring, (, 0, ,, lastIdx, )]
[str]
[0]
[lastIdx]
[str, ., charAt, (, lastIdx, )]
[str]
[lastIdx]
[last, ==, CharUtils, ., LF, &&, ret, ., charAt, (, lastIdx, -, 1, ), ==, CharUtils, ., CR]
[last, ==, CharUtils, ., LF]
[last]
[CharUtils, ., LF]
[CharUtils]
[ret, ., charAt, (, lastIdx, -, 1, ), ==, CharUtils, ., CR]
[ret, ., charAt, (, lastIdx, -, 1, )]
[ret]
[lastIdx, -, 1]
[lastIdx]
[1]
[CharUtils, ., CR]
[CharUtils]
[ret, ., substring, (, 0, ,, lastIdx, -, 1, )]
[ret]
[0]
[lastIdx, -, 1]
[lastIdx]
[1]
[ret]
[str, ==, null]
[str]
[null]
[null]
[repeat, <=, 0]
[repeat]
[0]
[EMPTY]
[str, ., length, (, )]
[str]
[repeat, ==, 1, ||, inputLength, ==, 0]
[repeat, ==, 1]
[repeat]
[1]
[inputLength, ==, 0]
[inputLength]
[0]
[str]
[inputLength, ==, 1, &&, repeat, <=, PAD_LIMIT]
[inputLength, ==, 1]
[inputLength]
[1]
[repeat, <=, PAD_LIMIT]
[repeat]
[PAD_LIMIT]
[repeat, (, str, ., charAt, (, 0, ), ,, repeat, )]
[str, ., charAt, (, 0, )]
[str]
[0]
[repeat]
[inputLength, *, repeat]
[inputLength]
[repeat]
[inputLength]
[1]
[repeat, (, str, ., charAt, (, 0, ), ,, repeat, )]
[str, ., charAt, (, 0, )]
[str]
[0]
[repeat]
[2]
[str, ., charAt, (, 0, )]
[str]
[0]
[str, ., charAt, (, 1, )]
[str]
[1]
[new, char, [, outputLength, ]]
[outputLength]
[repeat, *, 2, -, 2]
[repeat, *, 2]
[repeat]
[2]
[2]
[i, >=, 0]
[i]
[0]
[i, --]
[i]
[i, --]
[i]
[output2, [, i, ]]
[output2]
[i]
[ch0]
[output2, [, i, +, 1, ]]
[output2]
[i, +, 1]
[i]
[1]
[ch1]
[new, String, (, output2, )]
[output2]
[new, StringBuilder, (, outputLength, )]
[outputLength]
[0]
[i, <, repeat]
[i]
[repeat]
[i, ++]
[i]
[buf, ., append, (, str, )]
[buf]
[str]
[buf, ., toString, (, )]
[buf]
[str, ==, null, ||, separator, ==, null]
[str, ==, null]
[str]
[null]
[separator, ==, null]
[separator]
[null]
[repeat, (, str, ,, repeat, )]
[str]
[repeat]
[repeat, (, str, +, separator, ,, repeat, )]
[str, +, separator]
[str]
[separator]
[repeat]
[removeEnd, (, result, ,, separator, )]
[result]
[separator]
[new, char, [, repeat, ]]
[repeat]
[repeat, -, 1]
[repeat]
[1]
[i, >=, 0]
[i]
[0]
[i, --]
[i]
[buf, [, i, ]]
[buf]
[i]
[ch]
[new, String, (, buf, )]
[buf]
[rightPad, (, str, ,, size, ,, ' ', )]
[str]
[size]
[' ']
[str, ==, null]
[str]
[null]
[null]
[size, -, str, ., length, (, )]
[size]
[str, ., length, (, )]
[str]
[pads, <=, 0]
[pads]
[0]
[str]
[pads, >, PAD_LIMIT]
[pads]
[PAD_LIMIT]
[rightPad, (, str, ,, size, ,, String, ., valueOf, (, padChar, ), )]
[str]
[size]
[String, ., valueOf, (, padChar, )]
[String]
[padChar]
[str, ., concat, (, repeat, (, padChar, ,, pads, ), )]
[str]
[repeat, (, padChar, ,, pads, )]
[padChar]
[pads]
[str, ==, null]
[str]
[null]
[null]
[isEmpty, (, padStr, )]
[padStr]
[padStr]
[SPACE]
[padStr, ., length, (, )]
[padStr]
[str, ., length, (, )]
[str]
[size, -, strLen]
[size]
[strLen]
[pads, <=, 0]
[pads]
[0]
[str]
[padLen, ==, 1, &&, pads, <=, PAD_LIMIT]
[padLen, ==, 1]
[padLen]
[1]
[pads, <=, PAD_LIMIT]
[pads]
[PAD_LIMIT]
[rightPad, (, str, ,, size, ,, padStr, ., charAt, (, 0, ), )]
[str]
[size]
[padStr, ., charAt, (, 0, )]
[padStr]
[0]
[pads, ==, padLen]
[pads]
[padLen]
[str, ., concat, (, padStr, )]
[str]
[padStr]
[pads, <, padLen]
[pads]
[padLen]
[str, ., concat, (, padStr, ., substring, (, 0, ,, pads, ), )]
[str]
[padStr, ., substring, (, 0, ,, pads, )]
[padStr]
[0]
[pads]
[new, char, [, pads, ]]
[pads]
[padStr, ., toCharArray, (, )]
[padStr]
[0]
[i, <, pads]
[i]
[pads]
[i, ++]
[i]
[padding, [, i, ]]
[padding]
[i]
[padChars, [, i, %, padLen, ]]
[padChars]
[i, %, padLen]
[i]
[padLen]
[str, ., concat, (, new, String, (, padding, ), )]
[str]
[new, String, (, padding, )]
[padding]
[leftPad, (, str, ,, size, ,, ' ', )]
[str]
[size]
[' ']
[str, ==, null]
[str]
[null]
[null]
[size, -, str, ., length, (, )]
[size]
[str, ., length, (, )]
[str]
[pads, <=, 0]
[pads]
[0]
[str]
[pads, >, PAD_LIMIT]
[pads]
[PAD_LIMIT]
[leftPad, (, str, ,, size, ,, String, ., valueOf, (, padChar, ), )]
[str]
[size]
[String, ., valueOf, (, padChar, )]
[String]
[padChar]
[repeat, (, padChar, ,, pads, ), ., concat, (, str, )]
[repeat, (, padChar, ,, pads, )]
[padChar]
[pads]
[str]
[str, ==, null]
[str]
[null]
[null]
[isEmpty, (, padStr, )]
[padStr]
[padStr]
[SPACE]
[padStr, ., length, (, )]
[padStr]
[str, ., length, (, )]
[str]
[size, -, strLen]
[size]
[strLen]
[pads, <=, 0]
[pads]
[0]
[str]
[padLen, ==, 1, &&, pads, <=, PAD_LIMIT]
[padLen, ==, 1]
[padLen]
[1]
[pads, <=, PAD_LIMIT]
[pads]
[PAD_LIMIT]
[leftPad, (, str, ,, size, ,, padStr, ., charAt, (, 0, ), )]
[str]
[size]
[padStr, ., charAt, (, 0, )]
[padStr]
[0]
[pads, ==, padLen]
[pads]
[padLen]
[padStr, ., concat, (, str, )]
[padStr]
[str]
[pads, <, padLen]
[pads]
[padLen]
[padStr, ., substring, (, 0, ,, pads, ), ., concat, (, str, )]
[padStr, ., substring, (, 0, ,, pads, )]
[padStr]
[0]
[pads]
[str]
[new, char, [, pads, ]]
[pads]
[padStr, ., toCharArray, (, )]
[padStr]
[0]
[i, <, pads]
[i]
[pads]
[i, ++]
[i]
[padding, [, i, ]]
[padding]
[i]
[padChars, [, i, %, padLen, ]]
[padChars]
[i, %, padLen]
[i]
[padLen]
[new, String, (, padding, ), ., concat, (, str, )]
[new, String, (, padding, )]
[padding]
[str]
[cs, ==, null, ?, 0, :, cs, ., length, (, )]
[cs, ==, null]
[cs]
[null]
[0]
[cs, ., length, (, )]
[cs]
[center, (, str, ,, size, ,, ' ', )]
[str]
[size]
[' ']
[str, ==, null, ||, size, <=, 0]
[str, ==, null]
[str]
[null]
[size, <=, 0]
[size]
[0]
[str]
[str, ., length, (, )]
[str]
[size, -, strLen]
[size]
[strLen]
[pads, <=, 0]
[pads]
[0]
[str]
[str]
[leftPad, (, str, ,, strLen, +, pads, /, 2, ,, padChar, )]
[str]
[strLen, +, pads, /, 2]
[strLen]
[pads, /, 2]
[pads]
[2]
[padChar]
[str]
[rightPad, (, str, ,, size, ,, padChar, )]
[str]
[size]
[padChar]
[str]
[str, ==, null, ||, size, <=, 0]
[str, ==, null]
[str]
[null]
[size, <=, 0]
[size]
[0]
[str]
[isEmpty, (, padStr, )]
[padStr]
[padStr]
[SPACE]
[str, ., length, (, )]
[str]
[size, -, strLen]
[size]
[strLen]
[pads, <=, 0]
[pads]
[0]
[str]
[str]
[leftPad, (, str, ,, strLen, +, pads, /, 2, ,, padStr, )]
[str]
[strLen, +, pads, /, 2]
[strLen]
[pads, /, 2]
[pads]
[2]
[padStr]
[str]
[rightPad, (, str, ,, size, ,, padStr, )]
[str]
[size]
[padStr]
[str]
[str, ==, null]
[str]
[null]
[null]
[str, ., toUpperCase, (, )]
[str]
[str, ==, null]
[str]
[null]
[null]
[str, ., toUpperCase, (, locale, )]
[str]
[locale]
[str, ==, null]
[str]
[null]
[null]
[str, ., toLowerCase, (, )]
[str]
[str, ==, null]
[str]
[null]
[null]
[str, ., toLowerCase, (, locale, )]
[str]
[locale]
[str, ==, null, ||, (, strLen, =, str, ., length, (, ), ), ==, 0]
[str, ==, null]
[str]
[null]
[(, strLen, =, str, ., length, (, ), ), ==, 0]
[(, strLen, =, str, ., length, (, ), )]
[strLen]
[str, ., length, (, )]
[str]
[0]
[str]
[str, ., charAt, (, 0, )]
[str]
[0]
[Character, ., isTitleCase, (, firstChar, )]
[Character]
[firstChar]
[str]
[new, StringBuilder, (, strLen, ), ., append, (, Character, ., toTitleCase, (, firstChar, ), ), ., append, (, str, ., substring, (, 1, ), ), ., toString, (, )]
[new, StringBuilder, (, strLen, ), ., append, (, Character, ., toTitleCase, (, firstChar, ), ), ., append, (, str, ., substring, (, 1, ), )]
[new, StringBuilder, (, strLen, ), ., append, (, Character, ., toTitleCase, (, firstChar, ), )]
[new, StringBuilder, (, strLen, )]
[strLen]
[Character, ., toTitleCase, (, firstChar, )]
[Character]
[firstChar]
[str, ., substring, (, 1, )]
[str]
[1]
[str, ==, null, ||, (, strLen, =, str, ., length, (, ), ), ==, 0]
[str, ==, null]
[str]
[null]
[(, strLen, =, str, ., length, (, ), ), ==, 0]
[(, strLen, =, str, ., length, (, ), )]
[strLen]
[str, ., length, (, )]
[str]
[0]
[str]
[str, ., charAt, (, 0, )]
[str]
[0]
[Character, ., isLowerCase, (, firstChar, )]
[Character]
[firstChar]
[str]
[new, StringBuilder, (, strLen, ), ., append, (, Character, ., toLowerCase, (, firstChar, ), ), ., append, (, str, ., substring, (, 1, ), ), ., toString, (, )]
[new, StringBuilder, (, strLen, ), ., append, (, Character, ., toLowerCase, (, firstChar, ), ), ., append, (, str, ., substring, (, 1, ), )]
[new, StringBuilder, (, strLen, ), ., append, (, Character, ., toLowerCase, (, firstChar, ), )]
[new, StringBuilder, (, strLen, )]
[strLen]
[Character, ., toLowerCase, (, firstChar, )]
[Character]
[firstChar]
[str, ., substring, (, 1, )]
[str]
[1]
[StringUtils, ., isEmpty, (, str, )]
[StringUtils]
[str]
[str]
[str, ., toCharArray, (, )]
[str]
[0]
[i, <, buffer, ., length]
[i]
[buffer, ., length]
[buffer]
[i, ++]
[i]
[buffer, [, i, ]]
[buffer]
[i]
[Character, ., isUpperCase, (, ch, )]
[Character]
[ch]
[buffer, [, i, ]]
[buffer]
[i]
[Character, ., toLowerCase, (, ch, )]
[Character]
[ch]
[Character, ., isTitleCase, (, ch, )]
[Character]
[ch]
[buffer, [, i, ]]
[buffer]
[i]
[Character, ., toLowerCase, (, ch, )]
[Character]
[ch]
[Character, ., isLowerCase, (, ch, )]
[Character]
[ch]
[buffer, [, i, ]]
[buffer]
[i]
[Character, ., toUpperCase, (, ch, )]
[Character]
[ch]
[new, String, (, buffer, )]
[buffer]
[isEmpty, (, str, ), ||, isEmpty, (, sub, )]
[isEmpty, (, str, )]
[str]
[isEmpty, (, sub, )]
[sub]
[0]
[0]
[0]
[(, idx, =, CharSequenceUtils, ., indexOf, (, str, ,, sub, ,, idx, ), ), !=, INDEX_NOT_FOUND]
[(, idx, =, CharSequenceUtils, ., indexOf, (, str, ,, sub, ,, idx, ), )]
[idx]
[CharSequenceUtils, ., indexOf, (, str, ,, sub, ,, idx, )]
[CharSequenceUtils]
[str]
[sub]
[idx]
[INDEX_NOT_FOUND]
[count, ++]
[count]
[idx]
[sub, ., length, (, )]
[sub]
[count]
[cs, ==, null, ||, cs, ., length, (, ), ==, 0]
[cs, ==, null]
[cs]
[null]
[cs, ., length, (, ), ==, 0]
[cs, ., length, (, )]
[cs]
[0]
[false]
[cs, ., length, (, )]
[cs]
[0]
[i, <, sz]
[i]
[sz]
[i, ++]
[i]
[Character, ., isLetter, (, cs, ., charAt, (, i, ), ), ==, false]
[Character, ., isLetter, (, cs, ., charAt, (, i, ), )]
[Character]
[cs, ., charAt, (, i, )]
[cs]
[i]
[false]
[false]
[true]
[cs, ==, null]
[cs]
[null]
[false]
[cs, ., length, (, )]
[cs]
[0]
[i, <, sz]
[i]
[sz]
[i, ++]
[i]
[Character, ., isLetter, (, cs, ., charAt, (, i, ), ), ==, false, &&, cs, ., charAt, (, i, ), !=, ' ']
[Character, ., isLetter, (, cs, ., charAt, (, i, ), ), ==, false]
[Character, ., isLetter, (, cs, ., charAt, (, i, ), )]
[Character]
[cs, ., charAt, (, i, )]
[cs]
[i]
[false]
[cs, ., charAt, (, i, ), !=, ' ']
[cs, ., charAt, (, i, )]
[cs]
[i]
[' ']
[false]
[true]
[cs, ==, null, ||, cs, ., length, (, ), ==, 0]
[cs, ==, null]
[cs]
[null]
[cs, ., length, (, ), ==, 0]
[cs, ., length, (, )]
[cs]
[0]
[false]
[cs, ., length, (, )]
[cs]
[0]
[i, <, sz]
[i]
[sz]
[i, ++]
[i]
[Character, ., isLetterOrDigit, (, cs, ., charAt, (, i, ), ), ==, false]
[Character, ., isLetterOrDigit, (, cs, ., charAt, (, i, ), )]
[Character]
[cs, ., charAt, (, i, )]
[cs]
[i]
[false]
[false]
[true]
[cs, ==, null]
[cs]
[null]
[false]
[cs, ., length, (, )]
[cs]
[0]
[i, <, sz]
[i]
[sz]
[i, ++]
[i]
[Character, ., isLetterOrDigit, (, cs, ., charAt, (, i, ), ), ==, false, &&, cs, ., charAt, (, i, ), !=, ' ']
[Character, ., isLetterOrDigit, (, cs, ., charAt, (, i, ), ), ==, false]
[Character, ., isLetterOrDigit, (, cs, ., charAt, (, i, ), )]
[Character]
[cs, ., charAt, (, i, )]
[cs]
[i]
[false]
[cs, ., charAt, (, i, ), !=, ' ']
[cs, ., charAt, (, i, )]
[cs]
[i]
[' ']
[false]
[true]
[cs, ==, null]
[cs]
[null]
[false]
[cs, ., length, (, )]
[cs]
[0]
[i, <, sz]
[i]
[sz]
[i, ++]
[i]
[CharUtils, ., isAsciiPrintable, (, cs, ., charAt, (, i, ), ), ==, false]
[CharUtils, ., isAsciiPrintable, (, cs, ., charAt, (, i, ), )]
[CharUtils]
[cs, ., charAt, (, i, )]
[cs]
[i]
[false]
[false]
[true]
[cs, ==, null, ||, cs, ., length, (, ), ==, 0]
[cs, ==, null]
[cs]
[null]
[cs, ., length, (, ), ==, 0]
[cs, ., length, (, )]
[cs]
[0]
[false]
[cs, ., length, (, )]
[cs]
[0]
[i, <, sz]
[i]
[sz]
[i, ++]
[i]
[Character, ., isDigit, (, cs, ., charAt, (, i, ), ), ==, false]
[Character, ., isDigit, (, cs, ., charAt, (, i, ), )]
[Character]
[cs, ., charAt, (, i, )]
[cs]
[i]
[false]
[false]
[true]
[cs, ==, null]
[cs]
[null]
[false]
[cs, ., length, (, )]
[cs]
[0]
[i, <, sz]
[i]
[sz]
[i, ++]
[i]
[Character, ., isDigit, (, cs, ., charAt, (, i, ), ), ==, false, &&, cs, ., charAt, (, i, ), !=, ' ']
[Character, ., isDigit, (, cs, ., charAt, (, i, ), ), ==, false]
[Character, ., isDigit, (, cs, ., charAt, (, i, ), )]
[Character]
[cs, ., charAt, (, i, )]
[cs]
[i]
[false]
[cs, ., charAt, (, i, ), !=, ' ']
[cs, ., charAt, (, i, )]
[cs]
[i]
[' ']
[false]
[true]
[cs, ==, null]
[cs]
[null]
[false]
[cs, ., length, (, )]
[cs]
[0]
[i, <, sz]
[i]
[sz]
[i, ++]
[i]
[Character, ., isWhitespace, (, cs, ., charAt, (, i, ), ), ==, false]
[Character, ., isWhitespace, (, cs, ., charAt, (, i, ), )]
[Character]
[cs, ., charAt, (, i, )]
[cs]
[i]
[false]
[false]
[true]
[cs, ==, null, ||, isEmpty, (, cs, )]
[cs, ==, null]
[cs]
[null]
[isEmpty, (, cs, )]
[cs]
[false]
[cs, ., length, (, )]
[cs]
[0]
[i, <, sz]
[i]
[sz]
[i, ++]
[i]
[Character, ., isLowerCase, (, cs, ., charAt, (, i, ), ), ==, false]
[Character, ., isLowerCase, (, cs, ., charAt, (, i, ), )]
[Character]
[cs, ., charAt, (, i, )]
[cs]
[i]
[false]
[false]
[true]
[cs, ==, null, ||, isEmpty, (, cs, )]
[cs, ==, null]
[cs]
[null]
[isEmpty, (, cs, )]
[cs]
[false]
[cs, ., length, (, )]
[cs]
[0]
[i, <, sz]
[i]
[sz]
[i, ++]
[i]
[Character, ., isUpperCase, (, cs, ., charAt, (, i, ), ), ==, false]
[Character, ., isUpperCase, (, cs, ., charAt, (, i, ), )]
[Character]
[cs, ., charAt, (, i, )]
[cs]
[i]
[false]
[false]
[true]
[str, ==, null, ?, EMPTY, :, str]
[str, ==, null]
[str]
[null]
[EMPTY]
[str]
[str, ==, null, ?, defaultStr, :, str]
[str, ==, null]
[str]
[null]
[defaultStr]
[str]
[StringUtils, ., isBlank, (, str, ), ?, defaultStr, :, str]
[StringUtils, ., isBlank, (, str, )]
[StringUtils]
[str]
[defaultStr]
[str]
[StringUtils, ., isEmpty, (, str, ), ?, defaultStr, :, str]
[StringUtils, ., isEmpty, (, str, )]
[StringUtils]
[str]
[defaultStr]
[str]
[str, ==, null]
[str]
[null]
[null]
[new, StringBuilder, (, str, ), ., reverse, (, ), ., toString, (, )]
[new, StringBuilder, (, str, ), ., reverse, (, )]
[new, StringBuilder, (, str, )]
[str]
[str, ==, null]
[str]
[null]
[null]
[split, (, str, ,, separatorChar, )]
[str]
[separatorChar]
[ArrayUtils, ., reverse, (, strs, )]
[ArrayUtils]
[strs]
[join, (, strs, ,, separatorChar, )]
[strs]
[separatorChar]
[abbreviate, (, str, ,, 0, ,, maxWidth, )]
[str]
[0]
[maxWidth]
[str, ==, null]
[str]
[null]
[null]
[maxWidth, <, 4]
[maxWidth]
[4]
[new, IllegalArgumentException, (, "Minimum abbreviation width is 4", )]
["Minimum abbreviation width is 4"]
[str, ., length, (, ), <=, maxWidth]
[str, ., length, (, )]
[str]
[maxWidth]
[str]
[offset, >, str, ., length, (, )]
[offset]
[str, ., length, (, )]
[str]
[offset]
[str, ., length, (, )]
[str]
[str, ., length, (, ), -, offset, <, maxWidth, -, 3]
[str, ., length, (, ), -, offset]
[str, ., length, (, )]
[str]
[offset]
[maxWidth, -, 3]
[maxWidth]
[3]
[offset]
[str, ., length, (, ), -, (, maxWidth, -, 3, )]
[str, ., length, (, )]
[str]
[(, maxWidth, -, 3, )]
[maxWidth, -, 3]
[maxWidth]
[3]
["..."]
[offset, <=, 4]
[offset]
[4]
[str, ., substring, (, 0, ,, maxWidth, -, 3, ), +, abrevMarker]
[str, ., substring, (, 0, ,, maxWidth, -, 3, )]
[str]
[0]
[maxWidth, -, 3]
[maxWidth]
[3]
[abrevMarker]
[maxWidth, <, 7]
[maxWidth]
[7]
[new, IllegalArgumentException, (, "Minimum abbreviation width with offset is 7", )]
["Minimum abbreviation width with offset is 7"]
[offset, +, maxWidth, -, 3, <, str, ., length, (, )]
[offset, +, maxWidth, -, 3]
[offset, +, maxWidth]
[offset]
[maxWidth]
[3]
[str, ., length, (, )]
[str]
[abrevMarker, +, abbreviate, (, str, ., substring, (, offset, ), ,, maxWidth, -, 3, )]
[abrevMarker]
[abbreviate, (, str, ., substring, (, offset, ), ,, maxWidth, -, 3, )]
[str, ., substring, (, offset, )]
[str]
[offset]
[maxWidth, -, 3]
[maxWidth]
[3]
[abrevMarker, +, str, ., substring, (, str, ., length, (, ), -, (, maxWidth, -, 3, ), )]
[abrevMarker]
[str, ., substring, (, str, ., length, (, ), -, (, maxWidth, -, 3, ), )]
[str]
[str, ., length, (, ), -, (, maxWidth, -, 3, )]
[str, ., length, (, )]
[str]
[(, maxWidth, -, 3, )]
[maxWidth, -, 3]
[maxWidth]
[3]
[isEmpty, (, str, ), ||, isEmpty, (, middle, )]
[isEmpty, (, str, )]
[str]
[isEmpty, (, middle, )]
[middle]
[str]
[length, >=, str, ., length, (, ), ||, length, <, middle, ., length, (, ), +, 2]
[length, >=, str, ., length, (, )]
[length]
[str, ., length, (, )]
[str]
[length, <, middle, ., length, (, ), +, 2]
[length]
[middle, ., length, (, ), +, 2]
[middle, ., length, (, )]
[middle]
[2]
[str]
[length, -, middle, ., length, (, )]
[length]
[middle, ., length, (, )]
[middle]
[targetSting, /, 2, +, targetSting, %, 2]
[targetSting, /, 2]
[targetSting]
[2]
[targetSting, %, 2]
[targetSting]
[2]
[str, ., length, (, ), -, targetSting, /, 2]
[str, ., length, (, )]
[str]
[targetSting, /, 2]
[targetSting]
[2]
[new, StringBuilder, (, length, )]
[length]
[builder, ., append, (, str, ., substring, (, 0, ,, startOffset, ), )]
[builder]
[str, ., substring, (, 0, ,, startOffset, )]
[str]
[0]
[startOffset]
[builder, ., append, (, middle, )]
[builder]
[middle]
[builder, ., append, (, str, ., substring, (, endOffset, ), )]
[builder]
[str, ., substring, (, endOffset, )]
[str]
[endOffset]
[builder, ., toString, (, )]
[builder]
[str1, ==, null]
[str1]
[null]
[str2]
[str2, ==, null]
[str2]
[null]
[str1]
[indexOfDifference, (, str1, ,, str2, )]
[str1]
[str2]
[at, ==, INDEX_NOT_FOUND]
[at]
[INDEX_NOT_FOUND]
[EMPTY]
[str2, ., substring, (, at, )]
[str2]
[at]
[cs1, ==, cs2]
[cs1]
[cs2]
[INDEX_NOT_FOUND]
[cs1, ==, null, ||, cs2, ==, null]
[cs1, ==, null]
[cs1]
[null]
[cs2, ==, null]
[cs2]
[null]
[0]
[i]
[0]
[i, <, cs1, ., length, (, ), &&, i, <, cs2, ., length, (, )]
[i, <, cs1, ., length, (, )]
[i]
[cs1, ., length, (, )]
[cs1]
[i, <, cs2, ., length, (, )]
[i]
[cs2, ., length, (, )]
[cs2]
[++, i]
[i]
[cs1, ., charAt, (, i, ), !=, cs2, ., charAt, (, i, )]
[cs1, ., charAt, (, i, )]
[cs1]
[i]
[cs2, ., charAt, (, i, )]
[cs2]
[i]
[i, <, cs2, ., length, (, ), ||, i, <, cs1, ., length, (, )]
[i, <, cs2, ., length, (, )]
[i]
[cs2, ., length, (, )]
[cs2]
[i, <, cs1, ., length, (, )]
[i]
[cs1, ., length, (, )]
[cs1]
[i]
[INDEX_NOT_FOUND]
[css, ==, null, ||, css, ., length, <=, 1]
[css, ==, null]
[css]
[null]
[css, ., length, <=, 1]
[css, ., length]
[css]
[1]
[INDEX_NOT_FOUND]
[false]
[true]
[css, ., length]
[css]
[Integer, ., MAX_VALUE]
[Integer]
[0]
[0]
[i, <, arrayLen]
[i]
[arrayLen]
[i, ++]
[i]
[css, [, i, ], ==, null]
[css, [, i, ]]
[css]
[i]
[null]
[anyStringNull]
[true]
[shortestStrLen]
[0]
[allStringsNull]
[false]
[shortestStrLen]
[Math, ., min, (, css, [, i, ], ., length, (, ), ,, shortestStrLen, )]
[Math]
[css, [, i, ], ., length, (, )]
[css, [, i, ]]
[css]
[i]
[shortestStrLen]
[longestStrLen]
[Math, ., max, (, css, [, i, ], ., length, (, ), ,, longestStrLen, )]
[Math]
[css, [, i, ], ., length, (, )]
[css, [, i, ]]
[css]
[i]
[longestStrLen]
[allStringsNull, ||, longestStrLen, ==, 0, &&, !, anyStringNull]
[allStringsNull]
[longestStrLen, ==, 0, &&, !, anyStringNull]
[longestStrLen, ==, 0]
[longestStrLen]
[0]
[!, anyStringNull]
[anyStringNull]
[INDEX_NOT_FOUND]
[shortestStrLen, ==, 0]
[shortestStrLen]
[0]
[0]
[-, 1]
[1]
[0]
[stringPos, <, shortestStrLen]
[stringPos]
[shortestStrLen]
[stringPos, ++]
[stringPos]
[css, [, 0, ], ., charAt, (, stringPos, )]
[css, [, 0, ]]
[css]
[0]
[stringPos]
[1]
[arrayPos, <, arrayLen]
[arrayPos]
[arrayLen]
[arrayPos, ++]
[arrayPos]
[css, [, arrayPos, ], ., charAt, (, stringPos, ), !=, comparisonChar]
[css, [, arrayPos, ], ., charAt, (, stringPos, )]
[css, [, arrayPos, ]]
[css]
[arrayPos]
[stringPos]
[comparisonChar]
[firstDiff]
[stringPos]
[firstDiff, !=, -, 1]
[firstDiff]
[-, 1]
[1]
[firstDiff, ==, -, 1, &&, shortestStrLen, !=, longestStrLen]
[firstDiff, ==, -, 1]
[firstDiff]
[-, 1]
[1]
[shortestStrLen, !=, longestStrLen]
[shortestStrLen]
[longestStrLen]
[shortestStrLen]
[firstDiff]
[strs, ==, null, ||, strs, ., length, ==, 0]
[strs, ==, null]
[strs]
[null]
[strs, ., length, ==, 0]
[strs, ., length]
[strs]
[0]
[EMPTY]
[indexOfDifference, (, strs, )]
[strs]
[smallestIndexOfDiff, ==, INDEX_NOT_FOUND]
[smallestIndexOfDiff]
[INDEX_NOT_FOUND]
[strs, [, 0, ], ==, null]
[strs, [, 0, ]]
[strs]
[0]
[null]
[EMPTY]
[strs, [, 0, ]]
[strs]
[0]
[smallestIndexOfDiff, ==, 0]
[smallestIndexOfDiff]
[0]
[EMPTY]
[strs, [, 0, ], ., substring, (, 0, ,, smallestIndexOfDiff, )]
[strs, [, 0, ]]
[strs]
[0]
[0]
[smallestIndexOfDiff]
[s, ==, null, ||, t, ==, null]
[s, ==, null]
[s]
[null]
[t, ==, null]
[t]
[null]
[new, IllegalArgumentException, (, "Strings must not be null", )]
["Strings must not be null"]
[s, ., length, (, )]
[s]
[t, ., length, (, )]
[t]
[n, ==, 0]
[n]
[0]
[m]
[m, ==, 0]
[m]
[0]
[n]
[n, >, m]
[n]
[m]
[s]
[s]
[t]
[t]
[tmp]
[n]
[m]
[m]
[t, ., length, (, )]
[t]
[new, int, [, n, +, 1, ]]
[n, +, 1]
[n]
[1]
[new, int, [, n, +, 1, ]]
[n, +, 1]
[n]
[1]
[i]
[0]
[i, <=, n]
[i]
[n]
[i, ++]
[i]
[p, [, i, ]]
[p]
[i]
[i]
[j]
[1]
[j, <=, m]
[j]
[m]
[j, ++]
[j]
[t_j]
[t, ., charAt, (, j, -, 1, )]
[t]
[j, -, 1]
[j]
[1]
[d, [, 0, ]]
[d]
[0]
[j]
[i]
[1]
[i, <=, n]
[i]
[n]
[i, ++]
[i]
[cost]
[s, ., charAt, (, i, -, 1, ), ==, t_j, ?, 0, :, 1]
[s, ., charAt, (, i, -, 1, ), ==, t_j]
[s, ., charAt, (, i, -, 1, )]
[s]
[i, -, 1]
[i]
[1]
[t_j]
[0]
[1]
[d, [, i, ]]
[d]
[i]
[Math, ., min, (, Math, ., min, (, d, [, i, -, 1, ], +, 1, ,, p, [, i, ], +, 1, ), ,, p, [, i, -, 1, ], +, cost, )]
[Math]
[Math, ., min, (, d, [, i, -, 1, ], +, 1, ,, p, [, i, ], +, 1, )]
[Math]
[d, [, i, -, 1, ], +, 1]
[d, [, i, -, 1, ]]
[d]
[i, -, 1]
[i]
[1]
[1]
[p, [, i, ], +, 1]
[p, [, i, ]]
[p]
[i]
[1]
[p, [, i, -, 1, ], +, cost]
[p, [, i, -, 1, ]]
[p]
[i, -, 1]
[i]
[1]
[cost]
[_d]
[p]
[p]
[d]
[d]
[_d]
[p, [, n, ]]
[p]
[n]
[s, ==, null, ||, t, ==, null]
[s, ==, null]
[s]
[null]
[t, ==, null]
[t]
[null]
[new, IllegalArgumentException, (, "Strings must not be null", )]
["Strings must not be null"]
[threshold, <, 0]
[threshold]
[0]
[new, IllegalArgumentException, (, "Threshold must not be negative", )]
["Threshold must not be negative"]
[s, ., length, (, )]
[s]
[t, ., length, (, )]
[t]
[n, ==, 0]
[n]
[0]
[m, <=, threshold, ?, m, :, -, 1]
[m, <=, threshold]
[m]
[threshold]
[m]
[-, 1]
[1]
[m, ==, 0]
[m]
[0]
[n, <=, threshold, ?, n, :, -, 1]
[n, <=, threshold]
[n]
[threshold]
[n]
[-, 1]
[1]
[n, >, m]
[n]
[m]
[s]
[s]
[t]
[t]
[tmp]
[n]
[m]
[m]
[t, ., length, (, )]
[t]
[new, int, [, n, +, 1, ]]
[n, +, 1]
[n]
[1]
[new, int, [, n, +, 1, ]]
[n, +, 1]
[n]
[1]
[Math, ., min, (, n, ,, threshold, ), +, 1]
[Math, ., min, (, n, ,, threshold, )]
[Math]
[n]
[threshold]
[1]
[0]
[i, <, boundary]
[i]
[boundary]
[i, ++]
[i]
[p, [, i, ]]
[p]
[i]
[i]
[Arrays, ., fill, (, p, ,, boundary, ,, p, ., length, ,, Integer, ., MAX_VALUE, )]
[Arrays]
[p]
[boundary]
[p, ., length]
[p]
[Integer, ., MAX_VALUE]
[Integer]
[Arrays, ., fill, (, d, ,, Integer, ., MAX_VALUE, )]
[Arrays]
[d]
[Integer, ., MAX_VALUE]
[Integer]
[1]
[j, <=, m]
[j]
[m]
[j, ++]
[j]
[t, ., charAt, (, j, -, 1, )]
[t]
[j, -, 1]
[j]
[1]
[d, [, 0, ]]
[d]
[0]
[j]
[Math, ., max, (, 1, ,, j, -, threshold, )]
[Math]
[1]
[j, -, threshold]
[j]
[threshold]
[Math, ., min, (, n, ,, j, +, threshold, )]
[Math]
[n]
[j, +, threshold]
[j]
[threshold]
[min, >, max]
[min]
[max]
[-, 1]
[1]
[min, >, 1]
[min]
[1]
[d, [, min, -, 1, ]]
[d]
[min, -, 1]
[min]
[1]
[Integer, ., MAX_VALUE]
[Integer]
[min]
[i, <=, max]
[i]
[max]
[i, ++]
[i]
[s, ., charAt, (, i, -, 1, ), ==, t_j]
[s, ., charAt, (, i, -, 1, )]
[s]
[i, -, 1]
[i]
[1]
[t_j]
[d, [, i, ]]
[d]
[i]
[p, [, i, -, 1, ]]
[p]
[i, -, 1]
[i]
[1]
[d, [, i, ]]
[d]
[i]
[1, +, Math, ., min, (, Math, ., min, (, d, [, i, -, 1, ], ,, p, [, i, ], ), ,, p, [, i, -, 1, ], )]
[1]
[Math, ., min, (, Math, ., min, (, d, [, i, -, 1, ], ,, p, [, i, ], ), ,, p, [, i, -, 1, ], )]
[Math]
[Math, ., min, (, d, [, i, -, 1, ], ,, p, [, i, ], )]
[Math]
[d, [, i, -, 1, ]]
[d]
[i, -, 1]
[i]
[1]
[p, [, i, ]]
[p]
[i]
[p, [, i, -, 1, ]]
[p]
[i, -, 1]
[i]
[1]
[_d]
[p]
[p]
[d]
[d]
[_d]
[p, [, n, ], <=, threshold]
[p, [, n, ]]
[p]
[n]
[threshold]
[p, [, n, ]]
[p]
[n]
[-, 1]
[1]
[startsWith, (, str, ,, prefix, ,, false, )]
[str]
[prefix]
[false]
[startsWith, (, str, ,, prefix, ,, true, )]
[str]
[prefix]
[true]
[str, ==, null, ||, prefix, ==, null]
[str, ==, null]
[str]
[null]
[prefix, ==, null]
[prefix]
[null]
[str, ==, null, &&, prefix, ==, null]
[str, ==, null]
[str]
[null]
[prefix, ==, null]
[prefix]
[null]
[prefix, ., length, (, ), >, str, ., length, (, )]
[prefix, ., length, (, )]
[prefix]
[str, ., length, (, )]
[str]
[false]
[CharSequenceUtils, ., regionMatches, (, str, ,, ignoreCase, ,, 0, ,, prefix, ,, 0, ,, prefix, ., length, (, ), )]
[CharSequenceUtils]
[str]
[ignoreCase]
[0]
[prefix]
[0]
[prefix, ., length, (, )]
[prefix]
[isEmpty, (, string, ), ||, ArrayUtils, ., isEmpty, (, searchStrings, )]
[isEmpty, (, string, )]
[string]
[ArrayUtils, ., isEmpty, (, searchStrings, )]
[ArrayUtils]
[searchStrings]
[false]
[searchStrings]
[StringUtils, ., startsWith, (, string, ,, searchString, )]
[StringUtils]
[string]
[searchString]
[true]
[false]
[endsWith, (, str, ,, suffix, ,, false, )]
[str]
[suffix]
[false]
[endsWith, (, str, ,, suffix, ,, true, )]
[str]
[suffix]
[true]
[str, ==, null, ||, suffix, ==, null]
[str, ==, null]
[str]
[null]
[suffix, ==, null]
[suffix]
[null]
[str, ==, null, &&, suffix, ==, null]
[str, ==, null]
[str]
[null]
[suffix, ==, null]
[suffix]
[null]
[suffix, ., length, (, ), >, str, ., length, (, )]
[suffix, ., length, (, )]
[suffix]
[str, ., length, (, )]
[str]
[false]
[str, ., length, (, ), -, suffix, ., length, (, )]
[str, ., length, (, )]
[str]
[suffix, ., length, (, )]
[suffix]
[CharSequenceUtils, ., regionMatches, (, str, ,, ignoreCase, ,, strOffset, ,, suffix, ,, 0, ,, suffix, ., length, (, ), )]
[CharSequenceUtils]
[str]
[ignoreCase]
[strOffset]
[suffix]
[0]
[suffix, ., length, (, )]
[suffix]
[str, ==, null]
[str]
[null]
[null]
[WHITESPACE_PATTERN, ., matcher, (, trim, (, str, ), ), ., replaceAll, (, SPACE, )]
[WHITESPACE_PATTERN, ., matcher, (, trim, (, str, ), )]
[WHITESPACE_PATTERN]
[trim, (, str, )]
[str]
[SPACE]
[isEmpty, (, string, ), ||, ArrayUtils, ., isEmpty, (, searchStrings, )]
[isEmpty, (, string, )]
[string]
[ArrayUtils, ., isEmpty, (, searchStrings, )]
[ArrayUtils]
[searchStrings]
[false]
[searchStrings]
[StringUtils, ., endsWith, (, string, ,, searchString, )]
[StringUtils]
[string]
[searchString]
[true]
[false]
[str, ==, null, ||, isEmpty, (, suffix, ), ||, endsWith, (, str, ,, suffix, ,, ignoreCase, )]
[str, ==, null, ||, isEmpty, (, suffix, )]
[str, ==, null]
[str]
[null]
[isEmpty, (, suffix, )]
[suffix]
[endsWith, (, str, ,, suffix, ,, ignoreCase, )]
[str]
[suffix]
[ignoreCase]
[str]
[suffixes, !=, null, &&, suffixes, ., length, >, 0]
[suffixes, !=, null]
[suffixes]
[null]
[suffixes, ., length, >, 0]
[suffixes, ., length]
[suffixes]
[0]
[suffixes]
[endsWith, (, str, ,, s, ,, ignoreCase, )]
[str]
[s]
[ignoreCase]
[str]
[str, +, suffix, ., toString, (, )]
[str]
[suffix, ., toString, (, )]
[suffix]
[appendIfMissing, (, str, ,, suffix, ,, false, ,, suffixes, )]
[str]
[suffix]
[false]
[suffixes]
[appendIfMissing, (, str, ,, suffix, ,, true, ,, suffixes, )]
[str]
[suffix]
[true]
[suffixes]
[str, ==, null, ||, isEmpty, (, prefix, ), ||, startsWith, (, str, ,, prefix, ,, ignoreCase, )]
[str, ==, null, ||, isEmpty, (, prefix, )]
[str, ==, null]
[str]
[null]
[isEmpty, (, prefix, )]
[prefix]
[startsWith, (, str, ,, prefix, ,, ignoreCase, )]
[str]
[prefix]
[ignoreCase]
[str]
[prefixes, !=, null, &&, prefixes, ., length, >, 0]
[prefixes, !=, null]
[prefixes]
[null]
[prefixes, ., length, >, 0]
[prefixes, ., length]
[prefixes]
[0]
[prefixes]
[startsWith, (, str, ,, p, ,, ignoreCase, )]
[str]
[p]
[ignoreCase]
[str]
[prefix, ., toString, (, ), +, str]
[prefix, ., toString, (, )]
[prefix]
[str]
[prependIfMissing, (, str, ,, prefix, ,, false, ,, prefixes, )]
[str]
[prefix]
[false]
[prefixes]
[prependIfMissing, (, str, ,, prefix, ,, true, ,, prefixes, )]
[str]
[prefix]
[true]
[prefixes]
[charsetName, ==, null, ?, new, String, (, bytes, ), :, new, String, (, bytes, ,, charsetName, )]
[charsetName, ==, null]
[charsetName]
[null]
[new, String, (, bytes, )]
[bytes]
[new, String, (, bytes, ,, charsetName, )]
[bytes]
[charsetName]
