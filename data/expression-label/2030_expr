[n, ., getType, (, )]
[n]
[isAliasableType, (, type, )]
[type]
[visitAliasableNode, (, n, ,, parent, )]
[n]
[parent]
[type, ==, Token, ., NAME]
[type]
[Token, ., NAME]
[Token]
[visitNameNode, (, n, )]
[n]
[aliasTypes, ., get, (, n, ., getType, (, ), )]
[aliasTypes]
[n, ., getType, (, )]
[n]
[aliasableNodes, ., visit, (, n, ,, parent, )]
[aliasableNodes]
[n]
[parent]
[isAliasDefinition, (, n, )]
[n]
[new, IllegalStateException, (, "Existing alias definition for ", +, Token, ., name, (, n, ., getType, (, ), ), )]
["Existing alias definition for ", +, Token, ., name, (, n, ., getType, (, ), )]
["Existing alias definition for "]
[Token, ., name, (, n, ., getType, (, ), )]
[Token]
[n, ., getType, (, )]
[n]
[Maps, ., newHashMap, (, )]
[Maps]
[false]
[this, ., aliasName]
[this]
[aliasName]
[this, ., tokenId]
[this]
[tokenId]
[nodes, ., put, (, n, ,, parent, )]
[nodes]
[n]
[parent]
[nodes, ., size, (, ), >=, minOccurrencesRequiredToAlias, (, )]
[nodes, ., size, (, )]
[nodes]
[minOccurrencesRequiredToAlias, (, )]
[insertAliasDeclaration, (, codeRoot, )]
[codeRoot]
[isAliased]
[true]
[true]
[false]
[isAliased]
[nodes, ., entrySet, (, )]
[nodes]
[entry, ., getKey, (, )]
[entry]
[entry, ., getValue, (, )]
[entry]
[aliasNode, (, n, ,, parent, )]
[n]
[parent]
[compiler, ., reportCodeChange, (, )]
[compiler]
[tokenId]
[aliasName]
[aliasName]
[Token, ., THROW]
[Token]
[NodeUtil, ., newName, (, compiler, ., getCodingConvention, (, ), ,, getAliasName, (, ), ,, throwNode, ,, getAliasName, (, ), )]
[NodeUtil]
[compiler, ., getCodingConvention, (, )]
[compiler]
[getAliasName, (, )]
[throwNode]
[getAliasName, (, )]
[IR, ., call, (, name, ,, throwNode, ., removeFirstChild, (, ), )]
[IR]
[name]
[throwNode, ., removeFirstChild, (, )]
[throwNode]
[aliasCall, ., putBooleanProp, (, Node, ., FREE_CALL, ,, true, )]
[aliasCall]
[Node, ., FREE_CALL]
[Node]
[true]
[IR, ., exprResult, (, aliasCall, )]
[IR]
[aliasCall]
[parent, ., replaceChild, (, throwNode, ,, exprResult, )]
[parent]
[throwNode]
[exprResult]
[codeRoot, ., addChildToFront, (, createAliasFunctionNode, (, getAliasName, (, ), ), )]
[codeRoot]
[createAliasFunctionNode, (, getAliasName, (, ), )]
[getAliasName, (, )]
[MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW]
[createAliasFunctionNode, (, "TT", )]
["TT"]
[InlineCostEstimator, ., getCost, (, alias, ), /, 2, +, 1]
[InlineCostEstimator, ., getCost, (, alias, ), /, 2]
[InlineCostEstimator, ., getCost, (, alias, )]
[InlineCostEstimator]
[alias]
[2]
[1]
["jscomp_throw_param"]
[IR, ., function, (, IR, ., name, (, aliasName, ), ,, IR, ., paramList, (, IR, ., name, (, PARAM_NAME, ), ), ,, IR, ., block, (, IR, ., throwNode, (, IR, ., name, (, PARAM_NAME, ), ), ), )]
[IR]
[IR, ., name, (, aliasName, )]
[IR]
[aliasName]
[IR, ., paramList, (, IR, ., name, (, PARAM_NAME, ), )]
[IR]
[IR, ., name, (, PARAM_NAME, )]
[IR]
[PARAM_NAME]
[IR, ., block, (, IR, ., throwNode, (, IR, ., name, (, PARAM_NAME, ), ), )]
[IR]
[IR, ., throwNode, (, IR, ., name, (, PARAM_NAME, ), )]
[IR]
[IR, ., name, (, PARAM_NAME, )]
[IR]
[PARAM_NAME]
[aliasName]
[tokenId]
[MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL]
[NodeUtil, ., newName, (, compiler, ., getCodingConvention, (, ), ,, getAliasName, (, ), ,, n, ,, getAliasName, (, ), )]
[NodeUtil]
[compiler, ., getCodingConvention, (, )]
[compiler]
[getAliasName, (, )]
[n]
[getAliasName, (, )]
[parent, ., replaceChild, (, n, ,, aliasNode, )]
[parent]
[n]
[aliasNode]
[new, Node, (, Token, ., VAR, )]
[Token, ., VAR]
[Token]
[new, Node, (, getTokenId, (, ), )]
[getTokenId, (, )]
[NodeUtil, ., newName, (, compiler, ., getCodingConvention, (, ), ,, getAliasName, (, ), ,, varNode, ,, getAliasName, (, ), )]
[NodeUtil]
[compiler, ., getCodingConvention, (, )]
[compiler]
[getAliasName, (, )]
[varNode]
[getAliasName, (, )]
[name, ., addChildToBack, (, value, )]
[name]
[value]
[varNode, ., addChildToBack, (, name, )]
[varNode]
[name]
[codeRoot, ., addChildrenToFront, (, varNode, )]
[codeRoot]
[varNode]
[aliasName]
[tokenId]
[n, ., getFirstChild, (, )]
[n]
[value, ., isNumber, (, ), &&, value, ., getDouble, (, ), ==, 0]
[value, ., isNumber, (, )]
[value]
[value, ., getDouble, (, ), ==, 0]
[value, ., getDouble, (, )]
[value]
[0]
[super, ., visit, (, n, ,, parent, )]
[super]
[n]
[parent]
[MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL]
[NodeUtil, ., newName, (, compiler, ., getCodingConvention, (, ), ,, getAliasName, (, ), ,, n, ,, getAliasName, (, ), )]
[NodeUtil]
[compiler, ., getCodingConvention, (, )]
[compiler]
[getAliasName, (, )]
[n]
[getAliasName, (, )]
[parent, ., replaceChild, (, n, ,, aliasNode, )]
[parent]
[n]
[aliasNode]
[new, Node, (, Token, ., VAR, )]
[Token, ., VAR]
[Token]
[IR, ., voidNode, (, IR, ., number, (, 0, ), )]
[IR]
[IR, ., number, (, 0, )]
[IR]
[0]
[NodeUtil, ., newName, (, compiler, ., getCodingConvention, (, ), ,, getAliasName, (, ), ,, varNode, ,, getAliasName, (, ), )]
[NodeUtil]
[compiler, ., getCodingConvention, (, )]
[compiler]
[getAliasName, (, )]
[varNode]
[getAliasName, (, )]
[name, ., addChildToBack, (, value, )]
[name]
[value]
[varNode, ., addChildToBack, (, name, )]
[varNode]
[name]
[codeRoot, ., addChildrenToFront, (, varNode, )]
[codeRoot]
[varNode]
["JSCompiler_alias_NULL"]
["JSCompiler_alias_TRUE"]
["JSCompiler_alias_FALSE"]
["JSCompiler_alias_THROW"]
["JSCompiler_alias_VOID"]
[6]
[estimateMinOccurrencesRequriedToAlias, (, )]
[this, ., compiler]
[this]
[compiler]
[aliasSpecifications]
[createAliasSpecifications, (, )]
[aliasTypes]
[Maps, ., newLinkedHashMap, (, )]
[Maps]
[aliasNames]
[Sets, ., newLinkedHashSet, (, )]
[Sets]
[aliasSpecifications]
[aliasTypes, ., put, (, specification, ., getTokenId, (, ), ,, specification, )]
[aliasTypes]
[specification, ., getTokenId, (, )]
[specification]
[specification]
[aliasNames, ., add, (, specification, ., getAliasName, (, ), )]
[aliasNames]
[specification, ., getAliasName, (, )]
[specification]
[NodeTraversal, ., traverse, (, compiler, ,, root, ,, new, FindAliasableNodes, (, ), )]
[NodeTraversal]
[compiler]
[root]
[new, FindAliasableNodes, (, )]
[needsAliases, (, )]
[addAliasNodes, (, compiler, ., getNodeForCodeInsertion, (, null, ), )]
[compiler, ., getNodeForCodeInsertion, (, null, )]
[compiler]
[null]
[aliasSpecifications]
[spec, ., doAlias, (, compiler, )]
[spec]
[compiler]
[aliasSpecifications]
[!, spec, ., nodes, ., isEmpty, (, )]
[spec, ., nodes, ., isEmpty, (, )]
[spec, ., nodes]
[spec]
[true]
[false]
[false]
[aliasSpecifications]
[spec, ., maybeInsertAliasDeclarationIntoParseTree, (, codeRoot, )]
[spec]
[codeRoot]
[codeChanged]
[true]
[codeChanged]
[compiler, ., reportCodeChange, (, )]
[compiler]
[!, n, ., isName, (, )]
[n, ., isName, (, )]
[n]
[false]
[!, isAliasName, (, n, ., getString, (, ), )]
[isAliasName, (, n, ., getString, (, ), )]
[n, ., getString, (, )]
[n]
[false]
[n, ., getFirstChild, (, ), !=, null]
[n, ., getFirstChild, (, )]
[n]
[null]
[aliasTypes, ., containsKey, (, type, )]
[aliasTypes]
[type]
[aliasNames, ., contains, (, name, )]
[aliasNames]
[name]
[Lists, ., newArrayList, (, )]
[Lists]
[l, ., add, (, new, KeywordAliasSpecification, (, ALIAS_FALSE, ,, Token, ., FALSE, ), )]
[l]
[new, KeywordAliasSpecification, (, ALIAS_FALSE, ,, Token, ., FALSE, )]
[ALIAS_FALSE]
[Token, ., FALSE]
[Token]
[l, ., add, (, new, KeywordAliasSpecification, (, ALIAS_NULL, ,, Token, ., NULL, ), )]
[l]
[new, KeywordAliasSpecification, (, ALIAS_NULL, ,, Token, ., NULL, )]
[ALIAS_NULL]
[Token, ., NULL]
[Token]
[l, ., add, (, new, KeywordAliasSpecification, (, ALIAS_TRUE, ,, Token, ., TRUE, ), )]
[l]
[new, KeywordAliasSpecification, (, ALIAS_TRUE, ,, Token, ., TRUE, )]
[ALIAS_TRUE]
[Token, ., TRUE]
[Token]
[l, ., add, (, new, VoidKeywordAliasSpecification, (, ALIAS_VOID, ,, Token, ., VOID, ), )]
[l]
[new, VoidKeywordAliasSpecification, (, ALIAS_VOID, ,, Token, ., VOID, )]
[ALIAS_VOID]
[Token, ., VOID]
[Token]
[l, ., add, (, new, ThrowAliasSpecification, (, ALIAS_THROW, ), )]
[l]
[new, ThrowAliasSpecification, (, ALIAS_THROW, )]
[ALIAS_THROW]
[l]
