[CSV_TOKENIZER_PROTOTYPE]
[new, StrTokenizer, (, )]
[CSV_TOKENIZER_PROTOTYPE, ., setDelimiterMatcher, (, StrMatcher, ., commaMatcher, (, ), )]
[CSV_TOKENIZER_PROTOTYPE]
[StrMatcher, ., commaMatcher, (, )]
[StrMatcher]
[CSV_TOKENIZER_PROTOTYPE, ., setQuoteMatcher, (, StrMatcher, ., doubleQuoteMatcher, (, ), )]
[CSV_TOKENIZER_PROTOTYPE]
[StrMatcher, ., doubleQuoteMatcher, (, )]
[StrMatcher]
[CSV_TOKENIZER_PROTOTYPE, ., setIgnoredMatcher, (, StrMatcher, ., noneMatcher, (, ), )]
[CSV_TOKENIZER_PROTOTYPE]
[StrMatcher, ., noneMatcher, (, )]
[StrMatcher]
[CSV_TOKENIZER_PROTOTYPE, ., setTrimmerMatcher, (, StrMatcher, ., trimMatcher, (, ), )]
[CSV_TOKENIZER_PROTOTYPE]
[StrMatcher, ., trimMatcher, (, )]
[StrMatcher]
[CSV_TOKENIZER_PROTOTYPE, ., setEmptyTokenAsNull, (, false, )]
[CSV_TOKENIZER_PROTOTYPE]
[false]
[CSV_TOKENIZER_PROTOTYPE, ., setIgnoreEmptyTokens, (, false, )]
[CSV_TOKENIZER_PROTOTYPE]
[false]
[TSV_TOKENIZER_PROTOTYPE]
[new, StrTokenizer, (, )]
[TSV_TOKENIZER_PROTOTYPE, ., setDelimiterMatcher, (, StrMatcher, ., tabMatcher, (, ), )]
[TSV_TOKENIZER_PROTOTYPE]
[StrMatcher, ., tabMatcher, (, )]
[StrMatcher]
[TSV_TOKENIZER_PROTOTYPE, ., setQuoteMatcher, (, StrMatcher, ., doubleQuoteMatcher, (, ), )]
[TSV_TOKENIZER_PROTOTYPE]
[StrMatcher, ., doubleQuoteMatcher, (, )]
[StrMatcher]
[TSV_TOKENIZER_PROTOTYPE, ., setIgnoredMatcher, (, StrMatcher, ., noneMatcher, (, ), )]
[TSV_TOKENIZER_PROTOTYPE]
[StrMatcher, ., noneMatcher, (, )]
[StrMatcher]
[TSV_TOKENIZER_PROTOTYPE, ., setTrimmerMatcher, (, StrMatcher, ., trimMatcher, (, ), )]
[TSV_TOKENIZER_PROTOTYPE]
[StrMatcher, ., trimMatcher, (, )]
[StrMatcher]
[TSV_TOKENIZER_PROTOTYPE, ., setEmptyTokenAsNull, (, false, )]
[TSV_TOKENIZER_PROTOTYPE]
[false]
[TSV_TOKENIZER_PROTOTYPE, ., setIgnoreEmptyTokens, (, false, )]
[TSV_TOKENIZER_PROTOTYPE]
[false]
[StrMatcher, ., splitMatcher, (, )]
[StrMatcher]
[StrMatcher, ., noneMatcher, (, )]
[StrMatcher]
[StrMatcher, ., noneMatcher, (, )]
[StrMatcher]
[StrMatcher, ., noneMatcher, (, )]
[StrMatcher]
[false]
[true]
[(, StrTokenizer, ), CSV_TOKENIZER_PROTOTYPE, ., clone, (, )]
[CSV_TOKENIZER_PROTOTYPE, ., clone, (, )]
[CSV_TOKENIZER_PROTOTYPE]
[getCSVClone, (, )]
[getCSVClone, (, )]
[tok, ., reset, (, input, )]
[tok]
[input]
[tok]
[getCSVClone, (, )]
[tok, ., reset, (, input, )]
[tok]
[input]
[tok]
[(, StrTokenizer, ), TSV_TOKENIZER_PROTOTYPE, ., clone, (, )]
[TSV_TOKENIZER_PROTOTYPE, ., clone, (, )]
[TSV_TOKENIZER_PROTOTYPE]
[getTSVClone, (, )]
[getTSVClone, (, )]
[tok, ., reset, (, input, )]
[tok]
[input]
[tok]
[getTSVClone, (, )]
[tok, ., reset, (, input, )]
[tok]
[input]
[tok]
[this, ., chars]
[this]
[null]
[input, !=, null]
[input]
[null]
[chars]
[input, ., toCharArray, (, )]
[input]
[chars]
[null]
[input]
[setDelimiterChar, (, delim, )]
[delim]
[input]
[setDelimiterString, (, delim, )]
[delim]
[input]
[setDelimiterMatcher, (, delim, )]
[delim]
[input]
[delim]
[setQuoteChar, (, quote, )]
[quote]
[input]
[delim]
[setQuoteMatcher, (, quote, )]
[quote]
[this, ., chars]
[this]
[ArrayUtils, ., clone, (, input, )]
[ArrayUtils]
[input]
[input]
[setDelimiterChar, (, delim, )]
[delim]
[input]
[setDelimiterString, (, delim, )]
[delim]
[input]
[setDelimiterMatcher, (, delim, )]
[delim]
[input]
[delim]
[setQuoteChar, (, quote, )]
[quote]
[input]
[delim]
[setQuoteMatcher, (, quote, )]
[quote]
[checkTokenized, (, )]
[tokens, ., length]
[tokens]
[hasNext, (, )]
[tokens, [, tokenPos, ++, ]]
[tokens]
[tokenPos, ++]
[tokenPos]
[null]
[hasPrevious, (, )]
[tokens, [, --, tokenPos, ]]
[tokens]
[--, tokenPos]
[tokenPos]
[null]
[checkTokenized, (, )]
[tokens, ., clone, (, )]
[tokens]
[checkTokenized, (, )]
[new, ArrayList, <, String, >, (, tokens, ., length, )]
[tokens, ., length]
[tokens]
[tokens]
[list, ., add, (, element, )]
[list]
[element]
[list]
[tokenPos]
[0]
[tokens]
[null]
[this]
[reset, (, )]
[input, !=, null]
[input]
[null]
[this, ., chars]
[this]
[input, ., toCharArray, (, )]
[input]
[this, ., chars]
[this]
[null]
[this]
[reset, (, )]
[this, ., chars]
[this]
[ArrayUtils, ., clone, (, input, )]
[ArrayUtils]
[input]
[this]
[checkTokenized, (, )]
[tokenPos, <, tokens, ., length]
[tokenPos]
[tokens, ., length]
[tokens]
[hasNext, (, )]
[tokens, [, tokenPos, ++, ]]
[tokens]
[tokenPos, ++]
[tokenPos]
[new, NoSuchElementException, (, )]
[tokenPos]
[checkTokenized, (, )]
[tokenPos, >, 0]
[tokenPos]
[0]
[hasPrevious, (, )]
[tokens, [, --, tokenPos, ]]
[tokens]
[--, tokenPos]
[tokenPos]
[new, NoSuchElementException, (, )]
[tokenPos, -, 1]
[tokenPos]
[1]
[new, UnsupportedOperationException, (, "remove() is unsupported", )]
["remove() is unsupported"]
[new, UnsupportedOperationException, (, "set() is unsupported", )]
["set() is unsupported"]
[new, UnsupportedOperationException, (, "add() is unsupported", )]
["add() is unsupported"]
[tokens, ==, null]
[tokens]
[null]
[chars, ==, null]
[chars]
[null]
[tokenize, (, null, ,, 0, ,, 0, )]
[null]
[0]
[0]
[tokens]
[split, ., toArray, (, new, String, [, split, ., size, (, ), ], )]
[split]
[new, String, [, split, ., size, (, ), ]]
[split, ., size, (, )]
[split]
[tokenize, (, chars, ,, 0, ,, chars, ., length, )]
[chars]
[0]
[chars, ., length]
[chars]
[tokens]
[split, ., toArray, (, new, String, [, split, ., size, (, ), ], )]
[split]
[new, String, [, split, ., size, (, ), ]]
[split, ., size, (, )]
[split]
[chars, ==, null, ||, count, ==, 0]
[chars, ==, null]
[chars]
[null]
[count, ==, 0]
[count]
[0]
[Collections, ., emptyList, (, )]
[Collections]
[new, StrBuilder, (, )]
[new, ArrayList, <, String, >, (, )]
[offset]
[pos, >=, 0, &&, pos, <, count]
[pos, >=, 0]
[pos]
[0]
[pos, <, count]
[pos]
[count]
[pos]
[readNextToken, (, chars, ,, pos, ,, count, ,, buf, ,, tokens, )]
[chars]
[pos]
[count]
[buf]
[tokens]
[pos, >=, count]
[pos]
[count]
[addToken, (, tokens, ,, "", )]
[tokens]
[""]
[tokens]
[StringUtils, ., isEmpty, (, tok, )]
[StringUtils]
[tok]
[isIgnoreEmptyTokens, (, )]
[isEmptyTokenAsNull, (, )]
[tok]
[null]
[list, ., add, (, tok, )]
[list]
[tok]
[start, <, len]
[start]
[len]
[Math, ., max, (, getIgnoredMatcher, (, ), ., isMatch, (, chars, ,, start, ,, start, ,, len, ), ,, getTrimmerMatcher, (, ), ., isMatch, (, chars, ,, start, ,, start, ,, len, ), )]
[Math]
[getIgnoredMatcher, (, ), ., isMatch, (, chars, ,, start, ,, start, ,, len, )]
[getIgnoredMatcher, (, )]
[chars]
[start]
[start]
[len]
[getTrimmerMatcher, (, ), ., isMatch, (, chars, ,, start, ,, start, ,, len, )]
[getTrimmerMatcher, (, )]
[chars]
[start]
[start]
[len]
[removeLen, ==, 0, ||, getDelimiterMatcher, (, ), ., isMatch, (, chars, ,, start, ,, start, ,, len, ), >, 0, ||, getQuoteMatcher, (, ), ., isMatch, (, chars, ,, start, ,, start, ,, len, ), >, 0]
[removeLen, ==, 0, ||, getDelimiterMatcher, (, ), ., isMatch, (, chars, ,, start, ,, start, ,, len, ), >, 0]
[removeLen, ==, 0]
[removeLen]
[0]
[getDelimiterMatcher, (, ), ., isMatch, (, chars, ,, start, ,, start, ,, len, ), >, 0]
[getDelimiterMatcher, (, ), ., isMatch, (, chars, ,, start, ,, start, ,, len, )]
[getDelimiterMatcher, (, )]
[chars]
[start]
[start]
[len]
[0]
[getQuoteMatcher, (, ), ., isMatch, (, chars, ,, start, ,, start, ,, len, ), >, 0]
[getQuoteMatcher, (, ), ., isMatch, (, chars, ,, start, ,, start, ,, len, )]
[getQuoteMatcher, (, )]
[chars]
[start]
[start]
[len]
[0]
[start]
[removeLen]
[start, >=, len]
[start]
[len]
[addToken, (, tokens, ,, "", )]
[tokens]
[""]
[-, 1]
[1]
[getDelimiterMatcher, (, ), ., isMatch, (, chars, ,, start, ,, start, ,, len, )]
[getDelimiterMatcher, (, )]
[chars]
[start]
[start]
[len]
[delimLen, >, 0]
[delimLen]
[0]
[addToken, (, tokens, ,, "", )]
[tokens]
[""]
[start, +, delimLen]
[start]
[delimLen]
[getQuoteMatcher, (, ), ., isMatch, (, chars, ,, start, ,, start, ,, len, )]
[getQuoteMatcher, (, )]
[chars]
[start]
[start]
[len]
[quoteLen, >, 0]
[quoteLen]
[0]
[readWithQuotes, (, chars, ,, start, +, quoteLen, ,, len, ,, workArea, ,, tokens, ,, start, ,, quoteLen, )]
[chars]
[start, +, quoteLen]
[start]
[quoteLen]
[len]
[workArea]
[tokens]
[start]
[quoteLen]
[readWithQuotes, (, chars, ,, start, ,, len, ,, workArea, ,, tokens, ,, 0, ,, 0, )]
[chars]
[start]
[len]
[workArea]
[tokens]
[0]
[0]
[workArea, ., clear, (, )]
[workArea]
[start]
[quoteLen, >, 0]
[quoteLen]
[0]
[0]
[pos, <, len]
[pos]
[len]
[quoting]
[isQuote, (, chars, ,, pos, ,, len, ,, quoteStart, ,, quoteLen, )]
[chars]
[pos]
[len]
[quoteStart]
[quoteLen]
[isQuote, (, chars, ,, pos, +, quoteLen, ,, len, ,, quoteStart, ,, quoteLen, )]
[chars]
[pos, +, quoteLen]
[pos]
[quoteLen]
[len]
[quoteStart]
[quoteLen]
[workArea, ., append, (, chars, ,, pos, ,, quoteLen, )]
[workArea]
[chars]
[pos]
[quoteLen]
[pos]
[quoteLen, *, 2]
[quoteLen]
[2]
[trimStart]
[workArea, ., size, (, )]
[workArea]
[quoting]
[false]
[pos]
[quoteLen]
[workArea, ., append, (, chars, [, pos, ++, ], )]
[workArea]
[chars, [, pos, ++, ]]
[chars]
[pos, ++]
[pos]
[trimStart]
[workArea, ., size, (, )]
[workArea]
[getDelimiterMatcher, (, ), ., isMatch, (, chars, ,, pos, ,, start, ,, len, )]
[getDelimiterMatcher, (, )]
[chars]
[pos]
[start]
[len]
[delimLen, >, 0]
[delimLen]
[0]
[addToken, (, tokens, ,, workArea, ., substring, (, 0, ,, trimStart, ), )]
[tokens]
[workArea, ., substring, (, 0, ,, trimStart, )]
[workArea]
[0]
[trimStart]
[pos, +, delimLen]
[pos]
[delimLen]
[quoteLen, >, 0, &&, isQuote, (, chars, ,, pos, ,, len, ,, quoteStart, ,, quoteLen, )]
[quoteLen, >, 0]
[quoteLen]
[0]
[isQuote, (, chars, ,, pos, ,, len, ,, quoteStart, ,, quoteLen, )]
[chars]
[pos]
[len]
[quoteStart]
[quoteLen]
[quoting]
[true]
[pos]
[quoteLen]
[getIgnoredMatcher, (, ), ., isMatch, (, chars, ,, pos, ,, start, ,, len, )]
[getIgnoredMatcher, (, )]
[chars]
[pos]
[start]
[len]
[ignoredLen, >, 0]
[ignoredLen]
[0]
[pos]
[ignoredLen]
[getTrimmerMatcher, (, ), ., isMatch, (, chars, ,, pos, ,, start, ,, len, )]
[getTrimmerMatcher, (, )]
[chars]
[pos]
[start]
[len]
[trimmedLen, >, 0]
[trimmedLen]
[0]
[workArea, ., append, (, chars, ,, pos, ,, trimmedLen, )]
[workArea]
[chars]
[pos]
[trimmedLen]
[pos]
[trimmedLen]
[workArea, ., append, (, chars, [, pos, ++, ], )]
[workArea]
[chars, [, pos, ++, ]]
[chars]
[pos, ++]
[pos]
[trimStart]
[workArea, ., size, (, )]
[workArea]
[addToken, (, tokens, ,, workArea, ., substring, (, 0, ,, trimStart, ), )]
[tokens]
[workArea, ., substring, (, 0, ,, trimStart, )]
[workArea]
[0]
[trimStart]
[-, 1]
[1]
[0]
[i, <, quoteLen]
[i]
[quoteLen]
[i, ++]
[i]
[pos, +, i, >=, len, ||, chars, [, pos, +, i, ], !=, chars, [, quoteStart, +, i, ]]
[pos, +, i, >=, len]
[pos, +, i]
[pos]
[i]
[len]
[chars, [, pos, +, i, ], !=, chars, [, quoteStart, +, i, ]]
[chars, [, pos, +, i, ]]
[chars]
[pos, +, i]
[pos]
[i]
[chars, [, quoteStart, +, i, ]]
[chars]
[quoteStart, +, i]
[quoteStart]
[i]
[false]
[true]
[this, ., delimMatcher]
[this]
[delim, ==, null]
[delim]
[null]
[this, ., delimMatcher]
[this]
[StrMatcher, ., noneMatcher, (, )]
[StrMatcher]
[this, ., delimMatcher]
[this]
[delim]
[this]
[setDelimiterMatcher, (, StrMatcher, ., charMatcher, (, delim, ), )]
[StrMatcher, ., charMatcher, (, delim, )]
[StrMatcher]
[delim]
[setDelimiterMatcher, (, StrMatcher, ., stringMatcher, (, delim, ), )]
[StrMatcher, ., stringMatcher, (, delim, )]
[StrMatcher]
[delim]
[quoteMatcher]
[quote, !=, null]
[quote]
[null]
[this, ., quoteMatcher]
[this]
[quote]
[this]
[setQuoteMatcher, (, StrMatcher, ., charMatcher, (, quote, ), )]
[StrMatcher, ., charMatcher, (, quote, )]
[StrMatcher]
[quote]
[ignoredMatcher]
[ignored, !=, null]
[ignored]
[null]
[this, ., ignoredMatcher]
[this]
[ignored]
[this]
[setIgnoredMatcher, (, StrMatcher, ., charMatcher, (, ignored, ), )]
[StrMatcher, ., charMatcher, (, ignored, )]
[StrMatcher]
[ignored]
[trimmerMatcher]
[trimmer, !=, null]
[trimmer]
[null]
[this, ., trimmerMatcher]
[this]
[trimmer]
[this]
[this, ., emptyAsNull]
[this]
[this, ., emptyAsNull]
[this]
[emptyAsNull]
[this]
[ignoreEmptyTokens]
[this, ., ignoreEmptyTokens]
[this]
[ignoreEmptyTokens]
[this]
[chars, ==, null]
[chars]
[null]
[null]
[new, String, (, chars, )]
[chars]
[cloneReset, (, )]
[null]
[(, StrTokenizer, ), super, ., clone, (, )]
[super, ., clone, (, )]
[super]
[cloned, ., chars, !=, null]
[cloned, ., chars]
[cloned]
[null]
[cloned, ., chars]
[cloned]
[cloned, ., chars, ., clone, (, )]
[cloned, ., chars]
[cloned]
[cloned, ., reset, (, )]
[cloned]
[cloned]
[tokens, ==, null]
[tokens]
[null]
["StrTokenizer[not tokenized yet]"]
["StrTokenizer", +, getTokenList, (, )]
["StrTokenizer"]
[getTokenList, (, )]
