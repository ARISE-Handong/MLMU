[DiagnosticType, ., error, (, "JSC_INVALID_NO_SIDE_EFFECT_ANNOTATION", ,, "@nosideeffects may only appear in externs files.", )]
[DiagnosticType]
["JSC_INVALID_NO_SIDE_EFFECT_ANNOTATION"]
["@nosideeffects may only appear in externs files."]
[DiagnosticType, ., error, (, "JSC_INVALID_MODIFIES_ANNOTATION", ,, "@modifies may only appear in externs files.", )]
[DiagnosticType]
["JSC_INVALID_MODIFIES_ANNOTATION"]
["@modifies may only appear in externs files."]
[this, ., compiler]
[this]
[compiler]
[this, ., definitionProvider]
[this]
[definitionProvider]
[this, ., functionSideEffectMap]
[this]
[Maps, ., newHashMap, (, )]
[Maps]
[this, ., allFunctionCalls]
[this]
[Lists, ., newArrayList, (, )]
[Lists]
[this, ., externs]
[this]
[null]
[this, ., root]
[this]
[null]
[externs, !=, null, ||, root, !=, null]
[externs, !=, null]
[externs]
[null]
[root, !=, null]
[root]
[null]
[new, IllegalStateException, (, "It is illegal to call PureFunctionIdentifier.process ", +, "twice the same instance.  Please use a new ", +, "PureFunctionIdentifier instance each time.", )]
["It is illegal to call PureFunctionIdentifier.process ", +, "twice the same instance.  Please use a new ", +, "PureFunctionIdentifier instance each time."]
["It is illegal to call PureFunctionIdentifier.process ", +, "twice the same instance.  Please use a new "]
["It is illegal to call PureFunctionIdentifier.process "]
["twice the same instance.  Please use a new "]
["PureFunctionIdentifier instance each time."]
[externs]
[externsAst]
[root]
[srcAst]
[NodeTraversal, ., traverse, (, compiler, ,, externs, ,, new, FunctionAnalyzer, (, true, ), )]
[NodeTraversal]
[compiler]
[externs]
[new, FunctionAnalyzer, (, true, )]
[true]
[NodeTraversal, ., traverse, (, compiler, ,, root, ,, new, FunctionAnalyzer, (, false, ), )]
[NodeTraversal]
[compiler]
[root]
[new, FunctionAnalyzer, (, false, )]
[false]
[propagateSideEffects, (, )]
[markPureFunctionCalls, (, )]
[Preconditions, ., checkNotNull, (, externs, )]
[Preconditions]
[externs]
[Preconditions, ., checkNotNull, (, root, )]
[Preconditions]
[root]
[new, StringBuilder, (, )]
[new, FunctionNames, (, compiler, )]
[compiler]
[functionNames, ., process, (, null, ,, externs, )]
[functionNames]
[null]
[externs]
[functionNames, ., process, (, null, ,, root, )]
[functionNames]
[null]
[root]
[sb, ., append, (, "Pure functions:\n", )]
[sb]
["Pure functions:\n"]
[functionSideEffectMap, ., entrySet, (, )]
[functionSideEffectMap]
[entry, ., getKey, (, )]
[entry]
[entry, ., getValue, (, )]
[entry]
[functionInfo, ., mayBePure, (, ), &&, !, functionInfo, ., mayHaveSideEffects, (, )]
[functionInfo, ., mayBePure, (, )]
[functionInfo]
[!, functionInfo, ., mayHaveSideEffects, (, )]
[functionInfo, ., mayHaveSideEffects, (, )]
[functionInfo]
[isPure]
[sb, ., append, (, "  ", +, functionNames, ., getFunctionName, (, function, ), +, "\n", )]
[sb]
["  ", +, functionNames, ., getFunctionName, (, function, ), +, "\n"]
["  ", +, functionNames, ., getFunctionName, (, function, )]
["  "]
[functionNames, ., getFunctionName, (, function, )]
[functionNames]
[function]
["\n"]
[sb, ., append, (, "\n", )]
[sb]
["\n"]
[functionSideEffectMap, ., entrySet, (, )]
[functionSideEffectMap]
[entry, ., getKey, (, )]
[entry]
[entry, ., getValue, (, )]
[entry]
[Sets, ., newHashSet, (, )]
[Sets]
[functionInfo, ., getCallsInFunctionBody, (, )]
[functionInfo]
[getCallableDefinitions, (, definitionProvider, ,, callSite, ., getFirstChild, (, ), )]
[definitionProvider]
[callSite, ., getFirstChild, (, )]
[callSite]
[defs, ==, null]
[defs]
[null]
[depFunctionNames, ., add, (, "<null def list>", )]
[depFunctionNames]
["<null def list>"]
[defs]
[depFunctionNames, ., add, (, functionNames, ., getFunctionName, (, def, ., getRValue, (, ), ), )]
[depFunctionNames]
[functionNames, ., getFunctionName, (, def, ., getRValue, (, ), )]
[functionNames]
[def, ., getRValue, (, )]
[def]
[sb, ., append, (, functionNames, ., getFunctionName, (, function, ), +, " ", +, functionInfo, ., toString, (, ), +, " Calls: ", +, depFunctionNames, +, "\n", )]
[sb]
[functionNames, ., getFunctionName, (, function, ), +, " ", +, functionInfo, ., toString, (, ), +, " Calls: ", +, depFunctionNames, +, "\n"]
[functionNames, ., getFunctionName, (, function, ), +, " ", +, functionInfo, ., toString, (, ), +, " Calls: ", +, depFunctionNames]
[functionNames, ., getFunctionName, (, function, ), +, " ", +, functionInfo, ., toString, (, ), +, " Calls: "]
[functionNames, ., getFunctionName, (, function, ), +, " ", +, functionInfo, ., toString, (, )]
[functionNames, ., getFunctionName, (, function, ), +, " "]
[functionNames, ., getFunctionName, (, function, )]
[functionNames]
[function]
[" "]
[functionInfo, ., toString, (, )]
[functionInfo]
[" Calls: "]
[depFunctionNames]
["\n"]
[sb, ., toString, (, )]
[sb]
[name, ., isGetProp, (, ), ||, name, ., isName, (, )]
[name, ., isGetProp, (, )]
[name]
[name, ., isName, (, )]
[name]
[Lists, ., newArrayList, (, )]
[Lists]
[definitionProvider, ., getDefinitionsReferencedAt, (, name, )]
[definitionProvider]
[name]
[decls, ==, null]
[decls]
[null]
[null]
[decls]
[current, ., getRValue, (, )]
[current]
[(, rValue, !=, null, ), &&, rValue, ., isFunction, (, )]
[(, rValue, !=, null, )]
[rValue, !=, null]
[rValue]
[null]
[rValue, ., isFunction, (, )]
[rValue]
[result, ., add, (, current, )]
[result]
[current]
[null]
[result]
[name, ., isOr, (, ), ||, name, ., isHook, (, )]
[name, ., isOr, (, )]
[name]
[name, ., isHook, (, )]
[name]
[name, ., isHook, (, )]
[name]
[firstVal]
[name, ., getFirstChild, (, ), ., getNext, (, )]
[name, ., getFirstChild, (, )]
[name]
[firstVal]
[name, ., getFirstChild, (, )]
[name]
[getCallableDefinitions, (, definitionProvider, ,, firstVal, )]
[definitionProvider]
[firstVal]
[getCallableDefinitions, (, definitionProvider, ,, firstVal, ., getNext, (, ), )]
[definitionProvider]
[firstVal, ., getNext, (, )]
[firstVal]
[defs1, !=, null, &&, defs2, !=, null]
[defs1, !=, null]
[defs1]
[null]
[defs2, !=, null]
[defs2]
[null]
[defs1, ., addAll, (, defs2, )]
[defs1]
[defs2]
[defs1]
[null]
[NodeUtil, ., isFunctionExpression, (, name, )]
[NodeUtil]
[name]
[Lists, ., newArrayList, (, (, Definition, ), new, DefinitionsRemover, ., FunctionExpressionDefinition, (, name, ,, false, ), )]
[Lists]
[(, Definition, ), new, DefinitionsRemover, ., FunctionExpressionDefinition, (, name, ,, false, )]
[new, DefinitionsRemover, ., FunctionExpressionDefinition, (, name, ,, false, )]
[name]
[false]
[null]
[LinkedDirectedGraph, ., createWithoutAnnotations, (, )]
[LinkedDirectedGraph]
[functionSideEffectMap, ., values, (, )]
[functionSideEffectMap]
[sideEffectGraph, ., createNode, (, functionInfo, )]
[sideEffectGraph]
[functionInfo]
[functionSideEffectMap, ., values, (, )]
[functionSideEffectMap]
[!, functionInfo, ., mayHaveSideEffects, (, )]
[functionInfo, ., mayHaveSideEffects, (, )]
[functionInfo]
[functionInfo, ., getCallsInFunctionBody, (, )]
[functionInfo]
[callSite, ., getFirstChild, (, )]
[callSite]
[getCallableDefinitions, (, definitionProvider, ,, callee, )]
[definitionProvider]
[callee]
[defs, ==, null]
[defs]
[null]
[functionInfo, ., setTaintsUnknown, (, )]
[functionInfo]
[defs]
[def, ., getRValue, (, )]
[def]
[functionSideEffectMap, ., get, (, defValue, )]
[functionSideEffectMap]
[defValue]
[Preconditions, ., checkNotNull, (, dep, )]
[Preconditions]
[dep]
[sideEffectGraph, ., connect, (, dep, ,, callSite, ,, functionInfo, )]
[sideEffectGraph]
[dep]
[callSite]
[functionInfo]
[FixedPointGraphTraversal, ., newTraversal, (, new, SideEffectPropagationCallback, (, ), ), ., computeFixedPoint, (, sideEffectGraph, )]
[FixedPointGraphTraversal, ., newTraversal, (, new, SideEffectPropagationCallback, (, ), )]
[FixedPointGraphTraversal]
[new, SideEffectPropagationCallback, (, )]
[sideEffectGraph]
[functionSideEffectMap, ., values, (, )]
[functionSideEffectMap]
[functionInfo, ., mayBePure, (, )]
[functionInfo]
[functionInfo, ., setIsPure, (, )]
[functionInfo]
[allFunctionCalls]
[callNode, ., getFirstChild, (, )]
[callNode]
[getCallableDefinitions, (, definitionProvider, ,, name, )]
[definitionProvider]
[name]
[new, Node, ., SideEffectFlags, (, )]
[defs, ==, null]
[defs]
[null]
[flags, ., setMutatesGlobalState, (, )]
[flags]
[flags, ., setThrows, (, )]
[flags]
[flags, ., setReturnsTainted, (, )]
[flags]
[flags, ., clearAllFlags, (, )]
[flags]
[defs]
[functionSideEffectMap, ., get, (, def, ., getRValue, (, ), )]
[functionSideEffectMap]
[def, ., getRValue, (, )]
[def]
[Preconditions, ., checkNotNull, (, functionInfo, )]
[Preconditions]
[functionInfo]
[functionInfo, ., mutatesGlobalState, (, )]
[functionInfo]
[flags, ., setMutatesGlobalState, (, )]
[flags]
[functionInfo, ., functionThrows]
[functionInfo]
[flags, ., setThrows, (, )]
[flags]
[!, callNode, ., isNew, (, )]
[callNode, ., isNew, (, )]
[callNode]
[functionInfo, ., taintsThis]
[functionInfo]
[flags, ., setMutatesThis, (, )]
[flags]
[functionInfo, ., taintsReturn]
[functionInfo]
[flags, ., setReturnsTainted, (, )]
[flags]
[flags, ., areAllFlagsSet, (, )]
[flags]
[callNode, ., isCall, (, )]
[callNode]
[Preconditions, ., checkState, (, compiler, !=, null, )]
[Preconditions]
[compiler, !=, null]
[compiler]
[null]
[!, NodeUtil, ., functionCallHasSideEffects, (, callNode, ,, compiler, )]
[NodeUtil, ., functionCallHasSideEffects, (, callNode, ,, compiler, )]
[NodeUtil]
[callNode]
[compiler]
[flags, ., clearSideEffectFlags, (, )]
[flags]
[callNode, ., isNew, (, )]
[callNode]
[!, NodeUtil, ., constructorCallHasSideEffects, (, callNode, )]
[NodeUtil, ., constructorCallHasSideEffects, (, callNode, )]
[NodeUtil]
[callNode]
[flags, ., clearSideEffectFlags, (, )]
[flags]
[callNode, ., setSideEffectFlags, (, flags, ., valueOf, (, ), )]
[callNode]
[flags, ., valueOf, (, )]
[flags]
[this, ., inExterns]
[this]
[inExterns]
[node, ., isFunction, (, )]
[node]
[parent, ., getParent, (, )]
[parent]
[visitFunction, (, traversal, ,, node, ,, parent, ,, gramp, )]
[traversal]
[node]
[parent]
[gramp]
[true]
[inExterns]
[!, NodeUtil, ., nodeTypeMayHaveSideEffects, (, node, ), &&, !, node, ., isReturn, (, )]
[!, NodeUtil, ., nodeTypeMayHaveSideEffects, (, node, )]
[NodeUtil, ., nodeTypeMayHaveSideEffects, (, node, )]
[NodeUtil]
[node]
[!, node, ., isReturn, (, )]
[node, ., isReturn, (, )]
[node]
[node, ., isCall, (, ), ||, node, ., isNew, (, )]
[node, ., isCall, (, )]
[node]
[node, ., isNew, (, )]
[node]
[allFunctionCalls, ., add, (, node, )]
[allFunctionCalls]
[node]
[traversal, ., getEnclosingFunction, (, )]
[traversal]
[enclosingFunction, !=, null]
[enclosingFunction]
[null]
[functionSideEffectMap, ., get, (, enclosingFunction, )]
[functionSideEffectMap]
[enclosingFunction]
[Preconditions, ., checkNotNull, (, sideEffectInfo, )]
[Preconditions]
[sideEffectInfo]
[NodeUtil, ., isAssignmentOp, (, node, )]
[NodeUtil]
[node]
[visitAssignmentOrUnaryOperator, (, sideEffectInfo, ,, traversal, ., getScope, (, ), ,, node, ,, node, ., getFirstChild, (, ), ,, node, ., getLastChild, (, ), )]
[sideEffectInfo]
[traversal, ., getScope, (, )]
[traversal]
[node]
[node, ., getFirstChild, (, )]
[node]
[node, ., getLastChild, (, )]
[node]
[node, ., getType, (, )]
[node]
[Token, ., CALL]
[Token]
[Token, ., NEW]
[Token]
[visitCall, (, sideEffectInfo, ,, node, )]
[sideEffectInfo]
[node]
[Token, ., DELPROP]
[Token]
[Token, ., DEC]
[Token]
[Token, ., INC]
[Token]
[visitAssignmentOrUnaryOperator, (, sideEffectInfo, ,, traversal, ., getScope, (, ), ,, node, ,, node, ., getFirstChild, (, ), ,, null, )]
[sideEffectInfo]
[traversal, ., getScope, (, )]
[traversal]
[node]
[node, ., getFirstChild, (, )]
[node]
[null]
[Token, ., NAME]
[Token]
[Preconditions, ., checkArgument, (, NodeUtil, ., isVarDeclaration, (, node, ), )]
[Preconditions]
[NodeUtil, ., isVarDeclaration, (, node, )]
[NodeUtil]
[node]
[node, ., getFirstChild, (, )]
[node]
[value, !=, null, &&, !, NodeUtil, ., evaluatesToLocalValue, (, value, )]
[value, !=, null]
[value]
[null]
[!, NodeUtil, ., evaluatesToLocalValue, (, value, )]
[NodeUtil, ., evaluatesToLocalValue, (, value, )]
[NodeUtil]
[value]
[traversal, ., getScope, (, )]
[traversal]
[scope, ., getVar, (, node, ., getString, (, ), )]
[scope]
[node, ., getString, (, )]
[node]
[sideEffectInfo, ., blacklistLocal, (, var, )]
[sideEffectInfo]
[var]
[Token, ., THROW]
[Token]
[visitThrow, (, sideEffectInfo, )]
[sideEffectInfo]
[Token, ., RETURN]
[Token]
[node, ., hasChildren, (, ), &&, !, NodeUtil, ., evaluatesToLocalValue, (, node, ., getFirstChild, (, ), )]
[node, ., hasChildren, (, )]
[node]
[!, NodeUtil, ., evaluatesToLocalValue, (, node, ., getFirstChild, (, ), )]
[NodeUtil, ., evaluatesToLocalValue, (, node, ., getFirstChild, (, ), )]
[NodeUtil]
[node, ., getFirstChild, (, )]
[node]
[sideEffectInfo, ., setTaintsReturn, (, )]
[sideEffectInfo]
[new, IllegalArgumentException, (, "Unhandled side effect node type ", +, Token, ., name, (, node, ., getType, (, ), ), )]
["Unhandled side effect node type ", +, Token, ., name, (, node, ., getType, (, ), )]
["Unhandled side effect node type "]
[Token, ., name, (, node, ., getType, (, ), )]
[Token]
[node, ., getType, (, )]
[node]
[t, ., inGlobalScope, (, )]
[t]
[functionSideEffectMap, ., get, (, t, ., getScopeRoot, (, ), )]
[functionSideEffectMap]
[t, ., getScopeRoot, (, )]
[t]
[sideEffectInfo, ., mutatesGlobalState, (, )]
[sideEffectInfo]
[sideEffectInfo, ., resetLocalVars, (, )]
[sideEffectInfo]
[t, ., getScope, (, ), ., getVars, (, )]
[t, ., getScope, (, )]
[t]
[i, ., hasNext, (, )]
[i]
[i, ., next, (, )]
[i]
[false]
[v, ., getParentNode, (, ), ., isVar, (, )]
[v, ., getParentNode, (, )]
[v]
[sideEffectInfo, ., knownLocals, ., add, (, v, ., getName, (, ), )]
[sideEffectInfo, ., knownLocals]
[sideEffectInfo]
[v, ., getName, (, )]
[v]
[localVar]
[true]
[!, localVar, ||, sideEffectInfo, ., blacklisted, ., contains, (, v, )]
[!, localVar]
[localVar]
[sideEffectInfo, ., blacklisted, ., contains, (, v, )]
[sideEffectInfo, ., blacklisted]
[sideEffectInfo]
[v]
[sideEffectInfo, ., taintedLocals, ., contains, (, v, )]
[sideEffectInfo, ., taintedLocals]
[sideEffectInfo]
[v]
[sideEffectInfo, ., setTaintsUnknown, (, )]
[sideEffectInfo]
[sideEffectInfo, ., resetLocalVars, (, )]
[sideEffectInfo]
[sideEffectInfo, ., taintedLocals]
[sideEffectInfo]
[null]
[sideEffectInfo, ., blacklisted]
[sideEffectInfo]
[null]
[lhs, ., isName, (, )]
[lhs]
[scope, ., getVar, (, lhs, ., getString, (, ), )]
[scope]
[lhs, ., getString, (, )]
[lhs]
[var, ==, null, ||, var, ., scope, !=, scope]
[var, ==, null]
[var]
[null]
[var, ., scope, !=, scope]
[var, ., scope]
[var]
[scope]
[sideEffectInfo, ., setTaintsGlobalState, (, )]
[sideEffectInfo]
[Preconditions, ., checkState, (, NodeUtil, ., isAssignmentOp, (, op, ), ||, isIncDec, (, op, ), ||, op, ., isDelProp, (, ), )]
[Preconditions]
[NodeUtil, ., isAssignmentOp, (, op, ), ||, isIncDec, (, op, ), ||, op, ., isDelProp, (, )]
[NodeUtil, ., isAssignmentOp, (, op, ), ||, isIncDec, (, op, )]
[NodeUtil, ., isAssignmentOp, (, op, )]
[NodeUtil]
[op]
[isIncDec, (, op, )]
[op]
[op, ., isDelProp, (, )]
[op]
[rhs, !=, null, &&, op, ., isAssign, (, ), &&, !, NodeUtil, ., evaluatesToLocalValue, (, rhs, )]
[rhs, !=, null, &&, op, ., isAssign, (, )]
[rhs, !=, null]
[rhs]
[null]
[op, ., isAssign, (, )]
[op]
[!, NodeUtil, ., evaluatesToLocalValue, (, rhs, )]
[NodeUtil, ., evaluatesToLocalValue, (, rhs, )]
[NodeUtil]
[rhs]
[sideEffectInfo, ., blacklistLocal, (, var, )]
[sideEffectInfo]
[var]
[NodeUtil, ., isGet, (, lhs, )]
[NodeUtil]
[lhs]
[lhs, ., getFirstChild, (, ), ., isThis, (, )]
[lhs, ., getFirstChild, (, )]
[lhs]
[sideEffectInfo, ., setTaintsThis, (, )]
[sideEffectInfo]
[null]
[lhs, ., getFirstChild, (, )]
[lhs]
[objectNode, ., isName, (, )]
[objectNode]
[var]
[scope, ., getVar, (, objectNode, ., getString, (, ), )]
[scope]
[objectNode, ., getString, (, )]
[objectNode]
[var, ==, null, ||, var, ., scope, !=, scope]
[var, ==, null]
[var]
[null]
[var, ., scope, !=, scope]
[var, ., scope]
[var]
[scope]
[sideEffectInfo, ., setTaintsUnknown, (, )]
[sideEffectInfo]
[sideEffectInfo, ., addTaintedLocalObject, (, var, )]
[sideEffectInfo]
[var]
[sideEffectInfo, ., setTaintsUnknown, (, )]
[sideEffectInfo]
[node, ., isCall, (, ), &&, !, NodeUtil, ., functionCallHasSideEffects, (, node, ,, compiler, )]
[node, ., isCall, (, )]
[node]
[!, NodeUtil, ., functionCallHasSideEffects, (, node, ,, compiler, )]
[NodeUtil, ., functionCallHasSideEffects, (, node, ,, compiler, )]
[NodeUtil]
[node]
[compiler]
[node, ., isNew, (, ), &&, !, NodeUtil, ., constructorCallHasSideEffects, (, node, )]
[node, ., isNew, (, )]
[node]
[!, NodeUtil, ., constructorCallHasSideEffects, (, node, )]
[NodeUtil, ., constructorCallHasSideEffects, (, node, )]
[NodeUtil]
[node]
[sideEffectInfo, ., appendCall, (, node, )]
[sideEffectInfo]
[node]
[Preconditions, ., checkArgument, (, !, functionSideEffectMap, ., containsKey, (, node, ), )]
[Preconditions]
[!, functionSideEffectMap, ., containsKey, (, node, )]
[functionSideEffectMap, ., containsKey, (, node, )]
[functionSideEffectMap]
[node]
[new, FunctionInformation, (, inExterns, )]
[inExterns]
[functionSideEffectMap, ., put, (, node, ,, sideEffectInfo, )]
[functionSideEffectMap]
[node]
[sideEffectInfo]
[inExterns]
[node, ., getJSType, (, )]
[node]
[false]
[JSType, ., toMaybeFunctionType, (, jstype, )]
[JSType]
[jstype]
[functionType, !=, null]
[functionType]
[null]
[functionType, ., getReturnType, (, )]
[functionType]
[isLocalValueType, (, jstypeReturn, ,, true, )]
[jstypeReturn]
[true]
[knownLocalResult]
[true]
[!, knownLocalResult]
[knownLocalResult]
[sideEffectInfo, ., setTaintsReturn, (, )]
[sideEffectInfo]
[getJSDocInfoForFunction, (, node, ,, parent, ,, gramp, )]
[node]
[parent]
[gramp]
[info, !=, null]
[info]
[null]
[false]
[hasSideEffectsThisAnnotation, (, info, )]
[info]
[inExterns]
[hasSpecificSideEffects]
[true]
[sideEffectInfo, ., setTaintsThis, (, )]
[sideEffectInfo]
[traversal, ., report, (, node, ,, INVALID_MODIFIES_ANNOTATION, )]
[traversal]
[node]
[INVALID_MODIFIES_ANNOTATION]
[hasSideEffectsArgumentsAnnotation, (, info, )]
[info]
[inExterns]
[hasSpecificSideEffects]
[true]
[sideEffectInfo, ., setTaintsArguments, (, )]
[sideEffectInfo]
[traversal, ., report, (, node, ,, INVALID_MODIFIES_ANNOTATION, )]
[traversal]
[node]
[INVALID_MODIFIES_ANNOTATION]
[inExterns, &&, !, info, ., getThrownTypes, (, ), ., isEmpty, (, )]
[inExterns]
[!, info, ., getThrownTypes, (, ), ., isEmpty, (, )]
[info, ., getThrownTypes, (, ), ., isEmpty, (, )]
[info, ., getThrownTypes, (, )]
[info]
[hasSpecificSideEffects]
[true]
[sideEffectInfo, ., setFunctionThrows, (, )]
[sideEffectInfo]
[!, hasSpecificSideEffects]
[hasSpecificSideEffects]
[hasNoSideEffectsAnnotation, (, info, )]
[info]
[inExterns]
[sideEffectInfo, ., setIsPure, (, )]
[sideEffectInfo]
[traversal, ., report, (, node, ,, INVALID_NO_SIDE_EFFECT_ANNOTATION, )]
[traversal]
[node]
[INVALID_NO_SIDE_EFFECT_ANNOTATION]
[inExterns]
[sideEffectInfo, ., setTaintsGlobalState, (, )]
[sideEffectInfo]
[inExterns]
[sideEffectInfo, ., setTaintsGlobalState, (, )]
[sideEffectInfo]
[Preconditions, ., checkNotNull, (, jstype, )]
[Preconditions]
[jstype]
[jstype, ., getGreatestSubtype, (, compiler, ., getTypeRegistry, (, ), ., getNativeType, (, JSTypeNative, ., OBJECT_TYPE, ), )]
[jstype]
[compiler, ., getTypeRegistry, (, ), ., getNativeType, (, JSTypeNative, ., OBJECT_TYPE, )]
[compiler, ., getTypeRegistry, (, )]
[compiler]
[JSTypeNative, ., OBJECT_TYPE]
[JSTypeNative]
[subtype, ., isNoType, (, )]
[subtype]
[sideEffectInfo, ., setFunctionThrows, (, )]
[sideEffectInfo]
[node, ., getJSDocInfo, (, )]
[node]
[info, !=, null]
[info]
[null]
[info]
[parent, ., isName, (, )]
[parent]
[gramp, ., hasOneChild, (, ), ?, gramp, ., getJSDocInfo, (, ), :, null]
[gramp, ., hasOneChild, (, )]
[gramp]
[gramp, ., getJSDocInfo, (, )]
[gramp]
[null]
[parent, ., isAssign, (, )]
[parent]
[parent, ., getJSDocInfo, (, )]
[parent]
[null]
[Preconditions, ., checkNotNull, (, docInfo, )]
[Preconditions]
[docInfo]
[docInfo, ., isNoSideEffects, (, )]
[docInfo]
[Preconditions, ., checkNotNull, (, docInfo, )]
[Preconditions]
[docInfo]
[(, docInfo, ., getModifies, (, ), ., contains, (, "this", ), )]
[docInfo, ., getModifies, (, ), ., contains, (, "this", )]
[docInfo, ., getModifies, (, )]
[docInfo]
["this"]
[Preconditions, ., checkNotNull, (, docInfo, )]
[Preconditions]
[docInfo]
[docInfo, ., getModifies, (, )]
[docInfo]
[(, modifies, ., size, (, ), >, 1, ||, (, modifies, ., size, (, ), ==, 1, &&, !, modifies, ., contains, (, "this", ), ), )]
[modifies, ., size, (, ), >, 1, ||, (, modifies, ., size, (, ), ==, 1, &&, !, modifies, ., contains, (, "this", ), )]
[modifies, ., size, (, ), >, 1]
[modifies, ., size, (, )]
[modifies]
[1]
[(, modifies, ., size, (, ), ==, 1, &&, !, modifies, ., contains, (, "this", ), )]
[modifies, ., size, (, ), ==, 1, &&, !, modifies, ., contains, (, "this", )]
[modifies, ., size, (, ), ==, 1]
[modifies, ., size, (, )]
[modifies]
[1]
[!, modifies, ., contains, (, "this", )]
[modifies, ., contains, (, "this", )]
[modifies]
["this"]
[n, ., getType, (, )]
[n]
[(, type, ==, Token, ., INC, ||, type, ==, Token, ., DEC, )]
[type, ==, Token, ., INC, ||, type, ==, Token, ., DEC]
[type, ==, Token, ., INC]
[type]
[Token, ., INC]
[Token]
[type, ==, Token, ., DEC]
[type]
[Token, ., DEC]
[Token]
[@, SuppressWarnings, (, "unused", )]
["unused"]
[new, Predicate, <, Node, >, (, ), {, @, Override, public, boolean, apply, (, Node, value, ), {, switch, (, value, ., getType, (, ), ), {, case, Token, ., ASSIGN, :, return, false, ;, case, Token, ., THIS, :, return, false, ;, case, Token, ., NAME, :, return, false, ;, case, Token, ., GETELEM, :, case, Token, ., GETPROP, :, return, false, ;, case, Token, ., CALL, :, return, false, ;, }, return, false, ;, }, }]
[value, ., getType, (, )]
[value]
[Token, ., ASSIGN]
[Token]
[false]
[Token, ., THIS]
[Token]
[false]
[Token, ., NAME]
[Token]
[false]
[Token, ., GETELEM]
[Token]
[Token, ., GETPROP]
[Token]
[false]
[Token, ., CALL]
[Token]
[false]
[false]
[NodeUtil, ., evaluatesToLocalValue, (, value, ,, taintingPredicate, )]
[NodeUtil]
[value]
[taintingPredicate]
[Preconditions, ., checkArgument, (, callSite, ., isCall, (, ), ||, callSite, ., isNew, (, ), )]
[Preconditions]
[callSite, ., isCall, (, ), ||, callSite, ., isNew, (, )]
[callSite, ., isCall, (, )]
[callSite]
[callSite, ., isNew, (, )]
[callSite]
[false]
[!, caller, ., mutatesGlobalState, (, ), &&, callee, ., mutatesGlobalState, (, )]
[!, caller, ., mutatesGlobalState, (, )]
[caller, ., mutatesGlobalState, (, )]
[caller]
[callee, ., mutatesGlobalState, (, )]
[callee]
[caller, ., setTaintsGlobalState, (, )]
[caller]
[changed]
[true]
[!, caller, ., functionThrows, (, ), &&, callee, ., functionThrows, (, )]
[!, caller, ., functionThrows, (, )]
[caller, ., functionThrows, (, )]
[caller]
[callee, ., functionThrows, (, )]
[callee]
[caller, ., setFunctionThrows, (, )]
[caller]
[changed]
[true]
[callee, ., mutatesThis, (, )]
[callee]
[!, callSite, ., isNew, (, )]
[callSite, ., isNew, (, )]
[callSite]
[getCallThisObject, (, callSite, )]
[callSite]
[objectNode, !=, null, &&, objectNode, ., isName, (, ), &&, !, isCallOrApply, (, callSite, )]
[objectNode, !=, null, &&, objectNode, ., isName, (, )]
[objectNode, !=, null]
[objectNode]
[null]
[objectNode, ., isName, (, )]
[objectNode]
[!, isCallOrApply, (, callSite, )]
[isCallOrApply, (, callSite, )]
[callSite]
[objectNode, ., getString, (, )]
[objectNode]
[!, caller, ., mutatesGlobalState, (, )]
[caller, ., mutatesGlobalState, (, )]
[caller]
[caller, ., setTaintsGlobalState, (, )]
[caller]
[changed]
[true]
[objectNode, !=, null, &&, objectNode, ., isThis, (, )]
[objectNode, !=, null]
[objectNode]
[null]
[objectNode, ., isThis, (, )]
[objectNode]
[!, caller, ., mutatesThis, (, )]
[caller, ., mutatesThis, (, )]
[caller]
[caller, ., setTaintsThis, (, )]
[caller]
[changed]
[true]
[objectNode, !=, null, &&, NodeUtil, ., evaluatesToLocalValue, (, objectNode, ), &&, !, isCallOrApply, (, callSite, )]
[objectNode, !=, null, &&, NodeUtil, ., evaluatesToLocalValue, (, objectNode, )]
[objectNode, !=, null]
[objectNode]
[null]
[NodeUtil, ., evaluatesToLocalValue, (, objectNode, )]
[NodeUtil]
[objectNode]
[!, isCallOrApply, (, callSite, )]
[isCallOrApply, (, callSite, )]
[callSite]
[!, caller, ., mutatesGlobalState, (, )]
[caller, ., mutatesGlobalState, (, )]
[caller]
[caller, ., setTaintsGlobalState, (, )]
[caller]
[changed]
[true]
[changed]
[callSite, ., getFirstChild, (, )]
[callSite]
[!, NodeUtil, ., isGet, (, callTarget, )]
[NodeUtil, ., isGet, (, callTarget, )]
[NodeUtil]
[callTarget]
[null]
[callTarget, ., getLastChild, (, ), ., getString, (, )]
[callTarget, ., getLastChild, (, )]
[callTarget]
[propString, ., equals, (, "call", ), ||, propString, ., equals, (, "apply", )]
[propString, ., equals, (, "call", )]
[propString]
["call"]
[propString, ., equals, (, "apply", )]
[propString]
["apply"]
[callTarget, ., getNext, (, )]
[callTarget]
[callTarget, ., getFirstChild, (, )]
[callTarget]
[callSite, ., getFirstChild, (, )]
[callSite]
[NodeUtil, ., isGet, (, callTarget, )]
[NodeUtil]
[callTarget]
[callTarget, ., getLastChild, (, ), ., getString, (, )]
[callTarget, ., getLastChild, (, )]
[callTarget]
[propString, ., equals, (, "call", ), ||, propString, ., equals, (, "apply", )]
[propString, ., equals, (, "call", )]
[propString]
["call"]
[propString, ., equals, (, "apply", )]
[propString]
["apply"]
[true]
[false]
[Lists, ., newArrayList, (, )]
[Lists]
[Sets, ., newHashSet, (, )]
[Sets]
[Sets, ., newHashSet, (, )]
[Sets]
[Sets, ., newHashSet, (, )]
[Sets]
[false]
[false]
[false]
[false]
[false]
[false]
[false]
[this, ., extern]
[this]
[extern]
[checkInvariant, (, )]
[taintedLocals, ., add, (, var, )]
[taintedLocals]
[var]
[blacklisted]
[null]
[taintedLocals]
[null]
[knownLocals]
[Collections, ., emptySet, (, )]
[Collections]
[blacklisted, ., add, (, var, )]
[blacklisted]
[var]
[!, (, functionThrows, ||, taintsGlobalState, ||, taintsThis, ||, taintsArguments, ||, taintsUnknown, )]
[(, functionThrows, ||, taintsGlobalState, ||, taintsThis, ||, taintsArguments, ||, taintsUnknown, )]
[functionThrows, ||, taintsGlobalState, ||, taintsThis, ||, taintsArguments, ||, taintsUnknown]
[functionThrows, ||, taintsGlobalState, ||, taintsThis, ||, taintsArguments]
[functionThrows, ||, taintsGlobalState, ||, taintsThis]
[functionThrows, ||, taintsGlobalState]
[functionThrows]
[taintsGlobalState]
[taintsThis]
[taintsArguments]
[taintsUnknown]
[!, pureFunction]
[pureFunction]
[pureFunction]
[true]
[checkInvariant, (, )]
[taintsGlobalState]
[true]
[checkInvariant, (, )]
[taintsThis]
[true]
[checkInvariant, (, )]
[taintsArguments]
[true]
[checkInvariant, (, )]
[functionThrows]
[true]
[checkInvariant, (, )]
[taintsUnknown]
[true]
[checkInvariant, (, )]
[taintsReturn]
[true]
[checkInvariant, (, )]
[taintsGlobalState, ||, taintsArguments, ||, taintsUnknown]
[taintsGlobalState, ||, taintsArguments]
[taintsGlobalState]
[taintsArguments]
[taintsUnknown]
[taintsThis]
[functionThrows]
[mayBePure, (, ), ||, mayHaveSideEffects, (, )]
[mayBePure, (, )]
[mayHaveSideEffects, (, )]
[!, invariant]
[invariant]
[new, IllegalStateException, (, "Invariant failed.  ", +, toString, (, ), )]
["Invariant failed.  ", +, toString, (, )]
["Invariant failed.  "]
[toString, (, )]
[callsInFunctionBody, ., add, (, callNode, )]
[callsInFunctionBody]
[callNode]
[callsInFunctionBody]
[Lists, ., newArrayList, (, )]
[Lists]
[extern]
[status, ., add, (, "extern", )]
[status]
["extern"]
[pureFunction]
[status, ., add, (, "pure", )]
[status]
["pure"]
[taintsThis]
[status, ., add, (, "this", )]
[status]
["this"]
[taintsGlobalState]
[status, ., add, (, "global", )]
[status]
["global"]
[functionThrows]
[status, ., add, (, "throw", )]
[status]
["throw"]
[taintsUnknown]
[status, ., add, (, "complex", )]
[status]
["complex"]
["Side effects: ", +, status, ., toString, (, )]
["Side effects: "]
[status, ., toString, (, )]
[status]
[this, ., compiler]
[this]
[compiler]
[this, ., reportPath]
[this]
[reportPath]
[this, ., useNameReferenceGraph]
[this]
[useNameReferenceGraph]
[null]
[useNameReferenceGraph]
[new, NameReferenceGraphConstruction, (, compiler, )]
[compiler]
[graphBuilder, ., process, (, externs, ,, root, )]
[graphBuilder]
[externs]
[root]
[definitionProvider]
[graphBuilder, ., getNameReferenceGraph, (, )]
[graphBuilder]
[new, SimpleDefinitionFinder, (, compiler, )]
[compiler]
[defFinder, ., process, (, externs, ,, root, )]
[defFinder]
[externs]
[root]
[definitionProvider]
[defFinder]
[new, PureFunctionIdentifier, (, compiler, ,, definitionProvider, )]
[compiler]
[definitionProvider]
[pureFunctionIdentifier, ., process, (, externs, ,, root, )]
[pureFunctionIdentifier]
[externs]
[root]
[reportPath, !=, null]
[reportPath]
[null]
[Files, ., write, (, pureFunctionIdentifier, ., getDebugReport, (, ), ,, new, File, (, reportPath, ), ,, Charsets, ., UTF_8, )]
[Files]
[pureFunctionIdentifier, ., getDebugReport, (, )]
[pureFunctionIdentifier]
[new, File, (, reportPath, )]
[reportPath]
[Charsets, ., UTF_8]
[Charsets]
[new, RuntimeException, (, e, )]
[e]
