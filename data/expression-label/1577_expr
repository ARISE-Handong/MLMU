[20120730L]
[this, ., compiler]
[this]
[compiler]
[this, ., data]
[this]
[new, double, [, compiler, ., getSize, (, ), ]]
[compiler, ., getSize, (, )]
[compiler]
[DSCompiler, ., getCompiler, (, parameters, ,, order, )]
[DSCompiler]
[parameters]
[order]
[parameters]
[order]
[this, ., data, [, 0, ]]
[this, ., data]
[this]
[0]
[value]
[parameters]
[order]
[value]
[index, >=, parameters]
[index]
[parameters]
[new, NumberIsTooLargeException, (, index, ,, parameters, ,, false, )]
[index]
[parameters]
[false]
[order, >, 0]
[order]
[0]
[data, [, DSCompiler, ., getCompiler, (, index, ,, order, ), ., getSize, (, ), ]]
[data]
[DSCompiler, ., getCompiler, (, index, ,, order, ), ., getSize, (, )]
[DSCompiler, ., getCompiler, (, index, ,, order, )]
[DSCompiler]
[index]
[order]
[1.0]
[ds1, ., compiler]
[ds1]
[compiler, ., checkCompatibility, (, ds2, ., compiler, )]
[compiler]
[ds2, ., compiler]
[ds2]
[compiler, ., linearCombination, (, a1, ,, ds1, ., data, ,, 0, ,, a2, ,, ds2, ., data, ,, 0, ,, data, ,, 0, )]
[compiler]
[a1]
[ds1, ., data]
[ds1]
[0]
[a2]
[ds2, ., data]
[ds2]
[0]
[data]
[0]
[ds1, ., compiler]
[ds1]
[compiler, ., checkCompatibility, (, ds2, ., compiler, )]
[compiler]
[ds2, ., compiler]
[ds2]
[compiler, ., checkCompatibility, (, ds3, ., compiler, )]
[compiler]
[ds3, ., compiler]
[ds3]
[compiler, ., linearCombination, (, a1, ,, ds1, ., data, ,, 0, ,, a2, ,, ds2, ., data, ,, 0, ,, a3, ,, ds3, ., data, ,, 0, ,, data, ,, 0, )]
[compiler]
[a1]
[ds1, ., data]
[ds1]
[0]
[a2]
[ds2, ., data]
[ds2]
[0]
[a3]
[ds3, ., data]
[ds3]
[0]
[data]
[0]
[ds1, ., compiler]
[ds1]
[compiler, ., checkCompatibility, (, ds2, ., compiler, )]
[compiler]
[ds2, ., compiler]
[ds2]
[compiler, ., checkCompatibility, (, ds3, ., compiler, )]
[compiler]
[ds3, ., compiler]
[ds3]
[compiler, ., checkCompatibility, (, ds4, ., compiler, )]
[compiler]
[ds4, ., compiler]
[ds4]
[compiler, ., linearCombination, (, a1, ,, ds1, ., data, ,, 0, ,, a2, ,, ds2, ., data, ,, 0, ,, a3, ,, ds3, ., data, ,, 0, ,, a4, ,, ds4, ., data, ,, 0, ,, data, ,, 0, )]
[compiler]
[a1]
[ds1, ., data]
[ds1]
[0]
[a2]
[ds2, ., data]
[ds2]
[0]
[a3]
[ds3, ., data]
[ds3]
[0]
[a4]
[ds4, ., data]
[ds4]
[0]
[data]
[0]
[parameters]
[order]
[derivatives, ., length, !=, data, ., length]
[derivatives, ., length]
[derivatives]
[data, ., length]
[data]
[new, DimensionMismatchException, (, derivatives, ., length, ,, data, ., length, )]
[derivatives, ., length]
[derivatives]
[data, ., length]
[data]
[System, ., arraycopy, (, derivatives, ,, 0, ,, data, ,, 0, ,, data, ., length, )]
[System]
[derivatives]
[0]
[data]
[0]
[data, ., length]
[data]
[this, ., compiler]
[this]
[ds, ., compiler]
[ds]
[this, ., data]
[this]
[ds, ., data, ., clone, (, )]
[ds, ., data]
[ds]
[compiler, ., getFreeParameters, (, )]
[compiler]
[compiler, ., getOrder, (, )]
[compiler]
[new, DerivativeStructure, (, getFreeParameters, (, ), ,, getOrder, (, ), ,, c, )]
[getFreeParameters, (, )]
[getOrder, (, )]
[c]
[data, [, 0, ]]
[data]
[0]
[data, [, 0, ]]
[data]
[0]
[data, [, compiler, ., getPartialDerivativeIndex, (, orders, ), ]]
[data]
[compiler, ., getPartialDerivativeIndex, (, orders, )]
[compiler]
[orders]
[data, ., clone, (, )]
[data]
[new, DerivativeStructure, (, this, )]
[this]
[ds, ., data, [, 0, ]]
[ds, ., data]
[ds]
[0]
[a]
[ds]
[compiler, ., checkCompatibility, (, a, ., compiler, )]
[compiler]
[a, ., compiler]
[a]
[new, DerivativeStructure, (, this, )]
[this]
[compiler, ., add, (, data, ,, 0, ,, a, ., data, ,, 0, ,, ds, ., data, ,, 0, )]
[compiler]
[data]
[0]
[a, ., data]
[a]
[0]
[ds, ., data]
[ds]
[0]
[ds]
[add, (, -, a, )]
[-, a]
[a]
[compiler, ., checkCompatibility, (, a, ., compiler, )]
[compiler]
[a, ., compiler]
[a]
[new, DerivativeStructure, (, this, )]
[this]
[compiler, ., subtract, (, data, ,, 0, ,, a, ., data, ,, 0, ,, ds, ., data, ,, 0, )]
[compiler]
[data]
[0]
[a, ., data]
[a]
[0]
[ds, ., data]
[ds]
[0]
[ds]
[multiply, (, (, double, ), n, )]
[(, double, ), n]
[n]
[new, DerivativeStructure, (, this, )]
[this]
[0]
[i, <, ds, ., data, ., length]
[i]
[ds, ., data, ., length]
[ds, ., data]
[ds]
[++, i]
[i]
[ds, ., data, [, i, ]]
[ds, ., data]
[ds]
[i]
[a]
[ds]
[compiler, ., checkCompatibility, (, a, ., compiler, )]
[compiler]
[a, ., compiler]
[a]
[new, DerivativeStructure, (, compiler, )]
[compiler]
[compiler, ., multiply, (, data, ,, 0, ,, a, ., data, ,, 0, ,, result, ., data, ,, 0, )]
[compiler]
[data]
[0]
[a, ., data]
[a]
[0]
[result, ., data]
[result]
[0]
[result]
[new, DerivativeStructure, (, this, )]
[this]
[0]
[i, <, ds, ., data, ., length]
[i]
[ds, ., data, ., length]
[ds, ., data]
[ds]
[++, i]
[i]
[ds, ., data, [, i, ]]
[ds, ., data]
[ds]
[i]
[a]
[ds]
[compiler, ., checkCompatibility, (, a, ., compiler, )]
[compiler]
[a, ., compiler]
[a]
[new, DerivativeStructure, (, compiler, )]
[compiler]
[compiler, ., divide, (, data, ,, 0, ,, a, ., data, ,, 0, ,, result, ., data, ,, 0, )]
[compiler]
[data]
[0]
[a, ., data]
[a]
[0]
[result, ., data]
[result]
[0]
[result]
[new, DerivativeStructure, (, this, )]
[this]
[ds, ., data, [, 0, ]]
[ds, ., data]
[ds]
[0]
[FastMath, ., IEEEremainder, (, ds, ., data, [, 0, ], ,, a, )]
[FastMath]
[ds, ., data, [, 0, ]]
[ds, ., data]
[ds]
[0]
[a]
[ds]
[compiler, ., checkCompatibility, (, a, ., compiler, )]
[compiler]
[a, ., compiler]
[a]
[new, DerivativeStructure, (, compiler, )]
[compiler]
[compiler, ., remainder, (, data, ,, 0, ,, a, ., data, ,, 0, ,, result, ., data, ,, 0, )]
[compiler]
[data]
[0]
[a, ., data]
[a]
[0]
[result, ., data]
[result]
[0]
[result]
[new, DerivativeStructure, (, compiler, )]
[compiler]
[0]
[i, <, ds, ., data, ., length]
[i]
[ds, ., data, ., length]
[ds, ., data]
[ds]
[++, i]
[i]
[ds, ., data, [, i, ]]
[ds, ., data]
[ds]
[i]
[-, data, [, i, ]]
[data, [, i, ]]
[data]
[i]
[ds]
[Double, ., doubleToLongBits, (, data, [, 0, ], ), <, 0]
[Double, ., doubleToLongBits, (, data, [, 0, ], )]
[Double]
[data, [, 0, ]]
[data]
[0]
[0]
[negate, (, )]
[this]
[new, DerivativeStructure, (, compiler, ., getFreeParameters, (, ), ,, compiler, ., getOrder, (, ), ,, FastMath, ., ceil, (, data, [, 0, ], ), )]
[compiler, ., getFreeParameters, (, )]
[compiler]
[compiler, ., getOrder, (, )]
[compiler]
[FastMath, ., ceil, (, data, [, 0, ], )]
[FastMath]
[data, [, 0, ]]
[data]
[0]
[new, DerivativeStructure, (, compiler, ., getFreeParameters, (, ), ,, compiler, ., getOrder, (, ), ,, FastMath, ., floor, (, data, [, 0, ], ), )]
[compiler, ., getFreeParameters, (, )]
[compiler]
[compiler, ., getOrder, (, )]
[compiler]
[FastMath, ., floor, (, data, [, 0, ], )]
[FastMath]
[data, [, 0, ]]
[data]
[0]
[new, DerivativeStructure, (, compiler, ., getFreeParameters, (, ), ,, compiler, ., getOrder, (, ), ,, FastMath, ., rint, (, data, [, 0, ], ), )]
[compiler, ., getFreeParameters, (, )]
[compiler]
[compiler, ., getOrder, (, )]
[compiler]
[FastMath, ., rint, (, data, [, 0, ], )]
[FastMath]
[data, [, 0, ]]
[data]
[0]
[FastMath, ., round, (, data, [, 0, ], )]
[FastMath]
[data, [, 0, ]]
[data]
[0]
[new, DerivativeStructure, (, compiler, ., getFreeParameters, (, ), ,, compiler, ., getOrder, (, ), ,, FastMath, ., signum, (, data, [, 0, ], ), )]
[compiler, ., getFreeParameters, (, )]
[compiler]
[compiler, ., getOrder, (, )]
[compiler]
[FastMath, ., signum, (, data, [, 0, ], )]
[FastMath]
[data, [, 0, ]]
[data]
[0]
[Double, ., doubleToLongBits, (, data, [, 0, ], )]
[Double]
[data, [, 0, ]]
[data]
[0]
[Double, ., doubleToLongBits, (, sign, ., data, [, 0, ], )]
[Double]
[sign, ., data, [, 0, ]]
[sign, ., data]
[sign]
[0]
[(, m, >=, 0, &&, s, >=, 0, ), ||, (, m, <, 0, &&, s, <, 0, )]
[(, m, >=, 0, &&, s, >=, 0, )]
[m, >=, 0, &&, s, >=, 0]
[m, >=, 0]
[m]
[0]
[s, >=, 0]
[s]
[0]
[(, m, <, 0, &&, s, <, 0, )]
[m, <, 0, &&, s, <, 0]
[m, <, 0]
[m]
[0]
[s, <, 0]
[s]
[0]
[this]
[negate, (, )]
[Double, ., doubleToLongBits, (, data, [, 0, ], )]
[Double]
[data, [, 0, ]]
[data]
[0]
[Double, ., doubleToLongBits, (, sign, )]
[Double]
[sign]
[(, m, >=, 0, &&, s, >=, 0, ), ||, (, m, <, 0, &&, s, <, 0, )]
[(, m, >=, 0, &&, s, >=, 0, )]
[m, >=, 0, &&, s, >=, 0]
[m, >=, 0]
[m]
[0]
[s, >=, 0]
[s]
[0]
[(, m, <, 0, &&, s, <, 0, )]
[m, <, 0, &&, s, <, 0]
[m, <, 0]
[m]
[0]
[s, <, 0]
[s]
[0]
[this]
[negate, (, )]
[FastMath, ., getExponent, (, data, [, 0, ], )]
[FastMath]
[data, [, 0, ]]
[data]
[0]
[new, DerivativeStructure, (, compiler, )]
[compiler]
[0]
[i, <, ds, ., data, ., length]
[i]
[ds, ., data, ., length]
[ds, ., data]
[ds]
[++, i]
[i]
[ds, ., data, [, i, ]]
[ds, ., data]
[ds]
[i]
[FastMath, ., scalb, (, data, [, i, ], ,, n, )]
[FastMath]
[data, [, i, ]]
[data]
[i]
[n]
[ds]
[compiler, ., checkCompatibility, (, y, ., compiler, )]
[compiler]
[y, ., compiler]
[y]
[Double, ., isInfinite, (, data, [, 0, ], ), ||, Double, ., isInfinite, (, y, ., data, [, 0, ], )]
[Double, ., isInfinite, (, data, [, 0, ], )]
[Double]
[data, [, 0, ]]
[data]
[0]
[Double, ., isInfinite, (, y, ., data, [, 0, ], )]
[Double]
[y, ., data, [, 0, ]]
[y, ., data]
[y]
[0]
[new, DerivativeStructure, (, compiler, ., getFreeParameters, (, ), ,, compiler, ., getFreeParameters, (, ), ,, Double, ., POSITIVE_INFINITY, )]
[compiler, ., getFreeParameters, (, )]
[compiler]
[compiler, ., getFreeParameters, (, )]
[compiler]
[Double, ., POSITIVE_INFINITY]
[Double]
[Double, ., isNaN, (, data, [, 0, ], ), ||, Double, ., isNaN, (, y, ., data, [, 0, ], )]
[Double, ., isNaN, (, data, [, 0, ], )]
[Double]
[data, [, 0, ]]
[data]
[0]
[Double, ., isNaN, (, y, ., data, [, 0, ], )]
[Double]
[y, ., data, [, 0, ]]
[y, ., data]
[y]
[0]
[new, DerivativeStructure, (, compiler, ., getFreeParameters, (, ), ,, compiler, ., getFreeParameters, (, ), ,, Double, ., NaN, )]
[compiler, ., getFreeParameters, (, )]
[compiler]
[compiler, ., getFreeParameters, (, )]
[compiler]
[Double, ., NaN]
[Double]
[getExponent, (, )]
[y, ., getExponent, (, )]
[y]
[expX, >, expY, +, 27]
[expX]
[expY, +, 27]
[expY]
[27]
[abs, (, )]
[expY, >, expX, +, 27]
[expY]
[expX, +, 27]
[expX]
[27]
[y, ., abs, (, )]
[y]
[(, expX, +, expY, ), /, 2]
[(, expX, +, expY, )]
[expX, +, expY]
[expX]
[expY]
[2]
[scalb, (, -, middleExp, )]
[-, middleExp]
[middleExp]
[y, ., scalb, (, -, middleExp, )]
[y]
[-, middleExp]
[middleExp]
[scaledX, ., multiply, (, scaledX, ), ., add, (, scaledY, ., multiply, (, scaledY, ), ), ., sqrt, (, )]
[scaledX, ., multiply, (, scaledX, ), ., add, (, scaledY, ., multiply, (, scaledY, ), )]
[scaledX, ., multiply, (, scaledX, )]
[scaledX]
[scaledX]
[scaledY, ., multiply, (, scaledY, )]
[scaledY]
[scaledY]
[scaledH, ., scalb, (, middleExp, )]
[scaledH]
[middleExp]
[x, ., hypot, (, y, )]
[x]
[y]
[f, ., length, !=, getOrder, (, ), +, 1]
[f, ., length]
[f]
[getOrder, (, ), +, 1]
[getOrder, (, )]
[1]
[new, DimensionMismatchException, (, f, ., length, ,, getOrder, (, ), +, 1, )]
[f, ., length]
[f]
[getOrder, (, ), +, 1]
[getOrder, (, )]
[1]
[new, DerivativeStructure, (, compiler, )]
[compiler]
[compiler, ., compose, (, data, ,, 0, ,, f, ,, result, ., data, ,, 0, )]
[compiler]
[data]
[0]
[f]
[result, ., data]
[result]
[0]
[result]
[new, DerivativeStructure, (, compiler, )]
[compiler]
[compiler, ., pow, (, data, ,, 0, ,, -, 1, ,, result, ., data, ,, 0, )]
[compiler]
[data]
[0]
[-, 1]
[1]
[result, ., data]
[result]
[0]
[result]
[rootN, (, 2, )]
[2]
[rootN, (, 3, )]
[3]
[new, DerivativeStructure, (, compiler, )]
[compiler]
[compiler, ., rootN, (, data, ,, 0, ,, n, ,, result, ., data, ,, 0, )]
[compiler]
[data]
[0]
[n]
[result, ., data]
[result]
[0]
[result]
[new, Field, <, DerivativeStructure, >, (, ), {, public, DerivativeStructure, getZero, (, ), {, return, new, DerivativeStructure, (, compiler, ., getFreeParameters, (, ), ,, compiler, ., getOrder, (, ), ,, 0.0, ), ;, }, public, DerivativeStructure, getOne, (, ), {, return, new, DerivativeStructure, (, compiler, ., getFreeParameters, (, ), ,, compiler, ., getOrder, (, ), ,, 1.0, ), ;, }, public, Class, <, ?, extends, FieldElement, <, DerivativeStructure, >, >, getRuntimeClass, (, ), {, return, DerivativeStructure, ., class, ;, }, }]
[new, DerivativeStructure, (, compiler, ., getFreeParameters, (, ), ,, compiler, ., getOrder, (, ), ,, 0.0, )]
[compiler, ., getFreeParameters, (, )]
[compiler]
[compiler, ., getOrder, (, )]
[compiler]
[0.0]
[new, DerivativeStructure, (, compiler, ., getFreeParameters, (, ), ,, compiler, ., getOrder, (, ), ,, 1.0, )]
[compiler, ., getFreeParameters, (, )]
[compiler]
[compiler, ., getOrder, (, )]
[compiler]
[1.0]
[DerivativeStructure, ., class]
[new, DerivativeStructure, (, x, ., compiler, )]
[x, ., compiler]
[x]
[x, ., compiler, ., pow, (, a, ,, x, ., data, ,, 0, ,, result, ., data, ,, 0, )]
[x, ., compiler]
[x]
[a]
[x, ., data]
[x]
[0]
[result, ., data]
[result]
[0]
[result]
[new, DerivativeStructure, (, compiler, )]
[compiler]
[compiler, ., pow, (, data, ,, 0, ,, p, ,, result, ., data, ,, 0, )]
[compiler]
[data]
[0]
[p]
[result, ., data]
[result]
[0]
[result]
[new, DerivativeStructure, (, compiler, )]
[compiler]
[compiler, ., pow, (, data, ,, 0, ,, n, ,, result, ., data, ,, 0, )]
[compiler]
[data]
[0]
[n]
[result, ., data]
[result]
[0]
[result]
[compiler, ., checkCompatibility, (, e, ., compiler, )]
[compiler]
[e, ., compiler]
[e]
[new, DerivativeStructure, (, compiler, )]
[compiler]
[compiler, ., pow, (, data, ,, 0, ,, e, ., data, ,, 0, ,, result, ., data, ,, 0, )]
[compiler]
[data]
[0]
[e, ., data]
[e]
[0]
[result, ., data]
[result]
[0]
[result]
[new, DerivativeStructure, (, compiler, )]
[compiler]
[compiler, ., exp, (, data, ,, 0, ,, result, ., data, ,, 0, )]
[compiler]
[data]
[0]
[result, ., data]
[result]
[0]
[result]
[new, DerivativeStructure, (, compiler, )]
[compiler]
[compiler, ., expm1, (, data, ,, 0, ,, result, ., data, ,, 0, )]
[compiler]
[data]
[0]
[result, ., data]
[result]
[0]
[result]
[new, DerivativeStructure, (, compiler, )]
[compiler]
[compiler, ., log, (, data, ,, 0, ,, result, ., data, ,, 0, )]
[compiler]
[data]
[0]
[result, ., data]
[result]
[0]
[result]
[new, DerivativeStructure, (, compiler, )]
[compiler]
[compiler, ., log1p, (, data, ,, 0, ,, result, ., data, ,, 0, )]
[compiler]
[data]
[0]
[result, ., data]
[result]
[0]
[result]
[new, DerivativeStructure, (, compiler, )]
[compiler]
[compiler, ., log10, (, data, ,, 0, ,, result, ., data, ,, 0, )]
[compiler]
[data]
[0]
[result, ., data]
[result]
[0]
[result]
[new, DerivativeStructure, (, compiler, )]
[compiler]
[compiler, ., cos, (, data, ,, 0, ,, result, ., data, ,, 0, )]
[compiler]
[data]
[0]
[result, ., data]
[result]
[0]
[result]
[new, DerivativeStructure, (, compiler, )]
[compiler]
[compiler, ., sin, (, data, ,, 0, ,, result, ., data, ,, 0, )]
[compiler]
[data]
[0]
[result, ., data]
[result]
[0]
[result]
[new, DerivativeStructure, (, compiler, )]
[compiler]
[compiler, ., tan, (, data, ,, 0, ,, result, ., data, ,, 0, )]
[compiler]
[data]
[0]
[result, ., data]
[result]
[0]
[result]
[new, DerivativeStructure, (, compiler, )]
[compiler]
[compiler, ., acos, (, data, ,, 0, ,, result, ., data, ,, 0, )]
[compiler]
[data]
[0]
[result, ., data]
[result]
[0]
[result]
[new, DerivativeStructure, (, compiler, )]
[compiler]
[compiler, ., asin, (, data, ,, 0, ,, result, ., data, ,, 0, )]
[compiler]
[data]
[0]
[result, ., data]
[result]
[0]
[result]
[new, DerivativeStructure, (, compiler, )]
[compiler]
[compiler, ., atan, (, data, ,, 0, ,, result, ., data, ,, 0, )]
[compiler]
[data]
[0]
[result, ., data]
[result]
[0]
[result]
[compiler, ., checkCompatibility, (, x, ., compiler, )]
[compiler]
[x, ., compiler]
[x]
[new, DerivativeStructure, (, compiler, )]
[compiler]
[compiler, ., atan2, (, data, ,, 0, ,, x, ., data, ,, 0, ,, result, ., data, ,, 0, )]
[compiler]
[data]
[0]
[x, ., data]
[x]
[0]
[result, ., data]
[result]
[0]
[result]
[y, ., atan2, (, x, )]
[y]
[x]
[new, DerivativeStructure, (, compiler, )]
[compiler]
[compiler, ., cosh, (, data, ,, 0, ,, result, ., data, ,, 0, )]
[compiler]
[data]
[0]
[result, ., data]
[result]
[0]
[result]
[new, DerivativeStructure, (, compiler, )]
[compiler]
[compiler, ., sinh, (, data, ,, 0, ,, result, ., data, ,, 0, )]
[compiler]
[data]
[0]
[result, ., data]
[result]
[0]
[result]
[new, DerivativeStructure, (, compiler, )]
[compiler]
[compiler, ., tanh, (, data, ,, 0, ,, result, ., data, ,, 0, )]
[compiler]
[data]
[0]
[result, ., data]
[result]
[0]
[result]
[new, DerivativeStructure, (, compiler, )]
[compiler]
[compiler, ., acosh, (, data, ,, 0, ,, result, ., data, ,, 0, )]
[compiler]
[data]
[0]
[result, ., data]
[result]
[0]
[result]
[new, DerivativeStructure, (, compiler, )]
[compiler]
[compiler, ., asinh, (, data, ,, 0, ,, result, ., data, ,, 0, )]
[compiler]
[data]
[0]
[result, ., data]
[result]
[0]
[result]
[new, DerivativeStructure, (, compiler, )]
[compiler]
[compiler, ., atanh, (, data, ,, 0, ,, result, ., data, ,, 0, )]
[compiler]
[data]
[0]
[result, ., data]
[result]
[0]
[result]
[new, DerivativeStructure, (, compiler, )]
[compiler]
[0]
[i, <, ds, ., data, ., length]
[i]
[ds, ., data, ., length]
[ds, ., data]
[ds]
[++, i]
[i]
[ds, ., data, [, i, ]]
[ds, ., data]
[ds]
[i]
[FastMath, ., toDegrees, (, data, [, i, ], )]
[FastMath]
[data, [, i, ]]
[data]
[i]
[ds]
[new, DerivativeStructure, (, compiler, )]
[compiler]
[0]
[i, <, ds, ., data, ., length]
[i]
[ds, ., data, ., length]
[ds, ., data]
[ds]
[++, i]
[i]
[ds, ., data, [, i, ]]
[ds, ., data]
[ds]
[i]
[FastMath, ., toRadians, (, data, [, i, ], )]
[FastMath]
[data, [, i, ]]
[data]
[i]
[ds]
[compiler, ., taylor, (, data, ,, 0, ,, delta, )]
[compiler]
[data]
[0]
[delta]
[new, double, [, a, ., length, ]]
[a, ., length]
[a]
[0]
[i, <, a, ., length]
[i]
[a, ., length]
[a]
[++, i]
[i]
[aDouble, [, i, ]]
[aDouble]
[i]
[a, [, i, ], ., getValue, (, )]
[a, [, i, ]]
[a]
[i]
[new, double, [, b, ., length, ]]
[b, ., length]
[b]
[0]
[i, <, b, ., length]
[i]
[b, ., length]
[b]
[++, i]
[i]
[bDouble, [, i, ]]
[bDouble]
[i]
[b, [, i, ], ., getValue, (, )]
[b, [, i, ]]
[b]
[i]
[MathArrays, ., linearCombination, (, aDouble, ,, bDouble, )]
[MathArrays]
[aDouble]
[bDouble]
[a, [, 0, ], ., getField, (, ), ., getZero, (, )]
[a, [, 0, ], ., getField, (, )]
[a, [, 0, ]]
[a]
[0]
[0]
[i, <, a, ., length]
[i]
[a, ., length]
[a]
[++, i]
[i]
[simpleValue]
[simpleValue, ., add, (, a, [, i, ], ., multiply, (, b, [, i, ], ), )]
[simpleValue]
[a, [, i, ], ., multiply, (, b, [, i, ], )]
[a, [, i, ]]
[a]
[i]
[b, [, i, ]]
[b]
[i]
[simpleValue, ., getAllDerivatives, (, )]
[simpleValue]
[all, [, 0, ]]
[all]
[0]
[accurateValue]
[new, DerivativeStructure, (, simpleValue, ., getFreeParameters, (, ), ,, simpleValue, ., getOrder, (, ), ,, all, )]
[simpleValue, ., getFreeParameters, (, )]
[simpleValue]
[simpleValue, ., getOrder, (, )]
[simpleValue]
[all]
[new, double, [, b, ., length, ]]
[b, ., length]
[b]
[0]
[i, <, b, ., length]
[i]
[b, ., length]
[b]
[++, i]
[i]
[bDouble, [, i, ]]
[bDouble]
[i]
[b, [, i, ], ., getValue, (, )]
[b, [, i, ]]
[b]
[i]
[MathArrays, ., linearCombination, (, a, ,, bDouble, )]
[MathArrays]
[a]
[bDouble]
[b, [, 0, ], ., getField, (, ), ., getZero, (, )]
[b, [, 0, ], ., getField, (, )]
[b, [, 0, ]]
[b]
[0]
[0]
[i, <, a, ., length]
[i]
[a, ., length]
[a]
[++, i]
[i]
[simpleValue]
[simpleValue, ., add, (, b, [, i, ], ., multiply, (, a, [, i, ], ), )]
[simpleValue]
[b, [, i, ], ., multiply, (, a, [, i, ], )]
[b, [, i, ]]
[b]
[i]
[a, [, i, ]]
[a]
[i]
[simpleValue, ., getAllDerivatives, (, )]
[simpleValue]
[all, [, 0, ]]
[all]
[0]
[accurateValue]
[new, DerivativeStructure, (, simpleValue, ., getFreeParameters, (, ), ,, simpleValue, ., getOrder, (, ), ,, all, )]
[simpleValue, ., getFreeParameters, (, )]
[simpleValue]
[simpleValue, ., getOrder, (, )]
[simpleValue]
[all]
[MathArrays, ., linearCombination, (, a1, ., getValue, (, ), ,, b1, ., getValue, (, ), ,, a2, ., getValue, (, ), ,, b2, ., getValue, (, ), )]
[MathArrays]
[a1, ., getValue, (, )]
[a1]
[b1, ., getValue, (, )]
[b1]
[a2, ., getValue, (, )]
[a2]
[b2, ., getValue, (, )]
[b2]
[a1, ., multiply, (, b1, ), ., add, (, a2, ., multiply, (, b2, ), )]
[a1, ., multiply, (, b1, )]
[a1]
[b1]
[a2, ., multiply, (, b2, )]
[a2]
[b2]
[simpleValue, ., getAllDerivatives, (, )]
[simpleValue]
[all, [, 0, ]]
[all]
[0]
[accurateValue]
[new, DerivativeStructure, (, getFreeParameters, (, ), ,, getOrder, (, ), ,, all, )]
[getFreeParameters, (, )]
[getOrder, (, )]
[all]
[MathArrays, ., linearCombination, (, a1, ,, b1, ., getValue, (, ), ,, a2, ,, b2, ., getValue, (, ), )]
[MathArrays]
[a1]
[b1, ., getValue, (, )]
[b1]
[a2]
[b2, ., getValue, (, )]
[b2]
[b1, ., multiply, (, a1, ), ., add, (, b2, ., multiply, (, a2, ), )]
[b1, ., multiply, (, a1, )]
[b1]
[a1]
[b2, ., multiply, (, a2, )]
[b2]
[a2]
[simpleValue, ., getAllDerivatives, (, )]
[simpleValue]
[all, [, 0, ]]
[all]
[0]
[accurateValue]
[new, DerivativeStructure, (, getFreeParameters, (, ), ,, getOrder, (, ), ,, all, )]
[getFreeParameters, (, )]
[getOrder, (, )]
[all]
[MathArrays, ., linearCombination, (, a1, ., getValue, (, ), ,, b1, ., getValue, (, ), ,, a2, ., getValue, (, ), ,, b2, ., getValue, (, ), ,, a3, ., getValue, (, ), ,, b3, ., getValue, (, ), )]
[MathArrays]
[a1, ., getValue, (, )]
[a1]
[b1, ., getValue, (, )]
[b1]
[a2, ., getValue, (, )]
[a2]
[b2, ., getValue, (, )]
[b2]
[a3, ., getValue, (, )]
[a3]
[b3, ., getValue, (, )]
[b3]
[a1, ., multiply, (, b1, ), ., add, (, a2, ., multiply, (, b2, ), ), ., add, (, a3, ., multiply, (, b3, ), )]
[a1, ., multiply, (, b1, ), ., add, (, a2, ., multiply, (, b2, ), )]
[a1, ., multiply, (, b1, )]
[a1]
[b1]
[a2, ., multiply, (, b2, )]
[a2]
[b2]
[a3, ., multiply, (, b3, )]
[a3]
[b3]
[simpleValue, ., getAllDerivatives, (, )]
[simpleValue]
[all, [, 0, ]]
[all]
[0]
[accurateValue]
[new, DerivativeStructure, (, getFreeParameters, (, ), ,, getOrder, (, ), ,, all, )]
[getFreeParameters, (, )]
[getOrder, (, )]
[all]
[MathArrays, ., linearCombination, (, a1, ,, b1, ., getValue, (, ), ,, a2, ,, b2, ., getValue, (, ), ,, a3, ,, b3, ., getValue, (, ), )]
[MathArrays]
[a1]
[b1, ., getValue, (, )]
[b1]
[a2]
[b2, ., getValue, (, )]
[b2]
[a3]
[b3, ., getValue, (, )]
[b3]
[b1, ., multiply, (, a1, ), ., add, (, b2, ., multiply, (, a2, ), ), ., add, (, b3, ., multiply, (, a3, ), )]
[b1, ., multiply, (, a1, ), ., add, (, b2, ., multiply, (, a2, ), )]
[b1, ., multiply, (, a1, )]
[b1]
[a1]
[b2, ., multiply, (, a2, )]
[b2]
[a2]
[b3, ., multiply, (, a3, )]
[b3]
[a3]
[simpleValue, ., getAllDerivatives, (, )]
[simpleValue]
[all, [, 0, ]]
[all]
[0]
[accurateValue]
[new, DerivativeStructure, (, getFreeParameters, (, ), ,, getOrder, (, ), ,, all, )]
[getFreeParameters, (, )]
[getOrder, (, )]
[all]
[MathArrays, ., linearCombination, (, a1, ., getValue, (, ), ,, b1, ., getValue, (, ), ,, a2, ., getValue, (, ), ,, b2, ., getValue, (, ), ,, a3, ., getValue, (, ), ,, b3, ., getValue, (, ), ,, a4, ., getValue, (, ), ,, b4, ., getValue, (, ), )]
[MathArrays]
[a1, ., getValue, (, )]
[a1]
[b1, ., getValue, (, )]
[b1]
[a2, ., getValue, (, )]
[a2]
[b2, ., getValue, (, )]
[b2]
[a3, ., getValue, (, )]
[a3]
[b3, ., getValue, (, )]
[b3]
[a4, ., getValue, (, )]
[a4]
[b4, ., getValue, (, )]
[b4]
[a1, ., multiply, (, b1, ), ., add, (, a2, ., multiply, (, b2, ), ), ., add, (, a3, ., multiply, (, b3, ), ), ., add, (, a4, ., multiply, (, b4, ), )]
[a1, ., multiply, (, b1, ), ., add, (, a2, ., multiply, (, b2, ), ), ., add, (, a3, ., multiply, (, b3, ), )]
[a1, ., multiply, (, b1, ), ., add, (, a2, ., multiply, (, b2, ), )]
[a1, ., multiply, (, b1, )]
[a1]
[b1]
[a2, ., multiply, (, b2, )]
[a2]
[b2]
[a3, ., multiply, (, b3, )]
[a3]
[b3]
[a4, ., multiply, (, b4, )]
[a4]
[b4]
[simpleValue, ., getAllDerivatives, (, )]
[simpleValue]
[all, [, 0, ]]
[all]
[0]
[accurateValue]
[new, DerivativeStructure, (, getFreeParameters, (, ), ,, getOrder, (, ), ,, all, )]
[getFreeParameters, (, )]
[getOrder, (, )]
[all]
[MathArrays, ., linearCombination, (, a1, ,, b1, ., getValue, (, ), ,, a2, ,, b2, ., getValue, (, ), ,, a3, ,, b3, ., getValue, (, ), ,, a4, ,, b4, ., getValue, (, ), )]
[MathArrays]
[a1]
[b1, ., getValue, (, )]
[b1]
[a2]
[b2, ., getValue, (, )]
[b2]
[a3]
[b3, ., getValue, (, )]
[b3]
[a4]
[b4, ., getValue, (, )]
[b4]
[b1, ., multiply, (, a1, ), ., add, (, b2, ., multiply, (, a2, ), ), ., add, (, b3, ., multiply, (, a3, ), ), ., add, (, b4, ., multiply, (, a4, ), )]
[b1, ., multiply, (, a1, ), ., add, (, b2, ., multiply, (, a2, ), ), ., add, (, b3, ., multiply, (, a3, ), )]
[b1, ., multiply, (, a1, ), ., add, (, b2, ., multiply, (, a2, ), )]
[b1, ., multiply, (, a1, )]
[b1]
[a1]
[b2, ., multiply, (, a2, )]
[b2]
[a2]
[b3, ., multiply, (, a3, )]
[b3]
[a3]
[b4, ., multiply, (, a4, )]
[b4]
[a4]
[simpleValue, ., getAllDerivatives, (, )]
[simpleValue]
[all, [, 0, ]]
[all]
[0]
[accurateValue]
[new, DerivativeStructure, (, getFreeParameters, (, ), ,, getOrder, (, ), ,, all, )]
[getFreeParameters, (, )]
[getOrder, (, )]
[all]
[this, ==, other]
[this]
[other]
[true]
[other, instanceof, DerivativeStructure]
[other]
[(, DerivativeStructure, ), other]
[other]
[(, getFreeParameters, (, ), ==, rhs, ., getFreeParameters, (, ), ), &&, (, getOrder, (, ), ==, rhs, ., getOrder, (, ), ), &&, MathArrays, ., equals, (, data, ,, rhs, ., data, )]
[(, getFreeParameters, (, ), ==, rhs, ., getFreeParameters, (, ), ), &&, (, getOrder, (, ), ==, rhs, ., getOrder, (, ), )]
[(, getFreeParameters, (, ), ==, rhs, ., getFreeParameters, (, ), )]
[getFreeParameters, (, ), ==, rhs, ., getFreeParameters, (, )]
[getFreeParameters, (, )]
[rhs, ., getFreeParameters, (, )]
[rhs]
[(, getOrder, (, ), ==, rhs, ., getOrder, (, ), )]
[getOrder, (, ), ==, rhs, ., getOrder, (, )]
[getOrder, (, )]
[rhs, ., getOrder, (, )]
[rhs]
[MathArrays, ., equals, (, data, ,, rhs, ., data, )]
[MathArrays]
[data]
[rhs, ., data]
[rhs]
[false]
[227, +, 229, *, getFreeParameters, (, ), +, 233, *, getOrder, (, ), +, 239, *, MathUtils, ., hash, (, data, )]
[227, +, 229, *, getFreeParameters, (, ), +, 233, *, getOrder, (, )]
[227, +, 229, *, getFreeParameters, (, )]
[227]
[229, *, getFreeParameters, (, )]
[229]
[getFreeParameters, (, )]
[233, *, getOrder, (, )]
[233]
[getOrder, (, )]
[239, *, MathUtils, ., hash, (, data, )]
[239]
[MathUtils, ., hash, (, data, )]
[MathUtils]
[data]
[new, DataTransferObject, (, compiler, ., getFreeParameters, (, ), ,, compiler, ., getOrder, (, ), ,, data, )]
[compiler, ., getFreeParameters, (, )]
[compiler]
[compiler, ., getOrder, (, )]
[compiler]
[data]
[20120730L]
[this, ., variables]
[this]
[variables]
[this, ., order]
[this]
[order]
[this, ., data]
[this]
[data]
[new, DerivativeStructure, (, variables, ,, order, ,, data, )]
[variables]
[order]
[data]
