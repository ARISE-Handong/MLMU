[numberOfPoints, ==, 1]
[numberOfPoints]
[1]
[new, Pair, <, Double, [, ], ,, Double, [, ], >, (, new, Double, [, ], {, 0d, }, ,, new, Double, [, ], {, 2d, }, )]
[new, Double, [, ], {, 0d, }]
[{, 0d, }]
[0d]
[new, Double, [, ], {, 2d, }]
[{, 2d, }]
[2d]
[getRuleInternal, (, numberOfPoints, -, 1, ), ., getFirst, (, )]
[getRuleInternal, (, numberOfPoints, -, 1, )]
[numberOfPoints, -, 1]
[numberOfPoints]
[1]
[new, Double, [, numberOfPoints, ]]
[numberOfPoints]
[new, Double, [, numberOfPoints, ]]
[numberOfPoints]
[numberOfPoints, /, 2]
[numberOfPoints]
[2]
[0]
[i, <, iMax]
[i]
[iMax]
[i, ++]
[i]
[(, i, ==, 0, ), ?, -, 1, :, previousPoints, [, i, -, 1, ], ., doubleValue, (, )]
[(, i, ==, 0, )]
[i, ==, 0]
[i]
[0]
[-, 1]
[1]
[previousPoints, [, i, -, 1, ], ., doubleValue, (, )]
[previousPoints, [, i, -, 1, ]]
[previousPoints]
[i, -, 1]
[i]
[1]
[(, iMax, ==, 1, ), ?, 1, :, previousPoints, [, i, ], ., doubleValue, (, )]
[(, iMax, ==, 1, )]
[iMax, ==, 1]
[iMax]
[1]
[1]
[previousPoints, [, i, ], ., doubleValue, (, )]
[previousPoints, [, i, ]]
[previousPoints]
[i]
[1]
[a]
[1]
[b]
[1]
[j, <, numberOfPoints]
[j]
[numberOfPoints]
[j, ++]
[j]
[2, *, j, +, 1]
[2, *, j]
[2]
[j]
[1]
[j, +, 1]
[j]
[1]
[(, two_j_p_1, *, a, *, pa, -, j, *, pma, ), /, j_p_1]
[(, two_j_p_1, *, a, *, pa, -, j, *, pma, )]
[two_j_p_1, *, a, *, pa, -, j, *, pma]
[two_j_p_1, *, a, *, pa]
[two_j_p_1, *, a]
[two_j_p_1]
[a]
[pa]
[j, *, pma]
[j]
[pma]
[j_p_1]
[(, two_j_p_1, *, b, *, pb, -, j, *, pmb, ), /, j_p_1]
[(, two_j_p_1, *, b, *, pb, -, j, *, pmb, )]
[two_j_p_1, *, b, *, pb, -, j, *, pmb]
[two_j_p_1, *, b, *, pb]
[two_j_p_1, *, b]
[two_j_p_1]
[b]
[pb]
[j, *, pmb]
[j]
[pmb]
[j_p_1]
[pma]
[pa]
[pa]
[ppa]
[pmb]
[pb]
[pb]
[ppb]
[0.5, *, (, a, +, b, )]
[0.5]
[(, a, +, b, )]
[a, +, b]
[a]
[b]
[1]
[c]
[false]
[!, done]
[done]
[done]
[b, -, a, <=, Math, ., ulp, (, c, )]
[b, -, a]
[b]
[a]
[Math, ., ulp, (, c, )]
[Math]
[c]
[pmc]
[1]
[pc]
[c]
[1]
[j, <, numberOfPoints]
[j]
[numberOfPoints]
[j, ++]
[j]
[(, (, 2, *, j, +, 1, ), *, c, *, pc, -, j, *, pmc, ), /, (, j, +, 1, )]
[(, (, 2, *, j, +, 1, ), *, c, *, pc, -, j, *, pmc, )]
[(, 2, *, j, +, 1, ), *, c, *, pc, -, j, *, pmc]
[(, 2, *, j, +, 1, ), *, c, *, pc]
[(, 2, *, j, +, 1, ), *, c]
[(, 2, *, j, +, 1, )]
[2, *, j, +, 1]
[2, *, j]
[2]
[j]
[1]
[c]
[pc]
[j, *, pmc]
[j]
[pmc]
[(, j, +, 1, )]
[j, +, 1]
[j]
[1]
[pmc]
[pc]
[pc]
[ppc]
[!, done]
[done]
[pa, *, pc, <=, 0]
[pa, *, pc]
[pa]
[pc]
[0]
[b]
[c]
[pmb]
[pmc]
[pb]
[pc]
[a]
[c]
[pma]
[pmc]
[pa]
[pc]
[c]
[0.5, *, (, a, +, b, )]
[0.5]
[(, a, +, b, )]
[a, +, b]
[a]
[b]
[numberOfPoints, *, (, pmc, -, c, *, pc, )]
[numberOfPoints]
[(, pmc, -, c, *, pc, )]
[pmc, -, c, *, pc]
[pmc]
[c, *, pc]
[c]
[pc]
[2, *, (, 1, -, c, *, c, ), /, (, d, *, d, )]
[2, *, (, 1, -, c, *, c, )]
[2]
[(, 1, -, c, *, c, )]
[1, -, c, *, c]
[1]
[c, *, c]
[c]
[c]
[(, d, *, d, )]
[d, *, d]
[d]
[d]
[points, [, i, ]]
[points]
[i]
[c]
[weights, [, i, ]]
[weights]
[i]
[w]
[numberOfPoints, -, i, -, 1]
[numberOfPoints, -, i]
[numberOfPoints]
[i]
[1]
[points, [, idx, ]]
[points]
[idx]
[-, c]
[c]
[weights, [, idx, ]]
[weights]
[idx]
[w]
[numberOfPoints, %, 2, !=, 0]
[numberOfPoints, %, 2]
[numberOfPoints]
[2]
[0]
[1]
[1]
[j, <, numberOfPoints]
[j]
[numberOfPoints]
[j]
[2]
[pmc]
[-, j, *, pmc, /, (, j, +, 1, )]
[-, j, *, pmc]
[-, j]
[j]
[pmc]
[(, j, +, 1, )]
[j, +, 1]
[j]
[1]
[numberOfPoints, *, pmc]
[numberOfPoints]
[pmc]
[2, /, (, d, *, d, )]
[2]
[(, d, *, d, )]
[d, *, d]
[d]
[d]
[points, [, iMax, ]]
[points]
[iMax]
[0d]
[weights, [, iMax, ]]
[weights]
[iMax]
[w]
[new, Pair, <, Double, [, ], ,, Double, [, ], >, (, points, ,, weights, )]
[points]
[weights]
