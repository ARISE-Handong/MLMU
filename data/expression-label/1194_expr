[false]
[false]
["{main}"]
[Preconditions, ., checkArgument, (, computeForwardGraph, ||, computeBackwardGraph, )]
[Preconditions]
[computeForwardGraph, ||, computeBackwardGraph]
[computeForwardGraph]
[computeBackwardGraph]
[this, ., compiler]
[this]
[compiler]
[this, ., computeForwardGraph]
[this]
[computeForwardGraph]
[this, ., computeBackwardGraph]
[this]
[computeBackwardGraph]
[callsitesByNode]
[Maps, ., newLinkedHashMap, (, )]
[Maps]
[functionsByNode]
[Maps, ., newLinkedHashMap, (, )]
[Maps]
[compiler]
[true]
[true]
[Preconditions, ., checkState, (, alreadyRun, ==, false, )]
[Preconditions]
[alreadyRun, ==, false]
[alreadyRun]
[false]
[constructDefinitionProvider, (, externsRoot, ,, jsRoot, )]
[externsRoot]
[jsRoot]
[createFunctionsAndCallsites, (, jsRoot, ,, definitionProvider, )]
[jsRoot]
[definitionProvider]
[fillInFunctionInformation, (, definitionProvider, )]
[definitionProvider]
[alreadyRun]
[true]
[Preconditions, ., checkArgument, (, functionNode, ., isFunction, (, ), )]
[Preconditions]
[functionNode, ., isFunction, (, )]
[functionNode]
[functionsByNode, ., get, (, functionNode, )]
[functionsByNode]
[functionNode]
[mainFunction]
[functionsByNode, ., values, (, )]
[functionsByNode]
[Collections2, ., <, Function, >, filter, (, getAllFunctions, (, ), ,, new, Predicate, <, Function, >, (, ), {, @, Override, public, boolean, apply, (, Function, function, ), {, String, functionName, =, function, ., getName, (, ), ;, if, (, functionName, !=, null, &&, desiredName, !=, null, ), {, return, desiredName, ., equals, (, functionName, ), ;, }, else, {, return, desiredName, ==, functionName, ;, }, }, }, )]
[Collections2]
[getAllFunctions, (, )]
[new, Predicate, <, Function, >, (, ), {, @, Override, public, boolean, apply, (, Function, function, ), {, String, functionName, =, function, ., getName, (, ), ;, if, (, functionName, !=, null, &&, desiredName, !=, null, ), {, return, desiredName, ., equals, (, functionName, ), ;, }, else, {, return, desiredName, ==, functionName, ;, }, }, }]
[function, ., getName, (, )]
[function]
[functionName, !=, null, &&, desiredName, !=, null]
[functionName, !=, null]
[functionName]
[null]
[desiredName, !=, null]
[desiredName]
[null]
[desiredName, ., equals, (, functionName, )]
[desiredName]
[functionName]
[desiredName, ==, functionName]
[desiredName]
[functionName]
[functions, ., size, (, ), ==, 1]
[functions, ., size, (, )]
[functions]
[1]
[functions, ., iterator, (, ), ., next, (, )]
[functions, ., iterator, (, )]
[functions]
[new, IllegalStateException, (, "Found ", +, functions, ., size, (, ), +, " functions with name ", +, desiredName, )]
["Found ", +, functions, ., size, (, ), +, " functions with name ", +, desiredName]
["Found ", +, functions, ., size, (, ), +, " functions with name "]
["Found ", +, functions, ., size, (, )]
["Found "]
[functions, ., size, (, )]
[functions]
[" functions with name "]
[desiredName]
[Preconditions, ., checkArgument, (, callsiteNode, ., isCall, (, ), ||, callsiteNode, ., isNew, (, ), )]
[Preconditions]
[callsiteNode, ., isCall, (, ), ||, callsiteNode, ., isNew, (, )]
[callsiteNode, ., isCall, (, )]
[callsiteNode]
[callsiteNode, ., isNew, (, )]
[callsiteNode]
[callsitesByNode, ., get, (, callsiteNode, )]
[callsitesByNode]
[callsiteNode]
[callsitesByNode, ., values, (, )]
[callsitesByNode]
[mainFunction]
[createFunction, (, jsRoot, )]
[jsRoot]
[NodeTraversal, ., traverse, (, compiler, ,, jsRoot, ,, new, AbstractPostOrderCallback, (, ), {, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, int, nodeType, =, n, ., getType, (, ), ;, if, (, nodeType, ==, Token, ., CALL, ||, nodeType, ==, Token, ., NEW, ), {, Callsite, callsite, =, createCallsite, (, n, ), ;, Node, containingFunctionNode, =, t, ., getScopeRoot, (, ), ;, Function, containingFunction, =, functionsByNode, ., get, (, containingFunctionNode, ), ;, if, (, containingFunction, ==, null, ), {, containingFunction, =, createFunction, (, containingFunctionNode, ), ;, }, callsite, ., containingFunction, =, containingFunction, ;, containingFunction, ., addCallsiteInFunction, (, callsite, ), ;, connectCallsiteToTargets, (, callsite, ,, provider, ), ;, }, else, if, (, n, ., isFunction, (, ), ), {, if, (, !, functionsByNode, ., containsKey, (, n, ), ), {, createFunction, (, n, ), ;, }, }, }, }, )]
[NodeTraversal]
[compiler]
[jsRoot]
[new, AbstractPostOrderCallback, (, ), {, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, int, nodeType, =, n, ., getType, (, ), ;, if, (, nodeType, ==, Token, ., CALL, ||, nodeType, ==, Token, ., NEW, ), {, Callsite, callsite, =, createCallsite, (, n, ), ;, Node, containingFunctionNode, =, t, ., getScopeRoot, (, ), ;, Function, containingFunction, =, functionsByNode, ., get, (, containingFunctionNode, ), ;, if, (, containingFunction, ==, null, ), {, containingFunction, =, createFunction, (, containingFunctionNode, ), ;, }, callsite, ., containingFunction, =, containingFunction, ;, containingFunction, ., addCallsiteInFunction, (, callsite, ), ;, connectCallsiteToTargets, (, callsite, ,, provider, ), ;, }, else, if, (, n, ., isFunction, (, ), ), {, if, (, !, functionsByNode, ., containsKey, (, n, ), ), {, createFunction, (, n, ), ;, }, }, }, }]
[n, ., getType, (, )]
[n]
[nodeType, ==, Token, ., CALL, ||, nodeType, ==, Token, ., NEW]
[nodeType, ==, Token, ., CALL]
[nodeType]
[Token, ., CALL]
[Token]
[nodeType, ==, Token, ., NEW]
[nodeType]
[Token, ., NEW]
[Token]
[createCallsite, (, n, )]
[n]
[t, ., getScopeRoot, (, )]
[t]
[functionsByNode, ., get, (, containingFunctionNode, )]
[functionsByNode]
[containingFunctionNode]
[containingFunction, ==, null]
[containingFunction]
[null]
[containingFunction]
[createFunction, (, containingFunctionNode, )]
[containingFunctionNode]
[callsite, ., containingFunction]
[callsite]
[containingFunction]
[containingFunction, ., addCallsiteInFunction, (, callsite, )]
[containingFunction]
[callsite]
[connectCallsiteToTargets, (, callsite, ,, provider, )]
[callsite]
[provider]
[n, ., isFunction, (, )]
[n]
[!, functionsByNode, ., containsKey, (, n, )]
[functionsByNode, ., containsKey, (, n, )]
[functionsByNode]
[n]
[createFunction, (, n, )]
[n]
[new, Function, (, functionNode, )]
[functionNode]
[functionsByNode, ., put, (, functionNode, ,, function, )]
[functionsByNode]
[functionNode]
[function]
[function]
[new, Callsite, (, callsiteNode, )]
[callsiteNode]
[callsitesByNode, ., put, (, callsiteNode, ,, callsite, )]
[callsitesByNode]
[callsiteNode]
[callsite]
[callsite]
[lookupDefinitionsForTargetsOfCall, (, callsite, ., getAstNode, (, ), ,, definitionProvider, )]
[callsite, ., getAstNode, (, )]
[callsite]
[definitionProvider]
[definitions, ==, null]
[definitions]
[null]
[callsite, ., hasUnknownTarget]
[callsite]
[true]
[definitions]
[definition, ., isExtern, (, )]
[definition]
[callsite, ., hasExternTarget]
[callsite]
[true]
[definition, ., getRValue, (, )]
[definition]
[target, !=, null, &&, target, ., isFunction, (, )]
[target, !=, null]
[target]
[null]
[target, ., isFunction, (, )]
[target]
[functionsByNode, ., get, (, target, )]
[functionsByNode]
[target]
[targetFunction, ==, null]
[targetFunction]
[null]
[targetFunction]
[createFunction, (, target, )]
[target]
[computeForwardGraph]
[callsite, ., addPossibleTarget, (, targetFunction, )]
[callsite]
[targetFunction]
[computeBackwardGraph]
[targetFunction, ., addCallsitePossiblyTargetingFunction, (, callsite, )]
[targetFunction]
[callsite]
[callsite, ., hasUnknownTarget]
[callsite]
[true]
[useNameReferenceGraph]
[(, NameReferenceGraph, ), provider]
[provider]
[getAllFunctions, (, )]
[!, function, ., isMain, (, )]
[function, ., isMain, (, )]
[function]
[function, ., getName, (, )]
[function]
[functionName, !=, null]
[functionName]
[null]
[referenceGraph, ., getSymbol, (, functionName, )]
[referenceGraph]
[functionName]
[updateFunctionForName, (, function, ,, symbol, )]
[function]
[symbol]
[(, SimpleDefinitionFinder, ), provider]
[provider]
[finder, ., getDefinitionSites, (, )]
[finder]
[definitionSite, ., definition]
[definitionSite]
[lookupFunctionForDefinition, (, definition, )]
[definition]
[function, !=, null]
[function]
[null]
[finder, ., getUseSites, (, definition, )]
[finder]
[definition]
[updateFunctionForUse, (, function, ,, useSite, ., node, )]
[function]
[useSite, ., node]
[useSite]
[name, ., isAliased, (, )]
[name]
[function, ., isAliased]
[function]
[true]
[name, ., exposedToCallOrApply, (, )]
[name]
[function, ., isExposedToCallOrApply]
[function]
[true]
[useNode, ., getParent, (, )]
[useNode]
[useParent, ., getType, (, )]
[useParent]
[(, parentType, ==, Token, ., CALL, ||, parentType, ==, Token, ., NEW, ), &&, useParent, ., getFirstChild, (, ), ==, useNode]
[(, parentType, ==, Token, ., CALL, ||, parentType, ==, Token, ., NEW, )]
[parentType, ==, Token, ., CALL, ||, parentType, ==, Token, ., NEW]
[parentType, ==, Token, ., CALL]
[parentType]
[Token, ., CALL]
[Token]
[parentType, ==, Token, ., NEW]
[parentType]
[Token, ., NEW]
[Token]
[useParent, ., getFirstChild, (, ), ==, useNode]
[useParent, ., getFirstChild, (, )]
[useParent]
[useNode]
[NodeUtil, ., isGet, (, useParent, )]
[NodeUtil]
[useParent]
[useParent, ., isGetProp, (, )]
[useParent]
[useParent, ., getParent, (, )]
[useParent]
[NodeUtil, ., isFunctionObjectApply, (, gramps, ), ||, NodeUtil, ., isFunctionObjectCall, (, gramps, )]
[NodeUtil, ., isFunctionObjectApply, (, gramps, )]
[NodeUtil]
[gramps]
[NodeUtil, ., isFunctionObjectCall, (, gramps, )]
[NodeUtil]
[gramps]
[function, ., isExposedToCallOrApply]
[function]
[true]
[function, ., isAliased]
[function]
[true]
[definition, !=, null, &&, !, definition, ., isExtern, (, )]
[definition, !=, null]
[definition]
[null]
[!, definition, ., isExtern, (, )]
[definition, ., isExtern, (, )]
[definition]
[definition, ., getRValue, (, )]
[definition]
[rValue, !=, null, &&, rValue, ., isFunction, (, )]
[rValue, !=, null]
[rValue]
[null]
[rValue, ., isFunction, (, )]
[rValue]
[functionsByNode, ., get, (, rValue, )]
[functionsByNode]
[rValue]
[Preconditions, ., checkNotNull, (, function, )]
[Preconditions]
[function]
[function]
[null]
[constructDirectedGraph, (, true, )]
[true]
[constructDirectedGraph, (, false, )]
[false]
[forward]
[source]
[caller]
[destination]
[callee]
[source]
[callee]
[destination]
[caller]
[digraph, ., connect, (, source, ,, callsite, ,, destination, )]
[digraph]
[source]
[callsite]
[destination]
[LinkedDirectedGraph, ., createWithoutAnnotations, (, )]
[LinkedDirectedGraph]
[getAllFunctions, (, )]
[digraph, ., createNode, (, function, )]
[digraph]
[function]
[computeForwardGraph]
[getAllFunctions, (, )]
[caller, ., getCallsitesInFunction, (, )]
[caller]
[callsite, ., getPossibleTargets, (, )]
[callsite]
[digraphConnect, (, digraph, ,, caller, ,, callsite, ,, callee, ,, forward, )]
[digraph]
[caller]
[callsite]
[callee]
[forward]
[getAllFunctions, (, )]
[callee, ., getCallsitesPossiblyTargetingFunction, (, )]
[callee]
[callsite, ., getContainingFunction, (, )]
[callsite]
[digraphConnect, (, digraph, ,, caller, ,, callsite, ,, callee, ,, forward, )]
[digraph]
[caller]
[callsite]
[callee]
[forward]
[digraph]
[useNameReferenceGraph]
[new, NameReferenceGraphConstruction, (, compiler, )]
[compiler]
[graphConstruction, ., process, (, externsRoot, ,, jsRoot, )]
[graphConstruction]
[externsRoot]
[jsRoot]
[graphConstruction, ., getNameReferenceGraph, (, )]
[graphConstruction]
[new, SimpleDefinitionFinder, (, compiler, )]
[compiler]
[defFinder, ., process, (, externsRoot, ,, jsRoot, )]
[defFinder]
[externsRoot]
[jsRoot]
[defFinder]
[Preconditions, ., checkArgument, (, callsite, ., isCall, (, ), ||, callsite, ., isNew, (, ), )]
[Preconditions]
[callsite, ., isCall, (, ), ||, callsite, ., isNew, (, )]
[callsite, ., isCall, (, )]
[callsite]
[callsite, ., isNew, (, )]
[callsite]
[callsite, ., getFirstChild, (, )]
[callsite]
[!, useNameReferenceGraph, ||, (, targetExpression, ., isGetProp, (, ), ||, targetExpression, ., isName, (, ), )]
[!, useNameReferenceGraph]
[useNameReferenceGraph]
[(, targetExpression, ., isGetProp, (, ), ||, targetExpression, ., isName, (, ), )]
[targetExpression, ., isGetProp, (, ), ||, targetExpression, ., isName, (, )]
[targetExpression, ., isGetProp, (, )]
[targetExpression]
[targetExpression, ., isName, (, )]
[targetExpression]
[definitionProvider, ., getDefinitionsReferencedAt, (, targetExpression, )]
[definitionProvider]
[targetExpression]
[definitions, !=, null, &&, !, definitions, ., isEmpty, (, )]
[definitions, !=, null]
[definitions]
[null]
[!, definitions, ., isEmpty, (, )]
[definitions, ., isEmpty, (, )]
[definitions]
[definitions]
[null]
[false]
[false]
[astNode]
[functionAstNode]
[(, this, ==, CallGraph, ., this, ., mainFunction, )]
[this, ==, CallGraph, ., this, ., mainFunction]
[this]
[CallGraph, ., this, ., mainFunction]
[CallGraph, ., this]
[astNode]
[isMain, (, )]
[astNode]
[NodeUtil, ., getFunctionBody, (, astNode, )]
[NodeUtil]
[astNode]
[isMain, (, )]
[MAIN_FUNCTION_NAME]
[NodeUtil, ., getFunctionName, (, astNode, )]
[NodeUtil]
[astNode]
[callsitesInFunction, !=, null]
[callsitesInFunction]
[null]
[callsitesInFunction]
[ImmutableList, ., of, (, )]
[ImmutableList]
[callsitesInFunction, ==, null]
[callsitesInFunction]
[null]
[callsitesInFunction]
[new, LinkedList, <, Callsite, >, (, )]
[callsitesInFunction, ., add, (, callsite, )]
[callsitesInFunction]
[callsite]
[computeBackwardGraph]
[callsitesPossiblyTargetingFunction, !=, null]
[callsitesPossiblyTargetingFunction]
[null]
[callsitesPossiblyTargetingFunction]
[ImmutableList, ., of, (, )]
[ImmutableList]
[new, UnsupportedOperationException, (, "Cannot call ", +, "getCallsitesPossiblyTargetingFunction() on a Function ", +, "from a non-backward CallGraph", )]
["Cannot call ", +, "getCallsitesPossiblyTargetingFunction() on a Function ", +, "from a non-backward CallGraph"]
["Cannot call ", +, "getCallsitesPossiblyTargetingFunction() on a Function "]
["Cannot call "]
["getCallsitesPossiblyTargetingFunction() on a Function "]
["from a non-backward CallGraph"]
[Preconditions, ., checkState, (, computeBackwardGraph, )]
[Preconditions]
[computeBackwardGraph]
[callsitesPossiblyTargetingFunction, ==, null]
[callsitesPossiblyTargetingFunction]
[null]
[callsitesPossiblyTargetingFunction]
[new, LinkedList, <, Callsite, >, (, )]
[callsitesPossiblyTargetingFunction, ., add, (, callsite, )]
[callsitesPossiblyTargetingFunction]
[callsite]
[isAliased]
[isExposedToCallOrApply]
[false]
[false]
[null]
[astNode]
[callsiteAstNode]
[astNode]
[containingFunction]
[computeForwardGraph]
[possibleTargets, !=, null]
[possibleTargets]
[null]
[possibleTargets]
[ImmutableList, ., of, (, )]
[ImmutableList]
[new, UnsupportedOperationException, (, "Cannot call ", +, "getPossibleTargets() on a Callsite from a non-forward ", +, "CallGraph", )]
["Cannot call ", +, "getPossibleTargets() on a Callsite from a non-forward ", +, "CallGraph"]
["Cannot call ", +, "getPossibleTargets() on a Callsite from a non-forward "]
["Cannot call "]
["getPossibleTargets() on a Callsite from a non-forward "]
["CallGraph"]
[Preconditions, ., checkState, (, computeForwardGraph, )]
[Preconditions]
[computeForwardGraph]
[possibleTargets, ==, null]
[possibleTargets]
[null]
[possibleTargets]
[new, LinkedList, <, Function, >, (, )]
[possibleTargets, ., add, (, target, )]
[possibleTargets]
[target]
[hasUnknownTarget]
[hasExternTarget]
