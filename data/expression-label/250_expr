[40]
[1L, <<, 10L]
[1L]
[10L]
[1L, <<, 20L]
[1L]
[20L]
[1L, <<, 30L]
[1L]
[30L]
[options, ==, null]
[options]
[null]
[false]
[false]
[new, StringTokenizer, (, options, ,, ":", )]
[options]
[":"]
[st, ., hasMoreTokens, (, )]
[st]
[st, ., nextToken, (, )]
[st]
[mode, ., equalsIgnoreCase, (, "verbose", )]
[mode]
["verbose"]
[verboseMode]
[true]
[st, ., hasMoreTokens, (, )]
[st]
[st, ., nextToken, (, )]
[st]
[mode, ., equalsIgnoreCase, (, "pretty", )]
[mode]
["pretty"]
[prettyMode]
[true]
[st, ., hasMoreTokens, (, )]
[st]
[st, ., hasMoreTokens, (, )]
[st]
[st, ., nextToken, (, )]
[st]
[new, StringTokenizer, (, types, ,, ",", )]
[types]
[","]
[typeSt, ., hasMoreElements, (, )]
[typeSt]
[typeSt, ., nextToken, (, )]
[typeSt]
[writeMetrics, (, out, ,, type, ,, verboseMode, ,, prettyMode, )]
[out]
[type]
[verboseMode]
[prettyMode]
[writeMetrics, (, out, ,, "all", ,, verboseMode, ,, prettyMode, )]
[out]
["all"]
[verboseMode]
[prettyMode]
[type, ., equals, (, "gc", ), ||, type, ., equalsIgnoreCase, (, "all", )]
[type, ., equals, (, "gc", )]
[type]
["gc"]
[type, ., equalsIgnoreCase, (, "all", )]
[type]
["all"]
[writeGarbageCollectionStats, (, out, ,, verbose, ,, pretty, )]
[out]
[verbose]
[pretty]
[type, ., equals, (, "mem", ), ||, type, ., equalsIgnoreCase, (, "all", )]
[type, ., equals, (, "mem", )]
[type]
["mem"]
[type, ., equalsIgnoreCase, (, "all", )]
[type]
["all"]
[writeMemoryMetrics, (, out, ,, verbose, ,, pretty, )]
[out]
[verbose]
[pretty]
[type, ., equals, (, "jit", ), ||, type, ., equalsIgnoreCase, (, "all", )]
[type, ., equals, (, "jit", )]
[type]
["jit"]
[type, ., equalsIgnoreCase, (, "all", )]
[type]
["all"]
[writeJitMetrics, (, out, ,, verbose, ,, pretty, )]
[out]
[verbose]
[pretty]
[ManagementFactory, ., getCompilationMXBean, (, )]
[ManagementFactory]
[verbose]
[name]
[cBean, ., getName, (, )]
[cBean]
[name]
["total"]
[pretty]
[out, ., println, (, "\nJIT Stats", )]
[out]
["\nJIT Stats"]
[out, ., println, (, String, ., format, (, "\t%s jit time: %d ms", ,, name, ,, cBean, ., getTotalCompilationTime, (, ), ), )]
[out]
[String, ., format, (, "\t%s jit time: %d ms", ,, name, ,, cBean, ., getTotalCompilationTime, (, ), )]
[String]
["\t%s jit time: %d ms"]
[name]
[cBean, ., getTotalCompilationTime, (, )]
[cBean]
[out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, "%s-jit-time-ms : %d", ,, normalizeName, (, name, ), ,, cBean, ., getTotalCompilationTime, (, ), ), ), )]
[out]
[normalizeTabularColonPos, (, String, ., format, (, "%s-jit-time-ms : %d", ,, normalizeName, (, name, ), ,, cBean, ., getTotalCompilationTime, (, ), ), )]
[String, ., format, (, "%s-jit-time-ms : %d", ,, normalizeName, (, name, ), ,, cBean, ., getTotalCompilationTime, (, ), )]
[String]
["%s-jit-time-ms : %d"]
[normalizeName, (, name, )]
[name]
[cBean, ., getTotalCompilationTime, (, )]
[cBean]
[pretty]
[out, ., format, (, "\t%s\n", ,, prefix, )]
[out]
["\t%s\n"]
[prefix]
[out, ., format, (, "\t\tavailable         : %s\n", ,, formatBytes, (, usage, ., getMax, (, ), ), )]
[out]
["\t\tavailable         : %s\n"]
[formatBytes, (, usage, ., getMax, (, ), )]
[usage, ., getMax, (, )]
[usage]
[out, ., format, (, "\t\tcurrent           : %s\n", ,, formatBytes, (, usage, ., getUsed, (, ), ), )]
[out]
["\t\tcurrent           : %s\n"]
[formatBytes, (, usage, ., getUsed, (, ), )]
[usage, ., getUsed, (, )]
[usage]
[prefix]
[normalizeName, (, prefix, )]
[prefix]
[out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, prefix, +, "-available-bytes : %d", ,, usage, ., getMax, (, ), ), ), )]
[out]
[normalizeTabularColonPos, (, String, ., format, (, prefix, +, "-available-bytes : %d", ,, usage, ., getMax, (, ), ), )]
[String, ., format, (, prefix, +, "-available-bytes : %d", ,, usage, ., getMax, (, ), )]
[String]
[prefix, +, "-available-bytes : %d"]
[prefix]
["-available-bytes : %d"]
[usage, ., getMax, (, )]
[usage]
[out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, prefix, +, "-current-bytes : %d", ,, usage, ., getUsed, (, ), ), ), )]
[out]
[normalizeTabularColonPos, (, String, ., format, (, prefix, +, "-current-bytes : %d", ,, usage, ., getUsed, (, ), ), )]
[String, ., format, (, prefix, +, "-current-bytes : %d", ,, usage, ., getUsed, (, ), )]
[String]
[prefix, +, "-current-bytes : %d"]
[prefix]
["-current-bytes : %d"]
[usage, ., getUsed, (, )]
[usage]
[pretty]
[out, ., format, (, "\t\tavailable         : %s\n", ,, formatBytes, (, usage, ., getMax, (, ), ), )]
[out]
["\t\tavailable         : %s\n"]
[formatBytes, (, usage, ., getMax, (, ), )]
[usage, ., getMax, (, )]
[usage]
[out, ., format, (, "\t\tpeak              : %s\n", ,, formatBytes, (, peakUsage, ., getUsed, (, ), ), )]
[out]
["\t\tpeak              : %s\n"]
[formatBytes, (, peakUsage, ., getUsed, (, ), )]
[peakUsage, ., getUsed, (, )]
[peakUsage]
[out, ., format, (, "\t\tcurrent           : %s\n", ,, formatBytes, (, usage, ., getUsed, (, ), ), )]
[out]
["\t\tcurrent           : %s\n"]
[formatBytes, (, usage, ., getUsed, (, ), )]
[usage, ., getUsed, (, )]
[usage]
[out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, prefix, +, "-available-bytes : %d", ,, usage, ., getMax, (, ), ), ), )]
[out]
[normalizeTabularColonPos, (, String, ., format, (, prefix, +, "-available-bytes : %d", ,, usage, ., getMax, (, ), ), )]
[String, ., format, (, prefix, +, "-available-bytes : %d", ,, usage, ., getMax, (, ), )]
[String]
[prefix, +, "-available-bytes : %d"]
[prefix]
["-available-bytes : %d"]
[usage, ., getMax, (, )]
[usage]
[out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, prefix, +, "-peak-bytes : %d", ,, peakUsage, ., getUsed, (, ), ), ), )]
[out]
[normalizeTabularColonPos, (, String, ., format, (, prefix, +, "-peak-bytes : %d", ,, peakUsage, ., getUsed, (, ), ), )]
[String, ., format, (, prefix, +, "-peak-bytes : %d", ,, peakUsage, ., getUsed, (, ), )]
[String]
[prefix, +, "-peak-bytes : %d"]
[prefix]
["-peak-bytes : %d"]
[peakUsage, ., getUsed, (, )]
[peakUsage]
[out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, prefix, +, "-current-bytes : %d", ,, usage, ., getUsed, (, ), ), ), )]
[out]
[normalizeTabularColonPos, (, String, ., format, (, prefix, +, "-current-bytes : %d", ,, usage, ., getUsed, (, ), ), )]
[String, ., format, (, prefix, +, "-current-bytes : %d", ,, usage, ., getUsed, (, ), )]
[String]
[prefix, +, "-current-bytes : %d"]
[prefix]
["-current-bytes : %d"]
[usage, ., getUsed, (, )]
[usage]
[pretty]
[out, ., println, (, "\nMemory usage", )]
[out]
["\nMemory usage"]
[verbose]
[ManagementFactory, ., getMemoryMXBean, (, )]
[ManagementFactory]
[overallMemBean, ., getHeapMemoryUsage, (, )]
[overallMemBean]
[writeOverallMemoryUsage, (, out, ,, usage, ,, "Heap", ,, pretty, )]
[out]
[usage]
["Heap"]
[pretty]
[usage]
[overallMemBean, ., getNonHeapMemoryUsage, (, )]
[overallMemBean]
[writeOverallMemoryUsage, (, out, ,, usage, ,, "Non-heap", ,, pretty, )]
[out]
[usage]
["Non-heap"]
[pretty]
[verbose]
[ManagementFactory, ., getMemoryPoolMXBeans, (, )]
[ManagementFactory]
[mpBeans]
[mpBean, ., getUsage, (, )]
[mpBean]
[mpBean, ., getPeakUsage, (, )]
[mpBean]
[pretty]
[out, ., println, (, "\tPool ", +, mpBean, ., getName, (, ), )]
[out]
["\tPool ", +, mpBean, ., getName, (, )]
["\tPool "]
[mpBean, ., getName, (, )]
[mpBean]
[writePoolMemoryUsage, (, out, ,, currentUsage, ,, peakUsage, ,, null, ,, true, )]
[out]
[currentUsage]
[peakUsage]
[null]
[true]
[writePoolMemoryUsage, (, out, ,, currentUsage, ,, peakUsage, ,, "mem-pool-", +, normalizeName, (, mpBean, ., getName, (, ), ), ,, false, )]
[out]
[currentUsage]
[peakUsage]
["mem-pool-", +, normalizeName, (, mpBean, ., getName, (, ), )]
["mem-pool-"]
[normalizeName, (, mpBean, ., getName, (, ), )]
[mpBean, ., getName, (, )]
[mpBean]
[false]
[0]
[0]
[0]
[ManagementFactory, ., getMemoryPoolMXBeans, (, )]
[ManagementFactory]
[mpBeans]
[mpBean, ., getUsage, (, )]
[mpBean]
[available]
[currentUsage, ., getMax, (, )]
[currentUsage]
[current]
[currentUsage, ., getUsed, (, )]
[currentUsage]
[mpBean, ., getPeakUsage, (, )]
[mpBean]
[peak]
[peakUsage, ., getUsed, (, )]
[peakUsage]
[new, MemoryUsage, (, 0, ,, current, ,, current, ,, available, )]
[0]
[current]
[current]
[available]
[new, MemoryUsage, (, 0, ,, peak, ,, peak, ,, peak, )]
[0]
[peak]
[peak]
[peak]
[pretty]
[out, ., format, (, "\tAggregate of %d memory pools\n", ,, mpBeans, ., size, (, ), )]
[out]
["\tAggregate of %d memory pools\n"]
[mpBeans, ., size, (, )]
[mpBeans]
[writePoolMemoryUsage, (, out, ,, summaryUsage, ,, summaryPeakUsage, ,, null, ,, true, )]
[out]
[summaryUsage]
[summaryPeakUsage]
[null]
[true]
[writePoolMemoryUsage, (, out, ,, summaryUsage, ,, summaryPeakUsage, ,, "mem", ,, false, )]
[out]
[summaryUsage]
[summaryPeakUsage]
["mem"]
[false]
[ManagementFactory, ., getGarbageCollectorMXBeans, (, )]
[ManagementFactory]
[verbose]
[pretty]
[out, ., println, (, "\nGarbage collection stats", )]
[out]
["\nGarbage collection stats"]
[gcBeans]
[out, ., println, (, "\tCollector ", +, gcBean, ., getName, (, ), )]
[out]
["\tCollector ", +, gcBean, ., getName, (, )]
["\tCollector "]
[gcBean, ., getName, (, )]
[gcBean]
[out, ., format, (, "\t\tcollection count   : %d\n", ,, gcBean, ., getCollectionCount, (, ), )]
[out]
["\t\tcollection count   : %d\n"]
[gcBean, ., getCollectionCount, (, )]
[gcBean]
[out, ., format, (, "\t\tcollection time    : %d ms\n", ,, gcBean, ., getCollectionTime, (, ), )]
[out]
["\t\tcollection time    : %d ms\n"]
[gcBean, ., getCollectionTime, (, )]
[gcBean]
[gcBeans]
[normalizeName, (, gcBean, ., getName, (, ), )]
[gcBean, ., getName, (, )]
[gcBean]
[out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, "gc-", +, name, +, "-collection-count : %d", ,, gcBean, ., getCollectionCount, (, ), ), ), )]
[out]
[normalizeTabularColonPos, (, String, ., format, (, "gc-", +, name, +, "-collection-count : %d", ,, gcBean, ., getCollectionCount, (, ), ), )]
[String, ., format, (, "gc-", +, name, +, "-collection-count : %d", ,, gcBean, ., getCollectionCount, (, ), )]
[String]
["gc-", +, name, +, "-collection-count : %d"]
["gc-", +, name]
["gc-"]
[name]
["-collection-count : %d"]
[gcBean, ., getCollectionCount, (, )]
[gcBean]
[out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, "gc-", +, name, +, "-collection-time-ms : %d", ,, gcBean, ., getCollectionTime, (, ), ), ), )]
[out]
[normalizeTabularColonPos, (, String, ., format, (, "gc-", +, name, +, "-collection-time-ms : %d", ,, gcBean, ., getCollectionTime, (, ), ), )]
[String, ., format, (, "gc-", +, name, +, "-collection-time-ms : %d", ,, gcBean, ., getCollectionTime, (, ), )]
[String]
["gc-", +, name, +, "-collection-time-ms : %d"]
["gc-", +, name]
["gc-"]
[name]
["-collection-time-ms : %d"]
[gcBean, ., getCollectionTime, (, )]
[gcBean]
[0]
[0]
[gcBeans, ., size, (, )]
[gcBeans]
[gcBeans]
[collectionCount]
[gcBean, ., getCollectionCount, (, )]
[gcBean]
[collectionTime]
[gcBean, ., getCollectionTime, (, )]
[gcBean]
[pretty]
[out, ., println, (, "\nGarbage collection stats", )]
[out]
["\nGarbage collection stats"]
[out, ., format, (, "\tAggregate of %d collectors\n", ,, collectorCount, )]
[out]
["\tAggregate of %d collectors\n"]
[collectorCount]
[out, ., format, (, "\t\tcollection count   : %d\n", ,, collectionCount, )]
[out]
["\t\tcollection count   : %d\n"]
[collectionCount]
[out, ., format, (, "\t\tcollection time    : %d ms\n", ,, collectionTime, )]
[out]
["\t\tcollection time    : %d ms\n"]
[collectionTime]
[normalizeName, (, "aggregate", )]
["aggregate"]
[out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, "gc-", +, name, +, "-collection-count : %d", ,, collectionCount, ), ), )]
[out]
[normalizeTabularColonPos, (, String, ., format, (, "gc-", +, name, +, "-collection-count : %d", ,, collectionCount, ), )]
[String, ., format, (, "gc-", +, name, +, "-collection-count : %d", ,, collectionCount, )]
[String]
["gc-", +, name, +, "-collection-count : %d"]
["gc-", +, name]
["gc-"]
[name]
["-collection-count : %d"]
[collectionCount]
[out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, "gc-", +, name, +, "-collection-time-ms : %d", ,, collectionTime, ), ), )]
[out]
[normalizeTabularColonPos, (, String, ., format, (, "gc-", +, name, +, "-collection-time-ms : %d", ,, collectionTime, ), )]
[String, ., format, (, "gc-", +, name, +, "-collection-time-ms : %d", ,, collectionTime, )]
[String]
["gc-", +, name, +, "-collection-time-ms : %d"]
["gc-", +, name]
["gc-"]
[name]
["-collection-time-ms : %d"]
[collectionTime]
[name, ., replace, (, " ", ,, "_", ), ., toLowerCase, (, )]
[name, ., replace, (, " ", ,, "_", )]
[name]
[" "]
["_"]
[new, StringBuilder, (, string, )]
[string]
[sb, ., indexOf, (, ":", )]
[sb]
[":"]
[index, <, TABULAR_COLON_POS]
[index]
[TABULAR_COLON_POS]
[++, index]
[index]
[sb, ., insert, (, index, ,, ' ', )]
[sb]
[index]
[' ']
[sb, ., toString, (, )]
[sb]
[numBytes, <, ONE_KILO_BYTE]
[numBytes]
[ONE_KILO_BYTE]
[String, ., format, (, "%d B", ,, numBytes, )]
[String]
["%d B"]
[numBytes]
[numBytes, <, ONE_MEGA_BYTE]
[numBytes]
[ONE_MEGA_BYTE]
[String, ., format, (, "%d KB", ,, numBytes, /, ONE_KILO_BYTE, )]
[String]
["%d KB"]
[numBytes, /, ONE_KILO_BYTE]
[numBytes]
[ONE_KILO_BYTE]
[numBytes, <, ONE_GIGA_BYTE]
[numBytes]
[ONE_GIGA_BYTE]
[String, ., format, (, "%d MB", ,, numBytes, /, ONE_MEGA_BYTE, )]
[String]
["%d MB"]
[numBytes, /, ONE_MEGA_BYTE]
[numBytes]
[ONE_MEGA_BYTE]
[String, ., format, (, "%d GB", ,, numBytes, /, ONE_GIGA_BYTE, )]
[String]
["%d GB"]
[numBytes, /, ONE_GIGA_BYTE]
[numBytes]
[ONE_GIGA_BYTE]
