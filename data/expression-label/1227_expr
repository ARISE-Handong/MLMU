[2987472457734470962L]
[Color, ., black]
[Color]
[Color, ., green]
[Color]
[new, Font, (, "Tahoma", ,, Font, ., BOLD, ,, 12, )]
["Tahoma"]
[Font, ., BOLD]
[Font]
[12]
[Color, ., yellow]
[Color]
[270]
[3f]
[10f]
[new, Font, (, "Tahoma", ,, Font, ., BOLD, ,, 10, )]
["Tahoma"]
[Font, ., BOLD]
[Font]
[10]
[ResourceBundleWrapper, ., getBundle, (, "org.jfree.chart.plot.LocalizationBundle", )]
[ResourceBundleWrapper]
["org.jfree.chart.plot.LocalizationBundle"]
[null]
[this, ., shape]
[this]
[DialShape, ., CIRCLE]
[DialShape]
[this, ., meterAngle]
[this]
[DEFAULT_METER_ANGLE]
[this, ., range]
[this]
[new, Range, (, 0.0, ,, 100.0, )]
[0.0]
[100.0]
[this, ., tickSize]
[this]
[10.0]
[this, ., tickPaint]
[this]
[Color, ., white]
[Color]
[this, ., units]
[this]
["Units"]
[this, ., needlePaint]
[this]
[MeterPlot, ., DEFAULT_NEEDLE_PAINT]
[MeterPlot]
[this, ., tickLabelsVisible]
[this]
[true]
[this, ., tickLabelFont]
[this]
[MeterPlot, ., DEFAULT_LABEL_FONT]
[MeterPlot]
[this, ., tickLabelPaint]
[this]
[Color, ., black]
[Color]
[this, ., tickLabelFormat]
[this]
[NumberFormat, ., getInstance, (, )]
[NumberFormat]
[this, ., valueFont]
[this]
[MeterPlot, ., DEFAULT_VALUE_FONT]
[MeterPlot]
[this, ., valuePaint]
[this]
[MeterPlot, ., DEFAULT_VALUE_PAINT]
[MeterPlot]
[this, ., dialBackgroundPaint]
[this]
[MeterPlot, ., DEFAULT_DIAL_BACKGROUND_PAINT]
[MeterPlot]
[this, ., intervals]
[this]
[new, java, ., util, ., ArrayList, (, )]
[setDataset, (, dataset, )]
[dataset]
[this, ., shape]
[this]
[shape, ==, null]
[shape]
[null]
[new, IllegalArgumentException, (, "Null 'shape' argument.", )]
["Null 'shape' argument."]
[this, ., shape]
[this]
[shape]
[fireChangeEvent, (, )]
[this, ., meterAngle]
[this]
[angle, <, 1, ||, angle, >, 360]
[angle, <, 1]
[angle]
[1]
[angle, >, 360]
[angle]
[360]
[new, IllegalArgumentException, (, "Invalid 'angle' (", +, angle, +, ")", )]
["Invalid 'angle' (", +, angle, +, ")"]
["Invalid 'angle' (", +, angle]
["Invalid 'angle' ("]
[angle]
[")"]
[this, ., meterAngle]
[this]
[angle]
[fireChangeEvent, (, )]
[this, ., range]
[this]
[range, ==, null]
[range]
[null]
[new, IllegalArgumentException, (, "Null 'range' argument.", )]
["Null 'range' argument."]
[!, (, range, ., getLength, (, ), >, 0.0, )]
[(, range, ., getLength, (, ), >, 0.0, )]
[range, ., getLength, (, ), >, 0.0]
[range, ., getLength, (, )]
[range]
[0.0]
[new, IllegalArgumentException, (, "Range length must be positive.", )]
["Range length must be positive."]
[this, ., range]
[this]
[range]
[fireChangeEvent, (, )]
[this, ., tickSize]
[this]
[size, <=, 0]
[size]
[0]
[new, IllegalArgumentException, (, "Requires 'size' > 0.", )]
["Requires 'size' > 0."]
[this, ., tickSize]
[this]
[size]
[fireChangeEvent, (, )]
[this, ., tickPaint]
[this]
[paint, ==, null]
[paint]
[null]
[new, IllegalArgumentException, (, "Null 'paint' argument.", )]
["Null 'paint' argument."]
[this, ., tickPaint]
[this]
[paint]
[fireChangeEvent, (, )]
[this, ., units]
[this]
[this, ., units]
[this]
[units]
[fireChangeEvent, (, )]
[this, ., needlePaint]
[this]
[paint, ==, null]
[paint]
[null]
[new, IllegalArgumentException, (, "Null 'paint' argument.", )]
["Null 'paint' argument."]
[this, ., needlePaint]
[this]
[paint]
[fireChangeEvent, (, )]
[this, ., tickLabelsVisible]
[this]
[this, ., tickLabelsVisible, !=, visible]
[this, ., tickLabelsVisible]
[this]
[visible]
[this, ., tickLabelsVisible]
[this]
[visible]
[fireChangeEvent, (, )]
[this, ., tickLabelFont]
[this]
[font, ==, null]
[font]
[null]
[new, IllegalArgumentException, (, "Null 'font' argument.", )]
["Null 'font' argument."]
[!, this, ., tickLabelFont, ., equals, (, font, )]
[this, ., tickLabelFont, ., equals, (, font, )]
[this, ., tickLabelFont]
[this]
[font]
[this, ., tickLabelFont]
[this]
[font]
[fireChangeEvent, (, )]
[this, ., tickLabelPaint]
[this]
[paint, ==, null]
[paint]
[null]
[new, IllegalArgumentException, (, "Null 'paint' argument.", )]
["Null 'paint' argument."]
[!, this, ., tickLabelPaint, ., equals, (, paint, )]
[this, ., tickLabelPaint, ., equals, (, paint, )]
[this, ., tickLabelPaint]
[this]
[paint]
[this, ., tickLabelPaint]
[this]
[paint]
[fireChangeEvent, (, )]
[this, ., tickLabelFormat]
[this]
[format, ==, null]
[format]
[null]
[new, IllegalArgumentException, (, "Null 'format' argument.", )]
["Null 'format' argument."]
[this, ., tickLabelFormat]
[this]
[format]
[fireChangeEvent, (, )]
[this, ., valueFont]
[this]
[font, ==, null]
[font]
[null]
[new, IllegalArgumentException, (, "Null 'font' argument.", )]
["Null 'font' argument."]
[this, ., valueFont]
[this]
[font]
[fireChangeEvent, (, )]
[this, ., valuePaint]
[this]
[paint, ==, null]
[paint]
[null]
[new, IllegalArgumentException, (, "Null 'paint' argument.", )]
["Null 'paint' argument."]
[this, ., valuePaint]
[this]
[paint]
[fireChangeEvent, (, )]
[this, ., dialBackgroundPaint]
[this]
[this, ., dialBackgroundPaint]
[this]
[paint]
[fireChangeEvent, (, )]
[this, ., drawBorder]
[this]
[this, ., drawBorder]
[this]
[draw]
[fireChangeEvent, (, )]
[this, ., dialOutlinePaint]
[this]
[this, ., dialOutlinePaint]
[this]
[paint]
[fireChangeEvent, (, )]
[this, ., dataset]
[this]
[this, ., dataset]
[this]
[existing, !=, null]
[existing]
[null]
[existing, ., removeChangeListener, (, this, )]
[existing]
[this]
[this, ., dataset]
[this]
[dataset]
[dataset, !=, null]
[dataset]
[null]
[setDatasetGroup, (, dataset, ., getGroup, (, ), )]
[dataset, ., getGroup, (, )]
[dataset]
[dataset, ., addChangeListener, (, this, )]
[dataset]
[this]
[new, DatasetChangeEvent, (, this, ,, dataset, ,, new, DatasetChangeInfo, (, ), )]
[this]
[dataset]
[new, DatasetChangeInfo, (, )]
[datasetChanged, (, event, )]
[event]
[Collections, ., unmodifiableList, (, this, ., intervals, )]
[Collections]
[this, ., intervals]
[this]
[interval, ==, null]
[interval]
[null]
[new, IllegalArgumentException, (, "Null 'interval' argument.", )]
["Null 'interval' argument."]
[this, ., intervals, ., add, (, interval, )]
[this, ., intervals]
[this]
[interval]
[fireChangeEvent, (, )]
[this, ., intervals, ., clear, (, )]
[this, ., intervals]
[this]
[fireChangeEvent, (, )]
[new, LegendItemCollection, (, )]
[this, ., intervals, ., iterator, (, )]
[this, ., intervals]
[this]
[iterator, ., hasNext, (, )]
[iterator]
[(, MeterInterval, ), iterator, ., next, (, )]
[iterator, ., next, (, )]
[iterator]
[mi, ., getBackgroundPaint, (, )]
[mi]
[color, ==, null]
[color]
[null]
[color]
[mi, ., getOutlinePaint, (, )]
[mi]
[new, LegendItem, (, mi, ., getLabel, (, ), ,, mi, ., getLabel, (, ), ,, null, ,, null, ,, new, Rectangle2D, ., Double, (, -, 4.0, ,, -, 4.0, ,, 8.0, ,, 8.0, ), ,, color, )]
[mi, ., getLabel, (, )]
[mi]
[mi, ., getLabel, (, )]
[mi]
[null]
[null]
[new, Rectangle2D, ., Double, (, -, 4.0, ,, -, 4.0, ,, 8.0, ,, 8.0, )]
[-, 4.0]
[4.0]
[-, 4.0]
[4.0]
[8.0]
[8.0]
[color]
[item, ., setDataset, (, getDataset, (, ), )]
[item]
[getDataset, (, )]
[result, ., add, (, item, )]
[result]
[item]
[result]
[info, !=, null]
[info]
[null]
[info, ., setPlotArea, (, area, )]
[info]
[area]
[getInsets, (, )]
[insets, ., trim, (, area, )]
[insets]
[area]
[area, ., setRect, (, area, ., getX, (, ), +, 4, ,, area, ., getY, (, ), +, 4, ,, area, ., getWidth, (, ), -, 8, ,, area, ., getHeight, (, ), -, 8, )]
[area]
[area, ., getX, (, ), +, 4]
[area, ., getX, (, )]
[area]
[4]
[area, ., getY, (, ), +, 4]
[area, ., getY, (, )]
[area]
[4]
[area, ., getWidth, (, ), -, 8]
[area, ., getWidth, (, )]
[area]
[8]
[area, ., getHeight, (, ), -, 8]
[area, ., getHeight, (, )]
[area]
[8]
[this, ., drawBorder]
[this]
[drawBackground, (, g2, ,, area, )]
[g2]
[area]
[(, 2, *, DEFAULT_BORDER_SIZE, )]
[2, *, DEFAULT_BORDER_SIZE]
[2]
[DEFAULT_BORDER_SIZE]
[(, 2, *, DEFAULT_BORDER_SIZE, )]
[2, *, DEFAULT_BORDER_SIZE]
[2]
[DEFAULT_BORDER_SIZE]
[area, ., getX, (, ), +, gapHorizontal, /, 2]
[area, ., getX, (, )]
[area]
[gapHorizontal, /, 2]
[gapHorizontal]
[2]
[area, ., getY, (, ), +, gapVertical, /, 2]
[area, ., getY, (, )]
[area]
[gapVertical, /, 2]
[gapVertical]
[2]
[area, ., getWidth, (, ), -, gapHorizontal]
[area, ., getWidth, (, )]
[area]
[gapHorizontal]
[area, ., getHeight, (, ), -, gapVertical, +, (, (, this, ., meterAngle, <=, 180, ), &&, (, this, ., shape, !=, DialShape, ., CIRCLE, ), ?, area, ., getHeight, (, ), /, 1.25, :, 0, )]
[area, ., getHeight, (, ), -, gapVertical]
[area, ., getHeight, (, )]
[area]
[gapVertical]
[(, (, this, ., meterAngle, <=, 180, ), &&, (, this, ., shape, !=, DialShape, ., CIRCLE, ), ?, area, ., getHeight, (, ), /, 1.25, :, 0, )]
[(, this, ., meterAngle, <=, 180, ), &&, (, this, ., shape, !=, DialShape, ., CIRCLE, ), ?, area, ., getHeight, (, ), /, 1.25, :, 0]
[(, this, ., meterAngle, <=, 180, ), &&, (, this, ., shape, !=, DialShape, ., CIRCLE, )]
[(, this, ., meterAngle, <=, 180, )]
[this, ., meterAngle, <=, 180]
[this, ., meterAngle]
[this]
[180]
[(, this, ., shape, !=, DialShape, ., CIRCLE, )]
[this, ., shape, !=, DialShape, ., CIRCLE]
[this, ., shape]
[this]
[DialShape, ., CIRCLE]
[DialShape]
[area, ., getHeight, (, ), /, 1.25]
[area, ., getHeight, (, )]
[area]
[1.25]
[0]
[Math, ., min, (, meterW, ,, meterH, ), /, 2]
[Math, ., min, (, meterW, ,, meterH, )]
[Math]
[meterW]
[meterH]
[2]
[meterX]
[(, meterX, +, meterX, +, meterW, ), /, 2, -, min]
[(, meterX, +, meterX, +, meterW, ), /, 2]
[(, meterX, +, meterX, +, meterW, )]
[meterX, +, meterX, +, meterW]
[meterX, +, meterX]
[meterX]
[meterX]
[meterW]
[2]
[min]
[meterY]
[(, meterY, +, meterY, +, meterH, ), /, 2, -, min]
[(, meterY, +, meterY, +, meterH, ), /, 2]
[(, meterY, +, meterY, +, meterH, )]
[meterY, +, meterY, +, meterH]
[meterY, +, meterY]
[meterY]
[meterY]
[meterH]
[2]
[min]
[meterW]
[2, *, min]
[2]
[min]
[meterH]
[2, *, min]
[2]
[min]
[new, Rectangle2D, ., Double, (, meterX, ,, meterY, ,, meterW, ,, meterH, )]
[meterX]
[meterY]
[meterW]
[meterH]
[new, Rectangle2D, ., Double, (, meterArea, ., getX, (, ), -, 4, ,, meterArea, ., getY, (, ), -, 4, ,, meterArea, ., getWidth, (, ), +, 8, ,, meterArea, ., getHeight, (, ), +, 8, )]
[meterArea, ., getX, (, ), -, 4]
[meterArea, ., getX, (, )]
[meterArea]
[4]
[meterArea, ., getY, (, ), -, 4]
[meterArea, ., getY, (, )]
[meterArea]
[4]
[meterArea, ., getWidth, (, ), +, 8]
[meterArea, ., getWidth, (, )]
[meterArea]
[8]
[meterArea, ., getHeight, (, ), +, 8]
[meterArea, ., getHeight, (, )]
[meterArea]
[8]
[meterArea, ., getCenterX, (, )]
[meterArea]
[meterArea, ., getCenterY, (, )]
[meterArea]
[getDataset, (, )]
[data, !=, null]
[data]
[null]
[this, ., range, ., getLowerBound, (, )]
[this, ., range]
[this]
[this, ., range, ., getUpperBound, (, )]
[this, ., range]
[this]
[g2, ., getClip, (, )]
[g2]
[g2, ., clip, (, originalArea, )]
[g2]
[originalArea]
[g2, ., getComposite, (, )]
[g2]
[g2, ., setComposite, (, AlphaComposite, ., getInstance, (, AlphaComposite, ., SRC_OVER, ,, getForegroundAlpha, (, ), ), )]
[g2]
[AlphaComposite, ., getInstance, (, AlphaComposite, ., SRC_OVER, ,, getForegroundAlpha, (, ), )]
[AlphaComposite]
[AlphaComposite, ., SRC_OVER]
[AlphaComposite]
[getForegroundAlpha, (, )]
[this, ., dialBackgroundPaint, !=, null]
[this, ., dialBackgroundPaint]
[this]
[null]
[fillArc, (, g2, ,, originalArea, ,, dataMin, ,, dataMax, ,, this, ., dialBackgroundPaint, ,, true, )]
[g2]
[originalArea]
[dataMin]
[dataMax]
[this, ., dialBackgroundPaint]
[this]
[true]
[drawTicks, (, g2, ,, meterArea, ,, dataMin, ,, dataMax, )]
[g2]
[meterArea]
[dataMin]
[dataMax]
[drawArcForInterval, (, g2, ,, meterArea, ,, new, MeterInterval, (, "", ,, this, ., range, ,, this, ., dialOutlinePaint, ,, new, BasicStroke, (, 1.0f, ), ,, null, ), )]
[g2]
[meterArea]
[new, MeterInterval, (, "", ,, this, ., range, ,, this, ., dialOutlinePaint, ,, new, BasicStroke, (, 1.0f, ), ,, null, )]
[""]
[this, ., range]
[this]
[this, ., dialOutlinePaint]
[this]
[new, BasicStroke, (, 1.0f, )]
[1.0f]
[null]
[this, ., intervals, ., iterator, (, )]
[this, ., intervals]
[this]
[iterator, ., hasNext, (, )]
[iterator]
[(, MeterInterval, ), iterator, ., next, (, )]
[iterator, ., next, (, )]
[iterator]
[drawArcForInterval, (, g2, ,, meterArea, ,, interval, )]
[g2]
[meterArea]
[interval]
[data, ., getValue, (, )]
[data]
[n, !=, null]
[n]
[null]
[n, ., doubleValue, (, )]
[n]
[drawValueLabel, (, g2, ,, meterArea, )]
[g2]
[meterArea]
[this, ., range, ., contains, (, value, )]
[this, ., range]
[this]
[value]
[g2, ., setPaint, (, this, ., needlePaint, )]
[g2]
[this, ., needlePaint]
[this]
[g2, ., setStroke, (, new, BasicStroke, (, 2.0f, ), )]
[g2]
[new, BasicStroke, (, 2.0f, )]
[2.0f]
[(, meterArea, ., getWidth, (, ), /, 2, ), +, DEFAULT_BORDER_SIZE, +, 15]
[(, meterArea, ., getWidth, (, ), /, 2, ), +, DEFAULT_BORDER_SIZE]
[(, meterArea, ., getWidth, (, ), /, 2, )]
[meterArea, ., getWidth, (, ), /, 2]
[meterArea, ., getWidth, (, )]
[meterArea]
[2]
[DEFAULT_BORDER_SIZE]
[15]
[valueToAngle, (, value, )]
[value]
[meterMiddleX, +, (, radius, *, Math, ., cos, (, Math, ., PI, *, (, valueAngle, /, 180, ), ), )]
[meterMiddleX]
[(, radius, *, Math, ., cos, (, Math, ., PI, *, (, valueAngle, /, 180, ), ), )]
[radius, *, Math, ., cos, (, Math, ., PI, *, (, valueAngle, /, 180, ), )]
[radius]
[Math, ., cos, (, Math, ., PI, *, (, valueAngle, /, 180, ), )]
[Math]
[Math, ., PI, *, (, valueAngle, /, 180, )]
[Math, ., PI]
[Math]
[(, valueAngle, /, 180, )]
[valueAngle, /, 180]
[valueAngle]
[180]
[meterMiddleY, -, (, radius, *, Math, ., sin, (, Math, ., PI, *, (, valueAngle, /, 180, ), ), )]
[meterMiddleY]
[(, radius, *, Math, ., sin, (, Math, ., PI, *, (, valueAngle, /, 180, ), ), )]
[radius, *, Math, ., sin, (, Math, ., PI, *, (, valueAngle, /, 180, ), )]
[radius]
[Math, ., sin, (, Math, ., PI, *, (, valueAngle, /, 180, ), )]
[Math]
[Math, ., PI, *, (, valueAngle, /, 180, )]
[Math, ., PI]
[Math]
[(, valueAngle, /, 180, )]
[valueAngle, /, 180]
[valueAngle]
[180]
[new, Polygon, (, )]
[(, valueAngle, >, 135, &&, valueAngle, <, 225, ), ||, (, valueAngle, <, 45, &&, valueAngle, >, -, 45, )]
[(, valueAngle, >, 135, &&, valueAngle, <, 225, )]
[valueAngle, >, 135, &&, valueAngle, <, 225]
[valueAngle, >, 135]
[valueAngle]
[135]
[valueAngle, <, 225]
[valueAngle]
[225]
[(, valueAngle, <, 45, &&, valueAngle, >, -, 45, )]
[valueAngle, <, 45, &&, valueAngle, >, -, 45]
[valueAngle, <, 45]
[valueAngle]
[45]
[valueAngle, >, -, 45]
[valueAngle]
[-, 45]
[45]
[(, meterMiddleY, -, DEFAULT_CIRCLE_SIZE, /, 4, )]
[meterMiddleY, -, DEFAULT_CIRCLE_SIZE, /, 4]
[meterMiddleY]
[DEFAULT_CIRCLE_SIZE, /, 4]
[DEFAULT_CIRCLE_SIZE]
[4]
[(, meterMiddleY, +, DEFAULT_CIRCLE_SIZE, /, 4, )]
[meterMiddleY, +, DEFAULT_CIRCLE_SIZE, /, 4]
[meterMiddleY]
[DEFAULT_CIRCLE_SIZE, /, 4]
[DEFAULT_CIRCLE_SIZE]
[4]
[arrow, ., addPoint, (, (, int, ), meterMiddleX, ,, (, int, ), valueP3, )]
[arrow]
[(, int, ), meterMiddleX]
[meterMiddleX]
[(, int, ), valueP3]
[valueP3]
[arrow, ., addPoint, (, (, int, ), meterMiddleX, ,, (, int, ), valueP4, )]
[arrow]
[(, int, ), meterMiddleX]
[meterMiddleX]
[(, int, ), valueP4]
[valueP4]
[arrow, ., addPoint, (, (, int, ), (, meterMiddleX, -, DEFAULT_CIRCLE_SIZE, /, 4, ), ,, (, int, ), meterMiddleY, )]
[arrow]
[(, int, ), (, meterMiddleX, -, DEFAULT_CIRCLE_SIZE, /, 4, )]
[(, meterMiddleX, -, DEFAULT_CIRCLE_SIZE, /, 4, )]
[meterMiddleX, -, DEFAULT_CIRCLE_SIZE, /, 4]
[meterMiddleX]
[DEFAULT_CIRCLE_SIZE, /, 4]
[DEFAULT_CIRCLE_SIZE]
[4]
[(, int, ), meterMiddleY]
[meterMiddleY]
[arrow, ., addPoint, (, (, int, ), (, meterMiddleX, +, DEFAULT_CIRCLE_SIZE, /, 4, ), ,, (, int, ), meterMiddleY, )]
[arrow]
[(, int, ), (, meterMiddleX, +, DEFAULT_CIRCLE_SIZE, /, 4, )]
[(, meterMiddleX, +, DEFAULT_CIRCLE_SIZE, /, 4, )]
[meterMiddleX, +, DEFAULT_CIRCLE_SIZE, /, 4]
[meterMiddleX]
[DEFAULT_CIRCLE_SIZE, /, 4]
[DEFAULT_CIRCLE_SIZE]
[4]
[(, int, ), meterMiddleY]
[meterMiddleY]
[arrow, ., addPoint, (, (, int, ), valueP1, ,, (, int, ), valueP2, )]
[arrow]
[(, int, ), valueP1]
[valueP1]
[(, int, ), valueP2]
[valueP2]
[g2, ., fill, (, arrow, )]
[g2]
[arrow]
[new, Ellipse2D, ., Double, (, meterMiddleX, -, DEFAULT_CIRCLE_SIZE, /, 2, ,, meterMiddleY, -, DEFAULT_CIRCLE_SIZE, /, 2, ,, DEFAULT_CIRCLE_SIZE, ,, DEFAULT_CIRCLE_SIZE, )]
[meterMiddleX, -, DEFAULT_CIRCLE_SIZE, /, 2]
[meterMiddleX]
[DEFAULT_CIRCLE_SIZE, /, 2]
[DEFAULT_CIRCLE_SIZE]
[2]
[meterMiddleY, -, DEFAULT_CIRCLE_SIZE, /, 2]
[meterMiddleY]
[DEFAULT_CIRCLE_SIZE, /, 2]
[DEFAULT_CIRCLE_SIZE]
[2]
[DEFAULT_CIRCLE_SIZE]
[DEFAULT_CIRCLE_SIZE]
[g2, ., fill, (, circle, )]
[g2]
[circle]
[g2, ., setClip, (, savedClip, )]
[g2]
[savedClip]
[g2, ., setComposite, (, originalComposite, )]
[g2]
[originalComposite]
[this, ., drawBorder]
[this]
[drawOutline, (, g2, ,, area, )]
[g2]
[area]
[interval, ., getRange, (, ), ., getLowerBound, (, )]
[interval, ., getRange, (, )]
[interval]
[interval, ., getRange, (, ), ., getUpperBound, (, )]
[interval, ., getRange, (, )]
[interval]
[interval, ., getOutlinePaint, (, )]
[interval]
[interval, ., getOutlineStroke, (, )]
[interval]
[interval, ., getBackgroundPaint, (, )]
[interval]
[backgroundPaint, !=, null]
[backgroundPaint]
[null]
[fillArc, (, g2, ,, meterArea, ,, minValue, ,, maxValue, ,, backgroundPaint, ,, false, )]
[g2]
[meterArea]
[minValue]
[maxValue]
[backgroundPaint]
[false]
[outlinePaint, !=, null]
[outlinePaint]
[null]
[outlineStroke, !=, null]
[outlineStroke]
[null]
[drawArc, (, g2, ,, meterArea, ,, minValue, ,, maxValue, ,, outlinePaint, ,, outlineStroke, )]
[g2]
[meterArea]
[minValue]
[maxValue]
[outlinePaint]
[outlineStroke]
[drawTick, (, g2, ,, meterArea, ,, minValue, ,, true, )]
[g2]
[meterArea]
[minValue]
[true]
[drawTick, (, g2, ,, meterArea, ,, maxValue, ,, true, )]
[g2]
[meterArea]
[maxValue]
[true]
[valueToAngle, (, maxValue, )]
[maxValue]
[valueToAngle, (, minValue, )]
[minValue]
[endAngle, -, startAngle]
[endAngle]
[startAngle]
[area, ., getX, (, )]
[area]
[area, ., getY, (, )]
[area]
[area, ., getWidth, (, )]
[area]
[area, ., getHeight, (, )]
[area]
[g2, ., setPaint, (, paint, )]
[g2]
[paint]
[g2, ., setStroke, (, stroke, )]
[g2]
[stroke]
[paint, !=, null, &&, stroke, !=, null]
[paint, !=, null]
[paint]
[null]
[stroke, !=, null]
[stroke]
[null]
[new, Arc2D, ., Double, (, x, ,, y, ,, w, ,, h, ,, startAngle, ,, extent, ,, Arc2D, ., OPEN, )]
[x]
[y]
[w]
[h]
[startAngle]
[extent]
[Arc2D, ., OPEN]
[Arc2D]
[g2, ., setPaint, (, paint, )]
[g2]
[paint]
[g2, ., setStroke, (, stroke, )]
[g2]
[stroke]
[g2, ., draw, (, arc, )]
[g2]
[arc]
[paint, ==, null]
[paint]
[null]
[new, IllegalArgumentException, (, "Null 'paint' argument", )]
["Null 'paint' argument"]
[valueToAngle, (, maxValue, )]
[maxValue]
[valueToAngle, (, minValue, )]
[minValue]
[endAngle, -, startAngle]
[endAngle]
[startAngle]
[area, ., getX, (, )]
[area]
[area, ., getY, (, )]
[area]
[area, ., getWidth, (, )]
[area]
[area, ., getHeight, (, )]
[area]
[Arc2D, ., OPEN]
[Arc2D]
[this, ., shape, ==, DialShape, ., PIE]
[this, ., shape]
[this]
[DialShape, ., PIE]
[DialShape]
[joinType]
[Arc2D, ., PIE]
[Arc2D]
[this, ., shape, ==, DialShape, ., CHORD]
[this, ., shape]
[this]
[DialShape, ., CHORD]
[DialShape]
[dial, &&, this, ., meterAngle, >, 180]
[dial]
[this, ., meterAngle, >, 180]
[this, ., meterAngle]
[this]
[180]
[joinType]
[Arc2D, ., CHORD]
[Arc2D]
[joinType]
[Arc2D, ., PIE]
[Arc2D]
[this, ., shape, ==, DialShape, ., CIRCLE]
[this, ., shape]
[this]
[DialShape, ., CIRCLE]
[DialShape]
[joinType]
[Arc2D, ., PIE]
[Arc2D]
[dial]
[extent]
[360]
[new, IllegalStateException, (, "DialShape not recognised.", )]
["DialShape not recognised."]
[g2, ., setPaint, (, paint, )]
[g2]
[paint]
[new, Arc2D, ., Double, (, x, ,, y, ,, w, ,, h, ,, startAngle, ,, extent, ,, joinType, )]
[x]
[y]
[w]
[h]
[startAngle]
[extent]
[joinType]
[g2, ., fill, (, arc, )]
[g2]
[arc]
[value]
[value, -, this, ., range, ., getLowerBound, (, )]
[value]
[this, ., range, ., getLowerBound, (, )]
[this, ., range]
[this]
[180, +, (, (, this, ., meterAngle, -, 180, ), /, 2, )]
[180]
[(, (, this, ., meterAngle, -, 180, ), /, 2, )]
[(, this, ., meterAngle, -, 180, ), /, 2]
[(, this, ., meterAngle, -, 180, )]
[this, ., meterAngle, -, 180]
[this, ., meterAngle]
[this]
[180]
[2]
[baseAngle, -, (, (, value, /, this, ., range, ., getLength, (, ), ), *, this, ., meterAngle, )]
[baseAngle]
[(, (, value, /, this, ., range, ., getLength, (, ), ), *, this, ., meterAngle, )]
[(, value, /, this, ., range, ., getLength, (, ), ), *, this, ., meterAngle]
[(, value, /, this, ., range, ., getLength, (, ), )]
[value, /, this, ., range, ., getLength, (, )]
[value]
[this, ., range, ., getLength, (, )]
[this, ., range]
[this]
[this, ., meterAngle]
[this]
[minValue]
[v, <=, maxValue]
[v]
[maxValue]
[v]
[this, ., tickSize]
[this]
[drawTick, (, g2, ,, meterArea, ,, v, )]
[g2]
[meterArea]
[v]
[drawTick, (, g2, ,, meterArea, ,, value, ,, false, )]
[g2]
[meterArea]
[value]
[false]
[valueToAngle, (, value, )]
[value]
[meterArea, ., getCenterX, (, )]
[meterArea]
[meterArea, ., getCenterY, (, )]
[meterArea]
[g2, ., setPaint, (, this, ., tickPaint, )]
[g2]
[this, ., tickPaint]
[this]
[g2, ., setStroke, (, new, BasicStroke, (, 2.0f, ), )]
[g2]
[new, BasicStroke, (, 2.0f, )]
[2.0f]
[0]
[0]
[(, meterArea, ., getWidth, (, ), /, 2, ), +, DEFAULT_BORDER_SIZE]
[(, meterArea, ., getWidth, (, ), /, 2, )]
[meterArea, ., getWidth, (, ), /, 2]
[meterArea, ., getWidth, (, )]
[meterArea]
[2]
[DEFAULT_BORDER_SIZE]
[radius, -, 15]
[radius]
[15]
[meterMiddleX, +, (, radius, *, Math, ., cos, (, Math, ., PI, *, (, valueAngle, /, 180, ), ), )]
[meterMiddleX]
[(, radius, *, Math, ., cos, (, Math, ., PI, *, (, valueAngle, /, 180, ), ), )]
[radius, *, Math, ., cos, (, Math, ., PI, *, (, valueAngle, /, 180, ), )]
[radius]
[Math, ., cos, (, Math, ., PI, *, (, valueAngle, /, 180, ), )]
[Math]
[Math, ., PI, *, (, valueAngle, /, 180, )]
[Math, ., PI]
[Math]
[(, valueAngle, /, 180, )]
[valueAngle, /, 180]
[valueAngle]
[180]
[meterMiddleY, -, (, radius, *, Math, ., sin, (, Math, ., PI, *, (, valueAngle, /, 180, ), ), )]
[meterMiddleY]
[(, radius, *, Math, ., sin, (, Math, ., PI, *, (, valueAngle, /, 180, ), ), )]
[radius, *, Math, ., sin, (, Math, ., PI, *, (, valueAngle, /, 180, ), )]
[radius]
[Math, ., sin, (, Math, ., PI, *, (, valueAngle, /, 180, ), )]
[Math]
[Math, ., PI, *, (, valueAngle, /, 180, )]
[Math, ., PI]
[Math]
[(, valueAngle, /, 180, )]
[valueAngle, /, 180]
[valueAngle]
[180]
[valueP2X]
[meterMiddleX, +, (, radius1, *, Math, ., cos, (, Math, ., PI, *, (, valueAngle, /, 180, ), ), )]
[meterMiddleX]
[(, radius1, *, Math, ., cos, (, Math, ., PI, *, (, valueAngle, /, 180, ), ), )]
[radius1, *, Math, ., cos, (, Math, ., PI, *, (, valueAngle, /, 180, ), )]
[radius1]
[Math, ., cos, (, Math, ., PI, *, (, valueAngle, /, 180, ), )]
[Math]
[Math, ., PI, *, (, valueAngle, /, 180, )]
[Math, ., PI]
[Math]
[(, valueAngle, /, 180, )]
[valueAngle, /, 180]
[valueAngle]
[180]
[valueP2Y]
[meterMiddleY, -, (, radius1, *, Math, ., sin, (, Math, ., PI, *, (, valueAngle, /, 180, ), ), )]
[meterMiddleY]
[(, radius1, *, Math, ., sin, (, Math, ., PI, *, (, valueAngle, /, 180, ), ), )]
[radius1, *, Math, ., sin, (, Math, ., PI, *, (, valueAngle, /, 180, ), )]
[radius1]
[Math, ., sin, (, Math, ., PI, *, (, valueAngle, /, 180, ), )]
[Math]
[Math, ., PI, *, (, valueAngle, /, 180, )]
[Math, ., PI]
[Math]
[(, valueAngle, /, 180, )]
[valueAngle, /, 180]
[valueAngle]
[180]
[new, Line2D, ., Double, (, valueP1X, ,, valueP1Y, ,, valueP2X, ,, valueP2Y, )]
[valueP1X]
[valueP1Y]
[valueP2X]
[valueP2Y]
[g2, ., draw, (, line, )]
[g2]
[line]
[this, ., tickLabelsVisible, &&, label]
[this, ., tickLabelsVisible]
[this]
[label]
[this, ., tickLabelFormat, ., format, (, value, )]
[this, ., tickLabelFormat]
[this]
[value]
[g2, ., setFont, (, this, ., tickLabelFont, )]
[g2]
[this, ., tickLabelFont]
[this]
[g2, ., setPaint, (, this, ., tickLabelPaint, )]
[g2]
[this, ., tickLabelPaint]
[this]
[g2, ., getFontMetrics, (, )]
[g2]
[TextUtilities, ., getTextBounds, (, tickLabel, ,, g2, ,, fm, )]
[TextUtilities]
[tickLabel]
[g2]
[fm]
[valueP2X]
[valueP2Y]
[valueAngle, ==, 90, ||, valueAngle, ==, 270]
[valueAngle, ==, 90]
[valueAngle]
[90]
[valueAngle, ==, 270]
[valueAngle]
[270]
[x]
[x, -, tickLabelBounds, ., getWidth, (, ), /, 2]
[x]
[tickLabelBounds, ., getWidth, (, ), /, 2]
[tickLabelBounds, ., getWidth, (, )]
[tickLabelBounds]
[2]
[valueAngle, <, 90, ||, valueAngle, >, 270]
[valueAngle, <, 90]
[valueAngle]
[90]
[valueAngle, >, 270]
[valueAngle]
[270]
[x]
[x, -, tickLabelBounds, ., getWidth, (, )]
[x]
[tickLabelBounds, ., getWidth, (, )]
[tickLabelBounds]
[(, valueAngle, >, 135, &&, valueAngle, <, 225, ), ||, valueAngle, >, 315, ||, valueAngle, <, 45]
[(, valueAngle, >, 135, &&, valueAngle, <, 225, ), ||, valueAngle, >, 315]
[(, valueAngle, >, 135, &&, valueAngle, <, 225, )]
[valueAngle, >, 135, &&, valueAngle, <, 225]
[valueAngle, >, 135]
[valueAngle]
[135]
[valueAngle, <, 225]
[valueAngle]
[225]
[valueAngle, >, 315]
[valueAngle]
[315]
[valueAngle, <, 45]
[valueAngle]
[45]
[y]
[y, -, tickLabelBounds, ., getHeight, (, ), /, 2]
[y]
[tickLabelBounds, ., getHeight, (, ), /, 2]
[tickLabelBounds, ., getHeight, (, )]
[tickLabelBounds]
[2]
[y]
[y, +, tickLabelBounds, ., getHeight, (, ), /, 2]
[y]
[tickLabelBounds, ., getHeight, (, ), /, 2]
[tickLabelBounds, ., getHeight, (, )]
[tickLabelBounds]
[2]
[g2, ., drawString, (, tickLabel, ,, (, float, ), x, ,, (, float, ), y, )]
[g2]
[tickLabel]
[(, float, ), x]
[x]
[(, float, ), y]
[y]
[g2, ., setFont, (, this, ., valueFont, )]
[g2]
[this, ., valueFont]
[this]
[g2, ., setPaint, (, this, ., valuePaint, )]
[g2]
[this, ., valuePaint]
[this]
["No value"]
[this, ., dataset, !=, null]
[this, ., dataset]
[this]
[null]
[this, ., dataset, ., getValue, (, )]
[this, ., dataset]
[this]
[n, !=, null]
[n]
[null]
[valueStr]
[this, ., tickLabelFormat, ., format, (, n, ., doubleValue, (, ), ), +, " ", +, this, ., units]
[this, ., tickLabelFormat, ., format, (, n, ., doubleValue, (, ), ), +, " "]
[this, ., tickLabelFormat, ., format, (, n, ., doubleValue, (, ), )]
[this, ., tickLabelFormat]
[this]
[n, ., doubleValue, (, )]
[n]
[" "]
[this, ., units]
[this]
[(, float, ), area, ., getCenterX, (, )]
[area, ., getCenterX, (, )]
[area]
[(, float, ), area, ., getCenterY, (, ), +, DEFAULT_CIRCLE_SIZE]
[(, float, ), area, ., getCenterY, (, )]
[area, ., getCenterY, (, )]
[area]
[DEFAULT_CIRCLE_SIZE]
[TextUtilities, ., drawAlignedString, (, valueStr, ,, g2, ,, x, ,, y, ,, TextAnchor, ., TOP_CENTER, )]
[TextUtilities]
[valueStr]
[g2]
[x]
[y]
[TextAnchor, ., TOP_CENTER]
[TextAnchor]
[localizationResources, ., getString, (, "Meter_Plot", )]
[localizationResources]
["Meter_Plot"]
[obj, ==, this]
[obj]
[this]
[true]
[!, (, obj, instanceof, MeterPlot, )]
[(, obj, instanceof, MeterPlot, )]
[obj, instanceof, MeterPlot]
[obj]
[false]
[!, super, ., equals, (, obj, )]
[super, ., equals, (, obj, )]
[super]
[obj]
[false]
[(, MeterPlot, ), obj]
[obj]
[!, ObjectUtilities, ., equal, (, this, ., units, ,, that, ., units, )]
[ObjectUtilities, ., equal, (, this, ., units, ,, that, ., units, )]
[ObjectUtilities]
[this, ., units]
[this]
[that, ., units]
[that]
[false]
[!, ObjectUtilities, ., equal, (, this, ., range, ,, that, ., range, )]
[ObjectUtilities, ., equal, (, this, ., range, ,, that, ., range, )]
[ObjectUtilities]
[this, ., range]
[this]
[that, ., range]
[that]
[false]
[!, ObjectUtilities, ., equal, (, this, ., intervals, ,, that, ., intervals, )]
[ObjectUtilities, ., equal, (, this, ., intervals, ,, that, ., intervals, )]
[ObjectUtilities]
[this, ., intervals]
[this]
[that, ., intervals]
[that]
[false]
[!, PaintUtilities, ., equal, (, this, ., dialOutlinePaint, ,, that, ., dialOutlinePaint, )]
[PaintUtilities, ., equal, (, this, ., dialOutlinePaint, ,, that, ., dialOutlinePaint, )]
[PaintUtilities]
[this, ., dialOutlinePaint]
[this]
[that, ., dialOutlinePaint]
[that]
[false]
[this, ., shape, !=, that, ., shape]
[this, ., shape]
[this]
[that, ., shape]
[that]
[false]
[!, PaintUtilities, ., equal, (, this, ., dialBackgroundPaint, ,, that, ., dialBackgroundPaint, )]
[PaintUtilities, ., equal, (, this, ., dialBackgroundPaint, ,, that, ., dialBackgroundPaint, )]
[PaintUtilities]
[this, ., dialBackgroundPaint]
[this]
[that, ., dialBackgroundPaint]
[that]
[false]
[!, PaintUtilities, ., equal, (, this, ., needlePaint, ,, that, ., needlePaint, )]
[PaintUtilities, ., equal, (, this, ., needlePaint, ,, that, ., needlePaint, )]
[PaintUtilities]
[this, ., needlePaint]
[this]
[that, ., needlePaint]
[that]
[false]
[!, ObjectUtilities, ., equal, (, this, ., valueFont, ,, that, ., valueFont, )]
[ObjectUtilities, ., equal, (, this, ., valueFont, ,, that, ., valueFont, )]
[ObjectUtilities]
[this, ., valueFont]
[this]
[that, ., valueFont]
[that]
[false]
[!, PaintUtilities, ., equal, (, this, ., valuePaint, ,, that, ., valuePaint, )]
[PaintUtilities, ., equal, (, this, ., valuePaint, ,, that, ., valuePaint, )]
[PaintUtilities]
[this, ., valuePaint]
[this]
[that, ., valuePaint]
[that]
[false]
[!, PaintUtilities, ., equal, (, this, ., tickPaint, ,, that, ., tickPaint, )]
[PaintUtilities, ., equal, (, this, ., tickPaint, ,, that, ., tickPaint, )]
[PaintUtilities]
[this, ., tickPaint]
[this]
[that, ., tickPaint]
[that]
[false]
[this, ., tickSize, !=, that, ., tickSize]
[this, ., tickSize]
[this]
[that, ., tickSize]
[that]
[false]
[this, ., tickLabelsVisible, !=, that, ., tickLabelsVisible]
[this, ., tickLabelsVisible]
[this]
[that, ., tickLabelsVisible]
[that]
[false]
[!, ObjectUtilities, ., equal, (, this, ., tickLabelFont, ,, that, ., tickLabelFont, )]
[ObjectUtilities, ., equal, (, this, ., tickLabelFont, ,, that, ., tickLabelFont, )]
[ObjectUtilities]
[this, ., tickLabelFont]
[this]
[that, ., tickLabelFont]
[that]
[false]
[!, PaintUtilities, ., equal, (, this, ., tickLabelPaint, ,, that, ., tickLabelPaint, )]
[PaintUtilities, ., equal, (, this, ., tickLabelPaint, ,, that, ., tickLabelPaint, )]
[PaintUtilities]
[this, ., tickLabelPaint]
[this]
[that, ., tickLabelPaint]
[that]
[false]
[!, ObjectUtilities, ., equal, (, this, ., tickLabelFormat, ,, that, ., tickLabelFormat, )]
[ObjectUtilities, ., equal, (, this, ., tickLabelFormat, ,, that, ., tickLabelFormat, )]
[ObjectUtilities]
[this, ., tickLabelFormat]
[this]
[that, ., tickLabelFormat]
[that]
[false]
[this, ., drawBorder, !=, that, ., drawBorder]
[this, ., drawBorder]
[this]
[that, ., drawBorder]
[that]
[false]
[this, ., meterAngle, !=, that, ., meterAngle]
[this, ., meterAngle]
[this]
[that, ., meterAngle]
[that]
[false]
[true]
[stream, ., defaultWriteObject, (, )]
[stream]
[SerialUtilities, ., writePaint, (, this, ., dialBackgroundPaint, ,, stream, )]
[SerialUtilities]
[this, ., dialBackgroundPaint]
[this]
[stream]
[SerialUtilities, ., writePaint, (, this, ., dialOutlinePaint, ,, stream, )]
[SerialUtilities]
[this, ., dialOutlinePaint]
[this]
[stream]
[SerialUtilities, ., writePaint, (, this, ., needlePaint, ,, stream, )]
[SerialUtilities]
[this, ., needlePaint]
[this]
[stream]
[SerialUtilities, ., writePaint, (, this, ., valuePaint, ,, stream, )]
[SerialUtilities]
[this, ., valuePaint]
[this]
[stream]
[SerialUtilities, ., writePaint, (, this, ., tickPaint, ,, stream, )]
[SerialUtilities]
[this, ., tickPaint]
[this]
[stream]
[SerialUtilities, ., writePaint, (, this, ., tickLabelPaint, ,, stream, )]
[SerialUtilities]
[this, ., tickLabelPaint]
[this]
[stream]
[stream, ., defaultReadObject, (, )]
[stream]
[this, ., dialBackgroundPaint]
[this]
[SerialUtilities, ., readPaint, (, stream, )]
[SerialUtilities]
[stream]
[this, ., dialOutlinePaint]
[this]
[SerialUtilities, ., readPaint, (, stream, )]
[SerialUtilities]
[stream]
[this, ., needlePaint]
[this]
[SerialUtilities, ., readPaint, (, stream, )]
[SerialUtilities]
[stream]
[this, ., valuePaint]
[this]
[SerialUtilities, ., readPaint, (, stream, )]
[SerialUtilities]
[stream]
[this, ., tickPaint]
[this]
[SerialUtilities, ., readPaint, (, stream, )]
[SerialUtilities]
[stream]
[this, ., tickLabelPaint]
[this]
[SerialUtilities, ., readPaint, (, stream, )]
[SerialUtilities]
[stream]
[this, ., dataset, !=, null]
[this, ., dataset]
[this]
[null]
[this, ., dataset, ., addChangeListener, (, this, )]
[this, ., dataset]
[this]
[this]
[(, MeterPlot, ), super, ., clone, (, )]
[super, ., clone, (, )]
[super]
[clone, ., tickLabelFormat]
[clone]
[(, NumberFormat, ), this, ., tickLabelFormat, ., clone, (, )]
[this, ., tickLabelFormat, ., clone, (, )]
[this, ., tickLabelFormat]
[this]
[clone, ., intervals]
[clone]
[new, java, ., util, ., ArrayList, (, this, ., intervals, )]
[this, ., intervals]
[this]
[clone, ., dataset, !=, null]
[clone, ., dataset]
[clone]
[null]
[clone, ., dataset, ., addChangeListener, (, clone, )]
[clone, ., dataset]
[clone]
[clone]
[clone]
