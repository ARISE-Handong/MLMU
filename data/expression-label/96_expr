[100]
["arguments"]
[new, LiveVariableLattice, (, in, ., get, (, 0, ), )]
[in, ., get, (, 0, )]
[in]
[0]
[1]
[i, <, in, ., size, (, )]
[i]
[in, ., size, (, )]
[in]
[i, ++]
[i]
[result, ., liveSet, ., or, (, in, ., get, (, i, ), ., liveSet, )]
[result, ., liveSet]
[result]
[in, ., get, (, i, ), ., liveSet]
[in, ., get, (, i, )]
[in]
[i]
[result]
[this, ., liveSet]
[this]
[new, BitSet, (, numVars, )]
[numVars]
[Preconditions, ., checkNotNull, (, other, )]
[Preconditions]
[other]
[this, ., liveSet]
[this]
[(, BitSet, ), other, ., liveSet, ., clone, (, )]
[other, ., liveSet, ., clone, (, )]
[other, ., liveSet]
[other]
[Preconditions, ., checkNotNull, (, other, )]
[Preconditions]
[other]
[(, other, instanceof, LiveVariableLattice, ), &&, this, ., liveSet, ., equals, (, (, (, LiveVariableLattice, ), other, ), ., liveSet, )]
[(, other, instanceof, LiveVariableLattice, )]
[other, instanceof, LiveVariableLattice]
[other]
[this, ., liveSet, ., equals, (, (, (, LiveVariableLattice, ), other, ), ., liveSet, )]
[this, ., liveSet]
[this]
[(, (, LiveVariableLattice, ), other, ), ., liveSet]
[(, (, LiveVariableLattice, ), other, )]
[(, LiveVariableLattice, ), other]
[other]
[Preconditions, ., checkNotNull, (, v, )]
[Preconditions]
[v]
[liveSet, ., get, (, v, ., index, )]
[liveSet]
[v, ., index]
[v]
[liveSet, ., get, (, index, )]
[liveSet]
[index]
[liveSet, ., toString, (, )]
[liveSet]
[liveSet, ., hashCode, (, )]
[liveSet]
[cfg]
[new, LiveVariableJoinOp, (, )]
[this, ., jsScope]
[this]
[jsScope]
[this, ., escaped]
[this]
[Sets, ., newHashSet, (, )]
[Sets]
[computeEscaped, (, jsScope, ,, escaped, ,, compiler, )]
[jsScope]
[escaped]
[compiler]
[escaped]
[jsScope, ., getVar, (, var, ), ., index]
[jsScope, ., getVar, (, var, )]
[jsScope]
[var]
[false]
[new, LiveVariableLattice, (, jsScope, ., getVarCount, (, ), )]
[jsScope, ., getVarCount, (, )]
[jsScope]
[new, LiveVariableLattice, (, jsScope, ., getVarCount, (, ), )]
[jsScope, ., getVarCount, (, )]
[jsScope]
[new, BitSet, (, input, ., liveSet, ., size, (, ), )]
[input, ., liveSet, ., size, (, )]
[input, ., liveSet]
[input]
[new, BitSet, (, input, ., liveSet, ., size, (, ), )]
[input, ., liveSet, ., size, (, )]
[input, ., liveSet]
[input]
[false]
[getCfg, (, ), ., getOutEdges, (, node, )]
[getCfg, (, )]
[node]
[edgeList]
[Branch, ., ON_EX, ., equals, (, edge, ., getValue, (, ), )]
[Branch, ., ON_EX]
[Branch]
[edge, ., getValue, (, )]
[edge]
[conditional]
[true]
[computeGenKill, (, node, ,, gen, ,, kill, ,, conditional, )]
[node]
[gen]
[kill]
[conditional]
[new, LiveVariableLattice, (, input, )]
[input]
[result, ., liveSet, ., andNot, (, kill, )]
[result, ., liveSet]
[result]
[kill]
[result, ., liveSet, ., or, (, gen, )]
[result, ., liveSet]
[result]
[gen]
[result]
[n, ., getType, (, )]
[n]
[Token, ., SCRIPT]
[Token]
[Token, ., BLOCK]
[Token]
[Token, ., FUNCTION]
[Token]
[Token, ., WHILE]
[Token]
[Token, ., DO]
[Token]
[Token, ., IF]
[Token]
[computeGenKill, (, NodeUtil, ., getConditionExpression, (, n, ), ,, gen, ,, kill, ,, conditional, )]
[NodeUtil, ., getConditionExpression, (, n, )]
[NodeUtil]
[n]
[gen]
[kill]
[conditional]
[Token, ., FOR]
[Token]
[!, NodeUtil, ., isForIn, (, n, )]
[NodeUtil, ., isForIn, (, n, )]
[NodeUtil]
[n]
[computeGenKill, (, NodeUtil, ., getConditionExpression, (, n, ), ,, gen, ,, kill, ,, conditional, )]
[NodeUtil, ., getConditionExpression, (, n, )]
[NodeUtil]
[n]
[gen]
[kill]
[conditional]
[n, ., getFirstChild, (, )]
[n]
[lhs, ., getNext, (, )]
[lhs]
[lhs, ., isVar, (, )]
[lhs]
[lhs]
[lhs, ., getLastChild, (, )]
[lhs]
[lhs, ., isName, (, )]
[lhs]
[addToSetIfLocal, (, lhs, ,, kill, )]
[lhs]
[kill]
[addToSetIfLocal, (, lhs, ,, gen, )]
[lhs]
[gen]
[computeGenKill, (, lhs, ,, gen, ,, kill, ,, conditional, )]
[lhs]
[gen]
[kill]
[conditional]
[Token, ., VAR]
[Token]
[n, ., getFirstChild, (, )]
[n]
[c, !=, null]
[c]
[null]
[c]
[c, ., getNext, (, )]
[c]
[c, ., hasChildren, (, )]
[c]
[computeGenKill, (, c, ., getFirstChild, (, ), ,, gen, ,, kill, ,, conditional, )]
[c, ., getFirstChild, (, )]
[c]
[gen]
[kill]
[conditional]
[!, conditional]
[conditional]
[addToSetIfLocal, (, c, ,, kill, )]
[c]
[kill]
[Token, ., AND]
[Token]
[Token, ., OR]
[Token]
[computeGenKill, (, n, ., getFirstChild, (, ), ,, gen, ,, kill, ,, conditional, )]
[n, ., getFirstChild, (, )]
[n]
[gen]
[kill]
[conditional]
[computeGenKill, (, n, ., getLastChild, (, ), ,, gen, ,, kill, ,, true, )]
[n, ., getLastChild, (, )]
[n]
[gen]
[kill]
[true]
[Token, ., HOOK]
[Token]
[computeGenKill, (, n, ., getFirstChild, (, ), ,, gen, ,, kill, ,, conditional, )]
[n, ., getFirstChild, (, )]
[n]
[gen]
[kill]
[conditional]
[computeGenKill, (, n, ., getFirstChild, (, ), ., getNext, (, ), ,, gen, ,, kill, ,, true, )]
[n, ., getFirstChild, (, ), ., getNext, (, )]
[n, ., getFirstChild, (, )]
[n]
[gen]
[kill]
[true]
[computeGenKill, (, n, ., getLastChild, (, ), ,, gen, ,, kill, ,, true, )]
[n, ., getLastChild, (, )]
[n]
[gen]
[kill]
[true]
[Token, ., NAME]
[Token]
[isArgumentsName, (, n, )]
[n]
[markAllParametersEscaped, (, )]
[addToSetIfLocal, (, n, ,, gen, )]
[n]
[gen]
[NodeUtil, ., isAssignmentOp, (, n, ), &&, n, ., getFirstChild, (, ), ., isName, (, )]
[NodeUtil, ., isAssignmentOp, (, n, )]
[NodeUtil]
[n]
[n, ., getFirstChild, (, ), ., isName, (, )]
[n, ., getFirstChild, (, )]
[n]
[n, ., getFirstChild, (, )]
[n]
[!, conditional]
[conditional]
[addToSetIfLocal, (, lhs, ,, kill, )]
[lhs]
[kill]
[!, n, ., isAssign, (, )]
[n, ., isAssign, (, )]
[n]
[addToSetIfLocal, (, lhs, ,, gen, )]
[lhs]
[gen]
[computeGenKill, (, lhs, ., getNext, (, ), ,, gen, ,, kill, ,, conditional, )]
[lhs, ., getNext, (, )]
[lhs]
[gen]
[kill]
[conditional]
[n, ., getFirstChild, (, )]
[n]
[c, !=, null]
[c]
[null]
[c]
[c, ., getNext, (, )]
[c]
[computeGenKill, (, c, ,, gen, ,, kill, ,, conditional, )]
[c]
[gen]
[kill]
[conditional]
[Preconditions, ., checkState, (, node, ., isName, (, ), )]
[Preconditions]
[node, ., isName, (, )]
[node]
[node, ., getString, (, )]
[node]
[!, jsScope, ., isDeclared, (, name, ,, false, )]
[jsScope, ., isDeclared, (, name, ,, false, )]
[jsScope]
[name]
[false]
[jsScope, ., getVar, (, name, )]
[jsScope]
[name]
[!, escaped, ., contains, (, var, )]
[escaped, ., contains, (, var, )]
[escaped]
[var]
[set, ., set, (, var, ., index, )]
[set]
[var, ., index]
[var]
[jsScope, ., getRootNode, (, ), ., getFirstChild, (, ), ., getNext, (, )]
[jsScope, ., getRootNode, (, ), ., getFirstChild, (, )]
[jsScope, ., getRootNode, (, )]
[jsScope]
[lp, ., getFirstChild, (, )]
[lp]
[arg, !=, null]
[arg]
[null]
[arg]
[arg, ., getNext, (, )]
[arg]
[escaped, ., add, (, jsScope, ., getVar, (, arg, ., getString, (, ), ), )]
[escaped]
[jsScope, ., getVar, (, arg, ., getString, (, ), )]
[jsScope]
[arg, ., getString, (, )]
[arg]
[!, n, ., isName, (, ), ||, !, n, ., getString, (, ), ., equals, (, ARGUMENT_ARRAY_ALIAS, ), ||, jsScope, ., isDeclared, (, ARGUMENT_ARRAY_ALIAS, ,, false, )]
[!, n, ., isName, (, ), ||, !, n, ., getString, (, ), ., equals, (, ARGUMENT_ARRAY_ALIAS, )]
[!, n, ., isName, (, )]
[n, ., isName, (, )]
[n]
[!, n, ., getString, (, ), ., equals, (, ARGUMENT_ARRAY_ALIAS, )]
[n, ., getString, (, ), ., equals, (, ARGUMENT_ARRAY_ALIAS, )]
[n, ., getString, (, )]
[n]
[ARGUMENT_ARRAY_ALIAS]
[jsScope, ., isDeclared, (, ARGUMENT_ARRAY_ALIAS, ,, false, )]
[jsScope]
[ARGUMENT_ARRAY_ALIAS]
[false]
[false]
[true]
