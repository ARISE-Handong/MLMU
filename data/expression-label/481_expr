[-, 3595635038460823663L]
[3595635038460823663L]
[false]
[this, ., renderAsPercentages]
[this]
[renderAsPercentages]
[this, ., renderAsPercentages]
[this]
[this, ., renderAsPercentages]
[this]
[asPercentages]
[fireChangeEvent, (, )]
[2]
[this, ., renderAsPercentages]
[this]
[new, Range, (, 0.0, ,, 1.0, )]
[0.0]
[1.0]
[DatasetUtilities, ., findStackedRangeBounds, (, dataset, )]
[DatasetUtilities]
[dataset]
[null]
[state, ., getEntityCollection, (, )]
[state]
[0.0]
[dataset, ., getValue, (, row, ,, column, )]
[dataset]
[row]
[column]
[n, !=, null]
[n]
[null]
[y1]
[n, ., doubleValue, (, )]
[n]
[getStackValues, (, dataset, ,, row, ,, column, )]
[dataset]
[row]
[column]
[domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), )]
[domainAxis]
[column]
[getColumnCount, (, )]
[dataArea]
[plot, ., getDomainAxisEdge, (, )]
[plot]
[0.0]
[n]
[dataset, ., getValue, (, row, ,, Math, ., max, (, column, -, 1, ,, 0, ), )]
[dataset]
[row]
[Math, ., max, (, column, -, 1, ,, 0, )]
[Math]
[column, -, 1]
[column]
[1]
[0]
[n, !=, null]
[n]
[null]
[y0]
[n, ., doubleValue, (, )]
[n]
[getStackValues, (, dataset, ,, row, ,, Math, ., max, (, column, -, 1, ,, 0, ), )]
[dataset]
[row]
[Math, ., max, (, column, -, 1, ,, 0, )]
[Math]
[column, -, 1]
[column]
[1]
[0]
[domainAxis, ., getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), )]
[domainAxis]
[column]
[getColumnCount, (, )]
[dataArea]
[plot, ., getDomainAxisEdge, (, )]
[plot]
[dataset, ., getColumnCount, (, )]
[dataset]
[0.0]
[n]
[dataset, ., getValue, (, row, ,, Math, ., min, (, column, +, 1, ,, itemCount, -, 1, ), )]
[dataset]
[row]
[Math, ., min, (, column, +, 1, ,, itemCount, -, 1, )]
[Math]
[column, +, 1]
[column]
[1]
[itemCount, -, 1]
[itemCount]
[1]
[n, !=, null]
[n]
[null]
[y2]
[n, ., doubleValue, (, )]
[n]
[getStackValues, (, dataset, ,, row, ,, Math, ., min, (, column, +, 1, ,, itemCount, -, 1, ), )]
[dataset]
[row]
[Math, ., min, (, column, +, 1, ,, itemCount, -, 1, )]
[Math]
[column, +, 1]
[column]
[1]
[itemCount, -, 1]
[itemCount]
[1]
[domainAxis, ., getCategoryEnd, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), )]
[domainAxis]
[column]
[getColumnCount, (, )]
[dataArea]
[plot, ., getDomainAxisEdge, (, )]
[plot]
[xx0]
[xx2]
[averageStackValues, (, stack0, ,, stack1, )]
[stack0]
[stack1]
[averageStackValues, (, stack1, ,, stack2, )]
[stack1]
[stack2]
[adjustedStackValues, (, stack0, ,, stack1, )]
[stack0]
[stack1]
[adjustedStackValues, (, stack1, ,, stack2, )]
[stack1]
[stack2]
[plot, ., getRangeAxisEdge, (, )]
[plot]
[new, GeneralPath, (, )]
[new, GeneralPath, (, )]
[y1, >=, 0.0]
[y1]
[0.0]
[transY1]
[(, float, ), rangeAxis, ., valueToJava2D, (, y1, +, stack1, [, 1, ], ,, dataArea, ,, edge1, )]
[rangeAxis, ., valueToJava2D, (, y1, +, stack1, [, 1, ], ,, dataArea, ,, edge1, )]
[rangeAxis]
[y1, +, stack1, [, 1, ]]
[y1]
[stack1, [, 1, ]]
[stack1]
[1]
[dataArea]
[edge1]
[(, float, ), rangeAxis, ., valueToJava2D, (, stack1, [, 1, ], ,, dataArea, ,, edge1, )]
[rangeAxis, ., valueToJava2D, (, stack1, [, 1, ], ,, dataArea, ,, edge1, )]
[rangeAxis]
[stack1, [, 1, ]]
[stack1]
[1]
[dataArea]
[edge1]
[(, float, ), rangeAxis, ., valueToJava2D, (, adjStackLeft, [, 1, ], ,, dataArea, ,, edge1, )]
[rangeAxis, ., valueToJava2D, (, adjStackLeft, [, 1, ], ,, dataArea, ,, edge1, )]
[rangeAxis]
[adjStackLeft, [, 1, ]]
[adjStackLeft]
[1]
[dataArea]
[edge1]
[y0, >=, 0.0]
[y0]
[0.0]
[(, y0, +, y1, ), /, 2.0, +, stackLeft, [, 1, ]]
[(, y0, +, y1, ), /, 2.0]
[(, y0, +, y1, )]
[y0, +, y1]
[y0]
[y1]
[2.0]
[stackLeft, [, 1, ]]
[stackLeft]
[1]
[(, float, ), rangeAxis, ., valueToJava2D, (, yleft, ,, dataArea, ,, edge1, )]
[rangeAxis, ., valueToJava2D, (, yleft, ,, dataArea, ,, edge1, )]
[rangeAxis]
[yleft]
[dataArea]
[edge1]
[left, ., moveTo, (, (, float, ), xx1, ,, transY1, )]
[left]
[(, float, ), xx1]
[xx1]
[transY1]
[left, ., lineTo, (, (, float, ), xx1, ,, transStack1, )]
[left]
[(, float, ), xx1]
[xx1]
[transStack1]
[left, ., lineTo, (, (, float, ), xxLeft, ,, transStackLeft, )]
[left]
[(, float, ), xxLeft]
[xxLeft]
[transStackLeft]
[left, ., lineTo, (, (, float, ), xxLeft, ,, transYLeft, )]
[left]
[(, float, ), xxLeft]
[xxLeft]
[transYLeft]
[left, ., closePath, (, )]
[left]
[left, ., moveTo, (, (, float, ), xx1, ,, transStack1, )]
[left]
[(, float, ), xx1]
[xx1]
[transStack1]
[left, ., lineTo, (, (, float, ), xx1, ,, transY1, )]
[left]
[(, float, ), xx1]
[xx1]
[transY1]
[left, ., lineTo, (, (, float, ), xxLeft, ,, transStackLeft, )]
[left]
[(, float, ), xxLeft]
[xxLeft]
[transStackLeft]
[left, ., closePath, (, )]
[left]
[(, float, ), rangeAxis, ., valueToJava2D, (, adjStackRight, [, 1, ], ,, dataArea, ,, edge1, )]
[rangeAxis, ., valueToJava2D, (, adjStackRight, [, 1, ], ,, dataArea, ,, edge1, )]
[rangeAxis]
[adjStackRight, [, 1, ]]
[adjStackRight]
[1]
[dataArea]
[edge1]
[y2, >=, 0.0]
[y2]
[0.0]
[(, y1, +, y2, ), /, 2.0, +, stackRight, [, 1, ]]
[(, y1, +, y2, ), /, 2.0]
[(, y1, +, y2, )]
[y1, +, y2]
[y1]
[y2]
[2.0]
[stackRight, [, 1, ]]
[stackRight]
[1]
[(, float, ), rangeAxis, ., valueToJava2D, (, yright, ,, dataArea, ,, edge1, )]
[rangeAxis, ., valueToJava2D, (, yright, ,, dataArea, ,, edge1, )]
[rangeAxis]
[yright]
[dataArea]
[edge1]
[right, ., moveTo, (, (, float, ), xx1, ,, transStack1, )]
[right]
[(, float, ), xx1]
[xx1]
[transStack1]
[right, ., lineTo, (, (, float, ), xx1, ,, transY1, )]
[right]
[(, float, ), xx1]
[xx1]
[transY1]
[right, ., lineTo, (, (, float, ), xxRight, ,, transYRight, )]
[right]
[(, float, ), xxRight]
[xxRight]
[transYRight]
[right, ., lineTo, (, (, float, ), xxRight, ,, transStackRight, )]
[right]
[(, float, ), xxRight]
[xxRight]
[transStackRight]
[right, ., closePath, (, )]
[right]
[right, ., moveTo, (, (, float, ), xx1, ,, transStack1, )]
[right]
[(, float, ), xx1]
[xx1]
[transStack1]
[right, ., lineTo, (, (, float, ), xx1, ,, transY1, )]
[right]
[(, float, ), xx1]
[xx1]
[transY1]
[right, ., lineTo, (, (, float, ), xxRight, ,, transStackRight, )]
[right]
[(, float, ), xxRight]
[xxRight]
[transStackRight]
[right, ., closePath, (, )]
[right]
[transY1]
[(, float, ), rangeAxis, ., valueToJava2D, (, y1, +, stack1, [, 0, ], ,, dataArea, ,, edge1, )]
[rangeAxis, ., valueToJava2D, (, y1, +, stack1, [, 0, ], ,, dataArea, ,, edge1, )]
[rangeAxis]
[y1, +, stack1, [, 0, ]]
[y1]
[stack1, [, 0, ]]
[stack1]
[0]
[dataArea]
[edge1]
[(, float, ), rangeAxis, ., valueToJava2D, (, stack1, [, 0, ], ,, dataArea, ,, edge1, )]
[rangeAxis, ., valueToJava2D, (, stack1, [, 0, ], ,, dataArea, ,, edge1, )]
[rangeAxis]
[stack1, [, 0, ]]
[stack1]
[0]
[dataArea]
[edge1]
[(, float, ), rangeAxis, ., valueToJava2D, (, adjStackLeft, [, 0, ], ,, dataArea, ,, edge1, )]
[rangeAxis, ., valueToJava2D, (, adjStackLeft, [, 0, ], ,, dataArea, ,, edge1, )]
[rangeAxis]
[adjStackLeft, [, 0, ]]
[adjStackLeft]
[0]
[dataArea]
[edge1]
[y0, >=, 0.0]
[y0]
[0.0]
[left, ., moveTo, (, (, float, ), xx1, ,, transStack1, )]
[left]
[(, float, ), xx1]
[xx1]
[transStack1]
[left, ., lineTo, (, (, float, ), xx1, ,, transY1, )]
[left]
[(, float, ), xx1]
[xx1]
[transY1]
[left, ., lineTo, (, (, float, ), xxLeft, ,, transStackLeft, )]
[left]
[(, float, ), xxLeft]
[xxLeft]
[transStackLeft]
[left, ., clone, (, )]
[left]
[(, y0, +, y1, ), /, 2.0, +, stackLeft, [, 0, ]]
[(, y0, +, y1, ), /, 2.0]
[(, y0, +, y1, )]
[y0, +, y1]
[y0]
[y1]
[2.0]
[stackLeft, [, 0, ]]
[stackLeft]
[0]
[(, float, ), rangeAxis, ., valueToJava2D, (, yleft, ,, dataArea, ,, edge1, )]
[rangeAxis, ., valueToJava2D, (, yleft, ,, dataArea, ,, edge1, )]
[rangeAxis]
[yleft]
[dataArea]
[edge1]
[left, ., moveTo, (, (, float, ), xx1, ,, transY1, )]
[left]
[(, float, ), xx1]
[xx1]
[transY1]
[left, ., lineTo, (, (, float, ), xx1, ,, transStack1, )]
[left]
[(, float, ), xx1]
[xx1]
[transStack1]
[left, ., lineTo, (, (, float, ), xxLeft, ,, transStackLeft, )]
[left]
[(, float, ), xxLeft]
[xxLeft]
[transStackLeft]
[left, ., lineTo, (, (, float, ), xxLeft, ,, transYLeft, )]
[left]
[(, float, ), xxLeft]
[xxLeft]
[transYLeft]
[left, ., closePath, (, )]
[left]
[(, float, ), rangeAxis, ., valueToJava2D, (, adjStackRight, [, 0, ], ,, dataArea, ,, edge1, )]
[rangeAxis, ., valueToJava2D, (, adjStackRight, [, 0, ], ,, dataArea, ,, edge1, )]
[rangeAxis]
[adjStackRight, [, 0, ]]
[adjStackRight]
[0]
[dataArea]
[edge1]
[y2, >=, 0.0]
[y2]
[0.0]
[right, ., moveTo, (, (, float, ), xx1, ,, transStack1, )]
[right]
[(, float, ), xx1]
[xx1]
[transStack1]
[right, ., lineTo, (, (, float, ), xx1, ,, transY1, )]
[right]
[(, float, ), xx1]
[xx1]
[transY1]
[right, ., lineTo, (, (, float, ), xxRight, ,, transStackRight, )]
[right]
[(, float, ), xxRight]
[xxRight]
[transStackRight]
[right, ., closePath, (, )]
[right]
[(, y1, +, y2, ), /, 2.0, +, stackRight, [, 0, ]]
[(, y1, +, y2, ), /, 2.0]
[(, y1, +, y2, )]
[y1, +, y2]
[y1]
[y2]
[2.0]
[stackRight, [, 0, ]]
[stackRight]
[0]
[(, float, ), rangeAxis, ., valueToJava2D, (, yright, ,, dataArea, ,, edge1, )]
[rangeAxis, ., valueToJava2D, (, yright, ,, dataArea, ,, edge1, )]
[rangeAxis]
[yright]
[dataArea]
[edge1]
[right, ., moveTo, (, (, float, ), xx1, ,, transStack1, )]
[right]
[(, float, ), xx1]
[xx1]
[transStack1]
[right, ., lineTo, (, (, float, ), xx1, ,, transY1, )]
[right]
[(, float, ), xx1]
[xx1]
[transY1]
[right, ., lineTo, (, (, float, ), xxRight, ,, transYRight, )]
[right]
[(, float, ), xxRight]
[xxRight]
[transYRight]
[right, ., lineTo, (, (, float, ), xxRight, ,, transStackRight, )]
[right]
[(, float, ), xxRight]
[xxRight]
[transStackRight]
[right, ., closePath, (, )]
[right]
[g2, ., setPaint, (, getItemPaint, (, row, ,, column, ,, selected, ), )]
[g2]
[getItemPaint, (, row, ,, column, ,, selected, )]
[row]
[column]
[selected]
[g2, ., setStroke, (, getItemStroke, (, row, ,, column, ,, selected, ), )]
[g2]
[getItemStroke, (, row, ,, column, ,, selected, )]
[row]
[column]
[selected]
[getItemPaint, (, row, ,, column, ,, selected, )]
[row]
[column]
[selected]
[pass, ==, 0]
[pass]
[0]
[g2, ., setPaint, (, itemPaint, )]
[g2]
[itemPaint]
[g2, ., fill, (, left, )]
[g2]
[left]
[g2, ., fill, (, right, )]
[g2]
[right]
[entities, !=, null]
[entities]
[null]
[new, GeneralPath, (, left, )]
[left]
[gp, ., append, (, right, ,, false, )]
[gp]
[right]
[false]
[entityArea]
[gp]
[addEntity, (, entities, ,, entityArea, ,, dataset, ,, row, ,, column, ,, selected, )]
[entities]
[entityArea]
[dataset]
[row]
[column]
[selected]
[0.0]
[0.0]
[this, ., renderAsPercentages]
[this]
[total]
[DataUtilities, ., calculateColumnTotal, (, dataset, ,, category, )]
[DataUtilities]
[dataset]
[category]
[0]
[i, <, series]
[i]
[series]
[i, ++]
[i]
[n]
[dataset, ., getValue, (, i, ,, category, )]
[dataset]
[i]
[category]
[n, !=, null]
[n]
[null]
[n, ., doubleValue, (, )]
[n]
[this, ., renderAsPercentages]
[this]
[v]
[v, /, total]
[v]
[total]
[result]
[v]
[result]
[new, double, [, 2, ]]
[2]
[0]
[i, <, series]
[i]
[series]
[i, ++]
[i]
[isSeriesVisible, (, i, )]
[i]
[0.0]
[dataset, ., getValue, (, i, ,, index, )]
[dataset]
[i]
[index]
[n, !=, null]
[n]
[null]
[v]
[n, ., doubleValue, (, )]
[n]
[!, Double, ., isNaN, (, v, )]
[Double, ., isNaN, (, v, )]
[Double]
[v]
[v, >=, 0.0]
[v]
[0.0]
[result, [, 1, ]]
[result]
[1]
[v]
[result, [, 0, ]]
[result]
[0]
[v]
[result]
[new, double, [, 2, ]]
[2]
[result, [, 0, ]]
[result]
[0]
[(, stack1, [, 0, ], +, stack2, [, 0, ], ), /, 2.0]
[(, stack1, [, 0, ], +, stack2, [, 0, ], )]
[stack1, [, 0, ], +, stack2, [, 0, ]]
[stack1, [, 0, ]]
[stack1]
[0]
[stack2, [, 0, ]]
[stack2]
[0]
[2.0]
[result, [, 1, ]]
[result]
[1]
[(, stack1, [, 1, ], +, stack2, [, 1, ], ), /, 2.0]
[(, stack1, [, 1, ], +, stack2, [, 1, ], )]
[stack1, [, 1, ], +, stack2, [, 1, ]]
[stack1, [, 1, ]]
[stack1]
[1]
[stack2, [, 1, ]]
[stack2]
[1]
[2.0]
[result]
[new, double, [, 2, ]]
[2]
[stack1, [, 0, ], ==, 0.0, ||, stack2, [, 0, ], ==, 0.0]
[stack1, [, 0, ], ==, 0.0]
[stack1, [, 0, ]]
[stack1]
[0]
[0.0]
[stack2, [, 0, ], ==, 0.0]
[stack2, [, 0, ]]
[stack2]
[0]
[0.0]
[result, [, 0, ]]
[result]
[0]
[0.0]
[result, [, 0, ]]
[result]
[0]
[(, stack1, [, 0, ], +, stack2, [, 0, ], ), /, 2.0]
[(, stack1, [, 0, ], +, stack2, [, 0, ], )]
[stack1, [, 0, ], +, stack2, [, 0, ]]
[stack1, [, 0, ]]
[stack1]
[0]
[stack2, [, 0, ]]
[stack2]
[0]
[2.0]
[stack1, [, 1, ], ==, 0.0, ||, stack2, [, 1, ], ==, 0.0]
[stack1, [, 1, ], ==, 0.0]
[stack1, [, 1, ]]
[stack1]
[1]
[0.0]
[stack2, [, 1, ], ==, 0.0]
[stack2, [, 1, ]]
[stack2]
[1]
[0.0]
[result, [, 1, ]]
[result]
[1]
[0.0]
[result, [, 1, ]]
[result]
[1]
[(, stack1, [, 1, ], +, stack2, [, 1, ], ), /, 2.0]
[(, stack1, [, 1, ], +, stack2, [, 1, ], )]
[stack1, [, 1, ], +, stack2, [, 1, ]]
[stack1, [, 1, ]]
[stack1]
[1]
[stack2, [, 1, ]]
[stack2]
[1]
[2.0]
[result]
[obj, ==, this]
[obj]
[this]
[true]
[!, (, obj, instanceof, StackedAreaRenderer, )]
[(, obj, instanceof, StackedAreaRenderer, )]
[obj, instanceof, StackedAreaRenderer]
[obj]
[false]
[(, StackedAreaRenderer, ), obj]
[obj]
[this, ., renderAsPercentages, !=, that, ., renderAsPercentages]
[this, ., renderAsPercentages]
[this]
[that, ., renderAsPercentages]
[that]
[false]
[super, ., equals, (, obj, )]
[super]
[obj]
