[2]
[new, Incrementor, (, )]
[maximalOrder, <, 2]
[maximalOrder]
[2]
[new, NumberIsTooSmallException, (, maximalOrder, ,, 2, ,, true, )]
[maximalOrder]
[2]
[true]
[this, ., maximalOrder]
[this]
[maximalOrder]
[this, ., absoluteAccuracy]
[this]
[absoluteAccuracy]
[this, ., relativeAccuracy]
[this]
[relativeAccuracy]
[this, ., functionValueAccuracy]
[this]
[functionValueAccuracy]
[maximalOrder]
[evaluations, ., getMaximalCount, (, )]
[evaluations]
[evaluations, ., getCount, (, )]
[evaluations]
[absoluteAccuracy]
[relativeAccuracy]
[functionValueAccuracy]
[solve, (, maxEval, ,, f, ,, min, ,, max, ,, min, ., add, (, max, ), ., divide, (, 2, ), ,, allowedSolution, )]
[maxEval]
[f]
[min]
[max]
[min, ., add, (, max, ), ., divide, (, 2, )]
[min, ., add, (, max, )]
[min]
[max]
[2]
[allowedSolution]
[MathUtils, ., checkNotNull, (, f, )]
[MathUtils]
[f]
[evaluations, ., setMaximalCount, (, maxEval, )]
[evaluations]
[maxEval]
[evaluations, ., resetCount, (, )]
[evaluations]
[startValue, ., getZero, (, )]
[startValue]
[zero, ., newInstance, (, (, byte, ), 1, ,, Dfp, ., QNAN, )]
[zero]
[(, byte, ), 1]
[1]
[Dfp, ., QNAN]
[Dfp]
[new, Dfp, [, maximalOrder, +, 1, ]]
[maximalOrder, +, 1]
[maximalOrder]
[1]
[new, Dfp, [, maximalOrder, +, 1, ]]
[maximalOrder, +, 1]
[maximalOrder]
[1]
[x, [, 0, ]]
[x]
[0]
[min]
[x, [, 1, ]]
[x]
[1]
[startValue]
[x, [, 2, ]]
[x]
[2]
[max]
[evaluations, ., incrementCount, (, )]
[evaluations]
[y, [, 1, ]]
[y]
[1]
[f, ., value, (, x, [, 1, ], )]
[f]
[x, [, 1, ]]
[x]
[1]
[y, [, 1, ], ., isZero, (, )]
[y, [, 1, ]]
[y]
[1]
[x, [, 1, ]]
[x]
[1]
[evaluations, ., incrementCount, (, )]
[evaluations]
[y, [, 0, ]]
[y]
[0]
[f, ., value, (, x, [, 0, ], )]
[f]
[x, [, 0, ]]
[x]
[0]
[y, [, 0, ], ., isZero, (, )]
[y, [, 0, ]]
[y]
[0]
[x, [, 0, ]]
[x]
[0]
[y, [, 0, ], ., multiply, (, y, [, 1, ], ), ., negativeOrNull, (, )]
[y, [, 0, ], ., multiply, (, y, [, 1, ], )]
[y, [, 0, ]]
[y]
[0]
[y, [, 1, ]]
[y]
[1]
[nbPoints]
[2]
[signChangeIndex]
[1]
[evaluations, ., incrementCount, (, )]
[evaluations]
[y, [, 2, ]]
[y]
[2]
[f, ., value, (, x, [, 2, ], )]
[f]
[x, [, 2, ]]
[x]
[2]
[y, [, 2, ], ., isZero, (, )]
[y, [, 2, ]]
[y]
[2]
[x, [, 2, ]]
[x]
[2]
[y, [, 1, ], ., multiply, (, y, [, 2, ], ), ., negativeOrNull, (, )]
[y, [, 1, ], ., multiply, (, y, [, 2, ], )]
[y, [, 1, ]]
[y]
[1]
[y, [, 2, ]]
[y]
[2]
[nbPoints]
[3]
[signChangeIndex]
[2]
[new, NoBracketingException, (, x, [, 0, ], ., toDouble, (, ), ,, x, [, 2, ], ., toDouble, (, ), ,, y, [, 0, ], ., toDouble, (, ), ,, y, [, 2, ], ., toDouble, (, ), )]
[x, [, 0, ], ., toDouble, (, )]
[x, [, 0, ]]
[x]
[0]
[x, [, 2, ], ., toDouble, (, )]
[x, [, 2, ]]
[x]
[2]
[y, [, 0, ], ., toDouble, (, )]
[y, [, 0, ]]
[y]
[0]
[y, [, 2, ], ., toDouble, (, )]
[y, [, 2, ]]
[y]
[2]
[new, Dfp, [, x, ., length, ]]
[x, ., length]
[x]
[x, [, signChangeIndex, -, 1, ]]
[x]
[signChangeIndex, -, 1]
[signChangeIndex]
[1]
[y, [, signChangeIndex, -, 1, ]]
[y]
[signChangeIndex, -, 1]
[signChangeIndex]
[1]
[xA, ., abs, (, )]
[xA]
[yA, ., abs, (, )]
[yA]
[0]
[x, [, signChangeIndex, ]]
[x]
[signChangeIndex]
[y, [, signChangeIndex, ]]
[y]
[signChangeIndex]
[xB, ., abs, (, )]
[xB]
[yB, ., abs, (, )]
[yB]
[0]
[true]
[absXA, ., lessThan, (, absXB, ), ?, absXB, :, absXA]
[absXA, ., lessThan, (, absXB, )]
[absXA]
[absXB]
[absXB]
[absXA]
[absYA, ., lessThan, (, absYB, ), ?, absYB, :, absYA]
[absYA, ., lessThan, (, absYB, )]
[absYA]
[absYB]
[absYB]
[absYA]
[absoluteAccuracy, ., add, (, relativeAccuracy, ., multiply, (, maxX, ), )]
[absoluteAccuracy]
[relativeAccuracy, ., multiply, (, maxX, )]
[relativeAccuracy]
[maxX]
[xB, ., subtract, (, xA, ), ., subtract, (, xTol, ), ., negativeOrNull, (, ), ||, maxY, ., lessThan, (, functionValueAccuracy, )]
[xB, ., subtract, (, xA, ), ., subtract, (, xTol, ), ., negativeOrNull, (, )]
[xB, ., subtract, (, xA, ), ., subtract, (, xTol, )]
[xB, ., subtract, (, xA, )]
[xB]
[xA]
[xTol]
[maxY, ., lessThan, (, functionValueAccuracy, )]
[maxY]
[functionValueAccuracy]
[allowedSolution]
[ANY_SIDE]
[absYA, ., lessThan, (, absYB, ), ?, xA, :, xB]
[absYA, ., lessThan, (, absYB, )]
[absYA]
[absYB]
[xA]
[xB]
[LEFT_SIDE]
[xA]
[RIGHT_SIDE]
[xB]
[BELOW_SIDE]
[yA, ., lessThan, (, zero, ), ?, xA, :, xB]
[yA, ., lessThan, (, zero, )]
[yA]
[zero]
[xA]
[xB]
[ABOVE_SIDE]
[yA, ., lessThan, (, zero, ), ?, xB, :, xA]
[yA, ., lessThan, (, zero, )]
[yA]
[zero]
[xB]
[xA]
[new, MathInternalError, (, null, )]
[null]
[agingA, >=, MAXIMAL_AGING]
[agingA]
[MAXIMAL_AGING]
[targetY]
[yB, ., divide, (, 16, ), ., negate, (, )]
[yB, ., divide, (, 16, )]
[yB]
[16]
[agingB, >=, MAXIMAL_AGING]
[agingB]
[MAXIMAL_AGING]
[targetY]
[yA, ., divide, (, 16, ), ., negate, (, )]
[yA, ., divide, (, 16, )]
[yA]
[16]
[targetY]
[zero]
[0]
[nbPoints]
[System, ., arraycopy, (, x, ,, start, ,, tmpX, ,, start, ,, end, -, start, )]
[System]
[x]
[start]
[tmpX]
[start]
[end, -, start]
[end]
[start]
[nextX]
[guessX, (, targetY, ,, tmpX, ,, y, ,, start, ,, end, )]
[targetY]
[tmpX]
[y]
[start]
[end]
[!, (, nextX, ., greaterThan, (, xA, ), &&, nextX, ., lessThan, (, xB, ), )]
[(, nextX, ., greaterThan, (, xA, ), &&, nextX, ., lessThan, (, xB, ), )]
[nextX, ., greaterThan, (, xA, ), &&, nextX, ., lessThan, (, xB, )]
[nextX, ., greaterThan, (, xA, )]
[nextX]
[xA]
[nextX, ., lessThan, (, xB, )]
[nextX]
[xB]
[signChangeIndex, -, start, >=, end, -, signChangeIndex]
[signChangeIndex, -, start]
[signChangeIndex]
[start]
[end, -, signChangeIndex]
[end]
[signChangeIndex]
[++, start]
[start]
[--, end]
[end]
[nextX]
[nan]
[nextX, ., isNaN, (, ), &&, (, end, -, start, >, 1, )]
[nextX, ., isNaN, (, )]
[nextX]
[(, end, -, start, >, 1, )]
[end, -, start, >, 1]
[end, -, start]
[end]
[start]
[1]
[nextX, ., isNaN, (, )]
[nextX]
[nextX]
[xA, ., add, (, xB, ., subtract, (, xA, ), ., divide, (, 2, ), )]
[xA]
[xB, ., subtract, (, xA, ), ., divide, (, 2, )]
[xB, ., subtract, (, xA, )]
[xB]
[xA]
[2]
[start]
[signChangeIndex, -, 1]
[signChangeIndex]
[1]
[end]
[signChangeIndex]
[evaluations, ., incrementCount, (, )]
[evaluations]
[f, ., value, (, nextX, )]
[f]
[nextX]
[nextY, ., isZero, (, )]
[nextY]
[nextX]
[(, nbPoints, >, 2, ), &&, (, end, -, start, !=, nbPoints, )]
[(, nbPoints, >, 2, )]
[nbPoints, >, 2]
[nbPoints]
[2]
[(, end, -, start, !=, nbPoints, )]
[end, -, start, !=, nbPoints]
[end, -, start]
[end]
[start]
[nbPoints]
[nbPoints]
[end, -, start]
[end]
[start]
[System, ., arraycopy, (, x, ,, start, ,, x, ,, 0, ,, nbPoints, )]
[System]
[x]
[start]
[x]
[0]
[nbPoints]
[System, ., arraycopy, (, y, ,, start, ,, y, ,, 0, ,, nbPoints, )]
[System]
[y]
[start]
[y]
[0]
[nbPoints]
[signChangeIndex]
[start]
[nbPoints, ==, x, ., length]
[nbPoints]
[x, ., length]
[x]
[nbPoints, --]
[nbPoints]
[signChangeIndex, >=, (, x, ., length, +, 1, ), /, 2]
[signChangeIndex]
[(, x, ., length, +, 1, ), /, 2]
[(, x, ., length, +, 1, )]
[x, ., length, +, 1]
[x, ., length]
[x]
[1]
[2]
[System, ., arraycopy, (, x, ,, 1, ,, x, ,, 0, ,, nbPoints, )]
[System]
[x]
[1]
[x]
[0]
[nbPoints]
[System, ., arraycopy, (, y, ,, 1, ,, y, ,, 0, ,, nbPoints, )]
[System]
[y]
[1]
[y]
[0]
[nbPoints]
[--, signChangeIndex]
[signChangeIndex]
[System, ., arraycopy, (, x, ,, signChangeIndex, ,, x, ,, signChangeIndex, +, 1, ,, nbPoints, -, signChangeIndex, )]
[System]
[x]
[signChangeIndex]
[x]
[signChangeIndex, +, 1]
[signChangeIndex]
[1]
[nbPoints, -, signChangeIndex]
[nbPoints]
[signChangeIndex]
[x, [, signChangeIndex, ]]
[x]
[signChangeIndex]
[nextX]
[System, ., arraycopy, (, y, ,, signChangeIndex, ,, y, ,, signChangeIndex, +, 1, ,, nbPoints, -, signChangeIndex, )]
[System]
[y]
[signChangeIndex]
[y]
[signChangeIndex, +, 1]
[signChangeIndex]
[1]
[nbPoints, -, signChangeIndex]
[nbPoints]
[signChangeIndex]
[y, [, signChangeIndex, ]]
[y]
[signChangeIndex]
[nextY]
[++, nbPoints]
[nbPoints]
[nextY, ., multiply, (, yA, ), ., negativeOrNull, (, )]
[nextY, ., multiply, (, yA, )]
[nextY]
[yA]
[xB]
[nextX]
[yB]
[nextY]
[absYB]
[yB, ., abs, (, )]
[yB]
[++, agingA]
[agingA]
[agingB]
[0]
[xA]
[nextX]
[yA]
[nextY]
[absYA]
[yA, ., abs, (, )]
[yA]
[agingA]
[0]
[++, agingB]
[agingB]
[signChangeIndex, ++]
[signChangeIndex]
[start]
[i, <, end, -, 1]
[i]
[end, -, 1]
[end]
[1]
[++, i]
[i]
[i, +, 1, -, start]
[i, +, 1]
[i]
[1]
[start]
[end, -, 1]
[end]
[1]
[j, >, i]
[j]
[i]
[--, j]
[j]
[x, [, j, ]]
[x]
[j]
[x, [, j, ], ., subtract, (, x, [, j, -, 1, ], ), ., divide, (, y, [, j, ], ., subtract, (, y, [, j, -, delta, ], ), )]
[x, [, j, ], ., subtract, (, x, [, j, -, 1, ], )]
[x, [, j, ]]
[x]
[j]
[x, [, j, -, 1, ]]
[x]
[j, -, 1]
[j]
[1]
[y, [, j, ], ., subtract, (, y, [, j, -, delta, ], )]
[y, [, j, ]]
[y]
[j]
[y, [, j, -, delta, ]]
[y]
[j, -, delta]
[j]
[delta]
[targetY, ., getZero, (, )]
[targetY]
[end, -, 1]
[end]
[1]
[j, >=, start]
[j]
[start]
[--, j]
[j]
[x0]
[x, [, j, ], ., add, (, x0, ., multiply, (, targetY, ., subtract, (, y, [, j, ], ), ), )]
[x, [, j, ]]
[x]
[j]
[x0, ., multiply, (, targetY, ., subtract, (, y, [, j, ], ), )]
[x0]
[targetY, ., subtract, (, y, [, j, ], )]
[targetY]
[y, [, j, ]]
[y]
[j]
[x0]
