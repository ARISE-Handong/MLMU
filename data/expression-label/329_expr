[2]
[10.0]
[1E-8]
[0d]
[1d]
[2d]
[10d]
[16d]
[250d]
[-, ONE]
[ONE]
[ONE, /, 2]
[ONE]
[2]
[ONE, /, 4]
[ONE]
[4]
[ONE, /, 8]
[ONE]
[8]
[ONE, /, 10]
[ONE]
[10]
[ONE, /, 1000]
[ONE]
[1000]
[numberOfInterpolationPoints]
[DEFAULT_INITIAL_RADIUS]
[DEFAULT_STOPPING_RADIUS]
[null]
[this, ., numberOfInterpolationPoints]
[this]
[numberOfInterpolationPoints]
[this, ., initialTrustRegionRadius]
[this]
[initialTrustRegionRadius]
[this, ., stoppingTrustRegionRadius]
[this]
[stoppingTrustRegionRadius]
[getLowerBound, (, )]
[getUpperBound, (, )]
[setup, (, lowerBound, ,, upperBound, )]
[lowerBound]
[upperBound]
[isMinimize]
[(, getGoalType, (, ), ==, GoalType, ., MINIMIZE, )]
[getGoalType, (, ), ==, GoalType, ., MINIMIZE]
[getGoalType, (, )]
[GoalType, ., MINIMIZE]
[GoalType]
[currentBest]
[new, ArrayRealVector, (, getStartPoint, (, ), )]
[getStartPoint, (, )]
[bobyqa, (, lowerBound, ,, upperBound, )]
[lowerBound]
[upperBound]
[new, PointValuePair, (, currentBest, ., getDataRef, (, ), ,, isMinimize, ?, value, :, -, value, )]
[currentBest, ., getDataRef, (, )]
[currentBest]
[isMinimize, ?, value, :, -, value]
[isMinimize]
[value]
[-, value]
[value]
[printMethod, (, )]
[currentBest, ., getDimension, (, )]
[currentBest]
[0]
[j, <, n]
[j]
[n]
[j, ++]
[j]
[boundDifference, [, j, ]]
[boundDifference]
[j]
[lowerDifference, ., setEntry, (, j, ,, lowerBound, [, j, ], -, currentBest, ., getEntry, (, j, ), )]
[lowerDifference]
[j]
[lowerBound, [, j, ], -, currentBest, ., getEntry, (, j, )]
[lowerBound, [, j, ]]
[lowerBound]
[j]
[currentBest, ., getEntry, (, j, )]
[currentBest]
[j]
[upperDifference, ., setEntry, (, j, ,, upperBound, [, j, ], -, currentBest, ., getEntry, (, j, ), )]
[upperDifference]
[j]
[upperBound, [, j, ], -, currentBest, ., getEntry, (, j, )]
[upperBound, [, j, ]]
[upperBound]
[j]
[currentBest, ., getEntry, (, j, )]
[currentBest]
[j]
[lowerDifference, ., getEntry, (, j, ), >=, -, initialTrustRegionRadius]
[lowerDifference, ., getEntry, (, j, )]
[lowerDifference]
[j]
[-, initialTrustRegionRadius]
[initialTrustRegionRadius]
[lowerDifference, ., getEntry, (, j, ), >=, ZERO]
[lowerDifference, ., getEntry, (, j, )]
[lowerDifference]
[j]
[ZERO]
[currentBest, ., setEntry, (, j, ,, lowerBound, [, j, ], )]
[currentBest]
[j]
[lowerBound, [, j, ]]
[lowerBound]
[j]
[lowerDifference, ., setEntry, (, j, ,, ZERO, )]
[lowerDifference]
[j]
[ZERO]
[upperDifference, ., setEntry, (, j, ,, boundDiff, )]
[upperDifference]
[j]
[boundDiff]
[currentBest, ., setEntry, (, j, ,, lowerBound, [, j, ], +, initialTrustRegionRadius, )]
[currentBest]
[j]
[lowerBound, [, j, ], +, initialTrustRegionRadius]
[lowerBound, [, j, ]]
[lowerBound]
[j]
[initialTrustRegionRadius]
[lowerDifference, ., setEntry, (, j, ,, -, initialTrustRegionRadius, )]
[lowerDifference]
[j]
[-, initialTrustRegionRadius]
[initialTrustRegionRadius]
[upperBound, [, j, ], -, currentBest, ., getEntry, (, j, )]
[upperBound, [, j, ]]
[upperBound]
[j]
[currentBest, ., getEntry, (, j, )]
[currentBest]
[j]
[upperDifference, ., setEntry, (, j, ,, Math, ., max, (, deltaOne, ,, initialTrustRegionRadius, ), )]
[upperDifference]
[j]
[Math, ., max, (, deltaOne, ,, initialTrustRegionRadius, )]
[Math]
[deltaOne]
[initialTrustRegionRadius]
[upperDifference, ., getEntry, (, j, ), <=, initialTrustRegionRadius]
[upperDifference, ., getEntry, (, j, )]
[upperDifference]
[j]
[initialTrustRegionRadius]
[upperDifference, ., getEntry, (, j, ), <=, ZERO]
[upperDifference, ., getEntry, (, j, )]
[upperDifference]
[j]
[ZERO]
[currentBest, ., setEntry, (, j, ,, upperBound, [, j, ], )]
[currentBest]
[j]
[upperBound, [, j, ]]
[upperBound]
[j]
[lowerDifference, ., setEntry, (, j, ,, -, boundDiff, )]
[lowerDifference]
[j]
[-, boundDiff]
[boundDiff]
[upperDifference, ., setEntry, (, j, ,, ZERO, )]
[upperDifference]
[j]
[ZERO]
[currentBest, ., setEntry, (, j, ,, upperBound, [, j, ], -, initialTrustRegionRadius, )]
[currentBest]
[j]
[upperBound, [, j, ], -, initialTrustRegionRadius]
[upperBound, [, j, ]]
[upperBound]
[j]
[initialTrustRegionRadius]
[lowerBound, [, j, ], -, currentBest, ., getEntry, (, j, )]
[lowerBound, [, j, ]]
[lowerBound]
[j]
[currentBest, ., getEntry, (, j, )]
[currentBest]
[j]
[-, initialTrustRegionRadius]
[initialTrustRegionRadius]
[lowerDifference, ., setEntry, (, j, ,, Math, ., min, (, deltaOne, ,, deltaTwo, ), )]
[lowerDifference]
[j]
[Math, ., min, (, deltaOne, ,, deltaTwo, )]
[Math]
[deltaOne]
[deltaTwo]
[upperDifference, ., setEntry, (, j, ,, initialTrustRegionRadius, )]
[upperDifference]
[j]
[initialTrustRegionRadius]
[bobyqb, (, lowerBound, ,, upperBound, )]
[lowerBound]
[upperBound]
[printMethod, (, )]
[currentBest, ., getDimension, (, )]
[currentBest]
[numberOfInterpolationPoints]
[n, +, 1]
[n]
[1]
[npt, -, np]
[npt]
[np]
[n, *, np, /, 2]
[n, *, np]
[n]
[np]
[2]
[new, ArrayRealVector, (, n, )]
[n]
[new, ArrayRealVector, (, npt, )]
[npt]
[new, ArrayRealVector, (, npt, )]
[npt]
[Double, ., NaN]
[Double]
[Double, ., NaN]
[Double]
[Double, ., NaN]
[Double]
[Double, ., NaN]
[Double]
[trustRegionCenterInterpolationPointIndex]
[0]
[prelim, (, lowerBound, ,, upperBound, )]
[lowerBound]
[upperBound]
[ZERO]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[trustRegionCenterOffset, ., setEntry, (, i, ,, interpolationPoints, ., getEntry, (, trustRegionCenterInterpolationPointIndex, ,, i, ), )]
[trustRegionCenterOffset]
[i]
[interpolationPoints, ., getEntry, (, trustRegionCenterInterpolationPointIndex, ,, i, )]
[interpolationPoints]
[trustRegionCenterInterpolationPointIndex]
[i]
[trustRegionCenterOffset, ., getEntry, (, i, )]
[trustRegionCenterOffset]
[i]
[xoptsq]
[deltaOne, *, deltaOne]
[deltaOne]
[deltaOne]
[fAtInterpolationPoints, ., getEntry, (, 0, )]
[fAtInterpolationPoints]
[0]
[0]
[0]
[0]
[0]
[getEvaluations, (, )]
[initialTrustRegionRadius]
[rho]
[ZERO]
[ZERO]
[ZERO]
[ZERO]
[ZERO]
[ZERO]
[ZERO]
[ZERO]
[ZERO]
[ZERO]
[ZERO]
[ZERO]
[20]
[state]
[20]
[printState, (, 20, )]
[20]
[trustRegionCenterInterpolationPointIndex, !=, kbase]
[trustRegionCenterInterpolationPointIndex]
[kbase]
[0]
[0]
[j, <, n]
[j]
[n]
[j, ++]
[j]
[0]
[i, <=, j]
[i]
[j]
[i, ++]
[i]
[i, <, j]
[i]
[j]
[gradientAtTrustRegionCenter, ., setEntry, (, j, ,, gradientAtTrustRegionCenter, ., getEntry, (, j, ), +, modelSecondDerivativesValues, ., getEntry, (, ih, ), *, trustRegionCenterOffset, ., getEntry, (, i, ), )]
[gradientAtTrustRegionCenter]
[j]
[gradientAtTrustRegionCenter, ., getEntry, (, j, ), +, modelSecondDerivativesValues, ., getEntry, (, ih, ), *, trustRegionCenterOffset, ., getEntry, (, i, )]
[gradientAtTrustRegionCenter, ., getEntry, (, j, )]
[gradientAtTrustRegionCenter]
[j]
[modelSecondDerivativesValues, ., getEntry, (, ih, ), *, trustRegionCenterOffset, ., getEntry, (, i, )]
[modelSecondDerivativesValues, ., getEntry, (, ih, )]
[modelSecondDerivativesValues]
[ih]
[trustRegionCenterOffset, ., getEntry, (, i, )]
[trustRegionCenterOffset]
[i]
[gradientAtTrustRegionCenter, ., setEntry, (, i, ,, gradientAtTrustRegionCenter, ., getEntry, (, i, ), +, modelSecondDerivativesValues, ., getEntry, (, ih, ), *, trustRegionCenterOffset, ., getEntry, (, j, ), )]
[gradientAtTrustRegionCenter]
[i]
[gradientAtTrustRegionCenter, ., getEntry, (, i, ), +, modelSecondDerivativesValues, ., getEntry, (, ih, ), *, trustRegionCenterOffset, ., getEntry, (, j, )]
[gradientAtTrustRegionCenter, ., getEntry, (, i, )]
[gradientAtTrustRegionCenter]
[i]
[modelSecondDerivativesValues, ., getEntry, (, ih, ), *, trustRegionCenterOffset, ., getEntry, (, j, )]
[modelSecondDerivativesValues, ., getEntry, (, ih, )]
[modelSecondDerivativesValues]
[ih]
[trustRegionCenterOffset, ., getEntry, (, j, )]
[trustRegionCenterOffset]
[j]
[ih, ++]
[ih]
[getEvaluations, (, ), >, npt]
[getEvaluations, (, )]
[npt]
[0]
[k, <, npt]
[k]
[npt]
[k, ++]
[k]
[ZERO]
[0]
[j, <, n]
[j]
[n]
[j, ++]
[j]
[temp]
[interpolationPoints, ., getEntry, (, k, ,, j, ), *, trustRegionCenterOffset, ., getEntry, (, j, )]
[interpolationPoints, ., getEntry, (, k, ,, j, )]
[interpolationPoints]
[k]
[j]
[trustRegionCenterOffset, ., getEntry, (, j, )]
[trustRegionCenterOffset]
[j]
[temp]
[modelSecondDerivativesParameters, ., getEntry, (, k, )]
[modelSecondDerivativesParameters]
[k]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[gradientAtTrustRegionCenter, ., setEntry, (, i, ,, gradientAtTrustRegionCenter, ., getEntry, (, i, ), +, temp, *, interpolationPoints, ., getEntry, (, k, ,, i, ), )]
[gradientAtTrustRegionCenter]
[i]
[gradientAtTrustRegionCenter, ., getEntry, (, i, ), +, temp, *, interpolationPoints, ., getEntry, (, k, ,, i, )]
[gradientAtTrustRegionCenter, ., getEntry, (, i, )]
[gradientAtTrustRegionCenter]
[i]
[temp, *, interpolationPoints, ., getEntry, (, k, ,, i, )]
[temp]
[interpolationPoints, ., getEntry, (, k, ,, i, )]
[interpolationPoints]
[k]
[i]
[60]
[printState, (, 60, )]
[60]
[new, ArrayRealVector, (, n, )]
[n]
[new, ArrayRealVector, (, n, )]
[n]
[new, ArrayRealVector, (, n, )]
[n]
[new, ArrayRealVector, (, n, )]
[n]
[new, ArrayRealVector, (, n, )]
[n]
[trsbox, (, delta, ,, gnew, ,, xbdi, ,, s, ,, hs, ,, hred, )]
[delta]
[gnew]
[xbdi]
[s]
[hs]
[hred]
[dsq]
[dsqCrvmin, [, 0, ]]
[dsqCrvmin]
[0]
[crvmin]
[dsqCrvmin, [, 1, ]]
[dsqCrvmin]
[1]
[delta]
[Math, ., sqrt, (, dsq, )]
[Math]
[dsq]
[dnorm]
[Math, ., min, (, deltaOne, ,, deltaTwo, )]
[Math]
[deltaOne]
[deltaTwo]
[dnorm, <, HALF, *, rho]
[dnorm]
[HALF, *, rho]
[HALF]
[rho]
[ntrits]
[-, 1]
[1]
[deltaOne]
[TEN, *, rho]
[TEN]
[rho]
[distsq]
[deltaOne, *, deltaOne]
[deltaOne]
[deltaOne]
[getEvaluations, (, ), <=, nfsav, +, 2]
[getEvaluations, (, )]
[nfsav, +, 2]
[nfsav]
[2]
[state]
[650]
[deltaOne]
[Math, ., max, (, diffa, ,, diffb, )]
[Math]
[diffa]
[diffb]
[Math, ., max, (, deltaOne, ,, diffc, )]
[Math]
[deltaOne]
[diffc]
[rho, *, ONE_OVER_EIGHT, *, rho]
[rho, *, ONE_OVER_EIGHT]
[rho]
[ONE_OVER_EIGHT]
[rho]
[crvmin, >, ZERO, &&, errbig, >, frhosq, *, crvmin]
[crvmin, >, ZERO]
[crvmin]
[ZERO]
[errbig, >, frhosq, *, crvmin]
[errbig]
[frhosq, *, crvmin]
[frhosq]
[crvmin]
[state]
[650]
[errbig, /, rho]
[errbig]
[rho]
[0]
[j, <, n]
[j]
[n]
[j, ++]
[j]
[bdtol]
[newPoint, ., getEntry, (, j, ), ==, lowerDifference, ., getEntry, (, j, )]
[newPoint, ., getEntry, (, j, )]
[newPoint]
[j]
[lowerDifference, ., getEntry, (, j, )]
[lowerDifference]
[j]
[bdtest]
[work1, ., getEntry, (, j, )]
[work1]
[j]
[newPoint, ., getEntry, (, j, ), ==, upperDifference, ., getEntry, (, j, )]
[newPoint, ., getEntry, (, j, )]
[newPoint]
[j]
[upperDifference, ., getEntry, (, j, )]
[upperDifference]
[j]
[bdtest]
[-, work1, ., getEntry, (, j, )]
[work1, ., getEntry, (, j, )]
[work1]
[j]
[bdtest, <, bdtol]
[bdtest]
[bdtol]
[modelSecondDerivativesValues, ., getEntry, (, (, j, +, j, *, j, ), /, 2, )]
[modelSecondDerivativesValues]
[(, j, +, j, *, j, ), /, 2]
[(, j, +, j, *, j, )]
[j, +, j, *, j]
[j]
[j, *, j]
[j]
[j]
[2]
[0]
[k, <, npt]
[k]
[npt]
[k, ++]
[k]
[interpolationPoints, ., getEntry, (, k, ,, j, )]
[interpolationPoints]
[k]
[j]
[curv]
[modelSecondDerivativesParameters, ., getEntry, (, k, ), *, (, d1, *, d1, )]
[modelSecondDerivativesParameters, ., getEntry, (, k, )]
[modelSecondDerivativesParameters]
[k]
[(, d1, *, d1, )]
[d1, *, d1]
[d1]
[d1]
[bdtest]
[HALF, *, curv, *, rho]
[HALF, *, curv]
[HALF]
[curv]
[rho]
[bdtest, <, bdtol]
[bdtest]
[bdtol]
[state]
[650]
[state]
[680]
[++, ntrits]
[ntrits]
[90]
[printState, (, 90, )]
[90]
[dsq, <=, xoptsq, *, ONE_OVER_A_THOUSAND]
[dsq]
[xoptsq, *, ONE_OVER_A_THOUSAND]
[xoptsq]
[ONE_OVER_A_THOUSAND]
[xoptsq, *, ONE_OVER_FOUR]
[xoptsq]
[ONE_OVER_FOUR]
[ZERO]
[0]
[k, <, npt]
[k]
[npt]
[k, ++]
[k]
[sumpq]
[modelSecondDerivativesParameters, ., getEntry, (, k, )]
[modelSecondDerivativesParameters]
[k]
[-, HALF, *, xoptsq]
[-, HALF]
[HALF]
[xoptsq]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[sum]
[interpolationPoints, ., getEntry, (, k, ,, i, ), *, trustRegionCenterOffset, ., getEntry, (, i, )]
[interpolationPoints, ., getEntry, (, k, ,, i, )]
[interpolationPoints]
[k]
[i]
[trustRegionCenterOffset, ., getEntry, (, i, )]
[trustRegionCenterOffset]
[i]
[work2, ., setEntry, (, k, ,, sum, )]
[work2]
[k]
[sum]
[fracsq, -, HALF, *, sum]
[fracsq]
[HALF, *, sum]
[HALF]
[sum]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[work1, ., setEntry, (, i, ,, bMatrix, ., getEntry, (, k, ,, i, ), )]
[work1]
[i]
[bMatrix, ., getEntry, (, k, ,, i, )]
[bMatrix]
[k]
[i]
[lagrangeValuesAtNewPoint, ., setEntry, (, i, ,, sum, *, interpolationPoints, ., getEntry, (, k, ,, i, ), +, temp, *, trustRegionCenterOffset, ., getEntry, (, i, ), )]
[lagrangeValuesAtNewPoint]
[i]
[sum, *, interpolationPoints, ., getEntry, (, k, ,, i, ), +, temp, *, trustRegionCenterOffset, ., getEntry, (, i, )]
[sum, *, interpolationPoints, ., getEntry, (, k, ,, i, )]
[sum]
[interpolationPoints, ., getEntry, (, k, ,, i, )]
[interpolationPoints]
[k]
[i]
[temp, *, trustRegionCenterOffset, ., getEntry, (, i, )]
[temp]
[trustRegionCenterOffset, ., getEntry, (, i, )]
[trustRegionCenterOffset]
[i]
[npt, +, i]
[npt]
[i]
[0]
[j, <=, i]
[j]
[i]
[j, ++]
[j]
[bMatrix, ., setEntry, (, ip, ,, j, ,, bMatrix, ., getEntry, (, ip, ,, j, ), +, work1, ., getEntry, (, i, ), *, lagrangeValuesAtNewPoint, ., getEntry, (, j, ), +, lagrangeValuesAtNewPoint, ., getEntry, (, i, ), *, work1, ., getEntry, (, j, ), )]
[bMatrix]
[ip]
[j]
[bMatrix, ., getEntry, (, ip, ,, j, ), +, work1, ., getEntry, (, i, ), *, lagrangeValuesAtNewPoint, ., getEntry, (, j, ), +, lagrangeValuesAtNewPoint, ., getEntry, (, i, ), *, work1, ., getEntry, (, j, )]
[bMatrix, ., getEntry, (, ip, ,, j, ), +, work1, ., getEntry, (, i, ), *, lagrangeValuesAtNewPoint, ., getEntry, (, j, )]
[bMatrix, ., getEntry, (, ip, ,, j, )]
[bMatrix]
[ip]
[j]
[work1, ., getEntry, (, i, ), *, lagrangeValuesAtNewPoint, ., getEntry, (, j, )]
[work1, ., getEntry, (, i, )]
[work1]
[i]
[lagrangeValuesAtNewPoint, ., getEntry, (, j, )]
[lagrangeValuesAtNewPoint]
[j]
[lagrangeValuesAtNewPoint, ., getEntry, (, i, ), *, work1, ., getEntry, (, j, )]
[lagrangeValuesAtNewPoint, ., getEntry, (, i, )]
[lagrangeValuesAtNewPoint]
[i]
[work1, ., getEntry, (, j, )]
[work1]
[j]
[0]
[m, <, nptm]
[m]
[nptm]
[m, ++]
[m]
[ZERO]
[ZERO]
[0]
[k, <, npt]
[k]
[npt]
[k, ++]
[k]
[sumz]
[zMatrix, ., getEntry, (, k, ,, m, )]
[zMatrix]
[k]
[m]
[lagrangeValuesAtNewPoint, ., setEntry, (, k, ,, work2, ., getEntry, (, k, ), *, zMatrix, ., getEntry, (, k, ,, m, ), )]
[lagrangeValuesAtNewPoint]
[k]
[work2, ., getEntry, (, k, ), *, zMatrix, ., getEntry, (, k, ,, m, )]
[work2, ., getEntry, (, k, )]
[work2]
[k]
[zMatrix, ., getEntry, (, k, ,, m, )]
[zMatrix]
[k]
[m]
[sumw]
[lagrangeValuesAtNewPoint, ., getEntry, (, k, )]
[lagrangeValuesAtNewPoint]
[k]
[0]
[j, <, n]
[j]
[n]
[j, ++]
[j]
[(, fracsq, *, sumz, -, HALF, *, sumw, ), *, trustRegionCenterOffset, ., getEntry, (, j, )]
[(, fracsq, *, sumz, -, HALF, *, sumw, )]
[fracsq, *, sumz, -, HALF, *, sumw]
[fracsq, *, sumz]
[fracsq]
[sumz]
[HALF, *, sumw]
[HALF]
[sumw]
[trustRegionCenterOffset, ., getEntry, (, j, )]
[trustRegionCenterOffset]
[j]
[0]
[k, <, npt]
[k]
[npt]
[k, ++]
[k]
[sum]
[lagrangeValuesAtNewPoint, ., getEntry, (, k, ), *, interpolationPoints, ., getEntry, (, k, ,, j, )]
[lagrangeValuesAtNewPoint, ., getEntry, (, k, )]
[lagrangeValuesAtNewPoint]
[k]
[interpolationPoints, ., getEntry, (, k, ,, j, )]
[interpolationPoints]
[k]
[j]
[work1, ., setEntry, (, j, ,, sum, )]
[work1]
[j]
[sum]
[0]
[k, <, npt]
[k]
[npt]
[k, ++]
[k]
[bMatrix, ., setEntry, (, k, ,, j, ,, bMatrix, ., getEntry, (, k, ,, j, ), +, sum, *, zMatrix, ., getEntry, (, k, ,, m, ), )]
[bMatrix]
[k]
[j]
[bMatrix, ., getEntry, (, k, ,, j, ), +, sum, *, zMatrix, ., getEntry, (, k, ,, m, )]
[bMatrix, ., getEntry, (, k, ,, j, )]
[bMatrix]
[k]
[j]
[sum, *, zMatrix, ., getEntry, (, k, ,, m, )]
[sum]
[zMatrix, ., getEntry, (, k, ,, m, )]
[zMatrix]
[k]
[m]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[i, +, npt]
[i]
[npt]
[work1, ., getEntry, (, i, )]
[work1]
[i]
[0]
[j, <=, i]
[j]
[i]
[j, ++]
[j]
[bMatrix, ., setEntry, (, ip, ,, j, ,, bMatrix, ., getEntry, (, ip, ,, j, ), +, temp, *, work1, ., getEntry, (, j, ), )]
[bMatrix]
[ip]
[j]
[bMatrix, ., getEntry, (, ip, ,, j, ), +, temp, *, work1, ., getEntry, (, j, )]
[bMatrix, ., getEntry, (, ip, ,, j, )]
[bMatrix]
[ip]
[j]
[temp, *, work1, ., getEntry, (, j, )]
[temp]
[work1, ., getEntry, (, j, )]
[work1]
[j]
[0]
[0]
[j, <, n]
[j]
[n]
[j, ++]
[j]
[work1, ., setEntry, (, j, ,, -, HALF, *, sumpq, *, trustRegionCenterOffset, ., getEntry, (, j, ), )]
[work1]
[j]
[-, HALF, *, sumpq, *, trustRegionCenterOffset, ., getEntry, (, j, )]
[-, HALF, *, sumpq]
[-, HALF]
[HALF]
[sumpq]
[trustRegionCenterOffset, ., getEntry, (, j, )]
[trustRegionCenterOffset]
[j]
[0]
[k, <, npt]
[k]
[npt]
[k, ++]
[k]
[work1, ., setEntry, (, j, ,, work1, ., getEntry, (, j, ), +, modelSecondDerivativesParameters, ., getEntry, (, k, ), *, interpolationPoints, ., getEntry, (, k, ,, j, ), )]
[work1]
[j]
[work1, ., getEntry, (, j, ), +, modelSecondDerivativesParameters, ., getEntry, (, k, ), *, interpolationPoints, ., getEntry, (, k, ,, j, )]
[work1, ., getEntry, (, j, )]
[work1]
[j]
[modelSecondDerivativesParameters, ., getEntry, (, k, ), *, interpolationPoints, ., getEntry, (, k, ,, j, )]
[modelSecondDerivativesParameters, ., getEntry, (, k, )]
[modelSecondDerivativesParameters]
[k]
[interpolationPoints, ., getEntry, (, k, ,, j, )]
[interpolationPoints]
[k]
[j]
[interpolationPoints, ., setEntry, (, k, ,, j, ,, interpolationPoints, ., getEntry, (, k, ,, j, ), -, trustRegionCenterOffset, ., getEntry, (, j, ), )]
[interpolationPoints]
[k]
[j]
[interpolationPoints, ., getEntry, (, k, ,, j, ), -, trustRegionCenterOffset, ., getEntry, (, j, )]
[interpolationPoints, ., getEntry, (, k, ,, j, )]
[interpolationPoints]
[k]
[j]
[trustRegionCenterOffset, ., getEntry, (, j, )]
[trustRegionCenterOffset]
[j]
[0]
[i, <=, j]
[i]
[j]
[i, ++]
[i]
[modelSecondDerivativesValues, ., setEntry, (, ih, ,, modelSecondDerivativesValues, ., getEntry, (, ih, ), +, work1, ., getEntry, (, i, ), *, trustRegionCenterOffset, ., getEntry, (, j, ), +, trustRegionCenterOffset, ., getEntry, (, i, ), *, work1, ., getEntry, (, j, ), )]
[modelSecondDerivativesValues]
[ih]
[modelSecondDerivativesValues, ., getEntry, (, ih, ), +, work1, ., getEntry, (, i, ), *, trustRegionCenterOffset, ., getEntry, (, j, ), +, trustRegionCenterOffset, ., getEntry, (, i, ), *, work1, ., getEntry, (, j, )]
[modelSecondDerivativesValues, ., getEntry, (, ih, ), +, work1, ., getEntry, (, i, ), *, trustRegionCenterOffset, ., getEntry, (, j, )]
[modelSecondDerivativesValues, ., getEntry, (, ih, )]
[modelSecondDerivativesValues]
[ih]
[work1, ., getEntry, (, i, ), *, trustRegionCenterOffset, ., getEntry, (, j, )]
[work1, ., getEntry, (, i, )]
[work1]
[i]
[trustRegionCenterOffset, ., getEntry, (, j, )]
[trustRegionCenterOffset]
[j]
[trustRegionCenterOffset, ., getEntry, (, i, ), *, work1, ., getEntry, (, j, )]
[trustRegionCenterOffset, ., getEntry, (, i, )]
[trustRegionCenterOffset]
[i]
[work1, ., getEntry, (, j, )]
[work1]
[j]
[bMatrix, ., setEntry, (, npt, +, i, ,, j, ,, bMatrix, ., getEntry, (, npt, +, j, ,, i, ), )]
[bMatrix]
[npt, +, i]
[npt]
[i]
[j]
[bMatrix, ., getEntry, (, npt, +, j, ,, i, )]
[bMatrix]
[npt, +, j]
[npt]
[j]
[i]
[ih, ++]
[ih]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[originShift, ., setEntry, (, i, ,, originShift, ., getEntry, (, i, ), +, trustRegionCenterOffset, ., getEntry, (, i, ), )]
[originShift]
[i]
[originShift, ., getEntry, (, i, ), +, trustRegionCenterOffset, ., getEntry, (, i, )]
[originShift, ., getEntry, (, i, )]
[originShift]
[i]
[trustRegionCenterOffset, ., getEntry, (, i, )]
[trustRegionCenterOffset]
[i]
[newPoint, ., setEntry, (, i, ,, newPoint, ., getEntry, (, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, ), )]
[newPoint]
[i]
[newPoint, ., getEntry, (, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, )]
[newPoint, ., getEntry, (, i, )]
[newPoint]
[i]
[trustRegionCenterOffset, ., getEntry, (, i, )]
[trustRegionCenterOffset]
[i]
[lowerDifference, ., setEntry, (, i, ,, lowerDifference, ., getEntry, (, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, ), )]
[lowerDifference]
[i]
[lowerDifference, ., getEntry, (, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, )]
[lowerDifference, ., getEntry, (, i, )]
[lowerDifference]
[i]
[trustRegionCenterOffset, ., getEntry, (, i, )]
[trustRegionCenterOffset]
[i]
[upperDifference, ., setEntry, (, i, ,, upperDifference, ., getEntry, (, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, ), )]
[upperDifference]
[i]
[upperDifference, ., getEntry, (, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, )]
[upperDifference, ., getEntry, (, i, )]
[upperDifference]
[i]
[trustRegionCenterOffset, ., getEntry, (, i, )]
[trustRegionCenterOffset]
[i]
[trustRegionCenterOffset, ., setEntry, (, i, ,, ZERO, )]
[trustRegionCenterOffset]
[i]
[ZERO]
[xoptsq]
[ZERO]
[ntrits, ==, 0]
[ntrits]
[0]
[state]
[210]
[state]
[230]
[210]
[printState, (, 210, )]
[210]
[altmov, (, knew, ,, adelt, )]
[knew]
[adelt]
[alpha]
[alphaCauchy, [, 0, ]]
[alphaCauchy]
[0]
[cauchy]
[alphaCauchy, [, 1, ]]
[alphaCauchy]
[1]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[trialStepPoint, ., setEntry, (, i, ,, newPoint, ., getEntry, (, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, ), )]
[trialStepPoint]
[i]
[newPoint, ., getEntry, (, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, )]
[newPoint, ., getEntry, (, i, )]
[newPoint]
[i]
[trustRegionCenterOffset, ., getEntry, (, i, )]
[trustRegionCenterOffset]
[i]
[230]
[printState, (, 230, )]
[230]
[0]
[k, <, npt]
[k]
[npt]
[k, ++]
[k]
[ZERO]
[ZERO]
[ZERO]
[0]
[j, <, n]
[j]
[n]
[j, ++]
[j]
[suma]
[interpolationPoints, ., getEntry, (, k, ,, j, ), *, trialStepPoint, ., getEntry, (, j, )]
[interpolationPoints, ., getEntry, (, k, ,, j, )]
[interpolationPoints]
[k]
[j]
[trialStepPoint, ., getEntry, (, j, )]
[trialStepPoint]
[j]
[sumb]
[interpolationPoints, ., getEntry, (, k, ,, j, ), *, trustRegionCenterOffset, ., getEntry, (, j, )]
[interpolationPoints, ., getEntry, (, k, ,, j, )]
[interpolationPoints]
[k]
[j]
[trustRegionCenterOffset, ., getEntry, (, j, )]
[trustRegionCenterOffset]
[j]
[sum]
[bMatrix, ., getEntry, (, k, ,, j, ), *, trialStepPoint, ., getEntry, (, j, )]
[bMatrix, ., getEntry, (, k, ,, j, )]
[bMatrix]
[k]
[j]
[trialStepPoint, ., getEntry, (, j, )]
[trialStepPoint]
[j]
[work3, ., setEntry, (, k, ,, suma, *, (, HALF, *, suma, +, sumb, ), )]
[work3]
[k]
[suma, *, (, HALF, *, suma, +, sumb, )]
[suma]
[(, HALF, *, suma, +, sumb, )]
[HALF, *, suma, +, sumb]
[HALF, *, suma]
[HALF]
[suma]
[sumb]
[lagrangeValuesAtNewPoint, ., setEntry, (, k, ,, sum, )]
[lagrangeValuesAtNewPoint]
[k]
[sum]
[work2, ., setEntry, (, k, ,, suma, )]
[work2]
[k]
[suma]
[beta]
[ZERO]
[0]
[m, <, nptm]
[m]
[nptm]
[m, ++]
[m]
[ZERO]
[0]
[k, <, npt]
[k]
[npt]
[k, ++]
[k]
[sum]
[zMatrix, ., getEntry, (, k, ,, m, ), *, work3, ., getEntry, (, k, )]
[zMatrix, ., getEntry, (, k, ,, m, )]
[zMatrix]
[k]
[m]
[work3, ., getEntry, (, k, )]
[work3]
[k]
[beta]
[sum, *, sum]
[sum]
[sum]
[0]
[k, <, npt]
[k]
[npt]
[k, ++]
[k]
[lagrangeValuesAtNewPoint, ., setEntry, (, k, ,, lagrangeValuesAtNewPoint, ., getEntry, (, k, ), +, sum, *, zMatrix, ., getEntry, (, k, ,, m, ), )]
[lagrangeValuesAtNewPoint]
[k]
[lagrangeValuesAtNewPoint, ., getEntry, (, k, ), +, sum, *, zMatrix, ., getEntry, (, k, ,, m, )]
[lagrangeValuesAtNewPoint, ., getEntry, (, k, )]
[lagrangeValuesAtNewPoint]
[k]
[sum, *, zMatrix, ., getEntry, (, k, ,, m, )]
[sum]
[zMatrix, ., getEntry, (, k, ,, m, )]
[zMatrix]
[k]
[m]
[dsq]
[ZERO]
[ZERO]
[ZERO]
[0]
[j, <, n]
[j]
[n]
[j, ++]
[j]
[trialStepPoint, ., getEntry, (, j, )]
[trialStepPoint]
[j]
[dsq]
[d1, *, d1]
[d1]
[d1]
[ZERO]
[0]
[k, <, npt]
[k]
[npt]
[k, ++]
[k]
[sum]
[work3, ., getEntry, (, k, ), *, bMatrix, ., getEntry, (, k, ,, j, )]
[work3, ., getEntry, (, k, )]
[work3]
[k]
[bMatrix, ., getEntry, (, k, ,, j, )]
[bMatrix]
[k]
[j]
[bsum]
[sum, *, trialStepPoint, ., getEntry, (, j, )]
[sum]
[trialStepPoint, ., getEntry, (, j, )]
[trialStepPoint]
[j]
[npt, +, j]
[npt]
[j]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[sum]
[bMatrix, ., getEntry, (, jp, ,, i, ), *, trialStepPoint, ., getEntry, (, i, )]
[bMatrix, ., getEntry, (, jp, ,, i, )]
[bMatrix]
[jp]
[i]
[trialStepPoint, ., getEntry, (, i, )]
[trialStepPoint]
[i]
[lagrangeValuesAtNewPoint, ., setEntry, (, jp, ,, sum, )]
[lagrangeValuesAtNewPoint]
[jp]
[sum]
[bsum]
[sum, *, trialStepPoint, ., getEntry, (, j, )]
[sum]
[trialStepPoint, ., getEntry, (, j, )]
[trialStepPoint]
[j]
[dx]
[trialStepPoint, ., getEntry, (, j, ), *, trustRegionCenterOffset, ., getEntry, (, j, )]
[trialStepPoint, ., getEntry, (, j, )]
[trialStepPoint]
[j]
[trustRegionCenterOffset, ., getEntry, (, j, )]
[trustRegionCenterOffset]
[j]
[beta]
[dx, *, dx, +, dsq, *, (, xoptsq, +, dx, +, dx, +, HALF, *, dsq, ), +, beta, -, bsum]
[dx, *, dx, +, dsq, *, (, xoptsq, +, dx, +, dx, +, HALF, *, dsq, ), +, beta]
[dx, *, dx, +, dsq, *, (, xoptsq, +, dx, +, dx, +, HALF, *, dsq, )]
[dx, *, dx]
[dx]
[dx]
[dsq, *, (, xoptsq, +, dx, +, dx, +, HALF, *, dsq, )]
[dsq]
[(, xoptsq, +, dx, +, dx, +, HALF, *, dsq, )]
[xoptsq, +, dx, +, dx, +, HALF, *, dsq]
[xoptsq, +, dx, +, dx]
[xoptsq, +, dx]
[xoptsq]
[dx]
[dx]
[HALF, *, dsq]
[HALF]
[dsq]
[beta]
[bsum]
[lagrangeValuesAtNewPoint, ., setEntry, (, trustRegionCenterInterpolationPointIndex, ,, lagrangeValuesAtNewPoint, ., getEntry, (, trustRegionCenterInterpolationPointIndex, ), +, ONE, )]
[lagrangeValuesAtNewPoint]
[trustRegionCenterInterpolationPointIndex]
[lagrangeValuesAtNewPoint, ., getEntry, (, trustRegionCenterInterpolationPointIndex, ), +, ONE]
[lagrangeValuesAtNewPoint, ., getEntry, (, trustRegionCenterInterpolationPointIndex, )]
[lagrangeValuesAtNewPoint]
[trustRegionCenterInterpolationPointIndex]
[ONE]
[ntrits, ==, 0]
[ntrits]
[0]
[lagrangeValuesAtNewPoint, ., getEntry, (, knew, )]
[lagrangeValuesAtNewPoint]
[knew]
[denom]
[d1, *, d1, +, alpha, *, beta]
[d1, *, d1]
[d1]
[d1]
[alpha, *, beta]
[alpha]
[beta]
[denom, <, cauchy, &&, cauchy, >, ZERO]
[denom, <, cauchy]
[denom]
[cauchy]
[cauchy, >, ZERO]
[cauchy]
[ZERO]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[newPoint, ., setEntry, (, i, ,, alternativeNewPoint, ., getEntry, (, i, ), )]
[newPoint]
[i]
[alternativeNewPoint, ., getEntry, (, i, )]
[alternativeNewPoint]
[i]
[trialStepPoint, ., setEntry, (, i, ,, newPoint, ., getEntry, (, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, ), )]
[trialStepPoint]
[i]
[newPoint, ., getEntry, (, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, )]
[newPoint, ., getEntry, (, i, )]
[newPoint]
[i]
[trustRegionCenterOffset, ., getEntry, (, i, )]
[trustRegionCenterOffset]
[i]
[cauchy]
[ZERO]
[state]
[230]
[delta, *, delta]
[delta]
[delta]
[scaden]
[ZERO]
[biglsq]
[ZERO]
[knew]
[0]
[0]
[k, <, npt]
[k]
[npt]
[k, ++]
[k]
[k, ==, trustRegionCenterInterpolationPointIndex]
[k]
[trustRegionCenterInterpolationPointIndex]
[ZERO]
[0]
[m, <, nptm]
[m]
[nptm]
[m, ++]
[m]
[zMatrix, ., getEntry, (, k, ,, m, )]
[zMatrix]
[k]
[m]
[hdiag]
[d1, *, d1]
[d1]
[d1]
[lagrangeValuesAtNewPoint, ., getEntry, (, k, )]
[lagrangeValuesAtNewPoint]
[k]
[beta, *, hdiag, +, d2, *, d2]
[beta, *, hdiag]
[beta]
[hdiag]
[d2, *, d2]
[d2]
[d2]
[distsq]
[ZERO]
[0]
[j, <, n]
[j]
[n]
[j, ++]
[j]
[interpolationPoints, ., getEntry, (, k, ,, j, ), -, trustRegionCenterOffset, ., getEntry, (, j, )]
[interpolationPoints, ., getEntry, (, k, ,, j, )]
[interpolationPoints]
[k]
[j]
[trustRegionCenterOffset, ., getEntry, (, j, )]
[trustRegionCenterOffset]
[j]
[distsq]
[d3, *, d3]
[d3]
[d3]
[distsq, /, delsq]
[distsq]
[delsq]
[Math, ., max, (, ONE, ,, d4, *, d4, )]
[Math]
[ONE]
[d4, *, d4]
[d4]
[d4]
[temp, *, den, >, scaden]
[temp, *, den]
[temp]
[den]
[scaden]
[scaden]
[temp, *, den]
[temp]
[den]
[knew]
[k]
[denom]
[den]
[lagrangeValuesAtNewPoint, ., getEntry, (, k, )]
[lagrangeValuesAtNewPoint]
[k]
[biglsq]
[Math, ., max, (, biglsq, ,, temp, *, (, d5, *, d5, ), )]
[Math]
[biglsq]
[temp, *, (, d5, *, d5, )]
[temp]
[(, d5, *, d5, )]
[d5, *, d5]
[d5]
[d5]
[360]
[printState, (, 360, )]
[360]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[lowerBound, [, i, ]]
[lowerBound]
[i]
[originShift, ., getEntry, (, i, ), +, newPoint, ., getEntry, (, i, )]
[originShift, ., getEntry, (, i, )]
[originShift]
[i]
[newPoint, ., getEntry, (, i, )]
[newPoint]
[i]
[Math, ., max, (, d3, ,, d4, )]
[Math]
[d3]
[d4]
[upperBound, [, i, ]]
[upperBound]
[i]
[currentBest, ., setEntry, (, i, ,, Math, ., min, (, d1, ,, d2, ), )]
[currentBest]
[i]
[Math, ., min, (, d1, ,, d2, )]
[Math]
[d1]
[d2]
[newPoint, ., getEntry, (, i, ), ==, lowerDifference, ., getEntry, (, i, )]
[newPoint, ., getEntry, (, i, )]
[newPoint]
[i]
[lowerDifference, ., getEntry, (, i, )]
[lowerDifference]
[i]
[currentBest, ., setEntry, (, i, ,, lowerBound, [, i, ], )]
[currentBest]
[i]
[lowerBound, [, i, ]]
[lowerBound]
[i]
[newPoint, ., getEntry, (, i, ), ==, upperDifference, ., getEntry, (, i, )]
[newPoint, ., getEntry, (, i, )]
[newPoint]
[i]
[upperDifference, ., getEntry, (, i, )]
[upperDifference]
[i]
[currentBest, ., setEntry, (, i, ,, upperBound, [, i, ], )]
[currentBest]
[i]
[upperBound, [, i, ]]
[upperBound]
[i]
[f]
[computeObjectiveValue, (, currentBest, ., toArray, (, ), )]
[currentBest, ., toArray, (, )]
[currentBest]
[!, isMinimize]
[isMinimize]
[f]
[-, f]
[f]
[ntrits, ==, -, 1]
[ntrits]
[-, 1]
[1]
[fsave]
[f]
[state]
[720]
[fAtInterpolationPoints, ., getEntry, (, trustRegionCenterInterpolationPointIndex, )]
[fAtInterpolationPoints]
[trustRegionCenterInterpolationPointIndex]
[ZERO]
[0]
[0]
[j, <, n]
[j]
[n]
[j, ++]
[j]
[vquad]
[trialStepPoint, ., getEntry, (, j, ), *, gradientAtTrustRegionCenter, ., getEntry, (, j, )]
[trialStepPoint, ., getEntry, (, j, )]
[trialStepPoint]
[j]
[gradientAtTrustRegionCenter, ., getEntry, (, j, )]
[gradientAtTrustRegionCenter]
[j]
[0]
[i, <=, j]
[i]
[j]
[i, ++]
[i]
[trialStepPoint, ., getEntry, (, i, ), *, trialStepPoint, ., getEntry, (, j, )]
[trialStepPoint, ., getEntry, (, i, )]
[trialStepPoint]
[i]
[trialStepPoint, ., getEntry, (, j, )]
[trialStepPoint]
[j]
[i, ==, j]
[i]
[j]
[temp]
[HALF]
[vquad]
[modelSecondDerivativesValues, ., getEntry, (, ih, ), *, temp]
[modelSecondDerivativesValues, ., getEntry, (, ih, )]
[modelSecondDerivativesValues]
[ih]
[temp]
[ih, ++]
[ih]
[0]
[k, <, npt]
[k]
[npt]
[k, ++]
[k]
[work2, ., getEntry, (, k, )]
[work2]
[k]
[d1, *, d1]
[d1]
[d1]
[vquad]
[HALF, *, modelSecondDerivativesParameters, ., getEntry, (, k, ), *, d2]
[HALF, *, modelSecondDerivativesParameters, ., getEntry, (, k, )]
[HALF]
[modelSecondDerivativesParameters, ., getEntry, (, k, )]
[modelSecondDerivativesParameters]
[k]
[d2]
[f, -, fopt, -, vquad]
[f, -, fopt]
[f]
[fopt]
[vquad]
[diffc]
[diffb]
[diffb]
[diffa]
[diffa]
[Math, ., abs, (, diff, )]
[Math]
[diff]
[dnorm, >, rho]
[dnorm]
[rho]
[nfsav]
[getEvaluations, (, )]
[ntrits, >, 0]
[ntrits]
[0]
[vquad, >=, ZERO]
[vquad]
[ZERO]
[new, MathIllegalStateException, (, LocalizedFormats, ., TRUST_REGION_STEP_FAILED, ,, vquad, )]
[LocalizedFormats, ., TRUST_REGION_STEP_FAILED]
[LocalizedFormats]
[vquad]
[ratio]
[(, f, -, fopt, ), /, vquad]
[(, f, -, fopt, )]
[f, -, fopt]
[f]
[fopt]
[vquad]
[HALF, *, delta]
[HALF]
[delta]
[ratio, <=, ONE_OVER_TEN]
[ratio]
[ONE_OVER_TEN]
[delta]
[Math, ., min, (, hDelta, ,, dnorm, )]
[Math]
[hDelta]
[dnorm]
[ratio, <=, .7]
[ratio]
[.7]
[delta]
[Math, ., max, (, hDelta, ,, dnorm, )]
[Math]
[hDelta]
[dnorm]
[delta]
[Math, ., max, (, hDelta, ,, 2, *, dnorm, )]
[Math]
[hDelta]
[2, *, dnorm]
[2]
[dnorm]
[delta, <=, rho, *, 1.5]
[delta]
[rho, *, 1.5]
[rho]
[1.5]
[delta]
[rho]
[f, <, fopt]
[f]
[fopt]
[knew]
[denom]
[delta, *, delta]
[delta]
[delta]
[scaden]
[ZERO]
[biglsq]
[ZERO]
[knew]
[0]
[0]
[k, <, npt]
[k]
[npt]
[k, ++]
[k]
[ZERO]
[0]
[m, <, nptm]
[m]
[nptm]
[m, ++]
[m]
[zMatrix, ., getEntry, (, k, ,, m, )]
[zMatrix]
[k]
[m]
[hdiag]
[d1, *, d1]
[d1]
[d1]
[lagrangeValuesAtNewPoint, ., getEntry, (, k, )]
[lagrangeValuesAtNewPoint]
[k]
[beta, *, hdiag, +, d1, *, d1]
[beta, *, hdiag]
[beta]
[hdiag]
[d1, *, d1]
[d1]
[d1]
[distsq]
[ZERO]
[0]
[j, <, n]
[j]
[n]
[j, ++]
[j]
[interpolationPoints, ., getEntry, (, k, ,, j, ), -, newPoint, ., getEntry, (, j, )]
[interpolationPoints, ., getEntry, (, k, ,, j, )]
[interpolationPoints]
[k]
[j]
[newPoint, ., getEntry, (, j, )]
[newPoint]
[j]
[distsq]
[d2, *, d2]
[d2]
[d2]
[distsq, /, delsq]
[distsq]
[delsq]
[Math, ., max, (, ONE, ,, d3, *, d3, )]
[Math]
[ONE]
[d3, *, d3]
[d3]
[d3]
[temp, *, den, >, scaden]
[temp, *, den]
[temp]
[den]
[scaden]
[scaden]
[temp, *, den]
[temp]
[den]
[knew]
[k]
[denom]
[den]
[lagrangeValuesAtNewPoint, ., getEntry, (, k, )]
[lagrangeValuesAtNewPoint]
[k]
[temp, *, (, d4, *, d4, )]
[temp]
[(, d4, *, d4, )]
[d4, *, d4]
[d4]
[d4]
[biglsq]
[Math, ., max, (, biglsq, ,, d5, )]
[Math]
[biglsq]
[d5]
[scaden, <=, HALF, *, biglsq]
[scaden]
[HALF, *, biglsq]
[HALF]
[biglsq]
[knew]
[ksav]
[denom]
[densav]
[update, (, beta, ,, denom, ,, knew, )]
[beta]
[denom]
[knew]
[ih]
[0]
[modelSecondDerivativesParameters, ., getEntry, (, knew, )]
[modelSecondDerivativesParameters]
[knew]
[modelSecondDerivativesParameters, ., setEntry, (, knew, ,, ZERO, )]
[modelSecondDerivativesParameters]
[knew]
[ZERO]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[pqold, *, interpolationPoints, ., getEntry, (, knew, ,, i, )]
[pqold]
[interpolationPoints, ., getEntry, (, knew, ,, i, )]
[interpolationPoints]
[knew]
[i]
[0]
[j, <=, i]
[j]
[i]
[j, ++]
[j]
[modelSecondDerivativesValues, ., setEntry, (, ih, ,, modelSecondDerivativesValues, ., getEntry, (, ih, ), +, temp, *, interpolationPoints, ., getEntry, (, knew, ,, j, ), )]
[modelSecondDerivativesValues]
[ih]
[modelSecondDerivativesValues, ., getEntry, (, ih, ), +, temp, *, interpolationPoints, ., getEntry, (, knew, ,, j, )]
[modelSecondDerivativesValues, ., getEntry, (, ih, )]
[modelSecondDerivativesValues]
[ih]
[temp, *, interpolationPoints, ., getEntry, (, knew, ,, j, )]
[temp]
[interpolationPoints, ., getEntry, (, knew, ,, j, )]
[interpolationPoints]
[knew]
[j]
[ih, ++]
[ih]
[0]
[m, <, nptm]
[m]
[nptm]
[m, ++]
[m]
[diff, *, zMatrix, ., getEntry, (, knew, ,, m, )]
[diff]
[zMatrix, ., getEntry, (, knew, ,, m, )]
[zMatrix]
[knew]
[m]
[0]
[k, <, npt]
[k]
[npt]
[k, ++]
[k]
[modelSecondDerivativesParameters, ., setEntry, (, k, ,, modelSecondDerivativesParameters, ., getEntry, (, k, ), +, temp, *, zMatrix, ., getEntry, (, k, ,, m, ), )]
[modelSecondDerivativesParameters]
[k]
[modelSecondDerivativesParameters, ., getEntry, (, k, ), +, temp, *, zMatrix, ., getEntry, (, k, ,, m, )]
[modelSecondDerivativesParameters, ., getEntry, (, k, )]
[modelSecondDerivativesParameters]
[k]
[temp, *, zMatrix, ., getEntry, (, k, ,, m, )]
[temp]
[zMatrix, ., getEntry, (, k, ,, m, )]
[zMatrix]
[k]
[m]
[fAtInterpolationPoints, ., setEntry, (, knew, ,, f, )]
[fAtInterpolationPoints]
[knew]
[f]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[interpolationPoints, ., setEntry, (, knew, ,, i, ,, newPoint, ., getEntry, (, i, ), )]
[interpolationPoints]
[knew]
[i]
[newPoint, ., getEntry, (, i, )]
[newPoint]
[i]
[work1, ., setEntry, (, i, ,, bMatrix, ., getEntry, (, knew, ,, i, ), )]
[work1]
[i]
[bMatrix, ., getEntry, (, knew, ,, i, )]
[bMatrix]
[knew]
[i]
[0]
[k, <, npt]
[k]
[npt]
[k, ++]
[k]
[ZERO]
[0]
[m, <, nptm]
[m]
[nptm]
[m, ++]
[m]
[suma]
[zMatrix, ., getEntry, (, knew, ,, m, ), *, zMatrix, ., getEntry, (, k, ,, m, )]
[zMatrix, ., getEntry, (, knew, ,, m, )]
[zMatrix]
[knew]
[m]
[zMatrix, ., getEntry, (, k, ,, m, )]
[zMatrix]
[k]
[m]
[ZERO]
[0]
[j, <, n]
[j]
[n]
[j, ++]
[j]
[sumb]
[interpolationPoints, ., getEntry, (, k, ,, j, ), *, trustRegionCenterOffset, ., getEntry, (, j, )]
[interpolationPoints, ., getEntry, (, k, ,, j, )]
[interpolationPoints]
[k]
[j]
[trustRegionCenterOffset, ., getEntry, (, j, )]
[trustRegionCenterOffset]
[j]
[suma, *, sumb]
[suma]
[sumb]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[work1, ., setEntry, (, i, ,, work1, ., getEntry, (, i, ), +, temp, *, interpolationPoints, ., getEntry, (, k, ,, i, ), )]
[work1]
[i]
[work1, ., getEntry, (, i, ), +, temp, *, interpolationPoints, ., getEntry, (, k, ,, i, )]
[work1, ., getEntry, (, i, )]
[work1]
[i]
[temp, *, interpolationPoints, ., getEntry, (, k, ,, i, )]
[temp]
[interpolationPoints, ., getEntry, (, k, ,, i, )]
[interpolationPoints]
[k]
[i]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[gradientAtTrustRegionCenter, ., setEntry, (, i, ,, gradientAtTrustRegionCenter, ., getEntry, (, i, ), +, diff, *, work1, ., getEntry, (, i, ), )]
[gradientAtTrustRegionCenter]
[i]
[gradientAtTrustRegionCenter, ., getEntry, (, i, ), +, diff, *, work1, ., getEntry, (, i, )]
[gradientAtTrustRegionCenter, ., getEntry, (, i, )]
[gradientAtTrustRegionCenter]
[i]
[diff, *, work1, ., getEntry, (, i, )]
[diff]
[work1, ., getEntry, (, i, )]
[work1]
[i]
[f, <, fopt]
[f]
[fopt]
[trustRegionCenterInterpolationPointIndex]
[knew]
[xoptsq]
[ZERO]
[ih]
[0]
[0]
[j, <, n]
[j]
[n]
[j, ++]
[j]
[trustRegionCenterOffset, ., setEntry, (, j, ,, newPoint, ., getEntry, (, j, ), )]
[trustRegionCenterOffset]
[j]
[newPoint, ., getEntry, (, j, )]
[newPoint]
[j]
[trustRegionCenterOffset, ., getEntry, (, j, )]
[trustRegionCenterOffset]
[j]
[xoptsq]
[d1, *, d1]
[d1]
[d1]
[0]
[i, <=, j]
[i]
[j]
[i, ++]
[i]
[i, <, j]
[i]
[j]
[gradientAtTrustRegionCenter, ., setEntry, (, j, ,, gradientAtTrustRegionCenter, ., getEntry, (, j, ), +, modelSecondDerivativesValues, ., getEntry, (, ih, ), *, trialStepPoint, ., getEntry, (, i, ), )]
[gradientAtTrustRegionCenter]
[j]
[gradientAtTrustRegionCenter, ., getEntry, (, j, ), +, modelSecondDerivativesValues, ., getEntry, (, ih, ), *, trialStepPoint, ., getEntry, (, i, )]
[gradientAtTrustRegionCenter, ., getEntry, (, j, )]
[gradientAtTrustRegionCenter]
[j]
[modelSecondDerivativesValues, ., getEntry, (, ih, ), *, trialStepPoint, ., getEntry, (, i, )]
[modelSecondDerivativesValues, ., getEntry, (, ih, )]
[modelSecondDerivativesValues]
[ih]
[trialStepPoint, ., getEntry, (, i, )]
[trialStepPoint]
[i]
[gradientAtTrustRegionCenter, ., setEntry, (, i, ,, gradientAtTrustRegionCenter, ., getEntry, (, i, ), +, modelSecondDerivativesValues, ., getEntry, (, ih, ), *, trialStepPoint, ., getEntry, (, j, ), )]
[gradientAtTrustRegionCenter]
[i]
[gradientAtTrustRegionCenter, ., getEntry, (, i, ), +, modelSecondDerivativesValues, ., getEntry, (, ih, ), *, trialStepPoint, ., getEntry, (, j, )]
[gradientAtTrustRegionCenter, ., getEntry, (, i, )]
[gradientAtTrustRegionCenter]
[i]
[modelSecondDerivativesValues, ., getEntry, (, ih, ), *, trialStepPoint, ., getEntry, (, j, )]
[modelSecondDerivativesValues, ., getEntry, (, ih, )]
[modelSecondDerivativesValues]
[ih]
[trialStepPoint, ., getEntry, (, j, )]
[trialStepPoint]
[j]
[ih, ++]
[ih]
[0]
[k, <, npt]
[k]
[npt]
[k, ++]
[k]
[ZERO]
[0]
[j, <, n]
[j]
[n]
[j, ++]
[j]
[temp]
[interpolationPoints, ., getEntry, (, k, ,, j, ), *, trialStepPoint, ., getEntry, (, j, )]
[interpolationPoints, ., getEntry, (, k, ,, j, )]
[interpolationPoints]
[k]
[j]
[trialStepPoint, ., getEntry, (, j, )]
[trialStepPoint]
[j]
[temp]
[modelSecondDerivativesParameters, ., getEntry, (, k, )]
[modelSecondDerivativesParameters]
[k]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[gradientAtTrustRegionCenter, ., setEntry, (, i, ,, gradientAtTrustRegionCenter, ., getEntry, (, i, ), +, temp, *, interpolationPoints, ., getEntry, (, k, ,, i, ), )]
[gradientAtTrustRegionCenter]
[i]
[gradientAtTrustRegionCenter, ., getEntry, (, i, ), +, temp, *, interpolationPoints, ., getEntry, (, k, ,, i, )]
[gradientAtTrustRegionCenter, ., getEntry, (, i, )]
[gradientAtTrustRegionCenter]
[i]
[temp, *, interpolationPoints, ., getEntry, (, k, ,, i, )]
[temp]
[interpolationPoints, ., getEntry, (, k, ,, i, )]
[interpolationPoints]
[k]
[i]
[ntrits, >, 0]
[ntrits]
[0]
[0]
[k, <, npt]
[k]
[npt]
[k, ++]
[k]
[lagrangeValuesAtNewPoint, ., setEntry, (, k, ,, fAtInterpolationPoints, ., getEntry, (, k, ), -, fAtInterpolationPoints, ., getEntry, (, trustRegionCenterInterpolationPointIndex, ), )]
[lagrangeValuesAtNewPoint]
[k]
[fAtInterpolationPoints, ., getEntry, (, k, ), -, fAtInterpolationPoints, ., getEntry, (, trustRegionCenterInterpolationPointIndex, )]
[fAtInterpolationPoints, ., getEntry, (, k, )]
[fAtInterpolationPoints]
[k]
[fAtInterpolationPoints, ., getEntry, (, trustRegionCenterInterpolationPointIndex, )]
[fAtInterpolationPoints]
[trustRegionCenterInterpolationPointIndex]
[work3, ., setEntry, (, k, ,, ZERO, )]
[work3]
[k]
[ZERO]
[0]
[j, <, nptm]
[j]
[nptm]
[j, ++]
[j]
[ZERO]
[0]
[k, <, npt]
[k]
[npt]
[k, ++]
[k]
[sum]
[zMatrix, ., getEntry, (, k, ,, j, ), *, lagrangeValuesAtNewPoint, ., getEntry, (, k, )]
[zMatrix, ., getEntry, (, k, ,, j, )]
[zMatrix]
[k]
[j]
[lagrangeValuesAtNewPoint, ., getEntry, (, k, )]
[lagrangeValuesAtNewPoint]
[k]
[0]
[k, <, npt]
[k]
[npt]
[k, ++]
[k]
[work3, ., setEntry, (, k, ,, work3, ., getEntry, (, k, ), +, sum, *, zMatrix, ., getEntry, (, k, ,, j, ), )]
[work3]
[k]
[work3, ., getEntry, (, k, ), +, sum, *, zMatrix, ., getEntry, (, k, ,, j, )]
[work3, ., getEntry, (, k, )]
[work3]
[k]
[sum, *, zMatrix, ., getEntry, (, k, ,, j, )]
[sum]
[zMatrix, ., getEntry, (, k, ,, j, )]
[zMatrix]
[k]
[j]
[0]
[k, <, npt]
[k]
[npt]
[k, ++]
[k]
[ZERO]
[0]
[j, <, n]
[j]
[n]
[j, ++]
[j]
[sum]
[interpolationPoints, ., getEntry, (, k, ,, j, ), *, trustRegionCenterOffset, ., getEntry, (, j, )]
[interpolationPoints, ., getEntry, (, k, ,, j, )]
[interpolationPoints]
[k]
[j]
[trustRegionCenterOffset, ., getEntry, (, j, )]
[trustRegionCenterOffset]
[j]
[work2, ., setEntry, (, k, ,, work3, ., getEntry, (, k, ), )]
[work2]
[k]
[work3, ., getEntry, (, k, )]
[work3]
[k]
[work3, ., setEntry, (, k, ,, sum, *, work3, ., getEntry, (, k, ), )]
[work3]
[k]
[sum, *, work3, ., getEntry, (, k, )]
[sum]
[work3, ., getEntry, (, k, )]
[work3]
[k]
[ZERO]
[ZERO]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[ZERO]
[0]
[k, <, npt]
[k]
[npt]
[k, ++]
[k]
[sum]
[bMatrix, ., getEntry, (, k, ,, i, ), *, lagrangeValuesAtNewPoint, ., getEntry, (, k, ), +, interpolationPoints, ., getEntry, (, k, ,, i, ), *, work3, ., getEntry, (, k, )]
[bMatrix, ., getEntry, (, k, ,, i, ), *, lagrangeValuesAtNewPoint, ., getEntry, (, k, )]
[bMatrix, ., getEntry, (, k, ,, i, )]
[bMatrix]
[k]
[i]
[lagrangeValuesAtNewPoint, ., getEntry, (, k, )]
[lagrangeValuesAtNewPoint]
[k]
[interpolationPoints, ., getEntry, (, k, ,, i, ), *, work3, ., getEntry, (, k, )]
[interpolationPoints, ., getEntry, (, k, ,, i, )]
[interpolationPoints]
[k]
[i]
[work3, ., getEntry, (, k, )]
[work3]
[k]
[trustRegionCenterOffset, ., getEntry, (, i, ), ==, lowerDifference, ., getEntry, (, i, )]
[trustRegionCenterOffset, ., getEntry, (, i, )]
[trustRegionCenterOffset]
[i]
[lowerDifference, ., getEntry, (, i, )]
[lowerDifference]
[i]
[Math, ., min, (, ZERO, ,, gradientAtTrustRegionCenter, ., getEntry, (, i, ), )]
[Math]
[ZERO]
[gradientAtTrustRegionCenter, ., getEntry, (, i, )]
[gradientAtTrustRegionCenter]
[i]
[gqsq]
[d1, *, d1]
[d1]
[d1]
[Math, ., min, (, ZERO, ,, sum, )]
[Math]
[ZERO]
[sum]
[gisq]
[d2, *, d2]
[d2]
[d2]
[trustRegionCenterOffset, ., getEntry, (, i, ), ==, upperDifference, ., getEntry, (, i, )]
[trustRegionCenterOffset, ., getEntry, (, i, )]
[trustRegionCenterOffset]
[i]
[upperDifference, ., getEntry, (, i, )]
[upperDifference]
[i]
[Math, ., max, (, ZERO, ,, gradientAtTrustRegionCenter, ., getEntry, (, i, ), )]
[Math]
[ZERO]
[gradientAtTrustRegionCenter, ., getEntry, (, i, )]
[gradientAtTrustRegionCenter]
[i]
[gqsq]
[d1, *, d1]
[d1]
[d1]
[Math, ., max, (, ZERO, ,, sum, )]
[Math]
[ZERO]
[sum]
[gisq]
[d2, *, d2]
[d2]
[d2]
[gradientAtTrustRegionCenter, ., getEntry, (, i, )]
[gradientAtTrustRegionCenter]
[i]
[gqsq]
[d1, *, d1]
[d1]
[d1]
[gisq]
[sum, *, sum]
[sum]
[sum]
[lagrangeValuesAtNewPoint, ., setEntry, (, npt, +, i, ,, sum, )]
[lagrangeValuesAtNewPoint]
[npt, +, i]
[npt]
[i]
[sum]
[++, itest]
[itest]
[gqsq, <, TEN, *, gisq]
[gqsq]
[TEN, *, gisq]
[TEN]
[gisq]
[itest]
[0]
[itest, >=, 3]
[itest]
[3]
[0]
[Math, ., max, (, npt, ,, nh, )]
[Math]
[npt]
[nh]
[i, <, max]
[i]
[max]
[i, ++]
[i]
[i, <, n]
[i]
[n]
[gradientAtTrustRegionCenter, ., setEntry, (, i, ,, lagrangeValuesAtNewPoint, ., getEntry, (, npt, +, i, ), )]
[gradientAtTrustRegionCenter]
[i]
[lagrangeValuesAtNewPoint, ., getEntry, (, npt, +, i, )]
[lagrangeValuesAtNewPoint]
[npt, +, i]
[npt]
[i]
[i, <, npt]
[i]
[npt]
[modelSecondDerivativesParameters, ., setEntry, (, i, ,, work2, ., getEntry, (, i, ), )]
[modelSecondDerivativesParameters]
[i]
[work2, ., getEntry, (, i, )]
[work2]
[i]
[i, <, nh]
[i]
[nh]
[modelSecondDerivativesValues, ., setEntry, (, i, ,, ZERO, )]
[modelSecondDerivativesValues]
[i]
[ZERO]
[itest]
[0]
[ntrits, ==, 0]
[ntrits]
[0]
[state]
[60]
[f, <=, fopt, +, ONE_OVER_TEN, *, vquad]
[f]
[fopt, +, ONE_OVER_TEN, *, vquad]
[fopt]
[ONE_OVER_TEN, *, vquad]
[ONE_OVER_TEN]
[vquad]
[state]
[60]
[TWO, *, delta]
[TWO]
[delta]
[TEN, *, rho]
[TEN]
[rho]
[distsq]
[Math, ., max, (, d1, *, d1, ,, d2, *, d2, )]
[Math]
[d1, *, d1]
[d1]
[d1]
[d2, *, d2]
[d2]
[d2]
[650]
[printState, (, 650, )]
[650]
[knew]
[-, 1]
[1]
[0]
[k, <, npt]
[k]
[npt]
[k, ++]
[k]
[ZERO]
[0]
[j, <, n]
[j]
[n]
[j, ++]
[j]
[interpolationPoints, ., getEntry, (, k, ,, j, ), -, trustRegionCenterOffset, ., getEntry, (, j, )]
[interpolationPoints, ., getEntry, (, k, ,, j, )]
[interpolationPoints]
[k]
[j]
[trustRegionCenterOffset, ., getEntry, (, j, )]
[trustRegionCenterOffset]
[j]
[sum]
[d1, *, d1]
[d1]
[d1]
[sum, >, distsq]
[sum]
[distsq]
[knew]
[k]
[distsq]
[sum]
[knew, >=, 0]
[knew]
[0]
[Math, ., sqrt, (, distsq, )]
[Math]
[distsq]
[ntrits, ==, -, 1]
[ntrits]
[-, 1]
[1]
[delta]
[Math, ., min, (, ONE_OVER_TEN, *, delta, ,, HALF, *, dist, )]
[Math]
[ONE_OVER_TEN, *, delta]
[ONE_OVER_TEN]
[delta]
[HALF, *, dist]
[HALF]
[dist]
[delta, <=, rho, *, 1.5]
[delta]
[rho, *, 1.5]
[rho]
[1.5]
[delta]
[rho]
[ntrits]
[0]
[Math, ., min, (, ONE_OVER_TEN, *, dist, ,, delta, )]
[Math]
[ONE_OVER_TEN, *, dist]
[ONE_OVER_TEN]
[dist]
[delta]
[adelt]
[Math, ., max, (, d1, ,, rho, )]
[Math]
[d1]
[rho]
[dsq]
[adelt, *, adelt]
[adelt]
[adelt]
[state]
[90]
[ntrits, ==, -, 1]
[ntrits]
[-, 1]
[1]
[state]
[680]
[ratio, >, ZERO]
[ratio]
[ZERO]
[state]
[60]
[Math, ., max, (, delta, ,, dnorm, ), >, rho]
[Math, ., max, (, delta, ,, dnorm, )]
[Math]
[delta]
[dnorm]
[rho]
[state]
[60]
[680]
[printState, (, 680, )]
[680]
[rho, >, stoppingTrustRegionRadius]
[rho]
[stoppingTrustRegionRadius]
[delta]
[HALF, *, rho]
[HALF]
[rho]
[ratio]
[rho, /, stoppingTrustRegionRadius]
[rho]
[stoppingTrustRegionRadius]
[ratio, <=, SIXTEEN]
[ratio]
[SIXTEEN]
[rho]
[stoppingTrustRegionRadius]
[ratio, <=, TWO_HUNDRED_FIFTY]
[ratio]
[TWO_HUNDRED_FIFTY]
[rho]
[Math, ., sqrt, (, ratio, ), *, stoppingTrustRegionRadius]
[Math, ., sqrt, (, ratio, )]
[Math]
[ratio]
[stoppingTrustRegionRadius]
[rho]
[ONE_OVER_TEN]
[delta]
[Math, ., max, (, delta, ,, rho, )]
[Math]
[delta]
[rho]
[ntrits]
[0]
[nfsav]
[getEvaluations, (, )]
[state]
[60]
[ntrits, ==, -, 1]
[ntrits]
[-, 1]
[1]
[state]
[360]
[720]
[printState, (, 720, )]
[720]
[fAtInterpolationPoints, ., getEntry, (, trustRegionCenterInterpolationPointIndex, ), <=, fsave]
[fAtInterpolationPoints, ., getEntry, (, trustRegionCenterInterpolationPointIndex, )]
[fAtInterpolationPoints]
[trustRegionCenterInterpolationPointIndex]
[fsave]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[lowerBound, [, i, ]]
[lowerBound]
[i]
[originShift, ., getEntry, (, i, ), +, trustRegionCenterOffset, ., getEntry, (, i, )]
[originShift, ., getEntry, (, i, )]
[originShift]
[i]
[trustRegionCenterOffset, ., getEntry, (, i, )]
[trustRegionCenterOffset]
[i]
[Math, ., max, (, d3, ,, d4, )]
[Math]
[d3]
[d4]
[upperBound, [, i, ]]
[upperBound]
[i]
[currentBest, ., setEntry, (, i, ,, Math, ., min, (, d1, ,, d2, ), )]
[currentBest]
[i]
[Math, ., min, (, d1, ,, d2, )]
[Math]
[d1]
[d2]
[trustRegionCenterOffset, ., getEntry, (, i, ), ==, lowerDifference, ., getEntry, (, i, )]
[trustRegionCenterOffset, ., getEntry, (, i, )]
[trustRegionCenterOffset]
[i]
[lowerDifference, ., getEntry, (, i, )]
[lowerDifference]
[i]
[currentBest, ., setEntry, (, i, ,, lowerBound, [, i, ], )]
[currentBest]
[i]
[lowerBound, [, i, ]]
[lowerBound]
[i]
[trustRegionCenterOffset, ., getEntry, (, i, ), ==, upperDifference, ., getEntry, (, i, )]
[trustRegionCenterOffset, ., getEntry, (, i, )]
[trustRegionCenterOffset]
[i]
[upperDifference, ., getEntry, (, i, )]
[upperDifference]
[i]
[currentBest, ., setEntry, (, i, ,, upperBound, [, i, ], )]
[currentBest]
[i]
[upperBound, [, i, ]]
[upperBound]
[i]
[f]
[fAtInterpolationPoints, ., getEntry, (, trustRegionCenterInterpolationPointIndex, )]
[fAtInterpolationPoints]
[trustRegionCenterInterpolationPointIndex]
[f]
[new, MathIllegalStateException, (, LocalizedFormats, ., SIMPLE_MESSAGE, ,, "bobyqb", )]
[LocalizedFormats, ., SIMPLE_MESSAGE]
[LocalizedFormats]
["bobyqb"]
[printMethod, (, )]
[currentBest, ., getDimension, (, )]
[currentBest]
[numberOfInterpolationPoints]
[new, ArrayRealVector, (, n, )]
[n]
[new, ArrayRealVector, (, npt, )]
[npt]
[new, ArrayRealVector, (, n, )]
[n]
[new, ArrayRealVector, (, n, )]
[n]
[0]
[k, <, npt]
[k]
[npt]
[k, ++]
[k]
[hcol, ., setEntry, (, k, ,, ZERO, )]
[hcol]
[k]
[ZERO]
[0]
[npt, -, n, -, 1]
[npt, -, n]
[npt]
[n]
[1]
[j, <, max]
[j]
[max]
[j, ++]
[j]
[zMatrix, ., getEntry, (, knew, ,, j, )]
[zMatrix]
[knew]
[j]
[0]
[k, <, npt]
[k]
[npt]
[k, ++]
[k]
[hcol, ., setEntry, (, k, ,, hcol, ., getEntry, (, k, ), +, tmp, *, zMatrix, ., getEntry, (, k, ,, j, ), )]
[hcol]
[k]
[hcol, ., getEntry, (, k, ), +, tmp, *, zMatrix, ., getEntry, (, k, ,, j, )]
[hcol, ., getEntry, (, k, )]
[hcol]
[k]
[tmp, *, zMatrix, ., getEntry, (, k, ,, j, )]
[tmp]
[zMatrix, ., getEntry, (, k, ,, j, )]
[zMatrix]
[k]
[j]
[hcol, ., getEntry, (, knew, )]
[hcol]
[knew]
[HALF, *, alpha]
[HALF]
[alpha]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[glag, ., setEntry, (, i, ,, bMatrix, ., getEntry, (, knew, ,, i, ), )]
[glag]
[i]
[bMatrix, ., getEntry, (, knew, ,, i, )]
[bMatrix]
[knew]
[i]
[0]
[k, <, npt]
[k]
[npt]
[k, ++]
[k]
[ZERO]
[0]
[j, <, n]
[j]
[n]
[j, ++]
[j]
[tmp]
[interpolationPoints, ., getEntry, (, k, ,, j, ), *, trustRegionCenterOffset, ., getEntry, (, j, )]
[interpolationPoints, ., getEntry, (, k, ,, j, )]
[interpolationPoints]
[k]
[j]
[trustRegionCenterOffset, ., getEntry, (, j, )]
[trustRegionCenterOffset]
[j]
[tmp]
[hcol, ., getEntry, (, k, )]
[hcol]
[k]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[glag, ., setEntry, (, i, ,, glag, ., getEntry, (, i, ), +, tmp, *, interpolationPoints, ., getEntry, (, k, ,, i, ), )]
[glag]
[i]
[glag, ., getEntry, (, i, ), +, tmp, *, interpolationPoints, ., getEntry, (, k, ,, i, )]
[glag, ., getEntry, (, i, )]
[glag]
[i]
[tmp, *, interpolationPoints, ., getEntry, (, k, ,, i, )]
[tmp]
[interpolationPoints, ., getEntry, (, k, ,, i, )]
[interpolationPoints]
[k]
[i]
[ZERO]
[Double, ., NaN]
[Double]
[0]
[0]
[0]
[0]
[k, <, npt]
[k]
[npt]
[k, ++]
[k]
[k, ==, trustRegionCenterInterpolationPointIndex]
[k]
[trustRegionCenterInterpolationPointIndex]
[ZERO]
[ZERO]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[interpolationPoints, ., getEntry, (, k, ,, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, )]
[interpolationPoints, ., getEntry, (, k, ,, i, )]
[interpolationPoints]
[k]
[i]
[trustRegionCenterOffset, ., getEntry, (, i, )]
[trustRegionCenterOffset]
[i]
[dderiv]
[glag, ., getEntry, (, i, ), *, tmp]
[glag, ., getEntry, (, i, )]
[glag]
[i]
[tmp]
[distsq]
[tmp, *, tmp]
[tmp]
[tmp]
[adelt, /, Math, ., sqrt, (, distsq, )]
[adelt]
[Math, ., sqrt, (, distsq, )]
[Math]
[distsq]
[-, subd]
[subd]
[0]
[0]
[Math, ., min, (, ONE, ,, subd, )]
[Math]
[ONE]
[subd]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[interpolationPoints, ., getEntry, (, k, ,, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, )]
[interpolationPoints, ., getEntry, (, k, ,, i, )]
[interpolationPoints]
[k]
[i]
[trustRegionCenterOffset, ., getEntry, (, i, )]
[trustRegionCenterOffset]
[i]
[tmp, >, ZERO]
[tmp]
[ZERO]
[slbd, *, tmp, <, lowerDifference, ., getEntry, (, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, )]
[slbd, *, tmp]
[slbd]
[tmp]
[lowerDifference, ., getEntry, (, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, )]
[lowerDifference, ., getEntry, (, i, )]
[lowerDifference]
[i]
[trustRegionCenterOffset, ., getEntry, (, i, )]
[trustRegionCenterOffset]
[i]
[slbd]
[(, lowerDifference, ., getEntry, (, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, ), ), /, tmp]
[(, lowerDifference, ., getEntry, (, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, ), )]
[lowerDifference, ., getEntry, (, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, )]
[lowerDifference, ., getEntry, (, i, )]
[lowerDifference]
[i]
[trustRegionCenterOffset, ., getEntry, (, i, )]
[trustRegionCenterOffset]
[i]
[tmp]
[ilbd]
[-, i, -, 1]
[-, i]
[i]
[1]
[subd, *, tmp, >, upperDifference, ., getEntry, (, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, )]
[subd, *, tmp]
[subd]
[tmp]
[upperDifference, ., getEntry, (, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, )]
[upperDifference, ., getEntry, (, i, )]
[upperDifference]
[i]
[trustRegionCenterOffset, ., getEntry, (, i, )]
[trustRegionCenterOffset]
[i]
[subd]
[Math, ., max, (, sumin, ,, (, upperDifference, ., getEntry, (, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, ), ), /, tmp, )]
[Math]
[sumin]
[(, upperDifference, ., getEntry, (, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, ), ), /, tmp]
[(, upperDifference, ., getEntry, (, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, ), )]
[upperDifference, ., getEntry, (, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, )]
[upperDifference, ., getEntry, (, i, )]
[upperDifference]
[i]
[trustRegionCenterOffset, ., getEntry, (, i, )]
[trustRegionCenterOffset]
[i]
[tmp]
[iubd]
[i, +, 1]
[i]
[1]
[tmp, <, ZERO]
[tmp]
[ZERO]
[slbd, *, tmp, >, upperDifference, ., getEntry, (, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, )]
[slbd, *, tmp]
[slbd]
[tmp]
[upperDifference, ., getEntry, (, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, )]
[upperDifference, ., getEntry, (, i, )]
[upperDifference]
[i]
[trustRegionCenterOffset, ., getEntry, (, i, )]
[trustRegionCenterOffset]
[i]
[slbd]
[(, upperDifference, ., getEntry, (, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, ), ), /, tmp]
[(, upperDifference, ., getEntry, (, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, ), )]
[upperDifference, ., getEntry, (, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, )]
[upperDifference, ., getEntry, (, i, )]
[upperDifference]
[i]
[trustRegionCenterOffset, ., getEntry, (, i, )]
[trustRegionCenterOffset]
[i]
[tmp]
[ilbd]
[i, +, 1]
[i]
[1]
[subd, *, tmp, <, lowerDifference, ., getEntry, (, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, )]
[subd, *, tmp]
[subd]
[tmp]
[lowerDifference, ., getEntry, (, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, )]
[lowerDifference, ., getEntry, (, i, )]
[lowerDifference]
[i]
[trustRegionCenterOffset, ., getEntry, (, i, )]
[trustRegionCenterOffset]
[i]
[subd]
[Math, ., max, (, sumin, ,, (, lowerDifference, ., getEntry, (, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, ), ), /, tmp, )]
[Math]
[sumin]
[(, lowerDifference, ., getEntry, (, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, ), ), /, tmp]
[(, lowerDifference, ., getEntry, (, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, ), )]
[lowerDifference, ., getEntry, (, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, )]
[lowerDifference, ., getEntry, (, i, )]
[lowerDifference]
[i]
[trustRegionCenterOffset, ., getEntry, (, i, )]
[trustRegionCenterOffset]
[i]
[tmp]
[iubd]
[-, i, -, 1]
[-, i]
[i]
[1]
[step]
[slbd]
[ilbd]
[Double, ., NaN]
[Double]
[k, ==, knew]
[k]
[knew]
[dderiv, -, ONE]
[dderiv]
[ONE]
[vlag]
[slbd, *, (, dderiv, -, slbd, *, diff, )]
[slbd]
[(, dderiv, -, slbd, *, diff, )]
[dderiv, -, slbd, *, diff]
[dderiv]
[slbd, *, diff]
[slbd]
[diff]
[subd, *, (, dderiv, -, subd, *, diff, )]
[subd]
[(, dderiv, -, subd, *, diff, )]
[dderiv, -, subd, *, diff]
[dderiv]
[subd, *, diff]
[subd]
[diff]
[Math, ., abs, (, d1, ), >, Math, ., abs, (, vlag, )]
[Math, ., abs, (, d1, )]
[Math]
[d1]
[Math, ., abs, (, vlag, )]
[Math]
[vlag]
[step]
[subd]
[vlag]
[d1]
[isbd]
[iubd]
[HALF, *, dderiv]
[HALF]
[dderiv]
[d2, -, diff, *, slbd]
[d2]
[diff, *, slbd]
[diff]
[slbd]
[d2, -, diff, *, subd]
[d2]
[diff, *, subd]
[diff]
[subd]
[d3, *, d4, <, ZERO]
[d3, *, d4]
[d3]
[d4]
[ZERO]
[d2, *, d2, /, diff]
[d2, *, d2]
[d2]
[d2]
[diff]
[Math, ., abs, (, d5, ), >, Math, ., abs, (, vlag, )]
[Math, ., abs, (, d5, )]
[Math]
[d5]
[Math, ., abs, (, vlag, )]
[Math]
[vlag]
[step]
[d2, /, diff]
[d2]
[diff]
[vlag]
[d5]
[isbd]
[0]
[vlag]
[slbd, *, (, ONE, -, slbd, )]
[slbd]
[(, ONE, -, slbd, )]
[ONE, -, slbd]
[ONE]
[slbd]
[subd, *, (, ONE, -, subd, )]
[subd]
[(, ONE, -, subd, )]
[ONE, -, subd]
[ONE]
[subd]
[Math, ., abs, (, tmp, ), >, Math, ., abs, (, vlag, )]
[Math, ., abs, (, tmp, )]
[Math]
[tmp]
[Math, ., abs, (, vlag, )]
[Math]
[vlag]
[step]
[subd]
[vlag]
[tmp]
[isbd]
[iubd]
[subd, >, HALF, &&, Math, ., abs, (, vlag, ), <, ONE_OVER_FOUR]
[subd, >, HALF]
[subd]
[HALF]
[Math, ., abs, (, vlag, ), <, ONE_OVER_FOUR]
[Math, ., abs, (, vlag, )]
[Math]
[vlag]
[ONE_OVER_FOUR]
[step]
[HALF]
[vlag]
[ONE_OVER_FOUR]
[isbd]
[0]
[vlag]
[dderiv]
[step, *, (, ONE, -, step, ), *, distsq]
[step, *, (, ONE, -, step, )]
[step]
[(, ONE, -, step, )]
[ONE, -, step]
[ONE]
[step]
[distsq]
[vlag, *, vlag, *, (, vlag, *, vlag, +, ha, *, tmp, *, tmp, )]
[vlag, *, vlag]
[vlag]
[vlag]
[(, vlag, *, vlag, +, ha, *, tmp, *, tmp, )]
[vlag, *, vlag, +, ha, *, tmp, *, tmp]
[vlag, *, vlag]
[vlag]
[vlag]
[ha, *, tmp, *, tmp]
[ha, *, tmp]
[ha]
[tmp]
[tmp]
[predsq, >, presav]
[predsq]
[presav]
[presav]
[predsq]
[ksav]
[k]
[stpsav]
[step]
[ibdsav]
[isbd]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[trustRegionCenterOffset, ., getEntry, (, i, ), +, stpsav, *, (, interpolationPoints, ., getEntry, (, ksav, ,, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, ), )]
[trustRegionCenterOffset, ., getEntry, (, i, )]
[trustRegionCenterOffset]
[i]
[stpsav, *, (, interpolationPoints, ., getEntry, (, ksav, ,, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, ), )]
[stpsav]
[(, interpolationPoints, ., getEntry, (, ksav, ,, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, ), )]
[interpolationPoints, ., getEntry, (, ksav, ,, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, )]
[interpolationPoints, ., getEntry, (, ksav, ,, i, )]
[interpolationPoints]
[ksav]
[i]
[trustRegionCenterOffset, ., getEntry, (, i, )]
[trustRegionCenterOffset]
[i]
[newPoint, ., setEntry, (, i, ,, Math, ., max, (, lowerDifference, ., getEntry, (, i, ), ,, Math, ., min, (, upperDifference, ., getEntry, (, i, ), ,, tmp, ), ), )]
[newPoint]
[i]
[Math, ., max, (, lowerDifference, ., getEntry, (, i, ), ,, Math, ., min, (, upperDifference, ., getEntry, (, i, ), ,, tmp, ), )]
[Math]
[lowerDifference, ., getEntry, (, i, )]
[lowerDifference]
[i]
[Math, ., min, (, upperDifference, ., getEntry, (, i, ), ,, tmp, )]
[Math]
[upperDifference, ., getEntry, (, i, )]
[upperDifference]
[i]
[tmp]
[ibdsav, <, 0]
[ibdsav]
[0]
[newPoint, ., setEntry, (, -, ibdsav, -, 1, ,, lowerDifference, ., getEntry, (, -, ibdsav, -, 1, ), )]
[newPoint]
[-, ibdsav, -, 1]
[-, ibdsav]
[ibdsav]
[1]
[lowerDifference, ., getEntry, (, -, ibdsav, -, 1, )]
[lowerDifference]
[-, ibdsav, -, 1]
[-, ibdsav]
[ibdsav]
[1]
[ibdsav, >, 0]
[ibdsav]
[0]
[newPoint, ., setEntry, (, ibdsav, -, 1, ,, upperDifference, ., getEntry, (, ibdsav, -, 1, ), )]
[newPoint]
[ibdsav, -, 1]
[ibdsav]
[1]
[upperDifference, ., getEntry, (, ibdsav, -, 1, )]
[upperDifference]
[ibdsav, -, 1]
[ibdsav]
[1]
[adelt, +, adelt]
[adelt]
[adelt]
[0]
[Double, ., NaN]
[Double]
[ZERO]
[true]
[ZERO]
[ZERO]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[glag, ., getEntry, (, i, )]
[glag]
[i]
[work1, ., setEntry, (, i, ,, ZERO, )]
[work1]
[i]
[ZERO]
[Math, ., min, (, trustRegionCenterOffset, ., getEntry, (, i, ), -, lowerDifference, ., getEntry, (, i, ), ,, glagValue, ), >, ZERO, ||, Math, ., max, (, trustRegionCenterOffset, ., getEntry, (, i, ), -, upperDifference, ., getEntry, (, i, ), ,, glagValue, ), <, ZERO]
[Math, ., min, (, trustRegionCenterOffset, ., getEntry, (, i, ), -, lowerDifference, ., getEntry, (, i, ), ,, glagValue, ), >, ZERO]
[Math, ., min, (, trustRegionCenterOffset, ., getEntry, (, i, ), -, lowerDifference, ., getEntry, (, i, ), ,, glagValue, )]
[Math]
[trustRegionCenterOffset, ., getEntry, (, i, ), -, lowerDifference, ., getEntry, (, i, )]
[trustRegionCenterOffset, ., getEntry, (, i, )]
[trustRegionCenterOffset]
[i]
[lowerDifference, ., getEntry, (, i, )]
[lowerDifference]
[i]
[glagValue]
[ZERO]
[Math, ., max, (, trustRegionCenterOffset, ., getEntry, (, i, ), -, upperDifference, ., getEntry, (, i, ), ,, glagValue, ), <, ZERO]
[Math, ., max, (, trustRegionCenterOffset, ., getEntry, (, i, ), -, upperDifference, ., getEntry, (, i, ), ,, glagValue, )]
[Math]
[trustRegionCenterOffset, ., getEntry, (, i, ), -, upperDifference, ., getEntry, (, i, )]
[trustRegionCenterOffset, ., getEntry, (, i, )]
[trustRegionCenterOffset]
[i]
[upperDifference, ., getEntry, (, i, )]
[upperDifference]
[i]
[glagValue]
[ZERO]
[work1, ., setEntry, (, i, ,, bigstp, )]
[work1]
[i]
[bigstp]
[ggfree]
[glagValue, *, glagValue]
[glagValue]
[glagValue]
[ggfree, ==, ZERO]
[ggfree]
[ZERO]
[new, double, [, ], {, alpha, ,, ZERO, }]
[{, alpha, ,, ZERO, }]
[alpha]
[ZERO]
[adelt, *, adelt, -, wfixsq]
[adelt, *, adelt]
[adelt]
[adelt]
[wfixsq]
[tmp1, >, ZERO]
[tmp1]
[ZERO]
[step]
[Math, ., sqrt, (, tmp1, /, ggfree, )]
[Math]
[tmp1, /, ggfree]
[tmp1]
[ggfree]
[ggfree]
[ZERO]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[work1, ., getEntry, (, i, ), ==, bigstp]
[work1, ., getEntry, (, i, )]
[work1]
[i]
[bigstp]
[trustRegionCenterOffset, ., getEntry, (, i, ), -, step, *, glag, ., getEntry, (, i, )]
[trustRegionCenterOffset, ., getEntry, (, i, )]
[trustRegionCenterOffset]
[i]
[step, *, glag, ., getEntry, (, i, )]
[step]
[glag, ., getEntry, (, i, )]
[glag]
[i]
[tmp2, <=, lowerDifference, ., getEntry, (, i, )]
[tmp2]
[lowerDifference, ., getEntry, (, i, )]
[lowerDifference]
[i]
[work1, ., setEntry, (, i, ,, lowerDifference, ., getEntry, (, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, ), )]
[work1]
[i]
[lowerDifference, ., getEntry, (, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, )]
[lowerDifference, ., getEntry, (, i, )]
[lowerDifference]
[i]
[trustRegionCenterOffset, ., getEntry, (, i, )]
[trustRegionCenterOffset]
[i]
[work1, ., getEntry, (, i, )]
[work1]
[i]
[wfixsq]
[d1, *, d1]
[d1]
[d1]
[tmp2, >=, upperDifference, ., getEntry, (, i, )]
[tmp2]
[upperDifference, ., getEntry, (, i, )]
[upperDifference]
[i]
[work1, ., setEntry, (, i, ,, upperDifference, ., getEntry, (, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, ), )]
[work1]
[i]
[upperDifference, ., getEntry, (, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, )]
[upperDifference, ., getEntry, (, i, )]
[upperDifference]
[i]
[trustRegionCenterOffset, ., getEntry, (, i, )]
[trustRegionCenterOffset]
[i]
[work1, ., getEntry, (, i, )]
[work1]
[i]
[wfixsq]
[d1, *, d1]
[d1]
[d1]
[glag, ., getEntry, (, i, )]
[glag]
[i]
[ggfree]
[d1, *, d1]
[d1]
[d1]
[ZERO]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[glag, ., getEntry, (, i, )]
[glag]
[i]
[work1, ., getEntry, (, i, ), ==, bigstp]
[work1, ., getEntry, (, i, )]
[work1]
[i]
[bigstp]
[work1, ., setEntry, (, i, ,, -, step, *, glagValue, )]
[work1]
[i]
[-, step, *, glagValue]
[-, step]
[step]
[glagValue]
[Math, ., min, (, upperDifference, ., getEntry, (, i, ), ,, trustRegionCenterOffset, ., getEntry, (, i, ), +, work1, ., getEntry, (, i, ), )]
[Math]
[upperDifference, ., getEntry, (, i, )]
[upperDifference]
[i]
[trustRegionCenterOffset, ., getEntry, (, i, ), +, work1, ., getEntry, (, i, )]
[trustRegionCenterOffset, ., getEntry, (, i, )]
[trustRegionCenterOffset]
[i]
[work1, ., getEntry, (, i, )]
[work1]
[i]
[alternativeNewPoint, ., setEntry, (, i, ,, Math, ., max, (, lowerDifference, ., getEntry, (, i, ), ,, min, ), )]
[alternativeNewPoint]
[i]
[Math, ., max, (, lowerDifference, ., getEntry, (, i, ), ,, min, )]
[Math]
[lowerDifference, ., getEntry, (, i, )]
[lowerDifference]
[i]
[min]
[work1, ., getEntry, (, i, ), ==, ZERO]
[work1, ., getEntry, (, i, )]
[work1]
[i]
[ZERO]
[alternativeNewPoint, ., setEntry, (, i, ,, trustRegionCenterOffset, ., getEntry, (, i, ), )]
[alternativeNewPoint]
[i]
[trustRegionCenterOffset, ., getEntry, (, i, )]
[trustRegionCenterOffset]
[i]
[glagValue, >, ZERO]
[glagValue]
[ZERO]
[alternativeNewPoint, ., setEntry, (, i, ,, lowerDifference, ., getEntry, (, i, ), )]
[alternativeNewPoint]
[i]
[lowerDifference, ., getEntry, (, i, )]
[lowerDifference]
[i]
[alternativeNewPoint, ., setEntry, (, i, ,, upperDifference, ., getEntry, (, i, ), )]
[alternativeNewPoint]
[i]
[upperDifference, ., getEntry, (, i, )]
[upperDifference]
[i]
[gw]
[glagValue, *, work1, ., getEntry, (, i, )]
[glagValue]
[work1, ., getEntry, (, i, )]
[work1]
[i]
[ZERO]
[0]
[k, <, npt]
[k]
[npt]
[k, ++]
[k]
[ZERO]
[0]
[j, <, n]
[j]
[n]
[j, ++]
[j]
[tmp]
[interpolationPoints, ., getEntry, (, k, ,, j, ), *, work1, ., getEntry, (, j, )]
[interpolationPoints, ., getEntry, (, k, ,, j, )]
[interpolationPoints]
[k]
[j]
[work1, ., getEntry, (, j, )]
[work1]
[j]
[curv]
[hcol, ., getEntry, (, k, ), *, tmp, *, tmp]
[hcol, ., getEntry, (, k, ), *, tmp]
[hcol, ., getEntry, (, k, )]
[hcol]
[k]
[tmp]
[tmp]
[iflag, ==, 1]
[iflag]
[1]
[curv]
[-, curv]
[curv]
[curv, >, -, gw, &&, curv, <, -, gw, *, (, ONE, +, Math, ., sqrt, (, TWO, ), )]
[curv, >, -, gw]
[curv]
[-, gw]
[gw]
[curv, <, -, gw, *, (, ONE, +, Math, ., sqrt, (, TWO, ), )]
[curv]
[-, gw, *, (, ONE, +, Math, ., sqrt, (, TWO, ), )]
[-, gw]
[gw]
[(, ONE, +, Math, ., sqrt, (, TWO, ), )]
[ONE, +, Math, ., sqrt, (, TWO, )]
[ONE]
[Math, ., sqrt, (, TWO, )]
[Math]
[TWO]
[-, gw, /, curv]
[-, gw]
[gw]
[curv]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[trustRegionCenterOffset, ., getEntry, (, i, ), +, scale, *, work1, ., getEntry, (, i, )]
[trustRegionCenterOffset, ., getEntry, (, i, )]
[trustRegionCenterOffset]
[i]
[scale, *, work1, ., getEntry, (, i, )]
[scale]
[work1, ., getEntry, (, i, )]
[work1]
[i]
[alternativeNewPoint, ., setEntry, (, i, ,, Math, ., max, (, lowerDifference, ., getEntry, (, i, ), ,, Math, ., min, (, upperDifference, ., getEntry, (, i, ), ,, tmp, ), ), )]
[alternativeNewPoint]
[i]
[Math, ., max, (, lowerDifference, ., getEntry, (, i, ), ,, Math, ., min, (, upperDifference, ., getEntry, (, i, ), ,, tmp, ), )]
[Math]
[lowerDifference, ., getEntry, (, i, )]
[lowerDifference]
[i]
[Math, ., min, (, upperDifference, ., getEntry, (, i, ), ,, tmp, )]
[Math]
[upperDifference, ., getEntry, (, i, )]
[upperDifference]
[i]
[tmp]
[HALF, *, gw, *, scale]
[HALF, *, gw]
[HALF]
[gw]
[scale]
[cauchy]
[d1, *, d1]
[d1]
[d1]
[gw, +, HALF, *, curv]
[gw]
[HALF, *, curv]
[HALF]
[curv]
[cauchy]
[d1, *, d1]
[d1]
[d1]
[iflag, ==, 0]
[iflag]
[0]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[glag, ., setEntry, (, i, ,, -, glag, ., getEntry, (, i, ), )]
[glag]
[i]
[-, glag, ., getEntry, (, i, )]
[glag, ., getEntry, (, i, )]
[glag]
[i]
[work2, ., setEntry, (, i, ,, alternativeNewPoint, ., getEntry, (, i, ), )]
[work2]
[i]
[alternativeNewPoint, ., getEntry, (, i, )]
[alternativeNewPoint]
[i]
[csave]
[cauchy]
[iflag]
[1]
[csave, >, cauchy]
[csave]
[cauchy]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[alternativeNewPoint, ., setEntry, (, i, ,, work2, ., getEntry, (, i, ), )]
[alternativeNewPoint]
[i]
[work2, ., getEntry, (, i, )]
[work2]
[i]
[cauchy]
[csave]
[new, double, [, ], {, alpha, ,, cauchy, }]
[{, alpha, ,, cauchy, }]
[alpha]
[cauchy]
[printMethod, (, )]
[currentBest, ., getDimension, (, )]
[currentBest]
[numberOfInterpolationPoints]
[bMatrix, ., getRowDimension, (, )]
[bMatrix]
[initialTrustRegionRadius, *, initialTrustRegionRadius]
[initialTrustRegionRadius]
[initialTrustRegionRadius]
[1d, /, rhosq]
[1d]
[rhosq]
[n, +, 1]
[n]
[1]
[0]
[j, <, n]
[j]
[n]
[j, ++]
[j]
[originShift, ., setEntry, (, j, ,, currentBest, ., getEntry, (, j, ), )]
[originShift]
[j]
[currentBest, ., getEntry, (, j, )]
[currentBest]
[j]
[0]
[k, <, npt]
[k]
[npt]
[k, ++]
[k]
[interpolationPoints, ., setEntry, (, k, ,, j, ,, ZERO, )]
[interpolationPoints]
[k]
[j]
[ZERO]
[0]
[i, <, ndim]
[i]
[ndim]
[i, ++]
[i]
[bMatrix, ., setEntry, (, i, ,, j, ,, ZERO, )]
[bMatrix]
[i]
[j]
[ZERO]
[0]
[n, *, np, /, 2]
[n, *, np]
[n]
[np]
[2]
[i, <, max]
[i]
[max]
[i, ++]
[i]
[modelSecondDerivativesValues, ., setEntry, (, i, ,, ZERO, )]
[modelSecondDerivativesValues]
[i]
[ZERO]
[0]
[k, <, npt]
[k]
[npt]
[k, ++]
[k]
[modelSecondDerivativesParameters, ., setEntry, (, k, ,, ZERO, )]
[modelSecondDerivativesParameters]
[k]
[ZERO]
[0]
[npt, -, np]
[npt]
[np]
[j, <, max]
[j]
[max]
[j, ++]
[j]
[zMatrix, ., setEntry, (, k, ,, j, ,, ZERO, )]
[zMatrix]
[k]
[j]
[ZERO]
[0]
[0]
[Double, ., NaN]
[Double]
[getEvaluations, (, )]
[nfm, -, n]
[nfm]
[n]
[nfm, -, 1]
[nfm]
[1]
[nfx, -, 1]
[nfx]
[1]
[0]
[0]
[nfm, <=, 2, *, n]
[nfm]
[2, *, n]
[2]
[n]
[nfm, >=, 1, &&, nfm, <=, n]
[nfm, >=, 1]
[nfm]
[1]
[nfm, <=, n]
[nfm]
[n]
[stepa]
[initialTrustRegionRadius]
[upperDifference, ., getEntry, (, nfmm, ), ==, ZERO]
[upperDifference, ., getEntry, (, nfmm, )]
[upperDifference]
[nfmm]
[ZERO]
[stepa]
[-, stepa]
[stepa]
[interpolationPoints, ., setEntry, (, nfm, ,, nfmm, ,, stepa, )]
[interpolationPoints]
[nfm]
[nfmm]
[stepa]
[nfm, >, n]
[nfm]
[n]
[stepa]
[interpolationPoints, ., getEntry, (, nfx, ,, nfxm, )]
[interpolationPoints]
[nfx]
[nfxm]
[stepb]
[-, initialTrustRegionRadius]
[initialTrustRegionRadius]
[lowerDifference, ., getEntry, (, nfxm, ), ==, ZERO]
[lowerDifference, ., getEntry, (, nfxm, )]
[lowerDifference]
[nfxm]
[ZERO]
[stepb]
[Math, ., min, (, TWO, *, initialTrustRegionRadius, ,, upperDifference, ., getEntry, (, nfxm, ), )]
[Math]
[TWO, *, initialTrustRegionRadius]
[TWO]
[initialTrustRegionRadius]
[upperDifference, ., getEntry, (, nfxm, )]
[upperDifference]
[nfxm]
[upperDifference, ., getEntry, (, nfxm, ), ==, ZERO]
[upperDifference, ., getEntry, (, nfxm, )]
[upperDifference]
[nfxm]
[ZERO]
[stepb]
[Math, ., max, (, -, TWO, *, initialTrustRegionRadius, ,, lowerDifference, ., getEntry, (, nfxm, ), )]
[Math]
[-, TWO, *, initialTrustRegionRadius]
[-, TWO]
[TWO]
[initialTrustRegionRadius]
[lowerDifference, ., getEntry, (, nfxm, )]
[lowerDifference]
[nfxm]
[interpolationPoints, ., setEntry, (, nfm, ,, nfxm, ,, stepb, )]
[interpolationPoints]
[nfm]
[nfxm]
[stepb]
[(, nfm, -, np, ), /, n]
[(, nfm, -, np, )]
[nfm, -, np]
[nfm]
[np]
[n]
[jpt]
[nfm, -, tmp1, *, n, -, n]
[nfm, -, tmp1, *, n]
[nfm]
[tmp1, *, n]
[tmp1]
[n]
[n]
[ipt]
[jpt, +, tmp1]
[jpt]
[tmp1]
[ipt, >, n]
[ipt]
[n]
[jpt]
[jpt]
[ipt, -, n]
[ipt]
[n]
[ipt]
[tmp2]
[ipt, -, 1]
[ipt]
[1]
[jpt, -, 1]
[jpt]
[1]
[interpolationPoints, ., setEntry, (, nfm, ,, iptMinus1, ,, interpolationPoints, ., getEntry, (, ipt, ,, iptMinus1, ), )]
[interpolationPoints]
[nfm]
[iptMinus1]
[interpolationPoints, ., getEntry, (, ipt, ,, iptMinus1, )]
[interpolationPoints]
[ipt]
[iptMinus1]
[interpolationPoints, ., setEntry, (, nfm, ,, jptMinus1, ,, interpolationPoints, ., getEntry, (, jpt, ,, jptMinus1, ), )]
[interpolationPoints]
[nfm]
[jptMinus1]
[interpolationPoints, ., getEntry, (, jpt, ,, jptMinus1, )]
[interpolationPoints]
[jpt]
[jptMinus1]
[0]
[j, <, n]
[j]
[n]
[j, ++]
[j]
[currentBest, ., setEntry, (, j, ,, Math, ., min, (, Math, ., max, (, lowerBound, [, j, ], ,, originShift, ., getEntry, (, j, ), +, interpolationPoints, ., getEntry, (, nfm, ,, j, ), ), ,, upperBound, [, j, ], ), )]
[currentBest]
[j]
[Math, ., min, (, Math, ., max, (, lowerBound, [, j, ], ,, originShift, ., getEntry, (, j, ), +, interpolationPoints, ., getEntry, (, nfm, ,, j, ), ), ,, upperBound, [, j, ], )]
[Math]
[Math, ., max, (, lowerBound, [, j, ], ,, originShift, ., getEntry, (, j, ), +, interpolationPoints, ., getEntry, (, nfm, ,, j, ), )]
[Math]
[lowerBound, [, j, ]]
[lowerBound]
[j]
[originShift, ., getEntry, (, j, ), +, interpolationPoints, ., getEntry, (, nfm, ,, j, )]
[originShift, ., getEntry, (, j, )]
[originShift]
[j]
[interpolationPoints, ., getEntry, (, nfm, ,, j, )]
[interpolationPoints]
[nfm]
[j]
[upperBound, [, j, ]]
[upperBound]
[j]
[interpolationPoints, ., getEntry, (, nfm, ,, j, ), ==, lowerDifference, ., getEntry, (, j, )]
[interpolationPoints, ., getEntry, (, nfm, ,, j, )]
[interpolationPoints]
[nfm]
[j]
[lowerDifference, ., getEntry, (, j, )]
[lowerDifference]
[j]
[currentBest, ., setEntry, (, j, ,, lowerBound, [, j, ], )]
[currentBest]
[j]
[lowerBound, [, j, ]]
[lowerBound]
[j]
[interpolationPoints, ., getEntry, (, nfm, ,, j, ), ==, upperDifference, ., getEntry, (, j, )]
[interpolationPoints, ., getEntry, (, nfm, ,, j, )]
[interpolationPoints]
[nfm]
[j]
[upperDifference, ., getEntry, (, j, )]
[upperDifference]
[j]
[currentBest, ., setEntry, (, j, ,, upperBound, [, j, ], )]
[currentBest]
[j]
[upperBound, [, j, ]]
[upperBound]
[j]
[computeObjectiveValue, (, currentBest, ., toArray, (, ), )]
[currentBest, ., toArray, (, )]
[currentBest]
[isMinimize, ?, objectiveValue, :, -, objectiveValue]
[isMinimize]
[objectiveValue]
[-, objectiveValue]
[objectiveValue]
[getEvaluations, (, )]
[fAtInterpolationPoints, ., setEntry, (, nfm, ,, f, )]
[fAtInterpolationPoints]
[nfm]
[f]
[numEval, ==, 1]
[numEval]
[1]
[fbeg]
[f]
[trustRegionCenterInterpolationPointIndex]
[0]
[f, <, fAtInterpolationPoints, ., getEntry, (, trustRegionCenterInterpolationPointIndex, )]
[f]
[fAtInterpolationPoints, ., getEntry, (, trustRegionCenterInterpolationPointIndex, )]
[fAtInterpolationPoints]
[trustRegionCenterInterpolationPointIndex]
[trustRegionCenterInterpolationPointIndex]
[nfm]
[numEval, <=, 2, *, n, +, 1]
[numEval]
[2, *, n, +, 1]
[2, *, n]
[2]
[n]
[1]
[numEval, >=, 2, &&, numEval, <=, n, +, 1]
[numEval, >=, 2]
[numEval]
[2]
[numEval, <=, n, +, 1]
[numEval]
[n, +, 1]
[n]
[1]
[gradientAtTrustRegionCenter, ., setEntry, (, nfmm, ,, (, f, -, fbeg, ), /, stepa, )]
[gradientAtTrustRegionCenter]
[nfmm]
[(, f, -, fbeg, ), /, stepa]
[(, f, -, fbeg, )]
[f, -, fbeg]
[f]
[fbeg]
[stepa]
[npt, <, numEval, +, n]
[npt]
[numEval, +, n]
[numEval]
[n]
[ONE, /, stepa]
[ONE]
[stepa]
[bMatrix, ., setEntry, (, 0, ,, nfmm, ,, -, oneOverStepA, )]
[bMatrix]
[0]
[nfmm]
[-, oneOverStepA]
[oneOverStepA]
[bMatrix, ., setEntry, (, nfm, ,, nfmm, ,, oneOverStepA, )]
[bMatrix]
[nfm]
[nfmm]
[oneOverStepA]
[bMatrix, ., setEntry, (, npt, +, nfmm, ,, nfmm, ,, -, HALF, *, rhosq, )]
[bMatrix]
[npt, +, nfmm]
[npt]
[nfmm]
[nfmm]
[-, HALF, *, rhosq]
[-, HALF]
[HALF]
[rhosq]
[numEval, >=, n, +, 2]
[numEval]
[n, +, 2]
[n]
[2]
[nfx, *, (, nfx, +, 1, ), /, 2, -, 1]
[nfx, *, (, nfx, +, 1, ), /, 2]
[nfx, *, (, nfx, +, 1, )]
[nfx]
[(, nfx, +, 1, )]
[nfx, +, 1]
[nfx]
[1]
[2]
[1]
[(, f, -, fbeg, ), /, stepb]
[(, f, -, fbeg, )]
[f, -, fbeg]
[f]
[fbeg]
[stepb]
[stepb, -, stepa]
[stepb]
[stepa]
[modelSecondDerivativesValues, ., setEntry, (, ih, ,, TWO, *, (, tmp, -, gradientAtTrustRegionCenter, ., getEntry, (, nfxm, ), ), /, diff, )]
[modelSecondDerivativesValues]
[ih]
[TWO, *, (, tmp, -, gradientAtTrustRegionCenter, ., getEntry, (, nfxm, ), ), /, diff]
[TWO, *, (, tmp, -, gradientAtTrustRegionCenter, ., getEntry, (, nfxm, ), )]
[TWO]
[(, tmp, -, gradientAtTrustRegionCenter, ., getEntry, (, nfxm, ), )]
[tmp, -, gradientAtTrustRegionCenter, ., getEntry, (, nfxm, )]
[tmp]
[gradientAtTrustRegionCenter, ., getEntry, (, nfxm, )]
[gradientAtTrustRegionCenter]
[nfxm]
[diff]
[gradientAtTrustRegionCenter, ., setEntry, (, nfxm, ,, (, gradientAtTrustRegionCenter, ., getEntry, (, nfxm, ), *, stepb, -, tmp, *, stepa, ), /, diff, )]
[gradientAtTrustRegionCenter]
[nfxm]
[(, gradientAtTrustRegionCenter, ., getEntry, (, nfxm, ), *, stepb, -, tmp, *, stepa, ), /, diff]
[(, gradientAtTrustRegionCenter, ., getEntry, (, nfxm, ), *, stepb, -, tmp, *, stepa, )]
[gradientAtTrustRegionCenter, ., getEntry, (, nfxm, ), *, stepb, -, tmp, *, stepa]
[gradientAtTrustRegionCenter, ., getEntry, (, nfxm, ), *, stepb]
[gradientAtTrustRegionCenter, ., getEntry, (, nfxm, )]
[gradientAtTrustRegionCenter]
[nfxm]
[stepb]
[tmp, *, stepa]
[tmp]
[stepa]
[diff]
[stepa, *, stepb, <, ZERO, &&, f, <, fAtInterpolationPoints, ., getEntry, (, nfm, -, n, )]
[stepa, *, stepb, <, ZERO]
[stepa, *, stepb]
[stepa]
[stepb]
[ZERO]
[f, <, fAtInterpolationPoints, ., getEntry, (, nfm, -, n, )]
[f]
[fAtInterpolationPoints, ., getEntry, (, nfm, -, n, )]
[fAtInterpolationPoints]
[nfm, -, n]
[nfm]
[n]
[fAtInterpolationPoints, ., setEntry, (, nfm, ,, fAtInterpolationPoints, ., getEntry, (, nfm, -, n, ), )]
[fAtInterpolationPoints]
[nfm]
[fAtInterpolationPoints, ., getEntry, (, nfm, -, n, )]
[fAtInterpolationPoints]
[nfm, -, n]
[nfm]
[n]
[fAtInterpolationPoints, ., setEntry, (, nfm, -, n, ,, f, )]
[fAtInterpolationPoints]
[nfm, -, n]
[nfm]
[n]
[f]
[trustRegionCenterInterpolationPointIndex, ==, nfm]
[trustRegionCenterInterpolationPointIndex]
[nfm]
[trustRegionCenterInterpolationPointIndex]
[nfm, -, n]
[nfm]
[n]
[interpolationPoints, ., setEntry, (, nfm, -, n, ,, nfxm, ,, stepb, )]
[interpolationPoints]
[nfm, -, n]
[nfm]
[n]
[nfxm]
[stepb]
[interpolationPoints, ., setEntry, (, nfm, ,, nfxm, ,, stepa, )]
[interpolationPoints]
[nfm]
[nfxm]
[stepa]
[bMatrix, ., setEntry, (, 0, ,, nfxm, ,, -, (, stepa, +, stepb, ), /, (, stepa, *, stepb, ), )]
[bMatrix]
[0]
[nfxm]
[-, (, stepa, +, stepb, ), /, (, stepa, *, stepb, )]
[-, (, stepa, +, stepb, )]
[(, stepa, +, stepb, )]
[stepa, +, stepb]
[stepa]
[stepb]
[(, stepa, *, stepb, )]
[stepa, *, stepb]
[stepa]
[stepb]
[bMatrix, ., setEntry, (, nfm, ,, nfxm, ,, -, HALF, /, interpolationPoints, ., getEntry, (, nfm, -, n, ,, nfxm, ), )]
[bMatrix]
[nfm]
[nfxm]
[-, HALF, /, interpolationPoints, ., getEntry, (, nfm, -, n, ,, nfxm, )]
[-, HALF]
[HALF]
[interpolationPoints, ., getEntry, (, nfm, -, n, ,, nfxm, )]
[interpolationPoints]
[nfm, -, n]
[nfm]
[n]
[nfxm]
[bMatrix, ., setEntry, (, nfm, -, n, ,, nfxm, ,, -, bMatrix, ., getEntry, (, 0, ,, nfxm, ), -, bMatrix, ., getEntry, (, nfm, ,, nfxm, ), )]
[bMatrix]
[nfm, -, n]
[nfm]
[n]
[nfxm]
[-, bMatrix, ., getEntry, (, 0, ,, nfxm, ), -, bMatrix, ., getEntry, (, nfm, ,, nfxm, )]
[-, bMatrix, ., getEntry, (, 0, ,, nfxm, )]
[bMatrix, ., getEntry, (, 0, ,, nfxm, )]
[bMatrix]
[0]
[nfxm]
[bMatrix, ., getEntry, (, nfm, ,, nfxm, )]
[bMatrix]
[nfm]
[nfxm]
[zMatrix, ., setEntry, (, 0, ,, nfxm, ,, Math, ., sqrt, (, TWO, ), /, (, stepa, *, stepb, ), )]
[zMatrix]
[0]
[nfxm]
[Math, ., sqrt, (, TWO, ), /, (, stepa, *, stepb, )]
[Math, ., sqrt, (, TWO, )]
[Math]
[TWO]
[(, stepa, *, stepb, )]
[stepa, *, stepb]
[stepa]
[stepb]
[zMatrix, ., setEntry, (, nfm, ,, nfxm, ,, Math, ., sqrt, (, HALF, ), /, rhosq, )]
[zMatrix]
[nfm]
[nfxm]
[Math, ., sqrt, (, HALF, ), /, rhosq]
[Math, ., sqrt, (, HALF, )]
[Math]
[HALF]
[rhosq]
[zMatrix, ., setEntry, (, nfm, -, n, ,, nfxm, ,, -, zMatrix, ., getEntry, (, 0, ,, nfxm, ), -, zMatrix, ., getEntry, (, nfm, ,, nfxm, ), )]
[zMatrix]
[nfm, -, n]
[nfm]
[n]
[nfxm]
[-, zMatrix, ., getEntry, (, 0, ,, nfxm, ), -, zMatrix, ., getEntry, (, nfm, ,, nfxm, )]
[-, zMatrix, ., getEntry, (, 0, ,, nfxm, )]
[zMatrix, ., getEntry, (, 0, ,, nfxm, )]
[zMatrix]
[0]
[nfxm]
[zMatrix, ., getEntry, (, nfm, ,, nfxm, )]
[zMatrix]
[nfm]
[nfxm]
[zMatrix, ., setEntry, (, 0, ,, nfxm, ,, recip, )]
[zMatrix]
[0]
[nfxm]
[recip]
[zMatrix, ., setEntry, (, nfm, ,, nfxm, ,, recip, )]
[zMatrix]
[nfm]
[nfxm]
[recip]
[zMatrix, ., setEntry, (, ipt, ,, nfxm, ,, -, recip, )]
[zMatrix]
[ipt]
[nfxm]
[-, recip]
[recip]
[zMatrix, ., setEntry, (, jpt, ,, nfxm, ,, -, recip, )]
[zMatrix]
[jpt]
[nfxm]
[-, recip]
[recip]
[ipt, *, (, ipt, -, 1, ), /, 2, +, jpt, -, 1]
[ipt, *, (, ipt, -, 1, ), /, 2, +, jpt]
[ipt, *, (, ipt, -, 1, ), /, 2]
[ipt, *, (, ipt, -, 1, )]
[ipt]
[(, ipt, -, 1, )]
[ipt, -, 1]
[ipt]
[1]
[2]
[jpt]
[1]
[interpolationPoints, ., getEntry, (, nfm, ,, ipt, -, 1, ), *, interpolationPoints, ., getEntry, (, nfm, ,, jpt, -, 1, )]
[interpolationPoints, ., getEntry, (, nfm, ,, ipt, -, 1, )]
[interpolationPoints]
[nfm]
[ipt, -, 1]
[ipt]
[1]
[interpolationPoints, ., getEntry, (, nfm, ,, jpt, -, 1, )]
[interpolationPoints]
[nfm]
[jpt, -, 1]
[jpt]
[1]
[modelSecondDerivativesValues, ., setEntry, (, ih, ,, (, fbeg, -, fAtInterpolationPoints, ., getEntry, (, ipt, ), -, fAtInterpolationPoints, ., getEntry, (, jpt, ), +, f, ), /, tmp, )]
[modelSecondDerivativesValues]
[ih]
[(, fbeg, -, fAtInterpolationPoints, ., getEntry, (, ipt, ), -, fAtInterpolationPoints, ., getEntry, (, jpt, ), +, f, ), /, tmp]
[(, fbeg, -, fAtInterpolationPoints, ., getEntry, (, ipt, ), -, fAtInterpolationPoints, ., getEntry, (, jpt, ), +, f, )]
[fbeg, -, fAtInterpolationPoints, ., getEntry, (, ipt, ), -, fAtInterpolationPoints, ., getEntry, (, jpt, ), +, f]
[fbeg, -, fAtInterpolationPoints, ., getEntry, (, ipt, ), -, fAtInterpolationPoints, ., getEntry, (, jpt, )]
[fbeg, -, fAtInterpolationPoints, ., getEntry, (, ipt, )]
[fbeg]
[fAtInterpolationPoints, ., getEntry, (, ipt, )]
[fAtInterpolationPoints]
[ipt]
[fAtInterpolationPoints, ., getEntry, (, jpt, )]
[fAtInterpolationPoints]
[jpt]
[f]
[tmp]
[getEvaluations, (, ), <, npt]
[getEvaluations, (, )]
[npt]
[printMethod, (, )]
[currentBest, ., getDimension, (, )]
[currentBest]
[numberOfInterpolationPoints]
[Double, ., NaN]
[Double]
[Double, ., NaN]
[Double]
[0]
[-, 1]
[1]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[0]
[iterc]
[0]
[nact]
[0]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[xbdi, ., setEntry, (, i, ,, ZERO, )]
[xbdi]
[i]
[ZERO]
[trustRegionCenterOffset, ., getEntry, (, i, ), <=, lowerDifference, ., getEntry, (, i, )]
[trustRegionCenterOffset, ., getEntry, (, i, )]
[trustRegionCenterOffset]
[i]
[lowerDifference, ., getEntry, (, i, )]
[lowerDifference]
[i]
[gradientAtTrustRegionCenter, ., getEntry, (, i, ), >=, ZERO]
[gradientAtTrustRegionCenter, ., getEntry, (, i, )]
[gradientAtTrustRegionCenter]
[i]
[ZERO]
[xbdi, ., setEntry, (, i, ,, MINUS_ONE, )]
[xbdi]
[i]
[MINUS_ONE]
[trustRegionCenterOffset, ., getEntry, (, i, ), >=, upperDifference, ., getEntry, (, i, ), &&, gradientAtTrustRegionCenter, ., getEntry, (, i, ), <=, ZERO]
[trustRegionCenterOffset, ., getEntry, (, i, ), >=, upperDifference, ., getEntry, (, i, )]
[trustRegionCenterOffset, ., getEntry, (, i, )]
[trustRegionCenterOffset]
[i]
[upperDifference, ., getEntry, (, i, )]
[upperDifference]
[i]
[gradientAtTrustRegionCenter, ., getEntry, (, i, ), <=, ZERO]
[gradientAtTrustRegionCenter, ., getEntry, (, i, )]
[gradientAtTrustRegionCenter]
[i]
[ZERO]
[xbdi, ., setEntry, (, i, ,, ONE, )]
[xbdi]
[i]
[ONE]
[xbdi, ., getEntry, (, i, ), !=, ZERO]
[xbdi, ., getEntry, (, i, )]
[xbdi]
[i]
[ZERO]
[++, nact]
[nact]
[trialStepPoint, ., setEntry, (, i, ,, ZERO, )]
[trialStepPoint]
[i]
[ZERO]
[gnew, ., setEntry, (, i, ,, gradientAtTrustRegionCenter, ., getEntry, (, i, ), )]
[gnew]
[i]
[gradientAtTrustRegionCenter, ., getEntry, (, i, )]
[gradientAtTrustRegionCenter]
[i]
[delsq]
[delta, *, delta]
[delta]
[delta]
[qred]
[ZERO]
[crvmin]
[MINUS_ONE]
[20]
[state]
[20]
[printState, (, 20, )]
[20]
[beta]
[ZERO]
[30]
[printState, (, 30, )]
[30]
[stepsq]
[ZERO]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[xbdi, ., getEntry, (, i, ), !=, ZERO]
[xbdi, ., getEntry, (, i, )]
[xbdi]
[i]
[ZERO]
[s, ., setEntry, (, i, ,, ZERO, )]
[s]
[i]
[ZERO]
[beta, ==, ZERO]
[beta]
[ZERO]
[s, ., setEntry, (, i, ,, -, gnew, ., getEntry, (, i, ), )]
[s]
[i]
[-, gnew, ., getEntry, (, i, )]
[gnew, ., getEntry, (, i, )]
[gnew]
[i]
[s, ., setEntry, (, i, ,, beta, *, s, ., getEntry, (, i, ), -, gnew, ., getEntry, (, i, ), )]
[s]
[i]
[beta, *, s, ., getEntry, (, i, ), -, gnew, ., getEntry, (, i, )]
[beta, *, s, ., getEntry, (, i, )]
[beta]
[s, ., getEntry, (, i, )]
[s]
[i]
[gnew, ., getEntry, (, i, )]
[gnew]
[i]
[s, ., getEntry, (, i, )]
[s]
[i]
[stepsq]
[d1, *, d1]
[d1]
[d1]
[stepsq, ==, ZERO]
[stepsq]
[ZERO]
[state]
[190]
[beta, ==, ZERO]
[beta]
[ZERO]
[gredsq]
[stepsq]
[itermax]
[iterc, +, n, -, nact]
[iterc, +, n]
[iterc]
[n]
[nact]
[gredsq, *, delsq, <=, qred, *, 1e-4, *, qred]
[gredsq, *, delsq]
[gredsq]
[delsq]
[qred, *, 1e-4, *, qred]
[qred, *, 1e-4]
[qred]
[1e-4]
[qred]
[state]
[190]
[state]
[210]
[50]
[printState, (, 50, )]
[50]
[resid]
[delsq]
[ds]
[ZERO]
[shs]
[ZERO]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[xbdi, ., getEntry, (, i, ), ==, ZERO]
[xbdi, ., getEntry, (, i, )]
[xbdi]
[i]
[ZERO]
[trialStepPoint, ., getEntry, (, i, )]
[trialStepPoint]
[i]
[resid]
[d1, *, d1]
[d1]
[d1]
[ds]
[s, ., getEntry, (, i, ), *, trialStepPoint, ., getEntry, (, i, )]
[s, ., getEntry, (, i, )]
[s]
[i]
[trialStepPoint, ., getEntry, (, i, )]
[trialStepPoint]
[i]
[shs]
[s, ., getEntry, (, i, ), *, hs, ., getEntry, (, i, )]
[s, ., getEntry, (, i, )]
[s]
[i]
[hs, ., getEntry, (, i, )]
[hs]
[i]
[resid, <=, ZERO]
[resid]
[ZERO]
[state]
[90]
[temp]
[Math, ., sqrt, (, stepsq, *, resid, +, ds, *, ds, )]
[Math]
[stepsq, *, resid, +, ds, *, ds]
[stepsq, *, resid]
[stepsq]
[resid]
[ds, *, ds]
[ds]
[ds]
[ds, <, ZERO]
[ds]
[ZERO]
[blen]
[(, temp, -, ds, ), /, stepsq]
[(, temp, -, ds, )]
[temp, -, ds]
[temp]
[ds]
[stepsq]
[blen]
[resid, /, (, temp, +, ds, )]
[resid]
[(, temp, +, ds, )]
[temp, +, ds]
[temp]
[ds]
[stplen]
[blen]
[shs, >, ZERO]
[shs]
[ZERO]
[stplen]
[Math, ., min, (, blen, ,, gredsq, /, shs, )]
[Math]
[blen]
[gredsq, /, shs]
[gredsq]
[shs]
[iact]
[-, 1]
[1]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[s, ., getEntry, (, i, ), !=, ZERO]
[s, ., getEntry, (, i, )]
[s]
[i]
[ZERO]
[xsum]
[trustRegionCenterOffset, ., getEntry, (, i, ), +, trialStepPoint, ., getEntry, (, i, )]
[trustRegionCenterOffset, ., getEntry, (, i, )]
[trustRegionCenterOffset]
[i]
[trialStepPoint, ., getEntry, (, i, )]
[trialStepPoint]
[i]
[s, ., getEntry, (, i, ), >, ZERO]
[s, ., getEntry, (, i, )]
[s]
[i]
[ZERO]
[temp]
[(, upperDifference, ., getEntry, (, i, ), -, xsum, ), /, s, ., getEntry, (, i, )]
[(, upperDifference, ., getEntry, (, i, ), -, xsum, )]
[upperDifference, ., getEntry, (, i, ), -, xsum]
[upperDifference, ., getEntry, (, i, )]
[upperDifference]
[i]
[xsum]
[s, ., getEntry, (, i, )]
[s]
[i]
[temp]
[(, lowerDifference, ., getEntry, (, i, ), -, xsum, ), /, s, ., getEntry, (, i, )]
[(, lowerDifference, ., getEntry, (, i, ), -, xsum, )]
[lowerDifference, ., getEntry, (, i, ), -, xsum]
[lowerDifference, ., getEntry, (, i, )]
[lowerDifference]
[i]
[xsum]
[s, ., getEntry, (, i, )]
[s]
[i]
[temp, <, stplen]
[temp]
[stplen]
[stplen]
[temp]
[iact]
[i]
[sdec]
[ZERO]
[stplen, >, ZERO]
[stplen]
[ZERO]
[++, iterc]
[iterc]
[temp]
[shs, /, stepsq]
[shs]
[stepsq]
[iact, ==, -, 1, &&, temp, >, ZERO]
[iact, ==, -, 1]
[iact]
[-, 1]
[1]
[temp, >, ZERO]
[temp]
[ZERO]
[crvmin]
[Math, ., min, (, crvmin, ,, temp, )]
[Math]
[crvmin]
[temp]
[crvmin, ==, MINUS_ONE]
[crvmin]
[MINUS_ONE]
[crvmin]
[temp]
[ggsav]
[gredsq]
[gredsq]
[ZERO]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[gnew, ., setEntry, (, i, ,, gnew, ., getEntry, (, i, ), +, stplen, *, hs, ., getEntry, (, i, ), )]
[gnew]
[i]
[gnew, ., getEntry, (, i, ), +, stplen, *, hs, ., getEntry, (, i, )]
[gnew, ., getEntry, (, i, )]
[gnew]
[i]
[stplen, *, hs, ., getEntry, (, i, )]
[stplen]
[hs, ., getEntry, (, i, )]
[hs]
[i]
[xbdi, ., getEntry, (, i, ), ==, ZERO]
[xbdi, ., getEntry, (, i, )]
[xbdi]
[i]
[ZERO]
[gnew, ., getEntry, (, i, )]
[gnew]
[i]
[gredsq]
[d1, *, d1]
[d1]
[d1]
[trialStepPoint, ., setEntry, (, i, ,, trialStepPoint, ., getEntry, (, i, ), +, stplen, *, s, ., getEntry, (, i, ), )]
[trialStepPoint]
[i]
[trialStepPoint, ., getEntry, (, i, ), +, stplen, *, s, ., getEntry, (, i, )]
[trialStepPoint, ., getEntry, (, i, )]
[trialStepPoint]
[i]
[stplen, *, s, ., getEntry, (, i, )]
[stplen]
[s, ., getEntry, (, i, )]
[s]
[i]
[stplen, *, (, ggsav, -, HALF, *, stplen, *, shs, )]
[stplen]
[(, ggsav, -, HALF, *, stplen, *, shs, )]
[ggsav, -, HALF, *, stplen, *, shs]
[ggsav]
[HALF, *, stplen, *, shs]
[HALF, *, stplen]
[HALF]
[stplen]
[shs]
[sdec]
[Math, ., max, (, d1, ,, ZERO, )]
[Math]
[d1]
[ZERO]
[qred]
[sdec]
[iact, >=, 0]
[iact]
[0]
[++, nact]
[nact]
[xbdi, ., setEntry, (, iact, ,, ONE, )]
[xbdi]
[iact]
[ONE]
[s, ., getEntry, (, iact, ), <, ZERO]
[s, ., getEntry, (, iact, )]
[s]
[iact]
[ZERO]
[xbdi, ., setEntry, (, iact, ,, MINUS_ONE, )]
[xbdi]
[iact]
[MINUS_ONE]
[trialStepPoint, ., getEntry, (, iact, )]
[trialStepPoint]
[iact]
[delsq]
[d1, *, d1]
[d1]
[d1]
[delsq, <=, ZERO]
[delsq]
[ZERO]
[state]
[190]
[state]
[20]
[stplen, <, blen]
[stplen]
[blen]
[iterc, ==, itermax]
[iterc]
[itermax]
[state]
[190]
[sdec, <=, qred, *, .01]
[sdec]
[qred, *, .01]
[qred]
[.01]
[state]
[190]
[beta]
[gredsq, /, ggsav]
[gredsq]
[ggsav]
[state]
[30]
[90]
[printState, (, 90, )]
[90]
[crvmin]
[ZERO]
[100]
[printState, (, 100, )]
[100]
[nact, >=, n, -, 1]
[nact]
[n, -, 1]
[n]
[1]
[state]
[190]
[dredsq]
[ZERO]
[dredg]
[ZERO]
[gredsq]
[ZERO]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[xbdi, ., getEntry, (, i, ), ==, ZERO]
[xbdi, ., getEntry, (, i, )]
[xbdi]
[i]
[ZERO]
[trialStepPoint, ., getEntry, (, i, )]
[trialStepPoint]
[i]
[dredsq]
[d1, *, d1]
[d1]
[d1]
[dredg]
[trialStepPoint, ., getEntry, (, i, ), *, gnew, ., getEntry, (, i, )]
[trialStepPoint, ., getEntry, (, i, )]
[trialStepPoint]
[i]
[gnew, ., getEntry, (, i, )]
[gnew]
[i]
[d1]
[gnew, ., getEntry, (, i, )]
[gnew]
[i]
[gredsq]
[d1, *, d1]
[d1]
[d1]
[s, ., setEntry, (, i, ,, trialStepPoint, ., getEntry, (, i, ), )]
[s]
[i]
[trialStepPoint, ., getEntry, (, i, )]
[trialStepPoint]
[i]
[s, ., setEntry, (, i, ,, ZERO, )]
[s]
[i]
[ZERO]
[itcsav]
[iterc]
[state]
[210]
[120]
[printState, (, 120, )]
[120]
[++, iterc]
[iterc]
[temp]
[gredsq, *, dredsq, -, dredg, *, dredg]
[gredsq, *, dredsq]
[gredsq]
[dredsq]
[dredg, *, dredg]
[dredg]
[dredg]
[temp, <=, qred, *, 1e-4, *, qred]
[temp]
[qred, *, 1e-4, *, qred]
[qred, *, 1e-4]
[qred]
[1e-4]
[qred]
[state]
[190]
[temp]
[Math, ., sqrt, (, temp, )]
[Math]
[temp]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[xbdi, ., getEntry, (, i, ), ==, ZERO]
[xbdi, ., getEntry, (, i, )]
[xbdi]
[i]
[ZERO]
[s, ., setEntry, (, i, ,, (, dredg, *, trialStepPoint, ., getEntry, (, i, ), -, dredsq, *, gnew, ., getEntry, (, i, ), ), /, temp, )]
[s]
[i]
[(, dredg, *, trialStepPoint, ., getEntry, (, i, ), -, dredsq, *, gnew, ., getEntry, (, i, ), ), /, temp]
[(, dredg, *, trialStepPoint, ., getEntry, (, i, ), -, dredsq, *, gnew, ., getEntry, (, i, ), )]
[dredg, *, trialStepPoint, ., getEntry, (, i, ), -, dredsq, *, gnew, ., getEntry, (, i, )]
[dredg, *, trialStepPoint, ., getEntry, (, i, )]
[dredg]
[trialStepPoint, ., getEntry, (, i, )]
[trialStepPoint]
[i]
[dredsq, *, gnew, ., getEntry, (, i, )]
[dredsq]
[gnew, ., getEntry, (, i, )]
[gnew]
[i]
[temp]
[s, ., setEntry, (, i, ,, ZERO, )]
[s]
[i]
[ZERO]
[sredg]
[-, temp]
[temp]
[angbd]
[ONE]
[iact]
[-, 1]
[1]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[xbdi, ., getEntry, (, i, ), ==, ZERO]
[xbdi, ., getEntry, (, i, )]
[xbdi]
[i]
[ZERO]
[tempa]
[trustRegionCenterOffset, ., getEntry, (, i, ), +, trialStepPoint, ., getEntry, (, i, ), -, lowerDifference, ., getEntry, (, i, )]
[trustRegionCenterOffset, ., getEntry, (, i, ), +, trialStepPoint, ., getEntry, (, i, )]
[trustRegionCenterOffset, ., getEntry, (, i, )]
[trustRegionCenterOffset]
[i]
[trialStepPoint, ., getEntry, (, i, )]
[trialStepPoint]
[i]
[lowerDifference, ., getEntry, (, i, )]
[lowerDifference]
[i]
[tempb]
[upperDifference, ., getEntry, (, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, ), -, trialStepPoint, ., getEntry, (, i, )]
[upperDifference, ., getEntry, (, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, )]
[upperDifference, ., getEntry, (, i, )]
[upperDifference]
[i]
[trustRegionCenterOffset, ., getEntry, (, i, )]
[trustRegionCenterOffset]
[i]
[trialStepPoint, ., getEntry, (, i, )]
[trialStepPoint]
[i]
[tempa, <=, ZERO]
[tempa]
[ZERO]
[++, nact]
[nact]
[xbdi, ., setEntry, (, i, ,, MINUS_ONE, )]
[xbdi]
[i]
[MINUS_ONE]
[state]
[100]
[tempb, <=, ZERO]
[tempb]
[ZERO]
[++, nact]
[nact]
[xbdi, ., setEntry, (, i, ,, ONE, )]
[xbdi]
[i]
[ONE]
[state]
[100]
[trialStepPoint, ., getEntry, (, i, )]
[trialStepPoint]
[i]
[s, ., getEntry, (, i, )]
[s]
[i]
[ssq]
[d1, *, d1, +, d2, *, d2]
[d1, *, d1]
[d1]
[d1]
[d2, *, d2]
[d2]
[d2]
[d1]
[trustRegionCenterOffset, ., getEntry, (, i, ), -, lowerDifference, ., getEntry, (, i, )]
[trustRegionCenterOffset, ., getEntry, (, i, )]
[trustRegionCenterOffset]
[i]
[lowerDifference, ., getEntry, (, i, )]
[lowerDifference]
[i]
[temp]
[ssq, -, d1, *, d1]
[ssq]
[d1, *, d1]
[d1]
[d1]
[temp, >, ZERO]
[temp]
[ZERO]
[temp]
[Math, ., sqrt, (, temp, ), -, s, ., getEntry, (, i, )]
[Math, ., sqrt, (, temp, )]
[Math]
[temp]
[s, ., getEntry, (, i, )]
[s]
[i]
[angbd, *, temp, >, tempa]
[angbd, *, temp]
[angbd]
[temp]
[tempa]
[angbd]
[tempa, /, temp]
[tempa]
[temp]
[iact]
[i]
[xsav]
[MINUS_ONE]
[d1]
[upperDifference, ., getEntry, (, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, )]
[upperDifference, ., getEntry, (, i, )]
[upperDifference]
[i]
[trustRegionCenterOffset, ., getEntry, (, i, )]
[trustRegionCenterOffset]
[i]
[temp]
[ssq, -, d1, *, d1]
[ssq]
[d1, *, d1]
[d1]
[d1]
[temp, >, ZERO]
[temp]
[ZERO]
[temp]
[Math, ., sqrt, (, temp, ), +, s, ., getEntry, (, i, )]
[Math, ., sqrt, (, temp, )]
[Math]
[temp]
[s, ., getEntry, (, i, )]
[s]
[i]
[angbd, *, temp, >, tempb]
[angbd, *, temp]
[angbd]
[temp]
[tempb]
[angbd]
[tempb, /, temp]
[tempb]
[temp]
[iact]
[i]
[xsav]
[ONE]
[state]
[210]
[150]
[printState, (, 150, )]
[150]
[shs]
[ZERO]
[dhs]
[ZERO]
[dhd]
[ZERO]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[xbdi, ., getEntry, (, i, ), ==, ZERO]
[xbdi, ., getEntry, (, i, )]
[xbdi]
[i]
[ZERO]
[shs]
[s, ., getEntry, (, i, ), *, hs, ., getEntry, (, i, )]
[s, ., getEntry, (, i, )]
[s]
[i]
[hs, ., getEntry, (, i, )]
[hs]
[i]
[dhs]
[trialStepPoint, ., getEntry, (, i, ), *, hs, ., getEntry, (, i, )]
[trialStepPoint, ., getEntry, (, i, )]
[trialStepPoint]
[i]
[hs, ., getEntry, (, i, )]
[hs]
[i]
[dhd]
[trialStepPoint, ., getEntry, (, i, ), *, hred, ., getEntry, (, i, )]
[trialStepPoint, ., getEntry, (, i, )]
[trialStepPoint]
[i]
[hred, ., getEntry, (, i, )]
[hred]
[i]
[redmax]
[ZERO]
[isav]
[-, 1]
[1]
[redsav]
[ZERO]
[iu]
[(, int, ), (, angbd, *, 17., +, 3.1, )]
[(, angbd, *, 17., +, 3.1, )]
[angbd, *, 17., +, 3.1]
[angbd, *, 17.]
[angbd]
[17.]
[3.1]
[0]
[i, <, iu]
[i]
[iu]
[i, ++]
[i]
[angt]
[angbd, *, i, /, iu]
[angbd, *, i]
[angbd]
[i]
[iu]
[sth]
[(, angt, +, angt, ), /, (, ONE, +, angt, *, angt, )]
[(, angt, +, angt, )]
[angt, +, angt]
[angt]
[angt]
[(, ONE, +, angt, *, angt, )]
[ONE, +, angt, *, angt]
[ONE]
[angt, *, angt]
[angt]
[angt]
[temp]
[shs, +, angt, *, (, angt, *, dhd, -, dhs, -, dhs, )]
[shs]
[angt, *, (, angt, *, dhd, -, dhs, -, dhs, )]
[angt]
[(, angt, *, dhd, -, dhs, -, dhs, )]
[angt, *, dhd, -, dhs, -, dhs]
[angt, *, dhd, -, dhs]
[angt, *, dhd]
[angt]
[dhd]
[dhs]
[dhs]
[rednew]
[sth, *, (, angt, *, dredg, -, sredg, -, HALF, *, sth, *, temp, )]
[sth]
[(, angt, *, dredg, -, sredg, -, HALF, *, sth, *, temp, )]
[angt, *, dredg, -, sredg, -, HALF, *, sth, *, temp]
[angt, *, dredg, -, sredg]
[angt, *, dredg]
[angt]
[dredg]
[sredg]
[HALF, *, sth, *, temp]
[HALF, *, sth]
[HALF]
[sth]
[temp]
[rednew, >, redmax]
[rednew]
[redmax]
[redmax]
[rednew]
[isav]
[i]
[rdprev]
[redsav]
[i, ==, isav, +, 1]
[i]
[isav, +, 1]
[isav]
[1]
[rdnext]
[rednew]
[redsav]
[rednew]
[isav, <, 0]
[isav]
[0]
[state]
[190]
[isav, <, iu]
[isav]
[iu]
[temp]
[(, rdnext, -, rdprev, ), /, (, redmax, +, redmax, -, rdprev, -, rdnext, )]
[(, rdnext, -, rdprev, )]
[rdnext, -, rdprev]
[rdnext]
[rdprev]
[(, redmax, +, redmax, -, rdprev, -, rdnext, )]
[redmax, +, redmax, -, rdprev, -, rdnext]
[redmax, +, redmax, -, rdprev]
[redmax, +, redmax]
[redmax]
[redmax]
[rdprev]
[rdnext]
[angt]
[angbd, *, (, isav, +, HALF, *, temp, ), /, iu]
[angbd, *, (, isav, +, HALF, *, temp, )]
[angbd]
[(, isav, +, HALF, *, temp, )]
[isav, +, HALF, *, temp]
[isav]
[HALF, *, temp]
[HALF]
[temp]
[iu]
[cth]
[(, ONE, -, angt, *, angt, ), /, (, ONE, +, angt, *, angt, )]
[(, ONE, -, angt, *, angt, )]
[ONE, -, angt, *, angt]
[ONE]
[angt, *, angt]
[angt]
[angt]
[(, ONE, +, angt, *, angt, )]
[ONE, +, angt, *, angt]
[ONE]
[angt, *, angt]
[angt]
[angt]
[sth]
[(, angt, +, angt, ), /, (, ONE, +, angt, *, angt, )]
[(, angt, +, angt, )]
[angt, +, angt]
[angt]
[angt]
[(, ONE, +, angt, *, angt, )]
[ONE, +, angt, *, angt]
[ONE]
[angt, *, angt]
[angt]
[angt]
[temp]
[shs, +, angt, *, (, angt, *, dhd, -, dhs, -, dhs, )]
[shs]
[angt, *, (, angt, *, dhd, -, dhs, -, dhs, )]
[angt]
[(, angt, *, dhd, -, dhs, -, dhs, )]
[angt, *, dhd, -, dhs, -, dhs]
[angt, *, dhd, -, dhs]
[angt, *, dhd]
[angt]
[dhd]
[dhs]
[dhs]
[sdec]
[sth, *, (, angt, *, dredg, -, sredg, -, HALF, *, sth, *, temp, )]
[sth]
[(, angt, *, dredg, -, sredg, -, HALF, *, sth, *, temp, )]
[angt, *, dredg, -, sredg, -, HALF, *, sth, *, temp]
[angt, *, dredg, -, sredg]
[angt, *, dredg]
[angt]
[dredg]
[sredg]
[HALF, *, sth, *, temp]
[HALF, *, sth]
[HALF]
[sth]
[temp]
[sdec, <=, ZERO]
[sdec]
[ZERO]
[state]
[190]
[dredg]
[ZERO]
[gredsq]
[ZERO]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[gnew, ., setEntry, (, i, ,, gnew, ., getEntry, (, i, ), +, (, cth, -, ONE, ), *, hred, ., getEntry, (, i, ), +, sth, *, hs, ., getEntry, (, i, ), )]
[gnew]
[i]
[gnew, ., getEntry, (, i, ), +, (, cth, -, ONE, ), *, hred, ., getEntry, (, i, ), +, sth, *, hs, ., getEntry, (, i, )]
[gnew, ., getEntry, (, i, ), +, (, cth, -, ONE, ), *, hred, ., getEntry, (, i, )]
[gnew, ., getEntry, (, i, )]
[gnew]
[i]
[(, cth, -, ONE, ), *, hred, ., getEntry, (, i, )]
[(, cth, -, ONE, )]
[cth, -, ONE]
[cth]
[ONE]
[hred, ., getEntry, (, i, )]
[hred]
[i]
[sth, *, hs, ., getEntry, (, i, )]
[sth]
[hs, ., getEntry, (, i, )]
[hs]
[i]
[xbdi, ., getEntry, (, i, ), ==, ZERO]
[xbdi, ., getEntry, (, i, )]
[xbdi]
[i]
[ZERO]
[trialStepPoint, ., setEntry, (, i, ,, cth, *, trialStepPoint, ., getEntry, (, i, ), +, sth, *, s, ., getEntry, (, i, ), )]
[trialStepPoint]
[i]
[cth, *, trialStepPoint, ., getEntry, (, i, ), +, sth, *, s, ., getEntry, (, i, )]
[cth, *, trialStepPoint, ., getEntry, (, i, )]
[cth]
[trialStepPoint, ., getEntry, (, i, )]
[trialStepPoint]
[i]
[sth, *, s, ., getEntry, (, i, )]
[sth]
[s, ., getEntry, (, i, )]
[s]
[i]
[dredg]
[trialStepPoint, ., getEntry, (, i, ), *, gnew, ., getEntry, (, i, )]
[trialStepPoint, ., getEntry, (, i, )]
[trialStepPoint]
[i]
[gnew, ., getEntry, (, i, )]
[gnew]
[i]
[gnew, ., getEntry, (, i, )]
[gnew]
[i]
[gredsq]
[d1, *, d1]
[d1]
[d1]
[hred, ., setEntry, (, i, ,, cth, *, hred, ., getEntry, (, i, ), +, sth, *, hs, ., getEntry, (, i, ), )]
[hred]
[i]
[cth, *, hred, ., getEntry, (, i, ), +, sth, *, hs, ., getEntry, (, i, )]
[cth, *, hred, ., getEntry, (, i, )]
[cth]
[hred, ., getEntry, (, i, )]
[hred]
[i]
[sth, *, hs, ., getEntry, (, i, )]
[sth]
[hs, ., getEntry, (, i, )]
[hs]
[i]
[qred]
[sdec]
[iact, >=, 0, &&, isav, ==, iu]
[iact, >=, 0]
[iact]
[0]
[isav, ==, iu]
[isav]
[iu]
[++, nact]
[nact]
[xbdi, ., setEntry, (, iact, ,, xsav, )]
[xbdi]
[iact]
[xsav]
[state]
[100]
[sdec, >, qred, *, .01]
[sdec]
[qred, *, .01]
[qred]
[.01]
[state]
[120]
[190]
[printState, (, 190, )]
[190]
[dsq]
[ZERO]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[Math, ., min, (, trustRegionCenterOffset, ., getEntry, (, i, ), +, trialStepPoint, ., getEntry, (, i, ), ,, upperDifference, ., getEntry, (, i, ), )]
[Math]
[trustRegionCenterOffset, ., getEntry, (, i, ), +, trialStepPoint, ., getEntry, (, i, )]
[trustRegionCenterOffset, ., getEntry, (, i, )]
[trustRegionCenterOffset]
[i]
[trialStepPoint, ., getEntry, (, i, )]
[trialStepPoint]
[i]
[upperDifference, ., getEntry, (, i, )]
[upperDifference]
[i]
[newPoint, ., setEntry, (, i, ,, Math, ., max, (, min, ,, lowerDifference, ., getEntry, (, i, ), ), )]
[newPoint]
[i]
[Math, ., max, (, min, ,, lowerDifference, ., getEntry, (, i, ), )]
[Math]
[min]
[lowerDifference, ., getEntry, (, i, )]
[lowerDifference]
[i]
[xbdi, ., getEntry, (, i, ), ==, MINUS_ONE]
[xbdi, ., getEntry, (, i, )]
[xbdi]
[i]
[MINUS_ONE]
[newPoint, ., setEntry, (, i, ,, lowerDifference, ., getEntry, (, i, ), )]
[newPoint]
[i]
[lowerDifference, ., getEntry, (, i, )]
[lowerDifference]
[i]
[xbdi, ., getEntry, (, i, ), ==, ONE]
[xbdi, ., getEntry, (, i, )]
[xbdi]
[i]
[ONE]
[newPoint, ., setEntry, (, i, ,, upperDifference, ., getEntry, (, i, ), )]
[newPoint]
[i]
[upperDifference, ., getEntry, (, i, )]
[upperDifference]
[i]
[trialStepPoint, ., setEntry, (, i, ,, newPoint, ., getEntry, (, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, ), )]
[trialStepPoint]
[i]
[newPoint, ., getEntry, (, i, ), -, trustRegionCenterOffset, ., getEntry, (, i, )]
[newPoint, ., getEntry, (, i, )]
[newPoint]
[i]
[trustRegionCenterOffset, ., getEntry, (, i, )]
[trustRegionCenterOffset]
[i]
[trialStepPoint, ., getEntry, (, i, )]
[trialStepPoint]
[i]
[dsq]
[d1, *, d1]
[d1]
[d1]
[new, double, [, ], {, dsq, ,, crvmin, }]
[{, dsq, ,, crvmin, }]
[dsq]
[crvmin]
[210]
[printState, (, 210, )]
[210]
[0]
[0]
[j, <, n]
[j]
[n]
[j, ++]
[j]
[hs, ., setEntry, (, j, ,, ZERO, )]
[hs]
[j]
[ZERO]
[0]
[i, <=, j]
[i]
[j]
[i, ++]
[i]
[i, <, j]
[i]
[j]
[hs, ., setEntry, (, j, ,, hs, ., getEntry, (, j, ), +, modelSecondDerivativesValues, ., getEntry, (, ih, ), *, s, ., getEntry, (, i, ), )]
[hs]
[j]
[hs, ., getEntry, (, j, ), +, modelSecondDerivativesValues, ., getEntry, (, ih, ), *, s, ., getEntry, (, i, )]
[hs, ., getEntry, (, j, )]
[hs]
[j]
[modelSecondDerivativesValues, ., getEntry, (, ih, ), *, s, ., getEntry, (, i, )]
[modelSecondDerivativesValues, ., getEntry, (, ih, )]
[modelSecondDerivativesValues]
[ih]
[s, ., getEntry, (, i, )]
[s]
[i]
[hs, ., setEntry, (, i, ,, hs, ., getEntry, (, i, ), +, modelSecondDerivativesValues, ., getEntry, (, ih, ), *, s, ., getEntry, (, j, ), )]
[hs]
[i]
[hs, ., getEntry, (, i, ), +, modelSecondDerivativesValues, ., getEntry, (, ih, ), *, s, ., getEntry, (, j, )]
[hs, ., getEntry, (, i, )]
[hs]
[i]
[modelSecondDerivativesValues, ., getEntry, (, ih, ), *, s, ., getEntry, (, j, )]
[modelSecondDerivativesValues, ., getEntry, (, ih, )]
[modelSecondDerivativesValues]
[ih]
[s, ., getEntry, (, j, )]
[s]
[j]
[ih, ++]
[ih]
[interpolationPoints, ., operate, (, s, ), ., ebeMultiply, (, modelSecondDerivativesParameters, )]
[interpolationPoints, ., operate, (, s, )]
[interpolationPoints]
[s]
[modelSecondDerivativesParameters]
[0]
[k, <, npt]
[k]
[npt]
[k, ++]
[k]
[modelSecondDerivativesParameters, ., getEntry, (, k, ), !=, ZERO]
[modelSecondDerivativesParameters, ., getEntry, (, k, )]
[modelSecondDerivativesParameters]
[k]
[ZERO]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[hs, ., setEntry, (, i, ,, hs, ., getEntry, (, i, ), +, tmp, ., getEntry, (, k, ), *, interpolationPoints, ., getEntry, (, k, ,, i, ), )]
[hs]
[i]
[hs, ., getEntry, (, i, ), +, tmp, ., getEntry, (, k, ), *, interpolationPoints, ., getEntry, (, k, ,, i, )]
[hs, ., getEntry, (, i, )]
[hs]
[i]
[tmp, ., getEntry, (, k, ), *, interpolationPoints, ., getEntry, (, k, ,, i, )]
[tmp, ., getEntry, (, k, )]
[tmp]
[k]
[interpolationPoints, ., getEntry, (, k, ,, i, )]
[interpolationPoints]
[k]
[i]
[crvmin, !=, ZERO]
[crvmin]
[ZERO]
[state]
[50]
[iterc, >, itcsav]
[iterc]
[itcsav]
[state]
[150]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[hred, ., setEntry, (, i, ,, hs, ., getEntry, (, i, ), )]
[hred]
[i]
[hs, ., getEntry, (, i, )]
[hs]
[i]
[state]
[120]
[new, MathIllegalStateException, (, LocalizedFormats, ., SIMPLE_MESSAGE, ,, "trsbox", )]
[LocalizedFormats, ., SIMPLE_MESSAGE]
[LocalizedFormats]
["trsbox"]
[printMethod, (, )]
[currentBest, ., getDimension, (, )]
[currentBest]
[numberOfInterpolationPoints]
[npt, -, n, -, 1]
[npt, -, n]
[npt]
[n]
[1]
[new, ArrayRealVector, (, npt, +, n, )]
[npt, +, n]
[npt]
[n]
[ZERO]
[0]
[k, <, npt]
[k]
[npt]
[k, ++]
[k]
[0]
[j, <, nptm]
[j]
[nptm]
[j, ++]
[j]
[ztest]
[Math, ., max, (, ztest, ,, Math, ., abs, (, zMatrix, ., getEntry, (, k, ,, j, ), ), )]
[Math]
[ztest]
[Math, ., abs, (, zMatrix, ., getEntry, (, k, ,, j, ), )]
[Math]
[zMatrix, ., getEntry, (, k, ,, j, )]
[zMatrix]
[k]
[j]
[ztest]
[1e-20]
[1]
[j, <, nptm]
[j]
[nptm]
[j, ++]
[j]
[zMatrix, ., getEntry, (, knew, ,, j, )]
[zMatrix]
[knew]
[j]
[Math, ., abs, (, d1, ), >, ztest]
[Math, ., abs, (, d1, )]
[Math]
[d1]
[ztest]
[zMatrix, ., getEntry, (, knew, ,, 0, )]
[zMatrix]
[knew]
[0]
[zMatrix, ., getEntry, (, knew, ,, j, )]
[zMatrix]
[knew]
[j]
[Math, ., sqrt, (, d2, *, d2, +, d3, *, d3, )]
[Math]
[d2, *, d2, +, d3, *, d3]
[d2, *, d2]
[d2]
[d2]
[d3, *, d3]
[d3]
[d3]
[zMatrix, ., getEntry, (, knew, ,, 0, ), /, d4]
[zMatrix, ., getEntry, (, knew, ,, 0, )]
[zMatrix]
[knew]
[0]
[d4]
[zMatrix, ., getEntry, (, knew, ,, j, ), /, d4]
[zMatrix, ., getEntry, (, knew, ,, j, )]
[zMatrix]
[knew]
[j]
[d4]
[0]
[i, <, npt]
[i]
[npt]
[i, ++]
[i]
[d5, *, zMatrix, ., getEntry, (, i, ,, 0, ), +, d6, *, zMatrix, ., getEntry, (, i, ,, j, )]
[d5, *, zMatrix, ., getEntry, (, i, ,, 0, )]
[d5]
[zMatrix, ., getEntry, (, i, ,, 0, )]
[zMatrix]
[i]
[0]
[d6, *, zMatrix, ., getEntry, (, i, ,, j, )]
[d6]
[zMatrix, ., getEntry, (, i, ,, j, )]
[zMatrix]
[i]
[j]
[zMatrix, ., setEntry, (, i, ,, j, ,, d5, *, zMatrix, ., getEntry, (, i, ,, j, ), -, d6, *, zMatrix, ., getEntry, (, i, ,, 0, ), )]
[zMatrix]
[i]
[j]
[d5, *, zMatrix, ., getEntry, (, i, ,, j, ), -, d6, *, zMatrix, ., getEntry, (, i, ,, 0, )]
[d5, *, zMatrix, ., getEntry, (, i, ,, j, )]
[d5]
[zMatrix, ., getEntry, (, i, ,, j, )]
[zMatrix]
[i]
[j]
[d6, *, zMatrix, ., getEntry, (, i, ,, 0, )]
[d6]
[zMatrix, ., getEntry, (, i, ,, 0, )]
[zMatrix]
[i]
[0]
[zMatrix, ., setEntry, (, i, ,, 0, ,, d7, )]
[zMatrix]
[i]
[0]
[d7]
[zMatrix, ., setEntry, (, knew, ,, j, ,, ZERO, )]
[zMatrix]
[knew]
[j]
[ZERO]
[0]
[i, <, npt]
[i]
[npt]
[i, ++]
[i]
[work, ., setEntry, (, i, ,, zMatrix, ., getEntry, (, knew, ,, 0, ), *, zMatrix, ., getEntry, (, i, ,, 0, ), )]
[work]
[i]
[zMatrix, ., getEntry, (, knew, ,, 0, ), *, zMatrix, ., getEntry, (, i, ,, 0, )]
[zMatrix, ., getEntry, (, knew, ,, 0, )]
[zMatrix]
[knew]
[0]
[zMatrix, ., getEntry, (, i, ,, 0, )]
[zMatrix]
[i]
[0]
[work, ., getEntry, (, knew, )]
[work]
[knew]
[lagrangeValuesAtNewPoint, ., getEntry, (, knew, )]
[lagrangeValuesAtNewPoint]
[knew]
[lagrangeValuesAtNewPoint, ., setEntry, (, knew, ,, lagrangeValuesAtNewPoint, ., getEntry, (, knew, ), -, ONE, )]
[lagrangeValuesAtNewPoint]
[knew]
[lagrangeValuesAtNewPoint, ., getEntry, (, knew, ), -, ONE]
[lagrangeValuesAtNewPoint, ., getEntry, (, knew, )]
[lagrangeValuesAtNewPoint]
[knew]
[ONE]
[Math, ., sqrt, (, denom, )]
[Math]
[denom]
[tau, /, sqrtDenom]
[tau]
[sqrtDenom]
[zMatrix, ., getEntry, (, knew, ,, 0, ), /, sqrtDenom]
[zMatrix, ., getEntry, (, knew, ,, 0, )]
[zMatrix]
[knew]
[0]
[sqrtDenom]
[0]
[i, <, npt]
[i]
[npt]
[i, ++]
[i]
[zMatrix, ., setEntry, (, i, ,, 0, ,, d1, *, zMatrix, ., getEntry, (, i, ,, 0, ), -, d2, *, lagrangeValuesAtNewPoint, ., getEntry, (, i, ), )]
[zMatrix]
[i]
[0]
[d1, *, zMatrix, ., getEntry, (, i, ,, 0, ), -, d2, *, lagrangeValuesAtNewPoint, ., getEntry, (, i, )]
[d1, *, zMatrix, ., getEntry, (, i, ,, 0, )]
[d1]
[zMatrix, ., getEntry, (, i, ,, 0, )]
[zMatrix]
[i]
[0]
[d2, *, lagrangeValuesAtNewPoint, ., getEntry, (, i, )]
[d2]
[lagrangeValuesAtNewPoint, ., getEntry, (, i, )]
[lagrangeValuesAtNewPoint]
[i]
[0]
[j, <, n]
[j]
[n]
[j, ++]
[j]
[npt, +, j]
[npt]
[j]
[work, ., setEntry, (, jp, ,, bMatrix, ., getEntry, (, knew, ,, j, ), )]
[work]
[jp]
[bMatrix, ., getEntry, (, knew, ,, j, )]
[bMatrix]
[knew]
[j]
[(, alpha, *, lagrangeValuesAtNewPoint, ., getEntry, (, jp, ), -, tau, *, work, ., getEntry, (, jp, ), ), /, denom]
[(, alpha, *, lagrangeValuesAtNewPoint, ., getEntry, (, jp, ), -, tau, *, work, ., getEntry, (, jp, ), )]
[alpha, *, lagrangeValuesAtNewPoint, ., getEntry, (, jp, ), -, tau, *, work, ., getEntry, (, jp, )]
[alpha, *, lagrangeValuesAtNewPoint, ., getEntry, (, jp, )]
[alpha]
[lagrangeValuesAtNewPoint, ., getEntry, (, jp, )]
[lagrangeValuesAtNewPoint]
[jp]
[tau, *, work, ., getEntry, (, jp, )]
[tau]
[work, ., getEntry, (, jp, )]
[work]
[jp]
[denom]
[(, -, beta, *, work, ., getEntry, (, jp, ), -, tau, *, lagrangeValuesAtNewPoint, ., getEntry, (, jp, ), ), /, denom]
[(, -, beta, *, work, ., getEntry, (, jp, ), -, tau, *, lagrangeValuesAtNewPoint, ., getEntry, (, jp, ), )]
[-, beta, *, work, ., getEntry, (, jp, ), -, tau, *, lagrangeValuesAtNewPoint, ., getEntry, (, jp, )]
[-, beta, *, work, ., getEntry, (, jp, )]
[-, beta]
[beta]
[work, ., getEntry, (, jp, )]
[work]
[jp]
[tau, *, lagrangeValuesAtNewPoint, ., getEntry, (, jp, )]
[tau]
[lagrangeValuesAtNewPoint, ., getEntry, (, jp, )]
[lagrangeValuesAtNewPoint]
[jp]
[denom]
[0]
[i, <=, jp]
[i]
[jp]
[i, ++]
[i]
[bMatrix, ., setEntry, (, i, ,, j, ,, bMatrix, ., getEntry, (, i, ,, j, ), +, d3, *, lagrangeValuesAtNewPoint, ., getEntry, (, i, ), +, d4, *, work, ., getEntry, (, i, ), )]
[bMatrix]
[i]
[j]
[bMatrix, ., getEntry, (, i, ,, j, ), +, d3, *, lagrangeValuesAtNewPoint, ., getEntry, (, i, ), +, d4, *, work, ., getEntry, (, i, )]
[bMatrix, ., getEntry, (, i, ,, j, ), +, d3, *, lagrangeValuesAtNewPoint, ., getEntry, (, i, )]
[bMatrix, ., getEntry, (, i, ,, j, )]
[bMatrix]
[i]
[j]
[d3, *, lagrangeValuesAtNewPoint, ., getEntry, (, i, )]
[d3]
[lagrangeValuesAtNewPoint, ., getEntry, (, i, )]
[lagrangeValuesAtNewPoint]
[i]
[d4, *, work, ., getEntry, (, i, )]
[d4]
[work, ., getEntry, (, i, )]
[work]
[i]
[i, >=, npt]
[i]
[npt]
[bMatrix, ., setEntry, (, jp, ,, (, i, -, npt, ), ,, bMatrix, ., getEntry, (, i, ,, j, ), )]
[bMatrix]
[jp]
[(, i, -, npt, )]
[i, -, npt]
[i]
[npt]
[bMatrix, ., getEntry, (, i, ,, j, )]
[bMatrix]
[i]
[j]
[printMethod, (, )]
[getStartPoint, (, )]
[init, ., length]
[init]
[dimension, <, MINIMUM_PROBLEM_DIMENSION]
[dimension]
[MINIMUM_PROBLEM_DIMENSION]
[new, NumberIsTooSmallException, (, dimension, ,, MINIMUM_PROBLEM_DIMENSION, ,, true, )]
[dimension]
[MINIMUM_PROBLEM_DIMENSION]
[true]
[{, dimension, +, 2, ,, (, dimension, +, 2, ), *, (, dimension, +, 1, ), /, 2, }]
[dimension, +, 2]
[dimension]
[2]
[(, dimension, +, 2, ), *, (, dimension, +, 1, ), /, 2]
[(, dimension, +, 2, ), *, (, dimension, +, 1, )]
[(, dimension, +, 2, )]
[dimension, +, 2]
[dimension]
[2]
[(, dimension, +, 1, )]
[dimension, +, 1]
[dimension]
[1]
[2]
[numberOfInterpolationPoints, <, nPointsInterval, [, 0, ], ||, numberOfInterpolationPoints, >, nPointsInterval, [, 1, ]]
[numberOfInterpolationPoints, <, nPointsInterval, [, 0, ]]
[numberOfInterpolationPoints]
[nPointsInterval, [, 0, ]]
[nPointsInterval]
[0]
[numberOfInterpolationPoints, >, nPointsInterval, [, 1, ]]
[numberOfInterpolationPoints]
[nPointsInterval, [, 1, ]]
[nPointsInterval]
[1]
[new, OutOfRangeException, (, LocalizedFormats, ., NUMBER_OF_INTERPOLATION_POINTS, ,, numberOfInterpolationPoints, ,, nPointsInterval, [, 0, ], ,, nPointsInterval, [, 1, ], )]
[LocalizedFormats, ., NUMBER_OF_INTERPOLATION_POINTS]
[LocalizedFormats]
[numberOfInterpolationPoints]
[nPointsInterval, [, 0, ]]
[nPointsInterval]
[0]
[nPointsInterval, [, 1, ]]
[nPointsInterval]
[1]
[boundDifference]
[new, double, [, dimension, ]]
[dimension]
[2, *, initialTrustRegionRadius]
[2]
[initialTrustRegionRadius]
[Double, ., POSITIVE_INFINITY]
[Double]
[0]
[i, <, dimension]
[i]
[dimension]
[i, ++]
[i]
[boundDifference, [, i, ]]
[boundDifference]
[i]
[upperBound, [, i, ], -, lowerBound, [, i, ]]
[upperBound, [, i, ]]
[upperBound]
[i]
[lowerBound, [, i, ]]
[lowerBound]
[i]
[minDiff]
[Math, ., min, (, minDiff, ,, boundDifference, [, i, ], )]
[Math]
[minDiff]
[boundDifference, [, i, ]]
[boundDifference]
[i]
[minDiff, <, requiredMinDiff]
[minDiff]
[requiredMinDiff]
[initialTrustRegionRadius]
[minDiff, /, 3.0]
[minDiff]
[3.0]
[bMatrix]
[new, Array2DRowRealMatrix, (, dimension, +, numberOfInterpolationPoints, ,, dimension, )]
[dimension, +, numberOfInterpolationPoints]
[dimension]
[numberOfInterpolationPoints]
[dimension]
[zMatrix]
[new, Array2DRowRealMatrix, (, numberOfInterpolationPoints, ,, numberOfInterpolationPoints, -, dimension, -, 1, )]
[numberOfInterpolationPoints]
[numberOfInterpolationPoints, -, dimension, -, 1]
[numberOfInterpolationPoints, -, dimension]
[numberOfInterpolationPoints]
[dimension]
[1]
[interpolationPoints]
[new, Array2DRowRealMatrix, (, numberOfInterpolationPoints, ,, dimension, )]
[numberOfInterpolationPoints]
[dimension]
[originShift]
[new, ArrayRealVector, (, dimension, )]
[dimension]
[fAtInterpolationPoints]
[new, ArrayRealVector, (, numberOfInterpolationPoints, )]
[numberOfInterpolationPoints]
[trustRegionCenterOffset]
[new, ArrayRealVector, (, dimension, )]
[dimension]
[gradientAtTrustRegionCenter]
[new, ArrayRealVector, (, dimension, )]
[dimension]
[lowerDifference]
[new, ArrayRealVector, (, dimension, )]
[dimension]
[upperDifference]
[new, ArrayRealVector, (, dimension, )]
[dimension]
[modelSecondDerivativesParameters]
[new, ArrayRealVector, (, numberOfInterpolationPoints, )]
[numberOfInterpolationPoints]
[newPoint]
[new, ArrayRealVector, (, dimension, )]
[dimension]
[alternativeNewPoint]
[new, ArrayRealVector, (, dimension, )]
[dimension]
[trialStepPoint]
[new, ArrayRealVector, (, dimension, )]
[dimension]
[lagrangeValuesAtNewPoint]
[new, ArrayRealVector, (, dimension, +, numberOfInterpolationPoints, )]
[dimension, +, numberOfInterpolationPoints]
[dimension]
[numberOfInterpolationPoints]
[modelSecondDerivativesValues]
[new, ArrayRealVector, (, dimension, *, (, dimension, +, 1, ), /, 2, )]
[dimension, *, (, dimension, +, 1, ), /, 2]
[dimension, *, (, dimension, +, 1, )]
[dimension]
[(, dimension, +, 1, )]
[dimension, +, 1]
[dimension]
[1]
[2]
[new, Throwable, (, )]
[t, ., getStackTrace, (, )]
[t]
[elements, [, n, ]]
[elements]
[n]
[e, ., getMethodName, (, ), +, " (at line ", +, e, ., getLineNumber, (, ), +, ")"]
[e, ., getMethodName, (, ), +, " (at line ", +, e, ., getLineNumber, (, )]
[e, ., getMethodName, (, ), +, " (at line "]
[e, ., getMethodName, (, )]
[e]
[" (at line "]
[e, ., getLineNumber, (, )]
[e]
[")"]
[745350979634801853L]
["If this exception is thrown, just remove it from the code"]
[PATH_IS_EXPLORED, +, " ", +, BOBYQAOptimizer, ., caller, (, 3, )]
[PATH_IS_EXPLORED, +, " "]
[PATH_IS_EXPLORED]
[" "]
[BOBYQAOptimizer, ., caller, (, 3, )]
[BOBYQAOptimizer]
[3]
