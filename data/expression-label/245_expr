[new, StateStack, (, )]
[true]
[reset, (, )]
[changed]
[false]
[traverseChildScopes]
[true]
[Lists, ., newArrayList, (, )]
[Lists]
[0]
[states, ., add, (, new, ScopeState, (, ), )]
[states]
[new, ScopeState, (, )]
[states, ., get, (, currentDepth, )]
[states]
[currentDepth]
[currentDepth, ++]
[currentDepth]
[states, ., size, (, ), <=, currentDepth]
[states, ., size, (, )]
[states]
[currentDepth]
[states, ., add, (, new, ScopeState, (, ), )]
[states]
[new, ScopeState, (, )]
[states, ., get, (, currentDepth, ), ., reset, (, )]
[states, ., get, (, currentDepth, )]
[states]
[currentDepth]
[currentDepth, --]
[currentDepth]
[traversalState, ., peek, (, ), ., changed]
[traversalState, ., peek, (, )]
[traversalState]
[true]
[this, ., compiler]
[this]
[compiler]
[this, ., peepholeOptimizations]
[this]
[optimizations]
[this, ., retraverseOnChange]
[this]
[retraverse]
[this]
[compiler]
[new, PeepholeChangeHandler, (, )]
[compiler, ., addChangeHandler, (, handler, )]
[compiler]
[handler]
[beginTraversal, (, )]
[traverse, (, root, )]
[root]
[endTraversal, (, )]
[compiler, ., removeChangeHandler, (, handler, )]
[compiler]
[handler]
[!, shouldVisit, (, node, )]
[shouldVisit, (, node, )]
[node]
[0]
[node, ., getFirstChild, (, )]
[node]
[c, !=, null]
[c]
[null]
[c, ., getNext, (, )]
[c]
[traverse, (, c, )]
[c]
[c]
[next]
[visit, (, node, )]
[node]
[visits, ++]
[visits]
[Preconditions, ., checkState, (, visits, <, 10000, ,, "too many interations", )]
[Preconditions]
[visits, <, 10000]
[visits]
[10000]
["too many interations"]
[shouldRetraverse, (, node, )]
[node]
[exitNode, (, node, )]
[node]
[retraverseOnChange, &&, node, ., getParent, (, ), !=, null, &&, (, node, ., isFunction, (, ), ||, node, ., isScript, (, ), )]
[retraverseOnChange, &&, node, ., getParent, (, ), !=, null]
[retraverseOnChange]
[node, ., getParent, (, ), !=, null]
[node, ., getParent, (, )]
[node]
[null]
[(, node, ., isFunction, (, ), ||, node, ., isScript, (, ), )]
[node, ., isFunction, (, ), ||, node, ., isScript, (, )]
[node, ., isFunction, (, )]
[node]
[node, ., isScript, (, )]
[node]
[traversalState, ., peek, (, )]
[traversalState]
[state, ., changed]
[state]
[state, ., changed]
[state]
[false]
[state, ., traverseChildScopes]
[state]
[false]
[true]
[false]
[node, ., isFunction, (, ), ||, node, ., isScript, (, )]
[node, ., isFunction, (, )]
[node]
[node, ., isScript, (, )]
[node]
[traversalState, ., peek, (, )]
[traversalState]
[!, previous, ., traverseChildScopes]
[previous, ., traverseChildScopes]
[previous]
[false]
[traversalState, ., push, (, )]
[traversalState]
[true]
[node, ., isFunction, (, ), ||, node, ., isScript, (, )]
[node, ., isFunction, (, )]
[node]
[node, ., isScript, (, )]
[node]
[traversalState, ., pop, (, )]
[traversalState]
[n]
[false]
[somethingChanged]
[false]
[peepholeOptimizations]
[optimization, ., optimizeSubtree, (, currentVersionOfNode, )]
[optimization]
[currentVersionOfNode]
[newVersionOfNode, !=, currentVersionOfNode]
[newVersionOfNode]
[currentVersionOfNode]
[somethingChanged]
[true]
[currentVersionOfNode]
[newVersionOfNode]
[currentVersionOfNode, ==, null]
[currentVersionOfNode]
[null]
[somethingChanged]
[peepholeOptimizations]
[optimization, ., beginTraversal, (, compiler, )]
[optimization]
[compiler]
[peepholeOptimizations]
[optimization, ., endTraversal, (, compiler, )]
[optimization]
[compiler]
