[4.0]
[sort, (, )]
[isOverlap, (, )]
[adjustDownwards, (, minY, ,, height, )]
[minY]
[height]
[isOverlap, (, )]
[adjustUpwards, (, minY, ,, height, )]
[minY]
[height]
[isOverlap, (, )]
[spreadEvenly, (, minY, ,, height, )]
[minY]
[height]
[0.0]
[0]
[i, <, this, ., labels, ., size, (, )]
[i]
[this, ., labels, ., size, (, )]
[this, ., labels]
[this]
[i, ++]
[i]
[getPieLabelRecord, (, i, )]
[i]
[y, >, plr, ., getLowerY, (, )]
[y]
[plr, ., getLowerY, (, )]
[plr]
[true]
[y]
[plr, ., getUpperY, (, )]
[plr]
[false]
[0]
[this, ., labels, ., size, (, ), -, 1]
[this, ., labels, ., size, (, )]
[this, ., labels]
[this]
[1]
[upper, >, lower]
[upper]
[lower]
[lower, <, upper, -, 1]
[lower]
[upper, -, 1]
[upper]
[1]
[getPieLabelRecord, (, lower, )]
[lower]
[getPieLabelRecord, (, lower, +, 1, )]
[lower, +, 1]
[lower]
[1]
[r1, ., getLowerY, (, ), <, r0, ., getUpperY, (, )]
[r1, ., getLowerY, (, )]
[r1]
[r0, ., getUpperY, (, )]
[r0]
[r0, ., getUpperY, (, ), -, r1, ., getLowerY, (, ), +, this, ., minGap]
[r0, ., getUpperY, (, ), -, r1, ., getLowerY, (, )]
[r0, ., getUpperY, (, )]
[r0]
[r1, ., getLowerY, (, )]
[r1]
[this, ., minGap]
[this]
[r1, ., setAllocatedY, (, r1, ., getAllocatedY, (, ), +, adjust, )]
[r1]
[r1, ., getAllocatedY, (, ), +, adjust]
[r1, ., getAllocatedY, (, )]
[r1]
[adjust]
[getPieLabelRecord, (, upper, -, 1, )]
[upper, -, 1]
[upper]
[1]
[getPieLabelRecord, (, upper, )]
[upper]
[r2, ., getUpperY, (, ), >, r3, ., getLowerY, (, )]
[r2, ., getUpperY, (, )]
[r2]
[r3, ., getLowerY, (, )]
[r3]
[(, r2, ., getUpperY, (, ), -, r3, ., getLowerY, (, ), ), +, this, ., minGap]
[(, r2, ., getUpperY, (, ), -, r3, ., getLowerY, (, ), )]
[r2, ., getUpperY, (, ), -, r3, ., getLowerY, (, )]
[r2, ., getUpperY, (, )]
[r2]
[r3, ., getLowerY, (, )]
[r3]
[this, ., minGap]
[this]
[r3, ., setAllocatedY, (, r3, ., getAllocatedY, (, ), +, adjust, )]
[r3]
[r3, ., getAllocatedY, (, ), +, adjust]
[r3, ., getAllocatedY, (, )]
[r3]
[adjust]
[lower, ++]
[lower]
[upper, --]
[upper]
[0]
[i, <, this, ., labels, ., size, (, ), -, 1]
[i]
[this, ., labels, ., size, (, ), -, 1]
[this, ., labels, ., size, (, )]
[this, ., labels]
[this]
[1]
[i, ++]
[i]
[getPieLabelRecord, (, i, )]
[i]
[getPieLabelRecord, (, i, +, 1, )]
[i, +, 1]
[i]
[1]
[record1, ., getLowerY, (, ), <, record0, ., getUpperY, (, )]
[record1, ., getLowerY, (, )]
[record1]
[record0, ., getUpperY, (, )]
[record0]
[record1, ., setAllocatedY, (, Math, ., min, (, minY, +, height, -, record1, ., getLabelHeight, (, ), /, 2.0, ,, record0, ., getUpperY, (, ), +, this, ., minGap, +, record1, ., getLabelHeight, (, ), /, 2.0, ), )]
[record1]
[Math, ., min, (, minY, +, height, -, record1, ., getLabelHeight, (, ), /, 2.0, ,, record0, ., getUpperY, (, ), +, this, ., minGap, +, record1, ., getLabelHeight, (, ), /, 2.0, )]
[Math]
[minY, +, height, -, record1, ., getLabelHeight, (, ), /, 2.0]
[minY, +, height]
[minY]
[height]
[record1, ., getLabelHeight, (, ), /, 2.0]
[record1, ., getLabelHeight, (, )]
[record1]
[2.0]
[record0, ., getUpperY, (, ), +, this, ., minGap, +, record1, ., getLabelHeight, (, ), /, 2.0]
[record0, ., getUpperY, (, ), +, this, ., minGap]
[record0, ., getUpperY, (, )]
[record0]
[this, ., minGap]
[this]
[record1, ., getLabelHeight, (, ), /, 2.0]
[record1, ., getLabelHeight, (, )]
[record1]
[2.0]
[this, ., labels, ., size, (, ), -, 1]
[this, ., labels, ., size, (, )]
[this, ., labels]
[this]
[1]
[i, >, 0]
[i]
[0]
[i, --]
[i]
[getPieLabelRecord, (, i, )]
[i]
[getPieLabelRecord, (, i, -, 1, )]
[i, -, 1]
[i]
[1]
[record1, ., getUpperY, (, ), >, record0, ., getLowerY, (, )]
[record1, ., getUpperY, (, )]
[record1]
[record0, ., getLowerY, (, )]
[record0]
[record1, ., setAllocatedY, (, Math, ., max, (, minY, +, record1, ., getLabelHeight, (, ), /, 2.0, ,, record0, ., getLowerY, (, ), -, this, ., minGap, -, record1, ., getLabelHeight, (, ), /, 2.0, ), )]
[record1]
[Math, ., max, (, minY, +, record1, ., getLabelHeight, (, ), /, 2.0, ,, record0, ., getLowerY, (, ), -, this, ., minGap, -, record1, ., getLabelHeight, (, ), /, 2.0, )]
[Math]
[minY, +, record1, ., getLabelHeight, (, ), /, 2.0]
[minY]
[record1, ., getLabelHeight, (, ), /, 2.0]
[record1, ., getLabelHeight, (, )]
[record1]
[2.0]
[record0, ., getLowerY, (, ), -, this, ., minGap, -, record1, ., getLabelHeight, (, ), /, 2.0]
[record0, ., getLowerY, (, ), -, this, ., minGap]
[record0, ., getLowerY, (, )]
[record0]
[this, ., minGap]
[this]
[record1, ., getLabelHeight, (, ), /, 2.0]
[record1, ., getLabelHeight, (, )]
[record1]
[2.0]
[minY]
[0.0]
[0]
[i, <, this, ., labels, ., size, (, )]
[i]
[this, ., labels, ., size, (, )]
[this, ., labels]
[this]
[i, ++]
[i]
[sumOfLabelHeights]
[getPieLabelRecord, (, i, ), ., getLabelHeight, (, )]
[getPieLabelRecord, (, i, )]
[i]
[height, -, sumOfLabelHeights]
[height]
[sumOfLabelHeights]
[this, ., labels, ., size, (, ), >, 1]
[this, ., labels, ., size, (, )]
[this, ., labels]
[this]
[1]
[gap]
[gap, /, (, this, ., labels, ., size, (, ), -, 1, )]
[gap]
[(, this, ., labels, ., size, (, ), -, 1, )]
[this, ., labels, ., size, (, ), -, 1]
[this, ., labels, ., size, (, )]
[this, ., labels]
[this]
[1]
[0]
[i, <, this, ., labels, ., size, (, )]
[i]
[this, ., labels, ., size, (, )]
[this, ., labels]
[this]
[i, ++]
[i]
[getPieLabelRecord, (, i, )]
[i]
[y]
[y, +, record, ., getLabelHeight, (, ), /, 2.0]
[y]
[record, ., getLabelHeight, (, ), /, 2.0]
[record, ., getLabelHeight, (, )]
[record]
[2.0]
[record, ., setAllocatedY, (, y, )]
[record]
[y]
[y]
[y, +, record, ., getLabelHeight, (, ), /, 2.0, +, gap]
[y, +, record, ., getLabelHeight, (, ), /, 2.0]
[y]
[record, ., getLabelHeight, (, ), /, 2.0]
[record, ., getLabelHeight, (, )]
[record]
[2.0]
[gap]
[Collections, ., sort, (, this, ., labels, )]
[Collections]
[this, ., labels]
[this]
[new, StringBuffer, (, )]
[0]
[i, <, this, ., labels, ., size, (, )]
[i]
[this, ., labels, ., size, (, )]
[this, ., labels]
[this]
[i, ++]
[i]
[result, ., append, (, getPieLabelRecord, (, i, ), ., toString, (, ), ), ., append, (, "\n", )]
[result, ., append, (, getPieLabelRecord, (, i, ), ., toString, (, ), )]
[result]
[getPieLabelRecord, (, i, ), ., toString, (, )]
[getPieLabelRecord, (, i, )]
[i]
["\n"]
[result, ., toString, (, )]
[result]
