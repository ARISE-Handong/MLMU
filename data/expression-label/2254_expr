[100]
[Precision, ., EPSILON]
[Precision]
[!, matrix, ., isSquare, (, )]
[matrix, ., isSquare, (, )]
[matrix]
[new, NonSquareMatrixException, (, matrix, ., getRowDimension, (, ), ,, matrix, ., getColumnDimension, (, ), )]
[matrix, ., getRowDimension, (, )]
[matrix]
[matrix, ., getColumnDimension, (, )]
[matrix]
[new, HessenbergTransformer, (, matrix, )]
[matrix]
[matrixT]
[transformer, ., getH, (, ), ., getData, (, )]
[transformer, ., getH, (, )]
[transformer]
[matrixP]
[transformer, ., getP, (, ), ., getData, (, )]
[transformer, ., getP, (, )]
[transformer]
[cachedT]
[null]
[cachedP]
[null]
[cachedPt]
[null]
[transform, (, )]
[cachedP, ==, null]
[cachedP]
[null]
[cachedP]
[MatrixUtils, ., createRealMatrix, (, matrixP, )]
[MatrixUtils]
[matrixP]
[cachedP]
[cachedPt, ==, null]
[cachedPt]
[null]
[cachedPt]
[getP, (, ), ., transpose, (, )]
[getP, (, )]
[cachedPt]
[cachedT, ==, null]
[cachedT]
[null]
[cachedT]
[MatrixUtils, ., createRealMatrix, (, matrixT, )]
[MatrixUtils]
[matrixT]
[cachedT]
[matrixT, ., length]
[matrixT]
[getNorm, (, )]
[new, ShiftInfo, (, )]
[0]
[n, -, 1]
[n]
[1]
[iu, >=, 0]
[iu]
[0]
[findSmallSubDiagonalElement, (, iu, ,, norm, )]
[iu]
[norm]
[il, ==, iu]
[il]
[iu]
[matrixT, [, iu, ], [, iu, ]]
[matrixT, [, iu, ]]
[matrixT]
[iu]
[iu]
[matrixT, [, iu, ], [, iu, ], +, shift, ., exShift]
[matrixT, [, iu, ], [, iu, ]]
[matrixT, [, iu, ]]
[matrixT]
[iu]
[iu]
[shift, ., exShift]
[shift]
[iu, --]
[iu]
[iteration]
[0]
[il, ==, iu, -, 1]
[il]
[iu, -, 1]
[iu]
[1]
[(, matrixT, [, iu, -, 1, ], [, iu, -, 1, ], -, matrixT, [, iu, ], [, iu, ], ), /, 2.0]
[(, matrixT, [, iu, -, 1, ], [, iu, -, 1, ], -, matrixT, [, iu, ], [, iu, ], )]
[matrixT, [, iu, -, 1, ], [, iu, -, 1, ], -, matrixT, [, iu, ], [, iu, ]]
[matrixT, [, iu, -, 1, ], [, iu, -, 1, ]]
[matrixT, [, iu, -, 1, ]]
[matrixT]
[iu, -, 1]
[iu]
[1]
[iu, -, 1]
[iu]
[1]
[matrixT, [, iu, ], [, iu, ]]
[matrixT, [, iu, ]]
[matrixT]
[iu]
[iu]
[2.0]
[p, *, p, +, matrixT, [, iu, ], [, iu, -, 1, ], *, matrixT, [, iu, -, 1, ], [, iu, ]]
[p, *, p]
[p]
[p]
[matrixT, [, iu, ], [, iu, -, 1, ], *, matrixT, [, iu, -, 1, ], [, iu, ]]
[matrixT, [, iu, ], [, iu, -, 1, ]]
[matrixT, [, iu, ]]
[matrixT]
[iu]
[iu, -, 1]
[iu]
[1]
[matrixT, [, iu, -, 1, ], [, iu, ]]
[matrixT, [, iu, -, 1, ]]
[matrixT]
[iu, -, 1]
[iu]
[1]
[iu]
[matrixT, [, iu, ], [, iu, ]]
[matrixT, [, iu, ]]
[matrixT]
[iu]
[iu]
[shift, ., exShift]
[shift]
[matrixT, [, iu, -, 1, ], [, iu, -, 1, ]]
[matrixT, [, iu, -, 1, ]]
[matrixT]
[iu, -, 1]
[iu]
[1]
[iu, -, 1]
[iu]
[1]
[shift, ., exShift]
[shift]
[q, >=, 0]
[q]
[0]
[FastMath, ., sqrt, (, FastMath, ., abs, (, q, ), )]
[FastMath]
[FastMath, ., abs, (, q, )]
[FastMath]
[q]
[p, >=, 0]
[p]
[0]
[z]
[p, +, z]
[p]
[z]
[z]
[p, -, z]
[p]
[z]
[matrixT, [, iu, ], [, iu, -, 1, ]]
[matrixT, [, iu, ]]
[matrixT]
[iu]
[iu, -, 1]
[iu]
[1]
[FastMath, ., abs, (, x, ), +, FastMath, ., abs, (, z, )]
[FastMath, ., abs, (, x, )]
[FastMath]
[x]
[FastMath, ., abs, (, z, )]
[FastMath]
[z]
[p]
[x, /, s]
[x]
[s]
[q]
[z, /, s]
[z]
[s]
[FastMath, ., sqrt, (, p, *, p, +, q, *, q, )]
[FastMath]
[p, *, p, +, q, *, q]
[p, *, p]
[p]
[p]
[q, *, q]
[q]
[q]
[p]
[p, /, r]
[p]
[r]
[q]
[q, /, r]
[q]
[r]
[iu, -, 1]
[iu]
[1]
[j, <, n]
[j]
[n]
[j, ++]
[j]
[z]
[matrixT, [, iu, -, 1, ], [, j, ]]
[matrixT, [, iu, -, 1, ]]
[matrixT]
[iu, -, 1]
[iu]
[1]
[j]
[matrixT, [, iu, -, 1, ], [, j, ]]
[matrixT, [, iu, -, 1, ]]
[matrixT]
[iu, -, 1]
[iu]
[1]
[j]
[q, *, z, +, p, *, matrixT, [, iu, ], [, j, ]]
[q, *, z]
[q]
[z]
[p, *, matrixT, [, iu, ], [, j, ]]
[p]
[matrixT, [, iu, ], [, j, ]]
[matrixT, [, iu, ]]
[matrixT]
[iu]
[j]
[matrixT, [, iu, ], [, j, ]]
[matrixT, [, iu, ]]
[matrixT]
[iu]
[j]
[q, *, matrixT, [, iu, ], [, j, ], -, p, *, z]
[q, *, matrixT, [, iu, ], [, j, ]]
[q]
[matrixT, [, iu, ], [, j, ]]
[matrixT, [, iu, ]]
[matrixT]
[iu]
[j]
[p, *, z]
[p]
[z]
[0]
[i, <=, iu]
[i]
[iu]
[i, ++]
[i]
[z]
[matrixT, [, i, ], [, iu, -, 1, ]]
[matrixT, [, i, ]]
[matrixT]
[i]
[iu, -, 1]
[iu]
[1]
[matrixT, [, i, ], [, iu, -, 1, ]]
[matrixT, [, i, ]]
[matrixT]
[i]
[iu, -, 1]
[iu]
[1]
[q, *, z, +, p, *, matrixT, [, i, ], [, iu, ]]
[q, *, z]
[q]
[z]
[p, *, matrixT, [, i, ], [, iu, ]]
[p]
[matrixT, [, i, ], [, iu, ]]
[matrixT, [, i, ]]
[matrixT]
[i]
[iu]
[matrixT, [, i, ], [, iu, ]]
[matrixT, [, i, ]]
[matrixT]
[i]
[iu]
[q, *, matrixT, [, i, ], [, iu, ], -, p, *, z]
[q, *, matrixT, [, i, ], [, iu, ]]
[q]
[matrixT, [, i, ], [, iu, ]]
[matrixT, [, i, ]]
[matrixT]
[i]
[iu]
[p, *, z]
[p]
[z]
[0]
[i, <=, n, -, 1]
[i]
[n, -, 1]
[n]
[1]
[i, ++]
[i]
[z]
[matrixP, [, i, ], [, iu, -, 1, ]]
[matrixP, [, i, ]]
[matrixP]
[i]
[iu, -, 1]
[iu]
[1]
[matrixP, [, i, ], [, iu, -, 1, ]]
[matrixP, [, i, ]]
[matrixP]
[i]
[iu, -, 1]
[iu]
[1]
[q, *, z, +, p, *, matrixP, [, i, ], [, iu, ]]
[q, *, z]
[q]
[z]
[p, *, matrixP, [, i, ], [, iu, ]]
[p]
[matrixP, [, i, ], [, iu, ]]
[matrixP, [, i, ]]
[matrixP]
[i]
[iu]
[matrixP, [, i, ], [, iu, ]]
[matrixP, [, i, ]]
[matrixP]
[i]
[iu]
[q, *, matrixP, [, i, ], [, iu, ], -, p, *, z]
[q, *, matrixP, [, i, ], [, iu, ]]
[q]
[matrixP, [, i, ], [, iu, ]]
[matrixP, [, i, ]]
[matrixP]
[i]
[iu]
[p, *, z]
[p]
[z]
[iu]
[2]
[iteration]
[0]
[computeShift, (, il, ,, iu, ,, iteration, ,, shift, )]
[il]
[iu]
[iteration]
[shift]
[++, iteration, >, MAX_ITERATIONS]
[++, iteration]
[iteration]
[MAX_ITERATIONS]
[new, MaxCountExceededException, (, LocalizedFormats, ., CONVERGENCE_FAILED, ,, MAX_ITERATIONS, )]
[LocalizedFormats, ., CONVERGENCE_FAILED]
[LocalizedFormats]
[MAX_ITERATIONS]
[new, double, [, 3, ]]
[3]
[initQRStep, (, il, ,, iu, ,, shift, ,, hVec, )]
[il]
[iu]
[shift]
[hVec]
[performDoubleQRStep, (, il, ,, im, ,, iu, ,, shift, ,, hVec, )]
[il]
[im]
[iu]
[shift]
[hVec]
[0.0]
[0]
[i, <, matrixT, ., length]
[i]
[matrixT, ., length]
[matrixT]
[i, ++]
[i]
[FastMath, ., max, (, i, -, 1, ,, 0, )]
[FastMath]
[i, -, 1]
[i]
[1]
[0]
[j, <, matrixT, ., length]
[j]
[matrixT, ., length]
[matrixT]
[j, ++]
[j]
[norm]
[FastMath, ., abs, (, matrixT, [, i, ], [, j, ], )]
[FastMath]
[matrixT, [, i, ], [, j, ]]
[matrixT, [, i, ]]
[matrixT]
[i]
[j]
[norm]
[startIdx]
[l, >, 0]
[l]
[0]
[FastMath, ., abs, (, matrixT, [, l, -, 1, ], [, l, -, 1, ], ), +, FastMath, ., abs, (, matrixT, [, l, ], [, l, ], )]
[FastMath, ., abs, (, matrixT, [, l, -, 1, ], [, l, -, 1, ], )]
[FastMath]
[matrixT, [, l, -, 1, ], [, l, -, 1, ]]
[matrixT, [, l, -, 1, ]]
[matrixT]
[l, -, 1]
[l]
[1]
[l, -, 1]
[l]
[1]
[FastMath, ., abs, (, matrixT, [, l, ], [, l, ], )]
[FastMath]
[matrixT, [, l, ], [, l, ]]
[matrixT, [, l, ]]
[matrixT]
[l]
[l]
[s, ==, 0.0]
[s]
[0.0]
[s]
[norm]
[FastMath, ., abs, (, matrixT, [, l, ], [, l, -, 1, ], ), <, epsilon, *, s]
[FastMath, ., abs, (, matrixT, [, l, ], [, l, -, 1, ], )]
[FastMath]
[matrixT, [, l, ], [, l, -, 1, ]]
[matrixT, [, l, ]]
[matrixT]
[l]
[l, -, 1]
[l]
[1]
[epsilon, *, s]
[epsilon]
[s]
[l, --]
[l]
[l]
[shift, ., x]
[shift]
[matrixT, [, idx, ], [, idx, ]]
[matrixT, [, idx, ]]
[matrixT]
[idx]
[idx]
[shift, ., y]
[shift]
[shift, ., w]
[shift]
[0.0]
[l, <, idx]
[l]
[idx]
[shift, ., y]
[shift]
[matrixT, [, idx, -, 1, ], [, idx, -, 1, ]]
[matrixT, [, idx, -, 1, ]]
[matrixT]
[idx, -, 1]
[idx]
[1]
[idx, -, 1]
[idx]
[1]
[shift, ., w]
[shift]
[matrixT, [, idx, ], [, idx, -, 1, ], *, matrixT, [, idx, -, 1, ], [, idx, ]]
[matrixT, [, idx, ], [, idx, -, 1, ]]
[matrixT, [, idx, ]]
[matrixT]
[idx]
[idx, -, 1]
[idx]
[1]
[matrixT, [, idx, -, 1, ], [, idx, ]]
[matrixT, [, idx, -, 1, ]]
[matrixT]
[idx, -, 1]
[idx]
[1]
[idx]
[iteration, ==, 10]
[iteration]
[10]
[shift, ., exShift]
[shift]
[shift, ., x]
[shift]
[0]
[i, <=, idx]
[i]
[idx]
[i, ++]
[i]
[matrixT, [, i, ], [, i, ]]
[matrixT, [, i, ]]
[matrixT]
[i]
[i]
[shift, ., x]
[shift]
[FastMath, ., abs, (, matrixT, [, idx, ], [, idx, -, 1, ], ), +, FastMath, ., abs, (, matrixT, [, idx, -, 1, ], [, idx, -, 2, ], )]
[FastMath, ., abs, (, matrixT, [, idx, ], [, idx, -, 1, ], )]
[FastMath]
[matrixT, [, idx, ], [, idx, -, 1, ]]
[matrixT, [, idx, ]]
[matrixT]
[idx]
[idx, -, 1]
[idx]
[1]
[FastMath, ., abs, (, matrixT, [, idx, -, 1, ], [, idx, -, 2, ], )]
[FastMath]
[matrixT, [, idx, -, 1, ], [, idx, -, 2, ]]
[matrixT, [, idx, -, 1, ]]
[matrixT]
[idx, -, 1]
[idx]
[1]
[idx, -, 2]
[idx]
[2]
[shift, ., x]
[shift]
[0.75, *, s]
[0.75]
[s]
[shift, ., y]
[shift]
[0.75, *, s]
[0.75]
[s]
[shift, ., w]
[shift]
[-, 0.4375, *, s, *, s]
[-, 0.4375, *, s]
[-, 0.4375]
[0.4375]
[s]
[s]
[iteration, ==, 30]
[iteration]
[30]
[(, shift, ., y, -, shift, ., x, ), /, 2.0]
[(, shift, ., y, -, shift, ., x, )]
[shift, ., y, -, shift, ., x]
[shift, ., y]
[shift]
[shift, ., x]
[shift]
[2.0]
[s]
[s, *, s, +, shift, ., w]
[s, *, s]
[s]
[s]
[shift, ., w]
[shift]
[s, >, 0.0]
[s]
[0.0]
[s]
[FastMath, ., sqrt, (, s, )]
[FastMath]
[s]
[shift, ., y, <, shift, ., x]
[shift, ., y]
[shift]
[shift, ., x]
[shift]
[s]
[-, s]
[s]
[s]
[shift, ., x, -, shift, ., w, /, (, (, shift, ., y, -, shift, ., x, ), /, 2.0, +, s, )]
[shift, ., x]
[shift]
[shift, ., w, /, (, (, shift, ., y, -, shift, ., x, ), /, 2.0, +, s, )]
[shift, ., w]
[shift]
[(, (, shift, ., y, -, shift, ., x, ), /, 2.0, +, s, )]
[(, shift, ., y, -, shift, ., x, ), /, 2.0, +, s]
[(, shift, ., y, -, shift, ., x, ), /, 2.0]
[(, shift, ., y, -, shift, ., x, )]
[shift, ., y, -, shift, ., x]
[shift, ., y]
[shift]
[shift, ., x]
[shift]
[2.0]
[s]
[0]
[i, <=, idx]
[i]
[idx]
[i, ++]
[i]
[matrixT, [, i, ], [, i, ]]
[matrixT, [, i, ]]
[matrixT]
[i]
[i]
[s]
[shift, ., exShift]
[shift]
[s]
[shift, ., x]
[shift]
[shift, ., y]
[shift]
[shift, ., w]
[shift]
[0.964]
[iu, -, 2]
[iu]
[2]
[im, >=, il]
[im]
[il]
[matrixT, [, im, ], [, im, ]]
[matrixT, [, im, ]]
[matrixT]
[im]
[im]
[shift, ., x, -, z]
[shift, ., x]
[shift]
[z]
[shift, ., y, -, z]
[shift, ., y]
[shift]
[z]
[hVec, [, 0, ]]
[hVec]
[0]
[(, r, *, s, -, shift, ., w, ), /, matrixT, [, im, +, 1, ], [, im, ], +, matrixT, [, im, ], [, im, +, 1, ]]
[(, r, *, s, -, shift, ., w, ), /, matrixT, [, im, +, 1, ], [, im, ]]
[(, r, *, s, -, shift, ., w, )]
[r, *, s, -, shift, ., w]
[r, *, s]
[r]
[s]
[shift, ., w]
[shift]
[matrixT, [, im, +, 1, ], [, im, ]]
[matrixT, [, im, +, 1, ]]
[matrixT]
[im, +, 1]
[im]
[1]
[im]
[matrixT, [, im, ], [, im, +, 1, ]]
[matrixT, [, im, ]]
[matrixT]
[im]
[im, +, 1]
[im]
[1]
[hVec, [, 1, ]]
[hVec]
[1]
[matrixT, [, im, +, 1, ], [, im, +, 1, ], -, z, -, r, -, s]
[matrixT, [, im, +, 1, ], [, im, +, 1, ], -, z, -, r]
[matrixT, [, im, +, 1, ], [, im, +, 1, ], -, z]
[matrixT, [, im, +, 1, ], [, im, +, 1, ]]
[matrixT, [, im, +, 1, ]]
[matrixT]
[im, +, 1]
[im]
[1]
[im, +, 1]
[im]
[1]
[z]
[r]
[s]
[hVec, [, 2, ]]
[hVec]
[2]
[matrixT, [, im, +, 2, ], [, im, +, 1, ]]
[matrixT, [, im, +, 2, ]]
[matrixT]
[im, +, 2]
[im]
[2]
[im, +, 1]
[im]
[1]
[im, ==, il]
[im]
[il]
[FastMath, ., abs, (, matrixT, [, im, ], [, im, -, 1, ], ), *, (, FastMath, ., abs, (, hVec, [, 1, ], ), +, FastMath, ., abs, (, hVec, [, 2, ], ), )]
[FastMath, ., abs, (, matrixT, [, im, ], [, im, -, 1, ], )]
[FastMath]
[matrixT, [, im, ], [, im, -, 1, ]]
[matrixT, [, im, ]]
[matrixT]
[im]
[im, -, 1]
[im]
[1]
[(, FastMath, ., abs, (, hVec, [, 1, ], ), +, FastMath, ., abs, (, hVec, [, 2, ], ), )]
[FastMath, ., abs, (, hVec, [, 1, ], ), +, FastMath, ., abs, (, hVec, [, 2, ], )]
[FastMath, ., abs, (, hVec, [, 1, ], )]
[FastMath]
[hVec, [, 1, ]]
[hVec]
[1]
[FastMath, ., abs, (, hVec, [, 2, ], )]
[FastMath]
[hVec, [, 2, ]]
[hVec]
[2]
[FastMath, ., abs, (, hVec, [, 0, ], ), *, (, FastMath, ., abs, (, matrixT, [, im, -, 1, ], [, im, -, 1, ], ), +, FastMath, ., abs, (, z, ), +, FastMath, ., abs, (, matrixT, [, im, +, 1, ], [, im, +, 1, ], ), )]
[FastMath, ., abs, (, hVec, [, 0, ], )]
[FastMath]
[hVec, [, 0, ]]
[hVec]
[0]
[(, FastMath, ., abs, (, matrixT, [, im, -, 1, ], [, im, -, 1, ], ), +, FastMath, ., abs, (, z, ), +, FastMath, ., abs, (, matrixT, [, im, +, 1, ], [, im, +, 1, ], ), )]
[FastMath, ., abs, (, matrixT, [, im, -, 1, ], [, im, -, 1, ], ), +, FastMath, ., abs, (, z, ), +, FastMath, ., abs, (, matrixT, [, im, +, 1, ], [, im, +, 1, ], )]
[FastMath, ., abs, (, matrixT, [, im, -, 1, ], [, im, -, 1, ], ), +, FastMath, ., abs, (, z, )]
[FastMath, ., abs, (, matrixT, [, im, -, 1, ], [, im, -, 1, ], )]
[FastMath]
[matrixT, [, im, -, 1, ], [, im, -, 1, ]]
[matrixT, [, im, -, 1, ]]
[matrixT]
[im, -, 1]
[im]
[1]
[im, -, 1]
[im]
[1]
[FastMath, ., abs, (, z, )]
[FastMath]
[z]
[FastMath, ., abs, (, matrixT, [, im, +, 1, ], [, im, +, 1, ], )]
[FastMath]
[matrixT, [, im, +, 1, ], [, im, +, 1, ]]
[matrixT, [, im, +, 1, ]]
[matrixT]
[im, +, 1]
[im]
[1]
[im, +, 1]
[im]
[1]
[lhs, <, epsilon, *, rhs]
[lhs]
[epsilon, *, rhs]
[epsilon]
[rhs]
[im, --]
[im]
[im]
[matrixT, ., length]
[matrixT]
[hVec, [, 0, ]]
[hVec]
[0]
[hVec, [, 1, ]]
[hVec]
[1]
[hVec, [, 2, ]]
[hVec]
[2]
[im]
[k, <=, iu, -, 1]
[k]
[iu, -, 1]
[iu]
[1]
[k, ++]
[k]
[k, !=, (, iu, -, 1, )]
[k]
[(, iu, -, 1, )]
[iu, -, 1]
[iu]
[1]
[k, !=, im]
[k]
[im]
[p]
[matrixT, [, k, ], [, k, -, 1, ]]
[matrixT, [, k, ]]
[matrixT]
[k]
[k, -, 1]
[k]
[1]
[q]
[matrixT, [, k, +, 1, ], [, k, -, 1, ]]
[matrixT, [, k, +, 1, ]]
[matrixT]
[k, +, 1]
[k]
[1]
[k, -, 1]
[k]
[1]
[r]
[notlast, ?, matrixT, [, k, +, 2, ], [, k, -, 1, ], :, 0.0]
[notlast]
[matrixT, [, k, +, 2, ], [, k, -, 1, ]]
[matrixT, [, k, +, 2, ]]
[matrixT]
[k, +, 2]
[k]
[2]
[k, -, 1]
[k]
[1]
[0.0]
[shift, ., x]
[shift]
[FastMath, ., abs, (, p, ), +, FastMath, ., abs, (, q, ), +, FastMath, ., abs, (, r, )]
[FastMath, ., abs, (, p, ), +, FastMath, ., abs, (, q, )]
[FastMath, ., abs, (, p, )]
[FastMath]
[p]
[FastMath, ., abs, (, q, )]
[FastMath]
[q]
[FastMath, ., abs, (, r, )]
[FastMath]
[r]
[!, Precision, ., equals, (, shift, ., x, ,, 0.0, ,, epsilon, )]
[Precision, ., equals, (, shift, ., x, ,, 0.0, ,, epsilon, )]
[Precision]
[shift, ., x]
[shift]
[0.0]
[epsilon]
[p]
[p, /, shift, ., x]
[p]
[shift, ., x]
[shift]
[q]
[q, /, shift, ., x]
[q]
[shift, ., x]
[shift]
[r]
[r, /, shift, ., x]
[r]
[shift, ., x]
[shift]
[shift, ., x, ==, 0.0]
[shift, ., x]
[shift]
[0.0]
[FastMath, ., sqrt, (, p, *, p, +, q, *, q, +, r, *, r, )]
[FastMath]
[p, *, p, +, q, *, q, +, r, *, r]
[p, *, p, +, q, *, q]
[p, *, p]
[p]
[p]
[q, *, q]
[q]
[q]
[r, *, r]
[r]
[r]
[p, <, 0.0]
[p]
[0.0]
[s]
[-, s]
[s]
[s, !=, 0.0]
[s]
[0.0]
[k, !=, im]
[k]
[im]
[matrixT, [, k, ], [, k, -, 1, ]]
[matrixT, [, k, ]]
[matrixT]
[k]
[k, -, 1]
[k]
[1]
[-, s, *, shift, ., x]
[-, s]
[s]
[shift, ., x]
[shift]
[il, !=, im]
[il]
[im]
[matrixT, [, k, ], [, k, -, 1, ]]
[matrixT, [, k, ]]
[matrixT]
[k]
[k, -, 1]
[k]
[1]
[-, matrixT, [, k, ], [, k, -, 1, ]]
[matrixT, [, k, ], [, k, -, 1, ]]
[matrixT, [, k, ]]
[matrixT]
[k]
[k, -, 1]
[k]
[1]
[p]
[p, +, s]
[p]
[s]
[shift, ., x]
[shift]
[p, /, s]
[p]
[s]
[shift, ., y]
[shift]
[q, /, s]
[q]
[s]
[r, /, s]
[r]
[s]
[q]
[q, /, p]
[q]
[p]
[r]
[r, /, p]
[r]
[p]
[k]
[j, <, n]
[j]
[n]
[j, ++]
[j]
[p]
[matrixT, [, k, ], [, j, ], +, q, *, matrixT, [, k, +, 1, ], [, j, ]]
[matrixT, [, k, ], [, j, ]]
[matrixT, [, k, ]]
[matrixT]
[k]
[j]
[q, *, matrixT, [, k, +, 1, ], [, j, ]]
[q]
[matrixT, [, k, +, 1, ], [, j, ]]
[matrixT, [, k, +, 1, ]]
[matrixT]
[k, +, 1]
[k]
[1]
[j]
[notlast]
[p]
[p, +, r, *, matrixT, [, k, +, 2, ], [, j, ]]
[p]
[r, *, matrixT, [, k, +, 2, ], [, j, ]]
[r]
[matrixT, [, k, +, 2, ], [, j, ]]
[matrixT, [, k, +, 2, ]]
[matrixT]
[k, +, 2]
[k]
[2]
[j]
[matrixT, [, k, +, 2, ], [, j, ]]
[matrixT, [, k, +, 2, ]]
[matrixT]
[k, +, 2]
[k]
[2]
[j]
[matrixT, [, k, +, 2, ], [, j, ], -, p, *, z]
[matrixT, [, k, +, 2, ], [, j, ]]
[matrixT, [, k, +, 2, ]]
[matrixT]
[k, +, 2]
[k]
[2]
[j]
[p, *, z]
[p]
[z]
[matrixT, [, k, ], [, j, ]]
[matrixT, [, k, ]]
[matrixT]
[k]
[j]
[matrixT, [, k, ], [, j, ], -, p, *, shift, ., x]
[matrixT, [, k, ], [, j, ]]
[matrixT, [, k, ]]
[matrixT]
[k]
[j]
[p, *, shift, ., x]
[p]
[shift, ., x]
[shift]
[matrixT, [, k, +, 1, ], [, j, ]]
[matrixT, [, k, +, 1, ]]
[matrixT]
[k, +, 1]
[k]
[1]
[j]
[matrixT, [, k, +, 1, ], [, j, ], -, p, *, shift, ., y]
[matrixT, [, k, +, 1, ], [, j, ]]
[matrixT, [, k, +, 1, ]]
[matrixT]
[k, +, 1]
[k]
[1]
[j]
[p, *, shift, ., y]
[p]
[shift, ., y]
[shift]
[0]
[i, <=, FastMath, ., min, (, iu, ,, k, +, 3, )]
[i]
[FastMath, ., min, (, iu, ,, k, +, 3, )]
[FastMath]
[iu]
[k, +, 3]
[k]
[3]
[i, ++]
[i]
[p]
[shift, ., x, *, matrixT, [, i, ], [, k, ], +, shift, ., y, *, matrixT, [, i, ], [, k, +, 1, ]]
[shift, ., x, *, matrixT, [, i, ], [, k, ]]
[shift, ., x]
[shift]
[matrixT, [, i, ], [, k, ]]
[matrixT, [, i, ]]
[matrixT]
[i]
[k]
[shift, ., y, *, matrixT, [, i, ], [, k, +, 1, ]]
[shift, ., y]
[shift]
[matrixT, [, i, ], [, k, +, 1, ]]
[matrixT, [, i, ]]
[matrixT]
[i]
[k, +, 1]
[k]
[1]
[notlast]
[p]
[p, +, z, *, matrixT, [, i, ], [, k, +, 2, ]]
[p]
[z, *, matrixT, [, i, ], [, k, +, 2, ]]
[z]
[matrixT, [, i, ], [, k, +, 2, ]]
[matrixT, [, i, ]]
[matrixT]
[i]
[k, +, 2]
[k]
[2]
[matrixT, [, i, ], [, k, +, 2, ]]
[matrixT, [, i, ]]
[matrixT]
[i]
[k, +, 2]
[k]
[2]
[matrixT, [, i, ], [, k, +, 2, ], -, p, *, r]
[matrixT, [, i, ], [, k, +, 2, ]]
[matrixT, [, i, ]]
[matrixT]
[i]
[k, +, 2]
[k]
[2]
[p, *, r]
[p]
[r]
[matrixT, [, i, ], [, k, ]]
[matrixT, [, i, ]]
[matrixT]
[i]
[k]
[matrixT, [, i, ], [, k, ], -, p]
[matrixT, [, i, ], [, k, ]]
[matrixT, [, i, ]]
[matrixT]
[i]
[k]
[p]
[matrixT, [, i, ], [, k, +, 1, ]]
[matrixT, [, i, ]]
[matrixT]
[i]
[k, +, 1]
[k]
[1]
[matrixT, [, i, ], [, k, +, 1, ], -, p, *, q]
[matrixT, [, i, ], [, k, +, 1, ]]
[matrixT, [, i, ]]
[matrixT]
[i]
[k, +, 1]
[k]
[1]
[p, *, q]
[p]
[q]
[matrixT, ., length, -, 1]
[matrixT, ., length]
[matrixT]
[1]
[0]
[i, <=, high]
[i]
[high]
[i, ++]
[i]
[p]
[shift, ., x, *, matrixP, [, i, ], [, k, ], +, shift, ., y, *, matrixP, [, i, ], [, k, +, 1, ]]
[shift, ., x, *, matrixP, [, i, ], [, k, ]]
[shift, ., x]
[shift]
[matrixP, [, i, ], [, k, ]]
[matrixP, [, i, ]]
[matrixP]
[i]
[k]
[shift, ., y, *, matrixP, [, i, ], [, k, +, 1, ]]
[shift, ., y]
[shift]
[matrixP, [, i, ], [, k, +, 1, ]]
[matrixP, [, i, ]]
[matrixP]
[i]
[k, +, 1]
[k]
[1]
[notlast]
[p]
[p, +, z, *, matrixP, [, i, ], [, k, +, 2, ]]
[p]
[z, *, matrixP, [, i, ], [, k, +, 2, ]]
[z]
[matrixP, [, i, ], [, k, +, 2, ]]
[matrixP, [, i, ]]
[matrixP]
[i]
[k, +, 2]
[k]
[2]
[matrixP, [, i, ], [, k, +, 2, ]]
[matrixP, [, i, ]]
[matrixP]
[i]
[k, +, 2]
[k]
[2]
[matrixP, [, i, ], [, k, +, 2, ], -, p, *, r]
[matrixP, [, i, ], [, k, +, 2, ]]
[matrixP, [, i, ]]
[matrixP]
[i]
[k, +, 2]
[k]
[2]
[p, *, r]
[p]
[r]
[matrixP, [, i, ], [, k, ]]
[matrixP, [, i, ]]
[matrixP]
[i]
[k]
[matrixP, [, i, ], [, k, ], -, p]
[matrixP, [, i, ], [, k, ]]
[matrixP, [, i, ]]
[matrixP]
[i]
[k]
[p]
[matrixP, [, i, ], [, k, +, 1, ]]
[matrixP, [, i, ]]
[matrixP]
[i]
[k, +, 1]
[k]
[1]
[matrixP, [, i, ], [, k, +, 1, ], -, p, *, q]
[matrixP, [, i, ], [, k, +, 1, ]]
[matrixP, [, i, ]]
[matrixP]
[i]
[k, +, 1]
[k]
[1]
[p, *, q]
[p]
[q]
[im, +, 2]
[im]
[2]
[i, <=, iu]
[i]
[iu]
[i, ++]
[i]
[matrixT, [, i, ], [, i, -, 2, ]]
[matrixT, [, i, ]]
[matrixT]
[i]
[i, -, 2]
[i]
[2]
[0.0]
[i, >, im, +, 2]
[i]
[im, +, 2]
[im]
[2]
[matrixT, [, i, ], [, i, -, 3, ]]
[matrixT, [, i, ]]
[matrixT]
[i]
[i, -, 3]
[i]
[3]
[0.0]
