[1L]
[false]
[null]
[false]
[new, CanCastToVisitor, (, )]
["Unknown class name"]
["Not declared as a constructor"]
["Not declared as a type name"]
["Named type with empty name component"]
[new, Comparator, <, JSType, >, (, ), {, @, Override, public, int, compare, (, JSType, t1, ,, JSType, t2, ), {, return, t1, ., toString, (, ), ., compareTo, (, t2, ., toString, (, ), ), ;, }, }]
[t1, ., toString, (, ), ., compareTo, (, t2, ., toString, (, ), )]
[t1, ., toString, (, )]
[t1]
[t2, ., toString, (, )]
[t2]
[1]
[0]
[registry]
[null]
[null]
[this, ., registry]
[this]
[registry]
[templateKeys, ==, null, ?, 0, :, templateKeys, ., size, (, )]
[templateKeys, ==, null]
[templateKeys]
[null]
[0]
[templateKeys, ., size, (, )]
[templateKeys]
[templatizedTypes, ==, null, ?, 0, :, templatizedTypes, ., size, (, )]
[templatizedTypes, ==, null]
[templatizedTypes]
[null]
[0]
[templatizedTypes, ., size, (, )]
[templatizedTypes]
[typesLength, >, keysLength]
[typesLength]
[keysLength]
[new, IllegalArgumentException, (, "Cannot have more templatized types than template keys", )]
["Cannot have more templatized types than template keys"]
[typesLength, <, keysLength]
[typesLength]
[keysLength]
[ImmutableList, ., builder, (, )]
[ImmutableList]
[typesLength, >, 0]
[typesLength]
[0]
[builder, ., addAll, (, templatizedTypes, )]
[builder]
[templatizedTypes]
[0]
[i, <, keysLength, -, typesLength]
[i]
[keysLength, -, typesLength]
[keysLength]
[typesLength]
[i, ++]
[i]
[builder, ., add, (, registry, ., getNativeType, (, JSTypeNative, ., UNKNOWN_TYPE, ), )]
[builder]
[registry, ., getNativeType, (, JSTypeNative, ., UNKNOWN_TYPE, )]
[registry]
[JSTypeNative, ., UNKNOWN_TYPE]
[JSTypeNative]
[templatizedTypes]
[builder, ., build, (, )]
[builder]
[keysLength, ==, 0, &&, typesLength, ==, 0]
[keysLength, ==, 0]
[keysLength]
[0]
[typesLength, ==, 0]
[typesLength]
[0]
[templateKeys]
[ImmutableList, ., of, (, )]
[ImmutableList]
[templatizedTypes]
[ImmutableList, ., of, (, )]
[ImmutableList]
[this, ., templateKeys]
[this]
[templateKeys]
[this, ., templatizedTypes]
[this]
[templatizedTypes]
[registry, ., getNativeType, (, typeId, )]
[registry]
[typeId]
[null]
[null]
[getDisplayName, (, )]
[displayName, !=, null, &&, !, displayName, ., isEmpty, (, )]
[displayName, !=, null]
[displayName]
[null]
[!, displayName, ., isEmpty, (, )]
[displayName, ., isEmpty, (, )]
[displayName]
[false]
[false]
[false]
[false]
[isNoType, (, ), ||, isNoObjectType, (, ), ||, isNoResolvedType, (, ), ||, (, registry, ., getNativeFunctionType, (, JSTypeNative, ., LEAST_FUNCTION_TYPE, ), ==, this, )]
[isNoType, (, ), ||, isNoObjectType, (, ), ||, isNoResolvedType, (, )]
[isNoType, (, ), ||, isNoObjectType, (, )]
[isNoType, (, )]
[isNoObjectType, (, )]
[isNoResolvedType, (, )]
[(, registry, ., getNativeFunctionType, (, JSTypeNative, ., LEAST_FUNCTION_TYPE, ), ==, this, )]
[registry, ., getNativeFunctionType, (, JSTypeNative, ., LEAST_FUNCTION_TYPE, ), ==, this]
[registry, ., getNativeFunctionType, (, JSTypeNative, ., LEAST_FUNCTION_TYPE, )]
[registry]
[JSTypeNative, ., LEAST_FUNCTION_TYPE]
[JSTypeNative]
[this]
[false]
[false]
[false]
[false]
[false]
[false]
[isSubtype, (, getNativeType, (, JSTypeNative, ., STRING_VALUE_OR_OBJECT_TYPE, ), )]
[getNativeType, (, JSTypeNative, ., STRING_VALUE_OR_OBJECT_TYPE, )]
[JSTypeNative, ., STRING_VALUE_OR_OBJECT_TYPE]
[JSTypeNative]
[isSubtype, (, getNativeType, (, JSTypeNative, ., NUMBER_VALUE_OR_OBJECT_TYPE, ), )]
[getNativeType, (, JSTypeNative, ., NUMBER_VALUE_OR_OBJECT_TYPE, )]
[JSTypeNative, ., NUMBER_VALUE_OR_OBJECT_TYPE]
[JSTypeNative]
[false]
[false]
[false]
[false]
[false]
[false]
[false]
[false]
[false]
[false]
[toMaybeUnionType, (, ), !=, null]
[toMaybeUnionType, (, )]
[null]
[isObject, (, )]
[toObjectType, (, )]
[objType, ., getImplicitPrototype, (, )]
[objType]
[iproto, !=, null, &&, iproto, ., isStruct, (, )]
[iproto, !=, null]
[iproto]
[null]
[iproto, ., isStruct, (, )]
[iproto]
[true]
[objType, ., getConstructor, (, )]
[objType]
[ctor, ==, null]
[ctor]
[null]
[objType, ., getJSDocInfo, (, )]
[objType]
[info, !=, null, &&, info, ., makesStructs, (, )]
[info, !=, null]
[info]
[null]
[info, ., makesStructs, (, )]
[info]
[ctor, ., makesStructs, (, )]
[ctor]
[false]
[isObject, (, )]
[toObjectType, (, )]
[objType, ., getImplicitPrototype, (, )]
[objType]
[iproto, !=, null, &&, iproto, ., isDict, (, )]
[iproto, !=, null]
[iproto]
[null]
[iproto, ., isDict, (, )]
[iproto]
[true]
[objType, ., getConstructor, (, )]
[objType]
[ctor, ==, null]
[ctor]
[null]
[objType, ., getJSDocInfo, (, )]
[objType]
[info, !=, null, &&, info, ., makesDicts, (, )]
[info, !=, null]
[info]
[null]
[info, ., makesDicts, (, )]
[info]
[ctor, ., makesDicts, (, )]
[ctor]
[false]
[null]
[this, ==, registry, ., getNativeType, (, JSTypeNative, ., GLOBAL_THIS, )]
[this]
[registry, ., getNativeType, (, JSTypeNative, ., GLOBAL_THIS, )]
[registry]
[JSTypeNative, ., GLOBAL_THIS]
[JSTypeNative]
[toMaybeFunctionType, (, ), !=, null]
[toMaybeFunctionType, (, )]
[null]
[null]
[type, ==, null, ?, null, :, type, ., toMaybeFunctionType, (, )]
[type, ==, null]
[type]
[null]
[null]
[type, ., toMaybeFunctionType, (, )]
[type]
[toMaybeEnumElementType, (, ), !=, null]
[toMaybeEnumElementType, (, )]
[null]
[null]
[toMaybeEnumType, (, ), !=, null]
[toMaybeEnumType, (, )]
[null]
[null]
[false]
[toMaybeRecordType, (, ), !=, null]
[toMaybeRecordType, (, )]
[null]
[null]
[toMaybeParameterizedType, (, ), !=, null]
[toMaybeParameterizedType, (, )]
[null]
[null]
[type, ==, null, ?, null, :, type, ., toMaybeParameterizedType, (, )]
[type, ==, null]
[type]
[null]
[null]
[type, ., toMaybeParameterizedType, (, )]
[type]
[toMaybeTemplateType, (, ), !=, null]
[toMaybeTemplateType, (, )]
[null]
[null]
[type, ==, null, ?, null, :, type, ., toMaybeTemplateType, (, )]
[type, ==, null]
[type]
[null]
[null]
[type, ., toMaybeTemplateType, (, )]
[type]
[!, this, ., inTemplatedCheckVisit]
[this, ., inTemplatedCheckVisit]
[this]
[this, ., inTemplatedCheckVisit]
[this]
[true]
[hasAnyTemplateTypesInternal, (, )]
[this, ., inTemplatedCheckVisit]
[this]
[false]
[result]
[false]
[isTemplatized, (, )]
[templatizedTypes]
[templatizedType, ., hasAnyTemplateTypes, (, )]
[templatizedType]
[true]
[false]
[!, templateKeys, ., isEmpty, (, )]
[templateKeys, ., isEmpty, (, )]
[templateKeys]
[templateKeys]
[templatizedTypes]
[templateKeys, ., contains, (, key, )]
[templateKeys]
[key]
[templateKeys, ., indexOf, (, key, )]
[templateKeys]
[key]
[index, <, 0]
[index]
[0]
[registry, ., getNativeType, (, JSTypeNative, ., UNKNOWN_TYPE, )]
[registry]
[JSTypeNative, ., UNKNOWN_TYPE]
[JSTypeNative]
[templatizedTypes, ., get, (, index, )]
[templatizedTypes]
[index]
[type1, ., getTemplatizedTypes, (, )]
[type1]
[type2, ., getTemplatizedTypes, (, )]
[type2]
[templatizedTypes1, ., size, (, )]
[templatizedTypes1]
[templatizedTypes2, ., size, (, )]
[templatizedTypes2]
[nTemplatizedTypes1, !=, nTemplatizedTypes2]
[nTemplatizedTypes1]
[nTemplatizedTypes2]
[false]
[0]
[i, <, nTemplatizedTypes1]
[i]
[nTemplatizedTypes1]
[i, ++]
[i]
[templatizedTypes1, ., get, (, i, )]
[templatizedTypes1]
[i]
[templatizedTypes2, ., get, (, i, )]
[templatizedTypes2]
[i]
[templatizedType1, ., checkEquivalenceHelper, (, templatizedType2, ,, eqMethod, )]
[templatizedType1]
[templatizedType2]
[eqMethod]
[false]
[true]
[false]
[false]
[false]
[isConstructor, (, ), ||, isInterface, (, )]
[isConstructor, (, )]
[isInterface, (, )]
[toMaybeFunctionType, (, )]
[fn, ==, null]
[fn]
[null]
[false]
[fn, ., getSource, (, ), !=, null]
[fn, ., getSource, (, )]
[fn]
[null]
[true]
[fn, ., isNativeObjectType, (, )]
[fn]
[false]
[false]
[false]
[false]
[checkEquivalenceHelper, (, that, ,, EquivalenceMethod, ., IDENTITY, )]
[that]
[EquivalenceMethod, ., IDENTITY]
[EquivalenceMethod]
[checkEquivalenceHelper, (, that, ,, EquivalenceMethod, ., INVARIANT, )]
[that]
[EquivalenceMethod, ., INVARIANT]
[EquivalenceMethod]
[!, checkEquivalenceHelper, (, that, ,, EquivalenceMethod, ., DATA_FLOW, )]
[checkEquivalenceHelper, (, that, ,, EquivalenceMethod, ., DATA_FLOW, )]
[that]
[EquivalenceMethod, ., DATA_FLOW]
[EquivalenceMethod]
[this, ==, that]
[this]
[that]
[true]
[isUnknownType, (, )]
[that, ., isUnknownType, (, )]
[that]
[thisUnknown, ||, thatUnknown]
[thisUnknown]
[thatUnknown]
[eqMethod, ==, EquivalenceMethod, ., INVARIANT]
[eqMethod]
[EquivalenceMethod, ., INVARIANT]
[EquivalenceMethod]
[true]
[eqMethod, ==, EquivalenceMethod, ., DATA_FLOW]
[eqMethod]
[EquivalenceMethod, ., DATA_FLOW]
[EquivalenceMethod]
[thisUnknown, &&, thatUnknown]
[thisUnknown]
[thatUnknown]
[thisUnknown, &&, thatUnknown, &&, (, isNominalType, (, ), ^, that, ., isNominalType, (, ), )]
[thisUnknown, &&, thatUnknown]
[thisUnknown]
[thatUnknown]
[(, isNominalType, (, ), ^, that, ., isNominalType, (, ), )]
[isNominalType, (, ), ^, that, ., isNominalType, (, )]
[isNominalType, (, )]
[that, ., isNominalType, (, )]
[that]
[false]
[isUnionType, (, ), &&, that, ., isUnionType, (, )]
[isUnionType, (, )]
[that, ., isUnionType, (, )]
[that]
[toMaybeUnionType, (, ), ., checkUnionEquivalenceHelper, (, that, ., toMaybeUnionType, (, ), ,, eqMethod, )]
[toMaybeUnionType, (, )]
[that, ., toMaybeUnionType, (, )]
[that]
[eqMethod]
[isFunctionType, (, ), &&, that, ., isFunctionType, (, )]
[isFunctionType, (, )]
[that, ., isFunctionType, (, )]
[that]
[toMaybeFunctionType, (, ), ., checkFunctionEquivalenceHelper, (, that, ., toMaybeFunctionType, (, ), ,, eqMethod, )]
[toMaybeFunctionType, (, )]
[that, ., toMaybeFunctionType, (, )]
[that]
[eqMethod]
[isRecordType, (, ), &&, that, ., isRecordType, (, )]
[isRecordType, (, )]
[that, ., isRecordType, (, )]
[that]
[toMaybeRecordType, (, ), ., checkRecordEquivalenceHelper, (, that, ., toMaybeRecordType, (, ), ,, eqMethod, )]
[toMaybeRecordType, (, )]
[that, ., toMaybeRecordType, (, )]
[that]
[eqMethod]
[toMaybeParameterizedType, (, )]
[that, ., toMaybeParameterizedType, (, )]
[that]
[thisParamType, !=, null, ||, thatParamType, !=, null]
[thisParamType, !=, null]
[thisParamType]
[null]
[thatParamType, !=, null]
[thatParamType]
[null]
[false]
[thisParamType, !=, null, &&, thatParamType, !=, null]
[thisParamType, !=, null]
[thisParamType]
[null]
[thatParamType, !=, null]
[thatParamType]
[null]
[paramsMatch]
[thisParamType, ., getParameterType, (, ), ., checkEquivalenceHelper, (, thatParamType, ., getParameterType, (, ), ,, eqMethod, )]
[thisParamType, ., getParameterType, (, )]
[thisParamType]
[thatParamType, ., getParameterType, (, )]
[thatParamType]
[eqMethod]
[eqMethod, ==, EquivalenceMethod, ., IDENTITY]
[eqMethod]
[EquivalenceMethod, ., IDENTITY]
[EquivalenceMethod]
[paramsMatch]
[false]
[paramsMatch]
[true]
[thisParamType, ==, null, ?, this, :, thisParamType, ., getReferencedTypeInternal, (, )]
[thisParamType, ==, null]
[thisParamType]
[null]
[this]
[thisParamType, ., getReferencedTypeInternal, (, )]
[thisParamType]
[thatParamType, ==, null, ?, that, :, thatParamType, ., getReferencedTypeInternal, (, )]
[thatParamType, ==, null]
[thatParamType]
[null]
[that]
[thatParamType, ., getReferencedTypeInternal, (, )]
[thatParamType]
[paramsMatch, &&, thisRootType, ., checkEquivalenceHelper, (, thatRootType, ,, eqMethod, )]
[paramsMatch]
[thisRootType, ., checkEquivalenceHelper, (, thatRootType, ,, eqMethod, )]
[thisRootType]
[thatRootType]
[eqMethod]
[isNominalType, (, ), &&, that, ., isNominalType, (, )]
[isNominalType, (, )]
[that, ., isNominalType, (, )]
[that]
[toObjectType, (, ), ., getReferenceName, (, ), ., equals, (, that, ., toObjectType, (, ), ., getReferenceName, (, ), )]
[toObjectType, (, ), ., getReferenceName, (, )]
[toObjectType, (, )]
[that, ., toObjectType, (, ), ., getReferenceName, (, )]
[that, ., toObjectType, (, )]
[that]
[this, instanceof, ProxyObjectType]
[this]
[(, (, ProxyObjectType, ), this, ), ., getReferencedTypeInternal, (, ), ., checkEquivalenceHelper, (, that, ,, eqMethod, )]
[(, (, ProxyObjectType, ), this, ), ., getReferencedTypeInternal, (, )]
[(, (, ProxyObjectType, ), this, )]
[(, ProxyObjectType, ), this]
[this]
[that]
[eqMethod]
[that, instanceof, ProxyObjectType]
[that]
[checkEquivalenceHelper, (, (, (, ProxyObjectType, ), that, ), ., getReferencedTypeInternal, (, ), ,, eqMethod, )]
[(, (, ProxyObjectType, ), that, ), ., getReferencedTypeInternal, (, )]
[(, (, ProxyObjectType, ), that, )]
[(, ProxyObjectType, ), that]
[that]
[eqMethod]
[this, ==, that]
[this]
[that]
[(, typeA, ==, null, ||, typeB, ==, null, ), ?, typeA, ==, typeB, :, typeA, ., isEquivalentTo, (, typeB, )]
[(, typeA, ==, null, ||, typeB, ==, null, )]
[typeA, ==, null, ||, typeB, ==, null]
[typeA, ==, null]
[typeA]
[null]
[typeB, ==, null]
[typeB]
[null]
[typeA, ==, typeB]
[typeA]
[typeB]
[typeA, ., isEquivalentTo, (, typeB, )]
[typeA]
[typeB]
[(, jsType, instanceof, JSType, ), ?, isEquivalentTo, (, (, JSType, ), jsType, ), :, false]
[(, jsType, instanceof, JSType, )]
[jsType, instanceof, JSType]
[jsType]
[isEquivalentTo, (, (, JSType, ), jsType, )]
[(, JSType, ), jsType]
[jsType]
[false]
[System, ., identityHashCode, (, this, )]
[System]
[this]
[matchesNumberContext, (, )]
[matchesNumberContext, (, )]
[false]
[false]
[false]
[ObjectType, ., cast, (, autoboxesTo, (, ), )]
[ObjectType]
[autoboxesTo, (, )]
[autoboxObjType, !=, null]
[autoboxObjType]
[null]
[autoboxObjType, ., findPropertyType, (, propertyName, )]
[autoboxObjType]
[propertyName]
[null]
[false]
[this, ., visit, (, CAN_CAST_TO_VISITOR, ,, that, )]
[this]
[CAN_CAST_TO_VISITOR]
[that]
[null]
[null]
[this, instanceof, ObjectType, ?, (, ObjectType, ), this, :, null]
[this, instanceof, ObjectType]
[this]
[(, ObjectType, ), this]
[this]
[null]
[restrictByNotNullOrUndefined, (, )]
[restricted, ., autoboxesTo, (, )]
[restricted]
[autobox, ==, null, ?, restricted, :, autobox]
[autobox, ==, null]
[autobox]
[null]
[restricted]
[autobox]
[autobox, (, ), ., toObjectType, (, )]
[autobox, (, )]
[testForEquality, (, that, ), ., equals, (, UNKNOWN, )]
[testForEquality, (, that, )]
[that]
[UNKNOWN]
[testForEqualityHelper, (, this, ,, that, )]
[this]
[that]
[bType, ., isAllType, (, ), ||, bType, ., isUnknownType, (, ), ||, bType, ., isNoResolvedType, (, ), ||, aType, ., isAllType, (, ), ||, aType, ., isUnknownType, (, ), ||, aType, ., isNoResolvedType, (, )]
[bType, ., isAllType, (, ), ||, bType, ., isUnknownType, (, ), ||, bType, ., isNoResolvedType, (, ), ||, aType, ., isAllType, (, ), ||, aType, ., isUnknownType, (, )]
[bType, ., isAllType, (, ), ||, bType, ., isUnknownType, (, ), ||, bType, ., isNoResolvedType, (, ), ||, aType, ., isAllType, (, )]
[bType, ., isAllType, (, ), ||, bType, ., isUnknownType, (, ), ||, bType, ., isNoResolvedType, (, )]
[bType, ., isAllType, (, ), ||, bType, ., isUnknownType, (, )]
[bType, ., isAllType, (, )]
[bType]
[bType, ., isUnknownType, (, )]
[bType]
[bType, ., isNoResolvedType, (, )]
[bType]
[aType, ., isAllType, (, )]
[aType]
[aType, ., isUnknownType, (, )]
[aType]
[aType, ., isNoResolvedType, (, )]
[aType]
[UNKNOWN]
[aType, ., isEmptyType, (, )]
[aType]
[bType, ., isEmptyType, (, )]
[bType]
[aIsEmpty, ||, bIsEmpty]
[aIsEmpty]
[bIsEmpty]
[aIsEmpty, &&, bIsEmpty]
[aIsEmpty]
[bIsEmpty]
[TernaryValue, ., TRUE]
[TernaryValue]
[UNKNOWN]
[aType, ., isFunctionType, (, ), ||, bType, ., isFunctionType, (, )]
[aType, ., isFunctionType, (, )]
[aType]
[bType, ., isFunctionType, (, )]
[bType]
[aType, ., isFunctionType, (, ), ?, bType, :, aType]
[aType, ., isFunctionType, (, )]
[aType]
[bType]
[aType]
[otherType, ., getGreatestSubtype, (, getNativeType, (, JSTypeNative, ., OBJECT_TYPE, ), )]
[otherType]
[getNativeType, (, JSTypeNative, ., OBJECT_TYPE, )]
[JSTypeNative, ., OBJECT_TYPE]
[JSTypeNative]
[meet, ., isNoType, (, ), ||, meet, ., isNoObjectType, (, )]
[meet, ., isNoType, (, )]
[meet]
[meet, ., isNoObjectType, (, )]
[meet]
[TernaryValue, ., FALSE]
[TernaryValue]
[TernaryValue, ., UNKNOWN]
[TernaryValue]
[bType, ., isEnumElementType, (, ), ||, bType, ., isUnionType, (, )]
[bType, ., isEnumElementType, (, )]
[bType]
[bType, ., isUnionType, (, )]
[bType]
[bType, ., testForEquality, (, aType, )]
[bType]
[aType]
[null]
[isEmptyType, (, ), ||, that, ., isEmptyType, (, )]
[isEmptyType, (, )]
[that, ., isEmptyType, (, )]
[that]
[isSubtype, (, that, ), ||, that, ., isSubtype, (, this, )]
[isSubtype, (, that, )]
[that]
[that, ., isSubtype, (, this, )]
[that]
[this]
[getGreatestSubtype, (, that, )]
[that]
[!, inf, ., isEmptyType, (, ), ||, inf, ==, registry, ., getNativeType, (, JSTypeNative, ., LEAST_FUNCTION_TYPE, )]
[!, inf, ., isEmptyType, (, )]
[inf, ., isEmptyType, (, )]
[inf]
[inf, ==, registry, ., getNativeType, (, JSTypeNative, ., LEAST_FUNCTION_TYPE, )]
[inf]
[registry, ., getNativeType, (, JSTypeNative, ., LEAST_FUNCTION_TYPE, )]
[registry]
[JSTypeNative, ., LEAST_FUNCTION_TYPE]
[JSTypeNative]
[isSubtype, (, getNativeType, (, JSTypeNative, ., NULL_TYPE, ), )]
[getNativeType, (, JSTypeNative, ., NULL_TYPE, )]
[JSTypeNative, ., NULL_TYPE]
[JSTypeNative]
[this]
[that, ., isUnionType, (, )]
[that]
[that, ., toMaybeUnionType, (, ), ., getLeastSupertype, (, this, )]
[that, ., toMaybeUnionType, (, )]
[that]
[this]
[getLeastSupertype, (, this, ,, that, )]
[this]
[that]
[thisType, ., isEquivalentTo, (, thatType, )]
[thisType]
[thatType]
[areEquivalent, ?, thisType, :, filterNoResolvedType, (, thisType, ., registry, ., createUnionType, (, thisType, ,, thatType, ), )]
[areEquivalent]
[thisType]
[filterNoResolvedType, (, thisType, ., registry, ., createUnionType, (, thisType, ,, thatType, ), )]
[thisType, ., registry, ., createUnionType, (, thisType, ,, thatType, )]
[thisType, ., registry]
[thisType]
[thisType]
[thatType]
[getGreatestSubtype, (, this, ,, that, )]
[this]
[that]
[thisType, ., isFunctionType, (, ), &&, thatType, ., isFunctionType, (, )]
[thisType, ., isFunctionType, (, )]
[thisType]
[thatType, ., isFunctionType, (, )]
[thatType]
[thisType, ., toMaybeFunctionType, (, ), ., supAndInfHelper, (, thatType, ., toMaybeFunctionType, (, ), ,, false, )]
[thisType, ., toMaybeFunctionType, (, )]
[thisType]
[thatType, ., toMaybeFunctionType, (, )]
[thatType]
[false]
[thisType, ., isEquivalentTo, (, thatType, )]
[thisType]
[thatType]
[thisType]
[thisType, ., isUnknownType, (, ), ||, thatType, ., isUnknownType, (, )]
[thisType, ., isUnknownType, (, )]
[thisType]
[thatType, ., isUnknownType, (, )]
[thatType]
[thisType, ., isEquivalentTo, (, thatType, ), ?, thisType, :, thisType, ., getNativeType, (, JSTypeNative, ., UNKNOWN_TYPE, )]
[thisType, ., isEquivalentTo, (, thatType, )]
[thisType]
[thatType]
[thisType]
[thisType, ., getNativeType, (, JSTypeNative, ., UNKNOWN_TYPE, )]
[thisType]
[JSTypeNative, ., UNKNOWN_TYPE]
[JSTypeNative]
[thisType, ., isUnionType, (, )]
[thisType]
[thisType, ., toMaybeUnionType, (, ), ., meet, (, thatType, )]
[thisType, ., toMaybeUnionType, (, )]
[thisType]
[thatType]
[thatType, ., isUnionType, (, )]
[thatType]
[thatType, ., toMaybeUnionType, (, ), ., meet, (, thisType, )]
[thatType, ., toMaybeUnionType, (, )]
[thatType]
[thisType]
[thisType, ., isParameterizedType, (, )]
[thisType]
[thisType, ., toMaybeParameterizedType, (, ), ., getGreatestSubtypeHelper, (, thatType, )]
[thisType, ., toMaybeParameterizedType, (, )]
[thisType]
[thatType]
[thatType, ., isParameterizedType, (, )]
[thatType]
[thatType, ., toMaybeParameterizedType, (, ), ., getGreatestSubtypeHelper, (, thisType, )]
[thatType, ., toMaybeParameterizedType, (, )]
[thatType]
[thisType]
[thisType, ., isSubtype, (, thatType, )]
[thisType]
[thatType]
[filterNoResolvedType, (, thisType, )]
[thisType]
[thatType, ., isSubtype, (, thisType, )]
[thatType]
[thisType]
[filterNoResolvedType, (, thatType, )]
[thatType]
[thisType, ., isRecordType, (, )]
[thisType]
[thisType, ., toMaybeRecordType, (, ), ., getGreatestSubtypeHelper, (, thatType, )]
[thisType, ., toMaybeRecordType, (, )]
[thisType]
[thatType]
[thatType, ., isRecordType, (, )]
[thatType]
[thatType, ., toMaybeRecordType, (, ), ., getGreatestSubtypeHelper, (, thisType, )]
[thatType, ., toMaybeRecordType, (, )]
[thatType]
[thisType]
[thisType, ., isEnumElementType, (, )]
[thisType]
[thisType, ., toMaybeEnumElementType, (, ), ., meet, (, thatType, )]
[thisType, ., toMaybeEnumElementType, (, )]
[thisType]
[thatType]
[inf, !=, null]
[inf]
[null]
[inf]
[thatType, ., isEnumElementType, (, )]
[thatType]
[thatType, ., toMaybeEnumElementType, (, ), ., meet, (, thisType, )]
[thatType, ., toMaybeEnumElementType, (, )]
[thatType]
[thisType]
[inf, !=, null]
[inf]
[null]
[inf]
[thisType, ., isObject, (, ), &&, thatType, ., isObject, (, )]
[thisType, ., isObject, (, )]
[thisType]
[thatType, ., isObject, (, )]
[thatType]
[thisType, ., getNativeType, (, JSTypeNative, ., NO_OBJECT_TYPE, )]
[thisType]
[JSTypeNative, ., NO_OBJECT_TYPE]
[JSTypeNative]
[thisType, ., getNativeType, (, JSTypeNative, ., NO_TYPE, )]
[thisType]
[JSTypeNative, ., NO_TYPE]
[JSTypeNative]
[type, ., isNoResolvedType, (, )]
[type]
[type, ., getNativeType, (, JSTypeNative, ., NO_RESOLVED_TYPE, )]
[type]
[JSTypeNative, ., NO_RESOLVED_TYPE]
[JSTypeNative]
[type, ., isUnionType, (, )]
[type]
[type, ., toMaybeUnionType, (, )]
[type]
[false]
[unionType, ., getAlternates, (, )]
[unionType]
[alt, ., isNoResolvedType, (, )]
[alt]
[needsFiltering]
[true]
[needsFiltering]
[new, UnionTypeBuilder, (, type, ., registry, )]
[type, ., registry]
[type]
[builder, ., addAlternate, (, type, ., getNativeType, (, JSTypeNative, ., NO_RESOLVED_TYPE, ), )]
[builder]
[type, ., getNativeType, (, JSTypeNative, ., NO_RESOLVED_TYPE, )]
[type]
[JSTypeNative, ., NO_RESOLVED_TYPE]
[JSTypeNative]
[unionType, ., getAlternates, (, )]
[unionType]
[!, alt, ., isNoResolvedType, (, )]
[alt, ., isNoResolvedType, (, )]
[alt]
[builder, ., addAlternate, (, alt, )]
[builder]
[alt]
[builder, ., build, (, )]
[builder]
[type]
[outcome, &&, this, ==, getNativeType, (, JSTypeNative, ., UNKNOWN_TYPE, )]
[outcome]
[this, ==, getNativeType, (, JSTypeNative, ., UNKNOWN_TYPE, )]
[this]
[getNativeType, (, JSTypeNative, ., UNKNOWN_TYPE, )]
[JSTypeNative, ., UNKNOWN_TYPE]
[JSTypeNative]
[getNativeType, (, JSTypeNative, ., CHECKED_UNKNOWN_TYPE, )]
[JSTypeNative, ., CHECKED_UNKNOWN_TYPE]
[JSTypeNative]
[getPossibleToBooleanOutcomes, (, )]
[literals, ., contains, (, outcome, )]
[literals]
[outcome]
[this]
[getNativeType, (, JSTypeNative, ., NO_TYPE, )]
[JSTypeNative, ., NO_TYPE]
[JSTypeNative]
[that, ., isUnionType, (, )]
[that]
[that, ., toMaybeUnionType, (, ), ., getTypesUnderEquality, (, this, )]
[that, ., toMaybeUnionType, (, )]
[that]
[this]
[new, TypePair, (, p, ., typeB, ,, p, ., typeA, )]
[p, ., typeB]
[p]
[p, ., typeA]
[p]
[testForEquality, (, that, )]
[that]
[FALSE]
[new, TypePair, (, null, ,, null, )]
[null]
[null]
[TRUE]
[UNKNOWN]
[new, TypePair, (, this, ,, that, )]
[this]
[that]
[new, IllegalStateException, (, )]
[that, ., isUnionType, (, )]
[that]
[that, ., toMaybeUnionType, (, ), ., getTypesUnderInequality, (, this, )]
[that, ., toMaybeUnionType, (, )]
[that]
[this]
[new, TypePair, (, p, ., typeB, ,, p, ., typeA, )]
[p, ., typeB]
[p]
[p, ., typeA]
[p]
[testForEquality, (, that, )]
[that]
[TRUE]
[getNativeType, (, JSTypeNative, ., NO_TYPE, )]
[JSTypeNative, ., NO_TYPE]
[JSTypeNative]
[new, TypePair, (, noType, ,, noType, )]
[noType]
[noType]
[FALSE]
[UNKNOWN]
[new, TypePair, (, this, ,, that, )]
[this]
[that]
[new, IllegalStateException, (, )]
[getGreatestSubtype, (, that, )]
[that]
[new, TypePair, (, commonType, ,, commonType, )]
[commonType]
[commonType]
[that, ., isUnionType, (, )]
[that]
[that, ., toMaybeUnionType, (, ), ., getTypesUnderShallowInequality, (, this, )]
[that, ., toMaybeUnionType, (, )]
[that]
[this]
[new, TypePair, (, p, ., typeB, ,, p, ., typeA, )]
[p, ., typeB]
[p]
[p, ., typeA]
[p]
[isNullType, (, ), &&, that, ., isNullType, (, ), ||, isVoidType, (, ), &&, that, ., isVoidType, (, )]
[isNullType, (, ), &&, that, ., isNullType, (, )]
[isNullType, (, )]
[that, ., isNullType, (, )]
[that]
[isVoidType, (, ), &&, that, ., isVoidType, (, )]
[isVoidType, (, )]
[that, ., isVoidType, (, )]
[that]
[new, TypePair, (, null, ,, null, )]
[null]
[null]
[new, TypePair, (, this, ,, that, )]
[this]
[that]
[this]
[isSubtypeHelper, (, this, ,, that, )]
[this]
[that]
[thatType, ., isUnknownType, (, )]
[thatType]
[true]
[thatType, ., isAllType, (, )]
[thatType]
[true]
[thisType, ., isEquivalentTo, (, thatType, )]
[thisType]
[thatType]
[true]
[thatType, ., isUnionType, (, )]
[thatType]
[thatType, ., toMaybeUnionType, (, )]
[thatType]
[union, ., alternates]
[union]
[thisType, ., isSubtype, (, element, )]
[thisType]
[element]
[true]
[false]
[thisType, ., isParameterizedType, (, )]
[thisType]
[thisType, ., toMaybeParameterizedType, (, ), ., isParameterizeSubtypeOf, (, thatType, )]
[thisType, ., toMaybeParameterizedType, (, )]
[thisType]
[thatType]
[thatType, instanceof, ProxyObjectType]
[thatType]
[thisType, ., isSubtype, (, (, (, ProxyObjectType, ), thatType, ), ., getReferencedTypeInternal, (, ), )]
[thisType]
[(, (, ProxyObjectType, ), thatType, ), ., getReferencedTypeInternal, (, )]
[(, (, ProxyObjectType, ), thatType, )]
[(, ProxyObjectType, ), thatType]
[thatType]
[false]
[registry, ., getResolveMode, (, )]
[registry]
[registry, ., setResolveMode, (, ResolveMode, ., IMMEDIATE, )]
[registry]
[ResolveMode, ., IMMEDIATE]
[ResolveMode]
[resolve, (, t, ,, scope, )]
[t]
[scope]
[registry, ., setResolveMode, (, oldResolveMode, )]
[registry]
[oldResolveMode]
[result]
[resolved]
[resolveResult, ==, null]
[resolveResult]
[null]
[registry, ., getNativeType, (, JSTypeNative, ., UNKNOWN_TYPE, )]
[registry]
[JSTypeNative, ., UNKNOWN_TYPE]
[JSTypeNative]
[resolveResult]
[resolved]
[true]
[resolveResult]
[resolveInternal, (, t, ,, scope, )]
[t]
[scope]
[resolveResult, ., setResolvedTypeInternal, (, resolveResult, )]
[resolveResult]
[resolveResult]
[resolveResult]
[resolveResult]
[type]
[resolved]
[true]
[resolved]
[resolved]
[false]
[resolveResult]
[null]
[type, ==, null, ?, null, :, type, ., resolve, (, t, ,, scope, )]
[type, ==, null]
[type]
[null]
[null]
[type, ., resolve, (, t, ,, scope, )]
[type]
[t]
[scope]
[validator, ., apply, (, this, )]
[validator]
[this]
[this, ., typeA]
[this]
[typeA]
[this, ., typeB]
[this]
[typeB]
[toStringHelper, (, false, )]
[false]
["{", +, hashCode, (, ), +, "}"]
["{", +, hashCode, (, )]
["{"]
[hashCode, (, )]
["}"]
[toStringHelper, (, true, )]
[true]
