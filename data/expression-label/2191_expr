[8372008692127477443L]
[new, Font, (, "Tahoma", ,, Font, ., BOLD, ,, 12, )]
["Tahoma"]
[Font, ., BOLD]
[Font]
[12]
[Color, ., black]
[Color]
[false]
[Integer, ., MAX_VALUE]
[Integer]
[""]
[text]
[TextTitle, ., DEFAULT_FONT]
[TextTitle]
[TextTitle, ., DEFAULT_TEXT_PAINT]
[TextTitle]
[Title, ., DEFAULT_POSITION]
[Title]
[Title, ., DEFAULT_HORIZONTAL_ALIGNMENT]
[Title]
[Title, ., DEFAULT_VERTICAL_ALIGNMENT]
[Title]
[Title, ., DEFAULT_PADDING]
[Title]
[text]
[font]
[TextTitle, ., DEFAULT_TEXT_PAINT]
[TextTitle]
[Title, ., DEFAULT_POSITION]
[Title]
[Title, ., DEFAULT_HORIZONTAL_ALIGNMENT]
[Title]
[Title, ., DEFAULT_VERTICAL_ALIGNMENT]
[Title]
[Title, ., DEFAULT_PADDING]
[Title]
[position]
[horizontalAlignment]
[verticalAlignment]
[padding]
[text, ==, null]
[text]
[null]
[new, NullPointerException, (, "Null 'text' argument.", )]
["Null 'text' argument."]
[font, ==, null]
[font]
[null]
[new, NullPointerException, (, "Null 'font' argument.", )]
["Null 'font' argument."]
[paint, ==, null]
[paint]
[null]
[new, NullPointerException, (, "Null 'paint' argument.", )]
["Null 'paint' argument."]
[this, ., text]
[this]
[text]
[this, ., font]
[this]
[font]
[this, ., paint]
[this]
[paint]
[this, ., textAlignment]
[this]
[horizontalAlignment]
[this, ., backgroundPaint]
[this]
[null]
[this, ., content]
[this]
[null]
[this, ., toolTipText]
[this]
[null]
[this, ., urlText]
[this]
[null]
[this, ., text]
[this]
[text, ==, null]
[text]
[null]
[new, IllegalArgumentException, (, "Null 'text' argument.", )]
["Null 'text' argument."]
[!, this, ., text, ., equals, (, text, )]
[this, ., text, ., equals, (, text, )]
[this, ., text]
[this]
[text]
[this, ., text]
[this]
[text]
[notifyListeners, (, new, TitleChangeEvent, (, this, ), )]
[new, TitleChangeEvent, (, this, )]
[this]
[this, ., textAlignment]
[this]
[alignment, ==, null]
[alignment]
[null]
[new, IllegalArgumentException, (, "Null 'alignment' argument.", )]
["Null 'alignment' argument."]
[this, ., textAlignment]
[this]
[alignment]
[notifyListeners, (, new, TitleChangeEvent, (, this, ), )]
[new, TitleChangeEvent, (, this, )]
[this]
[this, ., font]
[this]
[font, ==, null]
[font]
[null]
[new, IllegalArgumentException, (, "Null 'font' argument.", )]
["Null 'font' argument."]
[!, this, ., font, ., equals, (, font, )]
[this, ., font, ., equals, (, font, )]
[this, ., font]
[this]
[font]
[this, ., font]
[this]
[font]
[notifyListeners, (, new, TitleChangeEvent, (, this, ), )]
[new, TitleChangeEvent, (, this, )]
[this]
[this, ., paint]
[this]
[paint, ==, null]
[paint]
[null]
[new, IllegalArgumentException, (, "Null 'paint' argument.", )]
["Null 'paint' argument."]
[!, this, ., paint, ., equals, (, paint, )]
[this, ., paint, ., equals, (, paint, )]
[this, ., paint]
[this]
[paint]
[this, ., paint]
[this]
[paint]
[notifyListeners, (, new, TitleChangeEvent, (, this, ), )]
[new, TitleChangeEvent, (, this, )]
[this]
[this, ., backgroundPaint]
[this]
[this, ., backgroundPaint]
[this]
[paint]
[notifyListeners, (, new, TitleChangeEvent, (, this, ), )]
[new, TitleChangeEvent, (, this, )]
[this]
[this, ., toolTipText]
[this]
[this, ., toolTipText]
[this]
[text]
[notifyListeners, (, new, TitleChangeEvent, (, this, ), )]
[new, TitleChangeEvent, (, this, )]
[this]
[this, ., urlText]
[this]
[this, ., urlText]
[this]
[text]
[notifyListeners, (, new, TitleChangeEvent, (, this, ), )]
[new, TitleChangeEvent, (, this, )]
[this]
[this, ., expandToFitSpace]
[this]
[this, ., expandToFitSpace]
[this]
[expand]
[notifyListeners, (, new, TitleChangeEvent, (, this, ), )]
[new, TitleChangeEvent, (, this, )]
[this]
[this, ., maximumLinesToDisplay]
[this]
[this, ., maximumLinesToDisplay]
[this]
[max]
[notifyListeners, (, new, TitleChangeEvent, (, this, ), )]
[new, TitleChangeEvent, (, this, )]
[this]
[toContentConstraint, (, constraint, )]
[constraint]
[cc, ., getWidthConstraintType, (, )]
[cc]
[cc, ., getHeightConstraintType, (, )]
[cc]
[null]
[w, ==, LengthConstraintType, ., NONE]
[w]
[LengthConstraintType, ., NONE]
[LengthConstraintType]
[h, ==, LengthConstraintType, ., NONE]
[h]
[LengthConstraintType, ., NONE]
[LengthConstraintType]
[contentSize]
[arrangeNN, (, g2, )]
[g2]
[h, ==, LengthConstraintType, ., RANGE]
[h]
[LengthConstraintType, ., RANGE]
[LengthConstraintType]
[new, RuntimeException, (, "Not yet implemented.", )]
["Not yet implemented."]
[h, ==, LengthConstraintType, ., FIXED]
[h]
[LengthConstraintType, ., FIXED]
[LengthConstraintType]
[new, RuntimeException, (, "Not yet implemented.", )]
["Not yet implemented."]
[w, ==, LengthConstraintType, ., RANGE]
[w]
[LengthConstraintType, ., RANGE]
[LengthConstraintType]
[h, ==, LengthConstraintType, ., NONE]
[h]
[LengthConstraintType, ., NONE]
[LengthConstraintType]
[contentSize]
[arrangeRN, (, g2, ,, cc, ., getWidthRange, (, ), )]
[g2]
[cc, ., getWidthRange, (, )]
[cc]
[h, ==, LengthConstraintType, ., RANGE]
[h]
[LengthConstraintType, ., RANGE]
[LengthConstraintType]
[contentSize]
[arrangeRR, (, g2, ,, cc, ., getWidthRange, (, ), ,, cc, ., getHeightRange, (, ), )]
[g2]
[cc, ., getWidthRange, (, )]
[cc]
[cc, ., getHeightRange, (, )]
[cc]
[h, ==, LengthConstraintType, ., FIXED]
[h]
[LengthConstraintType, ., FIXED]
[LengthConstraintType]
[new, RuntimeException, (, "Not yet implemented.", )]
["Not yet implemented."]
[w, ==, LengthConstraintType, ., FIXED]
[w]
[LengthConstraintType, ., FIXED]
[LengthConstraintType]
[h, ==, LengthConstraintType, ., NONE]
[h]
[LengthConstraintType, ., NONE]
[LengthConstraintType]
[contentSize]
[arrangeFN, (, g2, ,, cc, ., getWidth, (, ), )]
[g2]
[cc, ., getWidth, (, )]
[cc]
[h, ==, LengthConstraintType, ., RANGE]
[h]
[LengthConstraintType, ., RANGE]
[LengthConstraintType]
[new, RuntimeException, (, "Not yet implemented.", )]
["Not yet implemented."]
[h, ==, LengthConstraintType, ., FIXED]
[h]
[LengthConstraintType, ., FIXED]
[LengthConstraintType]
[new, RuntimeException, (, "Not yet implemented.", )]
["Not yet implemented."]
[new, Size2D, (, calculateTotalWidth, (, contentSize, ., getWidth, (, ), ), ,, calculateTotalHeight, (, contentSize, ., getHeight, (, ), ), )]
[calculateTotalWidth, (, contentSize, ., getWidth, (, ), )]
[contentSize, ., getWidth, (, )]
[contentSize]
[calculateTotalHeight, (, contentSize, ., getHeight, (, ), )]
[contentSize, ., getHeight, (, )]
[contentSize]
[new, Range, (, 0.0, ,, Float, ., MAX_VALUE, )]
[0.0]
[Float, ., MAX_VALUE]
[Float]
[arrangeRR, (, g2, ,, max, ,, max, )]
[g2]
[max]
[max]
[getPosition, (, )]
[position, ==, RectangleEdge, ., TOP, ||, position, ==, RectangleEdge, ., BOTTOM]
[position, ==, RectangleEdge, ., TOP]
[position]
[RectangleEdge, ., TOP]
[RectangleEdge]
[position, ==, RectangleEdge, ., BOTTOM]
[position]
[RectangleEdge, ., BOTTOM]
[RectangleEdge]
[(, float, ), w]
[w]
[g2, ., setFont, (, this, ., font, )]
[g2]
[this, ., font]
[this]
[this, ., content]
[this]
[TextUtilities, ., createTextBlock, (, this, ., text, ,, this, ., font, ,, this, ., paint, ,, maxWidth, ,, this, ., maximumLinesToDisplay, ,, new, G2TextMeasurer, (, g2, ), )]
[TextUtilities]
[this, ., text]
[this]
[this, ., font]
[this]
[this, ., paint]
[this]
[maxWidth]
[this, ., maximumLinesToDisplay]
[this]
[new, G2TextMeasurer, (, g2, )]
[g2]
[this, ., content, ., setLineAlignment, (, this, ., textAlignment, )]
[this, ., content]
[this]
[this, ., textAlignment]
[this]
[this, ., content, ., calculateDimensions, (, g2, )]
[this, ., content]
[this]
[g2]
[this, ., expandToFitSpace]
[this]
[new, Size2D, (, maxWidth, ,, contentSize, ., getHeight, (, ), )]
[maxWidth]
[contentSize, ., getHeight, (, )]
[contentSize]
[contentSize]
[position, ==, RectangleEdge, ., LEFT, ||, position, ==, RectangleEdge, ., RIGHT]
[position, ==, RectangleEdge, ., LEFT]
[position]
[RectangleEdge, ., LEFT]
[RectangleEdge]
[position, ==, RectangleEdge, ., RIGHT]
[position]
[RectangleEdge, ., RIGHT]
[RectangleEdge]
[Float, ., MAX_VALUE]
[Float]
[g2, ., setFont, (, this, ., font, )]
[g2]
[this, ., font]
[this]
[this, ., content]
[this]
[TextUtilities, ., createTextBlock, (, this, ., text, ,, this, ., font, ,, this, ., paint, ,, maxWidth, ,, this, ., maximumLinesToDisplay, ,, new, G2TextMeasurer, (, g2, ), )]
[TextUtilities]
[this, ., text]
[this]
[this, ., font]
[this]
[this, ., paint]
[this]
[maxWidth]
[this, ., maximumLinesToDisplay]
[this]
[new, G2TextMeasurer, (, g2, )]
[g2]
[this, ., content, ., setLineAlignment, (, this, ., textAlignment, )]
[this, ., content]
[this]
[this, ., textAlignment]
[this]
[this, ., content, ., calculateDimensions, (, g2, )]
[this, ., content]
[this]
[g2]
[this, ., expandToFitSpace]
[this]
[new, Size2D, (, contentSize, ., getHeight, (, ), ,, maxWidth, )]
[contentSize, ., getHeight, (, )]
[contentSize]
[maxWidth]
[new, Size2D, (, contentSize, ., height, ,, contentSize, ., width, )]
[contentSize, ., height]
[contentSize]
[contentSize, ., width]
[contentSize]
[new, RuntimeException, (, "Unrecognised exception.", )]
["Unrecognised exception."]
[arrangeNN, (, g2, )]
[g2]
[widthRange, ., contains, (, s, ., getWidth, (, ), )]
[widthRange]
[s, ., getWidth, (, )]
[s]
[s]
[widthRange, ., constrain, (, s, ., getWidth, (, ), )]
[widthRange]
[s, ., getWidth, (, )]
[s]
[arrangeFN, (, g2, ,, ww, )]
[g2]
[ww]
[getPosition, (, )]
[position, ==, RectangleEdge, ., TOP, ||, position, ==, RectangleEdge, ., BOTTOM]
[position, ==, RectangleEdge, ., TOP]
[position]
[RectangleEdge, ., TOP]
[RectangleEdge]
[position, ==, RectangleEdge, ., BOTTOM]
[position]
[RectangleEdge, ., BOTTOM]
[RectangleEdge]
[(, float, ), widthRange, ., getUpperBound, (, )]
[widthRange, ., getUpperBound, (, )]
[widthRange]
[g2, ., setFont, (, this, ., font, )]
[g2]
[this, ., font]
[this]
[this, ., content]
[this]
[TextUtilities, ., createTextBlock, (, this, ., text, ,, this, ., font, ,, this, ., paint, ,, maxWidth, ,, this, ., maximumLinesToDisplay, ,, new, G2TextMeasurer, (, g2, ), )]
[TextUtilities]
[this, ., text]
[this]
[this, ., font]
[this]
[this, ., paint]
[this]
[maxWidth]
[this, ., maximumLinesToDisplay]
[this]
[new, G2TextMeasurer, (, g2, )]
[g2]
[this, ., content, ., setLineAlignment, (, this, ., textAlignment, )]
[this, ., content]
[this]
[this, ., textAlignment]
[this]
[this, ., content, ., calculateDimensions, (, g2, )]
[this, ., content]
[this]
[g2]
[this, ., expandToFitSpace]
[this]
[new, Size2D, (, maxWidth, ,, contentSize, ., getHeight, (, ), )]
[maxWidth]
[contentSize, ., getHeight, (, )]
[contentSize]
[contentSize]
[position, ==, RectangleEdge, ., LEFT, ||, position, ==, RectangleEdge, ., RIGHT]
[position, ==, RectangleEdge, ., LEFT]
[position]
[RectangleEdge, ., LEFT]
[RectangleEdge]
[position, ==, RectangleEdge, ., RIGHT]
[position]
[RectangleEdge, ., RIGHT]
[RectangleEdge]
[(, float, ), heightRange, ., getUpperBound, (, )]
[heightRange, ., getUpperBound, (, )]
[heightRange]
[g2, ., setFont, (, this, ., font, )]
[g2]
[this, ., font]
[this]
[this, ., content]
[this]
[TextUtilities, ., createTextBlock, (, this, ., text, ,, this, ., font, ,, this, ., paint, ,, maxWidth, ,, this, ., maximumLinesToDisplay, ,, new, G2TextMeasurer, (, g2, ), )]
[TextUtilities]
[this, ., text]
[this]
[this, ., font]
[this]
[this, ., paint]
[this]
[maxWidth]
[this, ., maximumLinesToDisplay]
[this]
[new, G2TextMeasurer, (, g2, )]
[g2]
[this, ., content, ., setLineAlignment, (, this, ., textAlignment, )]
[this, ., content]
[this]
[this, ., textAlignment]
[this]
[this, ., content, ., calculateDimensions, (, g2, )]
[this, ., content]
[this]
[g2]
[this, ., expandToFitSpace]
[this]
[new, Size2D, (, contentSize, ., getHeight, (, ), ,, maxWidth, )]
[contentSize, ., getHeight, (, )]
[contentSize]
[maxWidth]
[new, Size2D, (, contentSize, ., height, ,, contentSize, ., width, )]
[contentSize, ., height]
[contentSize]
[contentSize, ., width]
[contentSize]
[new, RuntimeException, (, "Unrecognised exception.", )]
["Unrecognised exception."]
[draw, (, g2, ,, area, ,, null, )]
[g2]
[area]
[null]
[this, ., content, ==, null]
[this, ., content]
[this]
[null]
[null]
[area]
[trimMargin, (, area, )]
[area]
[drawBorder, (, g2, ,, area, )]
[g2]
[area]
[this, ., text, ., equals, (, "", )]
[this, ., text]
[this]
[""]
[null]
[null]
[params, instanceof, EntityBlockParams]
[params]
[(, EntityBlockParams, ), params]
[params]
[p, ., getGenerateEntities, (, )]
[p]
[entity]
[new, TitleEntity, (, area, ,, this, ,, this, ., toolTipText, ,, this, ., urlText, )]
[area]
[this]
[this, ., toolTipText]
[this]
[this, ., urlText]
[this]
[area]
[trimBorder, (, area, )]
[area]
[this, ., backgroundPaint, !=, null]
[this, ., backgroundPaint]
[this]
[null]
[g2, ., setPaint, (, this, ., backgroundPaint, )]
[g2]
[this, ., backgroundPaint]
[this]
[g2, ., fill, (, area, )]
[g2]
[area]
[area]
[trimPadding, (, area, )]
[area]
[getPosition, (, )]
[position, ==, RectangleEdge, ., TOP, ||, position, ==, RectangleEdge, ., BOTTOM]
[position, ==, RectangleEdge, ., TOP]
[position]
[RectangleEdge, ., TOP]
[RectangleEdge]
[position, ==, RectangleEdge, ., BOTTOM]
[position]
[RectangleEdge, ., BOTTOM]
[RectangleEdge]
[drawHorizontal, (, g2, ,, area, )]
[g2]
[area]
[position, ==, RectangleEdge, ., LEFT, ||, position, ==, RectangleEdge, ., RIGHT]
[position, ==, RectangleEdge, ., LEFT]
[position]
[RectangleEdge, ., LEFT]
[RectangleEdge]
[position, ==, RectangleEdge, ., RIGHT]
[position]
[RectangleEdge, ., RIGHT]
[RectangleEdge]
[drawVertical, (, g2, ,, area, )]
[g2]
[area]
[new, BlockResult, (, )]
[entity, !=, null]
[entity]
[null]
[new, StandardEntityCollection, (, )]
[sec, ., add, (, entity, )]
[sec]
[entity]
[result, ., setEntityCollection, (, sec, )]
[result]
[sec]
[result]
[(, Rectangle2D, ), area, ., clone, (, )]
[area, ., clone, (, )]
[area]
[g2, ., setFont, (, this, ., font, )]
[g2]
[this, ., font]
[this]
[g2, ., setPaint, (, this, ., paint, )]
[g2]
[this, ., paint]
[this]
[null]
[0.0f]
[getHorizontalAlignment, (, )]
[horizontalAlignment, ==, HorizontalAlignment, ., LEFT]
[horizontalAlignment]
[HorizontalAlignment, ., LEFT]
[HorizontalAlignment]
[x]
[(, float, ), titleArea, ., getX, (, )]
[titleArea, ., getX, (, )]
[titleArea]
[anchor]
[TextBlockAnchor, ., TOP_LEFT]
[TextBlockAnchor]
[horizontalAlignment, ==, HorizontalAlignment, ., RIGHT]
[horizontalAlignment]
[HorizontalAlignment, ., RIGHT]
[HorizontalAlignment]
[x]
[(, float, ), titleArea, ., getMaxX, (, )]
[titleArea, ., getMaxX, (, )]
[titleArea]
[anchor]
[TextBlockAnchor, ., TOP_RIGHT]
[TextBlockAnchor]
[horizontalAlignment, ==, HorizontalAlignment, ., CENTER]
[horizontalAlignment]
[HorizontalAlignment, ., CENTER]
[HorizontalAlignment]
[x]
[(, float, ), titleArea, ., getCenterX, (, )]
[titleArea, ., getCenterX, (, )]
[titleArea]
[anchor]
[TextBlockAnchor, ., TOP_CENTER]
[TextBlockAnchor]
[0.0f]
[getPosition, (, )]
[position, ==, RectangleEdge, ., TOP]
[position]
[RectangleEdge, ., TOP]
[RectangleEdge]
[y]
[(, float, ), titleArea, ., getY, (, )]
[titleArea, ., getY, (, )]
[titleArea]
[position, ==, RectangleEdge, ., BOTTOM]
[position]
[RectangleEdge, ., BOTTOM]
[RectangleEdge]
[y]
[(, float, ), titleArea, ., getMaxY, (, )]
[titleArea, ., getMaxY, (, )]
[titleArea]
[horizontalAlignment, ==, HorizontalAlignment, ., LEFT]
[horizontalAlignment]
[HorizontalAlignment, ., LEFT]
[HorizontalAlignment]
[anchor]
[TextBlockAnchor, ., BOTTOM_LEFT]
[TextBlockAnchor]
[horizontalAlignment, ==, HorizontalAlignment, ., CENTER]
[horizontalAlignment]
[HorizontalAlignment, ., CENTER]
[HorizontalAlignment]
[anchor]
[TextBlockAnchor, ., BOTTOM_CENTER]
[TextBlockAnchor]
[horizontalAlignment, ==, HorizontalAlignment, ., RIGHT]
[horizontalAlignment]
[HorizontalAlignment, ., RIGHT]
[HorizontalAlignment]
[anchor]
[TextBlockAnchor, ., BOTTOM_RIGHT]
[TextBlockAnchor]
[this, ., content, ., draw, (, g2, ,, x, ,, y, ,, anchor, )]
[this, ., content]
[this]
[g2]
[x]
[y]
[anchor]
[(, Rectangle2D, ), area, ., clone, (, )]
[area, ., clone, (, )]
[area]
[g2, ., setFont, (, this, ., font, )]
[g2]
[this, ., font]
[this]
[g2, ., setPaint, (, this, ., paint, )]
[g2]
[this, ., paint]
[this]
[null]
[0.0f]
[getVerticalAlignment, (, )]
[verticalAlignment, ==, VerticalAlignment, ., TOP]
[verticalAlignment]
[VerticalAlignment, ., TOP]
[VerticalAlignment]
[y]
[(, float, ), titleArea, ., getY, (, )]
[titleArea, ., getY, (, )]
[titleArea]
[anchor]
[TextBlockAnchor, ., TOP_RIGHT]
[TextBlockAnchor]
[verticalAlignment, ==, VerticalAlignment, ., BOTTOM]
[verticalAlignment]
[VerticalAlignment, ., BOTTOM]
[VerticalAlignment]
[y]
[(, float, ), titleArea, ., getMaxY, (, )]
[titleArea, ., getMaxY, (, )]
[titleArea]
[anchor]
[TextBlockAnchor, ., TOP_LEFT]
[TextBlockAnchor]
[verticalAlignment, ==, VerticalAlignment, ., CENTER]
[verticalAlignment]
[VerticalAlignment, ., CENTER]
[VerticalAlignment]
[y]
[(, float, ), titleArea, ., getCenterY, (, )]
[titleArea, ., getCenterY, (, )]
[titleArea]
[anchor]
[TextBlockAnchor, ., TOP_CENTER]
[TextBlockAnchor]
[0.0f]
[getPosition, (, )]
[position, ==, RectangleEdge, ., LEFT]
[position]
[RectangleEdge, ., LEFT]
[RectangleEdge]
[x]
[(, float, ), titleArea, ., getX, (, )]
[titleArea, ., getX, (, )]
[titleArea]
[position, ==, RectangleEdge, ., RIGHT]
[position]
[RectangleEdge, ., RIGHT]
[RectangleEdge]
[x]
[(, float, ), titleArea, ., getMaxX, (, )]
[titleArea, ., getMaxX, (, )]
[titleArea]
[verticalAlignment, ==, VerticalAlignment, ., TOP]
[verticalAlignment]
[VerticalAlignment, ., TOP]
[VerticalAlignment]
[anchor]
[TextBlockAnchor, ., BOTTOM_RIGHT]
[TextBlockAnchor]
[verticalAlignment, ==, VerticalAlignment, ., CENTER]
[verticalAlignment]
[VerticalAlignment, ., CENTER]
[VerticalAlignment]
[anchor]
[TextBlockAnchor, ., BOTTOM_CENTER]
[TextBlockAnchor]
[verticalAlignment, ==, VerticalAlignment, ., BOTTOM]
[verticalAlignment]
[VerticalAlignment, ., BOTTOM]
[VerticalAlignment]
[anchor]
[TextBlockAnchor, ., BOTTOM_LEFT]
[TextBlockAnchor]
[this, ., content, ., draw, (, g2, ,, x, ,, y, ,, anchor, ,, x, ,, y, ,, -, Math, ., PI, /, 2.0, )]
[this, ., content]
[this]
[g2]
[x]
[y]
[anchor]
[x]
[y]
[-, Math, ., PI, /, 2.0]
[-, Math, ., PI]
[Math, ., PI]
[Math]
[2.0]
[obj, ==, this]
[obj]
[this]
[true]
[!, (, obj, instanceof, TextTitle, )]
[(, obj, instanceof, TextTitle, )]
[obj, instanceof, TextTitle]
[obj]
[false]
[(, TextTitle, ), obj]
[obj]
[!, ObjectUtilities, ., equal, (, this, ., text, ,, that, ., text, )]
[ObjectUtilities, ., equal, (, this, ., text, ,, that, ., text, )]
[ObjectUtilities]
[this, ., text]
[this]
[that, ., text]
[that]
[false]
[!, ObjectUtilities, ., equal, (, this, ., font, ,, that, ., font, )]
[ObjectUtilities, ., equal, (, this, ., font, ,, that, ., font, )]
[ObjectUtilities]
[this, ., font]
[this]
[that, ., font]
[that]
[false]
[!, PaintUtilities, ., equal, (, this, ., paint, ,, that, ., paint, )]
[PaintUtilities, ., equal, (, this, ., paint, ,, that, ., paint, )]
[PaintUtilities]
[this, ., paint]
[this]
[that, ., paint]
[that]
[false]
[this, ., textAlignment, !=, that, ., textAlignment]
[this, ., textAlignment]
[this]
[that, ., textAlignment]
[that]
[false]
[!, PaintUtilities, ., equal, (, this, ., backgroundPaint, ,, that, ., backgroundPaint, )]
[PaintUtilities, ., equal, (, this, ., backgroundPaint, ,, that, ., backgroundPaint, )]
[PaintUtilities]
[this, ., backgroundPaint]
[this]
[that, ., backgroundPaint]
[that]
[false]
[this, ., maximumLinesToDisplay, !=, that, ., maximumLinesToDisplay]
[this, ., maximumLinesToDisplay]
[this]
[that, ., maximumLinesToDisplay]
[that]
[false]
[this, ., expandToFitSpace, !=, that, ., expandToFitSpace]
[this, ., expandToFitSpace]
[this]
[that, ., expandToFitSpace]
[that]
[false]
[!, ObjectUtilities, ., equal, (, this, ., toolTipText, ,, that, ., toolTipText, )]
[ObjectUtilities, ., equal, (, this, ., toolTipText, ,, that, ., toolTipText, )]
[ObjectUtilities]
[this, ., toolTipText]
[this]
[that, ., toolTipText]
[that]
[false]
[!, ObjectUtilities, ., equal, (, this, ., urlText, ,, that, ., urlText, )]
[ObjectUtilities, ., equal, (, this, ., urlText, ,, that, ., urlText, )]
[ObjectUtilities]
[this, ., urlText]
[this]
[that, ., urlText]
[that]
[false]
[super, ., equals, (, obj, )]
[super]
[obj]
[super, ., hashCode, (, )]
[super]
[result]
[29, *, result, +, (, this, ., text, !=, null, ?, this, ., text, ., hashCode, (, ), :, 0, )]
[29, *, result]
[29]
[result]
[(, this, ., text, !=, null, ?, this, ., text, ., hashCode, (, ), :, 0, )]
[this, ., text, !=, null, ?, this, ., text, ., hashCode, (, ), :, 0]
[this, ., text, !=, null]
[this, ., text]
[this]
[null]
[this, ., text, ., hashCode, (, )]
[this, ., text]
[this]
[0]
[result]
[29, *, result, +, (, this, ., font, !=, null, ?, this, ., font, ., hashCode, (, ), :, 0, )]
[29, *, result]
[29]
[result]
[(, this, ., font, !=, null, ?, this, ., font, ., hashCode, (, ), :, 0, )]
[this, ., font, !=, null, ?, this, ., font, ., hashCode, (, ), :, 0]
[this, ., font, !=, null]
[this, ., font]
[this]
[null]
[this, ., font, ., hashCode, (, )]
[this, ., font]
[this]
[0]
[result]
[29, *, result, +, (, this, ., paint, !=, null, ?, this, ., paint, ., hashCode, (, ), :, 0, )]
[29, *, result]
[29]
[result]
[(, this, ., paint, !=, null, ?, this, ., paint, ., hashCode, (, ), :, 0, )]
[this, ., paint, !=, null, ?, this, ., paint, ., hashCode, (, ), :, 0]
[this, ., paint, !=, null]
[this, ., paint]
[this]
[null]
[this, ., paint, ., hashCode, (, )]
[this, ., paint]
[this]
[0]
[result]
[29, *, result, +, (, this, ., backgroundPaint, !=, null, ?, this, ., backgroundPaint, ., hashCode, (, ), :, 0, )]
[29, *, result]
[29]
[result]
[(, this, ., backgroundPaint, !=, null, ?, this, ., backgroundPaint, ., hashCode, (, ), :, 0, )]
[this, ., backgroundPaint, !=, null, ?, this, ., backgroundPaint, ., hashCode, (, ), :, 0]
[this, ., backgroundPaint, !=, null]
[this, ., backgroundPaint]
[this]
[null]
[this, ., backgroundPaint, ., hashCode, (, )]
[this, ., backgroundPaint]
[this]
[0]
[result]
[super, ., clone, (, )]
[super]
[stream, ., defaultWriteObject, (, )]
[stream]
[SerialUtilities, ., writePaint, (, this, ., paint, ,, stream, )]
[SerialUtilities]
[this, ., paint]
[this]
[stream]
[SerialUtilities, ., writePaint, (, this, ., backgroundPaint, ,, stream, )]
[SerialUtilities]
[this, ., backgroundPaint]
[this]
[stream]
[stream, ., defaultReadObject, (, )]
[stream]
[this, ., paint]
[this]
[SerialUtilities, ., readPaint, (, stream, )]
[SerialUtilities]
[stream]
[this, ., backgroundPaint]
[this]
[SerialUtilities, ., readPaint, (, stream, )]
[SerialUtilities]
[stream]
