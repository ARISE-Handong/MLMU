[new, Stack, <, Node, >, (, )]
[Preconditions, ., checkArgument, (, ancestors, ., length, >, 0, )]
[Preconditions]
[ancestors, ., length, >, 0]
[ancestors, ., length]
[ancestors]
[0]
[ancestors]
[n, ., isFunction, (, )]
[n]
[this, ., ancestors, ., add, (, 0, ,, n, )]
[this, ., ancestors]
[this]
[0]
[n]
[!, (, ancestors, ., size, (, ), ==, 1, &&, ancestors, ., peek, (, ), ., getNext, (, ), ==, null, )]
[(, ancestors, ., size, (, ), ==, 1, &&, ancestors, ., peek, (, ), ., getNext, (, ), ==, null, )]
[ancestors, ., size, (, ), ==, 1, &&, ancestors, ., peek, (, ), ., getNext, (, ), ==, null]
[ancestors, ., size, (, ), ==, 1]
[ancestors, ., size, (, )]
[ancestors]
[1]
[ancestors, ., peek, (, ), ., getNext, (, ), ==, null]
[ancestors, ., peek, (, ), ., getNext, (, )]
[ancestors, ., peek, (, )]
[ancestors]
[null]
[ancestors, ., pop, (, )]
[ancestors]
[current, ., getNext, (, ), ==, null]
[current, ., getNext, (, )]
[current]
[null]
[current]
[ancestors, ., peek, (, )]
[ancestors]
[current, ., isFunction, (, )]
[current]
[next, (, )]
[current]
[current, ., getNext, (, )]
[current]
[ancestors, ., push, (, current, )]
[ancestors]
[current]
[current, ., isFunction, (, )]
[current]
[next, (, )]
[current, ., hasChildren, (, )]
[current]
[current]
[current, ., getFirstChild, (, )]
[current]
[ancestors, ., push, (, current, )]
[ancestors]
[current]
[current, ., isFunction, (, )]
[current]
[next, (, )]
[current]
[new, UnsupportedOperationException, (, "Not implemented", )]
["Not implemented"]
[ancestors, ., peek, (, )]
[ancestors]
[ancestors, ., size, (, ), >=, 2, ?, ancestors, ., get, (, ancestors, ., size, (, ), -, 2, ), :, null]
[ancestors, ., size, (, ), >=, 2]
[ancestors, ., size, (, )]
[ancestors]
[2]
[ancestors, ., get, (, ancestors, ., size, (, ), -, 2, )]
[ancestors]
[ancestors, ., size, (, ), -, 2]
[ancestors, ., size, (, )]
[ancestors]
[2]
[null]
[Lists, ., newArrayList, (, ancestors, )]
[Lists]
[ancestors]
[Collections, ., reverse, (, list, )]
[Collections]
[list]
[list]
[Preconditions, ., checkArgument, (, var, ., isVar, (, ), )]
[Preconditions]
[var, ., isVar, (, )]
[var]
[Preconditions, ., checkArgument, (, NodeUtil, ., isStatement, (, var, ), )]
[Preconditions]
[NodeUtil, ., isStatement, (, var, )]
[NodeUtil]
[var]
[new, LocalVarMotion, (, name, ,, new, FunctionlessLocalScope, (, name, ,, var, ,, block, ), )]
[name]
[new, FunctionlessLocalScope, (, name, ,, var, ,, block, )]
[name]
[var]
[block]
[Preconditions, ., checkArgument, (, assign, ., isAssign, (, ), )]
[Preconditions]
[assign, ., isAssign, (, )]
[assign]
[Preconditions, ., checkArgument, (, expr, ., isExprResult, (, ), )]
[Preconditions]
[expr, ., isExprResult, (, )]
[expr]
[new, LocalVarMotion, (, name, ,, new, FunctionlessLocalScope, (, assign, ,, expr, ,, block, ), )]
[name]
[new, FunctionlessLocalScope, (, assign, ,, expr, ,, block, )]
[assign]
[expr]
[block]
[Preconditions, ., checkArgument, (, nameNode, ., isName, (, ), )]
[Preconditions]
[nameNode, ., isName, (, )]
[nameNode]
[NodeUtil, ., getAssignedValue, (, nameNode, )]
[NodeUtil]
[nameNode]
[this, ., varName]
[this]
[nameNode, ., getString, (, )]
[nameNode]
[this, ., valueHasSideEffects]
[this]
[valueNode, !=, null, &&, NodeUtil, ., mayHaveSideEffects, (, valueNode, )]
[valueNode, !=, null]
[valueNode]
[null]
[NodeUtil, ., mayHaveSideEffects, (, valueNode, )]
[NodeUtil]
[valueNode]
[this, ., iterator]
[this]
[iterator]
[advanceLookAhead, (, true, )]
[true]
[lookAhead, !=, null]
[lookAhead]
[null]
[lookAhead]
[advanceLookAhead, (, false, )]
[false]
[next]
[new, UnsupportedOperationException, (, "Not implemented", )]
["Not implemented"]
[!, atStart]
[atStart]
[lookAhead, ==, null]
[lookAhead]
[null]
[iterator, ., current, (, )]
[iterator]
[curNode, ., isName, (, ), &&, varName, ., equals, (, curNode, ., getString, (, ), )]
[curNode, ., isName, (, )]
[curNode]
[varName, ., equals, (, curNode, ., getString, (, ), )]
[varName]
[curNode, ., getString, (, )]
[curNode]
[lookAhead]
[null]
[!, iterator, ., hasNext, (, )]
[iterator, ., hasNext, (, )]
[iterator]
[lookAhead]
[null]
[iterator, ., next, (, )]
[iterator]
[iterator, ., currentParent, (, )]
[iterator]
[nextNode, ., getType, (, )]
[nextNode]
[valueHasSideEffects]
[false]
[(, nextNode, ., isName, (, ), &&, !, varName, ., equals, (, nextNode, ., getString, (, ), ), ), ||, (, nextNode, ., isGetProp, (, ), ||, nextNode, ., isGetElem, (, ), )]
[(, nextNode, ., isName, (, ), &&, !, varName, ., equals, (, nextNode, ., getString, (, ), ), )]
[nextNode, ., isName, (, ), &&, !, varName, ., equals, (, nextNode, ., getString, (, ), )]
[nextNode, ., isName, (, )]
[nextNode]
[!, varName, ., equals, (, nextNode, ., getString, (, ), )]
[varName, ., equals, (, nextNode, ., getString, (, ), )]
[varName]
[nextNode, ., getString, (, )]
[nextNode]
[(, nextNode, ., isGetProp, (, ), ||, nextNode, ., isGetElem, (, ), )]
[nextNode, ., isGetProp, (, ), ||, nextNode, ., isGetElem, (, )]
[nextNode, ., isGetProp, (, )]
[nextNode]
[nextNode, ., isGetElem, (, )]
[nextNode]
[nextParent, ==, null, ||, !, NodeUtil, ., isVarOrSimpleAssignLhs, (, nextNode, ,, nextParent, )]
[nextParent, ==, null]
[nextParent]
[null]
[!, NodeUtil, ., isVarOrSimpleAssignLhs, (, nextNode, ,, nextParent, )]
[NodeUtil, ., isVarOrSimpleAssignLhs, (, nextNode, ,, nextParent, )]
[NodeUtil]
[nextNode]
[nextParent]
[readsState]
[true]
[nextNode, ., isCall, (, ), ||, nextNode, ., isNew, (, )]
[nextNode, ., isCall, (, )]
[nextNode]
[nextNode, ., isNew, (, )]
[nextNode]
[readsState]
[true]
[readsState]
[lookAhead]
[null]
[NodeUtil, ., nodeTypeMayHaveSideEffects, (, nextNode, ), &&, type, !=, Token, ., NAME, ||, type, ==, Token, ., NAME, &&, nextParent, ., isCatch, (, )]
[NodeUtil, ., nodeTypeMayHaveSideEffects, (, nextNode, ), &&, type, !=, Token, ., NAME]
[NodeUtil, ., nodeTypeMayHaveSideEffects, (, nextNode, )]
[NodeUtil]
[nextNode]
[type, !=, Token, ., NAME]
[type]
[Token, ., NAME]
[Token]
[type, ==, Token, ., NAME, &&, nextParent, ., isCatch, (, )]
[type, ==, Token, ., NAME]
[type]
[Token, ., NAME]
[Token]
[nextParent, ., isCatch, (, )]
[nextParent]
[lookAhead]
[null]
[lookAhead]
[nextNode]
