[9386874258972L]
[2L, *, 365L, *, 86400L, *, 1000L]
[2L, *, 365L, *, 86400L]
[2L, *, 365L]
[2L]
[365L]
[86400L]
[1000L]
[start, ==, null, ||, end, ==, null]
[start, ==, null]
[start]
[null]
[end, ==, null]
[end]
[null]
[new, IllegalArgumentException, (, "ReadableInstant objects must not be null", )]
["ReadableInstant objects must not be null"]
[DateTimeUtils, ., getInstantChronology, (, start, )]
[DateTimeUtils]
[start]
[field, ., getField, (, chrono, ), ., getDifference, (, end, ., getMillis, (, ), ,, start, ., getMillis, (, ), )]
[field, ., getField, (, chrono, )]
[field]
[chrono]
[end, ., getMillis, (, )]
[end]
[start, ., getMillis, (, )]
[start]
[amount]
[start, ==, null, ||, end, ==, null]
[start, ==, null]
[start]
[null]
[end, ==, null]
[end]
[null]
[new, IllegalArgumentException, (, "ReadablePartial objects must not be null", )]
["ReadablePartial objects must not be null"]
[start, ., size, (, ), !=, end, ., size, (, )]
[start, ., size, (, )]
[start]
[end, ., size, (, )]
[end]
[new, IllegalArgumentException, (, "ReadablePartial objects must have the same set of fields", )]
["ReadablePartial objects must have the same set of fields"]
[0]
[start, ., size, (, )]
[start]
[i, <, isize]
[i]
[isize]
[i, ++]
[i]
[start, ., getFieldType, (, i, ), !=, end, ., getFieldType, (, i, )]
[start, ., getFieldType, (, i, )]
[start]
[i]
[end, ., getFieldType, (, i, )]
[end]
[i]
[new, IllegalArgumentException, (, "ReadablePartial objects must have the same set of fields", )]
["ReadablePartial objects must have the same set of fields"]
[DateTimeUtils, ., isContiguous, (, start, ), ==, false]
[DateTimeUtils, ., isContiguous, (, start, )]
[DateTimeUtils]
[start]
[false]
[new, IllegalArgumentException, (, "ReadablePartial objects must be contiguous", )]
["ReadablePartial objects must be contiguous"]
[DateTimeUtils, ., getChronology, (, start, ., getChronology, (, ), ), ., withUTC, (, )]
[DateTimeUtils, ., getChronology, (, start, ., getChronology, (, ), )]
[DateTimeUtils]
[start, ., getChronology, (, )]
[start]
[chrono, ., get, (, zeroInstance, ,, chrono, ., set, (, start, ,, START_1972, ), ,, chrono, ., set, (, end, ,, START_1972, ), )]
[chrono]
[zeroInstance]
[chrono, ., set, (, start, ,, START_1972, )]
[chrono]
[start]
[START_1972]
[chrono, ., set, (, end, ,, START_1972, )]
[chrono]
[end]
[START_1972]
[values, [, 0, ]]
[values]
[0]
[period, ==, null]
[period]
[null]
[0]
[ISOChronology, ., getInstanceUTC, (, )]
[ISOChronology]
[0L]
[0]
[i, <, period, ., size, (, )]
[i]
[period, ., size, (, )]
[period]
[i, ++]
[i]
[period, ., getValue, (, i, )]
[period]
[i]
[value, !=, 0]
[value]
[0]
[period, ., getFieldType, (, i, ), ., getField, (, iso, )]
[period, ., getFieldType, (, i, )]
[period]
[i]
[iso]
[field, ., isPrecise, (, ), ==, false]
[field, ., isPrecise, (, )]
[field]
[false]
[new, IllegalArgumentException, (, "Cannot convert period to duration as ", +, field, ., getName, (, ), +, " is not precise in the period ", +, period, )]
["Cannot convert period to duration as ", +, field, ., getName, (, ), +, " is not precise in the period ", +, period]
["Cannot convert period to duration as ", +, field, ., getName, (, ), +, " is not precise in the period "]
["Cannot convert period to duration as ", +, field, ., getName, (, )]
["Cannot convert period to duration as "]
[field, ., getName, (, )]
[field]
[" is not precise in the period "]
[period]
[duration]
[FieldUtils, ., safeAdd, (, duration, ,, FieldUtils, ., safeMultiply, (, field, ., getUnitMillis, (, ), ,, value, ), )]
[FieldUtils]
[duration]
[FieldUtils, ., safeMultiply, (, field, ., getUnitMillis, (, ), ,, value, )]
[FieldUtils]
[field, ., getUnitMillis, (, )]
[field]
[value]
[FieldUtils, ., safeToInt, (, duration, /, millisPerUnit, )]
[FieldUtils]
[duration, /, millisPerUnit]
[duration]
[millisPerUnit]
[iPeriod]
[period]
[iPeriod]
[iPeriod]
[value]
[1]
[index, !=, 0]
[index]
[0]
[new, IndexOutOfBoundsException, (, String, ., valueOf, (, index, ), )]
[String, ., valueOf, (, index, )]
[String]
[index]
[getFieldType, (, )]
[index, !=, 0]
[index]
[0]
[new, IndexOutOfBoundsException, (, String, ., valueOf, (, index, ), )]
[String, ., valueOf, (, index, )]
[String]
[index]
[getValue, (, )]
[type, ==, getFieldType, (, )]
[type]
[getFieldType, (, )]
[getValue, (, )]
[0]
[(, type, ==, getFieldType, (, ), )]
[type, ==, getFieldType, (, )]
[type]
[getFieldType, (, )]
[Period, ., ZERO, ., withFields, (, this, )]
[Period, ., ZERO]
[Period]
[this]
[new, MutablePeriod, (, )]
[period, ., add, (, this, )]
[period]
[this]
[period]
[this, ==, period]
[this]
[period]
[true]
[period, instanceof, ReadablePeriod, ==, false]
[period, instanceof, ReadablePeriod]
[period]
[false]
[false]
[(, ReadablePeriod, ), period]
[period]
[(, other, ., getPeriodType, (, ), ==, getPeriodType, (, ), &&, other, ., getValue, (, 0, ), ==, getValue, (, ), )]
[other, ., getPeriodType, (, ), ==, getPeriodType, (, ), &&, other, ., getValue, (, 0, ), ==, getValue, (, )]
[other, ., getPeriodType, (, ), ==, getPeriodType, (, )]
[other, ., getPeriodType, (, )]
[other]
[getPeriodType, (, )]
[other, ., getValue, (, 0, ), ==, getValue, (, )]
[other, ., getValue, (, 0, )]
[other]
[0]
[getValue, (, )]
[17]
[total]
[27, *, total, +, getValue, (, )]
[27, *, total]
[27]
[total]
[getValue, (, )]
[total]
[27, *, total, +, getFieldType, (, ), ., hashCode, (, )]
[27, *, total]
[27]
[total]
[getFieldType, (, ), ., hashCode, (, )]
[getFieldType, (, )]
[total]
[other, ., getClass, (, ), !=, getClass, (, )]
[other, ., getClass, (, )]
[other]
[getClass, (, )]
[new, ClassCastException, (, getClass, (, ), +, " cannot be compared to ", +, other, ., getClass, (, ), )]
[getClass, (, ), +, " cannot be compared to ", +, other, ., getClass, (, )]
[getClass, (, ), +, " cannot be compared to "]
[getClass, (, )]
[" cannot be compared to "]
[other, ., getClass, (, )]
[other]
[other, ., getValue, (, )]
[other]
[getValue, (, )]
[thisValue, >, otherValue]
[thisValue]
[otherValue]
[1]
[thisValue, <, otherValue]
[thisValue]
[otherValue]
[-, 1]
[1]
[0]
