[-, 5908509288197150436L]
[5908509288197150436L]
[Integer, ., MAX_VALUE]
[Integer]
[key]
[true]
[true]
[key]
[autoSort]
[true]
[key]
[this, ., data]
[this]
[new, java, ., util, ., ArrayList, (, )]
[this, ., autoSort]
[this]
[autoSort]
[this, ., allowDuplicateXValues]
[this]
[allowDuplicateXValues]
[this, ., minX]
[this]
[Double, ., NaN]
[Double]
[this, ., maxX]
[this]
[Double, ., NaN]
[Double]
[this, ., minY]
[this]
[Double, ., NaN]
[Double]
[this, ., maxY]
[this]
[Double, ., NaN]
[Double]
[this, ., minX]
[this]
[this, ., maxX]
[this]
[this, ., minY]
[this]
[this, ., maxY]
[this]
[item, ., getXValue, (, )]
[item]
[this, ., minX]
[this]
[minIgnoreNaN, (, this, ., minX, ,, x, )]
[this, ., minX]
[this]
[x]
[this, ., maxX]
[this]
[maxIgnoreNaN, (, this, ., maxX, ,, x, )]
[this, ., maxX]
[this]
[x]
[item, ., getY, (, ), !=, null]
[item, ., getY, (, )]
[item]
[null]
[item, ., getYValue, (, )]
[item]
[this, ., minY]
[this]
[minIgnoreNaN, (, this, ., minY, ,, y, )]
[this, ., minY]
[this]
[y]
[this, ., maxY]
[this]
[maxIgnoreNaN, (, this, ., maxY, ,, y, )]
[this, ., maxY]
[this]
[y]
[false]
[false]
[item, ., getXValue, (, )]
[item]
[!, Double, ., isNaN, (, x, )]
[Double, ., isNaN, (, x, )]
[Double]
[x]
[x, <=, this, ., minX, ||, x, >=, this, ., maxX]
[x, <=, this, ., minX]
[x]
[this, ., minX]
[this]
[x, >=, this, ., maxX]
[x]
[this, ., maxX]
[this]
[itemContributesToXBounds]
[true]
[item, ., getY, (, ), !=, null]
[item, ., getY, (, )]
[item]
[null]
[item, ., getYValue, (, )]
[item]
[!, Double, ., isNaN, (, y, )]
[Double, ., isNaN, (, y, )]
[Double]
[y]
[y, <=, this, ., minY, ||, y, >=, this, ., maxY]
[y, <=, this, ., minY]
[y]
[this, ., minY]
[this]
[y, >=, this, ., maxY]
[y]
[this, ., maxY]
[this]
[itemContributesToYBounds]
[true]
[itemContributesToYBounds]
[findBoundsByIteration, (, )]
[itemContributesToXBounds]
[getAutoSort, (, )]
[this, ., minX]
[this]
[getX, (, 0, ), ., doubleValue, (, )]
[getX, (, 0, )]
[0]
[this, ., maxX]
[this]
[getX, (, getItemCount, (, ), -, 1, ), ., doubleValue, (, )]
[getX, (, getItemCount, (, ), -, 1, )]
[getItemCount, (, ), -, 1]
[getItemCount, (, )]
[1]
[findBoundsByIteration, (, )]
[this, ., minX]
[this]
[Double, ., NaN]
[Double]
[this, ., maxX]
[this]
[Double, ., NaN]
[Double]
[this, ., minY]
[this]
[Double, ., NaN]
[Double]
[this, ., maxY]
[this]
[Double, ., NaN]
[Double]
[this, ., data, ., iterator, (, )]
[this, ., data]
[this]
[iterator, ., hasNext, (, )]
[iterator]
[(, XYDataItem, ), iterator, ., next, (, )]
[iterator, ., next, (, )]
[iterator]
[updateBoundsForAddedItem, (, item, )]
[item]
[this, ., autoSort]
[this]
[this, ., allowDuplicateXValues]
[this]
[this, ., data, ., size, (, )]
[this, ., data]
[this]
[Collections, ., unmodifiableList, (, this, ., data, )]
[Collections]
[this, ., data]
[this]
[this, ., maximumItemCount]
[this]
[this, ., maximumItemCount]
[this]
[maximum]
[this, ., data, ., size, (, ), -, maximum]
[this, ., data, ., size, (, )]
[this, ., data]
[this]
[maximum]
[remove, >, 0]
[remove]
[0]
[this, ., data, ., subList, (, 0, ,, remove, ), ., clear, (, )]
[this, ., data, ., subList, (, 0, ,, remove, )]
[this, ., data]
[this]
[0]
[remove]
[findBoundsByIteration, (, )]
[fireSeriesChanged, (, )]
[add, (, item, ,, true, )]
[item]
[true]
[add, (, new, Double, (, x, ), ,, new, Double, (, y, ), ,, true, )]
[new, Double, (, x, )]
[x]
[new, Double, (, y, )]
[y]
[true]
[add, (, new, Double, (, x, ), ,, new, Double, (, y, ), ,, notify, )]
[new, Double, (, x, )]
[x]
[new, Double, (, y, )]
[y]
[notify]
[add, (, new, Double, (, x, ), ,, y, )]
[new, Double, (, x, )]
[x]
[y]
[add, (, new, Double, (, x, ), ,, y, ,, notify, )]
[new, Double, (, x, )]
[x]
[y]
[notify]
[add, (, x, ,, y, ,, true, )]
[x]
[y]
[true]
[new, XYDataItem, (, x, ,, y, )]
[x]
[y]
[add, (, item, ,, notify, )]
[item]
[notify]
[item, ==, null]
[item]
[null]
[new, IllegalArgumentException, (, "Null 'item' argument.", )]
["Null 'item' argument."]
[item]
[(, XYDataItem, ), item, ., clone, (, )]
[item, ., clone, (, )]
[item]
[this, ., autoSort]
[this]
[Collections, ., binarySearch, (, this, ., data, ,, item, )]
[Collections]
[this, ., data]
[this]
[item]
[index, <, 0]
[index]
[0]
[this, ., data, ., add, (, -, index, -, 1, ,, item, )]
[this, ., data]
[this]
[-, index, -, 1]
[-, index]
[index]
[1]
[item]
[this, ., allowDuplicateXValues]
[this]
[this, ., data, ., size, (, )]
[this, ., data]
[this]
[index, <, size, &&, item, ., compareTo, (, this, ., data, ., get, (, index, ), ), ==, 0]
[index, <, size]
[index]
[size]
[item, ., compareTo, (, this, ., data, ., get, (, index, ), ), ==, 0]
[item, ., compareTo, (, this, ., data, ., get, (, index, ), )]
[item]
[this, ., data, ., get, (, index, )]
[this, ., data]
[this]
[index]
[0]
[index, ++]
[index]
[index, <, this, ., data, ., size, (, )]
[index]
[this, ., data, ., size, (, )]
[this, ., data]
[this]
[this, ., data, ., add, (, index, ,, item, )]
[this, ., data]
[this]
[index]
[item]
[this, ., data, ., add, (, item, )]
[this, ., data]
[this]
[item]
[new, SeriesException, (, "X-value already exists.", )]
["X-value already exists."]
[!, this, ., allowDuplicateXValues]
[this, ., allowDuplicateXValues]
[this]
[indexOf, (, item, ., getX, (, ), )]
[item, ., getX, (, )]
[item]
[index, >=, 0]
[index]
[0]
[new, SeriesException, (, "X-value already exists.", )]
["X-value already exists."]
[this, ., data, ., add, (, item, )]
[this, ., data]
[this]
[item]
[updateBoundsForAddedItem, (, item, )]
[item]
[getItemCount, (, ), >, this, ., maximumItemCount]
[getItemCount, (, )]
[this, ., maximumItemCount]
[this]
[(, XYDataItem, ), this, ., data, ., remove, (, 0, )]
[this, ., data, ., remove, (, 0, )]
[this, ., data]
[this]
[0]
[updateBoundsForRemovedItem, (, removed, )]
[removed]
[notify]
[fireSeriesChanged, (, )]
[this, ., data, ., subList, (, start, ,, end, +, 1, ), ., clear, (, )]
[this, ., data, ., subList, (, start, ,, end, +, 1, )]
[this, ., data]
[this]
[start]
[end, +, 1]
[end]
[1]
[findBoundsByIteration, (, )]
[fireSeriesChanged, (, )]
[(, XYDataItem, ), this, ., data, ., remove, (, index, )]
[this, ., data, ., remove, (, index, )]
[this, ., data]
[this]
[index]
[updateBoundsForRemovedItem, (, removed, )]
[removed]
[fireSeriesChanged, (, )]
[removed]
[remove, (, indexOf, (, x, ), )]
[indexOf, (, x, )]
[x]
[this, ., data, ., size, (, ), >, 0]
[this, ., data, ., size, (, )]
[this, ., data]
[this]
[0]
[this, ., data, ., clear, (, )]
[this, ., data]
[this]
[this, ., minX]
[this]
[Double, ., NaN]
[Double]
[this, ., maxX]
[this]
[Double, ., NaN]
[Double]
[this, ., minY]
[this]
[Double, ., NaN]
[Double]
[this, ., maxY]
[this]
[Double, ., NaN]
[Double]
[fireSeriesChanged, (, )]
[(, XYDataItem, ), this, ., data, ., get, (, index, )]
[this, ., data, ., get, (, index, )]
[this, ., data]
[this]
[index]
[(, XYDataItem, ), item, ., clone, (, )]
[item, ., clone, (, )]
[item]
[(, XYDataItem, ), this, ., data, ., get, (, index, )]
[this, ., data, ., get, (, index, )]
[this, ., data]
[this]
[index]
[getRawDataItem, (, index, ), ., getX, (, )]
[getRawDataItem, (, index, )]
[index]
[getRawDataItem, (, index, ), ., getY, (, )]
[getRawDataItem, (, index, )]
[index]
[getRawDataItem, (, index, )]
[index]
[false]
[item, ., getYValue, (, )]
[item]
[!, Double, ., isNaN, (, oldY, )]
[Double, ., isNaN, (, oldY, )]
[Double]
[oldY]
[iterate]
[oldY, <=, this, ., minY, ||, oldY, >=, this, ., maxY]
[oldY, <=, this, ., minY]
[oldY]
[this, ., minY]
[this]
[oldY, >=, this, ., maxY]
[oldY]
[this, ., maxY]
[this]
[item, ., setY, (, y, )]
[item]
[y]
[iterate]
[findBoundsByIteration, (, )]
[y, !=, null]
[y]
[null]
[y, ., doubleValue, (, )]
[y]
[this, ., minY]
[this]
[minIgnoreNaN, (, this, ., minY, ,, yy, )]
[this, ., minY]
[this]
[yy]
[this, ., maxY]
[this]
[maxIgnoreNaN, (, this, ., maxY, ,, yy, )]
[this, ., maxY]
[this]
[yy]
[fireSeriesChanged, (, )]
[Double, ., isNaN, (, a, )]
[Double]
[a]
[b]
[Double, ., isNaN, (, b, )]
[Double]
[b]
[a]
[Math, ., min, (, a, ,, b, )]
[Math]
[a]
[b]
[Double, ., isNaN, (, a, )]
[Double]
[a]
[b]
[Double, ., isNaN, (, b, )]
[Double]
[b]
[a]
[Math, ., max, (, a, ,, b, )]
[Math]
[a]
[b]
[indexOf, (, x, )]
[x]
[index, <, 0]
[index]
[0]
[new, SeriesException, (, "No observation for x = ", +, x, )]
["No observation for x = ", +, x]
["No observation for x = "]
[x]
[updateByIndex, (, index, ,, y, )]
[index]
[y]
[addOrUpdate, (, new, Double, (, x, ), ,, new, Double, (, y, ), )]
[new, Double, (, x, )]
[x]
[new, Double, (, y, )]
[y]
[addOrUpdate, (, new, XYDataItem, (, x, ,, y, ), )]
[new, XYDataItem, (, x, ,, y, )]
[x]
[y]
[item, ==, null]
[item]
[null]
[new, IllegalArgumentException, (, "Null 'item' argument.", )]
["Null 'item' argument."]
[this, ., allowDuplicateXValues]
[this]
[add, (, item, )]
[item]
[null]
[null]
[indexOf, (, item, ., getX, (, ), )]
[item, ., getX, (, )]
[item]
[index, >=, 0]
[index]
[0]
[(, XYDataItem, ), this, ., data, ., get, (, index, )]
[this, ., data, ., get, (, index, )]
[this, ., data]
[this]
[index]
[overwritten]
[(, XYDataItem, ), existing, ., clone, (, )]
[existing, ., clone, (, )]
[existing]
[false]
[existing, ., getYValue, (, )]
[existing]
[!, Double, ., isNaN, (, oldY, )]
[Double, ., isNaN, (, oldY, )]
[Double]
[oldY]
[iterate]
[oldY, <=, this, ., minY, ||, oldY, >=, this, ., maxY]
[oldY, <=, this, ., minY]
[oldY]
[this, ., minY]
[this]
[oldY, >=, this, ., maxY]
[oldY]
[this, ., maxY]
[this]
[existing, ., setY, (, item, ., getY, (, ), )]
[existing]
[item, ., getY, (, )]
[item]
[iterate]
[findBoundsByIteration, (, )]
[item, ., getY, (, ), !=, null]
[item, ., getY, (, )]
[item]
[null]
[item, ., getY, (, ), ., doubleValue, (, )]
[item, ., getY, (, )]
[item]
[this, ., minY]
[this]
[minIgnoreNaN, (, this, ., minY, ,, yy, )]
[this, ., minY]
[this]
[yy]
[this, ., maxY]
[this]
[minIgnoreNaN, (, this, ., maxY, ,, yy, )]
[this, ., maxY]
[this]
[yy]
[item]
[(, XYDataItem, ), item, ., clone, (, )]
[item, ., clone, (, )]
[item]
[this, ., autoSort]
[this]
[this, ., data, ., add, (, -, index, -, 1, ,, item, )]
[this, ., data]
[this]
[-, index, -, 1]
[-, index]
[index]
[1]
[item]
[this, ., data, ., add, (, item, )]
[this, ., data]
[this]
[item]
[updateBoundsForAddedItem, (, item, )]
[item]
[getItemCount, (, ), >, this, ., maximumItemCount]
[getItemCount, (, )]
[this, ., maximumItemCount]
[this]
[(, XYDataItem, ), this, ., data, ., remove, (, 0, )]
[this, ., data, ., remove, (, 0, )]
[this, ., data]
[this]
[0]
[updateBoundsForRemovedItem, (, removed, )]
[removed]
[fireSeriesChanged, (, )]
[overwritten]
[this, ., autoSort]
[this]
[Collections, ., binarySearch, (, this, ., data, ,, new, XYDataItem, (, x, ,, null, ), )]
[Collections]
[this, ., data]
[this]
[new, XYDataItem, (, x, ,, null, )]
[x]
[null]
[0]
[i, <, this, ., data, ., size, (, )]
[i]
[this, ., data, ., size, (, )]
[this, ., data]
[this]
[i, ++]
[i]
[(, XYDataItem, ), this, ., data, ., get, (, i, )]
[this, ., data, ., get, (, i, )]
[this, ., data]
[this]
[i]
[item, ., getX, (, ), ., equals, (, x, )]
[item, ., getX, (, )]
[item]
[x]
[i]
[-, 1]
[1]
[getItemCount, (, )]
[new, double, [, 2, ], [, itemCount, ]]
[2]
[itemCount]
[0]
[i, <, itemCount]
[i]
[itemCount]
[i, ++]
[i]
[result, [, 0, ], [, i, ]]
[result, [, 0, ]]
[result]
[0]
[i]
[this, ., getX, (, i, ), ., doubleValue, (, )]
[this, ., getX, (, i, )]
[this]
[i]
[getY, (, i, )]
[i]
[y, !=, null]
[y]
[null]
[result, [, 1, ], [, i, ]]
[result, [, 1, ]]
[result]
[1]
[i]
[y, ., doubleValue, (, )]
[y]
[result, [, 1, ], [, i, ]]
[result, [, 1, ]]
[result]
[1]
[i]
[Double, ., NaN]
[Double]
[result]
[(, XYSeries, ), super, ., clone, (, )]
[super, ., clone, (, )]
[super]
[clone, ., data]
[clone]
[(, List, ), ObjectUtilities, ., deepClone, (, this, ., data, )]
[ObjectUtilities, ., deepClone, (, this, ., data, )]
[ObjectUtilities]
[this, ., data]
[this]
[clone]
[(, XYSeries, ), super, ., clone, (, )]
[super, ., clone, (, )]
[super]
[copy, ., data]
[copy]
[new, java, ., util, ., ArrayList, (, )]
[this, ., data, ., size, (, ), >, 0]
[this, ., data, ., size, (, )]
[this, ., data]
[this]
[0]
[start]
[index, <=, end]
[index]
[end]
[index, ++]
[index]
[(, XYDataItem, ), this, ., data, ., get, (, index, )]
[this, ., data, ., get, (, index, )]
[this, ., data]
[this]
[index]
[(, XYDataItem, ), item, ., clone, (, )]
[item, ., clone, (, )]
[item]
[copy, ., add, (, clone, )]
[copy]
[clone]
[System, ., err, ., println, (, "Unable to add cloned data item.", )]
[System, ., err]
[System]
["Unable to add cloned data item."]
[copy]
[obj, ==, this]
[obj]
[this]
[true]
[!, (, obj, instanceof, XYSeries, )]
[(, obj, instanceof, XYSeries, )]
[obj, instanceof, XYSeries]
[obj]
[false]
[!, super, ., equals, (, obj, )]
[super, ., equals, (, obj, )]
[super]
[obj]
[false]
[(, XYSeries, ), obj]
[obj]
[this, ., maximumItemCount, !=, that, ., maximumItemCount]
[this, ., maximumItemCount]
[this]
[that, ., maximumItemCount]
[that]
[false]
[this, ., autoSort, !=, that, ., autoSort]
[this, ., autoSort]
[this]
[that, ., autoSort]
[that]
[false]
[this, ., allowDuplicateXValues, !=, that, ., allowDuplicateXValues]
[this, ., allowDuplicateXValues]
[this]
[that, ., allowDuplicateXValues]
[that]
[false]
[!, ObjectUtilities, ., equal, (, this, ., data, ,, that, ., data, )]
[ObjectUtilities, ., equal, (, this, ., data, ,, that, ., data, )]
[ObjectUtilities]
[this, ., data]
[this]
[that, ., data]
[that]
[false]
[true]
[super, ., hashCode, (, )]
[super]
[getItemCount, (, )]
[count, >, 0]
[count]
[0]
[getRawDataItem, (, 0, )]
[0]
[result]
[29, *, result, +, item, ., hashCode, (, )]
[29, *, result]
[29]
[result]
[item, ., hashCode, (, )]
[item]
[count, >, 1]
[count]
[1]
[getRawDataItem, (, count, -, 1, )]
[count, -, 1]
[count]
[1]
[result]
[29, *, result, +, item, ., hashCode, (, )]
[29, *, result]
[29]
[result]
[item, ., hashCode, (, )]
[item]
[count, >, 2]
[count]
[2]
[getRawDataItem, (, count, /, 2, )]
[count, /, 2]
[count]
[2]
[result]
[29, *, result, +, item, ., hashCode, (, )]
[29, *, result]
[29]
[result]
[item, ., hashCode, (, )]
[item]
[result]
[29, *, result, +, this, ., maximumItemCount]
[29, *, result]
[29]
[result]
[this, ., maximumItemCount]
[this]
[result]
[29, *, result, +, (, this, ., autoSort, ?, 1, :, 0, )]
[29, *, result]
[29]
[result]
[(, this, ., autoSort, ?, 1, :, 0, )]
[this, ., autoSort, ?, 1, :, 0]
[this, ., autoSort]
[this]
[1]
[0]
[result]
[29, *, result, +, (, this, ., allowDuplicateXValues, ?, 1, :, 0, )]
[29, *, result]
[29]
[result]
[(, this, ., allowDuplicateXValues, ?, 1, :, 0, )]
[this, ., allowDuplicateXValues, ?, 1, :, 0]
[this, ., allowDuplicateXValues]
[this]
[1]
[0]
[result]
