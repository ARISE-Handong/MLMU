[fieldOwner]
[field]
[new, NoArgConstructorInstantiator, (, fieldOwner, ,, field, )]
[fieldOwner]
[field]
[fieldOwner]
[field]
[new, ParameterizedConstructorInstantiator, (, fieldOwner, ,, field, ,, argResolver, )]
[fieldOwner]
[field]
[argResolver]
[new, FieldReader, (, fieldOwner, ,, field, ), ., isNull, (, )]
[new, FieldReader, (, fieldOwner, ,, field, )]
[fieldOwner]
[field]
[checkNotLocal, (, field, )]
[field]
[checkNotInner, (, field, )]
[field]
[checkNotInterface, (, field, )]
[field]
[checkNotAbstract, (, field, )]
[field]
[this, ., fieldOwner]
[this]
[fieldOwner]
[this, ., field]
[this]
[field]
[this, ., instantiator]
[this]
[instantiator]
[new, AccessibilityChanger, (, )]
[changer, ., enableAccess, (, field, )]
[changer]
[field]
[acquireFieldInstance, (, )]
[new, MockitoException, (, "Problems initializing field '", +, field, ., getName, (, ), +, "' of type '", +, field, ., getType, (, ), ., getSimpleName, (, ), +, "'", ,, e, )]
["Problems initializing field '", +, field, ., getName, (, ), +, "' of type '", +, field, ., getType, (, ), ., getSimpleName, (, ), +, "'"]
["Problems initializing field '", +, field, ., getName, (, ), +, "' of type '", +, field, ., getType, (, ), ., getSimpleName, (, )]
["Problems initializing field '", +, field, ., getName, (, ), +, "' of type '"]
["Problems initializing field '", +, field, ., getName, (, )]
["Problems initializing field '"]
[field, ., getName, (, )]
[field]
["' of type '"]
[field, ., getType, (, ), ., getSimpleName, (, )]
[field, ., getType, (, )]
[field]
["'"]
[e]
[changer, ., safelyDisableAccess, (, field, )]
[changer]
[field]
[field, ., getType, (, ), ., isLocalClass, (, )]
[field, ., getType, (, )]
[field]
[new, MockitoException, (, "the type '", +, field, ., getType, (, ), ., getSimpleName, (, ), +, "' is a local class.", )]
["the type '", +, field, ., getType, (, ), ., getSimpleName, (, ), +, "' is a local class."]
["the type '", +, field, ., getType, (, ), ., getSimpleName, (, )]
["the type '"]
[field, ., getType, (, ), ., getSimpleName, (, )]
[field, ., getType, (, )]
[field]
["' is a local class."]
[field, ., getType, (, ), ., isMemberClass, (, ), &&, !, Modifier, ., isStatic, (, field, ., getType, (, ), ., getModifiers, (, ), )]
[field, ., getType, (, ), ., isMemberClass, (, )]
[field, ., getType, (, )]
[field]
[!, Modifier, ., isStatic, (, field, ., getType, (, ), ., getModifiers, (, ), )]
[Modifier, ., isStatic, (, field, ., getType, (, ), ., getModifiers, (, ), )]
[Modifier]
[field, ., getType, (, ), ., getModifiers, (, )]
[field, ., getType, (, )]
[field]
[new, MockitoException, (, "the type '", +, field, ., getType, (, ), ., getSimpleName, (, ), +, "' is an inner class.", )]
["the type '", +, field, ., getType, (, ), ., getSimpleName, (, ), +, "' is an inner class."]
["the type '", +, field, ., getType, (, ), ., getSimpleName, (, )]
["the type '"]
[field, ., getType, (, ), ., getSimpleName, (, )]
[field, ., getType, (, )]
[field]
["' is an inner class."]
[field, ., getType, (, ), ., isInterface, (, )]
[field, ., getType, (, )]
[field]
[new, MockitoException, (, "the type '", +, field, ., getType, (, ), ., getSimpleName, (, ), +, "' is an interface.", )]
["the type '", +, field, ., getType, (, ), ., getSimpleName, (, ), +, "' is an interface."]
["the type '", +, field, ., getType, (, ), ., getSimpleName, (, )]
["the type '"]
[field, ., getType, (, ), ., getSimpleName, (, )]
[field, ., getType, (, )]
[field]
["' is an interface."]
[Modifier, ., isAbstract, (, field, ., getType, (, ), ., getModifiers, (, ), )]
[Modifier]
[field, ., getType, (, ), ., getModifiers, (, )]
[field, ., getType, (, )]
[field]
[new, MockitoException, (, "the type '", +, field, ., getType, (, ), ., getSimpleName, (, ), +, " is an abstract class.", )]
["the type '", +, field, ., getType, (, ), ., getSimpleName, (, ), +, " is an abstract class."]
["the type '", +, field, ., getType, (, ), ., getSimpleName, (, )]
["the type '"]
[field, ., getType, (, ), ., getSimpleName, (, )]
[field, ., getType, (, )]
[field]
[" is an abstract class."]
[field, ., get, (, fieldOwner, )]
[field]
[fieldOwner]
[fieldInstance, !=, null]
[fieldInstance]
[null]
[new, FieldInitializationReport, (, fieldInstance, ,, false, ,, false, )]
[fieldInstance]
[false]
[false]
[instantiator, ., instantiate, (, )]
[instantiator]
[this, ., testClass]
[this]
[testClass]
[this, ., field]
[this]
[field]
[new, AccessibilityChanger, (, )]
[null]
[constructor]
[field, ., getType, (, ), ., getDeclaredConstructor, (, )]
[field, ., getType, (, )]
[field]
[changer, ., enableAccess, (, constructor, )]
[changer]
[constructor]
[new, Object, [, 0, ]]
[0]
[constructor, ., newInstance, (, noArg, )]
[constructor]
[noArg]
[new, FieldSetter, (, testClass, ,, field, ), ., set, (, newFieldInstance, )]
[new, FieldSetter, (, testClass, ,, field, )]
[testClass]
[field]
[newFieldInstance]
[new, FieldInitializationReport, (, field, ., get, (, testClass, ), ,, true, ,, false, )]
[field, ., get, (, testClass, )]
[field]
[testClass]
[true]
[false]
[new, MockitoException, (, "the type '", +, field, ., getType, (, ), ., getSimpleName, (, ), +, "' has no default constructor", ,, e, )]
["the type '", +, field, ., getType, (, ), ., getSimpleName, (, ), +, "' has no default constructor"]
["the type '", +, field, ., getType, (, ), ., getSimpleName, (, )]
["the type '"]
[field, ., getType, (, ), ., getSimpleName, (, )]
[field, ., getType, (, )]
[field]
["' has no default constructor"]
[e]
[new, MockitoException, (, "the default constructor of type '", +, field, ., getType, (, ), ., getSimpleName, (, ), +, "' has raised an exception (see the stack trace for cause): ", +, e, ., getTargetException, (, ), ., toString, (, ), ,, e, )]
["the default constructor of type '", +, field, ., getType, (, ), ., getSimpleName, (, ), +, "' has raised an exception (see the stack trace for cause): ", +, e, ., getTargetException, (, ), ., toString, (, )]
["the default constructor of type '", +, field, ., getType, (, ), ., getSimpleName, (, ), +, "' has raised an exception (see the stack trace for cause): "]
["the default constructor of type '", +, field, ., getType, (, ), ., getSimpleName, (, )]
["the default constructor of type '"]
[field, ., getType, (, ), ., getSimpleName, (, )]
[field, ., getType, (, )]
[field]
["' has raised an exception (see the stack trace for cause): "]
[e, ., getTargetException, (, ), ., toString, (, )]
[e, ., getTargetException, (, )]
[e]
[e]
[new, MockitoException, (, "InstantiationException (see the stack trace for cause): ", +, e, ., toString, (, ), ,, e, )]
["InstantiationException (see the stack trace for cause): ", +, e, ., toString, (, )]
["InstantiationException (see the stack trace for cause): "]
[e, ., toString, (, )]
[e]
[e]
[new, MockitoException, (, "IllegalAccessException (see the stack trace for cause): ", +, e, ., toString, (, ), ,, e, )]
["IllegalAccessException (see the stack trace for cause): ", +, e, ., toString, (, )]
["IllegalAccessException (see the stack trace for cause): "]
[e, ., toString, (, )]
[e]
[e]
[constructor, !=, null]
[constructor]
[null]
[changer, ., safelyDisableAccess, (, constructor, )]
[changer]
[constructor]
[new, MockUtil, (, )]
[new, Comparator, <, Constructor, <, ?, >, >, (, ), {, public, int, compare, (, Constructor, <, ?, >, constructorA, ,, Constructor, <, ?, >, constructorB, ), {, int, argLengths, =, constructorB, ., getParameterTypes, (, ), ., length, -, constructorA, ., getParameterTypes, (, ), ., length, ;, if, (, argLengths, ==, 0, ), {, int, constructorAMockableParamsSize, =, countMockableParams, (, constructorA, ), ;, int, constructorBMockableParamsSize, =, countMockableParams, (, constructorB, ), ;, return, constructorBMockableParamsSize, -, constructorAMockableParamsSize, ;, }, return, argLengths, ;, }, private, int, countMockableParams, (, Constructor, <, ?, >, constructor, ), {, int, constructorMockableParamsSize, =, 0, ;, for, (, Class, <, ?, >, aClass, :, constructor, ., getParameterTypes, (, ), ), {, if, (, mockUtil, ., isTypeMockable, (, aClass, ), ), {, constructorMockableParamsSize, ++, ;, }, }, return, constructorMockableParamsSize, ;, }, }]
[constructorB, ., getParameterTypes, (, ), ., length, -, constructorA, ., getParameterTypes, (, ), ., length]
[constructorB, ., getParameterTypes, (, ), ., length]
[constructorB, ., getParameterTypes, (, )]
[constructorB]
[constructorA, ., getParameterTypes, (, ), ., length]
[constructorA, ., getParameterTypes, (, )]
[constructorA]
[argLengths, ==, 0]
[argLengths]
[0]
[countMockableParams, (, constructorA, )]
[constructorA]
[countMockableParams, (, constructorB, )]
[constructorB]
[constructorBMockableParamsSize, -, constructorAMockableParamsSize]
[constructorBMockableParamsSize]
[constructorAMockableParamsSize]
[argLengths]
[0]
[constructor, ., getParameterTypes, (, )]
[constructor]
[mockUtil, ., isTypeMockable, (, aClass, )]
[mockUtil]
[aClass]
[constructorMockableParamsSize, ++]
[constructorMockableParamsSize]
[constructorMockableParamsSize]
[this, ., testClass]
[this]
[testClass]
[this, ., field]
[this]
[field]
[this, ., argResolver]
[this]
[argumentResolver]
[new, AccessibilityChanger, (, )]
[null]
[constructor]
[biggestConstructor, (, field, ., getType, (, ), )]
[field, ., getType, (, )]
[field]
[changer, ., enableAccess, (, constructor, )]
[changer]
[constructor]
[argResolver, ., resolveTypeInstances, (, constructor, ., getParameterTypes, (, ), )]
[argResolver]
[constructor, ., getParameterTypes, (, )]
[constructor]
[constructor, ., newInstance, (, args, )]
[constructor]
[args]
[new, FieldSetter, (, testClass, ,, field, ), ., set, (, newFieldInstance, )]
[new, FieldSetter, (, testClass, ,, field, )]
[testClass]
[field]
[newFieldInstance]
[new, FieldInitializationReport, (, field, ., get, (, testClass, ), ,, false, ,, true, )]
[field, ., get, (, testClass, )]
[field]
[testClass]
[false]
[true]
[new, MockitoException, (, "internal error : argResolver provided incorrect types for constructor ", +, constructor, +, " of type ", +, field, ., getType, (, ), ., getSimpleName, (, ), ,, e, )]
["internal error : argResolver provided incorrect types for constructor ", +, constructor, +, " of type ", +, field, ., getType, (, ), ., getSimpleName, (, )]
["internal error : argResolver provided incorrect types for constructor ", +, constructor, +, " of type "]
["internal error : argResolver provided incorrect types for constructor ", +, constructor]
["internal error : argResolver provided incorrect types for constructor "]
[constructor]
[" of type "]
[field, ., getType, (, ), ., getSimpleName, (, )]
[field, ., getType, (, )]
[field]
[e]
[new, MockitoException, (, "the constructor of type '", +, field, ., getType, (, ), ., getSimpleName, (, ), +, "' has raised an exception (see the stack trace for cause): ", +, e, ., getTargetException, (, ), ., toString, (, ), ,, e, )]
["the constructor of type '", +, field, ., getType, (, ), ., getSimpleName, (, ), +, "' has raised an exception (see the stack trace for cause): ", +, e, ., getTargetException, (, ), ., toString, (, )]
["the constructor of type '", +, field, ., getType, (, ), ., getSimpleName, (, ), +, "' has raised an exception (see the stack trace for cause): "]
["the constructor of type '", +, field, ., getType, (, ), ., getSimpleName, (, )]
["the constructor of type '"]
[field, ., getType, (, ), ., getSimpleName, (, )]
[field, ., getType, (, )]
[field]
["' has raised an exception (see the stack trace for cause): "]
[e, ., getTargetException, (, ), ., toString, (, )]
[e, ., getTargetException, (, )]
[e]
[e]
[new, MockitoException, (, "InstantiationException (see the stack trace for cause): ", +, e, ., toString, (, ), ,, e, )]
["InstantiationException (see the stack trace for cause): ", +, e, ., toString, (, )]
["InstantiationException (see the stack trace for cause): "]
[e, ., toString, (, )]
[e]
[e]
[new, MockitoException, (, "IllegalAccessException (see the stack trace for cause): ", +, e, ., toString, (, ), ,, e, )]
["IllegalAccessException (see the stack trace for cause): ", +, e, ., toString, (, )]
["IllegalAccessException (see the stack trace for cause): "]
[e, ., toString, (, )]
[e]
[e]
[constructor, !=, null]
[constructor]
[null]
[changer, ., safelyDisableAccess, (, constructor, )]
[changer]
[constructor]
[constructor, ., getParameterTypes, (, ), ., length, ==, 0]
[constructor, ., getParameterTypes, (, ), ., length]
[constructor, ., getParameterTypes, (, )]
[constructor]
[0]
[new, MockitoException, (, "the field ", +, field, ., getName, (, ), +, " of type ", +, field, ., getType, (, ), +, " has no parameterized constructor", )]
["the field ", +, field, ., getName, (, ), +, " of type ", +, field, ., getType, (, ), +, " has no parameterized constructor"]
["the field ", +, field, ., getName, (, ), +, " of type ", +, field, ., getType, (, )]
["the field ", +, field, ., getName, (, ), +, " of type "]
["the field ", +, field, ., getName, (, )]
["the field "]
[field, ., getName, (, )]
[field]
[" of type "]
[field, ., getType, (, )]
[field]
[" has no parameterized constructor"]
[Arrays, ., asList, (, clazz, ., getDeclaredConstructors, (, ), )]
[Arrays]
[clazz, ., getDeclaredConstructors, (, )]
[clazz]
[Collections, ., sort, (, constructors, ,, byParameterNumber, )]
[Collections]
[constructors]
[byParameterNumber]
[constructors, ., get, (, 0, )]
[constructors]
[0]
[checkParameterized, (, constructor, ,, field, )]
[constructor]
[field]
[constructor]
