[Logger, ., getLogger, (, ExpandJqueryAliases, ., class, ., getName, (, ), )]
[Logger]
[ExpandJqueryAliases, ., class, ., getName, (, )]
[ExpandJqueryAliases, ., class]
[DiagnosticType, ., warning, (, "JSC_JQUERY_UNABLE_TO_EXPAND_INVALID_LIT", ,, "jQuery.expandedEach call cannot be expanded because the first ", +, "argument must be an object literal or an array of strings ", +, "literal.", )]
[DiagnosticType]
["JSC_JQUERY_UNABLE_TO_EXPAND_INVALID_LIT"]
["jQuery.expandedEach call cannot be expanded because the first ", +, "argument must be an object literal or an array of strings ", +, "literal."]
["jQuery.expandedEach call cannot be expanded because the first ", +, "argument must be an object literal or an array of strings "]
["jQuery.expandedEach call cannot be expanded because the first "]
["argument must be an object literal or an array of strings "]
["literal."]
[DiagnosticType, ., error, (, "JSC_JQUERY_UNABLE_TO_EXPAND_INVALID_NAME", ,, "jQuery.expandedEach expansion would result in the invalid ", +, "property name \"{0}\".", )]
[DiagnosticType]
["JSC_JQUERY_UNABLE_TO_EXPAND_INVALID_NAME"]
["jQuery.expandedEach expansion would result in the invalid ", +, "property name \"{0}\"."]
["jQuery.expandedEach expansion would result in the invalid "]
["property name \"{0}\"."]
[DiagnosticType, ., warning, (, "JSC_JQUERY_USELESS_EACH_EXPANSION", ,, "jQuery.expandedEach was not expanded as no valid property ", +, "assignments were encountered. Consider using jQuery.each instead.", )]
[DiagnosticType]
["JSC_JQUERY_USELESS_EACH_EXPANSION"]
["jQuery.expandedEach was not expanded as no valid property ", +, "assignments were encountered. Consider using jQuery.each instead."]
["jQuery.expandedEach was not expanded as no valid property "]
["assignments were encountered. Consider using jQuery.each instead."]
[ImmutableSet, ., of, (, "jQuery.extend", ,, "jQuery.fn.extend", ,, "jQuery.prototype.extend", )]
[ImmutableSet]
["jQuery.extend"]
["jQuery.fn.extend"]
["jQuery.prototype.extend"]
["jQuery.expandedEach"]
[this, ., compiler]
[this]
[compiler]
[this, ., convention]
[this]
[compiler, ., getCodingConvention, (, )]
[compiler]
[false]
[this, ., peepholePasses]
[this]
[new, PeepholeOptimizationsPass, (, compiler, ,, new, PeepholeSubstituteAlternateSyntax, (, late, ), ,, new, PeepholeReplaceKnownMethods, (, late, ), ,, new, PeepholeRemoveDeadCode, (, ), ,, new, PeepholeFoldConstants, (, late, ), ,, new, PeepholeCollectPropertyAssignments, (, ), )]
[compiler]
[new, PeepholeSubstituteAlternateSyntax, (, late, )]
[late]
[new, PeepholeReplaceKnownMethods, (, late, )]
[late]
[new, PeepholeRemoveDeadCode, (, )]
[new, PeepholeFoldConstants, (, late, )]
[late]
[new, PeepholeCollectPropertyAssignments, (, )]
[JQUERY_EXTEND_NAMES, ., contains, (, qname, )]
[JQUERY_EXTEND_NAMES]
[qname]
[n, ., getNext, (, )]
[n]
[firstArgument, ==, null]
[firstArgument]
[null]
[false]
[firstArgument, ., getNext, (, )]
[firstArgument]
[(, firstArgument, ., isObjectLit, (, ), &&, secondArgument, ==, null, ), ||, (, firstArgument, ., isName, (, ), ||, NodeUtil, ., isGet, (, firstArgument, ), &&, !, NodeUtil, ., mayHaveSideEffects, (, firstArgument, ,, compiler, ), &&, secondArgument, !=, null, &&, secondArgument, ., isObjectLit, (, ), &&, secondArgument, ., getNext, (, ), ==, null, )]
[(, firstArgument, ., isObjectLit, (, ), &&, secondArgument, ==, null, )]
[firstArgument, ., isObjectLit, (, ), &&, secondArgument, ==, null]
[firstArgument, ., isObjectLit, (, )]
[firstArgument]
[secondArgument, ==, null]
[secondArgument]
[null]
[(, firstArgument, ., isName, (, ), ||, NodeUtil, ., isGet, (, firstArgument, ), &&, !, NodeUtil, ., mayHaveSideEffects, (, firstArgument, ,, compiler, ), &&, secondArgument, !=, null, &&, secondArgument, ., isObjectLit, (, ), &&, secondArgument, ., getNext, (, ), ==, null, )]
[firstArgument, ., isName, (, ), ||, NodeUtil, ., isGet, (, firstArgument, ), &&, !, NodeUtil, ., mayHaveSideEffects, (, firstArgument, ,, compiler, ), &&, secondArgument, !=, null, &&, secondArgument, ., isObjectLit, (, ), &&, secondArgument, ., getNext, (, ), ==, null]
[firstArgument, ., isName, (, )]
[firstArgument]
[NodeUtil, ., isGet, (, firstArgument, ), &&, !, NodeUtil, ., mayHaveSideEffects, (, firstArgument, ,, compiler, ), &&, secondArgument, !=, null, &&, secondArgument, ., isObjectLit, (, ), &&, secondArgument, ., getNext, (, ), ==, null]
[NodeUtil, ., isGet, (, firstArgument, ), &&, !, NodeUtil, ., mayHaveSideEffects, (, firstArgument, ,, compiler, ), &&, secondArgument, !=, null, &&, secondArgument, ., isObjectLit, (, )]
[NodeUtil, ., isGet, (, firstArgument, ), &&, !, NodeUtil, ., mayHaveSideEffects, (, firstArgument, ,, compiler, ), &&, secondArgument, !=, null]
[NodeUtil, ., isGet, (, firstArgument, ), &&, !, NodeUtil, ., mayHaveSideEffects, (, firstArgument, ,, compiler, )]
[NodeUtil, ., isGet, (, firstArgument, )]
[NodeUtil]
[firstArgument]
[!, NodeUtil, ., mayHaveSideEffects, (, firstArgument, ,, compiler, )]
[NodeUtil, ., mayHaveSideEffects, (, firstArgument, ,, compiler, )]
[NodeUtil]
[firstArgument]
[compiler]
[secondArgument, !=, null]
[secondArgument]
[null]
[secondArgument, ., isObjectLit, (, )]
[secondArgument]
[secondArgument, ., getNext, (, ), ==, null]
[secondArgument, ., getNext, (, )]
[secondArgument]
[null]
[true]
[false]
[Preconditions, ., checkArgument, (, call, ., isCall, (, ), )]
[Preconditions]
[call, ., isCall, (, )]
[call]
[call, ., getFirstChild, (, ), !=, null, &&, JQUERY_EXPANDED_EACH_NAME, ., equals, (, qName, )]
[call, ., getFirstChild, (, ), !=, null]
[call, ., getFirstChild, (, )]
[call]
[null]
[JQUERY_EXPANDED_EACH_NAME, ., equals, (, qName, )]
[JQUERY_EXPANDED_EACH_NAME]
[qName]
[true]
[false]
[n, ., isGetProp, (, ), &&, convention, ., isPrototypeAlias, (, n, )]
[n, ., isGetProp, (, )]
[n]
[convention, ., isPrototypeAlias, (, n, )]
[convention]
[n]
[maybeReplaceJqueryPrototypeAlias, (, n, )]
[n]
[n, ., isCall, (, )]
[n]
[n, ., getFirstChild, (, )]
[n]
[callTarget, ., getQualifiedName, (, )]
[callTarget]
[isJqueryExtendCall, (, callTarget, ,, qName, ,, this, ., compiler, )]
[callTarget]
[qName]
[this, ., compiler]
[this]
[maybeExpandJqueryExtendCall, (, n, )]
[n]
[isJqueryExpandedEachCall, (, n, ,, qName, )]
[n]
[qName]
[maybeExpandJqueryEachCall, (, t, ,, n, )]
[t]
[n]
[logger, ., fine, (, "Expanding Jquery Aliases", )]
[logger]
["Expanding Jquery Aliases"]
[NodeTraversal, ., traverse, (, compiler, ,, root, ,, this, )]
[NodeTraversal]
[compiler]
[root]
[this]
[NodeUtil, ., isLValue, (, n, )]
[NodeUtil]
[n]
[n, ., getParent, (, )]
[n]
[!, NodeUtil, ., isStatement, (, maybeAssign, ), &&, !, maybeAssign, ., isAssign, (, )]
[!, NodeUtil, ., isStatement, (, maybeAssign, )]
[NodeUtil, ., isStatement, (, maybeAssign, )]
[NodeUtil]
[maybeAssign]
[!, maybeAssign, ., isAssign, (, )]
[maybeAssign, ., isAssign, (, )]
[maybeAssign]
[maybeAssign]
[maybeAssign, ., getParent, (, )]
[maybeAssign]
[maybeAssign, ., isAssign, (, )]
[maybeAssign]
[maybeAssign]
[maybeAssign, ., getParent, (, )]
[maybeAssign]
[maybeAssign, ., isBlock, (, ), ||, maybeAssign, ., isScript, (, ), ||, NodeUtil, ., isStatement, (, maybeAssign, )]
[maybeAssign, ., isBlock, (, ), ||, maybeAssign, ., isScript, (, )]
[maybeAssign, ., isBlock, (, )]
[maybeAssign]
[maybeAssign, ., isScript, (, )]
[maybeAssign]
[NodeUtil, ., isStatement, (, maybeAssign, )]
[NodeUtil]
[maybeAssign]
[n, ., getLastChild, (, )]
[n]
[fn, !=, null]
[fn]
[null]
[n, ., replaceChild, (, fn, ,, IR, ., string, (, "prototype", ), )]
[n]
[fn]
[IR, ., string, (, "prototype", )]
[IR]
["prototype"]
[compiler, ., reportCodeChange, (, )]
[compiler]
[n, ., getFirstChild, (, )]
[n]
[callTarget, ., getNext, (, )]
[callTarget]
[objectToExtend, ., getNext, (, )]
[objectToExtend]
[true]
[extendArg, ==, null]
[extendArg]
[null]
[extendArg]
[objectToExtend]
[objectToExtend]
[callTarget, ., getFirstChild, (, )]
[callTarget]
[ensureObjectDefined]
[false]
[objectToExtend, ., isGetProp, (, ), &&, (, objectToExtend, ., getLastChild, (, ), ., getString, (, ), ., equals, (, "prototype", ), ||, convention, ., isPrototypeAlias, (, objectToExtend, ), )]
[objectToExtend, ., isGetProp, (, )]
[objectToExtend]
[(, objectToExtend, ., getLastChild, (, ), ., getString, (, ), ., equals, (, "prototype", ), ||, convention, ., isPrototypeAlias, (, objectToExtend, ), )]
[objectToExtend, ., getLastChild, (, ), ., getString, (, ), ., equals, (, "prototype", ), ||, convention, ., isPrototypeAlias, (, objectToExtend, )]
[objectToExtend, ., getLastChild, (, ), ., getString, (, ), ., equals, (, "prototype", )]
[objectToExtend, ., getLastChild, (, ), ., getString, (, )]
[objectToExtend, ., getLastChild, (, )]
[objectToExtend]
["prototype"]
[convention, ., isPrototypeAlias, (, objectToExtend, )]
[convention]
[objectToExtend]
[ensureObjectDefined]
[false]
[!, extendArg, ., hasChildren, (, )]
[extendArg, ., hasChildren, (, )]
[extendArg]
[IR, ., block, (, ), ., srcref, (, n, )]
[IR, ., block, (, )]
[IR]
[n]
[ensureObjectDefined]
[IR, ., or, (, objectToExtend, ., cloneTree, (, ), ,, IR, ., objectlit, (, ), ., srcref, (, n, ), ), ., srcref, (, n, )]
[IR, ., or, (, objectToExtend, ., cloneTree, (, ), ,, IR, ., objectlit, (, ), ., srcref, (, n, ), )]
[IR]
[objectToExtend, ., cloneTree, (, )]
[objectToExtend]
[IR, ., objectlit, (, ), ., srcref, (, n, )]
[IR, ., objectlit, (, )]
[IR]
[n]
[n]
[IR, ., assign, (, objectToExtend, ., cloneTree, (, ), ,, assignVal, ), ., srcref, (, n, )]
[IR, ., assign, (, objectToExtend, ., cloneTree, (, ), ,, assignVal, )]
[IR]
[objectToExtend, ., cloneTree, (, )]
[objectToExtend]
[assignVal]
[n]
[fncBlock, ., addChildrenToFront, (, IR, ., exprResult, (, assign, ), ., srcref, (, n, ), )]
[fncBlock]
[IR, ., exprResult, (, assign, ), ., srcref, (, n, )]
[IR, ., exprResult, (, assign, )]
[IR]
[assign]
[n]
[extendArg, ., hasChildren, (, )]
[extendArg]
[extendArg, ., removeFirstChild, (, )]
[extendArg]
[currentProp, ., setType, (, Token, ., STRING, )]
[currentProp]
[Token, ., STRING]
[Token]
[currentProp, ., removeFirstChild, (, )]
[currentProp]
[currentProp, ., isQuotedString, (, )]
[currentProp]
[newProp]
[IR, ., getelem, (, objectToExtend, ., cloneTree, (, ), ,, currentProp, ), ., srcref, (, currentProp, )]
[IR, ., getelem, (, objectToExtend, ., cloneTree, (, ), ,, currentProp, )]
[IR]
[objectToExtend, ., cloneTree, (, )]
[objectToExtend]
[currentProp]
[currentProp]
[newProp]
[IR, ., getprop, (, objectToExtend, ., cloneTree, (, ), ,, currentProp, ), ., srcref, (, currentProp, )]
[IR, ., getprop, (, objectToExtend, ., cloneTree, (, ), ,, currentProp, )]
[IR]
[objectToExtend, ., cloneTree, (, )]
[objectToExtend]
[currentProp]
[currentProp]
[IR, ., assign, (, newProp, ,, propValue, ), ., srcref, (, currentProp, )]
[IR, ., assign, (, newProp, ,, propValue, )]
[IR]
[newProp]
[propValue]
[currentProp]
[fncBlock, ., addChildToBack, (, IR, ., exprResult, (, assignNode, ), ., srcref, (, currentProp, ), )]
[fncBlock]
[IR, ., exprResult, (, assignNode, ), ., srcref, (, currentProp, )]
[IR, ., exprResult, (, assignNode, )]
[IR]
[assignNode]
[currentProp]
[n, ., getParent, (, ), ., isExprResult, (, )]
[n, ., getParent, (, )]
[n]
[n, ., getParent, (, )]
[n]
[parent, ., getParent, (, ), ., replaceChild, (, parent, ,, fncBlock, )]
[parent, ., getParent, (, )]
[parent]
[parent]
[fncBlock]
["jQuery.prototype", ., equals, (, objectToExtend, ., getQualifiedName, (, ), )]
["jQuery.prototype"]
[objectToExtend, ., getQualifiedName, (, )]
[objectToExtend]
[targetVal]
[objectToExtend, ., removeFirstChild, (, )]
[objectToExtend]
[targetVal]
[objectToExtend, ., detachFromParent, (, )]
[objectToExtend]
[fncBlock, ., addChildToBack, (, IR, ., returnNode, (, targetVal, ), ., srcref, (, targetVal, ), )]
[fncBlock]
[IR, ., returnNode, (, targetVal, ), ., srcref, (, targetVal, )]
[IR, ., returnNode, (, targetVal, )]
[IR]
[targetVal]
[targetVal]
[IR, ., function, (, IR, ., name, (, "", ), ., srcref, (, n, ), ,, IR, ., paramList, (, ), ., srcref, (, n, ), ,, fncBlock, )]
[IR]
[IR, ., name, (, "", ), ., srcref, (, n, )]
[IR, ., name, (, "", )]
[IR]
[""]
[n]
[IR, ., paramList, (, ), ., srcref, (, n, )]
[IR, ., paramList, (, )]
[IR]
[n]
[fncBlock]
[n, ., replaceChild, (, callTarget, ,, fnc, )]
[n]
[callTarget]
[fnc]
[n, ., putBooleanProp, (, Node, ., FREE_CALL, ,, true, )]
[n]
[Node, ., FREE_CALL]
[Node]
[true]
[fnc, ., getNext, (, ), !=, null]
[fnc, ., getNext, (, )]
[fnc]
[null]
[n, ., removeChildAfter, (, fnc, )]
[n]
[fnc]
[compiler, ., reportCodeChange, (, )]
[compiler]
[n, ., getChildAtIndex, (, 1, )]
[n]
[1]
[objectToLoopOver, ==, null]
[objectToLoopOver]
[null]
[objectToLoopOver, ., getNext, (, )]
[objectToLoopOver]
[callbackFunction, ==, null, ||, !, callbackFunction, ., isFunction, (, )]
[callbackFunction, ==, null]
[callbackFunction]
[null]
[!, callbackFunction, ., isFunction, (, )]
[callbackFunction, ., isFunction, (, )]
[callbackFunction]
[peepholePasses, ., process, (, null, ,, n, ., getChildAtIndex, (, 1, ), )]
[peepholePasses]
[null]
[n, ., getChildAtIndex, (, 1, )]
[n]
[1]
[n, ., cloneTree, (, )]
[n]
[objectToLoopOver]
[nClone, ., getChildAtIndex, (, 1, )]
[nClone]
[1]
[!, objectToLoopOver, ., isObjectLit, (, ), &&, !, (, objectToLoopOver, ., isArrayLit, (, ), &&, isArrayLitValidForExpansion, (, objectToLoopOver, ), )]
[!, objectToLoopOver, ., isObjectLit, (, )]
[objectToLoopOver, ., isObjectLit, (, )]
[objectToLoopOver]
[!, (, objectToLoopOver, ., isArrayLit, (, ), &&, isArrayLitValidForExpansion, (, objectToLoopOver, ), )]
[(, objectToLoopOver, ., isArrayLit, (, ), &&, isArrayLitValidForExpansion, (, objectToLoopOver, ), )]
[objectToLoopOver, ., isArrayLit, (, ), &&, isArrayLitValidForExpansion, (, objectToLoopOver, )]
[objectToLoopOver, ., isArrayLit, (, )]
[objectToLoopOver]
[isArrayLitValidForExpansion, (, objectToLoopOver, )]
[objectToLoopOver]
[t, ., report, (, n, ,, JQUERY_UNABLE_TO_EXPAND_INVALID_LIT_ERROR, ,, (, String, ), null, )]
[t]
[n]
[JQUERY_UNABLE_TO_EXPAND_INVALID_LIT_ERROR]
[(, String, ), null]
[null]
[Lists, ., newArrayList, (, )]
[Lists]
[Lists, ., newArrayList, (, )]
[Lists]
[NodeTraversal, ., traverse, (, compiler, ,, NodeUtil, ., getFunctionBody, (, callbackFunction, ), ,, new, FindCallbackArgumentReferences, (, callbackFunction, ,, keyNodeReferences, ,, valueNodeReferences, ,, objectToLoopOver, ., isArrayLit, (, ), ), )]
[NodeTraversal]
[compiler]
[NodeUtil, ., getFunctionBody, (, callbackFunction, )]
[NodeUtil]
[callbackFunction]
[new, FindCallbackArgumentReferences, (, callbackFunction, ,, keyNodeReferences, ,, valueNodeReferences, ,, objectToLoopOver, ., isArrayLit, (, ), )]
[callbackFunction]
[keyNodeReferences]
[valueNodeReferences]
[objectToLoopOver, ., isArrayLit, (, )]
[objectToLoopOver]
[keyNodeReferences, ., size, (, ), ==, 0]
[keyNodeReferences, ., size, (, )]
[keyNodeReferences]
[0]
[t, ., report, (, n, ,, JQUERY_USELESS_EACH_EXPANSION, ,, (, String, ), null, )]
[t]
[n]
[JQUERY_USELESS_EACH_EXPANSION]
[(, String, ), null]
[null]
[tryExpandJqueryEachCall, (, t, ,, nClone, ,, callbackFunction, ,, keyNodeReferences, ,, valueNodeReferences, )]
[t]
[nClone]
[callbackFunction]
[keyNodeReferences]
[valueNodeReferences]
[fncBlock, !=, null, &&, fncBlock, ., hasChildren, (, )]
[fncBlock, !=, null]
[fncBlock]
[null]
[fncBlock, ., hasChildren, (, )]
[fncBlock]
[replaceOriginalJqueryEachCall, (, n, ,, fncBlock, )]
[n]
[fncBlock]
[t, ., report, (, n, ,, JQUERY_USELESS_EACH_EXPANSION, ,, (, String, ), null, )]
[t]
[n]
[JQUERY_USELESS_EACH_EXPANSION]
[(, String, ), null]
[null]
[n, ., getFirstChild, (, )]
[n]
[callTarget, ., getNext, (, )]
[callTarget]
[IR, ., block, (, ), ., srcref, (, callTarget, )]
[IR, ., block, (, )]
[IR]
[callTarget]
[true]
[objectToLoopOver, ., getFirstChild, (, )]
[objectToLoopOver]
[null]
[0]
[key, !=, null]
[key]
[null]
[key]
[key, ., getNext, (, )]
[key]
[i, ++]
[i]
[key, !=, null]
[key]
[null]
[objectToLoopOver, ., isArrayLit, (, )]
[objectToLoopOver]
[val]
[IR, ., number, (, i, ), ., srcref, (, key, )]
[IR, ., number, (, i, )]
[IR]
[i]
[key]
[val]
[key, ., getFirstChild, (, )]
[key]
[Lists, ., newArrayList, (, )]
[Lists]
[Lists, ., newArrayList, (, )]
[Lists]
[Lists, ., newArrayList, (, )]
[Lists]
[Lists, ., newArrayList, (, )]
[Lists]
[0]
[j, <, keyNodes, ., size, (, )]
[j]
[keyNodes, ., size, (, )]
[keyNodes]
[j, ++]
[j]
[keyNodes, ., get, (, j, )]
[keyNodes]
[j]
[origNode, ., getParent, (, )]
[origNode]
[IR, ., string, (, key, ., getString, (, ), ), ., srcref, (, key, )]
[IR, ., string, (, key, ., getString, (, ), )]
[IR]
[key, ., getString, (, )]
[key]
[key]
[newKeys, ., add, (, newNode, )]
[newKeys]
[newNode]
[ancestor, ., replaceChild, (, origNode, ,, newNode, )]
[ancestor]
[origNode]
[newNode]
[ancestor, !=, null, &&, !, NodeUtil, ., isStatement, (, ancestor, ), &&, !, ancestor, ., isGetElem, (, )]
[ancestor, !=, null, &&, !, NodeUtil, ., isStatement, (, ancestor, )]
[ancestor, !=, null]
[ancestor]
[null]
[!, NodeUtil, ., isStatement, (, ancestor, )]
[NodeUtil, ., isStatement, (, ancestor, )]
[NodeUtil]
[ancestor]
[!, ancestor, ., isGetElem, (, )]
[ancestor, ., isGetElem, (, )]
[ancestor]
[ancestor]
[ancestor, ., getParent, (, )]
[ancestor]
[ancestor, !=, null, &&, ancestor, ., isGetElem, (, )]
[ancestor, !=, null]
[ancestor]
[null]
[ancestor, ., isGetElem, (, )]
[ancestor]
[ancestor]
[propObject, ., isGetProp, (, ), ||, propObject, ., isGetElem, (, )]
[propObject, ., isGetProp, (, )]
[propObject]
[propObject, ., isGetElem, (, )]
[propObject]
[propObject]
[propObject, ., getFirstChild, (, )]
[propObject]
[ancestor, ., cloneTree, (, )]
[ancestor]
[peepholePasses, ., process, (, null, ,, ancestorClone, ., getChildAtIndex, (, 1, ), )]
[peepholePasses]
[null]
[ancestorClone, ., getChildAtIndex, (, 1, )]
[ancestorClone]
[1]
[ancestorClone, ., getChildAtIndex, (, 1, )]
[ancestorClone]
[1]
[prop, ., isString, (, ), &&, NodeUtil, ., isValidPropertyName, (, prop, ., getString, (, ), )]
[prop, ., isString, (, )]
[prop]
[NodeUtil, ., isValidPropertyName, (, prop, ., getString, (, ), )]
[NodeUtil]
[prop, ., getString, (, )]
[prop]
[ancestorClone, ., getFirstChild, (, )]
[ancestorClone]
[IR, ., getprop, (, target, ., detachFromParent, (, ), ,, prop, ., detachFromParent, (, ), )]
[IR]
[target, ., detachFromParent, (, )]
[target]
[prop, ., detachFromParent, (, )]
[prop]
[newGetProps, ., add, (, newGetProp, )]
[newGetProps]
[newGetProp]
[origGetElems, ., add, (, ancestor, )]
[origGetElems]
[ancestor]
[ancestor, ., getParent, (, ), ., replaceChild, (, ancestor, ,, newGetProp, )]
[ancestor, ., getParent, (, )]
[ancestor]
[ancestor]
[newGetProp]
[prop, ., isString, (, ), &&, !, NodeUtil, ., isValidPropertyName, (, prop, ., getString, (, ), )]
[prop, ., isString, (, )]
[prop]
[!, NodeUtil, ., isValidPropertyName, (, prop, ., getString, (, ), )]
[NodeUtil, ., isValidPropertyName, (, prop, ., getString, (, ), )]
[NodeUtil]
[prop, ., getString, (, )]
[prop]
[t, ., report, (, n, ,, JQUERY_UNABLE_TO_EXPAND_INVALID_NAME_ERROR, ,, prop, ., getString, (, ), )]
[t]
[n]
[JQUERY_UNABLE_TO_EXPAND_INVALID_NAME_ERROR]
[prop, ., getString, (, )]
[prop]
[isValidExpansion]
[false]
[isValidExpansion]
[0]
[val, !=, null, &&, j, <, valueNodes, ., size, (, )]
[val, !=, null]
[val]
[null]
[j, <, valueNodes, ., size, (, )]
[j]
[valueNodes, ., size, (, )]
[valueNodes]
[j, ++]
[j]
[valueNodes, ., get, (, j, )]
[valueNodes]
[j]
[val, ., cloneTree, (, )]
[val]
[newValues, ., add, (, newNode, )]
[newValues]
[newNode]
[origNode, ., getParent, (, ), ., replaceChild, (, origNode, ,, newNode, )]
[origNode, ., getParent, (, )]
[origNode]
[origNode]
[newNode]
[IR, ., function, (, IR, ., name, (, "", ), ., srcref, (, key, ), ,, IR, ., paramList, (, ), ., srcref, (, key, ), ,, callbackFunction, ., getChildAtIndex, (, 2, ), ., cloneTree, (, ), ), ., srcref, (, key, )]
[IR, ., function, (, IR, ., name, (, "", ), ., srcref, (, key, ), ,, IR, ., paramList, (, ), ., srcref, (, key, ), ,, callbackFunction, ., getChildAtIndex, (, 2, ), ., cloneTree, (, ), )]
[IR]
[IR, ., name, (, "", ), ., srcref, (, key, )]
[IR, ., name, (, "", )]
[IR]
[""]
[key]
[IR, ., paramList, (, ), ., srcref, (, key, )]
[IR, ., paramList, (, )]
[IR]
[key]
[callbackFunction, ., getChildAtIndex, (, 2, ), ., cloneTree, (, )]
[callbackFunction, ., getChildAtIndex, (, 2, )]
[callbackFunction]
[2]
[key]
[IR, ., call, (, fnc, ), ., srcref, (, key, )]
[IR, ., call, (, fnc, )]
[IR]
[fnc]
[key]
[call, ., putBooleanProp, (, Node, ., FREE_CALL, ,, true, )]
[call]
[Node, ., FREE_CALL]
[Node]
[true]
[fncBlock, ., addChildToBack, (, IR, ., exprResult, (, call, ), ., srcref, (, call, ), )]
[fncBlock]
[IR, ., exprResult, (, call, ), ., srcref, (, call, )]
[IR, ., exprResult, (, call, )]
[IR]
[call]
[call]
[0]
[j, <, newGetProps, ., size, (, )]
[j]
[newGetProps, ., size, (, )]
[newGetProps]
[j, ++]
[j]
[newGetProps, ., get, (, j, ), ., getParent, (, ), ., replaceChild, (, newGetProps, ., get, (, j, ), ,, origGetElems, ., get, (, j, ), )]
[newGetProps, ., get, (, j, ), ., getParent, (, )]
[newGetProps, ., get, (, j, )]
[newGetProps]
[j]
[newGetProps, ., get, (, j, )]
[newGetProps]
[j]
[origGetElems, ., get, (, j, )]
[origGetElems]
[j]
[0]
[j, <, newKeys, ., size, (, )]
[j]
[newKeys, ., size, (, )]
[newKeys]
[j, ++]
[j]
[newKeys, ., get, (, j, ), ., getParent, (, ), ., replaceChild, (, newKeys, ., get, (, j, ), ,, keyNodes, ., get, (, j, ), )]
[newKeys, ., get, (, j, ), ., getParent, (, )]
[newKeys, ., get, (, j, )]
[newKeys]
[j]
[newKeys, ., get, (, j, )]
[newKeys]
[j]
[keyNodes, ., get, (, j, )]
[keyNodes]
[j]
[0]
[j, <, newValues, ., size, (, )]
[j]
[newValues, ., size, (, )]
[newValues]
[j, ++]
[j]
[newValues, ., get, (, j, ), ., getParent, (, ), ., replaceChild, (, newValues, ., get, (, j, ), ,, valueNodes, ., get, (, j, ), )]
[newValues, ., get, (, j, ), ., getParent, (, )]
[newValues, ., get, (, j, )]
[newValues]
[j]
[newValues, ., get, (, j, )]
[newValues]
[j]
[valueNodes, ., get, (, j, )]
[valueNodes]
[j]
[!, isValidExpansion]
[isValidExpansion]
[null]
[fncBlock]
[n, ., getParent, (, ), ., isExprResult, (, )]
[n, ., getParent, (, )]
[n]
[n, ., getParent, (, )]
[n]
[parent, ., getParent, (, )]
[parent]
[parent]
[expandedBlock, ., hasChildren, (, )]
[expandedBlock]
[expandedBlock, ., getFirstChild, (, ), ., detachFromParent, (, )]
[expandedBlock, ., getFirstChild, (, )]
[expandedBlock]
[grandparent, ., addChildAfter, (, child, ,, insertAfter, )]
[grandparent]
[child]
[insertAfter]
[insertAfter]
[child]
[grandparent, ., removeChild, (, parent, )]
[grandparent]
[parent]
[n, ., getFirstChild, (, )]
[n]
[callTarget, ., getNext, (, )]
[callTarget]
[objectToLoopOver, ., detachFromParent, (, )]
[objectToLoopOver]
[IR, ., returnNode, (, objectToLoopOver, ), ., srcref, (, callTarget, )]
[IR, ., returnNode, (, objectToLoopOver, )]
[IR]
[objectToLoopOver]
[callTarget]
[expandedBlock, ., addChildToBack, (, ret, )]
[expandedBlock]
[ret]
[IR, ., function, (, IR, ., name, (, "", ), ., srcref, (, callTarget, ), ,, IR, ., paramList, (, ), ., srcref, (, callTarget, ), ,, expandedBlock, )]
[IR]
[IR, ., name, (, "", ), ., srcref, (, callTarget, )]
[IR, ., name, (, "", )]
[IR]
[""]
[callTarget]
[IR, ., paramList, (, ), ., srcref, (, callTarget, )]
[IR, ., paramList, (, )]
[IR]
[callTarget]
[expandedBlock]
[n, ., replaceChild, (, callTarget, ,, fnc, )]
[n]
[callTarget]
[fnc]
[n, ., putBooleanProp, (, Node, ., FREE_CALL, ,, true, )]
[n]
[Node, ., FREE_CALL]
[Node]
[true]
[fnc, ., getNext, (, ), !=, null]
[fnc, ., getNext, (, )]
[fnc]
[null]
[n, ., removeChildAfter, (, fnc, )]
[n]
[fnc]
[compiler, ., reportCodeChange, (, )]
[compiler]
[n, ., children, (, ), ., iterator, (, )]
[n, ., children, (, )]
[n]
[iter, ., hasNext, (, )]
[iter]
[iter, ., next, (, )]
[iter]
[!, child, ., isString, (, )]
[child, ., isString, (, )]
[child]
[false]
[true]
[Preconditions, ., checkState, (, functionRoot, ., isFunction, (, ), )]
[Preconditions]
[functionRoot, ., isFunction, (, )]
[functionRoot]
[null]
[null]
[NodeUtil, ., getFunctionParameters, (, functionRoot, )]
[NodeUtil]
[functionRoot]
[callbackParams, ., getFirstChild, (, )]
[callbackParams]
[param, !=, null]
[param]
[null]
[Preconditions, ., checkState, (, param, ., isName, (, ), )]
[Preconditions]
[param, ., isName, (, )]
[param]
[keyString]
[param, ., getString, (, )]
[param]
[param]
[param, ., getNext, (, )]
[param]
[param, !=, null]
[param]
[null]
[Preconditions, ., checkState, (, param, ., isName, (, ), )]
[Preconditions]
[param, ., isName, (, )]
[param]
[valueString]
[param, ., getString, (, )]
[param]
[this, ., keyName]
[this]
[keyString]
[this, ., valueName]
[this]
[valueString]
[useArrayMode]
[this, ., keyReferences]
[this]
[valueReferences]
[this, ., valueReferences]
[this]
[keyReferences]
[this, ., keyReferences]
[this]
[keyReferences]
[this, ., valueReferences]
[this]
[valueReferences]
[this, ., startingScope]
[this]
[null]
[scope, ., getVar, (, name, )]
[scope]
[name]
[nameVar, !=, null, &&, nameVar, ., getScope, (, ), !=, this, ., startingScope]
[nameVar, !=, null]
[nameVar]
[null]
[nameVar, ., getScope, (, ), !=, this, ., startingScope]
[nameVar, ., getScope, (, )]
[nameVar]
[this, ., startingScope]
[this]
[false]
[t, ., getScope, (, ), ==, this, ., startingScope]
[t, ., getScope, (, )]
[t]
[this, ., startingScope]
[this]
[isThis]
[n, ., isThis, (, )]
[n]
[isThis, ||, n, ., isName, (, ), &&, !, isShadowed, (, n, ., getString, (, ), ,, t, ., getScope, (, ), )]
[isThis]
[n, ., isName, (, ), &&, !, isShadowed, (, n, ., getString, (, ), ,, t, ., getScope, (, ), )]
[n, ., isName, (, )]
[n]
[!, isShadowed, (, n, ., getString, (, ), ,, t, ., getScope, (, ), )]
[isShadowed, (, n, ., getString, (, ), ,, t, ., getScope, (, ), )]
[n, ., getString, (, )]
[n]
[t, ., getScope, (, )]
[t]
[isThis, ?, null, :, n, ., getString, (, )]
[isThis]
[null]
[n, ., getString, (, )]
[n]
[!, isThis, &&, keyName, !=, null, &&, nodeValue, ., equals, (, keyName, )]
[!, isThis, &&, keyName, !=, null]
[!, isThis]
[isThis]
[keyName, !=, null]
[keyName]
[null]
[nodeValue, ., equals, (, keyName, )]
[nodeValue]
[keyName]
[keyReferences, ., add, (, n, )]
[keyReferences]
[n]
[isThis, ||, (, valueName, !=, null, &&, nodeValue, ., equals, (, valueName, ), )]
[isThis]
[(, valueName, !=, null, &&, nodeValue, ., equals, (, valueName, ), )]
[valueName, !=, null, &&, nodeValue, ., equals, (, valueName, )]
[valueName, !=, null]
[valueName]
[null]
[nodeValue, ., equals, (, valueName, )]
[nodeValue]
[valueName]
[valueReferences, ., add, (, n, )]
[valueReferences]
[n]
[this, ., startingScope, ==, null]
[this, ., startingScope]
[this]
[null]
[this, ., startingScope]
[this]
[t, ., getScope, (, )]
[t]
