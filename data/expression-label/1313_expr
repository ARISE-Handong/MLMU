[HashMultimap, ., create, (, )]
[HashMultimap]
[false]
[new, ArrayList, <, Name, >, (, )]
[this, ., compiler]
[this]
[compiler]
[this, ., graph]
[this]
[new, NameReferenceGraph, (, compiler, )]
[compiler]
[this, ., graph]
[this]
[compiler, ., getTypedScopeCreator, (, )]
[compiler]
[scopeCreator, ==, null]
[scopeCreator]
[null]
[scopeCreator]
[new, MemoizedScopeCreator, (, new, TypedScopeCreator, (, compiler, ), )]
[new, TypedScopeCreator, (, compiler, )]
[compiler]
[new, NodeTraversal, (, compiler, ,, new, Traversal, (, true, ), ,, scopeCreator, )]
[compiler]
[new, Traversal, (, true, )]
[true]
[scopeCreator]
[new, NodeTraversal, (, compiler, ,, new, Traversal, (, false, ), ,, scopeCreator, )]
[compiler]
[new, Traversal, (, false, )]
[false]
[scopeCreator]
[compiler, ., getTopScope, (, )]
[compiler]
[topScope, !=, null]
[topScope]
[null]
[externsTraversal, ., traverseWithScope, (, externs, ,, topScope, )]
[externsTraversal]
[externs]
[topScope]
[codeTraversal, ., traverseWithScope, (, root, ,, topScope, )]
[codeTraversal]
[root]
[topScope]
[externsTraversal, ., traverse, (, externs, )]
[externsTraversal]
[externs]
[codeTraversal, ., traverse, (, root, )]
[codeTraversal]
[root]
[connectUnknowns, (, )]
[this, ., isExtern]
[this]
[isExtern]
[pushContainingFunction, (, graph, ., MAIN, )]
[graph, ., MAIN]
[graph]
[t, ., getScopeRoot, (, )]
[t]
[root, ., getParent, (, )]
[root]
[!, t, ., inGlobalScope, (, )]
[t, ., inGlobalScope, (, )]
[t]
[NodeUtil, ., getFunctionName, (, root, )]
[NodeUtil]
[root]
[name, ==, null]
[name]
[null]
[pushContainingFunction, (, graph, ., UNKNOWN, )]
[graph, ., UNKNOWN]
[graph]
[getType, (, root, )]
[root]
[parent, ., getParent, (, )]
[parent]
[gParent, ., getParent, (, )]
[gParent]
[parent, ., isAssign, (, ), &&, NodeUtil, ., isPrototypeProperty, (, parent, ., getFirstChild, (, ), )]
[parent, ., isAssign, (, )]
[parent]
[NodeUtil, ., isPrototypeProperty, (, parent, ., getFirstChild, (, ), )]
[NodeUtil]
[parent, ., getFirstChild, (, )]
[parent]
[pushContainingFunction, (, recordPrototypePropDefinition, (, t, ,, parent, ., getFirstChild, (, ), ,, type, ,, parent, ,, gParent, ,, ggParent, ), )]
[recordPrototypePropDefinition, (, t, ,, parent, ., getFirstChild, (, ), ,, type, ,, parent, ,, gParent, ,, ggParent, )]
[t]
[parent, ., getFirstChild, (, )]
[parent]
[type]
[parent]
[gParent]
[ggParent]
[pushContainingFunction, (, recordStaticNameDefinition, (, t, ,, name, ,, type, ,, root, ,, parent, ,, gParent, ,, root, ., getLastChild, (, ), ), )]
[recordStaticNameDefinition, (, t, ,, name, ,, type, ,, root, ,, parent, ,, gParent, ,, root, ., getLastChild, (, ), )]
[t]
[name]
[type]
[root]
[parent]
[gParent]
[root, ., getLastChild, (, )]
[root]
[!, t, ., inGlobalScope, (, )]
[t, ., inGlobalScope, (, )]
[t]
[popContainingFunction, (, )]
[true]
[@, SuppressWarnings, (, "fallthrough", )]
["fallthrough"]
[n, ., getType, (, )]
[n]
[Token, ., NAME]
[Token]
[Token, ., GETPROP]
[Token]
[parent, ., isGetProp, (, )]
[parent]
[parent, ., isFunction, (, )]
[parent]
[parent, ., isAssign, (, )]
[parent]
[isLocalNameReference, (, t, ,, n, )]
[t]
[n]
[isPrototypeNameReference, (, n, )]
[n]
[recordPrototypePropUse, (, t, ,, n, ,, parent, )]
[t]
[n]
[parent]
[isStaticNameReference, (, n, ,, t, ., getScope, (, ), )]
[n]
[t, ., getScope, (, )]
[t]
[recordStaticNameUse, (, t, ,, n, ,, parent, )]
[t]
[n]
[parent]
[recordUnknownUse, (, t, ,, n, ,, parent, )]
[t]
[n]
[parent]
[Token, ., ASSIGN]
[Token]
[n, ., getFirstChild, (, )]
[n]
[n, ., getLastChild, (, )]
[n]
[rhs, ., isFunction, (, )]
[rhs]
[lhs, ., isName, (, ), ||, lhs, ., isGetProp, (, ), ||, rhs, ., isGetProp, (, )]
[lhs, ., isName, (, ), ||, lhs, ., isGetProp, (, )]
[lhs, ., isName, (, )]
[lhs]
[lhs, ., isGetProp, (, )]
[lhs]
[rhs, ., isGetProp, (, )]
[rhs]
[NodeUtil, ., isPrototypeProperty, (, lhs, )]
[NodeUtil]
[lhs]
[recordPrototypePropDefinition, (, t, ,, lhs, ,, getType, (, rhs, ), ,, n, ,, parent, ,, parent, ., getParent, (, ), )]
[t]
[lhs]
[getType, (, rhs, )]
[rhs]
[n]
[parent]
[parent, ., getParent, (, )]
[parent]
[name, ., setAliased, (, true, )]
[name]
[true]
[maybeAliasNamesOnAssign, (, lhs, ,, rhs, )]
[lhs]
[rhs]
[Token, ., VAR]
[Token]
[n, ., getFirstChild, (, )]
[n]
[varName, ., getFirstChild, (, )]
[varName]
[assignedValue, ==, null]
[assignedValue]
[null]
[maybeAliasNamesOnAssign, (, varName, ,, assignedValue, )]
[varName]
[assignedValue]
[Token, ., CALL]
[Token]
[n, ., getFirstChild, (, )]
[n]
[(, param, =, param, ., getNext, (, ), ), !=, null]
[(, param, =, param, ., getNext, (, ), )]
[param]
[param, ., getNext, (, )]
[param]
[null]
[param, ., isName, (, ), ||, param, ., isGetProp, (, )]
[param, ., isName, (, )]
[param]
[param, ., isGetProp, (, )]
[param]
[safeAlias, (, param, )]
[param]
[maybeRecordExport, (, n, )]
[n]
[NodeUtil, ., containsType, (, n, ,, Token, ., NAME, ), ||, NodeUtil, ., containsType, (, n, ,, Token, ., GETELEM, ), ||, NodeUtil, ., containsType, (, n, ,, Token, ., GETPROP, )]
[NodeUtil, ., containsType, (, n, ,, Token, ., NAME, ), ||, NodeUtil, ., containsType, (, n, ,, Token, ., GETELEM, )]
[NodeUtil, ., containsType, (, n, ,, Token, ., NAME, )]
[NodeUtil]
[n]
[Token, ., NAME]
[Token]
[NodeUtil, ., containsType, (, n, ,, Token, ., GETELEM, )]
[NodeUtil]
[n]
[Token, ., GETELEM]
[Token]
[NodeUtil, ., containsType, (, n, ,, Token, ., GETPROP, )]
[NodeUtil]
[n]
[Token, ., GETPROP]
[Token]
[n, ., isName, (, ), ||, n, ., isGetProp, (, )]
[n, ., isName, (, )]
[n]
[n, ., isGetProp, (, )]
[n]
[n, ., getQualifiedName, (, )]
[n]
[name, !=, null]
[name]
[null]
[defineAndAlias, (, name, )]
[name]
[n, ., isGetProp, (, )]
[n]
[defineAndAlias, (, n, ., getLastChild, (, ), ., getString, (, ), )]
[n, ., getLastChild, (, ), ., getString, (, )]
[n, ., getLastChild, (, )]
[n]
[n, ., isAssign, (, )]
[n]
[safeAlias, (, n, ., getFirstChild, (, ), )]
[n, ., getFirstChild, (, )]
[n]
[n, ., hasChildren, (, )]
[n]
[n, ., getFirstChild, (, )]
[n]
[safeAlias, (, cur, )]
[cur]
[(, cur, =, cur, ., getNext, (, ), ), !=, null]
[(, cur, =, cur, ., getNext, (, ), )]
[cur]
[cur, ., getNext, (, )]
[cur]
[null]
[(, lhs, ., isName, (, ), ||, lhs, ., isGetProp, (, ), ), &&, containsName, (, rhs, ), &&, !, rhs, ., isFunction, (, ), &&, !, rhs, ., isNew, (, )]
[(, lhs, ., isName, (, ), ||, lhs, ., isGetProp, (, ), ), &&, containsName, (, rhs, ), &&, !, rhs, ., isFunction, (, )]
[(, lhs, ., isName, (, ), ||, lhs, ., isGetProp, (, ), ), &&, containsName, (, rhs, )]
[(, lhs, ., isName, (, ), ||, lhs, ., isGetProp, (, ), )]
[lhs, ., isName, (, ), ||, lhs, ., isGetProp, (, )]
[lhs, ., isName, (, )]
[lhs]
[lhs, ., isGetProp, (, )]
[lhs]
[containsName, (, rhs, )]
[rhs]
[!, rhs, ., isFunction, (, )]
[rhs, ., isFunction, (, )]
[rhs]
[!, rhs, ., isNew, (, )]
[rhs, ., isNew, (, )]
[rhs]
[safeAlias, (, lhs, )]
[lhs]
[safeAlias, (, rhs, )]
[rhs]
[graph, ., defineNameIfNotExists, (, name, ,, isExtern, ), ., setAliased, (, true, )]
[graph, ., defineNameIfNotExists, (, name, ,, isExtern, )]
[graph]
[name]
[isExtern]
[true]
[Preconditions, ., checkArgument, (, call, ., isCall, (, ), )]
[Preconditions]
[call, ., isCall, (, )]
[call]
[call, ., getFirstChild, (, )]
[call]
[!, getProp, ., isGetProp, (, )]
[getProp, ., isGetProp, (, )]
[getProp]
[getProp, ., getQualifiedName, (, )]
[getProp]
[propQName, ==, null]
[propQName]
[null]
[propQName, ., endsWith, (, ".call", ), ||, propQName, ., endsWith, (, ".apply", )]
[propQName, ., endsWith, (, ".call", )]
[propQName]
[".call"]
[propQName, ., endsWith, (, ".apply", )]
[propQName]
[".apply"]
[graph, ., defineNameIfNotExists, (, getProp, ., getFirstChild, (, ), ., getQualifiedName, (, ), ,, isExtern, ), ., markExposedToCallOrApply, (, )]
[graph, ., defineNameIfNotExists, (, getProp, ., getFirstChild, (, ), ., getQualifiedName, (, ), ,, isExtern, )]
[graph]
[getProp, ., getFirstChild, (, ), ., getQualifiedName, (, )]
[getProp, ., getFirstChild, (, )]
[getProp]
[isExtern]
[!, "goog.exportSymbol", ., equals, (, propQName, )]
["goog.exportSymbol", ., equals, (, propQName, )]
["goog.exportSymbol"]
[propQName]
[getProp, ., getNext, (, )]
[getProp]
[!, symbol, ., isString, (, )]
[symbol, ., isString, (, )]
[symbol]
[symbol, ., getNext, (, )]
[symbol]
[obj, ., getQualifiedName, (, )]
[obj]
[qName, ==, null, ||, obj, ., getNext, (, ), !=, null]
[qName, ==, null]
[qName]
[null]
[obj, ., getNext, (, ), !=, null]
[obj, ., getNext, (, )]
[obj]
[null]
[graph, ., defineNameIfNotExists, (, qName, ,, false, ), ., markExported, (, )]
[graph, ., defineNameIfNotExists, (, qName, ,, false, )]
[graph]
[qName]
[false]
[n, ., isName, (, )]
[n]
[t, ., getScope, (, ), ., getVar, (, n, ., getString, (, ), )]
[t, ., getScope, (, )]
[t]
[n, ., getString, (, )]
[n]
[v, !=, null, &&, v, ., isLocal, (, )]
[v, !=, null]
[v]
[null]
[v, ., isLocal, (, )]
[v]
[false]
[Preconditions, ., checkArgument, (, n, ., isName, (, ), ||, n, ., isGetProp, (, ), )]
[Preconditions]
[n, ., isName, (, ), ||, n, ., isGetProp, (, )]
[n, ., isName, (, )]
[n]
[n, ., isGetProp, (, )]
[n]
[n, ., isName, (, )]
[n]
[true]
[n, ., getQualifiedName, (, )]
[n]
[qName, ==, null]
[qName]
[null]
[false]
[scope, ., isDeclared, (, qName, ,, true, )]
[scope]
[qName]
[true]
[!, n, ., isGetProp, (, )]
[n, ., isGetProp, (, )]
[n]
[false]
[getType, (, n, ., getFirstChild, (, ), )]
[n, ., getFirstChild, (, )]
[n]
[type, ., isUnknownType, (, ), ||, type, ., isUnionType, (, )]
[type, ., isUnknownType, (, )]
[type]
[type, ., isUnionType, (, )]
[type]
[false]
[(, type, ., isInstanceType, (, ), ||, type, ., autoboxesTo, (, ), !=, null, )]
[type, ., isInstanceType, (, ), ||, type, ., autoboxesTo, (, ), !=, null]
[type, ., isInstanceType, (, )]
[type]
[type, ., autoboxesTo, (, ), !=, null]
[type, ., autoboxesTo, (, )]
[type]
[null]
[getNamedContainingFunction, (, ), !=, graph, ., MAIN]
[getNamedContainingFunction, (, )]
[graph, ., MAIN]
[graph]
[type, ., isConstructor, (, )]
[type]
[recordClassConstructorOrInterface, (, name, ,, type, ., toMaybeFunctionType, (, ), ,, n, ,, parent, ,, parent, ., getParent, (, ), ,, rValue, )]
[name]
[type, ., toMaybeFunctionType, (, )]
[type]
[n]
[parent]
[parent, ., getParent, (, )]
[parent]
[rValue]
[graph, ., defineNameIfNotExists, (, name, ,, isExtern, )]
[graph]
[name]
[isExtern]
[symbol, ., setType, (, type, )]
[symbol]
[type]
[n, ., isAssign, (, )]
[n]
[symbol, ., addAssignmentDeclaration, (, n, )]
[symbol]
[n]
[symbol, ., addFunctionDeclaration, (, n, )]
[symbol]
[n]
[symbol]
[getType, (, NodeUtil, ., getPrototypeClassName, (, qName, ), )]
[NodeUtil, ., getPrototypeClassName, (, qName, )]
[NodeUtil]
[qName]
[null]
[null]
[constructor, !=, null, &&, constructor, ., isConstructor, (, )]
[constructor, !=, null]
[constructor]
[null]
[constructor, ., isConstructor, (, )]
[constructor]
[classType]
[constructor, ., toMaybeFunctionType, (, )]
[constructor]
[className]
[classType, ., getReferenceName, (, )]
[classType]
[classType]
[compiler, ., getTypeRegistry, (, ), ., getNativeFunctionType, (, JSTypeNative, ., U2U_CONSTRUCTOR_TYPE, )]
[compiler, ., getTypeRegistry, (, )]
[compiler]
[JSTypeNative, ., U2U_CONSTRUCTOR_TYPE]
[JSTypeNative]
[className]
[NodeUtil, ., getPrototypeClassName, (, qName, ), ., getQualifiedName, (, )]
[NodeUtil, ., getPrototypeClassName, (, qName, )]
[NodeUtil]
[qName]
[recordClassConstructorOrInterface, (, className, ,, classType, ,, null, ,, null, ,, null, ,, null, )]
[className]
[classType]
[null]
[null]
[null]
[null]
[className, +, ".prototype.", +, NodeUtil, ., getPrototypePropertyName, (, qName, )]
[className, +, ".prototype."]
[className]
[".prototype."]
[NodeUtil, ., getPrototypePropertyName, (, qName, )]
[NodeUtil]
[qName]
[graph, ., defineNameIfNotExists, (, qNameStr, ,, isExtern, )]
[graph]
[qNameStr]
[isExtern]
[Preconditions, ., checkNotNull, (, prototypeProp, ,, "%s should be in the name graph as a node.", ,, qNameStr, )]
[Preconditions]
[prototypeProp]
["%s should be in the name graph as a node."]
[qNameStr]
[assign, !=, null]
[assign]
[null]
[prototypeProp, ., addAssignmentDeclaration, (, assign, )]
[prototypeProp]
[assign]
[prototypeProp, ., setType, (, type, )]
[prototypeProp]
[type]
[prototypeProp]
[isExtern]
[null]
[new, Reference, (, n, ,, parent, )]
[n]
[parent]
[graph, ., defineNameIfNotExists, (, n, ., getQualifiedName, (, ), ,, isExtern, )]
[graph]
[n, ., getQualifiedName, (, )]
[n]
[isExtern]
[name, ., setType, (, getType, (, n, ), )]
[name]
[getType, (, n, )]
[n]
[graph, ., connect, (, getNamedContainingFunction, (, ), ,, reference, ,, name, )]
[graph]
[getNamedContainingFunction, (, )]
[reference]
[name]
[reference]
[Preconditions, ., checkArgument, (, n, ., isGetProp, (, ), )]
[Preconditions]
[n, ., isGetProp, (, )]
[n]
[n, ., getFirstChild, (, )]
[n]
[getType, (, instance, )]
[instance]
[instanceType, ., autoboxesTo, (, )]
[instanceType]
[instanceType]
[boxedType, !=, null, ?, boxedType, :, instanceType]
[boxedType, !=, null]
[boxedType]
[null]
[boxedType]
[instanceType]
[instanceType, ., toObjectType, (, )]
[instanceType]
[Preconditions, ., checkState, (, objType, !=, null, )]
[Preconditions]
[objType, !=, null]
[objType]
[null]
[!, isExtern]
[isExtern]
[new, Reference, (, n, ,, parent, )]
[n]
[parent]
[objType, ., getConstructor, (, )]
[objType]
[constructor, !=, null]
[constructor]
[null]
[n, ., getLastChild, (, ), ., getString, (, )]
[n, ., getLastChild, (, )]
[n]
[!, constructor, ., getPrototype, (, ), ., hasOwnProperty, (, propName, )]
[constructor, ., getPrototype, (, ), ., hasOwnProperty, (, propName, )]
[constructor, ., getPrototype, (, )]
[constructor]
[propName]
[recordSuperClassPrototypePropUse, (, constructor, ,, propName, ,, ref, )]
[constructor]
[propName]
[ref]
[recordSubclassPrototypePropUse, (, constructor, ,, propName, ,, ref, )]
[constructor]
[propName]
[ref]
[recordUnknownUse, (, t, ,, n, ,, parent, )]
[t]
[n]
[parent]
[classType, ., getSuperClassConstructor, (, )]
[classType]
[superClass, !=, null]
[superClass]
[null]
[superClass, ., getPrototype, (, ), ., hasOwnProperty, (, prop, )]
[superClass, ., getPrototype, (, )]
[superClass]
[prop]
[graph, ., connect, (, getNamedContainingFunction, (, ), ,, ref, ,, graph, ., defineNameIfNotExists, (, superClass, ., getReferenceName, (, ), +, ".prototype.", +, prop, ,, false, ), )]
[graph]
[getNamedContainingFunction, (, )]
[ref]
[graph, ., defineNameIfNotExists, (, superClass, ., getReferenceName, (, ), +, ".prototype.", +, prop, ,, false, )]
[graph]
[superClass, ., getReferenceName, (, ), +, ".prototype.", +, prop]
[superClass, ., getReferenceName, (, ), +, ".prototype."]
[superClass, ., getReferenceName, (, )]
[superClass]
[".prototype."]
[prop]
[false]
[superClass]
[superClass, ., getSuperClassConstructor, (, )]
[superClass]
[classType, ., getPrototype, (, ), ., hasOwnProperty, (, prop, )]
[classType, ., getPrototype, (, )]
[classType]
[prop]
[graph, ., connect, (, getNamedContainingFunction, (, ), ,, ref, ,, graph, ., defineNameIfNotExists, (, classType, ., getReferenceName, (, ), +, ".prototype.", +, prop, ,, false, ), )]
[graph]
[getNamedContainingFunction, (, )]
[ref]
[graph, ., defineNameIfNotExists, (, classType, ., getReferenceName, (, ), +, ".prototype.", +, prop, ,, false, )]
[graph]
[classType, ., getReferenceName, (, ), +, ".prototype.", +, prop]
[classType, ., getReferenceName, (, ), +, ".prototype."]
[classType, ., getReferenceName, (, )]
[classType]
[".prototype."]
[prop]
[false]
[classType, ., getSubTypes, (, ), !=, null]
[classType, ., getSubTypes, (, )]
[classType]
[null]
[classType, ., getSubTypes, (, )]
[classType]
[recordSubclassPrototypePropUse, (, subclass, ,, prop, ,, ref, )]
[subclass]
[prop]
[ref]
[isExtern]
[Preconditions, ., checkArgument, (, n, ., isGetProp, (, ), )]
[Preconditions]
[n, ., isGetProp, (, )]
[n]
[new, Reference, (, n, ,, parent, )]
[n]
[parent]
[ref, ., setUnknown, (, true, )]
[ref]
[true]
[unknownNameUse, ., put, (, n, ., getLastChild, (, ), ., getString, (, ), ,, new, NameUse, (, getNamedContainingFunction, (, ), ,, ref, ), )]
[unknownNameUse]
[n, ., getLastChild, (, ), ., getString, (, )]
[n, ., getLastChild, (, )]
[n]
[new, NameUse, (, getNamedContainingFunction, (, ), ,, ref, )]
[getNamedContainingFunction, (, )]
[ref]
[Preconditions, ., checkArgument, (, type, ., isConstructor, (, ), ||, type, ., isInterface, (, ), )]
[Preconditions]
[type, ., isConstructor, (, ), ||, type, ., isInterface, (, )]
[type, ., isConstructor, (, )]
[type]
[type, ., isInterface, (, )]
[type]
[graph, ., defineNameIfNotExists, (, name, ,, isExtern, )]
[graph]
[name]
[isExtern]
[rhs, !=, null]
[rhs]
[null]
[symbol, ., setType, (, getType, (, rhs, ), )]
[symbol]
[getType, (, rhs, )]
[rhs]
[n, ., isAssign, (, )]
[n]
[symbol, ., addAssignmentDeclaration, (, n, )]
[symbol]
[n]
[symbol, ., addFunctionDeclaration, (, n, )]
[symbol]
[n]
[type, ., getPrototype, (, )]
[type]
[prototype, ., getOwnPropertyNames, (, )]
[prototype]
[graph, ., defineNameIfNotExists, (, name, +, ".prototype.", +, prop, ,, isExtern, )]
[graph]
[name, +, ".prototype.", +, prop]
[name, +, ".prototype."]
[name]
[".prototype."]
[prop]
[isExtern]
[symbol]
[graph, ., getNodes, (, )]
[graph]
[node, ., getValue, (, )]
[node]
[name, ., getPropertyName, (, )]
[name]
[propName, ==, null]
[propName]
[null]
[unknownNameUse, ., get, (, propName, )]
[unknownNameUse]
[propName]
[uses, !=, null]
[uses]
[null]
[uses]
[graph, ., connect, (, use, ., name, ,, use, ., reference, ,, name, )]
[graph]
[use, ., name]
[use]
[use, ., reference]
[use]
[name]
[n, ., getJSType, (, )]
[n]
[type, ==, null]
[type]
[null]
[CONSERVATIVE]
[new, RuntimeException, (, "Type system failed us :(", )]
["Type system failed us :("]
[compiler, ., getTypeRegistry, (, ), ., getNativeType, (, JSTypeNative, ., UNKNOWN_TYPE, )]
[compiler, ., getTypeRegistry, (, )]
[compiler]
[JSTypeNative, ., UNKNOWN_TYPE]
[JSTypeNative]
[type, ., restrictByNotNullOrUndefined, (, )]
[type]
[currentFunctionStack, ., add, (, functionNode, )]
[currentFunctionStack]
[functionNode]
[currentFunctionStack, ., remove, (, currentFunctionStack, ., size, (, ), -, 1, )]
[currentFunctionStack]
[currentFunctionStack, ., size, (, ), -, 1]
[currentFunctionStack, ., size, (, )]
[currentFunctionStack]
[1]
[null]
[pos]
[currentFunctionStack, ., size, (, ), -, 1]
[currentFunctionStack, ., size, (, )]
[currentFunctionStack]
[1]
[pos, >=, 0]
[pos]
[0]
[pos]
[pos, -, 1]
[pos]
[1]
[currentFunctionStack, ., get, (, pos, )]
[currentFunctionStack]
[pos]
[cf, !=, graph, ., UNKNOWN]
[cf]
[graph, ., UNKNOWN]
[graph]
[containingFn]
[cf]
[Preconditions, ., checkNotNull, (, containingFn, )]
[Preconditions]
[containingFn]
[containingFn]
[this, ., name]
[this]
[name]
[this, ., reference]
[this]
[reference]
