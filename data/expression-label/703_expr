[this, ., first]
[this]
[annotatable]
[this, ., second]
[this]
[annotation]
[1L]
[size]
[!, isConnected, (, n1, ,, edge, ,, n2, )]
[isConnected, (, n1, ,, edge, ,, n2, )]
[n1]
[edge]
[n2]
[connect, (, n1, ,, edge, ,, n2, )]
[n1]
[edge]
[n2]
[getNodeDegree, (, value, )]
[value]
[getNode, (, n, ), !=, null]
[getNode, (, n, )]
[n]
[null]
[@, SuppressWarnings, (, "unchecked", )]
["unchecked"]
[(, T, ), getNode, (, val, )]
[getNode, (, val, )]
[val]
[node, ==, null]
[node]
[null]
[new, IllegalArgumentException, (, val, +, " does not exist in graph", )]
[val, +, " does not exist in graph"]
[val]
[" does not exist in graph"]
[node]
[getNodes, (, )]
[n, ., setAnnotation, (, null, )]
[n]
[null]
[getEdges, (, )]
[e, ., setAnnotation, (, null, )]
[e]
[null]
[nodeAnnotationStack, ==, null]
[nodeAnnotationStack]
[null]
[nodeAnnotationStack]
[Lists, ., newLinkedList, (, )]
[Lists]
[pushAnnotations, (, nodeAnnotationStack, ,, getNodes, (, ), )]
[nodeAnnotationStack]
[getNodes, (, )]
[Preconditions, ., checkNotNull, (, nodeAnnotationStack, ,, "Popping node annotations without pushing.", )]
[Preconditions]
[nodeAnnotationStack]
["Popping node annotations without pushing."]
[popAnnotations, (, nodeAnnotationStack, )]
[nodeAnnotationStack]
[edgeAnnotationStack, ==, null]
[edgeAnnotationStack]
[null]
[edgeAnnotationStack]
[Lists, ., newLinkedList, (, )]
[Lists]
[pushAnnotations, (, edgeAnnotationStack, ,, getEdges, (, ), )]
[edgeAnnotationStack]
[getEdges, (, )]
[Preconditions, ., checkNotNull, (, edgeAnnotationStack, ,, "Popping edge annotations without pushing.", )]
[Preconditions]
[edgeAnnotationStack]
["Popping edge annotations without pushing."]
[popAnnotations, (, edgeAnnotationStack, )]
[edgeAnnotationStack]
[Lists, ., newArrayList, (, )]
[Lists]
[this, ., graph]
[this]
[graph]
[graph, ., getNode, (, value, )]
[graph]
[value]
[nodes]
[graph, ., getNeighborNodes, (, n, ., getValue, (, ), ), ., contains, (, node, )]
[graph, ., getNeighborNodes, (, n, ., getValue, (, ), )]
[graph]
[n, ., getValue, (, )]
[n]
[node]
[false]
[true]
[nodes, ., add, (, graph, ., getNodeOrFail, (, value, ), )]
[nodes]
[graph, ., getNodeOrFail, (, value, )]
[graph]
[value]
[stack, ., push, (, new, GraphAnnotationState, (, haveAnnotations, ., size, (, ), ), )]
[stack]
[new, GraphAnnotationState, (, haveAnnotations, ., size, (, ), )]
[haveAnnotations, ., size, (, )]
[haveAnnotations]
[haveAnnotations]
[stack, ., peek, (, ), ., add, (, new, AnnotationState, (, h, ,, h, ., getAnnotation, (, ), ), )]
[stack, ., peek, (, )]
[stack]
[new, AnnotationState, (, h, ,, h, ., getAnnotation, (, ), )]
[h]
[h, ., getAnnotation, (, )]
[h]
[h, ., setAnnotation, (, null, )]
[h]
[null]
[stack, ., pop, (, )]
[stack]
[as, ., first, ., setAnnotation, (, as, ., second, )]
[as, ., first]
[as]
[as, ., second]
[as]
