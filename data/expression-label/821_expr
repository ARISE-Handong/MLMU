[DiagnosticType, ., warning, (, "JSC_REFERENCE_BEFORE_DECLARE", ,, "Variable referenced before declaration: {0}", )]
[DiagnosticType]
["JSC_REFERENCE_BEFORE_DECLARE"]
["Variable referenced before declaration: {0}"]
[DiagnosticType, ., warning, (, "JSC_REDECLARED_VARIABLE", ,, "Redeclared variable: {0}", )]
[DiagnosticType]
["JSC_REDECLARED_VARIABLE"]
["Redeclared variable: {0}"]
[DiagnosticType, ., disabled, (, "AMBIGUOUS_FUNCTION_DECL", ,, "Ambiguous use of a named function: {0}.", )]
[DiagnosticType]
["AMBIGUOUS_FUNCTION_DECL"]
["Ambiguous use of a named function: {0}."]
[Sets, ., newHashSet, (, )]
[Sets]
[this, ., compiler]
[this]
[compiler]
[this, ., checkLevel]
[this]
[checkLevel]
[new, ReferenceCollectingCallback, (, compiler, ,, new, ReferenceCheckingBehavior, (, ), )]
[compiler]
[new, ReferenceCheckingBehavior, (, )]
[callback, ., process, (, externs, ,, root, )]
[callback]
[externs]
[root]
[new, ReferenceCollectingCallback, (, compiler, ,, new, ReferenceCheckingBehavior, (, ), )]
[compiler]
[new, ReferenceCheckingBehavior, (, )]
[callback, ., hotSwapScript, (, scriptRoot, ,, originalRoot, )]
[callback]
[scriptRoot]
[originalRoot]
[t, ., getScope, (, ), ., getVars, (, )]
[t, ., getScope, (, )]
[t]
[it, ., hasNext, (, )]
[it]
[it, ., next, (, )]
[it]
[checkVar, (, t, ,, v, ,, referenceMap, ., getReferences, (, v, ), ., references, )]
[t]
[v]
[referenceMap, ., getReferences, (, v, ), ., references]
[referenceMap, ., getReferences, (, v, )]
[referenceMap]
[v]
[blocksWithDeclarations, ., clear, (, )]
[blocksWithDeclarations]
[false]
[false]
[null]
[references]
[reference, ., isHoistedFunction, (, )]
[reference]
[blocksWithDeclarations, ., add, (, reference, ., getBasicBlock, (, ), )]
[blocksWithDeclarations]
[reference, ., getBasicBlock, (, )]
[reference]
[isDeclaredInScope]
[true]
[hoistedFn]
[reference]
[NodeUtil, ., isFunctionDeclaration, (, reference, ., getNode, (, ), ., getParent, (, ), )]
[NodeUtil]
[reference, ., getNode, (, ), ., getParent, (, )]
[reference, ., getNode, (, )]
[reference]
[isUnhoistedNamedFunction]
[true]
[references]
[reference, ==, hoistedFn]
[reference]
[hoistedFn]
[reference, ., getBasicBlock, (, )]
[reference]
[reference, ., isDeclaration, (, )]
[reference]
[SyntacticScopeCreator, ., hasDuplicateDeclarationSuppression, (, reference, ., getNode, (, ), ,, v, )]
[SyntacticScopeCreator]
[reference, ., getNode, (, )]
[reference]
[v]
[isDeclaration, &&, !, allowDupe]
[isDeclaration]
[!, allowDupe]
[allowDupe]
[blocksWithDeclarations]
[declaredBlock, ., provablyExecutesBefore, (, basicBlock, )]
[declaredBlock]
[basicBlock]
[NodeUtil, ., getSourceName, (, reference, ., getNode, (, ), )]
[NodeUtil]
[reference, ., getNode, (, )]
[reference]
[compiler, ., report, (, JSError, ., make, (, filename, ,, reference, ., getNode, (, ), ,, checkLevel, ,, REDECLARED_VARIABLE, ,, v, ., name, ), )]
[compiler]
[JSError, ., make, (, filename, ,, reference, ., getNode, (, ), ,, checkLevel, ,, REDECLARED_VARIABLE, ,, v, ., name, )]
[JSError]
[filename]
[reference, ., getNode, (, )]
[reference]
[checkLevel]
[REDECLARED_VARIABLE]
[v, ., name]
[v]
[isUnhoistedNamedFunction, &&, !, isDeclaration, &&, isDeclaredInScope]
[isUnhoistedNamedFunction, &&, !, isDeclaration]
[isUnhoistedNamedFunction]
[!, isDeclaration]
[isDeclaration]
[isDeclaredInScope]
[blocksWithDeclarations]
[!, declaredBlock, ., provablyExecutesBefore, (, basicBlock, )]
[declaredBlock, ., provablyExecutesBefore, (, basicBlock, )]
[declaredBlock]
[basicBlock]
[NodeUtil, ., getSourceName, (, reference, ., getNode, (, ), )]
[NodeUtil]
[reference, ., getNode, (, )]
[reference]
[compiler, ., report, (, JSError, ., make, (, filename, ,, reference, ., getNode, (, ), ,, AMBIGUOUS_FUNCTION_DECL, ,, v, ., name, ), )]
[compiler]
[JSError, ., make, (, filename, ,, reference, ., getNode, (, ), ,, AMBIGUOUS_FUNCTION_DECL, ,, v, ., name, )]
[JSError]
[filename]
[reference, ., getNode, (, )]
[reference]
[AMBIGUOUS_FUNCTION_DECL]
[v, ., name]
[v]
[!, isDeclaration, &&, !, isDeclaredInScope]
[!, isDeclaration]
[isDeclaration]
[!, isDeclaredInScope]
[isDeclaredInScope]
[!, reference, ., getNode, (, ), ., isFromExterns, (, )]
[reference, ., getNode, (, ), ., isFromExterns, (, )]
[reference, ., getNode, (, )]
[reference]
[reference, ., getGrandparent, (, )]
[reference]
[grandparent, ., isName, (, ), &&, grandparent, ., getString, (, ), ==, v, ., name]
[grandparent, ., isName, (, )]
[grandparent]
[grandparent, ., getString, (, ), ==, v, ., name]
[grandparent, ., getString, (, )]
[grandparent]
[v, ., name]
[v]
[reference, ., getScope, (, ), ==, v, ., scope]
[reference, ., getScope, (, )]
[reference]
[v, ., scope]
[v]
[NodeUtil, ., getSourceName, (, reference, ., getNode, (, ), )]
[NodeUtil]
[reference, ., getNode, (, )]
[reference]
[compiler, ., report, (, JSError, ., make, (, filename, ,, reference, ., getNode, (, ), ,, checkLevel, ,, UNDECLARED_REFERENCE, ,, v, ., name, ), )]
[compiler]
[JSError, ., make, (, filename, ,, reference, ., getNode, (, ), ,, checkLevel, ,, UNDECLARED_REFERENCE, ,, v, ., name, )]
[JSError]
[filename]
[reference, ., getNode, (, )]
[reference]
[checkLevel]
[UNDECLARED_REFERENCE]
[v, ., name]
[v]
[isDeclaration]
[blocksWithDeclarations, ., add, (, basicBlock, )]
[blocksWithDeclarations]
[basicBlock]
[isDeclaredInScope]
[true]
