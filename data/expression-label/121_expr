[new, RestrictByTrueTypeOfResultVisitor, (, ), {, @, Override, protected, JSType, caseTopType, (, JSType, topType, ), {, return, topType, ;, }, @, Override, public, JSType, caseObjectType, (, ObjectType, type, ), {, JSType, arrayType, =, getNativeType, (, ARRAY_TYPE, ), ;, return, arrayType, ., isSubtype, (, type, ), ?, arrayType, :, null, ;, }, }]
[topType]
[getNativeType, (, ARRAY_TYPE, )]
[ARRAY_TYPE]
[arrayType, ., isSubtype, (, type, ), ?, arrayType, :, null]
[arrayType, ., isSubtype, (, type, )]
[arrayType]
[type]
[arrayType]
[null]
[new, RestrictByFalseTypeOfResultVisitor, (, ), {, @, Override, public, JSType, caseObjectType, (, ObjectType, type, ), {, return, type, ., isSubtype, (, getNativeType, (, ARRAY_TYPE, ), ), ?, null, :, type, ;, }, }]
[type, ., isSubtype, (, getNativeType, (, ARRAY_TYPE, ), ), ?, null, :, type]
[type, ., isSubtype, (, getNativeType, (, ARRAY_TYPE, ), )]
[type]
[getNativeType, (, ARRAY_TYPE, )]
[ARRAY_TYPE]
[null]
[type]
[new, RestrictByTrueTypeOfResultVisitor, (, ), {, @, Override, protected, JSType, caseTopType, (, JSType, topType, ), {, return, getNativeType, (, NO_OBJECT_TYPE, ), ;, }, @, Override, public, JSType, caseObjectType, (, ObjectType, type, ), {, return, type, ;, }, @, Override, public, JSType, caseFunctionType, (, FunctionType, type, ), {, return, type, ;, }, }]
[getNativeType, (, NO_OBJECT_TYPE, )]
[NO_OBJECT_TYPE]
[type]
[type]
[new, RestrictByFalseTypeOfResultVisitor, (, ), {, @, Override, public, JSType, caseAllType, (, ), {, return, typeRegistry, ., createUnionType, (, getNativeType, (, NUMBER_STRING_BOOLEAN, ), ,, getNativeType, (, NULL_VOID, ), ), ;, }, @, Override, public, JSType, caseObjectType, (, ObjectType, type, ), {, return, null, ;, }, @, Override, public, JSType, caseFunctionType, (, FunctionType, type, ), {, return, null, ;, }, }]
[typeRegistry, ., createUnionType, (, getNativeType, (, NUMBER_STRING_BOOLEAN, ), ,, getNativeType, (, NULL_VOID, ), )]
[typeRegistry]
[getNativeType, (, NUMBER_STRING_BOOLEAN, )]
[NUMBER_STRING_BOOLEAN]
[getNativeType, (, NULL_VOID, )]
[NULL_VOID]
[null]
[null]
[convention]
[typeRegistry]
[this, ., restricters]
[this]
[new, ImmutableMap, ., Builder, <, String, ,, Function, <, TypeRestriction, ,, JSType, >, >, (, ), ., put, (, "isDef", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, if, (, p, ., outcome, ), {, return, getRestrictedWithoutUndefined, (, p, ., type, ), ;, }, else, {, return, p, ., type, !=, null, ?, getNativeType, (, VOID_TYPE, ), ., getGreatestSubtype, (, p, ., type, ), :, null, ;, }, }, }, ), ., put, (, "isNull", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, if, (, p, ., outcome, ), {, return, p, ., type, !=, null, ?, getNativeType, (, NULL_TYPE, ), ., getGreatestSubtype, (, p, ., type, ), :, null, ;, }, else, {, return, getRestrictedWithoutNull, (, p, ., type, ), ;, }, }, }, ), ., put, (, "isDefAndNotNull", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, if, (, p, ., outcome, ), {, return, getRestrictedWithoutUndefined, (, getRestrictedWithoutNull, (, p, ., type, ), ), ;, }, else, {, return, p, ., type, !=, null, ?, getNativeType, (, NULL_VOID, ), ., getGreatestSubtype, (, p, ., type, ), :, null, ;, }, }, }, ), ., put, (, "isString", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, return, getRestrictedByTypeOfResult, (, p, ., type, ,, "string", ,, p, ., outcome, ), ;, }, }, ), ., put, (, "isBoolean", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, return, getRestrictedByTypeOfResult, (, p, ., type, ,, "boolean", ,, p, ., outcome, ), ;, }, }, ), ., put, (, "isNumber", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, return, getRestrictedByTypeOfResult, (, p, ., type, ,, "number", ,, p, ., outcome, ), ;, }, }, ), ., put, (, "isFunction", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, return, getRestrictedByTypeOfResult, (, p, ., type, ,, "function", ,, p, ., outcome, ), ;, }, }, ), ., put, (, "isArray", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, if, (, p, ., type, ==, null, ), {, return, p, ., outcome, ?, getNativeType, (, ARRAY_TYPE, ), :, null, ;, }, Visitor, <, JSType, >, visitor, =, p, ., outcome, ?, restrictToArrayVisitor, :, restrictToNotArrayVisitor, ;, return, p, ., type, ., visit, (, visitor, ), ;, }, }, ), ., put, (, "isObject", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, if, (, p, ., type, ==, null, ), {, return, p, ., outcome, ?, getNativeType, (, OBJECT_TYPE, ), :, null, ;, }, Visitor, <, JSType, >, visitor, =, p, ., outcome, ?, restrictToObjectVisitor, :, restrictToNotObjectVisitor, ;, return, p, ., type, ., visit, (, visitor, ), ;, }, }, ), ., build, (, )]
[new, ImmutableMap, ., Builder, <, String, ,, Function, <, TypeRestriction, ,, JSType, >, >, (, ), ., put, (, "isDef", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, if, (, p, ., outcome, ), {, return, getRestrictedWithoutUndefined, (, p, ., type, ), ;, }, else, {, return, p, ., type, !=, null, ?, getNativeType, (, VOID_TYPE, ), ., getGreatestSubtype, (, p, ., type, ), :, null, ;, }, }, }, ), ., put, (, "isNull", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, if, (, p, ., outcome, ), {, return, p, ., type, !=, null, ?, getNativeType, (, NULL_TYPE, ), ., getGreatestSubtype, (, p, ., type, ), :, null, ;, }, else, {, return, getRestrictedWithoutNull, (, p, ., type, ), ;, }, }, }, ), ., put, (, "isDefAndNotNull", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, if, (, p, ., outcome, ), {, return, getRestrictedWithoutUndefined, (, getRestrictedWithoutNull, (, p, ., type, ), ), ;, }, else, {, return, p, ., type, !=, null, ?, getNativeType, (, NULL_VOID, ), ., getGreatestSubtype, (, p, ., type, ), :, null, ;, }, }, }, ), ., put, (, "isString", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, return, getRestrictedByTypeOfResult, (, p, ., type, ,, "string", ,, p, ., outcome, ), ;, }, }, ), ., put, (, "isBoolean", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, return, getRestrictedByTypeOfResult, (, p, ., type, ,, "boolean", ,, p, ., outcome, ), ;, }, }, ), ., put, (, "isNumber", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, return, getRestrictedByTypeOfResult, (, p, ., type, ,, "number", ,, p, ., outcome, ), ;, }, }, ), ., put, (, "isFunction", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, return, getRestrictedByTypeOfResult, (, p, ., type, ,, "function", ,, p, ., outcome, ), ;, }, }, ), ., put, (, "isArray", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, if, (, p, ., type, ==, null, ), {, return, p, ., outcome, ?, getNativeType, (, ARRAY_TYPE, ), :, null, ;, }, Visitor, <, JSType, >, visitor, =, p, ., outcome, ?, restrictToArrayVisitor, :, restrictToNotArrayVisitor, ;, return, p, ., type, ., visit, (, visitor, ), ;, }, }, ), ., put, (, "isObject", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, if, (, p, ., type, ==, null, ), {, return, p, ., outcome, ?, getNativeType, (, OBJECT_TYPE, ), :, null, ;, }, Visitor, <, JSType, >, visitor, =, p, ., outcome, ?, restrictToObjectVisitor, :, restrictToNotObjectVisitor, ;, return, p, ., type, ., visit, (, visitor, ), ;, }, }, )]
[new, ImmutableMap, ., Builder, <, String, ,, Function, <, TypeRestriction, ,, JSType, >, >, (, ), ., put, (, "isDef", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, if, (, p, ., outcome, ), {, return, getRestrictedWithoutUndefined, (, p, ., type, ), ;, }, else, {, return, p, ., type, !=, null, ?, getNativeType, (, VOID_TYPE, ), ., getGreatestSubtype, (, p, ., type, ), :, null, ;, }, }, }, ), ., put, (, "isNull", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, if, (, p, ., outcome, ), {, return, p, ., type, !=, null, ?, getNativeType, (, NULL_TYPE, ), ., getGreatestSubtype, (, p, ., type, ), :, null, ;, }, else, {, return, getRestrictedWithoutNull, (, p, ., type, ), ;, }, }, }, ), ., put, (, "isDefAndNotNull", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, if, (, p, ., outcome, ), {, return, getRestrictedWithoutUndefined, (, getRestrictedWithoutNull, (, p, ., type, ), ), ;, }, else, {, return, p, ., type, !=, null, ?, getNativeType, (, NULL_VOID, ), ., getGreatestSubtype, (, p, ., type, ), :, null, ;, }, }, }, ), ., put, (, "isString", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, return, getRestrictedByTypeOfResult, (, p, ., type, ,, "string", ,, p, ., outcome, ), ;, }, }, ), ., put, (, "isBoolean", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, return, getRestrictedByTypeOfResult, (, p, ., type, ,, "boolean", ,, p, ., outcome, ), ;, }, }, ), ., put, (, "isNumber", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, return, getRestrictedByTypeOfResult, (, p, ., type, ,, "number", ,, p, ., outcome, ), ;, }, }, ), ., put, (, "isFunction", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, return, getRestrictedByTypeOfResult, (, p, ., type, ,, "function", ,, p, ., outcome, ), ;, }, }, ), ., put, (, "isArray", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, if, (, p, ., type, ==, null, ), {, return, p, ., outcome, ?, getNativeType, (, ARRAY_TYPE, ), :, null, ;, }, Visitor, <, JSType, >, visitor, =, p, ., outcome, ?, restrictToArrayVisitor, :, restrictToNotArrayVisitor, ;, return, p, ., type, ., visit, (, visitor, ), ;, }, }, )]
[new, ImmutableMap, ., Builder, <, String, ,, Function, <, TypeRestriction, ,, JSType, >, >, (, ), ., put, (, "isDef", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, if, (, p, ., outcome, ), {, return, getRestrictedWithoutUndefined, (, p, ., type, ), ;, }, else, {, return, p, ., type, !=, null, ?, getNativeType, (, VOID_TYPE, ), ., getGreatestSubtype, (, p, ., type, ), :, null, ;, }, }, }, ), ., put, (, "isNull", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, if, (, p, ., outcome, ), {, return, p, ., type, !=, null, ?, getNativeType, (, NULL_TYPE, ), ., getGreatestSubtype, (, p, ., type, ), :, null, ;, }, else, {, return, getRestrictedWithoutNull, (, p, ., type, ), ;, }, }, }, ), ., put, (, "isDefAndNotNull", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, if, (, p, ., outcome, ), {, return, getRestrictedWithoutUndefined, (, getRestrictedWithoutNull, (, p, ., type, ), ), ;, }, else, {, return, p, ., type, !=, null, ?, getNativeType, (, NULL_VOID, ), ., getGreatestSubtype, (, p, ., type, ), :, null, ;, }, }, }, ), ., put, (, "isString", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, return, getRestrictedByTypeOfResult, (, p, ., type, ,, "string", ,, p, ., outcome, ), ;, }, }, ), ., put, (, "isBoolean", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, return, getRestrictedByTypeOfResult, (, p, ., type, ,, "boolean", ,, p, ., outcome, ), ;, }, }, ), ., put, (, "isNumber", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, return, getRestrictedByTypeOfResult, (, p, ., type, ,, "number", ,, p, ., outcome, ), ;, }, }, ), ., put, (, "isFunction", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, return, getRestrictedByTypeOfResult, (, p, ., type, ,, "function", ,, p, ., outcome, ), ;, }, }, )]
[new, ImmutableMap, ., Builder, <, String, ,, Function, <, TypeRestriction, ,, JSType, >, >, (, ), ., put, (, "isDef", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, if, (, p, ., outcome, ), {, return, getRestrictedWithoutUndefined, (, p, ., type, ), ;, }, else, {, return, p, ., type, !=, null, ?, getNativeType, (, VOID_TYPE, ), ., getGreatestSubtype, (, p, ., type, ), :, null, ;, }, }, }, ), ., put, (, "isNull", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, if, (, p, ., outcome, ), {, return, p, ., type, !=, null, ?, getNativeType, (, NULL_TYPE, ), ., getGreatestSubtype, (, p, ., type, ), :, null, ;, }, else, {, return, getRestrictedWithoutNull, (, p, ., type, ), ;, }, }, }, ), ., put, (, "isDefAndNotNull", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, if, (, p, ., outcome, ), {, return, getRestrictedWithoutUndefined, (, getRestrictedWithoutNull, (, p, ., type, ), ), ;, }, else, {, return, p, ., type, !=, null, ?, getNativeType, (, NULL_VOID, ), ., getGreatestSubtype, (, p, ., type, ), :, null, ;, }, }, }, ), ., put, (, "isString", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, return, getRestrictedByTypeOfResult, (, p, ., type, ,, "string", ,, p, ., outcome, ), ;, }, }, ), ., put, (, "isBoolean", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, return, getRestrictedByTypeOfResult, (, p, ., type, ,, "boolean", ,, p, ., outcome, ), ;, }, }, ), ., put, (, "isNumber", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, return, getRestrictedByTypeOfResult, (, p, ., type, ,, "number", ,, p, ., outcome, ), ;, }, }, )]
[new, ImmutableMap, ., Builder, <, String, ,, Function, <, TypeRestriction, ,, JSType, >, >, (, ), ., put, (, "isDef", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, if, (, p, ., outcome, ), {, return, getRestrictedWithoutUndefined, (, p, ., type, ), ;, }, else, {, return, p, ., type, !=, null, ?, getNativeType, (, VOID_TYPE, ), ., getGreatestSubtype, (, p, ., type, ), :, null, ;, }, }, }, ), ., put, (, "isNull", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, if, (, p, ., outcome, ), {, return, p, ., type, !=, null, ?, getNativeType, (, NULL_TYPE, ), ., getGreatestSubtype, (, p, ., type, ), :, null, ;, }, else, {, return, getRestrictedWithoutNull, (, p, ., type, ), ;, }, }, }, ), ., put, (, "isDefAndNotNull", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, if, (, p, ., outcome, ), {, return, getRestrictedWithoutUndefined, (, getRestrictedWithoutNull, (, p, ., type, ), ), ;, }, else, {, return, p, ., type, !=, null, ?, getNativeType, (, NULL_VOID, ), ., getGreatestSubtype, (, p, ., type, ), :, null, ;, }, }, }, ), ., put, (, "isString", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, return, getRestrictedByTypeOfResult, (, p, ., type, ,, "string", ,, p, ., outcome, ), ;, }, }, ), ., put, (, "isBoolean", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, return, getRestrictedByTypeOfResult, (, p, ., type, ,, "boolean", ,, p, ., outcome, ), ;, }, }, )]
[new, ImmutableMap, ., Builder, <, String, ,, Function, <, TypeRestriction, ,, JSType, >, >, (, ), ., put, (, "isDef", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, if, (, p, ., outcome, ), {, return, getRestrictedWithoutUndefined, (, p, ., type, ), ;, }, else, {, return, p, ., type, !=, null, ?, getNativeType, (, VOID_TYPE, ), ., getGreatestSubtype, (, p, ., type, ), :, null, ;, }, }, }, ), ., put, (, "isNull", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, if, (, p, ., outcome, ), {, return, p, ., type, !=, null, ?, getNativeType, (, NULL_TYPE, ), ., getGreatestSubtype, (, p, ., type, ), :, null, ;, }, else, {, return, getRestrictedWithoutNull, (, p, ., type, ), ;, }, }, }, ), ., put, (, "isDefAndNotNull", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, if, (, p, ., outcome, ), {, return, getRestrictedWithoutUndefined, (, getRestrictedWithoutNull, (, p, ., type, ), ), ;, }, else, {, return, p, ., type, !=, null, ?, getNativeType, (, NULL_VOID, ), ., getGreatestSubtype, (, p, ., type, ), :, null, ;, }, }, }, ), ., put, (, "isString", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, return, getRestrictedByTypeOfResult, (, p, ., type, ,, "string", ,, p, ., outcome, ), ;, }, }, )]
[new, ImmutableMap, ., Builder, <, String, ,, Function, <, TypeRestriction, ,, JSType, >, >, (, ), ., put, (, "isDef", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, if, (, p, ., outcome, ), {, return, getRestrictedWithoutUndefined, (, p, ., type, ), ;, }, else, {, return, p, ., type, !=, null, ?, getNativeType, (, VOID_TYPE, ), ., getGreatestSubtype, (, p, ., type, ), :, null, ;, }, }, }, ), ., put, (, "isNull", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, if, (, p, ., outcome, ), {, return, p, ., type, !=, null, ?, getNativeType, (, NULL_TYPE, ), ., getGreatestSubtype, (, p, ., type, ), :, null, ;, }, else, {, return, getRestrictedWithoutNull, (, p, ., type, ), ;, }, }, }, ), ., put, (, "isDefAndNotNull", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, if, (, p, ., outcome, ), {, return, getRestrictedWithoutUndefined, (, getRestrictedWithoutNull, (, p, ., type, ), ), ;, }, else, {, return, p, ., type, !=, null, ?, getNativeType, (, NULL_VOID, ), ., getGreatestSubtype, (, p, ., type, ), :, null, ;, }, }, }, )]
[new, ImmutableMap, ., Builder, <, String, ,, Function, <, TypeRestriction, ,, JSType, >, >, (, ), ., put, (, "isDef", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, if, (, p, ., outcome, ), {, return, getRestrictedWithoutUndefined, (, p, ., type, ), ;, }, else, {, return, p, ., type, !=, null, ?, getNativeType, (, VOID_TYPE, ), ., getGreatestSubtype, (, p, ., type, ), :, null, ;, }, }, }, ), ., put, (, "isNull", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, if, (, p, ., outcome, ), {, return, p, ., type, !=, null, ?, getNativeType, (, NULL_TYPE, ), ., getGreatestSubtype, (, p, ., type, ), :, null, ;, }, else, {, return, getRestrictedWithoutNull, (, p, ., type, ), ;, }, }, }, )]
[new, ImmutableMap, ., Builder, <, String, ,, Function, <, TypeRestriction, ,, JSType, >, >, (, ), ., put, (, "isDef", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, if, (, p, ., outcome, ), {, return, getRestrictedWithoutUndefined, (, p, ., type, ), ;, }, else, {, return, p, ., type, !=, null, ?, getNativeType, (, VOID_TYPE, ), ., getGreatestSubtype, (, p, ., type, ), :, null, ;, }, }, }, )]
[new, ImmutableMap, ., Builder, <, String, ,, Function, <, TypeRestriction, ,, JSType, >, >, (, )]
["isDef"]
[new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, if, (, p, ., outcome, ), {, return, getRestrictedWithoutUndefined, (, p, ., type, ), ;, }, else, {, return, p, ., type, !=, null, ?, getNativeType, (, VOID_TYPE, ), ., getGreatestSubtype, (, p, ., type, ), :, null, ;, }, }, }]
[p, ., outcome]
[p]
[getRestrictedWithoutUndefined, (, p, ., type, )]
[p, ., type]
[p]
[p, ., type, !=, null, ?, getNativeType, (, VOID_TYPE, ), ., getGreatestSubtype, (, p, ., type, ), :, null]
[p, ., type, !=, null]
[p, ., type]
[p]
[null]
[getNativeType, (, VOID_TYPE, ), ., getGreatestSubtype, (, p, ., type, )]
[getNativeType, (, VOID_TYPE, )]
[VOID_TYPE]
[p, ., type]
[p]
[null]
["isNull"]
[new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, if, (, p, ., outcome, ), {, return, p, ., type, !=, null, ?, getNativeType, (, NULL_TYPE, ), ., getGreatestSubtype, (, p, ., type, ), :, null, ;, }, else, {, return, getRestrictedWithoutNull, (, p, ., type, ), ;, }, }, }]
[p, ., outcome]
[p]
[p, ., type, !=, null, ?, getNativeType, (, NULL_TYPE, ), ., getGreatestSubtype, (, p, ., type, ), :, null]
[p, ., type, !=, null]
[p, ., type]
[p]
[null]
[getNativeType, (, NULL_TYPE, ), ., getGreatestSubtype, (, p, ., type, )]
[getNativeType, (, NULL_TYPE, )]
[NULL_TYPE]
[p, ., type]
[p]
[null]
[getRestrictedWithoutNull, (, p, ., type, )]
[p, ., type]
[p]
["isDefAndNotNull"]
[new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, if, (, p, ., outcome, ), {, return, getRestrictedWithoutUndefined, (, getRestrictedWithoutNull, (, p, ., type, ), ), ;, }, else, {, return, p, ., type, !=, null, ?, getNativeType, (, NULL_VOID, ), ., getGreatestSubtype, (, p, ., type, ), :, null, ;, }, }, }]
[p, ., outcome]
[p]
[getRestrictedWithoutUndefined, (, getRestrictedWithoutNull, (, p, ., type, ), )]
[getRestrictedWithoutNull, (, p, ., type, )]
[p, ., type]
[p]
[p, ., type, !=, null, ?, getNativeType, (, NULL_VOID, ), ., getGreatestSubtype, (, p, ., type, ), :, null]
[p, ., type, !=, null]
[p, ., type]
[p]
[null]
[getNativeType, (, NULL_VOID, ), ., getGreatestSubtype, (, p, ., type, )]
[getNativeType, (, NULL_VOID, )]
[NULL_VOID]
[p, ., type]
[p]
[null]
["isString"]
[new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, return, getRestrictedByTypeOfResult, (, p, ., type, ,, "string", ,, p, ., outcome, ), ;, }, }]
[getRestrictedByTypeOfResult, (, p, ., type, ,, "string", ,, p, ., outcome, )]
[p, ., type]
[p]
["string"]
[p, ., outcome]
[p]
["isBoolean"]
[new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, return, getRestrictedByTypeOfResult, (, p, ., type, ,, "boolean", ,, p, ., outcome, ), ;, }, }]
[getRestrictedByTypeOfResult, (, p, ., type, ,, "boolean", ,, p, ., outcome, )]
[p, ., type]
[p]
["boolean"]
[p, ., outcome]
[p]
["isNumber"]
[new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, return, getRestrictedByTypeOfResult, (, p, ., type, ,, "number", ,, p, ., outcome, ), ;, }, }]
[getRestrictedByTypeOfResult, (, p, ., type, ,, "number", ,, p, ., outcome, )]
[p, ., type]
[p]
["number"]
[p, ., outcome]
[p]
["isFunction"]
[new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, return, getRestrictedByTypeOfResult, (, p, ., type, ,, "function", ,, p, ., outcome, ), ;, }, }]
[getRestrictedByTypeOfResult, (, p, ., type, ,, "function", ,, p, ., outcome, )]
[p, ., type]
[p]
["function"]
[p, ., outcome]
[p]
["isArray"]
[new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, if, (, p, ., type, ==, null, ), {, return, p, ., outcome, ?, getNativeType, (, ARRAY_TYPE, ), :, null, ;, }, Visitor, <, JSType, >, visitor, =, p, ., outcome, ?, restrictToArrayVisitor, :, restrictToNotArrayVisitor, ;, return, p, ., type, ., visit, (, visitor, ), ;, }, }]
[p, ., type, ==, null]
[p, ., type]
[p]
[null]
[p, ., outcome, ?, getNativeType, (, ARRAY_TYPE, ), :, null]
[p, ., outcome]
[p]
[getNativeType, (, ARRAY_TYPE, )]
[ARRAY_TYPE]
[null]
[p, ., outcome, ?, restrictToArrayVisitor, :, restrictToNotArrayVisitor]
[p, ., outcome]
[p]
[restrictToArrayVisitor]
[restrictToNotArrayVisitor]
[p, ., type, ., visit, (, visitor, )]
[p, ., type]
[p]
[visitor]
["isObject"]
[new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, ), {, if, (, p, ., type, ==, null, ), {, return, p, ., outcome, ?, getNativeType, (, OBJECT_TYPE, ), :, null, ;, }, Visitor, <, JSType, >, visitor, =, p, ., outcome, ?, restrictToObjectVisitor, :, restrictToNotObjectVisitor, ;, return, p, ., type, ., visit, (, visitor, ), ;, }, }]
[p, ., type, ==, null]
[p, ., type]
[p]
[null]
[p, ., outcome, ?, getNativeType, (, OBJECT_TYPE, ), :, null]
[p, ., outcome]
[p]
[getNativeType, (, OBJECT_TYPE, )]
[OBJECT_TYPE]
[null]
[p, ., outcome, ?, restrictToObjectVisitor, :, restrictToNotObjectVisitor]
[p, ., outcome]
[p]
[restrictToObjectVisitor]
[restrictToNotObjectVisitor]
[p, ., type, ., visit, (, visitor, )]
[p, ., type]
[p]
[visitor]
[condition, ., isCall, (, ), &&, condition, ., getChildCount, (, ), ==, 2]
[condition, ., isCall, (, )]
[condition]
[condition, ., getChildCount, (, ), ==, 2]
[condition, ., getChildCount, (, )]
[condition]
[2]
[condition, ., getFirstChild, (, )]
[condition]
[condition, ., getLastChild, (, )]
[condition]
[callee, ., isGetProp, (, ), &&, param, ., isQualifiedName, (, )]
[callee, ., isGetProp, (, )]
[callee]
[param, ., isQualifiedName, (, )]
[param]
[getTypeIfRefinable, (, param, ,, blindScope, )]
[param]
[blindScope]
[callee, ., getFirstChild, (, )]
[callee]
[callee, ., getLastChild, (, )]
[callee]
[left, ., isName, (, ), &&, "goog", ., equals, (, left, ., getString, (, ), ), &&, right, ., isString, (, )]
[left, ., isName, (, ), &&, "goog", ., equals, (, left, ., getString, (, ), )]
[left, ., isName, (, )]
[left]
["goog", ., equals, (, left, ., getString, (, ), )]
["goog"]
[left, ., getString, (, )]
[left]
[right, ., isString, (, )]
[right]
[restricters, ., get, (, right, ., getString, (, ), )]
[restricters]
[right, ., getString, (, )]
[right]
[restricter, !=, null]
[restricter]
[null]
[restrictParameter, (, param, ,, paramType, ,, blindScope, ,, restricter, ,, outcome, )]
[param]
[paramType]
[blindScope]
[restricter]
[outcome]
[nextPreciserScopeKnowingConditionOutcome, (, condition, ,, blindScope, ,, outcome, )]
[condition]
[blindScope]
[outcome]
[type]
[restriction, ., apply, (, new, TypeRestriction, (, type, ,, outcome, ), )]
[restriction]
[new, TypeRestriction, (, type, ,, outcome, )]
[type]
[outcome]
[type, !=, null]
[type]
[null]
[blindScope, ., createChildFlowScope, (, )]
[blindScope]
[declareNameInScope, (, informed, ,, parameter, ,, type, )]
[informed]
[parameter]
[type]
[informed]
[blindScope]
[this, ., type]
[this]
[type]
[this, ., outcome]
[this]
[outcome]
