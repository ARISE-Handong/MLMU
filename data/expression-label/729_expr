[this, ., u]
[this]
[u]
[this, ., v]
[this]
[v]
[w]
[Vector3D, ., crossProduct, (, u, ,, v, )]
[Vector3D]
[u]
[v]
[new, BoundaryProjector, (, )]
[polyhedronsSet, ., getTree, (, true, ), ., visit, (, projector, )]
[polyhedronsSet, ., getTree, (, true, )]
[polyhedronsSet]
[true]
[projector]
[projector, ., getProjected, (, )]
[projector]
[projected, ., getVertices, (, )]
[projected]
[0]
[i, <, outline, ., length]
[i]
[outline, ., length]
[outline]
[++, i]
[i]
[outline, [, i, ]]
[outline]
[i]
[rawLoop, ., length]
[rawLoop]
[0]
[j, <, end]
[j]
[end]
[pointIsBetween, (, rawLoop, ,, end, ,, j, )]
[rawLoop]
[end]
[j]
[j]
[k, <, (, end, -, 1, )]
[k]
[(, end, -, 1, )]
[end, -, 1]
[end]
[1]
[++, k]
[k]
[rawLoop, [, k, ]]
[rawLoop]
[k]
[rawLoop, [, k, +, 1, ]]
[rawLoop]
[k, +, 1]
[k]
[1]
[--, end]
[end]
[++, j]
[j]
[end, !=, rawLoop, ., length]
[end]
[rawLoop, ., length]
[rawLoop]
[outline, [, i, ]]
[outline]
[i]
[new, Vector2D, [, end, ]]
[end]
[System, ., arraycopy, (, rawLoop, ,, 0, ,, outline, [, i, ], ,, 0, ,, end, )]
[System]
[rawLoop]
[0]
[outline, [, i, ]]
[outline]
[i]
[0]
[end]
[outline]
[loop, [, (, i, +, n, -, 1, ), %, n, ]]
[loop]
[(, i, +, n, -, 1, ), %, n]
[(, i, +, n, -, 1, )]
[i, +, n, -, 1]
[i, +, n]
[i]
[n]
[1]
[n]
[loop, [, i, ]]
[loop]
[i]
[loop, [, (, i, +, 1, ), %, n, ]]
[loop]
[(, i, +, 1, ), %, n]
[(, i, +, 1, )]
[i, +, 1]
[i]
[1]
[n]
[current, ., getX, (, ), -, previous, ., getX, (, )]
[current, ., getX, (, )]
[current]
[previous, ., getX, (, )]
[previous]
[current, ., getY, (, ), -, previous, ., getY, (, )]
[current, ., getY, (, )]
[current]
[previous, ., getY, (, )]
[previous]
[next, ., getX, (, ), -, current, ., getX, (, )]
[next, ., getX, (, )]
[next]
[current, ., getX, (, )]
[current]
[next, ., getY, (, ), -, current, ., getY, (, )]
[next, ., getY, (, )]
[next]
[current, ., getY, (, )]
[current]
[dx1, *, dy2, -, dx2, *, dy1]
[dx1, *, dy2]
[dx1]
[dy2]
[dx2, *, dy1]
[dx2]
[dy1]
[dx1, *, dx2, +, dy1, *, dy2]
[dx1, *, dx2]
[dx1]
[dx2]
[dy1, *, dy2]
[dy1]
[dy2]
[FastMath, ., sqrt, (, (, dx1, *, dx1, +, dy1, *, dy1, ), *, (, dx2, *, dx2, +, dy2, *, dy2, ), )]
[FastMath]
[(, dx1, *, dx1, +, dy1, *, dy1, ), *, (, dx2, *, dx2, +, dy2, *, dy2, )]
[(, dx1, *, dx1, +, dy1, *, dy1, )]
[dx1, *, dx1, +, dy1, *, dy1]
[dx1, *, dx1]
[dx1]
[dx1]
[dy1, *, dy1]
[dy1]
[dy1]
[(, dx2, *, dx2, +, dy2, *, dy2, )]
[dx2, *, dx2, +, dy2, *, dy2]
[dx2, *, dx2]
[dx2]
[dx2]
[dy2, *, dy2]
[dy2]
[dy2]
[(, FastMath, ., abs, (, cross, ), <=, (, 1.0e-6, *, d1d2, ), ), &&, (, dot, >=, 0.0, )]
[(, FastMath, ., abs, (, cross, ), <=, (, 1.0e-6, *, d1d2, ), )]
[FastMath, ., abs, (, cross, ), <=, (, 1.0e-6, *, d1d2, )]
[FastMath, ., abs, (, cross, )]
[FastMath]
[cross]
[(, 1.0e-6, *, d1d2, )]
[1.0e-6, *, d1d2]
[1.0e-6]
[d1d2]
[(, dot, >=, 0.0, )]
[dot, >=, 0.0]
[dot]
[0.0]
[projected]
[new, PolygonsSet, (, new, BSPTree, <, Euclidean2D, >, (, Boolean, ., FALSE, ), )]
[new, BSPTree, <, Euclidean2D, >, (, Boolean, ., FALSE, )]
[Boolean, ., FALSE]
[Boolean]
[Order, ., MINUS_SUB_PLUS]
[Order]
[@, SuppressWarnings, (, "unchecked", )]
["unchecked"]
[(, BoundaryAttribute, <, Euclidean3D, >, ), node, ., getAttribute, (, )]
[node, ., getAttribute, (, )]
[node]
[attribute, ., getPlusOutside, (, ), !=, null]
[attribute, ., getPlusOutside, (, )]
[attribute]
[null]
[addContribution, (, attribute, ., getPlusOutside, (, ), ,, false, )]
[attribute, ., getPlusOutside, (, )]
[attribute]
[false]
[attribute, ., getPlusInside, (, ), !=, null]
[attribute, ., getPlusInside, (, )]
[attribute]
[null]
[addContribution, (, attribute, ., getPlusInside, (, ), ,, true, )]
[attribute, ., getPlusInside, (, )]
[attribute]
[true]
[@, SuppressWarnings, (, "unchecked", )]
["unchecked"]
[(, AbstractSubHyperplane, <, Euclidean3D, ,, Euclidean2D, >, ), facet]
[facet]
[(, Plane, ), facet, ., getHyperplane, (, )]
[facet, ., getHyperplane, (, )]
[facet]
[plane, ., getNormal, (, ), ., dotProduct, (, w, )]
[plane, ., getNormal, (, )]
[plane]
[w]
[FastMath, ., abs, (, scal, ), >, 1.0e-3]
[FastMath, ., abs, (, scal, )]
[FastMath]
[scal]
[1.0e-3]
[(, (, PolygonsSet, ), absFacet, ., getRemainingRegion, (, ), ), ., getVertices, (, )]
[(, (, PolygonsSet, ), absFacet, ., getRemainingRegion, (, ), )]
[(, PolygonsSet, ), absFacet, ., getRemainingRegion, (, )]
[absFacet, ., getRemainingRegion, (, )]
[absFacet]
[(, scal, <, 0, ), ^, reversed]
[(, scal, <, 0, )]
[scal, <, 0]
[scal]
[0]
[reversed]
[new, Vector2D, [, vertices, ., length, ], [, ]]
[vertices, ., length]
[vertices]
[0]
[i, <, vertices, ., length]
[i]
[vertices, ., length]
[vertices]
[++, i]
[i]
[vertices, [, i, ]]
[vertices]
[i]
[new, Vector2D, [, loop, ., length, ]]
[loop, ., length]
[loop]
[loop, [, 0, ], ==, null]
[loop, [, 0, ]]
[loop]
[0]
[null]
[newLoop, [, 0, ]]
[newLoop]
[0]
[null]
[1]
[j, <, loop, ., length]
[j]
[loop, ., length]
[loop]
[++, j]
[j]
[newLoop, [, j, ]]
[newLoop]
[j]
[loop, [, loop, ., length, -, j, ]]
[loop]
[loop, ., length, -, j]
[loop, ., length]
[loop]
[j]
[0]
[j, <, loop, ., length]
[j]
[loop, ., length]
[loop]
[++, j]
[j]
[newLoop, [, j, ]]
[newLoop]
[j]
[loop, [, loop, ., length, -, (, j, +, 1, ), ]]
[loop]
[loop, ., length, -, (, j, +, 1, )]
[loop, ., length]
[loop]
[(, j, +, 1, )]
[j, +, 1]
[j]
[1]
[newVertices, [, i, ]]
[newVertices]
[i]
[newLoop]
[vertices]
[newVertices]
[new, ArrayList, <, SubHyperplane, <, Euclidean2D, >, >, (, )]
[vertices]
[loop, [, 0, ], !=, null]
[loop, [, 0, ]]
[loop]
[0]
[null]
[closed, ?, (, loop, ., length, -, 1, ), :, 1]
[closed]
[(, loop, ., length, -, 1, )]
[loop, ., length, -, 1]
[loop, ., length]
[loop]
[1]
[1]
[plane, ., toSpace, (, loop, [, previous, ], )]
[plane]
[loop, [, previous, ]]
[loop]
[previous]
[(, previous, +, 1, ), %, loop, ., length]
[(, previous, +, 1, )]
[previous, +, 1]
[previous]
[1]
[loop, ., length]
[loop]
[new, Vector2D, (, previous3D, ., dotProduct, (, u, ), ,, previous3D, ., dotProduct, (, v, ), )]
[previous3D, ., dotProduct, (, u, )]
[previous3D]
[u]
[previous3D, ., dotProduct, (, v, )]
[previous3D]
[v]
[current, <, loop, ., length]
[current]
[loop, ., length]
[loop]
[plane, ., toSpace, (, loop, [, current, ], )]
[plane]
[loop, [, current, ]]
[loop]
[current]
[new, Vector2D, (, current3D, ., dotProduct, (, u, ), ,, current3D, ., dotProduct, (, v, ), )]
[current3D, ., dotProduct, (, u, )]
[current3D]
[u]
[current3D, ., dotProduct, (, v, )]
[current3D]
[v]
[new, org, ., apache, ., commons, ., math3, ., geometry, ., euclidean, ., twod, ., Line, (, pPoint, ,, cPoint, )]
[pPoint]
[cPoint]
[line, ., wholeHyperplane, (, )]
[line]
[closed, ||, (, previous, !=, 1, )]
[closed]
[(, previous, !=, 1, )]
[previous, !=, 1]
[previous]
[1]
[line, ., getAngle, (, ), +, 0.5, *, FastMath, ., PI]
[line, ., getAngle, (, )]
[line]
[0.5, *, FastMath, ., PI]
[0.5]
[FastMath, ., PI]
[FastMath]
[new, org, ., apache, ., commons, ., math3, ., geometry, ., euclidean, ., twod, ., Line, (, pPoint, ,, angle, )]
[pPoint]
[angle]
[edge]
[edge, ., split, (, l, ), ., getPlus, (, )]
[edge, ., split, (, l, )]
[edge]
[l]
[closed, ||, (, current, !=, (, loop, ., length, -, 1, ), )]
[closed]
[(, current, !=, (, loop, ., length, -, 1, ), )]
[current, !=, (, loop, ., length, -, 1, )]
[current]
[(, loop, ., length, -, 1, )]
[loop, ., length, -, 1]
[loop, ., length]
[loop]
[1]
[line, ., getAngle, (, ), +, 0.5, *, FastMath, ., PI]
[line, ., getAngle, (, )]
[line]
[0.5, *, FastMath, ., PI]
[0.5]
[FastMath, ., PI]
[FastMath]
[new, org, ., apache, ., commons, ., math3, ., geometry, ., euclidean, ., twod, ., Line, (, cPoint, ,, angle, )]
[cPoint]
[angle]
[edge]
[edge, ., split, (, l, ), ., getMinus, (, )]
[edge, ., split, (, l, )]
[edge]
[l]
[edges, ., add, (, edge, )]
[edges]
[edge]
[previous]
[current, ++]
[current]
[previous3D]
[current3D]
[pPoint]
[cPoint]
[new, PolygonsSet, (, edges, )]
[edges]
[projected]
[(, PolygonsSet, ), new, RegionFactory, <, Euclidean2D, >, (, ), ., union, (, projected, ,, projectedFacet, )]
[new, RegionFactory, <, Euclidean2D, >, (, ), ., union, (, projected, ,, projectedFacet, )]
[new, RegionFactory, <, Euclidean2D, >, (, )]
[projected]
[projectedFacet]
[projected]
