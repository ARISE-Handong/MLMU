[DiagnosticType, ., error, (, "JSC_CANNOT_PARSE_GENERATED_CODE", ,, "Internal compiler error. Cannot parse generated code: {0}", )]
[DiagnosticType]
["JSC_CANNOT_PARSE_GENERATED_CODE"]
["Internal compiler error. Cannot parse generated code: {0}"]
[DiagnosticType, ., error, (, "JSC_GENERATED_BAD_CODE", ,, "Internal compiler error. Generated bad code.", +, "----------------------------------------\n", +, "Expected:\n{0}\n", +, "----------------------------------------\n", +, "Actual:\n{1}", )]
[DiagnosticType]
["JSC_GENERATED_BAD_CODE"]
["Internal compiler error. Generated bad code.", +, "----------------------------------------\n", +, "Expected:\n{0}\n", +, "----------------------------------------\n", +, "Actual:\n{1}"]
["Internal compiler error. Generated bad code.", +, "----------------------------------------\n", +, "Expected:\n{0}\n", +, "----------------------------------------\n"]
["Internal compiler error. Generated bad code.", +, "----------------------------------------\n", +, "Expected:\n{0}\n"]
["Internal compiler error. Generated bad code.", +, "----------------------------------------\n"]
["Internal compiler error. Generated bad code."]
["----------------------------------------\n"]
["Expected:\n{0}\n"]
["----------------------------------------\n"]
["Actual:\n{1}"]
[new, AstValidator, (, )]
[this, ., compiler]
[this]
[compiler]
[sanityCheckAst, (, externs, ,, root, )]
[externs]
[root]
[sanityCheckNormalization, (, externs, ,, root, )]
[externs]
[root]
[sanityCheckCodeGeneration, (, root, )]
[root]
[sanityCheckVars, (, externs, ,, root, )]
[externs]
[root]
[astValidator, ., validateCodeRoot, (, externs, )]
[astValidator]
[externs]
[astValidator, ., validateCodeRoot, (, root, )]
[astValidator]
[root]
[compiler, ., getLifeCycleStage, (, ), ., isNormalized, (, )]
[compiler, ., getLifeCycleStage, (, )]
[compiler]
[(, new, VarCheck, (, compiler, ,, true, ), ), ., process, (, externs, ,, root, )]
[(, new, VarCheck, (, compiler, ,, true, ), )]
[new, VarCheck, (, compiler, ,, true, )]
[compiler]
[true]
[externs]
[root]
[compiler, ., hasHaltingErrors, (, )]
[compiler]
[null]
[compiler, ., toSource, (, root, )]
[compiler]
[root]
[compiler, ., parseSyntheticCode, (, source, )]
[compiler]
[source]
[compiler, ., hasHaltingErrors, (, )]
[compiler]
[compiler, ., report, (, JSError, ., make, (, CANNOT_PARSE_GENERATED_CODE, ,, Strings, ., truncateAtMaxLength, (, source, ,, 100, ,, true, ), ), )]
[compiler]
[JSError, ., make, (, CANNOT_PARSE_GENERATED_CODE, ,, Strings, ., truncateAtMaxLength, (, source, ,, 100, ,, true, ), )]
[JSError]
[CANNOT_PARSE_GENERATED_CODE]
[Strings, ., truncateAtMaxLength, (, source, ,, 100, ,, true, )]
[Strings]
[source]
[100]
[true]
[new, IllegalStateException, (, "Sanity Check failed", )]
["Sanity Check failed"]
[compiler, ., toSource, (, root2, )]
[compiler]
[root2]
[!, source, ., equals, (, source2, )]
[source, ., equals, (, source2, )]
[source]
[source2]
[compiler, ., report, (, JSError, ., make, (, GENERATED_BAD_CODE, ,, source, ,, source2, ), )]
[compiler]
[JSError, ., make, (, GENERATED_BAD_CODE, ,, source, ,, source2, )]
[JSError]
[GENERATED_BAD_CODE]
[source]
[source2]
[new, IllegalStateException, (, "Sanity Check failed", )]
["Sanity Check failed"]
[root2]
[new, CodeChangeHandler, ., ForbiddenChange, (, )]
[compiler, ., addChangeHandler, (, handler, )]
[compiler]
[handler]
[new, PrepareAst, (, compiler, ,, true, ), ., process, (, null, ,, root, )]
[new, PrepareAst, (, compiler, ,, true, )]
[compiler]
[true]
[null]
[root]
[compiler, ., getLifeCycleStage, (, ), ., isNormalized, (, )]
[compiler, ., getLifeCycleStage, (, )]
[compiler]
[(, new, Normalize, (, compiler, ,, true, ), ), ., process, (, externs, ,, root, )]
[(, new, Normalize, (, compiler, ,, true, ), )]
[new, Normalize, (, compiler, ,, true, )]
[compiler]
[true]
[externs]
[root]
[compiler, ., getLifeCycleStage, (, ), ., isNormalizedUnobfuscated, (, )]
[compiler, ., getLifeCycleStage, (, )]
[compiler]
[true]
[new, Normalize, ., VerifyConstants, (, compiler, ,, checkUserDeclarations, )]
[compiler]
[checkUserDeclarations]
[pass, ., process, (, externs, ,, root, )]
[pass]
[externs]
[root]
[compiler, ., removeChangeHandler, (, handler, )]
[compiler]
[handler]
