[this, ., functionName]
[this]
[functionName]
[this, ., symbol]
[this]
[symbol]
[Logger, ., getLogger, (, JsFunctionParser, ., class, ., getName, (, ), )]
[Logger]
[JsFunctionParser, ., class, ., getName, (, )]
[JsFunctionParser, ., class]
[errorManager]
[functionsToParse]
[functions]
[pattern]
[getPattern, (, functions, )]
[functions]
[matcher]
[pattern, ., matcher, (, "", )]
[pattern]
[""]
[new, StringBuilder, (, "(?:^|;)\\s*(", )]
["(?:^|;)\\s*("]
[functions]
[sb, ., append, (, Pattern, ., quote, (, function, ), +, "|", )]
[sb]
[Pattern, ., quote, (, function, ), +, "|"]
[Pattern, ., quote, (, function, )]
[Pattern]
[function]
["|"]
[sb, ., deleteCharAt, (, sb, ., length, (, ), -, 1, )]
[sb]
[sb, ., length, (, ), -, 1]
[sb, ., length, (, )]
[sb]
[1]
[sb, ., append, (, ")\\s*\\((.*?)\\)", )]
[sb]
[")\\s*\\((.*?)\\)"]
[Pattern, ., compile, (, sb, ., toString, (, ), )]
[Pattern]
[sb, ., toString, (, )]
[sb]
[parseReader, (, filePath, ,, new, StringReader, (, fileContents, ), )]
[filePath]
[new, StringReader, (, fileContents, )]
[fileContents]
[symbols]
[Lists, ., newArrayList, (, )]
[Lists]
[logger, ., fine, (, "Parsing Source: ", +, filePath, )]
[logger]
["Parsing Source: ", +, filePath]
["Parsing Source: "]
[filePath]
[doParse, (, filePath, ,, fileContents, )]
[filePath]
[fileContents]
[symbols]
[false]
[false]
[functionsToParse]
[line, ., indexOf, (, function, ), !=, -, 1]
[line, ., indexOf, (, function, )]
[line]
[function]
[-, 1]
[1]
[parseLine]
[true]
[parseLine]
[matcher, ., reset, (, line, )]
[matcher]
[line]
[matcher, ., find, (, )]
[matcher]
[hasFunctions]
[true]
[matcher, ., group, (, 1, )]
[matcher]
[1]
[parseJsString, (, matcher, ., group, (, 2, ), )]
[matcher, ., group, (, 2, )]
[matcher]
[2]
[symbols, ., add, (, new, SymbolInfo, (, functionName, ,, arg, ), )]
[symbols]
[new, SymbolInfo, (, functionName, ,, arg, )]
[functionName]
[arg]
[!, shortcutMode, ||, hasFunctions, ||, CharMatcher, ., WHITESPACE, ., matchesAllOf, (, line, )]
[!, shortcutMode, ||, hasFunctions]
[!, shortcutMode]
[shortcutMode]
[hasFunctions]
[CharMatcher, ., WHITESPACE, ., matchesAllOf, (, line, )]
[CharMatcher, ., WHITESPACE]
[CharMatcher]
[line]
