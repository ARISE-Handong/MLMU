[hyperplane]
[remainingRegion]
[new, SubPlane, (, hyperplane, ,, remainingRegion, )]
[hyperplane]
[remainingRegion]
[(, Plane, ), hyperplane]
[hyperplane]
[(, Plane, ), getHyperplane, (, )]
[getHyperplane, (, )]
[otherPlane, ., intersection, (, thisPlane, )]
[otherPlane]
[thisPlane]
[inter, ==, null]
[inter]
[null]
[otherPlane, ., getOffset, (, thisPlane, )]
[otherPlane]
[thisPlane]
[(, global, <, -, 1.0e-10, ), ?, Side, ., MINUS, :, (, (, global, >, 1.0e-10, ), ?, Side, ., PLUS, :, Side, ., HYPER, )]
[(, global, <, -, 1.0e-10, )]
[global, <, -, 1.0e-10]
[global]
[-, 1.0e-10]
[1.0e-10]
[Side, ., MINUS]
[Side]
[(, (, global, >, 1.0e-10, ), ?, Side, ., PLUS, :, Side, ., HYPER, )]
[(, global, >, 1.0e-10, ), ?, Side, ., PLUS, :, Side, ., HYPER]
[(, global, >, 1.0e-10, )]
[global, >, 1.0e-10]
[global]
[1.0e-10]
[Side, ., PLUS]
[Side]
[Side, ., HYPER]
[Side]
[thisPlane, ., toSubSpace, (, inter, ., toSpace, (, Vector1D, ., ZERO, ), )]
[thisPlane]
[inter, ., toSpace, (, Vector1D, ., ZERO, )]
[inter]
[Vector1D, ., ZERO]
[Vector1D]
[thisPlane, ., toSubSpace, (, inter, ., toSpace, (, Vector1D, ., ONE, ), )]
[thisPlane]
[inter, ., toSpace, (, Vector1D, ., ONE, )]
[inter]
[Vector1D, ., ONE]
[Vector1D]
[Vector3D, ., crossProduct, (, inter, ., getDirection, (, ), ,, thisPlane, ., getNormal, (, ), )]
[Vector3D]
[inter, ., getDirection, (, )]
[inter]
[thisPlane, ., getNormal, (, )]
[thisPlane]
[crossP, ., dotProduct, (, otherPlane, ., getNormal, (, ), ), <, 0]
[crossP, ., dotProduct, (, otherPlane, ., getNormal, (, ), )]
[crossP]
[otherPlane, ., getNormal, (, )]
[otherPlane]
[0]
[p]
[p]
[q]
[q]
[tmp]
[new, org, ., apache, ., commons, ., math3, ., geometry, ., euclidean, ., twod, ., Line, (, p, ,, q, )]
[p]
[q]
[getRemainingRegion, (, ), ., side, (, line2D, )]
[getRemainingRegion, (, )]
[line2D]
[(, Plane, ), hyperplane]
[hyperplane]
[(, Plane, ), getHyperplane, (, )]
[getHyperplane, (, )]
[otherPlane, ., intersection, (, thisPlane, )]
[otherPlane]
[thisPlane]
[inter, ==, null]
[inter]
[null]
[otherPlane, ., getOffset, (, thisPlane, )]
[otherPlane]
[thisPlane]
[(, global, <, -, 1.0e-10, ), ?, new, SplitSubHyperplane, <, Euclidean3D, >, (, null, ,, this, ), :, new, SplitSubHyperplane, <, Euclidean3D, >, (, this, ,, null, )]
[(, global, <, -, 1.0e-10, )]
[global, <, -, 1.0e-10]
[global]
[-, 1.0e-10]
[1.0e-10]
[new, SplitSubHyperplane, <, Euclidean3D, >, (, null, ,, this, )]
[null]
[this]
[new, SplitSubHyperplane, <, Euclidean3D, >, (, this, ,, null, )]
[this]
[null]
[thisPlane, ., toSubSpace, (, inter, ., toSpace, (, Vector1D, ., ZERO, ), )]
[thisPlane]
[inter, ., toSpace, (, Vector1D, ., ZERO, )]
[inter]
[Vector1D, ., ZERO]
[Vector1D]
[thisPlane, ., toSubSpace, (, inter, ., toSpace, (, Vector1D, ., ONE, ), )]
[thisPlane]
[inter, ., toSpace, (, Vector1D, ., ONE, )]
[inter]
[Vector1D, ., ONE]
[Vector1D]
[Vector3D, ., crossProduct, (, inter, ., getDirection, (, ), ,, thisPlane, ., getNormal, (, ), )]
[Vector3D]
[inter, ., getDirection, (, )]
[inter]
[thisPlane, ., getNormal, (, )]
[thisPlane]
[crossP, ., dotProduct, (, otherPlane, ., getNormal, (, ), ), <, 0]
[crossP, ., dotProduct, (, otherPlane, ., getNormal, (, ), )]
[crossP]
[otherPlane, ., getNormal, (, )]
[otherPlane]
[0]
[p]
[p]
[q]
[q]
[tmp]
[new, org, ., apache, ., commons, ., math3, ., geometry, ., euclidean, ., twod, ., Line, (, p, ,, q, ), ., wholeHyperplane, (, )]
[new, org, ., apache, ., commons, ., math3, ., geometry, ., euclidean, ., twod, ., Line, (, p, ,, q, )]
[p]
[q]
[new, org, ., apache, ., commons, ., math3, ., geometry, ., euclidean, ., twod, ., Line, (, q, ,, p, ), ., wholeHyperplane, (, )]
[new, org, ., apache, ., commons, ., math3, ., geometry, ., euclidean, ., twod, ., Line, (, q, ,, p, )]
[q]
[p]
[getRemainingRegion, (, ), ., getTree, (, false, ), ., split, (, l2DMinus, )]
[getRemainingRegion, (, ), ., getTree, (, false, )]
[getRemainingRegion, (, )]
[false]
[l2DMinus]
[getRemainingRegion, (, ), ., isEmpty, (, splitTree, ., getPlus, (, ), ), ?, new, BSPTree, <, Euclidean2D, >, (, Boolean, ., FALSE, ), :, new, BSPTree, <, Euclidean2D, >, (, l2DPlus, ,, new, BSPTree, <, Euclidean2D, >, (, Boolean, ., FALSE, ), ,, splitTree, ., getPlus, (, ), ,, null, )]
[getRemainingRegion, (, ), ., isEmpty, (, splitTree, ., getPlus, (, ), )]
[getRemainingRegion, (, )]
[splitTree, ., getPlus, (, )]
[splitTree]
[new, BSPTree, <, Euclidean2D, >, (, Boolean, ., FALSE, )]
[Boolean, ., FALSE]
[Boolean]
[new, BSPTree, <, Euclidean2D, >, (, l2DPlus, ,, new, BSPTree, <, Euclidean2D, >, (, Boolean, ., FALSE, ), ,, splitTree, ., getPlus, (, ), ,, null, )]
[l2DPlus]
[new, BSPTree, <, Euclidean2D, >, (, Boolean, ., FALSE, )]
[Boolean, ., FALSE]
[Boolean]
[splitTree, ., getPlus, (, )]
[splitTree]
[null]
[getRemainingRegion, (, ), ., isEmpty, (, splitTree, ., getMinus, (, ), ), ?, new, BSPTree, <, Euclidean2D, >, (, Boolean, ., FALSE, ), :, new, BSPTree, <, Euclidean2D, >, (, l2DMinus, ,, new, BSPTree, <, Euclidean2D, >, (, Boolean, ., FALSE, ), ,, splitTree, ., getMinus, (, ), ,, null, )]
[getRemainingRegion, (, ), ., isEmpty, (, splitTree, ., getMinus, (, ), )]
[getRemainingRegion, (, )]
[splitTree, ., getMinus, (, )]
[splitTree]
[new, BSPTree, <, Euclidean2D, >, (, Boolean, ., FALSE, )]
[Boolean, ., FALSE]
[Boolean]
[new, BSPTree, <, Euclidean2D, >, (, l2DMinus, ,, new, BSPTree, <, Euclidean2D, >, (, Boolean, ., FALSE, ), ,, splitTree, ., getMinus, (, ), ,, null, )]
[l2DMinus]
[new, BSPTree, <, Euclidean2D, >, (, Boolean, ., FALSE, )]
[Boolean, ., FALSE]
[Boolean]
[splitTree, ., getMinus, (, )]
[splitTree]
[null]
[new, SplitSubHyperplane, <, Euclidean3D, >, (, new, SubPlane, (, thisPlane, ., copySelf, (, ), ,, new, PolygonsSet, (, plusTree, ), ), ,, new, SubPlane, (, thisPlane, ., copySelf, (, ), ,, new, PolygonsSet, (, minusTree, ), ), )]
[new, SubPlane, (, thisPlane, ., copySelf, (, ), ,, new, PolygonsSet, (, plusTree, ), )]
[thisPlane, ., copySelf, (, )]
[thisPlane]
[new, PolygonsSet, (, plusTree, )]
[plusTree]
[new, SubPlane, (, thisPlane, ., copySelf, (, ), ,, new, PolygonsSet, (, minusTree, ), )]
[thisPlane, ., copySelf, (, )]
[thisPlane]
[new, PolygonsSet, (, minusTree, )]
[minusTree]
