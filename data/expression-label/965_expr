[7789833772597351595L]
[8]
[0]
[DEFAULT_INITIAL_CAPACITY]
[DEFAULT_INITIAL_CAPACITY]
[initialCapacity]
[initialCapacity]
[this, ., objects]
[this]
[new, Object, [, initialCapacity, ]]
[initialCapacity]
[this, ., increment]
[this]
[increment]
[null]
[index, >=, 0, &&, index, <, this, ., size]
[index, >=, 0]
[index]
[0]
[index, <, this, ., size]
[index]
[this, ., size]
[this]
[result]
[this, ., objects, [, index, ]]
[this, ., objects]
[this]
[index]
[result]
[index, <, 0]
[index]
[0]
[new, IllegalArgumentException, (, "Requires index >= 0.", )]
["Requires index >= 0."]
[index, >=, this, ., objects, ., length]
[index]
[this, ., objects, ., length]
[this, ., objects]
[this]
[new, Object, [, index, +, this, ., increment, ]]
[index, +, this, ., increment]
[index]
[this, ., increment]
[this]
[System, ., arraycopy, (, this, ., objects, ,, 0, ,, enlarged, ,, 0, ,, this, ., objects, ., length, )]
[System]
[this, ., objects]
[this]
[0]
[enlarged]
[0]
[this, ., objects, ., length]
[this, ., objects]
[this]
[this, ., objects]
[this]
[enlarged]
[this, ., objects, [, index, ]]
[this, ., objects]
[this]
[index]
[object]
[this, ., size]
[this]
[Math, ., max, (, this, ., size, ,, index, +, 1, )]
[Math]
[this, ., size]
[this]
[index, +, 1]
[index]
[1]
[Arrays, ., fill, (, this, ., objects, ,, null, )]
[Arrays]
[this, ., objects]
[this]
[null]
[this, ., size]
[this]
[0]
[this, ., size]
[this]
[0]
[index, <, this, ., size]
[index]
[this, ., size]
[this]
[index, ++]
[index]
[this, ., objects, [, index, ], ==, object]
[this, ., objects, [, index, ]]
[this, ., objects]
[this]
[index]
[object]
[(, index, )]
[index]
[-, 1]
[1]
[obj, ==, null]
[obj]
[null]
[false]
[obj, ==, this]
[obj]
[this]
[true]
[!, (, obj, instanceof, AbstractObjectList, )]
[(, obj, instanceof, AbstractObjectList, )]
[obj, instanceof, AbstractObjectList]
[obj]
[false]
[(, AbstractObjectList, ), obj]
[obj]
[size, (, )]
[0]
[i, <, listSize]
[i]
[listSize]
[i, ++]
[i]
[!, ObjectUtilities, ., equal, (, get, (, i, ), ,, other, ., get, (, i, ), )]
[ObjectUtilities, ., equal, (, get, (, i, ), ,, other, ., get, (, i, ), )]
[ObjectUtilities]
[get, (, i, )]
[i]
[other, ., get, (, i, )]
[other]
[i]
[false]
[true]
[127]
[size, (, )]
[result]
[HashUtilities, ., hashCode, (, result, ,, size, (, ), )]
[HashUtilities]
[result]
[size, (, )]
[size, >, 0]
[size]
[0]
[result]
[HashUtilities, ., hashCode, (, result, ,, this, ., objects, [, 0, ], )]
[HashUtilities]
[result]
[this, ., objects, [, 0, ]]
[this, ., objects]
[this]
[0]
[size, >, 1]
[size]
[1]
[result]
[HashUtilities, ., hashCode, (, result, ,, this, ., objects, [, size, -, 1, ], )]
[HashUtilities]
[result]
[this, ., objects, [, size, -, 1, ]]
[this, ., objects]
[this]
[size, -, 1]
[size]
[1]
[size, >, 2]
[size]
[2]
[result]
[HashUtilities, ., hashCode, (, result, ,, this, ., objects, [, size, /, 2, ], )]
[HashUtilities]
[result]
[this, ., objects, [, size, /, 2, ]]
[this, ., objects]
[this]
[size, /, 2]
[size]
[2]
[result]
[(, AbstractObjectList, ), super, ., clone, (, )]
[super, ., clone, (, )]
[super]
[this, ., objects, !=, null]
[this, ., objects]
[this]
[null]
[clone, ., objects]
[clone]
[new, Object, [, this, ., objects, ., length, ]]
[this, ., objects, ., length]
[this, ., objects]
[this]
[System, ., arraycopy, (, this, ., objects, ,, 0, ,, clone, ., objects, ,, 0, ,, this, ., objects, ., length, )]
[System]
[this, ., objects]
[this]
[0]
[clone, ., objects]
[clone]
[0]
[this, ., objects, ., length]
[this, ., objects]
[this]
[clone]
[stream, ., defaultWriteObject, (, )]
[stream]
[size, (, )]
[stream, ., writeInt, (, count, )]
[stream]
[count]
[0]
[i, <, count]
[i]
[count]
[i, ++]
[i]
[get, (, i, )]
[i]
[object, !=, null, &&, object, instanceof, Serializable]
[object, !=, null]
[object]
[null]
[object, instanceof, Serializable]
[object]
[stream, ., writeInt, (, i, )]
[stream]
[i]
[stream, ., writeObject, (, object, )]
[stream]
[object]
[stream, ., writeInt, (, -, 1, )]
[stream]
[-, 1]
[1]
[stream, ., defaultReadObject, (, )]
[stream]
[this, ., objects]
[this]
[new, Object, [, this, ., size, ]]
[this, ., size]
[this]
[stream, ., readInt, (, )]
[stream]
[0]
[i, <, count]
[i]
[count]
[i, ++]
[i]
[stream, ., readInt, (, )]
[stream]
[index, !=, -, 1]
[index]
[-, 1]
[1]
[set, (, index, ,, stream, ., readObject, (, ), )]
[index]
[stream, ., readObject, (, )]
[stream]
