["goog.testing.ObjectPropertyString"]
["JSCompiler_ObjectPropertyString"]
[DiagnosticType, ., error, (, "JSC_OBJECT_PROPERTY_STRING_NUM_ARGS", ,, "goog.testing.ObjectPropertyString instantiated with \"{0}\" ", +, "arguments, expected 2.", )]
[DiagnosticType]
["JSC_OBJECT_PROPERTY_STRING_NUM_ARGS"]
["goog.testing.ObjectPropertyString instantiated with \"{0}\" ", +, "arguments, expected 2."]
["goog.testing.ObjectPropertyString instantiated with \"{0}\" "]
["arguments, expected 2."]
[DiagnosticType, ., error, (, "JSC_OBJECT_PROPERTY_STRING_QUALIFIED_NAME_EXPECTED", ,, "goog.testing.ObjectPropertyString instantiated with invalid ", +, "argument, qualified name expected. Was \"{0}\".", )]
[DiagnosticType]
["JSC_OBJECT_PROPERTY_STRING_QUALIFIED_NAME_EXPECTED"]
["goog.testing.ObjectPropertyString instantiated with invalid ", +, "argument, qualified name expected. Was \"{0}\"."]
["goog.testing.ObjectPropertyString instantiated with invalid "]
["argument, qualified name expected. Was \"{0}\"."]
[DiagnosticType, ., error, (, "JSC_OBJECT_PROPERTY_STRING_STRING_LITERAL_EXPECTED", ,, "goog.testing.ObjectPropertyString instantiated with invalid ", +, "argument, string literal expected. Was \"{0}\".", )]
[DiagnosticType]
["JSC_OBJECT_PROPERTY_STRING_STRING_LITERAL_EXPECTED"]
["goog.testing.ObjectPropertyString instantiated with invalid ", +, "argument, string literal expected. Was \"{0}\"."]
["goog.testing.ObjectPropertyString instantiated with invalid "]
["argument, string literal expected. Was \"{0}\"."]
[this, ., compiler]
[this]
[compiler]
[addExternDeclaration, (, externs, ,, IR, ., var, (, IR, ., name, (, EXTERN_OBJECT_PROPERTY_STRING, ), ), )]
[externs]
[IR, ., var, (, IR, ., name, (, EXTERN_OBJECT_PROPERTY_STRING, ), )]
[IR]
[IR, ., name, (, EXTERN_OBJECT_PROPERTY_STRING, )]
[IR]
[EXTERN_OBJECT_PROPERTY_STRING]
[NodeTraversal, ., traverse, (, compiler, ,, root, ,, new, Callback, (, ), )]
[NodeTraversal]
[compiler]
[root]
[new, Callback, (, )]
[externs, ., getLastChild, (, )]
[externs]
[script, ==, null, ||, !, script, ., isScript, (, )]
[script, ==, null]
[script]
[null]
[!, script, ., isScript, (, )]
[script, ., isScript, (, )]
[script]
[script]
[IR, ., script, (, )]
[IR]
[externs, ., addChildToBack, (, script, )]
[externs]
[script]
[script, ., addChildToBack, (, declarationStmt, )]
[script]
[declarationStmt]
[OBJECT_PROPERTY_STRING, ., equals, (, n, ., getQualifiedName, (, ), )]
[OBJECT_PROPERTY_STRING]
[n, ., getQualifiedName, (, )]
[n]
[IR, ., name, (, EXTERN_OBJECT_PROPERTY_STRING, )]
[IR]
[EXTERN_OBJECT_PROPERTY_STRING]
[newName, ., copyInformationFrom, (, n, )]
[newName]
[n]
[parent, ., replaceChild, (, n, ,, newName, )]
[parent]
[n]
[newName]
[compiler, ., reportCodeChange, (, )]
[compiler]
[!, n, ., isNew, (, )]
[n, ., isNew, (, )]
[n]
[n, ., getFirstChild, (, )]
[n]
[!, EXTERN_OBJECT_PROPERTY_STRING, ., equals, (, objectName, ., getQualifiedName, (, ), )]
[EXTERN_OBJECT_PROPERTY_STRING, ., equals, (, objectName, ., getQualifiedName, (, ), )]
[EXTERN_OBJECT_PROPERTY_STRING]
[objectName, ., getQualifiedName, (, )]
[objectName]
[n, ., getChildCount, (, ), !=, 3]
[n, ., getChildCount, (, )]
[n]
[3]
[compiler, ., report, (, t, ., makeError, (, n, ,, INVALID_NUM_ARGUMENTS_ERROR, ,, "", +, n, ., getChildCount, (, ), ), )]
[compiler]
[t, ., makeError, (, n, ,, INVALID_NUM_ARGUMENTS_ERROR, ,, "", +, n, ., getChildCount, (, ), )]
[t]
[n]
[INVALID_NUM_ARGUMENTS_ERROR]
["", +, n, ., getChildCount, (, )]
[""]
[n, ., getChildCount, (, )]
[n]
[objectName, ., getNext, (, )]
[objectName]
[!, firstArgument, ., isQualifiedName, (, )]
[firstArgument, ., isQualifiedName, (, )]
[firstArgument]
[compiler, ., report, (, t, ., makeError, (, firstArgument, ,, QUALIFIED_NAME_EXPECTED_ERROR, ,, Token, ., name, (, firstArgument, ., getType, (, ), ), ), )]
[compiler]
[t, ., makeError, (, firstArgument, ,, QUALIFIED_NAME_EXPECTED_ERROR, ,, Token, ., name, (, firstArgument, ., getType, (, ), ), )]
[t]
[firstArgument]
[QUALIFIED_NAME_EXPECTED_ERROR]
[Token, ., name, (, firstArgument, ., getType, (, ), )]
[Token]
[firstArgument, ., getType, (, )]
[firstArgument]
[firstArgument, ., getNext, (, )]
[firstArgument]
[!, secondArgument, ., isString, (, )]
[secondArgument, ., isString, (, )]
[secondArgument]
[compiler, ., report, (, t, ., makeError, (, secondArgument, ,, STRING_LITERAL_EXPECTED_ERROR, ,, Token, ., name, (, secondArgument, ., getType, (, ), ), ), )]
[compiler]
[t, ., makeError, (, secondArgument, ,, STRING_LITERAL_EXPECTED_ERROR, ,, Token, ., name, (, secondArgument, ., getType, (, ), ), )]
[t]
[secondArgument]
[STRING_LITERAL_EXPECTED_ERROR]
[Token, ., name, (, secondArgument, ., getType, (, ), )]
[Token]
[secondArgument, ., getType, (, )]
[secondArgument]
[NodeUtil, ., newQualifiedNameNode, (, compiler, ., getCodingConvention, (, ), ,, compiler, ., getCodingConvention, (, ), ., getGlobalObject, (, ), ), ., srcrefTree, (, firstArgument, )]
[NodeUtil, ., newQualifiedNameNode, (, compiler, ., getCodingConvention, (, ), ,, compiler, ., getCodingConvention, (, ), ., getGlobalObject, (, ), )]
[NodeUtil]
[compiler, ., getCodingConvention, (, )]
[compiler]
[compiler, ., getCodingConvention, (, ), ., getGlobalObject, (, )]
[compiler, ., getCodingConvention, (, )]
[compiler]
[firstArgument]
[NodeUtil, ., newQualifiedNameNode, (, compiler, ., getCodingConvention, (, ), ,, firstArgument, ., getQualifiedName, (, ), +, ".", +, firstArgument, ., getNext, (, ), ., getString, (, ), ), ., srcrefTree, (, secondArgument, )]
[NodeUtil, ., newQualifiedNameNode, (, compiler, ., getCodingConvention, (, ), ,, firstArgument, ., getQualifiedName, (, ), +, ".", +, firstArgument, ., getNext, (, ), ., getString, (, ), )]
[NodeUtil]
[compiler, ., getCodingConvention, (, )]
[compiler]
[firstArgument, ., getQualifiedName, (, ), +, ".", +, firstArgument, ., getNext, (, ), ., getString, (, )]
[firstArgument, ., getQualifiedName, (, ), +, "."]
[firstArgument, ., getQualifiedName, (, )]
[firstArgument]
["."]
[firstArgument, ., getNext, (, ), ., getString, (, )]
[firstArgument, ., getNext, (, )]
[firstArgument]
[secondArgument]
[n, ., replaceChild, (, firstArgument, ,, newFirstArgument, )]
[n]
[firstArgument]
[newFirstArgument]
[n, ., replaceChild, (, secondArgument, ,, newSecondArgument, )]
[n]
[secondArgument]
[newSecondArgument]
[compiler, ., reportCodeChange, (, )]
[compiler]
