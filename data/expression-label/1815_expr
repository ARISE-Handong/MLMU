[0.10]
[0.20]
[0.80]
[this, ., g1]
[this]
[g1]
[this, ., g2]
[this]
[g2]
[this, ., g3]
[this]
[g3]
[renderer, ., getItemPaint, (, row, ,, column, ,, selected, )]
[renderer]
[row]
[column]
[selected]
[itemPaint, instanceof, Color]
[itemPaint]
[c0]
[(, Color, ), itemPaint]
[itemPaint]
[c1]
[c0, ., brighter, (, )]
[c0]
[itemPaint, instanceof, GradientPaint]
[itemPaint]
[(, GradientPaint, ), itemPaint]
[itemPaint]
[c0]
[gp, ., getColor1, (, )]
[gp]
[c1]
[gp, ., getColor2, (, )]
[gp]
[c0]
[Color, ., blue]
[Color]
[c1]
[Color, ., blue, ., brighter, (, )]
[Color, ., blue]
[Color]
[c0, ., getAlpha, (, ), ==, 0]
[c0, ., getAlpha, (, )]
[c0]
[0]
[base, ==, RectangleEdge, ., TOP, ||, base, ==, RectangleEdge, ., BOTTOM]
[base, ==, RectangleEdge, ., TOP]
[base]
[RectangleEdge, ., TOP]
[RectangleEdge]
[base, ==, RectangleEdge, ., BOTTOM]
[base]
[RectangleEdge, ., BOTTOM]
[RectangleEdge]
[splitVerticalBar, (, bar, ,, this, ., g1, ,, this, ., g2, ,, this, ., g3, )]
[bar]
[this, ., g1]
[this]
[this, ., g2]
[this]
[this, ., g3]
[this]
[new, GradientPaint, (, (, float, ), regions, [, 0, ], ., getMinX, (, ), ,, 0.0f, ,, c0, ,, (, float, ), regions, [, 0, ], ., getMaxX, (, ), ,, 0.0f, ,, Color, ., white, )]
[(, float, ), regions, [, 0, ], ., getMinX, (, )]
[regions, [, 0, ], ., getMinX, (, )]
[regions, [, 0, ]]
[regions]
[0]
[0.0f]
[c0]
[(, float, ), regions, [, 0, ], ., getMaxX, (, )]
[regions, [, 0, ], ., getMaxX, (, )]
[regions, [, 0, ]]
[regions]
[0]
[0.0f]
[Color, ., white]
[Color]
[g2, ., setPaint, (, gp, )]
[g2]
[gp]
[g2, ., fill, (, regions, [, 0, ], )]
[g2]
[regions, [, 0, ]]
[regions]
[0]
[gp]
[new, GradientPaint, (, (, float, ), regions, [, 1, ], ., getMinX, (, ), ,, 0.0f, ,, Color, ., white, ,, (, float, ), regions, [, 1, ], ., getMaxX, (, ), ,, 0.0f, ,, c0, )]
[(, float, ), regions, [, 1, ], ., getMinX, (, )]
[regions, [, 1, ], ., getMinX, (, )]
[regions, [, 1, ]]
[regions]
[1]
[0.0f]
[Color, ., white]
[Color]
[(, float, ), regions, [, 1, ], ., getMaxX, (, )]
[regions, [, 1, ], ., getMaxX, (, )]
[regions, [, 1, ]]
[regions]
[1]
[0.0f]
[c0]
[g2, ., setPaint, (, gp, )]
[g2]
[gp]
[g2, ., fill, (, regions, [, 1, ], )]
[g2]
[regions, [, 1, ]]
[regions]
[1]
[gp]
[new, GradientPaint, (, (, float, ), regions, [, 2, ], ., getMinX, (, ), ,, 0.0f, ,, c0, ,, (, float, ), regions, [, 2, ], ., getMaxX, (, ), ,, 0.0f, ,, c1, )]
[(, float, ), regions, [, 2, ], ., getMinX, (, )]
[regions, [, 2, ], ., getMinX, (, )]
[regions, [, 2, ]]
[regions]
[2]
[0.0f]
[c0]
[(, float, ), regions, [, 2, ], ., getMaxX, (, )]
[regions, [, 2, ], ., getMaxX, (, )]
[regions, [, 2, ]]
[regions]
[2]
[0.0f]
[c1]
[g2, ., setPaint, (, gp, )]
[g2]
[gp]
[g2, ., fill, (, regions, [, 2, ], )]
[g2]
[regions, [, 2, ]]
[regions]
[2]
[gp]
[new, GradientPaint, (, (, float, ), regions, [, 3, ], ., getMinX, (, ), ,, 0.0f, ,, c1, ,, (, float, ), regions, [, 3, ], ., getMaxX, (, ), ,, 0.0f, ,, c0, )]
[(, float, ), regions, [, 3, ], ., getMinX, (, )]
[regions, [, 3, ], ., getMinX, (, )]
[regions, [, 3, ]]
[regions]
[3]
[0.0f]
[c1]
[(, float, ), regions, [, 3, ], ., getMaxX, (, )]
[regions, [, 3, ], ., getMaxX, (, )]
[regions, [, 3, ]]
[regions]
[3]
[0.0f]
[c0]
[g2, ., setPaint, (, gp, )]
[g2]
[gp]
[g2, ., fill, (, regions, [, 3, ], )]
[g2]
[regions, [, 3, ]]
[regions]
[3]
[base, ==, RectangleEdge, ., LEFT, ||, base, ==, RectangleEdge, ., RIGHT]
[base, ==, RectangleEdge, ., LEFT]
[base]
[RectangleEdge, ., LEFT]
[RectangleEdge]
[base, ==, RectangleEdge, ., RIGHT]
[base]
[RectangleEdge, ., RIGHT]
[RectangleEdge]
[splitHorizontalBar, (, bar, ,, this, ., g1, ,, this, ., g2, ,, this, ., g3, )]
[bar]
[this, ., g1]
[this]
[this, ., g2]
[this]
[this, ., g3]
[this]
[new, GradientPaint, (, 0.0f, ,, (, float, ), regions, [, 0, ], ., getMinY, (, ), ,, c0, ,, 0.0f, ,, (, float, ), regions, [, 0, ], ., getMaxX, (, ), ,, Color, ., white, )]
[0.0f]
[(, float, ), regions, [, 0, ], ., getMinY, (, )]
[regions, [, 0, ], ., getMinY, (, )]
[regions, [, 0, ]]
[regions]
[0]
[c0]
[0.0f]
[(, float, ), regions, [, 0, ], ., getMaxX, (, )]
[regions, [, 0, ], ., getMaxX, (, )]
[regions, [, 0, ]]
[regions]
[0]
[Color, ., white]
[Color]
[g2, ., setPaint, (, gp, )]
[g2]
[gp]
[g2, ., fill, (, regions, [, 0, ], )]
[g2]
[regions, [, 0, ]]
[regions]
[0]
[gp]
[new, GradientPaint, (, 0.0f, ,, (, float, ), regions, [, 1, ], ., getMinY, (, ), ,, Color, ., white, ,, 0.0f, ,, (, float, ), regions, [, 1, ], ., getMaxY, (, ), ,, c0, )]
[0.0f]
[(, float, ), regions, [, 1, ], ., getMinY, (, )]
[regions, [, 1, ], ., getMinY, (, )]
[regions, [, 1, ]]
[regions]
[1]
[Color, ., white]
[Color]
[0.0f]
[(, float, ), regions, [, 1, ], ., getMaxY, (, )]
[regions, [, 1, ], ., getMaxY, (, )]
[regions, [, 1, ]]
[regions]
[1]
[c0]
[g2, ., setPaint, (, gp, )]
[g2]
[gp]
[g2, ., fill, (, regions, [, 1, ], )]
[g2]
[regions, [, 1, ]]
[regions]
[1]
[gp]
[new, GradientPaint, (, 0.0f, ,, (, float, ), regions, [, 2, ], ., getMinY, (, ), ,, c0, ,, 0.0f, ,, (, float, ), regions, [, 2, ], ., getMaxY, (, ), ,, c1, )]
[0.0f]
[(, float, ), regions, [, 2, ], ., getMinY, (, )]
[regions, [, 2, ], ., getMinY, (, )]
[regions, [, 2, ]]
[regions]
[2]
[c0]
[0.0f]
[(, float, ), regions, [, 2, ], ., getMaxY, (, )]
[regions, [, 2, ], ., getMaxY, (, )]
[regions, [, 2, ]]
[regions]
[2]
[c1]
[g2, ., setPaint, (, gp, )]
[g2]
[gp]
[g2, ., fill, (, regions, [, 2, ], )]
[g2]
[regions, [, 2, ]]
[regions]
[2]
[gp]
[new, GradientPaint, (, 0.0f, ,, (, float, ), regions, [, 3, ], ., getMinY, (, ), ,, c1, ,, 0.0f, ,, (, float, ), regions, [, 3, ], ., getMaxY, (, ), ,, c0, )]
[0.0f]
[(, float, ), regions, [, 3, ], ., getMinY, (, )]
[regions, [, 3, ], ., getMinY, (, )]
[regions, [, 3, ]]
[regions]
[3]
[c1]
[0.0f]
[(, float, ), regions, [, 3, ], ., getMaxY, (, )]
[regions, [, 3, ], ., getMaxY, (, )]
[regions, [, 3, ]]
[regions]
[3]
[c0]
[g2, ., setPaint, (, gp, )]
[g2]
[gp]
[g2, ., fill, (, regions, [, 3, ], )]
[g2]
[regions, [, 3, ]]
[regions]
[3]
[renderer, ., isDrawBarOutline, (, )]
[renderer]
[renderer, ., getItemOutlineStroke, (, row, ,, column, ,, selected, )]
[renderer]
[row]
[column]
[selected]
[renderer, ., getItemOutlinePaint, (, row, ,, column, ,, selected, )]
[renderer]
[row]
[column]
[selected]
[stroke, !=, null, &&, paint, !=, null]
[stroke, !=, null]
[stroke]
[null]
[paint, !=, null]
[paint]
[null]
[g2, ., setStroke, (, stroke, )]
[g2]
[stroke]
[g2, ., setPaint, (, paint, )]
[g2]
[paint]
[g2, ., draw, (, bar, )]
[g2]
[bar]
[renderer, ., getItemPaint, (, row, ,, column, ,, selected, )]
[renderer]
[row]
[column]
[selected]
[itemPaint, instanceof, Color]
[itemPaint]
[(, Color, ), itemPaint]
[itemPaint]
[c, ., getAlpha, (, ), ==, 0]
[c, ., getAlpha, (, )]
[c]
[0]
[createShadow, (, bar, ,, renderer, ., getShadowXOffset, (, ), ,, renderer, ., getShadowYOffset, (, ), ,, base, ,, pegShadow, )]
[bar]
[renderer, ., getShadowXOffset, (, )]
[renderer]
[renderer, ., getShadowYOffset, (, )]
[renderer]
[base]
[pegShadow]
[g2, ., setPaint, (, renderer, ., getShadowPaint, (, ), )]
[g2]
[renderer, ., getShadowPaint, (, )]
[renderer]
[g2, ., fill, (, shadow, )]
[g2]
[shadow]
[bar, ., getMinX, (, )]
[bar]
[bar, ., getMaxX, (, )]
[bar]
[bar, ., getMinY, (, )]
[bar]
[bar, ., getMaxY, (, )]
[bar]
[base, ==, RectangleEdge, ., TOP]
[base]
[RectangleEdge, ., TOP]
[RectangleEdge]
[x0]
[xOffset]
[x1]
[xOffset]
[!, pegShadow]
[pegShadow]
[y0]
[yOffset]
[y1]
[yOffset]
[base, ==, RectangleEdge, ., BOTTOM]
[base]
[RectangleEdge, ., BOTTOM]
[RectangleEdge]
[x0]
[xOffset]
[x1]
[xOffset]
[y0]
[yOffset]
[!, pegShadow]
[pegShadow]
[y1]
[yOffset]
[base, ==, RectangleEdge, ., LEFT]
[base]
[RectangleEdge, ., LEFT]
[RectangleEdge]
[!, pegShadow]
[pegShadow]
[x0]
[xOffset]
[x1]
[xOffset]
[y0]
[yOffset]
[y1]
[yOffset]
[base, ==, RectangleEdge, ., RIGHT]
[base]
[RectangleEdge, ., RIGHT]
[RectangleEdge]
[x0]
[xOffset]
[!, pegShadow]
[pegShadow]
[x1]
[xOffset]
[y0]
[yOffset]
[y1]
[yOffset]
[new, Rectangle2D, ., Double, (, x0, ,, y0, ,, (, x1, -, x0, ), ,, (, y1, -, y0, ), )]
[x0]
[y0]
[(, x1, -, x0, )]
[x1, -, x0]
[x1]
[x0]
[(, y1, -, y0, )]
[y1, -, y0]
[y1]
[y0]
[new, Rectangle2D, [, 4, ]]
[4]
[bar, ., getMinX, (, )]
[bar]
[Math, ., rint, (, x0, +, (, bar, ., getWidth, (, ), *, a, ), )]
[Math]
[x0, +, (, bar, ., getWidth, (, ), *, a, )]
[x0]
[(, bar, ., getWidth, (, ), *, a, )]
[bar, ., getWidth, (, ), *, a]
[bar, ., getWidth, (, )]
[bar]
[a]
[Math, ., rint, (, x0, +, (, bar, ., getWidth, (, ), *, b, ), )]
[Math]
[x0, +, (, bar, ., getWidth, (, ), *, b, )]
[x0]
[(, bar, ., getWidth, (, ), *, b, )]
[bar, ., getWidth, (, ), *, b]
[bar, ., getWidth, (, )]
[bar]
[b]
[Math, ., rint, (, x0, +, (, bar, ., getWidth, (, ), *, c, ), )]
[Math]
[x0, +, (, bar, ., getWidth, (, ), *, c, )]
[x0]
[(, bar, ., getWidth, (, ), *, c, )]
[bar, ., getWidth, (, ), *, c]
[bar, ., getWidth, (, )]
[bar]
[c]
[result, [, 0, ]]
[result]
[0]
[new, Rectangle2D, ., Double, (, bar, ., getMinX, (, ), ,, bar, ., getMinY, (, ), ,, x1, -, x0, ,, bar, ., getHeight, (, ), )]
[bar, ., getMinX, (, )]
[bar]
[bar, ., getMinY, (, )]
[bar]
[x1, -, x0]
[x1]
[x0]
[bar, ., getHeight, (, )]
[bar]
[result, [, 1, ]]
[result]
[1]
[new, Rectangle2D, ., Double, (, x1, ,, bar, ., getMinY, (, ), ,, x2, -, x1, ,, bar, ., getHeight, (, ), )]
[x1]
[bar, ., getMinY, (, )]
[bar]
[x2, -, x1]
[x2]
[x1]
[bar, ., getHeight, (, )]
[bar]
[result, [, 2, ]]
[result]
[2]
[new, Rectangle2D, ., Double, (, x2, ,, bar, ., getMinY, (, ), ,, x3, -, x2, ,, bar, ., getHeight, (, ), )]
[x2]
[bar, ., getMinY, (, )]
[bar]
[x3, -, x2]
[x3]
[x2]
[bar, ., getHeight, (, )]
[bar]
[result, [, 3, ]]
[result]
[3]
[new, Rectangle2D, ., Double, (, x3, ,, bar, ., getMinY, (, ), ,, bar, ., getMaxX, (, ), -, x3, ,, bar, ., getHeight, (, ), )]
[x3]
[bar, ., getMinY, (, )]
[bar]
[bar, ., getMaxX, (, ), -, x3]
[bar, ., getMaxX, (, )]
[bar]
[x3]
[bar, ., getHeight, (, )]
[bar]
[result]
[new, Rectangle2D, [, 4, ]]
[4]
[bar, ., getMinY, (, )]
[bar]
[Math, ., rint, (, y0, +, (, bar, ., getHeight, (, ), *, a, ), )]
[Math]
[y0, +, (, bar, ., getHeight, (, ), *, a, )]
[y0]
[(, bar, ., getHeight, (, ), *, a, )]
[bar, ., getHeight, (, ), *, a]
[bar, ., getHeight, (, )]
[bar]
[a]
[Math, ., rint, (, y0, +, (, bar, ., getHeight, (, ), *, b, ), )]
[Math]
[y0, +, (, bar, ., getHeight, (, ), *, b, )]
[y0]
[(, bar, ., getHeight, (, ), *, b, )]
[bar, ., getHeight, (, ), *, b]
[bar, ., getHeight, (, )]
[bar]
[b]
[Math, ., rint, (, y0, +, (, bar, ., getHeight, (, ), *, c, ), )]
[Math]
[y0, +, (, bar, ., getHeight, (, ), *, c, )]
[y0]
[(, bar, ., getHeight, (, ), *, c, )]
[bar, ., getHeight, (, ), *, c]
[bar, ., getHeight, (, )]
[bar]
[c]
[result, [, 0, ]]
[result]
[0]
[new, Rectangle2D, ., Double, (, bar, ., getMinX, (, ), ,, bar, ., getMinY, (, ), ,, bar, ., getWidth, (, ), ,, y1, -, y0, )]
[bar, ., getMinX, (, )]
[bar]
[bar, ., getMinY, (, )]
[bar]
[bar, ., getWidth, (, )]
[bar]
[y1, -, y0]
[y1]
[y0]
[result, [, 1, ]]
[result]
[1]
[new, Rectangle2D, ., Double, (, bar, ., getMinX, (, ), ,, y1, ,, bar, ., getWidth, (, ), ,, y2, -, y1, )]
[bar, ., getMinX, (, )]
[bar]
[y1]
[bar, ., getWidth, (, )]
[bar]
[y2, -, y1]
[y2]
[y1]
[result, [, 2, ]]
[result]
[2]
[new, Rectangle2D, ., Double, (, bar, ., getMinX, (, ), ,, y2, ,, bar, ., getWidth, (, ), ,, y3, -, y2, )]
[bar, ., getMinX, (, )]
[bar]
[y2]
[bar, ., getWidth, (, )]
[bar]
[y3, -, y2]
[y3]
[y2]
[result, [, 3, ]]
[result]
[3]
[new, Rectangle2D, ., Double, (, bar, ., getMinX, (, ), ,, y3, ,, bar, ., getWidth, (, ), ,, bar, ., getMaxY, (, ), -, y3, )]
[bar, ., getMinX, (, )]
[bar]
[y3]
[bar, ., getWidth, (, )]
[bar]
[bar, ., getMaxY, (, ), -, y3]
[bar, ., getMaxY, (, )]
[bar]
[y3]
[result]
[obj, ==, this]
[obj]
[this]
[true]
[!, (, obj, instanceof, GradientBarPainter, )]
[(, obj, instanceof, GradientBarPainter, )]
[obj, instanceof, GradientBarPainter]
[obj]
[false]
[(, GradientBarPainter, ), obj]
[obj]
[this, ., g1, !=, that, ., g1]
[this, ., g1]
[this]
[that, ., g1]
[that]
[false]
[this, ., g2, !=, that, ., g2]
[this, ., g2]
[this]
[that, ., g2]
[that]
[false]
[this, ., g3, !=, that, ., g3]
[this, ., g3]
[this]
[that, ., g3]
[that]
[false]
[true]
[37]
[hash]
[HashUtilities, ., hashCode, (, hash, ,, this, ., g1, )]
[HashUtilities]
[hash]
[this, ., g1]
[this]
[hash]
[HashUtilities, ., hashCode, (, hash, ,, this, ., g2, )]
[HashUtilities]
[hash]
[this, ., g2]
[this]
[hash]
[HashUtilities, ., hashCode, (, hash, ,, this, ., g3, )]
[HashUtilities]
[hash]
[this, ., g3]
[this]
[hash]
