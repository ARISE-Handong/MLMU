[5]
[precision, <=, 0]
[precision]
[0]
[new, IllegalArgumentException, (, "Requires precision > 0.", )]
["Requires precision > 0."]
[this, ., precision]
[this]
[precision]
[this, ., precision]
[this]
[p, <=, 0]
[p]
[0]
[new, IllegalArgumentException, (, "Requires p > 0.", )]
["Requires p > 0."]
[this, ., precision]
[this]
[p]
[fireChangeEvent, (, )]
[(, State, ), super, ., initialise, (, g2, ,, dataArea, ,, plot, ,, data, ,, info, )]
[super, ., initialise, (, g2, ,, dataArea, ,, plot, ,, data, ,, info, )]
[super]
[g2]
[dataArea]
[plot]
[data]
[info]
[state, ., setProcessVisibleItemsOnly, (, false, )]
[state]
[false]
[this, ., points]
[this]
[new, Vector, (, )]
[setDrawSeriesLineAsPath, (, true, )]
[true]
[state]
[plot, ., getDomainAxisEdge, (, )]
[plot]
[plot, ., getRangeAxisEdge, (, )]
[plot]
[dataset, ., getXValue, (, series, ,, item, )]
[dataset]
[series]
[item]
[dataset, ., getYValue, (, series, ,, item, )]
[dataset]
[series]
[item]
[domainAxis, ., valueToJava2D, (, x1, ,, dataArea, ,, xAxisLocation, )]
[domainAxis]
[x1]
[dataArea]
[xAxisLocation]
[rangeAxis, ., valueToJava2D, (, y1, ,, dataArea, ,, yAxisLocation, )]
[rangeAxis]
[y1]
[dataArea]
[yAxisLocation]
[!, Double, ., isNaN, (, transX1, ), &&, !, Double, ., isNaN, (, transY1, )]
[!, Double, ., isNaN, (, transX1, )]
[Double, ., isNaN, (, transX1, )]
[Double]
[transX1]
[!, Double, ., isNaN, (, transY1, )]
[Double, ., isNaN, (, transY1, )]
[Double]
[transY1]
[new, ControlPoint, (, plot, ., getOrientation, (, ), ==, PlotOrientation, ., HORIZONTAL, ?, (, float, ), transY1, :, (, float, ), transX1, ,, plot, ., getOrientation, (, ), ==, PlotOrientation, ., HORIZONTAL, ?, (, float, ), transX1, :, (, float, ), transY1, )]
[plot, ., getOrientation, (, ), ==, PlotOrientation, ., HORIZONTAL, ?, (, float, ), transY1, :, (, float, ), transX1]
[plot, ., getOrientation, (, ), ==, PlotOrientation, ., HORIZONTAL]
[plot, ., getOrientation, (, )]
[plot]
[PlotOrientation, ., HORIZONTAL]
[PlotOrientation]
[(, float, ), transY1]
[transY1]
[(, float, ), transX1]
[transX1]
[plot, ., getOrientation, (, ), ==, PlotOrientation, ., HORIZONTAL, ?, (, float, ), transX1, :, (, float, ), transY1]
[plot, ., getOrientation, (, ), ==, PlotOrientation, ., HORIZONTAL]
[plot, ., getOrientation, (, )]
[plot]
[PlotOrientation, ., HORIZONTAL]
[PlotOrientation]
[(, float, ), transX1]
[transX1]
[(, float, ), transY1]
[transY1]
[!, this, ., points, ., contains, (, p, )]
[this, ., points, ., contains, (, p, )]
[this, ., points]
[this]
[p]
[this, ., points, ., add, (, p, )]
[this, ., points]
[this]
[p]
[item, ==, dataset, ., getItemCount, (, series, ), -, 1]
[item]
[dataset, ., getItemCount, (, series, ), -, 1]
[dataset, ., getItemCount, (, series, )]
[dataset]
[series]
[1]
[(, State, ), state]
[state]
[this, ., points, ., size, (, ), >, 1]
[this, ., points, ., size, (, )]
[this, ., points]
[this]
[1]
[(, ControlPoint, ), this, ., points, ., get, (, 0, )]
[this, ., points, ., get, (, 0, )]
[this, ., points]
[this]
[0]
[s, ., seriesPath, ., moveTo, (, cp0, ., x, ,, cp0, ., y, )]
[s, ., seriesPath]
[s]
[cp0, ., x]
[cp0]
[cp0, ., y]
[cp0]
[this, ., points, ., size, (, ), ==, 2]
[this, ., points, ., size, (, )]
[this, ., points]
[this]
[2]
[(, ControlPoint, ), this, ., points, ., get, (, 1, )]
[this, ., points, ., get, (, 1, )]
[this, ., points]
[this]
[1]
[s, ., seriesPath, ., lineTo, (, cp1, ., x, ,, cp1, ., y, )]
[s, ., seriesPath]
[s]
[cp1, ., x]
[cp1]
[cp1, ., y]
[cp1]
[this, ., points, ., size, (, )]
[this, ., points]
[this]
[new, float, [, np, ]]
[np]
[new, float, [, np, ]]
[np]
[0]
[0]
[new, float, [, np, ]]
[np]
[new, float, [, np, ]]
[np]
[0]
[i, <, np]
[i]
[np]
[i, ++]
[i]
[(, ControlPoint, ), this, ., points, ., get, (, i, )]
[this, ., points, ., get, (, i, )]
[this, ., points]
[this]
[i]
[x, [, i, ]]
[x]
[i]
[cpi, ., x]
[cpi]
[d, [, i, ]]
[d]
[i]
[cpi, ., y]
[cpi]
[1]
[i, <=, np, -, 1]
[i]
[np, -, 1]
[np]
[1]
[i, ++]
[i]
[h, [, i, ]]
[h]
[i]
[x, [, i, ], -, x, [, i, -, 1, ]]
[x, [, i, ]]
[x]
[i]
[x, [, i, -, 1, ]]
[x]
[i, -, 1]
[i]
[1]
[new, float, [, np, -, 1, ]]
[np, -, 1]
[np]
[1]
[new, float, [, np, -, 1, ]]
[np, -, 1]
[np]
[1]
[new, float, [, np, -, 1, ]]
[np, -, 1]
[np]
[1]
[1]
[i, <=, np, -, 2]
[i]
[np, -, 2]
[np]
[2]
[i, ++]
[i]
[diag, [, i, ]]
[diag]
[i]
[(, h, [, i, ], +, h, [, i, +, 1, ], ), /, 3]
[(, h, [, i, ], +, h, [, i, +, 1, ], )]
[h, [, i, ], +, h, [, i, +, 1, ]]
[h, [, i, ]]
[h]
[i]
[h, [, i, +, 1, ]]
[h]
[i, +, 1]
[i]
[1]
[3]
[sup, [, i, ]]
[sup]
[i]
[h, [, i, +, 1, ], /, 6]
[h, [, i, +, 1, ]]
[h]
[i, +, 1]
[i]
[1]
[6]
[sub, [, i, ]]
[sub]
[i]
[h, [, i, ], /, 6]
[h, [, i, ]]
[h]
[i]
[6]
[a, [, i, ]]
[a]
[i]
[(, d, [, i, +, 1, ], -, d, [, i, ], ), /, h, [, i, +, 1, ], -, (, d, [, i, ], -, d, [, i, -, 1, ], ), /, h, [, i, ]]
[(, d, [, i, +, 1, ], -, d, [, i, ], ), /, h, [, i, +, 1, ]]
[(, d, [, i, +, 1, ], -, d, [, i, ], )]
[d, [, i, +, 1, ], -, d, [, i, ]]
[d, [, i, +, 1, ]]
[d]
[i, +, 1]
[i]
[1]
[d, [, i, ]]
[d]
[i]
[h, [, i, +, 1, ]]
[h]
[i, +, 1]
[i]
[1]
[(, d, [, i, ], -, d, [, i, -, 1, ], ), /, h, [, i, ]]
[(, d, [, i, ], -, d, [, i, -, 1, ], )]
[d, [, i, ], -, d, [, i, -, 1, ]]
[d, [, i, ]]
[d]
[i]
[d, [, i, -, 1, ]]
[d]
[i, -, 1]
[i]
[1]
[h, [, i, ]]
[h]
[i]
[solveTridiag, (, sub, ,, diag, ,, sup, ,, a, ,, np, -, 2, )]
[sub]
[diag]
[sup]
[a]
[np, -, 2]
[np]
[2]
[oldt]
[x, [, 0, ]]
[x]
[0]
[oldy]
[d, [, 0, ]]
[d]
[0]
[s, ., seriesPath, ., moveTo, (, oldt, ,, oldy, )]
[s, ., seriesPath]
[s]
[oldt]
[oldy]
[1]
[i, <=, np, -, 1]
[i]
[np, -, 1]
[np]
[1]
[i, ++]
[i]
[1]
[j, <=, this, ., precision]
[j]
[this, ., precision]
[this]
[j, ++]
[j]
[t1]
[(, h, [, i, ], *, j, ), /, this, ., precision]
[(, h, [, i, ], *, j, )]
[h, [, i, ], *, j]
[h, [, i, ]]
[h]
[i]
[j]
[this, ., precision]
[this]
[t2]
[h, [, i, ], -, t1]
[h, [, i, ]]
[h]
[i]
[t1]
[y]
[(, (, -, a, [, i, -, 1, ], /, 6, *, (, t2, +, h, [, i, ], ), *, t1, +, d, [, i, -, 1, ], ), *, t2, +, (, -, a, [, i, ], /, 6, *, (, t1, +, h, [, i, ], ), *, t2, +, d, [, i, ], ), *, t1, ), /, h, [, i, ]]
[(, (, -, a, [, i, -, 1, ], /, 6, *, (, t2, +, h, [, i, ], ), *, t1, +, d, [, i, -, 1, ], ), *, t2, +, (, -, a, [, i, ], /, 6, *, (, t1, +, h, [, i, ], ), *, t2, +, d, [, i, ], ), *, t1, )]
[(, -, a, [, i, -, 1, ], /, 6, *, (, t2, +, h, [, i, ], ), *, t1, +, d, [, i, -, 1, ], ), *, t2, +, (, -, a, [, i, ], /, 6, *, (, t1, +, h, [, i, ], ), *, t2, +, d, [, i, ], ), *, t1]
[(, -, a, [, i, -, 1, ], /, 6, *, (, t2, +, h, [, i, ], ), *, t1, +, d, [, i, -, 1, ], ), *, t2]
[(, -, a, [, i, -, 1, ], /, 6, *, (, t2, +, h, [, i, ], ), *, t1, +, d, [, i, -, 1, ], )]
[-, a, [, i, -, 1, ], /, 6, *, (, t2, +, h, [, i, ], ), *, t1, +, d, [, i, -, 1, ]]
[-, a, [, i, -, 1, ], /, 6, *, (, t2, +, h, [, i, ], ), *, t1]
[-, a, [, i, -, 1, ], /, 6, *, (, t2, +, h, [, i, ], )]
[-, a, [, i, -, 1, ], /, 6]
[-, a, [, i, -, 1, ]]
[a, [, i, -, 1, ]]
[a]
[i, -, 1]
[i]
[1]
[6]
[(, t2, +, h, [, i, ], )]
[t2, +, h, [, i, ]]
[t2]
[h, [, i, ]]
[h]
[i]
[t1]
[d, [, i, -, 1, ]]
[d]
[i, -, 1]
[i]
[1]
[t2]
[(, -, a, [, i, ], /, 6, *, (, t1, +, h, [, i, ], ), *, t2, +, d, [, i, ], ), *, t1]
[(, -, a, [, i, ], /, 6, *, (, t1, +, h, [, i, ], ), *, t2, +, d, [, i, ], )]
[-, a, [, i, ], /, 6, *, (, t1, +, h, [, i, ], ), *, t2, +, d, [, i, ]]
[-, a, [, i, ], /, 6, *, (, t1, +, h, [, i, ], ), *, t2]
[-, a, [, i, ], /, 6, *, (, t1, +, h, [, i, ], )]
[-, a, [, i, ], /, 6]
[-, a, [, i, ]]
[a, [, i, ]]
[a]
[i]
[6]
[(, t1, +, h, [, i, ], )]
[t1, +, h, [, i, ]]
[t1]
[h, [, i, ]]
[h]
[i]
[t2]
[d, [, i, ]]
[d]
[i]
[t1]
[h, [, i, ]]
[h]
[i]
[t]
[x, [, i, -, 1, ], +, t1]
[x, [, i, -, 1, ]]
[x]
[i, -, 1]
[i]
[1]
[t1]
[s, ., seriesPath, ., lineTo, (, t, ,, y, )]
[s, ., seriesPath]
[s]
[t]
[y]
[oldt]
[t]
[oldy]
[y]
[drawShape1, (, g2, ,, pass, ,, series, ,, item, ,, selected, ,, s, ., seriesPath, )]
[g2]
[pass]
[series]
[item]
[selected]
[s, ., seriesPath]
[s]
[this, ., points]
[this]
[new, Vector, (, )]
[i]
[2]
[i, <=, n]
[i]
[n]
[i, ++]
[i]
[sub, [, i, ]]
[sub]
[i]
[sub, [, i, ], /, diag, [, i, -, 1, ]]
[sub, [, i, ]]
[sub]
[i]
[diag, [, i, -, 1, ]]
[diag]
[i, -, 1]
[i]
[1]
[diag, [, i, ]]
[diag]
[i]
[diag, [, i, ], -, sub, [, i, ], *, sup, [, i, -, 1, ]]
[diag, [, i, ]]
[diag]
[i]
[sub, [, i, ], *, sup, [, i, -, 1, ]]
[sub, [, i, ]]
[sub]
[i]
[sup, [, i, -, 1, ]]
[sup]
[i, -, 1]
[i]
[1]
[b, [, i, ]]
[b]
[i]
[b, [, i, ], -, sub, [, i, ], *, b, [, i, -, 1, ]]
[b, [, i, ]]
[b]
[i]
[sub, [, i, ], *, b, [, i, -, 1, ]]
[sub, [, i, ]]
[sub]
[i]
[b, [, i, -, 1, ]]
[b]
[i, -, 1]
[i]
[1]
[b, [, n, ]]
[b]
[n]
[b, [, n, ], /, diag, [, n, ]]
[b, [, n, ]]
[b]
[n]
[diag, [, n, ]]
[diag]
[n]
[i]
[n, -, 1]
[n]
[1]
[i, >=, 1]
[i]
[1]
[i, --]
[i]
[b, [, i, ]]
[b]
[i]
[(, b, [, i, ], -, sup, [, i, ], *, b, [, i, +, 1, ], ), /, diag, [, i, ]]
[(, b, [, i, ], -, sup, [, i, ], *, b, [, i, +, 1, ], )]
[b, [, i, ], -, sup, [, i, ], *, b, [, i, +, 1, ]]
[b, [, i, ]]
[b]
[i]
[sup, [, i, ], *, b, [, i, +, 1, ]]
[sup, [, i, ]]
[sup]
[i]
[b, [, i, +, 1, ]]
[b]
[i, +, 1]
[i]
[1]
[diag, [, i, ]]
[diag]
[i]
[obj, ==, this]
[obj]
[this]
[true]
[!, (, obj, instanceof, XYSplineRenderer, )]
[(, obj, instanceof, XYSplineRenderer, )]
[obj, instanceof, XYSplineRenderer]
[obj]
[false]
[(, XYSplineRenderer, ), obj]
[obj]
[this, ., precision, !=, that, ., precision]
[this, ., precision]
[this]
[that, ., precision]
[that]
[false]
[super, ., equals, (, obj, )]
[super]
[obj]
[this, ., x]
[this]
[x]
[this, ., y]
[this]
[y]
[obj, ==, this]
[obj]
[this]
[true]
[!, (, obj, instanceof, ControlPoint, )]
[(, obj, instanceof, ControlPoint, )]
[obj, instanceof, ControlPoint]
[obj]
[false]
[(, ControlPoint, ), obj]
[obj]
[this, ., x, !=, that, ., x]
[this, ., x]
[this]
[that, ., x]
[that]
[false]
[true]
