[DiagnosticType, ., error, (, "JSC_INTERNAL_ERROR_UNEXPECTED_TOKEN", ,, "Internal Error: Don't know how to handle {0}", )]
[DiagnosticType]
["JSC_INTERNAL_ERROR_UNEXPECTED_TOKEN"]
["Internal Error: Don't know how to handle {0}"]
[DiagnosticType, ., warning, (, "JSC_BAD_DELETE_OPERAND", ,, "delete operator needs a reference operand", )]
[DiagnosticType]
["JSC_BAD_DELETE_OPERAND"]
["delete operator needs a reference operand"]
["overriding prototype with non-object"]
[DiagnosticType, ., warning, (, "JSC_DETERMINISTIC_TEST", ,, "condition always evaluates to {2}\n", +, "left : {0}\n", +, "right: {1}", )]
[DiagnosticType]
["JSC_DETERMINISTIC_TEST"]
["condition always evaluates to {2}\n", +, "left : {0}\n", +, "right: {1}"]
["condition always evaluates to {2}\n", +, "left : {0}\n"]
["condition always evaluates to {2}\n"]
["left : {0}\n"]
["right: {1}"]
[DiagnosticType, ., warning, (, "JSC_DETERMINISTIC_TEST_NO_RESULT", ,, "condition always evaluates to the same value\n", +, "left : {0}\n", +, "right: {1}", )]
[DiagnosticType]
["JSC_DETERMINISTIC_TEST_NO_RESULT"]
["condition always evaluates to the same value\n", +, "left : {0}\n", +, "right: {1}"]
["condition always evaluates to the same value\n", +, "left : {0}\n"]
["condition always evaluates to the same value\n"]
["left : {0}\n"]
["right: {1}"]
[DiagnosticType, ., warning, (, "JSC_INEXISTENT_ENUM_ELEMENT", ,, "element {0} does not exist on this enum", )]
[DiagnosticType]
["JSC_INEXISTENT_ENUM_ELEMENT"]
["element {0} does not exist on this enum"]
[DiagnosticType, ., disabled, (, "JSC_INEXISTENT_PROPERTY", ,, "Property {0} never defined on {1}", )]
[DiagnosticType]
["JSC_INEXISTENT_PROPERTY"]
["Property {0} never defined on {1}"]
[DiagnosticType, ., warning, (, "JSC_NOT_A_CONSTRUCTOR", ,, "cannot instantiate non-constructor", )]
[DiagnosticType]
["JSC_NOT_A_CONSTRUCTOR"]
["cannot instantiate non-constructor"]
[DiagnosticType, ., warning, (, "JSC_BAD_TYPE_FOR_BIT_OPERATION", ,, "operator {0} cannot be applied to {1}", )]
[DiagnosticType]
["JSC_BAD_TYPE_FOR_BIT_OPERATION"]
["operator {0} cannot be applied to {1}"]
[DiagnosticType, ., warning, (, "JSC_NOT_FUNCTION_TYPE", ,, "{0} expressions are not callable", )]
[DiagnosticType]
["JSC_NOT_FUNCTION_TYPE"]
["{0} expressions are not callable"]
[DiagnosticType, ., warning, (, "JSC_CONSTRUCTOR_NOT_CALLABLE", ,, "Constructor {0} should be called with the \"new\" keyword", )]
[DiagnosticType]
["JSC_CONSTRUCTOR_NOT_CALLABLE"]
["Constructor {0} should be called with the \"new\" keyword"]
[DiagnosticType, ., warning, (, "JSC_FUNCTION_MASKS_VARIABLE", ,, "function {0} masks variable (IE bug)", )]
[DiagnosticType]
["JSC_FUNCTION_MASKS_VARIABLE"]
["function {0} masks variable (IE bug)"]
[DiagnosticType, ., warning, (, "JSC_MULTIPLE_VAR_DEF", ,, "declaration of multiple variables with shared type information", )]
[DiagnosticType]
["JSC_MULTIPLE_VAR_DEF"]
["declaration of multiple variables with shared type information"]
[DiagnosticType, ., error, (, "JSC_ENUM_DUP", ,, "enum element {0} already defined", )]
[DiagnosticType]
["JSC_ENUM_DUP"]
["enum element {0} already defined"]
[DiagnosticType, ., warning, (, "JSC_ENUM_NOT_CONSTANT", ,, "enum key {0} must be a syntactic constant", )]
[DiagnosticType]
["JSC_ENUM_NOT_CONSTANT"]
["enum key {0} must be a syntactic constant"]
[DiagnosticType, ., warning, (, "JSC_INVALID_INTERFACE_MEMBER_DECLARATION", ,, "interface members can only be empty property declarations,", +, " empty functions{0}", )]
[DiagnosticType]
["JSC_INVALID_INTERFACE_MEMBER_DECLARATION"]
["interface members can only be empty property declarations,", +, " empty functions{0}"]
["interface members can only be empty property declarations,"]
[" empty functions{0}"]
[DiagnosticType, ., warning, (, "JSC_INTERFACE_FUNCTION_NOT_EMPTY", ,, "interface member functions must have an empty body", )]
[DiagnosticType]
["JSC_INTERFACE_FUNCTION_NOT_EMPTY"]
["interface member functions must have an empty body"]
[DiagnosticType, ., warning, (, "JSC_CONFLICTING_EXTENDED_TYPE", ,, "{1} cannot extend this type; {0}s can only extend {0}s", )]
[DiagnosticType]
["JSC_CONFLICTING_EXTENDED_TYPE"]
["{1} cannot extend this type; {0}s can only extend {0}s"]
[DiagnosticType, ., warning, (, "JSC_CONFLICTING_IMPLEMENTED_TYPE", ,, "{0} cannot implement this type; ", +, "an interface can only extend, but not implement interfaces", )]
[DiagnosticType]
["JSC_CONFLICTING_IMPLEMENTED_TYPE"]
["{0} cannot implement this type; ", +, "an interface can only extend, but not implement interfaces"]
["{0} cannot implement this type; "]
["an interface can only extend, but not implement interfaces"]
[DiagnosticType, ., warning, (, "JSC_IMPLEMENTS_NON_INTERFACE", ,, "can only implement interfaces", )]
[DiagnosticType]
["JSC_IMPLEMENTS_NON_INTERFACE"]
["can only implement interfaces"]
[DiagnosticType, ., warning, (, "JSC_HIDDEN_SUPERCLASS_PROPERTY", ,, "property {0} already defined on superclass {1}; ", +, "use @override to override it", )]
[DiagnosticType]
["JSC_HIDDEN_SUPERCLASS_PROPERTY"]
["property {0} already defined on superclass {1}; ", +, "use @override to override it"]
["property {0} already defined on superclass {1}; "]
["use @override to override it"]
[DiagnosticType, ., warning, (, "JSC_HIDDEN_INTERFACE_PROPERTY", ,, "property {0} already defined on interface {1}; ", +, "use @override to override it", )]
[DiagnosticType]
["JSC_HIDDEN_INTERFACE_PROPERTY"]
["property {0} already defined on interface {1}; ", +, "use @override to override it"]
["property {0} already defined on interface {1}; "]
["use @override to override it"]
[DiagnosticType, ., warning, (, "JSC_HIDDEN_SUPERCLASS_PROPERTY_MISMATCH", ,, "mismatch of the {0} property type and the type ", +, "of the property it overrides from superclass {1}\n", +, "original: {2}\n", +, "override: {3}", )]
[DiagnosticType]
["JSC_HIDDEN_SUPERCLASS_PROPERTY_MISMATCH"]
["mismatch of the {0} property type and the type ", +, "of the property it overrides from superclass {1}\n", +, "original: {2}\n", +, "override: {3}"]
["mismatch of the {0} property type and the type ", +, "of the property it overrides from superclass {1}\n", +, "original: {2}\n"]
["mismatch of the {0} property type and the type ", +, "of the property it overrides from superclass {1}\n"]
["mismatch of the {0} property type and the type "]
["of the property it overrides from superclass {1}\n"]
["original: {2}\n"]
["override: {3}"]
[DiagnosticType, ., warning, (, "JSC_UNKNOWN_OVERRIDE", ,, "property {0} not defined on any superclass of {1}", )]
[DiagnosticType]
["JSC_UNKNOWN_OVERRIDE"]
["property {0} not defined on any superclass of {1}"]
[DiagnosticType, ., warning, (, "JSC_INTERFACE_METHOD_OVERRIDE", ,, "property {0} is already defined by the {1} extended interface", )]
[DiagnosticType]
["JSC_INTERFACE_METHOD_OVERRIDE"]
["property {0} is already defined by the {1} extended interface"]
[DiagnosticType, ., warning, (, "JSC_UNKNOWN_EXPR_TYPE", ,, "could not determine the type of this expression", )]
[DiagnosticType]
["JSC_UNKNOWN_EXPR_TYPE"]
["could not determine the type of this expression"]
[DiagnosticType, ., warning, (, "JSC_UNRESOLVED_TYPE", ,, "could not resolve the name {0} to a type", )]
[DiagnosticType]
["JSC_UNRESOLVED_TYPE"]
["could not resolve the name {0} to a type"]
[DiagnosticType, ., warning, (, "JSC_WRONG_ARGUMENT_COUNT", ,, "Function {0}: called with {1} argument(s). ", +, "Function requires at least {2} argument(s){3}.", )]
[DiagnosticType]
["JSC_WRONG_ARGUMENT_COUNT"]
["Function {0}: called with {1} argument(s). ", +, "Function requires at least {2} argument(s){3}."]
["Function {0}: called with {1} argument(s). "]
["Function requires at least {2} argument(s){3}."]
[DiagnosticType, ., warning, (, "JSC_ILLEGAL_IMPLICIT_CAST", ,, "Illegal annotation on {0}. @implicitCast may only be used in ", +, "externs.", )]
[DiagnosticType]
["JSC_ILLEGAL_IMPLICIT_CAST"]
["Illegal annotation on {0}. @implicitCast may only be used in ", +, "externs."]
["Illegal annotation on {0}. @implicitCast may only be used in "]
["externs."]
[DiagnosticType, ., warning, (, "JSC_INCOMPATIBLE_EXTENDED_PROPERTY_TYPE", ,, "Interface {0} has a property {1} with incompatible types in ", +, "its super interfaces {2} and {3}", )]
[DiagnosticType]
["JSC_INCOMPATIBLE_EXTENDED_PROPERTY_TYPE"]
["Interface {0} has a property {1} with incompatible types in ", +, "its super interfaces {2} and {3}"]
["Interface {0} has a property {1} with incompatible types in "]
["its super interfaces {2} and {3}"]
[DiagnosticType, ., warning, (, "JSC_EXPECTED_THIS_TYPE", ,, "\"{0}\" must be called with a \"this\" type", )]
[DiagnosticType]
["JSC_EXPECTED_THIS_TYPE"]
["\"{0}\" must be called with a \"this\" type"]
[DiagnosticType, ., warning, (, "JSC_IN_USED_WITH_STRUCT", ,, "Cannot use the IN operator with structs", )]
[DiagnosticType]
["JSC_IN_USED_WITH_STRUCT"]
["Cannot use the IN operator with structs"]
[DiagnosticType, ., warning, (, "JSC_ILLEGAL_PROPERTY_CREATION", ,, "Cannot add a property to a struct instance ", +, "after it is constructed.", )]
[DiagnosticType]
["JSC_ILLEGAL_PROPERTY_CREATION"]
["Cannot add a property to a struct instance ", +, "after it is constructed."]
["Cannot add a property to a struct instance "]
["after it is constructed."]
[DiagnosticType, ., warning, (, "ILLEGAL_OBJLIT_KEY", ,, "Illegal key, the object literal is a {0}", )]
[DiagnosticType]
["ILLEGAL_OBJLIT_KEY"]
["Illegal key, the object literal is a {0}"]
[new, DiagnosticGroup, (, DETERMINISTIC_TEST, ,, DETERMINISTIC_TEST_NO_RESULT, ,, INEXISTENT_ENUM_ELEMENT, ,, INEXISTENT_PROPERTY, ,, NOT_A_CONSTRUCTOR, ,, BIT_OPERATION, ,, NOT_CALLABLE, ,, CONSTRUCTOR_NOT_CALLABLE, ,, FUNCTION_MASKS_VARIABLE, ,, MULTIPLE_VAR_DEF, ,, ENUM_DUP, ,, ENUM_NOT_CONSTANT, ,, INVALID_INTERFACE_MEMBER_DECLARATION, ,, INTERFACE_FUNCTION_NOT_EMPTY, ,, CONFLICTING_EXTENDED_TYPE, ,, CONFLICTING_IMPLEMENTED_TYPE, ,, BAD_IMPLEMENTED_TYPE, ,, HIDDEN_SUPERCLASS_PROPERTY, ,, HIDDEN_INTERFACE_PROPERTY, ,, HIDDEN_SUPERCLASS_PROPERTY_MISMATCH, ,, UNKNOWN_OVERRIDE, ,, INTERFACE_METHOD_OVERRIDE, ,, UNKNOWN_EXPR_TYPE, ,, UNRESOLVED_TYPE, ,, WRONG_ARGUMENT_COUNT, ,, ILLEGAL_IMPLICIT_CAST, ,, INCOMPATIBLE_EXTENDED_PROPERTY_TYPE, ,, EXPECTED_THIS_TYPE, ,, IN_USED_WITH_STRUCT, ,, ILLEGAL_PROPERTY_CREATION, ,, ILLEGAL_OBJLIT_KEY, ,, RhinoErrorReporter, ., TYPE_PARSE_ERROR, ,, TypedScopeCreator, ., UNKNOWN_LENDS, ,, TypedScopeCreator, ., LENDS_ON_NON_OBJECT, ,, TypedScopeCreator, ., CTOR_INITIALIZER, ,, TypedScopeCreator, ., IFACE_INITIALIZER, ,, FunctionTypeBuilder, ., THIS_TYPE_NON_OBJECT, )]
[DETERMINISTIC_TEST]
[DETERMINISTIC_TEST_NO_RESULT]
[INEXISTENT_ENUM_ELEMENT]
[INEXISTENT_PROPERTY]
[NOT_A_CONSTRUCTOR]
[BIT_OPERATION]
[NOT_CALLABLE]
[CONSTRUCTOR_NOT_CALLABLE]
[FUNCTION_MASKS_VARIABLE]
[MULTIPLE_VAR_DEF]
[ENUM_DUP]
[ENUM_NOT_CONSTANT]
[INVALID_INTERFACE_MEMBER_DECLARATION]
[INTERFACE_FUNCTION_NOT_EMPTY]
[CONFLICTING_EXTENDED_TYPE]
[CONFLICTING_IMPLEMENTED_TYPE]
[BAD_IMPLEMENTED_TYPE]
[HIDDEN_SUPERCLASS_PROPERTY]
[HIDDEN_INTERFACE_PROPERTY]
[HIDDEN_SUPERCLASS_PROPERTY_MISMATCH]
[UNKNOWN_OVERRIDE]
[INTERFACE_METHOD_OVERRIDE]
[UNKNOWN_EXPR_TYPE]
[UNRESOLVED_TYPE]
[WRONG_ARGUMENT_COUNT]
[ILLEGAL_IMPLICIT_CAST]
[INCOMPATIBLE_EXTENDED_PROPERTY_TYPE]
[EXPECTED_THIS_TYPE]
[IN_USED_WITH_STRUCT]
[ILLEGAL_PROPERTY_CREATION]
[ILLEGAL_OBJLIT_KEY]
[RhinoErrorReporter, ., TYPE_PARSE_ERROR]
[RhinoErrorReporter]
[TypedScopeCreator, ., UNKNOWN_LENDS]
[TypedScopeCreator]
[TypedScopeCreator, ., LENDS_ON_NON_OBJECT]
[TypedScopeCreator]
[TypedScopeCreator, ., CTOR_INITIALIZER]
[TypedScopeCreator]
[TypedScopeCreator, ., IFACE_INITIALIZER]
[TypedScopeCreator]
[FunctionTypeBuilder, ., THIS_TYPE_NON_OBJECT]
[FunctionTypeBuilder]
[true]
[null]
[0]
[0]
[0]
[0]
[this, ., compiler]
[this]
[compiler]
[this, ., validator]
[this]
[compiler, ., getTypeValidator, (, )]
[compiler]
[this, ., reverseInterpreter]
[this]
[reverseInterpreter]
[this, ., typeRegistry]
[this]
[typeRegistry]
[this, ., topScope]
[this]
[topScope]
[this, ., scopeCreator]
[this]
[scopeCreator]
[this, ., reportMissingOverride]
[this]
[reportMissingOverride]
[this, ., reportUnknownTypes]
[this]
[reportUnknownTypes]
[this, ., inferJSDocInfo]
[this]
[new, InferJSDocInfo, (, compiler, )]
[compiler]
[compiler]
[reverseInterpreter]
[typeRegistry]
[null]
[null]
[reportMissingOverride]
[reportUnknownTypes]
[compiler]
[reverseInterpreter]
[typeRegistry]
[null]
[null]
[CheckLevel, ., WARNING]
[CheckLevel]
[CheckLevel, ., OFF]
[CheckLevel]
[reportMissingProperties]
[report]
[this]
[Preconditions, ., checkNotNull, (, scopeCreator, )]
[Preconditions]
[scopeCreator]
[Preconditions, ., checkNotNull, (, topScope, )]
[Preconditions]
[topScope]
[jsRoot, ., getParent, (, )]
[jsRoot]
[Preconditions, ., checkState, (, externsAndJs, !=, null, )]
[Preconditions]
[externsAndJs, !=, null]
[externsAndJs]
[null]
[Preconditions, ., checkState, (, externsRoot, ==, null, ||, externsAndJs, ., hasChild, (, externsRoot, ), )]
[Preconditions]
[externsRoot, ==, null, ||, externsAndJs, ., hasChild, (, externsRoot, )]
[externsRoot, ==, null]
[externsRoot]
[null]
[externsAndJs, ., hasChild, (, externsRoot, )]
[externsAndJs]
[externsRoot]
[externsRoot, !=, null]
[externsRoot]
[null]
[check, (, externsRoot, ,, true, )]
[externsRoot]
[true]
[check, (, jsRoot, ,, false, )]
[jsRoot]
[false]
[Preconditions, ., checkState, (, scopeCreator, ==, null, )]
[Preconditions]
[scopeCreator, ==, null]
[scopeCreator]
[null]
[Preconditions, ., checkState, (, topScope, ==, null, )]
[Preconditions]
[topScope, ==, null]
[topScope]
[null]
[Preconditions, ., checkState, (, jsRoot, ., getParent, (, ), !=, null, )]
[Preconditions]
[jsRoot, ., getParent, (, ), !=, null]
[jsRoot, ., getParent, (, )]
[jsRoot]
[null]
[jsRoot, ., getParent, (, )]
[jsRoot]
[scopeCreator]
[new, MemoizedScopeCreator, (, new, TypedScopeCreator, (, compiler, ), )]
[new, TypedScopeCreator, (, compiler, )]
[compiler]
[topScope]
[scopeCreator, ., createScope, (, externsAndJsRoot, ,, null, )]
[scopeCreator]
[externsAndJsRoot]
[null]
[new, TypeInferencePass, (, compiler, ,, reverseInterpreter, ,, topScope, ,, scopeCreator, )]
[compiler]
[reverseInterpreter]
[topScope]
[scopeCreator]
[inference, ., process, (, externsRoot, ,, jsRoot, )]
[inference]
[externsRoot]
[jsRoot]
[process, (, externsRoot, ,, jsRoot, )]
[externsRoot]
[jsRoot]
[topScope]
[Preconditions, ., checkNotNull, (, node, )]
[Preconditions]
[node]
[new, NodeTraversal, (, compiler, ,, this, ,, scopeCreator, )]
[compiler]
[this]
[scopeCreator]
[inExterns]
[externs]
[t, ., traverseWithScope, (, node, ,, topScope, )]
[t]
[node]
[topScope]
[externs]
[inferJSDocInfo, ., process, (, node, ,, null, )]
[inferJSDocInfo]
[node]
[null]
[inferJSDocInfo, ., process, (, null, ,, node, )]
[inferJSDocInfo]
[null]
[node]
[n, ., getType, (, )]
[n]
[Token, ., SCRIPT]
[Token]
[Token, ., BLOCK]
[Token]
[Token, ., VAR]
[Token]
[Token, ., FUNCTION]
[Token]
[Token, ., ASSIGN]
[Token]
[n, ., getJSDocInfo, (, )]
[n]
[info, !=, null, &&, info, ., isNoTypeCheck, (, )]
[info, !=, null]
[info]
[null]
[info, ., isNoTypeCheck, (, )]
[info]
[enterSection]
[noTypeCheckSection, ++]
[noTypeCheckSection]
[noTypeCheckSection, --]
[noTypeCheckSection]
[validator, ., setShouldReport, (, noTypeCheckSection, ==, 0, )]
[validator]
[noTypeCheckSection, ==, 0]
[noTypeCheckSection]
[0]
[noTypeCheckSection, ==, 0]
[noTypeCheckSection]
[0]
[t, ., report, (, n, ,, diagnosticType, ,, arguments, )]
[t]
[n]
[diagnosticType]
[arguments]
[checkNoTypeCheckSection, (, n, ,, true, )]
[n]
[true]
[n, ., getType, (, )]
[n]
[Token, ., FUNCTION]
[Token]
[t, ., getScope, (, )]
[t]
[n, ., getFirstChild, (, ), ., getString, (, )]
[n, ., getFirstChild, (, )]
[n]
[functionPrivateName, !=, null, &&, functionPrivateName, ., length, (, ), >, 0, &&, outerScope, ., isDeclared, (, functionPrivateName, ,, false, ), &&, !, (, outerScope, ., getVar, (, functionPrivateName, ), ., getType, (, ), instanceof, FunctionType, )]
[functionPrivateName, !=, null, &&, functionPrivateName, ., length, (, ), >, 0, &&, outerScope, ., isDeclared, (, functionPrivateName, ,, false, )]
[functionPrivateName, !=, null, &&, functionPrivateName, ., length, (, ), >, 0]
[functionPrivateName, !=, null]
[functionPrivateName]
[null]
[functionPrivateName, ., length, (, ), >, 0]
[functionPrivateName, ., length, (, )]
[functionPrivateName]
[0]
[outerScope, ., isDeclared, (, functionPrivateName, ,, false, )]
[outerScope]
[functionPrivateName]
[false]
[!, (, outerScope, ., getVar, (, functionPrivateName, ), ., getType, (, ), instanceof, FunctionType, )]
[(, outerScope, ., getVar, (, functionPrivateName, ), ., getType, (, ), instanceof, FunctionType, )]
[outerScope, ., getVar, (, functionPrivateName, ), ., getType, (, ), instanceof, FunctionType]
[outerScope, ., getVar, (, functionPrivateName, ), ., getType, (, )]
[outerScope, ., getVar, (, functionPrivateName, )]
[outerScope]
[functionPrivateName]
[report, (, t, ,, n, ,, FUNCTION_MASKS_VARIABLE, ,, functionPrivateName, )]
[t]
[n]
[FUNCTION_MASKS_VARIABLE]
[functionPrivateName]
[true]
[true]
[n, ., getType, (, )]
[n]
[Token, ., CAST]
[Token]
[n, ., getFirstChild, (, )]
[n]
[ensureTyped, (, t, ,, n, ,, getJSType, (, expr, ), )]
[t]
[n]
[getJSType, (, expr, )]
[expr]
[getJSType, (, n, )]
[n]
[getJSType, (, expr, )]
[expr]
[castType, ., isSubtype, (, exprType, )]
[castType]
[exprType]
[expr, ., setJSType, (, castType, )]
[expr]
[castType]
[Token, ., NAME]
[Token]
[typeable]
[visitName, (, t, ,, n, ,, parent, )]
[t]
[n]
[parent]
[Token, ., PARAM_LIST]
[Token]
[typeable]
[false]
[Token, ., COMMA]
[Token]
[ensureTyped, (, t, ,, n, ,, getJSType, (, n, ., getLastChild, (, ), ), )]
[t]
[n]
[getJSType, (, n, ., getLastChild, (, ), )]
[n, ., getLastChild, (, )]
[n]
[Token, ., TRUE]
[Token]
[Token, ., FALSE]
[Token]
[ensureTyped, (, t, ,, n, ,, BOOLEAN_TYPE, )]
[t]
[n]
[BOOLEAN_TYPE]
[Token, ., THIS]
[Token]
[ensureTyped, (, t, ,, n, ,, t, ., getScope, (, ), ., getTypeOfThis, (, ), )]
[t]
[n]
[t, ., getScope, (, ), ., getTypeOfThis, (, )]
[t, ., getScope, (, )]
[t]
[Token, ., NULL]
[Token]
[ensureTyped, (, t, ,, n, ,, NULL_TYPE, )]
[t]
[n]
[NULL_TYPE]
[Token, ., NUMBER]
[Token]
[ensureTyped, (, t, ,, n, ,, NUMBER_TYPE, )]
[t]
[n]
[NUMBER_TYPE]
[Token, ., STRING]
[Token]
[ensureTyped, (, t, ,, n, ,, STRING_TYPE, )]
[t]
[n]
[STRING_TYPE]
[Token, ., STRING_KEY]
[Token]
[typeable]
[false]
[Token, ., GETTER_DEF]
[Token]
[Token, ., SETTER_DEF]
[Token]
[Token, ., ARRAYLIT]
[Token]
[ensureTyped, (, t, ,, n, ,, ARRAY_TYPE, )]
[t]
[n]
[ARRAY_TYPE]
[Token, ., REGEXP]
[Token]
[ensureTyped, (, t, ,, n, ,, REGEXP_TYPE, )]
[t]
[n]
[REGEXP_TYPE]
[Token, ., GETPROP]
[Token]
[visitGetProp, (, t, ,, n, ,, parent, )]
[t]
[n]
[parent]
[typeable]
[!, (, parent, ., isAssign, (, ), &&, parent, ., getFirstChild, (, ), ==, n, )]
[(, parent, ., isAssign, (, ), &&, parent, ., getFirstChild, (, ), ==, n, )]
[parent, ., isAssign, (, ), &&, parent, ., getFirstChild, (, ), ==, n]
[parent, ., isAssign, (, )]
[parent]
[parent, ., getFirstChild, (, ), ==, n]
[parent, ., getFirstChild, (, )]
[parent]
[n]
[Token, ., GETELEM]
[Token]
[visitGetElem, (, t, ,, n, )]
[t]
[n]
[typeable]
[false]
[Token, ., VAR]
[Token]
[visitVar, (, t, ,, n, )]
[t]
[n]
[typeable]
[false]
[Token, ., NEW]
[Token]
[visitNew, (, t, ,, n, )]
[t]
[n]
[Token, ., CALL]
[Token]
[visitCall, (, t, ,, n, )]
[t]
[n]
[typeable]
[!, parent, ., isExprResult, (, )]
[parent, ., isExprResult, (, )]
[parent]
[Token, ., RETURN]
[Token]
[visitReturn, (, t, ,, n, )]
[t]
[n]
[typeable]
[false]
[Token, ., DEC]
[Token]
[Token, ., INC]
[Token]
[left]
[n, ., getFirstChild, (, )]
[n]
[checkPropCreation, (, t, ,, left, )]
[t]
[left]
[validator, ., expectNumber, (, t, ,, left, ,, getJSType, (, left, ), ,, "increment/decrement", )]
[validator]
[t]
[left]
[getJSType, (, left, )]
[left]
["increment/decrement"]
[ensureTyped, (, t, ,, n, ,, NUMBER_TYPE, )]
[t]
[n]
[NUMBER_TYPE]
[Token, ., NOT]
[Token]
[ensureTyped, (, t, ,, n, ,, BOOLEAN_TYPE, )]
[t]
[n]
[BOOLEAN_TYPE]
[Token, ., VOID]
[Token]
[ensureTyped, (, t, ,, n, ,, VOID_TYPE, )]
[t]
[n]
[VOID_TYPE]
[Token, ., TYPEOF]
[Token]
[ensureTyped, (, t, ,, n, ,, STRING_TYPE, )]
[t]
[n]
[STRING_TYPE]
[Token, ., BITNOT]
[Token]
[childType]
[getJSType, (, n, ., getFirstChild, (, ), )]
[n, ., getFirstChild, (, )]
[n]
[!, childType, ., matchesInt32Context, (, )]
[childType, ., matchesInt32Context, (, )]
[childType]
[report, (, t, ,, n, ,, BIT_OPERATION, ,, NodeUtil, ., opToStr, (, n, ., getType, (, ), ), ,, childType, ., toString, (, ), )]
[t]
[n]
[BIT_OPERATION]
[NodeUtil, ., opToStr, (, n, ., getType, (, ), )]
[NodeUtil]
[n, ., getType, (, )]
[n]
[childType, ., toString, (, )]
[childType]
[ensureTyped, (, t, ,, n, ,, NUMBER_TYPE, )]
[t]
[n]
[NUMBER_TYPE]
[Token, ., POS]
[Token]
[Token, ., NEG]
[Token]
[left]
[n, ., getFirstChild, (, )]
[n]
[validator, ., expectNumber, (, t, ,, left, ,, getJSType, (, left, ), ,, "sign operator", )]
[validator]
[t]
[left]
[getJSType, (, left, )]
[left]
["sign operator"]
[ensureTyped, (, t, ,, n, ,, NUMBER_TYPE, )]
[t]
[n]
[NUMBER_TYPE]
[Token, ., EQ]
[Token]
[Token, ., NE]
[Token]
[Token, ., SHEQ]
[Token]
[Token, ., SHNE]
[Token]
[left]
[n, ., getFirstChild, (, )]
[n]
[right]
[n, ., getLastChild, (, )]
[n]
[left, ., isTypeOf, (, )]
[left]
[right, ., isString, (, )]
[right]
[checkTypeofString, (, t, ,, right, ,, right, ., getString, (, ), )]
[t]
[right]
[right, ., getString, (, )]
[right]
[right, ., isTypeOf, (, ), &&, left, ., isString, (, )]
[right, ., isTypeOf, (, )]
[right]
[left, ., isString, (, )]
[left]
[checkTypeofString, (, t, ,, left, ,, left, ., getString, (, ), )]
[t]
[left]
[left, ., getString, (, )]
[left]
[leftType]
[getJSType, (, left, )]
[left]
[rightType]
[getJSType, (, right, )]
[right]
[leftType, ., restrictByNotNullOrUndefined, (, )]
[leftType]
[rightType, ., restrictByNotNullOrUndefined, (, )]
[rightType]
[TernaryValue, ., UNKNOWN]
[TernaryValue]
[n, ., getType, (, ), ==, Token, ., EQ, ||, n, ., getType, (, ), ==, Token, ., NE]
[n, ., getType, (, ), ==, Token, ., EQ]
[n, ., getType, (, )]
[n]
[Token, ., EQ]
[Token]
[n, ., getType, (, ), ==, Token, ., NE]
[n, ., getType, (, )]
[n]
[Token, ., NE]
[Token]
[result]
[leftTypeRestricted, ., testForEquality, (, rightTypeRestricted, )]
[leftTypeRestricted]
[rightTypeRestricted]
[n, ., isNE, (, )]
[n]
[result]
[result, ., not, (, )]
[result]
[!, leftTypeRestricted, ., canTestForShallowEqualityWith, (, rightTypeRestricted, )]
[leftTypeRestricted, ., canTestForShallowEqualityWith, (, rightTypeRestricted, )]
[leftTypeRestricted]
[rightTypeRestricted]
[result]
[n, ., getType, (, ), ==, Token, ., SHEQ, ?, TernaryValue, ., FALSE, :, TernaryValue, ., TRUE]
[n, ., getType, (, ), ==, Token, ., SHEQ]
[n, ., getType, (, )]
[n]
[Token, ., SHEQ]
[Token]
[TernaryValue, ., FALSE]
[TernaryValue]
[TernaryValue, ., TRUE]
[TernaryValue]
[result, !=, TernaryValue, ., UNKNOWN]
[result]
[TernaryValue, ., UNKNOWN]
[TernaryValue]
[report, (, t, ,, n, ,, DETERMINISTIC_TEST, ,, leftType, ., toString, (, ), ,, rightType, ., toString, (, ), ,, result, ., toString, (, ), )]
[t]
[n]
[DETERMINISTIC_TEST]
[leftType, ., toString, (, )]
[leftType]
[rightType, ., toString, (, )]
[rightType]
[result, ., toString, (, )]
[result]
[ensureTyped, (, t, ,, n, ,, BOOLEAN_TYPE, )]
[t]
[n]
[BOOLEAN_TYPE]
[Token, ., LT]
[Token]
[Token, ., LE]
[Token]
[Token, ., GT]
[Token]
[Token, ., GE]
[Token]
[leftType]
[getJSType, (, n, ., getFirstChild, (, ), )]
[n, ., getFirstChild, (, )]
[n]
[rightType]
[getJSType, (, n, ., getLastChild, (, ), )]
[n, ., getLastChild, (, )]
[n]
[rightType, ., isNumber, (, )]
[rightType]
[validator, ., expectNumber, (, t, ,, n, ,, leftType, ,, "left side of numeric comparison", )]
[validator]
[t]
[n]
[leftType]
["left side of numeric comparison"]
[leftType, ., isNumber, (, )]
[leftType]
[validator, ., expectNumber, (, t, ,, n, ,, rightType, ,, "right side of numeric comparison", )]
[validator]
[t]
[n]
[rightType]
["right side of numeric comparison"]
[leftType, ., matchesNumberContext, (, ), &&, rightType, ., matchesNumberContext, (, )]
[leftType, ., matchesNumberContext, (, )]
[leftType]
[rightType, ., matchesNumberContext, (, )]
[rightType]
["left side of comparison"]
[validator, ., expectString, (, t, ,, n, ,, leftType, ,, message, )]
[validator]
[t]
[n]
[leftType]
[message]
[validator, ., expectNotNullOrUndefined, (, t, ,, n, ,, leftType, ,, message, ,, getNativeType, (, STRING_TYPE, ), )]
[validator]
[t]
[n]
[leftType]
[message]
[getNativeType, (, STRING_TYPE, )]
[STRING_TYPE]
[message]
["right side of comparison"]
[validator, ., expectString, (, t, ,, n, ,, rightType, ,, message, )]
[validator]
[t]
[n]
[rightType]
[message]
[validator, ., expectNotNullOrUndefined, (, t, ,, n, ,, rightType, ,, message, ,, getNativeType, (, STRING_TYPE, ), )]
[validator]
[t]
[n]
[rightType]
[message]
[getNativeType, (, STRING_TYPE, )]
[STRING_TYPE]
[ensureTyped, (, t, ,, n, ,, BOOLEAN_TYPE, )]
[t]
[n]
[BOOLEAN_TYPE]
[Token, ., IN]
[Token]
[left]
[n, ., getFirstChild, (, )]
[n]
[right]
[n, ., getLastChild, (, )]
[n]
[rightType]
[getJSType, (, right, )]
[right]
[validator, ., expectString, (, t, ,, left, ,, getJSType, (, left, ), ,, "left side of 'in'", )]
[validator]
[t]
[left]
[getJSType, (, left, )]
[left]
["left side of 'in'"]
[validator, ., expectObject, (, t, ,, n, ,, rightType, ,, "'in' requires an object", )]
[validator]
[t]
[n]
[rightType]
["'in' requires an object"]
[rightType, ., isStruct, (, )]
[rightType]
[report, (, t, ,, right, ,, IN_USED_WITH_STRUCT, )]
[t]
[right]
[IN_USED_WITH_STRUCT]
[ensureTyped, (, t, ,, n, ,, BOOLEAN_TYPE, )]
[t]
[n]
[BOOLEAN_TYPE]
[Token, ., INSTANCEOF]
[Token]
[left]
[n, ., getFirstChild, (, )]
[n]
[right]
[n, ., getLastChild, (, )]
[n]
[rightType]
[getJSType, (, right, ), ., restrictByNotNullOrUndefined, (, )]
[getJSType, (, right, )]
[right]
[validator, ., expectAnyObject, (, t, ,, left, ,, getJSType, (, left, ), ,, "deterministic instanceof yields false", )]
[validator]
[t]
[left]
[getJSType, (, left, )]
[left]
["deterministic instanceof yields false"]
[validator, ., expectActualObject, (, t, ,, right, ,, rightType, ,, "instanceof requires an object", )]
[validator]
[t]
[right]
[rightType]
["instanceof requires an object"]
[ensureTyped, (, t, ,, n, ,, BOOLEAN_TYPE, )]
[t]
[n]
[BOOLEAN_TYPE]
[Token, ., ASSIGN]
[Token]
[visitAssign, (, t, ,, n, )]
[t]
[n]
[typeable]
[false]
[Token, ., ASSIGN_LSH]
[Token]
[Token, ., ASSIGN_RSH]
[Token]
[Token, ., ASSIGN_URSH]
[Token]
[Token, ., ASSIGN_DIV]
[Token]
[Token, ., ASSIGN_MOD]
[Token]
[Token, ., ASSIGN_BITOR]
[Token]
[Token, ., ASSIGN_BITXOR]
[Token]
[Token, ., ASSIGN_BITAND]
[Token]
[Token, ., ASSIGN_SUB]
[Token]
[Token, ., ASSIGN_ADD]
[Token]
[Token, ., ASSIGN_MUL]
[Token]
[checkPropCreation, (, t, ,, n, ., getFirstChild, (, ), )]
[t]
[n, ., getFirstChild, (, )]
[n]
[Token, ., LSH]
[Token]
[Token, ., RSH]
[Token]
[Token, ., URSH]
[Token]
[Token, ., DIV]
[Token]
[Token, ., MOD]
[Token]
[Token, ., BITOR]
[Token]
[Token, ., BITXOR]
[Token]
[Token, ., BITAND]
[Token]
[Token, ., SUB]
[Token]
[Token, ., ADD]
[Token]
[Token, ., MUL]
[Token]
[visitBinaryOperator, (, n, ., getType, (, ), ,, t, ,, n, )]
[n, ., getType, (, )]
[n]
[t]
[n]
[Token, ., DELPROP]
[Token]
[ensureTyped, (, t, ,, n, ,, BOOLEAN_TYPE, )]
[t]
[n]
[BOOLEAN_TYPE]
[Token, ., CASE]
[Token]
[getJSType, (, parent, ., getFirstChild, (, ), )]
[parent, ., getFirstChild, (, )]
[parent]
[getJSType, (, n, ., getFirstChild, (, ), )]
[n, ., getFirstChild, (, )]
[n]
[validator, ., expectSwitchMatchesCase, (, t, ,, n, ,, switchType, ,, caseType, )]
[validator]
[t]
[n]
[switchType]
[caseType]
[typeable]
[false]
[Token, ., WITH]
[Token]
[n, ., getFirstChild, (, )]
[n]
[childType]
[getJSType, (, child, )]
[child]
[validator, ., expectObject, (, t, ,, child, ,, childType, ,, "with requires an object", )]
[validator]
[t]
[child]
[childType]
["with requires an object"]
[typeable]
[false]
[Token, ., FUNCTION]
[Token]
[visitFunction, (, t, ,, n, )]
[t]
[n]
[Token, ., LABEL]
[Token]
[Token, ., LABEL_NAME]
[Token]
[Token, ., SWITCH]
[Token]
[Token, ., BREAK]
[Token]
[Token, ., CATCH]
[Token]
[Token, ., TRY]
[Token]
[Token, ., SCRIPT]
[Token]
[Token, ., EXPR_RESULT]
[Token]
[Token, ., BLOCK]
[Token]
[Token, ., EMPTY]
[Token]
[Token, ., DEFAULT_CASE]
[Token]
[Token, ., CONTINUE]
[Token]
[Token, ., DEBUGGER]
[Token]
[Token, ., THROW]
[Token]
[typeable]
[false]
[Token, ., DO]
[Token]
[Token, ., IF]
[Token]
[Token, ., WHILE]
[Token]
[typeable]
[false]
[Token, ., FOR]
[Token]
[NodeUtil, ., isForIn, (, n, )]
[NodeUtil]
[n]
[n, ., getChildAtIndex, (, 1, )]
[n]
[1]
[getJSType, (, obj, ), ., isStruct, (, )]
[getJSType, (, obj, )]
[obj]
[report, (, t, ,, obj, ,, IN_USED_WITH_STRUCT, )]
[t]
[obj]
[IN_USED_WITH_STRUCT]
[typeable]
[false]
[Token, ., AND]
[Token]
[Token, ., HOOK]
[Token]
[Token, ., OBJECTLIT]
[Token]
[Token, ., OR]
[Token]
[n, ., getJSType, (, ), !=, null]
[n, ., getJSType, (, )]
[n]
[null]
[ensureTyped, (, t, ,, n, )]
[t]
[n]
[(, n, ., isObjectLit, (, ), ), &&, (, parent, ., getJSType, (, ), instanceof, EnumType, )]
[(, n, ., isObjectLit, (, ), )]
[n, ., isObjectLit, (, )]
[n]
[(, parent, ., getJSType, (, ), instanceof, EnumType, )]
[parent, ., getJSType, (, ), instanceof, EnumType]
[parent, ., getJSType, (, )]
[parent]
[ensureTyped, (, t, ,, n, ,, parent, ., getJSType, (, ), )]
[t]
[n]
[parent, ., getJSType, (, )]
[parent]
[ensureTyped, (, t, ,, n, )]
[t]
[n]
[n, ., isObjectLit, (, )]
[n]
[getJSType, (, n, )]
[n]
[n, ., children, (, )]
[n]
[visitObjLitKey, (, t, ,, key, ,, n, ,, typ, )]
[t]
[key]
[n]
[typ]
[report, (, t, ,, n, ,, UNEXPECTED_TOKEN, ,, Token, ., name, (, n, ., getType, (, ), ), )]
[t]
[n]
[UNEXPECTED_TOKEN]
[Token, ., name, (, n, ., getType, (, ), )]
[Token]
[n, ., getType, (, )]
[n]
[ensureTyped, (, t, ,, n, )]
[t]
[n]
[typeable]
[typeable, &&, !, inExterns]
[typeable]
[!, inExterns]
[inExterns]
[typeable]
[doPercentTypedAccounting, (, t, ,, n, )]
[t]
[n]
[checkNoTypeCheckSection, (, n, ,, false, )]
[n]
[false]
[!, (, s, ., equals, (, "number", ), ||, s, ., equals, (, "string", ), ||, s, ., equals, (, "boolean", ), ||, s, ., equals, (, "undefined", ), ||, s, ., equals, (, "function", ), ||, s, ., equals, (, "object", ), ||, s, ., equals, (, "unknown", ), )]
[(, s, ., equals, (, "number", ), ||, s, ., equals, (, "string", ), ||, s, ., equals, (, "boolean", ), ||, s, ., equals, (, "undefined", ), ||, s, ., equals, (, "function", ), ||, s, ., equals, (, "object", ), ||, s, ., equals, (, "unknown", ), )]
[s, ., equals, (, "number", ), ||, s, ., equals, (, "string", ), ||, s, ., equals, (, "boolean", ), ||, s, ., equals, (, "undefined", ), ||, s, ., equals, (, "function", ), ||, s, ., equals, (, "object", ), ||, s, ., equals, (, "unknown", )]
[s, ., equals, (, "number", ), ||, s, ., equals, (, "string", ), ||, s, ., equals, (, "boolean", ), ||, s, ., equals, (, "undefined", ), ||, s, ., equals, (, "function", ), ||, s, ., equals, (, "object", )]
[s, ., equals, (, "number", ), ||, s, ., equals, (, "string", ), ||, s, ., equals, (, "boolean", ), ||, s, ., equals, (, "undefined", ), ||, s, ., equals, (, "function", )]
[s, ., equals, (, "number", ), ||, s, ., equals, (, "string", ), ||, s, ., equals, (, "boolean", ), ||, s, ., equals, (, "undefined", )]
[s, ., equals, (, "number", ), ||, s, ., equals, (, "string", ), ||, s, ., equals, (, "boolean", )]
[s, ., equals, (, "number", ), ||, s, ., equals, (, "string", )]
[s, ., equals, (, "number", )]
[s]
["number"]
[s, ., equals, (, "string", )]
[s]
["string"]
[s, ., equals, (, "boolean", )]
[s]
["boolean"]
[s, ., equals, (, "undefined", )]
[s]
["undefined"]
[s, ., equals, (, "function", )]
[s]
["function"]
[s, ., equals, (, "object", )]
[s]
["object"]
[s, ., equals, (, "unknown", )]
[s]
["unknown"]
[validator, ., expectValidTypeofName, (, t, ,, n, ,, s, )]
[validator]
[t]
[n]
[s]
[n, ., getJSType, (, )]
[n]
[type, ==, null]
[type]
[null]
[nullCount, ++]
[nullCount]
[type, ., isUnknownType, (, )]
[type]
[reportUnknownTypes, ., isOn, (, )]
[reportUnknownTypes]
[compiler, ., report, (, t, ., makeError, (, n, ,, reportUnknownTypes, ,, UNKNOWN_EXPR_TYPE, ), )]
[compiler]
[t, ., makeError, (, n, ,, reportUnknownTypes, ,, UNKNOWN_EXPR_TYPE, )]
[t]
[n]
[reportUnknownTypes]
[UNKNOWN_EXPR_TYPE]
[unknownCount, ++]
[unknownCount]
[typedCount, ++]
[typedCount]
[assign, ., getJSDocInfo, (, )]
[assign]
[assign, ., getFirstChild, (, )]
[assign]
[assign, ., getLastChild, (, )]
[assign]
[lvalue, ., isGetProp, (, )]
[lvalue]
[lvalue, ., getFirstChild, (, )]
[lvalue]
[getJSType, (, object, )]
[object]
[lvalue, ., getLastChild, (, )]
[lvalue]
[property, ., getString, (, )]
[property]
[object, ., isGetProp, (, )]
[object]
[getJSType, (, object, ., getFirstChild, (, ), )]
[object, ., getFirstChild, (, )]
[object]
[jsType, ., isInterface, (, ), &&, object, ., getLastChild, (, ), ., getString, (, ), ., equals, (, "prototype", )]
[jsType, ., isInterface, (, )]
[jsType]
[object, ., getLastChild, (, ), ., getString, (, ), ., equals, (, "prototype", )]
[object, ., getLastChild, (, ), ., getString, (, )]
[object, ., getLastChild, (, )]
[object]
["prototype"]
[visitInterfaceGetprop, (, t, ,, assign, ,, object, ,, pname, ,, lvalue, ,, rvalue, )]
[t]
[assign]
[object]
[pname]
[lvalue]
[rvalue]
[checkEnumAlias, (, t, ,, info, ,, rvalue, )]
[t]
[info]
[rvalue]
[checkPropCreation, (, t, ,, lvalue, )]
[t]
[lvalue]
[pname, ., equals, (, "prototype", )]
[pname]
["prototype"]
[objectJsType, !=, null, &&, objectJsType, ., isFunctionType, (, )]
[objectJsType, !=, null]
[objectJsType]
[null]
[objectJsType, ., isFunctionType, (, )]
[objectJsType]
[objectJsType, ., toMaybeFunctionType, (, )]
[objectJsType]
[functionType, ., isConstructor, (, )]
[functionType]
[rvalue, ., getJSType, (, )]
[rvalue]
[validator, ., expectObject, (, t, ,, rvalue, ,, rvalueType, ,, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, )]
[validator]
[t]
[rvalue]
[rvalueType]
[OVERRIDING_PROTOTYPE_WITH_NON_OBJECT]
[functionType, ., makesStructs, (, ), &&, !, rvalueType, ., isStruct, (, )]
[functionType, ., makesStructs, (, )]
[functionType]
[!, rvalueType, ., isStruct, (, )]
[rvalueType, ., isStruct, (, )]
[rvalueType]
[functionType, ., getTypeOfThis, (, ), ., toString, (, )]
[functionType, ., getTypeOfThis, (, )]
[functionType]
[compiler, ., report, (, t, ., makeError, (, assign, ,, CONFLICTING_EXTENDED_TYPE, ,, "struct", ,, funName, ), )]
[compiler]
[t, ., makeError, (, assign, ,, CONFLICTING_EXTENDED_TYPE, ,, "struct", ,, funName, )]
[t]
[assign]
[CONFLICTING_EXTENDED_TYPE]
["struct"]
[funName]
[ObjectType, ., cast, (, objectJsType, ., restrictByNotNullOrUndefined, (, ), )]
[ObjectType]
[objectJsType, ., restrictByNotNullOrUndefined, (, )]
[objectJsType]
[type, !=, null]
[type]
[null]
[type, ., hasProperty, (, pname, ), &&, !, type, ., isPropertyTypeInferred, (, pname, ), &&, !, propertyIsImplicitCast, (, type, ,, pname, )]
[type, ., hasProperty, (, pname, ), &&, !, type, ., isPropertyTypeInferred, (, pname, )]
[type, ., hasProperty, (, pname, )]
[type]
[pname]
[!, type, ., isPropertyTypeInferred, (, pname, )]
[type, ., isPropertyTypeInferred, (, pname, )]
[type]
[pname]
[!, propertyIsImplicitCast, (, type, ,, pname, )]
[propertyIsImplicitCast, (, type, ,, pname, )]
[type]
[pname]
[type, ., getPropertyType, (, pname, )]
[type]
[pname]
[!, expectedType, ., isUnknownType, (, )]
[expectedType, ., isUnknownType, (, )]
[expectedType]
[validator, ., expectCanAssignToPropertyOf, (, t, ,, assign, ,, getJSType, (, rvalue, ), ,, expectedType, ,, object, ,, pname, )]
[validator]
[t]
[assign]
[getJSType, (, rvalue, )]
[rvalue]
[expectedType]
[object]
[pname]
[checkPropertyInheritanceOnGetpropAssign, (, t, ,, assign, ,, object, ,, pname, ,, info, ,, expectedType, )]
[t]
[assign]
[object]
[pname]
[info]
[expectedType]
[checkPropertyInheritanceOnGetpropAssign, (, t, ,, assign, ,, object, ,, pname, ,, info, ,, getNativeType, (, UNKNOWN_TYPE, ), )]
[t]
[assign]
[object]
[pname]
[info]
[getNativeType, (, UNKNOWN_TYPE, )]
[UNKNOWN_TYPE]
[getJSType, (, lvalue, )]
[lvalue]
[lvalue, ., isQualifiedName, (, )]
[lvalue]
[getJSType, (, assign, ., getLastChild, (, ), )]
[assign, ., getLastChild, (, )]
[assign]
[t, ., getScope, (, ), ., getVar, (, lvalue, ., getQualifiedName, (, ), )]
[t, ., getScope, (, )]
[t]
[lvalue, ., getQualifiedName, (, )]
[lvalue]
[var, !=, null]
[var]
[null]
[var, ., isTypeInferred, (, )]
[var]
[NodeUtil, ., getRootOfQualifiedName, (, lvalue, ), ., isThis, (, ), &&, t, ., getScope, (, ), !=, var, ., getScope, (, )]
[NodeUtil, ., getRootOfQualifiedName, (, lvalue, ), ., isThis, (, )]
[NodeUtil, ., getRootOfQualifiedName, (, lvalue, )]
[NodeUtil]
[lvalue]
[t, ., getScope, (, ), !=, var, ., getScope, (, )]
[t, ., getScope, (, )]
[t]
[var, ., getScope, (, )]
[var]
[var, ., getType, (, ), !=, null]
[var, ., getType, (, )]
[var]
[null]
[leftType]
[var, ., getType, (, )]
[var]
[assign, ., getLastChild, (, )]
[assign]
[getJSType, (, rightChild, )]
[rightChild]
[validator, ., expectCanAssignTo, (, t, ,, assign, ,, rightType, ,, leftType, ,, "assignment", )]
[validator]
[t]
[assign]
[rightType]
[leftType]
["assignment"]
[ensureTyped, (, t, ,, assign, ,, rightType, )]
[t]
[assign]
[rightType]
[ensureTyped, (, t, ,, assign, )]
[t]
[assign]
[lvalue, ., isGetProp, (, )]
[lvalue]
[lvalue, ., getFirstChild, (, )]
[lvalue]
[lvalue, ., getLastChild, (, )]
[lvalue]
[getJSType, (, obj, )]
[obj]
[prop, ., getString, (, )]
[prop]
[objType, ., isStruct, (, ), &&, !, objType, ., hasProperty, (, pname, )]
[objType, ., isStruct, (, )]
[objType]
[!, objType, ., hasProperty, (, pname, )]
[objType, ., hasProperty, (, pname, )]
[objType]
[pname]
[!, (, obj, ., isThis, (, ), &&, getJSType, (, t, ., getScope, (, ), ., getRootNode, (, ), ), ., isConstructor, (, ), )]
[(, obj, ., isThis, (, ), &&, getJSType, (, t, ., getScope, (, ), ., getRootNode, (, ), ), ., isConstructor, (, ), )]
[obj, ., isThis, (, ), &&, getJSType, (, t, ., getScope, (, ), ., getRootNode, (, ), ), ., isConstructor, (, )]
[obj, ., isThis, (, )]
[obj]
[getJSType, (, t, ., getScope, (, ), ., getRootNode, (, ), ), ., isConstructor, (, )]
[getJSType, (, t, ., getScope, (, ), ., getRootNode, (, ), )]
[t, ., getScope, (, ), ., getRootNode, (, )]
[t, ., getScope, (, )]
[t]
[report, (, t, ,, prop, ,, ILLEGAL_PROPERTY_CREATION, )]
[t]
[prop]
[ILLEGAL_PROPERTY_CREATION]
[object, ., isGetProp, (, )]
[object]
[object, ., getFirstChild, (, )]
[object]
[NodeUtil, ., getStringValue, (, object, ., getLastChild, (, ), )]
[NodeUtil]
[object, ., getLastChild, (, )]
[object]
["prototype", ., equals, (, property2, )]
["prototype"]
[property2]
[getJSType, (, object2, )]
[object2]
[jsType, ., isFunctionType, (, )]
[jsType]
[jsType, ., toMaybeFunctionType, (, )]
[jsType]
[functionType, ., isConstructor, (, ), ||, functionType, ., isInterface, (, )]
[functionType, ., isConstructor, (, )]
[functionType]
[functionType, ., isInterface, (, )]
[functionType]
[checkDeclaredPropertyInheritance, (, t, ,, assign, ,, functionType, ,, property, ,, info, ,, propertyType, )]
[t]
[assign]
[functionType]
[property]
[info]
[propertyType]
[objlit, ., isFromExterns, (, )]
[objlit]
[ensureTyped, (, t, ,, key, )]
[t]
[key]
[litType, ., isStruct, (, ), &&, key, ., isQuotedString, (, )]
[litType, ., isStruct, (, )]
[litType]
[key, ., isQuotedString, (, )]
[key]
[report, (, t, ,, key, ,, ILLEGAL_OBJLIT_KEY, ,, "struct", )]
[t]
[key]
[ILLEGAL_OBJLIT_KEY]
["struct"]
[litType, ., isDict, (, ), &&, !, key, ., isQuotedString, (, )]
[litType, ., isDict, (, )]
[litType]
[!, key, ., isQuotedString, (, )]
[key, ., isQuotedString, (, )]
[key]
[report, (, t, ,, key, ,, ILLEGAL_OBJLIT_KEY, ,, "dict", )]
[t]
[key]
[ILLEGAL_OBJLIT_KEY]
["dict"]
[key, ., getFirstChild, (, )]
[key]
[NodeUtil, ., getObjectLitKeyTypeFromValueType, (, key, ,, getJSType, (, rvalue, ), )]
[NodeUtil]
[key]
[getJSType, (, rvalue, )]
[rvalue]
[rightType, ==, null]
[rightType]
[null]
[rightType]
[getNativeType, (, UNKNOWN_TYPE, )]
[UNKNOWN_TYPE]
[objlit]
[getJSType, (, key, )]
[key]
[keyType]
[allowedValueType, ., isEnumElementType, (, )]
[allowedValueType]
[allowedValueType]
[allowedValueType, ., toMaybeEnumElementType, (, ), ., getPrimitiveType, (, )]
[allowedValueType, ., toMaybeEnumElementType, (, )]
[allowedValueType]
[validator, ., expectCanAssignToPropertyOf, (, t, ,, key, ,, rightType, ,, allowedValueType, ,, owner, ,, NodeUtil, ., getObjectLitKeyName, (, key, ), )]
[validator]
[t]
[key]
[rightType]
[allowedValueType]
[owner]
[NodeUtil, ., getObjectLitKeyName, (, key, )]
[NodeUtil]
[key]
[valid]
[ensureTyped, (, t, ,, key, ,, rightType, )]
[t]
[key]
[rightType]
[ensureTyped, (, t, ,, key, )]
[t]
[key]
[getJSType, (, objlit, )]
[objlit]
[ObjectType, ., cast, (, objlitType, ., restrictByNotNullOrUndefined, (, ), )]
[ObjectType]
[objlitType, ., restrictByNotNullOrUndefined, (, )]
[objlitType]
[type, !=, null]
[type]
[null]
[NodeUtil, ., getObjectLitKeyName, (, key, )]
[NodeUtil]
[key]
[type, ., hasProperty, (, property, ), &&, !, type, ., isPropertyTypeInferred, (, property, ), &&, !, propertyIsImplicitCast, (, type, ,, property, )]
[type, ., hasProperty, (, property, ), &&, !, type, ., isPropertyTypeInferred, (, property, )]
[type, ., hasProperty, (, property, )]
[type]
[property]
[!, type, ., isPropertyTypeInferred, (, property, )]
[type, ., isPropertyTypeInferred, (, property, )]
[type]
[property]
[!, propertyIsImplicitCast, (, type, ,, property, )]
[propertyIsImplicitCast, (, type, ,, property, )]
[type]
[property]
[validator, ., expectCanAssignToPropertyOf, (, t, ,, key, ,, keyType, ,, type, ., getPropertyType, (, property, ), ,, owner, ,, property, )]
[validator]
[t]
[key]
[keyType]
[type, ., getPropertyType, (, property, )]
[type]
[property]
[owner]
[property]
[type, !=, null]
[type]
[null]
[type]
[type, ., getImplicitPrototype, (, )]
[type]
[type, ., getOwnPropertyJSDocInfo, (, prop, )]
[type]
[prop]
[docInfo, !=, null, &&, docInfo, ., isImplicitCast, (, )]
[docInfo, !=, null]
[docInfo]
[null]
[docInfo, ., isImplicitCast, (, )]
[docInfo]
[true]
[false]
[hasUnknownOrEmptySupertype, (, ctorType, )]
[ctorType]
[ctorType, ., getSuperClassConstructor, (, )]
[ctorType]
[superClass, !=, null, &&, superClass, ., getInstanceType, (, ), ., hasProperty, (, propertyName, )]
[superClass, !=, null]
[superClass]
[null]
[superClass, ., getInstanceType, (, ), ., hasProperty, (, propertyName, )]
[superClass, ., getInstanceType, (, )]
[superClass]
[propertyName]
[superClass, !=, null, &&, superClass, ., getInstanceType, (, ), ., isPropertyTypeDeclared, (, propertyName, )]
[superClass, !=, null]
[superClass]
[null]
[superClass, ., getInstanceType, (, ), ., isPropertyTypeDeclared, (, propertyName, )]
[superClass, ., getInstanceType, (, )]
[superClass]
[propertyName]
[false]
[false]
[ctorType, ., isInterface, (, )]
[ctorType]
[ctorType, ., getExtendedInterfaces, (, )]
[ctorType]
[superInterfaceHasProperty]
[superInterfaceHasProperty, ||, interfaceType, ., hasProperty, (, propertyName, )]
[superInterfaceHasProperty]
[interfaceType, ., hasProperty, (, propertyName, )]
[interfaceType]
[propertyName]
[superInterfaceHasDeclaredProperty]
[superInterfaceHasDeclaredProperty, ||, interfaceType, ., isPropertyTypeDeclared, (, propertyName, )]
[superInterfaceHasDeclaredProperty]
[interfaceType, ., isPropertyTypeDeclared, (, propertyName, )]
[interfaceType]
[propertyName]
[info, !=, null, &&, info, ., isOverride, (, )]
[info, !=, null]
[info]
[null]
[info, ., isOverride, (, )]
[info]
[false]
[ctorType, ., isConstructor, (, )]
[ctorType]
[ctorType, ., getAllImplementedInterfaces, (, )]
[ctorType]
[implementedInterface, ., isUnknownType, (, ), ||, implementedInterface, ., isEmptyType, (, )]
[implementedInterface, ., isUnknownType, (, )]
[implementedInterface]
[implementedInterface, ., isEmptyType, (, )]
[implementedInterface]
[implementedInterface, ., toObjectType, (, ), ., getConstructor, (, )]
[implementedInterface, ., toObjectType, (, )]
[implementedInterface]
[Preconditions, ., checkNotNull, (, interfaceType, )]
[Preconditions]
[interfaceType]
[interfaceType, ., getPrototype, (, ), ., hasProperty, (, propertyName, )]
[interfaceType, ., getPrototype, (, )]
[interfaceType]
[propertyName]
[foundInterfaceProperty]
[foundInterfaceProperty, ||, interfaceHasProperty]
[foundInterfaceProperty]
[interfaceHasProperty]
[reportMissingOverride, ., isOn, (, ), &&, !, declaredOverride, &&, interfaceHasProperty]
[reportMissingOverride, ., isOn, (, ), &&, !, declaredOverride]
[reportMissingOverride, ., isOn, (, )]
[reportMissingOverride]
[!, declaredOverride]
[declaredOverride]
[interfaceHasProperty]
[compiler, ., report, (, t, ., makeError, (, n, ,, reportMissingOverride, ,, HIDDEN_INTERFACE_PROPERTY, ,, propertyName, ,, interfaceType, ., getTopMostDefiningType, (, propertyName, ), ., toString, (, ), ), )]
[compiler]
[t, ., makeError, (, n, ,, reportMissingOverride, ,, HIDDEN_INTERFACE_PROPERTY, ,, propertyName, ,, interfaceType, ., getTopMostDefiningType, (, propertyName, ), ., toString, (, ), )]
[t]
[n]
[reportMissingOverride]
[HIDDEN_INTERFACE_PROPERTY]
[propertyName]
[interfaceType, ., getTopMostDefiningType, (, propertyName, ), ., toString, (, )]
[interfaceType, ., getTopMostDefiningType, (, propertyName, )]
[interfaceType]
[propertyName]
[!, declaredOverride, &&, !, superClassHasProperty, &&, !, superInterfaceHasProperty]
[!, declaredOverride, &&, !, superClassHasProperty]
[!, declaredOverride]
[declaredOverride]
[!, superClassHasProperty]
[superClassHasProperty]
[!, superInterfaceHasProperty]
[superInterfaceHasProperty]
[superClassHasDeclaredProperty, ?, superClass, ., getTopMostDefiningType, (, propertyName, ), :, null]
[superClassHasDeclaredProperty]
[superClass, ., getTopMostDefiningType, (, propertyName, )]
[superClass]
[propertyName]
[null]
[ctorType, ., isConstructor, (, ), &&, (, ctorType, ., getPrototype, (, ), ., hasOwnProperty, (, propertyName, ), ||, ctorType, ., getInstanceType, (, ), ., hasOwnProperty, (, propertyName, ), )]
[ctorType, ., isConstructor, (, )]
[ctorType]
[(, ctorType, ., getPrototype, (, ), ., hasOwnProperty, (, propertyName, ), ||, ctorType, ., getInstanceType, (, ), ., hasOwnProperty, (, propertyName, ), )]
[ctorType, ., getPrototype, (, ), ., hasOwnProperty, (, propertyName, ), ||, ctorType, ., getInstanceType, (, ), ., hasOwnProperty, (, propertyName, )]
[ctorType, ., getPrototype, (, ), ., hasOwnProperty, (, propertyName, )]
[ctorType, ., getPrototype, (, )]
[ctorType]
[propertyName]
[ctorType, ., getInstanceType, (, ), ., hasOwnProperty, (, propertyName, )]
[ctorType, ., getInstanceType, (, )]
[ctorType]
[propertyName]
[reportMissingOverride, ., isOn, (, ), &&, !, declaredOverride, &&, superClassHasDeclaredProperty, &&, declaredLocally]
[reportMissingOverride, ., isOn, (, ), &&, !, declaredOverride, &&, superClassHasDeclaredProperty]
[reportMissingOverride, ., isOn, (, ), &&, !, declaredOverride]
[reportMissingOverride, ., isOn, (, )]
[reportMissingOverride]
[!, declaredOverride]
[declaredOverride]
[superClassHasDeclaredProperty]
[declaredLocally]
[compiler, ., report, (, t, ., makeError, (, n, ,, reportMissingOverride, ,, HIDDEN_SUPERCLASS_PROPERTY, ,, propertyName, ,, topInstanceType, ., toString, (, ), ), )]
[compiler]
[t, ., makeError, (, n, ,, reportMissingOverride, ,, HIDDEN_SUPERCLASS_PROPERTY, ,, propertyName, ,, topInstanceType, ., toString, (, ), )]
[t]
[n]
[reportMissingOverride]
[HIDDEN_SUPERCLASS_PROPERTY]
[propertyName]
[topInstanceType, ., toString, (, )]
[topInstanceType]
[superClassHasDeclaredProperty]
[superClass, ., getInstanceType, (, ), ., getPropertyType, (, propertyName, )]
[superClass, ., getInstanceType, (, )]
[superClass]
[propertyName]
[!, propertyType, ., isSubtype, (, superClassPropType, )]
[propertyType, ., isSubtype, (, superClassPropType, )]
[propertyType]
[superClassPropType]
[compiler, ., report, (, t, ., makeError, (, n, ,, HIDDEN_SUPERCLASS_PROPERTY_MISMATCH, ,, propertyName, ,, topInstanceType, ., toString, (, ), ,, superClassPropType, ., toString, (, ), ,, propertyType, ., toString, (, ), ), )]
[compiler]
[t, ., makeError, (, n, ,, HIDDEN_SUPERCLASS_PROPERTY_MISMATCH, ,, propertyName, ,, topInstanceType, ., toString, (, ), ,, superClassPropType, ., toString, (, ), ,, propertyType, ., toString, (, ), )]
[t]
[n]
[HIDDEN_SUPERCLASS_PROPERTY_MISMATCH]
[propertyName]
[topInstanceType, ., toString, (, )]
[topInstanceType]
[superClassPropType, ., toString, (, )]
[superClassPropType]
[propertyType, ., toString, (, )]
[propertyType]
[superInterfaceHasDeclaredProperty]
[ctorType, ., getExtendedInterfaces, (, )]
[ctorType]
[interfaceType, ., hasProperty, (, propertyName, )]
[interfaceType]
[propertyName]
[interfaceType, ., getPropertyType, (, propertyName, )]
[interfaceType]
[propertyName]
[!, propertyType, ., isSubtype, (, superPropertyType, )]
[propertyType, ., isSubtype, (, superPropertyType, )]
[propertyType]
[superPropertyType]
[topInstanceType]
[interfaceType, ., getConstructor, (, ), ., getTopMostDefiningType, (, propertyName, )]
[interfaceType, ., getConstructor, (, )]
[interfaceType]
[propertyName]
[compiler, ., report, (, t, ., makeError, (, n, ,, HIDDEN_SUPERCLASS_PROPERTY_MISMATCH, ,, propertyName, ,, topInstanceType, ., toString, (, ), ,, superPropertyType, ., toString, (, ), ,, propertyType, ., toString, (, ), ), )]
[compiler]
[t, ., makeError, (, n, ,, HIDDEN_SUPERCLASS_PROPERTY_MISMATCH, ,, propertyName, ,, topInstanceType, ., toString, (, ), ,, superPropertyType, ., toString, (, ), ,, propertyType, ., toString, (, ), )]
[t]
[n]
[HIDDEN_SUPERCLASS_PROPERTY_MISMATCH]
[propertyName]
[topInstanceType, ., toString, (, )]
[topInstanceType]
[superPropertyType, ., toString, (, )]
[superPropertyType]
[propertyType, ., toString, (, )]
[propertyType]
[!, foundInterfaceProperty, &&, !, superClassHasProperty, &&, !, superInterfaceHasProperty]
[!, foundInterfaceProperty, &&, !, superClassHasProperty]
[!, foundInterfaceProperty]
[foundInterfaceProperty]
[!, superClassHasProperty]
[superClassHasProperty]
[!, superInterfaceHasProperty]
[superInterfaceHasProperty]
[compiler, ., report, (, t, ., makeError, (, n, ,, UNKNOWN_OVERRIDE, ,, propertyName, ,, ctorType, ., getInstanceType, (, ), ., toString, (, ), ), )]
[compiler]
[t, ., makeError, (, n, ,, UNKNOWN_OVERRIDE, ,, propertyName, ,, ctorType, ., getInstanceType, (, ), ., toString, (, ), )]
[t]
[n]
[UNKNOWN_OVERRIDE]
[propertyName]
[ctorType, ., getInstanceType, (, ), ., toString, (, )]
[ctorType, ., getInstanceType, (, )]
[ctorType]
[Preconditions, ., checkArgument, (, ctor, ., isConstructor, (, ), ||, ctor, ., isInterface, (, ), )]
[Preconditions]
[ctor, ., isConstructor, (, ), ||, ctor, ., isInterface, (, )]
[ctor, ., isConstructor, (, )]
[ctor]
[ctor, ., isInterface, (, )]
[ctor]
[Preconditions, ., checkArgument, (, !, ctor, ., isUnknownType, (, ), )]
[Preconditions]
[!, ctor, ., isUnknownType, (, )]
[ctor, ., isUnknownType, (, )]
[ctor]
[true]
[ctor, ., getPrototype, (, ), ., getImplicitPrototype, (, )]
[ctor, ., getPrototype, (, )]
[ctor]
[maybeSuperInstanceType, ==, null]
[maybeSuperInstanceType]
[null]
[false]
[maybeSuperInstanceType, ., isUnknownType, (, ), ||, maybeSuperInstanceType, ., isEmptyType, (, )]
[maybeSuperInstanceType, ., isUnknownType, (, )]
[maybeSuperInstanceType]
[maybeSuperInstanceType, ., isEmptyType, (, )]
[maybeSuperInstanceType]
[true]
[ctor]
[maybeSuperInstanceType, ., getConstructor, (, )]
[maybeSuperInstanceType]
[ctor, ==, null]
[ctor]
[null]
[false]
[Preconditions, ., checkState, (, ctor, ., isConstructor, (, ), ||, ctor, ., isInterface, (, ), )]
[Preconditions]
[ctor, ., isConstructor, (, ), ||, ctor, ., isInterface, (, )]
[ctor, ., isConstructor, (, )]
[ctor]
[ctor, ., isInterface, (, )]
[ctor]
[getJSType, (, rvalue, )]
[rvalue]
[compiler, ., getCodingConvention, (, ), ., getAbstractMethodName, (, )]
[compiler, ., getCodingConvention, (, )]
[compiler]
[!, rvalueType, ., isFunctionType, (, )]
[rvalueType, ., isFunctionType, (, )]
[rvalueType]
[(, abstractMethodName, !=, null, ), ?, ", or ", +, abstractMethodName, :, ""]
[(, abstractMethodName, !=, null, )]
[abstractMethodName, !=, null]
[abstractMethodName]
[null]
[", or ", +, abstractMethodName]
[", or "]
[abstractMethodName]
[""]
[compiler, ., report, (, t, ., makeError, (, object, ,, INVALID_INTERFACE_MEMBER_DECLARATION, ,, abstractMethodMessage, ), )]
[compiler]
[t, ., makeError, (, object, ,, INVALID_INTERFACE_MEMBER_DECLARATION, ,, abstractMethodMessage, )]
[t]
[object]
[INVALID_INTERFACE_MEMBER_DECLARATION]
[abstractMethodMessage]
[assign, ., getLastChild, (, ), ., isFunction, (, ), &&, !, NodeUtil, ., isEmptyBlock, (, assign, ., getLastChild, (, ), ., getLastChild, (, ), )]
[assign, ., getLastChild, (, ), ., isFunction, (, )]
[assign, ., getLastChild, (, )]
[assign]
[!, NodeUtil, ., isEmptyBlock, (, assign, ., getLastChild, (, ), ., getLastChild, (, ), )]
[NodeUtil, ., isEmptyBlock, (, assign, ., getLastChild, (, ), ., getLastChild, (, ), )]
[NodeUtil]
[assign, ., getLastChild, (, ), ., getLastChild, (, )]
[assign, ., getLastChild, (, )]
[assign]
[compiler, ., report, (, t, ., makeError, (, object, ,, INTERFACE_FUNCTION_NOT_EMPTY, ,, abstractMethodName, ), )]
[compiler]
[t, ., makeError, (, object, ,, INTERFACE_FUNCTION_NOT_EMPTY, ,, abstractMethodName, )]
[t]
[object]
[INTERFACE_FUNCTION_NOT_EMPTY]
[abstractMethodName]
[parent, ., getType, (, )]
[parent]
[parentNodeType, ==, Token, ., FUNCTION, ||, parentNodeType, ==, Token, ., CATCH, ||, parentNodeType, ==, Token, ., PARAM_LIST, ||, parentNodeType, ==, Token, ., VAR]
[parentNodeType, ==, Token, ., FUNCTION, ||, parentNodeType, ==, Token, ., CATCH, ||, parentNodeType, ==, Token, ., PARAM_LIST]
[parentNodeType, ==, Token, ., FUNCTION, ||, parentNodeType, ==, Token, ., CATCH]
[parentNodeType, ==, Token, ., FUNCTION]
[parentNodeType]
[Token, ., FUNCTION]
[Token]
[parentNodeType, ==, Token, ., CATCH]
[parentNodeType]
[Token, ., CATCH]
[Token]
[parentNodeType, ==, Token, ., PARAM_LIST]
[parentNodeType]
[Token, ., PARAM_LIST]
[Token]
[parentNodeType, ==, Token, ., VAR]
[parentNodeType]
[Token, ., VAR]
[Token]
[false]
[n, ., getJSType, (, )]
[n]
[type, ==, null]
[type]
[null]
[type]
[getNativeType, (, UNKNOWN_TYPE, )]
[UNKNOWN_TYPE]
[t, ., getScope, (, ), ., getVar, (, n, ., getString, (, ), )]
[t, ., getScope, (, )]
[t]
[n, ., getString, (, )]
[n]
[var, !=, null]
[var]
[null]
[var, ., getType, (, )]
[var]
[varType, !=, null]
[varType]
[null]
[type]
[varType]
[ensureTyped, (, t, ,, n, ,, type, )]
[t]
[n]
[type]
[true]
[n, ., getLastChild, (, )]
[n]
[n, ., getFirstChild, (, )]
[n]
[getJSType, (, objNode, )]
[objNode]
[childType, ., isDict, (, )]
[childType]
[report, (, t, ,, property, ,, TypeValidator, ., ILLEGAL_PROPERTY_ACCESS, ,, "'.'", ,, "dict", )]
[t]
[property]
[TypeValidator, ., ILLEGAL_PROPERTY_ACCESS]
[TypeValidator]
["'.'"]
["dict"]
[validator, ., expectNotNullOrUndefined, (, t, ,, n, ,, childType, ,, "No properties on this expression", ,, getNativeType, (, OBJECT_TYPE, ), )]
[validator]
[t]
[n]
[childType]
["No properties on this expression"]
[getNativeType, (, OBJECT_TYPE, )]
[OBJECT_TYPE]
[checkPropertyAccess, (, childType, ,, property, ., getString, (, ), ,, t, ,, n, )]
[childType]
[property, ., getString, (, )]
[property]
[t]
[n]
[ensureTyped, (, t, ,, n, )]
[t]
[n]
[getJSType, (, n, )]
[n]
[propType, ., isEquivalentTo, (, typeRegistry, ., getNativeType, (, UNKNOWN_TYPE, ), )]
[propType]
[typeRegistry, ., getNativeType, (, UNKNOWN_TYPE, )]
[typeRegistry]
[UNKNOWN_TYPE]
[childType]
[childType, ., autobox, (, )]
[childType]
[ObjectType, ., cast, (, childType, )]
[ObjectType]
[childType]
[objectType, !=, null]
[objectType]
[null]
[!, objectType, ., hasProperty, (, propName, ), ||, objectType, ., isEquivalentTo, (, typeRegistry, ., getNativeType, (, UNKNOWN_TYPE, ), )]
[!, objectType, ., hasProperty, (, propName, )]
[objectType, ., hasProperty, (, propName, )]
[objectType]
[propName]
[objectType, ., isEquivalentTo, (, typeRegistry, ., getNativeType, (, UNKNOWN_TYPE, ), )]
[objectType]
[typeRegistry, ., getNativeType, (, UNKNOWN_TYPE, )]
[typeRegistry]
[UNKNOWN_TYPE]
[objectType, instanceof, EnumType]
[objectType]
[report, (, t, ,, n, ,, INEXISTENT_ENUM_ELEMENT, ,, propName, )]
[t]
[n]
[INEXISTENT_ENUM_ELEMENT]
[propName]
[checkPropertyAccessHelper, (, objectType, ,, propName, ,, t, ,, n, )]
[objectType]
[propName]
[t]
[n]
[checkPropertyAccessHelper, (, childType, ,, propName, ,, t, ,, n, )]
[childType]
[propName]
[t]
[n]
[!, objectType, ., isEmptyType, (, ), &&, reportMissingProperties, &&, !, isPropertyTest, (, n, )]
[!, objectType, ., isEmptyType, (, ), &&, reportMissingProperties]
[!, objectType, ., isEmptyType, (, )]
[objectType, ., isEmptyType, (, )]
[objectType]
[reportMissingProperties]
[!, isPropertyTest, (, n, )]
[isPropertyTest, (, n, )]
[n]
[!, typeRegistry, ., canPropertyBeDefined, (, objectType, ,, propName, )]
[typeRegistry, ., canPropertyBeDefined, (, objectType, ,, propName, )]
[typeRegistry]
[objectType]
[propName]
[report, (, t, ,, n, ,, INEXISTENT_PROPERTY, ,, propName, ,, validator, ., getReadableJSTypeName, (, n, ., getFirstChild, (, ), ,, true, ), )]
[t]
[n]
[INEXISTENT_PROPERTY]
[propName]
[validator, ., getReadableJSTypeName, (, n, ., getFirstChild, (, ), ,, true, )]
[validator]
[n, ., getFirstChild, (, )]
[n]
[true]
[getProp, ., getParent, (, )]
[getProp]
[parent, ., getType, (, )]
[parent]
[Token, ., CALL]
[Token]
[parent, ., getFirstChild, (, ), !=, getProp, &&, compiler, ., getCodingConvention, (, ), ., isPropertyTestFunction, (, parent, )]
[parent, ., getFirstChild, (, ), !=, getProp]
[parent, ., getFirstChild, (, )]
[parent]
[getProp]
[compiler, ., getCodingConvention, (, ), ., isPropertyTestFunction, (, parent, )]
[compiler, ., getCodingConvention, (, )]
[compiler]
[parent]
[Token, ., IF]
[Token]
[Token, ., WHILE]
[Token]
[Token, ., DO]
[Token]
[Token, ., FOR]
[Token]
[NodeUtil, ., getConditionExpression, (, parent, ), ==, getProp]
[NodeUtil, ., getConditionExpression, (, parent, )]
[NodeUtil]
[parent]
[getProp]
[Token, ., INSTANCEOF]
[Token]
[Token, ., TYPEOF]
[Token]
[true]
[Token, ., AND]
[Token]
[Token, ., HOOK]
[Token]
[parent, ., getFirstChild, (, ), ==, getProp]
[parent, ., getFirstChild, (, )]
[parent]
[getProp]
[Token, ., NOT]
[Token]
[parent, ., getParent, (, ), ., isOr, (, ), &&, parent, ., getParent, (, ), ., getFirstChild, (, ), ==, parent]
[parent, ., getParent, (, ), ., isOr, (, )]
[parent, ., getParent, (, )]
[parent]
[parent, ., getParent, (, ), ., getFirstChild, (, ), ==, parent]
[parent, ., getParent, (, ), ., getFirstChild, (, )]
[parent, ., getParent, (, )]
[parent]
[parent]
[false]
[validator, ., expectIndexMatch, (, t, ,, n, ,, getJSType, (, n, ., getFirstChild, (, ), ), ,, getJSType, (, n, ., getLastChild, (, ), ), )]
[validator]
[t]
[n]
[getJSType, (, n, ., getFirstChild, (, ), )]
[n, ., getFirstChild, (, )]
[n]
[getJSType, (, n, ., getLastChild, (, ), )]
[n, ., getLastChild, (, )]
[n]
[ensureTyped, (, t, ,, n, )]
[t]
[n]
[n, ., hasOneChild, (, ), ?, n, ., getJSDocInfo, (, ), :, null]
[n, ., hasOneChild, (, )]
[n]
[n, ., getJSDocInfo, (, )]
[n]
[null]
[n, ., children, (, )]
[n]
[name, ., getFirstChild, (, )]
[name]
[t, ., getScope, (, ), ., getVar, (, name, ., getString, (, ), )]
[t, ., getScope, (, )]
[t]
[name, ., getString, (, )]
[name]
[value, !=, null]
[value]
[null]
[getJSType, (, value, )]
[value]
[var, ., getType, (, )]
[var]
[nameType]
[(, nameType, ==, null, ), ?, getNativeType, (, UNKNOWN_TYPE, ), :, nameType]
[(, nameType, ==, null, )]
[nameType, ==, null]
[nameType]
[null]
[getNativeType, (, UNKNOWN_TYPE, )]
[UNKNOWN_TYPE]
[nameType]
[name, ., getJSDocInfo, (, )]
[name]
[info, ==, null]
[info]
[null]
[info]
[varInfo]
[checkEnumAlias, (, t, ,, info, ,, value, )]
[t]
[info]
[value]
[var, ., isTypeInferred, (, )]
[var]
[ensureTyped, (, t, ,, name, ,, valueType, )]
[t]
[name]
[valueType]
[validator, ., expectCanAssignTo, (, t, ,, value, ,, valueType, ,, nameType, ,, "initializing variable", )]
[validator]
[t]
[value]
[valueType]
[nameType]
["initializing variable"]
[n, ., getFirstChild, (, )]
[n]
[getJSType, (, constructor, ), ., restrictByNotNullOrUndefined, (, )]
[getJSType, (, constructor, )]
[constructor]
[type, ., isConstructor, (, ), ||, type, ., isEmptyType, (, ), ||, type, ., isUnknownType, (, )]
[type, ., isConstructor, (, ), ||, type, ., isEmptyType, (, )]
[type, ., isConstructor, (, )]
[type]
[type, ., isEmptyType, (, )]
[type]
[type, ., isUnknownType, (, )]
[type]
[type, ., toMaybeFunctionType, (, )]
[type]
[fnType, !=, null]
[fnType]
[null]
[visitParameterList, (, t, ,, n, ,, fnType, )]
[t]
[n]
[fnType]
[ensureTyped, (, t, ,, n, ,, fnType, ., getInstanceType, (, ), )]
[t]
[n]
[fnType, ., getInstanceType, (, )]
[fnType]
[ensureTyped, (, t, ,, n, )]
[t]
[n]
[report, (, t, ,, n, ,, NOT_A_CONSTRUCTOR, )]
[t]
[n]
[NOT_A_CONSTRUCTOR]
[ensureTyped, (, t, ,, n, )]
[t]
[n]
[interfaceType, ., getImplicitPrototype, (, )]
[interfaceType]
[implicitProto, ==, null]
[implicitProto]
[null]
[currentPropertyNames]
[ImmutableSet, ., of, (, )]
[ImmutableSet]
[currentPropertyNames]
[implicitProto, ., getOwnPropertyNames, (, )]
[implicitProto]
[currentPropertyNames]
[properties, ., get, (, name, )]
[properties]
[name]
[oType, !=, null]
[oType]
[null]
[!, interfaceType, ., getPropertyType, (, name, ), ., isEquivalentTo, (, oType, ., getPropertyType, (, name, ), )]
[interfaceType, ., getPropertyType, (, name, ), ., isEquivalentTo, (, oType, ., getPropertyType, (, name, ), )]
[interfaceType, ., getPropertyType, (, name, )]
[interfaceType]
[name]
[oType, ., getPropertyType, (, name, )]
[oType]
[name]
[compiler, ., report, (, t, ., makeError, (, n, ,, INCOMPATIBLE_EXTENDED_PROPERTY_TYPE, ,, functionName, ,, name, ,, oType, ., toString, (, ), ,, interfaceType, ., toString, (, ), ), )]
[compiler]
[t, ., makeError, (, n, ,, INCOMPATIBLE_EXTENDED_PROPERTY_TYPE, ,, functionName, ,, name, ,, oType, ., toString, (, ), ,, interfaceType, ., toString, (, ), )]
[t]
[n]
[INCOMPATIBLE_EXTENDED_PROPERTY_TYPE]
[functionName]
[name]
[oType, ., toString, (, )]
[oType]
[interfaceType, ., toString, (, )]
[interfaceType]
[currentProperties, ., put, (, name, ,, interfaceType, )]
[currentProperties]
[name]
[interfaceType]
[interfaceType, ., getCtorExtendedInterfaces, (, )]
[interfaceType]
[checkInterfaceConflictProperties, (, t, ,, n, ,, functionName, ,, properties, ,, currentProperties, ,, iType, )]
[t]
[n]
[functionName]
[properties]
[currentProperties]
[iType]
[JSType, ., toMaybeFunctionType, (, n, ., getJSType, (, ), )]
[JSType]
[n, ., getJSType, (, )]
[n]
[n, ., getFirstChild, (, ), ., getString, (, )]
[n, ., getFirstChild, (, )]
[n]
[functionType, ., isConstructor, (, )]
[functionType]
[functionType, ., getSuperClassConstructor, (, )]
[functionType]
[baseConstructor, !=, getNativeType, (, OBJECT_FUNCTION_TYPE, ), &&, baseConstructor, !=, null, &&, baseConstructor, ., isInterface, (, )]
[baseConstructor, !=, getNativeType, (, OBJECT_FUNCTION_TYPE, ), &&, baseConstructor, !=, null]
[baseConstructor, !=, getNativeType, (, OBJECT_FUNCTION_TYPE, )]
[baseConstructor]
[getNativeType, (, OBJECT_FUNCTION_TYPE, )]
[OBJECT_FUNCTION_TYPE]
[baseConstructor, !=, null]
[baseConstructor]
[null]
[baseConstructor, ., isInterface, (, )]
[baseConstructor]
[compiler, ., report, (, t, ., makeError, (, n, ,, CONFLICTING_EXTENDED_TYPE, ,, "constructor", ,, functionPrivateName, ), )]
[compiler]
[t, ., makeError, (, n, ,, CONFLICTING_EXTENDED_TYPE, ,, "constructor", ,, functionPrivateName, )]
[t]
[n]
[CONFLICTING_EXTENDED_TYPE]
["constructor"]
[functionPrivateName]
[baseConstructor, !=, getNativeType, (, OBJECT_FUNCTION_TYPE, )]
[baseConstructor]
[getNativeType, (, OBJECT_FUNCTION_TYPE, )]
[OBJECT_FUNCTION_TYPE]
[functionType, ., getPrototype, (, )]
[functionType]
[functionType, ., makesStructs, (, ), &&, !, proto, ., isStruct, (, )]
[functionType, ., makesStructs, (, )]
[functionType]
[!, proto, ., isStruct, (, )]
[proto, ., isStruct, (, )]
[proto]
[compiler, ., report, (, t, ., makeError, (, n, ,, CONFLICTING_EXTENDED_TYPE, ,, "struct", ,, functionPrivateName, ), )]
[compiler]
[t, ., makeError, (, n, ,, CONFLICTING_EXTENDED_TYPE, ,, "struct", ,, functionPrivateName, )]
[t]
[n]
[CONFLICTING_EXTENDED_TYPE]
["struct"]
[functionPrivateName]
[functionType, ., makesDicts, (, ), &&, !, proto, ., isDict, (, )]
[functionType, ., makesDicts, (, )]
[functionType]
[!, proto, ., isDict, (, )]
[proto, ., isDict, (, )]
[proto]
[compiler, ., report, (, t, ., makeError, (, n, ,, CONFLICTING_EXTENDED_TYPE, ,, "dict", ,, functionPrivateName, ), )]
[compiler]
[t, ., makeError, (, n, ,, CONFLICTING_EXTENDED_TYPE, ,, "dict", ,, functionPrivateName, )]
[t]
[n]
[CONFLICTING_EXTENDED_TYPE]
["dict"]
[functionPrivateName]
[functionType, ., getImplementedInterfaces, (, )]
[functionType]
[false]
[ObjectType, ., cast, (, baseInterface, )]
[ObjectType]
[baseInterface]
[baseInterfaceObj, !=, null]
[baseInterfaceObj]
[null]
[baseInterfaceObj, ., getConstructor, (, )]
[baseInterfaceObj]
[interfaceConstructor, !=, null, &&, !, interfaceConstructor, ., isInterface, (, )]
[interfaceConstructor, !=, null]
[interfaceConstructor]
[null]
[!, interfaceConstructor, ., isInterface, (, )]
[interfaceConstructor, ., isInterface, (, )]
[interfaceConstructor]
[badImplementedType]
[true]
[badImplementedType]
[true]
[badImplementedType]
[report, (, t, ,, n, ,, BAD_IMPLEMENTED_TYPE, ,, functionPrivateName, )]
[t]
[n]
[BAD_IMPLEMENTED_TYPE]
[functionPrivateName]
[validator, ., expectAllInterfaceProperties, (, t, ,, n, ,, functionType, )]
[validator]
[t]
[n]
[functionType]
[functionType, ., isInterface, (, )]
[functionType]
[functionType, ., getExtendedInterfaces, (, )]
[functionType]
[extInterface, ., getConstructor, (, ), !=, null, &&, !, extInterface, ., getConstructor, (, ), ., isInterface, (, )]
[extInterface, ., getConstructor, (, ), !=, null]
[extInterface, ., getConstructor, (, )]
[extInterface]
[null]
[!, extInterface, ., getConstructor, (, ), ., isInterface, (, )]
[extInterface, ., getConstructor, (, ), ., isInterface, (, )]
[extInterface, ., getConstructor, (, )]
[extInterface]
[compiler, ., report, (, t, ., makeError, (, n, ,, CONFLICTING_EXTENDED_TYPE, ,, "interface", ,, functionPrivateName, ), )]
[compiler]
[t, ., makeError, (, n, ,, CONFLICTING_EXTENDED_TYPE, ,, "interface", ,, functionPrivateName, )]
[t]
[n]
[CONFLICTING_EXTENDED_TYPE]
["interface"]
[functionPrivateName]
[functionType, ., getExtendedInterfacesCount, (, ), >, 1]
[functionType, ., getExtendedInterfacesCount, (, )]
[functionType]
[1]
[new, HashMap, <, String, ,, ObjectType, >, (, )]
[new, HashMap, <, String, ,, ObjectType, >, (, )]
[functionType, ., getExtendedInterfaces, (, )]
[functionType]
[currentProperties, ., clear, (, )]
[currentProperties]
[checkInterfaceConflictProperties, (, t, ,, n, ,, functionPrivateName, ,, properties, ,, currentProperties, ,, interfaceType, )]
[t]
[n]
[functionPrivateName]
[properties]
[currentProperties]
[interfaceType]
[properties, ., putAll, (, currentProperties, )]
[properties]
[currentProperties]
[n, ., getFirstChild, (, )]
[n]
[getJSType, (, child, ), ., restrictByNotNullOrUndefined, (, )]
[getJSType, (, child, )]
[child]
[!, childType, ., canBeCalled, (, )]
[childType, ., canBeCalled, (, )]
[childType]
[report, (, t, ,, n, ,, NOT_CALLABLE, ,, childType, ., toString, (, ), )]
[t]
[n]
[NOT_CALLABLE]
[childType, ., toString, (, )]
[childType]
[ensureTyped, (, t, ,, n, )]
[t]
[n]
[childType, ., isFunctionType, (, )]
[childType]
[childType, ., toMaybeFunctionType, (, )]
[childType]
[false]
[functionType, ., getJSDocInfo, (, )]
[functionType]
[functionJSDocInfo, !=, null, &&, functionJSDocInfo, ., getAssociatedNode, (, ), !=, null]
[functionJSDocInfo, !=, null]
[functionJSDocInfo]
[null]
[functionJSDocInfo, ., getAssociatedNode, (, ), !=, null]
[functionJSDocInfo, ., getAssociatedNode, (, )]
[functionJSDocInfo]
[null]
[isExtern]
[functionJSDocInfo, ., getAssociatedNode, (, ), ., isFromExterns, (, )]
[functionJSDocInfo, ., getAssociatedNode, (, )]
[functionJSDocInfo]
[functionType, ., isConstructor, (, ), &&, !, functionType, ., isNativeObjectType, (, ), &&, (, functionType, ., getReturnType, (, ), ., isUnknownType, (, ), ||, functionType, ., getReturnType, (, ), ., isVoidType, (, ), ||, !, isExtern, )]
[functionType, ., isConstructor, (, ), &&, !, functionType, ., isNativeObjectType, (, )]
[functionType, ., isConstructor, (, )]
[functionType]
[!, functionType, ., isNativeObjectType, (, )]
[functionType, ., isNativeObjectType, (, )]
[functionType]
[(, functionType, ., getReturnType, (, ), ., isUnknownType, (, ), ||, functionType, ., getReturnType, (, ), ., isVoidType, (, ), ||, !, isExtern, )]
[functionType, ., getReturnType, (, ), ., isUnknownType, (, ), ||, functionType, ., getReturnType, (, ), ., isVoidType, (, ), ||, !, isExtern]
[functionType, ., getReturnType, (, ), ., isUnknownType, (, ), ||, functionType, ., getReturnType, (, ), ., isVoidType, (, )]
[functionType, ., getReturnType, (, ), ., isUnknownType, (, )]
[functionType, ., getReturnType, (, )]
[functionType]
[functionType, ., getReturnType, (, ), ., isVoidType, (, )]
[functionType, ., getReturnType, (, )]
[functionType]
[!, isExtern]
[isExtern]
[report, (, t, ,, n, ,, CONSTRUCTOR_NOT_CALLABLE, ,, childType, ., toString, (, ), )]
[t]
[n]
[CONSTRUCTOR_NOT_CALLABLE]
[childType, ., toString, (, )]
[childType]
[functionType, ., isOrdinaryFunction, (, ), &&, !, functionType, ., getTypeOfThis, (, ), ., isUnknownType, (, ), &&, !, (, functionType, ., getTypeOfThis, (, ), ., toObjectType, (, ), !=, null, &&, functionType, ., getTypeOfThis, (, ), ., toObjectType, (, ), ., isNativeObjectType, (, ), ), &&, !, (, child, ., isGetElem, (, ), ||, child, ., isGetProp, (, ), )]
[functionType, ., isOrdinaryFunction, (, ), &&, !, functionType, ., getTypeOfThis, (, ), ., isUnknownType, (, ), &&, !, (, functionType, ., getTypeOfThis, (, ), ., toObjectType, (, ), !=, null, &&, functionType, ., getTypeOfThis, (, ), ., toObjectType, (, ), ., isNativeObjectType, (, ), )]
[functionType, ., isOrdinaryFunction, (, ), &&, !, functionType, ., getTypeOfThis, (, ), ., isUnknownType, (, )]
[functionType, ., isOrdinaryFunction, (, )]
[functionType]
[!, functionType, ., getTypeOfThis, (, ), ., isUnknownType, (, )]
[functionType, ., getTypeOfThis, (, ), ., isUnknownType, (, )]
[functionType, ., getTypeOfThis, (, )]
[functionType]
[!, (, functionType, ., getTypeOfThis, (, ), ., toObjectType, (, ), !=, null, &&, functionType, ., getTypeOfThis, (, ), ., toObjectType, (, ), ., isNativeObjectType, (, ), )]
[(, functionType, ., getTypeOfThis, (, ), ., toObjectType, (, ), !=, null, &&, functionType, ., getTypeOfThis, (, ), ., toObjectType, (, ), ., isNativeObjectType, (, ), )]
[functionType, ., getTypeOfThis, (, ), ., toObjectType, (, ), !=, null, &&, functionType, ., getTypeOfThis, (, ), ., toObjectType, (, ), ., isNativeObjectType, (, )]
[functionType, ., getTypeOfThis, (, ), ., toObjectType, (, ), !=, null]
[functionType, ., getTypeOfThis, (, ), ., toObjectType, (, )]
[functionType, ., getTypeOfThis, (, )]
[functionType]
[null]
[functionType, ., getTypeOfThis, (, ), ., toObjectType, (, ), ., isNativeObjectType, (, )]
[functionType, ., getTypeOfThis, (, ), ., toObjectType, (, )]
[functionType, ., getTypeOfThis, (, )]
[functionType]
[!, (, child, ., isGetElem, (, ), ||, child, ., isGetProp, (, ), )]
[(, child, ., isGetElem, (, ), ||, child, ., isGetProp, (, ), )]
[child, ., isGetElem, (, ), ||, child, ., isGetProp, (, )]
[child, ., isGetElem, (, )]
[child]
[child, ., isGetProp, (, )]
[child]
[report, (, t, ,, n, ,, EXPECTED_THIS_TYPE, ,, functionType, ., toString, (, ), )]
[t]
[n]
[EXPECTED_THIS_TYPE]
[functionType, ., toString, (, )]
[functionType]
[visitParameterList, (, t, ,, n, ,, functionType, )]
[t]
[n]
[functionType]
[ensureTyped, (, t, ,, n, ,, functionType, ., getReturnType, (, ), )]
[t]
[n]
[functionType, ., getReturnType, (, )]
[functionType]
[ensureTyped, (, t, ,, n, )]
[t]
[n]
[call, ., children, (, ), ., iterator, (, )]
[call, ., children, (, )]
[call]
[arguments, ., next, (, )]
[arguments]
[functionType, ., getParameters, (, ), ., iterator, (, )]
[functionType, ., getParameters, (, )]
[functionType]
[0]
[null]
[null]
[arguments, ., hasNext, (, ), &&, (, parameters, ., hasNext, (, ), ||, parameter, !=, null, &&, parameter, ., isVarArgs, (, ), )]
[arguments, ., hasNext, (, )]
[arguments]
[(, parameters, ., hasNext, (, ), ||, parameter, !=, null, &&, parameter, ., isVarArgs, (, ), )]
[parameters, ., hasNext, (, ), ||, parameter, !=, null, &&, parameter, ., isVarArgs, (, )]
[parameters, ., hasNext, (, )]
[parameters]
[parameter, !=, null, &&, parameter, ., isVarArgs, (, )]
[parameter, !=, null]
[parameter]
[null]
[parameter, ., isVarArgs, (, )]
[parameter]
[parameters, ., hasNext, (, )]
[parameters]
[parameter]
[parameters, ., next, (, )]
[parameters]
[argument]
[arguments, ., next, (, )]
[arguments]
[ordinal, ++]
[ordinal]
[validator, ., expectArgumentMatchesParameter, (, t, ,, argument, ,, getJSType, (, argument, ), ,, getJSType, (, parameter, ), ,, call, ,, ordinal, )]
[validator]
[t]
[argument]
[getJSType, (, argument, )]
[argument]
[getJSType, (, parameter, )]
[parameter]
[call]
[ordinal]
[call, ., getChildCount, (, ), -, 1]
[call, ., getChildCount, (, )]
[call]
[1]
[functionType, ., getMinArguments, (, )]
[functionType]
[functionType, ., getMaxArguments, (, )]
[functionType]
[minArgs, >, numArgs, ||, maxArgs, <, numArgs]
[minArgs, >, numArgs]
[minArgs]
[numArgs]
[maxArgs, <, numArgs]
[maxArgs]
[numArgs]
[report, (, t, ,, call, ,, WRONG_ARGUMENT_COUNT, ,, validator, ., getReadableJSTypeName, (, call, ., getFirstChild, (, ), ,, false, ), ,, String, ., valueOf, (, numArgs, ), ,, String, ., valueOf, (, minArgs, ), ,, maxArgs, !=, Integer, ., MAX_VALUE, ?, " and no more than ", +, maxArgs, +, " argument(s)", :, "", )]
[t]
[call]
[WRONG_ARGUMENT_COUNT]
[validator, ., getReadableJSTypeName, (, call, ., getFirstChild, (, ), ,, false, )]
[validator]
[call, ., getFirstChild, (, )]
[call]
[false]
[String, ., valueOf, (, numArgs, )]
[String]
[numArgs]
[String, ., valueOf, (, minArgs, )]
[String]
[minArgs]
[maxArgs, !=, Integer, ., MAX_VALUE, ?, " and no more than ", +, maxArgs, +, " argument(s)", :, ""]
[maxArgs, !=, Integer, ., MAX_VALUE]
[maxArgs]
[Integer, ., MAX_VALUE]
[Integer]
[" and no more than ", +, maxArgs, +, " argument(s)"]
[" and no more than ", +, maxArgs]
[" and no more than "]
[maxArgs]
[" argument(s)"]
[""]
[getJSType, (, t, ., getEnclosingFunction, (, ), )]
[t, ., getEnclosingFunction, (, )]
[t]
[jsType, ., isFunctionType, (, )]
[jsType]
[jsType, ., toMaybeFunctionType, (, )]
[jsType]
[functionType, ., getReturnType, (, )]
[functionType]
[returnType, ==, null]
[returnType]
[null]
[returnType]
[getNativeType, (, VOID_TYPE, )]
[VOID_TYPE]
[n, ., getFirstChild, (, )]
[n]
[valueNode, ==, null]
[valueNode]
[null]
[actualReturnType]
[getNativeType, (, VOID_TYPE, )]
[VOID_TYPE]
[valueNode]
[n]
[actualReturnType]
[getJSType, (, valueNode, )]
[valueNode]
[validator, ., expectCanAssignTo, (, t, ,, valueNode, ,, actualReturnType, ,, returnType, ,, "inconsistent return type", )]
[validator]
[t]
[valueNode]
[actualReturnType]
[returnType]
["inconsistent return type"]
[n, ., getFirstChild, (, )]
[n]
[getJSType, (, left, )]
[left]
[n, ., getLastChild, (, )]
[n]
[getJSType, (, right, )]
[right]
[op]
[Token, ., ASSIGN_LSH]
[Token]
[Token, ., ASSIGN_RSH]
[Token]
[Token, ., LSH]
[Token]
[Token, ., RSH]
[Token]
[Token, ., ASSIGN_URSH]
[Token]
[Token, ., URSH]
[Token]
[!, leftType, ., matchesInt32Context, (, )]
[leftType, ., matchesInt32Context, (, )]
[leftType]
[report, (, t, ,, left, ,, BIT_OPERATION, ,, NodeUtil, ., opToStr, (, n, ., getType, (, ), ), ,, leftType, ., toString, (, ), )]
[t]
[left]
[BIT_OPERATION]
[NodeUtil, ., opToStr, (, n, ., getType, (, ), )]
[NodeUtil]
[n, ., getType, (, )]
[n]
[leftType, ., toString, (, )]
[leftType]
[!, rightType, ., matchesUint32Context, (, )]
[rightType, ., matchesUint32Context, (, )]
[rightType]
[report, (, t, ,, right, ,, BIT_OPERATION, ,, NodeUtil, ., opToStr, (, n, ., getType, (, ), ), ,, rightType, ., toString, (, ), )]
[t]
[right]
[BIT_OPERATION]
[NodeUtil, ., opToStr, (, n, ., getType, (, ), )]
[NodeUtil]
[n, ., getType, (, )]
[n]
[rightType, ., toString, (, )]
[rightType]
[Token, ., ASSIGN_DIV]
[Token]
[Token, ., ASSIGN_MOD]
[Token]
[Token, ., ASSIGN_MUL]
[Token]
[Token, ., ASSIGN_SUB]
[Token]
[Token, ., DIV]
[Token]
[Token, ., MOD]
[Token]
[Token, ., MUL]
[Token]
[Token, ., SUB]
[Token]
[validator, ., expectNumber, (, t, ,, left, ,, leftType, ,, "left operand", )]
[validator]
[t]
[left]
[leftType]
["left operand"]
[validator, ., expectNumber, (, t, ,, right, ,, rightType, ,, "right operand", )]
[validator]
[t]
[right]
[rightType]
["right operand"]
[Token, ., ASSIGN_BITAND]
[Token]
[Token, ., ASSIGN_BITXOR]
[Token]
[Token, ., ASSIGN_BITOR]
[Token]
[Token, ., BITAND]
[Token]
[Token, ., BITXOR]
[Token]
[Token, ., BITOR]
[Token]
[validator, ., expectBitwiseable, (, t, ,, left, ,, leftType, ,, "bad left operand to bitwise operator", )]
[validator]
[t]
[left]
[leftType]
["bad left operand to bitwise operator"]
[validator, ., expectBitwiseable, (, t, ,, right, ,, rightType, ,, "bad right operand to bitwise operator", )]
[validator]
[t]
[right]
[rightType]
["bad right operand to bitwise operator"]
[Token, ., ASSIGN_ADD]
[Token]
[Token, ., ADD]
[Token]
[report, (, t, ,, n, ,, UNEXPECTED_TOKEN, ,, Token, ., name, (, op, ), )]
[t]
[n]
[UNEXPECTED_TOKEN]
[Token, ., name, (, op, )]
[Token]
[op]
[ensureTyped, (, t, ,, n, )]
[t]
[n]
[declInfo, ==, null, ||, !, declInfo, ., hasEnumParameterType, (, )]
[declInfo, ==, null]
[declInfo]
[null]
[!, declInfo, ., hasEnumParameterType, (, )]
[declInfo, ., hasEnumParameterType, (, )]
[declInfo]
[getJSType, (, value, )]
[value]
[!, valueType, ., isEnumType, (, )]
[valueType, ., isEnumType, (, )]
[valueType]
[valueType, ., toMaybeEnumType, (, )]
[valueType]
[valueEnumType, ., getElementsType, (, ), ., getPrimitiveType, (, )]
[valueEnumType, ., getElementsType, (, )]
[valueEnumType]
[validator, ., expectCanAssignTo, (, t, ,, value, ,, valueEnumPrimitiveType, ,, declInfo, ., getEnumParameterType, (, ), ., evaluate, (, t, ., getScope, (, ), ,, typeRegistry, ), ,, "incompatible enum element types", )]
[validator]
[t]
[value]
[valueEnumPrimitiveType]
[declInfo, ., getEnumParameterType, (, ), ., evaluate, (, t, ., getScope, (, ), ,, typeRegistry, )]
[declInfo, ., getEnumParameterType, (, )]
[declInfo]
[t, ., getScope, (, )]
[t]
[typeRegistry]
["incompatible enum element types"]
[n, ., getJSType, (, )]
[n]
[jsType, ==, null]
[jsType]
[null]
[getNativeType, (, UNKNOWN_TYPE, )]
[UNKNOWN_TYPE]
[jsType]
[ensureTyped, (, t, ,, n, ,, getNativeType, (, UNKNOWN_TYPE, ), )]
[t]
[n]
[getNativeType, (, UNKNOWN_TYPE, )]
[UNKNOWN_TYPE]
[ensureTyped, (, t, ,, n, ,, getNativeType, (, type, ), )]
[t]
[n]
[getNativeType, (, type, )]
[type]
[Preconditions, ., checkState, (, !, n, ., isFunction, (, ), ||, type, ., isFunctionType, (, ), ||, type, ., isUnknownType, (, ), )]
[Preconditions]
[!, n, ., isFunction, (, ), ||, type, ., isFunctionType, (, ), ||, type, ., isUnknownType, (, )]
[!, n, ., isFunction, (, ), ||, type, ., isFunctionType, (, )]
[!, n, ., isFunction, (, )]
[n, ., isFunction, (, )]
[n]
[type, ., isFunctionType, (, )]
[type]
[type, ., isUnknownType, (, )]
[type]
[n, ., getJSDocInfo, (, )]
[n]
[info, !=, null]
[info]
[null]
[info, ., hasType, (, )]
[info]
[info, ., getType, (, ), ., evaluate, (, t, ., getScope, (, ), ,, typeRegistry, )]
[info, ., getType, (, )]
[info]
[t, ., getScope, (, )]
[t]
[typeRegistry]
[validator, ., expectCanCast, (, t, ,, n, ,, infoType, ,, type, )]
[validator]
[t]
[n]
[infoType]
[type]
[type]
[infoType]
[info, ., isImplicitCast, (, ), &&, !, inExterns]
[info, ., isImplicitCast, (, )]
[info]
[!, inExterns]
[inExterns]
[n, ., isGetProp, (, ), ?, n, ., getLastChild, (, ), ., getString, (, ), :, "(missing)"]
[n, ., isGetProp, (, )]
[n]
[n, ., getLastChild, (, ), ., getString, (, )]
[n, ., getLastChild, (, )]
[n]
["(missing)"]
[compiler, ., report, (, t, ., makeError, (, n, ,, ILLEGAL_IMPLICIT_CAST, ,, propName, ), )]
[compiler]
[t, ., makeError, (, n, ,, ILLEGAL_IMPLICIT_CAST, ,, propName, )]
[t]
[n]
[ILLEGAL_IMPLICIT_CAST]
[propName]
[n, ., getJSType, (, ), ==, null]
[n, ., getJSType, (, )]
[n]
[null]
[n, ., setJSType, (, type, )]
[n]
[type]
[nullCount, +, unknownCount, +, typedCount]
[nullCount, +, unknownCount]
[nullCount]
[unknownCount]
[typedCount]
[(, total, ==, 0, ), ?, 0.0, :, (, 100.0, *, typedCount, ), /, total]
[(, total, ==, 0, )]
[total, ==, 0]
[total]
[0]
[0.0]
[(, 100.0, *, typedCount, ), /, total]
[(, 100.0, *, typedCount, )]
[100.0, *, typedCount]
[100.0]
[typedCount]
[total]
[typeRegistry, ., getNativeType, (, typeId, )]
[typeRegistry]
[typeId]
