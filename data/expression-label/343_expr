[1]
[2]
[3]
[4]
[5]
[0]
[1]
[2]
[3]
[4]
[5]
[6]
[7]
[8]
[9]
[SECONDS_OPTIONAL_MILLIS]
[clear, (, )]
[toFormatter, (, iElementPairs, ,, iNotPrinter, ,, iNotParser, )]
[iElementPairs]
[iNotPrinter]
[iNotParser]
[iFieldFormatters]
[(, FieldFormatter, [, ], ), iFieldFormatters, ., clone, (, )]
[iFieldFormatters, ., clone, (, )]
[iFieldFormatters]
[formatter]
[iNotPrinter]
[null]
[toFormatter, (, ), ., getPrinter, (, )]
[toFormatter, (, )]
[iNotParser]
[null]
[toFormatter, (, ), ., getParser, (, )]
[toFormatter, (, )]
[iMinPrintedDigits]
[1]
[iPrintZeroSetting]
[PRINT_ZERO_RARELY_LAST]
[iMaxParsedDigits]
[10]
[iRejectSignedValues]
[false]
[iPrefix]
[null]
[iElementPairs, ==, null]
[iElementPairs]
[null]
[iElementPairs]
[new, ArrayList, <, Object, >, (, )]
[iElementPairs, ., clear, (, )]
[iElementPairs]
[iNotPrinter]
[false]
[iNotParser]
[false]
[iFieldFormatters]
[new, FieldFormatter, [, 10, ]]
[10]
[formatter, ==, null]
[formatter]
[null]
[new, IllegalArgumentException, (, "No formatter supplied", )]
["No formatter supplied"]
[clearPrefix, (, )]
[append0, (, formatter, ., getPrinter, (, ), ,, formatter, ., getParser, (, ), )]
[formatter, ., getPrinter, (, )]
[formatter]
[formatter, ., getParser, (, )]
[formatter]
[this]
[printer, ==, null, &&, parser, ==, null]
[printer, ==, null]
[printer]
[null]
[parser, ==, null]
[parser]
[null]
[new, IllegalArgumentException, (, "No printer or parser supplied", )]
["No printer or parser supplied"]
[clearPrefix, (, )]
[append0, (, printer, ,, parser, )]
[printer]
[parser]
[this]
[text, ==, null]
[text]
[null]
[new, IllegalArgumentException, (, "Literal must not be null", )]
["Literal must not be null"]
[clearPrefix, (, )]
[new, Literal, (, text, )]
[text]
[append0, (, literal, ,, literal, )]
[literal]
[literal]
[this]
[iMinPrintedDigits]
[minDigits]
[this]
[iMaxParsedDigits]
[maxDigits]
[this]
[iRejectSignedValues]
[v]
[this]
[iPrintZeroSetting]
[PRINT_ZERO_RARELY_LAST]
[this]
[iPrintZeroSetting]
[PRINT_ZERO_RARELY_FIRST]
[this]
[iPrintZeroSetting]
[PRINT_ZERO_IF_SUPPORTED]
[this]
[iPrintZeroSetting]
[PRINT_ZERO_ALWAYS]
[this]
[iPrintZeroSetting]
[PRINT_ZERO_NEVER]
[this]
[text, ==, null]
[text]
[null]
[new, IllegalArgumentException, (, )]
[appendPrefix, (, new, SimpleAffix, (, text, ), )]
[new, SimpleAffix, (, text, )]
[text]
[singularText, ==, null, ||, pluralText, ==, null]
[singularText, ==, null]
[singularText]
[null]
[pluralText, ==, null]
[pluralText]
[null]
[new, IllegalArgumentException, (, )]
[appendPrefix, (, new, PluralAffix, (, singularText, ,, pluralText, ), )]
[new, PluralAffix, (, singularText, ,, pluralText, )]
[singularText]
[pluralText]
[prefix, ==, null]
[prefix]
[null]
[new, IllegalArgumentException, (, )]
[iPrefix, !=, null]
[iPrefix]
[null]
[prefix]
[new, CompositeAffix, (, iPrefix, ,, prefix, )]
[iPrefix]
[prefix]
[iPrefix]
[prefix]
[this]
[appendField, (, YEARS, )]
[YEARS]
[this]
[appendField, (, MONTHS, )]
[MONTHS]
[this]
[appendField, (, WEEKS, )]
[WEEKS]
[this]
[appendField, (, DAYS, )]
[DAYS]
[this]
[appendField, (, HOURS, )]
[HOURS]
[this]
[appendField, (, MINUTES, )]
[MINUTES]
[this]
[appendField, (, SECONDS, )]
[SECONDS]
[this]
[appendField, (, SECONDS_MILLIS, )]
[SECONDS_MILLIS]
[this]
[appendField, (, SECONDS_OPTIONAL_MILLIS, )]
[SECONDS_OPTIONAL_MILLIS]
[this]
[appendField, (, MILLIS, )]
[MILLIS]
[this]
[appendField, (, 7, ,, 3, )]
[7]
[3]
[this]
[appendField, (, type, ,, iMinPrintedDigits, )]
[type]
[iMinPrintedDigits]
[new, FieldFormatter, (, minPrinted, ,, iPrintZeroSetting, ,, iMaxParsedDigits, ,, iRejectSignedValues, ,, type, ,, iFieldFormatters, ,, iPrefix, ,, null, )]
[minPrinted]
[iPrintZeroSetting]
[iMaxParsedDigits]
[iRejectSignedValues]
[type]
[iFieldFormatters]
[iPrefix]
[null]
[append0, (, field, ,, field, )]
[field]
[field]
[iFieldFormatters, [, type, ]]
[iFieldFormatters]
[type]
[field]
[iPrefix]
[null]
[text, ==, null]
[text]
[null]
[new, IllegalArgumentException, (, )]
[appendSuffix, (, new, SimpleAffix, (, text, ), )]
[new, SimpleAffix, (, text, )]
[text]
[singularText, ==, null, ||, pluralText, ==, null]
[singularText, ==, null]
[singularText]
[null]
[pluralText, ==, null]
[pluralText]
[null]
[new, IllegalArgumentException, (, )]
[appendSuffix, (, new, PluralAffix, (, singularText, ,, pluralText, ), )]
[new, PluralAffix, (, singularText, ,, pluralText, )]
[singularText]
[pluralText]
[iElementPairs, ., size, (, ), >, 0]
[iElementPairs, ., size, (, )]
[iElementPairs]
[0]
[originalPrinter]
[iElementPairs, ., get, (, iElementPairs, ., size, (, ), -, 2, )]
[iElementPairs]
[iElementPairs, ., size, (, ), -, 2]
[iElementPairs, ., size, (, )]
[iElementPairs]
[2]
[originalParser]
[iElementPairs, ., get, (, iElementPairs, ., size, (, ), -, 1, )]
[iElementPairs]
[iElementPairs, ., size, (, ), -, 1]
[iElementPairs, ., size, (, )]
[iElementPairs]
[1]
[originalPrinter]
[null]
[originalParser]
[null]
[originalPrinter, ==, null, ||, originalParser, ==, null, ||, originalPrinter, !=, originalParser, ||, !, (, originalPrinter, instanceof, FieldFormatter, )]
[originalPrinter, ==, null, ||, originalParser, ==, null, ||, originalPrinter, !=, originalParser]
[originalPrinter, ==, null, ||, originalParser, ==, null]
[originalPrinter, ==, null]
[originalPrinter]
[null]
[originalParser, ==, null]
[originalParser]
[null]
[originalPrinter, !=, originalParser]
[originalPrinter]
[originalParser]
[!, (, originalPrinter, instanceof, FieldFormatter, )]
[(, originalPrinter, instanceof, FieldFormatter, )]
[originalPrinter, instanceof, FieldFormatter]
[originalPrinter]
[new, IllegalStateException, (, "No field to apply suffix to", )]
["No field to apply suffix to"]
[clearPrefix, (, )]
[new, FieldFormatter, (, (, FieldFormatter, ), originalPrinter, ,, suffix, )]
[(, FieldFormatter, ), originalPrinter]
[originalPrinter]
[suffix]
[iElementPairs, ., set, (, iElementPairs, ., size, (, ), -, 2, ,, newField, )]
[iElementPairs]
[iElementPairs, ., size, (, ), -, 2]
[iElementPairs, ., size, (, )]
[iElementPairs]
[2]
[newField]
[iElementPairs, ., set, (, iElementPairs, ., size, (, ), -, 1, ,, newField, )]
[iElementPairs]
[iElementPairs, ., size, (, ), -, 1]
[iElementPairs, ., size, (, )]
[iElementPairs]
[1]
[newField]
[iFieldFormatters, [, newField, ., getFieldType, (, ), ]]
[iFieldFormatters]
[newField, ., getFieldType, (, )]
[newField]
[newField]
[this]
[appendSeparator, (, text, ,, text, ,, null, ,, true, ,, true, )]
[text]
[text]
[null]
[true]
[true]
[appendSeparator, (, text, ,, text, ,, null, ,, false, ,, true, )]
[text]
[text]
[null]
[false]
[true]
[appendSeparator, (, text, ,, text, ,, null, ,, true, ,, false, )]
[text]
[text]
[null]
[true]
[false]
[appendSeparator, (, text, ,, finalText, ,, null, ,, true, ,, true, )]
[text]
[finalText]
[null]
[true]
[true]
[appendSeparator, (, text, ,, finalText, ,, variants, ,, true, ,, true, )]
[text]
[finalText]
[variants]
[true]
[true]
[text, ==, null, ||, finalText, ==, null]
[text, ==, null]
[text]
[null]
[finalText, ==, null]
[finalText]
[null]
[new, IllegalArgumentException, (, )]
[clearPrefix, (, )]
[iElementPairs]
[pairs, ., size, (, ), ==, 0]
[pairs, ., size, (, )]
[pairs]
[0]
[useAfter, &&, useBefore, ==, false]
[useAfter]
[useBefore, ==, false]
[useBefore]
[false]
[new, Separator, (, text, ,, finalText, ,, variants, ,, Literal, ., EMPTY, ,, Literal, ., EMPTY, ,, useBefore, ,, useAfter, )]
[text]
[finalText]
[variants]
[Literal, ., EMPTY]
[Literal]
[Literal, ., EMPTY]
[Literal]
[useBefore]
[useAfter]
[append0, (, separator, ,, separator, )]
[separator]
[separator]
[this]
[null]
[i]
[pairs, ., size, (, )]
[pairs]
[--, i, >=, 0]
[--, i]
[i]
[0]
[pairs, ., get, (, i, ), instanceof, Separator]
[pairs, ., get, (, i, )]
[pairs]
[i]
[lastSeparator]
[(, Separator, ), pairs, ., get, (, i, )]
[pairs, ., get, (, i, )]
[pairs]
[i]
[pairs]
[pairs, ., subList, (, i, +, 1, ,, pairs, ., size, (, ), )]
[pairs]
[i, +, 1]
[i]
[1]
[pairs, ., size, (, )]
[pairs]
[i, --]
[i]
[lastSeparator, !=, null, &&, pairs, ., size, (, ), ==, 0]
[lastSeparator, !=, null]
[lastSeparator]
[null]
[pairs, ., size, (, ), ==, 0]
[pairs, ., size, (, )]
[pairs]
[0]
[new, IllegalStateException, (, "Cannot have two adjacent separators", )]
["Cannot have two adjacent separators"]
[createComposite, (, pairs, )]
[pairs]
[pairs, ., clear, (, )]
[pairs]
[new, Separator, (, text, ,, finalText, ,, variants, ,, (, PeriodPrinter, ), comp, [, 0, ], ,, (, PeriodParser, ), comp, [, 1, ], ,, useBefore, ,, useAfter, )]
[text]
[finalText]
[variants]
[(, PeriodPrinter, ), comp, [, 0, ]]
[comp, [, 0, ]]
[comp]
[0]
[(, PeriodParser, ), comp, [, 1, ]]
[comp, [, 1, ]]
[comp]
[1]
[useBefore]
[useAfter]
[pairs, ., add, (, separator, )]
[pairs]
[separator]
[pairs, ., add, (, separator, )]
[pairs]
[separator]
[this]
[iPrefix, !=, null]
[iPrefix]
[null]
[new, IllegalStateException, (, "Prefix not followed by field", )]
["Prefix not followed by field"]
[iPrefix]
[null]
[iElementPairs, ., add, (, printer, )]
[iElementPairs]
[printer]
[iElementPairs, ., add, (, parser, )]
[iElementPairs]
[parser]
[iNotPrinter]
[(, printer, ==, null, )]
[printer, ==, null]
[printer]
[null]
[iNotParser]
[(, parser, ==, null, )]
[parser, ==, null]
[parser]
[null]
[this]
[notPrinter, &&, notParser]
[notPrinter]
[notParser]
[new, IllegalStateException, (, "Builder has created neither a printer nor a parser", )]
["Builder has created neither a printer nor a parser"]
[elementPairs, ., size, (, )]
[elementPairs]
[size, >=, 2, &&, elementPairs, ., get, (, 0, ), instanceof, Separator]
[size, >=, 2]
[size]
[2]
[elementPairs, ., get, (, 0, ), instanceof, Separator]
[elementPairs, ., get, (, 0, )]
[elementPairs]
[0]
[(, Separator, ), elementPairs, ., get, (, 0, )]
[elementPairs, ., get, (, 0, )]
[elementPairs]
[0]
[sep, ., iAfterParser, ==, null, &&, sep, ., iAfterPrinter, ==, null]
[sep, ., iAfterParser, ==, null]
[sep, ., iAfterParser]
[sep]
[null]
[sep, ., iAfterPrinter, ==, null]
[sep, ., iAfterPrinter]
[sep]
[null]
[toFormatter, (, elementPairs, ., subList, (, 2, ,, size, ), ,, notPrinter, ,, notParser, )]
[elementPairs, ., subList, (, 2, ,, size, )]
[elementPairs]
[2]
[size]
[notPrinter]
[notParser]
[sep]
[sep, ., finish, (, f, ., getPrinter, (, ), ,, f, ., getParser, (, ), )]
[sep]
[f, ., getPrinter, (, )]
[f]
[f, ., getParser, (, )]
[f]
[new, PeriodFormatter, (, sep, ,, sep, )]
[sep]
[sep]
[createComposite, (, elementPairs, )]
[elementPairs]
[notPrinter]
[new, PeriodFormatter, (, null, ,, (, PeriodParser, ), comp, [, 1, ], )]
[null]
[(, PeriodParser, ), comp, [, 1, ]]
[comp, [, 1, ]]
[comp]
[1]
[notParser]
[new, PeriodFormatter, (, (, PeriodPrinter, ), comp, [, 0, ], ,, null, )]
[(, PeriodPrinter, ), comp, [, 0, ]]
[comp, [, 0, ]]
[comp]
[0]
[null]
[new, PeriodFormatter, (, (, PeriodPrinter, ), comp, [, 0, ], ,, (, PeriodParser, ), comp, [, 1, ], )]
[(, PeriodPrinter, ), comp, [, 0, ]]
[comp, [, 0, ]]
[comp]
[0]
[(, PeriodParser, ), comp, [, 1, ]]
[comp, [, 1, ]]
[comp]
[1]
[elementPairs, ., size, (, )]
[elementPairs]
[0]
[new, Object, [, ], {, Literal, ., EMPTY, ,, Literal, ., EMPTY, }]
[{, Literal, ., EMPTY, ,, Literal, ., EMPTY, }]
[Literal, ., EMPTY]
[Literal]
[Literal, ., EMPTY]
[Literal]
[1]
[new, Object, [, ], {, elementPairs, ., get, (, 0, ), ,, elementPairs, ., get, (, 1, ), }]
[{, elementPairs, ., get, (, 0, ), ,, elementPairs, ., get, (, 1, ), }]
[elementPairs, ., get, (, 0, )]
[elementPairs]
[0]
[elementPairs, ., get, (, 1, )]
[elementPairs]
[1]
[new, Composite, (, elementPairs, )]
[elementPairs]
[new, Object, [, ], {, comp, ,, comp, }]
[{, comp, ,, comp, }]
[comp]
[comp]
[iText]
[text]
[iText, ., length, (, )]
[iText]
[buf, ., append, (, iText, )]
[buf]
[iText]
[out, ., write, (, iText, )]
[out]
[iText]
[iText]
[text, ., length, (, )]
[text]
[periodStr, ., regionMatches, (, true, ,, position, ,, text, ,, 0, ,, textLength, )]
[periodStr]
[true]
[position]
[text]
[0]
[textLength]
[position, +, textLength]
[position]
[textLength]
[~, position]
[position]
[iText]
[text, ., length, (, )]
[text]
[periodStr, ., length, (, )]
[periodStr]
[position]
[pos, <, sourceLength]
[pos]
[sourceLength]
[pos, ++]
[pos]
[periodStr, ., regionMatches, (, true, ,, pos, ,, text, ,, 0, ,, textLength, )]
[periodStr]
[true]
[pos]
[text]
[0]
[textLength]
[pos]
[periodStr, ., charAt, (, pos, )]
[periodStr]
[pos]
['0']
['1']
['2']
['3']
['4']
['5']
['6']
['7']
['8']
['9']
['.']
[',']
['+']
['-']
[~, position]
[position]
[iSingularText]
[singularText]
[iPluralText]
[pluralText]
[(, value, ==, 1, ?, iSingularText, :, iPluralText, ), ., length, (, )]
[(, value, ==, 1, ?, iSingularText, :, iPluralText, )]
[value, ==, 1, ?, iSingularText, :, iPluralText]
[value, ==, 1]
[value]
[1]
[iSingularText]
[iPluralText]
[buf, ., append, (, value, ==, 1, ?, iSingularText, :, iPluralText, )]
[buf]
[value, ==, 1, ?, iSingularText, :, iPluralText]
[value, ==, 1]
[value]
[1]
[iSingularText]
[iPluralText]
[out, ., write, (, value, ==, 1, ?, iSingularText, :, iPluralText, )]
[out]
[value, ==, 1, ?, iSingularText, :, iPluralText]
[value, ==, 1]
[value]
[1]
[iSingularText]
[iPluralText]
[iPluralText]
[iSingularText]
[text1, ., length, (, ), <, text2, ., length, (, )]
[text1, ., length, (, )]
[text1]
[text2, ., length, (, )]
[text2]
[text1]
[text1]
[text2]
[text2]
[temp]
[periodStr, ., regionMatches, (, true, ,, position, ,, text1, ,, 0, ,, text1, ., length, (, ), )]
[periodStr]
[true]
[position]
[text1]
[0]
[text1, ., length, (, )]
[text1]
[position, +, text1, ., length, (, )]
[position]
[text1, ., length, (, )]
[text1]
[periodStr, ., regionMatches, (, true, ,, position, ,, text2, ,, 0, ,, text2, ., length, (, ), )]
[periodStr]
[true]
[position]
[text2]
[0]
[text2, ., length, (, )]
[text2]
[position, +, text2, ., length, (, )]
[position]
[text2, ., length, (, )]
[text2]
[~, position]
[position]
[iPluralText]
[iSingularText]
[text1, ., length, (, ), <, text2, ., length, (, )]
[text1, ., length, (, )]
[text1]
[text2, ., length, (, )]
[text2]
[text1]
[text1]
[text2]
[text2]
[temp]
[text1, ., length, (, )]
[text1]
[text2, ., length, (, )]
[text2]
[periodStr, ., length, (, )]
[periodStr]
[position]
[pos, <, sourceLength]
[pos]
[sourceLength]
[pos, ++]
[pos]
[periodStr, ., regionMatches, (, true, ,, pos, ,, text1, ,, 0, ,, textLength1, )]
[periodStr]
[true]
[pos]
[text1]
[0]
[textLength1]
[pos]
[periodStr, ., regionMatches, (, true, ,, pos, ,, text2, ,, 0, ,, textLength2, )]
[periodStr]
[true]
[pos]
[text2]
[0]
[textLength2]
[pos]
[~, position]
[position]
[iLeft]
[left]
[iRight]
[right]
[iLeft, ., calculatePrintedLength, (, value, ), +, iRight, ., calculatePrintedLength, (, value, )]
[iLeft, ., calculatePrintedLength, (, value, )]
[iLeft]
[value]
[iRight, ., calculatePrintedLength, (, value, )]
[iRight]
[value]
[iLeft, ., printTo, (, buf, ,, value, )]
[iLeft]
[buf]
[value]
[iRight, ., printTo, (, buf, ,, value, )]
[iRight]
[buf]
[value]
[iLeft, ., printTo, (, out, ,, value, )]
[iLeft]
[out]
[value]
[iRight, ., printTo, (, out, ,, value, )]
[iRight]
[out]
[value]
[position]
[iLeft, ., parse, (, periodStr, ,, position, )]
[iLeft]
[periodStr]
[position]
[position, >=, 0]
[position]
[0]
[position]
[iRight, ., parse, (, periodStr, ,, position, )]
[iRight]
[periodStr]
[position]
[position]
[iLeft, ., scan, (, periodStr, ,, position, )]
[iLeft]
[periodStr]
[position]
[pos, >=, 0]
[pos]
[0]
[iRight, ., scan, (, periodStr, ,, pos, )]
[iRight]
[periodStr]
[pos]
[~, position]
[position]
[iMinPrintedDigits]
[minPrintedDigits]
[iPrintZeroSetting]
[printZeroSetting]
[iMaxParsedDigits]
[maxParsedDigits]
[iRejectSignedValues]
[rejectSignedValues]
[iFieldType]
[fieldType]
[iFieldFormatters]
[fieldFormatters]
[iPrefix]
[prefix]
[iSuffix]
[suffix]
[iMinPrintedDigits]
[field, ., iMinPrintedDigits]
[field]
[iPrintZeroSetting]
[field, ., iPrintZeroSetting]
[field]
[iMaxParsedDigits]
[field, ., iMaxParsedDigits]
[field]
[iRejectSignedValues]
[field, ., iRejectSignedValues]
[field]
[iFieldType]
[field, ., iFieldType]
[field]
[iFieldFormatters]
[field, ., iFieldFormatters]
[field]
[iPrefix]
[field, ., iPrefix]
[field]
[field, ., iSuffix, !=, null]
[field, ., iSuffix]
[field]
[null]
[suffix]
[new, CompositeAffix, (, field, ., iSuffix, ,, suffix, )]
[field, ., iSuffix]
[field]
[suffix]
[iSuffix]
[suffix]
[stopAt, <=, 0]
[stopAt]
[0]
[0]
[iPrintZeroSetting, ==, PRINT_ZERO_ALWAYS, ||, getFieldValue, (, period, ), !=, Long, ., MAX_VALUE]
[iPrintZeroSetting, ==, PRINT_ZERO_ALWAYS]
[iPrintZeroSetting]
[PRINT_ZERO_ALWAYS]
[getFieldValue, (, period, ), !=, Long, ., MAX_VALUE]
[getFieldValue, (, period, )]
[period]
[Long, ., MAX_VALUE]
[Long]
[1]
[0]
[getFieldValue, (, period, )]
[period]
[valueLong, ==, Long, ., MAX_VALUE]
[valueLong]
[Long, ., MAX_VALUE]
[Long]
[0]
[Math, ., max, (, FormatUtils, ., calculateDigitCount, (, valueLong, ), ,, iMinPrintedDigits, )]
[Math]
[FormatUtils, ., calculateDigitCount, (, valueLong, )]
[FormatUtils]
[valueLong]
[iMinPrintedDigits]
[iFieldType, >=, SECONDS_MILLIS]
[iFieldType]
[SECONDS_MILLIS]
[sum]
[(, valueLong, <, 0, ?, Math, ., max, (, sum, ,, 5, ), :, Math, ., max, (, sum, ,, 4, ), )]
[valueLong, <, 0, ?, Math, ., max, (, sum, ,, 5, ), :, Math, ., max, (, sum, ,, 4, )]
[valueLong, <, 0]
[valueLong]
[0]
[Math, ., max, (, sum, ,, 5, )]
[Math]
[sum]
[5]
[Math, ., max, (, sum, ,, 4, )]
[Math]
[sum]
[4]
[sum, ++]
[sum]
[iFieldType, ==, SECONDS_OPTIONAL_MILLIS, &&, (, Math, ., abs, (, valueLong, ), %, DateTimeConstants, ., MILLIS_PER_SECOND, ), ==, 0]
[iFieldType, ==, SECONDS_OPTIONAL_MILLIS]
[iFieldType]
[SECONDS_OPTIONAL_MILLIS]
[(, Math, ., abs, (, valueLong, ), %, DateTimeConstants, ., MILLIS_PER_SECOND, ), ==, 0]
[(, Math, ., abs, (, valueLong, ), %, DateTimeConstants, ., MILLIS_PER_SECOND, )]
[Math, ., abs, (, valueLong, ), %, DateTimeConstants, ., MILLIS_PER_SECOND]
[Math, ., abs, (, valueLong, )]
[Math]
[valueLong]
[DateTimeConstants, ., MILLIS_PER_SECOND]
[DateTimeConstants]
[0]
[sum]
[4]
[valueLong]
[valueLong, /, DateTimeConstants, ., MILLIS_PER_SECOND]
[valueLong]
[DateTimeConstants, ., MILLIS_PER_SECOND]
[DateTimeConstants]
[(, int, ), valueLong]
[valueLong]
[iPrefix, !=, null]
[iPrefix]
[null]
[sum]
[iPrefix, ., calculatePrintedLength, (, value, )]
[iPrefix]
[value]
[iSuffix, !=, null]
[iSuffix]
[null]
[sum]
[iSuffix, ., calculatePrintedLength, (, value, )]
[iSuffix]
[value]
[sum]
[getFieldValue, (, period, )]
[period]
[valueLong, ==, Long, ., MAX_VALUE]
[valueLong]
[Long, ., MAX_VALUE]
[Long]
[(, int, ), valueLong]
[valueLong]
[iFieldType, >=, SECONDS_MILLIS]
[iFieldType]
[SECONDS_MILLIS]
[value]
[(, int, ), (, valueLong, /, DateTimeConstants, ., MILLIS_PER_SECOND, )]
[(, valueLong, /, DateTimeConstants, ., MILLIS_PER_SECOND, )]
[valueLong, /, DateTimeConstants, ., MILLIS_PER_SECOND]
[valueLong]
[DateTimeConstants, ., MILLIS_PER_SECOND]
[DateTimeConstants]
[iPrefix, !=, null]
[iPrefix]
[null]
[iPrefix, ., printTo, (, buf, ,, value, )]
[iPrefix]
[buf]
[value]
[buf, ., length, (, )]
[buf]
[iMinPrintedDigits]
[minDigits, <=, 1]
[minDigits]
[1]
[FormatUtils, ., appendUnpaddedInteger, (, buf, ,, value, )]
[FormatUtils]
[buf]
[value]
[FormatUtils, ., appendPaddedInteger, (, buf, ,, value, ,, minDigits, )]
[FormatUtils]
[buf]
[value]
[minDigits]
[iFieldType, >=, SECONDS_MILLIS]
[iFieldType]
[SECONDS_MILLIS]
[(, int, ), (, Math, ., abs, (, valueLong, ), %, DateTimeConstants, ., MILLIS_PER_SECOND, )]
[(, Math, ., abs, (, valueLong, ), %, DateTimeConstants, ., MILLIS_PER_SECOND, )]
[Math, ., abs, (, valueLong, ), %, DateTimeConstants, ., MILLIS_PER_SECOND]
[Math, ., abs, (, valueLong, )]
[Math]
[valueLong]
[DateTimeConstants, ., MILLIS_PER_SECOND]
[DateTimeConstants]
[iFieldType, ==, SECONDS_MILLIS, ||, dp, >, 0]
[iFieldType, ==, SECONDS_MILLIS]
[iFieldType]
[SECONDS_MILLIS]
[dp, >, 0]
[dp]
[0]
[valueLong, <, 0, &&, valueLong, >, -, DateTimeConstants, ., MILLIS_PER_SECOND]
[valueLong, <, 0]
[valueLong]
[0]
[valueLong, >, -, DateTimeConstants, ., MILLIS_PER_SECOND]
[valueLong]
[-, DateTimeConstants, ., MILLIS_PER_SECOND]
[DateTimeConstants, ., MILLIS_PER_SECOND]
[DateTimeConstants]
[buf, ., insert, (, bufLen, ,, '-', )]
[buf]
[bufLen]
['-']
[buf, ., append, (, '.', )]
[buf]
['.']
[FormatUtils, ., appendPaddedInteger, (, buf, ,, dp, ,, 3, )]
[FormatUtils]
[buf]
[dp]
[3]
[iSuffix, !=, null]
[iSuffix]
[null]
[iSuffix, ., printTo, (, buf, ,, value, )]
[iSuffix]
[buf]
[value]
[getFieldValue, (, period, )]
[period]
[valueLong, ==, Long, ., MAX_VALUE]
[valueLong]
[Long, ., MAX_VALUE]
[Long]
[(, int, ), valueLong]
[valueLong]
[iFieldType, >=, SECONDS_MILLIS]
[iFieldType]
[SECONDS_MILLIS]
[value]
[(, int, ), (, valueLong, /, DateTimeConstants, ., MILLIS_PER_SECOND, )]
[(, valueLong, /, DateTimeConstants, ., MILLIS_PER_SECOND, )]
[valueLong, /, DateTimeConstants, ., MILLIS_PER_SECOND]
[valueLong]
[DateTimeConstants, ., MILLIS_PER_SECOND]
[DateTimeConstants]
[iPrefix, !=, null]
[iPrefix]
[null]
[iPrefix, ., printTo, (, out, ,, value, )]
[iPrefix]
[out]
[value]
[iMinPrintedDigits]
[minDigits, <=, 1]
[minDigits]
[1]
[FormatUtils, ., writeUnpaddedInteger, (, out, ,, value, )]
[FormatUtils]
[out]
[value]
[FormatUtils, ., writePaddedInteger, (, out, ,, value, ,, minDigits, )]
[FormatUtils]
[out]
[value]
[minDigits]
[iFieldType, >=, SECONDS_MILLIS]
[iFieldType]
[SECONDS_MILLIS]
[(, int, ), (, Math, ., abs, (, valueLong, ), %, DateTimeConstants, ., MILLIS_PER_SECOND, )]
[(, Math, ., abs, (, valueLong, ), %, DateTimeConstants, ., MILLIS_PER_SECOND, )]
[Math, ., abs, (, valueLong, ), %, DateTimeConstants, ., MILLIS_PER_SECOND]
[Math, ., abs, (, valueLong, )]
[Math]
[valueLong]
[DateTimeConstants, ., MILLIS_PER_SECOND]
[DateTimeConstants]
[iFieldType, ==, SECONDS_MILLIS, ||, dp, >, 0]
[iFieldType, ==, SECONDS_MILLIS]
[iFieldType]
[SECONDS_MILLIS]
[dp, >, 0]
[dp]
[0]
[out, ., write, (, '.', )]
[out]
['.']
[FormatUtils, ., writePaddedInteger, (, out, ,, dp, ,, 3, )]
[FormatUtils]
[out]
[dp]
[3]
[iSuffix, !=, null]
[iSuffix]
[null]
[iSuffix, ., printTo, (, out, ,, value, )]
[iSuffix]
[out]
[value]
[(, iPrintZeroSetting, ==, PRINT_ZERO_ALWAYS, )]
[iPrintZeroSetting, ==, PRINT_ZERO_ALWAYS]
[iPrintZeroSetting]
[PRINT_ZERO_ALWAYS]
[position, >=, text, ., length, (, )]
[position]
[text, ., length, (, )]
[text]
[mustParse, ?, ~, position, :, position]
[mustParse]
[~, position]
[position]
[position]
[iPrefix, !=, null]
[iPrefix]
[null]
[position]
[iPrefix, ., parse, (, text, ,, position, )]
[iPrefix]
[text]
[position]
[position, >=, 0]
[position]
[0]
[mustParse]
[true]
[!, mustParse]
[mustParse]
[~, position]
[position]
[position]
[-, 1]
[1]
[iSuffix, !=, null, &&, !, mustParse]
[iSuffix, !=, null]
[iSuffix]
[null]
[!, mustParse]
[mustParse]
[suffixPos]
[iSuffix, ., scan, (, text, ,, position, )]
[iSuffix]
[text]
[position]
[suffixPos, >=, 0]
[suffixPos]
[0]
[mustParse]
[true]
[!, mustParse]
[mustParse]
[~, suffixPos]
[suffixPos]
[suffixPos]
[!, mustParse, &&, !, isSupported, (, period, ., getPeriodType, (, ), ,, iFieldType, )]
[!, mustParse]
[mustParse]
[!, isSupported, (, period, ., getPeriodType, (, ), ,, iFieldType, )]
[isSupported, (, period, ., getPeriodType, (, ), ,, iFieldType, )]
[period, ., getPeriodType, (, )]
[period]
[iFieldType]
[position]
[suffixPos, >, 0]
[suffixPos]
[0]
[limit]
[Math, ., min, (, iMaxParsedDigits, ,, suffixPos, -, position, )]
[Math]
[iMaxParsedDigits]
[suffixPos, -, position]
[suffixPos]
[position]
[limit]
[Math, ., min, (, iMaxParsedDigits, ,, text, ., length, (, ), -, position, )]
[Math]
[iMaxParsedDigits]
[text, ., length, (, ), -, position]
[text, ., length, (, )]
[text]
[position]
[0]
[-, 1]
[1]
[false]
[length, <, limit]
[length]
[limit]
[text, ., charAt, (, position, +, length, )]
[text]
[position, +, length]
[position]
[length]
[length, ==, 0, &&, (, c, ==, '-', ||, c, ==, '+', ), &&, !, iRejectSignedValues]
[length, ==, 0, &&, (, c, ==, '-', ||, c, ==, '+', )]
[length, ==, 0]
[length]
[0]
[(, c, ==, '-', ||, c, ==, '+', )]
[c, ==, '-', ||, c, ==, '+']
[c, ==, '-']
[c]
['-']
[c, ==, '+']
[c]
['+']
[!, iRejectSignedValues]
[iRejectSignedValues]
[c, ==, '-']
[c]
['-']
[length, +, 1, >=, limit, ||, (, c, =, text, ., charAt, (, position, +, length, +, 1, ), ), <, '0', ||, c, >, '9']
[length, +, 1, >=, limit, ||, (, c, =, text, ., charAt, (, position, +, length, +, 1, ), ), <, '0']
[length, +, 1, >=, limit]
[length, +, 1]
[length]
[1]
[limit]
[(, c, =, text, ., charAt, (, position, +, length, +, 1, ), ), <, '0']
[(, c, =, text, ., charAt, (, position, +, length, +, 1, ), )]
[c]
[text, ., charAt, (, position, +, length, +, 1, )]
[text]
[position, +, length, +, 1]
[position, +, length]
[position]
[length]
[1]
['0']
[c, >, '9']
[c]
['9']
[negative]
[length, ++]
[length]
[position, ++]
[position]
[limit]
[Math, ., min, (, limit, +, 1, ,, text, ., length, (, ), -, position, )]
[Math]
[limit, +, 1]
[limit]
[1]
[text, ., length, (, ), -, position]
[text, ., length, (, )]
[text]
[position]
[c, >=, '0', &&, c, <=, '9']
[c, >=, '0']
[c]
['0']
[c, <=, '9']
[c]
['9']
[hasDigits]
[true]
[(, c, ==, '.', ||, c, ==, ',', ), &&, (, iFieldType, ==, SECONDS_MILLIS, ||, iFieldType, ==, SECONDS_OPTIONAL_MILLIS, )]
[(, c, ==, '.', ||, c, ==, ',', )]
[c, ==, '.', ||, c, ==, ',']
[c, ==, '.']
[c]
['.']
[c, ==, ',']
[c]
[',']
[(, iFieldType, ==, SECONDS_MILLIS, ||, iFieldType, ==, SECONDS_OPTIONAL_MILLIS, )]
[iFieldType, ==, SECONDS_MILLIS, ||, iFieldType, ==, SECONDS_OPTIONAL_MILLIS]
[iFieldType, ==, SECONDS_MILLIS]
[iFieldType]
[SECONDS_MILLIS]
[iFieldType, ==, SECONDS_OPTIONAL_MILLIS]
[iFieldType]
[SECONDS_OPTIONAL_MILLIS]
[fractPos, >=, 0]
[fractPos]
[0]
[fractPos]
[position, +, length, +, 1]
[position, +, length]
[position]
[length]
[1]
[limit]
[Math, ., min, (, limit, +, 1, ,, text, ., length, (, ), -, position, )]
[Math]
[limit, +, 1]
[limit]
[1]
[text, ., length, (, ), -, position]
[text, ., length, (, )]
[text]
[position]
[length, ++]
[length]
[!, hasDigits]
[hasDigits]
[~, position]
[position]
[suffixPos, >=, 0, &&, position, +, length, !=, suffixPos]
[suffixPos, >=, 0]
[suffixPos]
[0]
[position, +, length, !=, suffixPos]
[position, +, length]
[position]
[length]
[suffixPos]
[position]
[iFieldType, !=, SECONDS_MILLIS, &&, iFieldType, !=, SECONDS_OPTIONAL_MILLIS]
[iFieldType, !=, SECONDS_MILLIS]
[iFieldType]
[SECONDS_MILLIS]
[iFieldType, !=, SECONDS_OPTIONAL_MILLIS]
[iFieldType]
[SECONDS_OPTIONAL_MILLIS]
[setFieldValue, (, period, ,, iFieldType, ,, parseInt, (, text, ,, position, ,, length, ), )]
[period]
[iFieldType]
[parseInt, (, text, ,, position, ,, length, )]
[text]
[position]
[length]
[fractPos, <, 0]
[fractPos]
[0]
[setFieldValue, (, period, ,, SECONDS, ,, parseInt, (, text, ,, position, ,, length, ), )]
[period]
[SECONDS]
[parseInt, (, text, ,, position, ,, length, )]
[text]
[position]
[length]
[setFieldValue, (, period, ,, MILLIS, ,, 0, )]
[period]
[MILLIS]
[0]
[parseInt, (, text, ,, position, ,, fractPos, -, position, -, 1, )]
[text]
[position]
[fractPos, -, position, -, 1]
[fractPos, -, position]
[fractPos]
[position]
[1]
[setFieldValue, (, period, ,, SECONDS, ,, wholeValue, )]
[period]
[SECONDS]
[wholeValue]
[position, +, length, -, fractPos]
[position, +, length]
[position]
[length]
[fractPos]
[fractLen, <=, 0]
[fractLen]
[0]
[fractValue]
[0]
[fractLen, >=, 3]
[fractLen]
[3]
[fractValue]
[parseInt, (, text, ,, fractPos, ,, 3, )]
[text]
[fractPos]
[3]
[fractValue]
[parseInt, (, text, ,, fractPos, ,, fractLen, )]
[text]
[fractPos]
[fractLen]
[fractLen, ==, 1]
[fractLen]
[1]
[fractValue]
[100]
[fractValue]
[10]
[wholeValue, <, 0]
[wholeValue]
[0]
[fractValue]
[-, fractValue]
[fractValue]
[setFieldValue, (, period, ,, MILLIS, ,, fractValue, )]
[period]
[MILLIS]
[fractValue]
[position]
[length]
[position, >=, 0, &&, iSuffix, !=, null]
[position, >=, 0]
[position]
[0]
[iSuffix, !=, null]
[iSuffix]
[null]
[position]
[iSuffix, ., parse, (, text, ,, position, )]
[iSuffix]
[text]
[position]
[position]
[length, >=, 10]
[length]
[10]
[Integer, ., parseInt, (, text, ., substring, (, position, ,, position, +, length, ), )]
[Integer]
[text, ., substring, (, position, ,, position, +, length, )]
[text]
[position]
[position, +, length]
[position]
[length]
[length, <=, 0]
[length]
[0]
[0]
[text, ., charAt, (, position, ++, )]
[text]
[position, ++]
[position]
[length, --]
[length]
[value, ==, '-']
[value]
['-']
[--, length, <, 0]
[--, length]
[length]
[0]
[0]
[negative]
[true]
[value]
[text, ., charAt, (, position, ++, )]
[text]
[position, ++]
[position]
[negative]
[false]
[value]
['0']
[length, --, >, 0]
[length, --]
[length]
[0]
[value]
[(, (, value, <<, 3, ), +, (, value, <<, 1, ), ), +, text, ., charAt, (, position, ++, ), -, '0']
[(, (, value, <<, 3, ), +, (, value, <<, 1, ), ), +, text, ., charAt, (, position, ++, )]
[(, (, value, <<, 3, ), +, (, value, <<, 1, ), )]
[(, value, <<, 3, ), +, (, value, <<, 1, )]
[(, value, <<, 3, )]
[value, <<, 3]
[value]
[3]
[(, value, <<, 1, )]
[value, <<, 1]
[value]
[1]
[text, ., charAt, (, position, ++, )]
[text]
[position, ++]
[position]
['0']
[negative, ?, -, value, :, value]
[negative]
[-, value]
[value]
[value]
[iPrintZeroSetting, ==, PRINT_ZERO_ALWAYS]
[iPrintZeroSetting]
[PRINT_ZERO_ALWAYS]
[type]
[null]
[type]
[period, ., getPeriodType, (, )]
[period]
[type, !=, null, &&, isSupported, (, type, ,, iFieldType, ), ==, false]
[type, !=, null]
[type]
[null]
[isSupported, (, type, ,, iFieldType, ), ==, false]
[isSupported, (, type, ,, iFieldType, )]
[type]
[iFieldType]
[false]
[Long, ., MAX_VALUE]
[Long]
[iFieldType]
[Long, ., MAX_VALUE]
[Long]
[YEARS]
[value]
[period, ., get, (, DurationFieldType, ., years, (, ), )]
[period]
[DurationFieldType, ., years, (, )]
[DurationFieldType]
[MONTHS]
[value]
[period, ., get, (, DurationFieldType, ., months, (, ), )]
[period]
[DurationFieldType, ., months, (, )]
[DurationFieldType]
[WEEKS]
[value]
[period, ., get, (, DurationFieldType, ., weeks, (, ), )]
[period]
[DurationFieldType, ., weeks, (, )]
[DurationFieldType]
[DAYS]
[value]
[period, ., get, (, DurationFieldType, ., days, (, ), )]
[period]
[DurationFieldType, ., days, (, )]
[DurationFieldType]
[HOURS]
[value]
[period, ., get, (, DurationFieldType, ., hours, (, ), )]
[period]
[DurationFieldType, ., hours, (, )]
[DurationFieldType]
[MINUTES]
[value]
[period, ., get, (, DurationFieldType, ., minutes, (, ), )]
[period]
[DurationFieldType, ., minutes, (, )]
[DurationFieldType]
[SECONDS]
[value]
[period, ., get, (, DurationFieldType, ., seconds, (, ), )]
[period]
[DurationFieldType, ., seconds, (, )]
[DurationFieldType]
[MILLIS]
[value]
[period, ., get, (, DurationFieldType, ., millis, (, ), )]
[period]
[DurationFieldType, ., millis, (, )]
[DurationFieldType]
[SECONDS_MILLIS]
[SECONDS_OPTIONAL_MILLIS]
[period, ., get, (, DurationFieldType, ., seconds, (, ), )]
[period]
[DurationFieldType, ., seconds, (, )]
[DurationFieldType]
[period, ., get, (, DurationFieldType, ., millis, (, ), )]
[period]
[DurationFieldType, ., millis, (, )]
[DurationFieldType]
[value]
[(, seconds, *, (, long, ), DateTimeConstants, ., MILLIS_PER_SECOND, ), +, millis]
[(, seconds, *, (, long, ), DateTimeConstants, ., MILLIS_PER_SECOND, )]
[seconds, *, (, long, ), DateTimeConstants, ., MILLIS_PER_SECOND]
[seconds]
[(, long, ), DateTimeConstants, ., MILLIS_PER_SECOND]
[DateTimeConstants, ., MILLIS_PER_SECOND]
[DateTimeConstants]
[millis]
[value, ==, 0]
[value]
[0]
[iPrintZeroSetting]
[PRINT_ZERO_NEVER]
[Long, ., MAX_VALUE]
[Long]
[PRINT_ZERO_RARELY_LAST]
[isZero, (, period, ), &&, iFieldFormatters, [, iFieldType, ], ==, this]
[isZero, (, period, )]
[period]
[iFieldFormatters, [, iFieldType, ], ==, this]
[iFieldFormatters, [, iFieldType, ]]
[iFieldFormatters]
[iFieldType]
[this]
[iFieldType, +, 1]
[iFieldType]
[1]
[i, <=, MAX_FIELD]
[i]
[MAX_FIELD]
[i, ++]
[i]
[isSupported, (, type, ,, i, ), &&, iFieldFormatters, [, i, ], !=, null]
[isSupported, (, type, ,, i, )]
[type]
[i]
[iFieldFormatters, [, i, ], !=, null]
[iFieldFormatters, [, i, ]]
[iFieldFormatters]
[i]
[null]
[Long, ., MAX_VALUE]
[Long]
[Long, ., MAX_VALUE]
[Long]
[PRINT_ZERO_RARELY_FIRST]
[isZero, (, period, ), &&, iFieldFormatters, [, iFieldType, ], ==, this]
[isZero, (, period, )]
[period]
[iFieldFormatters, [, iFieldType, ], ==, this]
[iFieldFormatters, [, iFieldType, ]]
[iFieldFormatters]
[iFieldType]
[this]
[Math, ., min, (, iFieldType, ,, 8, )]
[Math]
[iFieldType]
[8]
[i, --]
[i]
[i, >=, 0, &&, i, <=, MAX_FIELD]
[i, >=, 0]
[i]
[0]
[i, <=, MAX_FIELD]
[i]
[MAX_FIELD]
[i, --]
[i]
[isSupported, (, type, ,, i, ), &&, iFieldFormatters, [, i, ], !=, null]
[isSupported, (, type, ,, i, )]
[type]
[i]
[iFieldFormatters, [, i, ], !=, null]
[iFieldFormatters, [, i, ]]
[iFieldFormatters]
[i]
[null]
[Long, ., MAX_VALUE]
[Long]
[Long, ., MAX_VALUE]
[Long]
[value]
[0]
[period, ., size, (, )]
[period]
[i, <, isize]
[i]
[isize]
[i, ++]
[i]
[period, ., getValue, (, i, ), !=, 0]
[period, ., getValue, (, i, )]
[period]
[i]
[0]
[false]
[true]
[field]
[false]
[YEARS]
[type, ., isSupported, (, DurationFieldType, ., years, (, ), )]
[type]
[DurationFieldType, ., years, (, )]
[DurationFieldType]
[MONTHS]
[type, ., isSupported, (, DurationFieldType, ., months, (, ), )]
[type]
[DurationFieldType, ., months, (, )]
[DurationFieldType]
[WEEKS]
[type, ., isSupported, (, DurationFieldType, ., weeks, (, ), )]
[type]
[DurationFieldType, ., weeks, (, )]
[DurationFieldType]
[DAYS]
[type, ., isSupported, (, DurationFieldType, ., days, (, ), )]
[type]
[DurationFieldType, ., days, (, )]
[DurationFieldType]
[HOURS]
[type, ., isSupported, (, DurationFieldType, ., hours, (, ), )]
[type]
[DurationFieldType, ., hours, (, )]
[DurationFieldType]
[MINUTES]
[type, ., isSupported, (, DurationFieldType, ., minutes, (, ), )]
[type]
[DurationFieldType, ., minutes, (, )]
[DurationFieldType]
[SECONDS]
[type, ., isSupported, (, DurationFieldType, ., seconds, (, ), )]
[type]
[DurationFieldType, ., seconds, (, )]
[DurationFieldType]
[MILLIS]
[type, ., isSupported, (, DurationFieldType, ., millis, (, ), )]
[type]
[DurationFieldType, ., millis, (, )]
[DurationFieldType]
[SECONDS_MILLIS]
[SECONDS_OPTIONAL_MILLIS]
[type, ., isSupported, (, DurationFieldType, ., seconds, (, ), ), ||, type, ., isSupported, (, DurationFieldType, ., millis, (, ), )]
[type, ., isSupported, (, DurationFieldType, ., seconds, (, ), )]
[type]
[DurationFieldType, ., seconds, (, )]
[DurationFieldType]
[type, ., isSupported, (, DurationFieldType, ., millis, (, ), )]
[type]
[DurationFieldType, ., millis, (, )]
[DurationFieldType]
[field]
[YEARS]
[period, ., setYears, (, value, )]
[period]
[value]
[MONTHS]
[period, ., setMonths, (, value, )]
[period]
[value]
[WEEKS]
[period, ., setWeeks, (, value, )]
[period]
[value]
[DAYS]
[period, ., setDays, (, value, )]
[period]
[value]
[HOURS]
[period, ., setHours, (, value, )]
[period]
[value]
[MINUTES]
[period, ., setMinutes, (, value, )]
[period]
[value]
[SECONDS]
[period, ., setSeconds, (, value, )]
[period]
[value]
[MILLIS]
[period, ., setMillis, (, value, )]
[period]
[value]
[iFieldType]
[new, Literal, (, "", )]
[""]
[iText]
[text]
[0]
[iText, ., length, (, )]
[iText]
[buf, ., append, (, iText, )]
[buf]
[iText]
[out, ., write, (, iText, )]
[out]
[iText]
[periodStr, ., regionMatches, (, true, ,, position, ,, iText, ,, 0, ,, iText, ., length, (, ), )]
[periodStr]
[true]
[position]
[iText]
[0]
[iText, ., length, (, )]
[iText]
[position, +, iText, ., length, (, )]
[position]
[iText, ., length, (, )]
[iText]
[~, position]
[position]
[iText]
[text]
[iFinalText]
[finalText]
[(, finalText, ==, null, ||, text, ., equals, (, finalText, ), ), &&, (, variants, ==, null, ||, variants, ., length, ==, 0, )]
[(, finalText, ==, null, ||, text, ., equals, (, finalText, ), )]
[finalText, ==, null, ||, text, ., equals, (, finalText, )]
[finalText, ==, null]
[finalText]
[null]
[text, ., equals, (, finalText, )]
[text]
[finalText]
[(, variants, ==, null, ||, variants, ., length, ==, 0, )]
[variants, ==, null, ||, variants, ., length, ==, 0]
[variants, ==, null]
[variants]
[null]
[variants, ., length, ==, 0]
[variants, ., length]
[variants]
[0]
[iParsedForms]
[new, String, [, ], {, text, }]
[{, text, }]
[text]
[new, TreeSet, <, String, >, (, String, ., CASE_INSENSITIVE_ORDER, )]
[String, ., CASE_INSENSITIVE_ORDER]
[String]
[parsedSet, ., add, (, text, )]
[parsedSet]
[text]
[parsedSet, ., add, (, finalText, )]
[parsedSet]
[finalText]
[variants, !=, null]
[variants]
[null]
[variants, ., length]
[variants]
[--, i, >=, 0]
[--, i]
[i]
[0]
[parsedSet, ., add, (, variants, [, i, ], )]
[parsedSet]
[variants, [, i, ]]
[variants]
[i]
[new, ArrayList, <, String, >, (, parsedSet, )]
[parsedSet]
[Collections, ., reverse, (, parsedList, )]
[Collections]
[parsedList]
[iParsedForms]
[parsedList, ., toArray, (, new, String, [, parsedList, ., size, (, ), ], )]
[parsedList]
[new, String, [, parsedList, ., size, (, ), ]]
[parsedList, ., size, (, )]
[parsedList]
[iBeforePrinter]
[beforePrinter]
[iBeforeParser]
[beforeParser]
[iUseBefore]
[useBefore]
[iUseAfter]
[useAfter]
[iBeforePrinter, ., countFieldsToPrint, (, period, ,, stopAt, ,, locale, )]
[iBeforePrinter]
[period]
[stopAt]
[locale]
[sum, <, stopAt]
[sum]
[stopAt]
[sum]
[iAfterPrinter, ., countFieldsToPrint, (, period, ,, stopAt, ,, locale, )]
[iAfterPrinter]
[period]
[stopAt]
[locale]
[sum]
[iBeforePrinter]
[iAfterPrinter]
[before, ., calculatePrintedLength, (, period, ,, locale, ), +, after, ., calculatePrintedLength, (, period, ,, locale, )]
[before, ., calculatePrintedLength, (, period, ,, locale, )]
[before]
[period]
[locale]
[after, ., calculatePrintedLength, (, period, ,, locale, )]
[after]
[period]
[locale]
[iUseBefore]
[before, ., countFieldsToPrint, (, period, ,, 1, ,, locale, ), >, 0]
[before, ., countFieldsToPrint, (, period, ,, 1, ,, locale, )]
[before]
[period]
[1]
[locale]
[0]
[iUseAfter]
[after, ., countFieldsToPrint, (, period, ,, 2, ,, locale, )]
[after]
[period]
[2]
[locale]
[afterCount, >, 0]
[afterCount]
[0]
[sum]
[(, afterCount, >, 1, ?, iText, :, iFinalText, ), ., length, (, )]
[(, afterCount, >, 1, ?, iText, :, iFinalText, )]
[afterCount, >, 1, ?, iText, :, iFinalText]
[afterCount, >, 1]
[afterCount]
[1]
[iText]
[iFinalText]
[sum]
[iText, ., length, (, )]
[iText]
[iUseAfter, &&, after, ., countFieldsToPrint, (, period, ,, 1, ,, locale, ), >, 0]
[iUseAfter]
[after, ., countFieldsToPrint, (, period, ,, 1, ,, locale, ), >, 0]
[after, ., countFieldsToPrint, (, period, ,, 1, ,, locale, )]
[after]
[period]
[1]
[locale]
[0]
[sum]
[iText, ., length, (, )]
[iText]
[sum]
[iBeforePrinter]
[iAfterPrinter]
[before, ., printTo, (, buf, ,, period, ,, locale, )]
[before]
[buf]
[period]
[locale]
[iUseBefore]
[before, ., countFieldsToPrint, (, period, ,, 1, ,, locale, ), >, 0]
[before, ., countFieldsToPrint, (, period, ,, 1, ,, locale, )]
[before]
[period]
[1]
[locale]
[0]
[iUseAfter]
[after, ., countFieldsToPrint, (, period, ,, 2, ,, locale, )]
[after]
[period]
[2]
[locale]
[afterCount, >, 0]
[afterCount]
[0]
[buf, ., append, (, afterCount, >, 1, ?, iText, :, iFinalText, )]
[buf]
[afterCount, >, 1, ?, iText, :, iFinalText]
[afterCount, >, 1]
[afterCount]
[1]
[iText]
[iFinalText]
[buf, ., append, (, iText, )]
[buf]
[iText]
[iUseAfter, &&, after, ., countFieldsToPrint, (, period, ,, 1, ,, locale, ), >, 0]
[iUseAfter]
[after, ., countFieldsToPrint, (, period, ,, 1, ,, locale, ), >, 0]
[after, ., countFieldsToPrint, (, period, ,, 1, ,, locale, )]
[after]
[period]
[1]
[locale]
[0]
[buf, ., append, (, iText, )]
[buf]
[iText]
[after, ., printTo, (, buf, ,, period, ,, locale, )]
[after]
[buf]
[period]
[locale]
[iBeforePrinter]
[iAfterPrinter]
[before, ., printTo, (, out, ,, period, ,, locale, )]
[before]
[out]
[period]
[locale]
[iUseBefore]
[before, ., countFieldsToPrint, (, period, ,, 1, ,, locale, ), >, 0]
[before, ., countFieldsToPrint, (, period, ,, 1, ,, locale, )]
[before]
[period]
[1]
[locale]
[0]
[iUseAfter]
[after, ., countFieldsToPrint, (, period, ,, 2, ,, locale, )]
[after]
[period]
[2]
[locale]
[afterCount, >, 0]
[afterCount]
[0]
[out, ., write, (, afterCount, >, 1, ?, iText, :, iFinalText, )]
[out]
[afterCount, >, 1, ?, iText, :, iFinalText]
[afterCount, >, 1]
[afterCount]
[1]
[iText]
[iFinalText]
[out, ., write, (, iText, )]
[out]
[iText]
[iUseAfter, &&, after, ., countFieldsToPrint, (, period, ,, 1, ,, locale, ), >, 0]
[iUseAfter]
[after, ., countFieldsToPrint, (, period, ,, 1, ,, locale, ), >, 0]
[after, ., countFieldsToPrint, (, period, ,, 1, ,, locale, )]
[after]
[period]
[1]
[locale]
[0]
[out, ., write, (, iText, )]
[out]
[iText]
[after, ., printTo, (, out, ,, period, ,, locale, )]
[after]
[out]
[period]
[locale]
[position]
[position]
[iBeforeParser, ., parseInto, (, period, ,, periodStr, ,, position, ,, locale, )]
[iBeforeParser]
[period]
[periodStr]
[position]
[locale]
[position, <, 0]
[position]
[0]
[position]
[false]
[-, 1]
[1]
[position, >, oldPos]
[position]
[oldPos]
[iParsedForms]
[parsedForms, ., length]
[parsedForms]
[0]
[i, <, length]
[i]
[length]
[i, ++]
[i]
[parsedForms, [, i, ]]
[parsedForms]
[i]
[(, parsedForm, ==, null, ||, parsedForm, ., length, (, ), ==, 0, ), ||, periodStr, ., regionMatches, (, true, ,, position, ,, parsedForm, ,, 0, ,, parsedForm, ., length, (, ), )]
[(, parsedForm, ==, null, ||, parsedForm, ., length, (, ), ==, 0, )]
[parsedForm, ==, null, ||, parsedForm, ., length, (, ), ==, 0]
[parsedForm, ==, null]
[parsedForm]
[null]
[parsedForm, ., length, (, ), ==, 0]
[parsedForm, ., length, (, )]
[parsedForm]
[0]
[periodStr, ., regionMatches, (, true, ,, position, ,, parsedForm, ,, 0, ,, parsedForm, ., length, (, ), )]
[periodStr]
[true]
[position]
[parsedForm]
[0]
[parsedForm, ., length, (, )]
[parsedForm]
[parsedFormLength]
[(, parsedForm, ==, null, ?, 0, :, parsedForm, ., length, (, ), )]
[parsedForm, ==, null, ?, 0, :, parsedForm, ., length, (, )]
[parsedForm, ==, null]
[parsedForm]
[null]
[0]
[parsedForm, ., length, (, )]
[parsedForm]
[position]
[parsedFormLength]
[found]
[true]
[oldPos]
[position]
[position]
[iAfterParser, ., parseInto, (, period, ,, periodStr, ,, position, ,, locale, )]
[iAfterParser]
[period]
[periodStr]
[position]
[locale]
[position, <, 0]
[position]
[0]
[position]
[found, &&, position, ==, oldPos, &&, parsedFormLength, >, 0]
[found, &&, position, ==, oldPos]
[found]
[position, ==, oldPos]
[position]
[oldPos]
[parsedFormLength, >, 0]
[parsedFormLength]
[0]
[~, oldPos]
[oldPos]
[position, >, oldPos, &&, !, found, &&, !, iUseBefore]
[position, >, oldPos, &&, !, found]
[position, >, oldPos]
[position]
[oldPos]
[!, found]
[found]
[!, iUseBefore]
[iUseBefore]
[~, oldPos]
[oldPos]
[position]
[iAfterPrinter]
[afterPrinter]
[iAfterParser]
[afterParser]
[this]
[new, ArrayList, <, Object, >, (, )]
[new, ArrayList, <, Object, >, (, )]
[decompose, (, elementPairs, ,, printerList, ,, parserList, )]
[elementPairs]
[printerList]
[parserList]
[printerList, ., size, (, ), <=, 0]
[printerList, ., size, (, )]
[printerList]
[0]
[iPrinters]
[null]
[iPrinters]
[printerList, ., toArray, (, new, PeriodPrinter, [, printerList, ., size, (, ), ], )]
[printerList]
[new, PeriodPrinter, [, printerList, ., size, (, ), ]]
[printerList, ., size, (, )]
[printerList]
[parserList, ., size, (, ), <=, 0]
[parserList, ., size, (, )]
[parserList]
[0]
[iParsers]
[null]
[iParsers]
[parserList, ., toArray, (, new, PeriodParser, [, parserList, ., size, (, ), ], )]
[parserList]
[new, PeriodParser, [, parserList, ., size, (, ), ]]
[parserList, ., size, (, )]
[parserList]
[0]
[iPrinters]
[printers, ., length]
[printers]
[sum, <, stopAt, &&, --, i, >=, 0]
[sum, <, stopAt]
[sum]
[stopAt]
[--, i, >=, 0]
[--, i]
[i]
[0]
[sum]
[printers, [, i, ], ., countFieldsToPrint, (, period, ,, Integer, ., MAX_VALUE, ,, locale, )]
[printers, [, i, ]]
[printers]
[i]
[period]
[Integer, ., MAX_VALUE]
[Integer]
[locale]
[sum]
[0]
[iPrinters]
[printers, ., length]
[printers]
[--, i, >=, 0]
[--, i]
[i]
[0]
[sum]
[printers, [, i, ], ., calculatePrintedLength, (, period, ,, locale, )]
[printers, [, i, ]]
[printers]
[i]
[period]
[locale]
[sum]
[iPrinters]
[printers, ., length]
[printers]
[0]
[i, <, len]
[i]
[len]
[i, ++]
[i]
[printers, [, i, ], ., printTo, (, buf, ,, period, ,, locale, )]
[printers, [, i, ]]
[printers]
[i]
[buf]
[period]
[locale]
[iPrinters]
[printers, ., length]
[printers]
[0]
[i, <, len]
[i]
[len]
[i, ++]
[i]
[printers, [, i, ], ., printTo, (, out, ,, period, ,, locale, )]
[printers, [, i, ]]
[printers]
[i]
[out]
[period]
[locale]
[iParsers]
[parsers, ==, null]
[parsers]
[null]
[new, UnsupportedOperationException, (, )]
[parsers, ., length]
[parsers]
[0]
[i, <, len, &&, position, >=, 0]
[i, <, len]
[i]
[len]
[position, >=, 0]
[position]
[0]
[i, ++]
[i]
[position]
[parsers, [, i, ], ., parseInto, (, period, ,, periodStr, ,, position, ,, locale, )]
[parsers, [, i, ]]
[parsers]
[i]
[period]
[periodStr]
[position]
[locale]
[position]
[elementPairs, ., size, (, )]
[elementPairs]
[0]
[i, <, size]
[i]
[size]
[i]
[2]
[elementPairs, ., get, (, i, )]
[elementPairs]
[i]
[element, instanceof, PeriodPrinter]
[element]
[element, instanceof, Composite]
[element]
[addArrayToList, (, printerList, ,, (, (, Composite, ), element, ), ., iPrinters, )]
[printerList]
[(, (, Composite, ), element, ), ., iPrinters]
[(, (, Composite, ), element, )]
[(, Composite, ), element]
[element]
[printerList, ., add, (, element, )]
[printerList]
[element]
[element]
[elementPairs, ., get, (, i, +, 1, )]
[elementPairs]
[i, +, 1]
[i]
[1]
[element, instanceof, PeriodParser]
[element]
[element, instanceof, Composite]
[element]
[addArrayToList, (, parserList, ,, (, (, Composite, ), element, ), ., iParsers, )]
[parserList]
[(, (, Composite, ), element, ), ., iParsers]
[(, (, Composite, ), element, )]
[(, Composite, ), element]
[element]
[parserList, ., add, (, element, )]
[parserList]
[element]
[array, !=, null]
[array]
[null]
[0]
[i, <, array, ., length]
[i]
[array, ., length]
[array]
[i, ++]
[i]
[list, ., add, (, array, [, i, ], )]
[list]
[array, [, i, ]]
[array]
[i]
