[JSError, ., make, (, NodeUtil, ., getSourceName, (, n, ), ,, n, ,, diagnostic, ,, n, ., toString, (, ), )]
[JSError]
[NodeUtil, ., getSourceName, (, n, )]
[NodeUtil]
[n]
[n]
[diagnostic]
[n, ., toString, (, )]
[n]
[compiler, ., report, (, error, )]
[compiler]
[error]
[Preconditions, ., checkNotNull, (, compiler, )]
[Preconditions]
[compiler]
[compiler, ., reportCodeChange, (, )]
[compiler]
[Preconditions, ., checkNotNull, (, compiler, )]
[Preconditions]
[compiler]
[compiler, ., areNodesEqualForInlining, (, n1, ,, n2, )]
[compiler]
[n1]
[n2]
[Preconditions, ., checkNotNull, (, compiler, )]
[Preconditions]
[compiler]
[compiler, ., getLifeCycleStage, (, ), ., isNormalized, (, )]
[compiler, ., getLifeCycleStage, (, )]
[compiler]
[this, ., compiler]
[this]
[compiler]
[this, ., compiler]
[this]
[null]
[NodeUtil, ., mayEffectMutableState, (, n, ,, compiler, )]
[NodeUtil]
[n]
[compiler]
[NodeUtil, ., mayHaveSideEffects, (, n, ,, compiler, )]
[NodeUtil]
[n]
[compiler]
[NodeUtil, ., nodeTypeMayHaveSideEffects, (, n, ,, compiler, )]
[NodeUtil]
[n]
[compiler]
[compiler, !=, null, &&, compiler, ., acceptEcmaScript5, (, )]
[compiler, !=, null]
[compiler]
[null]
[compiler, ., acceptEcmaScript5, (, )]
[compiler]
[compiler, ., getCodingConvention, (, )]
[compiler]
[n, !=, null, &&, !, n, ., isScript, (, ), &&, (, !, n, ., isBlock, (, ), ||, !, n, ., isSyntheticBlock, (, ), )]
[n, !=, null, &&, !, n, ., isScript, (, )]
[n, !=, null]
[n]
[null]
[!, n, ., isScript, (, )]
[n, ., isScript, (, )]
[n]
[(, !, n, ., isBlock, (, ), ||, !, n, ., isSyntheticBlock, (, ), )]
[!, n, ., isBlock, (, ), ||, !, n, ., isSyntheticBlock, (, )]
[!, n, ., isBlock, (, )]
[n, ., isBlock, (, )]
[n]
[!, n, ., isSyntheticBlock, (, )]
[n, ., isSyntheticBlock, (, )]
[n]
[n, ., getAncestors, (, )]
[n]
[parent, ., isScript, (, )]
[parent]
[Preconditions, ., checkState, (, false, )]
[Preconditions]
[false]
[n]
