[new, RandomGenerator, (, ), {, public, void, setSeed, (, int, seed, ), {, rng, ., setSeed, (, (, long, ), seed, ), ;, }, public, void, setSeed, (, int, [, ], seed, ), {, rng, ., setSeed, (, convertToLong, (, seed, ), ), ;, }, public, void, setSeed, (, long, seed, ), {, rng, ., setSeed, (, seed, ), ;, }, public, void, nextBytes, (, byte, [, ], bytes, ), {, rng, ., nextBytes, (, bytes, ), ;, }, public, int, nextInt, (, ), {, return, rng, ., nextInt, (, ), ;, }, public, int, nextInt, (, int, n, ), {, if, (, n, <=, 0, ), {, throw, new, NotStrictlyPositiveException, (, n, ), ;, }, return, rng, ., nextInt, (, n, ), ;, }, public, long, nextLong, (, ), {, return, rng, ., nextLong, (, ), ;, }, public, boolean, nextBoolean, (, ), {, return, rng, ., nextBoolean, (, ), ;, }, public, float, nextFloat, (, ), {, return, rng, ., nextFloat, (, ), ;, }, public, double, nextDouble, (, ), {, return, rng, ., nextDouble, (, ), ;, }, public, double, nextGaussian, (, ), {, return, rng, ., nextGaussian, (, ), ;, }, }]
[rng, ., setSeed, (, (, long, ), seed, )]
[rng]
[(, long, ), seed]
[seed]
[rng, ., setSeed, (, convertToLong, (, seed, ), )]
[rng]
[convertToLong, (, seed, )]
[seed]
[rng, ., setSeed, (, seed, )]
[rng]
[seed]
[rng, ., nextBytes, (, bytes, )]
[rng]
[bytes]
[rng, ., nextInt, (, )]
[rng]
[n, <=, 0]
[n]
[0]
[new, NotStrictlyPositiveException, (, n, )]
[n]
[rng, ., nextInt, (, n, )]
[rng]
[n]
[rng, ., nextLong, (, )]
[rng]
[rng, ., nextBoolean, (, )]
[rng]
[rng, ., nextFloat, (, )]
[rng]
[rng, ., nextDouble, (, )]
[rng]
[rng, ., nextGaussian, (, )]
[rng]
[4294967291l]
[0l]
[seed]
[combined]
[combined, *, prime, +, s]
[combined, *, prime]
[combined]
[prime]
[s]
[combined]
