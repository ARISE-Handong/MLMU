[20120212L]
[this, ., normalization]
[this]
[normalization]
[type, ==, TransformType, ., FORWARD]
[type]
[TransformType, ., FORWARD]
[TransformType]
[normalization, ==, DctNormalization, ., ORTHOGONAL_DCT_I]
[normalization]
[DctNormalization, ., ORTHOGONAL_DCT_I]
[DctNormalization]
[FastMath, ., sqrt, (, 2.0, /, (, f, ., length, -, 1, ), )]
[FastMath]
[2.0, /, (, f, ., length, -, 1, )]
[2.0]
[(, f, ., length, -, 1, )]
[f, ., length, -, 1]
[f, ., length]
[f]
[1]
[TransformUtils, ., scaleArray, (, fct, (, f, ), ,, s, )]
[TransformUtils]
[fct, (, f, )]
[f]
[s]
[fct, (, f, )]
[f]
[2.0, /, (, f, ., length, -, 1, )]
[2.0]
[(, f, ., length, -, 1, )]
[f, ., length, -, 1]
[f, ., length]
[f]
[1]
[normalization, ==, DctNormalization, ., ORTHOGONAL_DCT_I]
[normalization]
[DctNormalization, ., ORTHOGONAL_DCT_I]
[DctNormalization]
[s1]
[FastMath, ., sqrt, (, s2, )]
[FastMath]
[s2]
[s1]
[s2]
[TransformUtils, ., scaleArray, (, fct, (, f, ), ,, s1, )]
[TransformUtils]
[fct, (, f, )]
[f]
[s1]
[FunctionUtils, ., sample, (, f, ,, min, ,, max, ,, n, )]
[FunctionUtils]
[f]
[min]
[max]
[n]
[transform, (, data, ,, type, )]
[data]
[type]
[new, double, [, f, ., length, ]]
[f, ., length]
[f]
[f, ., length, -, 1]
[f, ., length]
[f]
[1]
[!, ArithmeticUtils, ., isPowerOfTwo, (, n, )]
[ArithmeticUtils, ., isPowerOfTwo, (, n, )]
[ArithmeticUtils]
[n]
[new, MathIllegalArgumentException, (, LocalizedFormats, ., NOT_POWER_OF_TWO_PLUS_ONE, ,, Integer, ., valueOf, (, f, ., length, ), )]
[LocalizedFormats, ., NOT_POWER_OF_TWO_PLUS_ONE]
[LocalizedFormats]
[Integer, ., valueOf, (, f, ., length, )]
[Integer]
[f, ., length]
[f]
[n, ==, 1]
[n]
[1]
[transformed, [, 0, ]]
[transformed]
[0]
[0.5, *, (, f, [, 0, ], +, f, [, 1, ], )]
[0.5]
[(, f, [, 0, ], +, f, [, 1, ], )]
[f, [, 0, ], +, f, [, 1, ]]
[f, [, 0, ]]
[f]
[0]
[f, [, 1, ]]
[f]
[1]
[transformed, [, 1, ]]
[transformed]
[1]
[0.5, *, (, f, [, 0, ], -, f, [, 1, ], )]
[0.5]
[(, f, [, 0, ], -, f, [, 1, ], )]
[f, [, 0, ], -, f, [, 1, ]]
[f, [, 0, ]]
[f]
[0]
[f, [, 1, ]]
[f]
[1]
[transformed]
[new, double, [, n, ]]
[n]
[x, [, 0, ]]
[x]
[0]
[0.5, *, (, f, [, 0, ], +, f, [, n, ], )]
[0.5]
[(, f, [, 0, ], +, f, [, n, ], )]
[f, [, 0, ], +, f, [, n, ]]
[f, [, 0, ]]
[f]
[0]
[f, [, n, ]]
[f]
[n]
[x, [, n, >, >, 1, ]]
[x]
[n, >, >, 1]
[n]
[1]
[f, [, n, >, >, 1, ]]
[f]
[n, >, >, 1]
[n]
[1]
[0.5, *, (, f, [, 0, ], -, f, [, n, ], )]
[0.5]
[(, f, [, 0, ], -, f, [, n, ], )]
[f, [, 0, ], -, f, [, n, ]]
[f, [, 0, ]]
[f]
[0]
[f, [, n, ]]
[f]
[n]
[1]
[i, <, (, n, >, >, 1, )]
[i]
[(, n, >, >, 1, )]
[n, >, >, 1]
[n]
[1]
[i, ++]
[i]
[0.5, *, (, f, [, i, ], +, f, [, n, -, i, ], )]
[0.5]
[(, f, [, i, ], +, f, [, n, -, i, ], )]
[f, [, i, ], +, f, [, n, -, i, ]]
[f, [, i, ]]
[f]
[i]
[f, [, n, -, i, ]]
[f]
[n, -, i]
[n]
[i]
[FastMath, ., sin, (, i, *, FastMath, ., PI, /, n, ), *, (, f, [, i, ], -, f, [, n, -, i, ], )]
[FastMath, ., sin, (, i, *, FastMath, ., PI, /, n, )]
[FastMath]
[i, *, FastMath, ., PI, /, n]
[i, *, FastMath, ., PI]
[i]
[FastMath, ., PI]
[FastMath]
[n]
[(, f, [, i, ], -, f, [, n, -, i, ], )]
[f, [, i, ], -, f, [, n, -, i, ]]
[f, [, i, ]]
[f]
[i]
[f, [, n, -, i, ]]
[f]
[n, -, i]
[n]
[i]
[FastMath, ., cos, (, i, *, FastMath, ., PI, /, n, ), *, (, f, [, i, ], -, f, [, n, -, i, ], )]
[FastMath, ., cos, (, i, *, FastMath, ., PI, /, n, )]
[FastMath]
[i, *, FastMath, ., PI, /, n]
[i, *, FastMath, ., PI]
[i]
[FastMath, ., PI]
[FastMath]
[n]
[(, f, [, i, ], -, f, [, n, -, i, ], )]
[f, [, i, ], -, f, [, n, -, i, ]]
[f, [, i, ]]
[f]
[i]
[f, [, n, -, i, ]]
[f]
[n, -, i]
[n]
[i]
[x, [, i, ]]
[x]
[i]
[a, -, b]
[a]
[b]
[x, [, n, -, i, ]]
[x]
[n, -, i]
[n]
[i]
[a, +, b]
[a]
[b]
[t1]
[c]
[transformer]
[new, FastFourierTransformer, (, DftNormalization, ., STANDARD, )]
[DftNormalization, ., STANDARD]
[DftNormalization]
[transformer, ., transform, (, x, ,, TransformType, ., FORWARD, )]
[transformer]
[x]
[TransformType, ., FORWARD]
[TransformType]
[transformed, [, 0, ]]
[transformed]
[0]
[y, [, 0, ], ., getReal, (, )]
[y, [, 0, ]]
[y]
[0]
[transformed, [, 1, ]]
[transformed]
[1]
[t1]
[1]
[i, <, (, n, >, >, 1, )]
[i]
[(, n, >, >, 1, )]
[n, >, >, 1]
[n]
[1]
[i, ++]
[i]
[transformed, [, 2, *, i, ]]
[transformed]
[2, *, i]
[2]
[i]
[y, [, i, ], ., getReal, (, )]
[y, [, i, ]]
[y]
[i]
[transformed, [, 2, *, i, +, 1, ]]
[transformed]
[2, *, i, +, 1]
[2, *, i]
[2]
[i]
[1]
[transformed, [, 2, *, i, -, 1, ], -, y, [, i, ], ., getImaginary, (, )]
[transformed, [, 2, *, i, -, 1, ]]
[transformed]
[2, *, i, -, 1]
[2, *, i]
[2]
[i]
[1]
[y, [, i, ], ., getImaginary, (, )]
[y, [, i, ]]
[y]
[i]
[transformed, [, n, ]]
[transformed]
[n]
[y, [, n, >, >, 1, ], ., getReal, (, )]
[y, [, n, >, >, 1, ]]
[y]
[n, >, >, 1]
[n]
[1]
[transformed]
