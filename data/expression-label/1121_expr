[-, 5962461716457143437L]
[5962461716457143437L]
[rowDimension]
[columnDimension]
[rowDimension]
[columnDimension]
[lRow, *, lCol, >=, Integer, ., MAX_VALUE]
[lRow, *, lCol]
[lRow]
[lCol]
[Integer, ., MAX_VALUE]
[Integer]
[new, NumberIsTooLargeException, (, lRow, *, lCol, ,, Integer, ., MAX_VALUE, ,, false, )]
[lRow, *, lCol]
[lRow]
[lCol]
[Integer, ., MAX_VALUE]
[Integer]
[false]
[this, ., rows]
[this]
[rowDimension]
[this, ., columns]
[this]
[columnDimension]
[this, ., entries]
[this]
[new, OpenIntToDoubleHashMap, (, 0.0, )]
[0.0]
[this, ., rows]
[this]
[matrix, ., rows]
[matrix]
[this, ., columns]
[this]
[matrix, ., columns]
[matrix]
[this, ., entries]
[this]
[new, OpenIntToDoubleHashMap, (, matrix, ., entries, )]
[matrix, ., entries]
[matrix]
[new, OpenMapRealMatrix, (, this, )]
[this]
[new, OpenMapRealMatrix, (, rowDimension, ,, columnDimension, )]
[rowDimension]
[columnDimension]
[columns]
[MatrixUtils, ., checkAdditionCompatible, (, this, ,, m, )]
[MatrixUtils]
[this]
[m]
[new, OpenMapRealMatrix, (, this, )]
[this]
[m, ., entries, ., iterator, (, )]
[m, ., entries]
[m]
[iterator, ., hasNext, (, )]
[iterator]
[iterator, ., advance, (, )]
[iterator]
[iterator, ., key, (, ), /, columns]
[iterator, ., key, (, )]
[iterator]
[columns]
[iterator, ., key, (, ), -, row, *, columns]
[iterator, ., key, (, )]
[iterator]
[row, *, columns]
[row]
[columns]
[out, ., setEntry, (, row, ,, col, ,, getEntry, (, row, ,, col, ), +, iterator, ., value, (, ), )]
[out]
[row]
[col]
[getEntry, (, row, ,, col, ), +, iterator, ., value, (, )]
[getEntry, (, row, ,, col, )]
[row]
[col]
[iterator, ., value, (, )]
[iterator]
[out]
[subtract, (, (, OpenMapRealMatrix, ), m, )]
[(, OpenMapRealMatrix, ), m]
[m]
[(, OpenMapRealMatrix, ), super, ., subtract, (, m, )]
[super, ., subtract, (, m, )]
[super]
[m]
[MatrixUtils, ., checkAdditionCompatible, (, this, ,, m, )]
[MatrixUtils]
[this]
[m]
[new, OpenMapRealMatrix, (, this, )]
[this]
[m, ., entries, ., iterator, (, )]
[m, ., entries]
[m]
[iterator, ., hasNext, (, )]
[iterator]
[iterator, ., advance, (, )]
[iterator]
[iterator, ., key, (, ), /, columns]
[iterator, ., key, (, )]
[iterator]
[columns]
[iterator, ., key, (, ), -, row, *, columns]
[iterator, ., key, (, )]
[iterator]
[row, *, columns]
[row]
[columns]
[out, ., setEntry, (, row, ,, col, ,, getEntry, (, row, ,, col, ), -, iterator, ., value, (, ), )]
[out]
[row]
[col]
[getEntry, (, row, ,, col, ), -, iterator, ., value, (, )]
[getEntry, (, row, ,, col, )]
[row]
[col]
[iterator, ., value, (, )]
[iterator]
[out]
[multiply, (, (, OpenMapRealMatrix, ), m, )]
[(, OpenMapRealMatrix, ), m]
[m]
[MatrixUtils, ., checkMultiplicationCompatible, (, this, ,, m, )]
[MatrixUtils]
[this]
[m]
[m, ., getColumnDimension, (, )]
[m]
[new, BlockRealMatrix, (, rows, ,, outCols, )]
[rows]
[outCols]
[entries, ., iterator, (, )]
[entries]
[iterator, ., hasNext, (, )]
[iterator]
[iterator, ., advance, (, )]
[iterator]
[iterator, ., value, (, )]
[iterator]
[iterator, ., key, (, )]
[iterator]
[key, /, columns]
[key]
[columns]
[key, %, columns]
[key]
[columns]
[0]
[j, <, outCols]
[j]
[outCols]
[++, j]
[j]
[out, ., addToEntry, (, i, ,, j, ,, value, *, m, ., getEntry, (, k, ,, j, ), )]
[out]
[i]
[j]
[value, *, m, ., getEntry, (, k, ,, j, )]
[value]
[m, ., getEntry, (, k, ,, j, )]
[m]
[k]
[j]
[out]
[MatrixUtils, ., checkMultiplicationCompatible, (, this, ,, m, )]
[MatrixUtils]
[this]
[m]
[m, ., getColumnDimension, (, )]
[m]
[new, OpenMapRealMatrix, (, rows, ,, outCols, )]
[rows]
[outCols]
[entries, ., iterator, (, )]
[entries]
[iterator, ., hasNext, (, )]
[iterator]
[iterator, ., advance, (, )]
[iterator]
[iterator, ., value, (, )]
[iterator]
[iterator, ., key, (, )]
[iterator]
[key, /, columns]
[key]
[columns]
[key, %, columns]
[key]
[columns]
[0]
[j, <, outCols]
[j]
[outCols]
[++, j]
[j]
[m, ., computeKey, (, k, ,, j, )]
[m]
[k]
[j]
[m, ., entries, ., containsKey, (, rightKey, )]
[m, ., entries]
[m]
[rightKey]
[out, ., computeKey, (, i, ,, j, )]
[out]
[i]
[j]
[out, ., entries, ., get, (, outKey, ), +, value, *, m, ., entries, ., get, (, rightKey, )]
[out, ., entries, ., get, (, outKey, )]
[out, ., entries]
[out]
[outKey]
[value, *, m, ., entries, ., get, (, rightKey, )]
[value]
[m, ., entries, ., get, (, rightKey, )]
[m, ., entries]
[m]
[rightKey]
[outValue, ==, 0.0]
[outValue]
[0.0]
[out, ., entries, ., remove, (, outKey, )]
[out, ., entries]
[out]
[outKey]
[out, ., entries, ., put, (, outKey, ,, outValue, )]
[out, ., entries]
[out]
[outKey]
[outValue]
[out]
[MatrixUtils, ., checkRowIndex, (, this, ,, row, )]
[MatrixUtils]
[this]
[row]
[MatrixUtils, ., checkColumnIndex, (, this, ,, column, )]
[MatrixUtils]
[this]
[column]
[entries, ., get, (, computeKey, (, row, ,, column, ), )]
[entries]
[computeKey, (, row, ,, column, )]
[row]
[column]
[rows]
[MatrixUtils, ., checkRowIndex, (, this, ,, row, )]
[MatrixUtils]
[this]
[row]
[MatrixUtils, ., checkColumnIndex, (, this, ,, column, )]
[MatrixUtils]
[this]
[column]
[value, ==, 0.0]
[value]
[0.0]
[entries, ., remove, (, computeKey, (, row, ,, column, ), )]
[entries]
[computeKey, (, row, ,, column, )]
[row]
[column]
[entries, ., put, (, computeKey, (, row, ,, column, ), ,, value, )]
[entries]
[computeKey, (, row, ,, column, )]
[row]
[column]
[value]
[MatrixUtils, ., checkRowIndex, (, this, ,, row, )]
[MatrixUtils]
[this]
[row]
[MatrixUtils, ., checkColumnIndex, (, this, ,, column, )]
[MatrixUtils]
[this]
[column]
[computeKey, (, row, ,, column, )]
[row]
[column]
[entries, ., get, (, key, ), +, increment]
[entries, ., get, (, key, )]
[entries]
[key]
[increment]
[value, ==, 0.0]
[value]
[0.0]
[entries, ., remove, (, key, )]
[entries]
[key]
[entries, ., put, (, key, ,, value, )]
[entries]
[key]
[value]
[MatrixUtils, ., checkRowIndex, (, this, ,, row, )]
[MatrixUtils]
[this]
[row]
[MatrixUtils, ., checkColumnIndex, (, this, ,, column, )]
[MatrixUtils]
[this]
[column]
[computeKey, (, row, ,, column, )]
[row]
[column]
[entries, ., get, (, key, ), *, factor]
[entries, ., get, (, key, )]
[entries]
[key]
[factor]
[value, ==, 0.0]
[value]
[0.0]
[entries, ., remove, (, key, )]
[entries]
[key]
[entries, ., put, (, key, ,, value, )]
[entries]
[key]
[value]
[row, *, columns, +, column]
[row, *, columns]
[row]
[columns]
[column]
