[this, ., handler]
[this]
[handler]
[this, ., maxCheckInterval]
[this]
[maxCheckInterval]
[this, ., convergence]
[this]
[FastMath, ., abs, (, convergence, )]
[FastMath]
[convergence]
[this, ., maxIterationCount]
[this]
[maxIterationCount]
[this, ., solver]
[this]
[solver]
[expandable]
[null]
[t0]
[Double, ., NaN]
[Double]
[g0]
[Double, ., NaN]
[Double]
[g0Positive]
[true]
[pendingEvent]
[false]
[pendingEventTime]
[Double, ., NaN]
[Double]
[previousEventTime]
[Double, ., NaN]
[Double]
[increasing]
[true]
[nextAction]
[EventHandler, ., Action, ., CONTINUE]
[EventHandler, ., Action]
[EventHandler]
[handler]
[this, ., expandable]
[this]
[expandable]
[maxCheckInterval]
[convergence]
[maxIterationCount]
[t0]
[interpolator, ., getPreviousTime, (, )]
[interpolator]
[interpolator, ., setInterpolatedTime, (, t0, )]
[interpolator]
[t0]
[g0]
[handler, ., g, (, t0, ,, getCompleteState, (, interpolator, ), )]
[handler]
[t0]
[getCompleteState, (, interpolator, )]
[interpolator]
[g0, ==, 0]
[g0]
[0]
[FastMath, ., max, (, solver, ., getAbsoluteAccuracy, (, ), ,, FastMath, ., abs, (, solver, ., getRelativeAccuracy, (, ), *, t0, ), )]
[FastMath]
[solver, ., getAbsoluteAccuracy, (, )]
[solver]
[FastMath, ., abs, (, solver, ., getRelativeAccuracy, (, ), *, t0, )]
[FastMath]
[solver, ., getRelativeAccuracy, (, ), *, t0]
[solver, ., getRelativeAccuracy, (, )]
[solver]
[t0]
[t0, +, 0.5, *, epsilon]
[t0]
[0.5, *, epsilon]
[0.5]
[epsilon]
[interpolator, ., setInterpolatedTime, (, tStart, )]
[interpolator]
[tStart]
[g0]
[handler, ., g, (, tStart, ,, getCompleteState, (, interpolator, ), )]
[handler]
[tStart]
[getCompleteState, (, interpolator, )]
[interpolator]
[g0Positive]
[g0, >=, 0]
[g0]
[0]
[new, double, [, expandable, ., getTotalDimension, (, ), ]]
[expandable, ., getTotalDimension, (, )]
[expandable]
[expandable, ., getPrimaryMapper, (, ), ., insertEquationData, (, interpolator, ., getInterpolatedState, (, ), ,, complete, )]
[expandable, ., getPrimaryMapper, (, )]
[expandable]
[interpolator, ., getInterpolatedState, (, )]
[interpolator]
[complete]
[0]
[expandable, ., getSecondaryMappers, (, )]
[expandable]
[secondary, ., insertEquationData, (, interpolator, ., getInterpolatedSecondaryState, (, index, ++, ), ,, complete, )]
[secondary]
[interpolator, ., getInterpolatedSecondaryState, (, index, ++, )]
[interpolator]
[index, ++]
[index]
[complete]
[complete]
[forward]
[interpolator, ., isForward, (, )]
[interpolator]
[interpolator, ., getCurrentTime, (, )]
[interpolator]
[t1, -, t0]
[t1]
[t0]
[FastMath, ., abs, (, dt, ), <, convergence]
[FastMath, ., abs, (, dt, )]
[FastMath]
[dt]
[convergence]
[false]
[FastMath, ., max, (, 1, ,, (, int, ), FastMath, ., ceil, (, FastMath, ., abs, (, dt, ), /, maxCheckInterval, ), )]
[FastMath]
[1]
[(, int, ), FastMath, ., ceil, (, FastMath, ., abs, (, dt, ), /, maxCheckInterval, )]
[FastMath, ., ceil, (, FastMath, ., abs, (, dt, ), /, maxCheckInterval, )]
[FastMath]
[FastMath, ., abs, (, dt, ), /, maxCheckInterval]
[FastMath, ., abs, (, dt, )]
[FastMath]
[dt]
[maxCheckInterval]
[dt, /, n]
[dt]
[n]
[new, UnivariateFunction, (, ), {, public, double, value, (, final, double, t, ), throws, LocalMaxCountExceededException, {, try, {, interpolator, ., setInterpolatedTime, (, t, ), ;, return, handler, ., g, (, t, ,, getCompleteState, (, interpolator, ), ), ;, }, catch, (, MaxCountExceededException, mcee, ), {, throw, new, LocalMaxCountExceededException, (, mcee, ), ;, }, }, }]
[interpolator, ., setInterpolatedTime, (, t, )]
[interpolator]
[t]
[handler, ., g, (, t, ,, getCompleteState, (, interpolator, ), )]
[handler]
[t]
[getCompleteState, (, interpolator, )]
[interpolator]
[new, LocalMaxCountExceededException, (, mcee, )]
[mcee]
[t0]
[g0]
[0]
[i, <, n]
[i]
[n]
[++, i]
[i]
[t0, +, (, i, +, 1, ), *, h]
[t0]
[(, i, +, 1, ), *, h]
[(, i, +, 1, )]
[i, +, 1]
[i]
[1]
[h]
[interpolator, ., setInterpolatedTime, (, tb, )]
[interpolator]
[tb]
[handler, ., g, (, tb, ,, getCompleteState, (, interpolator, ), )]
[handler]
[tb]
[getCompleteState, (, interpolator, )]
[interpolator]
[g0Positive, ^, (, gb, >=, 0, )]
[g0Positive]
[(, gb, >=, 0, )]
[gb, >=, 0]
[gb]
[0]
[increasing]
[gb, >=, ga]
[gb]
[ga]
[solver, instanceof, BracketedUnivariateSolver, <, ?, >]
[solver]
[@, SuppressWarnings, (, "unchecked", )]
["unchecked"]
[(, BracketedUnivariateSolver, <, UnivariateFunction, >, ), solver]
[solver]
[root]
[forward, ?, bracketing, ., solve, (, maxIterationCount, ,, f, ,, ta, ,, tb, ,, AllowedSolution, ., RIGHT_SIDE, ), :, bracketing, ., solve, (, maxIterationCount, ,, f, ,, tb, ,, ta, ,, AllowedSolution, ., LEFT_SIDE, )]
[forward]
[bracketing, ., solve, (, maxIterationCount, ,, f, ,, ta, ,, tb, ,, AllowedSolution, ., RIGHT_SIDE, )]
[bracketing]
[maxIterationCount]
[f]
[ta]
[tb]
[AllowedSolution, ., RIGHT_SIDE]
[AllowedSolution]
[bracketing, ., solve, (, maxIterationCount, ,, f, ,, tb, ,, ta, ,, AllowedSolution, ., LEFT_SIDE, )]
[bracketing]
[maxIterationCount]
[f]
[tb]
[ta]
[AllowedSolution, ., LEFT_SIDE]
[AllowedSolution]
[forward, ?, solver, ., solve, (, maxIterationCount, ,, f, ,, ta, ,, tb, ), :, solver, ., solve, (, maxIterationCount, ,, f, ,, tb, ,, ta, )]
[forward]
[solver, ., solve, (, maxIterationCount, ,, f, ,, ta, ,, tb, )]
[solver]
[maxIterationCount]
[f]
[ta]
[tb]
[solver, ., solve, (, maxIterationCount, ,, f, ,, tb, ,, ta, )]
[solver]
[maxIterationCount]
[f]
[tb]
[ta]
[maxIterationCount, -, solver, ., getEvaluations, (, )]
[maxIterationCount]
[solver, ., getEvaluations, (, )]
[solver]
[new, PegasusSolver, (, solver, ., getRelativeAccuracy, (, ), ,, solver, ., getAbsoluteAccuracy, (, ), )]
[solver, ., getRelativeAccuracy, (, )]
[solver]
[solver, ., getAbsoluteAccuracy, (, )]
[solver]
[root]
[forward, ?, UnivariateSolverUtils, ., forceSide, (, remainingEval, ,, f, ,, bracketing, ,, baseRoot, ,, ta, ,, tb, ,, AllowedSolution, ., RIGHT_SIDE, ), :, UnivariateSolverUtils, ., forceSide, (, remainingEval, ,, f, ,, bracketing, ,, baseRoot, ,, tb, ,, ta, ,, AllowedSolution, ., LEFT_SIDE, )]
[forward]
[UnivariateSolverUtils, ., forceSide, (, remainingEval, ,, f, ,, bracketing, ,, baseRoot, ,, ta, ,, tb, ,, AllowedSolution, ., RIGHT_SIDE, )]
[UnivariateSolverUtils]
[remainingEval]
[f]
[bracketing]
[baseRoot]
[ta]
[tb]
[AllowedSolution, ., RIGHT_SIDE]
[AllowedSolution]
[UnivariateSolverUtils, ., forceSide, (, remainingEval, ,, f, ,, bracketing, ,, baseRoot, ,, tb, ,, ta, ,, AllowedSolution, ., LEFT_SIDE, )]
[UnivariateSolverUtils]
[remainingEval]
[f]
[bracketing]
[baseRoot]
[tb]
[ta]
[AllowedSolution, ., LEFT_SIDE]
[AllowedSolution]
[(, !, Double, ., isNaN, (, previousEventTime, ), ), &&, (, FastMath, ., abs, (, root, -, ta, ), <=, convergence, ), &&, (, FastMath, ., abs, (, root, -, previousEventTime, ), <=, convergence, )]
[(, !, Double, ., isNaN, (, previousEventTime, ), ), &&, (, FastMath, ., abs, (, root, -, ta, ), <=, convergence, )]
[(, !, Double, ., isNaN, (, previousEventTime, ), )]
[!, Double, ., isNaN, (, previousEventTime, )]
[Double, ., isNaN, (, previousEventTime, )]
[Double]
[previousEventTime]
[(, FastMath, ., abs, (, root, -, ta, ), <=, convergence, )]
[FastMath, ., abs, (, root, -, ta, ), <=, convergence]
[FastMath, ., abs, (, root, -, ta, )]
[FastMath]
[root, -, ta]
[root]
[ta]
[convergence]
[(, FastMath, ., abs, (, root, -, previousEventTime, ), <=, convergence, )]
[FastMath, ., abs, (, root, -, previousEventTime, ), <=, convergence]
[FastMath, ., abs, (, root, -, previousEventTime, )]
[FastMath]
[root, -, previousEventTime]
[root]
[previousEventTime]
[convergence]
[ta]
[forward, ?, ta, +, convergence, :, ta, -, convergence]
[forward]
[ta, +, convergence]
[ta]
[convergence]
[ta, -, convergence]
[ta]
[convergence]
[ga]
[f, ., value, (, ta, )]
[f]
[ta]
[--, i]
[i]
[Double, ., isNaN, (, previousEventTime, ), ||, (, FastMath, ., abs, (, previousEventTime, -, root, ), >, convergence, )]
[Double, ., isNaN, (, previousEventTime, )]
[Double]
[previousEventTime]
[(, FastMath, ., abs, (, previousEventTime, -, root, ), >, convergence, )]
[FastMath, ., abs, (, previousEventTime, -, root, ), >, convergence]
[FastMath, ., abs, (, previousEventTime, -, root, )]
[FastMath]
[previousEventTime, -, root]
[previousEventTime]
[root]
[convergence]
[pendingEventTime]
[root]
[pendingEvent]
[true]
[true]
[ta]
[tb]
[ga]
[gb]
[ta]
[tb]
[ga]
[gb]
[pendingEvent]
[false]
[pendingEventTime]
[Double, ., NaN]
[Double]
[false]
[lmcee, ., getException, (, )]
[lmcee]
[pendingEvent, ?, pendingEventTime, :, (, forward, ?, Double, ., POSITIVE_INFINITY, :, Double, ., NEGATIVE_INFINITY, )]
[pendingEvent]
[pendingEventTime]
[(, forward, ?, Double, ., POSITIVE_INFINITY, :, Double, ., NEGATIVE_INFINITY, )]
[forward, ?, Double, ., POSITIVE_INFINITY, :, Double, ., NEGATIVE_INFINITY]
[forward]
[Double, ., POSITIVE_INFINITY]
[Double]
[Double, ., NEGATIVE_INFINITY]
[Double]
[t0]
[t]
[g0]
[handler, ., g, (, t, ,, y, )]
[handler]
[t]
[y]
[pendingEvent, &&, (, FastMath, ., abs, (, pendingEventTime, -, t, ), <=, convergence, )]
[pendingEvent]
[(, FastMath, ., abs, (, pendingEventTime, -, t, ), <=, convergence, )]
[FastMath, ., abs, (, pendingEventTime, -, t, ), <=, convergence]
[FastMath, ., abs, (, pendingEventTime, -, t, )]
[FastMath]
[pendingEventTime, -, t]
[pendingEventTime]
[t]
[convergence]
[previousEventTime]
[t]
[g0Positive]
[increasing]
[nextAction]
[handler, ., eventOccurred, (, t, ,, y, ,, !, (, increasing, ^, forward, ), )]
[handler]
[t]
[y]
[!, (, increasing, ^, forward, )]
[(, increasing, ^, forward, )]
[increasing, ^, forward]
[increasing]
[forward]
[g0Positive]
[g0, >=, 0]
[g0]
[0]
[nextAction]
[EventHandler, ., Action, ., CONTINUE]
[EventHandler, ., Action]
[EventHandler]
[nextAction, ==, EventHandler, ., Action, ., STOP]
[nextAction]
[EventHandler, ., Action, ., STOP]
[EventHandler, ., Action]
[EventHandler]
[!, (, pendingEvent, &&, (, FastMath, ., abs, (, pendingEventTime, -, t, ), <=, convergence, ), )]
[(, pendingEvent, &&, (, FastMath, ., abs, (, pendingEventTime, -, t, ), <=, convergence, ), )]
[pendingEvent, &&, (, FastMath, ., abs, (, pendingEventTime, -, t, ), <=, convergence, )]
[pendingEvent]
[(, FastMath, ., abs, (, pendingEventTime, -, t, ), <=, convergence, )]
[FastMath, ., abs, (, pendingEventTime, -, t, ), <=, convergence]
[FastMath, ., abs, (, pendingEventTime, -, t, )]
[FastMath]
[pendingEventTime, -, t]
[pendingEventTime]
[t]
[convergence]
[false]
[nextAction, ==, EventHandler, ., Action, ., RESET_STATE]
[nextAction]
[EventHandler, ., Action, ., RESET_STATE]
[EventHandler, ., Action]
[EventHandler]
[handler, ., resetState, (, t, ,, y, )]
[handler]
[t]
[y]
[pendingEvent]
[false]
[pendingEventTime]
[Double, ., NaN]
[Double]
[(, nextAction, ==, EventHandler, ., Action, ., RESET_STATE, ), ||, (, nextAction, ==, EventHandler, ., Action, ., RESET_DERIVATIVES, )]
[(, nextAction, ==, EventHandler, ., Action, ., RESET_STATE, )]
[nextAction, ==, EventHandler, ., Action, ., RESET_STATE]
[nextAction]
[EventHandler, ., Action, ., RESET_STATE]
[EventHandler, ., Action]
[EventHandler]
[(, nextAction, ==, EventHandler, ., Action, ., RESET_DERIVATIVES, )]
[nextAction, ==, EventHandler, ., Action, ., RESET_DERIVATIVES]
[nextAction]
[EventHandler, ., Action, ., RESET_DERIVATIVES]
[EventHandler, ., Action]
[EventHandler]
[20120901L]
[wrapped]
[exception]
[wrapped]
