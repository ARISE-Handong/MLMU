["null elements not permitted"]
["Cannot store %s %s values in %s bits"]
["%s does not seem to be an Enum type"]
["EnumClass must be defined."]
[new, LinkedHashMap, <, String, ,, E, >, (, )]
[enumClass, ., getEnumConstants, (, )]
[enumClass]
[map, ., put, (, e, ., name, (, ), ,, e, )]
[map]
[e, ., name, (, )]
[e]
[e]
[map]
[new, ArrayList, <, E, >, (, Arrays, ., asList, (, enumClass, ., getEnumConstants, (, ), ), )]
[Arrays, ., asList, (, enumClass, ., getEnumConstants, (, ), )]
[Arrays]
[enumClass, ., getEnumConstants, (, )]
[enumClass]
[enumName, ==, null]
[enumName]
[null]
[false]
[Enum, ., valueOf, (, enumClass, ,, enumName, )]
[Enum]
[enumClass]
[enumName]
[true]
[false]
[enumName, ==, null]
[enumName]
[null]
[null]
[Enum, ., valueOf, (, enumClass, ,, enumName, )]
[Enum]
[enumClass]
[enumName]
[null]
[checkBitVectorable, (, enumClass, )]
[enumClass]
[Validate, ., notNull, (, values, )]
[Validate]
[values]
[0]
[values]
[Validate, ., isTrue, (, constant, !=, null, ,, NULL_ELEMENTS_NOT_PERMITTED, )]
[Validate]
[constant, !=, null]
[constant]
[null]
[NULL_ELEMENTS_NOT_PERMITTED]
[total]
[1, <<, constant, ., ordinal, (, )]
[1]
[constant, ., ordinal, (, )]
[constant]
[total]
[asEnum, (, enumClass, )]
[enumClass]
[Validate, ., notNull, (, values, )]
[Validate]
[values]
[EnumSet, ., noneOf, (, enumClass, )]
[EnumSet]
[enumClass]
[values]
[Validate, ., isTrue, (, constant, !=, null, ,, NULL_ELEMENTS_NOT_PERMITTED, )]
[Validate]
[constant, !=, null]
[constant]
[null]
[NULL_ELEMENTS_NOT_PERMITTED]
[condensed, ., add, (, constant, )]
[condensed]
[constant]
[new, long, [, (, enumClass, ., getEnumConstants, (, ), ., length, -, 1, ), /, Long, ., SIZE, +, 1, ]]
[(, enumClass, ., getEnumConstants, (, ), ., length, -, 1, ), /, Long, ., SIZE, +, 1]
[(, enumClass, ., getEnumConstants, (, ), ., length, -, 1, ), /, Long, ., SIZE]
[(, enumClass, ., getEnumConstants, (, ), ., length, -, 1, )]
[enumClass, ., getEnumConstants, (, ), ., length, -, 1]
[enumClass, ., getEnumConstants, (, ), ., length]
[enumClass, ., getEnumConstants, (, )]
[enumClass]
[1]
[Long, ., SIZE]
[Long]
[1]
[condensed]
[result, [, value, ., ordinal, (, ), /, Long, ., SIZE, ]]
[result]
[value, ., ordinal, (, ), /, Long, ., SIZE]
[value, ., ordinal, (, )]
[value]
[Long, ., SIZE]
[Long]
[1, <<, (, value, ., ordinal, (, ), %, Long, ., SIZE, )]
[1]
[(, value, ., ordinal, (, ), %, Long, ., SIZE, )]
[value, ., ordinal, (, ), %, Long, ., SIZE]
[value, ., ordinal, (, )]
[value]
[Long, ., SIZE]
[Long]
[ArrayUtils, ., reverse, (, result, )]
[ArrayUtils]
[result]
[result]
[Validate, ., noNullElements, (, values, )]
[Validate]
[values]
[generateBitVector, (, enumClass, ,, Arrays, ., <, E, >, asList, (, values, ), )]
[enumClass]
[Arrays, ., <, E, >, asList, (, values, )]
[Arrays]
[values]
[asEnum, (, enumClass, )]
[enumClass]
[Validate, ., noNullElements, (, values, )]
[Validate]
[values]
[EnumSet, ., noneOf, (, enumClass, )]
[EnumSet]
[enumClass]
[Collections, ., addAll, (, condensed, ,, values, )]
[Collections]
[condensed]
[values]
[new, long, [, (, enumClass, ., getEnumConstants, (, ), ., length, -, 1, ), /, Long, ., SIZE, +, 1, ]]
[(, enumClass, ., getEnumConstants, (, ), ., length, -, 1, ), /, Long, ., SIZE, +, 1]
[(, enumClass, ., getEnumConstants, (, ), ., length, -, 1, ), /, Long, ., SIZE]
[(, enumClass, ., getEnumConstants, (, ), ., length, -, 1, )]
[enumClass, ., getEnumConstants, (, ), ., length, -, 1]
[enumClass, ., getEnumConstants, (, ), ., length]
[enumClass, ., getEnumConstants, (, )]
[enumClass]
[1]
[Long, ., SIZE]
[Long]
[1]
[condensed]
[result, [, value, ., ordinal, (, ), /, Long, ., SIZE, ]]
[result]
[value, ., ordinal, (, ), /, Long, ., SIZE]
[value, ., ordinal, (, )]
[value]
[Long, ., SIZE]
[Long]
[1, <<, (, value, ., ordinal, (, ), %, Long, ., SIZE, )]
[1]
[(, value, ., ordinal, (, ), %, Long, ., SIZE, )]
[value, ., ordinal, (, ), %, Long, ., SIZE]
[value, ., ordinal, (, )]
[value]
[Long, ., SIZE]
[Long]
[ArrayUtils, ., reverse, (, result, )]
[ArrayUtils]
[result]
[result]
[checkBitVectorable, (, enumClass, ), ., getEnumConstants, (, )]
[checkBitVectorable, (, enumClass, )]
[enumClass]
[processBitVectors, (, enumClass, ,, value, )]
[enumClass]
[value]
[EnumSet, ., noneOf, (, asEnum, (, enumClass, ), )]
[EnumSet]
[asEnum, (, enumClass, )]
[enumClass]
[values]
[ArrayUtils, ., clone, (, Validate, ., notNull, (, values, ), )]
[ArrayUtils]
[Validate, ., notNull, (, values, )]
[Validate]
[values]
[ArrayUtils, ., reverse, (, values, )]
[ArrayUtils]
[values]
[enumClass, ., getEnumConstants, (, )]
[enumClass]
[constant, ., ordinal, (, ), /, Long, ., SIZE]
[constant, ., ordinal, (, )]
[constant]
[Long, ., SIZE]
[Long]
[block, <, values, ., length, &&, (, values, [, block, ], &, 1, <<, (, constant, ., ordinal, (, ), %, Long, ., SIZE, ), ), !=, 0]
[block, <, values, ., length]
[block]
[values, ., length]
[values]
[(, values, [, block, ], &, 1, <<, (, constant, ., ordinal, (, ), %, Long, ., SIZE, ), ), !=, 0]
[(, values, [, block, ], &, 1, <<, (, constant, ., ordinal, (, ), %, Long, ., SIZE, ), )]
[values, [, block, ], &, 1, <<, (, constant, ., ordinal, (, ), %, Long, ., SIZE, )]
[values, [, block, ]]
[values]
[block]
[1, <<, (, constant, ., ordinal, (, ), %, Long, ., SIZE, )]
[1]
[(, constant, ., ordinal, (, ), %, Long, ., SIZE, )]
[constant, ., ordinal, (, ), %, Long, ., SIZE]
[constant, ., ordinal, (, )]
[constant]
[Long, ., SIZE]
[Long]
[0]
[results, ., add, (, constant, )]
[results]
[constant]
[results]
[asEnum, (, enumClass, ), ., getEnumConstants, (, )]
[asEnum, (, enumClass, )]
[enumClass]
[Validate, ., isTrue, (, constants, ., length, <=, Long, ., SIZE, ,, CANNOT_STORE_S_S_VALUES_IN_S_BITS, ,, constants, ., length, ,, enumClass, ., getSimpleName, (, ), ,, Long, ., SIZE, )]
[Validate]
[constants, ., length, <=, Long, ., SIZE]
[constants, ., length]
[constants]
[Long, ., SIZE]
[Long]
[CANNOT_STORE_S_S_VALUES_IN_S_BITS]
[constants, ., length]
[constants]
[enumClass, ., getSimpleName, (, )]
[enumClass]
[Long, ., SIZE]
[Long]
[enumClass]
[Validate, ., notNull, (, enumClass, ,, ENUM_CLASS_MUST_BE_DEFINED, )]
[Validate]
[enumClass]
[ENUM_CLASS_MUST_BE_DEFINED]
[Validate, ., isTrue, (, enumClass, ., isEnum, (, ), ,, S_DOES_NOT_SEEM_TO_BE_AN_ENUM_TYPE, ,, enumClass, )]
[Validate]
[enumClass, ., isEnum, (, )]
[enumClass]
[S_DOES_NOT_SEEM_TO_BE_AN_ENUM_TYPE]
[enumClass]
[enumClass]
