["getters are not supported in older versions of JS. ", +, "If you are targeting newer versions of JS, ", +, "set the appropriate language_in option."]
["getters are not supported in older versions of JS. ", +, "If you are targeting newer versions of JS, "]
["getters are not supported in older versions of JS. "]
["If you are targeting newer versions of JS, "]
["set the appropriate language_in option."]
["setters are not supported in older versions of JS. ", +, "If you are targeting newer versions of JS, ", +, "set the appropriate language_in option."]
["setters are not supported in older versions of JS. ", +, "If you are targeting newer versions of JS, "]
["setters are not supported in older versions of JS. "]
["If you are targeting newer versions of JS, "]
["set the appropriate language_in option."]
["Non-JSDoc comment has annotations. ", +, "Did you mean to start it with '/**'?"]
["Non-JSDoc comment has annotations. "]
["Did you mean to start it with '/**'?"]
["Type annotations are not allowed here. Are you missing parentheses?"]
[ImmutableSet, ., of, (, "use strict", )]
[ImmutableSet]
["use strict"]
[ImmutableSet, ., of, (, "class", ,, "const", ,, "enum", ,, "export", ,, "extends", ,, "import", ,, "super", )]
[ImmutableSet]
["class"]
["const"]
["enum"]
["export"]
["extends"]
["import"]
["super"]
[ImmutableSet, ., of, (, "class", ,, "const", ,, "enum", ,, "export", ,, "extends", ,, "import", ,, "super", ,, "implements", ,, "interface", ,, "let", ,, "package", ,, "private", ,, "protected", ,, "public", ,, "static", ,, "yield", )]
[ImmutableSet]
["class"]
["const"]
["enum"]
["export"]
["extends"]
["import"]
["super"]
["implements"]
["interface"]
["let"]
["package"]
["private"]
["protected"]
["public"]
["static"]
["yield"]
[Sets, ., newHashSet, (, )]
[Sets]
[new, Node, (, Token, ., SCRIPT, )]
[Token, ., SCRIPT]
[Token]
[rootNodeJsDocHolder, ., getJsDocBuilderForNode, (, )]
[rootNodeJsDocHolder]
[null]
[this, ., sourceString]
[this]
[sourceString]
[this, ., sourceFile]
[this]
[sourceFile]
[this, ., sourceName]
[this]
[sourceFile, ==, null, ?, null, :, sourceFile, ., getName, (, )]
[sourceFile, ==, null]
[sourceFile]
[null]
[null]
[sourceFile, ., getName, (, )]
[sourceFile]
[this, ., config]
[this]
[config]
[this, ., errorReporter]
[this]
[errorReporter]
[this, ., transformDispatcher]
[this]
[new, TransformDispatcher, (, )]
[this, ., templateNode]
[this]
[createTemplateNode, (, )]
[config, ., languageMode]
[config]
[ECMASCRIPT3]
[reservedKeywords]
[null]
[ECMASCRIPT5]
[reservedKeywords]
[ES5_RESERVED_KEYWORDS]
[ECMASCRIPT5_STRICT]
[reservedKeywords]
[ES5_STRICT_RESERVED_KEYWORDS]
[new, IllegalStateException, (, "unknown language mode", )]
["unknown language mode"]
[new, Node, (, Token, ., SCRIPT, )]
[Token, ., SCRIPT]
[Token]
[templateNode, ., setStaticSourceFile, (, sourceFile, )]
[templateNode]
[sourceFile]
[templateNode]
[new, IRFactory, (, sourceString, ,, sourceFile, ,, config, ,, errorReporter, )]
[sourceString]
[sourceFile]
[config]
[errorReporter]
[irFactory, ., transform, (, node, )]
[irFactory]
[node]
[node, ., getComments, (, ), !=, null]
[node, ., getComments, (, )]
[node]
[null]
[node, ., getComments, (, )]
[node]
[comment, ., getCommentType, (, ), ==, CommentType, ., JSDOC, &&, !, irFactory, ., parsedComments, ., contains, (, comment, )]
[comment, ., getCommentType, (, ), ==, CommentType, ., JSDOC]
[comment, ., getCommentType, (, )]
[comment]
[CommentType, ., JSDOC]
[CommentType]
[!, irFactory, ., parsedComments, ., contains, (, comment, )]
[irFactory, ., parsedComments, ., contains, (, comment, )]
[irFactory, ., parsedComments]
[irFactory]
[comment]
[irFactory, ., handlePossibleFileOverviewJsDoc, (, comment, ,, irNode, )]
[irFactory]
[comment]
[irNode]
[comment, ., getCommentType, (, ), ==, CommentType, ., BLOCK_COMMENT]
[comment, ., getCommentType, (, )]
[comment]
[CommentType, ., BLOCK_COMMENT]
[CommentType]
[irFactory, ., handleBlockComment, (, comment, )]
[irFactory]
[comment]
[irFactory, ., setFileOverviewJsDoc, (, irNode, )]
[irFactory]
[irNode]
[irNode]
[rootNodeJsDocHolder, ., getJSDocInfo, (, )]
[rootNodeJsDocHolder]
[rootNodeJsDoc, !=, null]
[rootNodeJsDoc]
[null]
[irNode, ., setJSDocInfo, (, rootNodeJsDoc, )]
[irNode]
[rootNodeJsDoc]
[rootNodeJsDoc, ., setAssociatedNode, (, irNode, )]
[rootNodeJsDoc]
[irNode]
[fileOverviewInfo, !=, null]
[fileOverviewInfo]
[null]
[(, irNode, ., getJSDocInfo, (, ), !=, null, ), &&, (, irNode, ., getJSDocInfo, (, ), ., getLicense, (, ), !=, null, )]
[(, irNode, ., getJSDocInfo, (, ), !=, null, )]
[irNode, ., getJSDocInfo, (, ), !=, null]
[irNode, ., getJSDocInfo, (, )]
[irNode]
[null]
[(, irNode, ., getJSDocInfo, (, ), ., getLicense, (, ), !=, null, )]
[irNode, ., getJSDocInfo, (, ), ., getLicense, (, ), !=, null]
[irNode, ., getJSDocInfo, (, ), ., getLicense, (, )]
[irNode, ., getJSDocInfo, (, )]
[irNode]
[null]
[fileOverviewInfo, ., setLicense, (, irNode, ., getJSDocInfo, (, ), ., getLicense, (, ), )]
[fileOverviewInfo]
[irNode, ., getJSDocInfo, (, ), ., getLicense, (, )]
[irNode, ., getJSDocInfo, (, )]
[irNode]
[irNode, ., setJSDocInfo, (, fileOverviewInfo, )]
[irNode]
[fileOverviewInfo]
[fileOverviewInfo, ., setAssociatedNode, (, irNode, )]
[fileOverviewInfo]
[irNode]
[transform, (, node, )]
[node]
[!, irNode, ., isBlock, (, )]
[irNode, ., isBlock, (, )]
[irNode]
[irNode, ., isEmpty, (, )]
[irNode]
[irNode, ., setType, (, Token, ., BLOCK, )]
[irNode]
[Token, ., BLOCK]
[Token]
[irNode, ., setWasEmptyNode, (, true, )]
[irNode]
[true]
[newNode, (, Token, ., BLOCK, ,, irNode, )]
[Token, ., BLOCK]
[Token]
[irNode]
[newBlock, ., setLineno, (, irNode, ., getLineno, (, ), )]
[newBlock]
[irNode, ., getLineno, (, )]
[irNode]
[newBlock, ., setCharno, (, irNode, ., getCharno, (, ), )]
[newBlock]
[irNode, ., getCharno, (, )]
[irNode]
[maybeSetLengthFrom, (, newBlock, ,, node, )]
[newBlock]
[node]
[irNode]
[newBlock]
[irNode]
[comment, ., getValue, (, )]
[comment]
[value, ., indexOf, (, "/* @", ), !=, -, 1, ||, value, ., indexOf, (, "\n * @", ), !=, -, 1]
[value, ., indexOf, (, "/* @", ), !=, -, 1]
[value, ., indexOf, (, "/* @", )]
[value]
["/* @"]
[-, 1]
[1]
[value, ., indexOf, (, "\n * @", ), !=, -, 1]
[value, ., indexOf, (, "\n * @", )]
[value]
["\n * @"]
[-, 1]
[1]
[errorReporter, ., warning, (, SUSPICIOUS_COMMENT_WARNING, ,, sourceName, ,, comment, ., getLineno, (, ), ,, "", ,, 0, )]
[errorReporter]
[SUSPICIOUS_COMMENT_WARNING]
[sourceName]
[comment, ., getLineno, (, )]
[comment]
[""]
[0]
[jsDocParser, ., getFileOverviewJSDocInfo, (, ), !=, fileOverviewInfo]
[jsDocParser, ., getFileOverviewJSDocInfo, (, )]
[jsDocParser]
[fileOverviewInfo]
[fileOverviewInfo]
[jsDocParser, ., getFileOverviewJSDocInfo, (, )]
[jsDocParser]
[true]
[false]
[createJsDocInfoParser, (, comment, ,, irNode, )]
[comment]
[irNode]
[parsedComments, ., add, (, comment, )]
[parsedComments]
[comment]
[handlePossibleFileOverviewJsDoc, (, jsDocParser, )]
[jsDocParser]
[node, ., getJsDocNode, (, )]
[node]
[comment, !=, null]
[comment]
[null]
[createJsDocInfoParser, (, comment, ,, irNode, )]
[comment]
[irNode]
[parsedComments, ., add, (, comment, )]
[parsedComments]
[comment]
[!, handlePossibleFileOverviewJsDoc, (, jsDocParser, )]
[handlePossibleFileOverviewJsDoc, (, jsDocParser, )]
[jsDocParser]
[jsDocParser, ., retrieveAndResetParsedJSDocInfo, (, )]
[jsDocParser]
[info, !=, null]
[info]
[null]
[validateTypeAnnotations, (, info, ,, node, ,, irNode, )]
[info]
[node]
[irNode]
[info]
[null]
[info, ., hasType, (, )]
[info]
[false]
[node, ., getType, (, )]
[node]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., LP]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[valid]
[node, instanceof, ParenthesizedExpression]
[node]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., VAR]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[valid]
[true]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., FUNCTION]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[(, FunctionNode, ), node]
[node]
[valid]
[fnNode, ., getFunctionType, (, ), ==, FunctionNode, ., FUNCTION_STATEMENT]
[fnNode, ., getFunctionType, (, )]
[fnNode]
[FunctionNode, ., FUNCTION_STATEMENT]
[FunctionNode]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., NAME]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[valid]
[node, ., getParent, (, ), instanceof, ObjectProperty, ||, node, ., getParent, (, ), instanceof, CatchClause, ||, node, ., getParent, (, ), instanceof, FunctionNode]
[node, ., getParent, (, ), instanceof, ObjectProperty, ||, node, ., getParent, (, ), instanceof, CatchClause]
[node, ., getParent, (, ), instanceof, ObjectProperty]
[node, ., getParent, (, )]
[node]
[node, ., getParent, (, ), instanceof, CatchClause]
[node, ., getParent, (, )]
[node]
[node, ., getParent, (, ), instanceof, FunctionNode]
[node, ., getParent, (, )]
[node]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., GET]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., SET]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., NUMBER]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., STRING]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[valid]
[node, ., getParent, (, ), instanceof, ObjectProperty]
[node, ., getParent, (, )]
[node]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[node, instanceof, Assignment]
[node]
[valid]
[isExprStmt, (, node, ., getParent, (, ), ), &&, isPropAccess, (, (, (, Assignment, ), node, ), ., getLeft, (, ), )]
[isExprStmt, (, node, ., getParent, (, ), )]
[node, ., getParent, (, )]
[node]
[isPropAccess, (, (, (, Assignment, ), node, ), ., getLeft, (, ), )]
[(, (, Assignment, ), node, ), ., getLeft, (, )]
[(, (, Assignment, ), node, )]
[(, Assignment, ), node]
[node]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., GETPROP]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., GETELEM]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[valid]
[isExprStmt, (, node, ., getParent, (, ), )]
[node, ., getParent, (, )]
[node]
[!, valid]
[valid]
[errorReporter, ., warning, (, MISPLACED_TYPE_ANNOTATION, ,, sourceName, ,, node, ., getLineno, (, ), ,, "", ,, 0, )]
[errorReporter]
[MISPLACED_TYPE_ANNOTATION]
[sourceName]
[node, ., getLineno, (, )]
[node]
[""]
[0]
[node, ., getType, (, ), ==, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., GETPROP, ||, node, ., getType, (, ), ==, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., GETELEM]
[node, ., getType, (, ), ==, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., GETPROP]
[node, ., getType, (, )]
[node]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., GETPROP]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[node, ., getType, (, ), ==, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., GETELEM]
[node, ., getType, (, )]
[node]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., GETELEM]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[node, ., getType, (, ), ==, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., EXPR_RESULT, ||, node, ., getType, (, ), ==, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., EXPR_VOID]
[node, ., getType, (, ), ==, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., EXPR_RESULT]
[node, ., getType, (, )]
[node]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., EXPR_RESULT]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[node, ., getType, (, ), ==, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., EXPR_VOID]
[node, ., getType, (, )]
[node]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., EXPR_VOID]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[justTransform, (, node, )]
[node]
[handleJsDoc, (, node, ,, irNode, )]
[node]
[irNode]
[jsDocInfo, !=, null]
[jsDocInfo]
[null]
[irNode]
[maybeInjectCastNode, (, node, ,, jsDocInfo, ,, irNode, )]
[node]
[jsDocInfo]
[irNode]
[irNode, ., setJSDocInfo, (, jsDocInfo, )]
[irNode]
[jsDocInfo]
[setSourceInfo, (, irNode, ,, node, )]
[irNode]
[node]
[irNode]
[node, ., getType, (, ), ==, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., LP, &&, node, instanceof, ParenthesizedExpression, &&, info, ., hasType, (, ), &&, !, irNode, ., isObjectLit, (, )]
[node, ., getType, (, ), ==, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., LP, &&, node, instanceof, ParenthesizedExpression, &&, info, ., hasType, (, )]
[node, ., getType, (, ), ==, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., LP, &&, node, instanceof, ParenthesizedExpression]
[node, ., getType, (, ), ==, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., LP]
[node, ., getType, (, )]
[node]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., LP]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[node, instanceof, ParenthesizedExpression]
[node]
[info, ., hasType, (, )]
[info]
[!, irNode, ., isObjectLit, (, )]
[irNode, ., isObjectLit, (, )]
[irNode]
[irNode]
[newNode, (, Token, ., CAST, ,, irNode, )]
[Token, ., CAST]
[Token]
[irNode]
[irNode]
[transformDispatcher, ., processName, (, node, ,, true, )]
[transformDispatcher]
[node]
[true]
[handleJsDoc, (, node, ,, irNode, )]
[node]
[irNode]
[jsDocInfo, !=, null]
[jsDocInfo]
[null]
[irNode, ., setJSDocInfo, (, jsDocInfo, )]
[irNode]
[jsDocInfo]
[setSourceInfo, (, irNode, ,, node, )]
[irNode]
[node]
[irNode]
[newStringNode, (, getStringValue, (, literalNode, ., getNumber, (, ), ), )]
[getStringValue, (, literalNode, ., getNumber, (, ), )]
[literalNode, ., getNumber, (, )]
[literalNode]
[handleJsDoc, (, literalNode, ,, irNode, )]
[literalNode]
[irNode]
[jsDocInfo, !=, null]
[jsDocInfo]
[null]
[irNode, ., setJSDocInfo, (, jsDocInfo, )]
[irNode]
[jsDocInfo]
[setSourceInfo, (, irNode, ,, literalNode, )]
[irNode]
[literalNode]
[irNode]
[(, long, ), value]
[value]
[longValue, ==, value]
[longValue]
[value]
[Long, ., toString, (, longValue, )]
[Long]
[longValue]
[Double, ., toString, (, value, )]
[Double]
[value]
[irNode, ., getLineno, (, ), ==, -, 1]
[irNode, ., getLineno, (, )]
[irNode]
[-, 1]
[1]
[node, ., getLineno, (, )]
[node]
[irNode, ., setLineno, (, lineno, )]
[irNode]
[lineno]
[position2charno, (, node, ., getAbsolutePosition, (, ), )]
[node, ., getAbsolutePosition, (, )]
[node]
[irNode, ., setCharno, (, charno, )]
[irNode]
[charno]
[maybeSetLengthFrom, (, irNode, ,, node, )]
[irNode]
[node]
[node, ., getValue, (, )]
[node]
[node, ., getLineno, (, )]
[node]
[node, ., getAbsolutePosition, (, )]
[node]
[3]
[new, JsDocInfoParser, (, new, JsDocTokenStream, (, comment, ., substring, (, numOpeningChars, ), ,, lineno, ,, position2charno, (, position, ), +, numOpeningChars, ), ,, node, ,, irNode, ,, config, ,, errorReporter, )]
[new, JsDocTokenStream, (, comment, ., substring, (, numOpeningChars, ), ,, lineno, ,, position2charno, (, position, ), +, numOpeningChars, )]
[comment, ., substring, (, numOpeningChars, )]
[comment]
[numOpeningChars]
[lineno]
[position2charno, (, position, ), +, numOpeningChars]
[position2charno, (, position, )]
[position]
[numOpeningChars]
[node]
[irNode]
[config]
[errorReporter]
[jsdocParser, ., setFileLevelJsDocBuilder, (, fileLevelJsDocBuilder, )]
[jsdocParser]
[fileLevelJsDocBuilder]
[jsdocParser, ., setFileOverviewJSDocInfo, (, fileOverviewInfo, )]
[jsdocParser]
[fileOverviewInfo]
[jsdocParser, ., parse, (, )]
[jsdocParser]
[jsdocParser]
[config, ., isIdeMode]
[config]
[node, ., setLength, (, source, ., getLength, (, ), )]
[node]
[source, ., getLength, (, )]
[source]
[sourceString, ., lastIndexOf, (, '\n', ,, position, )]
[sourceString]
['\n']
[position]
[lineIndex, ==, -, 1]
[lineIndex]
[-, 1]
[1]
[position]
[position, -, lineIndex, -, 1]
[position, -, lineIndex]
[position]
[lineIndex]
[1]
[transformDispatcher, ., process, (, node, )]
[transformDispatcher]
[node]
[newNode, (, transformTokenType, (, n, ., getType, (, ), ), )]
[transformTokenType, (, n, ., getType, (, ), )]
[n, ., getType, (, )]
[n]
[n]
[node, ., addChildToBack, (, transform, (, (, AstNode, ), child, ), )]
[node]
[transform, (, (, AstNode, ), child, )]
[(, AstNode, ), child]
[child]
[node]
[n, instanceof, Name]
[n]
[ret]
[transformNameAsString, (, (, Name, ), n, )]
[(, Name, ), n]
[n]
[n, instanceof, NumberLiteral]
[n]
[ret]
[transformNumberAsString, (, (, NumberLiteral, ), n, )]
[(, NumberLiteral, ), n]
[n]
[ret, ., putBooleanProp, (, Node, ., QUOTED_PROP, ,, true, )]
[ret]
[Node, ., QUOTED_PROP]
[Node]
[true]
[ret]
[transform, (, n, )]
[n]
[ret, ., putBooleanProp, (, Node, ., QUOTED_PROP, ,, true, )]
[ret]
[Node, ., QUOTED_PROP]
[Node]
[true]
[Preconditions, ., checkState, (, ret, ., isString, (, ), )]
[Preconditions]
[ret, ., isString, (, )]
[ret]
[ret]
[literalNode, ., isDestructuring, (, )]
[literalNode]
[reportDestructuringAssign, (, literalNode, )]
[literalNode]
[newNode, (, Token, ., ARRAYLIT, )]
[Token, ., ARRAYLIT]
[Token]
[literalNode, ., getElements, (, )]
[literalNode]
[transform, (, child, )]
[child]
[node, ., addChildToBack, (, c, )]
[node]
[c]
[node]
[processInfixExpression, (, assignmentNode, )]
[assignmentNode]
[assign, ., getFirstChild, (, )]
[assign]
[!, validAssignmentTarget, (, target, )]
[validAssignmentTarget, (, target, )]
[target]
[errorReporter, ., error, (, "invalid assignment target", ,, sourceName, ,, target, ., getLineno, (, ), ,, "", ,, 0, )]
[errorReporter]
["invalid assignment target"]
[sourceName]
[target, ., getLineno, (, )]
[target]
[""]
[0]
[assign]
[newNode, (, Token, ., SCRIPT, )]
[Token, ., SCRIPT]
[Token]
[rootNode]
[node, ., addChildToBack, (, transform, (, (, AstNode, ), child, ), )]
[node]
[transform, (, (, AstNode, ), child, )]
[(, AstNode, ), child]
[child]
[parseDirectives, (, node, )]
[node]
[node]
[null]
[isDirective, (, node, ., getFirstChild, (, ), )]
[node, ., getFirstChild, (, )]
[node]
[node, ., removeFirstChild, (, ), ., getFirstChild, (, ), ., getString, (, )]
[node, ., removeFirstChild, (, ), ., getFirstChild, (, )]
[node, ., removeFirstChild, (, )]
[node]
[directives, ==, null]
[directives]
[null]
[directives]
[Sets, ., newHashSet, (, directive, )]
[Sets]
[directive]
[directives, ., add, (, directive, )]
[directives]
[directive]
[directives, !=, null]
[directives]
[null]
[node, ., setDirectives, (, directives, )]
[node]
[directives]
[n, ==, null]
[n]
[null]
[false]
[n, ., getType, (, )]
[n]
[nType, ==, Token, ., EXPR_RESULT, &&, n, ., getFirstChild, (, ), ., isString, (, ), &&, ALLOWED_DIRECTIVES, ., contains, (, n, ., getFirstChild, (, ), ., getString, (, ), )]
[nType, ==, Token, ., EXPR_RESULT, &&, n, ., getFirstChild, (, ), ., isString, (, )]
[nType, ==, Token, ., EXPR_RESULT]
[nType]
[Token, ., EXPR_RESULT]
[Token]
[n, ., getFirstChild, (, ), ., isString, (, )]
[n, ., getFirstChild, (, )]
[n]
[ALLOWED_DIRECTIVES, ., contains, (, n, ., getFirstChild, (, ), ., getString, (, ), )]
[ALLOWED_DIRECTIVES]
[n, ., getFirstChild, (, ), ., getString, (, )]
[n, ., getFirstChild, (, )]
[n]
[processGeneric, (, blockNode, )]
[blockNode]
[newNode, (, Token, ., BREAK, )]
[Token, ., BREAK]
[Token]
[statementNode, ., getBreakLabel, (, ), !=, null]
[statementNode, ., getBreakLabel, (, )]
[statementNode]
[null]
[transform, (, statementNode, ., getBreakLabel, (, ), )]
[statementNode, ., getBreakLabel, (, )]
[statementNode]
[labelName, ., setType, (, Token, ., LABEL_NAME, )]
[labelName]
[Token, ., LABEL_NAME]
[Token]
[node, ., addChildToBack, (, labelName, )]
[node]
[labelName]
[node]
[clauseNode, ., getVarName, (, )]
[clauseNode]
[newNode, (, Token, ., CATCH, ,, transform, (, catchVar, ), )]
[Token, ., CATCH]
[Token]
[transform, (, catchVar, )]
[catchVar]
[clauseNode, ., getCatchCondition, (, ), !=, null]
[clauseNode, ., getCatchCondition, (, )]
[clauseNode]
[null]
[errorReporter, ., error, (, "Catch clauses are not supported", ,, sourceName, ,, clauseNode, ., getCatchCondition, (, ), ., getLineno, (, ), ,, "", ,, 0, )]
[errorReporter]
["Catch clauses are not supported"]
[sourceName]
[clauseNode, ., getCatchCondition, (, ), ., getLineno, (, )]
[clauseNode, ., getCatchCondition, (, )]
[clauseNode]
[""]
[0]
[node, ., addChildToBack, (, transformBlock, (, clauseNode, ., getBody, (, ), ), )]
[node]
[transformBlock, (, clauseNode, ., getBody, (, ), )]
[clauseNode, ., getBody, (, )]
[clauseNode]
[node]
[newNode, (, Token, ., HOOK, ,, transform, (, exprNode, ., getTestExpression, (, ), ), ,, transform, (, exprNode, ., getTrueExpression, (, ), ), ,, transform, (, exprNode, ., getFalseExpression, (, ), ), )]
[Token, ., HOOK]
[Token]
[transform, (, exprNode, ., getTestExpression, (, ), )]
[exprNode, ., getTestExpression, (, )]
[exprNode]
[transform, (, exprNode, ., getTrueExpression, (, ), )]
[exprNode, ., getTrueExpression, (, )]
[exprNode]
[transform, (, exprNode, ., getFalseExpression, (, ), )]
[exprNode, ., getFalseExpression, (, )]
[exprNode]
[newNode, (, Token, ., CONTINUE, )]
[Token, ., CONTINUE]
[Token]
[statementNode, ., getLabel, (, ), !=, null]
[statementNode, ., getLabel, (, )]
[statementNode]
[null]
[transform, (, statementNode, ., getLabel, (, ), )]
[statementNode, ., getLabel, (, )]
[statementNode]
[labelName, ., setType, (, Token, ., LABEL_NAME, )]
[labelName]
[Token, ., LABEL_NAME]
[Token]
[node, ., addChildToBack, (, labelName, )]
[node]
[labelName]
[node]
[newNode, (, Token, ., DO, ,, transformBlock, (, loopNode, ., getBody, (, ), ), ,, transform, (, loopNode, ., getCondition, (, ), ), )]
[Token, ., DO]
[Token]
[transformBlock, (, loopNode, ., getBody, (, ), )]
[loopNode, ., getBody, (, )]
[loopNode]
[transform, (, loopNode, ., getCondition, (, ), )]
[loopNode, ., getCondition, (, )]
[loopNode]
[newNode, (, Token, ., GETELEM, ,, transform, (, getNode, ., getTarget, (, ), ), ,, transform, (, getNode, ., getElement, (, ), ), )]
[Token, ., GETELEM]
[Token]
[transform, (, getNode, ., getTarget, (, ), )]
[getNode, ., getTarget, (, )]
[getNode]
[transform, (, getNode, ., getElement, (, ), )]
[getNode, ., getElement, (, )]
[getNode]
[newNode, (, Token, ., EMPTY, )]
[Token, ., EMPTY]
[Token]
[node]
[newNode, (, Token, ., EMPTY, )]
[Token, ., EMPTY]
[Token]
[node]
[newNode, (, transformTokenType, (, statementNode, ., getType, (, ), ), )]
[transformTokenType, (, statementNode, ., getType, (, ), )]
[statementNode, ., getType, (, )]
[statementNode]
[node, ., addChildToBack, (, transform, (, statementNode, ., getExpression, (, ), ), )]
[node]
[transform, (, statementNode, ., getExpression, (, ), )]
[statementNode, ., getExpression, (, )]
[statementNode]
[node]
[loopNode, ., isForEach, (, )]
[loopNode]
[errorReporter, ., error, (, "unsupported language extension: for each", ,, sourceName, ,, loopNode, ., getLineno, (, ), ,, "", ,, 0, )]
[errorReporter]
["unsupported language extension: for each"]
[sourceName]
[loopNode, ., getLineno, (, )]
[loopNode]
[""]
[0]
[newNode, (, Token, ., EXPR_RESULT, ,, Node, ., newNumber, (, 0, ), )]
[Token, ., EXPR_RESULT]
[Token]
[Node, ., newNumber, (, 0, )]
[Node]
[0]
[newNode, (, Token, ., FOR, ,, transform, (, loopNode, ., getIterator, (, ), ), ,, transform, (, loopNode, ., getIteratedObject, (, ), ), ,, transformBlock, (, loopNode, ., getBody, (, ), ), )]
[Token, ., FOR]
[Token]
[transform, (, loopNode, ., getIterator, (, ), )]
[loopNode, ., getIterator, (, )]
[loopNode]
[transform, (, loopNode, ., getIteratedObject, (, ), )]
[loopNode, ., getIteratedObject, (, )]
[loopNode]
[transformBlock, (, loopNode, ., getBody, (, ), )]
[loopNode, ., getBody, (, )]
[loopNode]
[newNode, (, Token, ., FOR, ,, transform, (, loopNode, ., getInitializer, (, ), ), ,, transform, (, loopNode, ., getCondition, (, ), ), ,, transform, (, loopNode, ., getIncrement, (, ), ), )]
[Token, ., FOR]
[Token]
[transform, (, loopNode, ., getInitializer, (, ), )]
[loopNode, ., getInitializer, (, )]
[loopNode]
[transform, (, loopNode, ., getCondition, (, ), )]
[loopNode, ., getCondition, (, )]
[loopNode]
[transform, (, loopNode, ., getIncrement, (, ), )]
[loopNode, ., getIncrement, (, )]
[loopNode]
[node, ., addChildToBack, (, transformBlock, (, loopNode, ., getBody, (, ), ), )]
[node]
[transformBlock, (, loopNode, ., getBody, (, ), )]
[loopNode, ., getBody, (, )]
[loopNode]
[node]
[newNode, (, transformTokenType, (, callNode, ., getType, (, ), ), ,, transform, (, callNode, ., getTarget, (, ), ), )]
[transformTokenType, (, callNode, ., getType, (, ), )]
[callNode, ., getType, (, )]
[callNode]
[transform, (, callNode, ., getTarget, (, ), )]
[callNode, ., getTarget, (, )]
[callNode]
[callNode, ., getArguments, (, )]
[callNode]
[node, ., addChildToBack, (, transform, (, child, ), )]
[node]
[transform, (, child, )]
[child]
[node, ., setLineno, (, node, ., getFirstChild, (, ), ., getLineno, (, ), )]
[node]
[node, ., getFirstChild, (, ), ., getLineno, (, )]
[node, ., getFirstChild, (, )]
[node]
[node, ., setCharno, (, node, ., getFirstChild, (, ), ., getCharno, (, ), )]
[node]
[node, ., getFirstChild, (, ), ., getCharno, (, )]
[node, ., getFirstChild, (, )]
[node]
[maybeSetLengthFrom, (, node, ,, callNode, )]
[node]
[callNode]
[node]
[functionNode, ., getFunctionName, (, )]
[functionNode]
[false]
[name, ==, null]
[name]
[null]
[functionNode, ., getFunctionType, (, )]
[functionNode]
[functionType, !=, FunctionNode, ., FUNCTION_EXPRESSION]
[functionType]
[FunctionNode, ., FUNCTION_EXPRESSION]
[FunctionNode]
[errorReporter, ., error, (, "unnamed function statement", ,, sourceName, ,, functionNode, ., getLineno, (, ), ,, "", ,, 0, )]
[errorReporter]
["unnamed function statement"]
[sourceName]
[functionNode, ., getLineno, (, )]
[functionNode]
[""]
[0]
[newNode, (, Token, ., EXPR_RESULT, ,, Node, ., newNumber, (, 0, ), )]
[Token, ., EXPR_RESULT]
[Token]
[Node, ., newNumber, (, 0, )]
[Node]
[0]
[name]
[new, Name, (, )]
[name, ., setIdentifier, (, "", )]
[name]
[""]
[isUnnamedFunction]
[true]
[newNode, (, Token, ., FUNCTION, )]
[Token, ., FUNCTION]
[Token]
[transform, (, name, )]
[name]
[isUnnamedFunction]
[newName, ., setLineno, (, functionNode, ., getLineno, (, ), )]
[newName]
[functionNode, ., getLineno, (, )]
[functionNode]
[functionNode, ., getAbsolutePosition, (, ), +, functionNode, ., getLp, (, )]
[functionNode, ., getAbsolutePosition, (, )]
[functionNode]
[functionNode, ., getLp, (, )]
[functionNode]
[newName, ., setCharno, (, position2charno, (, lpColumn, ), )]
[newName]
[position2charno, (, lpColumn, )]
[lpColumn]
[maybeSetLengthFrom, (, newName, ,, name, )]
[newName]
[name]
[node, ., addChildToBack, (, newName, )]
[node]
[newName]
[newNode, (, Token, ., PARAM_LIST, )]
[Token, ., PARAM_LIST]
[Token]
[functionNode, ., getFunctionName, (, )]
[functionNode]
[fnName, !=, null]
[fnName]
[null]
[lp, ., setLineno, (, fnName, ., getLineno, (, ), )]
[lp]
[fnName, ., getLineno, (, )]
[fnName]
[lp, ., setLineno, (, functionNode, ., getLineno, (, ), )]
[lp]
[functionNode, ., getLineno, (, )]
[functionNode]
[functionNode, ., getLp, (, ), +, functionNode, ., getAbsolutePosition, (, )]
[functionNode, ., getLp, (, )]
[functionNode]
[functionNode, ., getAbsolutePosition, (, )]
[functionNode]
[lp, ., setCharno, (, position2charno, (, lparenCharno, ), )]
[lp]
[position2charno, (, lparenCharno, )]
[lparenCharno]
[functionNode, ., getParams, (, )]
[functionNode]
[transform, (, param, )]
[param]
[paramNode, ., isName, (, )]
[paramNode]
[lp, ., addChildToBack, (, paramNode, )]
[lp]
[paramNode]
[Preconditions, ., checkState, (, config, ., isIdeMode, ||, paramNode, ., isObjectLit, (, ), ||, paramNode, ., isArrayLit, (, ), )]
[Preconditions]
[config, ., isIdeMode, ||, paramNode, ., isObjectLit, (, ), ||, paramNode, ., isArrayLit, (, )]
[config, ., isIdeMode, ||, paramNode, ., isObjectLit, (, )]
[config, ., isIdeMode]
[config]
[paramNode, ., isObjectLit, (, )]
[paramNode]
[paramNode, ., isArrayLit, (, )]
[paramNode]
[node, ., addChildToBack, (, lp, )]
[node]
[lp]
[transform, (, functionNode, ., getBody, (, ), )]
[functionNode, ., getBody, (, )]
[functionNode]
[!, bodyNode, ., isBlock, (, )]
[bodyNode, ., isBlock, (, )]
[bodyNode]
[Preconditions, ., checkState, (, config, ., isIdeMode, )]
[Preconditions]
[config, ., isIdeMode]
[config]
[bodyNode]
[IR, ., block, (, )]
[IR]
[parseDirectives, (, bodyNode, )]
[bodyNode]
[node, ., addChildToBack, (, bodyNode, )]
[node]
[bodyNode]
[node]
[newNode, (, Token, ., IF, )]
[Token, ., IF]
[Token]
[node, ., addChildToBack, (, transform, (, statementNode, ., getCondition, (, ), ), )]
[node]
[transform, (, statementNode, ., getCondition, (, ), )]
[statementNode, ., getCondition, (, )]
[statementNode]
[node, ., addChildToBack, (, transformBlock, (, statementNode, ., getThenPart, (, ), ), )]
[node]
[transformBlock, (, statementNode, ., getThenPart, (, ), )]
[statementNode, ., getThenPart, (, )]
[statementNode]
[statementNode, ., getElsePart, (, ), !=, null]
[statementNode, ., getElsePart, (, )]
[statementNode]
[null]
[node, ., addChildToBack, (, transformBlock, (, statementNode, ., getElsePart, (, ), ), )]
[node]
[transformBlock, (, statementNode, ., getElsePart, (, ), )]
[statementNode, ., getElsePart, (, )]
[statementNode]
[node]
[newNode, (, transformTokenType, (, exprNode, ., getType, (, ), ), ,, transform, (, exprNode, ., getLeft, (, ), ), ,, transform, (, exprNode, ., getRight, (, ), ), )]
[transformTokenType, (, exprNode, ., getType, (, ), )]
[exprNode, ., getType, (, )]
[exprNode]
[transform, (, exprNode, ., getLeft, (, ), )]
[exprNode, ., getLeft, (, )]
[exprNode]
[transform, (, exprNode, ., getRight, (, ), )]
[exprNode, ., getRight, (, )]
[exprNode]
[n, ., setLineno, (, exprNode, ., getLineno, (, ), )]
[n]
[exprNode, ., getLineno, (, )]
[exprNode]
[n, ., setCharno, (, position2charno, (, exprNode, ., getAbsolutePosition, (, ), ), )]
[n]
[position2charno, (, exprNode, ., getAbsolutePosition, (, ), )]
[exprNode, ., getAbsolutePosition, (, )]
[exprNode]
[maybeSetLengthFrom, (, n, ,, exprNode, )]
[n]
[exprNode]
[n]
[newNode, (, transformTokenType, (, literalNode, ., getType, (, ), ), )]
[transformTokenType, (, literalNode, ., getType, (, ), )]
[literalNode, ., getType, (, )]
[literalNode]
[newStringNode, (, Token, ., LABEL_NAME, ,, labelNode, ., getName, (, ), )]
[Token, ., LABEL_NAME]
[Token]
[labelNode, ., getName, (, )]
[labelNode]
[newNode, (, Token, ., LABEL, )]
[Token, ., LABEL]
[Token]
[null]
[node]
[statementNode, ., getLabels, (, )]
[statementNode]
[prev, !=, null]
[prev]
[null]
[prev, ., addChildToBack, (, cur, )]
[prev]
[cur]
[cur, ., addChildToBack, (, transform, (, label, ), )]
[cur]
[transform, (, label, )]
[label]
[cur, ., setLineno, (, label, ., getLineno, (, ), )]
[cur]
[label, ., getLineno, (, )]
[label]
[maybeSetLengthFrom, (, cur, ,, label, )]
[cur]
[label]
[position2charno, (, label, ., getAbsolutePosition, (, ), )]
[label, ., getAbsolutePosition, (, )]
[label]
[cur, ., setCharno, (, clauseAbsolutePosition, )]
[cur]
[clauseAbsolutePosition]
[prev]
[cur]
[cur]
[newNode, (, Token, ., LABEL, )]
[Token, ., LABEL]
[Token]
[prev, ., addChildToBack, (, transform, (, statementNode, ., getStatement, (, ), ), )]
[prev]
[transform, (, statementNode, ., getStatement, (, ), )]
[statementNode, ., getStatement, (, )]
[statementNode]
[node]
[processName, (, nameNode, ,, false, )]
[nameNode]
[false]
[asString]
[newStringNode, (, Token, ., STRING, ,, nameNode, ., getIdentifier, (, ), )]
[Token, ., STRING]
[Token]
[nameNode, ., getIdentifier, (, )]
[nameNode]
[isReservedKeyword, (, nameNode, ., getIdentifier, (, ), )]
[nameNode, ., getIdentifier, (, )]
[nameNode]
[errorReporter, ., error, (, "identifier is a reserved word", ,, sourceName, ,, nameNode, ., getLineno, (, ), ,, "", ,, 0, )]
[errorReporter]
["identifier is a reserved word"]
[sourceName]
[nameNode, ., getLineno, (, )]
[nameNode]
[""]
[0]
[newStringNode, (, Token, ., NAME, ,, nameNode, ., getIdentifier, (, ), )]
[Token, ., NAME]
[Token]
[nameNode, ., getIdentifier, (, )]
[nameNode]
[reservedKeywords, !=, null, &&, reservedKeywords, ., contains, (, identifier, )]
[reservedKeywords, !=, null]
[reservedKeywords]
[null]
[reservedKeywords, ., contains, (, identifier, )]
[reservedKeywords]
[identifier]
[newNode, (, transformTokenType, (, exprNode, ., getType, (, ), ), ,, transform, (, exprNode, ., getTarget, (, ), ), )]
[transformTokenType, (, exprNode, ., getType, (, ), )]
[exprNode, ., getType, (, )]
[exprNode]
[transform, (, exprNode, ., getTarget, (, ), )]
[exprNode, ., getTarget, (, )]
[exprNode]
[exprNode, ., getArguments, (, )]
[exprNode]
[node, ., addChildToBack, (, transform, (, child, ), )]
[node]
[transform, (, child, )]
[child]
[node, ., setLineno, (, exprNode, ., getLineno, (, ), )]
[node]
[exprNode, ., getLineno, (, )]
[exprNode]
[node, ., setCharno, (, position2charno, (, exprNode, ., getAbsolutePosition, (, ), ), )]
[node]
[position2charno, (, exprNode, ., getAbsolutePosition, (, ), )]
[exprNode, ., getAbsolutePosition, (, )]
[exprNode]
[maybeSetLengthFrom, (, node, ,, exprNode, )]
[node]
[exprNode]
[node]
[newNumberNode, (, literalNode, ., getNumber, (, ), )]
[literalNode, ., getNumber, (, )]
[literalNode]
[literalNode, ., isDestructuring, (, )]
[literalNode]
[reportDestructuringAssign, (, literalNode, )]
[literalNode]
[newNode, (, Token, ., OBJECTLIT, )]
[Token, ., OBJECTLIT]
[Token]
[literalNode, ., getElements, (, )]
[literalNode]
[config, ., languageMode, ==, LanguageMode, ., ECMASCRIPT3]
[config, ., languageMode]
[config]
[LanguageMode, ., ECMASCRIPT3]
[LanguageMode]
[el, ., isGetter, (, )]
[el]
[reportGetter, (, el, )]
[el]
[el, ., isSetter, (, )]
[el]
[reportSetter, (, el, )]
[el]
[transformAsString, (, el, ., getLeft, (, ), )]
[el, ., getLeft, (, )]
[el]
[key, ., setType, (, Token, ., STRING_KEY, )]
[key]
[Token, ., STRING_KEY]
[Token]
[transform, (, el, ., getRight, (, ), )]
[el, ., getRight, (, )]
[el]
[el, ., isGetter, (, )]
[el]
[key, ., setType, (, Token, ., GETTER_DEF, )]
[key]
[Token, ., GETTER_DEF]
[Token]
[Preconditions, ., checkState, (, value, ., isFunction, (, ), )]
[Preconditions]
[value, ., isFunction, (, )]
[value]
[getFnParamNode, (, value, ), ., hasChildren, (, )]
[getFnParamNode, (, value, )]
[value]
[reportGetterParam, (, el, ., getLeft, (, ), )]
[el, ., getLeft, (, )]
[el]
[el, ., isSetter, (, )]
[el]
[key, ., setType, (, Token, ., SETTER_DEF, )]
[key]
[Token, ., SETTER_DEF]
[Token]
[Preconditions, ., checkState, (, value, ., isFunction, (, ), )]
[Preconditions]
[value, ., isFunction, (, )]
[value]
[!, getFnParamNode, (, value, ), ., hasOneChild, (, )]
[getFnParamNode, (, value, ), ., hasOneChild, (, )]
[getFnParamNode, (, value, )]
[value]
[reportSetterParam, (, el, ., getLeft, (, ), )]
[el, ., getLeft, (, )]
[el]
[key, ., addChildToFront, (, value, )]
[key]
[value]
[node, ., addChildToBack, (, key, )]
[node]
[key]
[node]
[Preconditions, ., checkArgument, (, fnNode, ., isFunction, (, ), )]
[Preconditions]
[fnNode, ., isFunction, (, )]
[fnNode]
[fnNode, ., getFirstChild, (, ), ., getNext, (, )]
[fnNode, ., getFirstChild, (, )]
[fnNode]
[processInfixExpression, (, propertyNode, )]
[propertyNode]
[transform, (, exprNode, ., getExpression, (, ), )]
[exprNode, ., getExpression, (, )]
[exprNode]
[node]
[transform, (, getNode, ., getTarget, (, ), )]
[getNode, ., getTarget, (, )]
[getNode]
[newNode, (, Token, ., GETPROP, ,, leftChild, ,, transformAsString, (, getNode, ., getProperty, (, ), ), )]
[Token, ., GETPROP]
[Token]
[leftChild]
[transformAsString, (, getNode, ., getProperty, (, ), )]
[getNode, ., getProperty, (, )]
[getNode]
[newNode, ., setLineno, (, leftChild, ., getLineno, (, ), )]
[newNode]
[leftChild, ., getLineno, (, )]
[leftChild]
[newNode, ., setCharno, (, leftChild, ., getCharno, (, ), )]
[newNode]
[leftChild, ., getCharno, (, )]
[leftChild]
[maybeSetLengthFrom, (, newNode, ,, getNode, )]
[newNode]
[getNode]
[newNode]
[newStringNode, (, literalNode, ., getValue, (, ), )]
[literalNode, ., getValue, (, )]
[literalNode]
[literalStringNode, ., setLineno, (, literalNode, ., getLineno, (, ), )]
[literalStringNode]
[literalNode, ., getLineno, (, )]
[literalNode]
[maybeSetLengthFrom, (, literalStringNode, ,, literalNode, )]
[literalStringNode]
[literalNode]
[newNode, (, Token, ., REGEXP, ,, literalStringNode, )]
[Token, ., REGEXP]
[Token]
[literalStringNode]
[literalNode, ., getFlags, (, )]
[literalNode]
[flags, !=, null, &&, !, flags, ., isEmpty, (, )]
[flags, !=, null]
[flags]
[null]
[!, flags, ., isEmpty, (, )]
[flags, ., isEmpty, (, )]
[flags]
[newStringNode, (, flags, )]
[flags]
[flagsNode, ., setLineno, (, literalNode, ., getLineno, (, ), )]
[flagsNode]
[literalNode, ., getLineno, (, )]
[literalNode]
[maybeSetLengthFrom, (, flagsNode, ,, literalNode, )]
[flagsNode]
[literalNode]
[node, ., addChildToBack, (, flagsNode, )]
[node]
[flagsNode]
[node]
[newNode, (, Token, ., RETURN, )]
[Token, ., RETURN]
[Token]
[statementNode, ., getReturnValue, (, ), !=, null]
[statementNode, ., getReturnValue, (, )]
[statementNode]
[null]
[node, ., addChildToBack, (, transform, (, statementNode, ., getReturnValue, (, ), ), )]
[node]
[transform, (, statementNode, ., getReturnValue, (, ), )]
[statementNode, ., getReturnValue, (, )]
[statementNode]
[node]
[processGeneric, (, scopeNode, )]
[scopeNode]
[literalNode, ., getValue, (, )]
[literalNode]
[newStringNode, (, value, )]
[value]
[value, ., indexOf, (, '\u000B', ), !=, -, 1]
[value, ., indexOf, (, '\u000B', )]
[value]
['\u000B']
[-, 1]
[1]
[literalNode, ., getAbsolutePosition, (, )]
[literalNode]
[start, +, literalNode, ., getLength, (, )]
[start]
[literalNode, ., getLength, (, )]
[literalNode]
[start, <, sourceString, ., length, (, ), &&, (, sourceString, ., substring, (, start, ,, Math, ., min, (, sourceString, ., length, (, ), ,, end, ), ), ., indexOf, (, "\\v", ), !=, -, 1, )]
[start, <, sourceString, ., length, (, )]
[start]
[sourceString, ., length, (, )]
[sourceString]
[(, sourceString, ., substring, (, start, ,, Math, ., min, (, sourceString, ., length, (, ), ,, end, ), ), ., indexOf, (, "\\v", ), !=, -, 1, )]
[sourceString, ., substring, (, start, ,, Math, ., min, (, sourceString, ., length, (, ), ,, end, ), ), ., indexOf, (, "\\v", ), !=, -, 1]
[sourceString, ., substring, (, start, ,, Math, ., min, (, sourceString, ., length, (, ), ,, end, ), ), ., indexOf, (, "\\v", )]
[sourceString, ., substring, (, start, ,, Math, ., min, (, sourceString, ., length, (, ), ,, end, ), )]
[sourceString]
[start]
[Math, ., min, (, sourceString, ., length, (, ), ,, end, )]
[Math]
[sourceString, ., length, (, )]
[sourceString]
[end]
["\\v"]
[-, 1]
[1]
[n, ., putBooleanProp, (, Node, ., SLASH_V, ,, true, )]
[n]
[Node, ., SLASH_V]
[Node]
[true]
[n]
[caseNode, ., isDefault, (, )]
[caseNode]
[node]
[newNode, (, Token, ., DEFAULT_CASE, )]
[Token, ., DEFAULT_CASE]
[Token]
[caseNode, ., getExpression, (, )]
[caseNode]
[node]
[newNode, (, Token, ., CASE, ,, transform, (, expr, ), )]
[Token, ., CASE]
[Token]
[transform, (, expr, )]
[expr]
[newNode, (, Token, ., BLOCK, )]
[Token, ., BLOCK]
[Token]
[block, ., putBooleanProp, (, Node, ., SYNTHETIC_BLOCK_PROP, ,, true, )]
[block]
[Node, ., SYNTHETIC_BLOCK_PROP]
[Node]
[true]
[block, ., setLineno, (, caseNode, ., getLineno, (, ), )]
[block]
[caseNode, ., getLineno, (, )]
[caseNode]
[block, ., setCharno, (, position2charno, (, caseNode, ., getAbsolutePosition, (, ), ), )]
[block]
[position2charno, (, caseNode, ., getAbsolutePosition, (, ), )]
[caseNode, ., getAbsolutePosition, (, )]
[caseNode]
[maybeSetLengthFrom, (, block, ,, caseNode, )]
[block]
[caseNode]
[caseNode, ., getStatements, (, ), !=, null]
[caseNode, ., getStatements, (, )]
[caseNode]
[null]
[caseNode, ., getStatements, (, )]
[caseNode]
[block, ., addChildToBack, (, transform, (, child, ), )]
[block]
[transform, (, child, )]
[child]
[node, ., addChildToBack, (, block, )]
[node]
[block]
[node]
[newNode, (, Token, ., SWITCH, ,, transform, (, statementNode, ., getExpression, (, ), ), )]
[Token, ., SWITCH]
[Token]
[transform, (, statementNode, ., getExpression, (, ), )]
[statementNode, ., getExpression, (, )]
[statementNode]
[statementNode, ., getCases, (, )]
[statementNode]
[node, ., addChildToBack, (, transform, (, child, ), )]
[node]
[transform, (, child, )]
[child]
[node]
[newNode, (, Token, ., THROW, ,, transform, (, statementNode, ., getExpression, (, ), ), )]
[Token, ., THROW]
[Token]
[transform, (, statementNode, ., getExpression, (, ), )]
[statementNode, ., getExpression, (, )]
[statementNode]
[newNode, (, Token, ., TRY, ,, transformBlock, (, statementNode, ., getTryBlock, (, ), ), )]
[Token, ., TRY]
[Token]
[transformBlock, (, statementNode, ., getTryBlock, (, ), )]
[statementNode, ., getTryBlock, (, )]
[statementNode]
[newNode, (, Token, ., BLOCK, )]
[Token, ., BLOCK]
[Token]
[false]
[statementNode, ., getCatchClauses, (, )]
[statementNode]
[lineSet, ==, false]
[lineSet]
[false]
[block, ., setLineno, (, cc, ., getLineno, (, ), )]
[block]
[cc, ., getLineno, (, )]
[cc]
[maybeSetLengthFrom, (, block, ,, cc, )]
[block]
[cc]
[lineSet]
[true]
[block, ., addChildToBack, (, transform, (, cc, ), )]
[block]
[transform, (, cc, )]
[cc]
[node, ., addChildToBack, (, block, )]
[node]
[block]
[statementNode, ., getFinallyBlock, (, )]
[statementNode]
[finallyBlock, !=, null]
[finallyBlock]
[null]
[node, ., addChildToBack, (, transformBlock, (, finallyBlock, ), )]
[node]
[transformBlock, (, finallyBlock, )]
[finallyBlock]
[(, lineSet, ==, false, ), &&, (, finallyBlock, !=, null, )]
[(, lineSet, ==, false, )]
[lineSet, ==, false]
[lineSet]
[false]
[(, finallyBlock, !=, null, )]
[finallyBlock, !=, null]
[finallyBlock]
[null]
[block, ., setLineno, (, finallyBlock, ., getLineno, (, ), )]
[block]
[finallyBlock, ., getLineno, (, )]
[finallyBlock]
[maybeSetLengthFrom, (, block, ,, finallyBlock, )]
[block]
[finallyBlock]
[node]
[transformTokenType, (, exprNode, ., getType, (, ), )]
[exprNode, ., getType, (, )]
[exprNode]
[transform, (, exprNode, ., getOperand, (, ), )]
[exprNode, ., getOperand, (, )]
[exprNode]
[type, ==, Token, ., NEG, &&, operand, ., isNumber, (, )]
[type, ==, Token, ., NEG]
[type]
[Token, ., NEG]
[Token]
[operand, ., isNumber, (, )]
[operand]
[operand, ., setDouble, (, -, operand, ., getDouble, (, ), )]
[operand]
[-, operand, ., getDouble, (, )]
[operand, ., getDouble, (, )]
[operand]
[operand]
[type, ==, Token, ., DELPROP, &&, !, (, operand, ., isGetProp, (, ), ||, operand, ., isGetElem, (, ), ||, operand, ., isName, (, ), )]
[type, ==, Token, ., DELPROP]
[type]
[Token, ., DELPROP]
[Token]
[!, (, operand, ., isGetProp, (, ), ||, operand, ., isGetElem, (, ), ||, operand, ., isName, (, ), )]
[(, operand, ., isGetProp, (, ), ||, operand, ., isGetElem, (, ), ||, operand, ., isName, (, ), )]
[operand, ., isGetProp, (, ), ||, operand, ., isGetElem, (, ), ||, operand, ., isName, (, )]
[operand, ., isGetProp, (, ), ||, operand, ., isGetElem, (, )]
[operand, ., isGetProp, (, )]
[operand]
[operand, ., isGetElem, (, )]
[operand]
[operand, ., isName, (, )]
[operand]
["Invalid delete operand. Only properties can be deleted."]
[errorReporter, ., error, (, msg, ,, sourceName, ,, operand, ., getLineno, (, ), ,, "", ,, 0, )]
[errorReporter]
[msg]
[sourceName]
[operand, ., getLineno, (, )]
[operand]
[""]
[0]
[type, ==, Token, ., INC, ||, type, ==, Token, ., DEC]
[type, ==, Token, ., INC]
[type]
[Token, ., INC]
[Token]
[type, ==, Token, ., DEC]
[type]
[Token, ., DEC]
[Token]
[!, validAssignmentTarget, (, operand, )]
[validAssignmentTarget, (, operand, )]
[operand]
[(, type, ==, Token, ., INC, ), ?, "invalid increment target", :, "invalid decrement target"]
[(, type, ==, Token, ., INC, )]
[type, ==, Token, ., INC]
[type]
[Token, ., INC]
[Token]
["invalid increment target"]
["invalid decrement target"]
[errorReporter, ., error, (, msg, ,, sourceName, ,, operand, ., getLineno, (, ), ,, "", ,, 0, )]
[errorReporter]
[msg]
[sourceName]
[operand, ., getLineno, (, )]
[operand]
[""]
[0]
[newNode, (, type, ,, operand, )]
[type]
[operand]
[exprNode, ., isPostfix, (, )]
[exprNode]
[node, ., putBooleanProp, (, Node, ., INCRDECR_PROP, ,, true, )]
[node]
[Node, ., INCRDECR_PROP]
[Node]
[true]
[node]
[target, ., getType, (, )]
[target]
[Token, ., NAME]
[Token]
[Token, ., GETPROP]
[Token]
[Token, ., GETELEM]
[Token]
[true]
[false]
[!, config, ., acceptConstKeyword, &&, declarationNode, ., getType, (, ), ==, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., CONST]
[!, config, ., acceptConstKeyword]
[config, ., acceptConstKeyword]
[config]
[declarationNode, ., getType, (, ), ==, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., CONST]
[declarationNode, ., getType, (, )]
[declarationNode]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., CONST]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[processIllegalToken, (, declarationNode, )]
[declarationNode]
[newNode, (, Token, ., VAR, )]
[Token, ., VAR]
[Token]
[declarationNode, ., getVariables, (, )]
[declarationNode]
[node, ., addChildToBack, (, transform, (, child, ), )]
[node]
[transform, (, child, )]
[child]
[node]
[transform, (, initializerNode, ., getTarget, (, ), )]
[initializerNode, ., getTarget, (, )]
[initializerNode]
[initializerNode, ., getInitializer, (, ), !=, null]
[initializerNode, ., getInitializer, (, )]
[initializerNode]
[null]
[transform, (, initializerNode, ., getInitializer, (, ), )]
[initializerNode, ., getInitializer, (, )]
[initializerNode]
[node, ., addChildToBack, (, initalizer, )]
[node]
[initalizer]
[node]
[newNode, (, Token, ., WHILE, ,, transform, (, loopNode, ., getCondition, (, ), ), ,, transformBlock, (, loopNode, ., getBody, (, ), ), )]
[Token, ., WHILE]
[Token]
[transform, (, loopNode, ., getCondition, (, ), )]
[loopNode, ., getCondition, (, )]
[loopNode]
[transformBlock, (, loopNode, ., getBody, (, ), )]
[loopNode, ., getBody, (, )]
[loopNode]
[newNode, (, Token, ., WITH, ,, transform, (, statementNode, ., getExpression, (, ), ), ,, transformBlock, (, statementNode, ., getStatement, (, ), ), )]
[Token, ., WITH]
[Token]
[transform, (, statementNode, ., getExpression, (, ), )]
[statementNode, ., getExpression, (, )]
[statementNode]
[transformBlock, (, statementNode, ., getStatement, (, ), )]
[statementNode, ., getStatement, (, )]
[statementNode]
[errorReporter, ., error, (, "Unsupported syntax: ", +, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., typeToName, (, node, ., getType, (, ), ), ,, sourceName, ,, node, ., getLineno, (, ), ,, "", ,, 0, )]
[errorReporter]
["Unsupported syntax: ", +, com, ., google, ., javascript, ., rhino, ., head, ., Token, ., typeToName, (, node, ., getType, (, ), )]
["Unsupported syntax: "]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., typeToName, (, node, ., getType, (, ), )]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[node, ., getType, (, )]
[node]
[sourceName]
[node, ., getLineno, (, )]
[node]
[""]
[0]
[newNode, (, Token, ., EMPTY, )]
[Token, ., EMPTY]
[Token]
[errorReporter, ., error, (, "destructuring assignment forbidden", ,, sourceName, ,, node, ., getLineno, (, ), ,, "", ,, 0, )]
[errorReporter]
["destructuring assignment forbidden"]
[sourceName]
[node, ., getLineno, (, )]
[node]
[""]
[0]
[errorReporter, ., error, (, GETTER_ERROR_MESSAGE, ,, sourceName, ,, node, ., getLineno, (, ), ,, "", ,, 0, )]
[errorReporter]
[GETTER_ERROR_MESSAGE]
[sourceName]
[node, ., getLineno, (, )]
[node]
[""]
[0]
[errorReporter, ., error, (, SETTER_ERROR_MESSAGE, ,, sourceName, ,, node, ., getLineno, (, ), ,, "", ,, 0, )]
[errorReporter]
[SETTER_ERROR_MESSAGE]
[sourceName]
[node, ., getLineno, (, )]
[node]
[""]
[0]
[errorReporter, ., error, (, "getters may not have parameters", ,, sourceName, ,, node, ., getLineno, (, ), ,, "", ,, 0, )]
[errorReporter]
["getters may not have parameters"]
[sourceName]
[node, ., getLineno, (, )]
[node]
[""]
[0]
[errorReporter, ., error, (, "setters must have exactly one parameter", ,, sourceName, ,, node, ., getLineno, (, ), ,, "", ,, 0, )]
[errorReporter]
["setters must have exactly one parameter"]
[sourceName]
[node, ., getLineno, (, )]
[node]
[""]
[0]
[token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., RETURN]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., RETURN]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., BITOR]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., BITOR]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., BITXOR]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., BITXOR]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., BITAND]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., BITAND]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., EQ]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., EQ]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., NE]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., NE]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., LT]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., LT]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., LE]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., LE]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., GT]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., GT]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., GE]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., GE]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., LSH]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., LSH]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., RSH]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., RSH]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., URSH]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., URSH]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ADD]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., ADD]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., SUB]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., SUB]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., MUL]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., MUL]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., DIV]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., DIV]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., MOD]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., MOD]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., NOT]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., NOT]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., BITNOT]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., BITNOT]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., POS]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., POS]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., NEG]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., NEG]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., NEW]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., NEW]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., DELPROP]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., DELPROP]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., TYPEOF]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., TYPEOF]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., GETPROP]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., GETPROP]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., GETELEM]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., GETELEM]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., CALL]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., CALL]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., NAME]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., NAME]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., NUMBER]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., NUMBER]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., STRING]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., STRING]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., NULL]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., NULL]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., THIS]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., THIS]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., FALSE]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., FALSE]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., TRUE]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., TRUE]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., SHEQ]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., SHEQ]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., SHNE]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., SHNE]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., REGEXP]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., REGEXP]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., THROW]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., THROW]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., IN]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., IN]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., INSTANCEOF]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., INSTANCEOF]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ARRAYLIT]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., ARRAYLIT]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., OBJECTLIT]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., OBJECTLIT]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., TRY]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., TRY]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., LP]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., PARAM_LIST]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., COMMA]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., COMMA]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., ASSIGN]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_BITOR]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., ASSIGN_BITOR]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_BITXOR]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., ASSIGN_BITXOR]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_BITAND]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., ASSIGN_BITAND]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_LSH]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., ASSIGN_LSH]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_RSH]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., ASSIGN_RSH]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_URSH]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., ASSIGN_URSH]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_ADD]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., ASSIGN_ADD]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_SUB]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., ASSIGN_SUB]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_MUL]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., ASSIGN_MUL]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_DIV]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., ASSIGN_DIV]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., ASSIGN_MOD]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., ASSIGN_MOD]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., HOOK]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., HOOK]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., OR]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., OR]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., AND]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., AND]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., INC]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., INC]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., DEC]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., DEC]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., FUNCTION]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., FUNCTION]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., IF]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., IF]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., SWITCH]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., SWITCH]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., CASE]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., CASE]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., DEFAULT]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., DEFAULT_CASE]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., WHILE]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., WHILE]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., DO]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., DO]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., FOR]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., FOR]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., BREAK]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., BREAK]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., CONTINUE]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., CONTINUE]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., VAR]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., VAR]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., WITH]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., WITH]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., CATCH]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., CATCH]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., VOID]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., VOID]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., EMPTY]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., EMPTY]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., BLOCK]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., BLOCK]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., LABEL]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., LABEL]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., EXPR_VOID]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., EXPR_RESULT]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., EXPR_RESULT]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., SCRIPT]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., SCRIPT]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., GET]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., GETTER_DEF]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., SET]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., SETTER_DEF]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., CONST]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., CONST]
[Token]
[com, ., google, ., javascript, ., rhino, ., head, ., Token, ., DEBUGGER]
[com, ., google, ., javascript, ., rhino, ., head, ., Token]
[com, ., google, ., javascript, ., rhino, ., head]
[com, ., google, ., javascript, ., rhino]
[com, ., google, ., javascript]
[com, ., google]
[com]
[Token, ., DEBUGGER]
[Token]
[new, IllegalStateException, (, String, ., valueOf, (, token, ), )]
[String, ., valueOf, (, token, )]
[String]
[token]
[new, Node, (, type, ), ., clonePropsFrom, (, templateNode, )]
[new, Node, (, type, )]
[type]
[templateNode]
[new, Node, (, type, ,, child1, ), ., clonePropsFrom, (, templateNode, )]
[new, Node, (, type, ,, child1, )]
[type]
[child1]
[templateNode]
[new, Node, (, type, ,, child1, ,, child2, ), ., clonePropsFrom, (, templateNode, )]
[new, Node, (, type, ,, child1, ,, child2, )]
[type]
[child1]
[child2]
[templateNode]
[new, Node, (, type, ,, child1, ,, child2, ,, child3, ), ., clonePropsFrom, (, templateNode, )]
[new, Node, (, type, ,, child1, ,, child2, ,, child3, )]
[type]
[child1]
[child2]
[child3]
[templateNode]
[IR, ., string, (, value, ), ., clonePropsFrom, (, templateNode, )]
[IR, ., string, (, value, )]
[IR]
[value]
[templateNode]
[Node, ., newString, (, type, ,, value, ), ., clonePropsFrom, (, templateNode, )]
[Node, ., newString, (, type, ,, value, )]
[Node]
[type]
[value]
[templateNode]
[IR, ., number, (, value, ), ., clonePropsFrom, (, templateNode, )]
[IR, ., number, (, value, )]
[IR]
[value]
[templateNode]
