[-, 436928820673516179L]
[436928820673516179L]
[Double, ., NaN]
[Double]
[false]
[new, Well19937c, (, )]
[populationSize]
[numberOfSuccesses]
[sampleSize]
[rng]
[populationSize, <=, 0]
[populationSize]
[0]
[new, NotStrictlyPositiveException, (, LocalizedFormats, ., POPULATION_SIZE, ,, populationSize, )]
[LocalizedFormats, ., POPULATION_SIZE]
[LocalizedFormats]
[populationSize]
[numberOfSuccesses, <, 0]
[numberOfSuccesses]
[0]
[new, NotPositiveException, (, LocalizedFormats, ., NUMBER_OF_SUCCESSES, ,, numberOfSuccesses, )]
[LocalizedFormats, ., NUMBER_OF_SUCCESSES]
[LocalizedFormats]
[numberOfSuccesses]
[sampleSize, <, 0]
[sampleSize]
[0]
[new, NotPositiveException, (, LocalizedFormats, ., NUMBER_OF_SAMPLES, ,, sampleSize, )]
[LocalizedFormats, ., NUMBER_OF_SAMPLES]
[LocalizedFormats]
[sampleSize]
[numberOfSuccesses, >, populationSize]
[numberOfSuccesses]
[populationSize]
[new, NumberIsTooLargeException, (, LocalizedFormats, ., NUMBER_OF_SUCCESS_LARGER_THAN_POPULATION_SIZE, ,, numberOfSuccesses, ,, populationSize, ,, true, )]
[LocalizedFormats, ., NUMBER_OF_SUCCESS_LARGER_THAN_POPULATION_SIZE]
[LocalizedFormats]
[numberOfSuccesses]
[populationSize]
[true]
[sampleSize, >, populationSize]
[sampleSize]
[populationSize]
[new, NumberIsTooLargeException, (, LocalizedFormats, ., SAMPLE_SIZE_LARGER_THAN_POPULATION_SIZE, ,, sampleSize, ,, populationSize, ,, true, )]
[LocalizedFormats, ., SAMPLE_SIZE_LARGER_THAN_POPULATION_SIZE]
[LocalizedFormats]
[sampleSize]
[populationSize]
[true]
[this, ., numberOfSuccesses]
[this]
[numberOfSuccesses]
[this, ., populationSize]
[this]
[populationSize]
[this, ., sampleSize]
[this]
[sampleSize]
[getDomain, (, populationSize, ,, numberOfSuccesses, ,, sampleSize, )]
[populationSize]
[numberOfSuccesses]
[sampleSize]
[x, <, domain, [, 0, ]]
[x]
[domain, [, 0, ]]
[domain]
[0]
[ret]
[0.0]
[x, >=, domain, [, 1, ]]
[x]
[domain, [, 1, ]]
[domain]
[1]
[ret]
[1.0]
[ret]
[innerCumulativeProbability, (, domain, [, 0, ], ,, x, ,, 1, )]
[domain, [, 0, ]]
[domain]
[0]
[x]
[1]
[ret]
[new, int, [, ], {, getLowerDomain, (, n, ,, m, ,, k, ), ,, getUpperDomain, (, m, ,, k, ), }]
[{, getLowerDomain, (, n, ,, m, ,, k, ), ,, getUpperDomain, (, m, ,, k, ), }]
[getLowerDomain, (, n, ,, m, ,, k, )]
[n]
[m]
[k]
[getUpperDomain, (, m, ,, k, )]
[m]
[k]
[FastMath, ., max, (, 0, ,, m, -, (, n, -, k, ), )]
[FastMath]
[0]
[m, -, (, n, -, k, )]
[m]
[(, n, -, k, )]
[n, -, k]
[n]
[k]
[numberOfSuccesses]
[populationSize]
[sampleSize]
[FastMath, ., min, (, k, ,, m, )]
[FastMath]
[k]
[m]
[getDomain, (, populationSize, ,, numberOfSuccesses, ,, sampleSize, )]
[populationSize]
[numberOfSuccesses]
[sampleSize]
[x, <, domain, [, 0, ], ||, x, >, domain, [, 1, ]]
[x, <, domain, [, 0, ]]
[x]
[domain, [, 0, ]]
[domain]
[0]
[x, >, domain, [, 1, ]]
[x]
[domain, [, 1, ]]
[domain]
[1]
[ret]
[0.0]
[(, double, ), sampleSize, /, (, double, ), populationSize]
[(, double, ), sampleSize]
[sampleSize]
[(, double, ), populationSize]
[populationSize]
[(, double, ), (, populationSize, -, sampleSize, ), /, (, double, ), populationSize]
[(, double, ), (, populationSize, -, sampleSize, )]
[(, populationSize, -, sampleSize, )]
[populationSize, -, sampleSize]
[populationSize]
[sampleSize]
[(, double, ), populationSize]
[populationSize]
[SaddlePointExpansion, ., logBinomialProbability, (, x, ,, numberOfSuccesses, ,, p, ,, q, )]
[SaddlePointExpansion]
[x]
[numberOfSuccesses]
[p]
[q]
[SaddlePointExpansion, ., logBinomialProbability, (, sampleSize, -, x, ,, populationSize, -, numberOfSuccesses, ,, p, ,, q, )]
[SaddlePointExpansion]
[sampleSize, -, x]
[sampleSize]
[x]
[populationSize, -, numberOfSuccesses]
[populationSize]
[numberOfSuccesses]
[p]
[q]
[SaddlePointExpansion, ., logBinomialProbability, (, sampleSize, ,, populationSize, ,, p, ,, q, )]
[SaddlePointExpansion]
[sampleSize]
[populationSize]
[p]
[q]
[ret]
[FastMath, ., exp, (, p1, +, p2, -, p3, )]
[FastMath]
[p1, +, p2, -, p3]
[p1, +, p2]
[p1]
[p2]
[p3]
[ret]
[getDomain, (, populationSize, ,, numberOfSuccesses, ,, sampleSize, )]
[populationSize]
[numberOfSuccesses]
[sampleSize]
[x, <=, domain, [, 0, ]]
[x]
[domain, [, 0, ]]
[domain]
[0]
[ret]
[1.0]
[x, >, domain, [, 1, ]]
[x]
[domain, [, 1, ]]
[domain]
[1]
[ret]
[0.0]
[ret]
[innerCumulativeProbability, (, domain, [, 1, ], ,, x, ,, -, 1, )]
[domain, [, 1, ]]
[domain]
[1]
[x]
[-, 1]
[1]
[ret]
[probability, (, x0, )]
[x0]
[x0, !=, x1]
[x0]
[x1]
[x0]
[dx]
[ret]
[probability, (, x0, )]
[x0]
[ret]
[getSampleSize, (, ), *, (, getNumberOfSuccesses, (, ), /, (, double, ), getPopulationSize, (, ), )]
[getSampleSize, (, )]
[(, getNumberOfSuccesses, (, ), /, (, double, ), getPopulationSize, (, ), )]
[getNumberOfSuccesses, (, ), /, (, double, ), getPopulationSize, (, )]
[getNumberOfSuccesses, (, )]
[(, double, ), getPopulationSize, (, )]
[getPopulationSize, (, )]
[!, numericalVarianceIsCalculated]
[numericalVarianceIsCalculated]
[numericalVariance]
[calculateNumericalVariance, (, )]
[numericalVarianceIsCalculated]
[true]
[numericalVariance]
[getPopulationSize, (, )]
[getNumberOfSuccesses, (, )]
[getSampleSize, (, )]
[(, n, *, m, *, (, N, -, n, ), *, (, N, -, m, ), ), /, (, N, *, N, *, (, N, -, 1, ), )]
[(, n, *, m, *, (, N, -, n, ), *, (, N, -, m, ), )]
[n, *, m, *, (, N, -, n, ), *, (, N, -, m, )]
[n, *, m, *, (, N, -, n, )]
[n, *, m]
[n]
[m]
[(, N, -, n, )]
[N, -, n]
[N]
[n]
[(, N, -, m, )]
[N, -, m]
[N]
[m]
[(, N, *, N, *, (, N, -, 1, ), )]
[N, *, N, *, (, N, -, 1, )]
[N, *, N]
[N]
[N]
[(, N, -, 1, )]
[N, -, 1]
[N]
[1]
[FastMath, ., max, (, 0, ,, getSampleSize, (, ), +, getNumberOfSuccesses, (, ), -, getPopulationSize, (, ), )]
[FastMath]
[0]
[getSampleSize, (, ), +, getNumberOfSuccesses, (, ), -, getPopulationSize, (, )]
[getSampleSize, (, ), +, getNumberOfSuccesses, (, )]
[getSampleSize, (, )]
[getNumberOfSuccesses, (, )]
[getPopulationSize, (, )]
[FastMath, ., min, (, getNumberOfSuccesses, (, ), ,, getSampleSize, (, ), )]
[FastMath]
[getNumberOfSuccesses, (, )]
[getSampleSize, (, )]
[true]
