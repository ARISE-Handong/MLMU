[36]
[-, 4602336630143123183L]
[4602336630143123183L]
[field]
[rows]
[columns]
[this, ., rows]
[this]
[rows]
[this, ., columns]
[this]
[columns]
[blockRows]
[(, rows, +, BLOCK_SIZE, -, 1, ), /, BLOCK_SIZE]
[(, rows, +, BLOCK_SIZE, -, 1, )]
[rows, +, BLOCK_SIZE, -, 1]
[rows, +, BLOCK_SIZE]
[rows]
[BLOCK_SIZE]
[1]
[BLOCK_SIZE]
[blockColumns]
[(, columns, +, BLOCK_SIZE, -, 1, ), /, BLOCK_SIZE]
[(, columns, +, BLOCK_SIZE, -, 1, )]
[columns, +, BLOCK_SIZE, -, 1]
[columns, +, BLOCK_SIZE]
[columns]
[BLOCK_SIZE]
[1]
[BLOCK_SIZE]
[blocks]
[createBlocksLayout, (, field, ,, rows, ,, columns, )]
[field]
[rows]
[columns]
[rawData, ., length]
[rawData]
[rawData, [, 0, ], ., length]
[rawData, [, 0, ]]
[rawData]
[0]
[toBlocksLayout, (, rawData, )]
[rawData]
[false]
[extractField, (, blockData, )]
[blockData]
[rows]
[columns]
[this, ., rows]
[this]
[rows]
[this, ., columns]
[this]
[columns]
[blockRows]
[(, rows, +, BLOCK_SIZE, -, 1, ), /, BLOCK_SIZE]
[(, rows, +, BLOCK_SIZE, -, 1, )]
[rows, +, BLOCK_SIZE, -, 1]
[rows, +, BLOCK_SIZE]
[rows]
[BLOCK_SIZE]
[1]
[BLOCK_SIZE]
[blockColumns]
[(, columns, +, BLOCK_SIZE, -, 1, ), /, BLOCK_SIZE]
[(, columns, +, BLOCK_SIZE, -, 1, )]
[columns, +, BLOCK_SIZE, -, 1]
[columns, +, BLOCK_SIZE]
[columns]
[BLOCK_SIZE]
[1]
[BLOCK_SIZE]
[copyArray]
[blocks]
[MathArrays, ., buildArray, (, getField, (, ), ,, blockRows, *, blockColumns, ,, -, 1, )]
[MathArrays]
[getField, (, )]
[blockRows, *, blockColumns]
[blockRows]
[blockColumns]
[-, 1]
[1]
[blocks]
[blockData]
[0]
[0]
[iBlock, <, blockRows]
[iBlock]
[blockRows]
[++, iBlock]
[iBlock]
[blockHeight, (, iBlock, )]
[iBlock]
[0]
[jBlock, <, blockColumns]
[jBlock]
[blockColumns]
[++, jBlock]
[jBlock]
[++, index]
[index]
[blockData, [, index, ], ., length, !=, iHeight, *, blockWidth, (, jBlock, )]
[blockData, [, index, ], ., length]
[blockData, [, index, ]]
[blockData]
[index]
[iHeight, *, blockWidth, (, jBlock, )]
[iHeight]
[blockWidth, (, jBlock, )]
[jBlock]
[new, DimensionMismatchException, (, blockData, [, index, ], ., length, ,, iHeight, *, blockWidth, (, jBlock, ), )]
[blockData, [, index, ], ., length]
[blockData, [, index, ]]
[blockData]
[index]
[iHeight, *, blockWidth, (, jBlock, )]
[iHeight]
[blockWidth, (, jBlock, )]
[jBlock]
[copyArray]
[blocks, [, index, ]]
[blocks]
[index]
[blockData, [, index, ], ., clone, (, )]
[blockData, [, index, ]]
[blockData]
[index]
[rawData, ., length]
[rawData]
[rawData, [, 0, ], ., length]
[rawData, [, 0, ]]
[rawData]
[0]
[(, rows, +, BLOCK_SIZE, -, 1, ), /, BLOCK_SIZE]
[(, rows, +, BLOCK_SIZE, -, 1, )]
[rows, +, BLOCK_SIZE, -, 1]
[rows, +, BLOCK_SIZE]
[rows]
[BLOCK_SIZE]
[1]
[BLOCK_SIZE]
[(, columns, +, BLOCK_SIZE, -, 1, ), /, BLOCK_SIZE]
[(, columns, +, BLOCK_SIZE, -, 1, )]
[columns, +, BLOCK_SIZE, -, 1]
[columns, +, BLOCK_SIZE]
[columns]
[BLOCK_SIZE]
[1]
[BLOCK_SIZE]
[0]
[i, <, rawData, ., length]
[i]
[rawData, ., length]
[rawData]
[++, i]
[i]
[rawData, [, i, ], ., length]
[rawData, [, i, ]]
[rawData]
[i]
[length, !=, columns]
[length]
[columns]
[new, DimensionMismatchException, (, columns, ,, length, )]
[columns]
[length]
[extractField, (, rawData, )]
[rawData]
[MathArrays, ., buildArray, (, field, ,, blockRows, *, blockColumns, ,, -, 1, )]
[MathArrays]
[field]
[blockRows, *, blockColumns]
[blockRows]
[blockColumns]
[-, 1]
[1]
[0]
[0]
[iBlock, <, blockRows]
[iBlock]
[blockRows]
[++, iBlock]
[iBlock]
[iBlock, *, BLOCK_SIZE]
[iBlock]
[BLOCK_SIZE]
[FastMath, ., min, (, pStart, +, BLOCK_SIZE, ,, rows, )]
[FastMath]
[pStart, +, BLOCK_SIZE]
[pStart]
[BLOCK_SIZE]
[rows]
[pEnd, -, pStart]
[pEnd]
[pStart]
[0]
[jBlock, <, blockColumns]
[jBlock]
[blockColumns]
[++, jBlock]
[jBlock]
[jBlock, *, BLOCK_SIZE]
[jBlock]
[BLOCK_SIZE]
[FastMath, ., min, (, qStart, +, BLOCK_SIZE, ,, columns, )]
[FastMath]
[qStart, +, BLOCK_SIZE]
[qStart]
[BLOCK_SIZE]
[columns]
[qEnd, -, qStart]
[qEnd]
[qStart]
[MathArrays, ., buildArray, (, field, ,, iHeight, *, jWidth, )]
[MathArrays]
[field]
[iHeight, *, jWidth]
[iHeight]
[jWidth]
[blocks, [, blockIndex, ]]
[blocks]
[blockIndex]
[block]
[0]
[pStart]
[p, <, pEnd]
[p]
[pEnd]
[++, p]
[p]
[System, ., arraycopy, (, rawData, [, p, ], ,, qStart, ,, block, ,, index, ,, jWidth, )]
[System]
[rawData, [, p, ]]
[rawData]
[p]
[qStart]
[block]
[index]
[jWidth]
[index]
[jWidth]
[++, blockIndex]
[blockIndex]
[blocks]
[(, rows, +, BLOCK_SIZE, -, 1, ), /, BLOCK_SIZE]
[(, rows, +, BLOCK_SIZE, -, 1, )]
[rows, +, BLOCK_SIZE, -, 1]
[rows, +, BLOCK_SIZE]
[rows]
[BLOCK_SIZE]
[1]
[BLOCK_SIZE]
[(, columns, +, BLOCK_SIZE, -, 1, ), /, BLOCK_SIZE]
[(, columns, +, BLOCK_SIZE, -, 1, )]
[columns, +, BLOCK_SIZE, -, 1]
[columns, +, BLOCK_SIZE]
[columns]
[BLOCK_SIZE]
[1]
[BLOCK_SIZE]
[MathArrays, ., buildArray, (, field, ,, blockRows, *, blockColumns, ,, -, 1, )]
[MathArrays]
[field]
[blockRows, *, blockColumns]
[blockRows]
[blockColumns]
[-, 1]
[1]
[0]
[0]
[iBlock, <, blockRows]
[iBlock]
[blockRows]
[++, iBlock]
[iBlock]
[iBlock, *, BLOCK_SIZE]
[iBlock]
[BLOCK_SIZE]
[FastMath, ., min, (, pStart, +, BLOCK_SIZE, ,, rows, )]
[FastMath]
[pStart, +, BLOCK_SIZE]
[pStart]
[BLOCK_SIZE]
[rows]
[pEnd, -, pStart]
[pEnd]
[pStart]
[0]
[jBlock, <, blockColumns]
[jBlock]
[blockColumns]
[++, jBlock]
[jBlock]
[jBlock, *, BLOCK_SIZE]
[jBlock]
[BLOCK_SIZE]
[FastMath, ., min, (, qStart, +, BLOCK_SIZE, ,, columns, )]
[FastMath]
[qStart, +, BLOCK_SIZE]
[qStart]
[BLOCK_SIZE]
[columns]
[qEnd, -, qStart]
[qEnd]
[qStart]
[blocks, [, blockIndex, ]]
[blocks]
[blockIndex]
[MathArrays, ., buildArray, (, field, ,, iHeight, *, jWidth, )]
[MathArrays]
[field]
[iHeight, *, jWidth]
[iHeight]
[jWidth]
[++, blockIndex]
[blockIndex]
[blocks]
[new, BlockFieldMatrix, <, T, >, (, getField, (, ), ,, rowDimension, ,, columnDimension, )]
[getField, (, )]
[rowDimension]
[columnDimension]
[new, BlockFieldMatrix, <, T, >, (, getField, (, ), ,, rows, ,, columns, )]
[getField, (, )]
[rows]
[columns]
[0]
[i, <, blocks, ., length]
[i]
[blocks, ., length]
[blocks]
[++, i]
[i]
[System, ., arraycopy, (, blocks, [, i, ], ,, 0, ,, copied, ., blocks, [, i, ], ,, 0, ,, blocks, [, i, ], ., length, )]
[System]
[blocks, [, i, ]]
[blocks]
[i]
[0]
[copied, ., blocks, [, i, ]]
[copied, ., blocks]
[copied]
[i]
[0]
[blocks, [, i, ], ., length]
[blocks, [, i, ]]
[blocks]
[i]
[copied]
[add, (, (, BlockFieldMatrix, <, T, >, ), m, )]
[(, BlockFieldMatrix, <, T, >, ), m]
[m]
[checkAdditionCompatible, (, m, )]
[m]
[new, BlockFieldMatrix, <, T, >, (, getField, (, ), ,, rows, ,, columns, )]
[getField, (, )]
[rows]
[columns]
[0]
[0]
[iBlock, <, out, ., blockRows]
[iBlock]
[out, ., blockRows]
[out]
[++, iBlock]
[iBlock]
[0]
[jBlock, <, out, ., blockColumns]
[jBlock]
[out, ., blockColumns]
[out]
[++, jBlock]
[jBlock]
[out, ., blocks, [, blockIndex, ]]
[out, ., blocks]
[out]
[blockIndex]
[blocks, [, blockIndex, ]]
[blocks]
[blockIndex]
[iBlock, *, BLOCK_SIZE]
[iBlock]
[BLOCK_SIZE]
[FastMath, ., min, (, pStart, +, BLOCK_SIZE, ,, rows, )]
[FastMath]
[pStart, +, BLOCK_SIZE]
[pStart]
[BLOCK_SIZE]
[rows]
[jBlock, *, BLOCK_SIZE]
[jBlock]
[BLOCK_SIZE]
[FastMath, ., min, (, qStart, +, BLOCK_SIZE, ,, columns, )]
[FastMath]
[qStart, +, BLOCK_SIZE]
[qStart]
[BLOCK_SIZE]
[columns]
[0]
[pStart]
[p, <, pEnd]
[p]
[pEnd]
[++, p]
[p]
[qStart]
[q, <, qEnd]
[q]
[qEnd]
[++, q]
[q]
[outBlock, [, k, ]]
[outBlock]
[k]
[tBlock, [, k, ], ., add, (, m, ., getEntry, (, p, ,, q, ), )]
[tBlock, [, k, ]]
[tBlock]
[k]
[m, ., getEntry, (, p, ,, q, )]
[m]
[p]
[q]
[++, k]
[k]
[++, blockIndex]
[blockIndex]
[out]
[checkAdditionCompatible, (, m, )]
[m]
[new, BlockFieldMatrix, <, T, >, (, getField, (, ), ,, rows, ,, columns, )]
[getField, (, )]
[rows]
[columns]
[0]
[blockIndex, <, out, ., blocks, ., length]
[blockIndex]
[out, ., blocks, ., length]
[out, ., blocks]
[out]
[++, blockIndex]
[blockIndex]
[out, ., blocks, [, blockIndex, ]]
[out, ., blocks]
[out]
[blockIndex]
[blocks, [, blockIndex, ]]
[blocks]
[blockIndex]
[m, ., blocks, [, blockIndex, ]]
[m, ., blocks]
[m]
[blockIndex]
[0]
[k, <, outBlock, ., length]
[k]
[outBlock, ., length]
[outBlock]
[++, k]
[k]
[outBlock, [, k, ]]
[outBlock]
[k]
[tBlock, [, k, ], ., add, (, mBlock, [, k, ], )]
[tBlock, [, k, ]]
[tBlock]
[k]
[mBlock, [, k, ]]
[mBlock]
[k]
[out]
[subtract, (, (, BlockFieldMatrix, <, T, >, ), m, )]
[(, BlockFieldMatrix, <, T, >, ), m]
[m]
[checkSubtractionCompatible, (, m, )]
[m]
[new, BlockFieldMatrix, <, T, >, (, getField, (, ), ,, rows, ,, columns, )]
[getField, (, )]
[rows]
[columns]
[0]
[0]
[iBlock, <, out, ., blockRows]
[iBlock]
[out, ., blockRows]
[out]
[++, iBlock]
[iBlock]
[0]
[jBlock, <, out, ., blockColumns]
[jBlock]
[out, ., blockColumns]
[out]
[++, jBlock]
[jBlock]
[out, ., blocks, [, blockIndex, ]]
[out, ., blocks]
[out]
[blockIndex]
[blocks, [, blockIndex, ]]
[blocks]
[blockIndex]
[iBlock, *, BLOCK_SIZE]
[iBlock]
[BLOCK_SIZE]
[FastMath, ., min, (, pStart, +, BLOCK_SIZE, ,, rows, )]
[FastMath]
[pStart, +, BLOCK_SIZE]
[pStart]
[BLOCK_SIZE]
[rows]
[jBlock, *, BLOCK_SIZE]
[jBlock]
[BLOCK_SIZE]
[FastMath, ., min, (, qStart, +, BLOCK_SIZE, ,, columns, )]
[FastMath]
[qStart, +, BLOCK_SIZE]
[qStart]
[BLOCK_SIZE]
[columns]
[0]
[pStart]
[p, <, pEnd]
[p]
[pEnd]
[++, p]
[p]
[qStart]
[q, <, qEnd]
[q]
[qEnd]
[++, q]
[q]
[outBlock, [, k, ]]
[outBlock]
[k]
[tBlock, [, k, ], ., subtract, (, m, ., getEntry, (, p, ,, q, ), )]
[tBlock, [, k, ]]
[tBlock]
[k]
[m, ., getEntry, (, p, ,, q, )]
[m]
[p]
[q]
[++, k]
[k]
[++, blockIndex]
[blockIndex]
[out]
[checkSubtractionCompatible, (, m, )]
[m]
[new, BlockFieldMatrix, <, T, >, (, getField, (, ), ,, rows, ,, columns, )]
[getField, (, )]
[rows]
[columns]
[0]
[blockIndex, <, out, ., blocks, ., length]
[blockIndex]
[out, ., blocks, ., length]
[out, ., blocks]
[out]
[++, blockIndex]
[blockIndex]
[out, ., blocks, [, blockIndex, ]]
[out, ., blocks]
[out]
[blockIndex]
[blocks, [, blockIndex, ]]
[blocks]
[blockIndex]
[m, ., blocks, [, blockIndex, ]]
[m, ., blocks]
[m]
[blockIndex]
[0]
[k, <, outBlock, ., length]
[k]
[outBlock, ., length]
[outBlock]
[++, k]
[k]
[outBlock, [, k, ]]
[outBlock]
[k]
[tBlock, [, k, ], ., subtract, (, mBlock, [, k, ], )]
[tBlock, [, k, ]]
[tBlock]
[k]
[mBlock, [, k, ]]
[mBlock]
[k]
[out]
[new, BlockFieldMatrix, <, T, >, (, getField, (, ), ,, rows, ,, columns, )]
[getField, (, )]
[rows]
[columns]
[0]
[blockIndex, <, out, ., blocks, ., length]
[blockIndex]
[out, ., blocks, ., length]
[out, ., blocks]
[out]
[++, blockIndex]
[blockIndex]
[out, ., blocks, [, blockIndex, ]]
[out, ., blocks]
[out]
[blockIndex]
[blocks, [, blockIndex, ]]
[blocks]
[blockIndex]
[0]
[k, <, outBlock, ., length]
[k]
[outBlock, ., length]
[outBlock]
[++, k]
[k]
[outBlock, [, k, ]]
[outBlock]
[k]
[tBlock, [, k, ], ., add, (, d, )]
[tBlock, [, k, ]]
[tBlock]
[k]
[d]
[out]
[new, BlockFieldMatrix, <, T, >, (, getField, (, ), ,, rows, ,, columns, )]
[getField, (, )]
[rows]
[columns]
[0]
[blockIndex, <, out, ., blocks, ., length]
[blockIndex]
[out, ., blocks, ., length]
[out, ., blocks]
[out]
[++, blockIndex]
[blockIndex]
[out, ., blocks, [, blockIndex, ]]
[out, ., blocks]
[out]
[blockIndex]
[blocks, [, blockIndex, ]]
[blocks]
[blockIndex]
[0]
[k, <, outBlock, ., length]
[k]
[outBlock, ., length]
[outBlock]
[++, k]
[k]
[outBlock, [, k, ]]
[outBlock]
[k]
[tBlock, [, k, ], ., multiply, (, d, )]
[tBlock, [, k, ]]
[tBlock]
[k]
[d]
[out]
[multiply, (, (, BlockFieldMatrix, <, T, >, ), m, )]
[(, BlockFieldMatrix, <, T, >, ), m]
[m]
[checkMultiplicationCompatible, (, m, )]
[m]
[new, BlockFieldMatrix, <, T, >, (, getField, (, ), ,, rows, ,, m, ., getColumnDimension, (, ), )]
[getField, (, )]
[rows]
[m, ., getColumnDimension, (, )]
[m]
[getField, (, ), ., getZero, (, )]
[getField, (, )]
[0]
[0]
[iBlock, <, out, ., blockRows]
[iBlock]
[out, ., blockRows]
[out]
[++, iBlock]
[iBlock]
[iBlock, *, BLOCK_SIZE]
[iBlock]
[BLOCK_SIZE]
[FastMath, ., min, (, pStart, +, BLOCK_SIZE, ,, rows, )]
[FastMath]
[pStart, +, BLOCK_SIZE]
[pStart]
[BLOCK_SIZE]
[rows]
[0]
[jBlock, <, out, ., blockColumns]
[jBlock]
[out, ., blockColumns]
[out]
[++, jBlock]
[jBlock]
[jBlock, *, BLOCK_SIZE]
[jBlock]
[BLOCK_SIZE]
[FastMath, ., min, (, qStart, +, BLOCK_SIZE, ,, m, ., getColumnDimension, (, ), )]
[FastMath]
[qStart, +, BLOCK_SIZE]
[qStart]
[BLOCK_SIZE]
[m, ., getColumnDimension, (, )]
[m]
[out, ., blocks, [, blockIndex, ]]
[out, ., blocks]
[out]
[blockIndex]
[0]
[kBlock, <, blockColumns]
[kBlock]
[blockColumns]
[++, kBlock]
[kBlock]
[blockWidth, (, kBlock, )]
[kBlock]
[blocks, [, iBlock, *, blockColumns, +, kBlock, ]]
[blocks]
[iBlock, *, blockColumns, +, kBlock]
[iBlock, *, blockColumns]
[iBlock]
[blockColumns]
[kBlock]
[kBlock, *, BLOCK_SIZE]
[kBlock]
[BLOCK_SIZE]
[0]
[pStart]
[p, <, pEnd]
[p]
[pEnd]
[++, p]
[p]
[(, p, -, pStart, ), *, kWidth]
[(, p, -, pStart, )]
[p, -, pStart]
[p]
[pStart]
[kWidth]
[lStart, +, kWidth]
[lStart]
[kWidth]
[qStart]
[q, <, qEnd]
[q]
[qEnd]
[++, q]
[q]
[zero]
[rStart]
[lStart]
[l, <, lEnd]
[l]
[lEnd]
[++, l]
[l]
[sum]
[sum, ., add, (, tBlock, [, l, ], ., multiply, (, m, ., getEntry, (, r, ,, q, ), ), )]
[sum]
[tBlock, [, l, ], ., multiply, (, m, ., getEntry, (, r, ,, q, ), )]
[tBlock, [, l, ]]
[tBlock]
[l]
[m, ., getEntry, (, r, ,, q, )]
[m]
[r]
[q]
[++, r]
[r]
[outBlock, [, k, ]]
[outBlock]
[k]
[outBlock, [, k, ], ., add, (, sum, )]
[outBlock, [, k, ]]
[outBlock]
[k]
[sum]
[++, k]
[k]
[++, blockIndex]
[blockIndex]
[out]
[checkMultiplicationCompatible, (, m, )]
[m]
[new, BlockFieldMatrix, <, T, >, (, getField, (, ), ,, rows, ,, m, ., columns, )]
[getField, (, )]
[rows]
[m, ., columns]
[m]
[getField, (, ), ., getZero, (, )]
[getField, (, )]
[0]
[0]
[iBlock, <, out, ., blockRows]
[iBlock]
[out, ., blockRows]
[out]
[++, iBlock]
[iBlock]
[iBlock, *, BLOCK_SIZE]
[iBlock]
[BLOCK_SIZE]
[FastMath, ., min, (, pStart, +, BLOCK_SIZE, ,, rows, )]
[FastMath]
[pStart, +, BLOCK_SIZE]
[pStart]
[BLOCK_SIZE]
[rows]
[0]
[jBlock, <, out, ., blockColumns]
[jBlock]
[out, ., blockColumns]
[out]
[++, jBlock]
[jBlock]
[out, ., blockWidth, (, jBlock, )]
[out]
[jBlock]
[jWidth, +, jWidth]
[jWidth]
[jWidth]
[jWidth2, +, jWidth]
[jWidth2]
[jWidth]
[jWidth3, +, jWidth]
[jWidth3]
[jWidth]
[out, ., blocks, [, blockIndex, ]]
[out, ., blocks]
[out]
[blockIndex]
[0]
[kBlock, <, blockColumns]
[kBlock]
[blockColumns]
[++, kBlock]
[kBlock]
[blockWidth, (, kBlock, )]
[kBlock]
[blocks, [, iBlock, *, blockColumns, +, kBlock, ]]
[blocks]
[iBlock, *, blockColumns, +, kBlock]
[iBlock, *, blockColumns]
[iBlock]
[blockColumns]
[kBlock]
[m, ., blocks, [, kBlock, *, m, ., blockColumns, +, jBlock, ]]
[m, ., blocks]
[m]
[kBlock, *, m, ., blockColumns, +, jBlock]
[kBlock, *, m, ., blockColumns]
[kBlock]
[m, ., blockColumns]
[m]
[jBlock]
[0]
[pStart]
[p, <, pEnd]
[p]
[pEnd]
[++, p]
[p]
[(, p, -, pStart, ), *, kWidth]
[(, p, -, pStart, )]
[p, -, pStart]
[p]
[pStart]
[kWidth]
[lStart, +, kWidth]
[lStart]
[kWidth]
[0]
[nStart, <, jWidth]
[nStart]
[jWidth]
[++, nStart]
[nStart]
[zero]
[lStart]
[nStart]
[l, <, lEnd, -, 3]
[l]
[lEnd, -, 3]
[lEnd]
[3]
[sum]
[sum, ., add, (, tBlock, [, l, ], ., multiply, (, mBlock, [, n, ], ), ), ., add, (, tBlock, [, l, +, 1, ], ., multiply, (, mBlock, [, n, +, jWidth, ], ), ), ., add, (, tBlock, [, l, +, 2, ], ., multiply, (, mBlock, [, n, +, jWidth2, ], ), ), ., add, (, tBlock, [, l, +, 3, ], ., multiply, (, mBlock, [, n, +, jWidth3, ], ), )]
[sum, ., add, (, tBlock, [, l, ], ., multiply, (, mBlock, [, n, ], ), ), ., add, (, tBlock, [, l, +, 1, ], ., multiply, (, mBlock, [, n, +, jWidth, ], ), ), ., add, (, tBlock, [, l, +, 2, ], ., multiply, (, mBlock, [, n, +, jWidth2, ], ), )]
[sum, ., add, (, tBlock, [, l, ], ., multiply, (, mBlock, [, n, ], ), ), ., add, (, tBlock, [, l, +, 1, ], ., multiply, (, mBlock, [, n, +, jWidth, ], ), )]
[sum, ., add, (, tBlock, [, l, ], ., multiply, (, mBlock, [, n, ], ), )]
[sum]
[tBlock, [, l, ], ., multiply, (, mBlock, [, n, ], )]
[tBlock, [, l, ]]
[tBlock]
[l]
[mBlock, [, n, ]]
[mBlock]
[n]
[tBlock, [, l, +, 1, ], ., multiply, (, mBlock, [, n, +, jWidth, ], )]
[tBlock, [, l, +, 1, ]]
[tBlock]
[l, +, 1]
[l]
[1]
[mBlock, [, n, +, jWidth, ]]
[mBlock]
[n, +, jWidth]
[n]
[jWidth]
[tBlock, [, l, +, 2, ], ., multiply, (, mBlock, [, n, +, jWidth2, ], )]
[tBlock, [, l, +, 2, ]]
[tBlock]
[l, +, 2]
[l]
[2]
[mBlock, [, n, +, jWidth2, ]]
[mBlock]
[n, +, jWidth2]
[n]
[jWidth2]
[tBlock, [, l, +, 3, ], ., multiply, (, mBlock, [, n, +, jWidth3, ], )]
[tBlock, [, l, +, 3, ]]
[tBlock]
[l, +, 3]
[l]
[3]
[mBlock, [, n, +, jWidth3, ]]
[mBlock]
[n, +, jWidth3]
[n]
[jWidth3]
[l]
[4]
[n]
[jWidth4]
[l, <, lEnd]
[l]
[lEnd]
[sum]
[sum, ., add, (, tBlock, [, l, ++, ], ., multiply, (, mBlock, [, n, ], ), )]
[sum]
[tBlock, [, l, ++, ], ., multiply, (, mBlock, [, n, ], )]
[tBlock, [, l, ++, ]]
[tBlock]
[l, ++]
[l]
[mBlock, [, n, ]]
[mBlock]
[n]
[n]
[jWidth]
[outBlock, [, k, ]]
[outBlock]
[k]
[outBlock, [, k, ], ., add, (, sum, )]
[outBlock, [, k, ]]
[outBlock]
[k]
[sum]
[++, k]
[k]
[++, blockIndex]
[blockIndex]
[out]
[MathArrays, ., buildArray, (, getField, (, ), ,, getRowDimension, (, ), ,, getColumnDimension, (, ), )]
[MathArrays]
[getField, (, )]
[getRowDimension, (, )]
[getColumnDimension, (, )]
[columns, -, (, blockColumns, -, 1, ), *, BLOCK_SIZE]
[columns]
[(, blockColumns, -, 1, ), *, BLOCK_SIZE]
[(, blockColumns, -, 1, )]
[blockColumns, -, 1]
[blockColumns]
[1]
[BLOCK_SIZE]
[0]
[iBlock, <, blockRows]
[iBlock]
[blockRows]
[++, iBlock]
[iBlock]
[iBlock, *, BLOCK_SIZE]
[iBlock]
[BLOCK_SIZE]
[FastMath, ., min, (, pStart, +, BLOCK_SIZE, ,, rows, )]
[FastMath]
[pStart, +, BLOCK_SIZE]
[pStart]
[BLOCK_SIZE]
[rows]
[0]
[0]
[pStart]
[p, <, pEnd]
[p]
[pEnd]
[++, p]
[p]
[data, [, p, ]]
[data]
[p]
[iBlock, *, blockColumns]
[iBlock]
[blockColumns]
[0]
[0]
[jBlock, <, blockColumns, -, 1]
[jBlock]
[blockColumns, -, 1]
[blockColumns]
[1]
[++, jBlock]
[jBlock]
[System, ., arraycopy, (, blocks, [, blockIndex, ++, ], ,, regularPos, ,, dataP, ,, dataPos, ,, BLOCK_SIZE, )]
[System]
[blocks, [, blockIndex, ++, ]]
[blocks]
[blockIndex, ++]
[blockIndex]
[regularPos]
[dataP]
[dataPos]
[BLOCK_SIZE]
[dataPos]
[BLOCK_SIZE]
[System, ., arraycopy, (, blocks, [, blockIndex, ], ,, lastPos, ,, dataP, ,, dataPos, ,, lastColumns, )]
[System]
[blocks, [, blockIndex, ]]
[blocks]
[blockIndex]
[lastPos]
[dataP]
[dataPos]
[lastColumns]
[regularPos]
[BLOCK_SIZE]
[lastPos]
[lastColumns]
[data]
[checkSubMatrixIndex, (, startRow, ,, endRow, ,, startColumn, ,, endColumn, )]
[startRow]
[endRow]
[startColumn]
[endColumn]
[new, BlockFieldMatrix, <, T, >, (, getField, (, ), ,, endRow, -, startRow, +, 1, ,, endColumn, -, startColumn, +, 1, )]
[getField, (, )]
[endRow, -, startRow, +, 1]
[endRow, -, startRow]
[endRow]
[startRow]
[1]
[endColumn, -, startColumn, +, 1]
[endColumn, -, startColumn]
[endColumn]
[startColumn]
[1]
[startRow, /, BLOCK_SIZE]
[startRow]
[BLOCK_SIZE]
[startRow, %, BLOCK_SIZE]
[startRow]
[BLOCK_SIZE]
[startColumn, /, BLOCK_SIZE]
[startColumn]
[BLOCK_SIZE]
[startColumn, %, BLOCK_SIZE]
[startColumn]
[BLOCK_SIZE]
[blockStartRow]
[0]
[iBlock, <, out, ., blockRows]
[iBlock]
[out, ., blockRows]
[out]
[++, iBlock]
[iBlock]
[out, ., blockHeight, (, iBlock, )]
[out]
[iBlock]
[blockStartColumn]
[0]
[jBlock, <, out, ., blockColumns]
[jBlock]
[out, ., blockColumns]
[out]
[++, jBlock]
[jBlock]
[out, ., blockWidth, (, jBlock, )]
[out]
[jBlock]
[iBlock, *, out, ., blockColumns, +, jBlock]
[iBlock, *, out, ., blockColumns]
[iBlock]
[out, ., blockColumns]
[out]
[jBlock]
[out, ., blocks, [, outIndex, ]]
[out, ., blocks]
[out]
[outIndex]
[pBlock, *, blockColumns, +, qBlock]
[pBlock, *, blockColumns]
[pBlock]
[blockColumns]
[qBlock]
[blockWidth, (, qBlock, )]
[qBlock]
[iHeight, +, rowsShift, -, BLOCK_SIZE]
[iHeight, +, rowsShift]
[iHeight]
[rowsShift]
[BLOCK_SIZE]
[jWidth, +, columnsShift, -, BLOCK_SIZE]
[jWidth, +, columnsShift]
[jWidth]
[columnsShift]
[BLOCK_SIZE]
[heightExcess, >, 0]
[heightExcess]
[0]
[widthExcess, >, 0]
[widthExcess]
[0]
[blockWidth, (, qBlock, +, 1, )]
[qBlock, +, 1]
[qBlock]
[1]
[copyBlockPart, (, blocks, [, index, ], ,, width, ,, rowsShift, ,, BLOCK_SIZE, ,, columnsShift, ,, BLOCK_SIZE, ,, outBlock, ,, jWidth, ,, 0, ,, 0, )]
[blocks, [, index, ]]
[blocks]
[index]
[width]
[rowsShift]
[BLOCK_SIZE]
[columnsShift]
[BLOCK_SIZE]
[outBlock]
[jWidth]
[0]
[0]
[copyBlockPart, (, blocks, [, index, +, 1, ], ,, width2, ,, rowsShift, ,, BLOCK_SIZE, ,, 0, ,, widthExcess, ,, outBlock, ,, jWidth, ,, 0, ,, jWidth, -, widthExcess, )]
[blocks, [, index, +, 1, ]]
[blocks]
[index, +, 1]
[index]
[1]
[width2]
[rowsShift]
[BLOCK_SIZE]
[0]
[widthExcess]
[outBlock]
[jWidth]
[0]
[jWidth, -, widthExcess]
[jWidth]
[widthExcess]
[copyBlockPart, (, blocks, [, index, +, blockColumns, ], ,, width, ,, 0, ,, heightExcess, ,, columnsShift, ,, BLOCK_SIZE, ,, outBlock, ,, jWidth, ,, iHeight, -, heightExcess, ,, 0, )]
[blocks, [, index, +, blockColumns, ]]
[blocks]
[index, +, blockColumns]
[index]
[blockColumns]
[width]
[0]
[heightExcess]
[columnsShift]
[BLOCK_SIZE]
[outBlock]
[jWidth]
[iHeight, -, heightExcess]
[iHeight]
[heightExcess]
[0]
[copyBlockPart, (, blocks, [, index, +, blockColumns, +, 1, ], ,, width2, ,, 0, ,, heightExcess, ,, 0, ,, widthExcess, ,, outBlock, ,, jWidth, ,, iHeight, -, heightExcess, ,, jWidth, -, widthExcess, )]
[blocks, [, index, +, blockColumns, +, 1, ]]
[blocks]
[index, +, blockColumns, +, 1]
[index, +, blockColumns]
[index]
[blockColumns]
[1]
[width2]
[0]
[heightExcess]
[0]
[widthExcess]
[outBlock]
[jWidth]
[iHeight, -, heightExcess]
[iHeight]
[heightExcess]
[jWidth, -, widthExcess]
[jWidth]
[widthExcess]
[copyBlockPart, (, blocks, [, index, ], ,, width, ,, rowsShift, ,, BLOCK_SIZE, ,, columnsShift, ,, jWidth, +, columnsShift, ,, outBlock, ,, jWidth, ,, 0, ,, 0, )]
[blocks, [, index, ]]
[blocks]
[index]
[width]
[rowsShift]
[BLOCK_SIZE]
[columnsShift]
[jWidth, +, columnsShift]
[jWidth]
[columnsShift]
[outBlock]
[jWidth]
[0]
[0]
[copyBlockPart, (, blocks, [, index, +, blockColumns, ], ,, width, ,, 0, ,, heightExcess, ,, columnsShift, ,, jWidth, +, columnsShift, ,, outBlock, ,, jWidth, ,, iHeight, -, heightExcess, ,, 0, )]
[blocks, [, index, +, blockColumns, ]]
[blocks]
[index, +, blockColumns]
[index]
[blockColumns]
[width]
[0]
[heightExcess]
[columnsShift]
[jWidth, +, columnsShift]
[jWidth]
[columnsShift]
[outBlock]
[jWidth]
[iHeight, -, heightExcess]
[iHeight]
[heightExcess]
[0]
[widthExcess, >, 0]
[widthExcess]
[0]
[blockWidth, (, qBlock, +, 1, )]
[qBlock, +, 1]
[qBlock]
[1]
[copyBlockPart, (, blocks, [, index, ], ,, width, ,, rowsShift, ,, iHeight, +, rowsShift, ,, columnsShift, ,, BLOCK_SIZE, ,, outBlock, ,, jWidth, ,, 0, ,, 0, )]
[blocks, [, index, ]]
[blocks]
[index]
[width]
[rowsShift]
[iHeight, +, rowsShift]
[iHeight]
[rowsShift]
[columnsShift]
[BLOCK_SIZE]
[outBlock]
[jWidth]
[0]
[0]
[copyBlockPart, (, blocks, [, index, +, 1, ], ,, width2, ,, rowsShift, ,, iHeight, +, rowsShift, ,, 0, ,, widthExcess, ,, outBlock, ,, jWidth, ,, 0, ,, jWidth, -, widthExcess, )]
[blocks, [, index, +, 1, ]]
[blocks]
[index, +, 1]
[index]
[1]
[width2]
[rowsShift]
[iHeight, +, rowsShift]
[iHeight]
[rowsShift]
[0]
[widthExcess]
[outBlock]
[jWidth]
[0]
[jWidth, -, widthExcess]
[jWidth]
[widthExcess]
[copyBlockPart, (, blocks, [, index, ], ,, width, ,, rowsShift, ,, iHeight, +, rowsShift, ,, columnsShift, ,, jWidth, +, columnsShift, ,, outBlock, ,, jWidth, ,, 0, ,, 0, )]
[blocks, [, index, ]]
[blocks]
[index]
[width]
[rowsShift]
[iHeight, +, rowsShift]
[iHeight]
[rowsShift]
[columnsShift]
[jWidth, +, columnsShift]
[jWidth]
[columnsShift]
[outBlock]
[jWidth]
[0]
[0]
[++, qBlock]
[qBlock]
[++, pBlock]
[pBlock]
[out]
[srcEndColumn, -, srcStartColumn]
[srcEndColumn]
[srcStartColumn]
[srcStartRow, *, srcWidth, +, srcStartColumn]
[srcStartRow, *, srcWidth]
[srcStartRow]
[srcWidth]
[srcStartColumn]
[dstStartRow, *, dstWidth, +, dstStartColumn]
[dstStartRow, *, dstWidth]
[dstStartRow]
[dstWidth]
[dstStartColumn]
[srcStartRow]
[srcRow, <, srcEndRow]
[srcRow]
[srcEndRow]
[++, srcRow]
[srcRow]
[System, ., arraycopy, (, srcBlock, ,, srcPos, ,, dstBlock, ,, dstPos, ,, length, )]
[System]
[srcBlock]
[srcPos]
[dstBlock]
[dstPos]
[length]
[srcPos]
[srcWidth]
[dstPos]
[dstWidth]
[MathUtils, ., checkNotNull, (, subMatrix, )]
[MathUtils]
[subMatrix]
[subMatrix, [, 0, ], ., length]
[subMatrix, [, 0, ]]
[subMatrix]
[0]
[refLength, ==, 0]
[refLength]
[0]
[new, NoDataException, (, LocalizedFormats, ., AT_LEAST_ONE_COLUMN, )]
[LocalizedFormats, ., AT_LEAST_ONE_COLUMN]
[LocalizedFormats]
[row, +, subMatrix, ., length, -, 1]
[row, +, subMatrix, ., length]
[row]
[subMatrix, ., length]
[subMatrix]
[1]
[column, +, refLength, -, 1]
[column, +, refLength]
[column]
[refLength]
[1]
[checkSubMatrixIndex, (, row, ,, endRow, ,, column, ,, endColumn, )]
[row]
[endRow]
[column]
[endColumn]
[subMatrix]
[subRow, ., length, !=, refLength]
[subRow, ., length]
[subRow]
[refLength]
[new, DimensionMismatchException, (, refLength, ,, subRow, ., length, )]
[refLength]
[subRow, ., length]
[subRow]
[row, /, BLOCK_SIZE]
[row]
[BLOCK_SIZE]
[(, endRow, +, BLOCK_SIZE, ), /, BLOCK_SIZE]
[(, endRow, +, BLOCK_SIZE, )]
[endRow, +, BLOCK_SIZE]
[endRow]
[BLOCK_SIZE]
[BLOCK_SIZE]
[column, /, BLOCK_SIZE]
[column]
[BLOCK_SIZE]
[(, endColumn, +, BLOCK_SIZE, ), /, BLOCK_SIZE]
[(, endColumn, +, BLOCK_SIZE, )]
[endColumn, +, BLOCK_SIZE]
[endColumn]
[BLOCK_SIZE]
[BLOCK_SIZE]
[blockStartRow]
[iBlock, <, blockEndRow]
[iBlock]
[blockEndRow]
[++, iBlock]
[iBlock]
[blockHeight, (, iBlock, )]
[iBlock]
[iBlock, *, BLOCK_SIZE]
[iBlock]
[BLOCK_SIZE]
[FastMath, ., max, (, row, ,, firstRow, )]
[FastMath]
[row]
[firstRow]
[FastMath, ., min, (, endRow, +, 1, ,, firstRow, +, iHeight, )]
[FastMath]
[endRow, +, 1]
[endRow]
[1]
[firstRow, +, iHeight]
[firstRow]
[iHeight]
[blockStartColumn]
[jBlock, <, blockEndColumn]
[jBlock]
[blockEndColumn]
[++, jBlock]
[jBlock]
[blockWidth, (, jBlock, )]
[jBlock]
[jBlock, *, BLOCK_SIZE]
[jBlock]
[BLOCK_SIZE]
[FastMath, ., max, (, column, ,, firstColumn, )]
[FastMath]
[column]
[firstColumn]
[FastMath, ., min, (, endColumn, +, 1, ,, firstColumn, +, jWidth, )]
[FastMath]
[endColumn, +, 1]
[endColumn]
[1]
[firstColumn, +, jWidth]
[firstColumn]
[jWidth]
[jEnd, -, jStart]
[jEnd]
[jStart]
[blocks, [, iBlock, *, blockColumns, +, jBlock, ]]
[blocks]
[iBlock, *, blockColumns, +, jBlock]
[iBlock, *, blockColumns]
[iBlock]
[blockColumns]
[jBlock]
[iStart]
[i, <, iEnd]
[i]
[iEnd]
[++, i]
[i]
[System, ., arraycopy, (, subMatrix, [, i, -, row, ], ,, jStart, -, column, ,, block, ,, (, i, -, firstRow, ), *, jWidth, +, (, jStart, -, firstColumn, ), ,, jLength, )]
[System]
[subMatrix, [, i, -, row, ]]
[subMatrix]
[i, -, row]
[i]
[row]
[jStart, -, column]
[jStart]
[column]
[block]
[(, i, -, firstRow, ), *, jWidth, +, (, jStart, -, firstColumn, )]
[(, i, -, firstRow, ), *, jWidth]
[(, i, -, firstRow, )]
[i, -, firstRow]
[i]
[firstRow]
[jWidth]
[(, jStart, -, firstColumn, )]
[jStart, -, firstColumn]
[jStart]
[firstColumn]
[jLength]
[checkRowIndex, (, row, )]
[row]
[new, BlockFieldMatrix, <, T, >, (, getField, (, ), ,, 1, ,, columns, )]
[getField, (, )]
[1]
[columns]
[row, /, BLOCK_SIZE]
[row]
[BLOCK_SIZE]
[row, -, iBlock, *, BLOCK_SIZE]
[row]
[iBlock, *, BLOCK_SIZE]
[iBlock]
[BLOCK_SIZE]
[0]
[0]
[out, ., blocks, [, outBlockIndex, ]]
[out, ., blocks]
[out]
[outBlockIndex]
[0]
[jBlock, <, blockColumns]
[jBlock]
[blockColumns]
[++, jBlock]
[jBlock]
[blockWidth, (, jBlock, )]
[jBlock]
[blocks, [, iBlock, *, blockColumns, +, jBlock, ]]
[blocks]
[iBlock, *, blockColumns, +, jBlock]
[iBlock, *, blockColumns]
[iBlock]
[blockColumns]
[jBlock]
[outBlock, ., length, -, outIndex]
[outBlock, ., length]
[outBlock]
[outIndex]
[jWidth, >, available]
[jWidth]
[available]
[System, ., arraycopy, (, block, ,, iRow, *, jWidth, ,, outBlock, ,, outIndex, ,, available, )]
[System]
[block]
[iRow, *, jWidth]
[iRow]
[jWidth]
[outBlock]
[outIndex]
[available]
[outBlock]
[out, ., blocks, [, ++, outBlockIndex, ]]
[out, ., blocks]
[out]
[++, outBlockIndex]
[outBlockIndex]
[System, ., arraycopy, (, block, ,, iRow, *, jWidth, ,, outBlock, ,, 0, ,, jWidth, -, available, )]
[System]
[block]
[iRow, *, jWidth]
[iRow]
[jWidth]
[outBlock]
[0]
[jWidth, -, available]
[jWidth]
[available]
[outIndex]
[jWidth, -, available]
[jWidth]
[available]
[System, ., arraycopy, (, block, ,, iRow, *, jWidth, ,, outBlock, ,, outIndex, ,, jWidth, )]
[System]
[block]
[iRow, *, jWidth]
[iRow]
[jWidth]
[outBlock]
[outIndex]
[jWidth]
[outIndex]
[jWidth]
[out]
[setRowMatrix, (, row, ,, (, BlockFieldMatrix, <, T, >, ), matrix, )]
[row]
[(, BlockFieldMatrix, <, T, >, ), matrix]
[matrix]
[super, ., setRowMatrix, (, row, ,, matrix, )]
[super]
[row]
[matrix]
[checkRowIndex, (, row, )]
[row]
[getColumnDimension, (, )]
[(, matrix, ., getRowDimension, (, ), !=, 1, ), ||, (, matrix, ., getColumnDimension, (, ), !=, nCols, )]
[(, matrix, ., getRowDimension, (, ), !=, 1, )]
[matrix, ., getRowDimension, (, ), !=, 1]
[matrix, ., getRowDimension, (, )]
[matrix]
[1]
[(, matrix, ., getColumnDimension, (, ), !=, nCols, )]
[matrix, ., getColumnDimension, (, ), !=, nCols]
[matrix, ., getColumnDimension, (, )]
[matrix]
[nCols]
[new, MatrixDimensionMismatchException, (, matrix, ., getRowDimension, (, ), ,, matrix, ., getColumnDimension, (, ), ,, 1, ,, nCols, )]
[matrix, ., getRowDimension, (, )]
[matrix]
[matrix, ., getColumnDimension, (, )]
[matrix]
[1]
[nCols]
[row, /, BLOCK_SIZE]
[row]
[BLOCK_SIZE]
[row, -, iBlock, *, BLOCK_SIZE]
[row]
[iBlock, *, BLOCK_SIZE]
[iBlock]
[BLOCK_SIZE]
[0]
[0]
[matrix, ., blocks, [, mBlockIndex, ]]
[matrix, ., blocks]
[matrix]
[mBlockIndex]
[0]
[jBlock, <, blockColumns]
[jBlock]
[blockColumns]
[++, jBlock]
[jBlock]
[blockWidth, (, jBlock, )]
[jBlock]
[blocks, [, iBlock, *, blockColumns, +, jBlock, ]]
[blocks]
[iBlock, *, blockColumns, +, jBlock]
[iBlock, *, blockColumns]
[iBlock]
[blockColumns]
[jBlock]
[mBlock, ., length, -, mIndex]
[mBlock, ., length]
[mBlock]
[mIndex]
[jWidth, >, available]
[jWidth]
[available]
[System, ., arraycopy, (, mBlock, ,, mIndex, ,, block, ,, iRow, *, jWidth, ,, available, )]
[System]
[mBlock]
[mIndex]
[block]
[iRow, *, jWidth]
[iRow]
[jWidth]
[available]
[mBlock]
[matrix, ., blocks, [, ++, mBlockIndex, ]]
[matrix, ., blocks]
[matrix]
[++, mBlockIndex]
[mBlockIndex]
[System, ., arraycopy, (, mBlock, ,, 0, ,, block, ,, iRow, *, jWidth, ,, jWidth, -, available, )]
[System]
[mBlock]
[0]
[block]
[iRow, *, jWidth]
[iRow]
[jWidth]
[jWidth, -, available]
[jWidth]
[available]
[mIndex]
[jWidth, -, available]
[jWidth]
[available]
[System, ., arraycopy, (, mBlock, ,, mIndex, ,, block, ,, iRow, *, jWidth, ,, jWidth, )]
[System]
[mBlock]
[mIndex]
[block]
[iRow, *, jWidth]
[iRow]
[jWidth]
[jWidth]
[mIndex]
[jWidth]
[checkColumnIndex, (, column, )]
[column]
[new, BlockFieldMatrix, <, T, >, (, getField, (, ), ,, rows, ,, 1, )]
[getField, (, )]
[rows]
[1]
[column, /, BLOCK_SIZE]
[column]
[BLOCK_SIZE]
[column, -, jBlock, *, BLOCK_SIZE]
[column]
[jBlock, *, BLOCK_SIZE]
[jBlock]
[BLOCK_SIZE]
[blockWidth, (, jBlock, )]
[jBlock]
[0]
[0]
[out, ., blocks, [, outBlockIndex, ]]
[out, ., blocks]
[out]
[outBlockIndex]
[0]
[iBlock, <, blockRows]
[iBlock]
[blockRows]
[++, iBlock]
[iBlock]
[blockHeight, (, iBlock, )]
[iBlock]
[blocks, [, iBlock, *, blockColumns, +, jBlock, ]]
[blocks]
[iBlock, *, blockColumns, +, jBlock]
[iBlock, *, blockColumns]
[iBlock]
[blockColumns]
[jBlock]
[0]
[i, <, iHeight]
[i]
[iHeight]
[++, i]
[i]
[outIndex, >=, outBlock, ., length]
[outIndex]
[outBlock, ., length]
[outBlock]
[outBlock]
[out, ., blocks, [, ++, outBlockIndex, ]]
[out, ., blocks]
[out]
[++, outBlockIndex]
[outBlockIndex]
[outIndex]
[0]
[outBlock, [, outIndex, ++, ]]
[outBlock]
[outIndex, ++]
[outIndex]
[block, [, i, *, jWidth, +, jColumn, ]]
[block]
[i, *, jWidth, +, jColumn]
[i, *, jWidth]
[i]
[jWidth]
[jColumn]
[out]
[setColumnMatrix, (, column, ,, (, BlockFieldMatrix, <, T, >, ), matrix, )]
[column]
[(, BlockFieldMatrix, <, T, >, ), matrix]
[matrix]
[super, ., setColumnMatrix, (, column, ,, matrix, )]
[super]
[column]
[matrix]
[checkColumnIndex, (, column, )]
[column]
[getRowDimension, (, )]
[(, matrix, ., getRowDimension, (, ), !=, nRows, ), ||, (, matrix, ., getColumnDimension, (, ), !=, 1, )]
[(, matrix, ., getRowDimension, (, ), !=, nRows, )]
[matrix, ., getRowDimension, (, ), !=, nRows]
[matrix, ., getRowDimension, (, )]
[matrix]
[nRows]
[(, matrix, ., getColumnDimension, (, ), !=, 1, )]
[matrix, ., getColumnDimension, (, ), !=, 1]
[matrix, ., getColumnDimension, (, )]
[matrix]
[1]
[new, MatrixDimensionMismatchException, (, matrix, ., getRowDimension, (, ), ,, matrix, ., getColumnDimension, (, ), ,, nRows, ,, 1, )]
[matrix, ., getRowDimension, (, )]
[matrix]
[matrix, ., getColumnDimension, (, )]
[matrix]
[nRows]
[1]
[column, /, BLOCK_SIZE]
[column]
[BLOCK_SIZE]
[column, -, jBlock, *, BLOCK_SIZE]
[column]
[jBlock, *, BLOCK_SIZE]
[jBlock]
[BLOCK_SIZE]
[blockWidth, (, jBlock, )]
[jBlock]
[0]
[0]
[matrix, ., blocks, [, mBlockIndex, ]]
[matrix, ., blocks]
[matrix]
[mBlockIndex]
[0]
[iBlock, <, blockRows]
[iBlock]
[blockRows]
[++, iBlock]
[iBlock]
[blockHeight, (, iBlock, )]
[iBlock]
[blocks, [, iBlock, *, blockColumns, +, jBlock, ]]
[blocks]
[iBlock, *, blockColumns, +, jBlock]
[iBlock, *, blockColumns]
[iBlock]
[blockColumns]
[jBlock]
[0]
[i, <, iHeight]
[i]
[iHeight]
[++, i]
[i]
[mIndex, >=, mBlock, ., length]
[mIndex]
[mBlock, ., length]
[mBlock]
[mBlock]
[matrix, ., blocks, [, ++, mBlockIndex, ]]
[matrix, ., blocks]
[matrix]
[++, mBlockIndex]
[mBlockIndex]
[mIndex]
[0]
[block, [, i, *, jWidth, +, jColumn, ]]
[block]
[i, *, jWidth, +, jColumn]
[i, *, jWidth]
[i]
[jWidth]
[jColumn]
[mBlock, [, mIndex, ++, ]]
[mBlock]
[mIndex, ++]
[mIndex]
[checkRowIndex, (, row, )]
[row]
[MathArrays, ., buildArray, (, getField, (, ), ,, columns, )]
[MathArrays]
[getField, (, )]
[columns]
[row, /, BLOCK_SIZE]
[row]
[BLOCK_SIZE]
[row, -, iBlock, *, BLOCK_SIZE]
[row]
[iBlock, *, BLOCK_SIZE]
[iBlock]
[BLOCK_SIZE]
[0]
[0]
[jBlock, <, blockColumns]
[jBlock]
[blockColumns]
[++, jBlock]
[jBlock]
[blockWidth, (, jBlock, )]
[jBlock]
[blocks, [, iBlock, *, blockColumns, +, jBlock, ]]
[blocks]
[iBlock, *, blockColumns, +, jBlock]
[iBlock, *, blockColumns]
[iBlock]
[blockColumns]
[jBlock]
[System, ., arraycopy, (, block, ,, iRow, *, jWidth, ,, outData, ,, outIndex, ,, jWidth, )]
[System]
[block]
[iRow, *, jWidth]
[iRow]
[jWidth]
[outData]
[outIndex]
[jWidth]
[outIndex]
[jWidth]
[new, ArrayFieldVector, <, T, >, (, getField, (, ), ,, outData, ,, false, )]
[getField, (, )]
[outData]
[false]
[setRow, (, row, ,, (, (, ArrayFieldVector, <, T, >, ), vector, ), ., getDataRef, (, ), )]
[row]
[(, (, ArrayFieldVector, <, T, >, ), vector, ), ., getDataRef, (, )]
[(, (, ArrayFieldVector, <, T, >, ), vector, )]
[(, ArrayFieldVector, <, T, >, ), vector]
[vector]
[super, ., setRowVector, (, row, ,, vector, )]
[super]
[row]
[vector]
[checkColumnIndex, (, column, )]
[column]
[MathArrays, ., buildArray, (, getField, (, ), ,, rows, )]
[MathArrays]
[getField, (, )]
[rows]
[column, /, BLOCK_SIZE]
[column]
[BLOCK_SIZE]
[column, -, jBlock, *, BLOCK_SIZE]
[column]
[jBlock, *, BLOCK_SIZE]
[jBlock]
[BLOCK_SIZE]
[blockWidth, (, jBlock, )]
[jBlock]
[0]
[0]
[iBlock, <, blockRows]
[iBlock]
[blockRows]
[++, iBlock]
[iBlock]
[blockHeight, (, iBlock, )]
[iBlock]
[blocks, [, iBlock, *, blockColumns, +, jBlock, ]]
[blocks]
[iBlock, *, blockColumns, +, jBlock]
[iBlock, *, blockColumns]
[iBlock]
[blockColumns]
[jBlock]
[0]
[i, <, iHeight]
[i]
[iHeight]
[++, i]
[i]
[outData, [, outIndex, ++, ]]
[outData]
[outIndex, ++]
[outIndex]
[block, [, i, *, jWidth, +, jColumn, ]]
[block]
[i, *, jWidth, +, jColumn]
[i, *, jWidth]
[i]
[jWidth]
[jColumn]
[new, ArrayFieldVector, <, T, >, (, getField, (, ), ,, outData, ,, false, )]
[getField, (, )]
[outData]
[false]
[setColumn, (, column, ,, (, (, ArrayFieldVector, <, T, >, ), vector, ), ., getDataRef, (, ), )]
[column]
[(, (, ArrayFieldVector, <, T, >, ), vector, ), ., getDataRef, (, )]
[(, (, ArrayFieldVector, <, T, >, ), vector, )]
[(, ArrayFieldVector, <, T, >, ), vector]
[vector]
[super, ., setColumnVector, (, column, ,, vector, )]
[super]
[column]
[vector]
[checkRowIndex, (, row, )]
[row]
[MathArrays, ., buildArray, (, getField, (, ), ,, columns, )]
[MathArrays]
[getField, (, )]
[columns]
[row, /, BLOCK_SIZE]
[row]
[BLOCK_SIZE]
[row, -, iBlock, *, BLOCK_SIZE]
[row]
[iBlock, *, BLOCK_SIZE]
[iBlock]
[BLOCK_SIZE]
[0]
[0]
[jBlock, <, blockColumns]
[jBlock]
[blockColumns]
[++, jBlock]
[jBlock]
[blockWidth, (, jBlock, )]
[jBlock]
[blocks, [, iBlock, *, blockColumns, +, jBlock, ]]
[blocks]
[iBlock, *, blockColumns, +, jBlock]
[iBlock, *, blockColumns]
[iBlock]
[blockColumns]
[jBlock]
[System, ., arraycopy, (, block, ,, iRow, *, jWidth, ,, out, ,, outIndex, ,, jWidth, )]
[System]
[block]
[iRow, *, jWidth]
[iRow]
[jWidth]
[out]
[outIndex]
[jWidth]
[outIndex]
[jWidth]
[out]
[checkRowIndex, (, row, )]
[row]
[getColumnDimension, (, )]
[array, ., length, !=, nCols]
[array, ., length]
[array]
[nCols]
[new, MatrixDimensionMismatchException, (, 1, ,, array, ., length, ,, 1, ,, nCols, )]
[1]
[array, ., length]
[array]
[1]
[nCols]
[row, /, BLOCK_SIZE]
[row]
[BLOCK_SIZE]
[row, -, iBlock, *, BLOCK_SIZE]
[row]
[iBlock, *, BLOCK_SIZE]
[iBlock]
[BLOCK_SIZE]
[0]
[0]
[jBlock, <, blockColumns]
[jBlock]
[blockColumns]
[++, jBlock]
[jBlock]
[blockWidth, (, jBlock, )]
[jBlock]
[blocks, [, iBlock, *, blockColumns, +, jBlock, ]]
[blocks]
[iBlock, *, blockColumns, +, jBlock]
[iBlock, *, blockColumns]
[iBlock]
[blockColumns]
[jBlock]
[System, ., arraycopy, (, array, ,, outIndex, ,, block, ,, iRow, *, jWidth, ,, jWidth, )]
[System]
[array]
[outIndex]
[block]
[iRow, *, jWidth]
[iRow]
[jWidth]
[jWidth]
[outIndex]
[jWidth]
[checkColumnIndex, (, column, )]
[column]
[MathArrays, ., buildArray, (, getField, (, ), ,, rows, )]
[MathArrays]
[getField, (, )]
[rows]
[column, /, BLOCK_SIZE]
[column]
[BLOCK_SIZE]
[column, -, jBlock, *, BLOCK_SIZE]
[column]
[jBlock, *, BLOCK_SIZE]
[jBlock]
[BLOCK_SIZE]
[blockWidth, (, jBlock, )]
[jBlock]
[0]
[0]
[iBlock, <, blockRows]
[iBlock]
[blockRows]
[++, iBlock]
[iBlock]
[blockHeight, (, iBlock, )]
[iBlock]
[blocks, [, iBlock, *, blockColumns, +, jBlock, ]]
[blocks]
[iBlock, *, blockColumns, +, jBlock]
[iBlock, *, blockColumns]
[iBlock]
[blockColumns]
[jBlock]
[0]
[i, <, iHeight]
[i]
[iHeight]
[++, i]
[i]
[out, [, outIndex, ++, ]]
[out]
[outIndex, ++]
[outIndex]
[block, [, i, *, jWidth, +, jColumn, ]]
[block]
[i, *, jWidth, +, jColumn]
[i, *, jWidth]
[i]
[jWidth]
[jColumn]
[out]
[checkColumnIndex, (, column, )]
[column]
[getRowDimension, (, )]
[array, ., length, !=, nRows]
[array, ., length]
[array]
[nRows]
[new, MatrixDimensionMismatchException, (, array, ., length, ,, 1, ,, nRows, ,, 1, )]
[array, ., length]
[array]
[1]
[nRows]
[1]
[column, /, BLOCK_SIZE]
[column]
[BLOCK_SIZE]
[column, -, jBlock, *, BLOCK_SIZE]
[column]
[jBlock, *, BLOCK_SIZE]
[jBlock]
[BLOCK_SIZE]
[blockWidth, (, jBlock, )]
[jBlock]
[0]
[0]
[iBlock, <, blockRows]
[iBlock]
[blockRows]
[++, iBlock]
[iBlock]
[blockHeight, (, iBlock, )]
[iBlock]
[blocks, [, iBlock, *, blockColumns, +, jBlock, ]]
[blocks]
[iBlock, *, blockColumns, +, jBlock]
[iBlock, *, blockColumns]
[iBlock]
[blockColumns]
[jBlock]
[0]
[i, <, iHeight]
[i]
[iHeight]
[++, i]
[i]
[block, [, i, *, jWidth, +, jColumn, ]]
[block]
[i, *, jWidth, +, jColumn]
[i, *, jWidth]
[i]
[jWidth]
[jColumn]
[array, [, outIndex, ++, ]]
[array]
[outIndex, ++]
[outIndex]
[checkRowIndex, (, row, )]
[row]
[checkColumnIndex, (, column, )]
[column]
[row, /, BLOCK_SIZE]
[row]
[BLOCK_SIZE]
[column, /, BLOCK_SIZE]
[column]
[BLOCK_SIZE]
[(, row, -, iBlock, *, BLOCK_SIZE, ), *, blockWidth, (, jBlock, ), +, (, column, -, jBlock, *, BLOCK_SIZE, )]
[(, row, -, iBlock, *, BLOCK_SIZE, ), *, blockWidth, (, jBlock, )]
[(, row, -, iBlock, *, BLOCK_SIZE, )]
[row, -, iBlock, *, BLOCK_SIZE]
[row]
[iBlock, *, BLOCK_SIZE]
[iBlock]
[BLOCK_SIZE]
[blockWidth, (, jBlock, )]
[jBlock]
[(, column, -, jBlock, *, BLOCK_SIZE, )]
[column, -, jBlock, *, BLOCK_SIZE]
[column]
[jBlock, *, BLOCK_SIZE]
[jBlock]
[BLOCK_SIZE]
[blocks, [, iBlock, *, blockColumns, +, jBlock, ], [, k, ]]
[blocks, [, iBlock, *, blockColumns, +, jBlock, ]]
[blocks]
[iBlock, *, blockColumns, +, jBlock]
[iBlock, *, blockColumns]
[iBlock]
[blockColumns]
[jBlock]
[k]
[checkRowIndex, (, row, )]
[row]
[checkColumnIndex, (, column, )]
[column]
[row, /, BLOCK_SIZE]
[row]
[BLOCK_SIZE]
[column, /, BLOCK_SIZE]
[column]
[BLOCK_SIZE]
[(, row, -, iBlock, *, BLOCK_SIZE, ), *, blockWidth, (, jBlock, ), +, (, column, -, jBlock, *, BLOCK_SIZE, )]
[(, row, -, iBlock, *, BLOCK_SIZE, ), *, blockWidth, (, jBlock, )]
[(, row, -, iBlock, *, BLOCK_SIZE, )]
[row, -, iBlock, *, BLOCK_SIZE]
[row]
[iBlock, *, BLOCK_SIZE]
[iBlock]
[BLOCK_SIZE]
[blockWidth, (, jBlock, )]
[jBlock]
[(, column, -, jBlock, *, BLOCK_SIZE, )]
[column, -, jBlock, *, BLOCK_SIZE]
[column]
[jBlock, *, BLOCK_SIZE]
[jBlock]
[BLOCK_SIZE]
[blocks, [, iBlock, *, blockColumns, +, jBlock, ], [, k, ]]
[blocks, [, iBlock, *, blockColumns, +, jBlock, ]]
[blocks]
[iBlock, *, blockColumns, +, jBlock]
[iBlock, *, blockColumns]
[iBlock]
[blockColumns]
[jBlock]
[k]
[value]
[checkRowIndex, (, row, )]
[row]
[checkColumnIndex, (, column, )]
[column]
[row, /, BLOCK_SIZE]
[row]
[BLOCK_SIZE]
[column, /, BLOCK_SIZE]
[column]
[BLOCK_SIZE]
[(, row, -, iBlock, *, BLOCK_SIZE, ), *, blockWidth, (, jBlock, ), +, (, column, -, jBlock, *, BLOCK_SIZE, )]
[(, row, -, iBlock, *, BLOCK_SIZE, ), *, blockWidth, (, jBlock, )]
[(, row, -, iBlock, *, BLOCK_SIZE, )]
[row, -, iBlock, *, BLOCK_SIZE]
[row]
[iBlock, *, BLOCK_SIZE]
[iBlock]
[BLOCK_SIZE]
[blockWidth, (, jBlock, )]
[jBlock]
[(, column, -, jBlock, *, BLOCK_SIZE, )]
[column, -, jBlock, *, BLOCK_SIZE]
[column]
[jBlock, *, BLOCK_SIZE]
[jBlock]
[BLOCK_SIZE]
[blocks, [, iBlock, *, blockColumns, +, jBlock, ]]
[blocks]
[iBlock, *, blockColumns, +, jBlock]
[iBlock, *, blockColumns]
[iBlock]
[blockColumns]
[jBlock]
[blockIJ, [, k, ]]
[blockIJ]
[k]
[blockIJ, [, k, ], ., add, (, increment, )]
[blockIJ, [, k, ]]
[blockIJ]
[k]
[increment]
[checkRowIndex, (, row, )]
[row]
[checkColumnIndex, (, column, )]
[column]
[row, /, BLOCK_SIZE]
[row]
[BLOCK_SIZE]
[column, /, BLOCK_SIZE]
[column]
[BLOCK_SIZE]
[(, row, -, iBlock, *, BLOCK_SIZE, ), *, blockWidth, (, jBlock, ), +, (, column, -, jBlock, *, BLOCK_SIZE, )]
[(, row, -, iBlock, *, BLOCK_SIZE, ), *, blockWidth, (, jBlock, )]
[(, row, -, iBlock, *, BLOCK_SIZE, )]
[row, -, iBlock, *, BLOCK_SIZE]
[row]
[iBlock, *, BLOCK_SIZE]
[iBlock]
[BLOCK_SIZE]
[blockWidth, (, jBlock, )]
[jBlock]
[(, column, -, jBlock, *, BLOCK_SIZE, )]
[column, -, jBlock, *, BLOCK_SIZE]
[column]
[jBlock, *, BLOCK_SIZE]
[jBlock]
[BLOCK_SIZE]
[blocks, [, iBlock, *, blockColumns, +, jBlock, ]]
[blocks]
[iBlock, *, blockColumns, +, jBlock]
[iBlock, *, blockColumns]
[iBlock]
[blockColumns]
[jBlock]
[blockIJ, [, k, ]]
[blockIJ]
[k]
[blockIJ, [, k, ], ., multiply, (, factor, )]
[blockIJ, [, k, ]]
[blockIJ]
[k]
[factor]
[getRowDimension, (, )]
[getColumnDimension, (, )]
[new, BlockFieldMatrix, <, T, >, (, getField, (, ), ,, nCols, ,, nRows, )]
[getField, (, )]
[nCols]
[nRows]
[0]
[0]
[iBlock, <, blockColumns]
[iBlock]
[blockColumns]
[++, iBlock]
[iBlock]
[0]
[jBlock, <, blockRows]
[jBlock]
[blockRows]
[++, jBlock]
[jBlock]
[out, ., blocks, [, blockIndex, ]]
[out, ., blocks]
[out]
[blockIndex]
[blocks, [, jBlock, *, blockColumns, +, iBlock, ]]
[blocks]
[jBlock, *, blockColumns, +, iBlock]
[jBlock, *, blockColumns]
[jBlock]
[blockColumns]
[iBlock]
[iBlock, *, BLOCK_SIZE]
[iBlock]
[BLOCK_SIZE]
[FastMath, ., min, (, pStart, +, BLOCK_SIZE, ,, columns, )]
[FastMath]
[pStart, +, BLOCK_SIZE]
[pStart]
[BLOCK_SIZE]
[columns]
[jBlock, *, BLOCK_SIZE]
[jBlock]
[BLOCK_SIZE]
[FastMath, ., min, (, qStart, +, BLOCK_SIZE, ,, rows, )]
[FastMath]
[qStart, +, BLOCK_SIZE]
[qStart]
[BLOCK_SIZE]
[rows]
[0]
[pStart]
[p, <, pEnd]
[p]
[pEnd]
[++, p]
[p]
[pEnd, -, pStart]
[pEnd]
[pStart]
[p, -, pStart]
[p]
[pStart]
[qStart]
[q, <, qEnd]
[q]
[qEnd]
[++, q]
[q]
[outBlock, [, k, ]]
[outBlock]
[k]
[tBlock, [, l, ]]
[tBlock]
[l]
[++, k]
[k]
[l]
[lInc]
[++, blockIndex]
[blockIndex]
[out]
[rows]
[columns]
[v, ., length, !=, columns]
[v, ., length]
[v]
[columns]
[new, DimensionMismatchException, (, v, ., length, ,, columns, )]
[v, ., length]
[v]
[columns]
[MathArrays, ., buildArray, (, getField, (, ), ,, rows, )]
[MathArrays]
[getField, (, )]
[rows]
[getField, (, ), ., getZero, (, )]
[getField, (, )]
[0]
[iBlock, <, blockRows]
[iBlock]
[blockRows]
[++, iBlock]
[iBlock]
[iBlock, *, BLOCK_SIZE]
[iBlock]
[BLOCK_SIZE]
[FastMath, ., min, (, pStart, +, BLOCK_SIZE, ,, rows, )]
[FastMath]
[pStart, +, BLOCK_SIZE]
[pStart]
[BLOCK_SIZE]
[rows]
[0]
[jBlock, <, blockColumns]
[jBlock]
[blockColumns]
[++, jBlock]
[jBlock]
[blocks, [, iBlock, *, blockColumns, +, jBlock, ]]
[blocks]
[iBlock, *, blockColumns, +, jBlock]
[iBlock, *, blockColumns]
[iBlock]
[blockColumns]
[jBlock]
[jBlock, *, BLOCK_SIZE]
[jBlock]
[BLOCK_SIZE]
[FastMath, ., min, (, qStart, +, BLOCK_SIZE, ,, columns, )]
[FastMath]
[qStart, +, BLOCK_SIZE]
[qStart]
[BLOCK_SIZE]
[columns]
[0]
[pStart]
[p, <, pEnd]
[p]
[pEnd]
[++, p]
[p]
[zero]
[qStart]
[q, <, qEnd, -, 3]
[q]
[qEnd, -, 3]
[qEnd]
[3]
[sum]
[sum, ., add, (, block, [, k, ], ., multiply, (, v, [, q, ], ), ), ., add, (, block, [, k, +, 1, ], ., multiply, (, v, [, q, +, 1, ], ), ), ., add, (, block, [, k, +, 2, ], ., multiply, (, v, [, q, +, 2, ], ), ), ., add, (, block, [, k, +, 3, ], ., multiply, (, v, [, q, +, 3, ], ), )]
[sum, ., add, (, block, [, k, ], ., multiply, (, v, [, q, ], ), ), ., add, (, block, [, k, +, 1, ], ., multiply, (, v, [, q, +, 1, ], ), ), ., add, (, block, [, k, +, 2, ], ., multiply, (, v, [, q, +, 2, ], ), )]
[sum, ., add, (, block, [, k, ], ., multiply, (, v, [, q, ], ), ), ., add, (, block, [, k, +, 1, ], ., multiply, (, v, [, q, +, 1, ], ), )]
[sum, ., add, (, block, [, k, ], ., multiply, (, v, [, q, ], ), )]
[sum]
[block, [, k, ], ., multiply, (, v, [, q, ], )]
[block, [, k, ]]
[block]
[k]
[v, [, q, ]]
[v]
[q]
[block, [, k, +, 1, ], ., multiply, (, v, [, q, +, 1, ], )]
[block, [, k, +, 1, ]]
[block]
[k, +, 1]
[k]
[1]
[v, [, q, +, 1, ]]
[v]
[q, +, 1]
[q]
[1]
[block, [, k, +, 2, ], ., multiply, (, v, [, q, +, 2, ], )]
[block, [, k, +, 2, ]]
[block]
[k, +, 2]
[k]
[2]
[v, [, q, +, 2, ]]
[v]
[q, +, 2]
[q]
[2]
[block, [, k, +, 3, ], ., multiply, (, v, [, q, +, 3, ], )]
[block, [, k, +, 3, ]]
[block]
[k, +, 3]
[k]
[3]
[v, [, q, +, 3, ]]
[v]
[q, +, 3]
[q]
[3]
[k]
[4]
[q]
[4]
[q, <, qEnd]
[q]
[qEnd]
[sum]
[sum, ., add, (, block, [, k, ++, ], ., multiply, (, v, [, q, ++, ], ), )]
[sum]
[block, [, k, ++, ], ., multiply, (, v, [, q, ++, ], )]
[block, [, k, ++, ]]
[block]
[k, ++]
[k]
[v, [, q, ++, ]]
[v]
[q, ++]
[q]
[out, [, p, ]]
[out]
[p]
[out, [, p, ], ., add, (, sum, )]
[out, [, p, ]]
[out]
[p]
[sum]
[out]
[v, ., length, !=, rows]
[v, ., length]
[v]
[rows]
[new, DimensionMismatchException, (, v, ., length, ,, rows, )]
[v, ., length]
[v]
[rows]
[MathArrays, ., buildArray, (, getField, (, ), ,, columns, )]
[MathArrays]
[getField, (, )]
[columns]
[getField, (, ), ., getZero, (, )]
[getField, (, )]
[0]
[jBlock, <, blockColumns]
[jBlock]
[blockColumns]
[++, jBlock]
[jBlock]
[blockWidth, (, jBlock, )]
[jBlock]
[jWidth, +, jWidth]
[jWidth]
[jWidth]
[jWidth2, +, jWidth]
[jWidth2]
[jWidth]
[jWidth3, +, jWidth]
[jWidth3]
[jWidth]
[jBlock, *, BLOCK_SIZE]
[jBlock]
[BLOCK_SIZE]
[FastMath, ., min, (, qStart, +, BLOCK_SIZE, ,, columns, )]
[FastMath]
[qStart, +, BLOCK_SIZE]
[qStart]
[BLOCK_SIZE]
[columns]
[0]
[iBlock, <, blockRows]
[iBlock]
[blockRows]
[++, iBlock]
[iBlock]
[blocks, [, iBlock, *, blockColumns, +, jBlock, ]]
[blocks]
[iBlock, *, blockColumns, +, jBlock]
[iBlock, *, blockColumns]
[iBlock]
[blockColumns]
[jBlock]
[iBlock, *, BLOCK_SIZE]
[iBlock]
[BLOCK_SIZE]
[FastMath, ., min, (, pStart, +, BLOCK_SIZE, ,, rows, )]
[FastMath]
[pStart, +, BLOCK_SIZE]
[pStart]
[BLOCK_SIZE]
[rows]
[qStart]
[q, <, qEnd]
[q]
[qEnd]
[++, q]
[q]
[q, -, qStart]
[q]
[qStart]
[zero]
[pStart]
[p, <, pEnd, -, 3]
[p]
[pEnd, -, 3]
[pEnd]
[3]
[sum]
[sum, ., add, (, block, [, k, ], ., multiply, (, v, [, p, ], ), ), ., add, (, block, [, k, +, jWidth, ], ., multiply, (, v, [, p, +, 1, ], ), ), ., add, (, block, [, k, +, jWidth2, ], ., multiply, (, v, [, p, +, 2, ], ), ), ., add, (, block, [, k, +, jWidth3, ], ., multiply, (, v, [, p, +, 3, ], ), )]
[sum, ., add, (, block, [, k, ], ., multiply, (, v, [, p, ], ), ), ., add, (, block, [, k, +, jWidth, ], ., multiply, (, v, [, p, +, 1, ], ), ), ., add, (, block, [, k, +, jWidth2, ], ., multiply, (, v, [, p, +, 2, ], ), )]
[sum, ., add, (, block, [, k, ], ., multiply, (, v, [, p, ], ), ), ., add, (, block, [, k, +, jWidth, ], ., multiply, (, v, [, p, +, 1, ], ), )]
[sum, ., add, (, block, [, k, ], ., multiply, (, v, [, p, ], ), )]
[sum]
[block, [, k, ], ., multiply, (, v, [, p, ], )]
[block, [, k, ]]
[block]
[k]
[v, [, p, ]]
[v]
[p]
[block, [, k, +, jWidth, ], ., multiply, (, v, [, p, +, 1, ], )]
[block, [, k, +, jWidth, ]]
[block]
[k, +, jWidth]
[k]
[jWidth]
[v, [, p, +, 1, ]]
[v]
[p, +, 1]
[p]
[1]
[block, [, k, +, jWidth2, ], ., multiply, (, v, [, p, +, 2, ], )]
[block, [, k, +, jWidth2, ]]
[block]
[k, +, jWidth2]
[k]
[jWidth2]
[v, [, p, +, 2, ]]
[v]
[p, +, 2]
[p]
[2]
[block, [, k, +, jWidth3, ], ., multiply, (, v, [, p, +, 3, ], )]
[block, [, k, +, jWidth3, ]]
[block]
[k, +, jWidth3]
[k]
[jWidth3]
[v, [, p, +, 3, ]]
[v]
[p, +, 3]
[p]
[3]
[k]
[jWidth4]
[p]
[4]
[p, <, pEnd]
[p]
[pEnd]
[sum]
[sum, ., add, (, block, [, k, ], ., multiply, (, v, [, p, ++, ], ), )]
[sum]
[block, [, k, ], ., multiply, (, v, [, p, ++, ], )]
[block, [, k, ]]
[block]
[k]
[v, [, p, ++, ]]
[v]
[p, ++]
[p]
[k]
[jWidth]
[out, [, q, ]]
[out]
[q]
[out, [, q, ], ., add, (, sum, )]
[out, [, q, ]]
[out]
[q]
[sum]
[out]
[visitor, ., start, (, rows, ,, columns, ,, 0, ,, rows, -, 1, ,, 0, ,, columns, -, 1, )]
[visitor]
[rows]
[columns]
[0]
[rows, -, 1]
[rows]
[1]
[0]
[columns, -, 1]
[columns]
[1]
[0]
[iBlock, <, blockRows]
[iBlock]
[blockRows]
[++, iBlock]
[iBlock]
[iBlock, *, BLOCK_SIZE]
[iBlock]
[BLOCK_SIZE]
[FastMath, ., min, (, pStart, +, BLOCK_SIZE, ,, rows, )]
[FastMath]
[pStart, +, BLOCK_SIZE]
[pStart]
[BLOCK_SIZE]
[rows]
[pStart]
[p, <, pEnd]
[p]
[pEnd]
[++, p]
[p]
[0]
[jBlock, <, blockColumns]
[jBlock]
[blockColumns]
[++, jBlock]
[jBlock]
[blockWidth, (, jBlock, )]
[jBlock]
[jBlock, *, BLOCK_SIZE]
[jBlock]
[BLOCK_SIZE]
[FastMath, ., min, (, qStart, +, BLOCK_SIZE, ,, columns, )]
[FastMath]
[qStart, +, BLOCK_SIZE]
[qStart]
[BLOCK_SIZE]
[columns]
[blocks, [, iBlock, *, blockColumns, +, jBlock, ]]
[blocks]
[iBlock, *, blockColumns, +, jBlock]
[iBlock, *, blockColumns]
[iBlock]
[blockColumns]
[jBlock]
[(, p, -, pStart, ), *, jWidth]
[(, p, -, pStart, )]
[p, -, pStart]
[p]
[pStart]
[jWidth]
[qStart]
[q, <, qEnd]
[q]
[qEnd]
[++, q]
[q]
[block, [, k, ]]
[block]
[k]
[visitor, ., visit, (, p, ,, q, ,, block, [, k, ], )]
[visitor]
[p]
[q]
[block, [, k, ]]
[block]
[k]
[++, k]
[k]
[visitor, ., end, (, )]
[visitor]
[visitor, ., start, (, rows, ,, columns, ,, 0, ,, rows, -, 1, ,, 0, ,, columns, -, 1, )]
[visitor]
[rows]
[columns]
[0]
[rows, -, 1]
[rows]
[1]
[0]
[columns, -, 1]
[columns]
[1]
[0]
[iBlock, <, blockRows]
[iBlock]
[blockRows]
[++, iBlock]
[iBlock]
[iBlock, *, BLOCK_SIZE]
[iBlock]
[BLOCK_SIZE]
[FastMath, ., min, (, pStart, +, BLOCK_SIZE, ,, rows, )]
[FastMath]
[pStart, +, BLOCK_SIZE]
[pStart]
[BLOCK_SIZE]
[rows]
[pStart]
[p, <, pEnd]
[p]
[pEnd]
[++, p]
[p]
[0]
[jBlock, <, blockColumns]
[jBlock]
[blockColumns]
[++, jBlock]
[jBlock]
[blockWidth, (, jBlock, )]
[jBlock]
[jBlock, *, BLOCK_SIZE]
[jBlock]
[BLOCK_SIZE]
[FastMath, ., min, (, qStart, +, BLOCK_SIZE, ,, columns, )]
[FastMath]
[qStart, +, BLOCK_SIZE]
[qStart]
[BLOCK_SIZE]
[columns]
[blocks, [, iBlock, *, blockColumns, +, jBlock, ]]
[blocks]
[iBlock, *, blockColumns, +, jBlock]
[iBlock, *, blockColumns]
[iBlock]
[blockColumns]
[jBlock]
[(, p, -, pStart, ), *, jWidth]
[(, p, -, pStart, )]
[p, -, pStart]
[p]
[pStart]
[jWidth]
[qStart]
[q, <, qEnd]
[q]
[qEnd]
[++, q]
[q]
[visitor, ., visit, (, p, ,, q, ,, block, [, k, ], )]
[visitor]
[p]
[q]
[block, [, k, ]]
[block]
[k]
[++, k]
[k]
[visitor, ., end, (, )]
[visitor]
[checkSubMatrixIndex, (, startRow, ,, endRow, ,, startColumn, ,, endColumn, )]
[startRow]
[endRow]
[startColumn]
[endColumn]
[visitor, ., start, (, rows, ,, columns, ,, startRow, ,, endRow, ,, startColumn, ,, endColumn, )]
[visitor]
[rows]
[columns]
[startRow]
[endRow]
[startColumn]
[endColumn]
[startRow, /, BLOCK_SIZE]
[startRow]
[BLOCK_SIZE]
[iBlock, <, 1, +, endRow, /, BLOCK_SIZE]
[iBlock]
[1, +, endRow, /, BLOCK_SIZE]
[1]
[endRow, /, BLOCK_SIZE]
[endRow]
[BLOCK_SIZE]
[++, iBlock]
[iBlock]
[iBlock, *, BLOCK_SIZE]
[iBlock]
[BLOCK_SIZE]
[FastMath, ., max, (, startRow, ,, p0, )]
[FastMath]
[startRow]
[p0]
[FastMath, ., min, (, (, iBlock, +, 1, ), *, BLOCK_SIZE, ,, 1, +, endRow, )]
[FastMath]
[(, iBlock, +, 1, ), *, BLOCK_SIZE]
[(, iBlock, +, 1, )]
[iBlock, +, 1]
[iBlock]
[1]
[BLOCK_SIZE]
[1, +, endRow]
[1]
[endRow]
[pStart]
[p, <, pEnd]
[p]
[pEnd]
[++, p]
[p]
[startColumn, /, BLOCK_SIZE]
[startColumn]
[BLOCK_SIZE]
[jBlock, <, 1, +, endColumn, /, BLOCK_SIZE]
[jBlock]
[1, +, endColumn, /, BLOCK_SIZE]
[1]
[endColumn, /, BLOCK_SIZE]
[endColumn]
[BLOCK_SIZE]
[++, jBlock]
[jBlock]
[blockWidth, (, jBlock, )]
[jBlock]
[jBlock, *, BLOCK_SIZE]
[jBlock]
[BLOCK_SIZE]
[FastMath, ., max, (, startColumn, ,, q0, )]
[FastMath]
[startColumn]
[q0]
[FastMath, ., min, (, (, jBlock, +, 1, ), *, BLOCK_SIZE, ,, 1, +, endColumn, )]
[FastMath]
[(, jBlock, +, 1, ), *, BLOCK_SIZE]
[(, jBlock, +, 1, )]
[jBlock, +, 1]
[jBlock]
[1]
[BLOCK_SIZE]
[1, +, endColumn]
[1]
[endColumn]
[blocks, [, iBlock, *, blockColumns, +, jBlock, ]]
[blocks]
[iBlock, *, blockColumns, +, jBlock]
[iBlock, *, blockColumns]
[iBlock]
[blockColumns]
[jBlock]
[(, p, -, p0, ), *, jWidth, +, qStart, -, q0]
[(, p, -, p0, ), *, jWidth, +, qStart]
[(, p, -, p0, ), *, jWidth]
[(, p, -, p0, )]
[p, -, p0]
[p]
[p0]
[jWidth]
[qStart]
[q0]
[qStart]
[q, <, qEnd]
[q]
[qEnd]
[++, q]
[q]
[block, [, k, ]]
[block]
[k]
[visitor, ., visit, (, p, ,, q, ,, block, [, k, ], )]
[visitor]
[p]
[q]
[block, [, k, ]]
[block]
[k]
[++, k]
[k]
[visitor, ., end, (, )]
[visitor]
[checkSubMatrixIndex, (, startRow, ,, endRow, ,, startColumn, ,, endColumn, )]
[startRow]
[endRow]
[startColumn]
[endColumn]
[visitor, ., start, (, rows, ,, columns, ,, startRow, ,, endRow, ,, startColumn, ,, endColumn, )]
[visitor]
[rows]
[columns]
[startRow]
[endRow]
[startColumn]
[endColumn]
[startRow, /, BLOCK_SIZE]
[startRow]
[BLOCK_SIZE]
[iBlock, <, 1, +, endRow, /, BLOCK_SIZE]
[iBlock]
[1, +, endRow, /, BLOCK_SIZE]
[1]
[endRow, /, BLOCK_SIZE]
[endRow]
[BLOCK_SIZE]
[++, iBlock]
[iBlock]
[iBlock, *, BLOCK_SIZE]
[iBlock]
[BLOCK_SIZE]
[FastMath, ., max, (, startRow, ,, p0, )]
[FastMath]
[startRow]
[p0]
[FastMath, ., min, (, (, iBlock, +, 1, ), *, BLOCK_SIZE, ,, 1, +, endRow, )]
[FastMath]
[(, iBlock, +, 1, ), *, BLOCK_SIZE]
[(, iBlock, +, 1, )]
[iBlock, +, 1]
[iBlock]
[1]
[BLOCK_SIZE]
[1, +, endRow]
[1]
[endRow]
[pStart]
[p, <, pEnd]
[p]
[pEnd]
[++, p]
[p]
[startColumn, /, BLOCK_SIZE]
[startColumn]
[BLOCK_SIZE]
[jBlock, <, 1, +, endColumn, /, BLOCK_SIZE]
[jBlock]
[1, +, endColumn, /, BLOCK_SIZE]
[1]
[endColumn, /, BLOCK_SIZE]
[endColumn]
[BLOCK_SIZE]
[++, jBlock]
[jBlock]
[blockWidth, (, jBlock, )]
[jBlock]
[jBlock, *, BLOCK_SIZE]
[jBlock]
[BLOCK_SIZE]
[FastMath, ., max, (, startColumn, ,, q0, )]
[FastMath]
[startColumn]
[q0]
[FastMath, ., min, (, (, jBlock, +, 1, ), *, BLOCK_SIZE, ,, 1, +, endColumn, )]
[FastMath]
[(, jBlock, +, 1, ), *, BLOCK_SIZE]
[(, jBlock, +, 1, )]
[jBlock, +, 1]
[jBlock]
[1]
[BLOCK_SIZE]
[1, +, endColumn]
[1]
[endColumn]
[blocks, [, iBlock, *, blockColumns, +, jBlock, ]]
[blocks]
[iBlock, *, blockColumns, +, jBlock]
[iBlock, *, blockColumns]
[iBlock]
[blockColumns]
[jBlock]
[(, p, -, p0, ), *, jWidth, +, qStart, -, q0]
[(, p, -, p0, ), *, jWidth, +, qStart]
[(, p, -, p0, ), *, jWidth]
[(, p, -, p0, )]
[p, -, p0]
[p]
[p0]
[jWidth]
[qStart]
[q0]
[qStart]
[q, <, qEnd]
[q]
[qEnd]
[++, q]
[q]
[visitor, ., visit, (, p, ,, q, ,, block, [, k, ], )]
[visitor]
[p]
[q]
[block, [, k, ]]
[block]
[k]
[++, k]
[k]
[visitor, ., end, (, )]
[visitor]
[visitor, ., start, (, rows, ,, columns, ,, 0, ,, rows, -, 1, ,, 0, ,, columns, -, 1, )]
[visitor]
[rows]
[columns]
[0]
[rows, -, 1]
[rows]
[1]
[0]
[columns, -, 1]
[columns]
[1]
[0]
[0]
[iBlock, <, blockRows]
[iBlock]
[blockRows]
[++, iBlock]
[iBlock]
[iBlock, *, BLOCK_SIZE]
[iBlock]
[BLOCK_SIZE]
[FastMath, ., min, (, pStart, +, BLOCK_SIZE, ,, rows, )]
[FastMath]
[pStart, +, BLOCK_SIZE]
[pStart]
[BLOCK_SIZE]
[rows]
[0]
[jBlock, <, blockColumns]
[jBlock]
[blockColumns]
[++, jBlock]
[jBlock]
[jBlock, *, BLOCK_SIZE]
[jBlock]
[BLOCK_SIZE]
[FastMath, ., min, (, qStart, +, BLOCK_SIZE, ,, columns, )]
[FastMath]
[qStart, +, BLOCK_SIZE]
[qStart]
[BLOCK_SIZE]
[columns]
[blocks, [, blockIndex, ]]
[blocks]
[blockIndex]
[0]
[pStart]
[p, <, pEnd]
[p]
[pEnd]
[++, p]
[p]
[qStart]
[q, <, qEnd]
[q]
[qEnd]
[++, q]
[q]
[block, [, k, ]]
[block]
[k]
[visitor, ., visit, (, p, ,, q, ,, block, [, k, ], )]
[visitor]
[p]
[q]
[block, [, k, ]]
[block]
[k]
[++, k]
[k]
[++, blockIndex]
[blockIndex]
[visitor, ., end, (, )]
[visitor]
[visitor, ., start, (, rows, ,, columns, ,, 0, ,, rows, -, 1, ,, 0, ,, columns, -, 1, )]
[visitor]
[rows]
[columns]
[0]
[rows, -, 1]
[rows]
[1]
[0]
[columns, -, 1]
[columns]
[1]
[0]
[0]
[iBlock, <, blockRows]
[iBlock]
[blockRows]
[++, iBlock]
[iBlock]
[iBlock, *, BLOCK_SIZE]
[iBlock]
[BLOCK_SIZE]
[FastMath, ., min, (, pStart, +, BLOCK_SIZE, ,, rows, )]
[FastMath]
[pStart, +, BLOCK_SIZE]
[pStart]
[BLOCK_SIZE]
[rows]
[0]
[jBlock, <, blockColumns]
[jBlock]
[blockColumns]
[++, jBlock]
[jBlock]
[jBlock, *, BLOCK_SIZE]
[jBlock]
[BLOCK_SIZE]
[FastMath, ., min, (, qStart, +, BLOCK_SIZE, ,, columns, )]
[FastMath]
[qStart, +, BLOCK_SIZE]
[qStart]
[BLOCK_SIZE]
[columns]
[blocks, [, blockIndex, ]]
[blocks]
[blockIndex]
[0]
[pStart]
[p, <, pEnd]
[p]
[pEnd]
[++, p]
[p]
[qStart]
[q, <, qEnd]
[q]
[qEnd]
[++, q]
[q]
[visitor, ., visit, (, p, ,, q, ,, block, [, k, ], )]
[visitor]
[p]
[q]
[block, [, k, ]]
[block]
[k]
[++, k]
[k]
[++, blockIndex]
[blockIndex]
[visitor, ., end, (, )]
[visitor]
[checkSubMatrixIndex, (, startRow, ,, endRow, ,, startColumn, ,, endColumn, )]
[startRow]
[endRow]
[startColumn]
[endColumn]
[visitor, ., start, (, rows, ,, columns, ,, startRow, ,, endRow, ,, startColumn, ,, endColumn, )]
[visitor]
[rows]
[columns]
[startRow]
[endRow]
[startColumn]
[endColumn]
[startRow, /, BLOCK_SIZE]
[startRow]
[BLOCK_SIZE]
[iBlock, <, 1, +, endRow, /, BLOCK_SIZE]
[iBlock]
[1, +, endRow, /, BLOCK_SIZE]
[1]
[endRow, /, BLOCK_SIZE]
[endRow]
[BLOCK_SIZE]
[++, iBlock]
[iBlock]
[iBlock, *, BLOCK_SIZE]
[iBlock]
[BLOCK_SIZE]
[FastMath, ., max, (, startRow, ,, p0, )]
[FastMath]
[startRow]
[p0]
[FastMath, ., min, (, (, iBlock, +, 1, ), *, BLOCK_SIZE, ,, 1, +, endRow, )]
[FastMath]
[(, iBlock, +, 1, ), *, BLOCK_SIZE]
[(, iBlock, +, 1, )]
[iBlock, +, 1]
[iBlock]
[1]
[BLOCK_SIZE]
[1, +, endRow]
[1]
[endRow]
[startColumn, /, BLOCK_SIZE]
[startColumn]
[BLOCK_SIZE]
[jBlock, <, 1, +, endColumn, /, BLOCK_SIZE]
[jBlock]
[1, +, endColumn, /, BLOCK_SIZE]
[1]
[endColumn, /, BLOCK_SIZE]
[endColumn]
[BLOCK_SIZE]
[++, jBlock]
[jBlock]
[blockWidth, (, jBlock, )]
[jBlock]
[jBlock, *, BLOCK_SIZE]
[jBlock]
[BLOCK_SIZE]
[FastMath, ., max, (, startColumn, ,, q0, )]
[FastMath]
[startColumn]
[q0]
[FastMath, ., min, (, (, jBlock, +, 1, ), *, BLOCK_SIZE, ,, 1, +, endColumn, )]
[FastMath]
[(, jBlock, +, 1, ), *, BLOCK_SIZE]
[(, jBlock, +, 1, )]
[jBlock, +, 1]
[jBlock]
[1]
[BLOCK_SIZE]
[1, +, endColumn]
[1]
[endColumn]
[blocks, [, iBlock, *, blockColumns, +, jBlock, ]]
[blocks]
[iBlock, *, blockColumns, +, jBlock]
[iBlock, *, blockColumns]
[iBlock]
[blockColumns]
[jBlock]
[pStart]
[p, <, pEnd]
[p]
[pEnd]
[++, p]
[p]
[(, p, -, p0, ), *, jWidth, +, qStart, -, q0]
[(, p, -, p0, ), *, jWidth, +, qStart]
[(, p, -, p0, ), *, jWidth]
[(, p, -, p0, )]
[p, -, p0]
[p]
[p0]
[jWidth]
[qStart]
[q0]
[qStart]
[q, <, qEnd]
[q]
[qEnd]
[++, q]
[q]
[block, [, k, ]]
[block]
[k]
[visitor, ., visit, (, p, ,, q, ,, block, [, k, ], )]
[visitor]
[p]
[q]
[block, [, k, ]]
[block]
[k]
[++, k]
[k]
[visitor, ., end, (, )]
[visitor]
[checkSubMatrixIndex, (, startRow, ,, endRow, ,, startColumn, ,, endColumn, )]
[startRow]
[endRow]
[startColumn]
[endColumn]
[visitor, ., start, (, rows, ,, columns, ,, startRow, ,, endRow, ,, startColumn, ,, endColumn, )]
[visitor]
[rows]
[columns]
[startRow]
[endRow]
[startColumn]
[endColumn]
[startRow, /, BLOCK_SIZE]
[startRow]
[BLOCK_SIZE]
[iBlock, <, 1, +, endRow, /, BLOCK_SIZE]
[iBlock]
[1, +, endRow, /, BLOCK_SIZE]
[1]
[endRow, /, BLOCK_SIZE]
[endRow]
[BLOCK_SIZE]
[++, iBlock]
[iBlock]
[iBlock, *, BLOCK_SIZE]
[iBlock]
[BLOCK_SIZE]
[FastMath, ., max, (, startRow, ,, p0, )]
[FastMath]
[startRow]
[p0]
[FastMath, ., min, (, (, iBlock, +, 1, ), *, BLOCK_SIZE, ,, 1, +, endRow, )]
[FastMath]
[(, iBlock, +, 1, ), *, BLOCK_SIZE]
[(, iBlock, +, 1, )]
[iBlock, +, 1]
[iBlock]
[1]
[BLOCK_SIZE]
[1, +, endRow]
[1]
[endRow]
[startColumn, /, BLOCK_SIZE]
[startColumn]
[BLOCK_SIZE]
[jBlock, <, 1, +, endColumn, /, BLOCK_SIZE]
[jBlock]
[1, +, endColumn, /, BLOCK_SIZE]
[1]
[endColumn, /, BLOCK_SIZE]
[endColumn]
[BLOCK_SIZE]
[++, jBlock]
[jBlock]
[blockWidth, (, jBlock, )]
[jBlock]
[jBlock, *, BLOCK_SIZE]
[jBlock]
[BLOCK_SIZE]
[FastMath, ., max, (, startColumn, ,, q0, )]
[FastMath]
[startColumn]
[q0]
[FastMath, ., min, (, (, jBlock, +, 1, ), *, BLOCK_SIZE, ,, 1, +, endColumn, )]
[FastMath]
[(, jBlock, +, 1, ), *, BLOCK_SIZE]
[(, jBlock, +, 1, )]
[jBlock, +, 1]
[jBlock]
[1]
[BLOCK_SIZE]
[1, +, endColumn]
[1]
[endColumn]
[blocks, [, iBlock, *, blockColumns, +, jBlock, ]]
[blocks]
[iBlock, *, blockColumns, +, jBlock]
[iBlock, *, blockColumns]
[iBlock]
[blockColumns]
[jBlock]
[pStart]
[p, <, pEnd]
[p]
[pEnd]
[++, p]
[p]
[(, p, -, p0, ), *, jWidth, +, qStart, -, q0]
[(, p, -, p0, ), *, jWidth, +, qStart]
[(, p, -, p0, ), *, jWidth]
[(, p, -, p0, )]
[p, -, p0]
[p]
[p0]
[jWidth]
[qStart]
[q0]
[qStart]
[q, <, qEnd]
[q]
[qEnd]
[++, q]
[q]
[visitor, ., visit, (, p, ,, q, ,, block, [, k, ], )]
[visitor]
[p]
[q]
[block, [, k, ]]
[block]
[k]
[++, k]
[k]
[visitor, ., end, (, )]
[visitor]
[(, blockRow, ==, blockRows, -, 1, ), ?, rows, -, blockRow, *, BLOCK_SIZE, :, BLOCK_SIZE]
[(, blockRow, ==, blockRows, -, 1, )]
[blockRow, ==, blockRows, -, 1]
[blockRow]
[blockRows, -, 1]
[blockRows]
[1]
[rows, -, blockRow, *, BLOCK_SIZE]
[rows]
[blockRow, *, BLOCK_SIZE]
[blockRow]
[BLOCK_SIZE]
[BLOCK_SIZE]
[(, blockColumn, ==, blockColumns, -, 1, ), ?, columns, -, blockColumn, *, BLOCK_SIZE, :, BLOCK_SIZE]
[(, blockColumn, ==, blockColumns, -, 1, )]
[blockColumn, ==, blockColumns, -, 1]
[blockColumn]
[blockColumns, -, 1]
[blockColumns]
[1]
[columns, -, blockColumn, *, BLOCK_SIZE]
[columns]
[blockColumn, *, BLOCK_SIZE]
[blockColumn]
[BLOCK_SIZE]
[BLOCK_SIZE]
