[1L]
[registry]
[this, ., alternates]
[this]
[alternates]
[this, ., hashcode]
[this]
[this, ., alternates, ., hashCode, (, )]
[this, ., alternates]
[this]
[alternates]
[alternates]
[t, ., matchesNumberContext, (, )]
[t]
[true]
[false]
[alternates]
[t, ., matchesStringContext, (, )]
[t]
[true]
[false]
[alternates]
[t, ., matchesObjectContext, (, )]
[t]
[true]
[false]
[null]
[getAlternates, (, )]
[alternate, ., isNullType, (, ), ||, alternate, ., isVoidType, (, )]
[alternate, ., isNullType, (, )]
[alternate]
[alternate, ., isVoidType, (, )]
[alternate]
[alternate, ., findPropertyType, (, propertyName, )]
[alternate]
[propertyName]
[altPropertyType, ==, null]
[altPropertyType]
[null]
[propertyType, ==, null]
[propertyType]
[null]
[propertyType]
[altPropertyType]
[propertyType]
[propertyType, ., getLeastSupertype, (, altPropertyType, )]
[propertyType]
[altPropertyType]
[propertyType]
[alternates]
[!, t, ., canBeCalled, (, )]
[t, ., canBeCalled, (, )]
[t]
[false]
[true]
[new, UnionTypeBuilder, (, registry, )]
[registry]
[alternates]
[restricted, ., addAlternate, (, t, ., autobox, (, ), )]
[restricted]
[t, ., autobox, (, )]
[t]
[restricted, ., build, (, )]
[restricted]
[new, UnionTypeBuilder, (, registry, )]
[registry]
[alternates]
[restricted, ., addAlternate, (, t, ., restrictByNotNullOrUndefined, (, ), )]
[restricted]
[t, ., restrictByNotNullOrUndefined, (, )]
[t]
[restricted, ., build, (, )]
[restricted]
[null]
[alternates]
[t, ., testForEquality, (, that, )]
[t]
[that]
[result, ==, null]
[result]
[null]
[result]
[test]
[!, result, ., equals, (, test, )]
[result, ., equals, (, test, )]
[result]
[test]
[UNKNOWN]
[result]
[alternates]
[t, ., isNullable, (, )]
[t]
[true]
[false]
[alternates]
[t, ., isUnknownType, (, )]
[t]
[true]
[false]
[getAlternates, (, )]
[typ, ., isStruct, (, )]
[typ]
[true]
[false]
[getAlternates, (, )]
[typ, ., isDict, (, )]
[typ]
[true]
[false]
[!, that, ., isUnknownType, (, ), &&, !, that, ., isUnionType, (, )]
[!, that, ., isUnknownType, (, )]
[that, ., isUnknownType, (, )]
[that]
[!, that, ., isUnionType, (, )]
[that, ., isUnionType, (, )]
[that]
[alternates]
[!, alternate, ., isUnknownType, (, ), &&, that, ., isSubtype, (, alternate, )]
[!, alternate, ., isUnknownType, (, )]
[alternate, ., isUnknownType, (, )]
[alternate]
[that, ., isSubtype, (, alternate, )]
[that]
[alternate]
[this]
[getLeastSupertype, (, this, ,, that, )]
[this]
[that]
[new, UnionTypeBuilder, (, registry, )]
[registry]
[alternates]
[alternate, ., isSubtype, (, that, )]
[alternate]
[that]
[builder, ., addAlternate, (, alternate, )]
[builder]
[alternate]
[that, ., isUnionType, (, )]
[that]
[that, ., toMaybeUnionType, (, ), ., alternates]
[that, ., toMaybeUnionType, (, )]
[that]
[otherAlternate, ., isSubtype, (, this, )]
[otherAlternate]
[this]
[builder, ., addAlternate, (, otherAlternate, )]
[builder]
[otherAlternate]
[that, ., isSubtype, (, this, )]
[that]
[this]
[builder, ., addAlternate, (, that, )]
[builder]
[that]
[builder, ., build, (, )]
[builder]
[!, result, ., isNoType, (, )]
[result, ., isNoType, (, )]
[result]
[result]
[this, ., isObject, (, ), &&, (, that, ., isObject, (, ), &&, !, that, ., isNoType, (, ), )]
[this, ., isObject, (, )]
[this]
[(, that, ., isObject, (, ), &&, !, that, ., isNoType, (, ), )]
[that, ., isObject, (, ), &&, !, that, ., isNoType, (, )]
[that, ., isObject, (, )]
[that]
[!, that, ., isNoType, (, )]
[that, ., isNoType, (, )]
[that]
[getNativeType, (, JSTypeNative, ., NO_OBJECT_TYPE, )]
[JSTypeNative, ., NO_OBJECT_TYPE]
[JSTypeNative]
[getNativeType, (, JSTypeNative, ., NO_TYPE, )]
[JSTypeNative, ., NO_TYPE]
[JSTypeNative]
[eqMethod, ==, EquivalenceMethod, ., IDENTITY, &&, alternates, ., size, (, ), !=, that, ., alternates, ., size, (, )]
[eqMethod, ==, EquivalenceMethod, ., IDENTITY]
[eqMethod]
[EquivalenceMethod, ., IDENTITY]
[EquivalenceMethod]
[alternates, ., size, (, ), !=, that, ., alternates, ., size, (, )]
[alternates, ., size, (, )]
[alternates]
[that, ., alternates, ., size, (, )]
[that, ., alternates]
[that]
[false]
[that, ., alternates]
[that]
[!, hasAlternate, (, alternate, ,, eqMethod, )]
[hasAlternate, (, alternate, ,, eqMethod, )]
[alternate]
[eqMethod]
[false]
[true]
[alternates]
[alternate, ., checkEquivalenceHelper, (, type, ,, eqMethod, )]
[alternate]
[type]
[eqMethod]
[true]
[false]
[alternates]
[alternate, ., hasProperty, (, pname, )]
[alternate]
[pname]
[true]
[false]
[this, ., hashcode]
[this]
[this]
[alternates]
[!, alternate, ., isObject, (, )]
[alternate, ., isObject, (, )]
[alternate]
[false]
[true]
[alternates]
[alt, ., isEquivalentTo, (, type, )]
[alt]
[type]
[true]
[false]
[new, UnionTypeBuilder, (, registry, )]
[registry]
[alternates]
[t, ., isUnknownType, (, ), ||, t, ., isNoResolvedType, (, ), ||, !, t, ., isSubtype, (, type, )]
[t, ., isUnknownType, (, ), ||, t, ., isNoResolvedType, (, )]
[t, ., isUnknownType, (, )]
[t]
[t, ., isNoResolvedType, (, )]
[t]
[!, t, ., isSubtype, (, type, )]
[t, ., isSubtype, (, type, )]
[t]
[type]
[restricted, ., addAlternate, (, t, )]
[restricted]
[t]
[restricted, ., build, (, )]
[restricted]
[new, StringBuilder, (, )]
[true]
[result, ., append, (, "(", )]
[result]
["("]
[new, TreeSet, <, JSType, >, (, ALPHA, )]
[ALPHA]
[sorted, ., addAll, (, alternates, )]
[sorted]
[alternates]
[sorted]
[!, firstAlternate]
[firstAlternate]
[result, ., append, (, "|", )]
[result]
["|"]
[result, ., append, (, t, ., toStringHelper, (, forAnnotations, ), )]
[result]
[t, ., toStringHelper, (, forAnnotations, )]
[t]
[forAnnotations]
[firstAlternate]
[false]
[result, ., append, (, ")", )]
[result]
[")"]
[result, ., toString, (, )]
[result]
[that, ., isUnknownType, (, )]
[that]
[true]
[that, ., isAllType, (, )]
[that]
[true]
[alternates]
[!, element, ., isSubtype, (, that, )]
[element, ., isSubtype, (, that, )]
[element]
[that]
[false]
[true]
[new, UnionTypeBuilder, (, registry, )]
[registry]
[alternates]
[restricted, ., addAlternate, (, element, ., getRestrictedTypeGivenToBooleanOutcome, (, outcome, ), )]
[restricted]
[element, ., getRestrictedTypeGivenToBooleanOutcome, (, outcome, )]
[element]
[outcome]
[restricted, ., build, (, )]
[restricted]
[BooleanLiteralSet, ., EMPTY]
[BooleanLiteralSet]
[alternates]
[literals]
[literals, ., union, (, element, ., getPossibleToBooleanOutcomes, (, ), )]
[literals]
[element, ., getPossibleToBooleanOutcomes, (, )]
[element]
[literals, ==, BooleanLiteralSet, ., BOTH]
[literals]
[BooleanLiteralSet, ., BOTH]
[BooleanLiteralSet]
[literals]
[new, UnionTypeBuilder, (, registry, )]
[registry]
[new, UnionTypeBuilder, (, registry, )]
[registry]
[alternates]
[element, ., getTypesUnderEquality, (, that, )]
[element]
[that]
[p, ., typeA, !=, null]
[p, ., typeA]
[p]
[null]
[thisRestricted, ., addAlternate, (, p, ., typeA, )]
[thisRestricted]
[p, ., typeA]
[p]
[p, ., typeB, !=, null]
[p, ., typeB]
[p]
[null]
[thatRestricted, ., addAlternate, (, p, ., typeB, )]
[thatRestricted]
[p, ., typeB]
[p]
[new, TypePair, (, thisRestricted, ., build, (, ), ,, thatRestricted, ., build, (, ), )]
[thisRestricted, ., build, (, )]
[thisRestricted]
[thatRestricted, ., build, (, )]
[thatRestricted]
[new, UnionTypeBuilder, (, registry, )]
[registry]
[new, UnionTypeBuilder, (, registry, )]
[registry]
[alternates]
[element, ., getTypesUnderInequality, (, that, )]
[element]
[that]
[p, ., typeA, !=, null]
[p, ., typeA]
[p]
[null]
[thisRestricted, ., addAlternate, (, p, ., typeA, )]
[thisRestricted]
[p, ., typeA]
[p]
[p, ., typeB, !=, null]
[p, ., typeB]
[p]
[null]
[thatRestricted, ., addAlternate, (, p, ., typeB, )]
[thatRestricted]
[p, ., typeB]
[p]
[new, TypePair, (, thisRestricted, ., build, (, ), ,, thatRestricted, ., build, (, ), )]
[thisRestricted, ., build, (, )]
[thisRestricted]
[thatRestricted, ., build, (, )]
[thatRestricted]
[new, UnionTypeBuilder, (, registry, )]
[registry]
[new, UnionTypeBuilder, (, registry, )]
[registry]
[alternates]
[element, ., getTypesUnderShallowInequality, (, that, )]
[element]
[that]
[p, ., typeA, !=, null]
[p, ., typeA]
[p]
[null]
[thisRestricted, ., addAlternate, (, p, ., typeA, )]
[thisRestricted]
[p, ., typeA]
[p]
[p, ., typeB, !=, null]
[p, ., typeB]
[p]
[null]
[thatRestricted, ., addAlternate, (, p, ., typeB, )]
[thatRestricted]
[p, ., typeB]
[p]
[new, TypePair, (, thisRestricted, ., build, (, ), ,, thatRestricted, ., build, (, ), )]
[thisRestricted, ., build, (, )]
[thisRestricted]
[thatRestricted, ., build, (, )]
[thatRestricted]
[visitor, ., caseUnionType, (, this, )]
[visitor]
[this]
[visitor, ., caseUnionType, (, this, ,, that, )]
[visitor]
[this]
[that]
[setResolvedTypeInternal, (, this, )]
[this]
[false]
[ImmutableList, ., builder, (, )]
[ImmutableList]
[alternates]
[alternate, ., resolve, (, t, ,, scope, )]
[alternate]
[t]
[scope]
[changed]
[(, alternate, !=, newAlternate, )]
[alternate, !=, newAlternate]
[alternate]
[newAlternate]
[resolvedTypes, ., add, (, alternate, )]
[resolvedTypes]
[alternate]
[changed]
[resolvedTypes, ., build, (, )]
[resolvedTypes]
[Preconditions, ., checkState, (, newAlternates, ., hashCode, (, ), ==, this, ., hashcode, )]
[Preconditions]
[newAlternates, ., hashCode, (, ), ==, this, ., hashcode]
[newAlternates, ., hashCode, (, )]
[newAlternates]
[this, ., hashcode]
[this]
[alternates]
[newAlternates]
[this]
[Lists, ., newArrayList, (, )]
[Lists]
[alternates]
[hashCodes, ., add, (, a, ., toDebugHashCodeString, (, ), )]
[hashCodes]
[a, ., toDebugHashCodeString, (, )]
[a]
["{(", +, Joiner, ., on, (, ",", ), ., join, (, hashCodes, ), +, ")}"]
["{(", +, Joiner, ., on, (, ",", ), ., join, (, hashCodes, )]
["{("]
[Joiner, ., on, (, ",", ), ., join, (, hashCodes, )]
[Joiner, ., on, (, ",", )]
[Joiner]
[","]
[hashCodes]
[")}"]
[alternates]
[a, ., setValidator, (, validator, )]
[a]
[validator]
[true]
[null]
[null]
[alternates]
[a, ., isUnknownType, (, )]
[a]
[getNativeType, (, JSTypeNative, ., UNKNOWN_TYPE, )]
[JSTypeNative, ., UNKNOWN_TYPE]
[JSTypeNative]
[a, ., toObjectType, (, )]
[a]
[obj, ==, null]
[obj]
[null]
[currentValue, ==, null, &&, currentCommonSuper, ==, null]
[currentValue, ==, null]
[currentValue]
[null]
[currentCommonSuper, ==, null]
[currentCommonSuper]
[null]
[currentValue]
[a]
[getNativeType, (, JSTypeNative, ., ALL_TYPE, )]
[JSTypeNative, ., ALL_TYPE]
[JSTypeNative]
[currentValue, !=, null]
[currentValue]
[null]
[getNativeType, (, JSTypeNative, ., ALL_TYPE, )]
[JSTypeNative, ., ALL_TYPE]
[JSTypeNative]
[currentCommonSuper, ==, null]
[currentCommonSuper]
[null]
[currentCommonSuper]
[obj]
[currentCommonSuper]
[registry, ., findCommonSuperObject, (, currentCommonSuper, ,, obj, )]
[registry]
[currentCommonSuper]
[obj]
[currentCommonSuper]
[alternates]
[alternate, ., matchConstraint, (, constraint, )]
[alternate]
[constraint]
[alternates]
[alternate, ., hasAnyTemplateTypes, (, )]
[alternate]
[true]
[false]
