[@, SuppressWarnings, (, "unused", )]
["unused"]
[5708241235177666790L]
[field]
[type]
[divisor, <, 2]
[divisor]
[2]
[new, IllegalArgumentException, (, "The divisor must be at least 2", )]
["The divisor must be at least 2"]
[field, ., getDurationField, (, )]
[field]
[rangeField, ==, null]
[rangeField]
[null]
[iRangeField]
[null]
[iRangeField]
[new, ScaledDurationField, (, rangeField, ,, type, ., getRangeDurationType, (, ), ,, divisor, )]
[rangeField]
[type, ., getRangeDurationType, (, )]
[type]
[divisor]
[iDurationField]
[field, ., getDurationField, (, )]
[field]
[iDivisor]
[divisor]
[field]
[type]
[divisor, <, 2]
[divisor]
[2]
[new, IllegalArgumentException, (, "The divisor must be at least 2", )]
["The divisor must be at least 2"]
[iRangeField]
[rangeField]
[iDurationField]
[field, ., getDurationField, (, )]
[field]
[iDivisor]
[divisor]
[dividedField]
[dividedField, ., getType, (, )]
[dividedField]
[dividedField]
[dividedField, ., getWrappedField, (, ), ., getDurationField, (, )]
[dividedField, ., getWrappedField, (, )]
[dividedField]
[type]
[dividedField, ., getWrappedField, (, )]
[dividedField]
[type]
[iDivisor]
[dividedField, ., iDivisor]
[dividedField]
[iDurationField]
[durationField]
[iRangeField]
[dividedField, ., iDurationField]
[dividedField]
[getWrappedField, (, ), ., get, (, instant, )]
[getWrappedField, (, )]
[instant]
[value, >=, 0]
[value]
[0]
[value, %, iDivisor]
[value]
[iDivisor]
[(, iDivisor, -, 1, ), +, (, (, value, +, 1, ), %, iDivisor, )]
[(, iDivisor, -, 1, )]
[iDivisor, -, 1]
[iDivisor]
[1]
[(, (, value, +, 1, ), %, iDivisor, )]
[(, value, +, 1, ), %, iDivisor]
[(, value, +, 1, )]
[value, +, 1]
[value]
[1]
[iDivisor]
[set, (, instant, ,, FieldUtils, ., getWrappedValue, (, get, (, instant, ), ,, amount, ,, 0, ,, iDivisor, -, 1, ), )]
[instant]
[FieldUtils, ., getWrappedValue, (, get, (, instant, ), ,, amount, ,, 0, ,, iDivisor, -, 1, )]
[FieldUtils]
[get, (, instant, )]
[instant]
[amount]
[0]
[iDivisor, -, 1]
[iDivisor]
[1]
[FieldUtils, ., verifyValueBounds, (, this, ,, value, ,, 0, ,, iDivisor, -, 1, )]
[FieldUtils]
[this]
[value]
[0]
[iDivisor, -, 1]
[iDivisor]
[1]
[getDivided, (, getWrappedField, (, ), ., get, (, instant, ), )]
[getWrappedField, (, ), ., get, (, instant, )]
[getWrappedField, (, )]
[instant]
[getWrappedField, (, ), ., set, (, instant, ,, divided, *, iDivisor, +, value, )]
[getWrappedField, (, )]
[instant]
[divided, *, iDivisor, +, value]
[divided, *, iDivisor]
[divided]
[iDivisor]
[value]
[iDurationField]
[iRangeField]
[0]
[iDivisor, -, 1]
[iDivisor]
[1]
[getWrappedField, (, ), ., roundFloor, (, instant, )]
[getWrappedField, (, )]
[instant]
[getWrappedField, (, ), ., roundCeiling, (, instant, )]
[getWrappedField, (, )]
[instant]
[getWrappedField, (, ), ., roundHalfFloor, (, instant, )]
[getWrappedField, (, )]
[instant]
[getWrappedField, (, ), ., roundHalfCeiling, (, instant, )]
[getWrappedField, (, )]
[instant]
[getWrappedField, (, ), ., roundHalfEven, (, instant, )]
[getWrappedField, (, )]
[instant]
[getWrappedField, (, ), ., remainder, (, instant, )]
[getWrappedField, (, )]
[instant]
[iDivisor]
[value, >=, 0]
[value]
[0]
[value, /, iDivisor]
[value]
[iDivisor]
[(, (, value, +, 1, ), /, iDivisor, ), -, 1]
[(, (, value, +, 1, ), /, iDivisor, )]
[(, value, +, 1, ), /, iDivisor]
[(, value, +, 1, )]
[value, +, 1]
[value]
[1]
[iDivisor]
[1]
