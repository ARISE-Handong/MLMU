[52]
[FastMath, ., pow, (, 2, ,, BITS, )]
[FastMath]
[2]
[BITS]
[1000]
["/assets/org/apache/commons/math3/random/new-joe-kuo-6.1000"]
["US-ASCII"]
[0]
[dimension, <, 1, ||, dimension, >, MAX_DIMENSION]
[dimension, <, 1]
[dimension]
[1]
[dimension, >, MAX_DIMENSION]
[dimension]
[MAX_DIMENSION]
[new, OutOfRangeException, (, dimension, ,, 1, ,, MAX_DIMENSION, )]
[dimension]
[1]
[MAX_DIMENSION]
[getClass, (, ), ., getResourceAsStream, (, RESOURCE_NAME, )]
[getClass, (, )]
[RESOURCE_NAME]
[is, ==, null]
[is]
[null]
[new, MathInternalError, (, )]
[this, ., dimension]
[this]
[dimension]
[direction]
[new, long, [, dimension, ], [, BITS, +, 1, ]]
[dimension]
[BITS, +, 1]
[BITS]
[1]
[x]
[new, long, [, dimension, ]]
[dimension]
[initFromStream, (, is, )]
[is]
[new, MathInternalError, (, )]
[new, MathInternalError, (, )]
[is, ., close, (, )]
[is]
[dimension, <, 1]
[dimension]
[1]
[new, NotStrictlyPositiveException, (, dimension, )]
[dimension]
[this, ., dimension]
[this]
[dimension]
[direction]
[new, long, [, dimension, ], [, BITS, +, 1, ]]
[dimension]
[BITS, +, 1]
[BITS]
[1]
[x]
[new, long, [, dimension, ]]
[dimension]
[initFromStream, (, is, )]
[is]
[lastDimension, <, dimension]
[lastDimension]
[dimension]
[new, OutOfRangeException, (, dimension, ,, 1, ,, lastDimension, )]
[dimension]
[1]
[lastDimension]
[1]
[i, <=, BITS]
[i]
[BITS]
[i, ++]
[i]
[direction, [, 0, ], [, i, ]]
[direction, [, 0, ]]
[direction]
[0]
[i]
[1l, <<, (, BITS, -, i, )]
[1l]
[(, BITS, -, i, )]
[BITS, -, i]
[BITS]
[i]
[Charset, ., forName, (, FILE_CHARSET, )]
[Charset]
[FILE_CHARSET]
[new, BufferedReader, (, new, InputStreamReader, (, is, ,, charset, ), )]
[new, InputStreamReader, (, is, ,, charset, )]
[is]
[charset]
[-, 1]
[1]
[reader, ., readLine, (, )]
[reader]
[2]
[1]
[null]
[(, line, =, reader, ., readLine, (, ), ), !=, null]
[(, line, =, reader, ., readLine, (, ), )]
[line]
[reader, ., readLine, (, )]
[reader]
[null]
[new, StringTokenizer, (, line, ,, " ", )]
[line]
[" "]
[dim]
[Integer, ., parseInt, (, st, ., nextToken, (, ), )]
[Integer]
[st, ., nextToken, (, )]
[st]
[dim, >=, 2, &&, dim, <=, dimension]
[dim, >=, 2]
[dim]
[2]
[dim, <=, dimension]
[dim]
[dimension]
[Integer, ., parseInt, (, st, ., nextToken, (, ), )]
[Integer]
[st, ., nextToken, (, )]
[st]
[Integer, ., parseInt, (, st, ., nextToken, (, ), )]
[Integer]
[st, ., nextToken, (, )]
[st]
[new, int, [, s, +, 1, ]]
[s, +, 1]
[s]
[1]
[1]
[i, <=, s]
[i]
[s]
[i, ++]
[i]
[m, [, i, ]]
[m]
[i]
[Integer, ., parseInt, (, st, ., nextToken, (, ), )]
[Integer]
[st, ., nextToken, (, )]
[st]
[initDirectionVector, (, index, ++, ,, a, ,, m, )]
[index, ++]
[index]
[a]
[m]
[dim, >, dimension]
[dim]
[dimension]
[dim]
[new, MathParseException, (, line, ,, lineNumber, )]
[line]
[lineNumber]
[new, MathParseException, (, line, ,, lineNumber, )]
[line]
[lineNumber]
[lineNumber, ++]
[lineNumber]
[reader, ., close, (, )]
[reader]
[dim]
[m, ., length, -, 1]
[m, ., length]
[m]
[1]
[1]
[i, <=, s]
[i]
[s]
[i, ++]
[i]
[direction, [, d, ], [, i, ]]
[direction, [, d, ]]
[direction]
[d]
[i]
[(, (, long, ), m, [, i, ], ), <<, (, BITS, -, i, )]
[(, (, long, ), m, [, i, ], )]
[(, long, ), m, [, i, ]]
[m, [, i, ]]
[m]
[i]
[(, BITS, -, i, )]
[BITS, -, i]
[BITS]
[i]
[s, +, 1]
[s]
[1]
[i, <=, BITS]
[i]
[BITS]
[i, ++]
[i]
[direction, [, d, ], [, i, ]]
[direction, [, d, ]]
[direction]
[d]
[i]
[direction, [, d, ], [, i, -, s, ], ^, (, direction, [, d, ], [, i, -, s, ], >, >, s, )]
[direction, [, d, ], [, i, -, s, ]]
[direction, [, d, ]]
[direction]
[d]
[i, -, s]
[i]
[s]
[(, direction, [, d, ], [, i, -, s, ], >, >, s, )]
[direction, [, d, ], [, i, -, s, ], >, >, s]
[direction, [, d, ], [, i, -, s, ]]
[direction, [, d, ]]
[direction]
[d]
[i, -, s]
[i]
[s]
[s]
[1]
[k, <=, s, -, 1]
[k]
[s, -, 1]
[s]
[1]
[k, ++]
[k]
[direction, [, d, ], [, i, ]]
[direction, [, d, ]]
[direction]
[d]
[i]
[(, (, a, >, >, (, s, -, 1, -, k, ), ), &, 1, ), *, direction, [, d, ], [, i, -, k, ]]
[(, (, a, >, >, (, s, -, 1, -, k, ), ), &, 1, )]
[(, a, >, >, (, s, -, 1, -, k, ), ), &, 1]
[(, a, >, >, (, s, -, 1, -, k, ), )]
[a, >, >, (, s, -, 1, -, k, )]
[a]
[(, s, -, 1, -, k, )]
[s, -, 1, -, k]
[s, -, 1]
[s]
[1]
[k]
[1]
[direction, [, d, ], [, i, -, k, ]]
[direction, [, d, ]]
[direction]
[d]
[i, -, k]
[i]
[k]
[new, double, [, dimension, ]]
[dimension]
[count, ==, 0]
[count]
[0]
[count, ++]
[count]
[v]
[1]
[count, -, 1]
[count]
[1]
[(, value, &, 1, ), ==, 1]
[(, value, &, 1, )]
[value, &, 1]
[value]
[1]
[1]
[value]
[1]
[c, ++]
[c]
[0]
[i, <, dimension]
[i]
[dimension]
[i, ++]
[i]
[x, [, i, ]]
[x]
[i]
[x, [, i, ], ^, direction, [, i, ], [, c, ]]
[x, [, i, ]]
[x]
[i]
[direction, [, i, ], [, c, ]]
[direction, [, i, ]]
[direction]
[i]
[c]
[v, [, i, ]]
[v]
[i]
[(, double, ), x, [, i, ], /, SCALE]
[(, double, ), x, [, i, ]]
[x, [, i, ]]
[x]
[i]
[SCALE]
[count, ++]
[count]
[v]
[index, ==, 0]
[index]
[0]
[Arrays, ., fill, (, x, ,, 0, )]
[Arrays]
[x]
[0]
[index, -, 1]
[index]
[1]
[i, ^, (, i, >, >, 1, )]
[i]
[(, i, >, >, 1, )]
[i, >, >, 1]
[i]
[1]
[0]
[j, <, dimension]
[j]
[dimension]
[j, ++]
[j]
[0]
[1]
[k, <=, BITS]
[k]
[BITS]
[k, ++]
[k]
[grayCode, >, >, (, k, -, 1, )]
[grayCode]
[(, k, -, 1, )]
[k, -, 1]
[k]
[1]
[shift, ==, 0]
[shift]
[0]
[shift, &, 1]
[shift]
[1]
[result]
[ik, *, direction, [, j, ], [, k, ]]
[ik]
[direction, [, j, ], [, k, ]]
[direction, [, j, ]]
[direction]
[j]
[k]
[x, [, j, ]]
[x]
[j]
[result]
[count]
[index]
[nextVector, (, )]
[count]
