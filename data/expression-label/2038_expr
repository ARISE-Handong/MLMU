[xval, ., length, ==, 0, ||, yval, ., length, ==, 0, ||, zval, ., length, ==, 0, ||, fval, ., length, ==, 0]
[xval, ., length, ==, 0, ||, yval, ., length, ==, 0, ||, zval, ., length, ==, 0]
[xval, ., length, ==, 0, ||, yval, ., length, ==, 0]
[xval, ., length, ==, 0]
[xval, ., length]
[xval]
[0]
[yval, ., length, ==, 0]
[yval, ., length]
[yval]
[0]
[zval, ., length, ==, 0]
[zval, ., length]
[zval]
[0]
[fval, ., length, ==, 0]
[fval, ., length]
[fval]
[0]
[new, NoDataException, (, )]
[xval, ., length, !=, fval, ., length]
[xval, ., length]
[xval]
[fval, ., length]
[fval]
[new, DimensionMismatchException, (, xval, ., length, ,, fval, ., length, )]
[xval, ., length]
[xval]
[fval, ., length]
[fval]
[MathArrays, ., checkOrder, (, xval, )]
[MathArrays]
[xval]
[MathArrays, ., checkOrder, (, yval, )]
[MathArrays]
[yval]
[MathArrays, ., checkOrder, (, zval, )]
[MathArrays]
[zval]
[xval, ., length]
[xval]
[yval, ., length]
[yval]
[zval, ., length]
[zval]
[new, double, [, zLen, ], [, xLen, ], [, yLen, ]]
[zLen]
[xLen]
[yLen]
[new, double, [, yLen, ], [, zLen, ], [, xLen, ]]
[yLen]
[zLen]
[xLen]
[0]
[i, <, xLen]
[i]
[xLen]
[i, ++]
[i]
[fval, [, i, ], ., length, !=, yLen]
[fval, [, i, ], ., length]
[fval, [, i, ]]
[fval]
[i]
[yLen]
[new, DimensionMismatchException, (, fval, [, i, ], ., length, ,, yLen, )]
[fval, [, i, ], ., length]
[fval, [, i, ]]
[fval]
[i]
[yLen]
[0]
[j, <, yLen]
[j]
[yLen]
[j, ++]
[j]
[fval, [, i, ], [, j, ], ., length, !=, zLen]
[fval, [, i, ], [, j, ], ., length]
[fval, [, i, ], [, j, ]]
[fval, [, i, ]]
[fval]
[i]
[j]
[zLen]
[new, DimensionMismatchException, (, fval, [, i, ], [, j, ], ., length, ,, zLen, )]
[fval, [, i, ], [, j, ], ., length]
[fval, [, i, ], [, j, ]]
[fval, [, i, ]]
[fval]
[i]
[j]
[zLen]
[0]
[k, <, zLen]
[k]
[zLen]
[k, ++]
[k]
[fval, [, i, ], [, j, ], [, k, ]]
[fval, [, i, ], [, j, ]]
[fval, [, i, ]]
[fval]
[i]
[j]
[k]
[fvalXY, [, k, ], [, i, ], [, j, ]]
[fvalXY, [, k, ], [, i, ]]
[fvalXY, [, k, ]]
[fvalXY]
[k]
[i]
[j]
[v]
[fvalZX, [, j, ], [, k, ], [, i, ]]
[fvalZX, [, j, ], [, k, ]]
[fvalZX, [, j, ]]
[fvalZX]
[j]
[k]
[i]
[v]
[new, BicubicSplineInterpolator, (, )]
[new, BicubicSplineInterpolatingFunction, [, xLen, ]]
[xLen]
[0]
[i, <, xLen]
[i]
[xLen]
[i, ++]
[i]
[xSplineYZ, [, i, ]]
[xSplineYZ]
[i]
[bsi, ., interpolate, (, yval, ,, zval, ,, fval, [, i, ], )]
[bsi]
[yval]
[zval]
[fval, [, i, ]]
[fval]
[i]
[new, BicubicSplineInterpolatingFunction, [, yLen, ]]
[yLen]
[0]
[j, <, yLen]
[j]
[yLen]
[j, ++]
[j]
[ySplineZX, [, j, ]]
[ySplineZX]
[j]
[bsi, ., interpolate, (, zval, ,, xval, ,, fvalZX, [, j, ], )]
[bsi]
[zval]
[xval]
[fvalZX, [, j, ]]
[fvalZX]
[j]
[new, BicubicSplineInterpolatingFunction, [, zLen, ]]
[zLen]
[0]
[k, <, zLen]
[k]
[zLen]
[k, ++]
[k]
[zSplineXY, [, k, ]]
[zSplineXY]
[k]
[bsi, ., interpolate, (, xval, ,, yval, ,, fvalXY, [, k, ], )]
[bsi]
[xval]
[yval]
[fvalXY, [, k, ]]
[fvalXY]
[k]
[new, double, [, xLen, ], [, yLen, ], [, zLen, ]]
[xLen]
[yLen]
[zLen]
[new, double, [, xLen, ], [, yLen, ], [, zLen, ]]
[xLen]
[yLen]
[zLen]
[new, double, [, xLen, ], [, yLen, ], [, zLen, ]]
[xLen]
[yLen]
[zLen]
[0]
[k, <, zLen]
[k]
[zLen]
[k, ++]
[k]
[zSplineXY, [, k, ]]
[zSplineXY]
[k]
[0]
[i, <, xLen]
[i]
[xLen]
[i, ++]
[i]
[xval, [, i, ]]
[xval]
[i]
[0]
[j, <, yLen]
[j]
[yLen]
[j, ++]
[j]
[yval, [, j, ]]
[yval]
[j]
[dFdX, [, i, ], [, j, ], [, k, ]]
[dFdX, [, i, ], [, j, ]]
[dFdX, [, i, ]]
[dFdX]
[i]
[j]
[k]
[f, ., partialDerivativeX, (, x, ,, y, )]
[f]
[x]
[y]
[dFdY, [, i, ], [, j, ], [, k, ]]
[dFdY, [, i, ], [, j, ]]
[dFdY, [, i, ]]
[dFdY]
[i]
[j]
[k]
[f, ., partialDerivativeY, (, x, ,, y, )]
[f]
[x]
[y]
[d2FdXdY, [, i, ], [, j, ], [, k, ]]
[d2FdXdY, [, i, ], [, j, ]]
[d2FdXdY, [, i, ]]
[d2FdXdY]
[i]
[j]
[k]
[f, ., partialDerivativeXY, (, x, ,, y, )]
[f]
[x]
[y]
[new, double, [, xLen, ], [, yLen, ], [, zLen, ]]
[xLen]
[yLen]
[zLen]
[new, double, [, xLen, ], [, yLen, ], [, zLen, ]]
[xLen]
[yLen]
[zLen]
[0]
[i, <, xLen]
[i]
[xLen]
[i, ++]
[i]
[xSplineYZ, [, i, ]]
[xSplineYZ]
[i]
[0]
[j, <, yLen]
[j]
[yLen]
[j, ++]
[j]
[yval, [, j, ]]
[yval]
[j]
[0]
[k, <, zLen]
[k]
[zLen]
[k, ++]
[k]
[zval, [, k, ]]
[zval]
[k]
[dFdZ, [, i, ], [, j, ], [, k, ]]
[dFdZ, [, i, ], [, j, ]]
[dFdZ, [, i, ]]
[dFdZ]
[i]
[j]
[k]
[f, ., partialDerivativeY, (, y, ,, z, )]
[f]
[y]
[z]
[d2FdYdZ, [, i, ], [, j, ], [, k, ]]
[d2FdYdZ, [, i, ], [, j, ]]
[d2FdYdZ, [, i, ]]
[d2FdYdZ]
[i]
[j]
[k]
[f, ., partialDerivativeXY, (, y, ,, z, )]
[f]
[y]
[z]
[new, double, [, xLen, ], [, yLen, ], [, zLen, ]]
[xLen]
[yLen]
[zLen]
[0]
[j, <, yLen]
[j]
[yLen]
[j, ++]
[j]
[ySplineZX, [, j, ]]
[ySplineZX]
[j]
[0]
[k, <, zLen]
[k]
[zLen]
[k, ++]
[k]
[zval, [, k, ]]
[zval]
[k]
[0]
[i, <, xLen]
[i]
[xLen]
[i, ++]
[i]
[xval, [, i, ]]
[xval]
[i]
[d2FdZdX, [, i, ], [, j, ], [, k, ]]
[d2FdZdX, [, i, ], [, j, ]]
[d2FdZdX, [, i, ]]
[d2FdZdX]
[i]
[j]
[k]
[f, ., partialDerivativeXY, (, z, ,, x, )]
[f]
[z]
[x]
[new, double, [, xLen, ], [, yLen, ], [, zLen, ]]
[xLen]
[yLen]
[zLen]
[0]
[i, <, xLen]
[i]
[xLen]
[i, ++]
[i]
[nextIndex, (, i, ,, xLen, )]
[i]
[xLen]
[previousIndex, (, i, )]
[i]
[0]
[j, <, yLen]
[j]
[yLen]
[j, ++]
[j]
[nextIndex, (, j, ,, yLen, )]
[j]
[yLen]
[previousIndex, (, j, )]
[j]
[0]
[k, <, zLen]
[k]
[zLen]
[k, ++]
[k]
[nextIndex, (, k, ,, zLen, )]
[k]
[zLen]
[previousIndex, (, k, )]
[k]
[d3FdXdYdZ, [, i, ], [, j, ], [, k, ]]
[d3FdXdYdZ, [, i, ], [, j, ]]
[d3FdXdYdZ, [, i, ]]
[d3FdXdYdZ]
[i]
[j]
[k]
[(, fval, [, nI, ], [, nJ, ], [, nK, ], -, fval, [, nI, ], [, pJ, ], [, nK, ], -, fval, [, pI, ], [, nJ, ], [, nK, ], +, fval, [, pI, ], [, pJ, ], [, nK, ], -, fval, [, nI, ], [, nJ, ], [, pK, ], +, fval, [, nI, ], [, pJ, ], [, pK, ], +, fval, [, pI, ], [, nJ, ], [, pK, ], -, fval, [, pI, ], [, pJ, ], [, pK, ], ), /, (, (, xval, [, nI, ], -, xval, [, pI, ], ), *, (, yval, [, nJ, ], -, yval, [, pJ, ], ), *, (, zval, [, nK, ], -, zval, [, pK, ], ), )]
[(, fval, [, nI, ], [, nJ, ], [, nK, ], -, fval, [, nI, ], [, pJ, ], [, nK, ], -, fval, [, pI, ], [, nJ, ], [, nK, ], +, fval, [, pI, ], [, pJ, ], [, nK, ], -, fval, [, nI, ], [, nJ, ], [, pK, ], +, fval, [, nI, ], [, pJ, ], [, pK, ], +, fval, [, pI, ], [, nJ, ], [, pK, ], -, fval, [, pI, ], [, pJ, ], [, pK, ], )]
[fval, [, nI, ], [, nJ, ], [, nK, ], -, fval, [, nI, ], [, pJ, ], [, nK, ], -, fval, [, pI, ], [, nJ, ], [, nK, ], +, fval, [, pI, ], [, pJ, ], [, nK, ], -, fval, [, nI, ], [, nJ, ], [, pK, ], +, fval, [, nI, ], [, pJ, ], [, pK, ], +, fval, [, pI, ], [, nJ, ], [, pK, ], -, fval, [, pI, ], [, pJ, ], [, pK, ]]
[fval, [, nI, ], [, nJ, ], [, nK, ], -, fval, [, nI, ], [, pJ, ], [, nK, ], -, fval, [, pI, ], [, nJ, ], [, nK, ], +, fval, [, pI, ], [, pJ, ], [, nK, ], -, fval, [, nI, ], [, nJ, ], [, pK, ], +, fval, [, nI, ], [, pJ, ], [, pK, ], +, fval, [, pI, ], [, nJ, ], [, pK, ]]
[fval, [, nI, ], [, nJ, ], [, nK, ], -, fval, [, nI, ], [, pJ, ], [, nK, ], -, fval, [, pI, ], [, nJ, ], [, nK, ], +, fval, [, pI, ], [, pJ, ], [, nK, ], -, fval, [, nI, ], [, nJ, ], [, pK, ], +, fval, [, nI, ], [, pJ, ], [, pK, ]]
[fval, [, nI, ], [, nJ, ], [, nK, ], -, fval, [, nI, ], [, pJ, ], [, nK, ], -, fval, [, pI, ], [, nJ, ], [, nK, ], +, fval, [, pI, ], [, pJ, ], [, nK, ], -, fval, [, nI, ], [, nJ, ], [, pK, ]]
[fval, [, nI, ], [, nJ, ], [, nK, ], -, fval, [, nI, ], [, pJ, ], [, nK, ], -, fval, [, pI, ], [, nJ, ], [, nK, ], +, fval, [, pI, ], [, pJ, ], [, nK, ]]
[fval, [, nI, ], [, nJ, ], [, nK, ], -, fval, [, nI, ], [, pJ, ], [, nK, ], -, fval, [, pI, ], [, nJ, ], [, nK, ]]
[fval, [, nI, ], [, nJ, ], [, nK, ], -, fval, [, nI, ], [, pJ, ], [, nK, ]]
[fval, [, nI, ], [, nJ, ], [, nK, ]]
[fval, [, nI, ], [, nJ, ]]
[fval, [, nI, ]]
[fval]
[nI]
[nJ]
[nK]
[fval, [, nI, ], [, pJ, ], [, nK, ]]
[fval, [, nI, ], [, pJ, ]]
[fval, [, nI, ]]
[fval]
[nI]
[pJ]
[nK]
[fval, [, pI, ], [, nJ, ], [, nK, ]]
[fval, [, pI, ], [, nJ, ]]
[fval, [, pI, ]]
[fval]
[pI]
[nJ]
[nK]
[fval, [, pI, ], [, pJ, ], [, nK, ]]
[fval, [, pI, ], [, pJ, ]]
[fval, [, pI, ]]
[fval]
[pI]
[pJ]
[nK]
[fval, [, nI, ], [, nJ, ], [, pK, ]]
[fval, [, nI, ], [, nJ, ]]
[fval, [, nI, ]]
[fval]
[nI]
[nJ]
[pK]
[fval, [, nI, ], [, pJ, ], [, pK, ]]
[fval, [, nI, ], [, pJ, ]]
[fval, [, nI, ]]
[fval]
[nI]
[pJ]
[pK]
[fval, [, pI, ], [, nJ, ], [, pK, ]]
[fval, [, pI, ], [, nJ, ]]
[fval, [, pI, ]]
[fval]
[pI]
[nJ]
[pK]
[fval, [, pI, ], [, pJ, ], [, pK, ]]
[fval, [, pI, ], [, pJ, ]]
[fval, [, pI, ]]
[fval]
[pI]
[pJ]
[pK]
[(, (, xval, [, nI, ], -, xval, [, pI, ], ), *, (, yval, [, nJ, ], -, yval, [, pJ, ], ), *, (, zval, [, nK, ], -, zval, [, pK, ], ), )]
[(, xval, [, nI, ], -, xval, [, pI, ], ), *, (, yval, [, nJ, ], -, yval, [, pJ, ], ), *, (, zval, [, nK, ], -, zval, [, pK, ], )]
[(, xval, [, nI, ], -, xval, [, pI, ], ), *, (, yval, [, nJ, ], -, yval, [, pJ, ], )]
[(, xval, [, nI, ], -, xval, [, pI, ], )]
[xval, [, nI, ], -, xval, [, pI, ]]
[xval, [, nI, ]]
[xval]
[nI]
[xval, [, pI, ]]
[xval]
[pI]
[(, yval, [, nJ, ], -, yval, [, pJ, ], )]
[yval, [, nJ, ], -, yval, [, pJ, ]]
[yval, [, nJ, ]]
[yval]
[nJ]
[yval, [, pJ, ]]
[yval]
[pJ]
[(, zval, [, nK, ], -, zval, [, pK, ], )]
[zval, [, nK, ], -, zval, [, pK, ]]
[zval, [, nK, ]]
[zval]
[nK]
[zval, [, pK, ]]
[zval]
[pK]
[new, TricubicSplineInterpolatingFunction, (, xval, ,, yval, ,, zval, ,, fval, ,, dFdX, ,, dFdY, ,, dFdZ, ,, d2FdXdY, ,, d2FdZdX, ,, d2FdYdZ, ,, d3FdXdYdZ, )]
[xval]
[yval]
[zval]
[fval]
[dFdX]
[dFdY]
[dFdZ]
[d2FdXdY]
[d2FdZdX]
[d2FdYdZ]
[d3FdXdYdZ]
[i, +, 1]
[i]
[1]
[index, <, max, ?, index, :, index, -, 1]
[index, <, max]
[index]
[max]
[index]
[index, -, 1]
[index]
[1]
[i, -, 1]
[i]
[1]
[index, >=, 0, ?, index, :, 0]
[index, >=, 0]
[index]
[0]
[index]
[0]
