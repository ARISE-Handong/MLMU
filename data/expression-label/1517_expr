[1e-6]
[new, ComplexSolver, (, )]
[DEFAULT_ABSOLUTE_ACCURACY]
[absoluteAccuracy]
[relativeAccuracy]
[absoluteAccuracy]
[relativeAccuracy]
[absoluteAccuracy]
[functionValueAccuracy]
[getMin, (, )]
[getMax, (, )]
[getStartValue, (, )]
[getFunctionValueAccuracy, (, )]
[verifySequence, (, min, ,, initial, ,, max, )]
[min]
[initial]
[max]
[computeObjectiveValue, (, initial, )]
[initial]
[FastMath, ., abs, (, yInitial, ), <=, functionValueAccuracy]
[FastMath, ., abs, (, yInitial, )]
[FastMath]
[yInitial]
[functionValueAccuracy]
[initial]
[computeObjectiveValue, (, min, )]
[min]
[FastMath, ., abs, (, yMin, ), <=, functionValueAccuracy]
[FastMath, ., abs, (, yMin, )]
[FastMath]
[yMin]
[functionValueAccuracy]
[min]
[yInitial, *, yMin, <, 0]
[yInitial, *, yMin]
[yInitial]
[yMin]
[0]
[laguerre, (, min, ,, initial, ,, yMin, ,, yInitial, )]
[min]
[initial]
[yMin]
[yInitial]
[computeObjectiveValue, (, max, )]
[max]
[FastMath, ., abs, (, yMax, ), <=, functionValueAccuracy]
[FastMath, ., abs, (, yMax, )]
[FastMath]
[yMax]
[functionValueAccuracy]
[max]
[yInitial, *, yMax, <, 0]
[yInitial, *, yMax]
[yInitial]
[yMax]
[0]
[laguerre, (, initial, ,, max, ,, yInitial, ,, yMax, )]
[initial]
[max]
[yInitial]
[yMax]
[new, NoBracketingException, (, min, ,, max, ,, yMin, ,, yMax, )]
[min]
[max]
[yMin]
[yMax]
[ComplexUtils, ., convertToComplex, (, getCoefficients, (, ), )]
[ComplexUtils]
[getCoefficients, (, )]
[new, Complex, (, 0.5, *, (, lo, +, hi, ), ,, 0, )]
[0.5, *, (, lo, +, hi, )]
[0.5]
[(, lo, +, hi, )]
[lo, +, hi]
[lo]
[hi]
[0]
[complexSolver, ., solve, (, c, ,, initial, )]
[complexSolver]
[c]
[initial]
[complexSolver, ., isRoot, (, lo, ,, hi, ,, z, )]
[complexSolver]
[lo]
[hi]
[z]
[z, ., getReal, (, )]
[z]
[Double, ., NaN]
[Double]
[complexSolver, ., solveAll, (, c, ,, initial, )]
[complexSolver]
[c]
[initial]
[0]
[i, <, root, ., length]
[i]
[root, ., length]
[root]
[i, ++]
[i]
[complexSolver, ., isRoot, (, lo, ,, hi, ,, root, [, i, ], )]
[complexSolver]
[lo]
[hi]
[root, [, i, ]]
[root]
[i]
[r]
[root, [, i, ], ., getReal, (, )]
[root, [, i, ]]
[root]
[i]
[r]
[setup, (, Integer, ., MAX_VALUE, ,, new, PolynomialFunction, (, coefficients, ), ,, Double, ., NEGATIVE_INFINITY, ,, Double, ., POSITIVE_INFINITY, ,, initial, )]
[Integer, ., MAX_VALUE]
[Integer]
[new, PolynomialFunction, (, coefficients, )]
[coefficients]
[Double, ., NEGATIVE_INFINITY]
[Double]
[Double, ., POSITIVE_INFINITY]
[Double]
[initial]
[complexSolver, ., solveAll, (, ComplexUtils, ., convertToComplex, (, coefficients, ), ,, new, Complex, (, initial, ,, 0d, ), )]
[complexSolver]
[ComplexUtils, ., convertToComplex, (, coefficients, )]
[ComplexUtils]
[coefficients]
[new, Complex, (, initial, ,, 0d, )]
[initial]
[0d]
[setup, (, Integer, ., MAX_VALUE, ,, new, PolynomialFunction, (, coefficients, ), ,, Double, ., NEGATIVE_INFINITY, ,, Double, ., POSITIVE_INFINITY, ,, initial, )]
[Integer, ., MAX_VALUE]
[Integer]
[new, PolynomialFunction, (, coefficients, )]
[coefficients]
[Double, ., NEGATIVE_INFINITY]
[Double]
[Double, ., POSITIVE_INFINITY]
[Double]
[initial]
[complexSolver, ., solve, (, ComplexUtils, ., convertToComplex, (, coefficients, ), ,, new, Complex, (, initial, ,, 0d, ), )]
[complexSolver]
[ComplexUtils, ., convertToComplex, (, coefficients, )]
[ComplexUtils]
[coefficients]
[new, Complex, (, initial, ,, 0d, )]
[initial]
[0d]
[isSequence, (, min, ,, z, ., getReal, (, ), ,, max, )]
[min]
[z, ., getReal, (, )]
[z]
[max]
[FastMath, ., max, (, getRelativeAccuracy, (, ), *, z, ., abs, (, ), ,, getAbsoluteAccuracy, (, ), )]
[FastMath]
[getRelativeAccuracy, (, ), *, z, ., abs, (, )]
[getRelativeAccuracy, (, )]
[z, ., abs, (, )]
[z]
[getAbsoluteAccuracy, (, )]
[(, FastMath, ., abs, (, z, ., getImaginary, (, ), ), <=, tolerance, ), ||, (, z, ., abs, (, ), <=, getFunctionValueAccuracy, (, ), )]
[(, FastMath, ., abs, (, z, ., getImaginary, (, ), ), <=, tolerance, )]
[FastMath, ., abs, (, z, ., getImaginary, (, ), ), <=, tolerance]
[FastMath, ., abs, (, z, ., getImaginary, (, ), )]
[FastMath]
[z, ., getImaginary, (, )]
[z]
[tolerance]
[(, z, ., abs, (, ), <=, getFunctionValueAccuracy, (, ), )]
[z, ., abs, (, ), <=, getFunctionValueAccuracy, (, )]
[z, ., abs, (, )]
[z]
[getFunctionValueAccuracy, (, )]
[false]
[coefficients, ==, null]
[coefficients]
[null]
[new, NullArgumentException, (, )]
[coefficients, ., length, -, 1]
[coefficients, ., length]
[coefficients]
[1]
[n, ==, 0]
[n]
[0]
[new, NoDataException, (, LocalizedFormats, ., POLYNOMIAL, )]
[LocalizedFormats, ., POLYNOMIAL]
[LocalizedFormats]
[new, Complex, [, n, +, 1, ]]
[n, +, 1]
[n]
[1]
[0]
[i, <=, n]
[i]
[n]
[i, ++]
[i]
[c, [, i, ]]
[c]
[i]
[coefficients, [, i, ]]
[coefficients]
[i]
[new, Complex, [, n, ]]
[n]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[new, Complex, [, n, -, i, +, 1, ]]
[n, -, i, +, 1]
[n, -, i]
[n]
[i]
[1]
[System, ., arraycopy, (, c, ,, 0, ,, subarray, ,, 0, ,, subarray, ., length, )]
[System]
[c]
[0]
[subarray]
[0]
[subarray, ., length]
[subarray]
[root, [, i, ]]
[root]
[i]
[solve, (, subarray, ,, initial, )]
[subarray]
[initial]
[c, [, n, -, i, ]]
[c]
[n, -, i]
[n]
[i]
[null]
[n, -, i, -, 1]
[n, -, i]
[n]
[i]
[1]
[j, >=, 0]
[j]
[0]
[j, --]
[j]
[oldc]
[c, [, j, ]]
[c]
[j]
[c, [, j, ]]
[c]
[j]
[newc]
[newc]
[oldc, ., add, (, newc, ., multiply, (, root, [, i, ], ), )]
[oldc]
[newc, ., multiply, (, root, [, i, ], )]
[newc]
[root, [, i, ]]
[root]
[i]
[root]
[coefficients, ==, null]
[coefficients]
[null]
[new, NullArgumentException, (, )]
[coefficients, ., length, -, 1]
[coefficients, ., length]
[coefficients]
[1]
[n, ==, 0]
[n]
[0]
[new, NoDataException, (, LocalizedFormats, ., POLYNOMIAL, )]
[LocalizedFormats, ., POLYNOMIAL]
[LocalizedFormats]
[getAbsoluteAccuracy, (, )]
[getRelativeAccuracy, (, )]
[getFunctionValueAccuracy, (, )]
[new, Complex, (, n, ,, 0, )]
[n]
[0]
[new, Complex, (, n, -, 1, ,, 0, )]
[n, -, 1]
[n]
[1]
[0]
[initial]
[new, Complex, (, Double, ., POSITIVE_INFINITY, ,, Double, ., POSITIVE_INFINITY, )]
[Double, ., POSITIVE_INFINITY]
[Double]
[Double, ., POSITIVE_INFINITY]
[Double]
[true]
[coefficients, [, n, ]]
[coefficients]
[n]
[Complex, ., ZERO]
[Complex]
[Complex, ., ZERO]
[Complex]
[n, -, 1]
[n]
[1]
[j, >=, 0]
[j]
[0]
[j, --]
[j]
[d2v]
[dv, ., add, (, z, ., multiply, (, d2v, ), )]
[dv]
[z, ., multiply, (, d2v, )]
[z]
[d2v]
[dv]
[pv, ., add, (, z, ., multiply, (, dv, ), )]
[pv]
[z, ., multiply, (, dv, )]
[z]
[dv]
[pv]
[coefficients, [, j, ], ., add, (, z, ., multiply, (, pv, ), )]
[coefficients, [, j, ]]
[coefficients]
[j]
[z, ., multiply, (, pv, )]
[z]
[pv]
[d2v]
[d2v, ., multiply, (, new, Complex, (, 2.0, ,, 0.0, ), )]
[d2v]
[new, Complex, (, 2.0, ,, 0.0, )]
[2.0]
[0.0]
[FastMath, ., max, (, relativeAccuracy, *, z, ., abs, (, ), ,, absoluteAccuracy, )]
[FastMath]
[relativeAccuracy, *, z, ., abs, (, )]
[relativeAccuracy]
[z, ., abs, (, )]
[z]
[absoluteAccuracy]
[(, z, ., subtract, (, oldz, ), ), ., abs, (, ), <=, tolerance]
[(, z, ., subtract, (, oldz, ), ), ., abs, (, )]
[(, z, ., subtract, (, oldz, ), )]
[z, ., subtract, (, oldz, )]
[z]
[oldz]
[tolerance]
[z]
[pv, ., abs, (, ), <=, functionValueAccuracy]
[pv, ., abs, (, )]
[pv]
[functionValueAccuracy]
[z]
[dv, ., divide, (, pv, )]
[dv]
[pv]
[G, ., multiply, (, G, )]
[G]
[G]
[G2, ., subtract, (, d2v, ., divide, (, pv, ), )]
[G2]
[d2v, ., divide, (, pv, )]
[d2v]
[pv]
[n1C, ., multiply, (, (, nC, ., multiply, (, H, ), ), ., subtract, (, G2, ), )]
[n1C]
[(, nC, ., multiply, (, H, ), ), ., subtract, (, G2, )]
[(, nC, ., multiply, (, H, ), )]
[nC, ., multiply, (, H, )]
[nC]
[H]
[G2]
[delta, ., sqrt, (, )]
[delta]
[G, ., add, (, deltaSqrt, )]
[G]
[deltaSqrt]
[G, ., subtract, (, deltaSqrt, )]
[G]
[deltaSqrt]
[dplus, ., abs, (, ), >, dminus, ., abs, (, ), ?, dplus, :, dminus]
[dplus, ., abs, (, ), >, dminus, ., abs, (, )]
[dplus, ., abs, (, )]
[dplus]
[dminus, ., abs, (, )]
[dminus]
[dplus]
[dminus]
[denominator, ., equals, (, new, Complex, (, 0.0, ,, 0.0, ), )]
[denominator]
[new, Complex, (, 0.0, ,, 0.0, )]
[0.0]
[0.0]
[z]
[z, ., add, (, new, Complex, (, absoluteAccuracy, ,, absoluteAccuracy, ), )]
[z]
[new, Complex, (, absoluteAccuracy, ,, absoluteAccuracy, )]
[absoluteAccuracy]
[absoluteAccuracy]
[oldz]
[new, Complex, (, Double, ., POSITIVE_INFINITY, ,, Double, ., POSITIVE_INFINITY, )]
[Double, ., POSITIVE_INFINITY]
[Double]
[Double, ., POSITIVE_INFINITY]
[Double]
[oldz]
[z]
[z]
[z, ., subtract, (, nC, ., divide, (, denominator, ), )]
[z]
[nC, ., divide, (, denominator, )]
[nC]
[denominator]
[incrementEvaluationCount, (, )]
