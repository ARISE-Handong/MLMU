["UTF-8"]
["UTF-8"]
[this, ., languageIn]
[this]
[CompilerOptions, ., LanguageMode, ., ECMASCRIPT3]
[CompilerOptions, ., LanguageMode]
[CompilerOptions]
[this, ., warningLevel]
[this]
[WarningLevel, ., DEFAULT]
[WarningLevel]
[this, ., debugOptions]
[this]
[false]
[this, ., compilationLevel]
[this]
[CompilationLevel, ., SIMPLE_OPTIMIZATIONS]
[CompilationLevel]
[this, ., customExternsOnly]
[this]
[false]
[this, ., manageDependencies]
[this]
[false]
[this, ., prettyPrint]
[this]
[false]
[this, ., printInputDelimiter]
[this]
[false]
[this, ., generateExports]
[this]
[false]
[this, ., replaceProperties]
[this]
[false]
[this, ., forceRecompile]
[this]
[false]
[this, ., replacePropertiesPrefix]
[this]
["closure.define."]
[this, ., defineParams]
[this]
[Lists, ., newLinkedList, (, )]
[Lists]
[this, ., externFileLists]
[this]
[Lists, ., newLinkedList, (, )]
[Lists]
[this, ., sourceFileLists]
[this]
[Lists, ., newLinkedList, (, )]
[Lists]
[this, ., sourcePaths]
[this]
[Lists, ., newLinkedList, (, )]
[Lists]
[this, ., warnings]
[this]
[Lists, ., newLinkedList, (, )]
[Lists]
[value, ., equals, (, "ECMASCRIPT5_STRICT", ), ||, value, ., equals, (, "ES5_STRICT", )]
[value, ., equals, (, "ECMASCRIPT5_STRICT", )]
[value]
["ECMASCRIPT5_STRICT"]
[value, ., equals, (, "ES5_STRICT", )]
[value]
["ES5_STRICT"]
[this, ., languageIn]
[this]
[CompilerOptions, ., LanguageMode, ., ECMASCRIPT5_STRICT]
[CompilerOptions, ., LanguageMode]
[CompilerOptions]
[value, ., equals, (, "ECMASCRIPT5", ), ||, value, ., equals, (, "ES5", )]
[value, ., equals, (, "ECMASCRIPT5", )]
[value]
["ECMASCRIPT5"]
[value, ., equals, (, "ES5", )]
[value]
["ES5"]
[this, ., languageIn]
[this]
[CompilerOptions, ., LanguageMode, ., ECMASCRIPT5]
[CompilerOptions, ., LanguageMode]
[CompilerOptions]
[value, ., equals, (, "ECMASCRIPT3", ), ||, value, ., equals, (, "ES3", )]
[value, ., equals, (, "ECMASCRIPT3", )]
[value]
["ECMASCRIPT3"]
[value, ., equals, (, "ES3", )]
[value]
["ES3"]
[this, ., languageIn]
[this]
[CompilerOptions, ., LanguageMode, ., ECMASCRIPT3]
[CompilerOptions, ., LanguageMode]
[CompilerOptions]
[new, BuildException, (, "Unrecognized 'languageIn' option value (", +, value, +, ")", )]
["Unrecognized 'languageIn' option value (", +, value, +, ")"]
["Unrecognized 'languageIn' option value (", +, value]
["Unrecognized 'languageIn' option value ("]
[value]
[")"]
["default", ., equalsIgnoreCase, (, value, )]
["default"]
[value]
[this, ., warningLevel]
[this]
[WarningLevel, ., DEFAULT]
[WarningLevel]
["quiet", ., equalsIgnoreCase, (, value, )]
["quiet"]
[value]
[this, ., warningLevel]
[this]
[WarningLevel, ., QUIET]
[WarningLevel]
["verbose", ., equalsIgnoreCase, (, value, )]
["verbose"]
[value]
[this, ., warningLevel]
[this]
[WarningLevel, ., VERBOSE]
[WarningLevel]
[new, BuildException, (, "Unrecognized 'warning' option value (", +, value, +, ")", )]
["Unrecognized 'warning' option value (", +, value, +, ")"]
["Unrecognized 'warning' option value (", +, value]
["Unrecognized 'warning' option value ("]
[value]
[")"]
[this, ., debugOptions]
[this]
[value]
["simple", ., equalsIgnoreCase, (, value, )]
["simple"]
[value]
[this, ., compilationLevel]
[this]
[CompilationLevel, ., SIMPLE_OPTIMIZATIONS]
[CompilationLevel]
["advanced", ., equalsIgnoreCase, (, value, )]
["advanced"]
[value]
[this, ., compilationLevel]
[this]
[CompilationLevel, ., ADVANCED_OPTIMIZATIONS]
[CompilationLevel]
["whitespace", ., equalsIgnoreCase, (, value, )]
["whitespace"]
[value]
[this, ., compilationLevel]
[this]
[CompilationLevel, ., WHITESPACE_ONLY]
[CompilationLevel]
[new, BuildException, (, "Unrecognized 'compilation' option value (", +, value, +, ")", )]
["Unrecognized 'compilation' option value (", +, value, +, ")"]
["Unrecognized 'compilation' option value (", +, value]
["Unrecognized 'compilation' option value ("]
[value]
[")"]
[this, ., manageDependencies]
[this]
[value]
[this, ., customExternsOnly]
[this]
[value]
[this, ., outputFile]
[this]
[value]
[this, ., replacePropertiesPrefix]
[this]
[value]
[this, ., replaceProperties]
[this]
[value]
[this, ., encoding]
[this]
[encoding]
[this, ., outputEncoding]
[this]
[outputEncoding]
[this, ., prettyPrint]
[this]
[pretty]
[this, ., printInputDelimiter]
[this]
[print]
[this, ., forceRecompile]
[this]
[forceRecompile]
[this, ., generateExports]
[this]
[generateExports]
[this, ., externFileLists, ., add, (, list, )]
[this, ., externFileLists]
[this]
[list]
[this, ., warnings, ., add, (, warning, )]
[this, ., warnings]
[this]
[warning]
[this, ., sourceFileLists, ., add, (, list, )]
[this, ., sourceFileLists]
[this]
[list]
[this, ., sourcePaths, ., add, (, list, )]
[this, ., sourcePaths]
[this]
[list]
[this, ., outputFile, ==, null]
[this, ., outputFile]
[this]
[null]
[new, BuildException, (, "outputFile attribute must be set", )]
["outputFile attribute must be set"]
[Compiler, ., setLoggingLevel, (, Level, ., OFF, )]
[Compiler]
[Level, ., OFF]
[Level]
[createCompilerOptions, (, )]
[createCompiler, (, options, )]
[options]
[findExternFiles, (, )]
[findSourceFiles, (, )]
[isStale, (, ), ||, forceRecompile]
[isStale, (, )]
[forceRecompile]
[log, (, "Compiling ", +, sources, ., size, (, ), +, " file(s) with ", +, externs, ., size, (, ), +, " extern(s)", )]
["Compiling ", +, sources, ., size, (, ), +, " file(s) with ", +, externs, ., size, (, ), +, " extern(s)"]
["Compiling ", +, sources, ., size, (, ), +, " file(s) with ", +, externs, ., size, (, )]
["Compiling ", +, sources, ., size, (, ), +, " file(s) with "]
["Compiling ", +, sources, ., size, (, )]
["Compiling "]
[sources, ., size, (, )]
[sources]
[" file(s) with "]
[externs, ., size, (, )]
[externs]
[" extern(s)"]
[compiler, ., compile, (, externs, ,, sources, ,, options, )]
[compiler]
[externs]
[sources]
[options]
[result, ., success]
[result]
[writeResult, (, compiler, ., toSource, (, ), )]
[compiler, ., toSource, (, )]
[compiler]
[new, BuildException, (, "Compilation failed.", )]
["Compilation failed."]
[log, (, "None of the files changed. Compilation skipped.", )]
["None of the files changed. Compilation skipped."]
[new, CompilerOptions, (, )]
[this, ., compilationLevel, ., setOptionsForCompilationLevel, (, options, )]
[this, ., compilationLevel]
[this]
[options]
[this, ., debugOptions]
[this]
[this, ., compilationLevel, ., setDebugOptionsForCompilationLevel, (, options, )]
[this, ., compilationLevel]
[this]
[options]
[options, ., prettyPrint]
[options]
[this, ., prettyPrint]
[this]
[options, ., printInputDelimiter]
[options]
[this, ., printInputDelimiter]
[this]
[options, ., generateExports]
[options]
[this, ., generateExports]
[this]
[options, ., setLanguageIn, (, this, ., languageIn, )]
[options]
[this, ., languageIn]
[this]
[this, ., warningLevel, ., setOptionsForWarningLevel, (, options, )]
[this, ., warningLevel]
[this]
[options]
[options, ., setManageClosureDependencies, (, manageDependencies, )]
[options]
[manageDependencies]
[replaceProperties]
[convertPropertiesMap, (, options, )]
[options]
[convertDefineParameters, (, options, )]
[options]
[warnings]
[warning, ., getLevel, (, )]
[warning]
[warning, ., getGroup, (, )]
[warning]
[new, DiagnosticGroups, (, ), ., forName, (, groupName, )]
[new, DiagnosticGroups, (, )]
[groupName]
[group, ==, null]
[group]
[null]
[new, BuildException, (, "Unrecognized 'warning' option value (", +, groupName, +, ")", )]
["Unrecognized 'warning' option value (", +, groupName, +, ")"]
["Unrecognized 'warning' option value (", +, groupName]
["Unrecognized 'warning' option value ("]
[groupName]
[")"]
[options, ., setWarningLevel, (, group, ,, level, )]
[options]
[group]
[level]
[options]
[new, Parameter, (, )]
[defineParams, ., add, (, param, )]
[defineParams]
[param]
[param]
[defineParams]
[p, ., getName, (, )]
[p]
[p, ., getValue, (, )]
[p]
[!, setDefine, (, options, ,, key, ,, value, )]
[setDefine, (, options, ,, key, ,, value, )]
[options]
[key]
[value]
[log, (, "Unexpected @define value for name=", +, key, +, "; value=", +, value, )]
["Unexpected @define value for name=", +, key, +, "; value=", +, value]
["Unexpected @define value for name=", +, key, +, "; value="]
["Unexpected @define value for name=", +, key]
["Unexpected @define value for name="]
[key]
["; value="]
[value]
[@, SuppressWarnings, (, "unchecked", )]
["unchecked"]
[getProject, (, ), ., getProperties, (, )]
[getProject, (, )]
[props, ., entrySet, (, )]
[props]
[entry, ., getKey, (, )]
[entry]
[entry, ., getValue, (, )]
[entry]
[key, ., startsWith, (, replacePropertiesPrefix, )]
[key]
[replacePropertiesPrefix]
[key]
[key, ., substring, (, replacePropertiesPrefix, ., length, (, ), )]
[key]
[replacePropertiesPrefix, ., length, (, )]
[replacePropertiesPrefix]
[!, setDefine, (, options, ,, key, ,, value, )]
[setDefine, (, options, ,, key, ,, value, )]
[options]
[key]
[value]
[log, (, "Unexpected property value for key=", +, key, +, "; value=", +, value, )]
["Unexpected property value for key=", +, key, +, "; value=", +, value]
["Unexpected property value for key=", +, key, +, "; value="]
["Unexpected property value for key=", +, key]
["Unexpected property value for key="]
[key]
["; value="]
[value]
[false]
[value, instanceof, String]
[value]
["true", ., equals, (, value, )]
["true"]
[value]
["false", ., equals, (, value, )]
["false"]
[value]
[isTrue, ||, isFalse]
[isTrue]
[isFalse]
[options, ., setDefineToBooleanLiteral, (, key, ,, isTrue, )]
[options]
[key]
[isTrue]
[Double, ., parseDouble, (, (, String, ), value, )]
[Double]
[(, String, ), value]
[value]
[options, ., setDefineToDoubleLiteral, (, key, ,, dblTemp, )]
[options]
[key]
[dblTemp]
[options, ., setDefineToStringLiteral, (, key, ,, (, String, ), value, )]
[options]
[key]
[(, String, ), value]
[value]
[success]
[true]
[value, instanceof, Boolean]
[value]
[options, ., setDefineToBooleanLiteral, (, key, ,, (, Boolean, ), value, )]
[options]
[key]
[(, Boolean, ), value]
[value]
[success]
[true]
[value, instanceof, Integer]
[value]
[options, ., setDefineToNumberLiteral, (, key, ,, (, Integer, ), value, )]
[options]
[key]
[(, Integer, ), value]
[value]
[success]
[true]
[value, instanceof, Double]
[value]
[options, ., setDefineToDoubleLiteral, (, key, ,, (, Double, ), value, )]
[options]
[key]
[(, Double, ), value]
[value]
[success]
[true]
[success]
[new, Compiler, (, )]
[options, ., errorFormat, ., toFormatter, (, compiler, ,, false, )]
[options, ., errorFormat]
[options]
[compiler]
[false]
[new, AntErrorManager, (, formatter, ,, this, )]
[formatter]
[this]
[compiler, ., setErrorManager, (, errorManager, )]
[compiler]
[errorManager]
[compiler]
[Lists, ., newLinkedList, (, )]
[Lists]
[!, this, ., customExternsOnly]
[this, ., customExternsOnly]
[this]
[files, ., addAll, (, getDefaultExterns, (, ), )]
[files]
[getDefaultExterns, (, )]
[this, ., externFileLists]
[this]
[files, ., addAll, (, findJavaScriptFiles, (, list, ), )]
[files]
[findJavaScriptFiles, (, list, )]
[list]
[files]
[Lists, ., newLinkedList, (, )]
[Lists]
[this, ., sourceFileLists]
[this]
[files, ., addAll, (, findJavaScriptFiles, (, list, ), )]
[files]
[findJavaScriptFiles, (, list, )]
[list]
[this, ., sourcePaths]
[this]
[files, ., addAll, (, findJavaScriptFiles, (, list, ), )]
[files]
[findJavaScriptFiles, (, list, )]
[list]
[files]
[Lists, ., newLinkedList, (, )]
[Lists]
[fileList, ., getDir, (, getProject, (, ), )]
[fileList]
[getProject, (, )]
[fileList, ., getFiles, (, getProject, (, ), )]
[fileList]
[getProject, (, )]
[files, ., add, (, SourceFile, ., fromFile, (, new, File, (, baseDir, ,, included, ), ,, Charset, ., forName, (, encoding, ), ), )]
[files]
[SourceFile, ., fromFile, (, new, File, (, baseDir, ,, included, ), ,, Charset, ., forName, (, encoding, ), )]
[SourceFile]
[new, File, (, baseDir, ,, included, )]
[baseDir]
[included]
[Charset, ., forName, (, encoding, )]
[Charset]
[encoding]
[files]
[Lists, ., newArrayList, (, )]
[Lists]
[path, ., list, (, )]
[path]
[files, ., add, (, SourceFile, ., fromFile, (, new, File, (, included, ), ,, Charset, ., forName, (, encoding, ), ), )]
[files]
[SourceFile, ., fromFile, (, new, File, (, included, ), ,, Charset, ., forName, (, encoding, ), )]
[SourceFile]
[new, File, (, included, )]
[included]
[Charset, ., forName, (, encoding, )]
[Charset]
[encoding]
[files]
[CommandLineRunner, ., getDefaultExterns, (, )]
[CommandLineRunner]
[new, BuildException, (, e, )]
[e]
[this, ., outputFile, ., getParentFile, (, ), ., mkdirs, (, )]
[this, ., outputFile, ., getParentFile, (, )]
[this, ., outputFile]
[this]
[log, (, "Created missing parent directory ", +, this, ., outputFile, ., getParentFile, (, ), ,, Project, ., MSG_DEBUG, )]
["Created missing parent directory ", +, this, ., outputFile, ., getParentFile, (, )]
["Created missing parent directory "]
[this, ., outputFile, ., getParentFile, (, )]
[this, ., outputFile]
[this]
[Project, ., MSG_DEBUG]
[Project]
[new, OutputStreamWriter, (, new, FileOutputStream, (, this, ., outputFile, ), ,, outputEncoding, )]
[new, FileOutputStream, (, this, ., outputFile, )]
[this, ., outputFile]
[this]
[outputEncoding]
[out, ., append, (, source, )]
[out]
[source]
[out, ., flush, (, )]
[out]
[out, ., close, (, )]
[out]
[new, BuildException, (, e, )]
[e]
[log, (, "Compiled JavaScript written to ", +, this, ., outputFile, ., getAbsolutePath, (, ), ,, Project, ., MSG_DEBUG, )]
["Compiled JavaScript written to ", +, this, ., outputFile, ., getAbsolutePath, (, )]
["Compiled JavaScript written to "]
[this, ., outputFile, ., getAbsolutePath, (, )]
[this, ., outputFile]
[this]
[Project, ., MSG_DEBUG]
[Project]
[outputFile, ., lastModified, (, )]
[outputFile]
[Math, ., max, (, getLastModifiedTime, (, this, ., sourceFileLists, ), ,, getLastModifiedTime, (, this, ., sourcePaths, ), )]
[Math]
[getLastModifiedTime, (, this, ., sourceFileLists, )]
[this, ., sourceFileLists]
[this]
[getLastModifiedTime, (, this, ., sourcePaths, )]
[this, ., sourcePaths]
[this]
[getLastModifiedTime, (, this, ., externFileLists, )]
[this, ., externFileLists]
[this]
[lastRun, <=, sourcesLastModified, ||, lastRun, <=, externsLastModified]
[lastRun, <=, sourcesLastModified]
[lastRun]
[sourcesLastModified]
[lastRun, <=, externsLastModified]
[lastRun]
[externsLastModified]
[0]
[fileLists]
[entry, instanceof, FileList]
[entry]
[(, FileList, ), entry]
[entry]
[list, ., getFiles, (, this, ., getProject, (, ), )]
[list]
[this, ., getProject, (, )]
[this]
[list, ., getDir, (, this, ., getProject, (, ), )]
[list]
[this, ., getProject, (, )]
[this]
[new, File, (, path, ,, fileName, )]
[path]
[fileName]
[lastModified]
[Math, ., max, (, getLastModifiedTime, (, file, ), ,, lastModified, )]
[Math]
[getLastModifiedTime, (, file, )]
[file]
[lastModified]
[entry, instanceof, Path]
[entry]
[(, Path, ), entry]
[entry]
[path, ., list, (, )]
[path]
[new, File, (, src, )]
[src]
[lastModified]
[Math, ., max, (, getLastModifiedTime, (, file, ), ,, lastModified, )]
[Math]
[getLastModifiedTime, (, file, )]
[file]
[lastModified]
[lastModified]
[file, ., lastModified, (, )]
[file]
[fileLastModified, ==, 0]
[fileLastModified]
[0]
[fileLastModified]
[new, Date, (, ), ., getTime, (, )]
[new, Date, (, )]
[fileLastModified]
