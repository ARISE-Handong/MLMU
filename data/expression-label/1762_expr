[7841233292190413362L]
[field]
[0]
[this, ., field]
[this]
[field]
[virtualSize]
[dimension]
[entries]
[new, OpenIntToFieldHashMap, <, T, >, (, field, )]
[field]
[field]
[v, ., field]
[v]
[virtualSize]
[v, ., getDimension, (, ), +, resize]
[v, ., getDimension, (, )]
[v]
[resize]
[entries]
[new, OpenIntToFieldHashMap, <, T, >, (, v, ., entries, )]
[v, ., entries]
[v]
[this, ., field]
[this]
[field]
[virtualSize]
[dimension]
[entries]
[new, OpenIntToFieldHashMap, <, T, >, (, field, ,, expectedSize, )]
[field]
[expectedSize]
[MathUtils, ., checkNotNull, (, values, )]
[MathUtils]
[values]
[this, ., field]
[this]
[field]
[virtualSize]
[values, ., length]
[values]
[entries]
[new, OpenIntToFieldHashMap, <, T, >, (, field, )]
[field]
[0]
[key, <, values, ., length]
[key]
[values, ., length]
[values]
[key, ++]
[key]
[values, [, key, ]]
[values]
[key]
[entries, ., put, (, key, ,, value, )]
[entries]
[key]
[value]
[field]
[v, ., field]
[v]
[virtualSize]
[v, ., getDimension, (, )]
[v]
[entries]
[new, OpenIntToFieldHashMap, <, T, >, (, v, ., getEntries, (, ), )]
[v, ., getEntries, (, )]
[v]
[entries]
[checkVectorDimensions, (, v, ., getDimension, (, ), )]
[v, ., getDimension, (, )]
[v]
[(, SparseFieldVector, <, T, >, ), copy, (, )]
[copy, (, )]
[v, ., getEntries, (, ), ., iterator, (, )]
[v, ., getEntries, (, )]
[v]
[iter, ., hasNext, (, )]
[iter]
[iter, ., advance, (, )]
[iter]
[iter, ., key, (, )]
[iter]
[iter, ., value, (, )]
[iter]
[entries, ., containsKey, (, key, )]
[entries]
[key]
[res, ., setEntry, (, key, ,, entries, ., get, (, key, ), ., add, (, value, ), )]
[res]
[key]
[entries, ., get, (, key, ), ., add, (, value, )]
[entries, ., get, (, key, )]
[entries]
[key]
[value]
[res, ., setEntry, (, key, ,, value, )]
[res]
[key]
[value]
[res]
[new, SparseFieldVector, <, T, >, (, this, ,, v, ., getDimension, (, ), )]
[this]
[v, ., getDimension, (, )]
[v]
[v, ., entries, ., iterator, (, )]
[v, ., entries]
[v]
[iter, ., hasNext, (, )]
[iter]
[iter, ., advance, (, )]
[iter]
[res, ., setEntry, (, iter, ., key, (, ), +, virtualSize, ,, iter, ., value, (, ), )]
[res]
[iter, ., key, (, ), +, virtualSize]
[iter, ., key, (, )]
[iter]
[virtualSize]
[iter, ., value, (, )]
[iter]
[res]
[v, instanceof, SparseFieldVector, <, ?, >]
[v]
[append, (, (, SparseFieldVector, <, T, >, ), v, )]
[(, SparseFieldVector, <, T, >, ), v]
[v]
[v, ., getDimension, (, )]
[v]
[new, SparseFieldVector, <, T, >, (, this, ,, n, )]
[this]
[n]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[res, ., setEntry, (, i, +, virtualSize, ,, v, ., getEntry, (, i, ), )]
[res]
[i, +, virtualSize]
[i]
[virtualSize]
[v, ., getEntry, (, i, )]
[v]
[i]
[res]
[MathUtils, ., checkNotNull, (, d, )]
[MathUtils]
[d]
[new, SparseFieldVector, <, T, >, (, this, ,, 1, )]
[this]
[1]
[res, ., setEntry, (, virtualSize, ,, d, )]
[res]
[virtualSize]
[d]
[res]
[new, SparseFieldVector, <, T, >, (, this, )]
[this]
[checkVectorDimensions, (, v, ., getDimension, (, ), )]
[v, ., getDimension, (, )]
[v]
[field, ., getZero, (, )]
[field]
[entries, ., iterator, (, )]
[entries]
[iter, ., hasNext, (, )]
[iter]
[iter, ., advance, (, )]
[iter]
[res]
[res, ., add, (, v, ., getEntry, (, iter, ., key, (, ), ), ., multiply, (, iter, ., value, (, ), ), )]
[res]
[v, ., getEntry, (, iter, ., key, (, ), ), ., multiply, (, iter, ., value, (, ), )]
[v, ., getEntry, (, iter, ., key, (, ), )]
[v]
[iter, ., key, (, )]
[iter]
[iter, ., value, (, )]
[iter]
[res]
[checkVectorDimensions, (, v, ., getDimension, (, ), )]
[v, ., getDimension, (, )]
[v]
[new, SparseFieldVector, <, T, >, (, this, )]
[this]
[res, ., entries, ., iterator, (, )]
[res, ., entries]
[res]
[iter, ., hasNext, (, )]
[iter]
[iter, ., advance, (, )]
[iter]
[res, ., setEntry, (, iter, ., key, (, ), ,, iter, ., value, (, ), ., divide, (, v, ., getEntry, (, iter, ., key, (, ), ), ), )]
[res]
[iter, ., key, (, )]
[iter]
[iter, ., value, (, ), ., divide, (, v, ., getEntry, (, iter, ., key, (, ), ), )]
[iter, ., value, (, )]
[iter]
[v, ., getEntry, (, iter, ., key, (, ), )]
[v]
[iter, ., key, (, )]
[iter]
[res]
[checkVectorDimensions, (, v, ., getDimension, (, ), )]
[v, ., getDimension, (, )]
[v]
[new, SparseFieldVector, <, T, >, (, this, )]
[this]
[res, ., entries, ., iterator, (, )]
[res, ., entries]
[res]
[iter, ., hasNext, (, )]
[iter]
[iter, ., advance, (, )]
[iter]
[res, ., setEntry, (, iter, ., key, (, ), ,, iter, ., value, (, ), ., multiply, (, v, ., getEntry, (, iter, ., key, (, ), ), ), )]
[res]
[iter, ., key, (, )]
[iter]
[iter, ., value, (, ), ., multiply, (, v, ., getEntry, (, iter, ., key, (, ), ), )]
[iter, ., value, (, )]
[iter]
[v, ., getEntry, (, iter, ., key, (, ), )]
[v]
[iter, ., key, (, )]
[iter]
[res]
[toArray, (, )]
[virtualSize]
[checkIndex, (, index, )]
[index]
[entries, ., get, (, index, )]
[entries]
[index]
[field]
[n, <, 0]
[n]
[0]
[new, NotPositiveException, (, LocalizedFormats, ., NUMBER_OF_ELEMENTS_SHOULD_BE_POSITIVE, ,, n, )]
[LocalizedFormats, ., NUMBER_OF_ELEMENTS_SHOULD_BE_POSITIVE]
[LocalizedFormats]
[n]
[checkIndex, (, index, )]
[index]
[checkIndex, (, index, +, n, -, 1, )]
[index, +, n, -, 1]
[index, +, n]
[index]
[n]
[1]
[new, SparseFieldVector, <, T, >, (, field, ,, n, )]
[field]
[n]
[index, +, n]
[index]
[n]
[entries, ., iterator, (, )]
[entries]
[iter, ., hasNext, (, )]
[iter]
[iter, ., advance, (, )]
[iter]
[iter, ., key, (, )]
[iter]
[key, >=, index, &&, key, <, end]
[key, >=, index]
[key]
[index]
[key, <, end]
[key]
[end]
[res, ., setEntry, (, key, -, index, ,, iter, ., value, (, ), )]
[res]
[key, -, index]
[key]
[index]
[iter, ., value, (, )]
[iter]
[res]
[copy, (, ), ., mapAddToSelf, (, d, )]
[copy, (, )]
[d]
[0]
[i, <, virtualSize]
[i]
[virtualSize]
[i, ++]
[i]
[setEntry, (, i, ,, getEntry, (, i, ), ., add, (, d, ), )]
[i]
[getEntry, (, i, ), ., add, (, d, )]
[getEntry, (, i, )]
[i]
[d]
[this]
[copy, (, ), ., mapDivideToSelf, (, d, )]
[copy, (, )]
[d]
[entries, ., iterator, (, )]
[entries]
[iter, ., hasNext, (, )]
[iter]
[iter, ., advance, (, )]
[iter]
[entries, ., put, (, iter, ., key, (, ), ,, iter, ., value, (, ), ., divide, (, d, ), )]
[entries]
[iter, ., key, (, )]
[iter]
[iter, ., value, (, ), ., divide, (, d, )]
[iter, ., value, (, )]
[iter]
[d]
[this]
[copy, (, ), ., mapInvToSelf, (, )]
[copy, (, )]
[0]
[i, <, virtualSize]
[i]
[virtualSize]
[i, ++]
[i]
[setEntry, (, i, ,, field, ., getOne, (, ), ., divide, (, getEntry, (, i, ), ), )]
[i]
[field, ., getOne, (, ), ., divide, (, getEntry, (, i, ), )]
[field, ., getOne, (, )]
[field]
[getEntry, (, i, )]
[i]
[this]
[copy, (, ), ., mapMultiplyToSelf, (, d, )]
[copy, (, )]
[d]
[entries, ., iterator, (, )]
[entries]
[iter, ., hasNext, (, )]
[iter]
[iter, ., advance, (, )]
[iter]
[entries, ., put, (, iter, ., key, (, ), ,, iter, ., value, (, ), ., multiply, (, d, ), )]
[entries]
[iter, ., key, (, )]
[iter]
[iter, ., value, (, ), ., multiply, (, d, )]
[iter, ., value, (, )]
[iter]
[d]
[this]
[copy, (, ), ., mapSubtractToSelf, (, d, )]
[copy, (, )]
[d]
[mapAddToSelf, (, field, ., getZero, (, ), ., subtract, (, d, ), )]
[field, ., getZero, (, ), ., subtract, (, d, )]
[field, ., getZero, (, )]
[field]
[d]
[v, ., getDimension, (, )]
[v]
[new, SparseFieldMatrix, <, T, >, (, field, ,, virtualSize, ,, n, )]
[field]
[virtualSize]
[n]
[entries, ., iterator, (, )]
[entries]
[iter, ., hasNext, (, )]
[iter]
[iter, ., advance, (, )]
[iter]
[v, ., entries, ., iterator, (, )]
[v, ., entries]
[v]
[iter2, ., hasNext, (, )]
[iter2]
[iter2, ., advance, (, )]
[iter2]
[res, ., setEntry, (, iter, ., key, (, ), ,, iter2, ., key, (, ), ,, iter, ., value, (, ), ., multiply, (, iter2, ., value, (, ), ), )]
[res]
[iter, ., key, (, )]
[iter]
[iter2, ., key, (, )]
[iter2]
[iter, ., value, (, ), ., multiply, (, iter2, ., value, (, ), )]
[iter, ., value, (, )]
[iter]
[iter2, ., value, (, )]
[iter2]
[res]
[v, instanceof, SparseFieldVector, <, ?, >]
[v]
[outerProduct, (, (, SparseFieldVector, <, T, >, ), v, )]
[(, SparseFieldVector, <, T, >, ), v]
[v]
[v, ., getDimension, (, )]
[v]
[new, SparseFieldMatrix, <, T, >, (, field, ,, virtualSize, ,, n, )]
[field]
[virtualSize]
[n]
[entries, ., iterator, (, )]
[entries]
[iter, ., hasNext, (, )]
[iter]
[iter, ., advance, (, )]
[iter]
[iter, ., key, (, )]
[iter]
[iter, ., value, (, )]
[iter]
[0]
[col, <, n]
[col]
[n]
[col, ++]
[col]
[res, ., setEntry, (, row, ,, col, ,, value, ., multiply, (, v, ., getEntry, (, col, ), ), )]
[res]
[row]
[col]
[value, ., multiply, (, v, ., getEntry, (, col, ), )]
[value]
[v, ., getEntry, (, col, )]
[v]
[col]
[res]
[checkVectorDimensions, (, v, ., getDimension, (, ), )]
[v, ., getDimension, (, )]
[v]
[v, ., mapMultiply, (, dotProduct, (, v, ), ., divide, (, v, ., dotProduct, (, v, ), ), )]
[v]
[dotProduct, (, v, ), ., divide, (, v, ., dotProduct, (, v, ), )]
[dotProduct, (, v, )]
[v]
[v, ., dotProduct, (, v, )]
[v]
[v]
[MathUtils, ., checkNotNull, (, value, )]
[MathUtils]
[value]
[0]
[i, <, virtualSize]
[i]
[virtualSize]
[i, ++]
[i]
[setEntry, (, i, ,, value, )]
[i]
[value]
[MathUtils, ., checkNotNull, (, value, )]
[MathUtils]
[value]
[checkIndex, (, index, )]
[index]
[entries, ., put, (, index, ,, value, )]
[entries]
[index]
[value]
[checkIndex, (, index, )]
[index]
[checkIndex, (, index, +, v, ., getDimension, (, ), -, 1, )]
[index, +, v, ., getDimension, (, ), -, 1]
[index, +, v, ., getDimension, (, )]
[index]
[v, ., getDimension, (, )]
[v]
[1]
[v, ., getDimension, (, )]
[v]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[setEntry, (, i, +, index, ,, v, ., getEntry, (, i, ), )]
[i, +, index]
[i]
[index]
[v, ., getEntry, (, i, )]
[v]
[i]
[checkVectorDimensions, (, v, ., getDimension, (, ), )]
[v, ., getDimension, (, )]
[v]
[(, SparseFieldVector, <, T, >, ), copy, (, )]
[copy, (, )]
[v, ., getEntries, (, ), ., iterator, (, )]
[v, ., getEntries, (, )]
[v]
[iter, ., hasNext, (, )]
[iter]
[iter, ., advance, (, )]
[iter]
[iter, ., key, (, )]
[iter]
[entries, ., containsKey, (, key, )]
[entries]
[key]
[res, ., setEntry, (, key, ,, entries, ., get, (, key, ), ., subtract, (, iter, ., value, (, ), ), )]
[res]
[key]
[entries, ., get, (, key, ), ., subtract, (, iter, ., value, (, ), )]
[entries, ., get, (, key, )]
[entries]
[key]
[iter, ., value, (, )]
[iter]
[res, ., setEntry, (, key, ,, field, ., getZero, (, ), ., subtract, (, iter, ., value, (, ), ), )]
[res]
[key]
[field, ., getZero, (, ), ., subtract, (, iter, ., value, (, ), )]
[field, ., getZero, (, )]
[field]
[iter, ., value, (, )]
[iter]
[res]
[v, instanceof, SparseFieldVector, <, ?, >]
[v]
[subtract, (, (, SparseFieldVector, <, T, >, ), v, )]
[(, SparseFieldVector, <, T, >, ), v]
[v]
[v, ., getDimension, (, )]
[v]
[checkVectorDimensions, (, n, )]
[n]
[new, SparseFieldVector, <, T, >, (, this, )]
[this]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[entries, ., containsKey, (, i, )]
[entries]
[i]
[res, ., setEntry, (, i, ,, entries, ., get, (, i, ), ., subtract, (, v, ., getEntry, (, i, ), ), )]
[res]
[i]
[entries, ., get, (, i, ), ., subtract, (, v, ., getEntry, (, i, ), )]
[entries, ., get, (, i, )]
[entries]
[i]
[v, ., getEntry, (, i, )]
[v]
[i]
[res, ., setEntry, (, i, ,, field, ., getZero, (, ), ., subtract, (, v, ., getEntry, (, i, ), ), )]
[res]
[i]
[field, ., getZero, (, ), ., subtract, (, v, ., getEntry, (, i, ), )]
[field, ., getZero, (, )]
[field]
[v, ., getEntry, (, i, )]
[v]
[i]
[res]
[MathArrays, ., buildArray, (, field, ,, virtualSize, )]
[MathArrays]
[field]
[virtualSize]
[entries, ., iterator, (, )]
[entries]
[iter, ., hasNext, (, )]
[iter]
[iter, ., advance, (, )]
[iter]
[res, [, iter, ., key, (, ), ]]
[res]
[iter, ., key, (, )]
[iter]
[iter, ., value, (, )]
[iter]
[res]
[index, <, 0, ||, index, >=, getDimension, (, )]
[index, <, 0]
[index]
[0]
[index, >=, getDimension, (, )]
[index]
[getDimension, (, )]
[new, OutOfRangeException, (, index, ,, 0, ,, getDimension, (, ), -, 1, )]
[index]
[0]
[getDimension, (, ), -, 1]
[getDimension, (, )]
[1]
[getDimension, (, ), !=, n]
[getDimension, (, )]
[n]
[new, DimensionMismatchException, (, getDimension, (, ), ,, n, )]
[getDimension, (, )]
[n]
[v, instanceof, SparseFieldVector, <, ?, >]
[v]
[add, (, (, SparseFieldVector, <, T, >, ), v, )]
[(, SparseFieldVector, <, T, >, ), v]
[v]
[v, ., getDimension, (, )]
[v]
[checkVectorDimensions, (, n, )]
[n]
[new, SparseFieldVector, <, T, >, (, field, ,, getDimension, (, ), )]
[field]
[getDimension, (, )]
[0]
[i, <, n]
[i]
[n]
[i, ++]
[i]
[res, ., setEntry, (, i, ,, v, ., getEntry, (, i, ), ., add, (, getEntry, (, i, ), ), )]
[res]
[i]
[v, ., getEntry, (, i, ), ., add, (, getEntry, (, i, ), )]
[v, ., getEntry, (, i, )]
[v]
[i]
[getEntry, (, i, )]
[i]
[res]
[31]
[1]
[result]
[prime, *, result, +, (, (, field, ==, null, ), ?, 0, :, field, ., hashCode, (, ), )]
[prime, *, result]
[prime]
[result]
[(, (, field, ==, null, ), ?, 0, :, field, ., hashCode, (, ), )]
[(, field, ==, null, ), ?, 0, :, field, ., hashCode, (, )]
[(, field, ==, null, )]
[field, ==, null]
[field]
[null]
[0]
[field, ., hashCode, (, )]
[field]
[result]
[prime, *, result, +, virtualSize]
[prime, *, result]
[prime]
[result]
[virtualSize]
[entries, ., iterator, (, )]
[entries]
[iter, ., hasNext, (, )]
[iter]
[iter, ., advance, (, )]
[iter]
[iter, ., value, (, ), ., hashCode, (, )]
[iter, ., value, (, )]
[iter]
[result]
[prime, *, result, +, temp]
[prime, *, result]
[prime]
[result]
[temp]
[result]
[this, ==, obj]
[this]
[obj]
[true]
[!, (, obj, instanceof, SparseFieldVector, <, ?, >, )]
[(, obj, instanceof, SparseFieldVector, <, ?, >, )]
[obj, instanceof, SparseFieldVector, <, ?, >]
[obj]
[false]
[@, SuppressWarnings, (, "unchecked", )]
["unchecked"]
[(, SparseFieldVector, <, T, >, ), obj]
[obj]
[field, ==, null]
[field]
[null]
[other, ., field, !=, null]
[other, ., field]
[other]
[null]
[false]
[!, field, ., equals, (, other, ., field, )]
[field, ., equals, (, other, ., field, )]
[field]
[other, ., field]
[other]
[false]
[virtualSize, !=, other, ., virtualSize]
[virtualSize]
[other, ., virtualSize]
[other]
[false]
[entries, ., iterator, (, )]
[entries]
[iter, ., hasNext, (, )]
[iter]
[iter, ., advance, (, )]
[iter]
[other, ., getEntry, (, iter, ., key, (, ), )]
[other]
[iter, ., key, (, )]
[iter]
[!, test, ., equals, (, iter, ., value, (, ), )]
[test, ., equals, (, iter, ., value, (, ), )]
[test]
[iter, ., value, (, )]
[iter]
[false]
[iter]
[other, ., getEntries, (, ), ., iterator, (, )]
[other, ., getEntries, (, )]
[other]
[iter, ., hasNext, (, )]
[iter]
[iter, ., advance, (, )]
[iter]
[iter, ., value, (, )]
[iter]
[!, test, ., equals, (, getEntry, (, iter, ., key, (, ), ), )]
[test, ., equals, (, getEntry, (, iter, ., key, (, ), ), )]
[test]
[getEntry, (, iter, ., key, (, ), )]
[iter, ., key, (, )]
[iter]
[false]
[true]
