[HashMultimap, ., create, (, )]
[HashMultimap]
[HashMultimap, ., create, (, )]
[HashMultimap]
[this, ., compiler]
[this]
[compiler]
[this, ., assignments]
[this]
[assignments]
[this, ., varsByFrequency]
[this]
[varsByFrequency]
[this, ., oldPseudoNameMap]
[this]
[pseudoNameMap]
[this, ., deltaPseudoNameMap]
[this]
[Maps, ., newLinkedHashMap, (, )]
[Maps]
[NodeTraversal, ., traverse, (, compiler, ,, root, ,, new, GatherReferenceInfo, (, ), )]
[NodeTraversal]
[compiler]
[root]
[new, GatherReferenceInfo, (, )]
[NodeTraversal, ., traverse, (, compiler, ,, root, ,, new, DoShadowVariables, (, ), )]
[NodeTraversal]
[compiler]
[root]
[new, DoShadowVariables, (, )]
[oldPseudoNameMap, !=, null]
[oldPseudoNameMap]
[null]
[oldPseudoNameMap, ., putAll, (, deltaPseudoNameMap, )]
[oldPseudoNameMap]
[deltaPseudoNameMap]
[!, NodeUtil, ., isReferenceName, (, n, )]
[NodeUtil, ., isReferenceName, (, n, )]
[NodeUtil]
[n]
[t, ., inGlobalScope, (, )]
[t]
[t, ., getScope, (, ), ., getVar, (, n, ., getString, (, ), )]
[t, ., getScope, (, )]
[t]
[n, ., getString, (, )]
[n]
[var, ==, null]
[var]
[null]
[var, ., getScope, (, ), ., isGlobal, (, )]
[var, ., getScope, (, )]
[var]
[var, ., getScope, (, ), !=, t, ., getScope, (, )]
[var, ., getScope, (, )]
[var]
[t, ., getScope, (, )]
[t]
[t, ., getScope, (, )]
[t]
[s, !=, var, ., getScope, (, ), &&, s, ., isLocal, (, )]
[s, !=, var, ., getScope, (, )]
[s]
[var, ., getScope, (, )]
[var]
[s, ., isLocal, (, )]
[s]
[s]
[s, ., getParent, (, )]
[s]
[scopeUpRefMap, ., put, (, s, ., getRootNode, (, ), ,, var, ., name, )]
[scopeUpRefMap]
[s, ., getRootNode, (, )]
[s]
[var, ., name]
[var]
[var, ., getScope, (, ), ==, t, ., getScope, (, )]
[var, ., getScope, (, )]
[var]
[t, ., getScope, (, )]
[t]
[scopeUpRefMap, ., put, (, t, ., getScopeRoot, (, ), ,, var, ., name, )]
[scopeUpRefMap]
[t, ., getScopeRoot, (, )]
[t]
[var, ., name]
[var]
[varToNameUsage, ., put, (, var, ,, n, )]
[varToNameUsage]
[var]
[n]
[t, ., getScope, (, )]
[t]
[!, s, ., isLocal, (, )]
[s, ., isLocal, (, )]
[s]
[s, ., getParent, (, ), ., isGlobal, (, )]
[s, ., getParent, (, )]
[s]
[s, ., getVars, (, )]
[s]
[vars, ., hasNext, (, )]
[vars]
[vars, ., next, (, )]
[vars]
[var, ., isBleedingFunction, (, )]
[var]
[compiler, ., getCodingConvention, (, ), ., isExported, (, var, ., name, ,, s, ., isLocal, (, ), )]
[compiler, ., getCodingConvention, (, )]
[compiler]
[var, ., name]
[var]
[s, ., isLocal, (, )]
[s]
[findBestShadow, (, s, ,, var, )]
[s]
[var]
[bestShadow, ==, null]
[bestShadow]
[null]
[assignments, ., get, (, var, ., getName, (, ), )]
[assignments]
[var, ., getName, (, )]
[var]
[bestShadow, ., count, <, localAssignment, ., count]
[bestShadow, ., count]
[bestShadow]
[localAssignment, ., count]
[localAssignment]
[doShadow, (, localAssignment, ,, bestShadow, ,, var, )]
[localAssignment]
[bestShadow]
[var]
[oldPseudoNameMap, !=, null]
[oldPseudoNameMap]
[null]
[oldPseudoNameMap, ., get, (, s, ., getVar, (, bestShadow, ., oldName, ), ., nameNode, )]
[oldPseudoNameMap]
[s, ., getVar, (, bestShadow, ., oldName, ), ., nameNode]
[s, ., getVar, (, bestShadow, ., oldName, )]
[s]
[bestShadow, ., oldName]
[bestShadow]
[varToNameUsage, ., get, (, var, )]
[varToNameUsage]
[var]
[deltaPseudoNameMap, ., put, (, use, ,, targetPseudoName, )]
[deltaPseudoNameMap]
[use]
[targetPseudoName]
[varsByFrequency]
[assignment, ., oldName, ., startsWith, (, RenameVars, ., LOCAL_VAR_PREFIX, )]
[assignment, ., oldName]
[assignment]
[RenameVars, ., LOCAL_VAR_PREFIX]
[RenameVars]
[!, scopeUpRefMap, ., get, (, curScope, ., getRootNode, (, ), ), ., contains, (, assignment, ., oldName, )]
[scopeUpRefMap, ., get, (, curScope, ., getRootNode, (, ), ), ., contains, (, assignment, ., oldName, )]
[scopeUpRefMap, ., get, (, curScope, ., getRootNode, (, ), )]
[scopeUpRefMap]
[curScope, ., getRootNode, (, )]
[curScope]
[assignment, ., oldName]
[assignment]
[curScope, ., isDeclared, (, assignment, ., oldName, ,, true, )]
[curScope]
[assignment, ., oldName]
[assignment]
[true]
[assignment]
[null]
[var, ., getScope, (, )]
[var]
[varToNameUsage, ., get, (, var, )]
[varToNameUsage]
[var]
[varsByFrequency, ., remove, (, original, )]
[varsByFrequency]
[original]
[varsByFrequency, ., remove, (, toShadow, )]
[varsByFrequency]
[toShadow]
[original, ., count]
[original]
[references, ., size, (, )]
[references]
[toShadow, ., count]
[toShadow]
[references, ., size, (, )]
[references]
[varsByFrequency, ., add, (, original, )]
[varsByFrequency]
[original]
[varsByFrequency, ., add, (, toShadow, )]
[varsByFrequency]
[toShadow]
[s, ., getVar, (, toShadow, ., oldName, )]
[s]
[toShadow, ., oldName]
[toShadow]
[shadowed, !=, null]
[shadowed]
[null]
[s]
[curScope, !=, shadowed, ., scope]
[curScope]
[shadowed, ., scope]
[shadowed]
[curScope]
[curScope, ., getParent, (, )]
[curScope]
[scopeUpRefMap, ., put, (, curScope, ., getRootNode, (, ), ,, toShadow, ., oldName, )]
[scopeUpRefMap]
[curScope, ., getRootNode, (, )]
[curScope]
[toShadow, ., oldName]
[toShadow]
[references]
[n, ., setString, (, toShadow, ., oldName, )]
[n]
[toShadow, ., oldName]
[toShadow]
[n]
[cur, !=, s, ., getRootNode, (, )]
[cur]
[s, ., getRootNode, (, )]
[s]
[cur]
[cur, ., getParent, (, )]
[cur]
[cur, ., isFunction, (, )]
[cur]
[scopeUpRefMap, ., put, (, cur, ,, toShadow, ., oldName, )]
[scopeUpRefMap]
[cur]
[toShadow, ., oldName]
[toShadow]
